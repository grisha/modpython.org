From dbp.listas at gmail.com  Sun Jul  2 13:58:58 2006
From: dbp.listas at gmail.com (Diogo Pitz)
Date: Sun Jul  2 13:59:08 2006
Subject: [mod_python] what's the best way to configure mod_python?
Message-ID: <c99551fd0607021058n5bcd4345k4741597b993a9886@mail.gmail.com>

Hello everybody!

I've just started studying mod_python, and I have some doubts about how to
configure it correctly.
I've put this lines in my .conf apache file:

<Directory "C:\arquivos_diogo\python">
        AddHandler mod_python .py
        PythonHandler Script1
        PythonDebug On
</Directory>

<Directory "C:\arquivos_diogo\python">
    AddHandler mod_python .py
    PythonHandler mod_python.publisher
    PythonDebug On
</Directory>

with this I have my codes working, but not in the way I want.
I have a .py file called helloworld.py, and this is its code:

from mod_python import apache

def handler(req):
    req.content_type = 'text/plain'
    req.write("Hello World!")
    return apache.OK

to see "Hello World" in my browser, I have to type
http://localhost/python/helloworld.py/handler .
the problem is this "/handler"! I would like to call my file in the browser
only by its name, in this case helloworld.py.
I know how to configure apache to do it, but doing the things on this way,
I'd have to put in the apache conf the name of each file I want to see in
the browser =\
is there a easier way to do it?


and one more question, can I write a html file in python, like this?

print "<html><body><p>something</p></body></html>"

or mod_python doesn't allow me to make this? if it doesn't, what solution
can be used to do it?

thanks in advance!
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20060702/bdbcdd13/attachment.html
From list at joreybump.com  Sun Jul  2 15:05:15 2006
From: list at joreybump.com (Jorey Bump)
Date: Sun Jul  2 15:05:21 2006
Subject: [mod_python] what's the best way to configure mod_python?
In-Reply-To: <c99551fd0607021058n5bcd4345k4741597b993a9886@mail.gmail.com>
References: <c99551fd0607021058n5bcd4345k4741597b993a9886@mail.gmail.com>
Message-ID: <44A818EB.1010707@joreybump.com>

Diogo Pitz wrote:

> I've put this lines in my .conf apache file:
> 
> <Directory "C:\arquivos_diogo\python">
>         AddHandler mod_python .py
>         PythonHandler Script1
>         PythonDebug On
> </Directory>

Delete that.

> <Directory "C:\arquivos_diogo\python">
>     AddHandler mod_python .py
>     PythonHandler mod_python.publisher
>     PythonDebug On
> </Directory>

OK.

> with this I have my codes working, but not in the way I want.
> I have a .py file called helloworld.py, and this is its code:
> 
> from mod_python import apache
> 
> def handler(req):
>     req.content_type = 'text/plain'
>     req.write("Hello World!")
>     return apache.OK

Delete all of that and replace it with this:

def index():
     return "Hello, World!"

> to see "Hello World" in my browser, I have to type 
> http://localhost/python/helloworld.py/handler .

With the new settings, you can access it in the following ways:

  http://host/python/helloworld.py/
  http://host/python/helloworld.py/index

mod_python.publisher must point to a function within your module, unless 
there is an index() function.

> and one more question, can I write a html file in python, like this?
> 
> print "<html><body><p>something</p></body></html>"

If you use Publisher, you can just construct an HTML page as a string 
and return it from your function. Publisher will do the rest.

> or mod_python doesn't allow me to make this? if it doesn't, what 
> solution can be used to do it?

Read the manual and try to understand Publisher a bit. If it doesn't fit 
your needs, explore writing your own handler.

From webograph at eml.cc  Sun Jul  2 16:50:43 2006
From: webograph at eml.cc (webograph)
Date: Sun Jul  2 16:50:51 2006
Subject: [mod_python] apache.DECLINED not working as expected
Message-ID: <44A831A3.5070908@eml.cc>

hi,

i'm currently implementing a server that provides downsampled and
cropped versions of available images.
the idea is to have a regular directory structure and a python handler
that does (in pseudocode):

if exists(requested_file):
    return apache.DECLINED

image=open(original(requested_file))
image=image.scale_down()
image.save(requested_file)

return apache.DECLINED

the problem is that i always get a 404 when i request a file that has
just been created; it's not a timing problem.

i've solved it using a req.internal_redirect, but i don't think that
that is the ideal solution

regards
webograph
From grahamd at dscpl.com.au  Sun Jul  2 18:16:32 2006
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Sun Jul  2 18:16:37 2006
Subject: [mod_python] apache.DECLINED not working as expected
Message-ID: <1151878592.16434@dscpl.user.openhosting.com>

webograph wrote ..
> hi,
> 
> i'm currently implementing a server that provides downsampled and
> cropped versions of available images.
> the idea is to have a regular directory structure and a python handler
> that does (in pseudocode):
> 
> if exists(requested_file):
>     return apache.DECLINED
> 
> image=open(original(requested_file))
> image=image.scale_down()
> image.save(requested_file)
> 
> return apache.DECLINED
> 
> the problem is that i always get a 404 when i request a file that has
> just been created; it's not a timing problem.
> 
> i've solved it using a req.internal_redirect, but i don't think that
> that is the ideal solution

The short answer is to use req.sendfile() to have your handler respond
with the actual content of the file. You will need to ensure you set
any appropriate content type before making the call though. Thus
your code might read:

  if not exists(requested_file):
    image=open(original(requested_file))
    image=image.scale_down()
    image.save(requested_file)

  req.content_type = "..."
  req.sendfile(requested_file)

  return apache.OK

Returning apache.DECLINED in order to have Apache default handler
return the file may not be the most reliable way of doing things
especially when the file didn't exist before hand and if MultiViews
is enabled and comes into play.

Graham
From nlv11281 at natlab.research.philips.com  Mon Jul  3 06:53:47 2006
From: nlv11281 at natlab.research.philips.com (Mike Looijmans)
Date: Mon Jul  3 07:07:55 2006
Subject: [mod_python] MySQL Session implementation?
In-Reply-To: <c298f2d70606201237o5fd83bd5l96616b03411c4cb0@mail.gmail.com>
References: <15E1E37C-9981-4EBA-A6A0-B8D4CC5DA10F@emedialibrary.org>	<44971BCF.7060104@jgassociates.ca>	<242EB7C3-5B4D-4EC2-91F6-57FBD816D661@emedialibrary.org>
	<c298f2d70606201237o5fd83bd5l96616b03411c4cb0@mail.gmail.com>
Message-ID: <44A8F73B.3010002@natlab.research.philips.com>

> One important thing not to overlook if you are going to implement a
> MySQLSession class is database connection pooling.

In the particalur case of MySQL, the need may not be that high.

I did some benchmarking around 2002 with the MySQL versions of that time 
(somewhere around 4.0), and could not prove the pooled version to be any 
faster than the non-pooled. Most of the time was spent in other parts of 
the request handling, setting up the database connection to MySQL 
appeared to be neglegible.

Note that this behaviour is specific to MySQL using a UNIX socket on the 
local host. Oracle for example often took a few seconds to set up a 
connection. On a TCP socket, the delay is a bit more. You might consider 
using MySQL replication to allow the DB to run on all the web servers 
locally while still sharing all data between them.

Having said all that, a thread safe DB pool takes only about ten lines 
of Python code to create, so it's a piece of cake.

When you ARE pooling connections, be aware of the following:

- The database will not like thousands of open (but idle) connections. 
Close them if you have too many spare ones.

- Connections may stay open for days. Be sure to do some kind of "ping" 
on a connection when you retrieve it from the pool, or be prepared to 
handle connection-lost errors later on.

From panard at backzone.net  Mon Jul  3 09:28:29 2006
From: panard at backzone.net (Panard)
Date: Mon Jul  3 09:28:31 2006
Subject: [mod_python] mod_python + dbus ?
Message-ID: <200607031528.29502.panard@backzone.net>

Hi,

I'm tring to use a running dbus service with mod_python. The service runs 
fine, a python cgi script uses it fine, but a mod_python script doesn't 
respond...

Here are the scripts used :

The service itself :
======== dbus_service.py ========
import dbus
import dbus.service
import gobject

iface = 'org.inzenet.test_mp.IFace'

class test( dbus.service.Object ) :

    def __init__( self, bus_name ) :
        dbus.service.Object.__init__( self, bus_name, '/org/inzenet/test_mp' )

    @dbus.service.method(iface)
    def test( self ) :
        return "OK!"


bus = dbus.service.BusName('org.inzenet.test_mp', bus=dbus.SystemBus())
test( bus )

mainloop = gobject.MainLoop()
mainloop.run()
===========

DBus perms :
======
<busconfig>
        <policy user="panard">
                <allow own="org.inzenet.test_mp"/>
        </policy>
        <policy context="default">
                <allow send_destination="org.inzenet.test_mp"/>
                <allow receive_sender="org.inzenet.test_mp"/>
        </policy>
</busconfig>
========
Launch the service with
$ python dbus_service.py


The mod_python script :
===== test_dbus.pu =====
def test( req ) :
    import dbus
    bus = dbus.SystemBus()
    service = bus.get_object('org.inzenet.test_mp','/org/inzenet/test_mp')
    return service.test( dbus_interface = 'org.inzenet.test_mp.IFace' )


Calling http://localhost/~panard/mp/test_dbus.py/test doesn't respond...


Any clues?


Thanks


Panard
From grahamd at dscpl.com.au  Mon Jul  3 18:33:26 2006
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Mon Jul  3 18:33:35 2006
Subject: [mod_python] mod_python + dbus ?
Message-ID: <1151966006.6856@dscpl.user.openhosting.com>

Panard wrote ..
> Hi,
> 
> I'm tring to use a running dbus service with mod_python. The service runs
> fine, a python cgi script uses it fine, but a mod_python script doesn't
> respond...
> 
> Here are the scripts used :
> 
> The service itself :
> ======== dbus_service.py ========
> import dbus
> import dbus.service
> import gobject
> 
> iface = 'org.inzenet.test_mp.IFace'
> 
> class test( dbus.service.Object ) :
> 
>     def __init__( self, bus_name ) :
>         dbus.service.Object.__init__( self, bus_name, '/org/inzenet/test_mp'
> )
> 
>     @dbus.service.method(iface)
>     def test( self ) :
>         return "OK!"
> 
> 
> bus = dbus.service.BusName('org.inzenet.test_mp', bus=dbus.SystemBus())
> test( bus )
> 
> mainloop = gobject.MainLoop()
> mainloop.run()
> ===========
> 
> DBus perms :
> ======
> <busconfig>
>         <policy user="panard">
>                 <allow own="org.inzenet.test_mp"/>
>         </policy>
>         <policy context="default">
>                 <allow send_destination="org.inzenet.test_mp"/>
>                 <allow receive_sender="org.inzenet.test_mp"/>
>         </policy>
> </busconfig>
> ========
> Launch the service with
> $ python dbus_service.py
> 
> 
> The mod_python script :
> ===== test_dbus.pu =====
> def test( req ) :
>     import dbus
>     bus = dbus.SystemBus()
>     service = bus.get_object('org.inzenet.test_mp','/org/inzenet/test_mp')
>     return service.test( dbus_interface = 'org.inzenet.test_mp.IFace' )
> 
> 
> Calling http://localhost/~panard/mp/test_dbus.py/test doesn't respond...
> 
> 
> Any clues?

What version of Apache are you using and what MPM is compiled into it,
ie., prefork or worker? What version of mod_python are you using?

In general, embedding a messaging type framework where persistent socket
connections are maintained between processes where the Python module
is simply a wrapper around a C library, into Apache/mod_python is
not simple and if the dbus Python wrappers have not been designed and
implemented specifically to cope with the way that Python is used by
mod_python, it is probably unlikely to work. The two main issues which
make it a complicated business are:

1. If "worker" MPM is compiled into Apache, or if on Win32 platform,
then concurrent requests can be handled in distinct threads. If dbus
Python wrappers are not properly thread aware it will probably not work.

2. Multiple Python interpreters may be created by mod_python for
different parts of the URL namespace. If the dbus Python wrappers have
only been implemented to use the simple GIL threading model it will
probably not work. There would be a small chance that it will work if
all requests are forced to run in the "main_interpreter" and mod_python
3.2.9 (released real soon now) is used.

There is a lot more to it than just this though and it is a really hard
thing to explain so you would understand it unless you are quite
intimate with use of multiple Python interpreters and Python thread
programming at the C API level.

That said, are you wanting to use dbus because you specifically want to
talk to an existing application which is already implemented with support
for dbus, or were you after a general messaging framework that could
be used from Apache/mod_python and you were going to be implementing
everything from scratch?

If you are starting from scratch, I can perhaps suggest another system
which is known to work from Apache/mod_python and does cope with
all the problems of multiple interpreters and multithreading that it
presents and which makes things complicated.

Graham

From panard at backzone.net  Mon Jul  3 19:20:26 2006
From: panard at backzone.net (Panard)
Date: Mon Jul  3 19:20:31 2006
Subject: [mod_python] mod_python + dbus ?
In-Reply-To: <1151966006.6856@dscpl.user.openhosting.com>
References: <1151966006.6856@dscpl.user.openhosting.com>
Message-ID: <200607040120.27071.panard@backzone.net>

Le mardi 04 juillet 2006 00:33, Graham Dumpleton a ?crit?:
> Panard wrote ..
>
> > Hi,
> >
> > I'm tring to use a running dbus service with mod_python. The service runs
> > fine, a python cgi script uses it fine, but a mod_python script doesn't
> > respond...
> > .....
>
> What version of Apache are you using and what MPM is compiled into it,
> ie., prefork or worker? What version of mod_python are you using?

I'm using apache 2.0.58, with worker mpm, and mod_python 3.1.4.

Thanks for all your comments. I'll try to look at this probably threading 
problem... (but I'm practically sure that dbus python wrappers are thread 
aware, there is a dbus.glib.threads_init() method...)


> That said, are you wanting to use dbus because you specifically want to
> talk to an existing application which is already implemented with support
> for dbus, or were you after a general messaging framework that could
> be used from Apache/mod_python and you were going to be implementing
> everything from scratch?
Well, I'm implementing everything from scratch. But I would like to have a 
message framework quite "standard".

The main goal is to be able to manage a running python application on the 
server hosting a mod_python web-page (ask for stopping the application, get 
the list active tasks, ask for doing some new tasks, etc...).


> If you are starting from scratch, I can perhaps suggest another system
> which is known to work from Apache/mod_python and does cope with
> all the problems of multiple interpreters and multithreading that it
> presents and which makes things complicated.
Yes! I'm waiting for your suggestions :)


Thanks a lot.

Panard
-- 
HomePage: http://dev.inzenet.org/~panard/
Yzis : http://www.yzis.org
Qomics : http://dev.inzenet.org/~panard/qomics
Smileys : http://smileys.inzenet.org

From grahamd at dscpl.com.au  Mon Jul  3 20:20:49 2006
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Mon Jul  3 20:20:54 2006
Subject: [mod_python] mod_python + dbus ?
Message-ID: <1151972449.31372@dscpl.user.openhosting.com>

Panard wrote ..
> Le mardi 04 juillet 2006 00:33, Graham Dumpleton a ??crit??:
> > Panard wrote ..
> >
> > > Hi,
> > >
> > > I'm tring to use a running dbus service with mod_python. The service
> runs
> > > fine, a python cgi script uses it fine, but a mod_python script doesn't
> > > respond...
> > > .....
> >
> > What version of Apache are you using and what MPM is compiled into it,
> > ie., prefork or worker? What version of mod_python are you using?
> 
> I'm using apache 2.0.58, with worker mpm, and mod_python 3.1.4.

Using "worker" with mod_python 3.1.4 is a bad idea as there are some
multithreading bugs in that version of mod_python. You should at least
upgrade to mod_python 3.2.8 which fixes them. Better still, wait a few days
and hopefully 3.2.9 will be out, which has other changes related to the
threading and simplified GIL API which might allow dbus to work (but also
may not).

> Thanks for all your comments. I'll try to look at this probably threading
> problem... (but I'm practically sure that dbus python wrappers are thread
> aware, there is a dbus.glib.threads_init() method...)

As I said, it is a bit more complicated than that ... :-)

> > That said, are you wanting to use dbus because you specifically want
> to
> > talk to an existing application which is already implemented with support
> > for dbus, or were you after a general messaging framework that could
> > be used from Apache/mod_python and you were going to be implementing
> > everything from scratch?
> Well, I'm implementing everything from scratch. But I would like to have
> a 
> message framework quite "standard".

Hmmm, I wouldn't have thought that dbus is any more standard than any
other solution. It also still isn't at version 1.0 and they say in documentation
that until 1.0 that the API may vary. That it is targeted at desktop applications
also may not make it as useful as other solutions for general programming
of applications having requirements for distributed processing or remote
monitoring and control.

> The main goal is to be able to manage a running python application on the
> server hosting a mod_python web-page (ask for stopping the application,
> get 
> the list active tasks, ask for doing some new tasks, etc...).

Have you ever considered simply embedding an XML-RPC server in your
application and making XML-RPC requests from inside of mod_python.
The description of your application doesn't suggest there is going to be
much requests going to the application, so the per connection cost of
using XML-RPC isn't going to make any difference. In other words, doesn't
seem like a connected messaging system solution is going to give you
any additional benefit for the possible extra complexity.

> > If you are starting from scratch, I can perhaps suggest another system
> > which is known to work from Apache/mod_python and does cope with
> > all the problems of multiple interpreters and multithreading that it
> > presents and which makes things complicated.
>
> Yes! I'm waiting for your suggestions :)

Yes it is self promotion, but as I said, I know it is a solution which will
work. The package I was going to suggest was OSE.

  http://ose.sourceforge.net

Python wrappers documentation at:

  http://ose.sourceforge.net/browse.php?group=python-manual&entry=manual.htm

Python cookbook recipes.

  http://aspn.activestate.com/ASPN/Cookbook/Python/Recipe/81615
  http://aspn.activestate.com/ASPN/Cookbook/Python/Recipe/81614
  http://aspn.activestate.com/ASPN/Cookbook/Python/Recipe/81612

Example of integration with mod_python:

  http://svn.dscpl.com.au/vampire/trunk/examples/netsvc/

>From what you describe though, both OSE and dbus are probably overkill,
although OSE would make it relatively simple to do. Use of a simple a
XML-RPC server in your application would possibly be a much simpler
solution.

If you have considered XML-RPC, would be interested to hear why you
think it isn't an adequate solution.

Graham

> Thanks a lot.
> 
> Panard
> -- 
> HomePage: http://dev.inzenet.org/~panard/
> Yzis : http://www.yzis.org
> Qomics : http://dev.inzenet.org/~panard/qomics
> Smileys : http://smileys.inzenet.org
> 
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
From smilelover at centrum.cz  Tue Jul  4 14:05:22 2006
From: smilelover at centrum.cz (smilelover@centrum.cz)
Date: Tue Jul  4 14:04:32 2006
Subject: [mod_python] FieldStorage and POST?
Message-ID: <op.tb6e682phonj0y@localhost>

Hi,
I can't make FieldStorage instance give me my POST arguments.
When I send my form data through GET, FieldStorage contains them. But when  
I use POST and then do:

req.write(util.FieldStorage(req).list[0].value)

Python tells me "list index out of range"
I have googled quite a lot and found bits of information about problems  
with POST and FieldStorage, but nothing that could help me figure out  
WHERE the POST data are.

Thanks in advance for every hint.

Dan
From grahamd at dscpl.com.au  Tue Jul  4 18:10:20 2006
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Tue Jul  4 18:10:26 2006
Subject: [mod_python] FieldStorage and POST?
Message-ID: <1152051020.11532@dscpl.user.openhosting.com>

smilelover@centrum.cz wrote ..
> Hi,
> I can't make FieldStorage instance give me my POST arguments.
> When I send my form data through GET, FieldStorage contains them. But when
> I use POST and then do:
> 
> req.write(util.FieldStorage(req).list[0].value)
> 
> Python tells me "list index out of range"
> I have googled quite a lot and found bits of information about problems
> with POST and FieldStorage, but nothing that could help me figure out 
> WHERE the POST data are.
> 
> Thanks in advance for every hint.

Are you doing this from inside a function published using
mod_python.publisher, as opposed to a basic handler? If
you are doing this from inside a function published using
mod_python.publisher then it will already have consumed
the POST content of the request.

Thus, show more complete code for the function this is being
done in and show the Apache configuration you are using to
trigger that function. Also show what URL you are using and
how that relates to the names of your handler files or whether
the URL matches to the directory itself.

If you are using mod_python.publisher, the form parameters
are supplied to argument to function of same name. The raw
FieldStorage object can also be accessed as req.form, you do not
need to create it yourself.

Graham
From grahamd at dscpl.com.au  Tue Jul  4 18:48:24 2006
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Tue Jul  4 18:48:31 2006
Subject: [mod_python] FieldStorage and POST?
Message-ID: <1152053304.30049@dscpl.user.openhosting.com>

Please keep followups on the mailing list.

smilelover@centrum.cz wrote ..
> Dne Wed, 05 Jul 2006 00:10:20 +0200 napsal(a) Graham Dumpleton  
> <grahamd@dscpl.com.au> n??sleduj??c?? zpr??vu:
> 
> > smilelover@centrum.cz wrote ..
> >> Hi,
> >> I can't make FieldStorage instance give me my POST arguments.
> >> When I send my form data through GET, FieldStorage contains them. But
> >> when
> >> I use POST and then do:
> >>
> >> req.write(util.FieldStorage(req).list[0].value)
> >>
> >> Python tells me "list index out of range"
> >> I have googled quite a lot and found bits of information about problems
> >> with POST and FieldStorage, but nothing that could help me figure out
> >> WHERE the POST data are.
> >>
> >> Thanks in advance for every hint.
> >
> > Are you doing this from inside a function published using
> > mod_python.publisher, as opposed to a basic handler? If
> > you are doing this from inside a function published using
> > mod_python.publisher then it will already have consumed
> > the POST content of the request.
> >
> > Thus, show more complete code for the function this is being
> > done in and show the Apache configuration you are using to
> > trigger that function. Also show what URL you are using and
> > how that relates to the names of your handler files or whether
> > the URL matches to the directory itself.
> >
> > If you are using mod_python.publisher, the form parameters
> > are supplied to argument to function of same name. The raw
> > FieldStorage object can also be accessed as req.form, you do not
> > need to create it yourself.
> >
> > Graham
> 
> Yes, I'm working with publisher. I have a module "admin.py" that contains
> several funcs - it's a small CMS. On one page I choose articles I want
> to  
> delete and submit the form to the following function:
> 
> def delete(req):
> 	sess = Session.Session(req)
> 	if not sess.has_key('login_name'):
> 		util.redirect(req, 'index?unauth=1')
> 	
> 	req.content_type = 'text/html'
> 	req.write(util.FieldStorage(req).list[0].value) # this is a line just
> to  
> find out what's happening
> 	return
> 
> My .htaccess is pretty simple:
> SetHandler mod_python
> PythonHandler mod_python.publisher
> PythonDebug On
> 
> Yes I know arguments are passed thru function argumens, but the count of
> my args is dynamic...should I just use **params?

If the number of form arguments can vary and not sensible to have default
values of None if a function argument is used, the using '**params' is
generally an acceptable way of doing it.

> Or is it better to do it all through req.form? (I don't see it in the 
> Request object docs thou)

It is put there by mod_python.publisher handler.

Read:

  http://www.modpython.org/live/current/doc-html/node94.html

  Since a FieldStorage can only be instantiated once per request, one must
  not attempt to instantiate FieldStorage when using the Publisher handler
  and should use Request.form instead.

Graham
From girty at cogeco.ca  Wed Jul  5 09:54:40 2006
From: girty at cogeco.ca (greg)
Date: Wed Jul  5 09:54:59 2006
Subject: [mod_python] 'foo.psp is not a file' 404
Message-ID: <44ABC4A0.5070002@cogeco.ca>

When a nonsense filename is entered instead of a valid template,
PSP spits out this exception:

ValueError: /local/path/foo.psp is not a file

I would like to make this return a 404 error instead. Is there an easier
way of doing it besides making my own handler, calling PSP manually, and
catching the exception?

I am using 3.1.3. (A jurassic version, I know. I got it from debian
stable packages, to try to make life easier on my webhost.)

Cheers everyone.

Greg
From alain.dip at onesite.org  Wed Jul  5 10:19:18 2006
From: alain.dip at onesite.org (Alain Tesio)
Date: Wed Jul  5 10:19:25 2006
Subject: [mod_python] odd behaviour of the md5-module in modpy
Message-ID: <44ABCA66.8080105@onesite.org>

Hi,

I had exactly the same problem with values returned by md5 changing
only from modpython.

On my debian machine it was caused by the installation of the package
libmhash2:

/usr/lib/libmhash.so.2.0.0
/usr/lib/libmhash.so.2

With python 2.3, modpython 2.7.10, apache 1.3.33 on intel 32

I have no idea how it can interfere with md5.so within modpython.

(libmhash2 is required by gosa, a ldap web frontend in php)
From nikl at nikl.net  Wed Jul  5 10:56:47 2006
From: nikl at nikl.net (Nikolaus Schlemm)
Date: Wed Jul  5 10:55:55 2006
Subject: [mod_python] odd behaviour of the md5-module in modpy
In-Reply-To: <44ABCA66.8080105@onesite.org>
References: <44ABCA66.8080105@onesite.org>
Message-ID: <200607051656.47907.nikl@nikl.net>

Am Mittwoch, 5. Juli 2006 16:19 schrieb Alain Tesio:
> Hi,
>
> I had exactly the same problem with values returned by md5 changing
> only from modpython.
>
> On my debian machine it was caused by the installation of the package
> libmhash2:
>
> /usr/lib/libmhash.so.2.0.0
> /usr/lib/libmhash.so.2
>
> With python 2.3, modpython 2.7.10, apache 1.3.33 on intel 32
>
> I have no idea how it can interfere with md5.so within modpython.
>
> (libmhash2 is required by gosa, a ldap web frontend in php)

thanks a lot - after removing libmhash2, the test-snippet i posted earlier now 
works totally fine! but this still looks very odd to me ...
-- 
cheers,

	Nikl
From deron.meranda at gmail.com  Wed Jul  5 14:00:27 2006
From: deron.meranda at gmail.com (Deron Meranda)
Date: Wed Jul  5 14:00:32 2006
Subject: [mod_python] odd behaviour of the md5-module in modpy
In-Reply-To: <200607051656.47907.nikl@nikl.net>
References: <44ABCA66.8080105@onesite.org> <200607051656.47907.nikl@nikl.net>
Message-ID: <5c06fa770607051100j670b71b5t4330885cc3c9b113@mail.gmail.com>

> Am Mittwoch, 5. Juli 2006 16:19 schrieb Alain Tesio:
> > I had exactly the same problem with values returned by md5 changing
> > only from modpython.
> >
> > On my debian machine it was caused by the installation of the package
> > libmhash2:

It sounds like the culprit may have been found, <http://mhash.sourceforge.net/>

There is also apparently a Python binding to libmhash,
<http://labix.org/python-mhash>.
Do you know if that might have been installed as well an your affected machines?
Perhaps it actually replaces the Python built-in hashes some way, although
I still don't know how the mod_python environment would be different.

It is probably worth reporting this potential "incompatibility" upstream to the
libmhash/python-mhash folks too to see what they may know.
It's not a good thing when cryptographic functions silently fail.
-- 
Deron Meranda
From grahamd at dscpl.com.au  Wed Jul  5 18:23:15 2006
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Wed Jul  5 18:23:23 2006
Subject: [mod_python] 'foo.psp is not a file' 404
Message-ID: <1152138195.6858@dscpl.user.openhosting.com>

greg wrote ..
> When a nonsense filename is entered instead of a valid template,
> PSP spits out this exception:
> 
> ValueError: /local/path/foo.psp is not a file
> 
> I would like to make this return a 404 error instead. Is there an easier
> way of doing it besides making my own handler, calling PSP manually, and
> catching the exception?

Using a handler to wrap it is one way, but I wouldn't call psp and catch
the exception. Instead I would check for the files existence and only
call psp if it existed. Thus:

  from mod_python import apache

  # Don't use "import" due to bug in mod_python 3.1.X.
  psp = apache.import_module("mod_python.psp")

  import os

  def handler(req):
    if not os.path.exists(req.filename):
      return apache.HTTP_NOT_FOUND
    return psp.handler(req)

The only way I can think of doing it without requiring a handler to be
written is to use a RewriteRule which detects the file doesn't exist and
forces a NOT_FOUND error response. At least I am presuming that this
could be done, I'm not a RewriteRule expert.

In the end, mod_python.psp should be fixed to return NOT_FOUND
when the file doesn't in fact exist. I'll create JIRA issue for it once I
confirm that later versions behave like this as well.

Graham
From grahamd at dscpl.com.au  Wed Jul  5 18:36:53 2006
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Wed Jul  5 18:36:57 2006
Subject: [mod_python] odd behaviour of the md5-module in modpy
Message-ID: <1152139013.14550@dscpl.user.openhosting.com>

Deron Meranda wrote ..
> > Am Mittwoch, 5. Juli 2006 16:19 schrieb Alain Tesio:
> > > I had exactly the same problem with values returned by md5 changing
> > > only from modpython.
> > >
> > > On my debian machine it was caused by the installation of the package
> > > libmhash2:
> 
> It sounds like the culprit may have been found, <http://mhash.sourceforge.net/>
> 
> There is also apparently a Python binding to libmhash,
> <http://labix.org/python-mhash>.
> Do you know if that might have been installed as well an your affected
> machines?
> Perhaps it actually replaces the Python built-in hashes some way, although
> I still don't know how the mod_python environment would be different.
> 
> It is probably worth reporting this potential "incompatibility" upstream
> to the
> libmhash/python-mhash folks too to see what they may know.
> It's not a good thing when cryptographic functions silently fail.

There is probably a shared library involved somewhere and they have
chosen names for functions which are the same as some functions
in some other library required by Python for md5 stuff. The libmhash
is probably getting loaded first and because they already exist, the
other libraries functions aren't being used but the wrong ones from
libmhash.

This would be similar to the libexpat version problem where it picks
up the wrong version of expat library loaded by Apache instead of
one compiled into pyexpat. See:

  http://www.dscpl.com.au/articles/modpython-006.html

for that plays out and how it might be similar.

Hope we can sort this out conclusively. For various reasons the new
module importer is currently using md5 hexdigest to construct a
fake but unique (hopefully) module name for loaded modules. This
is used in __name__ attribute of modules. This may be able to be
changed as this carried over from when my module importer was
still storing stuff in sys.modules where using a file pathname with
slashes for module name would cause big problems. In short, the
libmhash problem would cause the new module importer to not work
at all and screw up mod_python big time.

Graham

From deron.meranda at gmail.com  Wed Jul  5 20:06:41 2006
From: deron.meranda at gmail.com (Deron Meranda)
Date: Wed Jul  5 20:06:46 2006
Subject: [mod_python] odd behaviour of the md5-module in modpy
In-Reply-To: <1152139013.14550@dscpl.user.openhosting.com>
References: <1152139013.14550@dscpl.user.openhosting.com>
Message-ID: <5c06fa770607051706m19f4d67cp88ca73ec0ad2f668@mail.gmail.com>

On 7/5/06, Graham Dumpleton <grahamd@dscpl.com.au> wrote:
> There is probably a shared library involved somewhere and they have
> chosen names for functions which are the same as some functions
> in some other library required by Python for md5 stuff. The libmhash
> is probably getting loaded first and because they already exist, the
> other libraries functions aren't being used but the wrong ones from
> libmhash.

Yes, except (unlike expat) I still can't figure out how they could
conflict.  The python md5module is completely self-contained--it
doesn't call out to any external libraries except for the core python
lib (and memcpy and memset).  Unless something's pouncing on
it's memory, or overriding something in the python dictionaries, I
can't see what could be in conflict.

Do we know if the python adapter "mhashmodule" was also loaded,
or just libmhash?

What might be interesting is to find the python md5module.so
object file and see what symbols it is using.  You might be able
to do an "md5 -g" on it; or if not use "readelf -s" (ignoring LOCAL
symbols).  The only necessary global symbol is "initmd5"
according to the Python C extension API.

Also do a symbol lookup on the libmhash.so and mhashmodule.so
and see if there are any external/global symbols in common.

What's scary is that this alleged conflict is mostly silent.  There are
no crashes or obvious problems.  It's just the the computed result
is not what is expected.  So who knows what other kinds of
conflicts could exist that haven't been found yet!
-- 
Deron Meranda
From rsynnott at gmail.com  Fri Jul  7 06:39:38 2006
From: rsynnott at gmail.com (Robert Synnott)
Date: Fri Jul  7 06:40:19 2006
Subject: [mod_python] Odd behaviour with handlers
Message-ID: <24f203480607070339y194d2690u302d8d5e9c29f63d@mail.gmail.com>

I've found that if, for the same apache setup, there are two separate
sites defined with a handler of the same name (but not the SAME
handler) the server will jump unpredictably between them. So if
http://example.com/a uses a handler for webapp X, where the handler is
called mainhandler, and http://example.com/b uses a handler for webapp
Y, where handler is also called mainhandler, going to
http://example.com/a may get you either webapp X or Y, seemingly at
random. Is this expected behaviour? If so, might be worth warning
about it...
Rob
From grahamd at dscpl.com.au  Fri Jul  7 06:55:05 2006
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Fri Jul  7 06:54:58 2006
Subject: [mod_python] Odd behaviour with handlers
In-Reply-To: <24f203480607070339y194d2690u302d8d5e9c29f63d@mail.gmail.com>
References: <24f203480607070339y194d2690u302d8d5e9c29f63d@mail.gmail.com>
Message-ID: <2FBD8FFE-D972-4187-A5F1-CE464C2C2D3D@dscpl.com.au>


On 07/07/2006, at 8:39 PM, Robert Synnott wrote:

> I've found that if, for the same apache setup, there are two separate
> sites defined with a handler of the same name (but not the SAME
> handler) the server will jump unpredictably between them. So if
> http://example.com/a uses a handler for webapp X, where the handler is
> called mainhandler, and http://example.com/b uses a handler for webapp
> Y, where handler is also called mainhandler, going to
> http://example.com/a may get you either webapp X or Y, seemingly at
> random. Is this expected behaviour? If so, might be worth warning
> about it...

Known issue. Is addressed by new experimental module loading system in
mod_python 3.3. If you are using mod_python.publisher, then an interim
solution exists in mod_python 3.2.8. For further details on a whole  
bunch of
module loader problems see:

   http://www.dscpl.com.au/articles/modpython-003.html

One way of solving the problem is to force each application to use a  
distinct
interpreter by specifying the PythonInterpreter directive differently.

Graham

From sanjeevdivekar at gmail.com  Fri Jul  7 14:32:16 2006
From: sanjeevdivekar at gmail.com (Sanjeev Divekar)
Date: Fri Jul  7 14:32:27 2006
Subject: [mod_python] hi
Message-ID: <a98e5dcd0607071132v27681bb2p67e32a763d929d5e@mail.gmail.com>

hi,

i am newbie to python i want to switch from asp.net to mod_python for
small webapps any good resources to learn mod_python?

can i use any other lightweight webserver other than apache to run
mod_python app?

thanks in advance

-- 
Sanjeev Divekar
Sanmisha Technologies
Mobile : +91 9820427416
Email  : sanjeev@sanmisha.com
From jpg at jgassociates.ca  Fri Jul  7 14:56:56 2006
From: jpg at jgassociates.ca (Jim Gallacher)
Date: Fri Jul  7 14:55:07 2006
Subject: [mod_python] hi
In-Reply-To: <a98e5dcd0607071132v27681bb2p67e32a763d929d5e@mail.gmail.com>
References: <a98e5dcd0607071132v27681bb2p67e32a763d929d5e@mail.gmail.com>
Message-ID: <44AEAE78.2000104@jgassociates.ca>

Sanjeev Divekar wrote:
> hi,
> 
> i am newbie to python i want to switch from asp.net to mod_python for
> small webapps any good resources to learn mod_python?

This is a bit of a weakness right now. Take a look at the current
documentation. http://www.modpython.org/live/current/doc-html/

You'll find the people on this list are pretty helpful, so starting
playing around with it and feel free to ask questions here.

> can i use any other lightweight webserver other than apache to run
> mod_python app?

No. Mod_python is an apache module and as such will only run within
apache. For best success you should be using apache 2.0 and mod_python
3.2.8 (or 3.2.9, which will likely be released in the next day or so).

Jim
From smilelover at centrum.cz  Fri Jul  7 15:50:21 2006
From: smilelover at centrum.cz (smilelover@centrum.cz)
Date: Fri Jul  7 15:49:09 2006
Subject: [mod_python] hi
In-Reply-To: <44AEAE78.2000104@jgassociates.ca>
References: <a98e5dcd0607071132v27681bb2p67e32a763d929d5e@mail.gmail.com>
	<44AEAE78.2000104@jgassociates.ca>
Message-ID: <op.tcb317tdhonj0y@localhost>

Dne Fri, 07 Jul 2006 20:56:56 +0200 napsal(a) Jim Gallacher  
<jpg@jgassociates.ca> n?sleduj?c? zpr?vu:

> Sanjeev Divekar wrote:
>> hi,
>>
>> i am newbie to python i want to switch from asp.net to mod_python for
>> small webapps any good resources to learn mod_python?

This helped me quite a lot:  
http://www.onlamp.com/pub/a/python/2004/02/26/python_server_pages.html

Dan
From sanjeevdivekar at gmail.com  Sat Jul  8 06:10:20 2006
From: sanjeevdivekar at gmail.com (Sanjeev Divekar)
Date: Sat Jul  8 06:10:30 2006
Subject: [mod_python] hi
In-Reply-To: <op.tcb317tdhonj0y@localhost>
References: <a98e5dcd0607071132v27681bb2p67e32a763d929d5e@mail.gmail.com>
	<44AEAE78.2000104@jgassociates.ca> <op.tcb317tdhonj0y@localhost>
Message-ID: <a98e5dcd0607080310g69345a83xd80c1dbebb74de1a@mail.gmail.com>

thank you very much is mailing list is really helpful.

On 08/07/06, smilelover@centrum.cz <smilelover@centrum.cz> wrote:
> Dne Fri, 07 Jul 2006 20:56:56 +0200 napsal(a) Jim Gallacher
> <jpg@jgassociates.ca> n?sleduj?c? zpr?vu:
>
> > Sanjeev Divekar wrote:
> >> hi,
> >>
> >> i am newbie to python i want to switch from asp.net to mod_python for
> >> small webapps any good resources to learn mod_python?
>
> This helped me quite a lot:
> http://www.onlamp.com/pub/a/python/2004/02/26/python_server_pages.html
>
> Dan
>


-- 
Sanjeev Divekar
Sanmisha Technologies
Mobile : +91 9820427416
Email  : sanjeev@sanmisha.com

From dmharvey at math.harvard.edu  Sat Jul  8 22:13:35 2006
From: dmharvey at math.harvard.edu (David Harvey)
Date: Sat Jul  8 22:14:06 2006
Subject: [mod_python] weird request.connection.remote_ip value
Message-ID: <8182EBE7-ACB8-4642-93C3-09D37CF1CBEE@math.harvard.edu>

I'm running mod_python 3.2.8 on Mac OS 10.4.6, python 2.4.3, apache  
2.2.2, on my desktop machine.

I've got apache set up to load this script:

========================= begin

from mod_python import apache

def handler(request):
     request.write(request.connection.remote_ip)
     return apache.OK

========================= end

When I browse to "http://127.0.0.1/", the script prints out  
"127.0.0.1" as expected.

If I connect from a local network, e.g. to "http://192.168.0.6/" it  
prints out "192.168.0.4" (the address of the other machine) as expected.

But when I browse to "http://localhost/" from this machine, it prints  
"::1".

What does "::1" mean? Why isn't it giving me an IP address? Shouldn't  
I be getting "127.0.0.1" as above? How can I guarantee to get an IP  
address?

Thanks

David

From jzarecta at gmail.com  Sat Jul  8 22:38:37 2006
From: jzarecta at gmail.com (Kahlil Johnson)
Date: Sat Jul  8 22:38:41 2006
Subject: [mod_python] hi
In-Reply-To: <a98e5dcd0607071132v27681bb2p67e32a763d929d5e@mail.gmail.com>
References: <a98e5dcd0607071132v27681bb2p67e32a763d929d5e@mail.gmail.com>
Message-ID: <4adf377d0607081938n77886040pa9e630f1a6319022@mail.gmail.com>

There are some Python frameworks and they include their own webserver. But
mod_python is a module for apache exclusively. Zope has a standalone
webserver, there is lighthttpd, monkeyserver and many others but support for
python is beyond the scope of mod_python list. I will suggest to write to
the python framework of your chocie, so far there are way too many to list
here but a small list could be (CherryPy, WebWare, Quixote, Django and
Zope/Plone).

This are frameworks similar to what Rails is to Ruby, most of them include
their own webserver with variable recomendations for their production use.

On 7/7/06, Sanjeev Divekar <sanjeevdivekar@gmail.com> wrote:
>
> hi,
>
> i am newbie to python i want to switch from asp.net to mod_python for
> small webapps any good resources to learn mod_python?
>
> can i use any other lightweight webserver other than apache to run
> mod_python app?
>
> thanks in advance
>
> --
> Sanjeev Divekar
> Sanmisha Technologies
> Mobile : +91 9820427416
> Email  : sanjeev@sanmisha.com
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>



-- 
Kahlil Johnson
"Ya tengo GMAIL!!"
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20060708/990efd4f/attachment.html
From grahamd at dscpl.com.au  Sat Jul  8 22:38:11 2006
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Sat Jul  8 22:38:58 2006
Subject: [mod_python] weird request.connection.remote_ip value
In-Reply-To: <8182EBE7-ACB8-4642-93C3-09D37CF1CBEE@math.harvard.edu>
References: <8182EBE7-ACB8-4642-93C3-09D37CF1CBEE@math.harvard.edu>
Message-ID: <931AA6B3-AA21-484B-B684-FE266D7CD23C@dscpl.com.au>


On 09/07/2006, at 12:13 PM, David Harvey wrote:

> I'm running mod_python 3.2.8 on Mac OS 10.4.6, python 2.4.3, apache  
> 2.2.2, on my desktop machine.
>
> I've got apache set up to load this script:
>
> ========================= begin
>
> from mod_python import apache
>
> def handler(request):
>     request.write(request.connection.remote_ip)
>     return apache.OK
>
> ========================= end
>
> When I browse to "http://127.0.0.1/", the script prints out  
> "127.0.0.1" as expected.
>
> If I connect from a local network, e.g. to "http://192.168.0.6/" it  
> prints out "192.168.0.4" (the address of the other machine) as  
> expected.
>
> But when I browse to "http://localhost/" from this machine, it  
> prints "::1".
>
> What does "::1" mean? Why isn't it giving me an IP address?  
> Shouldn't I be getting "127.0.0.1" as above? How can I guarantee to  
> get an IP address?

This field is populated by apr_sockaddr_ip_get() in Apache Runtime  
library. The field
can be populated with either IPv4 or IPv6 addresses. On a Mac, when  
you use the
string "localhost" it is as far as I know actually using an IPv6  
connection to Apache and
"::1" is what the Mac is using to identify that IPv6 client.

What do you want the remote IP address for? Depending on what you  
want to do,
there may be better ways of doing it.

Graham
From dmharvey at math.harvard.edu  Sat Jul  8 22:48:10 2006
From: dmharvey at math.harvard.edu (David Harvey)
Date: Sat Jul  8 22:48:31 2006
Subject: [mod_python] weird request.connection.remote_ip value
In-Reply-To: <931AA6B3-AA21-484B-B684-FE266D7CD23C@dscpl.com.au>
References: <8182EBE7-ACB8-4642-93C3-09D37CF1CBEE@math.harvard.edu>
	<931AA6B3-AA21-484B-B684-FE266D7CD23C@dscpl.com.au>
Message-ID: <C36B2D27-E9B9-4BB0-8B71-EB5AF25E6413@math.harvard.edu>


On Jul 8, 2006, at 10:38 PM, Graham Dumpleton wrote:

>
> On 09/07/2006, at 12:13 PM, David Harvey wrote:
>
>> I'm running mod_python 3.2.8 on Mac OS 10.4.6, python 2.4.3,  
>> apache 2.2.2, on my desktop machine.
>>
>> I've got apache set up to load this script:
>>
>> ========================= begin
>>
>> from mod_python import apache
>>
>> def handler(request):
>>     request.write(request.connection.remote_ip)
>>     return apache.OK
>>
>> ========================= end
>>
>> When I browse to "http://127.0.0.1/", the script prints out  
>> "127.0.0.1" as expected.
>>
>> If I connect from a local network, e.g. to "http://192.168.0.6/"  
>> it prints out "192.168.0.4" (the address of the other machine) as  
>> expected.
>>
>> But when I browse to "http://localhost/" from this machine, it  
>> prints "::1".
>>
>> What does "::1" mean? Why isn't it giving me an IP address?  
>> Shouldn't I be getting "127.0.0.1" as above? How can I guarantee  
>> to get an IP address?
>
> This field is populated by apr_sockaddr_ip_get() in Apache Runtime  
> library. The field
> can be populated with either IPv4 or IPv6 addresses. On a Mac, when  
> you use the
> string "localhost" it is as far as I know actually using an IPv6  
> connection to Apache and
> "::1" is what the Mac is using to identify that IPv6 client.
>
> What do you want the remote IP address for? Depending on what you  
> want to do,
> there may be better ways of doing it.
>
> Graham

Basically I want to use it as a temporary username for anonymous  
visitors who haven't registered for an account. Kind of like how  
wikipedia does. I was just a bit concerned when I saw "::1", it made  
me feel that using remote_ip is not a particularly reliable way to  
get the request IP address. Do you have any other suggestions?

David

From grahamd at dscpl.com.au  Sat Jul  8 22:48:57 2006
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Sat Jul  8 22:49:55 2006
Subject: [mod_python] weird request.connection.remote_ip value
In-Reply-To: <931AA6B3-AA21-484B-B684-FE266D7CD23C@dscpl.com.au>
References: <8182EBE7-ACB8-4642-93C3-09D37CF1CBEE@math.harvard.edu>
	<931AA6B3-AA21-484B-B684-FE266D7CD23C@dscpl.com.au>
Message-ID: <503A4E34-E048-4644-B510-A4BA9BE55ADB@dscpl.com.au>


On 09/07/2006, at 12:38 PM, Graham Dumpleton wrote:

>
> On 09/07/2006, at 12:13 PM, David Harvey wrote:
>
>> I'm running mod_python 3.2.8 on Mac OS 10.4.6, python 2.4.3,  
>> apache 2.2.2, on my desktop machine.
>>
>> I've got apache set up to load this script:
>>
>> ========================= begin
>>
>> from mod_python import apache
>>
>> def handler(request):
>>     request.write(request.connection.remote_ip)
>>     return apache.OK
>>
>> ========================= end
>>
>> When I browse to "http://127.0.0.1/", the script prints out  
>> "127.0.0.1" as expected.
>>
>> If I connect from a local network, e.g. to "http://192.168.0.6/"  
>> it prints out "192.168.0.4" (the address of the other machine) as  
>> expected.
>>
>> But when I browse to "http://localhost/" from this machine, it  
>> prints "::1".
>>
>> What does "::1" mean? Why isn't it giving me an IP address?  
>> Shouldn't I be getting "127.0.0.1" as above? How can I guarantee  
>> to get an IP address?
>
> This field is populated by apr_sockaddr_ip_get() in Apache Runtime  
> library. The field
> can be populated with either IPv4 or IPv6 addresses. On a Mac, when  
> you use the
> string "localhost" it is as far as I know actually using an IPv6  
> connection to Apache and
> "::1" is what the Mac is using to identify that IPv6 client.
>
> What do you want the remote IP address for? Depending on what you  
> want to do,
> there may be better ways of doing it.

After more digging, '::1' means loopback interface under IPv6.

Further information can be found at:

   http://www.juniper.net/techpubs/software/erx/erx50x/swconfig- 
routing-vol1/html/ipv6-config5.html

IPv6 Address Compression

IPv6 addresses often contain consecutive hexadecimal fields of zeros.  
To simplify address entry, you can use two colons (::) to represent  
the consecutive fields of zeros when typing the IPv6 address. Table  
3-1 provides compressed IPv6 address format examples.

Table 3-1 Compressed IPv6 formats

IPv6 Address Type
Full Format
Compressed Format

Unicast
10FB:0:0:0:C:ABC:1F0C:44DA
10FB::C:ABC:1F0C:44DA

Multicast
FD01:0:0:0:0:0:0:1F
FD01::1F

Loopback
0:0:0:0:0:0:0:1
::1

Unspecified
0:0:0:0:0:0:0:0
::

Graham


From grahamd at dscpl.com.au  Sat Jul  8 23:05:11 2006
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Sat Jul  8 23:05:56 2006
Subject: [mod_python] weird request.connection.remote_ip value
In-Reply-To: <C36B2D27-E9B9-4BB0-8B71-EB5AF25E6413@math.harvard.edu>
References: <8182EBE7-ACB8-4642-93C3-09D37CF1CBEE@math.harvard.edu>
	<931AA6B3-AA21-484B-B684-FE266D7CD23C@dscpl.com.au>
	<C36B2D27-E9B9-4BB0-8B71-EB5AF25E6413@math.harvard.edu>
Message-ID: <A5C0B6DF-C701-4CB7-A4B9-E8EEEDE28CAD@dscpl.com.au>


On 09/07/2006, at 12:48 PM, David Harvey wrote:

>
> On Jul 8, 2006, at 10:38 PM, Graham Dumpleton wrote:
>
>>
>> On 09/07/2006, at 12:13 PM, David Harvey wrote:
>>
>>> I'm running mod_python 3.2.8 on Mac OS 10.4.6, python 2.4.3,  
>>> apache 2.2.2, on my desktop machine.
>>>
>>> I've got apache set up to load this script:
>>>
>>> ========================= begin
>>>
>>> from mod_python import apache
>>>
>>> def handler(request):
>>>     request.write(request.connection.remote_ip)
>>>     return apache.OK
>>>
>>> ========================= end
>>>
>>> When I browse to "http://127.0.0.1/", the script prints out  
>>> "127.0.0.1" as expected.
>>>
>>> If I connect from a local network, e.g. to "http://192.168.0.6/"  
>>> it prints out "192.168.0.4" (the address of the other machine) as  
>>> expected.
>>>
>>> But when I browse to "http://localhost/" from this machine, it  
>>> prints "::1".
>>>
>>> What does "::1" mean? Why isn't it giving me an IP address?  
>>> Shouldn't I be getting "127.0.0.1" as above? How can I guarantee  
>>> to get an IP address?
>>
>> This field is populated by apr_sockaddr_ip_get() in Apache Runtime  
>> library. The field
>> can be populated with either IPv4 or IPv6 addresses. On a Mac,  
>> when you use the
>> string "localhost" it is as far as I know actually using an IPv6  
>> connection to Apache and
>> "::1" is what the Mac is using to identify that IPv6 client.
>>
>> What do you want the remote IP address for? Depending on what you  
>> want to do,
>> there may be better ways of doing it.
>>
>> Graham
>
> Basically I want to use it as a temporary username for anonymous  
> visitors who haven't registered for an account. Kind of like how  
> wikipedia does. I was just a bit concerned when I saw "::1", it  
> made me feel that using remote_ip is not a particularly reliable  
> way to get the request IP address. Do you have any other suggestions?

What happens if you have two visitors from the same remote machine?  
You might
be better off having the server side generate a random ID which is  
saved back to
the client browser using cookies. You might even use session objects  
and the session
SID then becomes the ID in some way. Am sure others will suggest  
perhaps more
secure ways of doing it.

Graham
From dmharvey at math.harvard.edu  Sun Jul  9 06:41:49 2006
From: dmharvey at math.harvard.edu (David Harvey)
Date: Sun Jul  9 06:42:08 2006
Subject: [mod_python] weird request.connection.remote_ip value
In-Reply-To: <503A4E34-E048-4644-B510-A4BA9BE55ADB@dscpl.com.au>
References: <8182EBE7-ACB8-4642-93C3-09D37CF1CBEE@math.harvard.edu>
	<931AA6B3-AA21-484B-B684-FE266D7CD23C@dscpl.com.au>
	<503A4E34-E048-4644-B510-A4BA9BE55ADB@dscpl.com.au>
Message-ID: <BCF83568-E525-429A-88FA-25444020134C@math.harvard.edu>


On Jul 8, 2006, at 10:48 PM, Graham Dumpleton wrote:

> After more digging, '::1' means loopback interface under IPv6.
>
> Further information can be found at:
>
>   http://www.juniper.net/techpubs/software/erx/erx50x/swconfig- 
> routing-vol1/html/ipv6-config5.html

Hey thanks for tracking this down! You learn something every day.  
Much happier now.


>> Basically I want to use it as a temporary username for anonymous  
>> visitors who haven't registered for an account. Kind of like how  
>> wikipedia does. I was just a bit concerned when I saw "::1", it  
>> made me feel that using remote_ip is not a particularly reliable  
>> way to get the request IP address. Do you have any other suggestions?
>
> What happens if you have two visitors from the same remote machine?  
> You might
> be better off having the server side generate a random ID which is  
> saved back to
> the client browser using cookies. You might even use session  
> objects and the session
> SID then becomes the ID in some way. Am sure others will suggest  
> perhaps more
> secure ways of doing it.

Yeah I know the limitations :-) They might even get a new IP address  
for each request within a single session :-) I'm not really worried  
about that kind of security for this application. It's a wiki-like  
system... I just want a way for users to be able to tell whether a  
sequence of edits all come from the same (unregistered) user. Since  
that's theoretically impossible, the IP address provides the best  
approximation for the least work that I can think of right now. It's  
not that important anyway, this is all just proof-of-concept for now.  
(The system will of course use session cookies, not  IP address, to  
track *session* data.)

Thanks for your help!

David

From girty at cogeco.ca  Sun Jul  9 12:33:34 2006
From: girty at cogeco.ca (greg)
Date: Sun Jul  9 12:36:37 2006
Subject: [mod_python] outputting to apache log
Message-ID: <44B12FDE.4080904@cogeco.ca>

I have some session data that I would like to write into the apache log, 
to be used with a stats tool. (Prefereably NOT the error log.)

PythonLogHandler looks like it should be related to this task, but I 
could find nothing about writing a custom one in the docs:

http://www.modpython.org/live/current/doc-html/dir-handlers-plh.html

What's the best way to put data into the log?

Greg
From jpg at jgassociates.ca  Sun Jul  9 13:15:36 2006
From: jpg at jgassociates.ca (Jim Gallacher)
Date: Sun Jul  9 13:14:31 2006
Subject: [mod_python] outputting to apache log
In-Reply-To: <44B12FDE.4080904@cogeco.ca>
References: <44B12FDE.4080904@cogeco.ca>
Message-ID: <44B139B8.6060108@jgassociates.ca>

greg wrote:
> I have some session data that I would like to write into the apache log,
> to be used with a stats tool. (Prefereably NOT the error log.)
> 
> PythonLogHandler looks like it should be related to this task, but I
> could find nothing about writing a custom one in the docs:
> 
> http://www.modpython.org/live/current/doc-html/dir-handlers-plh.html
> 
> What's the best way to put data into the log?

I haven't used PythonLogHandler myself, but I suspect it doesn't do what
you think does.

Putting PythonLogHandler in your apache config will cause your handler
to be called by apache during logging phase, which is the second to last
phase - cleanup being the last. What you do in your handler is entirely
up to you, such as logging to a separate file, database, error log, or
whatever.

AFAIK there is no functionality exposed in mod_python that allows you to
interact with the access log, or if this is even possible.

Jim


From girty at cogeco.ca  Sun Jul  9 15:18:13 2006
From: girty at cogeco.ca (greg)
Date: Sun Jul  9 15:20:18 2006
Subject: [mod_python] outputting to apache log
In-Reply-To: <44B139B8.6060108@jgassociates.ca>
References: <44B12FDE.4080904@cogeco.ca> <44B139B8.6060108@jgassociates.ca>
Message-ID: <44B15675.8040208@cogeco.ca>

> I haven't used PythonLogHandler myself, but I suspect it doesn't do what
> you think does.
> 
> Putting PythonLogHandler in your apache config will cause your handler
> to be called by apache during logging phase, which is the second to last
> phase - cleanup being the last. What you do in your handler is entirely
> up to you, such as logging to a separate file, database, error log, or
> whatever.
> 
> AFAIK there is no functionality exposed in mod_python that allows you to
> interact with the access log, or if this is even possible.

Thanks for the reply Jim.

I assumed it was possible from this article by Gregory Trubetskoy:

http://www.onlamp.com/pub/a/python/2003/10/02/mod_python.html

"A mod_python connection handler leverages [..] Apache server facilities
such as logging."

If there is no modpy specific way of doing it, is there a generic
approach in apache to capture stdout from a script?

Greg

From grahamd at dscpl.com.au  Sun Jul  9 18:44:02 2006
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Sun Jul  9 18:44:22 2006
Subject: [mod_python] outputting to apache log
Message-ID: <1152485042.24222@dscpl.user.openhosting.com>

greg wrote ..
> > I haven't used PythonLogHandler myself, but I suspect it doesn't do what
> > you think does.
> > 
> > Putting PythonLogHandler in your apache config will cause your handler
> > to be called by apache during logging phase, which is the second to last
> > phase - cleanup being the last. What you do in your handler is entirely
> > up to you, such as logging to a separate file, database, error log, or
> > whatever.
> > 
> > AFAIK there is no functionality exposed in mod_python that allows you
> to
> > interact with the access log, or if this is even possible.
> 
> Thanks for the reply Jim.
> 
> I assumed it was possible from this article by Gregory Trubetskoy:
> 
> http://www.onlamp.com/pub/a/python/2003/10/02/mod_python.html
> 
> "A mod_python connection handler leverages [..] Apache server facilities
> such as logging."

There is "req.log_error()" and "apache.log_error()" but their output
goes to the "error_log" file. I also don't know of anyway from
mod_python of making stuff go to the "access_log".

Remember the "access_log" has a specific format which can be changed
based on various Apache log directives and a lot of tools also expect to
process "access_log". Dumping arbitrary stuff in there may cause
problems for such tools. That is I presume why very basic logging
functions go to "error_log" instead. There may well be a Apache C API
for putting stuff in "access_log" but it is probably going to have a
very restricted interface and not allow arbitrary messages. You would
need to do some digging through Apache C API to find if such a one
exists and even if it is meant to be used by user code and Apache is
going to call it for you anyway.

> If there is no modpy specific way of doing it, is there a generic
> approach in apache to capture stdout from a script?

Anything sent to sys.stdout and sys.stderr streams may eventually end up
in "error_log" but the streams generally need to be flushed explicitly
to get them to come out at instant that they are used rather than
sometime later when the streams are flushed by something else.
This may dependent on platform though.

What are you trying to log, general debug logging or something
analogous to what is in "access_log" now but perhaps to some other
location?

Graham
From sanjeevdivekar at gmail.com  Mon Jul 10 04:01:02 2006
From: sanjeevdivekar at gmail.com (Sanjeev Divekar)
Date: Mon Jul 10 04:01:07 2006
Subject: [mod_python] hi
In-Reply-To: <4adf377d0607081938n77886040pa9e630f1a6319022@mail.gmail.com>
References: <a98e5dcd0607071132v27681bb2p67e32a763d929d5e@mail.gmail.com>
	<4adf377d0607081938n77886040pa9e630f1a6319022@mail.gmail.com>
Message-ID: <a98e5dcd0607100101x5e2be16fhf5eeecf3ed9edce6@mail.gmail.com>

Hi,

Thank you Kahlil for your valuable advice. I have gone through all
frameworks you mentioned but as I said I DON'T KNOW PYTHON. I am
learner. So I am not a person to talk about these framework. Still I
want to know which framework is best and how we can compare that
framework with mod_python based on Simplicty, Powerful and
Performance. (e.g. I like to use PySqlite rather SQLObject).

Basically I am looking for a web based python solution which is
1.Free (doesn't matter it is open source or not).
2.Server side should not be critical issue for maintenance.
3.Ajax enabled
5.And freedom for coder (that's why I attracted to mod_python).

Waiting for Valuable Response from Helping Mailing List


On 09/07/06, Kahlil Johnson <jzarecta@gmail.com> wrote:
> There are some Python frameworks and they include their own webserver. But
> mod_python is a module for apache exclusively. Zope has a standalone
> webserver, there is lighthttpd, monkeyserver and many others but support for
> python is beyond the scope of mod_python list. I will suggest to write to
> the python framework of your chocie, so far there are way too many to list
> here but a small list could be (CherryPy, WebWare, Quixote, Django and
> Zope/Plone).
>
> This are frameworks similar to what Rails is to Ruby, most of them include
> their own webserver with variable recomendations for their production use.
>
>
> On 7/7/06, Sanjeev Divekar <sanjeevdivekar@gmail.com> wrote:
> >
> hi,
>
> i am newbie to python i want to switch from asp.net to mod_python for
> small webapps any good resources to learn mod_python?
>
> can i use any other lightweight webserver other than apache to run
> mod_python app?
>
> thanks in advance
>
> --
> Sanjeev Divekar
> Sanmisha Technologies
> Mobile : +91 9820427416
> Email  : sanjeev@sanmisha.com
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>
>
>
>
> --
> Kahlil Johnson
> "Ya tengo GMAIL!!"
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>
>
>


-- 
Sanjeev Divekar
Sanmisha Technologies
Mobile : +91 9820427416
Email  : sanjeev@sanmisha.com
From nlv11281 at natlab.research.philips.com  Mon Jul 10 04:19:16 2006
From: nlv11281 at natlab.research.philips.com (Mike Looijmans)
Date: Mon Jul 10 04:19:40 2006
Subject: [mod_python] hi
In-Reply-To: <a98e5dcd0607100101x5e2be16fhf5eeecf3ed9edce6@mail.gmail.com>
References: <a98e5dcd0607071132v27681bb2p67e32a763d929d5e@mail.gmail.com>	<4adf377d0607081938n77886040pa9e630f1a6319022@mail.gmail.com>
	<a98e5dcd0607100101x5e2be16fhf5eeecf3ed9edce6@mail.gmail.com>
Message-ID: <44B20D84.3090008@natlab.research.philips.com>

> Thank you Kahlil for your valuable advice. I have gone through all
> frameworks you mentioned but as I said I DON'T KNOW PYTHON. I am
> learner. So I am not a person to talk about these framework. Still I
> want to know which framework is best and how we can compare that
> framework with mod_python based on Simplicty, Powerful and
> Performance. (e.g. I like to use PySqlite rather SQLObject).
> 
> Basically I am looking for a web based python solution which is
> 1.Free (doesn't matter it is open source or not).

Most are free as in both "free beer" as well as "freedom of speech".

> 2.Server side should not be critical issue for maintenance.

There's only server side to maintain. That's the whole point of web 
services: You don't have to do maintenance on clients. Since it's the 
only point, it's also the critical one.

> 3.Ajax enabled

Uh... well, there's nothing preventing you from using it, since AJAX 
runs on the client side and has no specific requirements for the server.

> 5.And freedom for coder (that's why I attracted to mod_python).

See point 1.


mod_python itself is quite a low-level framework. It is not a RAD (rapid 
application development) platform like ASP.NET or delphi. For example, 
if you wish to output SQL data as a table, you'll have to write all the 
code for retrieving SQL data and inserting the "<table>" tags yourself.

From rsynnott at gmail.com  Mon Jul 10 05:41:36 2006
From: rsynnott at gmail.com (Robert Synnott)
Date: Mon Jul 10 05:41:52 2006
Subject: [mod_python] hi
In-Reply-To: <44B20D84.3090008@natlab.research.philips.com>
References: <a98e5dcd0607071132v27681bb2p67e32a763d929d5e@mail.gmail.com>
	<4adf377d0607081938n77886040pa9e630f1a6319022@mail.gmail.com>
	<a98e5dcd0607100101x5e2be16fhf5eeecf3ed9edce6@mail.gmail.com>
	<44B20D84.3090008@natlab.research.philips.com>
Message-ID: <24f203480607100241t2d4b37e1t375bf05922a17ea9@mail.gmail.com>

On 7/10/06, Mike Looijmans <nlv11281@natlab.research.philips.com> wrote:
> > 5.And freedom for coder (that's why I attracted to mod_python).
>
> See point 1.
>
>
> mod_python itself is quite a low-level framework. It is not a RAD (rapid
> application development) platform like ASP.NET or delphi. For example,
> if you wish to output SQL data as a table, you'll have to write all the
> code for retrieving SQL data and inserting the "<table>" tags yourself.
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>

This is exactly why I like it as a web development platform, actually.
I suppose I do sometimes end up re-inventing the wheel a bit,
though...
Rob
From gaurav.agarwal1904 at gmail.com  Mon Jul 10 09:20:30 2006
From: gaurav.agarwal1904 at gmail.com (Gaurav Agarwal)
Date: Mon Jul 10 09:20:35 2006
Subject: [mod_python] mod_python fails to load under wamp
Message-ID: <3b2009860607100620k7719b771j1ca6c5e04ec1a0df@mail.gmail.com>

Hi,

Am using WAMP5 and python 2.4.3. I tried to install mod_python 3.2.5
for python2.4. When i tried starting wamp, Firstly there was no error
message in the apache error log. I saw error message in windows event
viewer :

"The Apache service named Apache.exe reported the following error:
>>> Syntax error on line 194 of c:/wamp/apache/conf/httpd.conf: <<<


 before the error.log file could be opened.

"The Apache service named Apache.exe reported the following error:
>>> Cannot load c:/wamp/apache/modules/mod_python.so into server: (126) The
specified module could not be found: <<<


 before the error.log file could be opened."

I tried searching the net and found this
http://www.modpython.org/FAQ/faqw.py?req=all#2.10 but i don't have
depends.exe. if somebody has faced this problem before, can you please
assist in fixing this bug..


-- 
Thanks and Regards,
Gaurav Agarwal

Steven Wright - "Curiosity killed the cat, but for a while I was a suspect."
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20060710/a331fee7/attachment.html
From sanjeevdivekar at gmail.com  Mon Jul 10 11:17:53 2006
From: sanjeevdivekar at gmail.com (Sanjeev Divekar)
Date: Mon Jul 10 11:18:27 2006
Subject: [mod_python] hi
In-Reply-To: <24f203480607100241t2d4b37e1t375bf05922a17ea9@mail.gmail.com>
References: <a98e5dcd0607071132v27681bb2p67e32a763d929d5e@mail.gmail.com>
	<4adf377d0607081938n77886040pa9e630f1a6319022@mail.gmail.com>
	<a98e5dcd0607100101x5e2be16fhf5eeecf3ed9edce6@mail.gmail.com>
	<44B20D84.3090008@natlab.research.philips.com>
	<24f203480607100241t2d4b37e1t375bf05922a17ea9@mail.gmail.com>
Message-ID: <a98e5dcd0607100817y31940c48mf40712422dd34727@mail.gmail.com>

Hi Robert,

If you are thinking to invent a wheel i am interested to give my
little helping hand.

Sanjeev

On 10/07/06, Robert Synnott <rsynnott@gmail.com> wrote:
> On 7/10/06, Mike Looijmans <nlv11281@natlab.research.philips.com> wrote:
> > > 5.And freedom for coder (that's why I attracted to mod_python).
> >
> > See point 1.
> >
> >
> > mod_python itself is quite a low-level framework. It is not a RAD (rapid
> > application development) platform like ASP.NET or delphi. For example,
> > if you wish to output SQL data as a table, you'll have to write all the
> > code for retrieving SQL data and inserting the "<table>" tags yourself.
> >
> > _______________________________________________
> > Mod_python mailing list
> > Mod_python@modpython.org
> > http://mailman.modpython.org/mailman/listinfo/mod_python
> >
>
> This is exactly why I like it as a web development platform, actually.
> I suppose I do sometimes end up re-inventing the wheel a bit,
> though...
> Rob
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>


-- 
Sanjeev Divekar
Sanmisha Technologies
Mobile : +91 9820427416
Email  : sanjeev@sanmisha.com
From jjeffreyclose at yahoo.com  Mon Jul 10 16:00:30 2006
From: jjeffreyclose at yahoo.com (J. Jeffrey Close)
Date: Mon Jul 10 16:00:34 2006
Subject: [mod_python] mod_python cannot find Python 2.4 --
Message-ID: <20060710200030.84690.qmail@web52314.mail.yahoo.com>


Hi,

This problem is fairly well-known, but I've tried all the suggestions that I've seen online and none have helped.

mod_python 3.2.8 from Source
python 2.4.3
apache 2.0.58

It's the usual "new version of Python framework" problem.  I have installed Python 2.4.3 with the Universal install that installs it under /Library/Frameworks/Python.framework/Versions/{2.4, Current} .  I built mod_python with
./configure --with-apxs=/usr/local/apache2/bin/apxs --with-python <above path>/bin/python2.4

When I run apache, the logs show 
"mod_python/3.2.8  Python/2.3.5 configured -- resuming normal operation"

I have tried with and without the configure options above.  I have done 'otool -L mod_python.so' and it reports also 2.3.5.  No matter what I've tried, otool/httpd refuse to see the new Python.  HOWEVER, when I build mod_python, everything reports python 2.4.3 in the configure and the build -- i.e. there is no indication that it's not finding any of 2.4.   

Any ideas?   Thanks for any help.

cheers,
Jeffrey


From grahamd at dscpl.com.au  Mon Jul 10 18:34:02 2006
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Mon Jul 10 18:34:06 2006
Subject: [mod_python] mod_python cannot find Python 2.4 --
Message-ID: <1152570841.19350@dscpl.user.openhosting.com>

J. Jeffrey Close wrote ..
> 
> Hi,
> 
> This problem is fairly well-known, but I've tried all the suggestions that
> I've seen online and none have helped.
> 
> mod_python 3.2.8 from Source
> python 2.4.3
> apache 2.0.58
> 
> It's the usual "new version of Python framework" problem.  I have installed
> Python 2.4.3 with the Universal install that installs it under /Library/Frameworks/Python.framework/Versions/{2.4,
> Current} .  I built mod_python with
> ./configure --with-apxs=/usr/local/apache2/bin/apxs --with-python <above
> path>/bin/python2.4
> 
> When I run apache, the logs show 
> "mod_python/3.2.8  Python/2.3.5 configured -- resuming normal operation"
> 
> I have tried with and without the configure options above.  I have done
> 'otool -L mod_python.so' and it reports also 2.3.5.  No matter what I've
> tried, otool/httpd refuse to see the new Python.  HOWEVER, when I build
> mod_python, everything reports python 2.4.3 in the configure and the build
> -- i.e. there is no indication that it's not finding any of 2.4.   
> 
> Any ideas?   Thanks for any help.

When Apache is started, the Python initialisation performed from inside
of mod_python will look through directories in PATH trying to find a
"python" binary. It somehow uses the location of this to determine how
it will setup sys.path etc. This often results in wrong Python lib
directory being referenced for the version of Python being loaded. On
Mac OS X it gets further complicated because of the framework stuff.

End result is that you may have to ensure that the bin directory in the
Python framework directory for Python 2.4 is at start of PATH of the
environment of the user starting Apache.

Graham

From mvanaswegen at gmail.com  Tue Jul 11 09:19:47 2006
From: mvanaswegen at gmail.com (marinus van aswegen)
Date: Tue Jul 11 09:19:55 2006
Subject: [mod_python] CAPCHA
Message-ID: <ffa39deb0607110619v24bb8bbeh295968e332f34061@mail.gmail.com>

Hi all

I'm working on a CAPCHA module. The plan is to save the password to
the session object and then to serve the image via function (pipe an
image from a buffer to the browser that's expecting an image). Has
anyone tried anything like this ?

/marinus
From deron.meranda at gmail.com  Tue Jul 11 11:15:55 2006
From: deron.meranda at gmail.com (Deron Meranda)
Date: Tue Jul 11 11:15:59 2006
Subject: [mod_python] CAPCHA
In-Reply-To: <ffa39deb0607110619v24bb8bbeh295968e332f34061@mail.gmail.com>
References: <ffa39deb0607110619v24bb8bbeh295968e332f34061@mail.gmail.com>
Message-ID: <5c06fa770607110815l4017bd5bq794f4b8be192d4b2@mail.gmail.com>

There was a thread on captchas not too long ago.
http://www.modpython.org/pipermail/mod_python/2006-June/021450.html

On 7/11/06, marinus van aswegen <mvanaswegen@gmail.com> wrote:
> I'm working on a CAPCHA module. The plan is to save the password to
> the session object and then to serve the image via function (pipe an
> image from a buffer to the browser that's expecting an image). Has
> anyone tried anything like this ?

Yes, I serve binary files (including images) directly via mod_python
all the time.  You just need to be careful of your content-type header
and make sure you don't output any stray bytes here or there.

As for generating your captcha image after the password validation,
you may want to rethink that.  It would then be possible to do a
brute-force password guessing attack without ever having to
automatically break the captcha (so in essence your captcha is
not doing what its primary purpose is).  You want to validate the
catpcha response at the same time you validate the password.
And the image should be seeded from a cryptographic random
source each time (instead of a deterministic function), and the
seed values should never be re-used.
-- 
Deron Meranda
From girty at cogeco.ca  Tue Jul 11 12:01:14 2006
From: girty at cogeco.ca (greg)
Date: Tue Jul 11 12:03:25 2006
Subject: [mod_python] outputting to apache log
In-Reply-To: <1152485042.24222@dscpl.user.openhosting.com>
References: <1152485042.24222@dscpl.user.openhosting.com>
Message-ID: <44B3CB4A.7050907@cogeco.ca>

> There is "req.log_error()" and "apache.log_error()" but their output
> goes to the "error_log" file. I also don't know of anyway from
> mod_python of making stuff go to the "access_log".
> 
> Remember the "access_log" has a specific format which can be changed
> based on various Apache log directives and a lot of tools also expect to
> process "access_log". Dumping arbitrary stuff in there may cause
> problems for such tools. That is I presume why very basic logging
> functions go to "error_log" instead. There may well be a Apache C API
> for putting stuff in "access_log" but it is probably going to have a
> very restricted interface and not allow arbitrary messages. You would
> need to do some digging through Apache C API to find if such a one
> exists and even if it is meant to be used by user code and Apache is
> going to call it for you anyway.
> 
> 
>>If there is no modpy specific way of doing it, is there a generic
>>approach in apache to capture stdout from a script?
> 
> 
> Anything sent to sys.stdout and sys.stderr streams may eventually end up
> in "error_log" but the streams generally need to be flushed explicitly
> to get them to come out at instant that they are used rather than
> sometime later when the streams are flushed by something else.
> This may dependent on platform though.
> 
> What are you trying to log, general debug logging or something
> analogous to what is in "access_log" now but perhaps to some other
> location?

Thanks again Graham.

In answer to your question, I have some information about visitor's form 
choices that statys with them in a session. I want to correlate that to 
page views, and pretty-print it. My next attempt will be to save it in a 
session, and dump it to a custom log in the LogHandler (syscall to cat), 
and teach AWStats to read the custom file format.

Greg.
From jadacyrus at gmail.com  Tue Jul 11 15:05:10 2006
From: jadacyrus at gmail.com (jadacyrus)
Date: Tue Jul 11 15:05:18 2006
Subject: [mod_python] mod_python upload meter / progressbar?
Message-ID: <44B3F666.7090108@gmail.com>

I've got a working upload script setup for my site however, it will just 
sit at the upload page until the upload is complete, and then it will 
show what I want next. I was wondering if there is a hopefully simple 
way of creating a progress meter to show how many bytes have been read 
and how many bytes are remaining. the read_length request member seems 
to show correctly the size of the file being uploaded, however 
"remaining" always reports zero for me. Perhaps I'm not using it in the 
correct place? Thanks.

Alex
From jjeffreyclose at yahoo.com  Tue Jul 11 15:26:41 2006
From: jjeffreyclose at yahoo.com (J. Jeffrey Close)
Date: Tue Jul 11 15:27:00 2006
Subject: [mod_python] Re: mod_python cannot find Python 2.4 --
In-Reply-To: <75D95C37-78F5-4475-B170-627FEB937FA5@mac.com>
Message-ID: <20060711192641.8117.qmail@web52313.mail.yahoo.com>


Hi Ronald (and everybody) --

Hey hey, I fixed it.   

Ronald, thanks for the suggestions.  Unfortunately I had tried relinking various things in many different places, and none of them helped -- e.g. libraries in /usr/lib, and the main directory in /System/Library/Frameworks/Python.framework/Versions/2.3 -- to 2.4 --  and I think a few others too.  None of those helped.  

After playing awhile with hacking the makefile in mod_python/src/Makefile , I completely convinced myself that it was outside the scope of that project build where the problem was occurring.  I checked and found that it was being loaded through /Developer/SDKs/<...>/System/Library/Frameworks/Python.framework/Versions/2.3 .

I linked a  "2.4" from here to /Library/Frameworks/.../2.4 , and made Current->2.4 .  That worked.  

'otool -L mod_python.so'  now reports

/usr/local/src/mod_python-3.2.8/src/mod_python.so:
        /usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 88.1.3)
        /Library/Frameworks/Python.framework/Versions/2.4/Python (compatibility version 2.4.0, current version 2.4.0)

this is repeated in the Apache startup, which reports mod_python/3.2.8  Python/2.4.3

mod_python is happy and so am I    :)

cheers,
Jeff




----- Original Message ----
From: Ronald Oussoren <ronaldoussoren@mac.com>
To: J. Jeffrey Close <jjeffreyclose@yahoo.com>
Cc: mod_python@modpython.org
Sent: Monday, July 10, 2006 11:40:20 PM
Subject: Re: mod_python cannot find Python 2.4 --


On Jul 10, 2006, at 10:00 PM, J. Jeffrey Close wrote:

>
> Hi,
>
> This problem is fairly well-known, but I've tried all the  
> suggestions that I've seen online and none have helped.
>
> mod_python 3.2.8 from Source
> python 2.4.3
> apache 2.0.58
>
> It's the usual "new version of Python framework" problem.  I have  
> installed Python 2.4.3 with the Universal install that installs it  
> under /Library/Frameworks/Python.framework/Versions/{2.4,  
> Current} .  I built mod_python with
> ./configure --with-apxs=/usr/local/apache2/bin/apxs --with-python  
> <above path>/bin/python2.4
>
> When I run apache, the logs show
> "mod_python/3.2.8  Python/2.3.5 configured -- resuming normal  
> operation"
>
> I have tried with and without the configure options above.  I have  
> done 'otool -L mod_python.so' and it reports also 2.3.5.  No matter  
> what I've tried, otool/httpd refuse to see the new Python.   
> HOWEVER, when I build mod_python, everything reports python 2.4.3  
> in the configure and the build -- i.e. there is no indication that  
> it's not finding any of 2.4.

I've probably fixed this for python 2.5, and will backport this fix  
to 2.4.4 before that is released.  I did however add this  change for  
mod_python for Apache1 and don't know if the latest mod_python uses  
the same crude hack to locate the python library.

What happens if you do "ln -s ../../../Python /Library/Frameworks/ 
Python.framework/Versions/2.4/lib/python2.4/config/libpython-2.4.a"  
before you build mod_python?

Ronald
  


From apocalypznow at gmail.com  Wed Jul 12 04:47:10 2006
From: apocalypznow at gmail.com (apocalypznow)
Date: Wed Jul 12 04:47:49 2006
Subject: [mod_python] Module importing with mod_vampire
Message-ID: <e92cue$r8m$1@sea.gmane.org>

Module importing with mod_vampire is not working.  I get one of several 
old copies of the python program I am importing!

Here is the relevant section of my httpd.conf file:
Alias /forums "/var/www/mod_python/forums"
<Directory /var/www/mod_python/forums>
   SetHandler python-program
   PythonHandler vampire
   PythonDebug On
   Options -MultiViews -Indexes
   PythonPath 
"['/var/www/mod_python/lib','/var/www/mod_python/forums']+sys.path"
   PythonOption VampireImportHooks On
</Directory>

The python program in question "ticket.py" is in the 
/var/www/mod_python/lib folder.  I have also moved it to the 
/var/www/mod_python/forums folder.  The results are the same no matter 
where it is.  The calling program is in the /var/www/mod_python/forums 
folder, and it does this:

import ticket
d = ticket.getData()

Please help!



From grahamd at dscpl.com.au  Wed Jul 12 07:14:28 2006
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Wed Jul 12 07:14:38 2006
Subject: [mod_python] Module importing with mod_vampire
In-Reply-To: <e92cue$r8m$1@sea.gmane.org>
References: <e92cue$r8m$1@sea.gmane.org>
Message-ID: <26DFF514-32D6-4AD0-B13F-D2AAB3471F30@dscpl.com.au>


On 12/07/2006, at 6:47 PM, apocalypznow wrote:

> Module importing with mod_vampire is not working.  I get one of  
> several old copies of the python program I am importing!
>
> Here is the relevant section of my httpd.conf file:
> Alias /forums "/var/www/mod_python/forums"
> <Directory /var/www/mod_python/forums>
>   SetHandler python-program
>   PythonHandler vampire
>   PythonDebug On
>   Options -MultiViews -Indexes
>   PythonPath "['/var/www/mod_python/lib','/var/www/mod_python/ 
> forums']+sys.path"
>   PythonOption VampireImportHooks On
> </Directory>
>
> The python program in question "ticket.py" is in the /var/www/ 
> mod_python/lib folder.  I have also moved it to the /var/www/ 
> mod_python/forums folder.  The results are the same no matter where  
> it is.  The calling program is in the /var/www/mod_python/forums  
> folder, and it does this:
>
> import ticket
> d = ticket.getData()

This is nothing to do with Vampire, it is how builtin Python "import"  
behaves
in mod_python. Specifically, when you use "import" the module first  
loaded
is the one that will be used thereafter. The reason you are seeing  
several
old copies is most likely because you are using a version of Apache  
running
with the prefork MPM and each request is being served by a different  
Apache
child process and which has at different times loaded different  
versions of
the module.

If the module the "import" is being done in is the top level handler  
module
loaded by Vampire, instead of using "import" use:

   ticket = vampire.importModule("ticket")

Vampire's module importer does not look in sys.path though, so if the  
"ticket"
module is not in the same directory, you need to specify the path to  
get the
module from.

   ticket = vampire.importModule("ticket", path=["/some/directory"])

Directories which modules are imported from using Vampire module  
loader should
not also be in sys.path as strange things can happen.

BTW, you should also read:

   http://www.dscpl.com.au/articles/modpython-003.html

for general background information on problems with the module  
importer in
mod_python.

Graham
From grahamd at dscpl.com.au  Wed Jul 12 07:23:35 2006
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Wed Jul 12 07:23:48 2006
Subject: [mod_python] Module importing with mod_vampire
In-Reply-To: <26DFF514-32D6-4AD0-B13F-D2AAB3471F30@dscpl.com.au>
References: <e92cue$r8m$1@sea.gmane.org>
	<26DFF514-32D6-4AD0-B13F-D2AAB3471F30@dscpl.com.au>
Message-ID: <05206E74-E3DC-4288-A235-5F65E952F5EA@dscpl.com.au>

Whoops, didn't see you had VampireImportHooks set to On. I better think
some more about what you are doing and refresh myself how that feature
works.

Graham

On 12/07/2006, at 9:14 PM, Graham Dumpleton wrote:

>
> On 12/07/2006, at 6:47 PM, apocalypznow wrote:
>
>
>> Module importing with mod_vampire is not working.  I get one of  
>> several old copies of the python program I am importing!
>>
>> Here is the relevant section of my httpd.conf file:
>> Alias /forums "/var/www/mod_python/forums"
>> <Directory /var/www/mod_python/forums>
>>   SetHandler python-program
>>   PythonHandler vampire
>>   PythonDebug On
>>   Options -MultiViews -Indexes
>>   PythonPath "['/var/www/mod_python/lib','/var/www/mod_python/ 
>> forums']+sys.path"
>>   PythonOption VampireImportHooks On
>> </Directory>
>>
>> The python program in question "ticket.py" is in the /var/www/ 
>> mod_python/lib folder.  I have also moved it to the /var/www/ 
>> mod_python/forums folder.  The results are the same no matter  
>> where it is.  The calling program is in the /var/www/mod_python/ 
>> forums folder, and it does this:
>>
>> import ticket
>> d = ticket.getData()
>>
>
> This is nothing to do with Vampire, it is how builtin Python  
> "import" behaves
> in mod_python. Specifically, when you use "import" the module first  
> loaded
> is the one that will be used thereafter. The reason you are seeing  
> several
> old copies is most likely because you are using a version of Apache  
> running
> with the prefork MPM and each request is being served by a  
> different Apache
> child process and which has at different times loaded different  
> versions of
> the module.
>
> If the module the "import" is being done in is the top level  
> handler module
> loaded by Vampire, instead of using "import" use:
>
>   ticket = vampire.importModule("ticket")
>
> Vampire's module importer does not look in sys.path though, so if  
> the "ticket"
> module is not in the same directory, you need to specify the path  
> to get the
> module from.
>
>   ticket = vampire.importModule("ticket", path=["/some/directory"])
>
> Directories which modules are imported from using Vampire module  
> loader should
> not also be in sys.path as strange things can happen.
>
> BTW, you should also read:
>
>   http://www.dscpl.com.au/articles/modpython-003.html
>
> for general background information on problems with the module  
> importer in
> mod_python.
>
> Graham
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>

From grahamd at dscpl.com.au  Wed Jul 12 07:33:34 2006
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Wed Jul 12 07:33:45 2006
Subject: [mod_python] Module importing with mod_vampire
In-Reply-To: <05206E74-E3DC-4288-A235-5F65E952F5EA@dscpl.com.au>
References: <e92cue$r8m$1@sea.gmane.org>
	<26DFF514-32D6-4AD0-B13F-D2AAB3471F30@dscpl.com.au>
	<05206E74-E3DC-4288-A235-5F65E952F5EA@dscpl.com.au>
Message-ID: <929C4642-C1F9-4242-9036-12FBA7336472@dscpl.com.au>


On 12/07/2006, at 9:23 PM, Graham Dumpleton wrote:

>>> Module importing with mod_vampire is not working.  I get one of  
>>> several old copies of the python program I am importing!
>>>
>>> Here is the relevant section of my httpd.conf file:
>>> Alias /forums "/var/www/mod_python/forums"
>>> <Directory /var/www/mod_python/forums>
>>>   SetHandler python-program
>>>   PythonHandler vampire
>>>   PythonDebug On
>>>   Options -MultiViews -Indexes
>>>   PythonPath "['/var/www/mod_python/lib','/var/www/mod_python/ 
>>> forums']+sys.path"

When using Vampire, you shouldn't be listing handler directories in  
sys.path
and if you want to use Vampire "import" hook or vampire.importModule()
then directories targeted by them should also not be in sys.path. Thus,
would nearly always when using Vampire use:

   PythonPath 'sys.path'

This ensures that no extra directories are added to sys.path.

>>>   PythonOption VampireImportHooks On
>>> </Directory>
>>>
>>> The python program in question "ticket.py" is in the /var/www/ 
>>> mod_python/lib folder.  I have also moved it to the /var/www/ 
>>> mod_python/forums folder.  The results are the same no matter  
>>> where it is.  The calling program is in the /var/www/mod_python/ 
>>> forums folder, and it does this:
>>>
>>> import ticket
>>> d = ticket.getData()

Where in the calling program is this located? For the Vampire "import"
hook to work, the "import" must be at global scope and executed on  
module
import and must not be contained within a function which is only getting
executed when a specific request arrives.

If this is not done, then standard Python "import" mechanism would be
getting used and thus you would see behaviour as I explained in first
mail for when it is used.

Graham
From apocalypznow at gmail.com  Wed Jul 12 14:54:37 2006
From: apocalypznow at gmail.com (apocalypznow)
Date: Wed Jul 12 14:55:41 2006
Subject: [mod_python] Re: Module importing with mod_vampire
In-Reply-To: <929C4642-C1F9-4242-9036-12FBA7336472@dscpl.com.au>
References: <e92cue$r8m$1@sea.gmane.org>	<26DFF514-32D6-4AD0-B13F-D2AAB3471F30@dscpl.com.au>	<05206E74-E3DC-4288-A235-5F65E952F5EA@dscpl.com.au>
	<929C4642-C1F9-4242-9036-12FBA7336472@dscpl.com.au>
Message-ID: <e93ghc$she$1@sea.gmane.org>

Thanks Graham.... I appreciate the clarity in your response.  I made the 
necessary changes, and here is what I get as a result:

Mod_python error: "PythonHandler vampire"

Traceback (most recent call last):

   File "/usr/lib/python2.3/site-packages/mod_python/apache.py", line 
299, in HandlerDispatch
     result = object(req)

   File "/usr/lib/python2.3/site-packages/vampire/lookup.py", line 709, 
in _handler
     module = _import(req,file)

   File "/usr/lib/python2.3/site-packages/vampire/lookup.py", line 54, 
in _import
     module = _moduleCache.importModule(name,directory,req)

   File "/usr/lib/python2.3/site-packages/vampire/cache.py", line 316, 
in importModule
     execfile(file,module.__dict__)

   File "/var/www/mod_python/forums/forum.py", line 8, in ?
     ticket = vampire.importModule("ticket", 
path=["/var/www/mod_python/lib"])

   File "/usr/lib/python2.3/site-packages/vampire/cache.py", line 161, 
in importModule
     path = os.path.normpath(path)

   File "/usr/lib/python2.3/posixpath.py", line 370, in normpath
     initial_slashes = path.startswith('/')

AttributeError: 'list' object has no attribute 'startswith'


Graham Dumpleton wrote:
> 
> On 12/07/2006, at 9:23 PM, Graham Dumpleton wrote:
> 
>>>> Module importing with mod_vampire is not working.  I get one of  
>>>> several old copies of the python program I am importing!
>>>>
>>>> Here is the relevant section of my httpd.conf file:
>>>> Alias /forums "/var/www/mod_python/forums"
>>>> <Directory /var/www/mod_python/forums>
>>>>   SetHandler python-program
>>>>   PythonHandler vampire
>>>>   PythonDebug On
>>>>   Options -MultiViews -Indexes
>>>>   PythonPath "['/var/www/mod_python/lib','/var/www/mod_python/ 
>>>> forums']+sys.path"
> 
> 
> When using Vampire, you shouldn't be listing handler directories in  
> sys.path
> and if you want to use Vampire "import" hook or vampire.importModule()
> then directories targeted by them should also not be in sys.path. Thus,
> would nearly always when using Vampire use:
> 
>   PythonPath 'sys.path'
> 
> This ensures that no extra directories are added to sys.path.
> 
>>>>   PythonOption VampireImportHooks On
>>>> </Directory>
>>>>
>>>> The python program in question "ticket.py" is in the /var/www/ 
>>>> mod_python/lib folder.  I have also moved it to the /var/www/ 
>>>> mod_python/forums folder.  The results are the same no matter  where 
>>>> it is.  The calling program is in the /var/www/mod_python/ forums 
>>>> folder, and it does this:
>>>>
>>>> import ticket
>>>> d = ticket.getData()
> 
> 
> Where in the calling program is this located? For the Vampire "import"
> hook to work, the "import" must be at global scope and executed on  module
> import and must not be contained within a function which is only getting
> executed when a specific request arrives.
> 
> If this is not done, then standard Python "import" mechanism would be
> getting used and thus you would see behaviour as I explained in first
> mail for when it is used.
> 
> Graham

From apocalypznow at gmail.com  Wed Jul 12 15:30:57 2006
From: apocalypznow at gmail.com (apocalypznow)
Date: Wed Jul 12 15:32:01 2006
Subject: [mod_python] Re: Module importing with mod_vampire
In-Reply-To: <e93ghc$she$1@sea.gmane.org>
References: <e92cue$r8m$1@sea.gmane.org>	<26DFF514-32D6-4AD0-B13F-D2AAB3471F30@dscpl.com.au>	<05206E74-E3DC-4288-A235-5F65E952F5EA@dscpl.com.au>	<929C4642-C1F9-4242-9036-12FBA7336472@dscpl.com.au>
	<e93ghc$she$1@sea.gmane.org>
Message-ID: <e93ilg$4mk$1@sea.gmane.org>

Oops, solved it.
Instead of using: ticket = vampire.importModule("ticket", 
path=["/some/directory"])
I am using: ticket = vampire.importModule("ticket", path="/some/directory")
which fixed the problem.


apocalypznow wrote:
> Thanks Graham.... I appreciate the clarity in your response.  I made the 
> necessary changes, and here is what I get as a result:
> 
> Mod_python error: "PythonHandler vampire"
> 
> Traceback (most recent call last):
> 
>   File "/usr/lib/python2.3/site-packages/mod_python/apache.py", line 
> 299, in HandlerDispatch
>     result = object(req)
> 
>   File "/usr/lib/python2.3/site-packages/vampire/lookup.py", line 709, 
> in _handler
>     module = _import(req,file)
> 
>   File "/usr/lib/python2.3/site-packages/vampire/lookup.py", line 54, in 
> _import
>     module = _moduleCache.importModule(name,directory,req)
> 
>   File "/usr/lib/python2.3/site-packages/vampire/cache.py", line 316, in 
> importModule
>     execfile(file,module.__dict__)
> 
>   File "/var/www/mod_python/forums/forum.py", line 8, in ?
>     ticket = vampire.importModule("ticket", 
> path=["/var/www/mod_python/lib"])
> 
>   File "/usr/lib/python2.3/site-packages/vampire/cache.py", line 161, in 
> importModule
>     path = os.path.normpath(path)
> 
>   File "/usr/lib/python2.3/posixpath.py", line 370, in normpath
>     initial_slashes = path.startswith('/')
> 
> AttributeError: 'list' object has no attribute 'startswith'
> 
> 
> Graham Dumpleton wrote:
> 
>>
>> On 12/07/2006, at 9:23 PM, Graham Dumpleton wrote:
>>
>>>>> Module importing with mod_vampire is not working.  I get one of  
>>>>> several old copies of the python program I am importing!
>>>>>
>>>>> Here is the relevant section of my httpd.conf file:
>>>>> Alias /forums "/var/www/mod_python/forums"
>>>>> <Directory /var/www/mod_python/forums>
>>>>>   SetHandler python-program
>>>>>   PythonHandler vampire
>>>>>   PythonDebug On
>>>>>   Options -MultiViews -Indexes
>>>>>   PythonPath "['/var/www/mod_python/lib','/var/www/mod_python/ 
>>>>> forums']+sys.path"
>>
>>
>>
>> When using Vampire, you shouldn't be listing handler directories in  
>> sys.path
>> and if you want to use Vampire "import" hook or vampire.importModule()
>> then directories targeted by them should also not be in sys.path. Thus,
>> would nearly always when using Vampire use:
>>
>>   PythonPath 'sys.path'
>>
>> This ensures that no extra directories are added to sys.path.
>>
>>>>>   PythonOption VampireImportHooks On
>>>>> </Directory>
>>>>>
>>>>> The python program in question "ticket.py" is in the /var/www/ 
>>>>> mod_python/lib folder.  I have also moved it to the /var/www/ 
>>>>> mod_python/forums folder.  The results are the same no matter  
>>>>> where it is.  The calling program is in the /var/www/mod_python/ 
>>>>> forums folder, and it does this:
>>>>>
>>>>> import ticket
>>>>> d = ticket.getData()
>>
>>
>>
>> Where in the calling program is this located? For the Vampire "import"
>> hook to work, the "import" must be at global scope and executed on  
>> module
>> import and must not be contained within a function which is only getting
>> executed when a specific request arrives.
>>
>> If this is not done, then standard Python "import" mechanism would be
>> getting used and thus you would see behaviour as I explained in first
>> mail for when it is used.
>>
>> Graham

From grahamd at dscpl.com.au  Wed Jul 12 18:02:19 2006
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Wed Jul 12 18:02:26 2006
Subject: [mod_python] Re: Module importing with mod_vampire
Message-ID: <1152741739.8663@dscpl.user.openhosting.com>

apocalypznow wrote ..
> Oops, solved it.
> Instead of using: ticket = vampire.importModule("ticket", 
> path=["/some/directory"])
> I am using: ticket = vampire.importModule("ticket", path="/some/directory")
> which fixed the problem.

Yeah, sorry. Got myself confused with apache.import_module() which
takes a list of directories whereas in Vampire the module importer
takes a single directory as string.

Graham
From dmharvey at math.harvard.edu  Thu Jul 13 20:46:09 2006
From: dmharvey at math.harvard.edu (David Harvey)
Date: Thu Jul 13 20:46:37 2006
Subject: [mod_python] module reloading
Message-ID: <4FA7039B-9963-4558-B88D-9F18225EFC6E@math.harvard.edu>

I'm having issues with ye olde module reloading.

i.e. modules don't reload, need to restart server, yadda yadda yadda.

Even touching all my .py and .pyc files doesn't seem to help... it  
still seems to require a restart.

I see there have been frequent posts about this issue on this list,  
and it sounds like it's not quite resolved yet.

I'm wondering if there's a simple line or two of code I can add to my  
entry point, before any importing happens, which will clean out the  
module cache? Just unload everything to force a reload of everything?  
That would work quite well for me during development.

Thanks

David

From grahamd at dscpl.com.au  Thu Jul 13 23:11:29 2006
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Thu Jul 13 23:11:35 2006
Subject: [mod_python] module reloading
Message-ID: <1152846689.3783@dscpl.user.openhosting.com>

David Harvey wrote ..
> I'm having issues with ye olde module reloading.
> 
> i.e. modules don't reload, need to restart server, yadda yadda yadda.
> 
> Even touching all my .py and .pyc files doesn't seem to help... it  
> still seems to require a restart.
> 
> I see there have been frequent posts about this issue on this list,  
> and it sounds like it's not quite resolved yet.
> 
> I'm wondering if there's a simple line or two of code I can add to my 
> entry point, before any importing happens, which will clean out the  
> module cache? Just unload everything to force a reload of everything? 
> That would work quite well for me during development.

Nothing that works reliably.

Rather than modify your Python code, some people during development will
setup Apache such that max requests per child is 1. That way a new process
is created for every request. It will be slow, but you are reasonably assured
that latest modules will be there.

The only other alternative is to use mod_python out of the subversion source
code repository trunk and enable the new module importer which addresses
the bulk of the problems with the existing module loader.

For background on current module importer problems, you should read:

  http://www.dscpl.com.au/articles/modpython-003.html

Graham
From mike at kleibi.de  Fri Jul 14 04:40:16 2006
From: mike at kleibi.de (Michael Kleiber)
Date: Fri Jul 14 04:43:24 2006
Subject: [mod_python] Session not working with mpm-prefork and only one
	server
Message-ID: <44B75870.1080601@kleibi.de>

Hi,

I need to use mpm-prefork because of sqlite and thread safety. I also 
want to use sessions but it appears that Sessions do not work with the 
preforking apache unless more than one server is started and therefore 
more than one session mutex is created at startup.

The error log gives me the following when using only on server:
	[Fri Jul 14 10:22:50 2006] [notice] child pid 13198 exit signal 
Floating point exception (8)

and I only get a blank page.

I just figured the solution out while writing the mail - just wanting to 
let everybody know in case the same problem comes up again.

Bye,
Mike
From grahamd at dscpl.com.au  Fri Jul 14 23:00:12 2006
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Fri Jul 14 23:00:59 2006
Subject: [mod_python] Session not working with mpm-prefork and only one
	server
In-Reply-To: <44B75870.1080601@kleibi.de>
References: <44B75870.1080601@kleibi.de>
Message-ID: <61C00626-5862-4CC6-B56E-08FB30DC2E42@dscpl.com.au>


On 14/07/2006, at 6:40 PM, Michael Kleiber wrote:

> Hi,
>
> I need to use mpm-prefork because of sqlite and thread safety. I  
> also want to use sessions but it appears that Sessions do not work  
> with the preforking apache unless more than one server is started  
> and therefore more than one session mutex is created at startup.

What do you mean by starting "more than one server"? Do you mean Apache
child processes? What Apache configuration are you using that you might
be trying to control this.

> The error log gives me the following when using only on server:
> 	[Fri Jul 14 10:22:50 2006] [notice] child pid 13198 exit signal  
> Floating point exception (8)
>
> and I only get a blank page.
>
> I just figured the solution out while writing the mail - just  
> wanting to let everybody know in case the same problem comes up again.

Other people have no problems with sessions when using prefork. You more
than likely have some problem with your machine configuration in  
respect of
mutex locks or some other area.

What version of mod_python  are you using? What command line options did
you use when you ran "configure" to build it, or did you use a RPM  
version?

Also, what sort of data are you trying to put into the session  
object? Do you
have multiple independent instances of Apache running on the same box
with both running mod_python?

Graham
From dmharvey at math.harvard.edu  Sat Jul 15 07:33:42 2006
From: dmharvey at math.harvard.edu (David Harvey)
Date: Sat Jul 15 07:34:15 2006
Subject: [mod_python] module reloading
In-Reply-To: <5.2.1.1.0.20060713184603.02bbeb10@pop.mail.yahoo.com>
References: <5.2.1.1.0.20060713184603.02bbeb10@pop.mail.yahoo.com>
Message-ID: <A227B72D-E198-4CCC-89B6-9210F705BC10@math.harvard.edu>


On Jul 13, 2006, at 11:11 PM, Graham Dumpleton wrote:

> ....

On Jul 14, 2006, at 2:00 PM, David MacQuigg wrote:

> ....


OK guys thanks for your help.


David

From sanjeevdivekar at gmail.com  Sat Jul 15 09:55:32 2006
From: sanjeevdivekar at gmail.com (Sanjeev Divekar)
Date: Sat Jul 15 09:55:40 2006
Subject: [mod_python] How to use Classes
Message-ID: <a98e5dcd0607150655o5ba02fc2n9db006f6bb45ed86@mail.gmail.com>

Hi guys

How can i use Classes in mod_python.
*************************************************************************
class myclass:
    def __init__():
        return "Hello"

    def index(req,para=''):
        tmpl = psp.PSP(req, filename='a.html')
        tmpl.run(vars={'para':para})
        return

    def show_data(req, para):
        msg = "Your first name is " + para[0]
        index(req, para=msg)
        return
*************************************************************************
Any good documentation/ebook/sample app on mod_pythong

-- 
Sanjeev Divekar
Sanmisha Technologies
Mobile : +91 9820427416
Email  : sanjeev@sanmisha.com
From grahamd at dscpl.com.au  Sat Jul 15 18:13:00 2006
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Sat Jul 15 18:13:13 2006
Subject: [mod_python] How to use Classes
In-Reply-To: <a98e5dcd0607150655o5ba02fc2n9db006f6bb45ed86@mail.gmail.com>
References: <a98e5dcd0607150655o5ba02fc2n9db006f6bb45ed86@mail.gmail.com>
Message-ID: <4E49B0F8-D11F-44C4-9D19-E04CC9DFA849@dscpl.com.au>


On 15/07/2006, at 11:55 PM, Sanjeev Divekar wrote:

> Hi guys
>
> How can i use Classes in mod_python.
> ********************************************************************** 
> ***
> class myclass:
>    def __init__():
>        return "Hello"
>
>    def index(req,para=''):
>        tmpl = psp.PSP(req, filename='a.html')
>        tmpl.run(vars={'para':para})
>        return
>
>    def show_data(req, para):
>        msg = "Your first name is " + para[0]
>        index(req, para=msg)
>        return
> ********************************************************************** 
> ***
> Any good documentation/ebook/sample app on mod_pythong

Ensuring you are using mod_python 3.2.8 or later, you can rewrite the
above sort of like the following.

class myclass:

    def _index(req,para=''):
        tmpl = psp.PSP(req, filename='a.html')
        tmpl.run(vars={'para':para})

    def __call_(req,para=""):
        self._index(req,para)

    def show_data(req, para):
        msg = "Your first name is " + para[0]
        self._index(req, para=msg)

   index = myclass()

Now, it is a bit unclear from your code what you actually expected  
to  be called
so to explain briefly.

1. Your code seemed to be tailored to using mod_python.publisher, so you
must be using that in example I present.

2. You must use mod_python 3.2.8 or later as earlier versions can  
complain
if None is returned from function.

3. You must actually create an instance of your class. Here I have  
named the
instance of the class "index" so that that is where the default URL  
will match.

Thus if this was in file "example.py", the URL 'example.py' would  
invoke the
__call__() method. In other words, the class instance must be a  
callable object.

If the URL is 'example.py/show_data', then the 'show_data()' method  
is called
instead.

4. I couldn't map your originally constructor to anything as not  
clear when
you expected it to be called.

In short, you need to create an instance of the class and once you  
have done
that URLs will magically map to member variables and member functions of
the class instance. If you want something to be hidden, you should  
prefix the
name of it with an underscore. Exception is '__call__()' method which  
is special
and applied when URL is mapped to object instance itself.

Go back and review the mod_python.publisher documentation on the
mod_python web site and see if it makes more sense now.

Graham





From grahamd at dscpl.com.au  Sat Jul 15 18:18:09 2006
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Sat Jul 15 18:18:28 2006
Subject: [mod_python] How to use Classes
In-Reply-To: <a98e5dcd0607150655o5ba02fc2n9db006f6bb45ed86@mail.gmail.com>
References: <a98e5dcd0607150655o5ba02fc2n9db006f6bb45ed86@mail.gmail.com>
Message-ID: <2EB0924D-750A-4D95-B256-E645BA3AF026@dscpl.com.au>


On 15/07/2006, at 11:55 PM, Sanjeev Divekar wrote:

> Hi guys
>
> How can i use Classes in mod_python.
> ********************************************************************** 
> ***
> class myclass:
>    def __init__():
>        return "Hello"
>
>    def index(req,para=''):
>        tmpl = psp.PSP(req, filename='a.html')
>        tmpl.run(vars={'para':para})
>        return
>
>    def show_data(req, para):
>        msg = "Your first name is " + para[0]
>        index(req, para=msg)
>        return

BTW, you are missing the 'self' parameter as first argument in your  
class
methods in the above. Forgot to fix that. If you don't understand,  
you may
want to review how to write classes in Python and work that out before
trying mod_python.

Graham
From mike at kleibi.de  Mon Jul 17 05:26:41 2006
From: mike at kleibi.de (Michael Kleiber)
Date: Mon Jul 17 05:26:50 2006
Subject: [mod_python] Session not working with mpm-prefork and only one
	server
In-Reply-To: <61C00626-5862-4CC6-B56E-08FB30DC2E42@dscpl.com.au>
References: <44B75870.1080601@kleibi.de>
	<61C00626-5862-4CC6-B56E-08FB30DC2E42@dscpl.com.au>
Message-ID: <44BB57D1.2040901@kleibi.de>


> Other people have no problems with sessions when using prefork. You more
> than likely have some problem with your machine configuration in 
> respect of
> mutex locks or some other area.
>
> What version of mod_python  are you using? What command line options did
> you use when you ran "configure" to build it, or did you use a RPM 
> version?
>
> Also, what sort of data are you trying to put into the session object? 
> Do you
> have multiple independent instances of Apache running on the same box
> with both running mod_python?
>
> Graham
>
I have tried the packaged version of apache, mod_python etc. of Ubuntu 
Dapper but have also compiled the newest version from source. I used the 
prefork module and wanted to control the started child processes. I used 
the following config:

<IfModule prefork.c>
StartServers         1
MinSpareServers      1
MaxSpareServers     1 (or 0 I can't remember exactly right now)
MaxClients          1
MaxRequestsPerChild  0
</IfModule>


Therefore I only had one child process running and only one mutex was 
created (from apache error log when starting the server). With this not 
even a simple Session() object could be created.

This was for my local test system where I did not want any extra (not 
needed) child processes. Not a likely config in any real environment but 
it gave me headaches for quite some time.

Mike
From jpg at jgassociates.ca  Mon Jul 17 07:53:11 2006
From: jpg at jgassociates.ca (Jim Gallacher)
Date: Mon Jul 17 07:53:22 2006
Subject: [mod_python] Session not working with mpm-prefork and only one
	server
In-Reply-To: <44BB57D1.2040901@kleibi.de>
References: <44B75870.1080601@kleibi.de>	<61C00626-5862-4CC6-B56E-08FB30DC2E42@dscpl.com.au>
	<44BB57D1.2040901@kleibi.de>
Message-ID: <44BB7A27.3010308@jgassociates.ca>

Michael Kleiber wrote:
> 
>> Other people have no problems with sessions when using prefork. You more
>> than likely have some problem with your machine configuration in
>> respect of
>> mutex locks or some other area.
>>
>> What version of mod_python  are you using? What command line options did
>> you use when you ran "configure" to build it, or did you use a RPM
>> version?
>>
>> Also, what sort of data are you trying to put into the session object?
>> Do you
>> have multiple independent instances of Apache running on the same box
>> with both running mod_python?
>>
>> Graham
>>
> I have tried the packaged version of apache, mod_python etc. of Ubuntu
> Dapper but have also compiled the newest version from source. I used the
> prefork module and wanted to control the started child processes. I used
> the following config:
> 
> <IfModule prefork.c>
> StartServers         1
> MinSpareServers      1
> MaxSpareServers     1 (or 0 I can't remember exactly right now)
> MaxClients          1
> MaxRequestsPerChild  0
> </IfModule>
> 
> 
> Therefore I only had one child process running and only one mutex was
> created (from apache error log when starting the server). With this not
> even a simple Session() object could be created.
> 
> This was for my local test system where I did not want any extra (not
> needed) child processes. Not a likely config in any real environment but
> it gave me headaches for quite some time.
> 

Try increasing the MaxClients to 2 or don't lock your sessions. You are
likely only creating one mutex at startup. The number of mutexes created
is based on the StartServers and MaxClients directives up to some
maximum number. Check your error.log at start up to confirm this.

[Mon Jul 17 07:40:58 2006] [notice] mod_python: Creating 8 session
mutexes based on 50 max processes and 0 max threads.

Session requires at least 2 mutexes, one of which is reserved for
locking the dbm file, and the rest for locking the session itself. For
testing you could try turning off locking when you create your session
instance, which should fix the problem.

sess = Session.Session(req, lock=0)

Since will only be making one request at a time when testing you don't
need to worry about any race conditions resulting from making multiple
requests for the same session data.

At times we have recommended that people use a configuration similar to
yours for testing, so I guess we really should increase the minimum
number of locks to 2 instead of 1.

Jim


From s.hum at rogers.com  Mon Jul 17 17:37:13 2006
From: s.hum at rogers.com (Steven Hum)
Date: Mon Jul 17 17:37:34 2006
Subject: [mod_python] Anyone get Darwin ports working on macosx (tiger)
Message-ID: <7E6F6BDB-DC81-4E06-841E-181DA4B21170@rogers.com>

Hi,

Installed Darwin ports for apache 2.2.e and mod_python 3.2.8 and get  
this in the error_log:

[Mon Jul 17 17:05:10 2006] [warn] Init: Session Cache is not  
configured [hint: SSLSessionCache]
[Mon Jul 17 17:05:12 2006] [notice] mod_python: Creating 8 session  
mutexes based on 256 max processes and 0 max threads.
[Mon Jul 17 17:05:12 2006] [notice] Digest: generating secret for  
digest authentication ...
[Mon Jul 17 17:05:12 2006] [notice] Digest: done
[Mon Jul 17 17:05:12 2006] [crit] (70023)This function has not been  
implemented on this platform: DBD: driver for  not available
[Mon Jul 17 17:05:12 2006] [crit] (70023)This function has not been  
implemented on this platform: DBD: failed to initialise
[Mon Jul 17 17:05:13 2006] [crit] (70023)This function has not been  
implemented on this platform: DBD: driver for  not available
[Mon Jul 17 17:05:13 2006] [crit] (70023)This function has not been  
implemented on this platform: DBD: failed to initialise
[Mon Jul 17 17:05:13 2006] [crit] (70023)This function has not been  
implemented on this platform: DBD: driver for  not available
[Mon Jul 17 17:05:13 2006] [crit] (70023)This function has not been  
implemented on this platform: DBD: failed to initialise
[Mon Jul 17 17:05:13 2006] [crit] (70023)This function has not been  
implemented on this platform: DBD: driver for  not available
[Mon Jul 17 17:05:13 2006] [crit] (70023)This function has not been  
implemented on this platform: DBD: failed to initialise
[Mon Jul 17 17:05:13 2006] [crit] (70023)This function has not been  
implemented on this platform: DBD: driver for  not available
[Mon Jul 17 17:05:13 2006] [crit] (70023)This function has not been  
implemented on this platform: DBD: failed to initialise
[Mon Jul 17 17:05:13 2006] [notice] Apache/2.2.2 (Unix) mod_ssl/2.2.2  
OpenSSL/0.9.8b DAV/2 mod_python/3.2.8 Python/2.4.3 configured --  
resuming normal operations

Not sure if the above errors are anything to be concerned about.

Added lines to the http.conf file:

LoadModule python_module modules/mod_python.so
<Location /mpinfo>
     SetHandler mod_python
     PythonHandler mod_python.testhandler
</Location>

In the apache2/htdocs/.htaccess have:

     AddHandler mod_python .py
     PythonHandler mptest.py
     PythonDebug On

In apache2/htdocs/mptest.py have:

from mod_python import apache
def handler(req):
	req.send_http_header()
	req.content_type = 'text/plain'
	req.write("Hello World!")
	return apache.OK

When I try http://localhost/mptest.py, I simply get the above python  
script listed in the browser and get in the error_log:

[Mon Jul 17 17:25:43 2006] [error] [client ::1] File does not exist: / 
opt/local/apache2/htdocs/favicon.ico
[Mon Jul 17 17:25:44 2006] [crit] (70023)This function has not been  
implemented on this platform: DBD: driver for  not available
[Mon Jul 17 17:25:44 2006] [crit] (70023)This function has not been  
implemented on this platform: DBD: failed to initialise
[Mon Jul 17 17:25:51 2006] [error] [client ::1] File does not exist: / 
opt/local/apache2/htdocs/favicon.ico

Not sure why the above url referenced the favicon.ico file. I put a  
favicon in the htdocs directory and when the url is reloaded, don't  
get any error messages but still only get the python source listed in  
the browser.

Any ideas?

Thanks in advance,
Steven Hum



-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20060717/f9c3d047/attachment.html
From grahamd at dscpl.com.au  Mon Jul 17 18:05:08 2006
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Mon Jul 17 18:05:14 2006
Subject: [mod_python] Anyone get Darwin ports working on macosx (tiger)
Message-ID: <1153173908.20940@dscpl.user.openhosting.com>

Steven Hum wrote ..
> Hi,
> 
> Installed Darwin ports for apache 2.2.e and mod_python 3.2.8 and get  
> this in the error_log:

Apache 2.2 does not work with mod_python 3.2.8, you must use Apache 2.0.X.

> In the apache2/htdocs/.htaccess have:
> 
>      AddHandler mod_python .py
>      PythonHandler mptest.py

Should be:

  PythonHandler mptest

>      PythonDebug On
> 
> In apache2/htdocs/mptest.py have:
> 
> from mod_python import apache
> def handler(req):
> 	req.send_http_header()
> 	req.content_type = 'text/plain'

The req.send_http_header() call is redundant on mod_python 3.X. Even when
being used with mod_python 2.X, the content type must have been set before
the call to req.send_http_header(). See:

  http://www.dscpl.com.au/articles/modpython-001.html

for a correct mptest example.

> 	req.write("Hello World!")
> 	return apache.OK
> 
> When I try http://localhost/mptest.py, I simply get the above python  
> script listed in the browser and get in the error_log:
> 
> [Mon Jul 17 17:25:43 2006] [error] [client ::1] File does not exist: /
> opt/local/apache2/htdocs/favicon.ico
> [Mon Jul 17 17:25:44 2006] [crit] (70023)This function has not been  
> implemented on this platform: DBD: driver for  not available
> [Mon Jul 17 17:25:44 2006] [crit] (70023)This function has not been  
> implemented on this platform: DBD: failed to initialise
> [Mon Jul 17 17:25:51 2006] [error] [client ::1] File does not exist: /
> opt/local/apache2/htdocs/favicon.ico
> 
> Not sure why the above url referenced the favicon.ico file. I put a  
> favicon in the htdocs directory and when the url is reloaded, don't  
> get any error messages but still only get the python source listed in 
> the browser.

The favicon.ico is requested by some web browsers. It is the small icon
the browser sticks to the left of the URL in the URL bar.

Graham
From mvanier at cs.caltech.edu  Mon Jul 17 22:46:08 2006
From: mvanier at cs.caltech.edu (mvanier)
Date: Mon Jul 17 22:46:19 2006
Subject: [mod_python] cannot configure mod_python 3.2.8
Message-ID: <44BC4B70.2030303@cs.caltech.edu>

I'm trying to compile mod_python 3.2.8 and was surprised to find it failing at 
the configure stage:

% configure --with-apxs=/usr/local/packages/apache/bin/apxs
checking for gcc... gcc
checking for C compiler default output file name... a.out
checking whether the C compiler works... yes
checking whether we are cross compiling... no
checking for suffix of executables...
checking for suffix of object files... o
checking whether we are using the GNU C compiler... yes
checking whether gcc accepts -g... yes
checking for gcc option to accept ANSI C... none needed
checking for ar... ar
checking for a BSD-compatible install... 
/usr/local/packages/coreutils/bin/install -c
checking whether make sets $(MAKE)... yes
checking for main in -lm... yes
checking for an ANSI C-conforming const... yes
checking your blood pressure... a bit high, but we can proceed
configure: checking whether apxs is available...
checking for --with-apxs... /usr/local/packages/apache/bin/apxs executable, good
checking Apache version... 2.2.2
checking for Apache libexec directory... /usr/local/packages/apache/modules
checking for Apache include directory... -I/usr/local/packages/apache/include
checking for --with-python... no
checking for python... /usr/local/packages/python/bin/python
checking Python version... 2.4
checking Python install prefix... /usr/local/packages/python
checking checking where python libraries are installed... 
/usr/local/packages/python/lib/python2.4
checking for Py_NewInterpreter in -lpython2.4... yes
checking what libraries Python was linked with... -lpython2.4   -lpthread -ldl 
-lutil   -lm
checking linker flags used to link Python...
checking where Python include files are... 
-I/usr/local/packages/python/include/python2.4
configure: line 3427: syntax error near unexpected token `('
configure: line 3427: `  as_lineno_3=`(expr $as_lineno_1 + 1) 2>/dev/null`'

My computer is running Debian Linux unstable, and python and apache have been 
compiled from source.  Does anyone know why this might be happening?

Thanks in advance,

Mike


From grahamd at dscpl.com.au  Mon Jul 17 22:56:58 2006
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Mon Jul 17 22:57:03 2006
Subject: [mod_python] cannot configure mod_python 3.2.8
Message-ID: <1153191418.16503@dscpl.user.openhosting.com>

See:

  http://issues.apache.org/jira/browse/MODPYTHON-122

Make changes to "configure" script as described therein.

Graham

mvanier wrote ..
> I'm trying to compile mod_python 3.2.8 and was surprised to find it failing
> at 
> the configure stage:
> 
> % configure --with-apxs=/usr/local/packages/apache/bin/apxs
> checking for gcc... gcc
> checking for C compiler default output file name... a.out
> checking whether the C compiler works... yes
> checking whether we are cross compiling... no
> checking for suffix of executables...
> checking for suffix of object files... o
> checking whether we are using the GNU C compiler... yes
> checking whether gcc accepts -g... yes
> checking for gcc option to accept ANSI C... none needed
> checking for ar... ar
> checking for a BSD-compatible install... 
> /usr/local/packages/coreutils/bin/install -c
> checking whether make sets $(MAKE)... yes
> checking for main in -lm... yes
> checking for an ANSI C-conforming const... yes
> checking your blood pressure... a bit high, but we can proceed
> configure: checking whether apxs is available...
> checking for --with-apxs... /usr/local/packages/apache/bin/apxs executable,
> good
> checking Apache version... 2.2.2
> checking for Apache libexec directory... /usr/local/packages/apache/modules
> checking for Apache include directory... -I/usr/local/packages/apache/include
> checking for --with-python... no
> checking for python... /usr/local/packages/python/bin/python
> checking Python version... 2.4
> checking Python install prefix... /usr/local/packages/python
> checking checking where python libraries are installed... 
> /usr/local/packages/python/lib/python2.4
> checking for Py_NewInterpreter in -lpython2.4... yes
> checking what libraries Python was linked with... -lpython2.4   -lpthread
> -ldl 
> -lutil   -lm
> checking linker flags used to link Python...
> checking where Python include files are... 
> -I/usr/local/packages/python/include/python2.4
> configure: line 3427: syntax error near unexpected token `('
> configure: line 3427: `  as_lineno_3=`(expr $as_lineno_1 + 1) 2>/dev/null`'
> 
> My computer is running Debian Linux unstable, and python and apache have
> been 
> compiled from source.  Does anyone know why this might be happening?
> 
> Thanks in advance,
> 
> Mike
> 
> 
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
From mvanier at cs.caltech.edu  Mon Jul 17 22:59:21 2006
From: mvanier at cs.caltech.edu (mvanier)
Date: Mon Jul 17 22:59:37 2006
Subject: [mod_python] cannot configure mod_python 3.2.8
In-Reply-To: <1153191418.16503@dscpl.user.openhosting.com>
References: <1153191418.16503@dscpl.user.openhosting.com>
Message-ID: <44BC4E89.7050607@cs.caltech.edu>

Got it.  It compiles now.  Thanks!  That sets a record for fast fixes ;-)

Mike

Graham Dumpleton wrote:
> See:
> 
>   http://issues.apache.org/jira/browse/MODPYTHON-122
> 
> Make changes to "configure" script as described therein.
> 
> Graham
> 
> mvanier wrote ..
>> I'm trying to compile mod_python 3.2.8 and was surprised to find it failing
>> at 
>> the configure stage:
>>
>> % configure --with-apxs=/usr/local/packages/apache/bin/apxs
>> checking for gcc... gcc
>> checking for C compiler default output file name... a.out
>> checking whether the C compiler works... yes
>> checking whether we are cross compiling... no
>> checking for suffix of executables...
>> checking for suffix of object files... o
>> checking whether we are using the GNU C compiler... yes
>> checking whether gcc accepts -g... yes
>> checking for gcc option to accept ANSI C... none needed
>> checking for ar... ar
>> checking for a BSD-compatible install... 
>> /usr/local/packages/coreutils/bin/install -c
>> checking whether make sets $(MAKE)... yes
>> checking for main in -lm... yes
>> checking for an ANSI C-conforming const... yes
>> checking your blood pressure... a bit high, but we can proceed
>> configure: checking whether apxs is available...
>> checking for --with-apxs... /usr/local/packages/apache/bin/apxs executable,
>> good
>> checking Apache version... 2.2.2
>> checking for Apache libexec directory... /usr/local/packages/apache/modules
>> checking for Apache include directory... -I/usr/local/packages/apache/include
>> checking for --with-python... no
>> checking for python... /usr/local/packages/python/bin/python
>> checking Python version... 2.4
>> checking Python install prefix... /usr/local/packages/python
>> checking checking where python libraries are installed... 
>> /usr/local/packages/python/lib/python2.4
>> checking for Py_NewInterpreter in -lpython2.4... yes
>> checking what libraries Python was linked with... -lpython2.4   -lpthread
>> -ldl 
>> -lutil   -lm
>> checking linker flags used to link Python...
>> checking where Python include files are... 
>> -I/usr/local/packages/python/include/python2.4
>> configure: line 3427: syntax error near unexpected token `('
>> configure: line 3427: `  as_lineno_3=`(expr $as_lineno_1 + 1) 2>/dev/null`'
>>
>> My computer is running Debian Linux unstable, and python and apache have
>> been 
>> compiled from source.  Does anyone know why this might be happening?
>>
>> Thanks in advance,
>>
>> Mike
>>
>>
>> _______________________________________________
>> Mod_python mailing list
>> Mod_python@modpython.org
>> http://mailman.modpython.org/mailman/listinfo/mod_python
From jjeffreyclose at yahoo.com  Mon Jul 17 23:23:26 2006
From: jjeffreyclose at yahoo.com (J. Jeffrey Close)
Date: Mon Jul 17 23:23:38 2006
Subject: [mod_python] cannot configure mod_python 3.2.8
In-Reply-To: <44BC4E89.7050607@cs.caltech.edu>
Message-ID: <20060718032326.20680.qmail@web52314.mail.yahoo.com>


I thought that this required apache 2.0 & did not allow 2.2 ?

Jeff



----- Original Message ----
From: mvanier <mvanier@cs.caltech.edu>
To: Graham Dumpleton <grahamd@dscpl.com.au>
Cc: mod_python@modpython.org
Sent: Monday, July 17, 2006 7:59:21 PM
Subject: Re: [mod_python] cannot configure mod_python 3.2.8

Got it.  It compiles now.  Thanks!  That sets a record for fast fixes ;-)

Mike

Graham Dumpleton wrote:
> See:
> 
>   http://issues.apache.org/jira/browse/MODPYTHON-122
> 
> Make changes to "configure" script as described therein.
> 
> Graham
> 
> mvanier wrote ..
>> I'm trying to compile mod_python 3.2.8 and was surprised to find it failing
>> at 
>> the configure stage:
>>
>> % configure --with-apxs=/usr/local/packages/apache/bin/apxs
>> checking for gcc... gcc
>> checking for C compiler default output file name... a.out
>> checking whether the C compiler works... yes
>> checking whether we are cross compiling... no
>> checking for suffix of executables...
>> checking for suffix of object files... o
>> checking whether we are using the GNU C compiler... yes
>> checking whether gcc accepts -g... yes
>> checking for gcc option to accept ANSI C... none needed
>> checking for ar... ar
>> checking for a BSD-compatible install... 
>> /usr/local/packages/coreutils/bin/install -c
>> checking whether make sets $(MAKE)... yes
>> checking for main in -lm... yes
>> checking for an ANSI C-conforming const... yes
>> checking your blood pressure... a bit high, but we can proceed
>> configure: checking whether apxs is available...
>> checking for --with-apxs... /usr/local/packages/apache/bin/apxs executable,
>> good
>> checking Apache version... 2.2.2
>> checking for Apache libexec directory... /usr/local/packages/apache/modules
>> checking for Apache include directory... -I/usr/local/packages/apache/include
>> checking for --with-python... no
>> checking for python... /usr/local/packages/python/bin/python
>> checking Python version... 2.4
>> checking Python install prefix... /usr/local/packages/python
>> checking checking where python libraries are installed... 
>> /usr/local/packages/python/lib/python2.4
>> checking for Py_NewInterpreter in -lpython2.4... yes
>> checking what libraries Python was linked with... -lpython2.4   -lpthread
>> -ldl 
>> -lutil   -lm
>> checking linker flags used to link Python...
>> checking where Python include files are... 
>> -I/usr/local/packages/python/include/python2.4
>> configure: line 3427: syntax error near unexpected token `('
>> configure: line 3427: `  as_lineno_3=`(expr $as_lineno_1 + 1) 2>/dev/null`'
>>
>> My computer is running Debian Linux unstable, and python and apache have
>> been 
>> compiled from source.  Does anyone know why this might be happening?
>>
>> Thanks in advance,
>>
>> Mike
>>
>>
>> _______________________________________________
>> Mod_python mailing list
>> Mod_python@modpython.org
>> http://mailman.modpython.org/mailman/listinfo/mod_python
_______________________________________________
Mod_python mailing list
Mod_python@modpython.org
http://mailman.modpython.org/mailman/listinfo/mod_python



From grahamd at dscpl.com.au  Mon Jul 17 23:46:22 2006
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Mon Jul 17 23:46:32 2006
Subject: [mod_python] cannot configure mod_python 3.2.8
Message-ID: <1153194381.11025@dscpl.user.openhosting.com>

J. Jeffrey Close wrote ..
> 
> I thought that this required apache 2.0 & did not allow 2.2 ?

Well spotted, I didn't notice that and just addressed the initial
presenting problem in relation to version of bash being used.
So yes, even once built and installed, they will probably find
that it doesn't work anyway because of Apache 2.0 not being
used.

FWIW, mod_python 3.2.10 which includes Apache 2.2 support
is real close now. We did actually have a mod_python 3.2.9 ready
to release, but some memory leaks were found at the last moment
and we felt it prudent to address them now rather than later.

Graham

> ----- Original Message ----
> From: mvanier <mvanier@cs.caltech.edu>
> To: Graham Dumpleton <grahamd@dscpl.com.au>
> Cc: mod_python@modpython.org
> Sent: Monday, July 17, 2006 7:59:21 PM
> Subject: Re: [mod_python] cannot configure mod_python 3.2.8
> 
> Got it.  It compiles now.  Thanks!  That sets a record for fast fixes ;-)
> 
> Mike
> 
> Graham Dumpleton wrote:
> > See:
> > 
> >   http://issues.apache.org/jira/browse/MODPYTHON-122
> > 
> > Make changes to "configure" script as described therein.
> > 
> > Graham
> > 
> > mvanier wrote ..
> >> I'm trying to compile mod_python 3.2.8 and was surprised to find it
> failing
> >> at 
> >> the configure stage:
> >>
> >> % configure --with-apxs=/usr/local/packages/apache/bin/apxs
> >> checking for gcc... gcc
> >> checking for C compiler default output file name... a.out
> >> checking whether the C compiler works... yes
> >> checking whether we are cross compiling... no
> >> checking for suffix of executables...
> >> checking for suffix of object files... o
> >> checking whether we are using the GNU C compiler... yes
> >> checking whether gcc accepts -g... yes
> >> checking for gcc option to accept ANSI C... none needed
> >> checking for ar... ar
> >> checking for a BSD-compatible install... 
> >> /usr/local/packages/coreutils/bin/install -c
> >> checking whether make sets $(MAKE)... yes
> >> checking for main in -lm... yes
> >> checking for an ANSI C-conforming const... yes
> >> checking your blood pressure... a bit high, but we can proceed
> >> configure: checking whether apxs is available...
> >> checking for --with-apxs... /usr/local/packages/apache/bin/apxs executable,
> >> good
> >> checking Apache version... 2.2.2
> >> checking for Apache libexec directory... /usr/local/packages/apache/modules
> >> checking for Apache include directory... -I/usr/local/packages/apache/include
> >> checking for --with-python... no
> >> checking for python... /usr/local/packages/python/bin/python
> >> checking Python version... 2.4
> >> checking Python install prefix... /usr/local/packages/python
> >> checking checking where python libraries are installed... 
> >> /usr/local/packages/python/lib/python2.4
> >> checking for Py_NewInterpreter in -lpython2.4... yes
> >> checking what libraries Python was linked with... -lpython2.4   -lpthread
> >> -ldl 
> >> -lutil   -lm
> >> checking linker flags used to link Python...
> >> checking where Python include files are... 
> >> -I/usr/local/packages/python/include/python2.4
> >> configure: line 3427: syntax error near unexpected token `('
> >> configure: line 3427: `  as_lineno_3=`(expr $as_lineno_1 + 1) 2>/dev/null`'
> >>
> >> My computer is running Debian Linux unstable, and python and apache
> have
> >> been 
> >> compiled from source.  Does anyone know why this might be happening?
> >>
> >> Thanks in advance,
> >>
> >> Mike
> >>
> >>
> >> _______________________________________________
> >> Mod_python mailing list
> >> Mod_python@modpython.org
> >> http://mailman.modpython.org/mailman/listinfo/mod_python
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
From wangyingqi at gmail.com  Tue Jul 18 03:01:44 2006
From: wangyingqi at gmail.com (wang yingqi)
Date: Tue Jul 18 03:01:51 2006
Subject: [mod_python] Difference between run the web service standalone and
	via mod_python
Message-ID: <3233dd550607180001x347a3ff3q784ab8032e1ad91@mail.gmail.com>

hi everyone!
some excellent python web framework has its own web-service instance,Just
like Quixote & Djanso, that means we can run our web service without Apache
etc.
so could anybody tell me what's the difference between these modes:1,run the
service standalone of the python web framework 2,attach the python web app
to Apache via mod_python..
thank u!
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20060718/68e2117f/attachment.html
From jpg at jgassociates.ca  Tue Jul 18 09:25:15 2006
From: jpg at jgassociates.ca (Jim Gallacher)
Date: Tue Jul 18 09:25:05 2006
Subject: [mod_python] Difference between run the web service standalone
	and	via mod_python
In-Reply-To: <3233dd550607180001x347a3ff3q784ab8032e1ad91@mail.gmail.com>
References: <3233dd550607180001x347a3ff3q784ab8032e1ad91@mail.gmail.com>
Message-ID: <44BCE13B.8020805@jgassociates.ca>

wang yingqi wrote:
> hi everyone!
> some excellent python web framework has its own web-service instance,Just
> like Quixote & Djanso, that means we can run our web service without Apache
> etc.
> so could anybody tell me what's the difference between these modes:1,run
> the
> service standalone of the python web framework 2,attach the python web app
> to Apache via mod_python..
> thank u!

Consider the following points:

1. Performance

The standalone servers will serve all content, including static content.
Since they are likely written in pure python, their performance for
static content likely be slower.

Whether this is an important factor will depend on the mix of static vs
dynamic content. If the ratio of static/dynamic is high, using apache +
mod_python will likely be better.

2. Server management

If the host is not running apache, it will be easier to use the
standalone server.

If the host is already running apache, it may be simpler to use
mod_python rather than managing a separate application server.

If the user wants multiple instances of the application, they will need
to run and manage additional standalone servers, as opposed to apache
where it will just be an extra configuration stanza.

There is also the issue of contention for port 80. What if you need
different standalone application servers such as Trac for issue tracking
and Quixote for some other web service. Only one of them will be able to
use port 80, while the other will need to use a non-standard port. This
could be a PITA, and indeed some corporate users may not be able to
access the second application due to firewall restrictions.

3. Virtual hosts

The standalone server may not support virtual hosts. To me this would be
a show stopper.

4. Apache goodness

There are a wealth of apache modules which may be useful, with no
equivalent in the standalone server.

Apache is robust. Some applications (such as Zope) recommend that the
Zope server be used behind apache as an extra bit of insurance against
the malicious requests. (Or at least this used to be the recommendation.
I don't follow Zope development anymore and this may have changed).

These comments may seem biased towards Apache, but then consider the
source - mod_python is an Apache module after all. ;)

Jim
From gjones at agroup.com  Tue Jul 18 10:56:01 2006
From: gjones at agroup.com (Gregory Jones)
Date: Tue Jul 18 10:56:48 2006
Subject: [mod_python] [SPAM] Setting a variable
Message-ID: <44BCF681.808@agroup.com>

Hello all,

I had a quick question. I come from the mod_perl world to the mod_python 
world. I am really enjoying mod_python and wanted to thank everyone who 
has put all the work into it. It is fun! Now, on to the question. I am 
curious how to set a variable inside the httpd.conf file. In mod_perl I 
could use PerlSetVar and then call that variable inside perl.

Example:

PerlModule My::Module
<Location /module>
    PerlSetVar my_variable 'variable value' ### This is what I am 
looking for
    SetHandler perl-script
    PerlHandler My::Module
    PerlSendHeader Off
</Location>

I looked through the documentation and searched the mailing list and 
didn't find any information on doing this same thing with mod_python. 
It, of course, doesn't mean it isn't there. Thanks!

-- 
Greg Jones
The A Group
615.373.6990 x 104
gjones@agroup.com

From richardlewis at fastmail.co.uk  Tue Jul 18 11:12:02 2006
From: richardlewis at fastmail.co.uk (Richard Lewis)
Date: Tue Jul 18 11:12:29 2006
Subject: [SPAM] [mod_python] [SPAM] Setting a variable
In-Reply-To: <44BCF681.808@agroup.com>
References: <44BCF681.808@agroup.com>
Message-ID: <200607181612.03625.richardlewis@fastmail.co.uk>

On Tuesday 18 July 2006 15:56, Gregory Jones wrote:
> Hello all,
>
> I had a quick question. I come from the mod_perl world to the mod_python
> world. I am really enjoying mod_python and wanted to thank everyone who
> has put all the work into it. It is fun! Now, on to the question. I am
> curious how to set a variable inside the httpd.conf file. In mod_perl I
> could use PerlSetVar and then call that variable inside perl.
>
> Example:
>
> PerlModule My::Module
> <Location /module>
>     PerlSetVar my_variable 'variable value' ### This is what I am
> looking for
>     SetHandler perl-script
>     PerlHandler My::Module
>     PerlSendHeader Off
> </Location>
>
I do this:

Apache configuration includes:

SetVar my_variable 'variable value'

Handler script includes:

def handler(req):
  req.add_common_vars()
  env_dict = req.subprocess_env

  val = env_dict['my_variable']


Cheers,
Richard
-- 
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
Richard Lewis
Sonic Arts Research Archive
http://www.sara.uea.ac.uk/
JID: ironchicken@jabber.earth.li
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
From tommys at eden.rutgers.edu  Tue Jul 18 11:39:02 2006
From: tommys at eden.rutgers.edu (Thomas J. Schirripa)
Date: Tue Jul 18 11:39:29 2006
Subject: [mod_python] Subclassing Session
Message-ID: <119489.125991153237141884.JavaMail.tomcat@roadmaster>

Before stating my problem, let me say that I am running apache version 2.0.52, mod_python 3.2.8, python 2.3, all on Redhat Enterprise Linux WS release 4.

I am making some basic web utilities that require that I create sessions. Essentially, I want to use session ids created by mod_python to create a session folder where I can temporarily dump files  and manipulate stuff so I can generate some output for the client. Since I would be using this feature a lot, I thought it would be a good idea to make a subclass of BaseSession that added this functionality of making a folder with the session name. I made a file located somewhere else on my machine called SessDirectory.py, and it defines the class SessionDirectory. The file looks like this:

from Session import BaseSession
import os

class SessionDirectory(BaseSession):
	def __init__(self, req, path=None, sid=None, secret=None, lock=1, timeout=0):
		BaseSession.__init__(self, req, sid, secret, lock, timeout)
		if path == None:
			self.absPath = os.path.join(os.getcwd(), sid)
		else:
			self.absPath = os.path.join(path, sid)
		os.mkdir(self.absPath, mode=0755)

It can take an absolute path to create the session directory, or it can take no path, in which case it creates the session directory in the current directory. When I try to instantiate the SessionDirectory object, the following exception is raised:

AttributeError: 'SessionDirectory' object has no attribute 'do_load'

I did some fishing around and looked at the source code of the session module. Apparently, BaseSession has a method called "load()" that makes a call to "do_load()". BaseSession does not define "do_load()", HOWEVER, it seems that the built in sublcasses of BaseSession (ie- FileSession, DbmSession, etc) all define a "do_load()" method.

My background is really in Java, and to me, it seems like BaseSession is an abstract class, but it has no signature for "do_load()" and I believe the exception would have been NotImplemented or something like that if there was a required implementation missing. 

Also, why does BaseSession inherit from "dict" and not "UserDict". I wanted to see if "dict" had a "do_load()" method, but if it did, then the instantiation of SessionDirectory should have called the "do_load()" from dict. 

Can anyone tell me what's going on?

Thanks,
Tom

From albrightk at gmail.com  Tue Jul 18 12:45:09 2006
From: albrightk at gmail.com (Kevin Albright)
Date: Tue Jul 18 12:45:13 2006
Subject: [mod_python] finding length of user file before uploading-revisit
Message-ID: <40d7e4970607180945j761b7a7fr3303967db86239c3@mail.gmail.com>

I am attempting Graham Dumpleton's solution (April 2006) to prevent uploads
of files that are deemed to large with the suggested handler he posted
(shown below).  I have the PythonFixupHandler listed before
mod_python.publisher as instructed in httpd.conf.  Trying this method, I
receive the message "upload too big" returned but only after finishing the
upload of the offending file (I am assuming that the Fixup handler is not
preventing publisher from uploading).  I appreciate any help or insight
others can offer.  Many thanks, Kevin

>>*   PythonFixupHandler check_for_large_uploads
*>>*   # check_for_large_uploads.py
*>>*   from mod_python import apache
*>>*   UPLOAD_LIMIT = 1000000
*>>*   def fixuphandler(req):
*>>*     length = int(req.headers_in.get("Content-Length", "0"))
*>>*     if length >= UPLOAD_LIMIT:
*>>*       req.content_type = 'text/plain'
*>>*       req.status = apache.HTTP_BAD_REQUEST
*>>*       req.write('upload too big\n')
*>>*       return apache.DONE
*>>*     return apache.OK*

>If you are using mod_python.publisher you choices thus are:

>
><Directory myserver/www/uploads>
>     SetHandler mod_python
>     PythonFixupHandler check_for_large_uploads
>     PythonHandler mod_python.publisher
>     ...
></Directory>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20060718/1e7b22af/attachment.html
From jpg at jgassociates.ca  Tue Jul 18 13:12:58 2006
From: jpg at jgassociates.ca (Jim Gallacher)
Date: Tue Jul 18 13:11:43 2006
Subject: [mod_python] Subclassing Session
In-Reply-To: <119489.125991153237141884.JavaMail.tomcat@roadmaster>
References: <119489.125991153237141884.JavaMail.tomcat@roadmaster>
Message-ID: <44BD169A.2000004@jgassociates.ca>

Thomas J. Schirripa wrote:
> Before stating my problem, let me say that I am running apache version 2.0.52, mod_python 3.2.8, python 2.3, all on Redhat Enterprise Linux WS release 4.
> 
> I am making some basic web utilities that require that I create sessions. Essentially, I want to use session ids created by mod_python to create a session folder where I can temporarily dump files  and manipulate stuff so I can generate some output for the client. Since I would be using this feature a lot, I thought it would be a good idea to make a subclass of BaseSession that added this functionality of making a folder with the session name. I made a file located somewhere else on my machine called SessDirectory.py, and it defines the class SessionDirectory. The file looks like this:
> 
> from Session import BaseSession
> import os
> 
> class SessionDirectory(BaseSession):
> 	def __init__(self, req, path=None, sid=None, secret=None, lock=1, timeout=0):
> 		BaseSession.__init__(self, req, sid, secret, lock, timeout)
> 		if path == None:
> 			self.absPath = os.path.join(os.getcwd(), sid)
> 		else:
> 			self.absPath = os.path.join(path, sid)
> 		os.mkdir(self.absPath, mode=0755)
> 
> It can take an absolute path to create the session directory, or it can take no path, in which case it creates the session directory in the current directory. When I try to instantiate the SessionDirectory object, the following exception is raised:
> 
> AttributeError: 'SessionDirectory' object has no attribute 'do_load'
> 
> I did some fishing around and looked at the source code of the session module. Apparently, BaseSession has a method called "load()" that makes a call to "do_load()". BaseSession does not define "do_load()", HOWEVER, it seems that the built in sublcasses of BaseSession (ie- FileSession, DbmSession, etc) all define a "do_load()" method.
> 
> My background is really in Java, and to me, it seems like BaseSession is an abstract class, but it has no signature for "do_load()" and I believe the exception would have been NotImplemented or something like that if there was a required implementation missing. 

This is a good suggestion, and it would make it easier to subclass
BaseSession if the following methods existed and raised NotImplemented.
 I suppose this info should be included in the docs as well and since I
have the magic powers required I shall make it so. :)

Offhand I'd say the 4 methods you'll need to implement are:

do_load()
do_save()
do_delete()
do_cleanup()

For your application do_delete and do_cleanup may be noop, as I'm sure
you'll want to preserve your data.

> 
> Also, why does BaseSession inherit from "dict" and not "UserDict". I wanted to see if "dict" had a "do_load()" method, but if it did, then the instantiation of SessionDirectory should have called the "do_load()" from dict. 

I'm not sure I get your point about the superiority of UserDict.
According to the python docs, inheriting from dict is preferred:

"""
UserDict -- Class wrapper for dictionary objects

Note: This module is available for backward compatibility only. If you
are writing code that does not need to work with versions of Python
earlier than Python 2.2, please consider subclassing directly from the
built-in dict type.
"""

Jim
From list at joreybump.com  Tue Jul 18 13:26:41 2006
From: list at joreybump.com (Jorey Bump)
Date: Tue Jul 18 13:26:52 2006
Subject: [mod_python] finding length of user file before uploading-revisit
In-Reply-To: <40d7e4970607180945j761b7a7fr3303967db86239c3@mail.gmail.com>
References: <40d7e4970607180945j761b7a7fr3303967db86239c3@mail.gmail.com>
Message-ID: <44BD19D1.4080603@joreybump.com>

Kevin Albright wrote:
> I am attempting Graham Dumpleton's solution (April 2006) to prevent 
> uploads of files that are deemed to large with the suggested handler he 
> posted (shown below).  I have the PythonFixupHandler listed before 
> mod_python.publisher as instructed in httpd.conf.  Trying this method, I 
> receive the message "upload too big" returned but only after finishing 
> the upload of the offending file (I am assuming that the Fixup handler 
> is not preventing publisher from uploading).  I appreciate any help or 
> insight others can offer.  Many thanks, Kevin

FWIW, I prefer to control this globally using Apache's LimitRequestBody 
directive in http.conf:

# limit size of uploads
# ~3MB
LimitRequestBody 3072000
# ~72K (for testing)
# LimitRequestBody 72000

This will apply to all uploads to the server, and can be used in more 
narrow contexts, if desired (virtual host, directory, .htaccess). As 
with the other method, it doesn't prevent the *browser* from uploading 
files of arbitrary size. No additional headers are added to announce 
this restriction in size (it would be too late, anyway, since the 
request has already been sent).
From deron.meranda at gmail.com  Tue Jul 18 13:34:14 2006
From: deron.meranda at gmail.com (Deron Meranda)
Date: Tue Jul 18 13:34:17 2006
Subject: [mod_python] finding length of user file before uploading-revisit
In-Reply-To: <40d7e4970607180945j761b7a7fr3303967db86239c3@mail.gmail.com>
References: <40d7e4970607180945j761b7a7fr3303967db86239c3@mail.gmail.com>
Message-ID: <5c06fa770607181034l10a84285l14488482a27c9aeb@mail.gmail.com>

On 7/18/06, Kevin Albright <albrightk@gmail.com> wrote:
> I am attempting Graham Dumpleton's solution (April 2006) to prevent uploads
> of files that are deemed to large with the suggested handler he posted
> (shown below).  I have the PythonFixupHandler listed before
> mod_python.publisher as instructed in httpd.conf.  Trying this method, I
> receive the message "upload too big" returned but only after finishing the
> upload of the offending file (I am assuming that the Fixup handler is not
> preventing publisher from uploading).  I appreciate any help or insight
> others can offer.  Many thanks, Kevin

Unfortunately neither HTTP or HTML have any way for the server
to inform the client about any length limitations it may impose.  It can
only react after the "upload" has begin.   There's nothing that
mod_python can do specifically to work around these HTTP
shortcomings.  But there are still some more things for you to do...

> >> ...
> >> length = int(req.headers_in.get("Content-Length", "0"))

Normally, it is optional for the client to send a Content-Length
header.  That's why the get() method here uses a default of 0.
However, the server is allowed to refuse requests that don't
specify a content length, by returning a 411 "Length Required"
error.  So you could do instead something like,

   length = req.headers_in.get("Content-Length")
   if length is None:
       req.status = apache.HTTP_LENGTH_REQUIRED
       return apache.DONE
   length = int(length)

Note that you should also probably only do any of this
checking for POST, PUT, or perhaps HEAD requests.

> >> if length >= UPLOAD_LIMIT:
> >>   req.content_type  = 'text/plain'
> >>   req.status = apache.HTTP_BAD_REQUEST

You should be returning a 413 "Request Entity Too Large"
error rather than a 400---which is the python constant:
    apache.HTTP_REQUEST_ENTITY_TOO_LARGE

> >>   req.write('upload too big\n')
> >>   return apache.DONE

Note that per the HTTP 1.1 RFC 2616 section 10.4.14 the
server is allowed to forcibly close the connection in this
condition, thereby immediately interrupting the continued
upload of data.  I'm not sure exactly how mod_python can
do that.
-- 
Deron Meranda
From tommys at eden.rutgers.edu  Tue Jul 18 13:35:45 2006
From: tommys at eden.rutgers.edu (Thomas J. Schirripa)
Date: Tue Jul 18 13:35:48 2006
Subject: [mod_python] Subclassing Session
Message-ID: <27776574.128901153244144731.JavaMail.tomcat@roadmaster>


Thanks for the help Jim. I just wanted to add that I am not really sure about the implementation of those 4 methods you suggested because they aren't in the docs, but I am going to take a look at the source code and figure out what they're doing.
Thanks again,
Tom


-----Original Message-----

> Date: Tue Jul 18 13:12:58 EDT 2006
> From: "Jim Gallacher" <jpg@jgassociates.ca>
> Subject: Re: [mod_python] Subclassing Session
> To: "Thomas J. Schirripa" <tommys@eden.rutgers.edu>
>
> Thomas J. Schirripa wrote:
> > Before stating my problem, let me say that I am running apache version 2.0.52, mod_python 3.2.8, python 2.3, all on Redhat Enterprise Linux WS release 4.
> > 
> > I am making some basic web utilities that require that I create sessions. Essentially, I want to use session ids created by mod_python to create a session folder where I can temporarily dump files  and manipulate stuff so I can generate some output for the client. Since I would be using this feature a lot, I thought it would be a good idea to make a subclass of BaseSession that added this functionality of making a folder with the session name. I made a file located somewhere else on my machine called SessDirectory.py, and it defines the class SessionDirectory. The file looks like this:
> > 
> > from Session import BaseSession
> > import os
> > 
> > class SessionDirectory(BaseSession):
> > 	def __init__(self, req, path=None, sid=None, secret=None, lock=1, timeout=0):
> > 		BaseSession.__init__(self, req, sid, secret, lock, timeout)
> > 		if path == None:
> > 			self.absPath = os.path.join(os.getcwd(), sid)
> > 		else:
> > 			self.absPath = os.path.join(path, sid)
> > 		os.mkdir(self.absPath, mode=0755)
> > 
> > It can take an absolute path to create the session directory, or it can take no path, in which case it creates the session directory in the current directory. When I try to instantiate the SessionDirectory object, the following exception is raised:
> > 
> > AttributeError: 'SessionDirectory' object has no attribute 'do_load'
> > 
> > I did some fishing around and looked at the source code of the session module. Apparently, BaseSession has a method called "load()" that makes a call to "do_load()". BaseSession does not define "do_load()", HOWEVER, it seems that the built in sublcasses of BaseSession (ie- FileSession, DbmSession, etc) all define a "do_load()" method.
> > 
> > My background is really in Java, and to me, it seems like BaseSession is an abstract class, but it has no signature for "do_load()" and I believe the exception would have been NotImplemented or something like that if there was a required implementation missing. 
> 
> This is a good suggestion, and it would make it easier to subclass
> BaseSession if the following methods existed and raised NotImplemented.
>  I suppose this info should be included in the docs as well and since I
> have the magic powers required I shall make it so. :)
> 
> Offhand I'd say the 4 methods you'll need to implement are:
> 
> do_load()
> do_save()
> do_delete()
> do_cleanup()
> 
> For your application do_delete and do_cleanup may be noop, as I'm sure
> you'll want to preserve your data.
> 
> > 
> > Also, why does BaseSession inherit from "dict" and not "UserDict". I wanted to see if "dict" had a "do_load()" method, but if it did, then the instantiation of SessionDirectory should have called the "do_load()" from dict. 
> 
> I'm not sure I get your point about the superiority of UserDict.
> According to the python docs, inheriting from dict is preferred:
> 
> """
> UserDict -- Class wrapper for dictionary objects
> 
> Note: This module is available for backward compatibility only. If you
> are writing code that does not need to work with versions of Python
> earlier than Python 2.2, please consider subclassing directly from the
> built-in dict type.
> """
> 
> Jim


From jpg at jgassociates.ca  Tue Jul 18 14:08:50 2006
From: jpg at jgassociates.ca (Jim Gallacher)
Date: Tue Jul 18 14:07:23 2006
Subject: [mod_python] Subclassing Session
In-Reply-To: <27776574.128901153244144731.JavaMail.tomcat@roadmaster>
References: <27776574.128901153244144731.JavaMail.tomcat@roadmaster>
Message-ID: <44BD23B2.5080005@jgassociates.ca>

Thomas J. Schirripa wrote:
> Thanks for the help Jim. I just wanted to add that I am not really sure about the implementation of those 4 methods you suggested because they aren't in the docs, but I am going to take a look at the source code and figure out what they're doing.
> Thanks again,
> Tom

They are just hooks that do the actual work for load(), save(), delete()
and cleanup(), all of which are documented. These documented methods do
some generic processing, and then call the respective do_* methods to
handle the lower level work specific to a particular session data store.

MemorySession is the simplest BaseSession subclass, so you might find it
helpful to examine its code first and use that as your template.

Jim

> 
> -----Original Message-----
> 
>> Date: Tue Jul 18 13:12:58 EDT 2006
>> From: "Jim Gallacher" <jpg@jgassociates.ca>
>> Subject: Re: [mod_python] Subclassing Session
>> To: "Thomas J. Schirripa" <tommys@eden.rutgers.edu>
>>
>> Thomas J. Schirripa wrote:
>>> Before stating my problem, let me say that I am running apache version 2.0.52, mod_python 3.2.8, python 2.3, all on Redhat Enterprise Linux WS release 4.
>>>
>>> I am making some basic web utilities that require that I create sessions. Essentially, I want to use session ids created by mod_python to create a session folder where I can temporarily dump files  and manipulate stuff so I can generate some output for the client. Since I would be using this feature a lot, I thought it would be a good idea to make a subclass of BaseSession that added this functionality of making a folder with the session name. I made a file located somewhere else on my machine called SessDirectory.py, and it defines the class SessionDirectory. The file looks like this:
>>>
>>> from Session import BaseSession
>>> import os
>>>
>>> class SessionDirectory(BaseSession):
>>> 	def __init__(self, req, path=None, sid=None, secret=None, lock=1, timeout=0):
>>> 		BaseSession.__init__(self, req, sid, secret, lock, timeout)
>>> 		if path == None:
>>> 			self.absPath = os.path.join(os.getcwd(), sid)
>>> 		else:
>>> 			self.absPath = os.path.join(path, sid)
>>> 		os.mkdir(self.absPath, mode=0755)
>>>
>>> It can take an absolute path to create the session directory, or it can take no path, in which case it creates the session directory in the current directory. When I try to instantiate the SessionDirectory object, the following exception is raised:
>>>
>>> AttributeError: 'SessionDirectory' object has no attribute 'do_load'
>>>
>>> I did some fishing around and looked at the source code of the session module. Apparently, BaseSession has a method called "load()" that makes a call to "do_load()". BaseSession does not define "do_load()", HOWEVER, it seems that the built in sublcasses of BaseSession (ie- FileSession, DbmSession, etc) all define a "do_load()" method.
>>>
>>> My background is really in Java, and to me, it seems like BaseSession is an abstract class, but it has no signature for "do_load()" and I believe the exception would have been NotImplemented or something like that if there was a required implementation missing. 
>> This is a good suggestion, and it would make it easier to subclass
>> BaseSession if the following methods existed and raised NotImplemented.
>>  I suppose this info should be included in the docs as well and since I
>> have the magic powers required I shall make it so. :)
>>
>> Offhand I'd say the 4 methods you'll need to implement are:
>>
>> do_load()
>> do_save()
>> do_delete()
>> do_cleanup()
>>
>> For your application do_delete and do_cleanup may be noop, as I'm sure
>> you'll want to preserve your data.
>>
>>> Also, why does BaseSession inherit from "dict" and not "UserDict". I wanted to see if "dict" had a "do_load()" method, but if it did, then the instantiation of SessionDirectory should have called the "do_load()" from dict. 
>> I'm not sure I get your point about the superiority of UserDict.
>> According to the python docs, inheriting from dict is preferred:
>>
>> """
>> UserDict -- Class wrapper for dictionary objects
>>
>> Note: This module is available for backward compatibility only. If you
>> are writing code that does not need to work with versions of Python
>> earlier than Python 2.2, please consider subclassing directly from the
>> built-in dict type.
>> """
>>
>> Jim
> 
> 
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
> 

From David.Bear at asu.edu  Tue Jul 18 14:19:55 2006
From: David.Bear at asu.edu (David Bear)
Date: Tue Jul 18 14:20:05 2006
Subject: [mod_python] need modpython developer
Message-ID: <20060718181955.GB12650@asu.edu>

I have started an application in modpython that I about 90 percent
done with. The unit in our college wants it done faster than I am
able. I wonder if there is anyone on this list that might be interested
in a little contract work.
-- 
David Bear
phone: 	602-496-0424
fax: 	602-496-0955
College of Public Programs/ASU
University Center Rm 622
411 N Central
Phoenix, AZ 85007-0685
 "Beware the IP portfolio, everyone will be suspect of trespassing"
From szybalski at gmail.com  Tue Jul 18 15:54:04 2006
From: szybalski at gmail.com (Lukasz Szybalski)
Date: Tue Jul 18 15:54:09 2006
Subject: [mod_python] POST/GET using PSP
Message-ID: <804e5c70607181254r7c1f5f4k429b76131b78b671@mail.gmail.com>

Hello,
I am trying to display folders using PSP
<html>
<%
import os
%>
<%=os.getcwd()%>
<%
for i in os.listdir("/"):
%><a href=""><%=i
%></a>
<br>

</html>

Now i would like it to change folder when clicked on one.
so let say we want to go to /etc. The easies way i see it is to use
POST. Add variable /etc to address on top and then read it in when
page is refreshed.
How do i append "/etc" (http://localhost/index.psp?/etc ???) to the
address and how do i read in the variable "/etc" from address bar
using PSP

Thank you
Lucas
From deron.meranda at gmail.com  Tue Jul 18 16:31:42 2006
From: deron.meranda at gmail.com (Deron Meranda)
Date: Tue Jul 18 16:31:46 2006
Subject: [mod_python] POST/GET using PSP
In-Reply-To: <804e5c70607181254r7c1f5f4k429b76131b78b671@mail.gmail.com>
References: <804e5c70607181254r7c1f5f4k429b76131b78b671@mail.gmail.com>
Message-ID: <5c06fa770607181331g46d12b51h918e683a661a49ae@mail.gmail.com>

On 7/18/06, Lukasz Szybalski <szybalski@gmail.com> wrote:
> I am trying to display folders using PSP
> [...code deleted...]
> Now i would like it to change folder when clicked on one.
> so let say we want to go to /etc. The easies way i see it is to use
> POST. Add variable /etc to address on top and then read it in when
> page is refreshed.
> How do i append "/etc" (http://localhost/index.psp?/etc ???) to the
> address and how do i read in the variable "/etc" from address bar
> using PSP

You probably want to use GET, not POST.  The difference is in
the semantics.  What you are doing is retrieving a directory
listing, you are not updating a resource.  And GET is going to
be a lot easier too.

Generally what you are doing is mapping a virtual URL
namespace into a filesystem namespace.  (Of course this is
what Apache itself is very good at doing, so you should have
a good reason to do it yourself...of which, "just experiementing"
may be a good reason).

Anyway the basic way you go about doing that is to first, generate
<a href="..."> links which have the "path" appended to the base
url.  Then you need a handler at the base url which always gets
invoked; which in turn pulls off the extra url path, and interprets it
directly.

Also, you may want to do a bit of research on the so-called
REST pattern.  Start here:
http://en.wikipedia.org/wiki/Representational_State_Transfer

All that being said, one word of caution...it is very easy to
compromize your system security if you are not careful.  You
should not allow any mapping to result in an absolute URL, and
should trap against the use of directory components such as "..".
-- 
Deron Meranda
From grahamd at dscpl.com.au  Tue Jul 18 18:24:34 2006
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Tue Jul 18 18:24:40 2006
Subject: [mod_python] Setting a variable
Message-ID: <1153261474.9718@dscpl.user.openhosting.com>

Richard Lewis wrote ..
> On Tuesday 18 July 2006 15:56, Gregory Jones wrote:
> > Hello all,
> >
> > I had a quick question. I come from the mod_perl world to the mod_python
> > world. I am really enjoying mod_python and wanted to thank everyone who
> > has put all the work into it. It is fun! Now, on to the question. I am
> > curious how to set a variable inside the httpd.conf file. In mod_perl
> I
> > could use PerlSetVar and then call that variable inside perl.
> >
> > Example:
> >
> > PerlModule My::Module
> > <Location /module>
> >     PerlSetVar my_variable 'variable value' ### This is what I am
> > looking for
> >     SetHandler perl-script
> >     PerlHandler My::Module
> >     PerlSendHeader Off
> > </Location>
> >
> I do this:
> 
> Apache configuration includes:
> 
> SetVar my_variable 'variable value'
> 
> Handler script includes:
> 
> def handler(req):
>   req.add_common_vars()
>   env_dict = req.subprocess_env
> 
>   val = env_dict['my_variable']

A mod_python specific way of doing this is to use the directive:

  PythonOption my_variable 'variable value'

In the handler you then access it as:

  def handler(req):
    val = req.get_options()['my_variable']

You are highly encouraged to use namespace prefixes for your
option names so they don't conflict with other packages (including
mod_python at the moment), which have created names with
effective global scope. For example:

  PythonOption mystuff.variable 'variable value'

Graham

From grahamd at dscpl.com.au  Tue Jul 18 18:41:19 2006
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Tue Jul 18 18:41:23 2006
Subject: [mod_python] POST/GET using PSP
Message-ID: <1153262478.24349@dscpl.user.openhosting.com>

Lukasz Szybalski wrote ..
> Hello,
> I am trying to display folders using PSP
> <html>
> <%
> import os
> %>
> <%=os.getcwd()%>

Don't rely on os.getcwd() returning anything sensible, also don't
rely on being able to use os.chdir(). The general rule is that no
Apache handler should change the working directory or rely on
the current working directory being set to a particular value. This
is because if they did, they would all interfere with each other.
The problem is made much worse if a multithreaded Apache MPM
is being used as you can't even guarantee that if you change the
working directory at the start of a handler that it will stay that
way for the length of time the handler is executing.

Graham

> <%
> for i in os.listdir("/"):
> %><a href=""><%=i
> %></a>
> <br>
> 
> </html>
> 
> Now i would like it to change folder when clicked on one.
> so let say we want to go to /etc. The easies way i see it is to use
> POST. Add variable /etc to address on top and then read it in when
> page is refreshed.
> How do i append "/etc" (http://localhost/index.psp?/etc ???) to the
> address and how do i read in the variable "/etc" from address bar
> using PSP
> 
> Thank you
> Lucas
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
From mvanier at cs.caltech.edu  Tue Jul 18 20:11:12 2006
From: mvanier at cs.caltech.edu (mvanier)
Date: Tue Jul 18 20:11:32 2006
Subject: [mod_python] APR_STATUS_IS_SUCCESS missing
Message-ID: <44BD78A0.7060007@cs.caltech.edu>

Hi,

I saw this problem discussed in the mailing list, but without a solution.  I'm 
running apache httpd 2.2.2 and mod_python 3.2.8 (both compiled from source) on 
Debian Linux unstable, and when I start the server I get this:

httpd: Syntax error on line 54 of /usr/local/packages/apache/conf/httpd.conf: 
Cannot load /usr/local/packages/apache/modules/mod_python.so into server: 
/usr/local/packages/apache/modules/mod_python.so: undefined symbol: 
APR_STATUS_IS_SUCCESS

Any ideas on how to deal with this?  BTW I looked for information on how to get 
the latest SVN versions of mod_python (in case it's fixed there) but didn't find 
any, so if anyone can tell me how to do that I'd appreciate it.

Thanks in advance,

Mike

From list at joreybump.com  Tue Jul 18 20:38:07 2006
From: list at joreybump.com (Jorey Bump)
Date: Tue Jul 18 20:38:11 2006
Subject: [mod_python] APR_STATUS_IS_SUCCESS missing
In-Reply-To: <44BD78A0.7060007@cs.caltech.edu>
References: <44BD78A0.7060007@cs.caltech.edu>
Message-ID: <44BD7EEF.2060904@joreybump.com>

mvanier wrote:

> I saw this problem discussed in the mailing list, but without a 
> solution.  I'm running apache httpd 2.2.2 and mod_python 3.2.8 (both 
> compiled from source) on Debian Linux unstable, and when I start the 
> server I get this:
> 
> httpd: Syntax error on line 54 of 
> /usr/local/packages/apache/conf/httpd.conf: Cannot load 
> /usr/local/packages/apache/modules/mod_python.so into server: 
> /usr/local/packages/apache/modules/mod_python.so: undefined symbol: 
> APR_STATUS_IS_SUCCESS
> 
> Any ideas on how to deal with this?  BTW I looked for information on how 
> to get the latest SVN versions of mod_python (in case it's fixed there) 
> but didn't find any, so if anyone can tell me how to do that I'd 
> appreciate it.

If you search, you'll find patches I and others submitted, but I highly 
suggest you wait for 3.2.10, which has support for Apache 2.2.

mod_python 3.2.9 is working well on my Apache 2.2 machines, but its 
release is being skipped due to a memory leak.


From mvanier at cs.caltech.edu  Wed Jul 19 04:30:44 2006
From: mvanier at cs.caltech.edu (mvanier)
Date: Wed Jul 19 04:32:13 2006
Subject: [mod_python] mod_python calls the wrong python executable
Message-ID: <44BDEDB4.1050201@cs.caltech.edu>

I'm trying to run mod_python using the latest mod_python snapshot with apache 
2.2 (compiled from source) on Debian Linux.  I've run into a strange error: when 
I try to run a python script through the server, the wrong python executable 
gets called.  Here's the apache error log:

[Wed Jul 19 01:21:25 2006] [error] make_obcallback: could not import 
mod_python.apache.\n
ImportError: No module named mod_python.apache
[Wed Jul 19 01:21:25 2006] [error] make_obcallback: Python path being used 
"['/usr/lib/python24.zip', '/usr/lib/python2.4', 
'/usr/lib/python2.4/plat-linux2', '/usr/lib/python2.4/lib-tk', 
'/usr/lib/python2.4/lib-dynload', '/usr/local/lib/python2.4/site-packages', 
'/usr/lib/python2.4/site-packages', '/usr/lib/python2.4/site-packages/PIL', 
'/var/lib/python-support/python2.4', '/usr/lib/site-python']".
[Wed Jul 19 01:21:25 2006] [error] get_interpreter: no interpreter callback found.
[Wed Jul 19 01:21:25 2006] [error] [client 127.0.0.1] python_handler: Can't 
get/create interpreter.

The sys.path of this python interpreter is the one that would exist if 
/usr/bin/python2.4 (which was installed by Debian) was called instead of the 
correct one, which (in my case) is /usr/local/packages/python/bin/python (which 
I compiled and installed myself from source).  I specified this executable when 
I configured mod_python (using the --with-python option).  For some reason, 
though, it isn't getting used.  Any ideas would be appreciated.

This is my third mod-python-not-working post to this mailing list in a couple of 
days; I apologize for all the questions, but it's been pretty frustrating.

Mike



From richardlewis at fastmail.co.uk  Wed Jul 19 04:46:44 2006
From: richardlewis at fastmail.co.uk (Richard Lewis)
Date: Wed Jul 19 04:47:00 2006
Subject: [mod_python] mod_python calls the wrong python executable
In-Reply-To: <44BDEDB4.1050201@cs.caltech.edu>
References: <44BDEDB4.1050201@cs.caltech.edu>
Message-ID: <200607190946.45180.richardlewis@fastmail.co.uk>

On Wednesday 19 July 2006 09:30, mvanier wrote:
> I'm trying to run mod_python using the latest mod_python snapshot with
> apache 2.2 (compiled from source) on Debian Linux.
> 
> The sys.path of this python interpreter is the one that would exist if
> /usr/bin/python2.4 (which was installed by Debian) was called instead of
> the correct one, which (in my case) is
> /usr/local/packages/python/bin/python (which I compiled and installed
> myself from source).  I specified this executable when I configured
> mod_python (using the --with-python option).  For some reason, though, it
> isn't getting used.  Any ideas would be appreciated.
>
I know this doesn't answer your specific query, but if you're using Debian, 
why not just go

# apt-get install libapache2-mod-python2.4

Cheers,
Richard
-- 
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
Richard Lewis
Sonic Arts Research Archive
http://www.sara.uea.ac.uk/
JID: ironchicken@jabber.earth.li
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
From martijn at xs4us.nu  Wed Jul 19 05:41:55 2006
From: martijn at xs4us.nu (Martijn Moeling)
Date: Wed Jul 19 05:42:01 2006
Subject: [mod_python] modpython, mysqldb best paractice
Message-ID: <B6C73A5E30565245BB6D32B5F5DF7A520BEC85@sense.emmastraat.pijnacker>

Hi all,

 

I started the development of a specific kind of CMS over 2 years ago,
and due to sparse documentation I am still puzzled about a few things.

Basically it consist of one .py and a mysqldatabase with all the data
and templates, ALL pages are generated on the fly.

 

First of all I am confused about PythonInterPerDirectory and
PythonInterpPerDirectory

In the way I use modpython.

 

My apache has no configured virtual hosts since my CMS can handle this
on its own by looking at req.host

On one site which is running on my system ( http://www.mkbok.nl
<http://www.mkbok.nl/>  ) we use different subdomains, so basically 

the page to be build is derived from the req.host (e.g.
xxx.yyy.mkbok.nl) where xxx and yyy are variable. 

This is done by DNS records like   *     A      ip1.ip2.ip3.ip4

 

My next problem seems mysql and mysqldb.

Since I do not know which website is requested (multiple are running on
that server) I open a database connection, do my stuff and close the
connection, 

Again the database selection comes from req.host, and here the
domainname is used for database selection.

 

The system runs extremely well, but once in a while the webserver
becomes so busy that it does not respond to page request anymore. 

We suspect that mysql is the problem here since the only thing we can
see is mysql is consuming more and more swapspace and at some point it
runs out of resources and starts looping. At that point the system
(Linux) keeps running but with a 100% cpu utilization and we are unable
to login and investigate. 

So logging in to the UPS remotely and power down the system by virtually
unplugging the cable is the only (and BAD) solution.

 

So what is best practice when you have to connect to mysql with mysqldb
in a mod_python environment keeping in mind that the database connection
has to be build every time a visitor requests a page? Think in terms of
a "globally" available db or db.cursor connection.

Since global variables are troublesome in the .py contaning the handler
I use a class from which an instance is created every time a client
connects and the DB connection is global to that class, ist that wrong?

 

What happenens if mod_python finds an error before my mysqldb connection
is closed (not that this happenes a lot, but it does happen, sorry)

 

Also I do not understand the req.register_cleanup() method, what is
cleaned up and what not?

 

Martijn

  

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20060719/40cc3f3f/attachment-0001.html
From grahamd at dscpl.com.au  Wed Jul 19 05:58:41 2006
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Wed Jul 19 05:58:59 2006
Subject: [mod_python] mod_python calls the wrong python executable
In-Reply-To: <44BDEDB4.1050201@cs.caltech.edu>
References: <44BDEDB4.1050201@cs.caltech.edu>
Message-ID: <3E4A4994-C82F-4AB9-A964-67B224F28232@dscpl.com.au>


On 19/07/2006, at 6:30 PM, mvanier wrote:

> I'm trying to run mod_python using the latest mod_python snapshot  
> with apache 2.2 (compiled from source) on Debian Linux.  I've run  
> into a strange error: when I try to run a python script through the  
> server, the wrong python executable gets called.  Here's the apache  
> error log:
>
> [Wed Jul 19 01:21:25 2006] [error] make_obcallback: could not  
> import mod_python.apache.\n
> ImportError: No module named mod_python.apache
> [Wed Jul 19 01:21:25 2006] [error] make_obcallback: Python path  
> being used "['/usr/lib/python24.zip', '/usr/lib/python2.4', '/usr/ 
> lib/python2.4/plat-linux2', '/usr/lib/python2.4/lib-tk', '/usr/lib/ 
> python2.4/lib-dynload', '/usr/local/lib/python2.4/site-packages', '/ 
> usr/lib/python2.4/site-packages', '/usr/lib/python2.4/site-packages/ 
> PIL', '/var/lib/python-support/python2.4', '/usr/lib/site-python']".
> [Wed Jul 19 01:21:25 2006] [error] get_interpreter: no interpreter  
> callback found.
> [Wed Jul 19 01:21:25 2006] [error] [client 127.0.0.1]  
> python_handler: Can't get/create interpreter.
>
> The sys.path of this python interpreter is the one that would exist  
> if /usr/bin/python2.4 (which was installed by Debian) was called  
> instead of the correct one, which (in my case) is /usr/local/ 
> packages/python/bin/python (which I compiled and installed myself  
> from source).  I specified this executable when I configured  
> mod_python (using the --with-python option).  For some reason,  
> though, it isn't getting used.  Any ideas would be appreciated.

At least you triggered the new debug output specifically put into  
mod_python
3.2.9/3.3 to help debug this sort of problem.

Anyway, try ensuring that you have "/usr/local/paclages/python/bin"  
first in the
PATH environment variable of the user that Apache is run as. If you  
don't and
when Python is initialised in the context of mod_python, it finds  
evidence first
of Python being installed in some other location instead of the one  
you want,
then it will setup sys.path based on the location of that other  
version of Python
and thus not look where you actually installed the Python components of
mod_python.

BTW, does /usr/bin/python or /usr/lib/python2.4 actually exist.

Graham
From grahamd at dscpl.com.au  Wed Jul 19 06:38:00 2006
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Wed Jul 19 06:38:06 2006
Subject: [mod_python] Talk on what is coming in mod_python 3.3.
Message-ID: <6D8DE5A0-AA52-449A-BEA4-5C38EF3687B9@dscpl.com.au>

Some may think it a bit premature, but I have offered to do a short talk
on what is coming in mod_python 3.3 at our local Python group. On the
off chance that anyone on this list is located in Sydney Australia,  
or will
be there next week, you might like to drop in. The announcement is
included below, although I do question whether the venue is 1km from
both Central and Redfern stations. I could understand it if they meant
Redfern and Newtown stations. I think I'll catch the bus though, Redfern
isn't exactly the safest place to walk at night. :-)



The Sydney Python group is having its first meeting for the year on
Thursday July 27.

Usual time and new place:

Thursday, July 27, 2006  (6:30 PM - 8:30 PM)

The "new" University of Sydney School of IT Building.

Thanks to Bob Kummerfeld for arranging this.

The venue is approx 1 km from both Central and Redfern stations.

Use the entrance from the University side, not the Cleveland St side.
If you come from City Rd, enter the Seymour Centre forecourt and
follow the curve of the new building down to the foyer entrance.

http://www.cs.usyd.edu.au/~dasymond/index.cgi?p=Map

Please reply to this message (or click the appropriate radio button on
http://upcoming.org/event/89388) if you will be coming.

Talks:

Graham Dumpeton on what is coming in the next major version of
mod_python (3.3). This version of mod_python should represent a
significant improvement over previous versions in certain areas with
ramifications on stability. New features have also been added which
make mod_python a bit more flexible than it is now and more useable
in the way that Apache modules should be able to be used. Result
is that mod_python can truly be used for more than just a jumping off
point for stuff like WSGI and all those Python web frameworks that
keep popping up every day.

Mark Rees on his experiences in using IronPython with .NET and Mono.

The talks will be 15-20 minutes in length with plenty of time for
questions.

See you there.


Graham
From grahamd at dscpl.com.au  Wed Jul 19 06:55:54 2006
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Wed Jul 19 06:56:00 2006
Subject: [mod_python] mod_python calls the wrong python executable
In-Reply-To: <44BE0966.2050905@cs.caltech.edu>
References: <44BDEDB4.1050201@cs.caltech.edu>
	<3E4A4994-C82F-4AB9-A964-67B224F28232@dscpl.com.au>
	<44BE0966.2050905@cs.caltech.edu>
Message-ID: <615A2F2A-0EA0-4ED7-8053-7B4ACF453B04@dscpl.com.au>


On 19/07/2006, at 8:28 PM, mvanier wrote:

> OK, I figured it out thanks to your hint.  What I hadn't realized  
> (or had forgotten) is that apache has to run as root (at least  
> initially), and my compiled-from-source python wasn't in the root  
> path.  As it turned out, the root path includes /usr/local/bin so I  
> added a symlink to my python from there and everything works.  Woo  
> hoo!
>
> Would it be feasible to have a PythonExecutable httpd.conf  
> directive to deal with this problem more explicitly?  I'm still not  
> clear on how mod_python tells apache that it's supposed to be using  
> the "python" program to execute python code

Not necessarily that simple. The manner in which the Python libraries
determine where to look is quite complicated. See:

   Modules/getpath.c

in Python source code. Thus, although you could try and implement a
directive to tell it where to look, you have to get it to use your value
somehow. I haven't looked at it properly, but you may be able to have
the directive trigger the setting of the PYTHONHOME environment
variable to achieve it.

I have deferred trying to implement such a thing in the past as we  
weren't
able to understand what was happening. This was the point of adding the
extra debug output in new versions. Based on what we see from cases like
yours we can decide whether we do need such a directive as PythonHome
or equivalent.

Graham

> Mike
>
> Graham Dumpleton wrote:
>> On 19/07/2006, at 6:30 PM, mvanier wrote:
>>> I'm trying to run mod_python using the latest mod_python snapshot  
>>> with apache 2.2 (compiled from source) on Debian Linux.  I've run  
>>> into a strange error: when I try to run a python script through  
>>> the server, the wrong python executable gets called.  Here's the  
>>> apache error log:
>>>
>>> [Wed Jul 19 01:21:25 2006] [error] make_obcallback: could not  
>>> import mod_python.apache.\n
>>> ImportError: No module named mod_python.apache
>>> [Wed Jul 19 01:21:25 2006] [error] make_obcallback: Python path  
>>> being used "['/usr/lib/python24.zip', '/usr/lib/python2.4', '/usr/ 
>>> lib/python2.4/plat-linux2', '/usr/lib/python2.4/lib-tk', '/usr/ 
>>> lib/python2.4/lib-dynload', '/usr/local/lib/python2.4/site- 
>>> packages', '/usr/lib/python2.4/site-packages', '/usr/lib/ 
>>> python2.4/site-packages/PIL', '/var/lib/python-support/ 
>>> python2.4', '/usr/lib/site-python']".
>>> [Wed Jul 19 01:21:25 2006] [error] get_interpreter: no  
>>> interpreter callback found.
>>> [Wed Jul 19 01:21:25 2006] [error] [client 127.0.0.1]  
>>> python_handler: Can't get/create interpreter.
>>>
>>> The sys.path of this python interpreter is the one that would  
>>> exist if /usr/bin/python2.4 (which was installed by Debian) was  
>>> called instead of the correct one, which (in my case) is /usr/ 
>>> local/packages/python/bin/python (which I compiled and installed  
>>> myself from source).  I specified this executable when I  
>>> configured mod_python (using the --with-python option).  For some  
>>> reason, though, it isn't getting used.  Any ideas would be  
>>> appreciated.
>> At least you triggered the new debug output specifically put into  
>> mod_python
>> 3.2.9/3.3 to help debug this sort of problem.
>> Anyway, try ensuring that you have "/usr/local/paclages/python/ 
>> bin" first in the
>> PATH environment variable of the user that Apache is run as. If  
>> you don't and
>> when Python is initialised in the context of mod_python, it finds  
>> evidence first
>> of Python being installed in some other location instead of the  
>> one you want,
>> then it will setup sys.path based on the location of that other  
>> version of Python
>> and thus not look where you actually installed the Python  
>> components of
>> mod_python.
>> BTW, does /usr/bin/python or /usr/lib/python2.4 actually exist.
>> Graham

From grahamd at dscpl.com.au  Wed Jul 19 07:07:37 2006
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Wed Jul 19 07:09:18 2006
Subject: [mod_python] modpython, mysqldb best paractice
In-Reply-To: <B6C73A5E30565245BB6D32B5F5DF7A520BEC85@sense.emmastraat.pijnacker>
References: <B6C73A5E30565245BB6D32B5F5DF7A520BEC85@sense.emmastraat.pijnacker>
Message-ID: <87313543-5605-4E91-9785-57574A5D7002@dscpl.com.au>


On 19/07/2006, at 7:41 PM, Martijn Moeling wrote:

> First of all I am confused about PythonInterPerDirectory and  
> PythonInterpPerDirectory
>
> In the way I use modpython.

Do you mean PythonInterpPerDirectory and PythonInterpPerDirective?  
Anyway,
your mail doesn't indicate in what way you are confused about them.

Note there are bugs in current versions of mod_python related to both  
of these
directives and I personally wouldn't generally recommend they be used  
anyway.
Is there a specific reason you might be using them rather than being  
more
specific and using PythonInterpreter instead?
> Also I do not understand the req.register_cleanup() method, what is  
> cleaned up and what not?
What is cleaned up is dependent on what the function you register to  
be called
does. Ie., up to you what is done. What the cleanup phase does is  
simply give
you the opportunity to do some work after all other phases have been  
performed.

If you don't understand the different phases that a request goes  
through, you
might want to read:

   http://162.105.203.19/apache-doc/24.htm#BIN68

This from a book about writing modules for Apache in Perl and C.  
There is lots
of other stuff there about how Apache works as well.

Graham
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20060719/05f803ad/attachment.html
From jpg at jgassociates.ca  Wed Jul 19 08:24:43 2006
From: jpg at jgassociates.ca (Jim Gallacher)
Date: Wed Jul 19 08:24:38 2006
Subject: [mod_python] Difference between run the web service standalone
	and via mod_python
In-Reply-To: <3233dd550607182051i74ccbeebm8a91bda310fb6c09@mail.gmail.com>
References: <3233dd550607180001x347a3ff3q784ab8032e1ad91@mail.gmail.com>	
	<44BCE13B.8020805@jgassociates.ca>
	<3233dd550607182051i74ccbeebm8a91bda310fb6c09@mail.gmail.com>
Message-ID: <44BE248B.5030904@jgassociates.ca>

wang yingqi wrote:
> First of all,Thank you very much!:)
> Additionally,Someone tell me we can share session via Apache service
> between
> different web apps,

Probably not. If the web app has a standalone server that can be run
without mod_python it will only be using the the mod_python version to
get access to a python interpreter embedded in apache. Thus it will not
likely be using the mod_python session code and providing it's own
session code instead.

Also, session data used by different apps is likely to be different and
incompatible as well.

> and the four points you mentioned are the best
> argumatation for choose Apache + Mod_python instead of standalone mode.
> So,Maybe the development process is a loop like this,Coding and Debuging at
> standalone mode ,Publishing on Apache with mod_python.

That seems reasonable.

Jim

> 
> On 7/18/06, Jim Gallacher <jpg@jgassociates.ca> wrote:
>>
>> wang yingqi wrote:
>> > hi everyone!
>> > some excellent python web framework has its own web-service
>> instance,Just
>> > like Quixote & Djanso, that means we can run our web service without
>> Apache
>> > etc.
>> > so could anybody tell me what's the difference between these
>> modes:1,run
>> > the
>> > service standalone of the python web framework 2,attach the python web
>> app
>> > to Apache via mod_python..
>> > thank u!
>>
>> Consider the following points:
>>
>> 1. Performance
>>
>> The standalone servers will serve all content, including static content.
>> Since they are likely written in pure python, their performance for
>> static content likely be slower.
>>
>> Whether this is an important factor will depend on the mix of static vs
>> dynamic content. If the ratio of static/dynamic is high, using apache +
>> mod_python will likely be better.
>>
>> 2. Server management
>>
>> If the host is not running apache, it will be easier to use the
>> standalone server.
>>
>> If the host is already running apache, it may be simpler to use
>> mod_python rather than managing a separate application server.
>>
>> If the user wants multiple instances of the application, they will need
>> to run and manage additional standalone servers, as opposed to apache
>> where it will just be an extra configuration stanza.
>>
>> There is also the issue of contention for port 80. What if you need
>> different standalone application servers such as Trac for issue tracking
>> and Quixote for some other web service. Only one of them will be able to
>> use port 80, while the other will need to use a non-standard port. This
>> could be a PITA, and indeed some corporate users may not be able to
>> access the second application due to firewall restrictions.
>>
>> 3. Virtual hosts
>>
>> The standalone server may not support virtual hosts. To me this would be
>> a show stopper.
>>
>> 4. Apache goodness
>>
>> There are a wealth of apache modules which may be useful, with no
>> equivalent in the standalone server.
>>
>> Apache is robust. Some applications (such as Zope) recommend that the
>> Zope server be used behind apache as an extra bit of insurance against
>> the malicious requests. (Or at least this used to be the recommendation.
>> I don't follow Zope development anymore and this may have changed).
>>
>> These comments may seem biased towards Apache, but then consider the
>> source - mod_python is an Apache module after all. ;)
>>
>> Jim
>>
> 

From jpg at jgassociates.ca  Wed Jul 19 08:52:59 2006
From: jpg at jgassociates.ca (Jim Gallacher)
Date: Wed Jul 19 08:52:48 2006
Subject: [mod_python] modpython, mysqldb best paractice
In-Reply-To: <B6C73A5E30565245BB6D32B5F5DF7A520BEC85@sense.emmastraat.pijnacker>
References: <B6C73A5E30565245BB6D32B5F5DF7A520BEC85@sense.emmastraat.pijnacker>
Message-ID: <44BE2B2B.8030103@jgassociates.ca>

Martijn Moeling wrote:
> Hi all,
> 
>  
> 
> I started the development of a specific kind of CMS over 2 years ago,
> and due to sparse documentation I am still puzzled about a few things.
> 
> Basically it consist of one .py and a mysqldatabase with all the data
> and templates, ALL pages are generated on the fly.
> 
>  
> 
> First of all I am confused about PythonInterPerDirectory and
> PythonInterpPerDirectory
> 
> In the way I use modpython.
> 
>  
> 
> My apache has no configured virtual hosts since my CMS can handle this
> on its own by looking at req.host
> 
> On one site which is running on my system ( http://www.mkbok.nl
> <http://www.mkbok.nl/>  ) we use different subdomains, so basically 
> 
> the page to be build is derived from the req.host (e.g.
> xxx.yyy.mkbok.nl) where xxx and yyy are variable. 
> 
> This is done by DNS records like   *     A      ip1.ip2.ip3.ip4

You don't actually state what problem here. ;)

> My next problem seems mysql and mysqldb.
> 
> Since I do not know which website is requested (multiple are running on
> that server) I open a database connection, do my stuff and close the
> connection, 
> 
> Again the database selection comes from req.host, and here the
> domainname is used for database selection.
> 
>  
> 
> The system runs extremely well, but once in a while the webserver
> becomes so busy that it does not respond to page request anymore. 
> 
> We suspect that mysql is the problem here since the only thing we can
> see is mysql is consuming more and more swapspace and at some point it
> runs out of resources and starts looping. At that point the system
> (Linux) keeps running but with a 100% cpu utilization and we are unable
> to login and investigate. 
> 
> So logging in to the UPS remotely and power down the system by virtually
> unplugging the cable is the only (and BAD) solution.

Ouch. Maybe you can run a cron job every 5 minutes to check the load and
try to catch the problem before you hit 100%? I'm not suggesting this is
a permanent solution, just do it until you can track down the cause.

Is there a chance that mysql is hitting its connection limit? (although
I'm not sure if that would cause the behaviour you describe).

> 
> So what is best practice when you have to connect to mysql with mysqldb
> in a mod_python environment keeping in mind that the database connection
> has to be build every time a visitor requests a page? Think in terms of
> a "globally" available db or db.cursor connection.

I don't think the performance penalty for creating a connection to mysql
is too great - at least compared to some other databases. You might want
to google for more information.

> Since global variables are troublesome in the .py contaning the handler
> I use a class from which an instance is created every time a client
> connects and the DB connection is global to that class, ist that wrong?

This looks OK.

>  
> 
> What happenens if mod_python finds an error before my mysqldb connection
> is closed (not that this happenes a lot, but it does happen, sorry)

It depends on how you handle the exception. This is why you should close
the connection in a registered cleanup function, which will always run.

> 
> Also I do not understand the req.register_cleanup() method, what is
> cleaned up and what not?

Whatever function you register is run during the cleanup phase (unless
mod_python segfaults - but then you've got other problems). The cleanup
phase occurs after the response has been sent and anything registered is
guaranteed to run, regardless of what happens in prior phases. Typical
usage looks like this:

def handler(req):
    conn = MySQLdb.connect(db='blah', user='blah', passwd='blah')
    req.register_cleanup(db_cleanup, conn)

    ... do your request handling ...

    return apache.OK


def db_cleanup(connection):
    connection.close()

Jim
From martijn at xs4us.nu  Wed Jul 19 09:53:29 2006
From: martijn at xs4us.nu (Martijn Moeling)
Date: Wed Jul 19 09:53:34 2006
Subject: [mod_python] modpython, mysqldb best paractice
Message-ID: <B6C73A5E30565245BB6D32B5F5DF7A520BEC88@sense.emmastraat.pijnacker>

Ok, some answers came in, but nobody seems to understand the first part.

I guess you guys understand that I am trying to optimize for
performance,

Since I configured apache in such a manner that every request ends up in
the same handler, so I have one python module and one handler for a
number of different websites/domains.

I have more but I'll limit to two:

zoekveilig.nl
mkbok.nl

what id do (not real code)

def handler(req)
	if req.host.find("mkbok.nl")> -1: 
	#  the host part could be XXX.mkbok.nl
	#  the host part could be xxx.yyy.mkbok.nl
		import mkbOK as mkbOK
		x = mkbOK.init() # create the class instance
		page=x.start(req)
	if req.host=="www.zoekveilig.nl"
		import zoekveilig as zoekveilig
		x = zoekveilig.init) # create class instance
		page=x.start(req)

	.....

	req.write(page)		
	return apache.OK

in my real world it is a bit more complicated since I do not configure
the sites in code but the above does indicate the workings, it is
"Functional description" code.

Next, all content other than the default page (index.html alike) for
that website (bit confusing on mkbOK since the hostpart is dynamic) and
as I said before it is derived from the host part for further
processing.

If mod python is running in Interpreter per directory mode, one
interpreter is created since all my content for mkbOK resides in / in
total over 1 in total over 14.000 different pages, and since we have
over 10.000 pageviews per day and aim for 100.000+ per day at the end of
the year I am preparing for a second server (which my system can handle)

If mod python is running in Interpreter per directive mode I can and up
with god knows how many interpreters.

Both of the above seem wrong for best performance, but I'm puzzled how
to optimize, Basically that is the question...

The register cleanup is clear now, since my system creates the database
connection in the class module (the init call creates the class) I might
have to alter that but.

The system goes from normal cpu utilization to 100% within a few
microseconds, and it happens now and then, sometimes within a few hours
after a reboot, sometimes it runs for weeks without trouble

The number of pages does not seem to matter, and it mostly happens when
it is NOT busy.

I tried multiple cron thingies to investigate, but even cron slows down
so mutch that a "service httpd restart, and/or a service mysql restart"
take hours to complete, 

I did something like this as a shell script: (runs every 5 minutes)


Find mysqlpid

top -n 1 -p mysqlpid  (run top once and look for mysql)
if sed (to see wether it runs with more than 50% cpu)
    write timestamp to log file
    service httpd stop 
    write timestamp to log file
    service mysqld restart
    write timestamp to log file
    service httpd start
    write timestamp to log file

	
in fact (but keep in mind I have had no interactive access) I think
mysql stops responding at all even to signals. I even tried "nice" in
the hope that mysql could not take 100% but that was not the case and it
slowed down the page building process (not surprised haha). Even
installing a second CPU did not help.

The even more stupid thing is that this behavior does not happen on a
PIII 1 Ghz with a excact copy of the HDD (dd if=/dev/hd1 of=/dev/hd2)

Since the cpu in our production machine is 64 bit I suspected that, and
build apache, and mod_python and python all from scratch,.. no luck.

Different mysql versions did not matter too.

The oddest thing is that after an update of my python code on the server
(new release of my system) is takes 1 or 2 days before it happens, than
it takes say 4 or 5 days, next it runs ok for weeks.

And YES we even replaced the entire machine with a different one (our
server is a Dell 1U rack server, don't know the excact type, sorry)

Any ideas, I am a experienced systems manager and programmer but just
hoped I am not the only one with this oddity

Martijn



-----Oorspronkelijk bericht-----
Van: Jim Gallacher [mailto:jpg@jgassociates.ca] 
Verzonden: Wednesday, July 19, 2006 14:53
Aan: Martijn Moeling
CC: mod_python@modpython.org
Onderwerp: Re: [mod_python] modpython, mysqldb best paractice

Martijn Moeling wrote:
> Hi all,
> 
>  
> 
> I started the development of a specific kind of CMS over 2 years ago,
> and due to sparse documentation I am still puzzled about a few things.
> 
> Basically it consist of one .py and a mysqldatabase with all the data
> and templates, ALL pages are generated on the fly.
> 
>  
> 
> First of all I am confused about PythonInterPerDirectory and
> PythonInterpPerDirectory
> 
> In the way I use modpython.
> 
>  
> 
> My apache has no configured virtual hosts since my CMS can handle this
> on its own by looking at req.host
> 
> On one site which is running on my system ( http://www.mkbok.nl
> <http://www.mkbok.nl/>  ) we use different subdomains, so basically 
> 
> the page to be build is derived from the req.host (e.g.
> xxx.yyy.mkbok.nl) where xxx and yyy are variable. 
> 
> This is done by DNS records like   *     A      ip1.ip2.ip3.ip4

You don't actually state what problem here. ;)

> My next problem seems mysql and mysqldb.
> 
> Since I do not know which website is requested (multiple are running
on
> that server) I open a database connection, do my stuff and close the
> connection, 
> 
> Again the database selection comes from req.host, and here the
> domainname is used for database selection.
> 
>  
> 
> The system runs extremely well, but once in a while the webserver
> becomes so busy that it does not respond to page request anymore. 
> 
> We suspect that mysql is the problem here since the only thing we can
> see is mysql is consuming more and more swapspace and at some point it
> runs out of resources and starts looping. At that point the system
> (Linux) keeps running but with a 100% cpu utilization and we are
unable
> to login and investigate. 
> 
> So logging in to the UPS remotely and power down the system by
virtually
> unplugging the cable is the only (and BAD) solution.

Ouch. Maybe you can run a cron job every 5 minutes to check the load and
try to catch the problem before you hit 100%? I'm not suggesting this is
a permanent solution, just do it until you can track down the cause.

Is there a chance that mysql is hitting its connection limit? (although
I'm not sure if that would cause the behaviour you describe).

> 
> So what is best practice when you have to connect to mysql with
mysqldb
> in a mod_python environment keeping in mind that the database
connection
> has to be build every time a visitor requests a page? Think in terms
of
> a "globally" available db or db.cursor connection.

I don't think the performance penalty for creating a connection to mysql
is too great - at least compared to some other databases. You might want
to google for more information.

> Since global variables are troublesome in the .py contaning the
handler
> I use a class from which an instance is created every time a client
> connects and the DB connection is global to that class, ist that
wrong?

This looks OK.

>  
> 
> What happenens if mod_python finds an error before my mysqldb
connection
> is closed (not that this happenes a lot, but it does happen, sorry)

It depends on how you handle the exception. This is why you should close
the connection in a registered cleanup function, which will always run.

> 
> Also I do not understand the req.register_cleanup() method, what is
> cleaned up and what not?

Whatever function you register is run during the cleanup phase (unless
mod_python segfaults - but then you've got other problems). The cleanup
phase occurs after the response has been sent and anything registered is
guaranteed to run, regardless of what happens in prior phases. Typical
usage looks like this:

def handler(req):
    conn = MySQLdb.connect(db='blah', user='blah', passwd='blah')
    req.register_cleanup(db_cleanup, conn)

    ... do your request handling ...

    return apache.OK


def db_cleanup(connection):
    connection.close()

Jim

From deron.meranda at gmail.com  Wed Jul 19 11:32:04 2006
From: deron.meranda at gmail.com (Deron Meranda)
Date: Wed Jul 19 11:32:25 2006
Subject: [mod_python] modpython, mysqldb best paractice
In-Reply-To: <B6C73A5E30565245BB6D32B5F5DF7A520BEC88@sense.emmastraat.pijnacker>
References: <B6C73A5E30565245BB6D32B5F5DF7A520BEC88@sense.emmastraat.pijnacker>
Message-ID: <5c06fa770607190832q1aba1db1i73bb867aaa5398f8@mail.gmail.com>

On 7/19/06, Martijn Moeling <martijn@xs4us.nu> wrote:
> If mod python is running in Interpreter per directory mode, one
> interpreter is created since all my content for mkbOK resides in / in
> total over 1 in total over 14.000 different pages, and since we have
> over 10.000 pageviews per day and aim for 100.000+ per day at the end of
> the year I am preparing for a second server (which my system can handle)
>
> If mod python is running in Interpreter per directive mode I can and up
> with god knows how many interpreters.

There's probably no need for you to use multiple python interpreters
at all.  The only advantage is that it can provide you with some
level of isolation (but not perfect); it will not provide any performance
benifits (and actually is more likely to decrease performance somewhat).
But as you're using it, you don't need more than one interpreter.  So just
avoid all the PythonInter* directives.

> The register cleanup is clear now, since my system creates the database
> connection in the class module (the init call creates the class) I might
> have to alter that but.

Also don't forget about try:...finally:... blocks.  That's often the
simplest way to make sure you clean up after something.

If the database connection is made inside your class, perhaps you
should put a disconnect call in the class's destructor, __del__().  I
don't know if you're using new-style classes, or traditional classes,
but perhaps something like:

    class db_based_service(object):
        def __init__(self):
            self.db = None
        def __del__(self):
            self.disconnect()
        def connect(self):
            self.db = MySQLdb.connect( ..... )
        def disconnect(self):
            if self.db is not None:
                self.db.disconnect()
                self.db = None
        def init(self):
            self.connect()

Furthermore, if you're using transactions, you should make sure
that you don't have any lingering open transactions.  If you're
connecting and disconnecting on every request you probably don't
need to worry quite so much.  But if you ever re-use or pool your
database connections in the future, you may want to consider
insuring that all your transactions get terminated at the end of
the request.  Perhaps extending the framework to something like

    class ..... (same as above)
        def __init__(self):
            # same other stuff above
            self.in_trans = False
        def __del__(self):
             self.rollback()
             self.disconnect()
        def start_transaction(self):
            if self.in_trans:
                raise RuntimeError("Attempted nested transaction")
            self.db.begin()
            self.in_trans = True
        def commit(self):
            if self.in_trans:
                db.commit()
                self.in_trans = False
        def rollback(self):
            if self.in_trans:
                db.rollback()
                self.in_trans = False

Of course you may want to see if too-many-connections or
non-terminated transactions are even a problem.  Periodically
run the mysql "show processlist" command.  Maybe even an
occasional "show status" may be informative.

> The system goes from normal cpu utilization to 100% within a few
> microseconds, and it happens now and then, sometimes within a few hours
> after a reboot, sometimes it runs for weeks without trouble

Once it gets in that state will it ever eventually clear up?

Is your system going into an I/O paging fit?  Run the command
"vmstat 5" and watch the "so" and "bo" columns for a minute.
"so" should stay near 0, and "bo" should have faily low numbers
(say <30), but really you should compare it against when the
system is running okay.

Also run "top" and determine exactly which process(es) are
charged with using the most cpu.

> I tried multiple cron thingies to investigate, but even cron slows down
> so mutch that a "service httpd restart, and/or a service mysql restart"
> take hours to complete,

Certainly sounds like heavy paging or swapping.

> in fact (but keep in mind I have had no interactive access) I think
> mysql stops responding at all even to signals. I even tried "nice" in
> the hope that mysql could not take 100% but that was not the case and it
> slowed down the page building process (not surprised haha). Even
> installing a second CPU did not help.

> The even more stupid thing is that this behavior does not happen on a
> PIII 1 Ghz with a excact copy of the HDD (dd if=/dev/hd1 of=/dev/hd2)
> Since the cpu in our production machine is 64 bit I suspected that, and
> build apache, and mod_python and python all from scratch,.. no luck.

What about the amount of memory.  That can have an even bigger
impact than the speed of the CPU.

> Different mysql versions did not matter too.
>
> The oddest thing is that after an update of my python code on the server
> (new release of my system) is takes 1 or 2 days before it happens, than
> it takes say 4 or 5 days, next it runs ok for weeks.

Perhaps you've got some suboptimal SQL.  For instance are you
doing a lot of sorts, or very large joins?

Also what MySQL storage engine are you using?  InnoDB, or
MyISAM, etc?

Oh, you may also want to visit the MySQL forums too and see
if anybody over there has any insights.
-- 
Deron Meranda
From rsynnott at gmail.com  Wed Jul 19 11:53:24 2006
From: rsynnott at gmail.com (Robert Synnott)
Date: Wed Jul 19 11:53:43 2006
Subject: [mod_python] modpython, mysqldb best paractice
In-Reply-To: <B6C73A5E30565245BB6D32B5F5DF7A520BEC85@sense.emmastraat.pijnacker>
References: <B6C73A5E30565245BB6D32B5F5DF7A520BEC85@sense.emmastraat.pijnacker>
Message-ID: <24f203480607190853j2b696ac4j3d4aad0be4ccd357@mail.gmail.com>

On 7/19/06, Martijn Moeling <martijn@xs4us.nu> wrote:
>

> We suspect that mysql is the problem here since the only thing we can see is
> mysql is consuming more and more swapspace and at some point it runs out of
> resources and starts looping. At that point the system (Linux) keeps running
> but with a 100% cpu utilization and we are unable to login and investigate.
>

This sounds somewhat like a problem I had with my cheap-and-dodgy
leased server, where after a few days running, database access (and
indeed disk access and other system calls in general) would cause the
machine to grind to a halt. The fix was an updated kernel;the one I
had been using didn't like something on the motherboard.
Rob
From jpg at jgassociates.ca  Wed Jul 19 12:10:57 2006
From: jpg at jgassociates.ca (Jim Gallacher)
Date: Wed Jul 19 12:11:28 2006
Subject: [mod_python] modpython, mysqldb best paractice
In-Reply-To: <5c06fa770607190832q1aba1db1i73bb867aaa5398f8@mail.gmail.com>
References: <B6C73A5E30565245BB6D32B5F5DF7A520BEC88@sense.emmastraat.pijnacker>
	<5c06fa770607190832q1aba1db1i73bb867aaa5398f8@mail.gmail.com>
Message-ID: <44BE5991.7000502@jgassociates.ca>

Deron Meranda wrote:
> On 7/19/06, Martijn Moeling <martijn@xs4us.nu> wrote:
>> If mod python is running in Interpreter per directory mode, one
>> interpreter is created since all my content for mkbOK resides in / in
>> total over 1 in total over 14.000 different pages, and since we have
>> over 10.000 pageviews per day and aim for 100.000+ per day at the end of
>> the year I am preparing for a second server (which my system can handle)
>>
>> If mod python is running in Interpreter per directive mode I can and up
>> with god knows how many interpreters.
> 
> There's probably no need for you to use multiple python interpreters
> at all.  The only advantage is that it can provide you with some
> level of isolation (but not perfect); it will not provide any performance
> benifits (and actually is more likely to decrease performance somewhat).
> But as you're using it, you don't need more than one interpreter.  So just
> avoid all the PythonInter* directives.
> 
>> The register cleanup is clear now, since my system creates the database
>> connection in the class module (the init call creates the class) I might
>> have to alter that but.
> 
> Also don't forget about try:...finally:... blocks.  That's often the
> simplest way to make sure you clean up after something.
> 
> If the database connection is made inside your class, perhaps you
> should put a disconnect call in the class's destructor, __del__().  I
> don't know if you're using new-style classes, or traditional classes,
> but perhaps something like:
> 
>    class db_based_service(object):
>        def __init__(self):
>            self.db = None
>        def __del__(self):
>            self.disconnect()
>        def connect(self):
>            self.db = MySQLdb.connect( ..... )
>        def disconnect(self):
>            if self.db is not None:
>                self.db.disconnect()
>                self.db = None
>        def init(self):
>            self.connect()
> 
> Furthermore, if you're using transactions, you should make sure
> that you don't have any lingering open transactions.  If you're
> connecting and disconnecting on every request you probably don't
> need to worry quite so much.  But if you ever re-use or pool your
> database connections in the future, you may want to consider
> insuring that all your transactions get terminated at the end of
> the request.  Perhaps extending the framework to something like
> 
>    class ..... (same as above)
>        def __init__(self):
>            # same other stuff above
>            self.in_trans = False
>        def __del__(self):
>             self.rollback()
>             self.disconnect()
>        def start_transaction(self):
>            if self.in_trans:
>                raise RuntimeError("Attempted nested transaction")
>            self.db.begin()
>            self.in_trans = True
>        def commit(self):
>            if self.in_trans:
>                db.commit()
>                self.in_trans = False
>        def rollback(self):
>            if self.in_trans:
>                db.rollback()
>                self.in_trans = False
> 
> Of course you may want to see if too-many-connections or
> non-terminated transactions are even a problem.  Periodically
> run the mysql "show processlist" command.  Maybe even an
> occasional "show status" may be informative.
> 
>> The system goes from normal cpu utilization to 100% within a few
>> microseconds, and it happens now and then, sometimes within a few hours
>> after a reboot, sometimes it runs for weeks without trouble
> 
> Once it gets in that state will it ever eventually clear up?
> 
> Is your system going into an I/O paging fit?  Run the command
> "vmstat 5" and watch the "so" and "bo" columns for a minute.
> "so" should stay near 0, and "bo" should have faily low numbers
> (say <30), but really you should compare it against when the
> system is running okay.
> 
> Also run "top" and determine exactly which process(es) are
> charged with using the most cpu.
> 
>> I tried multiple cron thingies to investigate, but even cron slows down
>> so mutch that a "service httpd restart, and/or a service mysql restart"
>> take hours to complete,
> 
> Certainly sounds like heavy paging or swapping.
> 
>> in fact (but keep in mind I have had no interactive access) I think
>> mysql stops responding at all even to signals. I even tried "nice" in
>> the hope that mysql could not take 100% but that was not the case and it
>> slowed down the page building process (not surprised haha). Even
>> installing a second CPU did not help.
> 
>> The even more stupid thing is that this behavior does not happen on a
>> PIII 1 Ghz with a excact copy of the HDD (dd if=/dev/hd1 of=/dev/hd2)
>> Since the cpu in our production machine is 64 bit I suspected that, and
>> build apache, and mod_python and python all from scratch,.. no luck.
> 
> What about the amount of memory.  That can have an even bigger
> impact than the speed of the CPU.
> 
>> Different mysql versions did not matter too.
>>
>> The oddest thing is that after an update of my python code on the server
>> (new release of my system) is takes 1 or 2 days before it happens, than
>> it takes say 4 or 5 days, next it runs ok for weeks.
> 
> Perhaps you've got some suboptimal SQL.  For instance are you
> doing a lot of sorts, or very large joins?
> 
> Also what MySQL storage engine are you using?  InnoDB, or
> MyISAM, etc?

Also, I'm not sure if you told us anything about your OS, apache version
and mpm (prefork or worker) or mod_python version.

The fact is the mod_python has memory leaks. We are tracking them down -
3.2.8 is better than 3.1.4, and the next stable release will be better
yet. (Fixed a leak util.parse_qsl used in FieldStorage). Having
mod_python leak memory could impact mysql, causing heavy swapping when
trying to build a query result. Just a WAG and another thing to consider.

Jim

From martijn at xs4us.nu  Wed Jul 19 15:04:58 2006
From: martijn at xs4us.nu (Martijn Moeling)
Date: Wed Jul 19 15:05:12 2006
Subject: [mod_python] modpython, mysqldb best paractice
Message-ID: <B6C73A5E30565245BB6D32B5F5DF7A520BEC8B@sense.emmastraat.pijnacker>


On 7/19/06, Martijn Moeling <martijn@xs4us.nu> wrote:


We suspect that mysql is the problem here since the only thing we can
see is
mysql is consuming more and more swapspace and at some point it runs out
of
resources and starts looping. At that point the system (Linux) keeps
running
but with a 100% cpu utilization and we are unable to login and
investigate.
--------------------------------

This sounds somewhat like a problem I had with my cheap-and-dodgy
leased server, where after a few days running, database access (and
indeed disk access and other system calls in general) would cause the
machine to grind to a halt. The fix was an updated kernel;the one I
had been using didn't like something on the motherboard.
Rob

-----------------------------------------
Hmm we have a Dell 19" rack server with raid and all, and tried one
exactly the same, a new Kernel I'll have a look into it, Thanx

From jpg at jgassociates.ca  Wed Jul 19 15:41:36 2006
From: jpg at jgassociates.ca (Jim Gallacher)
Date: Wed Jul 19 15:40:12 2006
Subject: [mod_python] modpython, mysqldb best paractice
In-Reply-To: <B6C73A5E30565245BB6D32B5F5DF7A520BEC8B@sense.emmastraat.pijnacker>
References: <B6C73A5E30565245BB6D32B5F5DF7A520BEC8B@sense.emmastraat.pijnacker>
Message-ID: <44BE8AF0.4060403@jgassociates.ca>

Martijn Moeling wrote:
> On 7/19/06, Martijn Moeling <martijn@xs4us.nu> wrote:
> 
> 
> We suspect that mysql is the problem here since the only thing we can
> see is
> mysql is consuming more and more swapspace and at some point it runs out
> of
> resources and starts looping. At that point the system (Linux) keeps
> running
> but with a 100% cpu utilization and we are unable to login and
> investigate.
> --------------------------------
> 
> This sounds somewhat like a problem I had with my cheap-and-dodgy
> leased server, where after a few days running, database access (and
> indeed disk access and other system calls in general) would cause the
> machine to grind to a halt. The fix was an updated kernel;the one I
> had been using didn't like something on the motherboard.
> Rob
> 
> -----------------------------------------
> Hmm we have a Dell 19" rack server with raid and all, and tried one
> exactly the same, a new Kernel I'll have a look into it, Thanx

A couple of other things to consider:

CentOS kernel issues resulting in similar problem (but not just mysql):
http://bugs.centos.org/view.php?id=1174

Mysql bug in copy to tmp table and bad query optimizer behaviour for
some complex queries:
http://bugs.mysql.com/bug.php?id=14070

Jim

From martijn at xs4us.nu  Wed Jul 19 15:44:17 2006
From: martijn at xs4us.nu (Martijn Moeling)
Date: Wed Jul 19 15:44:29 2006
Subject: [mod_python] modpython, mysqldb best paractice
Message-ID: <B6C73A5E30565245BB6D32B5F5DF7A520BEC8C@sense.emmastraat.pijnacker>

Deron Meranda wrote:
> On 7/19/06, Martijn Moeling <martijn@xs4us.nu> wrote:
>> If mod python is running in Interpreter per directory mode, one
>> interpreter is created since all my content for mkbOK resides in / in
>> total over 1 in total over 14.000 different pages, and since we have
>> over 10.000 pageviews per day and aim for 100.000+ per day at the end
of
>> the year I am preparing for a second server (which my system can
handle)
>>
>> If mod python is running in Interpreter per directive mode I can and
up
>> with god knows how many interpreters.
> 
> There's probably no need for you to use multiple python interpreters
> at all.  The only advantage is that it can provide you with some
> level of isolation (but not perfect); it will not provide any
performance
> benifits (and actually is more likely to decrease performance
somewhat).
> But as you're using it, you don't need more than one interpreter.  So
just
> avoid all the PythonInter* directives.
> 
>> The register cleanup is clear now, since my system creates the
database
>> connection in the class module (the init call creates the class) I
might
>> have to alter that but.
> 
> Also don't forget about try:...finally:... blocks.  That's often the
> simplest way to make sure you clean up after something.
> 
> If the database connection is made inside your class, perhaps you
> should put a disconnect call in the class's destructor, __del__().  I
> don't know if you're using new-style classes, or traditional classes,
> but perhaps something like:
> 
>    class db_based_service(object):
>        def __init__(self):
>            self.db = None
>        def __del__(self):
>            self.disconnect()
>        def connect(self):
>            self.db = MySQLdb.connect( ..... )
>        def disconnect(self):
>            if self.db is not None:
>                self.db.disconnect()
>                self.db = None
>        def init(self):
>            self.connect()
> 
> Furthermore, if you're using transactions, you should make sure
> that you don't have any lingering open transactions.  If you're
> connecting and disconnecting on every request you probably don't
> need to worry quite so much.  But if you ever re-use or pool your
> database connections in the future, you may want to consider
> insuring that all your transactions get terminated at the end of
> the request.  Perhaps extending the framework to something like
> 
>    class ..... (same as above)
>        def __init__(self):
>            # same other stuff above
>            self.in_trans = False
>        def __del__(self):
>             self.rollback()
>             self.disconnect()
>        def start_transaction(self):
>            if self.in_trans:
>                raise RuntimeError("Attempted nested transaction")
>            self.db.begin()
>            self.in_trans = True
>        def commit(self):
>            if self.in_trans:
>                db.commit()
>                self.in_trans = False
>        def rollback(self):
>            if self.in_trans:
>                db.rollback()
>                self.in_trans = False
> 
> Of course you may want to see if too-many-connections or
> non-terminated transactions are even a problem.  Periodically
> run the mysql "show processlist" command.  Maybe even an
> occasional "show status" may be informative.
> 
>> The system goes from normal cpu utilization to 100% within a few
>> microseconds, and it happens now and then, sometimes within a few
hours
>> after a reboot, sometimes it runs for weeks without trouble
> 
> Once it gets in that state will it ever eventually clear up?
> 
> Is your system going into an I/O paging fit?  Run the command
> "vmstat 5" and watch the "so" and "bo" columns for a minute.
> "so" should stay near 0, and "bo" should have faily low numbers
> (say <30), but really you should compare it against when the
> system is running okay.
> 
> Also run "top" and determine exactly which process(es) are
> charged with using the most cpu.
> 
>> I tried multiple cron thingies to investigate, but even cron slows
down
>> so mutch that a "service httpd restart, and/or a service mysql
restart"
>> take hours to complete,
> 
> Certainly sounds like heavy paging or swapping.
> 
>> in fact (but keep in mind I have had no interactive access) I think
>> mysql stops responding at all even to signals. I even tried "nice" in
>> the hope that mysql could not take 100% but that was not the case and
it
>> slowed down the page building process (not surprised haha). Even
>> installing a second CPU did not help.
> 
>> The even more stupid thing is that this behavior does not happen on a
>> PIII 1 Ghz with a excact copy of the HDD (dd if=/dev/hd1 of=/dev/hd2)
>> Since the cpu in our production machine is 64 bit I suspected that,
and
>> build apache, and mod_python and python all from scratch,.. no luck.
> 
> What about the amount of memory.  That can have an even bigger
> impact than the speed of the CPU.
> 
>> Different mysql versions did not matter too.
>>
>> The oddest thing is that after an update of my python code on the
server
>> (new release of my system) is takes 1 or 2 days before it happens,
than
>> it takes say 4 or 5 days, next it runs ok for weeks.
> 
> Perhaps you've got some suboptimal SQL.  For instance are you
> doing a lot of sorts, or very large joins?
> 
> Also what MySQL storage engine are you using?  InnoDB, or
> MyISAM, etc?

Also, I'm not sure if you told us anything about your OS, apache version
and mpm (prefork or worker) or mod_python version.

The fact is the mod_python has memory leaks. We are tracking them down -
3.2.8 is better than 3.1.4, and the next stable release will be better
yet. (Fixed a leak util.parse_qsl used in FieldStorage). Having
mod_python leak memory could impact mysql, causing heavy swapping when
trying to build a query result. Just a WAG and another thing to
consider.

Jim

-----------------------------

Thanx Jim, I did not know about the memory leaks, But you have a point
on the mysql behaviour, one of the implications of my system is lots of
queries
so the memory hunger of mysql seems justified.

I think I have mod_python 3.2.8, I will have a look

Considering memory leaks, do you think, altering the minserver,
maxserver, spare and alike parameters configuring apache, If there are
memory leaks killing the app in some automatic way does not clog up log
files etc. I rather have the overhead of process creation than then a
down server when I am windsurfing.  

Well this is the first time I really use open source for a development
project, although I have been heavily involved in the first real Linux
kernel, I saw possible trouble like this lurking around the corner.

what a laugh we had back in those days. I remember driving to my friend
with my development system attached to a small UPS which happened to be
the same size as my computer casing, keeping it running in the middle of
a debug session since I finally reproduces a serious memory leak in the
part of the TCP/IP stack we were developing, I guess you have a system
around running my code for doing a lot of hard work, sending and
receiving network information, and are very happy that leak finally
plugged with a decent piece of code, I know it is a frustrating process,
I have been there.

I set myself to fix this issue but found a pile of possibilities, thanx
guys

I did not name the versions I run for a few reasons

The most important one: I know updates are solving problems, but people
seem to forget that they almost always introduce a few new ones, 

I compute the following code:

for word in release_notes:
	if word in ["better","increased","quicker","you get the point"]:
		new_bug+=1

I first really try to investigate the problem and not try to solve what
I do not understand. Simply sending version numbers results in TRY that
new version.... I can go in deeper if I feel I need to, to help the
community solving things. (this is not a promise, I am really busy at
the moment)

I have another reason which is nice to know, I have some experience with
these noisy boxed not doing what I am asking, with that comes feelings,
and my feelings are telling me that I am wrong somewere.

Anyway, I'll report stuff

Martijn

From deron.meranda at gmail.com  Wed Jul 19 17:04:58 2006
From: deron.meranda at gmail.com (Deron Meranda)
Date: Wed Jul 19 17:05:04 2006
Subject: [mod_python] modpython, mysqldb best paractice
In-Reply-To: <44BE8AF0.4060403@jgassociates.ca>
References: <B6C73A5E30565245BB6D32B5F5DF7A520BEC8B@sense.emmastraat.pijnacker>
	<44BE8AF0.4060403@jgassociates.ca>
Message-ID: <5c06fa770607191404u2ca89fffo5cda2af6a744f6d7@mail.gmail.com>

On 7/19/06, Jim Gallacher <jpg@jgassociates.ca> wrote:
> CentOS kernel issues resulting in similar problem (but not just mysql):
> http://bugs.centos.org/view.php?id=1174

Ah, I did not know about that one.  From reading it, this sounds
almost exactly like the problem Martijn is probably experiencing.
I doubt mod_python memory leaks would exhibit the same type
of behavior Martijn describes.  This is why I suggested
monitoring with vmstat...if this is the problem it should show up
quite obviously.  (Of course I don't know what kernel Martijn
is running at this point in the thread)

BTW, I'm also running everything under CentOS 4 as well
(with the 2.6.9-34.0.1.ELsmp kernel), but have not seen any
problems at all.  But then I'm in IA32, and not IA64, which is
what this bug report as well as Martjin are running.  So it looks
like a possible bad Linux kernel for 64-bit.

Martijn, can you provide your kernel version, etc.?

Good news is that a new fixed kernel is apparently on the way.
-- 
Deron Meranda
From jpg at jgassociates.ca  Wed Jul 19 17:32:31 2006
From: jpg at jgassociates.ca (Jim Gallacher)
Date: Wed Jul 19 17:30:35 2006
Subject: [mod_python] modpython, mysqldb best paractice
In-Reply-To: <B6C73A5E30565245BB6D32B5F5DF7A520BEC8C@sense.emmastraat.pijnacker>
References: <B6C73A5E30565245BB6D32B5F5DF7A520BEC8C@sense.emmastraat.pijnacker>
Message-ID: <44BEA4EF.1080007@jgassociates.ca>

Martijn Moeling wrote:
> Deron Meranda wrote:
>> Perhaps you've got some suboptimal SQL.  For instance are you
>> doing a lot of sorts, or very large joins?
>>
>> Also what MySQL storage engine are you using?  InnoDB, or
>> MyISAM, etc?
> 
> Also, I'm not sure if you told us anything about your OS, apache version
> and mpm (prefork or worker) or mod_python version.
> 
> The fact is the mod_python has memory leaks. We are tracking them down -
> 3.2.8 is better than 3.1.4, and the next stable release will be better
> yet. (Fixed a leak util.parse_qsl used in FieldStorage). Having
> mod_python leak memory could impact mysql, causing heavy swapping when
> trying to build a query result. Just a WAG and another thing to
> consider.
> 
> Jim
> 
> -----------------------------
> 
> Thanx Jim, I did not know about the memory leaks, But you have a point
> on the mysql behaviour, one of the implications of my system is lots of
> queries
> so the memory hunger of mysql seems justified.
> 
> I think I have mod_python 3.2.8, I will have a look
> 
> Considering memory leaks, do you think, altering the minserver,
> maxserver, spare and alike parameters configuring apache, If there are
> memory leaks killing the app in some automatic way does not clog up log
> files etc. I rather have the overhead of process creation than then a
> down server when I am windsurfing.  


I don't want to give the wrong impression. I'm not certain that you
*are* experiencing mod_python memory leaks, just that it is one
possibility. You may not experience any leaks at all - it just depends
on whether your code uses any of the leaky bits (and of course your
mod_python version). However in the interest of helping you relax and
enjoy your windsurfing, I'd set a value for MaxRequestsPerChild.
Something like 10000 might be a good starting point.

If you are otherwise happy with your performance then I'd leave the
other parameters as is.

Of course you are not managing it if you aren't measuring it, so you
should actually check and see if Apache / mod_python *is* leaking. I
find top in batch mode handy for this sort of thing.

top -b -u www-data -n 1 | grep apache2 >> mem.log

Stick this in a cron job and see if there is an upward trend in memory
consumption.

Jim
From mvanaswegen at gmail.com  Thu Jul 20 04:15:26 2006
From: mvanaswegen at gmail.com (marinus van aswegen)
Date: Thu Jul 20 04:15:35 2006
Subject: [mod_python] Hosting Advice?
Message-ID: <ffa39deb0607200115j24f2d1b8rfddb3b026ef04bc2@mail.gmail.com>

Hi All

I'm about to deploy my mod_python app / mysql and I'm not expecting
more than about 100-300 connections a day. I'm curious where you guys
host (godaddy?) and what server config your are utilizing (memory,
cpu, etc).

marinus
From gjones at agroup.com  Thu Jul 20 12:27:44 2006
From: gjones at agroup.com (Gregory Jones)
Date: Thu Jul 20 12:28:06 2006
Subject: [SPAM] Re: [mod_python] Hosting Advice?
In-Reply-To: <ffa39deb0607200115j24f2d1b8rfddb3b026ef04bc2@mail.gmail.com>
References: <ffa39deb0607200115j24f2d1b8rfddb3b026ef04bc2@mail.gmail.com>
Message-ID: <44BFAF00.9070101@agroup.com>

marinus van aswegen wrote:

> Hi All
>
> I'm about to deploy my mod_python app / mysql and I'm not expecting
> more than about 100-300 connections a day. I'm curious where you guys
> host (godaddy?) and what server config your are utilizing (memory,
> cpu, etc).
>
> marinus
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>

I have found two hosts that I like for custom mod_python apps.

openhosting.com
vpsland.com

I haven't found any virtual hosting that allows for mod_python, but then 
again I didn't look very hard after I discovered the joy of Virtual 
Private Servers. Good luck!

-- 
Greg Jones
The A Group
615.373.6990 x 104
gjones@agroup.com

From mauchi at assembleco.com  Thu Jul 20 22:27:25 2006
From: mauchi at assembleco.com (mauchi)
Date: Thu Jul 20 22:27:21 2006
Subject: [mod_python] graph / graphing application that works well with
	mod_python
Message-ID: <1153448845.6501.9.camel@totoro.assembleco.x>

I spent a day and a half trying to get PyChart working under mod_python.
I liked PyChart because it was one of the friendlier graphing apps out
there. There were some posts in the archives on how to get it to work
but they seemed to end unressolved. 
Searching on google I found Chartdirector which works for python, php,
and perl. I used the demo version and converted my stuff over. It works
great under mod_python and has its own mechanisms for wrangling temp
files. I bought the license for $100 which takes the "you didn't buy
this" at the bottom of the graph.
I wanted to post this on the list, not because I want to sell their app,
but to save somebody their time in the future when they are wrestling
with graphs under mod_python. kudos to all!

http://www.advsofteng.com/

Mchi

From nicolas at lehuen.com  Fri Jul 21 02:08:33 2006
From: nicolas at lehuen.com (Nicolas Lehuen)
Date: Fri Jul 21 02:08:37 2006
Subject: [mod_python] graph / graphing application that works well with
	mod_python
In-Reply-To: <1153448845.6501.9.camel@totoro.assembleco.x>
References: <1153448845.6501.9.camel@totoro.assembleco.x>
Message-ID: <c298f2d70607202308n7946c408p1ca34191bec682d4@mail.gmail.com>

I second your opinion, ChartDirector works out of the box with mod_python
and is way faster than PyChart (I did eventually manage to get PyChart
working but it was slooooow). Worth the $100, if you ask me.

Regards,
Nicolas

2006/7/21, mauchi <mauchi@assembleco.com>:
>
> I spent a day and a half trying to get PyChart working under mod_python.
> I liked PyChart because it was one of the friendlier graphing apps out
> there. There were some posts in the archives on how to get it to work
> but they seemed to end unressolved.
> Searching on google I found Chartdirector which works for python, php,
> and perl. I used the demo version and converted my stuff over. It works
> great under mod_python and has its own mechanisms for wrangling temp
> files. I bought the license for $100 which takes the "you didn't buy
> this" at the bottom of the graph.
> I wanted to post this on the list, not because I want to sell their app,
> but to save somebody their time in the future when they are wrestling
> with graphs under mod_python. kudos to all!
>
> http://www.advsofteng.com/
>
> Mchi
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20060721/9db84782/attachment.html
From girty at cogeco.ca  Fri Jul 21 09:50:20 2006
From: girty at cogeco.ca (greg)
Date: Fri Jul 21 09:50:26 2006
Subject: [mod_python] Hosting Advice?
In-Reply-To: <ffa39deb0607200115j24f2d1b8rfddb3b026ef04bc2@mail.gmail.com>
References: <ffa39deb0607200115j24f2d1b8rfddb3b026ef04bc2@mail.gmail.com>
Message-ID: <44C0DB9C.1030200@cogeco.ca>

marinus van aswegen wrote:
> Hi All
> 
> I'm about to deploy my mod_python app / mysql and I'm not expecting
> more than about 100-300 connections a day. I'm curious where you guys
> host (godaddy?) and what server config your are utilizing (memory,
> cpu, etc).
> 
> marinus
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
> 



100-300 connections a day could easily be served from a BSD box running 
on a Pentium in your basement. You must have ISP or business constraints.

The godaddy virtual server seems reasonable. I've used godaddy as a 
domain registrar, and their phone support is quite good. (The hold music 
was Squirrel Nut Zippers... clearly a place run by geeks.)

My deployment is on a leased 1U, but my host is going through a major 
restaffing which is manifesting into technical hiccups. I'm afraid I'm 
withholding a recommendation until the dust settles with them.

Greg
From david_macquigg at yahoo.com  Fri Jul 21 12:18:15 2006
From: david_macquigg at yahoo.com (David MacQuigg)
Date: Fri Jul 21 12:17:24 2006
Subject: [mod_python] Hosting Advice?
In-Reply-To: <ffa39deb0607200115j24f2d1b8rfddb3b026ef04bc2@mail.gmail.co
 m>
Message-ID: <5.2.1.1.0.20060721091313.039a4c08@pop.mail.yahoo.com>

At 10:15 AM 7/20/2006 +0200, marinus van aswegen wrote:

>Hi All
>
>I'm about to deploy my mod_python app / mysql and I'm not expecting
>more than about 100-300 connections a day. I'm curious where you guys
>host (godaddy?) and what server config your are utilizing (memory,
>cpu, etc).

I've been very happy with rimuhosting.com.  For $20/month I get a VPS 
(Virtual Private Server - root access, etc.), 96MB memory, so far no 
problem with CPU overload, but it is shared with many other VPS 
users.  Technical support is excellent on any problems related to hardware, 
or standard software, which for me includes Redhat Linux, Sendmail, 
SpamAssassin, Apache, etc.

If you are concerned about 24/7 reliability, avoid the server in your 
basement.  It will go down at the worst possible time.  Also, you will 
never get connectivity as good as a well-located data center with 
high-speed lines to multiple backbone networks.

I looked also at Yahoo and GoDaddy.  Their technical support is inadequate 
for my needs.

-- Dave
************************************************************     *
* David MacQuigg, PhD      email: macquigg at open-mail.org   *  *
* President, Open-Mail dot org      phone: USA 520-721-4583   *  *  *
* Postmaster, Box67 dot com                                   *  *  *
*                                 9320 East Mikelyn Lane       * * *
* http://purl.net/macquigg        Tucson, Arizona 85710          *
************************************************************     * 

From david_macquigg at yahoo.com  Fri Jul 21 12:45:41 2006
From: david_macquigg at yahoo.com (David MacQuigg)
Date: Fri Jul 21 12:44:25 2006
Subject: [mod_python] module reloading
In-Reply-To: <4FA7039B-9963-4558-B88D-9F18225EFC6E@math.harvard.edu>
Message-ID: <5.2.1.1.0.20060721093958.039a4c08@pop.mail.yahoo.com>

Sorry for the late reply.  I posted this last week, but made a mistake in 
using the wrong return address, which resulted in the message being 
rejected without notice.  I also got no response from 
mod_python-owner@modpython.org

At 08:46 PM 7/13/2006 -0400, you wrote:

>I'm having issues with ye olde module reloading.
>
>i.e. modules don't reload, need to restart server, yadda yadda yadda.
>
>Even touching all my .py and .pyc files doesn't seem to help... it
>still seems to require a restart.
>
>I see there have been frequent posts about this issue on this list,
>and it sounds like it's not quite resolved yet.
>
>I'm wondering if there's a simple line or two of code I can add to my
>entry point, before any importing happens, which will clean out the
>module cache? Just unload everything to force a reload of everything?
>That would work quite well for me during development.

I know very little about mod_python, but let me speculate based on my 
understanding of Python reloads.  There are discussions of module 
importing/reloading in "Learning Python, 2nd ed. pp.266-269, and in "Python 
in a Nutshell", pp.120-123.  I've also put what I hope is a more clear 
presentation for students at http://purl.net/macquigg/Python/Misc/Reload.htm

You could "clean out the module cache" by deleting everything in 
sys.modules.  That would trick your import statements to reload their 
modules instead of referencing existing copies.  You should do this 
explicitly with the reload() function, however, and avoid unintended 
deletion of other modules.

What you are asking for (a general command 'clean out everything but system 
stuff') may be practically impossible.  Take a look at sys.modules.keys(), 
even before loading any of your own modules.  There is a lot of stuff 
there.  The interpreter doesn't keep track of what objects in these modules 
have been referenced/copied/subclassed/instantiated/etc, and now have 
references (bindings) that keep them in memory until the last reference is 
gone, and the garbage collector can do its job.  Reloading a module creates 
new objects in memory, but leaves *as is* any old objects with active 
references.  Example:

import Module1
x1 = Module1.x
reload(Module1)
x2 = Module1.x

x2 now binds the updated object Module1.x, but the old object is still kept 
in memory bound to variable x1.

The only way to ensure a clean update, with no vestiges of an old module, 
is to restart the interpreter session, as IDLE does when you press key F5.

I don't know if it might be possible to restart mod_python without 
restarting Apache.  That could work if it were set up like a Sendmail 
milter.  I edit my milter frequently, and restarting it is easy, with no 
apparent disruption of Sendmail.  Sendmail milters interface via a socket, 
so maybe an "arms length" interface like this would be required between 
mod_python and Apache.

If you are working on a development system, '/etc/init.d/httpd restart' 
should not cause any disruption, and it seems to be just as fast as 
restarting Python.

-- Dave
************************************************************     *
* David MacQuigg, PhD      email: macquigg at open-mail.org   *  *
* President, Open-Mail dot org      phone: USA 520-721-4583   *  *  *
* Postmaster, Box67 dot com                                   *  *  *
*                                 9320 East Mikelyn Lane       * * *
* http://purl.net/macquigg        Tucson, Arizona 85710          *
************************************************************     *

From ra at burningman.com  Fri Jul 21 16:53:27 2006
From: ra at burningman.com (Rob Miller)
Date: Fri Jul 21 16:55:09 2006
Subject: [mod_python] output filters: selection criteria and slowness
Message-ID: <e9res3$79s$1@sea.gmane.org>

hi,

i know python pretty well, but i'm a mod_python (mod_*, really) beginner, and 
i'm having some trouble getting an output filter to work for me.  i'm trying 
to apply a filter to content that is being served from a CMS and proxied 
through apache using RewriteRules.   i've got it working, sort of, but there 
are a couple of major snags i've hit:

- the content coming from the other system doesn't necessarily have a file 
extension.  i can use 'SetOutputFilter" to apply the filter to everything, but 
i don't WANT to apply it to images or other binary data.  is there a way to 
use "AddOutputFilter" for files with no extension?  or to use it as an 
extension blacklist, rather than a whitelist?  or would this have to be done 
as logic in the filter itself?

- when i apply the filter to static content coming from a hard drive, it works 
very well.  when i apply it to content from the CMS, however, it is extremely 
slow.  a single page can take anywhere from 15 to 45 seconds to return.  (note 
that if i browse directly to the CMS the page returns are also quite fast.) 
it seems like a lot of information comes down right away but firefox churns as 
though it's still waiting.  when i use wget, the page seems to get requested 
over and over again, with wget never realizing it's done.  my guess is it has 
something to do w/ the content-length header, but i've deleted it from request 
before writing to the filter object as shown in the examples i've found.

i'm using mod_python 3.1.4 and apache 2.0.55 from ubuntu dapper.  the code of 
my filter is here: 
http://codespeak.net/svn/z3/deliverance/branches/namespaced/mpfilter.py

anyone have suggestions, or pointers to docs, that might help me?

thanks!

-r

From grahamd at dscpl.com.au  Fri Jul 21 19:28:13 2006
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Fri Jul 21 19:28:35 2006
Subject: [mod_python] output filters: selection criteria and slowness
In-Reply-To: <e9res3$79s$1@sea.gmane.org>
References: <e9res3$79s$1@sea.gmane.org>
Message-ID: <2AB2C076-0498-4123-AD4E-1E9CE2B83541@dscpl.com.au>


On 22/07/2006, at 6:53 AM, Rob Miller wrote:

> hi,
>
> i know python pretty well, but i'm a mod_python (mod_*, really)  
> beginner, and i'm having some trouble getting an output filter to  
> work for me.  i'm trying to apply a filter to content that is being  
> served from a CMS and proxied through apache using RewriteRules.    
> i've got it working, sort of, but there are a couple of major snags  
> i've hit:
>
> - the content coming from the other system doesn't necessarily have  
> a file extension.  i can use 'SetOutputFilter" to apply the filter  
> to everything, but i don't WANT to apply it to images or other  
> binary data.  is there a way to use "AddOutputFilter" for files  
> with no extension?  or to use it as an extension blacklist, rather  
> than a whitelist?  or would this have to be done as logic in the  
> filter itself?

It is probably easier to make the determination in the filter itself.  
Rather than:

     try:
         streambuffer = filter.req.streambuffer
     except AttributeError:
         filter.req.streambuffer = StringIO()
         streambuffer = filter.req.streambuffer

have something like:

     try:
         streambuffer = filter.req.streambuffer
     except AttributeError:

         # first time into the filter for this request
         # pass on stuff we don't want to deal with

         if filter.req.notheme:

           # pass on if no theme

           filter.pass_on()
           return

         elif not filter.req.headers_out.has_key("content-type):

           # pass on if no content type specified

           filter.pass_on()
           return

         elif not filter.req.headers_out["content-type"].startswith 
("text/html")

            # pass on if not HTML

            filter.pass_on()
            return

         filter.req.streambuffer = StringIO()
         streambuffer = filter.req.streambuffer

Later on, you can also change:

         if filter.req.notheme:
             filter.write(streambuffer.getvalue())
         else:
             filter.write(appmap.publish(streambuffer.getvalue()))

to just:

          filter.write(appmap.publish(streambuffer.getvalue()))

as you have already passed on control to next filter in chain for  
stuff you do not
want.

> - when i apply the filter to static content coming from a hard  
> drive, it works very well.  when i apply it to content from the  
> CMS, however, it is extremely slow.  a single page can take  
> anywhere from 15 to 45 seconds to return.  (note that if i browse  
> directly to the CMS the page returns are also quite fast.) it seems  
> like a lot of information comes down right away but firefox churns  
> as though it's still waiting.  when i use wget, the page seems to  
> get requested over and over again, with wget never realizing it's  
> done.  my guess is it has something to do w/ the content-length  
> header, but i've deleted it from request before writing to the  
> filter object as shown in the examples i've found.

Add logging in your filter so track how long different things take.  
Ie., sprinkle in:

   filter.req.log_error("timestamp %d %f" %  
(filter.req.connection.id,time.time()))

If you want the content length put back, setup Apache to pass the  
output through
the "CONTENT_LENGTH" filter as well. Because you accumulate all the  
data into
one block it will work. You could also just calculate it yourself and  
add it back.

> i'm using mod_python 3.1.4 and apache 2.0.55 from ubuntu dapper.   
> the code of my filter is here: http://codespeak.net/svn/z3/ 
> deliverance/branches/namespaced/mpfilter.py
>
> anyone have suggestions, or pointers to docs, that might help me?

Reading the general Apache filter FAQ may or may not be useful. It  
isn't mod_python
specific, but explains how it works underneath.

   http://www.projectcomputing.com/resources/apacheFilterFAQ/

Graham
From prologic at shortcircuit.net.au  Fri Jul 21 20:38:39 2006
From: prologic at shortcircuit.net.au (James Mills)
Date: Fri Jul 21 20:38:44 2006
Subject: [mod_python] compile issues
Message-ID: <20060722003839.GA18321@shortcircuit.net.au>

Hi all,

With the current version of mod_python there are problems
with the configure script which I haven't been able to
fix/patch myself, so I'm asking for your help :)

checking what libraries Python was linked with... -lpython2.4
-lpthread -ldl  -lutil   -lm               
checking linker flags used to link Python... 
checking where Python include files are... -I/usr/include/python2.4
./configure: line 3427: syntax error near unexpected token `('
./configure: line 3427: `  as_lineno_3=`(expr $as_lineno_1 + 1)
2>/dev/null`'
=======> ERROR: Building
'/data/crux/packages/mod_python#3.2.8-2.pkg.tar.gz' failed.

-- Packages where update failed
mod_python


Relevant version information:

# prt-get listinst bash -v
bash 3.1.17-1
# prt-get listinst gcc -v 
gcc 4.0.3-2
# prt-get listinst glibc -v
glibc 2.3.6-2
# prt-get listinst mod_python -v
mod_python 3.2.5b-2

mod_python I'm trying to install:

mod_python 3.2.8

cheers
James

-- 
--
-"Problems are Solved by Method"
-
- James Mills <prologic@shortcircuit.net.au>
- HomePage: http://shortcircuit.net.au/~prologic/
- Phone: +61732166379
- Mobile: +61404270962
- Skype: therealprologic
- MSN: prologic@shortcircuit.net.au
- ICQ: 98888663
- IRC: irc://shortcircuit.net.au#se

Please avoid sending me Word or PowerPoint attachments.
See http://www.gnu.org/philosophy/no-word-attachments.html
From grahamd at dscpl.com.au  Fri Jul 21 20:52:14 2006
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Fri Jul 21 20:52:17 2006
Subject: [mod_python] compile issues
In-Reply-To: <20060722003839.GA18321@shortcircuit.net.au>
References: <20060722003839.GA18321@shortcircuit.net.au>
Message-ID: <BEC47F6E-DED5-47D1-9B8E-26DA3125EBD9@dscpl.com.au>

Its a bug in bash. See:

   https://issues.apache.org/jira/browse/MODPYTHON-122

for change you can make to "configure" script to workaround problem.

Issue is addressed in  mod_python 3.2.10 which will be out soon.

BTW, ensure you are using Apache 2.0.X with mod_python 3.2.8.
Support for Apache 2.2.X is only in mod_python 3.2.10.

Graham

On 22/07/2006, at 10:38 AM, James Mills wrote:

> Hi all,
>
> With the current version of mod_python there are problems
> with the configure script which I haven't been able to
> fix/patch myself, so I'm asking for your help :)
>
> checking what libraries Python was linked with... -lpython2.4
> -lpthread -ldl  -lutil   -lm
> checking linker flags used to link Python...
> checking where Python include files are... -I/usr/include/python2.4
> ./configure: line 3427: syntax error near unexpected token `('
> ./configure: line 3427: `  as_lineno_3=`(expr $as_lineno_1 + 1)
> 2>/dev/null`'
> =======> ERROR: Building
> '/data/crux/packages/mod_python#3.2.8-2.pkg.tar.gz' failed.
>
> -- Packages where update failed
> mod_python
>
>
> Relevant version information:
>
> # prt-get listinst bash -v
> bash 3.1.17-1
> # prt-get listinst gcc -v
> gcc 4.0.3-2
> # prt-get listinst glibc -v
> glibc 2.3.6-2
> # prt-get listinst mod_python -v
> mod_python 3.2.5b-2
>
> mod_python I'm trying to install:
>
> mod_python 3.2.8
>
> cheers
> James
>
> -- 
> --
> -"Problems are Solved by Method"
> -
> - James Mills <prologic@shortcircuit.net.au>
> - HomePage: http://shortcircuit.net.au/~prologic/
> - Phone: +61732166379
> - Mobile: +61404270962
> - Skype: therealprologic
> - MSN: prologic@shortcircuit.net.au
> - ICQ: 98888663
> - IRC: irc://shortcircuit.net.au#se
>
> Please avoid sending me Word or PowerPoint attachments.
> See http://www.gnu.org/philosophy/no-word-attachments.html
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python

From prologic at shortcircuit.net.au  Fri Jul 21 23:57:45 2006
From: prologic at shortcircuit.net.au (James Mills)
Date: Fri Jul 21 23:57:49 2006
Subject: [mod_python] compile issues
In-Reply-To: <BEC47F6E-DED5-47D1-9B8E-26DA3125EBD9@dscpl.com.au>
References: <20060722003839.GA18321@shortcircuit.net.au>
	<BEC47F6E-DED5-47D1-9B8E-26DA3125EBD9@dscpl.com.au>
Message-ID: <20060722035745.GB20411@shortcircuit.net.au>

On Sat, Jul 22, 2006 at 10:52:14AM +1000, Graham Dumpleton wrote:
> Its a bug in bash. See:
> 
>   https://issues.apache.org/jira/browse/MODPYTHON-122
> 
> for change you can make to "configure" script to workaround problem.

Does anyone have a patch for the configure script ?

> Issue is addressed in  mod_python 3.2.10 which will be out soon.

Oh excellent :)

> BTW, ensure you are using Apache 2.0.X with mod_python 3.2.8.
> Support for Apache 2.2.X is only in mod_python 3.2.10.

I'm using apache 2.0.x with mod_python 3.2.8 :)

cheers
James

-- 
--
-"Problems are Solved by Method"
-
- James Mills <prologic@shortcircuit.net.au>
- HomePage: http://shortcircuit.net.au/~prologic/
- Phone: +61732166379
- Mobile: +61404270962
- Skype: therealprologic
- MSN: prologic@shortcircuit.net.au
- ICQ: 98888663
- IRC: irc://shortcircuit.net.au#se

Please avoid sending me Word or PowerPoint attachments.
See http://www.gnu.org/philosophy/no-word-attachments.html
From grahamd at dscpl.com.au  Sat Jul 22 01:20:29 2006
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Sat Jul 22 01:20:29 2006
Subject: [mod_python] compile issues
In-Reply-To: <20060722035745.GB20411@shortcircuit.net.au>
References: <20060722003839.GA18321@shortcircuit.net.au>
	<BEC47F6E-DED5-47D1-9B8E-26DA3125EBD9@dscpl.com.au>
	<20060722035745.GB20411@shortcircuit.net.au>
Message-ID: <A0A3B9B2-A427-44CD-880C-01C13DA30458@dscpl.com.au>


On 22/07/2006, at 1:57 PM, James Mills wrote:

> On Sat, Jul 22, 2006 at 10:52:14AM +1000, Graham Dumpleton wrote:
>> Its a bug in bash. See:
>>
>>   https://issues.apache.org/jira/browse/MODPYTHON-122
>>
>> for change you can make to "configure" script to workaround problem.
>
> Does anyone have a patch for the configure script ?

The bug report referenced describes a number of options of what to  
change
the problematic line in the configure script to. Was there something  
in the
bug report you didn't understand??

Graham


From prologic at shortcircuit.net.au  Sat Jul 22 01:24:01 2006
From: prologic at shortcircuit.net.au (James Mills)
Date: Sat Jul 22 01:24:09 2006
Subject: [mod_python] compile issues
In-Reply-To: <A0A3B9B2-A427-44CD-880C-01C13DA30458@dscpl.com.au>
References: <20060722003839.GA18321@shortcircuit.net.au>
	<BEC47F6E-DED5-47D1-9B8E-26DA3125EBD9@dscpl.com.au>
	<20060722035745.GB20411@shortcircuit.net.au>
	<A0A3B9B2-A427-44CD-880C-01C13DA30458@dscpl.com.au>
Message-ID: <20060722052401.GA25215@shortcircuit.net.au>

On Sat, Jul 22, 2006 at 03:20:29PM +1000, Graham Dumpleton wrote:
> The bug report referenced describes a number of options of what to  
> change
> the problematic line in the configure script to. Was there something  
> in the
> bug report you didn't understand??

Hehe thanks. No I just tried patching it myself before
even mailing this list :) They must have really broken
the latest version of bash!

cheers
James

-- 
--
-"Problems are Solved by Method"
-
- James Mills <prologic@shortcircuit.net.au>
- HomePage: http://shortcircuit.net.au/~prologic/
- Phone: +61732166379
- Mobile: +61404270962
- Skype: therealprologic
- MSN: prologic@shortcircuit.net.au
- ICQ: 98888663
- IRC: irc://shortcircuit.net.au#se

Please avoid sending me Word or PowerPoint attachments.
See http://www.gnu.org/philosophy/no-word-attachments.html
From sanjeevdivekar at gmail.com  Mon Jul 24 05:15:04 2006
From: sanjeevdivekar at gmail.com (Sanjeev Divekar)
Date: Mon Jul 24 05:15:20 2006
Subject: [mod_python] please explain what's this
Message-ID: <a98e5dcd0607240215w6d435c34pbdac71efcabf65a7@mail.gmail.com>

hi,

I am new to mod_python using Apache 2.0.54, Python 2.4.2 and
mod_python 3.2.8 on Windows 2003 Server

Can anybody explain these line of code

index = myclass()
show = myclass().show_data

also i have a question
what is filters?

*******************************************************************************
index.py
*******************************************************************************
from mod_python import apache
from mod_python import psp
from mod_python import util

class myclass:
    def __init__(self):
        return None

    def __call__(self, req, para=''):
        tmpl = psp.PSP(req, filename='a.html')
        tmpl.run(vars={'para':para})
        return

    def show_data(self, req, para):
        msg = "Your first name is " + para[0]
        self(req, para=msg)
        return

index = myclass()
show = myclass().show_data
*******************************************************************************
*******************************************************************************
a.html
*******************************************************************************
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<HTML>
<HEAD>
<TITLE> New Document </TITLE>
</HEAD>
<BODY>
<h1><%=para%></h1>
<form method="post" action="show">
	<input type="text" name="para">
	<input type="text" name="para">
	<input type="submit">
</form>
</BODY>
</HTML>
*******************************************************************************


-- 
Sanjeev Divekar
Sanmisha Technologies
Mobile : +91 9820427416
Email  : sanjeev@sanmisha.com
From grahamd at dscpl.com.au  Mon Jul 24 05:44:27 2006
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Mon Jul 24 05:44:33 2006
Subject: [mod_python] please explain what's this
In-Reply-To: <a98e5dcd0607240215w6d435c34pbdac71efcabf65a7@mail.gmail.com>
References: <a98e5dcd0607240215w6d435c34pbdac71efcabf65a7@mail.gmail.com>
Message-ID: <ECE553B6-0763-48F2-B97E-B0199CBA61C2@dscpl.com.au>

First off, am presuming you are using mod_python.publisher as the
response handler. You don't state this.

On 24/07/2006, at 7:15 PM, Sanjeev Divekar wrote:

> hi,
>
> I am new to mod_python using Apache 2.0.54, Python 2.4.2 and
> mod_python 3.2.8 on Windows 2003 Server
>
> Can anybody explain these line of code
>
> index = myclass()
> show = myclass().show_data

The second line is strictly speaking not necessary in the sense that it
is accessible under a different URL anyway without the alias. :-)

Anyway, when you use mod_python.publisher, URLs will map to any
callable objects or data values. If the above is in a file called  
'index.py'
then the URL 'index.py/index' will map to the 'index' object. Because
'myclass' provides the '__call__()" member function, the 'index'  
object is
callable and so that member function is called for that URL.

Similarly, the URL 'index.py/show' maps to 'show' which because it
references a member function of an object instance, it is also callable
and so it also can be accessed.

Note that object instances such as 'index' are traversable, so one can
also use 'index.py/index/show_data' and it will yield the same result as
saying just 'index.py/show'.

Because mod_python.publisher treats 'index.py' as special, it is  
actually
possible to simply use 'index', 'show' and 'index/show_data' to achieve
the same end. Relying on this magic can be a bit troublesome though as
it makes relative URLs difficult to determine in certain cases.

> also i have a question
> what is filters?

Filters are a complex topic, in simple terms they provide the ability  
to process
the response being sent back to the client after the response handler  
has
generated it. When you have mastered the basics of mod_python, then you
may want to have a read of:

   http://www.projectcomputing.com/resources/apacheFilterFAQ/

This isn't mod_python specific and is more about the underlying  
filter mechanism
of Apache, but still quite useful. When you have worked out whether  
you need
them or not, then you might dig further into how the mod_python  
wrappers for
Apache filters work. Probably wasting your time to look at them now  
if you are
only starting out with mod_python as they are really an advanced topic.

> ********************************************************************** 
> *********
> index.py
> ********************************************************************** 
> *********
> from mod_python import apache
> from mod_python import psp
> from mod_python import util
>
> class myclass:
>    def __init__(self):
>        return None
>
>    def __call__(self, req, para=''):
>        tmpl = psp.PSP(req, filename='a.html')
>        tmpl.run(vars={'para':para})
>        return
>
>    def show_data(self, req, para):
>        msg = "Your first name is " + para[0]
>        self(req, para=msg)
>        return
>
> index = myclass()
> show = myclass().show_data
> ********************************************************************** 
> *********
> ********************************************************************** 
> *********
> a.html
> ********************************************************************** 
> *********
> <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
> <HTML>
> <HEAD>
> <TITLE> New Document </TITLE>
> </HEAD>
> <BODY>
> <h1><%=para%></h1>
> <form method="post" action="show">
> 	<input type="text" name="para">
> 	<input type="text" name="para">
> 	<input type="submit">
> </form>
> </BODY>
> </HTML>
> ********************************************************************** 
> *********
>
>
> -- 
> Sanjeev Divekar
> Sanmisha Technologies
> Mobile : +91 9820427416
> Email  : sanjeev@sanmisha.com
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python

From anthony at itia.ntua.gr  Mon Jul 24 11:13:14 2006
From: anthony at itia.ntua.gr (Antonis Christofides)
Date: Mon Jul 24 11:13:19 2006
Subject: [mod_python] SystemError: error return without exception set
Message-ID: <20060724151314.GL10391@itia.ntua.gr>

Hi,

I'm trying to run moinmoin on mod_python 2.7.10, python 2.3.5, apache
1.3.36, on a NetBSD.  I get the error on the subject when it's running
the following code (in the line marked with "=>"):

        sys.stderr.write(str(env)+"\n")
        sys.stderr.write(env["HTTP_ACCEPT_LANGUAGE"]+"\n")
        sys.stderr.write(self.http_accept_language+"\n")
 =>     sys.stderr.write(env.get('HTTP_ACCEPT_LANGUAGE',self.http_accept_language))

(In fact the original code said the following:
        self.http_accept_language = env.get('HTTP_ACCEPT_LANGUAGE',
                                            self.http_accept_language)
 but I inserted the four lines before that to see what's in the
 variables.
)

The output in the log file is:
    {'UNIQUE_ID': 'RMThtFLFptoAAB6zB5o', 'SERVER_SOFTWARE': 'Apache/1.3.36 (Unix) mod_gzip/1.3.26.1a mod_python/2.7.10 Python/2.3.5', [...snip...] 'HTTP_ACCEPT_LANGUAGE': 'el,en-us;q=0.7,en;q=0.3', [...snip...] }
    el,en-us;q=0.7,en;q=0.3
    en
    [Mon Jul 24 17:05:24 2006] SystemError: error return without exception set

So, as I understand, env.get(...) should return "el,en-us;q=0.7,en;q=0.3".

You have any clue what to check next? Thanks!

-- 
Antonis Christofides
+30-2107722840 (work)
+30-2106521785 (home)
+30-6979924665 (mobile)
From grahamd at dscpl.com.au  Mon Jul 24 18:19:47 2006
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Mon Jul 24 18:20:05 2006
Subject: [mod_python] SystemError: error return without exception set
Message-ID: <1153779586.12823@dscpl.user.openhosting.com>

Antonis Christofides wrote ..
> Hi,
> 
> I'm trying to run moinmoin on mod_python 2.7.10, python 2.3.5, apache
> 1.3.36, on a NetBSD.  I get the error on the subject when it's running
> the following code (in the line marked with "=>"):
> 
>         sys.stderr.write(str(env)+"\n")
>         sys.stderr.write(env["HTTP_ACCEPT_LANGUAGE"]+"\n")
>         sys.stderr.write(self.http_accept_language+"\n")
>  =>     sys.stderr.write(env.get('HTTP_ACCEPT_LANGUAGE',self.http_accept_language))
> 
> (In fact the original code said the following:
>         self.http_accept_language = env.get('HTTP_ACCEPT_LANGUAGE',
>                                             self.http_accept_language)
>  but I inserted the four lines before that to see what's in the
>  variables.
> )
> 
> The output in the log file is:
>     {'UNIQUE_ID': 'RMThtFLFptoAAB6zB5o', 'SERVER_SOFTWARE': 'Apache/1.3.36
> (Unix) mod_gzip/1.3.26.1a mod_python/2.7.10 Python/2.3.5', [...snip...]
> 'HTTP_ACCEPT_LANGUAGE': 'el,en-us;q=0.7,en;q=0.3', [...snip...] }
>     el,en-us;q=0.7,en;q=0.3
>     en
>     [Mon Jul 24 17:05:24 2006] SystemError: error return without exception
> set
> 
> So, as I understand, env.get(...) should return "el,en-us;q=0.7,en;q=0.3".
> 
> You have any clue what to check next? Thanks!

How is your specific problem linked to mod_python itself? What is "env", is it
an object created by mod_python or by something else?

BTW, you shouldn't use sys.stderr to output logging under mod_python anyway.
You should use mod_python.apache.log_error(). Using sys.stderr is not gauranteed
to actually produce anything in the Apache log in a timely fashion.

Graham
From jhknight at gmail.com  Mon Jul 24 19:11:31 2006
From: jhknight at gmail.com (Jay Knight)
Date: Mon Jul 24 19:11:35 2006
Subject: [mod_python] concurrent connections
Message-ID: <f95b617c0607241611m75b5bf77o63ed91cbbb29af6d@mail.gmail.com>

If you take the hello world example, and add a time.sleep(5) at the
beginning... like this:

-----
import time
from mod_python import apache

def handler(req):
    time.sleep(5)
    req.content_type = "text/plain"
    req.write("Hello World!")
    return apache.OK
-----

Then request that URL twice, it seems that the second one doesn't
start until the first one is completely finished, that is, I can't
make them run at the same time.  (And therefore, if I started 20 at
about the same time, the last one would not complete until about 100
seconds later, etc)  How would I go about making them run at the same
time?

I've got a pretty standard mod_python install on gentoo.  The
.htaccess for this directory is

-----
AddHandler mod_python .py
PythonHandler mptest
PythonDebug On
-----

I know this must be possible.  But I don't know if it is a
configuration issue (.htaccess) or something within the code itself
(manually forking stuff off to handle multiple connections? bleh).

Jay K
From grahamd at dscpl.com.au  Mon Jul 24 19:33:24 2006
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Mon Jul 24 19:33:29 2006
Subject: [mod_python] concurrent connections
Message-ID: <1153784004.19449@dscpl.user.openhosting.com>

Jay Knight wrote ..
> If you take the hello world example, and add a time.sleep(5) at the
> beginning... like this:
> 
> -----
> import time
> from mod_python import apache
> 
> def handler(req):
>     time.sleep(5)
>     req.content_type = "text/plain"
>     req.write("Hello World!")
>     return apache.OK
> -----
> 
> Then request that URL twice, it seems that the second one doesn't
> start until the first one is completely finished, that is, I can't
> make them run at the same time.  (And therefore, if I started 20 at
> about the same time, the last one would not complete until about 100
> seconds later, etc)  How would I go about making them run at the same
> time?
> 
> I've got a pretty standard mod_python install on gentoo.  The
> .htaccess for this directory is
> 
> -----
> AddHandler mod_python .py
> PythonHandler mptest
> PythonDebug On
> -----
> 
> I know this must be possible.  But I don't know if it is a
> configuration issue (.htaccess) or something within the code itself
> (manually forking stuff off to handle multiple connections? bleh).

Apache should handle everything for you so as to allow concurrent
connections.

Some questions for you.

1. What client are you using to create the connections and test this?
Are you sure it isn't the client that is serialising the requests?

One would normally use 'ab" to do such a test. For example:

  ab -n 10 -c 5 http://localhost/some/path

The '-n' option says 10 requests, with '-c' saying run 5 concurrently.

2. What version of Apache are you using?

3. If Apache 2.X, what MPM is compiled in to it, worker or prefork?

You can determine this by going:

  httpd -l

and then looking for either 'worker.c' or 'prefork.c' file being compiled in.

4. How is Apache configured in respect of number of child processes
to create etc.

For example:

<IfModule mpm_prefork_module>
    StartServers          5
    MinSpareServers       5
    MaxSpareServers      10
    MaxClients          150
    MaxRequestsPerChild   0
</IfModule>

or:

<IfModule mpm_worker_module>
    StartServers          2
    MaxClients          150
    MinSpareThreads      25
    MaxSpareThreads      75
    ThreadsPerChild      25
    MaxRequestsPerChild   0
</IfModule>

5. What version of mod_python are you using?

Graham
From jhknight at gmail.com  Mon Jul 24 23:18:57 2006
From: jhknight at gmail.com (Jay Knight)
Date: Mon Jul 24 23:19:02 2006
Subject: [mod_python] concurrent connections
In-Reply-To: <1153784004.19449@dscpl.user.openhosting.com>
References: <1153784004.19449@dscpl.user.openhosting.com>
Message-ID: <f95b617c0607242018x25ba13c8p20eca9b1e93e0133@mail.gmail.com>

1.  I was just using firefox when I noticed this behavior.
2. 2.0.58
3. looks like it's prefork
4. StartServers            2
    MinSpareServers         1
    MaxSpareServers         5
    MaxClients             64
    MaxRequestsPerChild  4000
5. 3.1.4

I just now noticed that this behavior only happens when the same URL
is called.  For example, if I have a file test.py in this directory,
and call its url, the mptest.py is still used because it's defined as
the handler.  If I try to load mptest.py and test.py at the same time,
they will both return 5 seconds later, but calling the same URL twice
will invoke the problem.

Everything else running on this server has no trouble with
concurrancy, just these scripts, so I'm guessing it's not apache
itself.

Any more ideas?

Jay K

On 7/24/06, Graham Dumpleton <grahamd@dscpl.com.au> wrote:
> Jay Knight wrote ..
> > If you take the hello world example, and add a time.sleep(5) at the
> > beginning... like this:
> >
> > -----
> > import time
> > from mod_python import apache
> >
> > def handler(req):
> >     time.sleep(5)
> >     req.content_type = "text/plain"
> >     req.write("Hello World!")
> >     return apache.OK
> > -----
> >
> > Then request that URL twice, it seems that the second one doesn't
> > start until the first one is completely finished, that is, I can't
> > make them run at the same time.  (And therefore, if I started 20 at
> > about the same time, the last one would not complete until about 100
> > seconds later, etc)  How would I go about making them run at the same
> > time?
> >
> > I've got a pretty standard mod_python install on gentoo.  The
> > .htaccess for this directory is
> >
> > -----
> > AddHandler mod_python .py
> > PythonHandler mptest
> > PythonDebug On
> > -----
> >
> > I know this must be possible.  But I don't know if it is a
> > configuration issue (.htaccess) or something within the code itself
> > (manually forking stuff off to handle multiple connections? bleh).
>
> Apache should handle everything for you so as to allow concurrent
> connections.
>
> Some questions for you.
>
> 1. What client are you using to create the connections and test this?
> Are you sure it isn't the client that is serialising the requests?
>
> One would normally use 'ab" to do such a test. For example:
>
>   ab -n 10 -c 5 http://localhost/some/path
>
> The '-n' option says 10 requests, with '-c' saying run 5 concurrently.
>
> 2. What version of Apache are you using?
>
> 3. If Apache 2.X, what MPM is compiled in to it, worker or prefork?
>
> You can determine this by going:
>
>   httpd -l
>
> and then looking for either 'worker.c' or 'prefork.c' file being compiled in.
>
> 4. How is Apache configured in respect of number of child processes
> to create etc.
>
> For example:
>
> <IfModule mpm_prefork_module>
>     StartServers          5
>     MinSpareServers       5
>     MaxSpareServers      10
>     MaxClients          150
>     MaxRequestsPerChild   0
> </IfModule>
>
> or:
>
> <IfModule mpm_worker_module>
>     StartServers          2
>     MaxClients          150
>     MinSpareThreads      25
>     MaxSpareThreads      75
>     ThreadsPerChild      25
>     MaxRequestsPerChild   0
> </IfModule>
>
> 5. What version of mod_python are you using?
>
> Graham
>
From deron.meranda at gmail.com  Tue Jul 25 00:10:09 2006
From: deron.meranda at gmail.com (Deron Meranda)
Date: Tue Jul 25 00:10:22 2006
Subject: [mod_python] concurrent connections
In-Reply-To: <f95b617c0607242018x25ba13c8p20eca9b1e93e0133@mail.gmail.com>
References: <1153784004.19449@dscpl.user.openhosting.com>
	<f95b617c0607242018x25ba13c8p20eca9b1e93e0133@mail.gmail.com>
Message-ID: <5c06fa770607242110l30946d47y17552ec3f4f470e@mail.gmail.com>

On 7/24/06, Jay Knight <jhknight@gmail.com> wrote:
> 1.  I was just using firefox when I noticed this behavior.

Firefox (and most browsers for that matter) limit the
number of currently active connections they make.
In Firefox, type in the URL,

   about:config

Then look for these settings:

   network.http.max-connections
   network.http.max-connections-per-server

Of course you can use Graham's suggestion of using the
"ab" tool to really test things.

> I just now noticed that this behavior only happens when the same URL
> is called.  For example, if I have a file test.py in this directory,
> and call its url, the mptest.py is still used because it's defined as
> the handler.  If I try to load mptest.py and test.py at the same time,
> they will both return 5 seconds later, but calling the same URL twice
> will invoke the problem.

This may also be some browser limiting side-effect (of which I don't
know).  Since your httpd is using prefork, there should be little
chance for any blocking interaction on the web server side.

Use ab, or even open lots of terminals/shell prompts, and use
wget in each one.
-- 
Deron Meranda
From grahamd at dscpl.com.au  Tue Jul 25 00:20:01 2006
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Tue Jul 25 00:20:04 2006
Subject: [mod_python] concurrent connections
Message-ID: <1153801201.10478@dscpl.user.openhosting.com>

Jay Knight wrote ..
> 1.  I was just using firefox when I noticed this behavior.
> 2. 2.0.58
> 3. looks like it's prefork
> 4. StartServers            2
>     MinSpareServers         1
>     MaxSpareServers         5
>     MaxClients             64
>     MaxRequestsPerChild  4000
> 5. 3.1.4
> 
> I just now noticed that this behavior only happens when the same URL
> is called.  For example, if I have a file test.py in this directory,
> and call its url, the mptest.py is still used because it's defined as
> the handler.  If I try to load mptest.py and test.py at the same time,
> they will both return 5 seconds later, but calling the same URL twice
> will invoke the problem.
> 
> Everything else running on this server has no trouble with
> concurrancy, just these scripts, so I'm guessing it's not apache
> itself.
> 
> Any more ideas?

As I suggested, use 'ab' from the command line to test it and take Firefox
out of the picture. It may be the browser. Also suggest put some logging
in the handler so you can see at what point things are executed.

For logging use something like:

from mod_python import apache
import time

def handler(req):
  apache.log_error('handler 1 %s %f' % (req.uri, time.time()))
  time.sleep(5.0)
  req.content_type = 'text/plain'
  req.write('hello')
  apache.log_error('handler 2 %s %f' % (req.uri, time.time()))
  return apache.OK

In the Apache error log you would then see:

[Tue Jul 25 14:16:09 2006] [error] handler 1 /~grahamd/mptest.py 1153800969.010983
[Tue Jul 25 14:16:09 2006] [error] handler 1 /~grahamd/mptest.py 1153800969.015628
[Tue Jul 25 14:16:09 2006] [error] handler 1 /~grahamd/mptest.py 1153800969.105815
[Tue Jul 25 14:16:09 2006] [error] handler 1 /~grahamd/mptest.py 1153800969.114988
[Tue Jul 25 14:16:09 2006] [error] handler 1 /~grahamd/mptest.py 1153800969.118962
[Tue Jul 25 14:16:14 2006] [error] handler 2 /~grahamd/mptest.py 1153800974.011605
[Tue Jul 25 14:16:14 2006] [error] handler 2 /~grahamd/mptest.py 1153800974.016111
[Tue Jul 25 14:16:14 2006] [error] handler 2 /~grahamd/mptest.py 1153800974.106389
[Tue Jul 25 14:16:14 2006] [error] handler 2 /~grahamd/mptest.py 1153800974.116681
[Tue Jul 25 14:16:14 2006] [error] handler 2 /~grahamd/mptest.py 1153800974.125160

I generated this with:

/usr/local/apache-2.0/bin/ab -n 5 -c 5 http://localhost:8082/~grahamd/mptest.py

The output from 'ab' was:

This is ApacheBench, Version 1.3d <$Revision: 1.73 $> apache-1.3
Copyright (c) 1996 Adam Twiss, Zeus Technology Ltd, http://www.zeustech.net/
Copyright (c) 1998-2002 The Apache Software Foundation, http://www.apache.org/

This is ApacheBench, Version 2.0.40-dev <$Revision: 1.146 $> apache-2.0
Copyright 1996 Adam Twiss, Zeus Technology Ltd, http://www.zeustech.net/
Copyright 1997-2005 The Apache Software Foundation, http://www.apache.org/

Benchmarking localhost (be patient).....done


Server Software:        Apache/2.2.2
Server Hostname:        localhost
Server Port:            8082

Document Path:          /~grahamd/mptest.py
Document Length:        5 bytes

Concurrency Level:      5
Time taken for tests:   5.123478 seconds
Complete requests:      5
Failed requests:        0
Write errors:           0
Total transferred:      890 bytes
HTML transferred:       25 bytes
Requests per second:    0.98 [#/sec] (mean)
Time per request:       5123.478 [ms] (mean)
Time per request:       1024.696 [ms] (mean, across all concurrent requests)
Transfer rate:          0.00 [Kbytes/sec] received

Connection Times (ms)
              min  mean[+/-sd] median   max
Connect:        0    0   0.0      0       0
Processing:  5008 5071  56.7   5108    5122
Waiting:     5007 5070  56.4   5107    5121
Total:       5008 5071  56.7   5108    5122

Percentage of the requests served within a certain time (ms)
  50%   5103
  66%   5113
  75%   5113
  80%   5122
  90%   5122
  95%   5122
  98%   5122
  99%   5122
 100%   5122 (longest request)

See how time take for tests is 5 seconds and mean time per request is
also 5 seconds.

Now trying:

  /usr/local/apache-2.2/bin/ab -n 10 -c 5 http://localhost:8082/~grahamd/mptest.py

I get:

This is ApacheBench, Version 2.0.40-dev <$Revision: 1.146 $> apache-2.0
Copyright 1996 Adam Twiss, Zeus Technology Ltd, http://www.zeustech.net/
Copyright 1997-2005 The Apache Software Foundation, http://www.apache.org/

Benchmarking localhost (be patient).....done


Server Software:        Apache/2.2.2
Server Hostname:        localhost
Server Port:            8082

Document Path:          /~grahamd/mptest.py
Document Length:        5 bytes

Concurrency Level:      5
Time taken for tests:   10.68433 seconds
Complete requests:      10
Failed requests:        0
Write errors:           0
Total transferred:      1780 bytes
HTML transferred:       50 bytes
Requests per second:    0.99 [#/sec] (mean)
Time per request:       5034.216 [ms] (mean)
Time per request:       1006.843 [ms] (mean, across all concurrent requests)
Transfer rate:          0.10 [Kbytes/sec] received

Connection Times (ms)
              min  mean[+/-sd] median   max
Connect:        0    9  12.4      9      34
Processing:  5005 5011   6.1   5010    5024
Waiting:     5000 5005   5.8   5006    5018
Total:       5005 5020  15.8   5019    5048

Percentage of the requests served within a certain time (ms)
  50%   5019
  66%   5022
  75%   5027
  80%   5047
  90%   5048
  95%   5048
  98%   5048
  99%   5048
 100%   5048 (longest request)

Mean time for each request is still 5 seconds, but overall test time is
10 seconds because did 10 request overall with 5 at a time. Thus
second set of 5 serialised behind the other so test itself takes twice
as long.

In summary, don't trust Firefox, use 'ab' as it will give you a more
accurate picture of what is going on.

Graham

> On 7/24/06, Graham Dumpleton <grahamd@dscpl.com.au> wrote:
> > Jay Knight wrote ..
> > > If you take the hello world example, and add a time.sleep(5) at the
> > > beginning... like this:
> > >
> > > -----
> > > import time
> > > from mod_python import apache
> > >
> > > def handler(req):
> > >     time.sleep(5)
> > >     req.content_type = "text/plain"
> > >     req.write("Hello World!")
> > >     return apache.OK
> > > -----
> > >
> > > Then request that URL twice, it seems that the second one doesn't
> > > start until the first one is completely finished, that is, I can't
> > > make them run at the same time.  (And therefore, if I started 20 at
> > > about the same time, the last one would not complete until about 100
> > > seconds later, etc)  How would I go about making them run at the same
> > > time?
> > >
> > > I've got a pretty standard mod_python install on gentoo.  The
> > > .htaccess for this directory is
> > >
> > > -----
> > > AddHandler mod_python .py
> > > PythonHandler mptest
> > > PythonDebug On
> > > -----
> > >
> > > I know this must be possible.  But I don't know if it is a
> > > configuration issue (.htaccess) or something within the code itself
> > > (manually forking stuff off to handle multiple connections? bleh).
> >
> > Apache should handle everything for you so as to allow concurrent
> > connections.
> >
> > Some questions for you.
> >
> > 1. What client are you using to create the connections and test this?
> > Are you sure it isn't the client that is serialising the requests?
> >
> > One would normally use 'ab" to do such a test. For example:
> >
> >   ab -n 10 -c 5 http://localhost/some/path
> >
> > The '-n' option says 10 requests, with '-c' saying run 5 concurrently.
> >
> > 2. What version of Apache are you using?
> >
> > 3. If Apache 2.X, what MPM is compiled in to it, worker or prefork?
> >
> > You can determine this by going:
> >
> >   httpd -l
> >
> > and then looking for either 'worker.c' or 'prefork.c' file being compiled
> in.
> >
> > 4. How is Apache configured in respect of number of child processes
> > to create etc.
> >
> > For example:
> >
> > <IfModule mpm_prefork_module>
> >     StartServers          5
> >     MinSpareServers       5
> >     MaxSpareServers      10
> >     MaxClients          150
> >     MaxRequestsPerChild   0
> > </IfModule>
> >
> > or:
> >
> > <IfModule mpm_worker_module>
> >     StartServers          2
> >     MaxClients          150
> >     MinSpareThreads      25
> >     MaxSpareThreads      75
> >     ThreadsPerChild      25
> >     MaxRequestsPerChild   0
> > </IfModule>
> >
> > 5. What version of mod_python are you using?
> >
> > Graham
> >
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
From deron.meranda at gmail.com  Tue Jul 25 00:34:51 2006
From: deron.meranda at gmail.com (Deron Meranda)
Date: Tue Jul 25 00:34:56 2006
Subject: [mod_python] SystemError: error return without exception set
In-Reply-To: <20060724151314.GL10391@itia.ntua.gr>
References: <20060724151314.GL10391@itia.ntua.gr>
Message-ID: <5c06fa770607242134n679570ewd80555b077e83d17@mail.gmail.com>

On 7/24/06, Antonis Christofides <anthony@itia.ntua.gr> wrote:
> I'm trying to run moinmoin on mod_python 2.7.10, python 2.3.5, apache
> 1.3.36, on a NetBSD.  I get the error on the subject when it's running
> the following code (in the line marked with "=>"):
>
>         sys.stderr.write(str(env)+"\n")
>         sys.stderr.write(env["HTTP_ACCEPT_LANGUAGE"]+"\n")
>         sys.stderr.write(self.http_accept_language+"\n")
>  =>     sys.stderr.write(env.get('HTTP_ACCEPT_LANGUAGE',self.http_accept_language))
>

It looks like the code you have is written to be running under
a CGI (or WSGI) interface between MoinMoin and Apache;
rather than mod_python.  The mod_python interface is quite
a bit different: you communicate with Apache via objects
rather than writing to sys.stderr or reading values from the
environment dictionary.

Be sure to read the MoinMoin with mod_python instruction
page at,

http://moinmoin.wikiwikiweb.de/HelpOnInstalling/ApacheWithModPython
-- 
Deron Meranda
From anthony at itia.ntua.gr  Tue Jul 25 04:49:41 2006
From: anthony at itia.ntua.gr (Antonis Christofides)
Date: Tue Jul 25 04:49:51 2006
Subject: [mod_python] SystemError: error return without exception set
In-Reply-To: <1153779586.12823@dscpl.user.openhosting.com>
References: <1153779586.12823@dscpl.user.openhosting.com>
Message-ID: <20060725084941.GM10391@itia.ntua.gr>

Thank you for the replies.  I replaced sys.stderr.write with
mod_python.apache.log_error, so that the code is correct, and I get
identical results.  Now, "env" is set by the following code:

   1    # some mod_python 2.7.X has no get method for table objects,
   2    # so we make a real dict out of it first.
   3    if not hasattr(req.subprocess_env,'get'):
   4        env=dict(req.subprocess_env)
   5    else:
   6        env=req.subprocess_env
   7    self._setup_vars_from_std_env(env)   <= this is the function
                                                where the exception
                                                occurs
 
I found out that line 6 actually runs.  When I moved line 4 out of the
"if" and commented out the rest, env.get was working properly
afterwards.  Maybe env.get exists but does not work properly?

-- 
Antonis Christofides
+30-2107722840 (work)
+30-2106521785 (home)
+30-6979924665 (mobile)
From grahamd at dscpl.com.au  Tue Jul 25 06:18:55 2006
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Tue Jul 25 06:19:22 2006
Subject: [mod_python] SystemError: error return without exception set
In-Reply-To: <20060725084941.GM10391@itia.ntua.gr>
References: <1153779586.12823@dscpl.user.openhosting.com>
	<20060725084941.GM10391@itia.ntua.gr>
Message-ID: <1471A328-587C-4CDC-BC81-5C539535DA8A@dscpl.com.au>


On 25/07/2006, at 6:49 PM, Antonis Christofides wrote:

> Thank you for the replies.  I replaced sys.stderr.write with
> mod_python.apache.log_error, so that the code is correct, and I get
> identical results.  Now, "env" is set by the following code:
>
>    1    # some mod_python 2.7.X has no get method for table objects,
>    2    # so we make a real dict out of it first.
>    3    if not hasattr(req.subprocess_env,'get'):
>    4        env=dict(req.subprocess_env)
>    5    else:
>    6        env=req.subprocess_env
>    7    self._setup_vars_from_std_env(env)   <= this is the function
>                                                 where the exception
>                                                 occurs
>
> I found out that line 6 actually runs.  When I moved line 4 out of the
> "if" and commented out the rest, env.get was working properly
> afterwards.  Maybe env.get exists but does not work properly?

 From what I can tell no mod_python 2.7.X has the get() method. At least
2.7.10 doesn't and there was no 2.7.X version after that.

Instead of get() you can use [] subscript but you will have to catch the
exception if key isn't present.

Don't wait for the get() method to be added as no more work is being  
done
on mod_python 2.7.X branch. The method does exist in 3.X branch though.

Graham
From richardlewis at fastmail.co.uk  Tue Jul 25 06:21:40 2006
From: richardlewis at fastmail.co.uk (Richard Lewis)
Date: Tue Jul 25 06:24:09 2006
Subject: [mod_python] Pipes and security
Message-ID: <200607251121.41340.richardlewis@fastmail.co.uk>

Hi there,

Just investigating some possible implementation methods.

Does it pose a security risk in mod_python to do this sort of thing:

def handler(req):
  # code is from memory so may not be correct
  # but its the idea thats important ;-)
  i, o = os.popen2("cmd")
  i.write("some data")
  i.close()
  
  req.write(o.read())
  o.close()

I don't really understand it properly, but I've read before now that using 
pipes to execute shell commands from CGI scripts can be insecure. Does the 
same apply with Apache modules like mod_python?

Cheers,
Richard
-- 
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
Richard Lewis
Sonic Arts Research Archive
http://www.sara.uea.ac.uk/
JID: ironchicken@jabber.earth.li
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
From nicolas at lehuen.com  Tue Jul 25 06:35:15 2006
From: nicolas at lehuen.com (Nicolas Lehuen)
Date: Tue Jul 25 06:35:18 2006
Subject: [mod_python] Pipes and security
In-Reply-To: <200607251121.41340.richardlewis@fastmail.co.uk>
References: <200607251121.41340.richardlewis@fastmail.co.uk>
Message-ID: <c298f2d70607250335qf892fdcj8a32f9a4771bcd4b@mail.gmail.com>

The problem is not related to the choice of technology. It is about
accepting data from the web and using it in an executable context.

If the command you pass are built from data sent over the web, there is a
chance that some malicious data can execute dangerous code. Therefore, you
have to make sure that any data sent over the web (in forms or query
parameters) is properly escaped when included in executable code (command
line parameters, SQL requests, etc.).

For more information, see the classical "SQL Injection" problem.

http://en.wikipedia.org/wiki/SQL_injection

Regards,
Nicolas

2006/7/25, Richard Lewis <richardlewis@fastmail.co.uk>:
>
> Hi there,
>
> Just investigating some possible implementation methods.
>
> Does it pose a security risk in mod_python to do this sort of thing:
>
> def handler(req):
>   # code is from memory so may not be correct
>   # but its the idea thats important ;-)
>   i, o = os.popen2("cmd")
>   i.write("some data")
>   i.close()
>
>   req.write(o.read())
>   o.close()
>
> I don't really understand it properly, but I've read before now that using
> pipes to execute shell commands from CGI scripts can be insecure. Does the
> same apply with Apache modules like mod_python?
>
> Cheers,
> Richard
> --
> -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
> Richard Lewis
> Sonic Arts Research Archive
> http://www.sara.uea.ac.uk/
> JID: ironchicken@jabber.earth.li
> -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20060725/7a13ce57/attachment.html
From richardlewis at fastmail.co.uk  Tue Jul 25 06:45:08 2006
From: richardlewis at fastmail.co.uk (Richard Lewis)
Date: Tue Jul 25 06:45:17 2006
Subject: [mod_python] Pipes and security
In-Reply-To: <c298f2d70607250335qf892fdcj8a32f9a4771bcd4b@mail.gmail.com>
References: <200607251121.41340.richardlewis@fastmail.co.uk>
	<c298f2d70607250335qf892fdcj8a32f9a4771bcd4b@mail.gmail.com>
Message-ID: <200607251145.09295.richardlewis@fastmail.co.uk>

On Tuesday 25 July 2006 11:35, you wrote:
> The problem is not related to the choice of technology. It is about
> accepting data from the web and using it in an executable context.
>
Ahh, I see. What I'm planning on doing is executing keyword searches using 
Swish-e and keywords supplied by an HTTP GET command. AFAIK, Swish doesn't 
allow any sort execution of arbitrary code, so this shouldn't cause any 
problems.

Thanks for your help,
Richard
-- 
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
Richard Lewis
Sonic Arts Research Archive
http://www.sara.uea.ac.uk/
JID: ironchicken@jabber.earth.li
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
From nicolas at lehuen.com  Tue Jul 25 06:46:47 2006
From: nicolas at lehuen.com (Nicolas Lehuen)
Date: Tue Jul 25 06:46:53 2006
Subject: [mod_python] Pipes and security
In-Reply-To: <c298f2d70607250335qf892fdcj8a32f9a4771bcd4b@mail.gmail.com>
References: <200607251121.41340.richardlewis@fastmail.co.uk>
	<c298f2d70607250335qf892fdcj8a32f9a4771bcd4b@mail.gmail.com>
Message-ID: <c298f2d70607250346m180ee84bic2c61059cdcf46e8@mail.gmail.com>

As an example in your context, imagine a stupid way of serving files (the
code is obviously false but I just want to show you the problem) :

def serve_file(req,filename):
    i, o = os.popen("sh")
    i.write("cat %s"%filename)
    i.close()
    req.write(o.read())
    o.close()

then calling http://myserver/stupid.py/serve_file?filename=foobar.txt would
work correctly.

Now if someone calls
http://myserver/stupid.py/serve_file?filename=foobar.txt%3Brm+-Rf+%2F ,
you've got a big problem because the command will be "cat foobar.txt;rm -Rf
/", displaying the content of foobar.txt THEN erasing all your server's main
partition...

Therefore, you must transform the input string, escaping it to make sure
that this cannot happen. It turns out doing it properly and securely is
quite difficult, so you'd better find another way of doing what you need.
For example, SQL injection is most easily fought by using prepared statement
with placeholders. As for your problem, well, it depends on what you want to
do.

Regards,
Nicolas

2006/7/25, Nicolas Lehuen <nicolas@lehuen.com>:
>
> The problem is not related to the choice of technology. It is about
> accepting data from the web and using it in an executable context.
>
> If the command you pass are built from data sent over the web, there is a
> chance that some malicious data can execute dangerous code. Therefore, you
> have to make sure that any data sent over the web (in forms or query
> parameters) is properly escaped when included in executable code (command
> line parameters, SQL requests, etc.).
>
> For more information, see the classical "SQL Injection" problem.
>
> http://en.wikipedia.org/wiki/SQL_injection
>
> Regards,
> Nicolas
>
> 2006/7/25, Richard Lewis <richardlewis@fastmail.co.uk>:
>
> > Hi there,
> >
> > Just investigating some possible implementation methods.
> >
> > Does it pose a security risk in mod_python to do this sort of thing:
> >
> > def handler(req):
> >   # code is from memory so may not be correct
> >   # but its the idea thats important ;-)
> >   i, o = os.popen2("cmd")
> >   i.write("some data")
> >   i.close()
> >
> >   req.write(o.read())
> >   o.close()
> >
> > I don't really understand it properly, but I've read before now that
> > using
> > pipes to execute shell commands from CGI scripts can be insecure. Does
> > the
> > same apply with Apache modules like mod_python?
> >
> > Cheers,
> > Richard
> > --
> > -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
> > Richard Lewis
> > Sonic Arts Research Archive
> > http://www.sara.uea.ac.uk/
> > JID: ironchicken@jabber.earth.li
> > -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
> > _______________________________________________
> > Mod_python mailing list
> > Mod_python@modpython.org
> > http://mailman.modpython.org/mailman/listinfo/mod_python
> >
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20060725/d6e1b296/attachment.html
From webograph at eml.cc  Tue Jul 25 06:55:22 2006
From: webograph at eml.cc (webograph)
Date: Tue Jul 25 06:55:25 2006
Subject: [mod_python] Pipes and security
In-Reply-To: <200607251121.41340.richardlewis@fastmail.co.uk>
References: <200607251121.41340.richardlewis@fastmail.co.uk>
Message-ID: <44C5F89A.6040100@eml.cc>

hi richard,

if you use a static command like "cmd", the script is perfectly all
right. you can easily run into problems if you pass unfiltered user data
to a command:
i, o = os.popen2("cmd files/%s" % user_input)
will get you into Very Big Trouble -- the user could pass "foo; cat
/etc/password | mail me@my.domain" to get list of users in your system,
for example -- in other words, execute arbitrary commands.

if you have to use user input to build commands:
- check if they are valid (if user_input in list_of_valid_options, for
example)
- escape everything properly or, even better, use process functions that
don't call the system's command interpreter (/bin/sh) on unix. use, for
example, subprocess.call (http://docs.python.org/lib/node236.html) -- no
matter what the user passes to subprocess.call(["openssl", "verify",
user_input]), the only process a malcious user can call is openssl.

regards
webograph

p.s. is there some configuration error in the mailing list? when i 
replied 15 minutes ago, the mail was sent to the original sender 
directly; afaik there should be some reply-to header appended by mailman

Richard Lewis wrote:

>Hi there,
>
>Just investigating some possible implementation methods.
>
>Does it pose a security risk in mod_python to do this sort of thing:
>
>def handler(req):
>  # code is from memory so may not be correct
>  # but its the idea thats important ;-)
>  i, o = os.popen2("cmd")
>  i.write("some data")
>  i.close()
>  
>  req.write(o.read())
>  o.close()
>
>I don't really understand it properly, but I've read before now that using 
>pipes to execute shell commands from CGI scripts can be insecure. Does the 
>same apply with Apache modules like mod_python?
>
>Cheers,
>Richard
>  
>


From richardlewis at fastmail.co.uk  Tue Jul 25 06:59:58 2006
From: richardlewis at fastmail.co.uk (Richard Lewis)
Date: Tue Jul 25 07:00:19 2006
Subject: [mod_python] Pipes and security
In-Reply-To: <200607251145.09295.richardlewis@fastmail.co.uk>
References: <200607251121.41340.richardlewis@fastmail.co.uk>
	<c298f2d70607250335qf892fdcj8a32f9a4771bcd4b@mail.gmail.com>
	<200607251145.09295.richardlewis@fastmail.co.uk>
Message-ID: <200607251159.58790.richardlewis@fastmail.co.uk>

On Tuesday 25 July 2006 11:45, Richard Lewis wrote:
> On Tuesday 25 July 2006 11:35, you wrote:
> > The problem is not related to the choice of technology. It is about
> > accepting data from the web and using it in an executable context.
>
> Ahh, I see. What I'm planning on doing is executing keyword searches using
> Swish-e and keywords supplied by an HTTP GET command.

Ooo! I've just found Python bindings to swish-e 
<http://jibe.freeshell.org/bits/SwishE/> so I may be able to use those 
instead. (I guess that would be faster than starting a new process as well.) 
The developer does say that they're buggy, but I've just tried a simple 
search and it worked alright.

Cheers,
Richard
-- 
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
Richard Lewis
Sonic Arts Research Archive
http://www.sara.uea.ac.uk/
JID: ironchicken@jabber.earth.li
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
From tommys at eden.rutgers.edu  Tue Jul 25 15:56:11 2006
From: tommys at eden.rutgers.edu (Thomas J. Schirripa)
Date: Tue Jul 25 15:56:19 2006
Subject: [mod_python] newbie question - using multiple handlers
Message-ID: <6441375.244361153857370403.JavaMail.tomcat@roadmaster>

I'm pretty new to both mod_python and apache. I have just written multiple handlers to deal with different webpages I have written. My problem is that if I use PythonHandler for each of my handlers in the conf. file, whenever I run a webpage, it tries to use ALL my handlers. Basically, I want only one handler to be used per webpage. The "action" in my forms only specify one handler, but based on the errors I am getting, it is also running the other handlers. Is there a way that I can set directives such as PythonHandler for particular html files? Or do I need to separate my files into different directories? I would hate to have to make a switch handler that determined what methods to call from my handler files so that the conf file only had one handler in it.
Thanks,
Tom
From grahamd at dscpl.com.au  Tue Jul 25 18:11:51 2006
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Tue Jul 25 18:12:38 2006
Subject: [mod_python] newbie question - using multiple handlers
Message-ID: <1153865511.2160@dscpl.user.openhosting.com>

Thomas J. Schirripa wrote ..
> I'm pretty new to both mod_python and apache. I have just written multiple
> handlers to deal with different webpages I have written. My problem is
> that if I use PythonHandler for each of my handlers in the conf. file,
> whenever I run a webpage, it tries to use ALL my handlers. Basically, I
> want only one handler to be used per webpage. The "action" in my forms
> only specify one handler, but based on the errors I am getting, it is also
> running the other handlers. Is there a way that I can set directives such
> as PythonHandler for particular html files? Or do I need to separate my
> files into different directories? I would hate to have to make a switch
> handler that determined what methods to call from my handler files so that
> the conf file only had one handler in it.

Post what Apache configuration you are using for your PythonHandler
and SetHandler/AddHandler directives related to mod_python. Is this
being set in a .htaccess file or in main Apache configuration within a
Directory/Location directive?

If the PythonHandler directives at present refer sto your own handlers, use
of a switch or dispatch handler may be your only choice when using mod_python
3.2.X or earlier versions. This is because the logical thing to do of:

  <Files page1.html>
  PythonHandler handlers::page1_html
  </Files>

  <Files page2.html>
  PythonHandler handlers::page2_html
  </Files>

doesn't necessarily work, although it is fixed in development version of
mod_python 3.3.

The problem with using <Files> is that mod_python sets up Python path
wrongly and if handlers.py is in the directory for the .htaccess or Directory
directive it will not find it. Will be okay if handler.py is elsewhere and the
PythonPath directive is used to refer to the directory where it is located.

Rather than try and hack up a solution you may want to look at Vampire
which already provides a basic switch or dispatch handler which maps
to basic mod_python handlers. This way you can have separate handler
files for each resource and if necessary distinct handlers for different
views of a resource as well. See:

  http://www.dscpl.com.au/projects/vampire/articles/vampire-001.html

for a quick overview of Vampire.

Graham


  
From martijn at xs4us.nu  Tue Jul 25 20:49:43 2006
From: martijn at xs4us.nu (Martijn Moeling)
Date: Tue Jul 25 20:49:46 2006
Subject: [mod_python] newbie question - using multiple handlers
Message-ID: <B6C73A5E30565245BB6D32B5F5DF7A520BECAF@sense.emmastraat.pijnacker>


I would do it different


I would do something like this:

One handler in the apache config

Def handler(req):
	If req.unparsed_uri == "/page1.html":
		#Do something for page1
		Page=1
	elif req.unparsed.uri == "/page2.html":
	      #Do something for page2
		Page=2
	Send_page(req,Page)
	Return Apache.Ok

Def Send_page(req,Page):
	req.write("this is page : "+str(Page))

(My outlook messes up the use of small and capital letters, you get the
point though

Martijn

-----Oorspronkelijk bericht-----
Van: mod_python-bounces@modpython.org
[mailto:mod_python-bounces@modpython.org] Namens Graham Dumpleton
Verzonden: Wednesday, July 26, 2006 00:12
Aan: Thomas J. Schirripa
CC: mod_python@modpython.org
Onderwerp: Re: [mod_python] newbie question - using multiple handlers

Thomas J. Schirripa wrote ..
> I'm pretty new to both mod_python and apache. I have just written
multiple
> handlers to deal with different webpages I have written. My problem is
> that if I use PythonHandler for each of my handlers in the conf. file,
> whenever I run a webpage, it tries to use ALL my handlers. Basically,
I
> want only one handler to be used per webpage. The "action" in my forms
> only specify one handler, but based on the errors I am getting, it is
also
> running the other handlers. Is there a way that I can set directives
such
> as PythonHandler for particular html files? Or do I need to separate
my
> files into different directories? I would hate to have to make a
switch
> handler that determined what methods to call from my handler files so
that
> the conf file only had one handler in it.

Post what Apache configuration you are using for your PythonHandler
and SetHandler/AddHandler directives related to mod_python. Is this
being set in a .htaccess file or in main Apache configuration within a
Directory/Location directive?

If the PythonHandler directives at present refer sto your own handlers,
use
of a switch or dispatch handler may be your only choice when using
mod_python
3.2.X or earlier versions. This is because the logical thing to do of:

  <Files page1.html>
  PythonHandler handlers::page1_html
  </Files>

  <Files page2.html>
  PythonHandler handlers::page2_html
  </Files>

doesn't necessarily work, although it is fixed in development version of
mod_python 3.3.

The problem with using <Files> is that mod_python sets up Python path
wrongly and if handlers.py is in the directory for the .htaccess or
Directory
directive it will not find it. Will be okay if handler.py is elsewhere
and the
PythonPath directive is used to refer to the directory where it is
located.

Rather than try and hack up a solution you may want to look at Vampire
which already provides a basic switch or dispatch handler which maps
to basic mod_python handlers. This way you can have separate handler
files for each resource and if necessary distinct handlers for different
views of a resource as well. See:

  http://www.dscpl.com.au/projects/vampire/articles/vampire-001.html

for a quick overview of Vampire.

Graham


  
_______________________________________________
Mod_python mailing list
Mod_python@modpython.org
http://mailman.modpython.org/mailman/listinfo/mod_python

From grahamd at dscpl.com.au  Tue Jul 25 21:22:10 2006
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Tue Jul 25 21:22:13 2006
Subject: [mod_python] newbie question - using multiple handlers
Message-ID: <1153876930.5191@dscpl.user.openhosting.com>

Martijn Moeling wrote ..
> 
> I would do it different
> 
> 
> I would do something like this:
> 
> One handler in the apache config
> 
> Def handler(req):
> 	If req.unparsed_uri == "/page1.html":
> 		#Do something for page1
> 		Page=1
> 	elif req.unparsed.uri == "/page2.html":
> 	      #Do something for page2
> 		Page=2
> 	Send_page(req,Page)
> 	Return Apache.Ok
> 
> Def Send_page(req,Page):
> 	req.write("this is page : "+str(Page))
> 
> (My outlook messes up the use of small and capital letters, you get the
> point though

Which just like Vampire is just another switch or dispatch handler which is
what they wanted to avoid. At least with Vampire it is a generic dispatch
handler whereas the above would require modification every time a new
page is added.

A few other comments on your example above.

First is that it will only work if the handler is located at the root of the URL
namespace. A dispatch handler should base decisions on the relative URL
which is situated below the point in the URL hierarchy at which the handler
is anchored. This is not necessarily what req.path_info is set to and needs
to be calculated properly as a separate step.

Second is that because the handler runs as the response handler and you
always return apache.OK for everything, it isn't possible to let Apache fall
back to serving up a static file with the same extension as any request being
processed through the handler.

It is possible to return apache.DECLINED when the handler doesn't handle
the URL and then Apache will return either NOT FOUND or serve up any
matching static file. This will only work for static files though and it isn't
possible to defer to a completely different Apache module to deliver up a
dynamic response using a handler of its own.

For it to work with non static output, would require a fixuphandler to be
used to make the decision rather than SetHandler or AddHandler and for
enabling of mod_python to be dynamic. This though also requires
mod_python 3.3 as prior versions of mod_python don't allow req.handler
to be set by handlers.

In short, in this case I also believe one is better off using a dispatch handler,
but I would highly recommend an existing generic solution rather than a
hand rolled solution as there are lots of gotcha to doing it right. I would
also say that Apache does have a lot of configurability which can also be
used, and just because we are Python fanatics here doesn't mean we should
throw away all the goodness Apache has to offer and try to do everything
in a Python response handler. ;-)

Graham

> -----Oorspronkelijk bericht-----
> Van: mod_python-bounces@modpython.org
> [mailto:mod_python-bounces@modpython.org] Namens Graham Dumpleton
> Verzonden: Wednesday, July 26, 2006 00:12
> Aan: Thomas J. Schirripa
> CC: mod_python@modpython.org
> Onderwerp: Re: [mod_python] newbie question - using multiple handlers
> 
> Thomas J. Schirripa wrote ..
> > I'm pretty new to both mod_python and apache. I have just written
> multiple
> > handlers to deal with different webpages I have written. My problem is
> > that if I use PythonHandler for each of my handlers in the conf. file,
> > whenever I run a webpage, it tries to use ALL my handlers. Basically,
> I
> > want only one handler to be used per webpage. The "action" in my forms
> > only specify one handler, but based on the errors I am getting, it is
> also
> > running the other handlers. Is there a way that I can set directives
> such
> > as PythonHandler for particular html files? Or do I need to separate
> my
> > files into different directories? I would hate to have to make a
> switch
> > handler that determined what methods to call from my handler files so
> that
> > the conf file only had one handler in it.
> 
> Post what Apache configuration you are using for your PythonHandler
> and SetHandler/AddHandler directives related to mod_python. Is this
> being set in a .htaccess file or in main Apache configuration within a
> Directory/Location directive?
> 
> If the PythonHandler directives at present refer sto your own handlers,
> use
> of a switch or dispatch handler may be your only choice when using
> mod_python
> 3.2.X or earlier versions. This is because the logical thing to do of:
> 
>   <Files page1.html>
>   PythonHandler handlers::page1_html
>   </Files>
> 
>   <Files page2.html>
>   PythonHandler handlers::page2_html
>   </Files>
> 
> doesn't necessarily work, although it is fixed in development version of
> mod_python 3.3.
> 
> The problem with using <Files> is that mod_python sets up Python path
> wrongly and if handlers.py is in the directory for the .htaccess or
> Directory
> directive it will not find it. Will be okay if handler.py is elsewhere
> and the
> PythonPath directive is used to refer to the directory where it is
> located.
> 
> Rather than try and hack up a solution you may want to look at Vampire
> which already provides a basic switch or dispatch handler which maps
> to basic mod_python handlers. This way you can have separate handler
> files for each resource and if necessary distinct handlers for different
> views of a resource as well. See:
> 
>   http://www.dscpl.com.au/projects/vampire/articles/vampire-001.html
> 
> for a quick overview of Vampire.
> 
> Graham
> 
> 
>   
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
> 
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
From jcigar at ulb.ac.be  Thu Jul 27 09:25:41 2006
From: jcigar at ulb.ac.be (Julien Cigar)
Date: Thu Jul 27 09:20:26 2006
Subject: [mod_python] PSP
Message-ID: <44C8BED5.4070608@ulb.ac.be>

Hello,

I'm using PSP as a template engine (with SQLAlchemy and a home-made 
handler).

One thing which is _VERY_ annoying in PSP is that if a variable doesn't 
exist in the current global namespace, the script fails with a stack 
trace ... rather than output a blank for example.

I had resolved this problem partially with a custom function (a sort of 
templatetag) : http://rafb.net/paste/results/0BqTEk48.html
With this function I could do things like <%= 
access('invasive.scientific_name.name', globals()) %>, however this 
doesn't work with SQLAlchemy because the variable doesn't exists in the 
current namespace until it has been accessed (to avoid useless database 
accesses) ...

I think it will be a good idea to have a sort of access() function in 
the next mod_python release which output a blank (or ...) if the 
variable doesn't exist ..

Does anyone has an elegant solution to resolve this problem (other than 
a <% try: %> .... <% except: %> ... ?

Thanks,
Julien

-- 
Julien Cigar
Belgian Biodiversity Platform
http://www.biodiversity.be
Universit? Libre de Bruxelles
Campus de la Plaine CP 257
B?timent NO, Bureau 4 N4 115C (Niveau 4)
Boulevard du Triomphe, entr?e ULB 2
B-1050 Bruxelles
office: jcigar@ulb.ac.be
home: mage@mordor.ath.cx

From grahamd at dscpl.com.au  Thu Jul 27 18:12:49 2006
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Thu Jul 27 18:12:59 2006
Subject: [mod_python] PSP
Message-ID: <1154038369.17276@dscpl.user.openhosting.com>

Julien Cigar wrote ..
> Hello,
> 
> I'm using PSP as a template engine (with SQLAlchemy and a home-made 
> handler).
> 
> One thing which is _VERY_ annoying in PSP is that if a variable doesn't
> exist in the current global namespace, the script fails with a stack 
> trace ... rather than output a blank for example.
> 
> I had resolved this problem partially with a custom function (a sort of
> templatetag) : http://rafb.net/paste/results/0BqTEk48.html
> With this function I could do things like <%= 
> access('invasive.scientific_name.name', globals()) %>, however this 
> doesn't work with SQLAlchemy because the variable doesn't exists in the
> current namespace until it has been accessed (to avoid useless database
> accesses) ...
> 
> I think it will be a good idea to have a sort of access() function in 
> the next mod_python release which output a blank (or ...) if the 
> variable doesn't exist ..
> 
> Does anyone has an elegant solution to resolve this problem (other than
> a <% try: %> .... <% except: %> ... ?

You could use:

  'y' in globals() and y or ''

or in your case:

  'name' in invasive.scientific_name and invasive.scientific_name.name or ''

Either way it is going to be messy.

In respect of changing PSP, don't think it could be changed to automatically
translate non existent variable references to an empty string as it is being
executed as Python code and not by some higher level translation layer that
could meaningfully generate such an alternate form.

Graham
From christianhgross at gmail.com  Fri Jul 28 18:08:48 2006
From: christianhgross at gmail.com (Christian Gross)
Date: Fri Jul 28 18:09:00 2006
Subject: [mod_python] Background threads in mod_python
Message-ID: <ae4ef4460607281508qf3d449es8d96a222200792c9@mail.gmail.com>

Hi,

I have been using mod_python and am wondering about creating
background threads. I can create the background thread, but if the
thread requires a longer processing time than the request the
background thread is exited.

Is it possible to create a background thread and have it execute
without being killed?

Thanks

Christian Gross
From grahamd at dscpl.com.au  Fri Jul 28 21:36:07 2006
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Fri Jul 28 21:36:09 2006
Subject: [mod_python] Background threads in mod_python
In-Reply-To: <ae4ef4460607281508qf3d449es8d96a222200792c9@mail.gmail.com>
References: <ae4ef4460607281508qf3d449es8d96a222200792c9@mail.gmail.com>
Message-ID: <B52BDBA8-A21B-4F4A-B45D-7A23871E4EBE@dscpl.com.au>


On 29/07/2006, at 8:08 AM, Christian Gross wrote:

> I have been using mod_python and am wondering about creating
> background threads. I can create the background thread, but if the
> thread requires a longer processing time than the request the
> background thread is exited.
>
> Is it possible to create a background thread and have it execute
> without being killed?

How do you know the thread is being killed? Are you sure it isn't the  
process
as a whole?

There isn't any fundamental reason why a thread can't outlive the  
life of the
request handler, but there are some common mistakes.

Main issue that you cannot pass the mod_python request object to such  
a thread
and have it hold a reference to it and use the request object beyond  
the life
of the request handler. This is because the internals of the request  
object
are destroyed when the request handler returns and an access to the  
request
object may result in the Apache child process then subsequently  
crashing.

Alternatively, if the Apache child process doesn't crash, you might  
at least
cause a Python exception to occur because the state of something in the
request object isn't as expected. This exception would effectively  
cause the
thread to exit unless the context in which the access was made to the  
request
object was protected by a try/except block.

In either case, if a Python exception occurs within the thread and it  
isn't
caught, it might not actually result in the details of the exception  
being logged.
This is because if the exception details are output, they go to  
standard error
and anything sent to standard error or standard output when running  
under
mod_python isn't guaranteed to show up anywhere. It may if flushing  
occurs,
appear in the Apache error log, but I wouldn't depend on it.  
Sometimes only
such output ends up in the Apache error log when Apache itself is  
shutdown
and those streams get flushed at that point.

In the above I talk about a Python exception occurring due to access  
to a
no longer valid request object, but even an uncaught exception in  
your code
will cause the same thing, with the thread appearing to exit but with  
nothing
necessarily being logged anywhere. What you want to do is to put a  
try/except
block around everything the thread does and if an exception occurs, then
use apache.log_error() to log something to the Apache error log  
indicating
that the exception occurs and the details of the exception.

One final thing, are you sure that the thread isn't deadlocking on  
something
and isn't just stalled? Have you actually used apache.log_error() to log
something at the exit point of the top level thread function to  
confirm that
it is really exiting? Note that exiting explicitly, or because of a  
Python
exception occurring within the thread is the only way the thread can  
truly
be stopped as there is no way in Python for a thread to be externally  
killed
by another thread anyway.

Graham
From ddvlad at gmail.com  Sat Jul 29 02:56:55 2006
From: ddvlad at gmail.com (Vlad Dogaru)
Date: Sat Jul 29 02:56:59 2006
Subject: [mod_python] Problem with configure script
Message-ID: <bf0e048a0607282356h46b202e0p1922547df5fb3d49@mail.gmail.com>

Hello,

While running ./configure for mod_python 3.2.8 I get the following errors:

./configure: line 3427: syntax error near unexpected token `('
./configure: line 3427: `  as_lineno_3=`(expr $as_lineno_1 + 1)
2>/dev/null`'

I don't know bash very well and cannot find the syntax error. Is there
something I am missing?

Thanks,
-Vlad
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20060729/b5588081/attachment.html
From grahamd at dscpl.com.au  Sat Jul 29 03:02:44 2006
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Sat Jul 29 03:03:42 2006
Subject: [mod_python] Problem with configure script
In-Reply-To: <bf0e048a0607282356h46b202e0p1922547df5fb3d49@mail.gmail.com>
References: <bf0e048a0607282356h46b202e0p1922547df5fb3d49@mail.gmail.com>
Message-ID: <D4AB1164-6CA0-4A5A-B564-7BA7E276F106@dscpl.com.au>

Known issues. See bug report at:

   https://issues.apache.org/jira/browse/MODPYTHON-122

for a workaround that you can make to the "configure" script.

Graham

On 29/07/2006, at 4:56 PM, Vlad Dogaru wrote:

> Hello,
>
> While running ./configure for mod_python 3.2.8 I get the following  
> errors:
>
> ./configure: line 3427: syntax error near unexpected token `('
> ./configure: line 3427: `  as_lineno_3=`(expr $as_lineno_1 + 1) 2>/ 
> dev/null`'
>
> I don't know bash very well and cannot find the syntax error. Is  
> there something I am missing?
>
> Thanks,
> -Vlad
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python

From christianhgross at gmail.com  Sat Jul 29 09:16:42 2006
From: christianhgross at gmail.com (Christian Gross)
Date: Sat Jul 29 09:16:52 2006
Subject: [mod_python] Background threads in mod_python
In-Reply-To: <B52BDBA8-A21B-4F4A-B45D-7A23871E4EBE@dscpl.com.au>
References: <ae4ef4460607281508qf3d449es8d96a222200792c9@mail.gmail.com>
	<B52BDBA8-A21B-4F4A-B45D-7A23871E4EBE@dscpl.com.au>
Message-ID: <44CB5FBA.8050502@gmail.com>

Graham Dumpleton wrote:
>
> How do you know the thread is being killed? Are you sure it isn't the 
> process
> as a whole?
>
As I debugged the thread is being killed. There was a sample in the 
mailing list that caught an exception to test if anything is going 
wrong. Well there was an exception and that killed the thread. Once that 
problem was fixed, the thread continued on.
> There isn't any fundamental reason why a thread can't outlive the life 
> of the
> request handler, but there are some common mistakes.
>
Ah ok, that does help.
> Main issue that you cannot pass the mod_python request object to such 
> a thread
> and have it hold a reference to it and use the request object beyond 
> the life
> of the request handler. This is because the internals of the request 
> object
> are destroyed when the request handler returns and an access to the 
> request
> object may result in the Apache child process then subsequently crashing.
>
I kind of guessed that. Context: I used to write Apache modules. But 
thank-you for verifying.
> Alternatively, if the Apache child process doesn't crash, you might at 
> least
> cause a Python exception to occur because the state of something in the
> request object isn't as expected. This exception would effectively 
> cause the
> thread to exit unless the context in which the access was made to the 
> request
> object was protected by a try/except block.
>
I copied specific items from the request object to a Python object. 
Though this raises a question. If for example I assign the req.uri to a 
class instance data member is this ok? Will at the end of the request 
the data referenced by req.uri be released, or is req.uri a buffer 
managed by Python?
> In either case, if a Python exception occurs within the thread and it 
> isn't
> caught, it might not actually result in the details of the exception 
> being logged.
> This is because if the exception details are output, they go to 
> standard error
> and anything sent to standard error or standard output when running under
> mod_python isn't guaranteed to show up anywhere. It may if flushing 
> occurs,
> appear in the Apache error log, but I wouldn't depend on it. Sometimes 
> only
> such output ends up in the Apache error log when Apache itself is 
> shutdown
> and those streams get flushed at that point.
>
Thank-you for the reference information.
> In the above I talk about a Python exception occurring due to access to a
> no longer valid request object, but even an uncaught exception in your 
> code
> will cause the same thing, with the thread appearing to exit but with 
> nothing
> necessarily being logged anywhere. What you want to do is to put a 
> try/except
> block around everything the thread does and if an exception occurs, then
> use apache.log_error() to log something to the Apache error log 
> indicating
> that the exception occurs and the details of the exception.
>
Would you consider doing this as a general rule in mod_python? I can see 
the advantages, but am wondering if that could be considered a good 
programming practice?
> One final thing, are you sure that the thread isn't deadlocking on 
> something
> and isn't just stalled? Have you actually used apache.log_error() to log
> something at the exit point of the top level thread function to 
> confirm that
> it is really exiting? Note that exiting explicitly, or because of a 
> Python
> exception occurring within the thread is the only way the thread can 
> truly
> be stopped as there is no way in Python for a thread to be externally 
> killed
> by another thread anyway.
>
Thanks for you help....

Christian

From grahamd at dscpl.com.au  Sat Jul 29 20:44:21 2006
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Sat Jul 29 20:45:22 2006
Subject: [mod_python] Background threads in mod_python
In-Reply-To: <44CB5FBA.8050502@gmail.com>
References: <ae4ef4460607281508qf3d449es8d96a222200792c9@mail.gmail.com>
	<B52BDBA8-A21B-4F4A-B45D-7A23871E4EBE@dscpl.com.au>
	<44CB5FBA.8050502@gmail.com>
Message-ID: <FB3F443E-30A3-4BFA-A9A8-1101B0DC3E51@dscpl.com.au>


On 29/07/2006, at 11:16 PM, Christian Gross wrote:
>> Alternatively, if the Apache child process doesn't crash, you  
>> might at least
>> cause a Python exception to occur because the state of something  
>> in the
>> request object isn't as expected. This exception would effectively  
>> cause the
>> thread to exit unless the context in which the access was made to  
>> the request
>> object was protected by a try/except block.
>>
> I copied specific items from the request object to a Python object.  
> Though this raises a question. If for example I assign the req.uri  
> to a class instance data member is this ok? Will at the end of the  
> request the data referenced by req.uri be released, or is req.uri a  
> buffer managed by Python?

Accessing a member of the request object and storing it is okay, as  
the data
is effectively copied in order to turn it into a Python object.

>> In the above I talk about a Python exception occurring due to  
>> access to a
>> no longer valid request object, but even an uncaught exception in  
>> your code
>> will cause the same thing, with the thread appearing to exit but  
>> with nothing
>> necessarily being logged anywhere. What you want to do is to put a  
>> try/except
>> block around everything the thread does and if an exception  
>> occurs, then
>> use apache.log_error() to log something to the Apache error log  
>> indicating
>> that the exception occurs and the details of the exception.
>>
> Would you consider doing this as a general rule in mod_python? I  
> can see the advantages, but am wondering if that could be  
> considered a good programming practice?

For a separate thread, you would certainly have to deal with unexpected
exceptions in some way. If you get an unexpected exception in the  
request
handler however,  then it is caught by mod_python and turned into a 500
error response, with details if PythonDebug is set to On. Thus, only the
separate thread where you would have to be particularly mindful of it.

Graham
From ddvlad at gmail.com  Sun Jul 30 01:58:07 2006
From: ddvlad at gmail.com (Vlad Dogaru)
Date: Sun Jul 30 01:58:12 2006
Subject: [mod_python] Re: Problem with configure script
In-Reply-To: <D4AB1164-6CA0-4A5A-B564-7BA7E276F106@dscpl.com.au>
References: <bf0e048a0607282356h46b202e0p1922547df5fb3d49@mail.gmail.com>
	<D4AB1164-6CA0-4A5A-B564-7BA7E276F106@dscpl.com.au>
Message-ID: <bf0e048a0607292258q3ccca14bkb8946f1b794d505b@mail.gmail.com>

I have changed the text in configure.in, but I still get the same
error. I fail to see how configure.in is used when I run ./configure.
The documentation doesn't seem to help, either. Please excuse my lack
of knowledge, but compiling my own software is a new ground for me.

Thanks,
Vlad

On 7/29/06, Graham Dumpleton <grahamd@dscpl.com.au> wrote:
> Known issues. See bug report at:
>
>    https://issues.apache.org/jira/browse/MODPYTHON-122
>
> for a workaround that you can make to the "configure" script.
>
> Graham
>
> On 29/07/2006, at 4:56 PM, Vlad Dogaru wrote:
>
> > Hello,
> >
> > While running ./configure for mod_python 3.2.8 I get the following
> > errors:
> >
> > ./configure: line 3427: syntax error near unexpected token `('
> > ./configure: line 3427: `  as_lineno_3=`(expr $as_lineno_1 + 1) 2>/
> > dev/null`'
> >
> > I don't know bash very well and cannot find the syntax error. Is
> > there something I am missing?
> >
> > Thanks,
> > -Vlad
> > _______________________________________________
> > Mod_python mailing list
> > Mod_python@modpython.org
> > http://mailman.modpython.org/mailman/listinfo/mod_python
>
>
From grahamd at dscpl.com.au  Sun Jul 30 03:59:31 2006
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Sun Jul 30 04:00:24 2006
Subject: [mod_python] Re: Problem with configure script
In-Reply-To: <bf0e048a0607292258q3ccca14bkb8946f1b794d505b@mail.gmail.com>
References: <bf0e048a0607282356h46b202e0p1922547df5fb3d49@mail.gmail.com>
	<D4AB1164-6CA0-4A5A-B564-7BA7E276F106@dscpl.com.au>
	<bf0e048a0607292258q3ccca14bkb8946f1b794d505b@mail.gmail.com>
Message-ID: <DF2068A0-27DB-470D-9FC3-F9BF5BFAF5B3@dscpl.com.au>

I said to change the "configure" script, not "configure.in". Changing
"configure.in" isn't going to help unless you regenerate "configure"
using autoconf, which would only be done by developers. I should
have been a bit clearer given the bug report mentions "configure.in"
as the cause, but a user trying to workaround it should change just
"configure" to get it working.

Thus, look through "configure" for equivalent line and change it
there instead.

Graham


On 30/07/2006, at 3:58 PM, Vlad Dogaru wrote:

> I have changed the text in configure.in, but I still get the same
> error. I fail to see how configure.in is used when I run ./configure.
> The documentation doesn't seem to help, either. Please excuse my lack
> of knowledge, but compiling my own software is a new ground for me.
>
> Thanks,
> Vlad
>
> On 7/29/06, Graham Dumpleton <grahamd@dscpl.com.au> wrote:
>> Known issues. See bug report at:
>>
>>    https://issues.apache.org/jira/browse/MODPYTHON-122
>>
>> for a workaround that you can make to the "configure" script.
>>
>> Graham
>>
>> On 29/07/2006, at 4:56 PM, Vlad Dogaru wrote:
>>
>> > Hello,
>> >
>> > While running ./configure for mod_python 3.2.8 I get the following
>> > errors:
>> >
>> > ./configure: line 3427: syntax error near unexpected token `('
>> > ./configure: line 3427: `  as_lineno_3=`(expr $as_lineno_1 + 1) 2>/
>> > dev/null`'
>> >
>> > I don't know bash very well and cannot find the syntax error. Is
>> > there something I am missing?
>> >
>> > Thanks,
>> > -Vlad
>> > _______________________________________________
>> > Mod_python mailing list
>> > Mod_python@modpython.org
>> > http://mailman.modpython.org/mailman/listinfo/mod_python
>>
>>

From ddvlad at gmail.com  Sun Jul 30 04:03:03 2006
From: ddvlad at gmail.com (Vlad Dogaru)
Date: Sun Jul 30 04:03:09 2006
Subject: [mod_python] Re: Problem with configure script
In-Reply-To: <DF2068A0-27DB-470D-9FC3-F9BF5BFAF5B3@dscpl.com.au>
References: <bf0e048a0607282356h46b202e0p1922547df5fb3d49@mail.gmail.com>
	<D4AB1164-6CA0-4A5A-B564-7BA7E276F106@dscpl.com.au>
	<bf0e048a0607292258q3ccca14bkb8946f1b794d505b@mail.gmail.com>
	<DF2068A0-27DB-470D-9FC3-F9BF5BFAF5B3@dscpl.com.au>
Message-ID: <bf0e048a0607300103i71594e34oe60d3986e2c68827@mail.gmail.com>

It worked now; I was confused by what the bug report said, about changing
configure.in.

Thanks

On 7/30/06, Graham Dumpleton <grahamd@dscpl.com.au> wrote:
>
> I said to change the "configure" script, not "configure.in". Changing
> "configure.in" isn't going to help unless you regenerate "configure"
> using autoconf, which would only be done by developers. I should
> have been a bit clearer given the bug report mentions "configure.in"
> as the cause, but a user trying to workaround it should change just
> "configure" to get it working.
>
> Thus, look through "configure" for equivalent line and change it
> there instead.
>
> Graham
>
>
> On 30/07/2006, at 3:58 PM, Vlad Dogaru wrote:
>
> > I have changed the text in configure.in, but I still get the same
> > error. I fail to see how configure.in is used when I run ./configure.
> > The documentation doesn't seem to help, either. Please excuse my lack
> > of knowledge, but compiling my own software is a new ground for me.
> >
> > Thanks,
> > Vlad
> >
> > On 7/29/06, Graham Dumpleton <grahamd@dscpl.com.au> wrote:
> >> Known issues. See bug report at:
> >>
> >>    https://issues.apache.org/jira/browse/MODPYTHON-122
> >>
> >> for a workaround that you can make to the "configure" script.
> >>
> >> Graham
> >>
> >> On 29/07/2006, at 4:56 PM, Vlad Dogaru wrote:
> >>
> >> > Hello,
> >> >
> >> > While running ./configure for mod_python 3.2.8 I get the following
> >> > errors:
> >> >
> >> > ./configure: line 3427: syntax error near unexpected token `('
> >> > ./configure: line 3427: `  as_lineno_3=`(expr $as_lineno_1 + 1) 2>/
> >> > dev/null`'
> >> >
> >> > I don't know bash very well and cannot find the syntax error. Is
> >> > there something I am missing?
> >> >
> >> > Thanks,
> >> > -Vlad
> >> > _______________________________________________
> >> > Mod_python mailing list
> >> > Mod_python@modpython.org
> >> > http://mailman.modpython.org/mailman/listinfo/mod_python
> >>
> >>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20060730/1d47ce33/attachment.html
From martijn at xs4us.nu  Sun Jul 30 07:22:57 2006
From: martijn at xs4us.nu (Martijn Moeling)
Date: Sun Jul 30 07:23:02 2006
Subject: [mod_python] Debugging mod_python
Message-ID: <B6C73A5E30565245BB6D32B5F5DF7A520BECC4@sense.emmastraat.pijnacker>

Hi,

 

I have been developing with mod_python for over a year now

I do like the python language, but with mod_python I miss the tools

For proper debugging. I know the difficulties but maybe there are some
tools

Around I could not find. Is there any best practice?

 

Martijn 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20060730/c9005e00/attachment.html
From grahamd at dscpl.com.au  Sun Jul 30 08:06:10 2006
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Sun Jul 30 08:07:12 2006
Subject: [mod_python] Debugging mod_python
In-Reply-To: <B6C73A5E30565245BB6D32B5F5DF7A520BECC4@sense.emmastraat.pijnacker>
References: <B6C73A5E30565245BB6D32B5F5DF7A520BECC4@sense.emmastraat.pijnacker>
Message-ID: <8FC94B23-72E2-428F-BEFD-3350AE1CC657@dscpl.com.au>


On 30/07/2006, at 9:22 PM, Martijn Moeling wrote:

> Hi,
>
>
>
> I have been developing with mod_python for over a year now
>
> I do like the python language, but with mod_python I miss the tools
>
> For proper debugging. I know the difficulties but maybe there are  
> some tools
>
> Around I could not find. Is there any best practice?
Do you know about and use the PythonEnablePdb directive? You do need
to be able to run "httpd" manually with '-X -DONE_PROCESS' command line
options, but in worst case scenario it is sometimes useful.

Besides that, I personally just tend to use apache.log_error() a lot.  
Some times
I go to the extent of adding log messages into C code of mod_python,  
but then
I am working with the same low level C code a lot to fix issues or  
add new features
to mod_python itself. :-)

Graham
From martijn at xs4us.nu  Sun Jul 30 11:49:45 2006
From: martijn at xs4us.nu (Martijn Moeling)
Date: Sun Jul 30 11:49:49 2006
Subject: [mod_python] Debugging mod_python
Message-ID: <B6C73A5E30565245BB6D32B5F5DF7A520BECC5@sense.emmastraat.pijnacker>

Hi Graham,

The apache errorlog is indeed usefull, the manual start of httpd is an
option indeed, but for my setup a bit useless. I have build a sort of
replacement for my handler that creates the request object which can be
run in idle and the objects content is created by editing the source, it
is to raw to publish but has proven to be an useful option.

By now I have implemented a windows interface within a browser using
javascript and are using mod_python to interface to the XMLHttpRequest
object, debugging that, with sessions have been proven troublesome.

The whole system I have now would be a perfect base for a python IDE
within a browser, but there are still some hills to climb since I do it
all on my own, I will go public source with this system eventually but
for now the system is a bit to purpose specific.

The goal for now is to provide a back office for politicians, where they
maintain their own website by using the system to do their work and it
will provide a way to communicate with the citizens, all without the
need of software installation, working on any internet connected
computer. A huge job which is subsidized and solely relies on open
source software, made even more difficult since I never did any project
like this before. I have a huge professional programming experience
though.
 
At the moment I am trying to find a way to "load" code from a mysql
database on demand without saving it, the best would be to have the code
persistant and write a algorithm around it to load and reload it on
demand globally, basically what mod_python does with its reload
possibilities of handler source code, but than at module level. I still
seem unsure about the interpreter count and how the number of apache
processes and threads are influencing the performance of the webserver
in total, this makes it more difficult to search for a solution.


Martijn
-----Oorspronkelijk bericht-----
Van: Graham Dumpleton [mailto:grahamd@dscpl.com.au] 
Verzonden: Sunday, July 30, 2006 14:06
Aan: Martijn Moeling
CC: mod_python@modpython.org
Onderwerp: Re: [mod_python] Debugging mod_python


On 30/07/2006, at 9:22 PM, Martijn Moeling wrote:

> Hi,
>
>
>
> I have been developing with mod_python for over a year now
>
> I do like the python language, but with mod_python I miss the tools
>
> For proper debugging. I know the difficulties but maybe there are  
> some tools
>
> Around I could not find. Is there any best practice?
Do you know about and use the PythonEnablePdb directive? You do need
to be able to run "httpd" manually with '-X -DONE_PROCESS' command line
options, but in worst case scenario it is sometimes useful.

Besides that, I personally just tend to use apache.log_error() a lot.  
Some times
I go to the extent of adding log messages into C code of mod_python,  
but then
I am working with the same low level C code a lot to fix issues or  
add new features
to mod_python itself. :-)

Graham

From nlv11281 at natlab.research.philips.com  Mon Jul 31 05:39:43 2006
From: nlv11281 at natlab.research.philips.com (Mike Looijmans)
Date: Mon Jul 31 05:41:57 2006
Subject: [mod_python] Background threads in mod_python
In-Reply-To: <ae4ef4460607281508qf3d449es8d96a222200792c9@mail.gmail.com>
References: <ae4ef4460607281508qf3d449es8d96a222200792c9@mail.gmail.com>
Message-ID: <44CDCFDF.9040504@natlab.research.philips.com>

A much safer option is to create a separate process for this kind of thing. Using the extremely 
simple XMLRPC package (built-in in Python) you can do calls into the "worker" process.

Apache will terminate your processes/threads at unexpected moments, since it expects all handlers to 
be stateless and only act in response to incoming requests. It may work on some configurations, but 
there's no guarantee that your application will behave the same on other systems.


Mike Looijmans
Philips Natlab / Topic Automation


Christian Gross wrote:
> Hi,
> 
> I have been using mod_python and am wondering about creating
> background threads. I can create the background thread, but if the
> thread requires a longer processing time than the request the
> background thread is exited.
> 
> Is it possible to create a background thread and have it execute
> without being killed?
> 
> Thanks
> 
> Christian Gross
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
> 

From christianhgross at gmail.com  Mon Jul 31 07:45:54 2006
From: christianhgross at gmail.com (Christian Gross)
Date: Mon Jul 31 07:45:55 2006
Subject: [mod_python] Background threads in mod_python
In-Reply-To: <44CDCFDF.9040504@natlab.research.philips.com>
References: <ae4ef4460607281508qf3d449es8d96a222200792c9@mail.gmail.com>
	<44CDCFDF.9040504@natlab.research.philips.com>
Message-ID: <44CDED72.5080601@gmail.com>

Hmm... Are you not then making the argument for fastcgi? As much as I 
would like to create a separate process, I am tempted to believe that 
maybe I should not be using Apache in the first place.

Let me give you a context. I am using Ajax and Web Services to create a 
SOA package. The Web Services are provided by mod_python. If I have to 
delegate to a "web service" I am being redundant, no? In contrast, if I 
were to use ASP.NET, or Java Servlets there can be as many background 
threads as necessary and they will not be shot off.

Getting back to Apache. If I am using a threaded model, and Apache kills 
off a request thread, that should not affect a thread I created in 
Python, right? I can understand if the process is shot off, but threads 
within a process should be independent of each other, no?

Christian

Mike Looijmans wrote:
> A much safer option is to create a separate process for this kind of 
> thing. Using the extremely simple XMLRPC package (built-in in Python) 
> you can do calls into the "worker" process.
>
> Apache will terminate your processes/threads at unexpected moments, 
> since it expects all handlers to be stateless and only act in response 
> to incoming requests. It may work on some configurations, but there's 
> no guarantee that your application will behave the same on other systems.
>
>
> Mike Looijmans
> Philips Natlab / Topic Automation
>
>
> Christian Gross wrote:
>> Hi,
>>
>> I have been using mod_python and am wondering about creating
>> background threads. I can create the background thread, but if the
>> thread requires a longer processing time than the request the
>> background thread is exited.
>>
>> Is it possible to create a background thread and have it execute
>> without being killed?
>>
>> Thanks
>>
>> Christian Gross
>> _______________________________________________
>> Mod_python mailing list
>> Mod_python@modpython.org
>> http://mailman.modpython.org/mailman/listinfo/mod_python
>>
>
>

From nlv11281 at natlab.research.philips.com  Mon Jul 31 10:57:44 2006
From: nlv11281 at natlab.research.philips.com (Mike Looijmans)
Date: Mon Jul 31 10:57:50 2006
Subject: [mod_python] Background threads in mod_python
In-Reply-To: <44CDED72.5080601@gmail.com>
References: <ae4ef4460607281508qf3d449es8d96a222200792c9@mail.gmail.com>
	<44CDCFDF.9040504@natlab.research.philips.com>
	<44CDED72.5080601@gmail.com>
Message-ID: <44CE1A68.4080604@natlab.research.philips.com>

It really depends on WHAT you intend to do. I can think of no reason whatsoever to start a thread in 
the handler that somehow "survives" the request. Once that thread has created some "answer", where 
can it send that answer?

When Apache is using multiple processes, it will terminate child processes for various reasons (for 
example, when max_requests_per_child has been reached). That will also terminate any thread you 
created in that process.

I suspect your software gets a "job" from the user, and reports back to the user that the job has 
been started. The job itself must keep running for some time after that. The job creates a file or 
something similar which can make the user conclude that the job has finished.

A web service used within a web server is not redundant, it's just a way to delegate tasks to other 
machines or processes. This is typically done for security reasons.


Mike Looijmans
Philips Natlab / Topic Automation


Christian Gross wrote:
> Hmm... Are you not then making the argument for fastcgi? As much as I 
> would like to create a separate process, I am tempted to believe that 
> maybe I should not be using Apache in the first place.
> 
> Let me give you a context. I am using Ajax and Web Services to create a 
> SOA package. The Web Services are provided by mod_python. If I have to 
> delegate to a "web service" I am being redundant, no? In contrast, if I 
> were to use ASP.NET, or Java Servlets there can be as many background 
> threads as necessary and they will not be shot off.
> 
> Getting back to Apache. If I am using a threaded model, and Apache kills 
> off a request thread, that should not affect a thread I created in 
> Python, right? I can understand if the process is shot off, but threads 
> within a process should be independent of each other, no?
> 
> Christian
> 
> Mike Looijmans wrote:
> 
>> A much safer option is to create a separate process for this kind of 
>> thing. Using the extremely simple XMLRPC package (built-in in Python) 
>> you can do calls into the "worker" process.
>>
>> Apache will terminate your processes/threads at unexpected moments, 
>> since it expects all handlers to be stateless and only act in response 
>> to incoming requests. It may work on some configurations, but there's 
>> no guarantee that your application will behave the same on other systems.
>>
>>
>> Mike Looijmans
>> Philips Natlab / Topic Automation
>>
>>
>> Christian Gross wrote:
>>
>>> Hi,
>>>
>>> I have been using mod_python and am wondering about creating
>>> background threads. I can create the background thread, but if the
>>> thread requires a longer processing time than the request the
>>> background thread is exited.
>>>
>>> Is it possible to create a background thread and have it execute
>>> without being killed?
>>>
>>> Thanks
>>>
>>> Christian Gross
>>> _______________________________________________
>>> Mod_python mailing list
>>> Mod_python@modpython.org
>>> http://mailman.modpython.org/mailman/listinfo/mod_python
>>>
>>
>>
> 
> 

From christianhgross at gmail.com  Mon Jul 31 11:38:30 2006
From: christianhgross at gmail.com (Christian Gross)
Date: Mon Jul 31 11:38:36 2006
Subject: [mod_python] Background threads in mod_python
In-Reply-To: <44CE1A68.4080604@natlab.research.philips.com>
References: <ae4ef4460607281508qf3d449es8d96a222200792c9@mail.gmail.com>
	<44CDCFDF.9040504@natlab.research.philips.com>
	<44CDED72.5080601@gmail.com>
	<44CE1A68.4080604@natlab.research.philips.com>
Message-ID: <44CE23F6.8080708@gmail.com>

Mike Looijmans wrote:
> It really depends on WHAT you intend to do. I can think of no reason 
> whatsoever to start a thread in the handler that somehow "survives" 
> the request. Once that thread has created some "answer", where can it 
> send that answer?
>
There is lots of needs for this in an Ajax world. For example Jetty 
(http://www.mortbay.com/MB/log/gregw/?permalink=ScalingConnections.html), 
Apache 2.2, and IIS a few years can do asynchronous processing. There 
are two ways to do asynchronous processing. The first is to lock onto 
the request and hold it and move it into a "secondary" processing area. 
The second is to start a task and then ask if any data has been 
generated. The running task will store in a cache that is then picked up 
by another request at another time.

The big idea here is to mimic an architecture where the server "calls" 
the client, which is very popular in Ajax.
> When Apache is using multiple processes, it will terminate child 
> processes for various reasons (for example, when 
> max_requests_per_child has been reached). That will also terminate any 
> thread you created in that process.
>
Yeah I was looking at this and it is pain. On Windows Apache does not do 
this. They use only two processes and use threads within those processes.
> I suspect your software gets a "job" from the user, and reports back 
> to the user that the job has been started. The job itself must keep 
> running for some time after that. The job creates a file or something 
> similar which can make the user conclude that the job has finished.
>
I would not say "job". I would say long running tasks generating data. 
For example I like to read real-time feeds, and want to generate the 
data. But the client is in control of the task using parameters that are 
sent to server.
> A web service used within a web server is not redundant, it's just a 
> way to delegate tasks to other machines or processes. This is 
> typically done for security reasons.
>
I don't really buy this argument. Let's say I do what you recommend and 
that is call an XML-RPC service. Why, do I need Apache in the first 
place? While I might get security I don't get any added value. If I am 
using web services then Apache is pretty well useless anyways because 
most web services don't use HTTP security. Most web service 
infrastructures use the WS-* specs, or some home-backed tokens that are 
added to the XML package.

Christian Gross
From deron.meranda at gmail.com  Mon Jul 31 15:09:09 2006
From: deron.meranda at gmail.com (Deron Meranda)
Date: Mon Jul 31 15:09:14 2006
Subject: [mod_python] Background threads in mod_python
In-Reply-To: <44CE23F6.8080708@gmail.com>
References: <ae4ef4460607281508qf3d449es8d96a222200792c9@mail.gmail.com>
	<44CDCFDF.9040504@natlab.research.philips.com>
	<44CDED72.5080601@gmail.com>
	<44CE1A68.4080604@natlab.research.philips.com>
	<44CE23F6.8080708@gmail.com>
Message-ID: <5c06fa770607311209u6761f3beje50885111d3ea58c@mail.gmail.com>

On 7/31/06, Christian Gross <christianhgross@gmail.com> wrote:
> Mike Looijmans wrote:
> > It really depends on WHAT you intend to do. I can think of no reason
> > whatsoever to start a thread in the handler that somehow "survives"
> > the request. Once that thread has created some "answer", where can it
> > send that answer?
> >
> There is lots of needs for this in an Ajax world. For example Jetty
> (http://www.mortbay.com/MB/log/gregw/?permalink=ScalingConnections.html),
> Apache 2.2, and IIS a few years can do asynchronous processing. There
> are two ways to do asynchronous processing. The first is to lock onto
> the request and hold it and move it into a "secondary" processing area.
> The second is to start a task and then ask if any data has been
> generated. The running task will store in a cache that is then picked up
> by another request at another time.
>
> The big idea here is to mimic an architecture where the server "calls"
> the client, which is very popular in Ajax.

I am still failing to see why Ajax makes this different.  And I don't
understand what you mean by the server "calling" the client.

I think you may be influenced too much by the "Java way"?  Apache httpd is a
web server.  It is not an all-encompassing kitchen sink included
application runtime environment. So the core function of Apache is to
service individual HTTP requests.

HTTP does not have "asynchronous" calls as you're using that term.
Each HTTP request is synchronous and self-contained.  And each HTTP
request is (mostly) independent of any others.

If you want to have decidely non-HTTP semantics, such as having one
HTTP request start up a background activity, and have a later HTTP
request check up on its progress, you've got to do so outside the
scope of Apache...because it's outside the scope of HTTP.

The common way to do this is to use a non-Apache process to perform
that work, and use a communication mechanism between Apache and that
process.  There are dozens of kinds of IPC (inter-process
communication) mechanisms to do this sort of workflow.  Although using
an nested RPC-XML is one way, you can also use things like named
pipes, or even passing work requests around inside a database.

The point is that you should keep web transactions inside Apache and
non-web stuff outside of Apache.  It's compartmentalization, and it
can have lots of benifits.

> > When Apache is using multiple processes, it will terminate child
> > processes for various reasons (for example, when
> > max_requests_per_child has been reached). That will also terminate any
> > thread you created in that process.
> >
> Yeah I was looking at this and it is pain. On Windows Apache does not do
> this. They use only two processes and use threads within those processes.

IMHO, Windows has an over-reliance on threads which can lead to some
poor architectural designs.  If everything is a thread, then every
problem starts looking like a needle (or something like that :)

You need to keep in mind that with Apache not only can it create and
destroy processes and threads at its own whim (between requests), but
it can also spawn many different processes and you have no control
over which HTTP request will get sent to which process or thread.
This is of course a frequent source of confusion over how to store
persistent server-side state.

> > I suspect your software gets a "job" from the user, and reports back
> > to the user that the job has been started. The job itself must keep
> > running for some time after that. The job creates a file or something
> > similar which can make the user conclude that the job has finished.
> >
> I would not say "job". I would say long running tasks generating data.
> For example I like to read real-time feeds, and want to generate the
> data. But the client is in control of the task using parameters that are
> sent to server.

The real question is if the computation is within the scope of a
single HTTP request or not (regardless of how long it takes, although
most user agents, proxies, and even Apache impose an upper limit on
the time of a request).  If the results of assembling your feeds are
to be given back to the UA within the same request, then just do it
(there's no implicit need to launch off additional threads).  However
if it really is a background activity that is a side-effect of the
request (in that the result of the request is not dependent upon the
result of the task), then it is best to communicate that to some
service which lives outside of Apache.

> > A web service used within a web server is not redundant, it's just a
> > way to delegate tasks to other machines or processes. This is
> > typically done for security reasons.
> >
> I don't really buy this argument. Let's say I do what you recommend and
> that is call an XML-RPC service. Why, do I need Apache in the first
> place? While I might get security I don't get any added value. If I am
> using web services then Apache is pretty well useless anyways because
> most web services don't use HTTP security. Most web service
> infrastructures use the WS-* specs, or some home-backed tokens that are
> added to the XML package.

You have to answer the question of whether you need Apache.  Apache is
a tool for handling HTTP requests, and a very nice and efficient one
at that.  But it is not a CORBA ORB (or it's poor cousin, a web
service thingamabob), nor is it a TPM.

The whole web services fad really abuses the semantics of HTTP beyond
recognition anyway, so perhaps Apache really has no use to you.  I
find it unfortunate that they call it "web" services, since it really
has so very little to do with the "web".  But that's a different rant.

BTW, do you have any mod_python specific questions, or is this really
more a general Apache architecture discussion?  If you want to know
how to do IPC and such I'm sure we can help.
-- 
Deron Meranda
From deron.meranda at gmail.com  Mon Jul 31 15:40:06 2006
From: deron.meranda at gmail.com (Deron Meranda)
Date: Mon Jul 31 15:40:17 2006
Subject: [mod_python] Setting req->user for mod_dav_svn
Message-ID: <5c06fa770607311240x29c43f0u17a67e7af7340d3e@mail.gmail.com>

I am using a PythonAccessHandler for all my authentication and
authorization needs; and it is based on an encrypted cookie technique
rather than the normal HTTP aaa methods.  As such I have not
been using any of the Apache Auth* or Require* directives.  As
everything complex I've used until now has been Python based,
I just pass the user credentials around inside the mod_python
req object.

But I'm now trying to set up a subversion mod_dav_svn module
(C based), and I want my same authentication handler to also both
guard access to the svn location (which I can do) as well as telling
SVN what the username is (for it to record it in file revision logs, etc).
That later is what I don't know how to do.  The svn module appears
to get the username it uses from the Apache r->user pointer.

Can I set the req->user member from within mod_python (the docs
say it is read-only), and what do I need to look out for in attempting
to do so.  I essentially want to synthesize a username in the
Apache request structure, but I don't want any of the normal Apache
Auth* stuff to be invoked.

BTW, this is currently Apache 2.0.52 and mod_python 3.2.10.
-- 
Deron Meranda
From grahamd at dscpl.com.au  Mon Jul 31 18:33:00 2006
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Mon Jul 31 18:33:05 2006
Subject: [mod_python] Setting req->user for mod_dav_svn
Message-ID: <1154385180.32375@dscpl.user.openhosting.com>

Deron Meranda wrote ..
> I am using a PythonAccessHandler for all my authentication and
> authorization needs; and it is based on an encrypted cookie technique
> rather than the normal HTTP aaa methods.  As such I have not
> been using any of the Apache Auth* or Require* directives.  As
> everything complex I've used until now has been Python based,
> I just pass the user credentials around inside the mod_python
> req object.

Are you using PythonAccessHandler at same time as PythonHandler?
Aren't you seeing the hideously bad memory leak finally uncovered
in the past day?

> But I'm now trying to set up a subversion mod_dav_svn module
> (C based), and I want my same authentication handler to also both
> guard access to the svn location (which I can do) as well as telling
> SVN what the username is (for it to record it in file revision logs, etc).
> That later is what I don't know how to do.  The svn module appears
> to get the username it uses from the Apache r->user pointer.
> 
> Can I set the req->user member from within mod_python (the docs
> say it is read-only),

In 3.2.8+ it is writable, the documentation is wrong. The documentation
in 3.3 is correct.

> and what do I need to look out for in attempting
> to do so.  I essentially want to synthesize a username in the
> Apache request structure, but I don't want any of the normal Apache
> Auth* stuff to be invoked.

Using 3.2.10, you will have to continue to use an PythonAccessHandler to do
what you want anyway, as it is impossible with mod_python prior to 3.3 to write
a correct authentication handler in the style that they are supposed to be
written when using Apache. This is because prior to mod_python 3.3, there was
no way to get the value associated with AuthType and AuthName directives. There
also was no way to properly set the value of req.ap_auth_type to correctly
indicate to later handlers who accepted the authentication credentials.
Finally, prior to mod_python 3.3 it was not possible to have stacked
authentication handlers as mod_python handlers as mod_python wasn't
interpreting the return status correctly for phases other than the response
handler.

Anyway, the only place I can think you might have problems is if subversion
expects req.ap_auth_type to be set correctly as you will not have that ability
when using mod_python 3.2.10.

Graham

From rsynnott at gmail.com  Mon Jul 31 19:23:53 2006
From: rsynnott at gmail.com (Robert Synnott)
Date: Mon Jul 31 19:23:59 2006
Subject: [mod_python] Background threads in mod_python
In-Reply-To: <5c06fa770607311209u6761f3beje50885111d3ea58c@mail.gmail.com>
References: <ae4ef4460607281508qf3d449es8d96a222200792c9@mail.gmail.com>
	<44CDCFDF.9040504@natlab.research.philips.com>
	<44CDED72.5080601@gmail.com>
	<44CE1A68.4080604@natlab.research.philips.com>
	<44CE23F6.8080708@gmail.com>
	<5c06fa770607311209u6761f3beje50885111d3ea58c@mail.gmail.com>
Message-ID: <24f203480607311623w7aea1611of92595f7e222950@mail.gmail.com>

Another issue is scalability, of course. If you ever have to have more
than one server, you'll find the XML-RPC thing will be far easier to
scale up than the launch-separate-thread thing.
Rob
