From devraj at gmail.com  Wed Feb  3 19:48:10 2010
From: devraj at gmail.com (Devraj Mukherjee)
Date: Wed Feb  3 19:48:17 2010
Subject: [mod_python] PythonOption not defined,
	as reported by pyWebSocket module
Message-ID: <2d57c6571002031648w27fb6719ndd78e2e920e3f29e@mail.gmail.com>

Hello all,

We are developing an application that uses Google's pyWebSocket
project. I am trying to get this running through mod_python following
the documentation published by the project. The handler expects a path
for the websocket code that we have written as a PythonOption, which
our configuration provides.

But we get the following exception when we access the document root

Exception: ('PythonOption mod_pywebsocket.handler_root is not defined', 3)

I am sure I am doing something really silly that's stopping this from
working, I was hoping if anyone can spot what I might be doing wrong?

Thanks.

httpd configuration

<IfModule python_module>

               PythonPath "sys.path+['/home/devraj/carde/sockethandler']"
               PythonOption mod_pywebsocket.handler_root
"/home/devraj/carde/sockethandler/cardeproxy_wsh.py"
               PythonHeaderParserHandler mod_pywebsocket.headerparserhandler

               PythonOption CardeHostName localhost

</IfModule>


mod_python error log

MOD_PYTHON ERROR

ProcessId:      4208
Interpreter:    'ubuntu.etk.private'

ServerName:     'ubuntu.etk.private'
DocumentRoot:   '/home/devraj/carde/webroot'

URI:            '/'
Location:       None
Directory:      None
Filename:       '/home/devraj/carde/webroot/'
PathInfo:       ''

Phase:          'PythonHeaderParserHandler'
Handler:        'mod_pywebsocket.headerparserhandler'

Traceback (most recent call last):

  File "/usr/lib/python2.6/dist-packages/mod_python/importer.py", line
1537, in HandlerDispatch
    default=default_handler, arg=req, silent=hlist.silent)

  File "/usr/lib/python2.6/dist-packages/mod_python/importer.py", line
1202, in _process_target
    module = import_module(module_name, path=path)

  File "/usr/lib/python2.6/dist-packages/mod_python/importer.py", line
304, in import_module
    return __import__(module_name, {}, {}, ['*'])

  File "/usr/local/lib/python2.6/dist-packages/mod_pywebsocket/headerparserhandler.py",
line 69, in <module>
    _dispatcher = _create_dispatcher()

  File "/usr/local/lib/python2.6/dist-packages/mod_pywebsocket/headerparserhandler.py",
line 59, in _create_dispatcher
    apache.APLOG_ERR)

Exception: ('PythonOption mod_pywebsocket.handler_root is not defined', 3)


-- 
Follow me on Twitter, http://twitter.com/mdevraj

"The secret impresses no-one, the trick you use it for is everything"
- Alfred Borden (The Prestiege)
From graham.dumpleton at gmail.com  Wed Feb  3 20:16:22 2010
From: graham.dumpleton at gmail.com (Graham Dumpleton)
Date: Wed Feb  3 20:16:29 2010
Subject: [mod_python] PythonOption not defined, as reported by pyWebSocket 
	module
In-Reply-To: <2d57c6571002031648w27fb6719ndd78e2e920e3f29e@mail.gmail.com>
References: <2d57c6571002031648w27fb6719ndd78e2e920e3f29e@mail.gmail.com>
Message-ID: <88e286471002031716x7a188c86mc32fd57ba5e89b0c@mail.gmail.com>

Have you even tried to add some debug which dumps out what
req.get_options() returns?

On 4 February 2010 11:48, Devraj Mukherjee <devraj@gmail.com> wrote:
> Hello all,
>
> We are developing an application that uses Google's pyWebSocket
> project. I am trying to get this running through mod_python following
> the documentation published by the project. The handler expects a path
> for the websocket code that we have written as a PythonOption, which
> our configuration provides.
>
> But we get the following exception when we access the document root
>
> Exception: ('PythonOption mod_pywebsocket.handler_root is not defined', 3)
>
> I am sure I am doing something really silly that's stopping this from
> working, I was hoping if anyone can spot what I might be doing wrong?
>
> Thanks.
>
> httpd configuration
>
> <IfModule python_module>
>
> ? ? ? ? ? ? ? PythonPath "sys.path+['/home/devraj/carde/sockethandler']"
> ? ? ? ? ? ? ? PythonOption mod_pywebsocket.handler_root
> "/home/devraj/carde/sockethandler/cardeproxy_wsh.py"
> ? ? ? ? ? ? ? PythonHeaderParserHandler mod_pywebsocket.headerparserhandler
>
> ? ? ? ? ? ? ? PythonOption CardeHostName localhost
>
> </IfModule>
>
>
> mod_python error log
>
> MOD_PYTHON ERROR
>
> ProcessId: ? ? ?4208
> Interpreter: ? ?'ubuntu.etk.private'
>
> ServerName: ? ? 'ubuntu.etk.private'
> DocumentRoot: ? '/home/devraj/carde/webroot'
>
> URI: ? ? ? ? ? ?'/'
> Location: ? ? ? None
> Directory: ? ? ?None
> Filename: ? ? ? '/home/devraj/carde/webroot/'
> PathInfo: ? ? ? ''
>
> Phase: ? ? ? ? ?'PythonHeaderParserHandler'
> Handler: ? ? ? ?'mod_pywebsocket.headerparserhandler'
>
> Traceback (most recent call last):
>
> ?File "/usr/lib/python2.6/dist-packages/mod_python/importer.py", line
> 1537, in HandlerDispatch
> ? ?default=default_handler, arg=req, silent=hlist.silent)
>
> ?File "/usr/lib/python2.6/dist-packages/mod_python/importer.py", line
> 1202, in _process_target
> ? ?module = import_module(module_name, path=path)
>
> ?File "/usr/lib/python2.6/dist-packages/mod_python/importer.py", line
> 304, in import_module
> ? ?return __import__(module_name, {}, {}, ['*'])
>
> ?File "/usr/local/lib/python2.6/dist-packages/mod_pywebsocket/headerparserhandler.py",
> line 69, in <module>
> ? ?_dispatcher = _create_dispatcher()
>
> ?File "/usr/local/lib/python2.6/dist-packages/mod_pywebsocket/headerparserhandler.py",
> line 59, in _create_dispatcher
> ? ?apache.APLOG_ERR)
>
> Exception: ('PythonOption mod_pywebsocket.handler_root is not defined', 3)
>
>
> --
> Follow me on Twitter, http://twitter.com/mdevraj
>
> "The secret impresses no-one, the trick you use it for is everything"
> - Alfred Borden (The Prestiege)
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>

From jpec at julienpecqueur.com  Sun Feb  7 08:01:23 2010
From: jpec at julienpecqueur.com (Julien Pecqueur)
Date: Sun Feb  7 08:01:31 2010
Subject: [mod_python] IOError: [Errno 2] No such file or directory
Message-ID: <20100207130123.GB6631@julienpecqueur.com>

Hi,

I got an error when trying to access to files which are located in a sub-directory.

>  File "/var/www/dev/pygitweb/PyGitWeb.py", line 88, in read_template
>    template = open(self.template_path, 'r')
> 
> IOError: [Errno 2] No such file or directory: 'templates/template.xhtml'


The template.xhtml file exist in the sub-directory templates :

> Index of /dev/pygitweb/templates
> 
>       Name			Last modified		Size	Description
>       Parent Directory	-
>       style.css		06-Feb-2010 21:20	 0
>       template.xhtml		06-Feb-2010 21:20	 588

When i execute the python scrit via the shell, it just works fine. I try with lighttpd + cgi + python and it works too.

I tryed to replace the file path by full path /var/http/dev/pygitweb/templates/template.xhtml but i got ht same error.

Any ideas ?





Here the full error message :

MOD_PYTHON ERROR

ProcessId:      3185
Interpreter:    'server.julienpecqueur.com'

ServerName:     'server.julienpecqueur.com'
DocumentRoot:   '/var/www/'

URI:            '/dev/pygitweb/PyGitWeb.py'
Location:       None
Directory:      '/var/www/dev/pygitweb/'
Filename:       '/var/www/dev/pygitweb/PyGitWeb.py'
PathInfo:       ''

Phase:          'PythonHandler'
Handler:        'mod_python.publisher'

Traceback (most recent call last):

  File "/usr/lib/python2.5/site-packages/mod_python/importer.py", line 1537, in HandlerDispatch
    default=default_handler, arg=req, silent=hlist.silent)

  File "/usr/lib/python2.5/site-packages/mod_python/importer.py", line 1229, in _process_target
    result = _execute_target(config, req, object, arg)

  File "/usr/lib/python2.5/site-packages/mod_python/importer.py", line 1128, in _execute_target
    result = object(arg)

  File "/usr/lib/python2.5/site-packages/mod_python/publisher.py", line 204, in handler
    module = page_cache[req]

  File "/usr/lib/python2.5/site-packages/mod_python/importer.py", line 1059, in __getitem__
    return import_module(req.filename)

  File "/usr/lib/python2.5/site-packages/mod_python/importer.py", line 296, in import_module
    log, import_path)

  File "/usr/lib/python2.5/site-packages/mod_python/importer.py", line 680, in import_module
    execfile(file, module.__dict__)

  File "/var/www/dev/pygitweb/PyGitWeb.py", line 153, in <module>
    Result = Page.build()

  File "/var/www/dev/pygitweb/PyGitWeb.py", line 95, in build
    self.read_template()

  File "/var/www/dev/pygitweb/PyGitWeb.py", line 88, in read_template
    template = open(self.template_path, 'r')

IOError: [Errno 2] No such file or directory: 'templates/template.xhtml'


MODULE CACHE DETAILS

Accessed:       Sun Feb  7 13:40:16 2010
Generation:     0

_mp_a38b6d9b42b21e0116cc275fffcfc04b {
  FileName:     '/var/www/dev/pygitweb/PyGitWeb.py'
  Instance:     1 [IMPORT]
  Generation:   0 [ERROR]
  Modified:     Sun Feb  7 12:36:47 2010
}



-- 
Julien Pecqueur (JPEC)

Site:  	http://julienpecqueur.com
Email: 	jpec@julienpecqueur.com
PGP:	B1AA2389 (GNUPG)
IRC: 	jpec (irc.freenode.net)

Powered by Archlinux - Keep it simple stupid !
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 198 bytes
Desc: not available
Url : http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20100207/b12d3cba/attachment.bin
From graham.dumpleton at gmail.com  Sun Feb  7 17:05:39 2010
From: graham.dumpleton at gmail.com (Graham Dumpleton)
Date: Sun Feb  7 17:05:44 2010
Subject: [mod_python] IOError: [Errno 2] No such file or directory
In-Reply-To: <20100207130123.GB6631@julienpecqueur.com>
References: <20100207130123.GB6631@julienpecqueur.com>
Message-ID: <88e286471002071405g3a056dccnff23a2280218578f@mail.gmail.com>

You can't use a relative path as the current working directory when
running under Apache can be anything.

So, use an absolute path, or find a way with the framework you are
using to make it resolve the relative path relative to the actual
directory the template is in.

Graham

On 8 February 2010 00:01, Julien Pecqueur <jpec@julienpecqueur.com> wrote:
> Hi,
>
> I got an error when trying to access to files which are located in a sub-directory.
>
>> ?File "/var/www/dev/pygitweb/PyGitWeb.py", line 88, in read_template
>> ? ?template = open(self.template_path, 'r')
>>
>> IOError: [Errno 2] No such file or directory: 'templates/template.xhtml'
>
>
> The template.xhtml file exist in the sub-directory templates :
>
>> Index of /dev/pygitweb/templates
>>
>> ? ? ? Name ? ? ? ? ? ? ? ? ? ?Last modified ? ? ? ? ? Size ? ?Description
>> ? ? ? Parent Directory ? ? ? ?-
>> ? ? ? style.css ? ? ? ? ? ? ? 06-Feb-2010 21:20 ? ? ? ?0
>> ? ? ? template.xhtml ? ? ? ? ?06-Feb-2010 21:20 ? ? ? ?588
>
> When i execute the python scrit via the shell, it just works fine. I try with lighttpd + cgi + python and it works too.
>
> I tryed to replace the file path by full path /var/http/dev/pygitweb/templates/template.xhtml but i got ht same error.
>
> Any ideas ?
>
>
>
>
>
> Here the full error message :
>
> MOD_PYTHON ERROR
>
> ProcessId: ? ? ?3185
> Interpreter: ? ?'server.julienpecqueur.com'
>
> ServerName: ? ? 'server.julienpecqueur.com'
> DocumentRoot: ? '/var/www/'
>
> URI: ? ? ? ? ? ?'/dev/pygitweb/PyGitWeb.py'
> Location: ? ? ? None
> Directory: ? ? ?'/var/www/dev/pygitweb/'
> Filename: ? ? ? '/var/www/dev/pygitweb/PyGitWeb.py'
> PathInfo: ? ? ? ''
>
> Phase: ? ? ? ? ?'PythonHandler'
> Handler: ? ? ? ?'mod_python.publisher'
>
> Traceback (most recent call last):
>
> ?File "/usr/lib/python2.5/site-packages/mod_python/importer.py", line 1537, in HandlerDispatch
> ? ?default=default_handler, arg=req, silent=hlist.silent)
>
> ?File "/usr/lib/python2.5/site-packages/mod_python/importer.py", line 1229, in _process_target
> ? ?result = _execute_target(config, req, object, arg)
>
> ?File "/usr/lib/python2.5/site-packages/mod_python/importer.py", line 1128, in _execute_target
> ? ?result = object(arg)
>
> ?File "/usr/lib/python2.5/site-packages/mod_python/publisher.py", line 204, in handler
> ? ?module = page_cache[req]
>
> ?File "/usr/lib/python2.5/site-packages/mod_python/importer.py", line 1059, in __getitem__
> ? ?return import_module(req.filename)
>
> ?File "/usr/lib/python2.5/site-packages/mod_python/importer.py", line 296, in import_module
> ? ?log, import_path)
>
> ?File "/usr/lib/python2.5/site-packages/mod_python/importer.py", line 680, in import_module
> ? ?execfile(file, module.__dict__)
>
> ?File "/var/www/dev/pygitweb/PyGitWeb.py", line 153, in <module>
> ? ?Result = Page.build()
>
> ?File "/var/www/dev/pygitweb/PyGitWeb.py", line 95, in build
> ? ?self.read_template()
>
> ?File "/var/www/dev/pygitweb/PyGitWeb.py", line 88, in read_template
> ? ?template = open(self.template_path, 'r')
>
> IOError: [Errno 2] No such file or directory: 'templates/template.xhtml'
>
>
> MODULE CACHE DETAILS
>
> Accessed: ? ? ? Sun Feb ?7 13:40:16 2010
> Generation: ? ? 0
>
> _mp_a38b6d9b42b21e0116cc275fffcfc04b {
> ?FileName: ? ? '/var/www/dev/pygitweb/PyGitWeb.py'
> ?Instance: ? ? 1 [IMPORT]
> ?Generation: ? 0 [ERROR]
> ?Modified: ? ? Sun Feb ?7 12:36:47 2010
> }
>
>
>
> --
> Julien Pecqueur (JPEC)
>
> Site: ? http://julienpecqueur.com
> Email: ?jpec@julienpecqueur.com
> PGP: ? ?B1AA2389 (GNUPG)
> IRC: ? ?jpec (irc.freenode.net)
>
> Powered by Archlinux - Keep it simple stupid !
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>
>

From bostjan.primozic at amis.net  Tue Feb  9 05:29:52 2010
From: bostjan.primozic at amis.net (=?iso-8859-2?B?UHJpbW++aeggQm+5dGphbg==?=)
Date: Tue Feb  9 05:30:12 2010
Subject: [mod_python] Keeping data in memory 
Message-ID: <DE39648CD1574711BC167266D7E3FE51@BostjanPC>

Hi, 

I'd like to know if it's possible and how to store some data in memory.
I get small amount of date by parsing some other pages and this takes relativly long time, so I want to keep this data in memory ( if posible ). I heared something about storing this data in "global" variable which stays in memory all the time. 

Thank you very much, Bostjan
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20100209/3e11ec6b/attachment.html
From graham.dumpleton at gmail.com  Tue Feb  9 05:46:55 2010
From: graham.dumpleton at gmail.com (Graham Dumpleton)
Date: Tue Feb  9 05:47:02 2010
Subject: [mod_python] Keeping data in memory
In-Reply-To: <DE39648CD1574711BC167266D7E3FE51@BostjanPC>
References: <DE39648CD1574711BC167266D7E3FE51@BostjanPC>
Message-ID: <88e286471002090246m6118aa25j34395e780051ac7a@mail.gmail.com>

2010/2/9 Primo?i? Bo?tjan <bostjan.primozic@amis.net>:
> Hi,
>
> I'd like to know if it's possible and how to store some data in memory.
> I get small amount of date by parsing some other pages and this takes
> relativly long time, so?I want to keep this data in memory (?if posible ). I
> heared something about storing this data in "global" variable which stays in
> memory all the time.

Have you actually tried using Google to search for 'Python global variables'.

http://www.google.com/search?client=safari&rls=en&q=python+global+variables&ie=UTF-8&oe=UTF-8

Understand what global variables are in Python and you have your answer.

Graham

From bostjan.primozic at amis.net  Tue Feb  9 06:16:21 2010
From: bostjan.primozic at amis.net (=?iso-8859-2?B?UHJpbW++aeggQm+5dGphbg==?=)
Date: Tue Feb  9 06:16:32 2010
Subject: [mod_python] Keeping data in memory
In-Reply-To: <88e286471002090246m6118aa25j34395e780051ac7a@mail.gmail.com>
References: <DE39648CD1574711BC167266D7E3FE51@BostjanPC>
	<88e286471002090246m6118aa25j34395e780051ac7a@mail.gmail.com>
Message-ID: <9A1750C84924400FA5580BB6949F9988@BostjanPC>

It works with global variables, but if there is more than one thred/instance 
of interpreter there will be problems.

> Hi,
>
> I'd like to know if it's possible and how to store some data in memory.
> I get small amount of date by parsing some other pages and this takes
> relativly long time, so I want to keep this data in memory ( if posible ). 
> I
> heared something about storing this data in "global" variable which stays 
> in
> memory all the time.

Have you actually tried using Google to search for 'Python global 
variables'.

http://www.google.com/search?client=safari&rls=en&q=python+global+variables&ie=UTF-8&oe=UTF-8

Understand what global variables are in Python and you have your answer.

Graham 

From lgp171188 at gmail.com  Tue Feb  9 06:26:19 2010
From: lgp171188 at gmail.com (L.Guruprasad)
Date: Tue Feb  9 06:26:45 2010
Subject: [mod_python] Session management implementation in mod_python
Message-ID: <4B71465B.8070501@gmail.com>

Hi all,
I am in the process of writing a twisted python xmlrpc server wherein I
need some session management functionality that I have to write on my
own. Since I have used mod_python for long, I thought I could use the
ideas from mod_python's Session.py. But when I tried looking into the
Session.py code, I couldn't understand a lot of things due to my
insufficient knowledge. Can anyone help me in understanding the brief
overview of how it is done?

Regards,
Guruprasad
From sforno1960 at libero.it  Tue Feb  9 09:01:31 2010
From: sforno1960 at libero.it (Silvio forno)
Date: Tue Feb  9 09:03:18 2010
Subject: [mod_python] Keeping data in memory
In-Reply-To: <9A1750C84924400FA5580BB6949F9988@BostjanPC>
References: <DE39648CD1574711BC167266D7E3FE51@BostjanPC>	<88e286471002090246m6118aa25j34395e780051ac7a@mail.gmail.com>
	<9A1750C84924400FA5580BB6949F9988@BostjanPC>
Message-ID: <4B716ABB.3010804@libero.it>

hello,

you have to declare a global structure containing all data you need to 
store, and change apache in this way

# worker MPM
# StartServers: initial number of server processes to start
# MaxClients: maximum number of simultaneous client connections
# MinSpareThreads: minimum number of worker threads which are kept spare
# MaxSpareThreads: maximum number of worker threads which are kept spare
# ThreadsPerChild: constant number of worker threads in each server process
# MaxRequestsPerChild: maximum number of requests a server process serves
<IfModule mpm_worker_module>
    StartServers          1
    MaxClients           25
    MinSpareThreads      25
    MaxSpareThreads      25
    ThreadsPerChild      25
    MaxRequestsPerChild   0
</IfModule>


to have only one istance of server. if not when a second istance start, 
you do not have global data shared. this if you works in linux. if you 
use mod_python on windows you have always have only one instance...

have a good luck

silvio forno

From martijn at xs4us.nu  Tue Feb  9 16:42:14 2010
From: martijn at xs4us.nu (Martijn Moeling)
Date: Tue Feb  9 16:42:21 2010
Subject: [mod_python] Session management implementation in mod_python
In-Reply-To: <4B71465B.8070501@gmail.com>
References: <4B71465B.8070501@gmail.com>
Message-ID: <57A0A52F-3EDB-4017-8453-3CD91A249825@xs4us.nu>

Hi Guruprasad,

I have have a heavily changed version of Session.py in use by my system.
It's session store is in a MySQL database so multiple MP front end machines can serve clients (load balancing).

I'm now away from MP and use mod_wsgi since I have issues with memory leaks and cannot rely on MP since its development ceased.

To do so I have made an interface so my MP code works on top of MOD_WSGI. Again I had to change Session.py since it relies on apache.py and that will not work on top of mod_wsgi......
Since I'm working on low level HTTP for the base of my web desktop I do have a great understanding of session management, I have turned the whole thing into what I needed.

I can line by line comment Session.py but I'm not willing to do so since I do not know your level of knowledge.

Please pick the Pieces of code you do not understand and ask your questions, I will be happy to answer those and if needed help you out with getting your stuff working.

Kind regards,

Martijn Moeling




On Feb 9, 2010, at 12:26 PM, L.Guruprasad wrote:

> Hi all,
> I am in the process of writing a twisted python xmlrpc server wherein I
> need some session management functionality that I have to write on my
> own. Since I have used mod_python for long, I thought I could use the
> ideas from mod_python's Session.py. But when I tried looking into the
> Session.py code, I couldn't understand a lot of things due to my
> insufficient knowledge. Can anyone help me in understanding the brief
> overview of how it is done?
> 
> Regards,
> Guruprasad
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python


From martijn at xs4us.nu  Tue Feb  9 17:31:08 2010
From: martijn at xs4us.nu (Martijn Moeling)
Date: Tue Feb  9 17:31:25 2010
Subject: [mod_python] bye bye mod_python, hello... what?
In-Reply-To: <88e286471001171346m162b2758u6f93306edf6358a5@mail.gmail.com>
References: <4B4C7A01.20205@elasticmind.net>
	<a595de7a1001120556s31282e40j5ef11cc0d452dc6d@mail.gmail.com>
	<88e286471001121427j505462b1tdc87388a14147ffb@mail.gmail.com>
	<65853.73715.qm@web57202.mail.re3.yahoo.com>
	<4B531E90.3070102@mikrotec.com>
	<264983.79123.qm@web57201.mail.re3.yahoo.com>
	<88e286471001171346m162b2758u6f93306edf6358a5@mail.gmail.com>
Message-ID: <0A534088-48CF-4705-8417-94224CDC92C5@xs4us.nu>

For people NOT using frameworks with lots of code I have a fake code compatible MOD_PYTHON module which runs on top of MOD_WSGI
It works faster (No real benchmarks available, it feels much faster) and does not include support for publisher since I do not need it and don't even looked into it I do not even know what it is.
Authorization is currently being developed, Session and Cookies work.

It calls handler(req): end soon the AuthHandler(req), supports req.register_cleanup

Basically it is WSGI API Bridge .....

Martijn

On Jan 17, 2010, at 10:46 PM, Graham Dumpleton wrote:

> 2010/1/18 Samuel Hazelett <alertmaster@yahoo.com>:
>> I am little disappointed in the Apache Software Foundation for having taken
>> mod_python under its umbrella only to allow it to wither.
> 
> The ASF is a volunteer organisation. You can't therefore blame the
> ASF. The problem is that users of mod_python (such as yourself), can't
> be bothered contributing to mod_python any more. If you, or anyone
> else, is truly passionate about mod_python then all you need to do is
> step up and volunteer to take over the project, albeit that any
> handover may be problematic due to inactivity of majority of prior
> developers. This though isn't insurmountable as that is where the ASF
> project management committees would step in and likely assist in
> delegating control over to new contributors.
> 
> At least in my role as member of the ASF, if I didn't care, I would
> have removed myself from the mailing list over 2 years ago when I
> stopped being interested in mod_python. Instead I still hang around
> here and answer peoples questions.
> 
>> If mod_python is moribund, what will happen to Mod_python@modpython.org?
> 
> The modpython.org domain is not under the ownership of the ASF anyway,
> nor is the content on the site. Both are owned by the original primary
> author of mod_python and he is also missing in action. That they are
> owned by him and not the ASF is part of the problem. That is, it was
> always exceedingly difficult to get anything on that site updated. As
> a result, certain things related to the site have decayed over time
> and haven't been able to be fixed.
> 
>> What's to say the new-fangled API won't suffer a similar fate?
> 
> Because it is described by a Python PEP. These are as close as you get
> to a standard in the Python world. See:
> 
>  http://www.python.org/dev/peps/pep-0333/
> 
>> If, as you say Doug, WSGI API bridge is a better idea, then I shouldn't
>> become/remain a Luddite and I "should get with the program".
> 
> It certainly where the mindshare currently is.
> 
>> I had brought mod_python into my workplace because of a, perhaps outdated,
>> recommedation that it should be coupled with Django.
>> With respect to the workplace, I work in a secured lab that makes it a small
>> nuisance to bring anything new within its perimeter.
>> For this reason, I do most of my learning/experimenting with non-sensitive
>> test data on my home desktop.
>> 
>> Maybe I should drop the Django idea, too. I haven't invested much time in
>> it, nor bought the book.
> 
> Django is not bound to mod_python. If you had read any books on Django
> then maybe you would know this. The Django stack can quite happily run
> on top of WSGI hosting mechanisms such as mod_wsgi.
> 
>> I see mention of such related s/w as werkzeug, CherryPy, and pythonpaste.
>> I'm barely a Python programmer, hand-jamming database connections and HTML
>> reports.
>> What's a newbie to do?
> 
> Keep using Django since you have started with it already. Just read
> the hosting documentation for Django and understand that it can run on
> various hosting mechanisms.
> 
> Other Python web frameworks are WSGI specific, but Django isn't.
> 
> Graham
> 
>> ________________________________
>> From: Doug Epling <wdepli@mikrotec.com>
>> To: Samuel Hazelett <alertmaster@yahoo.com>
>> Cc: Mod_python@modpython.org
>> Sent: Sun, January 17, 2010 9:28:32 AM
>> Subject: Re: [mod_python] bye bye mod_python, hello... what?
>> 
>> Samuel Hazelett wrote:
>> 
>> "unfortunately, mod_python is deprecated"
>> 
>> What does this mean: deprecated
>> Why?
>> Does it mean there will be no future releases of mod_python?  The "end of
>> history!"
>> I was just getting started.  Woe is me/us.
>> 
>> Yeah, I am the same way, especially, having worked with php some, with
>> losing the concept of psp as well as the publisher handler.
>> 
>> But from what I can tell the WSGI API bridge is a much better idea.
>> mod_wsgi is designed to be to python what rails is to ruby.
>> 
>> Except python is a standards based technology!;-)
>> 
>> ________________________________
>> From: Graham Dumpleton <graham.dumpleton@gmail.com>
>> To: clodoaldo.pinto.neto@gmail.com
>> Cc: mod_python@modpython.org
>> Sent: Tue, January 12, 2010 5:27:34 PM
>> Subject: Re: [mod_python] bye bye mod_python, hello... what?
>> 
>> 2010/1/13 Clodoaldo Neto <clodoaldo.pinto.neto@gmail.com>:
>>> 2010/1/12 mog <lists@elasticmind.net>:
>>>> So, the time has come. I need to start a new project and also migrate my
>>>> old
>>>> mod_python stuff to something else :(
>>>> 
>>>> After all the sweat, blood and tears I put into learning about how Python
>>>> web apps work, learning how to use mod_python, and how to put web apps
>>>> together (using mod_python). It's really sad to think that a good portion
>>>> of
>>>> that effort seems lost because, unfortunately, mod_python is deprecated
>>>> :(
>>>> 
>>>> I looked at a few web frameworks but found they either simply didn't
>>>> work,
>>>> exhibited weird random unpredictable behaviour that was impossible to
>>>> work
>>>> with, or seemed to abstract so far away from real HTTP which made me feel
>>>> uncomfortable. I finally settled on mod_python because it seemed to be a
>>>> nice balance of powerful functionality and usefulness - oh, and it
>>>> worked.
>>>> 
>>>> With mod_python I felt as though I was working closely with the HTTP
>>>> requests because I could use the request objects directly and, if I
>>>> wanted
>>>> (and I did), stick stuff in them to use in sessions. mod_python seemed
>>>> pretty raw, but not so much so that I had to write my own request
>>>> handlers
>>>> and all the nitty gritty things like that (which, being new to web
>>>> development, was and probably still is beyond my ability to do well and
>>>> securely). I liked it because it also provided lots of in-built utilities
>>>> making it really easy to do session handling, redirection and so on.
>>>> 
>>>> I'm trying to avoid using one of the mainstream frameworks because I feel
>>>> they overcomplicate things, bloat things up, and abstract too much away
>>>> from
>>>> what is really going on. Many of them annoyingly also end up requiring a
>>>> bazillion dependencies to install. Personally I like to use small and
>>>> compact programs that are really good at doing the small number of things
>>>> I
>>>> need them to, as opposed to installing some giant application (and all
>>>> its
>>>> dependencies) that can do everything under the sun I'll never use.
>>>> 
>>>> With all this in mind. I was hoping someone would please be so kind as to
>>>> recommend things that I could use instead of mod_python as a WSGI layer,
>>>> but
>>>> that hopefully works in a similar way to mod_python?
>>> 
>>> You could start trying Werkzeug which calls itself "a simple
>>> collection of various utilities for WSGI applications".
>>> 
>>> http://werkzeug.pocoo.org/
>>> 
>>> Then WebOb:
>>> 
>>> http://pythonpaste.org/webob/
>>> 
>>> Regarding small and simple I think the two above are some of the best
>>> approaches but don't expect something like the mod_python's publisher
>>> handler.
>> 
>> I'd second Werkzeug, but also add 'bobo' which uses Paste but gives
>> some simple to use URL dispatch mechanisms.
>> 
>> Neither have inbuilt session support however, so for that you would
>> need to use Beaker.
>> 
>> Graham
>> _______________________________________________
>> Mod_python mailing list
>> Mod_python@modpython.org
>> http://mailman.modpython.org/mailman/listinfo/mod_python
>> 
>> ________________________________
>> _______________________________________________
>> Mod_python mailing list
>> Mod_python@modpython.org
>> http://mailman.modpython.org/mailman/listinfo/mod_python
>> 
>> 
>> 
>> _______________________________________________
>> Mod_python mailing list
>> Mod_python@modpython.org
>> http://mailman.modpython.org/mailman/listinfo/mod_python
>> 
>> 
> 
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python


From graham.dumpleton at gmail.com  Tue Feb  9 19:12:21 2010
From: graham.dumpleton at gmail.com (Graham Dumpleton)
Date: Tue Feb  9 19:12:27 2010
Subject: [mod_python] Keeping data in memory
In-Reply-To: <9A1750C84924400FA5580BB6949F9988@BostjanPC>
References: <DE39648CD1574711BC167266D7E3FE51@BostjanPC>
	<88e286471002090246m6118aa25j34395e780051ac7a@mail.gmail.com>
	<9A1750C84924400FA5580BB6949F9988@BostjanPC>
Message-ID: <88e286471002091612o85e93ccrc0d5a649147599bc@mail.gmail.com>

True. As described in:

  http://www.dscpl.com.au/wiki/ModPython/Articles/TheProcessInterpreterModel

if you want cross process sharing, you can't rely on global variables
and must use an out of process storage mechanism.

Graham

2010/2/9 Primo?i? Bo?tjan <bostjan.primozic@amis.net>:
> It works with global variables, but if there is more than one thred/instance
> of interpreter there will be problems.
>
>> Hi,
>>
>> I'd like to know if it's possible and how to store some data in memory.
>> I get small amount of date by parsing some other pages and this takes
>> relativly long time, so I want to keep this data in memory ( if posible ).
>> I
>> heared something about storing this data in "global" variable which stays
>> in
>> memory all the time.
>
> Have you actually tried using Google to search for 'Python global
> variables'.
>
> http://www.google.com/search?client=safari&rls=en&q=python+global+variables&ie=UTF-8&oe=UTF-8
>
> Understand what global variables are in Python and you have your answer.
>
> Graham
>

From brooklinetom at gmail.com  Tue Feb  9 19:32:20 2010
From: brooklinetom at gmail.com (Tom Stambaugh)
Date: Tue Feb  9 19:32:28 2010
Subject: [mod_python] Keeping data in memory
Message-ID: <ad96ea741002091632l11e8f4a1uba18915a0144b096@mail.gmail.com>

Hi All:

First, I want to thank Graham for all the effort he puts into this group and
mod_python. This is way, way above and beyond any kind of "duty", and I
truly appreciate it.

As a test-driven developer, I would **love** to have a unittest (or its
equivalent) test suite that demonstrates the various failure mechanisms when
the wrong thing is done (for example, when using a simple global variable)
and then demonstrates that these fixes solve the problem.

Most (all?) of the test suites and testing literature I've seen assume a
single-process environment. Before I start removing my few remaining hairs
by unnecessary head-scratching, I will greatly appreciate pointers to
material that addresses unit tests for an approach where a client (lets say
a browser connecting through json to its own python thread) is using
resources maintained in a different Python thread, so that multiple client
threads are hitting against a shared resource.

Presumably two or more parallel client test cases will compete for the
shared resource (is it a "testResource" in the original SUnit sense?), fail
when the wrong thing is done, and pass when the right thing is in place. Of
course, some kind of harness has to set up and fire off all this.

Thanks in advance!
Tom

Graham Dumpleton wrote:

True. As described in:

  http://www.dscpl.com.au/wiki/ModPython/Articles/TheProcessInterpreterModel

if you want cross process sharing, you can't rely on global variables
and must use an out of process storage mechanism.

Graham

2010/2/9 Primo?i? Bo?tjan
<bostjan.primozic@amis.net><bostjan.primozic@amis.net>:


It works with global variables, but if there is more than one thred/instance

of interpreter there will be problems.

Hi,

I'd like to know if it's possible and how to store some data in memory.
I get small amount of date by parsing some other pages and this takes
relativly long time, so I want to keep this data in memory ( if posible ).
I
heared something about storing this data in "global" variable which stays
in
memory all the time.

Have you actually tried using Google to search for 'Python global
variables'.

http://www.google.com/search?client=safari&rls=en&q=python+global+variables&ie=UTF-8&oe=UTF-8

Understand what global variables are in Python and you have your answer.

Graham


_______________________________________________
Mod_python mailing list
Mod_python@modpython.org
http://mailman.modpython.org/mailman/listinfo/mod_python


-- 
Tom Stambaugh, Founder
Zeetix LLC/ZeeGuide/ZeeForge
27 Auburn Street
Brookline, MA 02446
617-734-8934 (land)
617-721-0446 (cell)
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20100209/e25d121a/attachment.html
From manikandank at tce.edu  Wed Feb 10 03:52:31 2010
From: manikandank at tce.edu (K.Manikandan)
Date: Wed Feb 10 03:53:10 2010
Subject: [mod_python] Re: Session management implementation in mod_python
Message-ID: <ae03d5bbcee150cbff631e89acccc1a4.squirrel@mail.tce.edu>

>Please pick the Pieces of code you do not understand and ask your
questions, >I will be happy to answer those and if needed help you out
with getting your >stuff working.
>Kind regards,
>Martijn Moeling

Hi,

We are using twisted-python for providing web-services. We have to handle
sessions. In the Session.py file, there was a lot of things about
Threading and Locking. Is it mandatory that we use threading concepts for
maintaining sessions ? Moreover, are there any other way in which we can
maintain sessions without threading and locking?



Regards,
Manikandan K


-----------------------------------------
This email was sent using TCEMail Service.
Thiagarajar College of Engineering
Madurai-625 015, India

From graham.dumpleton at gmail.com  Wed Feb 10 05:05:02 2010
From: graham.dumpleton at gmail.com (Graham Dumpleton)
Date: Wed Feb 10 05:05:09 2010
Subject: [mod_python] Re: Session management implementation in mod_python
In-Reply-To: <ae03d5bbcee150cbff631e89acccc1a4.squirrel@mail.tce.edu>
References: <ae03d5bbcee150cbff631e89acccc1a4.squirrel@mail.tce.edu>
Message-ID: <88e286471002100205s2c8531c9pd9b2a35747403fb8@mail.gmail.com>

I would perhaps suggest you look at Beaker as a better/simpler to
understand example of session management. The mod_python
implementation is complicated by the fact that it tries to handle
cross process exclusive locking.

Graham

On 10 February 2010 19:52, K.Manikandan <manikandank@tce.edu> wrote:
>>Please pick the Pieces of code you do not understand and ask your
> questions, >I will be happy to answer those and if needed help you out
> with getting your >stuff working.
>>Kind regards,
>>Martijn Moeling
>
> Hi,
>
> We are using twisted-python for providing web-services. We have to handle
> sessions. In the Session.py file, there was a lot of things about
> Threading and Locking. Is it mandatory that we use threading concepts for
> maintaining sessions ? Moreover, are there any other way in which we can
> maintain sessions without threading and locking?
>
>
>
> Regards,
> Manikandan K
>
>
> -----------------------------------------
> This email was sent using TCEMail Service.
> Thiagarajar College of Engineering
> Madurai-625 015, India
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>
From l.montecchiani at teamsystem.com  Wed Feb 10 09:11:34 2010
From: l.montecchiani at teamsystem.com (Luca Montecchiani)
Date: Wed Feb 10 09:09:22 2010
Subject: [mod_python] bye bye mod_python, hello... what?
In-Reply-To: <0A534088-48CF-4705-8417-94224CDC92C5@xs4us.nu>
References: <4B4C7A01.20205@elasticmind.net>	<a595de7a1001120556s31282e40j5ef11cc0d452dc6d@mail.gmail.com>	<88e286471001121427j505462b1tdc87388a14147ffb@mail.gmail.com>	<65853.73715.qm@web57202.mail.re3.yahoo.com>	<4B531E90.3070102@mikrotec.com>	<264983.79123.qm@web57201.mail.re3.yahoo.com>	<88e286471001171346m162b2758u6f93306edf6358a5@mail.gmail.com>
	<0A534088-48CF-4705-8417-94224CDC92C5@xs4us.nu>
Message-ID: <4B72BE96.8090205@teamsystem.com>

An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20100210/6af256c9/attachment.html
-------------- next part --------------
A non-text attachment was scrubbed...
Name: _psplite.py
Type: text/x-python
Size: 4116 bytes
Desc: not available
Url : http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20100210/6af256c9/_psplite.py
From martijn at xs4us.nu  Wed Feb 10 12:51:29 2010
From: martijn at xs4us.nu (Martijn Moeling)
Date: Wed Feb 10 12:51:48 2010
Subject: [mod_python] Re: Session management implementation in mod_python
In-Reply-To: <88e286471002100205s2c8531c9pd9b2a35747403fb8@mail.gmail.com>
References: <ae03d5bbcee150cbff631e89acccc1a4.squirrel@mail.tce.edu>
	<88e286471002100205s2c8531c9pd9b2a35747403fb8@mail.gmail.com>
Message-ID: <3E98161C-52AF-486A-A11E-7FD27177DE39@xs4us.nu>

I agree with Graham, MP Session.py has its use but when using frameworks Beaker should be fine...

Martijn


On Feb 10, 2010, at 11:05 AM, Graham Dumpleton wrote:

> I would perhaps suggest you look at Beaker as a better/simpler to
> understand example of session management. The mod_python
> implementation is complicated by the fact that it tries to handle
> cross process exclusive locking.
> 
> Graham
> 
> On 10 February 2010 19:52, K.Manikandan <manikandank@tce.edu> wrote:
>>> Please pick the Pieces of code you do not understand and ask your
>> questions, >I will be happy to answer those and if needed help you out
>> with getting your >stuff working.
>>> Kind regards,
>>> Martijn Moeling
>> 
>> Hi,
>> 
>> We are using twisted-python for providing web-services. We have to handle
>> sessions. In the Session.py file, there was a lot of things about
>> Threading and Locking. Is it mandatory that we use threading concepts for
>> maintaining sessions ? Moreover, are there any other way in which we can
>> maintain sessions without threading and locking?
>> 
>> 
>> 
>> Regards,
>> Manikandan K
>> 
>> 
>> -----------------------------------------
>> This email was sent using TCEMail Service.
>> Thiagarajar College of Engineering
>> Madurai-625 015, India
>> 
>> _______________________________________________
>> Mod_python mailing list
>> Mod_python@modpython.org
>> http://mailman.modpython.org/mailman/listinfo/mod_python
>> 
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python


From yves.moisan at boreal-is.com  Thu Feb 11 13:45:51 2010
From: yves.moisan at boreal-is.com (Yves Moisan)
Date: Thu Feb 11 13:45:57 2010
Subject: [mod_python] Pass Apache location as a parameter to windows
	installer
Message-ID: <1265913951.24341.5.camel@yves-laptop>

Hi all,

Is there a way to pass in the directory location of Apache to the
windows installer as a parameter ?  We're using the mod_python windows
installer from within an NSIS installer and we'd like to make a silent
(or just-look-it-gets-installed) mod_python install.  Also, that would
minimize the chance of a user accidentally pointing the installer to the
wrong Apache directory.

TIA,

Yves Moisan

From graham.dumpleton at gmail.com  Thu Feb 11 19:41:48 2010
From: graham.dumpleton at gmail.com (Graham Dumpleton)
Date: Thu Feb 11 19:41:56 2010
Subject: [mod_python] Pass Apache location as a parameter to windows 
	installer
In-Reply-To: <1265913951.24341.5.camel@yves-laptop>
References: <1265913951.24341.5.camel@yves-laptop>
Message-ID: <88e286471002111641l25a05a71m56c6d5f82f42f85@mail.gmail.com>

On 12 February 2010 05:45, Yves Moisan <yves.moisan@boreal-is.com> wrote:
> Hi all,
>
> Is there a way to pass in the directory location of Apache to the
> windows installer as a parameter ? ?We're using the mod_python windows
> installer from within an NSIS installer and we'd like to make a silent
> (or just-look-it-gets-installed) mod_python install. ?Also, that would
> minimize the chance of a user accidentally pointing the installer to the
> wrong Apache directory.

Look at the file:

  dist/win32_postinstall.py

in mod_python source code.

Its seems that it tries to get the location from registry settings but
perhaps only as starting point before putting up popup to confirm. You
could easily change the script though to not put up a popup.

In other words, you would need to create your own installer by using
build scripts in mod_python. That or somehow unpack the installer,
change the script in it and put it back together.

See:

  dist/build_installer.bat

for building mod_python yourself.

Graham

From yves.moisan at boreal-is.com  Fri Feb 12 08:41:58 2010
From: yves.moisan at boreal-is.com (Yves Moisan)
Date: Fri Feb 12 08:42:04 2010
Subject: [mod_python] Pass Apache location as a parameter to windows 
	installer
In-Reply-To: <88e286471002111641l25a05a71m56c6d5f82f42f85@mail.gmail.com>
References: <1265913951.24341.5.camel@yves-laptop>
	<88e286471002111641l25a05a71m56c6d5f82f42f85@mail.gmail.com>
Message-ID: <1265982118.4444.12.camel@yves-laptop>

Thanx Graham.

Yves

> On 12 February 2010 05:45, Yves Moisan <yves.moisan@boreal-is.com> wrote:
> > Hi all,
> >
> > Is there a way to pass in the directory location of Apache to the
> > windows installer as a parameter ?  We're using the mod_python windows
> > installer from within an NSIS installer and we'd like to make a silent
> > (or just-look-it-gets-installed) mod_python install.  Also, that would
> > minimize the chance of a user accidentally pointing the installer to the
> > wrong Apache directory.
> 
> Look at the file:
> 
>   dist/win32_postinstall.py
> 
> in mod_python source code.
> 
> Its seems that it tries to get the location from registry settings but
> perhaps only as starting point before putting up popup to confirm. You
> could easily change the script though to not put up a popup.
> 
> In other words, you would need to create your own installer by using
> build scripts in mod_python. That or somehow unpack the installer,
> change the script in it and put it back together.
> 
> See:
> 
>   dist/build_installer.bat
> 
> for building mod_python yourself.
> 
> Graham

From matusis at yahoo.com  Tue Feb 16 20:46:58 2010
From: matusis at yahoo.com (Alec Matusis)
Date: Tue Feb 16 20:47:46 2010
Subject: [mod_python] migrating to mod_wsgi
Message-ID: <00d601caaf73$17f013f0$47d03bd0$@com>

We have a high traffic site (thousands HTTP requests per second),  that is
written with mod_python and Cheetah.
We are considering migrating some parts of it to mod_wsgi.

I have a few questions:

1) is there a framework or middleware that we can set up, such that the
existing code that works with mod_python would just work with mod_wsgi?

2) This is about new code, that is yet to be written. 
We only need two simple features from mod_python, namely cookie management,
and parsing CGI variables submitted via web forms (no session management
needed, etc). We also need some very basic templating functionality found in
Cheetah (we could almost get away with string.Template class from pure
Python, but I'd like to have if and for statements as in Cheetah). I would
strongly prefer not to use any large framework like Django for several
reasons (performance, unneeded complexity, security, etc).

What is the best way to proceed: to wrap basic WSGI into our own
light-weight cookie management and variable parsing classes, or is there a
super light-weight and SIMPLE middleware that would do this?
What would you recommend for templating? We do not want to commit to using
anything project that would likely become inactive/unsupported soon.

 



From graham.dumpleton at gmail.com  Tue Feb 16 20:53:52 2010
From: graham.dumpleton at gmail.com (Graham Dumpleton)
Date: Tue Feb 16 20:53:59 2010
Subject: [mod_python] migrating to mod_wsgi
In-Reply-To: <00d601caaf73$17f013f0$47d03bd0$@com>
References: <00d601caaf73$17f013f0$47d03bd0$@com>
Message-ID: <88e286471002161753r745f51date88319eecf380779@mail.gmail.com>

On 17 February 2010 12:46, Alec Matusis <matusis@yahoo.com> wrote:
> We have a high traffic site (thousands HTTP requests per second), ?that is
> written with mod_python and Cheetah.
> We are considering migrating some parts of it to mod_wsgi.
>
> I have a few questions:
>
> 1) is there a framework or middleware that we can set up, such that the
> existing code that works with mod_python would just work with mod_wsgi?
>
> 2) This is about new code, that is yet to be written.
> We only need two simple features from mod_python, namely cookie management,
> and parsing CGI variables submitted via web forms (no session management
> needed, etc). We also need some very basic templating functionality found in
> Cheetah (we could almost get away with string.Template class from pure
> Python, but I'd like to have if and for statements as in Cheetah). I would
> strongly prefer not to use any large framework like Django for several
> reasons (performance, unneeded complexity, security, etc).
>
> What is the best way to proceed: to wrap basic WSGI into our own
> light-weight cookie management and variable parsing classes, or is there a
> super light-weight and SIMPLE middleware that would do this?
> What would you recommend for templating? We do not want to commit to using
> anything project that would likely become inactive/unsupported soon.

On the latter question, have a look at Werkzeug. It is more of a
toolkit like mod_python was rather than a framework.

Web site is:

  http://werkzeug.pocoo.org/

Graham

From yves.moisan at boreal-is.com  Wed Feb 17 08:47:29 2010
From: yves.moisan at boreal-is.com (Yves Moisan)
Date: Wed Feb 17 08:47:34 2010
Subject: [mod_python] migrating to mod_wsgi
In-Reply-To: <88e286471002161753r745f51date88319eecf380779@mail.gmail.com>
References: <00d601caaf73$17f013f0$47d03bd0$@com>
	<88e286471002161753r745f51date88319eecf380779@mail.gmail.com>
Message-ID: <1266414449.4454.15.camel@yves-laptop>


> 
> On the latter question, have a look at Werkzeug. It is more of a
> toolkit like mod_python was rather than a framework.

There's also repoze.bfg.  From their web site : "BFG is a Python web
application framework based on WSGI.  (http://bfg.repoze.org/).

I haven't tried it myself yet, but it sounds like a good candidate for
high throughput web apps.

Cheers,	

Yves Moisan



From atomhouse at gmail.com  Wed Feb 24 05:59:34 2010
From: atomhouse at gmail.com (Anugraha)
Date: Wed Feb 24 06:01:00 2010
Subject: [mod_python] Configuring mod_python
Message-ID: <4B850696.9060308@gmail.com>

hi all,  
          am a newbie.I would like to know which is the better method of 
configuring mod_python with apache,
              using .htacess or changing the apache config?
From martijn at xs4us.nu  Wed Feb 24 13:42:10 2010
From: martijn at xs4us.nu (Martijn Moeling)
Date: Wed Feb 24 13:42:21 2010
Subject: [mod_python] migrating to mod_wsgi
In-Reply-To: <00d601caaf73$17f013f0$47d03bd0$@com>
References: <00d601caaf73$17f013f0$47d03bd0$@com>
Message-ID: <754B107A-B5E0-41CF-814A-0D36C0289684@xs4us.nu>

I have written an adapter for mod_wsgi which is code compatible for Mod_python programs.
My mod_python CMS runs now on top of mod_wsgi without any changes to the code.

It is really small and consists of one index.wsgi to created the req object and call the handler and a "fake" python package for the apache.py, Session.Py, Cookie.py etc. (I did need to change some stuff in there)
I did this for my own use since I like the Req object and to pass it around, so my code is very dependent on MP. I have completely turned over Session.Py for my own session management which stores in MySQL and has License stuff etc.

I consider it Beta since I am the only one running it and do not touch all the code.

This code is free to use by anybody (Be aware it should be GPL or so). At the moment there is no CVS or License simply because I do not have the time to set stuff like that up (never did that before). I just started coding Python with Eclipse and Pydev as preparation on starting CVS use.

Drop me an email if u r interested I'll help you out using email/MSN Messenger/Skype etc.

I do not know about cheetah, I think on that part you can use the parts you are already using.


Regards,

Martijn

On Feb 17, 2010, at 2:46 AM, Alec Matusis wrote:

> We have a high traffic site (thousands HTTP requests per second),  that is
> written with mod_python and Cheetah.
> We are considering migrating some parts of it to mod_wsgi.
> 
> I have a few questions:
> 
> 1) is there a framework or middleware that we can set up, such that the
> existing code that works with mod_python would just work with mod_wsgi?
> 
> 2) This is about new code, that is yet to be written. 
> We only need two simple features from mod_python, namely cookie management,
> and parsing CGI variables submitted via web forms (no session management
> needed, etc). We also need some very basic templating functionality found in
> Cheetah (we could almost get away with string.Template class from pure
> Python, but I'd like to have if and for statements as in Cheetah). I would
> strongly prefer not to use any large framework like Django for several
> reasons (performance, unneeded complexity, security, etc).
> 
> What is the best way to proceed: to wrap basic WSGI into our own
> light-weight cookie management and variable parsing classes, or is there a
> super light-weight and SIMPLE middleware that would do this?
> What would you recommend for templating? We do not want to commit to using
> anything project that would likely become inactive/unsupported soon.
> 
> 
> 
> 
> 
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python


From graham.dumpleton at gmail.com  Wed Feb 24 18:09:41 2010
From: graham.dumpleton at gmail.com (Graham Dumpleton)
Date: Wed Feb 24 18:09:45 2010
Subject: [mod_python] Configuring mod_python
In-Reply-To: <4B850696.9060308@gmail.com>
References: <4B850696.9060308@gmail.com>
Message-ID: <88e286471002241509w40636358k6dee41aedb4f7842@mail.gmail.com>

On 24 February 2010 21:59, Anugraha <atomhouse@gmail.com> wrote:
> hi all, ? ? ? ? ? am a newbie.I would like to know which is the better
> method of configuring mod_python with apache,
> ? ? ? ? ? ? using .htacess or changing the apache config?

It depends on your requirements.

You don't say whether you are intending to use raw mod_python, publisher or PSP.

From atomhouse at gmail.com  Thu Feb 25 04:02:27 2010
From: atomhouse at gmail.com (Anugraha)
Date: Thu Feb 25 04:02:48 2010
Subject: [mod_python] Configuring mod_python
In-Reply-To: <88e286471002241509w40636358k6dee41aedb4f7842@mail.gmail.com>
References: <4B850696.9060308@gmail.com>
	<88e286471002241509w40636358k6dee41aedb4f7842@mail.gmail.com>
Message-ID: <4B863CA3.3010005@gmail.com>

Graham Dumpleton wrote:
> On 24 February 2010 21:59, Anugraha <atomhouse@gmail.com> wrote:
>   
>> hi all,           am a newbie.I would like to know which is the better
>> method of configuring mod_python with apache,
>>             using .htacess or changing the apache config?
>>     
>
> It depends on your requirements.
>
> You don't say whether you are intending to use raw mod_python, publisher or PSP.
>   
Just raw mod_python publisher handler as for now.But I may like to get 
into PSP also as i'm learning.
From atomhouse at gmail.com  Thu Feb 25 04:41:16 2010
From: atomhouse at gmail.com (Anugraha)
Date: Thu Feb 25 04:41:43 2010
Subject: [mod_python] Configuring mod_python
In-Reply-To: <88e286471002241509w40636358k6dee41aedb4f7842@mail.gmail.com>
References: <4B850696.9060308@gmail.com>
	<88e286471002241509w40636358k6dee41aedb4f7842@mail.gmail.com>
Message-ID: <4B8645BC.5080703@gmail.com>

Graham Dumpleton wrote:
> On 24 February 2010 21:59, Anugraha <atomhouse@gmail.com> wrote:
>   
>> hi all,           am a newbie.I would like to know which is the better
>> method of configuring mod_python with apache,
>>             using .htacess or changing the apache config?
>>     
>
> It depends on your requirements.
>
> You don't say whether you are intending to use raw mod_python, publisher or PSP.
>   
I have the following in my /etc/apache2/sites-available/default

LoadModule python_module /usr/lib/apache2/modules/mod_python.so
<Directory "/var/www/html">
  AddHandler mod_python.py
  PythonHandler mod_python.publisher
  PythonDebug On
  PythonAutoReload On
</Directory>

where /var/www/html is where I have my index.html and a form.py . But I 
get a connection error in my browser for localhost/html

please point where i am going wrong.

From graham.dumpleton at gmail.com  Thu Feb 25 05:21:42 2010
From: graham.dumpleton at gmail.com (Graham Dumpleton)
Date: Thu Feb 25 05:21:48 2010
Subject: [mod_python] Configuring mod_python
In-Reply-To: <4B8645BC.5080703@gmail.com>
References: <4B850696.9060308@gmail.com>
	<88e286471002241509w40636358k6dee41aedb4f7842@mail.gmail.com>
	<4B8645BC.5080703@gmail.com>
Message-ID: <88e286471002250221u564e4d47p670a0d4c2eca555a@mail.gmail.com>

On 25 February 2010 20:41, Anugraha <atomhouse@gmail.com> wrote:
> Graham Dumpleton wrote:
>>
>> On 24 February 2010 21:59, Anugraha <atomhouse@gmail.com> wrote:
>>
>>>
>>> hi all, ? ? ? ? ? am a newbie.I would like to know which is the better
>>> method of configuring mod_python with apache,
>>> ? ? ? ? ? ?using .htacess or changing the apache config?
>>>
>>
>> It depends on your requirements.
>>
>> You don't say whether you are intending to use raw mod_python, publisher
>> or PSP.
>>
>
> I have the following in my /etc/apache2/sites-available/default
>
> LoadModule python_module /usr/lib/apache2/modules/mod_python.so
> <Directory "/var/www/html">
> ?AddHandler mod_python.py
> ?PythonHandler mod_python.publisher
> ?PythonDebug On
> ?PythonAutoReload On
> </Directory>
>
> where /var/www/html is where I have my index.html and a form.py . But I get
> a connection error in my browser for localhost/html
>
> please point where i am going wrong.

Ensure your Apache works for static files first. The error you
describe seems to be unrelated to mod_python.

if you believe it is related to mod_python, you need to provide the
exact and complete error messages from browser and Apache error log.

Graham

From martijn at xs4us.nu  Sun Feb 28 18:29:24 2010
From: martijn at xs4us.nu (Martijn Moeling)
Date: Sun Feb 28 18:29:43 2010
Subject: [mod_python] migrating to mod_wsg
In-Reply-To: <b4545ff11002250308l7cc9baf2wa1e0db9cb05d053f@mail.gmail.com>
References: <b4545ff11002250308l7cc9baf2wa1e0db9cb05d053f@mail.gmail.com>
Message-ID: <14A2B587-68EF-4CD3-B156-592B126024C1@xs4us.nu>

Please give me some time to build instructions and a zip file, I'm extremely busy until next wednesday, I hope i can find the time to get it done in between!

On Feb 25, 2010, at 12:08 PM, Lu wrote:

> I have written an adapter for mod_wsgi which is code compatible for Mod_python programs.
> My mod_python CMS runs now on top of mod_wsgi without any changes to the code.
> 
> It is really small and consists of one index.wsgi to created the req object and call the handler and a "fake" python package for the apache.py, Session.Py, Cookie.py etc. (I did need to change some stuff in there)
> I did this for my own use since I like the Req object and to pass it around, so my code is very dependent on MP. I have completely turned over Session.Py for my own session management which stores in MySQL and has License stuff etc.
> 
> I consider it Beta since I am the only one running it and do not touch all the code.
> 
> This code is free to use by anybody (Be aware it should be GPL or so). At the moment there is no CVS or License simply because I do not have the time to set stuff like that up (never did that before). I just started coding Python with Eclipse and Pydev as preparation on starting CVS use.
> 
> Drop me an email if u r interested I'll help you out using email/MSN Messenger/Skype etc
> 
> Hi Martijn,
> I'm interested in your code, can you please sent to me a copy ?
> thanks,
> luca

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20100301/823dd31a/attachment.html
