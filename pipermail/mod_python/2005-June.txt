From nicolas.lehuen at gmail.com  Wed Jun  1 02:03:46 2005
From: nicolas.lehuen at gmail.com (Nicolas Lehuen)
Date: Wed Jun  1 02:03:51 2005
Subject: [mod_python] Capturing PSP output
In-Reply-To: <1117588789.14917@dscpl.user.openhosting.com>
References: <1117588789.14917@dscpl.user.openhosting.com>
Message-ID: <c298f2d705053123031ec04c53@mail.gmail.com>

Hi Graham,

The problem with this is that if the PSP needs to access some request
variables (like form variables), then it will fail. I think the best
way is still to decorate the request object with a fake write method,
something like this :

# this is pseudo code...
buffer = StringIO()
real_write = req.write
req.write = buffer.write
try:
    # do the PSP trick
finally:
    req.write = real_write

Another method could be to use a delegating request object, something like :

class FakeRequest(object):
    def __init__(self,req):
        self.req = req
        self.buffer = StringIO()

    def write(self,string,flush=1):
        self.buffer.write(string)

    def __getattr__(self,name):
        return getattr(self.req,name)

def index(req):
    fake_req = FakeRequest(req)
    # do the PSP trick using fake_req and additional variables
    req.write(fake_req.buffer.get_value())

Regards,
Nicolas

2005/6/1, Graham Dumpleton <grahamd@dscpl.com.au>:
> Only just got the chance to revisit this. Here is an alternate bit of
> code which avoids having to munge PSP code. This only works for
> where PSP code is stored in a file. It bypasses any caching mechanism
> present in the PSP class, but you could add your own if need be. It
> also replaces the request object entirely with a dummy object purely
> for the purposes of collecting output.
> 
> from mod_python import apache
> from mod_python import _psp
> 
> import os
> import StringIO
> 
> def _psp_to_str(filename,vars={}):
>   directory,file = os.path.split(filename)
> 
>   code = _psp.parse(file,directory+'/')
> 
>   class _MPStringIO(StringIO.StringIO):
>     def write(self,string,flush=1):
>       StringIO.StringIO.write(self,string)
> 
>   vars["req"] = _MPStringIO()
> 
>   exec code in vars
> 
>   return vars["req"].getvalue()
> 
> def handler(req):
>   directory = os.path.dirname(__file__)
>   filename = os.path.join(directory,"_sample.psp")
>   content = _psp_to_str(filename)
> 
>   req.content_type = "text/html"
>   req.send_http_header()
>   req.write(content)
> 
>   return apache.OK
> 
> 
> Graham Dumpleton wrote ..
> >
> > On 31/05/2005, at 2:19 AM, Joshua Ginsberg wrote:
> >
> > > Hello --
> > >
> > > I'm trying to do something a little unorthodox... I didn't know if
> > > anybody had tried it before... Within a PSP page, I want to run
> > > another PSP page and capture the output to a string.
> > >
> > > To do a little testing, I wrote the following PSP page:
> > >
> > > <%
> > >
> > > def sAppend(self, thestring):
> > >     if '__s__' not in dir(self):
> > >         self.__s__ = ''
> > >     self.__s__ += str(thestring)
> > >
> > > oldReqWrite = req.write
> > >
> > > req.write = sAppend
> >
> > This is a bit confusing. Your method accepts a "self" parameter as if
> > it is a
> > method of a class when it isn't. Just because you replace an existing
> > instance
> > method will not turn your one into one.
> >
> > The result is that the string to be output is being passed as self and
> > string
> > doesn't have a "__s__" member.
> >
> > There are other problems with using "__s__" as well but rather than go
> > into it,
> > you should just look at:
> >
> >    http://www.modpython.org/pipermail/mod_python/2005-May/018134.html
> >
> > That code could probably still be cleaned up a bit perhaps as certain
> > things
> > don't need to be done, also not sure why other things are being done
> > either.
> > If I get a chance later I'll see if I can come up with a more
> > streamlined
> > version.
> >
> > BTW, did you want to actually reference the original "req" object for
> > any
> > data. The example referenced obviously doesn't allow this as it
> > completely
> > replaces the "req" object with a StringIO object.
> >
> > Graham
> >
> > _______________________________________________
> > Mod_python mailing list
> > Mod_python@modpython.org
> > http://mailman.modpython.org/mailman/listinfo/mod_python
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>

From grahamd at dscpl.com.au  Wed Jun  1 02:31:38 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Wed Jun  1 02:31:54 2005
Subject: [mod_python] Capturing PSP output
Message-ID: <1117607498.2821@dscpl.user.openhosting.com>

Nicolas Lehuen wrote ..
> The problem with this is that if the PSP needs to access some request
> variables (like form variables), then it will fail.

Agreed, and why I pointed out request object was being replaced
completely with dummy object. ;-)

> I think the best
> way is still to decorate the request object with a fake write method,
> something like this :
> 
> # this is pseudo code...
> buffer = StringIO()
> real_write = req.write
> req.write = buffer.write
> try:
>     # do the PSP trick
> finally:
>     req.write = real_write

This will not work as written as req.write() takes an optional second argument
to indicate whether output should be flushed. The StringIO.write() doesn't
have an equivalent second argument and the generated PSP code explicitly
sets the second argument of the write() call to 0. Thus PSP writing direct to
StringIO.write() will cause a failure. You could do it with an extra level of
indirection though which is what I was doing by deriving from the StringIO
class in the first place to override write(). I think you probably realise that
as later suggestion has extra level of indirection.

> Another method could be to use a delegating request object, something like
> :
> 
> class FakeRequest(object):
>     def __init__(self,req):
>         self.req = req
>         self.buffer = StringIO()
> 
>     def write(self,string,flush=1):
>         self.buffer.write(string)
> 
>     def __getattr__(self,name):
>         return getattr(self.req,name)

In some ways this is nicer, but also has problems in that it cannot entirely
replace the original request object because of type checking within the C
code in mod_python.

For example, if using the fake request object and you wrote something like:

  req.register_cleanup(req,somefunc)

it will fail. This is because req.register_cleanup() is implemented in C code
and explicitly checks to see if the "req" argument matches the the type of
the C implemented <requestobject>. The check will fail and an exception
is raised.

Overall, the way of doing it is probably going to have to be tailored to the
individual circumstances it is being used for. Ie., whether access to the
request object and forms is needed or not etc. Not knowing the exact
circumstances the original poster wanted to use it in, I am sure we could
come up with all sorts of variations and still not come up with one which
would be the best for that case. At least the discussion generated may be
useful to someone. :-)

Graham

> def index(req):
>     fake_req = FakeRequest(req)
>     # do the PSP trick using fake_req and additional variables
>     req.write(fake_req.buffer.get_value())
> 
> Regards,
> Nicolas
> 
> 2005/6/1, Graham Dumpleton <grahamd@dscpl.com.au>:
> > Only just got the chance to revisit this. Here is an alternate bit of
> > code which avoids having to munge PSP code. This only works for
> > where PSP code is stored in a file. It bypasses any caching mechanism
> > present in the PSP class, but you could add your own if need be. It
> > also replaces the request object entirely with a dummy object purely
> > for the purposes of collecting output.
> > 
> > from mod_python import apache
> > from mod_python import _psp
> > 
> > import os
> > import StringIO
> > 
> > def _psp_to_str(filename,vars={}):
> >   directory,file = os.path.split(filename)
> > 
> >   code = _psp.parse(file,directory+'/')
> > 
> >   class _MPStringIO(StringIO.StringIO):
> >     def write(self,string,flush=1):
> >       StringIO.StringIO.write(self,string)
> > 
> >   vars["req"] = _MPStringIO()
> > 
> >   exec code in vars
> > 
> >   return vars["req"].getvalue()
> > 
> > def handler(req):
> >   directory = os.path.dirname(__file__)
> >   filename = os.path.join(directory,"_sample.psp")
> >   content = _psp_to_str(filename)
> > 
> >   req.content_type = "text/html"
> >   req.send_http_header()
> >   req.write(content)
> > 
> >   return apache.OK
> > 
> > 
> > Graham Dumpleton wrote ..
> > >
> > > On 31/05/2005, at 2:19 AM, Joshua Ginsberg wrote:
> > >
> > > > Hello --
> > > >
> > > > I'm trying to do something a little unorthodox... I didn't know if
> > > > anybody had tried it before... Within a PSP page, I want to run
> > > > another PSP page and capture the output to a string.
> > > >
> > > > To do a little testing, I wrote the following PSP page:
> > > >
> > > > <%
> > > >
> > > > def sAppend(self, thestring):
> > > >     if '__s__' not in dir(self):
> > > >         self.__s__ = ''
> > > >     self.__s__ += str(thestring)
> > > >
> > > > oldReqWrite = req.write
> > > >
> > > > req.write = sAppend
> > >
> > > This is a bit confusing. Your method accepts a "self" parameter as
> if
> > > it is a
> > > method of a class when it isn't. Just because you replace an existing
> > > instance
> > > method will not turn your one into one.
> > >
> > > The result is that the string to be output is being passed as self
> and
> > > string
> > > doesn't have a "__s__" member.
> > >
> > > There are other problems with using "__s__" as well but rather than
> go
> > > into it,
> > > you should just look at:
> > >
> > >    http://www.modpython.org/pipermail/mod_python/2005-May/018134.html
> > >
> > > That code could probably still be cleaned up a bit perhaps as certain
> > > things
> > > don't need to be done, also not sure why other things are being done
> > > either.
> > > If I get a chance later I'll see if I can come up with a more
> > > streamlined
> > > version.
> > >
> > > BTW, did you want to actually reference the original "req" object for
> > > any
> > > data. The example referenced obviously doesn't allow this as it
> > > completely
> > > replaces the "req" object with a StringIO object.
> > >
> > > Graham
> > >
> > > _______________________________________________
> > > Mod_python mailing list
> > > Mod_python@modpython.org
> > > http://mailman.modpython.org/mailman/listinfo/mod_python
> > _______________________________________________
> > Mod_python mailing list
> > Mod_python@modpython.org
> > http://mailman.modpython.org/mailman/listinfo/mod_python
> >
From grahamd at dscpl.com.au  Wed Jun  1 02:50:53 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Wed Jun  1 02:51:01 2005
Subject: [mod_python] Capturing PSP output
Message-ID: <1117608653.15086@dscpl.user.openhosting.com>

Graham Dumpleton wrote ..
> > Another method could be to use a delegating request object, something
> like
> > :
> > 
> > class FakeRequest(object):
> >     def __init__(self,req):
> >         self.req = req
> >         self.buffer = StringIO()
> > 
> >     def write(self,string,flush=1):
> >         self.buffer.write(string)
> > 
> >     def __getattr__(self,name):
> >         return getattr(self.req,name)
> 
> In some ways this is nicer, but also has problems in that it cannot entirely
> replace the original request object because of type checking within the
> C
> code in mod_python.
> 
> For example, if using the fake request object and you wrote something like:
> 
>   req.register_cleanup(req,somefunc)
> 
> it will fail. This is because req.register_cleanup() is implemented in
> C code
> and explicitly checks to see if the "req" argument matches the the type
> of
> the C implemented <requestobject>. The check will fail and an exception
> is raised.

Whoops, wrong method. I mean't:

  req.server.register_cleanup(req,somefunc)

The req.register_cleanup() method doesn't take a request object as first
argument, but cleanup handlers for whole server registered by using
req.server.register_cleanup() do.

:-(

Graham
From nicolas.lehuen at gmail.com  Wed Jun  1 04:03:49 2005
From: nicolas.lehuen at gmail.com (Nicolas Lehuen)
Date: Wed Jun  1 04:04:00 2005
Subject: [mod_python] Capturing PSP output
In-Reply-To: <1117608653.15086@dscpl.user.openhosting.com>
References: <1117608653.15086@dscpl.user.openhosting.com>
Message-ID: <c298f2d70506010103304826ff@mail.gmail.com>

What about modifying the PSP generator code so that it takes a new
optional "write" parameter, which is a callable object that will be
used to write the result ? If write is not defined, then the code will
use req.write.

Regards,

Nicolas

2005/6/1, Graham Dumpleton <grahamd@dscpl.com.au>:
> Graham Dumpleton wrote ..
> > > Another method could be to use a delegating request object, something
> > like
> > > :
> > >
> > > class FakeRequest(object):
> > >     def __init__(self,req):
> > >         self.req = req
> > >         self.buffer = StringIO()
> > >
> > >     def write(self,string,flush=1):
> > >         self.buffer.write(string)
> > >
> > >     def __getattr__(self,name):
> > >         return getattr(self.req,name)
> >
> > In some ways this is nicer, but also has problems in that it cannot entirely
> > replace the original request object because of type checking within the
> > C
> > code in mod_python.
> >
> > For example, if using the fake request object and you wrote something like:
> >
> >   req.register_cleanup(req,somefunc)
> >
> > it will fail. This is because req.register_cleanup() is implemented in
> > C code
> > and explicitly checks to see if the "req" argument matches the the type
> > of
> > the C implemented <requestobject>. The check will fail and an exception
> > is raised.
> 
> Whoops, wrong method. I mean't:
> 
>   req.server.register_cleanup(req,somefunc)
> 
> The req.register_cleanup() method doesn't take a request object as first
> argument, but cleanup handlers for whole server registered by using
> req.server.register_cleanup() do.
> 
> :-(
> 
> Graham
>

From asif.jan at epfl.ch  Wed Jun  1 09:17:55 2005
From: asif.jan at epfl.ch (Asif Jan)
Date: Wed Jun  1 09:18:02 2005
Subject: [mod_python] PSP and Session Probelms
In-Reply-To: <c298f2d70506010103304826ff@mail.gmail.com>
References: <1117608653.15086@dscpl.user.openhosting.com>
	<c298f2d70506010103304826ff@mail.gmail.com>
Message-ID: <40f69241c99d72648cbbb2859fa1982a@epfl.ch>


Hi ,

When I try to use "session" object inside a PSP page I get following  
error  ( I am using Mac OS X 10.3.9 , Python 2.3 (Apple), and  
mod_python 3.1.4).

Is it something specific to Mac OS X ?

By the way in my psp page I am doing a very simple thing i.e.

if not session.is_new():
	#  do something
else:
	# do something else


Mod_python error: "PythonHandler mod_python.psp"

Traceback (most recent call last):

   File  
"/System/Library/Frameworks/Python.framework/Versions/2.3/lib/ 
python2.3/site-packages/mod_python/apache.py", line 299, in  
HandlerDispatch
     result = object(req)

   File  
"/System/Library/Frameworks/Python.framework/Versions/2.3/lib/ 
python2.3/site-packages/mod_python/psp.py", line 297, in handler
     p.run()

   File  
"/System/Library/Frameworks/Python.framework/Versions/2.3/lib/ 
python2.3/site-packages/mod_python/psp.py", line 191, in run
     session = Session.Session(req)

   File  
"/System/Library/Frameworks/Python.framework/Versions/2.3/lib/ 
python2.3/site-packages/mod_python/Session.py", line 389, in Session
     timeout=timeout, lock=lock)

   File  
"/System/Library/Frameworks/Python.framework/Versions/2.3/lib/ 
python2.3/site-packages/mod_python/Session.py", line 294, in __init__
     timeout=timeout, lock=lock)

   File  
"/System/Library/Frameworks/Python.framework/Versions/2.3/lib/ 
python2.3/site-packages/mod_python/Session.py", line 131, in __init__
     self.lock()                 # lock new sid

   File  
"/System/Library/Frameworks/Python.framework/Versions/2.3/lib/ 
python2.3/site-packages/mod_python/Session.py", line 215, in lock
     _apache._global_lock(self._req.server, self._sid)

ValueError: Failed to acquire global mutex lock

From asif.jan at epfl.ch  Wed Jun  1 09:51:54 2005
From: asif.jan at epfl.ch (Asif Jan)
Date: Wed Jun  1 09:52:01 2005
Subject: [mod_python] PSP and Session Probelms
In-Reply-To: <40f69241c99d72648cbbb2859fa1982a@epfl.ch>
References: <1117608653.15086@dscpl.user.openhosting.com>
	<c298f2d70506010103304826ff@mail.gmail.com>
	<40f69241c99d72648cbbb2859fa1982a@epfl.ch>
Message-ID: <9c1045298fbd25845422d36d6ca147e1@epfl.ch>

By the way I get same error when using the python scripts as well

Mod_python error: "PythonHandler mod_python.publisher"

Traceback (most recent call last):

   File  
"/System/Library/Frameworks/Python.framework/Versions/2.3/lib/ 
python2.3/site-packages/mod_python/apache.py", line 299, in  
HandlerDispatch
     result = object(req)

   File  
"/System/Library/Frameworks/Python.framework/Versions/2.3/lib/ 
python2.3/site-packages/mod_python/publisher.py", line 136, in handler
     result = util.apply_fs_data(object, req.form, req=req)

   File  
"/System/Library/Frameworks/Python.framework/Versions/2.3/lib/ 
python2.3/site-packages/mod_python/util.py", line 361, in apply_fs_data
     return object(**args)

   File "/Library/Apache2/htdocs/NEOBASE/mptest.py", line 5, in test
     sess = Session.Session(req)

   File  
"/System/Library/Frameworks/Python.framework/Versions/2.3/lib/ 
python2.3/site-packages/mod_python/Session.py", line 389, in Session
     timeout=timeout, lock=lock)

   File  
"/System/Library/Frameworks/Python.framework/Versions/2.3/lib/ 
python2.3/site-packages/mod_python/Session.py", line 294, in __init__
     timeout=timeout, lock=lock)

   File  
"/System/Library/Frameworks/Python.framework/Versions/2.3/lib/ 
python2.3/site-packages/mod_python/Session.py", line 131, in __init__
     self.lock()                 # lock new sid

   File  
"/System/Library/Frameworks/Python.framework/Versions/2.3/lib/ 
python2.3/site-packages/mod_python/Session.py", line 215, in lock
     _apache._global_lock(self._req.server, self._sid)

ValueError: Failed to acquire global mutex lock
On Jun 1, 2005, at 3:17 PM, Asif Jan wrote:

>
> Hi ,
>
> When I try to use "session" object inside a PSP page I get following  
> error  ( I am using Mac OS X 10.3.9 , Python 2.3 (Apple), and  
> mod_python 3.1.4).
>
> Is it something specific to Mac OS X ?
>
> By the way in my psp page I am doing a very simple thing i.e.
>
> if not session.is_new():
> 	#  do something
> else:
> 	# do something else
>
>
> Mod_python error: "PythonHandler mod_python.psp"
>
> Traceback (most recent call last):
>
>   File  
> "/System/Library/Frameworks/Python.framework/Versions/2.3/lib/ 
> python2.3/site-packages/mod_python/apache.py", line 299, in  
> HandlerDispatch
>     result = object(req)
>
>   File  
> "/System/Library/Frameworks/Python.framework/Versions/2.3/lib/ 
> python2.3/site-packages/mod_python/psp.py", line 297, in handler
>     p.run()
>
>   File  
> "/System/Library/Frameworks/Python.framework/Versions/2.3/lib/ 
> python2.3/site-packages/mod_python/psp.py", line 191, in run
>     session = Session.Session(req)
>
>   File  
> "/System/Library/Frameworks/Python.framework/Versions/2.3/lib/ 
> python2.3/site-packages/mod_python/Session.py", line 389, in Session
>     timeout=timeout, lock=lock)
>
>   File  
> "/System/Library/Frameworks/Python.framework/Versions/2.3/lib/ 
> python2.3/site-packages/mod_python/Session.py", line 294, in __init__
>     timeout=timeout, lock=lock)
>
>   File  
> "/System/Library/Frameworks/Python.framework/Versions/2.3/lib/ 
> python2.3/site-packages/mod_python/Session.py", line 131, in __init__
>     self.lock()                 # lock new sid
>
>   File  
> "/System/Library/Frameworks/Python.framework/Versions/2.3/lib/ 
> python2.3/site-packages/mod_python/Session.py", line 215, in lock
>     _apache._global_lock(self._req.server, self._sid)
>
> ValueError: Failed to acquire global mutex lock
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>
>
Asif Jan
Research Assistant
Brain Mind Institute
Ecole Polytechnique Federale De Lausanne (EPFL)
Lausanne Switzerland

Tel +41216939529

From jg.lists at sympatico.ca  Wed Jun  1 11:02:27 2005
From: jg.lists at sympatico.ca (Jim Gallacher)
Date: Wed Jun  1 10:59:29 2005
Subject: [mod_python] PSP and Session Probelms
In-Reply-To: <9c1045298fbd25845422d36d6ca147e1@epfl.ch>
References: <1117608653.15086@dscpl.user.openhosting.com>	<c298f2d70506010103304826ff@mail.gmail.com>	<40f69241c99d72648cbbb2859fa1982a@epfl.ch>
	<9c1045298fbd25845422d36d6ca147e1@epfl.ch>
Message-ID: <429DCE03.6090802@sympatico.ca>

Try restarting apache and run the following test handler:

import _apache

def handler(req):
     req.content_type = 'text/plain'
     req.write('begin lock test\n')
     _apache._global_lock(req.server, None, 0)
     _apache._global_unlock(req.server, None, 0)
     req.write('begin lock test\n')
     return apache.OK

Check the apache error.log and post any errors (including apache 
startup) regarding mutexes or locks.

Regards,
Jim


Asif Jan wrote:
> By the way I get same error when using the python scripts as well
> 
> Mod_python error: "PythonHandler mod_python.publisher"
> 
> Traceback (most recent call last):
> 
>   File  "/System/Library/Frameworks/Python.framework/Versions/2.3/lib/ 
> python2.3/site-packages/mod_python/apache.py", line 299, in  
> HandlerDispatch
>     result = object(req)
> 
>   File  "/System/Library/Frameworks/Python.framework/Versions/2.3/lib/ 
> python2.3/site-packages/mod_python/publisher.py", line 136, in handler
>     result = util.apply_fs_data(object, req.form, req=req)
> 
>   File  "/System/Library/Frameworks/Python.framework/Versions/2.3/lib/ 
> python2.3/site-packages/mod_python/util.py", line 361, in apply_fs_data
>     return object(**args)
> 
>   File "/Library/Apache2/htdocs/NEOBASE/mptest.py", line 5, in test
>     sess = Session.Session(req)
> 
>   File  "/System/Library/Frameworks/Python.framework/Versions/2.3/lib/ 
> python2.3/site-packages/mod_python/Session.py", line 389, in Session
>     timeout=timeout, lock=lock)
> 
>   File  "/System/Library/Frameworks/Python.framework/Versions/2.3/lib/ 
> python2.3/site-packages/mod_python/Session.py", line 294, in __init__
>     timeout=timeout, lock=lock)
> 
>   File  "/System/Library/Frameworks/Python.framework/Versions/2.3/lib/ 
> python2.3/site-packages/mod_python/Session.py", line 131, in __init__
>     self.lock()                 # lock new sid
> 
>   File  "/System/Library/Frameworks/Python.framework/Versions/2.3/lib/ 
> python2.3/site-packages/mod_python/Session.py", line 215, in lock
>     _apache._global_lock(self._req.server, self._sid)
> 
> ValueError: Failed to acquire global mutex lock
> On Jun 1, 2005, at 3:17 PM, Asif Jan wrote:
> 
>>
>> Hi ,
>>
>> When I try to use "session" object inside a PSP page I get following  
>> error  ( I am using Mac OS X 10.3.9 , Python 2.3 (Apple), and  
>> mod_python 3.1.4).
>>
>> Is it something specific to Mac OS X ?
>>
>> By the way in my psp page I am doing a very simple thing i.e.
>>
>> if not session.is_new():
>>     #  do something
>> else:
>>     # do something else
>>
>>
>> Mod_python error: "PythonHandler mod_python.psp"
>>
>> Traceback (most recent call last):
>>
>>   File  "/System/Library/Frameworks/Python.framework/Versions/2.3/lib/ 
>> python2.3/site-packages/mod_python/apache.py", line 299, in  
>> HandlerDispatch
>>     result = object(req)
>>
>>   File  "/System/Library/Frameworks/Python.framework/Versions/2.3/lib/ 
>> python2.3/site-packages/mod_python/psp.py", line 297, in handler
>>     p.run()
>>
>>   File  "/System/Library/Frameworks/Python.framework/Versions/2.3/lib/ 
>> python2.3/site-packages/mod_python/psp.py", line 191, in run
>>     session = Session.Session(req)
>>
>>   File  "/System/Library/Frameworks/Python.framework/Versions/2.3/lib/ 
>> python2.3/site-packages/mod_python/Session.py", line 389, in Session
>>     timeout=timeout, lock=lock)
>>
>>   File  "/System/Library/Frameworks/Python.framework/Versions/2.3/lib/ 
>> python2.3/site-packages/mod_python/Session.py", line 294, in __init__
>>     timeout=timeout, lock=lock)
>>
>>   File  "/System/Library/Frameworks/Python.framework/Versions/2.3/lib/ 
>> python2.3/site-packages/mod_python/Session.py", line 131, in __init__
>>     self.lock()                 # lock new sid
>>
>>   File  "/System/Library/Frameworks/Python.framework/Versions/2.3/lib/ 
>> python2.3/site-packages/mod_python/Session.py", line 215, in lock
>>     _apache._global_lock(self._req.server, self._sid)
>>
>> ValueError: Failed to acquire global mutex lock
>>
>> _______________________________________________
>> Mod_python mailing list
>> Mod_python@modpython.org
>> http://mailman.modpython.org/mailman/listinfo/mod_python
>>
>>
> Asif Jan
> Research Assistant
> Brain Mind Institute
> Ecole Polytechnique Federale De Lausanne (EPFL)
> Lausanne Switzerland
> 
> Tel +41216939529
> 
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
> 

From asif.jan at epfl.ch  Wed Jun  1 11:27:08 2005
From: asif.jan at epfl.ch (Asif Jan)
Date: Wed Jun  1 11:27:15 2005
Subject: [mod_python] PSP and Session Probelms
In-Reply-To: <429DCE03.6090802@sympatico.ca>
References: <1117608653.15086@dscpl.user.openhosting.com>
	<c298f2d70506010103304826ff@mail.gmail.com>
	<40f69241c99d72648cbbb2859fa1982a@epfl.ch>
	<9c1045298fbd25845422d36d6ca147e1@epfl.ch>
	<429DCE03.6090802@sympatico.ca>
Message-ID: <a8815b8ea27764fa7aa4cbcfed87c5a2@epfl.ch>

Hi Jim,
Here is the output from the log file   ( I saved the code in mptest  
file)


[Wed Jun 01 17:23:15 2005] [notice] mod_python: (Re)importing module  
'mptest'
[Wed Jun 01 17:23:15 2005] [warn] (13)Permission denied: Failed to  
acquire global mutex lock at index 0
[Wed Jun 01 17:23:15 2005] [error] [client 127.0.0.1] PythonHandler  
mptest: Traceback (most recent call last):, referer:  
http://localhost/MODPYTHON/
[Wed Jun 01 17:23:15 2005] [error] [client 127.0.0.1] PythonHandler  
mptest:   File  
"/System/Library/Frameworks/Python.framework/Versions/2.3/lib/ 
python2.3/site-packages/mod_python/apache.py", line 299, in  
HandlerDispatch\n    result = object(req), referer:  
http://localhost/MODPYTHON/
[Wed Jun 01 17:23:15 2005] [error] [client 127.0.0.1] PythonHandler  
mptest:   File "/Library/Apache2/htdocs/MODPYTHON/mptest.py", line 5,  
in handler\n    _apache._global_lock(req.server, None, 0), referer:  
http://localhost/MODPYTHON/
[Wed Jun 01 17:23:15 2005] [error] [client 127.0.0.1] PythonHandler  
mptest: ValueError: Failed to acquire global mutex lock, referer:  
http://localhost/MODPYTHON/


Regards
Asif
On Jun 1, 2005, at 5:02 PM, Jim Gallacher wrote:

> Try restarting apache and run the following test handler:
>
> import _apache
>
> def handler(req):
>     req.content_type = 'text/plain'
>     req.write('begin lock test\n')
>     _apache._global_lock(req.server, None, 0)
>     _apache._global_unlock(req.server, None, 0)
>     req.write('begin lock test\n')
>     return apache.OK
>
> Check the apache error.log and post any errors (including apache  
> startup) regarding mutexes or locks.
>
> Regards,
> Jim
>
>
> Asif Jan wrote:
>> By the way I get same error when using the python scripts as well
>> Mod_python error: "PythonHandler mod_python.publisher"
>> Traceback (most recent call last):
>>   File   
>> "/System/Library/Frameworks/Python.framework/Versions/2.3/lib/  
>> python2.3/site-packages/mod_python/apache.py", line 299, in   
>> HandlerDispatch
>>     result = object(req)
>>   File   
>> "/System/Library/Frameworks/Python.framework/Versions/2.3/lib/  
>> python2.3/site-packages/mod_python/publisher.py", line 136, in  
>> handler
>>     result = util.apply_fs_data(object, req.form, req=req)
>>   File   
>> "/System/Library/Frameworks/Python.framework/Versions/2.3/lib/  
>> python2.3/site-packages/mod_python/util.py", line 361, in  
>> apply_fs_data
>>     return object(**args)
>>   File "/Library/Apache2/htdocs/NEOBASE/mptest.py", line 5, in test
>>     sess = Session.Session(req)
>>   File   
>> "/System/Library/Frameworks/Python.framework/Versions/2.3/lib/  
>> python2.3/site-packages/mod_python/Session.py", line 389, in Session
>>     timeout=timeout, lock=lock)
>>   File   
>> "/System/Library/Frameworks/Python.framework/Versions/2.3/lib/  
>> python2.3/site-packages/mod_python/Session.py", line 294, in __init__
>>     timeout=timeout, lock=lock)
>>   File   
>> "/System/Library/Frameworks/Python.framework/Versions/2.3/lib/  
>> python2.3/site-packages/mod_python/Session.py", line 131, in __init__
>>     self.lock()                 # lock new sid
>>   File   
>> "/System/Library/Frameworks/Python.framework/Versions/2.3/lib/  
>> python2.3/site-packages/mod_python/Session.py", line 215, in lock
>>     _apache._global_lock(self._req.server, self._sid)
>> ValueError: Failed to acquire global mutex lock
>> On Jun 1, 2005, at 3:17 PM, Asif Jan wrote:
>>>
>>> Hi ,
>>>
>>> When I try to use "session" object inside a PSP page I get following  
>>>  error  ( I am using Mac OS X 10.3.9 , Python 2.3 (Apple), and   
>>> mod_python 3.1.4).
>>>
>>> Is it something specific to Mac OS X ?
>>>
>>> By the way in my psp page I am doing a very simple thing i.e.
>>>
>>> if not session.is_new():
>>>     #  do something
>>> else:
>>>     # do something else
>>>
>>>
>>> Mod_python error: "PythonHandler mod_python.psp"
>>>
>>> Traceback (most recent call last):
>>>
>>>   File   
>>> "/System/Library/Frameworks/Python.framework/Versions/2.3/lib/  
>>> python2.3/site-packages/mod_python/apache.py", line 299, in   
>>> HandlerDispatch
>>>     result = object(req)
>>>
>>>   File   
>>> "/System/Library/Frameworks/Python.framework/Versions/2.3/lib/  
>>> python2.3/site-packages/mod_python/psp.py", line 297, in handler
>>>     p.run()
>>>
>>>   File   
>>> "/System/Library/Frameworks/Python.framework/Versions/2.3/lib/  
>>> python2.3/site-packages/mod_python/psp.py", line 191, in run
>>>     session = Session.Session(req)
>>>
>>>   File   
>>> "/System/Library/Frameworks/Python.framework/Versions/2.3/lib/  
>>> python2.3/site-packages/mod_python/Session.py", line 389, in Session
>>>     timeout=timeout, lock=lock)
>>>
>>>   File   
>>> "/System/Library/Frameworks/Python.framework/Versions/2.3/lib/  
>>> python2.3/site-packages/mod_python/Session.py", line 294, in  
>>> __init__
>>>     timeout=timeout, lock=lock)
>>>
>>>   File   
>>> "/System/Library/Frameworks/Python.framework/Versions/2.3/lib/  
>>> python2.3/site-packages/mod_python/Session.py", line 131, in  
>>> __init__
>>>     self.lock()                 # lock new sid
>>>
>>>   File   
>>> "/System/Library/Frameworks/Python.framework/Versions/2.3/lib/  
>>> python2.3/site-packages/mod_python/Session.py", line 215, in lock
>>>     _apache._global_lock(self._req.server, self._sid)
>>>
>>> ValueError: Failed to acquire global mutex lock
>>>
>>> _______________________________________________
>>> Mod_python mailing list
>>> Mod_python@modpython.org
>>> http://mailman.modpython.org/mailman/listinfo/mod_python
>>>
>>>
>> Asif Jan
>> Research Assistant
>> Brain Mind Institute
>> Ecole Polytechnique Federale De Lausanne (EPFL)
>> Lausanne Switzerland
>> Tel +41216939529
>> _______________________________________________
>> Mod_python mailing list
>> Mod_python@modpython.org
>> http://mailman.modpython.org/mailman/listinfo/mod_python
>
>
Asif Jan
Research Assistant
Brain Mind Institute
Ecole Polytechnique Federale De Lausanne (EPFL)
Lausanne Switzerland

Tel +41216939529

From jg.lists at sympatico.ca  Wed Jun  1 11:39:45 2005
From: jg.lists at sympatico.ca (Jim Gallacher)
Date: Wed Jun  1 11:36:36 2005
Subject: [mod_python] PSP and Session Probelms
In-Reply-To: <a8815b8ea27764fa7aa4cbcfed87c5a2@epfl.ch>
References: <1117608653.15086@dscpl.user.openhosting.com>	<c298f2d70506010103304826ff@mail.gmail.com>	<40f69241c99d72648cbbb2859fa1982a@epfl.ch>	<9c1045298fbd25845422d36d6ca147e1@epfl.ch>	<429DCE03.6090802@sympatico.ca>
	<a8815b8ea27764fa7aa4cbcfed87c5a2@epfl.ch>
Message-ID: <429DD6C1.3030207@sympatico.ca>

Hi Asif,

Is there any indication in the apache error.log that the mutexes where 
created on apache startup? You should see something like:

[Wed Jun 01 15:38:39 2005] [notice] mod_python: Creating 32 session 
mutexes based on 6 max processes and 25 max threads.
[Wed Jun 01 15:38:39 2005] [notice] Apache/2.0.54 (Debian GNU/Linux) 
mod_python/3.2.0-dev-20050519 Python/2.3.5 configured -- resuming normal 
operations

Jim


Asif Jan wrote:
> Hi Jim,
> Here is the output from the log file   ( I saved the code in mptest  file)
> 
> 
> [Wed Jun 01 17:23:15 2005] [notice] mod_python: (Re)importing module  
> 'mptest'
> [Wed Jun 01 17:23:15 2005] [warn] (13)Permission denied: Failed to  
> acquire global mutex lock at index 0
> [Wed Jun 01 17:23:15 2005] [error] [client 127.0.0.1] PythonHandler  
> mptest: Traceback (most recent call last):, referer:  
> http://localhost/MODPYTHON/
> [Wed Jun 01 17:23:15 2005] [error] [client 127.0.0.1] PythonHandler  
> mptest:   File  
> "/System/Library/Frameworks/Python.framework/Versions/2.3/lib/ 
> python2.3/site-packages/mod_python/apache.py", line 299, in  
> HandlerDispatch\n    result = object(req), referer:  
> http://localhost/MODPYTHON/
> [Wed Jun 01 17:23:15 2005] [error] [client 127.0.0.1] PythonHandler  
> mptest:   File "/Library/Apache2/htdocs/MODPYTHON/mptest.py", line 5,  
> in handler\n    _apache._global_lock(req.server, None, 0), referer:  
> http://localhost/MODPYTHON/
> [Wed Jun 01 17:23:15 2005] [error] [client 127.0.0.1] PythonHandler  
> mptest: ValueError: Failed to acquire global mutex lock, referer:  
> http://localhost/MODPYTHON/
> 
> 
> Regards
> Asif
> On Jun 1, 2005, at 5:02 PM, Jim Gallacher wrote:
> 
>> Try restarting apache and run the following test handler:
>>
>> import _apache
>>
>> def handler(req):
>>     req.content_type = 'text/plain'
>>     req.write('begin lock test\n')
>>     _apache._global_lock(req.server, None, 0)
>>     _apache._global_unlock(req.server, None, 0)
>>     req.write('begin lock test\n')
>>     return apache.OK
>>
>> Check the apache error.log and post any errors (including apache  
>> startup) regarding mutexes or locks.
>>
>> Regards,
>> Jim
>>
>>
>> Asif Jan wrote:
>>
>>> By the way I get same error when using the python scripts as well
>>> Mod_python error: "PythonHandler mod_python.publisher"
>>> Traceback (most recent call last):
>>>   File   
>>> "/System/Library/Frameworks/Python.framework/Versions/2.3/lib/  
>>> python2.3/site-packages/mod_python/apache.py", line 299, in   
>>> HandlerDispatch
>>>     result = object(req)
>>>   File   
>>> "/System/Library/Frameworks/Python.framework/Versions/2.3/lib/  
>>> python2.3/site-packages/mod_python/publisher.py", line 136, in  handler
>>>     result = util.apply_fs_data(object, req.form, req=req)
>>>   File   
>>> "/System/Library/Frameworks/Python.framework/Versions/2.3/lib/  
>>> python2.3/site-packages/mod_python/util.py", line 361, in  apply_fs_data
>>>     return object(**args)
>>>   File "/Library/Apache2/htdocs/NEOBASE/mptest.py", line 5, in test
>>>     sess = Session.Session(req)
>>>   File   
>>> "/System/Library/Frameworks/Python.framework/Versions/2.3/lib/  
>>> python2.3/site-packages/mod_python/Session.py", line 389, in Session
>>>     timeout=timeout, lock=lock)
>>>   File   
>>> "/System/Library/Frameworks/Python.framework/Versions/2.3/lib/  
>>> python2.3/site-packages/mod_python/Session.py", line 294, in __init__
>>>     timeout=timeout, lock=lock)
>>>   File   
>>> "/System/Library/Frameworks/Python.framework/Versions/2.3/lib/  
>>> python2.3/site-packages/mod_python/Session.py", line 131, in __init__
>>>     self.lock()                 # lock new sid
>>>   File   
>>> "/System/Library/Frameworks/Python.framework/Versions/2.3/lib/  
>>> python2.3/site-packages/mod_python/Session.py", line 215, in lock
>>>     _apache._global_lock(self._req.server, self._sid)
>>> ValueError: Failed to acquire global mutex lock
>>> On Jun 1, 2005, at 3:17 PM, Asif Jan wrote:
>>>
>>>>
>>>> Hi ,
>>>>
>>>> When I try to use "session" object inside a PSP page I get 
>>>> following   error  ( I am using Mac OS X 10.3.9 , Python 2.3 
>>>> (Apple), and   mod_python 3.1.4).
>>>>
>>>> Is it something specific to Mac OS X ?
>>>>
>>>> By the way in my psp page I am doing a very simple thing i.e.
>>>>
>>>> if not session.is_new():
>>>>     #  do something
>>>> else:
>>>>     # do something else
>>>>
>>>>
>>>> Mod_python error: "PythonHandler mod_python.psp"
>>>>
>>>> Traceback (most recent call last):
>>>>
>>>>   File   
>>>> "/System/Library/Frameworks/Python.framework/Versions/2.3/lib/  
>>>> python2.3/site-packages/mod_python/apache.py", line 299, in   
>>>> HandlerDispatch
>>>>     result = object(req)
>>>>
>>>>   File   
>>>> "/System/Library/Frameworks/Python.framework/Versions/2.3/lib/  
>>>> python2.3/site-packages/mod_python/psp.py", line 297, in handler
>>>>     p.run()
>>>>
>>>>   File   
>>>> "/System/Library/Frameworks/Python.framework/Versions/2.3/lib/  
>>>> python2.3/site-packages/mod_python/psp.py", line 191, in run
>>>>     session = Session.Session(req)
>>>>
>>>>   File   
>>>> "/System/Library/Frameworks/Python.framework/Versions/2.3/lib/  
>>>> python2.3/site-packages/mod_python/Session.py", line 389, in Session
>>>>     timeout=timeout, lock=lock)
>>>>
>>>>   File   
>>>> "/System/Library/Frameworks/Python.framework/Versions/2.3/lib/  
>>>> python2.3/site-packages/mod_python/Session.py", line 294, in  __init__
>>>>     timeout=timeout, lock=lock)
>>>>
>>>>   File   
>>>> "/System/Library/Frameworks/Python.framework/Versions/2.3/lib/  
>>>> python2.3/site-packages/mod_python/Session.py", line 131, in  __init__
>>>>     self.lock()                 # lock new sid
>>>>
>>>>   File   
>>>> "/System/Library/Frameworks/Python.framework/Versions/2.3/lib/  
>>>> python2.3/site-packages/mod_python/Session.py", line 215, in lock
>>>>     _apache._global_lock(self._req.server, self._sid)
>>>>
>>>> ValueError: Failed to acquire global mutex lock
>>>>
>>>> _______________________________________________
>>>> Mod_python mailing list
>>>> Mod_python@modpython.org
>>>> http://mailman.modpython.org/mailman/listinfo/mod_python
>>>>
>>>>
>>> Asif Jan
>>> Research Assistant
>>> Brain Mind Institute
>>> Ecole Polytechnique Federale De Lausanne (EPFL)
>>> Lausanne Switzerland
>>> Tel +41216939529
>>> _______________________________________________
>>> Mod_python mailing list
>>> Mod_python@modpython.org
>>> http://mailman.modpython.org/mailman/listinfo/mod_python
>>
>>
>>
> Asif Jan
> Research Assistant
> Brain Mind Institute
> Ecole Polytechnique Federale De Lausanne (EPFL)
> Lausanne Switzerland
> 
> Tel +41216939529
> 
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
> 

From asif.jan at epfl.ch  Wed Jun  1 12:16:12 2005
From: asif.jan at epfl.ch (Asif Jan)
Date: Wed Jun  1 12:16:18 2005
Subject: [mod_python] PSP and Session Probelms
In-Reply-To: <429DD6C1.3030207@sympatico.ca>
References: <1117608653.15086@dscpl.user.openhosting.com>
	<c298f2d70506010103304826ff@mail.gmail.com>
	<40f69241c99d72648cbbb2859fa1982a@epfl.ch>
	<9c1045298fbd25845422d36d6ca147e1@epfl.ch>
	<429DCE03.6090802@sympatico.ca>
	<a8815b8ea27764fa7aa4cbcfed87c5a2@epfl.ch>
	<429DD6C1.3030207@sympatico.ca>
Message-ID: <b19930a1dfe34692edf62b25df51c47f@epfl.ch>

Hi Jim

Here is the information;

[Wed Jun 01 18:12:39 2005] [notice] mod_python: Creating 32 session  
mutexes based on 150 max processes and 0 max threads.
[Wed Jun 01 18:12:40 2005] [notice] LDAP: Built with OpenLDAP LDAP SDK
[Wed Jun 01 18:12:40 2005] [notice] LDAP: SSL support unavailable
[Wed Jun 01 18:12:40 2005] [notice] Digest: generating secret for  
digest authentication ...
[Wed Jun 01 18:12:40 2005] [notice] Digest: done
[Wed Jun 01 18:12:40 2005] [debug] util_ldap.c(1432): INIT global mutex  
/var/tmp/tmp.0.UjOapM in child 5476
[Wed Jun 01 18:12:40 2005] [debug] util_ldap.c(1432): INIT global mutex  
/var/tmp/tmp.0.UjOapM in child 5477
[Wed Jun 01 18:12:40 2005] [debug] util_ldap.c(1432): INIT global mutex  
/var/tmp/tmp.0.UjOapM in child 5478
[Wed Jun 01 18:12:40 2005] [debug] util_ldap.c(1432): INIT global mutex  
/var/tmp/tmp.0.UjOapM in child 5479
[Wed Jun 01 18:12:40 2005] [debug] util_ldap.c(1432): INIT global mutex  
/var/tmp/tmp.0.UjOapM in child 5480
[Wed Jun 01 18:12:40 2005] [notice] Apache/2.0.52 (Unix)  
mod_python/3.1.4 Python/2.3 DAV/2 configured -- resuming normal  
operations
[Wed Jun 01 18:12:40 2005] [info] Server built: Sep 30 2004 18:20:43
[Wed Jun 01 18:12:40 2005] [debug] prefork.c(955): AcceptMutex: sysvsem  
(default: sysvsem)




Wed Jun 01 18:13:44 2005] [notice] mod_python: (Re)importing module  
'mptest'
[Wed Jun 01 18:13:44 2005] [warn] (13)Permission denied: Failed to  
acquire global mutex lock at index 0
[Wed Jun 01 18:13:44 2005] [error] [client 127.0.0.1] PythonHandler  
mptest: Traceback (most recent call last):, referer:  
http://localhost/MODPYTHON/
[Wed Jun 01 18:13:44 2005] [error] [client 127.0.0.1] PythonHandler  
mptest:   File  
"/System/Library/Frameworks/Python.framework/Versions/2.3/lib/ 
python2.3/site-packages/mod_python/apache.py", line 299, in  
HandlerDispatch\n    result = object(req), referer:  
http://localhost/MODPYTHON/
[Wed Jun 01 18:13:44 2005] [error] [client 127.0.0.1] PythonHandler  
mptest:   File "/Library/Apache2/htdocs/MODPYTHON/mptest.py", line 5,  
in handler\n    _apache._global_lock(req.server, None, 0), referer:  
http://localhost/MODPYTHON/
[Wed Jun 01 18:13:44 2005] [error] [client 127.0.0.1] PythonHandler  
mptest: ValueError: Failed to acquire global mutex lock, referer:  
http://localhost/MODPYTHON/



Regards
Asif

On Jun 1, 2005, at 5:39 PM, Jim Gallacher wrote:

> Hi Asif,
>
> Is there any indication in the apache error.log that the mutexes where  
> created on apache startup? You should see something like:
>
> [Wed Jun 01 15:38:39 2005] [notice] mod_python: Creating 32 session  
> mutexes based on 6 max processes and 25 max threads.
> [Wed Jun 01 15:38:39 2005] [notice] Apache/2.0.54 (Debian GNU/Linux)  
> mod_python/3.2.0-dev-20050519 Python/2.3.5 configured -- resuming  
> normal operations
>
> Jim
>
>
> Asif Jan wrote:
>> Hi Jim,
>> Here is the output from the log file   ( I saved the code in mptest   
>> file)
>> [Wed Jun 01 17:23:15 2005] [notice] mod_python: (Re)importing module   
>> 'mptest'
>> [Wed Jun 01 17:23:15 2005] [warn] (13)Permission denied: Failed to   
>> acquire global mutex lock at index 0
>> [Wed Jun 01 17:23:15 2005] [error] [client 127.0.0.1] PythonHandler   
>> mptest: Traceback (most recent call last):, referer:   
>> http://localhost/MODPYTHON/
>> [Wed Jun 01 17:23:15 2005] [error] [client 127.0.0.1] PythonHandler   
>> mptest:   File   
>> "/System/Library/Frameworks/Python.framework/Versions/2.3/lib/  
>> python2.3/site-packages/mod_python/apache.py", line 299, in   
>> HandlerDispatch\n    result = object(req), referer:   
>> http://localhost/MODPYTHON/
>> [Wed Jun 01 17:23:15 2005] [error] [client 127.0.0.1] PythonHandler   
>> mptest:   File "/Library/Apache2/htdocs/MODPYTHON/mptest.py", line 5,  
>>  in handler\n    _apache._global_lock(req.server, None, 0), referer:   
>> http://localhost/MODPYTHON/
>> [Wed Jun 01 17:23:15 2005] [error] [client 127.0.0.1] PythonHandler   
>> mptest: ValueError: Failed to acquire global mutex lock, referer:   
>> http://localhost/MODPYTHON/
>> Regards
>> Asif
>> On Jun 1, 2005, at 5:02 PM, Jim Gallacher wrote:
>>> Try restarting apache and run the following test handler:
>>>
>>> import _apache
>>>
>>> def handler(req):
>>>     req.content_type = 'text/plain'
>>>     req.write('begin lock test\n')
>>>     _apache._global_lock(req.server, None, 0)
>>>     _apache._global_unlock(req.server, None, 0)
>>>     req.write('begin lock test\n')
>>>     return apache.OK
>>>
>>> Check the apache error.log and post any errors (including apache   
>>> startup) regarding mutexes or locks.
>>>
>>> Regards,
>>> Jim
>>>
>>>
>>> Asif Jan wrote:
>>>
>>>> By the way I get same error when using the python scripts as well
>>>> Mod_python error: "PythonHandler mod_python.publisher"
>>>> Traceback (most recent call last):
>>>>   File    
>>>> "/System/Library/Frameworks/Python.framework/Versions/2.3/lib/   
>>>> python2.3/site-packages/mod_python/apache.py", line 299, in    
>>>> HandlerDispatch
>>>>     result = object(req)
>>>>   File    
>>>> "/System/Library/Frameworks/Python.framework/Versions/2.3/lib/   
>>>> python2.3/site-packages/mod_python/publisher.py", line 136, in   
>>>> handler
>>>>     result = util.apply_fs_data(object, req.form, req=req)
>>>>   File    
>>>> "/System/Library/Frameworks/Python.framework/Versions/2.3/lib/   
>>>> python2.3/site-packages/mod_python/util.py", line 361, in   
>>>> apply_fs_data
>>>>     return object(**args)
>>>>   File "/Library/Apache2/htdocs/NEOBASE/mptest.py", line 5, in test
>>>>     sess = Session.Session(req)
>>>>   File    
>>>> "/System/Library/Frameworks/Python.framework/Versions/2.3/lib/   
>>>> python2.3/site-packages/mod_python/Session.py", line 389, in  
>>>> Session
>>>>     timeout=timeout, lock=lock)
>>>>   File    
>>>> "/System/Library/Frameworks/Python.framework/Versions/2.3/lib/   
>>>> python2.3/site-packages/mod_python/Session.py", line 294, in  
>>>> __init__
>>>>     timeout=timeout, lock=lock)
>>>>   File    
>>>> "/System/Library/Frameworks/Python.framework/Versions/2.3/lib/   
>>>> python2.3/site-packages/mod_python/Session.py", line 131, in  
>>>> __init__
>>>>     self.lock()                 # lock new sid
>>>>   File    
>>>> "/System/Library/Frameworks/Python.framework/Versions/2.3/lib/   
>>>> python2.3/site-packages/mod_python/Session.py", line 215, in lock
>>>>     _apache._global_lock(self._req.server, self._sid)
>>>> ValueError: Failed to acquire global mutex lock
>>>> On Jun 1, 2005, at 3:17 PM, Asif Jan wrote:
>>>>
>>>>>
>>>>> Hi ,
>>>>>
>>>>> When I try to use "session" object inside a PSP page I get  
>>>>> following   error  ( I am using Mac OS X 10.3.9 , Python 2.3  
>>>>> (Apple), and   mod_python 3.1.4).
>>>>>
>>>>> Is it something specific to Mac OS X ?
>>>>>
>>>>> By the way in my psp page I am doing a very simple thing i.e.
>>>>>
>>>>> if not session.is_new():
>>>>>     #  do something
>>>>> else:
>>>>>     # do something else
>>>>>
>>>>>
>>>>> Mod_python error: "PythonHandler mod_python.psp"
>>>>>
>>>>> Traceback (most recent call last):
>>>>>
>>>>>   File    
>>>>> "/System/Library/Frameworks/Python.framework/Versions/2.3/lib/   
>>>>> python2.3/site-packages/mod_python/apache.py", line 299, in    
>>>>> HandlerDispatch
>>>>>     result = object(req)
>>>>>
>>>>>   File    
>>>>> "/System/Library/Frameworks/Python.framework/Versions/2.3/lib/   
>>>>> python2.3/site-packages/mod_python/psp.py", line 297, in handler
>>>>>     p.run()
>>>>>
>>>>>   File    
>>>>> "/System/Library/Frameworks/Python.framework/Versions/2.3/lib/   
>>>>> python2.3/site-packages/mod_python/psp.py", line 191, in run
>>>>>     session = Session.Session(req)
>>>>>
>>>>>   File    
>>>>> "/System/Library/Frameworks/Python.framework/Versions/2.3/lib/   
>>>>> python2.3/site-packages/mod_python/Session.py", line 389, in  
>>>>> Session
>>>>>     timeout=timeout, lock=lock)
>>>>>
>>>>>   File    
>>>>> "/System/Library/Frameworks/Python.framework/Versions/2.3/lib/   
>>>>> python2.3/site-packages/mod_python/Session.py", line 294, in   
>>>>> __init__
>>>>>     timeout=timeout, lock=lock)
>>>>>
>>>>>   File    
>>>>> "/System/Library/Frameworks/Python.framework/Versions/2.3/lib/   
>>>>> python2.3/site-packages/mod_python/Session.py", line 131, in   
>>>>> __init__
>>>>>     self.lock()                 # lock new sid
>>>>>
>>>>>   File    
>>>>> "/System/Library/Frameworks/Python.framework/Versions/2.3/lib/   
>>>>> python2.3/site-packages/mod_python/Session.py", line 215, in lock
>>>>>     _apache._global_lock(self._req.server, self._sid)
>>>>>
>>>>> ValueError: Failed to acquire global mutex lock
>>>>>
>>>>> _______________________________________________
>>>>> Mod_python mailing list
>>>>> Mod_python@modpython.org
>>>>> http://mailman.modpython.org/mailman/listinfo/mod_python
>>>>>
>>>>>
>>>> Asif Jan
>>>> Research Assistant
>>>> Brain Mind Institute
>>>> Ecole Polytechnique Federale De Lausanne (EPFL)
>>>> Lausanne Switzerland
>>>> Tel +41216939529
>>>> _______________________________________________
>>>> Mod_python mailing list
>>>> Mod_python@modpython.org
>>>> http://mailman.modpython.org/mailman/listinfo/mod_python
>>>
>>>
>>>
>> Asif Jan
>> Research Assistant
>> Brain Mind Institute
>> Ecole Polytechnique Federale De Lausanne (EPFL)
>> Lausanne Switzerland
>> Tel +41216939529
>> _______________________________________________
>> Mod_python mailing list
>> Mod_python@modpython.org
>> http://mailman.modpython.org/mailman/listinfo/mod_python
>
>
Asif Jan
Research Assistant
Brain Mind Institute
Ecole Polytechnique Federale De Lausanne (EPFL)
Lausanne Switzerland

Tel +41216939529

From jg.lists at sympatico.ca  Wed Jun  1 12:42:19 2005
From: jg.lists at sympatico.ca (Jim Gallacher)
Date: Wed Jun  1 12:39:01 2005
Subject: [mod_python] PSP and Session Probelms
In-Reply-To: <b19930a1dfe34692edf62b25df51c47f@epfl.ch>
References: <1117608653.15086@dscpl.user.openhosting.com>	<c298f2d70506010103304826ff@mail.gmail.com>	<40f69241c99d72648cbbb2859fa1982a@epfl.ch>	<9c1045298fbd25845422d36d6ca147e1@epfl.ch>	<429DCE03.6090802@sympatico.ca>	<a8815b8ea27764fa7aa4cbcfed87c5a2@epfl.ch>	<429DD6C1.3030207@sympatico.ca>
	<b19930a1dfe34692edf62b25df51c47f@epfl.ch>
Message-ID: <429DE56B.3000008@sympatico.ca>

Asif,

I'm probably way out of my depth here, but could ldap be competing for 
the mutexes as they are a limited system resource (on linux anyway)?

If ldap is a loadable module, what happens if you disable it in the 
apache config?

Jim

Asif Jan wrote:
> Hi Jim
> 
> Here is the information;
> 
> [Wed Jun 01 18:12:39 2005] [notice] mod_python: Creating 32 session  
> mutexes based on 150 max processes and 0 max threads.
> [Wed Jun 01 18:12:40 2005] [notice] LDAP: Built with OpenLDAP LDAP SDK
> [Wed Jun 01 18:12:40 2005] [notice] LDAP: SSL support unavailable
> [Wed Jun 01 18:12:40 2005] [notice] Digest: generating secret for  
> digest authentication ...
> [Wed Jun 01 18:12:40 2005] [notice] Digest: done
> [Wed Jun 01 18:12:40 2005] [debug] util_ldap.c(1432): INIT global mutex  
> /var/tmp/tmp.0.UjOapM in child 5476
> [Wed Jun 01 18:12:40 2005] [debug] util_ldap.c(1432): INIT global mutex  
> /var/tmp/tmp.0.UjOapM in child 5477
> [Wed Jun 01 18:12:40 2005] [debug] util_ldap.c(1432): INIT global mutex  
> /var/tmp/tmp.0.UjOapM in child 5478
> [Wed Jun 01 18:12:40 2005] [debug] util_ldap.c(1432): INIT global mutex  
> /var/tmp/tmp.0.UjOapM in child 5479
> [Wed Jun 01 18:12:40 2005] [debug] util_ldap.c(1432): INIT global mutex  
> /var/tmp/tmp.0.UjOapM in child 5480
> [Wed Jun 01 18:12:40 2005] [notice] Apache/2.0.52 (Unix)  
> mod_python/3.1.4 Python/2.3 DAV/2 configured -- resuming normal  operations
> [Wed Jun 01 18:12:40 2005] [info] Server built: Sep 30 2004 18:20:43
> [Wed Jun 01 18:12:40 2005] [debug] prefork.c(955): AcceptMutex: sysvsem  
> (default: sysvsem)
> 
> 
> 
> 
> Wed Jun 01 18:13:44 2005] [notice] mod_python: (Re)importing module  
> 'mptest'
> [Wed Jun 01 18:13:44 2005] [warn] (13)Permission denied: Failed to  
> acquire global mutex lock at index 0
> [Wed Jun 01 18:13:44 2005] [error] [client 127.0.0.1] PythonHandler  
> mptest: Traceback (most recent call last):, referer:  
> http://localhost/MODPYTHON/
> [Wed Jun 01 18:13:44 2005] [error] [client 127.0.0.1] PythonHandler  
> mptest:   File  
> "/System/Library/Frameworks/Python.framework/Versions/2.3/lib/ 
> python2.3/site-packages/mod_python/apache.py", line 299, in  
> HandlerDispatch\n    result = object(req), referer:  
> http://localhost/MODPYTHON/
> [Wed Jun 01 18:13:44 2005] [error] [client 127.0.0.1] PythonHandler  
> mptest:   File "/Library/Apache2/htdocs/MODPYTHON/mptest.py", line 5,  
> in handler\n    _apache._global_lock(req.server, None, 0), referer:  
> http://localhost/MODPYTHON/
> [Wed Jun 01 18:13:44 2005] [error] [client 127.0.0.1] PythonHandler  
> mptest: ValueError: Failed to acquire global mutex lock, referer:  
> http://localhost/MODPYTHON/
> 
> 
> 
> Regards
> Asif
> 
> On Jun 1, 2005, at 5:39 PM, Jim Gallacher wrote:
> 
>> Hi Asif,
>>
>> Is there any indication in the apache error.log that the mutexes 
>> where  created on apache startup? You should see something like:
>>
>> [Wed Jun 01 15:38:39 2005] [notice] mod_python: Creating 32 session  
>> mutexes based on 6 max processes and 25 max threads.
>> [Wed Jun 01 15:38:39 2005] [notice] Apache/2.0.54 (Debian GNU/Linux)  
>> mod_python/3.2.0-dev-20050519 Python/2.3.5 configured -- resuming  
>> normal operations
>>
>> Jim
>>
>>
>> Asif Jan wrote:
>>
>>> Hi Jim,
>>> Here is the output from the log file   ( I saved the code in mptest   
>>> file)
>>> [Wed Jun 01 17:23:15 2005] [notice] mod_python: (Re)importing 
>>> module   'mptest'
>>> [Wed Jun 01 17:23:15 2005] [warn] (13)Permission denied: Failed to   
>>> acquire global mutex lock at index 0
>>> [Wed Jun 01 17:23:15 2005] [error] [client 127.0.0.1] PythonHandler   
>>> mptest: Traceback (most recent call last):, referer:   
>>> http://localhost/MODPYTHON/
>>> [Wed Jun 01 17:23:15 2005] [error] [client 127.0.0.1] PythonHandler   
>>> mptest:   File   
>>> "/System/Library/Frameworks/Python.framework/Versions/2.3/lib/  
>>> python2.3/site-packages/mod_python/apache.py", line 299, in   
>>> HandlerDispatch\n    result = object(req), referer:   
>>> http://localhost/MODPYTHON/
>>> [Wed Jun 01 17:23:15 2005] [error] [client 127.0.0.1] PythonHandler   
>>> mptest:   File "/Library/Apache2/htdocs/MODPYTHON/mptest.py", line 
>>> 5,   in handler\n    _apache._global_lock(req.server, None, 0), 
>>> referer:   http://localhost/MODPYTHON/
>>> [Wed Jun 01 17:23:15 2005] [error] [client 127.0.0.1] PythonHandler   
>>> mptest: ValueError: Failed to acquire global mutex lock, referer:   
>>> http://localhost/MODPYTHON/
>>> Regards
>>> Asif
>>> On Jun 1, 2005, at 5:02 PM, Jim Gallacher wrote:
>>>
>>>> Try restarting apache and run the following test handler:
>>>>
>>>> import _apache
>>>>
>>>> def handler(req):
>>>>     req.content_type = 'text/plain'
>>>>     req.write('begin lock test\n')
>>>>     _apache._global_lock(req.server, None, 0)
>>>>     _apache._global_unlock(req.server, None, 0)
>>>>     req.write('begin lock test\n')
>>>>     return apache.OK
>>>>
>>>> Check the apache error.log and post any errors (including apache   
>>>> startup) regarding mutexes or locks.
>>>>
>>>> Regards,
>>>> Jim
>>>>
>>>>
>>>> Asif Jan wrote:
>>>>
>>>>> By the way I get same error when using the python scripts as well
>>>>> Mod_python error: "PythonHandler mod_python.publisher"
>>>>> Traceback (most recent call last):
>>>>>   File    
>>>>> "/System/Library/Frameworks/Python.framework/Versions/2.3/lib/   
>>>>> python2.3/site-packages/mod_python/apache.py", line 299, in    
>>>>> HandlerDispatch
>>>>>     result = object(req)
>>>>>   File    
>>>>> "/System/Library/Frameworks/Python.framework/Versions/2.3/lib/   
>>>>> python2.3/site-packages/mod_python/publisher.py", line 136, in   
>>>>> handler
>>>>>     result = util.apply_fs_data(object, req.form, req=req)
>>>>>   File    
>>>>> "/System/Library/Frameworks/Python.framework/Versions/2.3/lib/   
>>>>> python2.3/site-packages/mod_python/util.py", line 361, in   
>>>>> apply_fs_data
>>>>>     return object(**args)
>>>>>   File "/Library/Apache2/htdocs/NEOBASE/mptest.py", line 5, in test
>>>>>     sess = Session.Session(req)
>>>>>   File    
>>>>> "/System/Library/Frameworks/Python.framework/Versions/2.3/lib/   
>>>>> python2.3/site-packages/mod_python/Session.py", line 389, in  Session
>>>>>     timeout=timeout, lock=lock)
>>>>>   File    
>>>>> "/System/Library/Frameworks/Python.framework/Versions/2.3/lib/   
>>>>> python2.3/site-packages/mod_python/Session.py", line 294, in  __init__
>>>>>     timeout=timeout, lock=lock)
>>>>>   File    
>>>>> "/System/Library/Frameworks/Python.framework/Versions/2.3/lib/   
>>>>> python2.3/site-packages/mod_python/Session.py", line 131, in  __init__
>>>>>     self.lock()                 # lock new sid
>>>>>   File    
>>>>> "/System/Library/Frameworks/Python.framework/Versions/2.3/lib/   
>>>>> python2.3/site-packages/mod_python/Session.py", line 215, in lock
>>>>>     _apache._global_lock(self._req.server, self._sid)
>>>>> ValueError: Failed to acquire global mutex lock
>>>>> On Jun 1, 2005, at 3:17 PM, Asif Jan wrote:
>>>>>
>>>>>>
>>>>>> Hi ,
>>>>>>
>>>>>> When I try to use "session" object inside a PSP page I get  
>>>>>> following   error  ( I am using Mac OS X 10.3.9 , Python 2.3  
>>>>>> (Apple), and   mod_python 3.1.4).
>>>>>>
>>>>>> Is it something specific to Mac OS X ?
>>>>>>
>>>>>> By the way in my psp page I am doing a very simple thing i.e.
>>>>>>
>>>>>> if not session.is_new():
>>>>>>     #  do something
>>>>>> else:
>>>>>>     # do something else
>>>>>>
>>>>>>
>>>>>> Mod_python error: "PythonHandler mod_python.psp"
>>>>>>
>>>>>> Traceback (most recent call last):
>>>>>>
>>>>>>   File    
>>>>>> "/System/Library/Frameworks/Python.framework/Versions/2.3/lib/   
>>>>>> python2.3/site-packages/mod_python/apache.py", line 299, in    
>>>>>> HandlerDispatch
>>>>>>     result = object(req)
>>>>>>
>>>>>>   File    
>>>>>> "/System/Library/Frameworks/Python.framework/Versions/2.3/lib/   
>>>>>> python2.3/site-packages/mod_python/psp.py", line 297, in handler
>>>>>>     p.run()
>>>>>>
>>>>>>   File    
>>>>>> "/System/Library/Frameworks/Python.framework/Versions/2.3/lib/   
>>>>>> python2.3/site-packages/mod_python/psp.py", line 191, in run
>>>>>>     session = Session.Session(req)
>>>>>>
>>>>>>   File    
>>>>>> "/System/Library/Frameworks/Python.framework/Versions/2.3/lib/   
>>>>>> python2.3/site-packages/mod_python/Session.py", line 389, in  Session
>>>>>>     timeout=timeout, lock=lock)
>>>>>>
>>>>>>   File    
>>>>>> "/System/Library/Frameworks/Python.framework/Versions/2.3/lib/   
>>>>>> python2.3/site-packages/mod_python/Session.py", line 294, in   
>>>>>> __init__
>>>>>>     timeout=timeout, lock=lock)
>>>>>>
>>>>>>   File    
>>>>>> "/System/Library/Frameworks/Python.framework/Versions/2.3/lib/   
>>>>>> python2.3/site-packages/mod_python/Session.py", line 131, in   
>>>>>> __init__
>>>>>>     self.lock()                 # lock new sid
>>>>>>
>>>>>>   File    
>>>>>> "/System/Library/Frameworks/Python.framework/Versions/2.3/lib/   
>>>>>> python2.3/site-packages/mod_python/Session.py", line 215, in lock
>>>>>>     _apache._global_lock(self._req.server, self._sid)
>>>>>>
>>>>>> ValueError: Failed to acquire global mutex lock
>>>>>>
>>>>>> _______________________________________________
>>>>>> Mod_python mailing list
>>>>>> Mod_python@modpython.org
>>>>>> http://mailman.modpython.org/mailman/listinfo/mod_python
>>>>>>
>>>>>>
>>>>> Asif Jan
>>>>> Research Assistant
>>>>> Brain Mind Institute
>>>>> Ecole Polytechnique Federale De Lausanne (EPFL)
>>>>> Lausanne Switzerland
>>>>> Tel +41216939529
>>>>> _______________________________________________
>>>>> Mod_python mailing list
>>>>> Mod_python@modpython.org
>>>>> http://mailman.modpython.org/mailman/listinfo/mod_python
>>>>
>>>>
>>>>
>>>>
>>> Asif Jan
>>> Research Assistant
>>> Brain Mind Institute
>>> Ecole Polytechnique Federale De Lausanne (EPFL)
>>> Lausanne Switzerland
>>> Tel +41216939529
>>> _______________________________________________
>>> Mod_python mailing list
>>> Mod_python@modpython.org
>>> http://mailman.modpython.org/mailman/listinfo/mod_python
>>
>>
>>
> Asif Jan
> Research Assistant
> Brain Mind Institute
> Ecole Polytechnique Federale De Lausanne (EPFL)
> Lausanne Switzerland
> 
> Tel +41216939529
> 
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
> 

From asif.jan at epfl.ch  Wed Jun  1 13:41:29 2005
From: asif.jan at epfl.ch (Asif Jan)
Date: Wed Jun  1 13:41:38 2005
Subject: [mod_python] PSP and Session Probelms
In-Reply-To: <429DE56B.3000008@sympatico.ca>
References: <1117608653.15086@dscpl.user.openhosting.com>
	<c298f2d70506010103304826ff@mail.gmail.com>
	<40f69241c99d72648cbbb2859fa1982a@epfl.ch>
	<9c1045298fbd25845422d36d6ca147e1@epfl.ch>
	<429DCE03.6090802@sympatico.ca>
	<a8815b8ea27764fa7aa4cbcfed87c5a2@epfl.ch>
	<429DD6C1.3030207@sympatico.ca>
	<b19930a1dfe34692edf62b25df51c47f@epfl.ch>
	<429DE56B.3000008@sympatico.ca>
Message-ID: <1b28e3e29ef73cf5fc446e8ad78067da@epfl.ch>

Hi Jim

I disabled the ldap but the problem persists ..... Here is the log

[Wed Jun 01 19:39:18 2005] [notice] mod_python: Creating 32 session  
mutexes based on 150 max processes and 0 max threads.
[Wed Jun 01 19:39:18 2005] [notice] Digest: generating secret for  
digest authentication ...
[Wed Jun 01 19:39:18 2005] [notice] Digest: done
[Wed Jun 01 19:39:19 2005] [notice] Apache/2.0.52 (Unix) DAV/2  
mod_python/3.1.4 Python/2.3 configured -- resuming normal operations
[Wed Jun 01 19:39:19 2005] [info] Server built: Sep 30 2004 18:20:43
[Wed Jun 01 19:39:19 2005] [debug] prefork.c(955): AcceptMutex: sysvsem  
(default: sysvsem)
[Wed Jun 01 19:39:53 2005] [error] [client 127.0.0.1] File does not  
exist: /Library/Apache2/htdocs/favicon.ico
[Wed Jun 01 19:39:55 2005] [error] [client 127.0.0.1] File does not  
exist: /Library/Apache2/htdocs/favicon.ico
[Wed Jun 01 19:39:58 2005] [notice] mod_python: (Re)importing module  
'mptest'
[Wed Jun 01 19:39:58 2005] [warn] (13)Permission denied: Failed to  
acquire global mutex lock at index 0
[Wed Jun 01 19:39:58 2005] [error] [client 127.0.0.1] PythonHandler  
mptest: Traceback (most recent call last):, referer:  
http://localhost/MODPYTHON/
[Wed Jun 01 19:39:58 2005] [error] [client 127.0.0.1] PythonHandler  
mptest:   File  
"/System/Library/Frameworks/Python.framework/Versions/2.3/lib/ 
python2.3/site-packages/mod_python/apache.py", line 299, in  
HandlerDispatch\n    result = object(req), referer:  
http://localhost/MODPYTHON/
[Wed Jun 01 19:39:58 2005] [error] [client 127.0.0.1] PythonHandler  
mptest:   File "/Library/Apache2/htdocs/MODPYTHON/mptest.py", line 5,  
in handler\n    _apache._global_lock(req.server, None, 0), referer:  
http://localhost/MODPYTHON/
[Wed Jun 01 19:39:58 2005] [error] [client 127.0.0.1] PythonHandler  
mptest: ValueError: Failed to acquire global mutex lock, referer:  
http://localhost/MODPYTHON/


Regards
Asif
On Jun 1, 2005, at 6:42 PM, Jim Gallacher wrote:

> Asif,
>
> I'm probably way out of my depth here, but could ldap be competing for  
> the mutexes as they are a limited system resource (on linux anyway)?
>
> If ldap is a loadable module, what happens if you disable it in the  
> apache config?
>
> Jim
>
> Asif Jan wrote:
>> Hi Jim
>> Here is the information;
>> [Wed Jun 01 18:12:39 2005] [notice] mod_python: Creating 32 session   
>> mutexes based on 150 max processes and 0 max threads.
>> [Wed Jun 01 18:12:40 2005] [notice] LDAP: Built with OpenLDAP LDAP SDK
>> [Wed Jun 01 18:12:40 2005] [notice] LDAP: SSL support unavailable
>> [Wed Jun 01 18:12:40 2005] [notice] Digest: generating secret for   
>> digest authentication ...
>> [Wed Jun 01 18:12:40 2005] [notice] Digest: done
>> [Wed Jun 01 18:12:40 2005] [debug] util_ldap.c(1432): INIT global  
>> mutex  /var/tmp/tmp.0.UjOapM in child 5476
>> [Wed Jun 01 18:12:40 2005] [debug] util_ldap.c(1432): INIT global  
>> mutex  /var/tmp/tmp.0.UjOapM in child 5477
>> [Wed Jun 01 18:12:40 2005] [debug] util_ldap.c(1432): INIT global  
>> mutex  /var/tmp/tmp.0.UjOapM in child 5478
>> [Wed Jun 01 18:12:40 2005] [debug] util_ldap.c(1432): INIT global  
>> mutex  /var/tmp/tmp.0.UjOapM in child 5479
>> [Wed Jun 01 18:12:40 2005] [debug] util_ldap.c(1432): INIT global  
>> mutex  /var/tmp/tmp.0.UjOapM in child 5480
>> [Wed Jun 01 18:12:40 2005] [notice] Apache/2.0.52 (Unix)   
>> mod_python/3.1.4 Python/2.3 DAV/2 configured -- resuming normal   
>> operations
>> [Wed Jun 01 18:12:40 2005] [info] Server built: Sep 30 2004 18:20:43
>> [Wed Jun 01 18:12:40 2005] [debug] prefork.c(955): AcceptMutex:  
>> sysvsem  (default: sysvsem)
>> Wed Jun 01 18:13:44 2005] [notice] mod_python: (Re)importing module   
>> 'mptest'
>> [Wed Jun 01 18:13:44 2005] [warn] (13)Permission denied: Failed to   
>> acquire global mutex lock at index 0
>> [Wed Jun 01 18:13:44 2005] [error] [client 127.0.0.1] PythonHandler   
>> mptest: Traceback (most recent call last):, referer:   
>> http://localhost/MODPYTHON/
>> [Wed Jun 01 18:13:44 2005] [error] [client 127.0.0.1] PythonHandler   
>> mptest:   File   
>> "/System/Library/Frameworks/Python.framework/Versions/2.3/lib/  
>> python2.3/site-packages/mod_python/apache.py", line 299, in   
>> HandlerDispatch\n    result = object(req), referer:   
>> http://localhost/MODPYTHON/
>> [Wed Jun 01 18:13:44 2005] [error] [client 127.0.0.1] PythonHandler   
>> mptest:   File "/Library/Apache2/htdocs/MODPYTHON/mptest.py", line 5,  
>>  in handler\n    _apache._global_lock(req.server, None, 0), referer:   
>> http://localhost/MODPYTHON/
>> [Wed Jun 01 18:13:44 2005] [error] [client 127.0.0.1] PythonHandler   
>> mptest: ValueError: Failed to acquire global mutex lock, referer:   
>> http://localhost/MODPYTHON/
>> Regards
>> Asif
>> On Jun 1, 2005, at 5:39 PM, Jim Gallacher wrote:
>>> Hi Asif,
>>>
>>> Is there any indication in the apache error.log that the mutexes  
>>> where  created on apache startup? You should see something like:
>>>
>>> [Wed Jun 01 15:38:39 2005] [notice] mod_python: Creating 32 session   
>>> mutexes based on 6 max processes and 25 max threads.
>>> [Wed Jun 01 15:38:39 2005] [notice] Apache/2.0.54 (Debian GNU/Linux)  
>>>  mod_python/3.2.0-dev-20050519 Python/2.3.5 configured -- resuming   
>>> normal operations
>>>
>>> Jim
>>>
>>>
>>> Asif Jan wrote:
>>>
>>>> Hi Jim,
>>>> Here is the output from the log file   ( I saved the code in mptest  
>>>>   file)
>>>> [Wed Jun 01 17:23:15 2005] [notice] mod_python: (Re)importing  
>>>> module   'mptest'
>>>> [Wed Jun 01 17:23:15 2005] [warn] (13)Permission denied: Failed to   
>>>>  acquire global mutex lock at index 0
>>>> [Wed Jun 01 17:23:15 2005] [error] [client 127.0.0.1] PythonHandler  
>>>>   mptest: Traceback (most recent call last):, referer:    
>>>> http://localhost/MODPYTHON/
>>>> [Wed Jun 01 17:23:15 2005] [error] [client 127.0.0.1] PythonHandler  
>>>>   mptest:   File    
>>>> "/System/Library/Frameworks/Python.framework/Versions/2.3/lib/   
>>>> python2.3/site-packages/mod_python/apache.py", line 299, in    
>>>> HandlerDispatch\n    result = object(req), referer:    
>>>> http://localhost/MODPYTHON/
>>>> [Wed Jun 01 17:23:15 2005] [error] [client 127.0.0.1] PythonHandler  
>>>>   mptest:   File "/Library/Apache2/htdocs/MODPYTHON/mptest.py",  
>>>> line 5,   in handler\n    _apache._global_lock(req.server, None,  
>>>> 0), referer:   http://localhost/MODPYTHON/
>>>> [Wed Jun 01 17:23:15 2005] [error] [client 127.0.0.1] PythonHandler  
>>>>   mptest: ValueError: Failed to acquire global mutex lock, referer:  
>>>>   http://localhost/MODPYTHON/
>>>> Regards
>>>> Asif
>>>> On Jun 1, 2005, at 5:02 PM, Jim Gallacher wrote:
>>>>
>>>>> Try restarting apache and run the following test handler:
>>>>>
>>>>> import _apache
>>>>>
>>>>> def handler(req):
>>>>>     req.content_type = 'text/plain'
>>>>>     req.write('begin lock test\n')
>>>>>     _apache._global_lock(req.server, None, 0)
>>>>>     _apache._global_unlock(req.server, None, 0)
>>>>>     req.write('begin lock test\n')
>>>>>     return apache.OK
>>>>>
>>>>> Check the apache error.log and post any errors (including apache    
>>>>> startup) regarding mutexes or locks.
>>>>>
>>>>> Regards,
>>>>> Jim
>>>>>
>>>>>
>>>>> Asif Jan wrote:
>>>>>
>>>>>> By the way I get same error when using the python scripts as well
>>>>>> Mod_python error: "PythonHandler mod_python.publisher"
>>>>>> Traceback (most recent call last):
>>>>>>   File     
>>>>>> "/System/Library/Frameworks/Python.framework/Versions/2.3/lib/    
>>>>>> python2.3/site-packages/mod_python/apache.py", line 299, in     
>>>>>> HandlerDispatch
>>>>>>     result = object(req)
>>>>>>   File     
>>>>>> "/System/Library/Frameworks/Python.framework/Versions/2.3/lib/    
>>>>>> python2.3/site-packages/mod_python/publisher.py", line 136, in    
>>>>>> handler
>>>>>>     result = util.apply_fs_data(object, req.form, req=req)
>>>>>>   File     
>>>>>> "/System/Library/Frameworks/Python.framework/Versions/2.3/lib/    
>>>>>> python2.3/site-packages/mod_python/util.py", line 361, in    
>>>>>> apply_fs_data
>>>>>>     return object(**args)
>>>>>>   File "/Library/Apache2/htdocs/NEOBASE/mptest.py", line 5, in  
>>>>>> test
>>>>>>     sess = Session.Session(req)
>>>>>>   File     
>>>>>> "/System/Library/Frameworks/Python.framework/Versions/2.3/lib/    
>>>>>> python2.3/site-packages/mod_python/Session.py", line 389, in   
>>>>>> Session
>>>>>>     timeout=timeout, lock=lock)
>>>>>>   File     
>>>>>> "/System/Library/Frameworks/Python.framework/Versions/2.3/lib/    
>>>>>> python2.3/site-packages/mod_python/Session.py", line 294, in   
>>>>>> __init__
>>>>>>     timeout=timeout, lock=lock)
>>>>>>   File     
>>>>>> "/System/Library/Frameworks/Python.framework/Versions/2.3/lib/    
>>>>>> python2.3/site-packages/mod_python/Session.py", line 131, in   
>>>>>> __init__
>>>>>>     self.lock()                 # lock new sid
>>>>>>   File     
>>>>>> "/System/Library/Frameworks/Python.framework/Versions/2.3/lib/    
>>>>>> python2.3/site-packages/mod_python/Session.py", line 215, in lock
>>>>>>     _apache._global_lock(self._req.server, self._sid)
>>>>>> ValueError: Failed to acquire global mutex lock
>>>>>> On Jun 1, 2005, at 3:17 PM, Asif Jan wrote:
>>>>>>
>>>>>>>
>>>>>>> Hi ,
>>>>>>>
>>>>>>> When I try to use "session" object inside a PSP page I get   
>>>>>>> following   error  ( I am using Mac OS X 10.3.9 , Python 2.3   
>>>>>>> (Apple), and   mod_python 3.1.4).
>>>>>>>
>>>>>>> Is it something specific to Mac OS X ?
>>>>>>>
>>>>>>> By the way in my psp page I am doing a very simple thing i.e.
>>>>>>>
>>>>>>> if not session.is_new():
>>>>>>>     #  do something
>>>>>>> else:
>>>>>>>     # do something else
>>>>>>>
>>>>>>>
>>>>>>> Mod_python error: "PythonHandler mod_python.psp"
>>>>>>>
>>>>>>> Traceback (most recent call last):
>>>>>>>
>>>>>>>   File     
>>>>>>> "/System/Library/Frameworks/Python.framework/Versions/2.3/lib/    
>>>>>>> python2.3/site-packages/mod_python/apache.py", line 299, in     
>>>>>>> HandlerDispatch
>>>>>>>     result = object(req)
>>>>>>>
>>>>>>>   File     
>>>>>>> "/System/Library/Frameworks/Python.framework/Versions/2.3/lib/    
>>>>>>> python2.3/site-packages/mod_python/psp.py", line 297, in handler
>>>>>>>     p.run()
>>>>>>>
>>>>>>>   File     
>>>>>>> "/System/Library/Frameworks/Python.framework/Versions/2.3/lib/    
>>>>>>> python2.3/site-packages/mod_python/psp.py", line 191, in run
>>>>>>>     session = Session.Session(req)
>>>>>>>
>>>>>>>   File     
>>>>>>> "/System/Library/Frameworks/Python.framework/Versions/2.3/lib/    
>>>>>>> python2.3/site-packages/mod_python/Session.py", line 389, in   
>>>>>>> Session
>>>>>>>     timeout=timeout, lock=lock)
>>>>>>>
>>>>>>>   File     
>>>>>>> "/System/Library/Frameworks/Python.framework/Versions/2.3/lib/    
>>>>>>> python2.3/site-packages/mod_python/Session.py", line 294, in    
>>>>>>> __init__
>>>>>>>     timeout=timeout, lock=lock)
>>>>>>>
>>>>>>>   File     
>>>>>>> "/System/Library/Frameworks/Python.framework/Versions/2.3/lib/    
>>>>>>> python2.3/site-packages/mod_python/Session.py", line 131, in    
>>>>>>> __init__
>>>>>>>     self.lock()                 # lock new sid
>>>>>>>
>>>>>>>   File     
>>>>>>> "/System/Library/Frameworks/Python.framework/Versions/2.3/lib/    
>>>>>>> python2.3/site-packages/mod_python/Session.py", line 215, in  
>>>>>>> lock
>>>>>>>     _apache._global_lock(self._req.server, self._sid)
>>>>>>>
>>>>>>> ValueError: Failed to acquire global mutex lock
>>>>>>>
>>>>>>> _______________________________________________
>>>>>>> Mod_python mailing list
>>>>>>> Mod_python@modpython.org
>>>>>>> http://mailman.modpython.org/mailman/listinfo/mod_python
>>>>>>>
>>>>>>>
>>>>>> Asif Jan
>>>>>> Research Assistant
>>>>>> Brain Mind Institute
>>>>>> Ecole Polytechnique Federale De Lausanne (EPFL)
>>>>>> Lausanne Switzerland
>>>>>> Tel +41216939529
>>>>>> _______________________________________________
>>>>>> Mod_python mailing list
>>>>>> Mod_python@modpython.org
>>>>>> http://mailman.modpython.org/mailman/listinfo/mod_python
>>>>>
>>>>>
>>>>>
>>>>>
>>>> Asif Jan
>>>> Research Assistant
>>>> Brain Mind Institute
>>>> Ecole Polytechnique Federale De Lausanne (EPFL)
>>>> Lausanne Switzerland
>>>> Tel +41216939529
>>>> _______________________________________________
>>>> Mod_python mailing list
>>>> Mod_python@modpython.org
>>>> http://mailman.modpython.org/mailman/listinfo/mod_python
>>>
>>>
>>>
>> Asif Jan
>> Research Assistant
>> Brain Mind Institute
>> Ecole Polytechnique Federale De Lausanne (EPFL)
>> Lausanne Switzerland
>> Tel +41216939529
>> _______________________________________________
>> Mod_python mailing list
>> Mod_python@modpython.org
>> http://mailman.modpython.org/mailman/listinfo/mod_python
>
>
Asif Jan
Research Assistant
Brain Mind Institute
Ecole Polytechnique Federale De Lausanne (EPFL)
Lausanne Switzerland

Tel +41216939529

From amarrero at mitre.org  Wed Jun  1 14:16:51 2005
From: amarrero at mitre.org (Alexis Marrero)
Date: Wed Jun  1 14:17:17 2005
Subject: [mod_python] URLs
Message-ID: <1c72a8ee0c9cfbee330466f2a96f4057@mitre.org>

I want to configure mod_python to not process the URL and just handle 
the request at the root level.

In other words, a request to:

http://example.com/this/path/is/not/to/be/processed

Needs to be handled by index.py at the root level. And index.py 
internally process the rest of the URI 
'this/path/is/not/to/be/processed'.

So, my question is how can I configure mod_python for accomplishing 
this.

Regards,
/amn


From jg.lists at sympatico.ca  Wed Jun  1 14:23:31 2005
From: jg.lists at sympatico.ca (Jim Gallacher)
Date: Wed Jun  1 14:20:13 2005
Subject: [mod_python] PSP and Session Probelms
In-Reply-To: <1b28e3e29ef73cf5fc446e8ad78067da@epfl.ch>
References: <1117608653.15086@dscpl.user.openhosting.com>	<c298f2d70506010103304826ff@mail.gmail.com>	<40f69241c99d72648cbbb2859fa1982a@epfl.ch>	<9c1045298fbd25845422d36d6ca147e1@epfl.ch>	<429DCE03.6090802@sympatico.ca>	<a8815b8ea27764fa7aa4cbcfed87c5a2@epfl.ch>	<429DD6C1.3030207@sympatico.ca>	<b19930a1dfe34692edf62b25df51c47f@epfl.ch>	<429DE56B.3000008@sympatico.ca>
	<1b28e3e29ef73cf5fc446e8ad78067da@epfl.ch>
Message-ID: <429DFD23.6020905@sympatico.ca>

Hi Asif,

I missed the "Permission denied" part of the error message. Doing a 
quick search of the mail archives turns up the following discussion:

http://www.modpython.org/pipermail/mod_python/2003-December/014701.html
http://www.modpython.org/pipermail/mod_python/2003-December/014703.html
http://www.modpython.org/pipermail/mod_python/2003-December/014705.html
http://www.modpython.org/pipermail/mod_python/2003-December/014707.html
http://www.modpython.org/pipermail/mod_python/2003-December/014708.html

The upshot of which was it was a permissions bug in System V IPC that 
was fixed in 3.1.2.

I've reached the limit of my knowledge here. Hopefully someone with a 
better understanding can help out.

Regards,
Jim

Asif Jan wrote:
> Hi Jim
> 
> I disabled the ldap but the problem persists ..... Here is the log
> 
> [Wed Jun 01 19:39:18 2005] [notice] mod_python: Creating 32 session  
> mutexes based on 150 max processes and 0 max threads.
> [Wed Jun 01 19:39:18 2005] [notice] Digest: generating secret for  
> digest authentication ...
> [Wed Jun 01 19:39:18 2005] [notice] Digest: done
> [Wed Jun 01 19:39:19 2005] [notice] Apache/2.0.52 (Unix) DAV/2  
> mod_python/3.1.4 Python/2.3 configured -- resuming normal operations
> [Wed Jun 01 19:39:19 2005] [info] Server built: Sep 30 2004 18:20:43
> [Wed Jun 01 19:39:19 2005] [debug] prefork.c(955): AcceptMutex: sysvsem  
> (default: sysvsem)
> [Wed Jun 01 19:39:53 2005] [error] [client 127.0.0.1] File does not  
> exist: /Library/Apache2/htdocs/favicon.ico
> [Wed Jun 01 19:39:55 2005] [error] [client 127.0.0.1] File does not  
> exist: /Library/Apache2/htdocs/favicon.ico
> [Wed Jun 01 19:39:58 2005] [notice] mod_python: (Re)importing module  
> 'mptest'
> [Wed Jun 01 19:39:58 2005] [warn] (13)Permission denied: Failed to  
> acquire global mutex lock at index 0
> [Wed Jun 01 19:39:58 2005] [error] [client 127.0.0.1] PythonHandler  
> mptest: Traceback (most recent call last):, referer:  
> http://localhost/MODPYTHON/
> [Wed Jun 01 19:39:58 2005] [error] [client 127.0.0.1] PythonHandler  
> mptest:   File  
> "/System/Library/Frameworks/Python.framework/Versions/2.3/lib/ 
> python2.3/site-packages/mod_python/apache.py", line 299, in  
> HandlerDispatch\n    result = object(req), referer:  
> http://localhost/MODPYTHON/
> [Wed Jun 01 19:39:58 2005] [error] [client 127.0.0.1] PythonHandler  
> mptest:   File "/Library/Apache2/htdocs/MODPYTHON/mptest.py", line 5,  
> in handler\n    _apache._global_lock(req.server, None, 0), referer:  
> http://localhost/MODPYTHON/
> [Wed Jun 01 19:39:58 2005] [error] [client 127.0.0.1] PythonHandler  
> mptest: ValueError: Failed to acquire global mutex lock, referer:  
> http://localhost/MODPYTHON/
> 
> 
> Regards
> Asif
> On Jun 1, 2005, at 6:42 PM, Jim Gallacher wrote:
> 
>> Asif,
>>
>> I'm probably way out of my depth here, but could ldap be competing 
>> for  the mutexes as they are a limited system resource (on linux anyway)?
>>
>> If ldap is a loadable module, what happens if you disable it in the  
>> apache config?
>>
>> Jim
>>
>> Asif Jan wrote:
>>
>>> Hi Jim
>>> Here is the information;
>>> [Wed Jun 01 18:12:39 2005] [notice] mod_python: Creating 32 session   
>>> mutexes based on 150 max processes and 0 max threads.
>>> [Wed Jun 01 18:12:40 2005] [notice] LDAP: Built with OpenLDAP LDAP SDK
>>> [Wed Jun 01 18:12:40 2005] [notice] LDAP: SSL support unavailable
>>> [Wed Jun 01 18:12:40 2005] [notice] Digest: generating secret for   
>>> digest authentication ...
>>> [Wed Jun 01 18:12:40 2005] [notice] Digest: done
>>> [Wed Jun 01 18:12:40 2005] [debug] util_ldap.c(1432): INIT global  
>>> mutex  /var/tmp/tmp.0.UjOapM in child 5476
>>> [Wed Jun 01 18:12:40 2005] [debug] util_ldap.c(1432): INIT global  
>>> mutex  /var/tmp/tmp.0.UjOapM in child 5477
>>> [Wed Jun 01 18:12:40 2005] [debug] util_ldap.c(1432): INIT global  
>>> mutex  /var/tmp/tmp.0.UjOapM in child 5478
>>> [Wed Jun 01 18:12:40 2005] [debug] util_ldap.c(1432): INIT global  
>>> mutex  /var/tmp/tmp.0.UjOapM in child 5479
>>> [Wed Jun 01 18:12:40 2005] [debug] util_ldap.c(1432): INIT global  
>>> mutex  /var/tmp/tmp.0.UjOapM in child 5480
>>> [Wed Jun 01 18:12:40 2005] [notice] Apache/2.0.52 (Unix)   
>>> mod_python/3.1.4 Python/2.3 DAV/2 configured -- resuming normal   
>>> operations
>>> [Wed Jun 01 18:12:40 2005] [info] Server built: Sep 30 2004 18:20:43
>>> [Wed Jun 01 18:12:40 2005] [debug] prefork.c(955): AcceptMutex:  
>>> sysvsem  (default: sysvsem)
>>> Wed Jun 01 18:13:44 2005] [notice] mod_python: (Re)importing module   
>>> 'mptest'
>>> [Wed Jun 01 18:13:44 2005] [warn] (13)Permission denied: Failed to   
>>> acquire global mutex lock at index 0
>>> [Wed Jun 01 18:13:44 2005] [error] [client 127.0.0.1] PythonHandler   
>>> mptest: Traceback (most recent call last):, referer:   
>>> http://localhost/MODPYTHON/
>>> [Wed Jun 01 18:13:44 2005] [error] [client 127.0.0.1] PythonHandler   
>>> mptest:   File   
>>> "/System/Library/Frameworks/Python.framework/Versions/2.3/lib/  
>>> python2.3/site-packages/mod_python/apache.py", line 299, in   
>>> HandlerDispatch\n    result = object(req), referer:   
>>> http://localhost/MODPYTHON/
>>> [Wed Jun 01 18:13:44 2005] [error] [client 127.0.0.1] PythonHandler   
>>> mptest:   File "/Library/Apache2/htdocs/MODPYTHON/mptest.py", line 
>>> 5,   in handler\n    _apache._global_lock(req.server, None, 0), 
>>> referer:   http://localhost/MODPYTHON/
>>> [Wed Jun 01 18:13:44 2005] [error] [client 127.0.0.1] PythonHandler   
>>> mptest: ValueError: Failed to acquire global mutex lock, referer:   
>>> http://localhost/MODPYTHON/
>>> Regards
>>> Asif
>>> On Jun 1, 2005, at 5:39 PM, Jim Gallacher wrote:
>>>
>>>> Hi Asif,
>>>>
>>>> Is there any indication in the apache error.log that the mutexes  
>>>> where  created on apache startup? You should see something like:
>>>>
>>>> [Wed Jun 01 15:38:39 2005] [notice] mod_python: Creating 32 
>>>> session   mutexes based on 6 max processes and 25 max threads.
>>>> [Wed Jun 01 15:38:39 2005] [notice] Apache/2.0.54 (Debian 
>>>> GNU/Linux)   mod_python/3.2.0-dev-20050519 Python/2.3.5 configured 
>>>> -- resuming   normal operations
>>>>
>>>> Jim
>>>>
>>>>
>>>> Asif Jan wrote:
>>>>
>>>>> Hi Jim,
>>>>> Here is the output from the log file   ( I saved the code in 
>>>>> mptest    file)
>>>>> [Wed Jun 01 17:23:15 2005] [notice] mod_python: (Re)importing  
>>>>> module   'mptest'
>>>>> [Wed Jun 01 17:23:15 2005] [warn] (13)Permission denied: Failed 
>>>>> to    acquire global mutex lock at index 0
>>>>> [Wed Jun 01 17:23:15 2005] [error] [client 127.0.0.1] 
>>>>> PythonHandler    mptest: Traceback (most recent call last):, 
>>>>> referer:    http://localhost/MODPYTHON/
>>>>> [Wed Jun 01 17:23:15 2005] [error] [client 127.0.0.1] 
>>>>> PythonHandler    mptest:   File    
>>>>> "/System/Library/Frameworks/Python.framework/Versions/2.3/lib/   
>>>>> python2.3/site-packages/mod_python/apache.py", line 299, in    
>>>>> HandlerDispatch\n    result = object(req), referer:    
>>>>> http://localhost/MODPYTHON/
>>>>> [Wed Jun 01 17:23:15 2005] [error] [client 127.0.0.1] 
>>>>> PythonHandler    mptest:   File 
>>>>> "/Library/Apache2/htdocs/MODPYTHON/mptest.py",  line 5,   in 
>>>>> handler\n    _apache._global_lock(req.server, None,  0), referer:   
>>>>> http://localhost/MODPYTHON/
>>>>> [Wed Jun 01 17:23:15 2005] [error] [client 127.0.0.1] 
>>>>> PythonHandler    mptest: ValueError: Failed to acquire global mutex 
>>>>> lock, referer:    http://localhost/MODPYTHON/
>>>>> Regards
>>>>> Asif
>>>>> On Jun 1, 2005, at 5:02 PM, Jim Gallacher wrote:
>>>>>
>>>>>> Try restarting apache and run the following test handler:
>>>>>>
>>>>>> import _apache
>>>>>>
>>>>>> def handler(req):
>>>>>>     req.content_type = 'text/plain'
>>>>>>     req.write('begin lock test\n')
>>>>>>     _apache._global_lock(req.server, None, 0)
>>>>>>     _apache._global_unlock(req.server, None, 0)
>>>>>>     req.write('begin lock test\n')
>>>>>>     return apache.OK
>>>>>>
>>>>>> Check the apache error.log and post any errors (including 
>>>>>> apache    startup) regarding mutexes or locks.
>>>>>>
>>>>>> Regards,
>>>>>> Jim
>>>>>>
>>>>>>
>>>>>> Asif Jan wrote:
>>>>>>
>>>>>>> By the way I get same error when using the python scripts as well
>>>>>>> Mod_python error: "PythonHandler mod_python.publisher"
>>>>>>> Traceback (most recent call last):
>>>>>>>   File     
>>>>>>> "/System/Library/Frameworks/Python.framework/Versions/2.3/lib/    
>>>>>>> python2.3/site-packages/mod_python/apache.py", line 299, in     
>>>>>>> HandlerDispatch
>>>>>>>     result = object(req)
>>>>>>>   File     
>>>>>>> "/System/Library/Frameworks/Python.framework/Versions/2.3/lib/    
>>>>>>> python2.3/site-packages/mod_python/publisher.py", line 136, in    
>>>>>>> handler
>>>>>>>     result = util.apply_fs_data(object, req.form, req=req)
>>>>>>>   File     
>>>>>>> "/System/Library/Frameworks/Python.framework/Versions/2.3/lib/    
>>>>>>> python2.3/site-packages/mod_python/util.py", line 361, in    
>>>>>>> apply_fs_data
>>>>>>>     return object(**args)
>>>>>>>   File "/Library/Apache2/htdocs/NEOBASE/mptest.py", line 5, in  test
>>>>>>>     sess = Session.Session(req)
>>>>>>>   File     
>>>>>>> "/System/Library/Frameworks/Python.framework/Versions/2.3/lib/    
>>>>>>> python2.3/site-packages/mod_python/Session.py", line 389, in   
>>>>>>> Session
>>>>>>>     timeout=timeout, lock=lock)
>>>>>>>   File     
>>>>>>> "/System/Library/Frameworks/Python.framework/Versions/2.3/lib/    
>>>>>>> python2.3/site-packages/mod_python/Session.py", line 294, in   
>>>>>>> __init__
>>>>>>>     timeout=timeout, lock=lock)
>>>>>>>   File     
>>>>>>> "/System/Library/Frameworks/Python.framework/Versions/2.3/lib/    
>>>>>>> python2.3/site-packages/mod_python/Session.py", line 131, in   
>>>>>>> __init__
>>>>>>>     self.lock()                 # lock new sid
>>>>>>>   File     
>>>>>>> "/System/Library/Frameworks/Python.framework/Versions/2.3/lib/    
>>>>>>> python2.3/site-packages/mod_python/Session.py", line 215, in lock
>>>>>>>     _apache._global_lock(self._req.server, self._sid)
>>>>>>> ValueError: Failed to acquire global mutex lock
>>>>>>> On Jun 1, 2005, at 3:17 PM, Asif Jan wrote:
>>>>>>>
>>>>>>>>
>>>>>>>> Hi ,
>>>>>>>>
>>>>>>>> When I try to use "session" object inside a PSP page I get   
>>>>>>>> following   error  ( I am using Mac OS X 10.3.9 , Python 2.3   
>>>>>>>> (Apple), and   mod_python 3.1.4).
>>>>>>>>
>>>>>>>> Is it something specific to Mac OS X ?
>>>>>>>>
>>>>>>>> By the way in my psp page I am doing a very simple thing i.e.
>>>>>>>>
>>>>>>>> if not session.is_new():
>>>>>>>>     #  do something
>>>>>>>> else:
>>>>>>>>     # do something else
>>>>>>>>
>>>>>>>>
>>>>>>>> Mod_python error: "PythonHandler mod_python.psp"
>>>>>>>>
>>>>>>>> Traceback (most recent call last):
>>>>>>>>
>>>>>>>>   File     
>>>>>>>> "/System/Library/Frameworks/Python.framework/Versions/2.3/lib/    
>>>>>>>> python2.3/site-packages/mod_python/apache.py", line 299, in     
>>>>>>>> HandlerDispatch
>>>>>>>>     result = object(req)
>>>>>>>>
>>>>>>>>   File     
>>>>>>>> "/System/Library/Frameworks/Python.framework/Versions/2.3/lib/    
>>>>>>>> python2.3/site-packages/mod_python/psp.py", line 297, in handler
>>>>>>>>     p.run()
>>>>>>>>
>>>>>>>>   File     
>>>>>>>> "/System/Library/Frameworks/Python.framework/Versions/2.3/lib/    
>>>>>>>> python2.3/site-packages/mod_python/psp.py", line 191, in run
>>>>>>>>     session = Session.Session(req)
>>>>>>>>
>>>>>>>>   File     
>>>>>>>> "/System/Library/Frameworks/Python.framework/Versions/2.3/lib/    
>>>>>>>> python2.3/site-packages/mod_python/Session.py", line 389, in   
>>>>>>>> Session
>>>>>>>>     timeout=timeout, lock=lock)
>>>>>>>>
>>>>>>>>   File     
>>>>>>>> "/System/Library/Frameworks/Python.framework/Versions/2.3/lib/    
>>>>>>>> python2.3/site-packages/mod_python/Session.py", line 294, in    
>>>>>>>> __init__
>>>>>>>>     timeout=timeout, lock=lock)
>>>>>>>>
>>>>>>>>   File     
>>>>>>>> "/System/Library/Frameworks/Python.framework/Versions/2.3/lib/    
>>>>>>>> python2.3/site-packages/mod_python/Session.py", line 131, in    
>>>>>>>> __init__
>>>>>>>>     self.lock()                 # lock new sid
>>>>>>>>
>>>>>>>>   File     
>>>>>>>> "/System/Library/Frameworks/Python.framework/Versions/2.3/lib/    
>>>>>>>> python2.3/site-packages/mod_python/Session.py", line 215, in  lock
>>>>>>>>     _apache._global_lock(self._req.server, self._sid)
>>>>>>>>
>>>>>>>> ValueError: Failed to acquire global mutex lock
>>>>>>>>
>>>>>>>> _______________________________________________
>>>>>>>> Mod_python mailing list
>>>>>>>> Mod_python@modpython.org
>>>>>>>> http://mailman.modpython.org/mailman/listinfo/mod_python
>>>>>>>>
>>>>>>>>
>>>>>>> Asif Jan
>>>>>>> Research Assistant
>>>>>>> Brain Mind Institute
>>>>>>> Ecole Polytechnique Federale De Lausanne (EPFL)
>>>>>>> Lausanne Switzerland
>>>>>>> Tel +41216939529
>>>>>>> _______________________________________________
>>>>>>> Mod_python mailing list
>>>>>>> Mod_python@modpython.org
>>>>>>> http://mailman.modpython.org/mailman/listinfo/mod_python
>>>>>>
>>>>>>
>>>>>>
>>>>>>
>>>>>>
>>>>> Asif Jan
>>>>> Research Assistant
>>>>> Brain Mind Institute
>>>>> Ecole Polytechnique Federale De Lausanne (EPFL)
>>>>> Lausanne Switzerland
>>>>> Tel +41216939529
>>>>> _______________________________________________
>>>>> Mod_python mailing list
>>>>> Mod_python@modpython.org
>>>>> http://mailman.modpython.org/mailman/listinfo/mod_python
>>>>
>>>>
>>>>
>>>>
>>> Asif Jan
>>> Research Assistant
>>> Brain Mind Institute
>>> Ecole Polytechnique Federale De Lausanne (EPFL)
>>> Lausanne Switzerland
>>> Tel +41216939529
>>> _______________________________________________
>>> Mod_python mailing list
>>> Mod_python@modpython.org
>>> http://mailman.modpython.org/mailman/listinfo/mod_python
>>
>>
>>
> Asif Jan
> Research Assistant
> Brain Mind Institute
> Ecole Polytechnique Federale De Lausanne (EPFL)
> Lausanne Switzerland
> 
> Tel +41216939529
> 
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
> 

From jg.lists at sympatico.ca  Wed Jun  1 14:52:05 2005
From: jg.lists at sympatico.ca (Jim Gallacher)
Date: Wed Jun  1 14:48:47 2005
Subject: [mod_python] URLs
In-Reply-To: <1c72a8ee0c9cfbee330466f2a96f4057@mitre.org>
References: <1c72a8ee0c9cfbee330466f2a96f4057@mitre.org>
Message-ID: <429E03D5.5050303@sympatico.ca>

Alexis,

You'll need to create your own handler.

Take a look at the first 10 or 20 lines of the handler in 
mod_python/publisher.py as a guide. It pretty much does what you want.

To quickly summarize, you'll need to examine req.filename (which will be 
index.py in your case) and req.path_info, which will contain everything 
in the url after index.py, ie. "/this/path/is/not/to/be/processed".

Strictly speaking, you'll need a url more like:
http://example.com/index/this/path/is/not/to/be/processed.

in which case a filename other than index.py will likely make more sense.

Regards,
Jim

Alexis Marrero wrote:
> I want to configure mod_python to not process the URL and just handle 
> the request at the root level.
> 
> In other words, a request to:
> 
> http://example.com/this/path/is/not/to/be/processed
> 
> Needs to be handled by index.py at the root level. And index.py 
> internally process the rest of the URI 'this/path/is/not/to/be/processed'.
> 
> So, my question is how can I configure mod_python for accomplishing this.
> 
> Regards,
> /amn
> 
> 
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
> 

From amarrero at mitre.org  Wed Jun  1 18:19:39 2005
From: amarrero at mitre.org (Alexis Marrero)
Date: Wed Jun  1 18:19:52 2005
Subject: [mod_python] Text Dump - Save me from insanity
Message-ID: <f0d1ba955c66f7072d72acc20c7989cd@mitre.org>

I know that this is beaten horse but I don't know what else to do.

The problem is the good ol' "text dump" instead of script execution.

I read the fact and I have google it a thousand of times but I still 
haven't make it work.

Here is my httpd.conf:
.....
DocumentRoot "/webapp/"

Alias / "/webapp/"
<Directory "/webapp/">
   SetHandler mod_python
   PythonHandler index
   PythonDebug On
</Directory>
....

index.py is:

def index(req):
	req.write('hello')


_---------

If I access, http://localhost/, I get a 404 Not Found, if I access 
http://localhost/index.py I get a text dump of the script.

I also added the line, PythonPath "sys.path ['/webapp/']", and still 
does the same thing.

Notice that I WANT SetHandler to be in my httpd.conf because I want to 
catch all requests to the root directory with index.py, nothing else.

What else should I try. I have been using mod_python for a while so I'm 
not that new to it.

/amn


From grahamd at dscpl.com.au  Wed Jun  1 18:39:19 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Wed Jun  1 18:39:25 2005
Subject: [mod_python] Text Dump - Save me from insanity
Message-ID: <1117665559.11724@dscpl.user.openhosting.com>


Alexis Marrero wrote ..
> I know that this is beaten horse but I don't know what else to do.
> 
> The problem is the good ol' "text dump" instead of script execution.
> 
> I read the fact and I have google it a thousand of times but I still 
> haven't make it work.
> 
> Here is my httpd.conf:
> .....
> DocumentRoot "/webapp/"
> 
> Alias / "/webapp/"
> <Directory "/webapp/">
>    SetHandler mod_python
>    PythonHandler index
>    PythonDebug On
> </Directory>
> ....
> 
> index.py is:
> 
> def index(req):
> 	req.write('hello')

This will not work at all even if you got it to execute.

> _---------
> 
> If I access, http://localhost/, I get a 404 Not Found, if I access 
> http://localhost/index.py I get a text dump of the script.
> 
> I also added the line, PythonPath "sys.path ['/webapp/']", and still 
> does the same thing.
> 
> Notice that I WANT SetHandler to be in my httpd.conf because I want to
> catch all requests to the root directory with index.py, nothing else.
> 
> What else should I try. I have been using mod_python for a while so I'm
> not that new to it.

For starters, read:

  http://www.dscpl.com.au/projects/vampire/articles/modpython-001.html

It provides a better example handler plus instructions and also tips for when
things don't work.

After getting that working and understanding the various gotchas and what
should be in a handler, then you might start playing with SetHandler.

BTW, for a SetHandler based dispatch mechanism, suggest you look at Vampire
extensions for mod_python. Even if you don't use it, you might learn something
from it. On the same site as the article:

  http://www.dscpl.com.au/projects/vampire

Graham
From grahamd at dscpl.com.au  Wed Jun  1 18:54:43 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Wed Jun  1 18:54:50 2005
Subject: [mod_python] URLs
Message-ID: <1117666483.20321@dscpl.user.openhosting.com>

Jim Gallacher wrote ..
> Alexis,
> 
> You'll need to create your own handler.
> 
> Take a look at the first 10 or 20 lines of the handler in 
> mod_python/publisher.py as a guide. It pretty much does what you want.
> 
> To quickly summarize, you'll need to examine req.filename (which will be
> index.py in your case) and req.path_info, which will contain everything
> in the url after index.py, ie. "/this/path/is/not/to/be/processed".
> 
> Strictly speaking, you'll need a url more like:
> http://example.com/index/this/path/is/not/to/be/processed.
> 
> in which case a filename other than index.py will likely make more sense.

Think you might be mixing handler/publisher conventions here. The
inclusion of "index" in the URL is not necessary when defining your own
handler, that is more a property of how mod_python.publisher works.
As long as SetHandler is used instead of AddHandler, then the path:

  http://example.com/this/path/is/not/to/be/processed

should be fine.

Agree that one shouldn't call it index.py, although not for the reason
stated. Problem with calling it index.py is that it is too commonly used
and you end up hitting the known issues in module loader with same
name used in multiple directories.

Again, suggest Vampire as perhaps an alternative example to look at
rather than mod_python.publisher. :-)

Graham

> Alexis Marrero wrote:
> > I want to configure mod_python to not process the URL and just handle
> > the request at the root level.
> > 
> > In other words, a request to:
> > 
> > http://example.com/this/path/is/not/to/be/processed
> > 
> > Needs to be handled by index.py at the root level. And index.py 
> > internally process the rest of the URI 'this/path/is/not/to/be/processed'.
> > 
> > So, my question is how can I configure mod_python for accomplishing this.
> > 
> > Regards,
> > /amn
> > 
> > 
> > _______________________________________________
> > Mod_python mailing list
> > Mod_python@modpython.org
> > http://mailman.modpython.org/mailman/listinfo/mod_python
> > 
> 
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
From jg.lists at sympatico.ca  Wed Jun  1 19:27:16 2005
From: jg.lists at sympatico.ca (Jim Gallacher)
Date: Wed Jun  1 19:23:56 2005
Subject: [mod_python] URLs
In-Reply-To: <1117666483.20321@dscpl.user.openhosting.com>
References: <1117666483.20321@dscpl.user.openhosting.com>
Message-ID: <429E4454.4000508@sympatico.ca>

Graham Dumpleton wrote:
> Jim Gallacher wrote ..
> 
>>Alexis,
>>
>>You'll need to create your own handler.
>>
>>Take a look at the first 10 or 20 lines of the handler in 
>>mod_python/publisher.py as a guide. It pretty much does what you want.
>>
>>To quickly summarize, you'll need to examine req.filename (which will be
>>index.py in your case) and req.path_info, which will contain everything
>>in the url after index.py, ie. "/this/path/is/not/to/be/processed".
>>
>>Strictly speaking, you'll need a url more like:
>>http://example.com/index/this/path/is/not/to/be/processed.
>>
>>in which case a filename other than index.py will likely make more sense.
> 
> 
> Think you might be mixing handler/publisher conventions here. 

Entirely possible! :)

> The inclusion of "index" in the URL is not necessary when defining your own
> handler, that is more a property of how mod_python.publisher works.
> As long as SetHandler is used instead of AddHandler, then the path:
> 
>   http://example.com/this/path/is/not/to/be/processed
> 
> should be fine.
> 
> Agree that one shouldn't call it index.py, although not for the reason
> stated. Problem with calling it index.py is that it is too commonly used
> and you end up hitting the known issues in module loader with same
> name used in multiple directories.

I guess my use case is a little different, unusual and probably wrong. 
In my www/ heirarchy index.py  (or whatever.py) is just a stub that 
causes the real code to be loaded. I'm trying to do a RESTful kind of 
thing, and yes I'd probably be better off using Vampire...

> Again, suggest Vampire as perhaps an alternative example to look at
> rather than mod_python.publisher. :-)

...and one day I'll take a look at it. I really, really mean it. :)

> Graham
> 
> 
>>Alexis Marrero wrote:
>>
>>>I want to configure mod_python to not process the URL and just handle
>>>the request at the root level.
>>>
>>>In other words, a request to:
>>>
>>>http://example.com/this/path/is/not/to/be/processed
>>>
>>>Needs to be handled by index.py at the root level. And index.py 
>>>internally process the rest of the URI 'this/path/is/not/to/be/processed'.
>>>
>>>So, my question is how can I configure mod_python for accomplishing this.
>>>
>>>Regards,
>>>/amn
>>>
>>>
>>>_______________________________________________
>>>Mod_python mailing list
>>>Mod_python@modpython.org
>>>http://mailman.modpython.org/mailman/listinfo/mod_python
>>>
>>
>>_______________________________________________
>>Mod_python mailing list
>>Mod_python@modpython.org
>>http://mailman.modpython.org/mailman/listinfo/mod_python
> 
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
> 

From grahamd at dscpl.com.au  Wed Jun  1 21:35:45 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Wed Jun  1 21:35:58 2005
Subject: [mod_python] Use of Vampire features outside of Vampire handlers.
Message-ID: <1117676145.15554@dscpl.user.openhosting.com>

CC'd back to the list as will possibly be of interest to others.

Jamieson Becker wrote ..
> i've virtualized all my uris, so (for example) requests to /media
> directory ONLY get redirected (via mod_rewrite) to the actual media
> directory, whereas all other requests get handled by my handler. that's
> cool and works for me, but i noticed that you had a lot of other cool
> stuff in vampire -- like form handling stuff etc. is any of that usable
> outside of the normal vampire framework?

The intention is that as much as possible is usable outside of handlers
dispatched by Vampire. My history is that I have done a lot of work on
writing reusable C++ class libraries. My mindset therefore, even when
using Python, is to write as much as possible as being reusable within
its own right. If something doesn't and it appears there is no reason it
shouldn't, then I probably didn't test it outside of a handler dispatched
by Vampire and simply overlooked something obvious.

You mention forms, so will tackle that first. Note though that some of
the documentation on the web site is more up to date than latest
official release and describes features actually only in Vampire 1.7. This
release has been delayed for a little while I work out a better way of
doing something in the module loading mechanism. :-)

Obviously, if you use your own top level handler it will not be able to
accept form parameters direct as arguments in style of publisher as
done in Vampire. Your top level handler though, if dispatching to other
functions, can use vampire.executeHandler (1.7 feature), to execute
the function and thus get automatic form parameter unpacking and
interpretation of structured form values. Eg.

  from mod_python import apache

  import vampire

  def handler_args(req,arg1="",arg2=""):
    req.content_type = "text/plain"
    req.send_http_header()
    print >> req, arg1
    print >> req, arg2
    return apache.OK

  def handler(req):
    return vampire.executeHandler(req,handler_args)

A request of form:

  http://localhost:8080/dummy?arg1=1&arg2-1=2&arg2-2=3

Will thus yield:

  1
  ['2', '3']

Note that you can do something similar to this with standard
mod_python by using util.apply_fs_data(). In Vampire though
you get the structured form data as well as lazy evaluation of
the form, ie., only actually process the form data when required,
which is important in some circumstances where third party
templating system expects to do its own form processing.

Functions like vampire.handlerArguments() also work fine outside
of handler dispatched by Vampire.

Other things that will also work are the configuration mechanism.
Is used exactly the same as if it was used in handler dispatched
by Vampire.

  def handler(req):
    config = vampire.loadConfig(req,"settings.cf")
    req.content_type = "text/plain"
    req.send_http_header()
    print >> req, config.get("Settings","key1")
    print >> req, config.get("Settings","key2")
    return apache.OK

You wouldn't be able to load config at global scope though because
of need to use "req" object. When Vampire dispatch mechanism is used
the "req" object is temporarily made available as "__req__" when loading
a module and that would be used if config lookup needed at global
scope. If your own top level handler made use of Vampire's module
importing mechanism however, you could do that also. Ie., should be
able to use vampire.importModule() as well with no problems outside
of handler dispatched by Vampire.

Some of the other things that should work are the vampire.Publisher(),
vampire.Handler() and vampire.Instance() (1.7 feature) wrapper objects.

  class _Object:

    def __init__(self):
      self.method2 = vampire.PathInfo(self._method2)

    def method1(self):
      return "method1"

    def _method2(self,path):
      return "method2",path
  
  handler = vampire.Publisher(_Object())

At least that it is supposed to work. Looks like I broke this at one point
as not working now when I know it used to. Will have to fix it for 1.7.

Anyway, you should get the idea. If there is a specific feature you were
looking at, let me know and can tell you if it will work and any possible
limitations if any.

Graham
From synapticwave at gmail.com  Thu Jun  2 02:02:29 2005
From: synapticwave at gmail.com (Josh Brown)
Date: Thu Jun  2 02:02:34 2005
Subject: [mod_python] can I create files or directories?
Message-ID: <a0341a1050601230264b18c51@mail.gmail.com>

I have mod_python set up and have some test sites up and running on my
server.  I'm having problems using os.mkdir and opening files with 'w'
permissions.  Are there additional security measures being taken by
the mod_python apache module to not allow writing to files/or adding
dirs/files to the server?

My apache server is running with the user apache and group apache and
the files and directories that I want to write to are writable by the
apache user so I just wanted to make sure that the module wasn't
stopping me from doing this.

Cheers
Josh

From grahamd at dscpl.com.au  Thu Jun  2 02:18:31 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Thu Jun  2 02:18:37 2005
Subject: [mod_python] can I create files or directories?
Message-ID: <1117693111.18607@dscpl.user.openhosting.com>

Josh Brown wrote ..
> I have mod_python set up and have some test sites up and running on my
> server.  I'm having problems using os.mkdir and opening files with 'w'
> permissions.  Are there additional security measures being taken by
> the mod_python apache module to not allow writing to files/or adding
> dirs/files to the server?
> 
> My apache server is running with the user apache and group apache and
> the files and directories that I want to write to are writable by the
> apache user so I just wanted to make sure that the module wasn't
> stopping me from doing this.

If the directories are truly writable to the user Apache runs as, next
thing would be whether you are using an absolute path to the directory
where you want to write the files. By default Apache usually runs in root
directory of the filesystem ie., '/'. Even that though you can't rely on.

In other words, you CANNOT open a file in same directory as handler by
saying:

  f = open("myfile","w")

Instead, you would need to say something like:

  directory = os.path.dirname(__file__)
  path = os.path.join(directory,"myfile")

  f = open(path,"w")

If that doesn't help, what is the actual Python exception being raised and
being displayed in the browser or in Apache error log file.

Graham
From mod_python-maillist at uebergeek.de  Thu Jun  2 08:47:36 2005
From: mod_python-maillist at uebergeek.de (Adrian Immler)
Date: Thu Jun  2 08:46:51 2005
Subject: [mod_python] matplotlib and sys.stdout[.write()] <> req[.write()]
Message-ID: <DU65VINH.1117716456.1112920.aimmler@localhost>

hello !

i have following

def test(req):
  import matplotlib
  matplotlib.use('Agg')
  from matplotlib.backends.backend_agg import FigureCanvasAgg as
FigureCanvas
  from matplotlib.figure import Figure

  fig = Figure()
  canvas = FigureCanvas(fig)
  ax = fig.add_subplot(111)
  ax.plot([1,2,3])
  ax.set_title('hi mom')
  ax.grid(True)
  ax.set_xlabel('time')
  ax.set_ylabel('volts')
  canvas.print_figure(sys.stdout)
#  canvas.print_figure(req)

when i use this function from the console i get png binary output that i
could redirect to a file. when i call this function within mod_python

Mod_python error: "PythonHandler mod_python.publisher"

Traceback (most recent call last):

  File "/usr/lib/python2.4/site-packages/mod_python/apache.py", line
299, in HandlerDispatch
    result = object(req)

  File "/usr/lib/python2.4/site-packages/mod_python/publisher.py", line
136, in handler
    result = util.apply_fs_data(object, req.form, req=req)

  File "/usr/lib/python2.4/site-packages/mod_python/util.py", line 361,
in apply_fs_data
    return object(**args)

  File "/www/uebergeek.de/htdocs/music/test.py", line 44, in test
    canvas.print_figure(sys.stdout)

  File
"/usr/lib/python2.4/site-packages/matplotlib/backends/backend_agg.py",
line 383, in print_figure
    basename, ext = os.path.splitext(filename)

  File "/usr/lib/python2.4/posixpath.py", line 92, in splitext
    i = p.rfind('.')

AttributeError: 'builtin_function_or_method' object has no attribute
'rfind'


so i tried to direct it directly to the browser with the line above where
not (sys.stdout) but (req) is, but that produces this error:

Mod_python error: "PythonHandler mod_python.publisher"

Traceback (most recent call last):

  File "/usr/lib/python2.4/site-packages/mod_python/apache.py", line
299, in HandlerDispatch
    result = object(req)

  File "/usr/lib/python2.4/site-packages/mod_python/publisher.py", line
136, in handler
    result = util.apply_fs_data(object, req.form, req=req)

  File "/usr/lib/python2.4/site-packages/mod_python/util.py", line 361,
in apply_fs_data
    return object(**args)

  File "/www/uebergeek.de/htdocs/music/test.py", line 45, in test
    canvas.print_figure(req)

  File
"/usr/lib/python2.4/site-packages/matplotlib/backends/backend_agg.py",
line 383, in print_figure
    basename, ext = os.path.splitext(filename)

  File "/usr/lib/python2.4/posixpath.py", line 92, in splitext
    i = p.rfind('.')

AttributeError: 'mp_request' object has no attribute 'rfind'

so it is nearly the same error. now my question is:

how can i create a png file with matplotlib and send it to the client
without saving the file to harddisk and send that one.

thanks in advance !



p.s. yes i know that the content_type('image/png') is missing in the
above example ...

From tkendall at cnri.reston.va.us  Thu Jun  2 18:13:31 2005
From: tkendall at cnri.reston.va.us (Timothy Kendall)
Date: Thu Jun  2 18:14:19 2005
Subject: [mod_python] Sessions
Message-ID: <429F848B.5000203@cnri.reston.va.us>

Sorry for posting such a beginner's question, but...

I've been using Python for some time, but I'm new to mod_python.  I need to learn how to implement sessions.  I've been through section 4.8 of the mod_python manual, but what's there doesn't tell me how to proceed (not so that my admittedly deficient mind can grasp it, anyway).  Is there a step-by-step xplanation anyone can point me to?  Seems like there must be, but I can't seem to find one.

Thank you.

Timothy Kendall


From nathan.olberding at gmail.com  Thu Jun  2 18:42:31 2005
From: nathan.olberding at gmail.com (Nathan Olberding)
Date: Thu Jun  2 18:42:36 2005
Subject: [mod_python] Sessions
In-Reply-To: <429F848B.5000203@cnri.reston.va.us>
References: <429F848B.5000203@cnri.reston.va.us>
Message-ID: <33a8506705060215422dcfbefd@mail.gmail.com>

In whatever function:

session = Session.Session(req)
session["foo"] = "This is the foo string"
session.save()

Then, in the function that generates the next page:

session = Session.Session(req)
session.load()
# Now, session["foo"] should equal "This is the foo string"

I'm definitely a beginner with mod_python and all other types of web
scripting, too, but I copied and pasted this from working code (I
wrote it once, and once it worked right, I forgot how I got it to
work... need to go back and perma-learn it). Someone else on this
list, please correct me if I'm wrong.


On 6/2/05, Timothy Kendall <tkendall@cnri.reston.va.us> wrote:
> Sorry for posting such a beginner's question, but...
> 
> I've been using Python for some time, but I'm new to mod_python.  I need to learn how to implement sessions.  I've been through section 4.8 of the mod_python manual, but what's there doesn't tell me how to proceed (not so that my admittedly deficient mind can grasp it, anyway).  Is there a step-by-step xplanation anyone can point me to?  Seems like there must be, but I can't seem to find one.
> 
> Thank you.
> 
> Timothy Kendall
> 
> 
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
> 


-- 
-NKO-

From jdhunter at nitace.bsd.uchicago.edu  Thu Jun  2 18:42:49 2005
From: jdhunter at nitace.bsd.uchicago.edu (John Hunter)
Date: Thu Jun  2 18:44:30 2005
Subject: [mod_python] matplotlib and sys.stdout[.write()] <> req[.write()]
In-Reply-To: <DU65VINH.1117716456.1112920.aimmler@localhost> ("Adrian
	Immler"'s message of "Thu, 02 Jun 2005 12:47:36 +0000")
References: <DU65VINH.1117716456.1112920.aimmler@localhost>
Message-ID: <87y89smlcm.fsf@peds-pc311.bsd.uchicago.edu>

>>>>> "Adrian" == Adrian Immler <mod_python-maillist@uebergeek.de> writes:

    Adrian>   File "/www/uebergeek.de/htdocs/music/test.py", line 45,
    Adrian> in test canvas.print_figure(req)

    Adrian>   File
    Adrian> "/usr/lib/python2.4/site-packages/matplotlib/backends/backend_agg.py",
    Adrian> line 383, in print_figure basename, ext =
    Adrian> os.path.splitext(filename)

    Adrian>   File "/usr/lib/python2.4/posixpath.py", line 92, in
    Adrian> splitext i = p.rfind('.')

    Adrian> AttributeError: 'mp_request' object has no attribute
    Adrian> 'rfind'

    Adrian> so it is nearly the same error. now my question is:

    Adrian> how can i create a png file with matplotlib and send it to
    Adrian> the client without saving the file to harddisk and send
    Adrian> that one.

    Adrian> thanks in advance !



    Adrian> p.s. yes i know that the content_type('image/png') is
    Adrian> missing in the above example ...


It looks like mod_python is doing something funny with sys.stdout,
because I can run your script in as a standalone python script

    import sys
    import matplotlib
    matplotlib.use('Agg')
    from matplotlib.backends.backend_agg import FigureCanvasAgg as FigureCanvas
    from matplotlib.figure import Figure

    fig = Figure()
    canvas = FigureCanvas(fig)
    ax = fig.add_subplot(111)
    ax.plot([1,2,3])
    ax.set_title('hi mom')
    ax.grid(True)
    ax.set_xlabel('time')
    ax.set_ylabel('volts')
    canvas.print_figure(sys.stdout)

Run with 

 > python test.py > test.png

Everything works as it should.

The relevant code in lib/matplotlib/backends/backend_agg.py around
line 377 is

        if  isinstance(filename, file):
            # assume png and write to fileobject
            self.renderer._renderer.write_png(filename)
            #pass
        else:
            # take a look at the extension and choose the print handler
            basename, ext = os.path.splitext(filename)
            if not len(ext):
                ext = '.png'

You want to be in the first part of this conditional, ie, you want the
call to 

    self.renderer._renderer.write_png(filename).

Apparently the isinstance(filename, file) test is failing under
modpython and working under normal python.  Anyone know why, or what
would be a more appropriate test for a file object under modpython

JDH
From grahamd at dscpl.com.au  Thu Jun  2 18:44:37 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Thu Jun  2 18:45:06 2005
Subject: [mod_python] Sessions
In-Reply-To: <429F848B.5000203@cnri.reston.va.us>
References: <429F848B.5000203@cnri.reston.va.us>
Message-ID: <ceaf34d74870f39305449ee6152e1c79@dscpl.com.au>


On 03/06/2005, at 8:13 AM, Timothy Kendall wrote:

> Sorry for posting such a beginner's question, but...
>
> I've been using Python for some time, but I'm new to mod_python.  I 
> need to learn how to implement sessions.  I've been through section 
> 4.8 of the mod_python manual, but what's there doesn't tell me how to 
> proceed (not so that my admittedly deficient mind can grasp it, 
> anyway).  Is there a step-by-step xplanation anyone can point me to?  
> Seems like there must be, but I can't seem to find one.

Sessions merely as a way of storing a bit of information while a user is
browsing your site, or in conjunction with a forms based login 
mechanism?
The latter can add a bit more complexity to it.

Also, what packages might you be using in conjunction with mod_python? 
Ie.,
are you writing your own handler from scratch, or are you going to be 
using
mod_python.publisher, mod_python.psp or some third party system? This is
relevant in that some packages partly handle session stuff for you.

Sorry I haven't answered your question, but no time right now. If you 
can
answer the questions above though, will help me later and others to 
perhaps
give a more useful answer to you.

In the mean time, if you want to look at some code for a working example
of a session based login, check out:

   http://svn.dscpl.com.au/vampire/trunk/examples/session/
   http://svn.dscpl.com.au/vampire/trunk/examples/session/login.py

   http://www.dscpl.com.au/projects/vampire/examples/session

This may or may not help you understand the documentation a bit better.

Later.

Graham


From listspam at flowtheory.net  Thu Jun  2 18:55:33 2005
From: listspam at flowtheory.net (Joshua Ginsberg)
Date: Thu Jun  2 18:55:24 2005
Subject: [mod_python] Sessions
In-Reply-To: <429F848B.5000203@cnri.reston.va.us>
References: <429F848B.5000203@cnri.reston.va.us>
Message-ID: <2718067f09f421e204e25f35f1b13c7b@flowtheory.net>

Hi Timothy --

I suppose the documentation doesn't have a step-by-step because there's 
really not a step-by-step to it.

When you create a Session object, it looks for a cookie called pysid in 
the client's browser. If that cookie does not exist, creating the 
Session object sets the cookie in the client's browser.

So for example:

<%
# sessionfu.psp

from mod_python import Session
import pprint

pp = pprint.PrettyPrinter()
sess = Session.Session(req)
newkey = form.getfirst('newkey','')
newvalue = form.getfirst('newvalue','')

%>
<html>
<head>
<title>Session-Fu</title>
</head>
<body>
<%
if sess.is_new():
	req.write('''<p>This is a new session.</p>''')
else:
	if newkey != '':
		# Since Session is an extension of dict, we can assign key/value 
pairs to it
		sess[newkey] = newvalue
	req.write('''<p>This is an existing session.</p>''')
	# dump the keys and values in the session already
	req.write('''<pre>'''+pp.pformat(sess)+'''</pre>''')
%>
<!-- With this form you can set new keys and values in the session -->
<form action="sessionfu.psp">
<p>Key: <input name="newkey" type="text" /> Value: <input 
name="newvalue" type="text" /> <input type="submit" /></p>
</form>
</body>
</html>

I haven't compiled the above, but you get the gist.

-jag

-------------- next part --------------
A non-text attachment was scrubbed...
Name: unknown.jpg
Type: image/jpeg
Size: 1984 bytes
Desc: not available
Url : http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20050602/0ad8ef63/unknown.jpg
-------------- next part --------------

Joshua Ginsberg -- joshg@brainstorminternet.net
Brainstorm Internet Network Operations
970-247-1442 x131
On Jun 2, 2005, at 4:13 PM, Timothy Kendall wrote:

> Sorry for posting such a beginner's question, but...
>
> I've been using Python for some time, but I'm new to mod_python.  I 
> need to learn how to implement sessions.  I've been through section 
> 4.8 of the mod_python manual, but what's there doesn't tell me how to 
> proceed (not so that my admittedly deficient mind can grasp it, 
> anyway).  Is there a step-by-step xplanation anyone can point me to?  
> Seems like there must be, but I can't seem to find one.
>
> Thank you.
>
> Timothy Kendall
>
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>
From grahamd at dscpl.com.au  Thu Jun  2 20:20:56 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Thu Jun  2 20:21:39 2005
Subject: [mod_python] Sessions
Message-ID: <1117758056.24029@dscpl.user.openhosting.com>

Joshua Ginsberg wrote ..
> So for example:
> 
> <%
> # sessionfu.psp
> 
> from mod_python import Session
> import pprint
> 
> pp = pprint.PrettyPrinter()
> sess = Session.Session(req)
> newkey = form.getfirst('newkey','')
> newvalue = form.getfirst('newvalue','')
> 
> %>

For mod_python.psp, you are actually doing more work here than you
strictly need to and why I asked original poster if they were intending
to use add ons like mod_python.psp.

When using mod_python.psp, the mere act of accessing a variable
called "session" will result in the creation by mod_python.psp itself
of a Session object for you. The underlying mod_python.psp code will
also save the session object for you once your page is done.

You may have had a problem with your example code because it didn't
appear to do a save of the session. Other than that it may well have
worked, but you could have avoided creating the session object in the
first place.

Hope this helps.

Graham

From grahamd at dscpl.com.au  Thu Jun  2 20:27:37 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Thu Jun  2 20:28:03 2005
Subject: [mod_python] Sessions
Message-ID: <1117758457.27985@dscpl.user.openhosting.com>

Nathan Olberding wrote ..
> In whatever function:
> 
> session = Session.Session(req)
> session["foo"] = "This is the foo string"
> session.save()
> 
> Then, in the function that generates the next page:
> 
> session = Session.Session(req)
> session.load()
> # Now, session["foo"] should equal "This is the foo string"

FYI.

Presuming you mean these two bits of code are in handlers for
different request URLs, I believe the "load()" is actually redundant
as it is done in the constructor of the Session object.

Graham
From davidbadawi at yahoo.com  Thu Jun  2 20:46:56 2005
From: davidbadawi at yahoo.com (David Badawi)
Date: Thu Jun  2 20:47:04 2005
Subject: [mod_python] Sessions
In-Reply-To: <1117758457.27985@dscpl.user.openhosting.com>
Message-ID: <20050603004656.45960.qmail@web51001.mail.yahoo.com>

How about 
 
from mod_python import Session
 
def handler(req)
    session=Session.Session(req)
    session["condiment"] = "chutney"
    session.save()
    return apache.OK
 
sorry if someone already responded the like.
 
you could use FieldStorage(req,true) is you're getting values from forms.
 
David

Graham Dumpleton <grahamd@dscpl.com.au> wrote:
Nathan Olberding wrote ..
> In whatever function:
> 
> session = Session.Session(req)
> session["foo"] = "This is the foo string"
> session.save()
> 
> Then, in the function that generates the next page:
> 
> session = Session.Session(req)
> session.load()
> # Now, session["foo"] should equal "This is the foo string"

FYI.

Presuming you mean these two bits of code are in handlers for
different request URLs, I believe the "load()" is actually redundant
as it is done in the constructor of the Session object.

Graham
_______________________________________________
Mod_python mailing list
Mod_python@modpython.org
http://mailman.modpython.org/mailman/listinfo/mod_python
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20050602/fbeba73c/attachment.html
From mod_python-maillist at uebergeek.de  Fri Jun  3 05:01:40 2005
From: mod_python-maillist at uebergeek.de (Adrian Immler)
Date: Fri Jun  3 05:00:55 2005
Subject: Fwd: Re: [mod_python] matplotlib and sys.stdout[.write()] <>
	req[.write()]
Message-ID: <7Jit5G18.1117789300.1878390.aimmler@localhost>

>It looks like mod_python is doing something funny with sys.stdout,
>because I can run your script in as a standalone python script

that's the point ;]

>The relevant code in lib/matplotlib/backends/backend_agg.py around
>line 377 is

>    self.renderer._renderer.write_png(filename).

>Apparently the isinstance(filename, file) test is failing under
>modpython and working under normal python.  Anyone know why, or what
>would be a more appropriate test for a file object under modpython


okay ... is there someone out there that knows how to get that working ?
maybe it is just the wrong way we're taking ..)

From asif.jan at epfl.ch  Fri Jun  3 05:20:11 2005
From: asif.jan at epfl.ch (Asif Jan)
Date: Fri Jun  3 05:20:17 2005
Subject: [mod_python] Sessions on Mac OS X 
In-Reply-To: <20050603004656.45960.qmail@web51001.mail.yahoo.com>
References: <20050603004656.45960.qmail@web51001.mail.yahoo.com>
Message-ID: <cb93c1a72303563b5062b47fa7db131d@epfl.ch>

hi ,

Does someone on this list have experience using session (in psp or in  
scripts) on Mac OS X  10.3.9 , Python 2.3  (Apple) and mod_python  
3.1.4.

I have had problems with it ; where as the same code works fine on  
linux machine with same configuration.  Is this some MAC specific  
problem?

Mod_python error: "PythonHandler mod_python.psp"

Traceback (most recent call last):

   File  
"/System/Library/Frameworks/Python.framework/Versions/2.3/lib/ 
python2.3/site-packages/mod_python/apache.py", line 299, in  
HandlerDispatch
     result = object(req)

   File  
"/System/Library/Frameworks/Python.framework/Versions/2.3/lib/ 
python2.3/site-packages/mod_python/psp.py", line 297, in handler
     p.run()

   File  
"/System/Library/Frameworks/Python.framework/Versions/2.3/lib/ 
python2.3/site-packages/mod_python/psp.py", line 191, in run
     session = Session.Session(req)

   File  
"/System/Library/Frameworks/Python.framework/Versions/2.3/lib/ 
python2.3/site-packages/mod_python/Session.py", line 389, in Session
     timeout=timeout, lock=lock)

   File  
"/System/Library/Frameworks/Python.framework/Versions/2.3/lib/ 
python2.3/site-packages/mod_python/Session.py", line 294, in __init__
     timeout=timeout, lock=lock)

   File  
"/System/Library/Frameworks/Python.framework/Versions/2.3/lib/ 
python2.3/site-packages/mod_python/Session.py", line 131, in __init__
     self.lock()                 # lock new sid

   File  
"/System/Library/Frameworks/Python.framework/Versions/2.3/lib/ 
python2.3/site-packages/mod_python/Session.py", line 215, in lock
     _apache._global_lock(self._req.server, self._sid)

ValueError: Failed to acquire global mutex lock

Thanks in advance
Asif


Asif Jan
Research Assistant
Brain Mind Institute
Ecole Polytechnique Federale De Lausanne (EPFL)
Lausanne Switzerland

Tel +41216939529

From bortzmeyer at nic.fr  Fri Jun  3 08:02:46 2005
From: bortzmeyer at nic.fr (Stephane Bortzmeyer)
Date: Fri Jun  3 08:03:00 2005
Subject: [mod_python] Sessions and Cheetah
In-Reply-To: <ceaf34d74870f39305449ee6152e1c79@dscpl.com.au>
References: <429F848B.5000203@cnri.reston.va.us>
	<ceaf34d74870f39305449ee6152e1c79@dscpl.com.au>
Message-ID: <20050603120246.GA12889@nic.fr>

On Fri, Jun 03, 2005 at 08:44:37AM +1000,
 Graham Dumpleton <grahamd@dscpl.com.au> wrote 
 a message of 49 lines which said:

> In the mean time, if you want to look at some code for a working example
> of a session based login, check out:
> 
>   http://svn.dscpl.com.au/vampire/trunk/examples/session/

There is still something missing from that directory, I believe, for
the Cheetah users. The above example works locally for me but, if I
have a handler for Cheetah in ".vampire", it no longer works: I can
see the index page, I'm never redirected to the login page (and there
are no error messages).


From grahamd at dscpl.com.au  Fri Jun  3 08:36:28 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Fri Jun  3 08:36:39 2005
Subject: [mod_python] Re: Sessions and Cheetah
In-Reply-To: <20050603120246.GA12889@nic.fr>
References: <429F848B.5000203@cnri.reston.va.us>
	<ceaf34d74870f39305449ee6152e1c79@dscpl.com.au>
	<20050603120246.GA12889@nic.fr>
Message-ID: <a2e763aa8eb8932634936bd86f200855@dscpl.com.au>


On 03/06/2005, at 10:02 PM, Stephane Bortzmeyer wrote:

> On Fri, Jun 03, 2005 at 08:44:37AM +1000,
>  Graham Dumpleton <grahamd@dscpl.com.au> wrote
>  a message of 49 lines which said:
>
>> In the mean time, if you want to look at some code for a working 
>> example
>> of a session based login, check out:
>>
>>   http://svn.dscpl.com.au/vampire/trunk/examples/session/
>
> There is still something missing from that directory, I believe, for
> the Cheetah users. The above example works locally for me but, if I
> have a handler for Cheetah in ".vampire", it no longer works: I can
> see the index page, I'm never redirected to the login page (and there
> are no error messages).

Are you trying to use your own custom handler for working with Cheetah,
or some version of the example Cheetah handler in Vampire itself?

I know there would be an issue with trying to implement the login page
itself in Cheetah which I don't have a solution for yet. This is because
the whole scheme relies on being able to turn off the login handler for
just the login page and because of how Cheetah works, that isn't that
easy.

Leaving the login page as it is in the example, ie., non Cheetah, I can
quite happily stick Cheetah stuff in the same directory and Cheetah
page access can be protected by login.

Anyway, maybe you can explain a bit better how you have changed things
as not completely sure what you are trying to do. In the meantime I'll
get a full Cheetah example working somehow with the session based login.

Graham

From bortzmeyer at nic.fr  Fri Jun  3 09:05:10 2005
From: bortzmeyer at nic.fr (Stephane Bortzmeyer)
Date: Fri Jun  3 09:05:17 2005
Subject: [mod_python] Re: Sessions and Cheetah
In-Reply-To: <a2e763aa8eb8932634936bd86f200855@dscpl.com.au>
References: <429F848B.5000203@cnri.reston.va.us>
	<ceaf34d74870f39305449ee6152e1c79@dscpl.com.au>
	<20050603120246.GA12889@nic.fr>
	<a2e763aa8eb8932634936bd86f200855@dscpl.com.au>
Message-ID: <20050603130510.GA17677@nic.fr>

On Fri, Jun 03, 2005 at 10:36:28PM +1000,
 Graham Dumpleton <grahamd@dscpl.com.au> wrote 
 a message of 37 lines which said:

> Are you trying to use your own custom handler for working with
> Cheetah, or some version of the example Cheetah handler in Vampire
> itself?

The pristine Cheetah handler distributed with Vampire in
examples/cheetah.
 
> Leaving the login page as it is in the example, ie., non Cheetah, I
> can quite happily stick Cheetah stuff in the same directory and
> Cheetah page access can be protected by login.

Not a problem to me: Cheetah can also generate static pages so I can
even generate the login page with Cheetah offline.
 
From dave at davebritton.com  Fri Jun  3 10:36:17 2005
From: dave at davebritton.com (Dave Britton)
Date: Fri Jun  3 10:36:30 2005
Subject: [mod_python] problem with mod_python configuration
Message-ID: <063601c56849$9a144c50$080aa8c0@DAVE>

My dedicated hosting service tech support folks have just upgraded mysql, python and mod_python and are now clueless because now my server gets this error:

Mod_python error: "PythonHandler mod_python.publisher"

Traceback (most recent call last):

  File "/usr/lib/python2.3/site-packages/mod_python/apache.py", line 287, in HandlerDispatch
    log=debug)

  File "/usr/lib/python2.3/site-packages/mod_python/apache.py", line 454, in import_module
    f, p, d = imp.find_module(parts[i], path)

ImportError: No module named mod_python

The apache error log reports:
[Fri Jun 03 10:27:40 2005] [notice] mod_python: (Re)importing module 'mod_python.publisher'
[Fri Jun 03 10:27:40 2005] [error] [client 66.65.51.166] PythonHandler mod_python.publisher: Traceback (most recent call last):
[Fri Jun 03 10:27:40 2005] [error] [client 66.65.51.166] PythonHandler mod_python.publisher:   File "/usr/lib/python2.3/site-packages/mod_python/apache.py", line 287, in HandlerDispatch!    log=debug)
[Fri Jun 03 10:27:40 2005] [error] [client 66.65.51.166] PythonHandler mod_python.publisher:   File "/usr/lib/python2.3/site-packages/mod_python/apache.py", line 454, in import_module!    f, p, d = imp.find_module(parts[i], path)
[Fri Jun 03 10:27:40 2005] [error] [client 66.65.51.166] PythonHandler mod_python.publisher: ImportError: No module named mod_python

Python finds mod_python just fine:

Python 2.3.4 (#1, Jun  2 2005, 13:01:32)
[GCC 3.2.3 20030502 (Red Hat Linux 3.2.3-52)] on linux2
>>import mod_python

imports mod_python without complaint

Apache httpd.conf contains
 <VirtualHost *:80>
  ServerName www.truemajority.org
  DocumentRoot /var/www/html/truemajority/
  AddHandler mod_python .py
  AddHandler python-program .py
        PythonHandler mod_python.publisher
        PythonDebug on
 </VirtualHost>

python.conf contains
PythonPath "['/usr/lib/python2.3']"
LoadModule python_module modules/mod_python.so

mod_python is located in /usr/lib/python2.3 as shown by:


[root@www python2.3]# find / -name psp.py
/usr/lib/python2.3.old/site-packages/mod_python/psp.py
/usr/lib/python2.3/site-packages/mod_python/psp.py
/usr/src/redhat/BUILD/mod_python-3.1.4/dist/build/lib.linux-i686-2.3/mod_python/psp.py
/usr/src/redhat/BUILD/mod_python-3.1.4/lib/python/mod_python/psp.py
[root@www python2.3]#

The actual mod_python.so file is here:
[root@www www]# find / -name mod_python.so
/usr/lib/httpd/modules/mod_python.so


I suspect there is some configuration issue, but I can't determine what it is. Should mod_python.so be somewhere else?

Can anyone advise me?
Thanks!

-Dave

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20050603/bb890bf7/attachment.html
From M.J.D.Rushton at btinternet.com  Fri Jun  3 14:56:23 2005
From: M.J.D.Rushton at btinternet.com (Michael Rushton)
Date: Fri Jun  3 14:56:30 2005
Subject: [mod_python] Spawning Long Running Processes
Message-ID: <CC1ECBF7-F1DE-44EE-9DA8-F91581BE9BB2@btinternet.com>

Hello,
What is the best way to spawn a process from a mod_python that could  
take several hours to complete?

I am trying to write a handler that when accessed for the first time  
spawns a long running process that writes to a file. On subsequent  
accesses, the handler would show the contents of the file produced by  
the long process, refreshing the page occasionally with meta refresh  
tags.

I have had a stab at achieving this by double forking the process.  
This however, has had the disadvantage that for really long running  
processes   the forked processes still seem to be bound to port 80  
thus preventing httpd daemon restarts. A problem when you want to  
update apache configuration settings.

What am I doing wrong? And what is the accepted way for spawning long  
lived processes from mod_python?

I would be very grateful if someone could point me to some source  
examples that show how to achieve this.

Kind Regards,
Michael Rushton
From dave at davebritton.com  Fri Jun  3 16:05:15 2005
From: dave at davebritton.com (Dave Britton)
Date: Fri Jun  3 16:05:29 2005
Subject: Fw: [mod_python] problem with mod_python configuration
Message-ID: <088701c56877$8f30e3b0$080aa8c0@DAVE>

Never mind, I got it fixed.
I rebuilt mod_python and reinstalled it from scratch and removed pythonpath from the conf file and all works now.

----- Original Message ----- 
From: Dave Britton 
To: mod_python@modpython.org 
Sent: Friday, June 03, 2005 10:36 AM
Subject: [mod_python] problem with mod_python configuration


My dedicated hosting service tech support folks have just upgraded mysql, python and mod_python and are now clueless because now my server gets this error:

Mod_python error: "PythonHandler mod_python.publisher"

Traceback (most recent call last):

  File "/usr/lib/python2.3/site-packages/mod_python/apache.py", line 287, in HandlerDispatch
    log=debug)

  File "/usr/lib/python2.3/site-packages/mod_python/apache.py", line 454, in import_module
    f, p, d = imp.find_module(parts[i], path)

ImportError: No module named mod_python

The apache error log reports:
[Fri Jun 03 10:27:40 2005] [notice] mod_python: (Re)importing module 'mod_python.publisher'
[Fri Jun 03 10:27:40 2005] [error] [client 66.65.51.166] PythonHandler mod_python.publisher: Traceback (most recent call last):
[Fri Jun 03 10:27:40 2005] [error] [client 66.65.51.166] PythonHandler mod_python.publisher:   File "/usr/lib/python2.3/site-packages/mod_python/apache.py", line 287, in HandlerDispatch!    log=debug)
[Fri Jun 03 10:27:40 2005] [error] [client 66.65.51.166] PythonHandler mod_python.publisher:   File "/usr/lib/python2.3/site-packages/mod_python/apache.py", line 454, in import_module!    f, p, d = imp.find_module(parts[i], path)
[Fri Jun 03 10:27:40 2005] [error] [client 66.65.51.166] PythonHandler mod_python.publisher: ImportError: No module named mod_python

Python finds mod_python just fine:

Python 2.3.4 (#1, Jun  2 2005, 13:01:32)
[GCC 3.2.3 20030502 (Red Hat Linux 3.2.3-52)] on linux2
>>import mod_python

imports mod_python without complaint

Apache httpd.conf contains
 <VirtualHost *:80>
  ServerName www.truemajority.org
  DocumentRoot /var/www/html/truemajority/
  AddHandler mod_python .py
  AddHandler python-program .py
        PythonHandler mod_python.publisher
        PythonDebug on
 </VirtualHost>

python.conf contains
PythonPath "['/usr/lib/python2.3']"
LoadModule python_module modules/mod_python.so

mod_python is located in /usr/lib/python2.3 as shown by:


[root@www python2.3]# find / -name psp.py
/usr/lib/python2.3.old/site-packages/mod_python/psp.py
/usr/lib/python2.3/site-packages/mod_python/psp.py
/usr/src/redhat/BUILD/mod_python-3.1.4/dist/build/lib.linux-i686-2.3/mod_python/psp.py
/usr/src/redhat/BUILD/mod_python-3.1.4/lib/python/mod_python/psp.py
[root@www python2.3]#

The actual mod_python.so file is here:
[root@www www]# find / -name mod_python.so
/usr/lib/httpd/modules/mod_python.so


I suspect there is some configuration issue, but I can't determine what it is. Should mod_python.so be somewhere else?

Can anyone advise me?
Thanks!

-Dave




--------------------------------------------------------------------------------


_______________________________________________
Mod_python mailing list
Mod_python@modpython.org
http://mailman.modpython.org/mailman/listinfo/mod_python
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20050603/02f73bfa/attachment.html
From pacifico at drizzle.com  Fri Jun  3 16:09:10 2005
From: pacifico at drizzle.com (Al Pacifico)
Date: Fri Jun  3 16:09:30 2005
Subject: [mod_python] PythonAuthenHandler Question
Message-ID: <003f01c56878$1df4e4c0$347ba8c0@Laptop8100>


Apologies in advance because I come from an Apache 1.3 / mod_perl background
and am rusty at that to boot.

I'm wondering how to use PythonAuthenHandler to set my client's directory
viewing permissions. I'm authenticating against an openLDAP server and the
basic authentication works.

Depending on the identity of the client, some directories should be
accessible and some should not. With a little additional code, I can assign
the client a category. I figure that I should be using a require <usertype>
directive within my httpd.conf and setting a variable in the request object
to describe the category. Alternatively, I might need to write a
PythonAuthzHandler, but the documentation on this is sparse and I'd rather
not bind to the LDAP server twice if I can avoid it.

I thought about using mod_auth_ldap instead, but review of documentation
suggest that it doesn't know how to bind to openLDAP using SASL
authentication, and I cannot change to another authentication scheme.

Could someone provide an example or suggest changes to my handler and
corresponding changes to http.conf ?

On a side note, will a 'finally:' clause be executed even if the 'except:'
clause contains 'return' ? Or should I have result = apache.<whatever> and
place return result in the finally clause ?

Here is my authentication handler:

from mod_python import apache
import ldap,ldap.sasl
import MyConfig

def authenhandler(req):

	# import our configuration file to find our LDAP server
	config = MyConfig.Config()

	# show the password dialog, retrieve password and user
	pw = req.get_basic_auth_pw()
	email = req.user

	# get a sasl authentication object
	
sasl_auth=ldap.sasl.sasl({ldap.sasl.CB_AUTHNAME:email,ldap.sasl.CB_PASS:pw},
'DIGEST-MD5')
	
	# open a connection to our LDAP server
	try:
		l = ldap.open(config["LDAP:server"])

		# attempt to bind to the LDAP server
		try:
			l.sasl_interactive_bind_s("",sasl_auth)
			dn = l.whoami_s()
			l.unbind()
			return apache.OK
		except ldap.LDAPError,e:
			l.unbind()
			return apache.HTTP_UNAUTHORIZED
	except ldap.LDAPError,e:
		l.unbind()
		return apache.HTTP_UNAUTHORIZED

and my httpd.conf contains:

	<snip>
User apache
Group apache
ServerAdmin root@localhost
ServerName powell:80
UseCanonicalName Off
DocumentRoot "/usr/var/www/htdocs"
PythonPath "sys.path+['/usr/var/www/lib']"
# Following did not work as expected
# PythonImport PMHx_Config powell
<Directory />
    Options FollowSymLinks
    AllowOverride None
</Directory>
<Directory "/usr/var/www/htdocs">
    AddHandler mod_python .psp
    PythonHandler mod_python.psp
    PythonDebug On
    Options Indexes FollowSymLinks
    AllowOverride None
    Order allow,deny
    Allow from all
</Directory>
<Directory "/usr/var/www/htdocs/administration">
    AddHandler mod_python .psp
    PythonHandler mod_python.psp
	PythonAuthenHandler authenticate
	PythonDebug On
	AuthType Basic
	AuthName "Restricted Area"
	require valid-user
</Directory>
	<snip>

Thanks
-al



From grahamd at dscpl.com.au  Sat Jun  4 00:19:21 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Sat Jun  4 00:19:40 2005
Subject: [mod_python] Spawning Long Running Processes
In-Reply-To: <CC1ECBF7-F1DE-44EE-9DA8-F91581BE9BB2@btinternet.com>
References: <CC1ECBF7-F1DE-44EE-9DA8-F91581BE9BB2@btinternet.com>
Message-ID: <c3e7fffd011e61dfd45547ef66679f2d@dscpl.com.au>


On 04/06/2005, at 4:56 AM, Michael Rushton wrote:

> Hello,
> What is the best way to spawn a process from a mod_python that could 
> take several hours to complete?

How much data needs to be communicated between mod_python running under
Apache and the process doing the processing and generation of the file
at initiation of the process and then later?

> I am trying to write a handler that when accessed for the first time 
> spawns a long running process that writes to a file. On subsequent 
> accesses, the handler would show the contents of the file produced by 
> the long process, refreshing the page occasionally with meta refresh 
> tags.
>
> I have had a stab at achieving this by double forking the process. 
> This however, has had the disadvantage that for really long running 
> processes   the forked processes still seem to be bound to port 80 
> thus preventing httpd daemon restarts. A problem when you want to 
> update apache configuration settings.
>
> What am I doing wrong? And what is the accepted way for spawning long 
> lived processes from mod_python?
>
> I would be very grateful if someone could point me to some source 
> examples that show how to achieve this.

I would avoid forking and perhaps look at a system where you always
have a persistent back end process running all the time. Ie., it would
not be created just at the time the request came in but would already
exist, ready and waiting.

When a request comes in, the mod_python code could trigger an XML-RPC
request, or some other form of interprocess communications, which asks
the long lived back end process to start off what it needs to do to 
create
the file. Provided that the back end process is not written so as to
completely block while generating the file, a subsequent request could
again use something like XML-RPC to query whether it has finished or
at least where it is up to. When it gets a positive response that the
back end processing has finished, if it is a small amount of data it
could be returned in the XML-RPC response, or if a lot, the mod_python
side could just be returned the name of the file which it then tells
Apache to deliver back as the response.

For one example of a package that could be used to implement such a
back end system, have a look at OSE (http://ose.sourceforge.net). This
has the means using event driven models of programming or appropriate
use of threads to allow a long running job to run in the back end system
but still allow the system to be communicable using XML-RPC or over
its own messaging system. Both these communication means can be accessed
from mod_python handlers.

Anyway, have a look at the documentation for the Python wrappers for
OSE. You may not like OSE because at its core it is C++ (not that you
have to even use C++), but it may give you some ideas. Can help if you
are interested in going this path.

Graham

From grahamd at dscpl.com.au  Sat Jun  4 00:37:20 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Sat Jun  4 00:37:32 2005
Subject: [mod_python] PythonAuthenHandler Question
In-Reply-To: <003f01c56878$1df4e4c0$347ba8c0@Laptop8100>
References: <003f01c56878$1df4e4c0$347ba8c0@Laptop8100>
Message-ID: <1a6ff6f05719539209e586f1753fd528@dscpl.com.au>


On 04/06/2005, at 6:09 AM, Al Pacifico wrote:

>
> Apologies in advance because I come from an Apache 1.3 / mod_perl 
> background
> and am rusty at that to boot.
>
> I'm wondering how to use PythonAuthenHandler to set my client's 
> directory
> viewing permissions. I'm authenticating against an openLDAP server and 
> the
> basic authentication works.

If I understand you correctly, since you already have the authentication
bit working, you just want the user authorisation bit. Ie., control what
they can access. If this is the case, you should be able to access 
"req.uri",
ie., the resource which the request is against, and in conjunction with
the user credentials you already have access to, work out if they should
be allowed access. You should be able to do this within you 
authenhandler
and would not need a separate authzhandler.

Have I misunderstood? Obviously I can't say how you determine if a URL 
is
accessible to a specific user, as that is going to depend on your 
requirements.

> On a side note, will a 'finally:' clause be executed even if the 
> 'except:'
> clause contains 'return' ? Or should I have result = apache.<whatever> 
> and
> place return result in the finally clause ?

 From memory, you can't have a "finally" clause at the same level as 
"except".
Ie., if you can't have:

   try:
     ...
   except:
     ...
   finally:

Thus, if you want a finally clause, you must do:

   try:
     try:
       ...
     except:
       ...
   finally:
     ...

As example, if you have:

   def func():
     try:
       try:
         raise 1
       except:
         print "except"
         return "except"
     finally:
       print "finally"
       #return "finally"

   print func()

the result printed out from "func()" will be "except". If you however
uncomment the return from the "finally", the result printed out will
be "finally".

Thus, as long as the "finally" doesn't have an explicit return, the
return from the "except" will be the result of the function in the
case that the exception is raised.

Someone please correct me if I am wrong.

Graham

From list at joreybump.com  Sat Jun  4 01:35:47 2005
From: list at joreybump.com (Jorey Bump)
Date: Sat Jun  4 01:36:04 2005
Subject: [mod_python] mod_python w/apache 2.1.3-beta?
Message-ID: <42A13DB3.5050407@joreybump.com>

I've just installed apache 2.1.3-beta, and installed mod_python 3.1.4. 
When I try to start apache, I get this error:

httpd: Syntax error on line 282 of /usr/local/apache2/conf/httpd.conf: 
Cannot load /usr/local/apache2/modules/mod_python.so into server: 
/usr/local/apache2/modules/mod_python.so: undefined symbol: 
APR_STATUS_IS_SUCCESS

Is mod_python incompatible with this version of apache?
From grahamd at dscpl.com.au  Sat Jun  4 09:02:00 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Sat Jun  4 09:02:17 2005
Subject: [mod_python] Re: Sessions and Cheetah
In-Reply-To: <20050603120246.GA12889@nic.fr>
References: <429F848B.5000203@cnri.reston.va.us>
	<ceaf34d74870f39305449ee6152e1c79@dscpl.com.au>
	<20050603120246.GA12889@nic.fr>
Message-ID: <5ba37fa820172919bad01b9d79571c4a@dscpl.com.au>


On 03/06/2005, at 10:02 PM, Stephane Bortzmeyer wrote:

> On Fri, Jun 03, 2005 at 08:44:37AM +1000,
>  Graham Dumpleton <grahamd@dscpl.com.au> wrote
>  a message of 49 lines which said:
>
>> In the mean time, if you want to look at some code for a working 
>> example
>> of a session based login, check out:
>>
>>   http://svn.dscpl.com.au/vampire/trunk/examples/session/
>
> There is still something missing from that directory, I believe, for
> the Cheetah users. The above example works locally for me but, if I
> have a handler for Cheetah in ".vampire", it no longer works: I can
> see the index page, I'm never redirected to the login page (and there
> are no error messages).

Not sure if when you were experimenting if you were doing so in place in
the Vampire source tree or if you extracted it out into your own area.
If you extracted it into your own area, you may have been missing some
of the Apache configuration which was inherited from the .htaccess file
in the root of the Vampire source code. Alternatively, if you were
actually using Vampire 1.6 with the later examples off the site, there
is a possibility that the examples depended on something in unreleased
version, although I didn't think that was the case.

Anyway, I have been playing with it a bit today which in itself has been
useful as it uncovered a few problems in Vampire in my working version
but also some shortcomings of released versions which I have now fixed.

If you are able to check out of the subversion repository the very 
latest
source code for Vampire, you'll get the updated example which has been
modified so as to use Cheetah templates for the various pages. One could
also throw PSP pages in the directory and they should work, along with
any specific handlers that may have been defined. The example will not
work with older released versions because of the bugs and shortcomings
I uncovered.

I'll try and add some more comments to the example code tomorrow and
maybe fiddle the pages a bit to link them together. Am sure I will find
other things to fiddle, but must resist as need to get Vampire 1.7 
released.
I think I have done everything now that I wanted to, just need to check
that I didn't break anything obvious. :-)

Is late .....

Graham

From list at joreybump.com  Sat Jun  4 09:26:46 2005
From: list at joreybump.com (Jorey Bump)
Date: Sat Jun  4 09:26:57 2005
Subject: [mod_python] mod_python w/apache 2.1.3-beta?
In-Reply-To: <42A13DB3.5050407@joreybump.com>
References: <42A13DB3.5050407@joreybump.com>
Message-ID: <42A1AC16.2080209@joreybump.com>

Jorey Bump wrote:
> I've just installed apache 2.1.3-beta, and installed mod_python 3.1.4. 
> When I try to start apache, I get this error:
> 
> httpd: Syntax error on line 282 of /usr/local/apache2/conf/httpd.conf: 
> Cannot load /usr/local/apache2/modules/mod_python.so into server: 
> /usr/local/apache2/modules/mod_python.so: undefined symbol: 
> APR_STATUS_IS_SUCCESS
> 
> Is mod_python incompatible with this version of apache?

 From apache 2.1.3-beta CHANGES:

*) Remove deprecated/removed APR_STATUS_IS_SUCCESS().  [Justin Erenkrantz]

So I removed the references in the following mod_python source files:

dist/src/filterobject.c
dist/src/connobject.c

Everything seems to work fine, now.
From eric at ericwalstad.com  Sat Jun  4 15:11:31 2005
From: eric at ericwalstad.com (Eric Walstad)
Date: Sat Jun  4 15:08:24 2005
Subject: [mod_python] Spawning Long Running Processes
In-Reply-To: <CC1ECBF7-F1DE-44EE-9DA8-F91581BE9BB2@btinternet.com>
References: <CC1ECBF7-F1DE-44EE-9DA8-F91581BE9BB2@btinternet.com>
Message-ID: <E1Dee3R-0005b5-5O@localhost>

Michael Rushton writes: 

> Hello,
> What is the best way to spawn a process from a mod_python that could  take 
> several hours to complete?

Hi, 

Perhaps this thread might help:
<http://www.modpython.org/pipermail/mod_python/2004-June/015719.html> 

Best of luck, 

Eric.
From administrator at leebrown.org  Sat Jun  4 16:04:59 2005
From: administrator at leebrown.org (Lee Brown)
Date: Sat Jun  4 16:05:27 2005
Subject: [mod_python] Accessing objects loaded with PythonImport
In-Reply-To: <388F06E86205@underdog>
Message-ID: <527844F140E0@underdog>

 Greetings!

First, thanks to all who sent replies; they were very helpful.  I have
solved the problem and I am posting it here for future reference:

My first step was to ensure that site_setup.py was actually executing at
server initialization, so I changed it to this:

	file = open('junkspace.txt', 'w')
	file.write("It's magic, I tell you!")
	file.close()
	fetch = open('junkspace.txt', 'r')
	magic_string = fetch.read()
	fetch.close()

By watching the file timestamp, I would be able to see when 'junkspace.txt'
was being touched.

But 'junkspace'txt' never appeared.  So I tried adding this to
xmlhandler.py:

	import site_config.py

Now 'junkspace.txt' was being created, but it updated only when
xmlhandler.py was being called by a request.  Not the results I was looking
for; the context of site_config was within xmltest.py and not within the
subinterpreter as was intended.  So I went back and very carefully checked
the mod_python docs, sections 4.1 and 5.4; and the python C API, section 8.
It turns out that I had made a mistake in my initial setup:  My PythonImport
statement was not in the 'main' section of httpd.conf as I originally
thought; it inadvertantly ended up in a 'vhosts' section.  So I made these
changes:

In httpd.conf 'main'

	...
	AddHandler mod_python .py
	PythonPath ...(snipped for brevity)...
	PythonImport site_setup.py crashtest
	...

And then in my vhosts configuration:

	<VirtualHost *:80>
		ServerName crashtest.leebrown.org
		...
		PythonInterpreter crashtest
		PythonDebug On
		...

Poof!  Now 'junkspace.txt' updates only on server startup and 'from
site_setup import magic_string' returns the correct results within the
context of the handler.

For reference, I found the documentation for the Py_NewInterpreter function
to be most useful.  By examining the contents of sys.modules I was able to
verify which objects were showing up in which namespaces - very handy, and
since sys.modules is always globally available within an interpreter. It can
be inspected even if other parts of your code are falling apart like a clown
car at the circus.

So it turns out that the answer was indeed 'dirt simple:' check your setup
carefully, and read the documentation thoroughly!

Best Regards,
Lee E. Brown
(administrator@leebrown.org)


From administrator at leebrown.org  Sat Jun  4 17:40:18 2005
From: administrator at leebrown.org (Lee Brown)
Date: Sat Jun  4 17:41:05 2005
Subject: [mod_python] Accessing objects loaded with PythonImport
In-Reply-To: <5c6b9bd58118605d0871d4f37a09fea1@dscpl.com.au>
Message-ID: <52CF96BA6F2B@underdog>

Greetings!

After reading both Nicolas' and Graham's comments, it seems that there's an
unspoken question:

"Why on Earth are you writing YAPWF (Yet Another Python Web Framework) when
you can't hardly avoid tripping over a dozen good ones, already written?"

'Tis a good question.

First, a little background:  I don't program for a living.  In fact, in real
life(tm) I'm a mechanical engineer whose daily professional life is all
about nuts and bolts and gears and what-not.  I write code because, well, I
like writing code.  It's fun for me because I can never resist a puzzle and
programming is all about solving puzzles in one form or another.  If I were
doing this for a living on a live production site, I would indeed seek out
and implement one of the many good, exisiting Python based frameworks.  But
where's the fun in that?

Let me explain what I'm trying to accomplish with my current mod_python
project, and maybe some folks might care to comment on it:

I host about a half-dozen web sites for my friends and colleagues.  None of
these sites are anything more than 'hobby' sites, really.  One of them is
bulletin board for a friend who likes to compose music and share
compositions with other composers.  On another site, my brother has
emendations of Shakespeare's works which he shares with other Shakespeare
scholars.  None of these sites go more than a dozen pages deep, and none of
them scores more than a couple-dozen hits per day.  I do it just because I
like doing it.

However, keeping everything up-to-date started to consume a lot of my time.
The first thing I tried was to enable webDAV so the site owners could update
their own content.  Jeeze, what a disaster!  WebDAV is fine for
authentication and authorization, but it does nothing to stop owners from
uploading broken code and the inevitable crash n' burn that results.  (My
site owners are all bright people but they are NOT programmers!)

So then I tried writing a python program that would automatically validate
new code against the W3C validation servers.  That worked fine for stopping
bad code but it did nothing about FIXING it.  So it was still taking up more
of my time than I'd rather.

So then I tried to find a way to keep bad code from happening, period.  I
decided to go with XML; I made up an XML Schema for the site owners and set
them up with an XML authoring tool suitable for their hardware platform.
Now they can change content to their heart's content and that content will
be validated before it even gets to me.  And by using XSLT as a templating
engine, I could ensure that the pages were transformed into properly
formatted, valid xhtml.

However, I was still stuck with linking up the pages and making sure the
site navigation was fixed up properly.  I also had to keep a watch for new
content and run it through an XSLT process to transform it into xhtml.

So this is my current Holy Grail project: A self-administrating,
self-configuring, self-healing web server based on XML and XSLT.  OF all the
frameworks I looked at, Apache's Forrest was the closest thing to what I
wanted.  It is entirely XML driven and is self-building, but unfortunately
it A) runs on Java, a language I've successfully avoided so far, and B) it's
rather complicated for my needs.

Besides, writing it yourself is half the fun, right?

The skeleton of my code runs something like this:

For each vhost on server startup:
	
	Execute /serverroot/config/site_config.py to get the site's default
CSS, JavaScript, Schema, and XSLT template information.
	Walk the file system path starting with the document root.  (All
vhost docroots start at '/severroot/home'.)
	For each subdirectory (recursive) containing a file called
'page.xml':
		Validate the page against the schema
		Build a site navigation structure using the file system path
as the navigation tree path.
		Transform 'page.xml' into 'page.html' using XSLT, merging in
the navigation structure.
		(If any of these steps fail, the page is skipped over and
replaced with an error page.)

(In this way, the entire site is rebuilt on a server restart with only
known, valid code.)

For each request of the form 'www.site.name/path/to/page':

	Look for 'page.html' in docroot/path/to/page
	Compare the file system timestamps for 'page.xml' and 'page.html'
	If 'page.xml' is newer than 'page.html':
		retransform 'page.xml' into 'page.html' through the XSLT
engine
		(If transform fails, set 'page.html' to an error page)
	Serve page.html

Now each site owner can upload new content for existing pages and have those
changes incorporate immediately.  The Webmaster and ONLY the Webmaster
(read: me) can upload changes to CSS, JavaScripts, XSLT Templates, and other
sensitive bits.  As the Apache HTTP Server can be issued a restart command
from a remote computer, I can implement changes without being in front of
the hosting computer.  And if it all falls apart, I can remotely reconfigure
the server to disable the python handler and just serve the existing html
until I have time to sit down and properly sort things out.

All of which no doubt raises yet another unspoken question: "Boy, you sure
do have a weird definition of 'fun', don't you?"

Best Regards,
Lee E. Brown
(administrator@leebrown.org)


From pacifico at drizzle.com  Sat Jun  4 19:54:47 2005
From: pacifico at drizzle.com (Al Pacifico)
Date: Sat Jun  4 19:55:15 2005
Subject: [mod_python] PythonAuthenHandler Question
Message-ID: <006301c56960$cd520a90$347ba8c0@Laptop8100>

So, I'm perhaps partly able to answer my previous question(s) and will post
some code once I get it working perfectly. At present, I've gotten much
closer using the requires() method of request object.

My error log is cropping up with:
	'access to <page> failed, reason unknown require directive:
"administrator"'
	'access to <page> failed, reason user <user name> not allowed
access'

My authentication handler seems to execute correctly, but then a core apache
handler is picking up the request and canning it.
I've been using the require directive as "require administrator" and therein
lies the problem. But I wish to allocate access on a per-directory basis to
members of the administrator group.

Two questions:
1. How do I remove the core handler from my request's authentication phase
handler chain on a per-directory basis, so that my handler is the only one
registered to authenticate?
2. If I can't do that, how do I pass information on a per-directory basis
from httpd.conf to my handler? If I can do that by some technique, then I
can change 'require administrator' to 'require valid-user' (simply to
trigger the authentication handler) and call it good.

I can think of lots of ugly solutions. One is to place a file in each
directory encoding which groups are able to access that directory and have
my handler read it in (and probably cache it in a dictionary to speed future
authentications), but I prefer the elegance of the httpd.conf solution.

Again, mod_auth_ldap probably will not work with ldap sasl queries, which I
am compelled to use. Grepping the source code for 'sasl' comes up empty.
 
now my httpd.conf contains:

	<snip>
User apache
Group apache
ServerAdmin root@localhost
ServerName powell:80
UseCanonicalName Off
DocumentRoot "/usr/var/www/htdocs"
PythonPath "sys.path+['/usr/var/www/lib']"
# Following did not work as expected
# PythonImport PMHx_Config powell
<Directory />
    Options FollowSymLinks
    AllowOverride None
</Directory>
<Directory "/usr/var/www/htdocs">
    AddHandler mod_python .psp
    PythonHandler mod_python.psp
    PythonDebug On
    Options Indexes FollowSymLinks
    AllowOverride None
    Order allow,deny
    Allow from all
</Directory>
<Directory "/usr/var/www/htdocs/administration">
    AddHandler mod_python .psp
    PythonHandler mod_python.psp
	PythonAuthenHandler authenticate
	PythonDebug On
	AuthType Basic
	AuthName "Restricted Area"
	require administrator
</Directory>
	<snip>
Al Pacifico
Seattle, WA

Apologies in advance because I come from an Apache 1.3 / mod_perl background
and am rusty at that to boot.

I'm wondering how to use PythonAuthenHandler to set my client's directory
viewing permissions. I'm authenticating against an openLDAP server and the
basic authentication works.

Depending on the identity of the client, some directories should be
accessible and some should not. With a little additional code, I can assign
the client a category. I figure that I should be using a require <usertype>
directive within my httpd.conf and setting a variable in the request object
to describe the category. Alternatively, I might need to write a
PythonAuthzHandler, but the documentation on this is sparse and I'd rather
not bind to the LDAP server twice if I can avoid it.

I thought about using mod_auth_ldap instead, but review of documentation
suggest that it doesn't know how to bind to openLDAP using SASL
authentication, and I cannot change to another authentication scheme.

Could someone provide an example or suggest changes to my handler and
corresponding changes to http.conf ?

On a side note, will a 'finally:' clause be executed even if the 'except:'
clause contains 'return' ? Or should I have result = apache.<whatever> and
place return result in the finally clause ?

Here is my authentication handler:

from mod_python import apache
import ldap,ldap.sasl
import MyConfig

def authenhandler(req):

	# import our configuration file to find our LDAP server
	config = MyConfig.Config()

	# show the password dialog, retrieve password and user
	pw = req.get_basic_auth_pw()
	email = req.user

	# get a sasl authentication object
	
sasl_auth=ldap.sasl.sasl({ldap.sasl.CB_AUTHNAME:email,ldap.sasl.CB_PASS:pw},
'DIGEST-MD5')
	
	# open a connection to our LDAP server
	try:
		l = ldap.open(config["LDAP:server"])

		# attempt to bind to the LDAP server
		try:
			l.sasl_interactive_bind_s("",sasl_auth)
			dn = l.whoami_s()
			l.unbind()
			return apache.OK
		except ldap.LDAPError,e:
			l.unbind()
			return apache.HTTP_UNAUTHORIZED
	except ldap.LDAPError,e:
		l.unbind()
		return apache.HTTP_UNAUTHORIZED

and my httpd.conf contains:

	<snip>
User apache
Group apache
ServerAdmin root@localhost
ServerName powell:80
UseCanonicalName Off
DocumentRoot "/usr/var/www/htdocs"
PythonPath "sys.path+['/usr/var/www/lib']"
# Following did not work as expected
# PythonImport PMHx_Config powell
<Directory />
    Options FollowSymLinks
    AllowOverride None
</Directory>
<Directory "/usr/var/www/htdocs">
    AddHandler mod_python .psp
    PythonHandler mod_python.psp
    PythonDebug On
    Options Indexes FollowSymLinks
    AllowOverride None
    Order allow,deny
    Allow from all
</Directory>
<Directory "/usr/var/www/htdocs/administration">
    AddHandler mod_python .psp
    PythonHandler mod_python.psp
	PythonAuthenHandler authenticate
	PythonDebug On
	AuthType Basic
	AuthName "Restricted Area"
	require valid-user
</Directory>
	<snip>

Thanks
-al



_______________________________________________
Mod_python mailing list
Mod_python@modpython.org
http://mailman.modpython.org/mailman/listinfo/mod_python




From coldoherty68 at yahoo.co.uk  Sun Jun  5 12:04:47 2005
From: coldoherty68 at yahoo.co.uk (Colin Doherty)
Date: Sun Jun  5 12:04:53 2005
Subject: [mod_python] Source code displayed by Mozilla/Firefox
Message-ID: <20050605160447.95587.qmail@web25510.mail.ukl.yahoo.com>

Hi,

I'm using mod_python servlets and psp and although the
code works correctly for IE, the source code of the
template is displayed with Mozilla and Firefox when
called from the servlet.

I'm setting the content type within the servlet:

class test(Servlet):
  content_type = 'text/html'

and calling the template thus:

  def respond(self):
    Servlet.respond(self)
    template = PSP(self.req, filename='test.html')
    template.run({'servlet':self})
    return True

Any suggestions appreciated. 

TIA
Colin


	
	
		
___________________________________________________________ 
Yahoo! Messenger - NEW crystal clear PC to PC calling worldwide with voicemail http://uk.messenger.yahoo.com
From pacifico at drizzle.com  Sun Jun  5 13:32:10 2005
From: pacifico at drizzle.com (Al Pacifico)
Date: Sun Jun  5 13:32:48 2005
Subject: [mod_python] PythonAuthenHandler Question SOLVED
Message-ID: <007d01c569f4$84140b50$347ba8c0@Laptop8100>


I answered my question posed yesterday moments after submitting it. The idea
of subclassing a handler occurred to me, but I realized it was inflexible
(if there were five groups and there were various required combinations I'd
need 5! handlers). The PythonOption directive was what I needed (rather than
the require method) and not thinking of it was a novice move!

I'm posting the handler and the corresponding httpd.conf section in case it
helps anyone. If you look it over and have any input, please post it. To
those who responded to my posts, thanks for your input.

-al

<--- authenticate.py --->

from mod_python import apache
import ldap,ldap.sasl
import example_Config
import re

# this dictionary "client_group_match" contains keys that should match the
first argument to
# PythonOption directives in the httpd.conf file. The values are python
regular expression object
# that determine if the argument to the method (a single string which
represents the distinguished
# methods name of the client) matches the corresponding directive. Calls to
these methods return a
# match object if there is a match and None if there is not.
client_group_match={}
client_group_match['clientadministrator'] = \
	
re.compile('cn=administrators,o=([^,]*),ou=clients,dc=example,dc=com',re.IGN
ORECASE).match
client_group_match['clientagent'] = \
	
re.compile('cn=agents,o=([^,]*),ou=clients,dc=example,dc=com',re.IGNORECASE)
.match
client_group_match['exampleadministrator'] = \
	
re.compile('cn=administrators,ou=groups,dc=example,dc=com',re.IGNORECASE).ma
tch

def authenhandler(req):

	# import our configuration file to find our LDAP server
	config = Config.Config()

	# show the password dialog, retrieve password and user
	pw = req.get_basic_auth_pw()
	email = req.user

	# get a sasl authentication object
	sasl_auth =
ldap.sasl.sasl({ldap.sasl.CB_AUTHNAME:email,ldap.sasl.CB_PASS:pw},'DIGEST-MD
5')
	
	# open a connection to our LDAP server
	# initialize LDAPObject with domain name / ip of our sever
	l = ldap.open(config["LDAP:server"])

	# attempt to bind to the LDAP server
	try:
		l.sasl_interactive_bind_s("",sasl_auth)
			
		try:
			# retrieve client's distinguished name (dn), remove
the prepended dn: that the
			# LDAPObject.whomai_s() method returns, and
normalize it to lower case
			client_dn = l.whoami_s().lower()[3:]
			
			# Access to this page is restricted to whom?
			restricted_to =
req.get_options().get('permitted',None)

			if restricted_to:
				# process arguments to the 'permitted'
PythonOption : split on commas, remove whitespace
				# at end and beginning, condense whitespace
between the words to a single space, and
				# normalize to all lower case
				restricted_to=['
'.join(perm_args.split(None)).lower() for perm_args in
restricted_to.split(',')]
				
				# determine which groups the client belongs
to by searching all the groups in the LDAP tree
				client_groups=[]
				# the following code is dependent on the
ldap directory structure
	
groups=l.search_s("dc=example,dc=com",ldap.SCOPE_SUBTREE,"objectclass=groupO
fNames",["member"])
				for (group_dn,group_attr) in groups:
					# lower case the distinguished names
of the members of the group to permit string
					# equality comparison with the
distinguished name returned by the LDAPObject.whoami_s()
					# method
					group_attr['member'] = [s.lower()
for s in group_attr['member']]
	
					# debugging
					req.log_error('%s contains %s' %
(group_dn,group_attr['member']))
				
					# if the client's dn is a member of
the group, add the group to our list
					if client_dn in
group_attr['member']: client_groups.append(group_dn.lower())

				# test if the dn of any member of client's
groups matches the dn's of the groups which are
				# permitted to access this request At this
point, client is authenticated and only possible
				# results are HTTP_FORBIDDEN and OK
				result = apache.HTTP_FORBIDDEN
				for client_role in client_groups:
					if result == apache.HTTP_FORBIDDEN:
						for role_permitted in
restricted_to:
							if
client_group_match.has_key(role_permitted) and \
	
client_group_match[role_permitted](client_role):
								result =
apache.OK
							else:
								# require
directive contains bad arguments - log this to the  error log
	
req.log_error('Bad arguments to require directive at %s.' % req.filename)
					else: break

				return result
			else:
				# restricted_to was None, so there are no
restrictions.
				return apache.OK
		finally:
			l.unbind()
	except ldap.SERVER_DOWN,e:
		# can't contact the LDAP server
		return apache.HTTP_INTERNAL_SERVER_ERROR
	except ldap.LDAPError,e:
		# client couldn't authenticate. Returning HTTP_UNAUTHORIZED
gives him an opportunity to try again
		return apache.HTTP_UNAUTHORIZED

httpd.conf section follows:

PythonPath "sys.path+['/usr/var/www/lib']"
# Following did not work as expected
# PythonImport PMHx_Config powell
<Directory />
    Options FollowSymLinks
    AllowOverride None
</Directory>
<Directory "/usr/var/www/htdocs">
    AddHandler mod_python .psp
    PythonHandler mod_python.psp
    PythonDebug On
    Options Indexes FollowSymLinks
    AllowOverride None
    Order allow,deny
    Allow from all
</Directory>
<Directory "/usr/var/www/htdocs/administration">
    AddHandler mod_python .psp
    PythonHandler mod_python.psp
	PythonAuthenHandler authenticate
	PythonOption permitted ExampleAdministrator
	PythonDebug On
	AuthType Basic
	AuthName "Example Administration"
	require valid-user
</Directory>

Al Pacifico
Seattle, WA




From grahamd at dscpl.com.au  Sun Jun  5 18:14:37 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Sun Jun  5 18:14:48 2005
Subject: [mod_python] Source code displayed by Mozilla/Firefox
In-Reply-To: <20050605160447.95587.qmail@web25510.mail.ukl.yahoo.com>
References: <20050605160447.95587.qmail@web25510.mail.ukl.yahoo.com>
Message-ID: <3be1d327a95a1e68d451170a344c4eb1@dscpl.com.au>


On 06/06/2005, at 2:04 AM, Colin Doherty wrote:
> I'm using mod_python servlets and psp and although the
> code works correctly for IE, the source code of the
> template is displayed with Mozilla and Firefox when
> called from the servlet.
>
> I'm setting the content type within the servlet:
>
> class test(Servlet):
>   content_type = 'text/html'
>
> and calling the template thus:
>
>   def respond(self):
>     Servlet.respond(self)
>     template = PSP(self.req, filename='test.html')
>     template.run({'servlet':self})
>     return True
>
> Any suggestions appreciated.

Are you using mpservlets as the actual handler, ie.:

   AddHandler python-program .mps
   PythonHandler mod_python.servlet

or triggering mpservlets from a handler of your own creation somehow?

What is the URL you are using for the request? Are you using "test.mps",
"test.html" or just "test" with no extension?

Given you say it works for one browser and not another, then can only
speculate that based on request headers sent by browser Apache is making
a different decision as to what to serve up. This though could only
be the case though if "MultiViews" was enabled and you were using URL
of just "test" with no extension and Apache was as a result was having 
to
make a choice between serving up "test.html" as a static file or running
the mod_python handler for "test.mps".

If these assumptions are somehow right, make sure you disable MultiViews
by specifying in your Apache configuration:

   Options -MultiViews

for that part of the directory heirachy, and make sure you always use
"test.mps" explicitly. You might lesson the risk of a problem by still
calling your PSP file "test.psp" and not "test.html" and then forbidding
direct access to all .psp files using:

   <Files *.psp>
   deny from all
   </Files>

in your Apache configuration.

BTW, why specifically are you using mpservlets as when using PSP you may
find they don't mesh very well? For example, one of the points of using
mpservlets is that by supplying its own write/writeln methods in the
servlet it does its own buffering of output. Because PSP is going to
write direct to the request object using req.write(), the buffering in
mpservlets is bypassed. Another reason people use mpservlets is that it
has some session support, but then so does PSP.

Overall, only thing I see where you perhaps gain something from 
mpservlets
with the way you are using it, is the fact that it can dispatch to 
different
handlers contained in separate files in the same directory. If this is
all you are really after, you may find it less complicated to use 
Vampire.
If you are using mpservlets because the handler is then an object, that
is easy enough to accomplish with basic handlers as the handler can be
any callable object anyway and it would be straight forward to write 
your
own servlet like handler better suited to how you want to do things.

Graham






From melchakov at gmail.com  Mon Jun  6 03:39:26 2005
From: melchakov at gmail.com (Alexey Melchakov)
Date: Mon Jun  6 03:39:31 2005
Subject: [mod_python] mod_python and threading.Thread doesn't start
Message-ID: <d9c459bb05060600396accfcb0@mail.gmail.com>

Hi.
I'm using mod_python 3.1.4, apache 2.0.x/prefork and python2.4.
The following code doesn't work:

from mod_python import apache
import threading

def something():
open('/tmp/thread', 'w').close()

def handler(req):
threading.Thread(target=something).start()
return apache.OK

Browser request successfully hits the handler(), and no errors occure, but 
something() is not called (no file on filesystem after request).

If I insert logging statements after thread initialization and a call of 
start() thread object looks like this:
<Thread(Thread-1, initial)>
<Thread(Thread-1, started)>

I'm not good with threading and this might be very ordinary situation, dont 
really know. Please help.

-- 
melchakov@gmail.com
CRV-RIPN
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20050606/c63afaaa/attachment.html
From grahamd at dscpl.com.au  Mon Jun  6 07:02:49 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Mon Jun  6 07:03:12 2005
Subject: [mod_python] mod_python and threading.Thread doesn't start
In-Reply-To: <d9c459bb05060600396accfcb0@mail.gmail.com>
References: <d9c459bb05060600396accfcb0@mail.gmail.com>
Message-ID: <4903bca88330cb8976ce42fe427f443b@dscpl.com.au>


On 06/06/2005, at 5:39 PM, Alexey Melchakov wrote:

>
>  Hi.
>  I'm using mod_python 3.1.4, apache 2.0.x/prefork and python2.4.
>  The following code doesn't work:
>
>  from mod_python import apache
>  import threading
>
>  def something():
>  ??? open('/tmp/thread', 'w').close()
>
>  def handler(req):
>  ??? threading.Thread(target=something).start()
>  ??? return apache.OK
>
> Browser request successfully hits the handler(), and no errors occure, 
> but something() is not called (no file on filesystem after request).
>
>  If I insert logging statements after thread initialization and a call 
> of start() thread object looks like this:
>  <Thread(Thread-1, initial)>
>  <Thread(Thread-1, started)>
>
>  I'm not good with threading and this might be very ordinary 
> situation, dont really know. Please help.

Try the following code instead so that you can see if a Python 
exception is
being raised within the thread. One possibility is that you might be 
running
up against a strange problem seen by a few people which hasn't really 
been
worked out yet. One previous post where someone had this problem was:

   http://www.modpython.org/pipermail/mod_python/2005-January/017129.html

for more details.

Anyway, let us know what the following produces.


import threading
import time
from mod_python import apache

def openfiletest(req):
     try:
         a = file("/tmp/test", "w")
         req.write("file() was OK\n")
     except Exception, e:
         req.write("file() threw exception: " + str(e) + "\n")

def handler(req):
     req.write("In main thread: ")
     openfiletest(req)
     req.write("In child thread: ")
     t = threading.Thread(target=openfiletest, args=(req,) )
     t.start()
     time.sleep(1)
     return apache.OK



From melchakov at gmail.com  Mon Jun  6 07:14:47 2005
From: melchakov at gmail.com (Alexey Melchakov)
Date: Mon Jun  6 07:14:52 2005
Subject: [mod_python] mod_python and threading.Thread doesn't start
In-Reply-To: <4903bca88330cb8976ce42fe427f443b@dscpl.com.au>
References: <d9c459bb05060600396accfcb0@mail.gmail.com>
	<4903bca88330cb8976ce42fe427f443b@dscpl.com.au>
Message-ID: <d9c459bb0506060414e52ef2@mail.gmail.com>

You were right, it's all about restricted mode. Is there any solvation
for this problem?

Output:

In main thread: file() was OK
In child thread: file() threw exception: file() constructor not
accessible in restricted mode



On 6/6/05, Graham Dumpleton <grahamd@dscpl.com.au> wrote:
> 
> 
> On 06/06/2005, at 5:39 PM, Alexey Melchakov wrote:
> 
> Try the following code instead so that you can see if a Python
> exception is
> being raised within the thread. One possibility is that you might be
> running
> up against a strange problem seen by a few people which hasn't really
> been
> worked out yet. One previous post where someone had this problem was:
> 
> http://www.modpython.org/pipermail/mod_python/2005-January/017129.html
> 
> for more details.
> 
> Anyway, let us know what the following produces.
> 
> 
> import threading
> import time
> from mod_python import apache
> 
> def openfiletest(req):
> try:
> a = file("/tmp/test", "w")
> req.write("file() was OK\n")
> except Exception, e:
> req.write("file() threw exception: " + str(e) + "\n")
> 
> def handler(req):
> req.write("In main thread: ")
> openfiletest(req)
> req.write("In child thread: ")
> t = threading.Thread(target=openfiletest, args=(req,) )
> t.start()
> time.sleep(1)
> return apache.OK
> 
> 
> 
-- 
melchakov@gmail.com
CRV-RIPN
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20050606/7eff8250/attachment.html
From grahamd at dscpl.com.au  Mon Jun  6 07:24:55 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Mon Jun  6 07:25:07 2005
Subject: [mod_python] mod_python and threading.Thread doesn't start
In-Reply-To: <d9c459bb0506060414e52ef2@mail.gmail.com>
References: <d9c459bb05060600396accfcb0@mail.gmail.com>
	<4903bca88330cb8976ce42fe427f443b@dscpl.com.au>
	<d9c459bb0506060414e52ef2@mail.gmail.com>
Message-ID: <0225aadb1c4011fbe25559cf33e87ebb@dscpl.com.au>

I have been developing an idea of what is wrong. Can you now try this 
slightly
different variation on the code and post back the result. Am interested 
in the
id of "__builtins__" and whether it is the same as 
"__builtin__.__dict__". On
my system they are actually the same object. Note this problem was 
possibly
only introduced with 2.3.5 and 2.4.

import threading
import time
from mod_python import apache

import __builtin__

def openfiletest(req):
     req.write(" builtins=%d "%id(__builtins__))
     req.write(" builtin=%d "%id(__builtin__.__dict__))
     try:
         a = file("/tmp/test", "w")
         req.write("file() was OK\n")
     except Exception, e:
         req.write("file() threw exception: " + str(e) + "\n")

def handler(req):
     req.write("In main thread: ")
     openfiletest(req)
     req.write("In child thread: ")
     t = threading.Thread(target=openfiletest, args=(req,) )
     t.start()
     time.sleep(1)
     return apache.OK

On 06/06/2005, at 9:14 PM, Alexey Melchakov wrote:

>
> You were right, it's all about restricted mode. Is there any solvation 
> for this problem?
>
> Output:
>
> In main thread: file() was OK
> In child thread: file() threw exception: file() constructor not 
> accessible in restricted mode
>
>
>
> On 6/6/05, Graham Dumpleton <grahamd@dscpl.com.au> wrote:
>
> On 06/06/2005, at 5:39 PM, Alexey Melchakov wrote:
>
> Try the following code instead so that you can see if a Python
> exception is
> being raised within the thread. One possibility is that you might be
> running
> up against a strange problem seen by a few people which hasn't really
> been
> worked out yet. One previous post where someone had this problem was:
>
> ?? 
> http://www.modpython.org/pipermail/mod_python/2005-January/017129.html
>
> for more details.
>
> Anyway, let us know what the following produces.
>
>
> import threading
> import time
> from mod_python import apache
>
> def openfiletest(req):
> ???? try:
> ???????? a = file("/tmp/test", "w")
> ???????? req.write("file() was OK\n")
> ???? except Exception, e:
> ???????? req.write("file() threw exception: " + str(e) + "\n")
>
> def handler(req):
> ???? req.write("In main thread: ")
> ???? openfiletest(req)
> ???? req.write("In child thread: ")
> ???? t = threading.Thread(target=openfiletest, args=(req,) )
> ???? t.start()
> ???? time.sleep(1)
> ???? return apache.OK
>
>
>
> -- 
> melchakov@gmail.com
> CRV-RIPN

From melchakov at gmail.com  Mon Jun  6 07:52:00 2005
From: melchakov at gmail.com (Alexey Melchakov)
Date: Mon Jun  6 07:52:06 2005
Subject: [mod_python] mod_python and threading.Thread doesn't start
In-Reply-To: <0225aadb1c4011fbe25559cf33e87ebb@dscpl.com.au>
References: <d9c459bb05060600396accfcb0@mail.gmail.com>
	<4903bca88330cb8976ce42fe427f443b@dscpl.com.au>
	<d9c459bb0506060414e52ef2@mail.gmail.com>
	<0225aadb1c4011fbe25559cf33e87ebb@dscpl.com.au>
Message-ID: <d9c459bb050606045248d1a146@mail.gmail.com>

On 6/6/05, Graham Dumpleton <grahamd@dscpl.com.au> wrote:
> 
> I have been developing an idea of what is wrong. Can you now try this
> slightly
> different variation on the code and post back the result. Am interested
> in the
> id of "__builtins__" and whether it is the same as
> "__builtin__.__dict__". On
> my system they are actually the same object. Note this problem was
> possibly
> only introduced with 2.3.5 and 2.4.
> 
Its already not possible for me to move from 2.3.4 from 2.4 ;)

the output of your code is:

In main thread:  builtins=1078010036  builtin=1078010036 file() was OK
In child thread:  builtins=1078010036  builtin=1078010036 file() threw
exception: file() constructor not accessible in restricted mode


I found a nice link on list: 
http://sourceforge.net/tracker/index.php?func=detail&aid=1163563&group_id=5470&atid=105470
there is fixed threadmodule.c for 2.4.1, will try to use it.

-- 
melchakov@gmail.com
CRV-RIPN
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20050606/b8035f5d/attachment.html
From grahamd at dscpl.com.au  Mon Jun  6 08:04:33 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Mon Jun  6 08:04:43 2005
Subject: [mod_python] mod_python and threading.Thread doesn't start
In-Reply-To: <d9c459bb050606045248d1a146@mail.gmail.com>
References: <d9c459bb05060600396accfcb0@mail.gmail.com>
	<4903bca88330cb8976ce42fe427f443b@dscpl.com.au>
	<d9c459bb0506060414e52ef2@mail.gmail.com>
	<0225aadb1c4011fbe25559cf33e87ebb@dscpl.com.au>
	<d9c459bb050606045248d1a146@mail.gmail.com>
Message-ID: <4e9aa9f4e6d35a71a263eb5cd8289acd@dscpl.com.au>


On 06/06/2005, at 9:52 PM, Alexey Melchakov wrote:
>  I found a nice link on list:  
> http://sourceforge.net/tracker/index.php? 
> func=detail&aid=1163563&group_id=5470&atid=105470
>  there is fixed threadmodule.c for 2.4.1, will try to use it.

Good. There seems to have been some progress on this since the last  
time I
looked at the link you refer to.

Doesn't bode well for the fact that I am about to get Mac OS X 10.4  
which
uses Python 2.3.5. Looks like the default Python version on the box will
be broken and I haven't ever seen Apple update Python between major OS
releases which will mean I will be stuck with it and will have to run
an older separate version of Python just for mod_python. :-(

Graham

From melchakov at gmail.com  Mon Jun  6 10:23:42 2005
From: melchakov at gmail.com (Alexey Melchakov)
Date: Mon Jun  6 10:23:46 2005
Subject: [mod_python] mod_python and threading.Thread doesn't start
In-Reply-To: <4e9aa9f4e6d35a71a263eb5cd8289acd@dscpl.com.au>
References: <d9c459bb05060600396accfcb0@mail.gmail.com>
	<4903bca88330cb8976ce42fe427f443b@dscpl.com.au>
	<d9c459bb0506060414e52ef2@mail.gmail.com>
	<0225aadb1c4011fbe25559cf33e87ebb@dscpl.com.au>
	<d9c459bb050606045248d1a146@mail.gmail.com>
	<4e9aa9f4e6d35a71a263eb5cd8289acd@dscpl.com.au>
Message-ID: <d9c459bb050606072342a24a40@mail.gmail.com>

This threadmodule.c for 2.4 works just well. It solved all my problems with 
threading. I just reinstalled thredmodule.so and python dynamic library. My 
interpreatator became non-standard, not for production release, but i hope 
they (python team) will include this bugfix in next releases.

http://sourceforge.net/tracker/download.php?group_id=5470&atid=105470&file_id=131041&aid=1163563


On 6/6/05, Graham Dumpleton <grahamd@dscpl.com.au> wrote:
> 
> 
> Good. There seems to have been some progress on this since the last
> time I
> looked at the link you refer to.
> 
> Doesn't bode well for the fact that I am about to get Mac OS X 10.4
> which
> uses Python 2.3.5. Looks like the default Python version on the box will
> be broken and I haven't ever seen Apple update Python between major OS
> releases which will mean I will be stuck with it and will have to run
> an older separate version of Python just for mod_python. :-(



-- 
melchakov@gmail.com
CRV-RIPN
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20050606/5a3fa2e1/attachment.html
From dpopowich at blue-fox.com  Mon Jun  6 10:39:07 2005
From: dpopowich at blue-fox.com (Daniel J. Popowich)
Date: Mon Jun  6 10:39:14 2005
Subject: [mod_python] Source code displayed by Mozilla/Firefox
In-Reply-To: <3be1d327a95a1e68d451170a344c4eb1@dscpl.com.au>
References: <20050605160447.95587.qmail@web25510.mail.ukl.yahoo.com>
	<3be1d327a95a1e68d451170a344c4eb1@dscpl.com.au>
Message-ID: <17060.24587.156538.318917@greenmonster.local>


To clarify a few points made by Graham...

> On 06/06/2005, at 2:04 AM, Colin Doherty wrote:
> > I'm using mod_python servlets and psp and although the
> > code works correctly for IE, the source code of the
> > template is displayed with Mozilla and Firefox when
> > called from the servlet.
> >
> > I'm setting the content type within the servlet:
> >
> > class test(Servlet):
> >   content_type = 'text/html'
> >
> > and calling the template thus:
> >
> >   def respond(self):
> >     Servlet.respond(self)
> >     template = PSP(self.req, filename='test.html')
> >     template.run({'servlet':self})
> >     return True
> >
> > Any suggestions appreciated.
> 

> What is the URL you are using for the request? Are you using "test.mps",
> "test.html" or just "test" with no extension?
>
>    Options -MultiViews
>

mod_python servlets (mps) enforces "clean" urls, so the only way to
access a servlet in "test.mps" is with "test", so MultiViews, in my
experience, has to be turned off as Graham says. 

> for that part of the directory heirachy, and make sure you always use
> "test.mps" explicitly.

This is incorrect: using "test.mps" explicitly will fail and return a
404 error.

mps does the following for req.filename:

    1.  If it's a directory, "DIR," do a brute-force internal redirect
        to "DIR/index".

    2.  If the basename begins with "." or "_" return 403.  This
        allows you to co-locate data files or other python source
        without worry of being downloaded by prying eyes.  (Future
        versions may check every component of the path to see if it
        begins with "." or "_" so whole directory hierarchies can be
        forbidden.

    3.  If req.filename has an extension:
           a) if the extension is ".mps" return 404 (this is where
              "clean" urls are enforced).
	   b) otherwise return apache.DECLINED if the file
              exists, else 404.

    4.  If req.filename has no extension:

           a) if req.filename + ".mps" exists use it.
           b) otherwise return apache.DECLINED if the file
	      exists, else 404.

Note how mps returns apache.DECLINED for non ".mps" files...this
allows you to co-locate ANY mimetype: html, php, psp, jpg, gif,
etc. within a directory "handled" by mps.  In fact, you can set your
DocumentRoot to be handled by mps and all your content should be
handled as expected (except for MultiViews and the extra performance
hit of mps).

In otherwords, with MultiViews off you can co-locate test.mps,
test.html, test.php, test.psp all in the same directory without
failure.

> BTW, why specifically are you using mpservlets as when using PSP you may
> find they don't mesh very well? For example, one of the points of using
> mpservlets is that by supplying its own write/writeln methods in the
> servlet it does its own buffering of output. Because PSP is going to
> write direct to the request object using req.write(), the buffering in
> mpservlets is bypassed. Another reason people use mpservlets is that it
> has some session support, but then so does PSP.

<soapbox>
While output buffering and session handling are bonuses, the main
reason I wrote mps was to have an OO view of the web.  Writing an
abstract base class that manages the overall layout of a site and
then writing subclasses for specific pages is, imho, very powerful.
Also, being able to re-use base class features in every servlet
(particularly form/query variable processing) saves hours of
programming.
</soapbox>

Cheers,

Daniel Popowich
-----------------------------------------------
http://home.comcast.net/~d.popowich/mpservlets/
From arnaudsj at mac.com  Mon Jun  6 12:13:50 2005
From: arnaudsj at mac.com (=?ISO-8859-1?Q?S=E9bastien_Arnaud?=)
Date: Mon Jun  6 12:14:01 2005
Subject: [mod_python] Problem keeping persistent object in memory (global)
Message-ID: <98EEE750-B672-45E3-B244-B089DD1FFCBA@mac.com>

Hi,

I have attempted to write my own little framework ("heracles" I named  
it;) to develop applications faster using mod_python and it is coming  
along great. Mainly I am using the framework to keep handy a bunch of  
little utils functions/objects I have written along the years while  
working with mod_python, such as a pool of connections for DB  
connections, XML/XSLT rendering, Cheetah template rendering, etc...

I am hitting the wall on a very stupid problem that I thought I had  
working. I can't get an object declared as global to remain in memory...
Under Apache Pre-fork MPM model, this I understand, but under the MPM  
Worker model, where I specify to start 10 threads in one process, I  
kind of don't get it... Maybe some of you will be able to spot what I  
am doing wrong.

Basically, what I am trying to do is to keep the object mySitePool in  
memory since each Site object (heracles.site) has everything needed  
by a thread to process a request. At the first request the mySitePool  
object should get initialized, but for any other requests it should  
be simply the matter of retrieving one Site object via the Queueing  
mechanism to process one request. Right now the problem is that I am  
able to see for each request one entry in the apache log file that  
the mySitePool is being initialized...

Thank you in advance for any pointers or solutions you may have!

Apache2 config (MPM worker):
---------------------------
<IfModule worker.c>
StartServers         1
MaxClients          10
MinSpareThreads     10
MaxSpareThreads      0
ThreadsPerChild     10
MaxRequestsPerChild  0
</IfModule>


Apache2 mod_python (.htaccess):
-------------------------------
PythonInterpPerDirective On

PythonOption "SiteName" "Heracles Test site"
PythonOption "SiteDescription" "Testing the framework!"
PythonOption "SiteVirtualPath" "/heracles/"
PythonOption "SiteViewPath" "/xxx/webapp/views/"
PythonOption "MySQLhost" "xxx"
PythonOption "MySQLuid" "arnaudsj"
PythonOption "MySQLpwd" "xxx"
PythonOption "MySQLdb" "test"

SetHandler python-program
PythonHandler heracles.site::handler

PythonDebug On
PythonAutoReload On


heracles.site.py:
-----------------
[...]
def handler(req):
     """
     Standard mod_python handler code for Heracles Web Application  
Framework
     The SitePool is initialized based on Apache MPM setting
     """
     global mySitePool
     try:
         mySite = mySitePool.get()
     except NameError:
         req.log_error("Initializing Heracles WAF at %s with %s thread 
(s)" % (req.document_root(), apache.mpm_query(6)))
         mySitePool = Pool(Constructor(Site, req), apache.mpm_query(6))
         mySite = mySitePool.get()
     return mySite(req)
     mySitePool.put(mySite)
[...]


Cheers,

S?bastien





From fumanchu at amor.org  Mon Jun  6 12:38:11 2005
From: fumanchu at amor.org (Robert Brewer)
Date: Mon Jun  6 12:37:33 2005
Subject: [mod_python] Problem keeping persistent object in memory (global)
Message-ID: <3A81C87DC164034AA4E2DDFE11D258E37722F9@exchange.hqamor.amorhq.net>

S?bastien Arnaud wrote:
> I am hitting the wall on a very stupid problem that I thought I had  
> working. I can't get an object declared as global to remain 
> in memory...
> Under Apache Pre-fork MPM model, this I understand, but under 
> the MPM  
> Worker model, where I specify to start 10 threads in one process, I  
> kind of don't get it... Maybe some of you will be able to 
> spot what I  
> am doing wrong.
> 
> Basically, what I am trying to do is to keep the object 
> mySitePool in  
> memory since each Site object (heracles.site) has everything needed  
> by a thread to process a request. At the first request the 
> mySitePool  
> object should get initialized, but for any other requests it should  
> be simply the matter of retrieving one Site object via the Queueing  
> mechanism to process one request. Right now the problem is that I am  
> able to see for each request one entry in the apache log file that  
> the mySitePool is being initialized...
> 
...
> 
> Apache2 mod_python (.htaccess):
> -------------------------------
> PythonInterpPerDirective On
> 
> PythonOption "SiteName" "Heracles Test site"
> PythonOption "SiteDescription" "Testing the framework!"
> PythonOption "SiteVirtualPath" "/heracles/"
> PythonOption "SiteViewPath" "/xxx/webapp/views/"
> PythonOption "MySQLhost" "xxx"
> PythonOption "MySQLuid" "arnaudsj"
> PythonOption "MySQLpwd" "xxx"
> PythonOption "MySQLdb" "test"
> 
> SetHandler python-program
> PythonHandler heracles.site::handler
> 
> PythonDebug On
> PythonAutoReload On
> 
> 
> heracles.site.py:
> -----------------
> [...]
> def handler(req):
>      """
>      Standard mod_python handler code for Heracles Web Application  
> Framework
>      The SitePool is initialized based on Apache MPM setting
>      """
>      global mySitePool
>      try:
>          mySite = mySitePool.get()
>      except NameError:
>          req.log_error("Initializing Heracles WAF at %s with 
> %s thread 
> (s)" % (req.document_root(), apache.mpm_query(6)))
>          mySitePool = Pool(Constructor(Site, req), 
> apache.mpm_query(6))
>          mySite = mySitePool.get()
>      return mySite(req)
>      mySitePool.put(mySite)
> [...]

This may or may not fix your problem, but I highly recommend you move the construction of mySitePool out of the handler function, and use a PythonImport directive instead:

In your htaccess file, add:

PythonImport heracles.site interpretername

...and change your site module to read:

[...]
mySitePool = Pool(Constructor(Site), apache.mpm_query(6))

def handler(req):
     """
     Standard mod_python handler code for Heracles Web Application  
Framework
     The SitePool is initialized based on Apache MPM setting
     """
     mySite = mySitePool.get()
     return mySite(req)
     mySitePool.put(mySite)
[...]

...although that will take some rework, since you were passing the request object to Constructor...?!? Anyway, that should make debugging a lot easier.


Robert Brewer
System Architect
Amor Ministries
fumanchu@amor.org

From huzaifa at hostway.com  Mon Jun  6 12:55:01 2005
From: huzaifa at hostway.com (Huzaifa Tapal)
Date: Mon Jun  6 12:55:10 2005
Subject: [mod_python] dbhash or pickle
Message-ID: <42A47FE5.6050105@hostway.com>

I am in the process of extending a python based web app framework that I 
recently converted to mod_python.  I want to store the web app 
configuration in some form of pickle type file that can be modified with 
ease.  I was looking into the dbm use by mod python for DBM Session and 
was wondering if using that is better than pickling and unpickling. 

My goal really was to store the configuration in memory for use by any 
applications running in the framework to use and when the web app 
configuration is modified through a management interface, that in-memory 
configuration is updated and rewritten to the file-based configuraiton file.

Would saving that dictionary based configuration be much better if saved 
in the dbm file?  Any thoughts on what could be the best approach to this?

Hozi

From huzaifa at hostway.com  Mon Jun  6 13:02:48 2005
From: huzaifa at hostway.com (Huzaifa Tapal)
Date: Mon Jun  6 13:02:56 2005
Subject: [mod_python] Problem keeping persistent object in memory (global)
In-Reply-To: <98EEE750-B672-45E3-B244-B089DD1FFCBA@mac.com>
References: <98EEE750-B672-45E3-B244-B089DD1FFCBA@mac.com>
Message-ID: <42A481B8.7030604@hostway.com>

One option that I use is to create a singleton in the module that I want 
to be global at the first import of that module.  So lets take your 
mySitePool module for example:

class mySitePool:
    def __init__(self):
          ' suite

....

global mysitepool
mysitepool = mySitePool()


Now, in your mod_python request handler, when you add the import of 
mySitePool, the global singleton object of mySitePool will be created. 
Since, the module is imported, in mod_python, that module will be cached 
so it would not get imported again so to recreate the singleton.

So your handler would look like this:

import mySitePool

def handler(req):
    mySite = mySitePool.mysitepool.get()
    return mySite(req)
    mySitePool.mysitepool.put(mySite)

Let me know if this helps.

Hozi

S?bastien Arnaud wrote:

> Hi,
>
> I have attempted to write my own little framework ("heracles" I named  
> it;) to develop applications faster using mod_python and it is coming  
> along great. Mainly I am using the framework to keep handy a bunch of  
> little utils functions/objects I have written along the years while  
> working with mod_python, such as a pool of connections for DB  
> connections, XML/XSLT rendering, Cheetah template rendering, etc...
>
> I am hitting the wall on a very stupid problem that I thought I had  
> working. I can't get an object declared as global to remain in memory...
> Under Apache Pre-fork MPM model, this I understand, but under the MPM  
> Worker model, where I specify to start 10 threads in one process, I  
> kind of don't get it... Maybe some of you will be able to spot what I  
> am doing wrong.
>
> Basically, what I am trying to do is to keep the object mySitePool in  
> memory since each Site object (heracles.site) has everything needed  
> by a thread to process a request. At the first request the mySitePool  
> object should get initialized, but for any other requests it should  
> be simply the matter of retrieving one Site object via the Queueing  
> mechanism to process one request. Right now the problem is that I am  
> able to see for each request one entry in the apache log file that  
> the mySitePool is being initialized...
>
> Thank you in advance for any pointers or solutions you may have!
>
> Apache2 config (MPM worker):
> ---------------------------
> <IfModule worker.c>
> StartServers         1
> MaxClients          10
> MinSpareThreads     10
> MaxSpareThreads      0
> ThreadsPerChild     10
> MaxRequestsPerChild  0
> </IfModule>
>
>
> Apache2 mod_python (.htaccess):
> -------------------------------
> PythonInterpPerDirective On
>
> PythonOption "SiteName" "Heracles Test site"
> PythonOption "SiteDescription" "Testing the framework!"
> PythonOption "SiteVirtualPath" "/heracles/"
> PythonOption "SiteViewPath" "/xxx/webapp/views/"
> PythonOption "MySQLhost" "xxx"
> PythonOption "MySQLuid" "arnaudsj"
> PythonOption "MySQLpwd" "xxx"
> PythonOption "MySQLdb" "test"
>
> SetHandler python-program
> PythonHandler heracles.site::handler
>
> PythonDebug On
> PythonAutoReload On
>
>
> heracles.site.py:
> -----------------
> [...]
> def handler(req):
>     """
>     Standard mod_python handler code for Heracles Web Application  
> Framework
>     The SitePool is initialized based on Apache MPM setting
>     """
>     global mySitePool
>     try:
>         mySite = mySitePool.get()
>     except NameError:
>         req.log_error("Initializing Heracles WAF at %s with %s thread 
> (s)" % (req.document_root(), apache.mpm_query(6)))
>         mySitePool = Pool(Constructor(Site, req), apache.mpm_query(6))
>         mySite = mySitePool.get()
>     return mySite(req)
>     mySitePool.put(mySite)
> [...]
>
>
> Cheers,
>
> S?bastien
>
>
>
>
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>
>

From jg.lists at sympatico.ca  Mon Jun  6 13:30:30 2005
From: jg.lists at sympatico.ca (Jim Gallacher)
Date: Mon Jun  6 13:26:54 2005
Subject: [mod_python] dbhash or pickle
In-Reply-To: <42A47FE5.6050105@hostway.com>
References: <42A47FE5.6050105@hostway.com>
Message-ID: <42A48836.7000007@sympatico.ca>

Huzaifa Tapal wrote:
> I am in the process of extending a python based web app framework that I 
> recently converted to mod_python.  I want to store the web app 
> configuration in some form of pickle type file that can be modified with 
> ease.  I was looking into the dbm use by mod python for DBM Session and 
> was wondering if using that is better than pickling and unpickling.

DbmSession (and the forth coming FileSession) use pickles to store the 
session data, so it's pretty much the same thing. However, sessions have 
a timeout value at which time the session data will be deleted, so a 
session may not be the best place to store configuration data.

> My goal really was to store the configuration in memory for use by any 
> applications running in the framework to use and when the web app 
> configuration is modified through a management interface, that in-memory 
> configuration is updated and rewritten to the file-based configuraiton 
> file.

This is probably obvious but make sure you consider file locking issues 
so 2 processes are not trying to modify the filesystem data at the same 
time.

Regards,
Jim

> Would saving that dictionary based configuration be much better if saved 
> in the dbm file?  Any thoughts on what could be the best approach to this?
> 
> Hozi
> 
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
> 

From davin at wordpainter.net  Mon Jun  6 14:31:19 2005
From: davin at wordpainter.net (Davin Boling)
Date: Mon Jun  6 14:22:21 2005
Subject: [mod_python] Built-in function type() unavailable in PSP?
Message-ID: <42A49677.50304@wordpainter.net>

I apologize if this has been asked before in the past, but due to the 
generic nature of the word "type", searching the list history would be a 
headache.

While writing a web form recently, I discovered that the "type" function 
didn't appear to be working properly. Odd. At first I thought I had 
overloaded it by accident with a malformed HTML tag, but after writing a 
test script in PHP from scratch I see that type() isn't working at all.

<%
a = type('')
%>
Testing! <%= str(a) %>


One would expect this to return the textual representation of a type 
object, but nothing was returned at all. I tried manually importing type 
from __builtin__, but that didn't work either.

To further illustrate the problem, I generated an Exception:

<%
a = type('')
raise Exception, str(a)
%>

Result:
Mod_python error: "PythonHandler mod_python.psp"

Traceback (most recent call last):

   File "/usr/lib/python2.3/site-packages/mod_python/apache.py", line 
299, in HandlerDispatch
     result = object(req)

   File "/usr/lib/python2.3/site-packages/mod_python/psp.py", line 297, 
in handler
     p.run()

   File "/usr/lib/python2.3/site-packages/mod_python/psp.py", line 208, 
in run
     exec code in global_scope

   File "/var/www/path/excluded/test.psp", line 3, in ?
     raise Exception, str(a)

Exception:

(Note the lack of data return after "Exception:".)



Any suggestions?
From coldoherty68 at yahoo.co.uk  Mon Jun  6 15:13:53 2005
From: coldoherty68 at yahoo.co.uk (Colin Doherty)
Date: Mon Jun  6 15:13:59 2005
Subject: [mod_python] Source code displayed by Mozilla/Firefox
In-Reply-To: <17060.24587.156538.318917@greenmonster.local>
Message-ID: <20050606191353.32881.qmail@web25504.mail.ukl.yahoo.com>

Hi,

I'm referring to the servlet as test without any
extension. I've tried adding Options -Multiview and
that hasn't made any difference. 

One thing I didn't mention is that I'm using mod_proxy
to forward the requests to an apache server running as
a dedicated mod_python server, so could this be having
some sort of interaction ?

I'm using servlets for the very reasons you specify
Daniel, I think it is a very elegant and efficient way
of developing web apps using mod_python.

Cheers
Colin

--- "Daniel J. Popowich" <dpopowich@blue-fox.com>
wrote:

> 
> To clarify a few points made by Graham...
> 
> > On 06/06/2005, at 2:04 AM, Colin Doherty wrote:
> > > I'm using mod_python servlets and psp and
> although the
> > > code works correctly for IE, the source code of
> the
> > > template is displayed with Mozilla and Firefox
> when
> > > called from the servlet.
> > >
> > > I'm setting the content type within the servlet:
> > >
> > > class test(Servlet):
> > >   content_type = 'text/html'
> > >
> > > and calling the template thus:
> > >
> > >   def respond(self):
> > >     Servlet.respond(self)
> > >     template = PSP(self.req,
> filename='test.html')
> > >     template.run({'servlet':self})
> > >     return True
> > >
> > > Any suggestions appreciated.
> > 
> 
> > What is the URL you are using for the request? Are
> you using "test.mps",
> > "test.html" or just "test" with no extension?
> >
> >    Options -MultiViews
> >
> 
> mod_python servlets (mps) enforces "clean" urls, so
> the only way to
> access a servlet in "test.mps" is with "test", so
> MultiViews, in my
> experience, has to be turned off as Graham says. 
> 
> > for that part of the directory heirachy, and make
> sure you always use
> > "test.mps" explicitly.
> 
> This is incorrect: using "test.mps" explicitly will
> fail and return a
> 404 error.
> 
> mps does the following for req.filename:
> 
>     1.  If it's a directory, "DIR," do a brute-force
> internal redirect
>         to "DIR/index".
> 
>     2.  If the basename begins with "." or "_"
> return 403.  This
>         allows you to co-locate data files or other
> python source
>         without worry of being downloaded by prying
> eyes.  (Future
>         versions may check every component of the
> path to see if it
>         begins with "." or "_" so whole directory
> hierarchies can be
>         forbidden.
> 
>     3.  If req.filename has an extension:
>            a) if the extension is ".mps" return 404
> (this is where
>               "clean" urls are enforced).
> 	   b) otherwise return apache.DECLINED if the file
>               exists, else 404.
> 
>     4.  If req.filename has no extension:
> 
>            a) if req.filename + ".mps" exists use
> it.
>            b) otherwise return apache.DECLINED if
> the file
> 	      exists, else 404.
> 
> Note how mps returns apache.DECLINED for non ".mps"
> files...this
> allows you to co-locate ANY mimetype: html, php,
> psp, jpg, gif,
> etc. within a directory "handled" by mps.  In fact,
> you can set your
> DocumentRoot to be handled by mps and all your
> content should be
> handled as expected (except for MultiViews and the
> extra performance
> hit of mps).
> 
> In otherwords, with MultiViews off you can co-locate
> test.mps,
> test.html, test.php, test.psp all in the same
> directory without
> failure.
> 
> > BTW, why specifically are you using mpservlets as
> when using PSP you may
> > find they don't mesh very well? For example, one
> of the points of using
> > mpservlets is that by supplying its own
> write/writeln methods in the
> > servlet it does its own buffering of output.
> Because PSP is going to
> > write direct to the request object using
> req.write(), the buffering in
> > mpservlets is bypassed. Another reason people use
> mpservlets is that it
> > has some session support, but then so does PSP.
> 
> <soapbox>
> While output buffering and session handling are
> bonuses, the main
> reason I wrote mps was to have an OO view of the
> web.  Writing an
> abstract base class that manages the overall layout
> of a site and
> then writing subclasses for specific pages is, imho,
> very powerful.
> Also, being able to re-use base class features in
> every servlet
> (particularly form/query variable processing) saves
> hours of
> programming.
> </soapbox>
> 
> Cheers,
> 
> Daniel Popowich
> -----------------------------------------------
> http://home.comcast.net/~d.popowich/mpservlets/
> 



		
___________________________________________________________ 
How much free photo storage do you get? Store your holiday 
snaps for FREE with Yahoo! Photos http://uk.photos.yahoo.com
From davin at wordpainter.net  Mon Jun  6 15:59:22 2005
From: davin at wordpainter.net (Davin Boling)
Date: Mon Jun  6 15:50:26 2005
Subject: [mod_python] Built-in function type() unavailable in PSP? (solved)
In-Reply-To: <c6baa9b044f7edea7a6c62b20f17a0de@flowtheory.net>
References: <42A49677.50304@wordpainter.net>
	<c6baa9b044f7edea7a6c62b20f17a0de@flowtheory.net>
Message-ID: <42A4AB1A.8030105@wordpainter.net>

(CCing to list since this contains the solution)

Joshua Ginsberg wrote:
> Python types are expressed between less-than and greater-than signs -- 
> are you losing them as tags your browser can't render? Check the HTML 
> source.
> 
> -jag
> 

Ha ha ha! Yes, that was it exactly. Thanks for the insight, I totally 
forgot about that. :D
From dan.eloff at gmail.com  Mon Jun  6 16:42:58 2005
From: dan.eloff at gmail.com (Dan Eloff)
Date: Mon Jun  6 16:43:07 2005
Subject: [mod_python] Thread safety
Message-ID: <4817b6fc05060613424b0047e1@mail.gmail.com>

When using a request handler, mod_python calls handler(req) for every
incoming request. I would say it's a safe guess that this implies that
handler can be called concurrently in different threads and anything
done in this function and any functions it calls must be thread safe.
I didn't find any mention of this in the docs (I didn't look too
hard), so I thought I'd verify with the people sure to know.

Thanks,
-Dan

From mike_mp at zzzcomputing.com  Mon Jun  6 17:05:43 2005
From: mike_mp at zzzcomputing.com (mike bayer)
Date: Mon Jun  6 17:08:28 2005
Subject: [mod_python] Thread safety
In-Reply-To: <4817b6fc05060613424b0047e1@mail.gmail.com>
References: <4817b6fc05060613424b0047e1@mail.gmail.com>
Message-ID: <64802.66.192.34.8.1118091943.squirrel@66.192.34.8>


if you are running Apache 2.0 with the "worker" MPM, then you need to be
threadsafe.  if you are running "prefork" MPM or Apache 1.3, it only uses
child processes for concurrent operation and is not threaded.  of course
it might be a good idea to be threadsafe no matter what for portability
reasons.

Python 2.4 has a threadlocal object via threading.local() which I do in
2.3 like this:

class ThreadLocal(object):
    def __init__(self):
        object.__setattr__(self, 'tdict', {})

    def __getattribute__(self, key):
        try:
            return object.__getattribute__(self, 'tdict')["%d_%s" %
(thread.get_ident(), key)]
        except KeyError:
            raise AttributeError(key)

    def __setattr__(self, key, value):
        object.__getattribute__(self, 'tdict')["%d_%s" %
(thread.get_ident(), key)] = value


> When using a request handler, mod_python calls handler(req) for every
> incoming request. I would say it's a safe guess that this implies that
> handler can be called concurrently in different threads and anything
> done in this function and any functions it calls must be thread safe.
> I didn't find any mention of this in the docs (I didn't look too
> hard), so I thought I'd verify with the people sure to know.
>
> Thanks,
> -Dan
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>

From grahamd at dscpl.com.au  Mon Jun  6 18:08:02 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Mon Jun  6 18:08:25 2005
Subject: [mod_python] Problem keeping persistent object in memory (global)
In-Reply-To: <42A481B8.7030604@hostway.com>
References: <98EEE750-B672-45E3-B244-B089DD1FFCBA@mac.com>
	<42A481B8.7030604@hostway.com>
Message-ID: <435169a9e8d44736d22e35fef748d325@dscpl.com.au>

On 07/06/2005, at 3:02 AM, Huzaifa Tapal wrote:

> One option that I use is to create a singleton in the module that I 
> want to be global at the first import of that module.  So lets take 
> your mySitePool module for example:
>
> class mySitePool:
>    def __init__(self):
>          ' suite
>
> ....
>
> global mysitepool
> mysitepool = mySitePool()

Using singleton approach as described will help, now for some really 
obscure
stuff in case later on you find other strange problems.

First is that if auto reloading of modules is on and the singleton is 
stored
in a module which at any time might get reloaded because the file is 
changed,
the act of reloading will replace the singleton object, resetting it in 
the
process.

This means that the previously created pool object will become 
inaccessible
and potentially resources it uses in the way of database connections 
might
not get shutdown properly if that required an explicit step not 
performed by
normal Python object deletion.

At the same time, a new pool object will be created and perhaps another 
set
of database connections. If old ones aren't cleaned up in the 
inaccessible
pool and new ones are created due to reloads, you might end up with too 
many
connections and not be able to create any more.

To make the code durable and resistant to reloads, intended or not, it 
is
useful to write code as:

if not globals().has_attr("mysitepool"):
   mysitepool = mySitePool()

What happens is that reload occurs on top of the existing module. By 
seeing
if the pool object already exists in globals, you simply avoid creating 
it a
second time.

Also note that there are some threading issues in mod_python as well, 
and
if you don't do this fiddle but module reloading is turned off, you can 
still
have a problem. This is because the threading issues can result in a 
module
being loaded twice by mistake, as if a reload had occurred.

For this, see patches at:

   http://www.dscpl.com.au/projects/vampire/patches.html

Graham

From grahamd at dscpl.com.au  Mon Jun  6 18:16:33 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Mon Jun  6 18:16:45 2005
Subject: [mod_python] Source code displayed by Mozilla/Firefox
In-Reply-To: <17060.24587.156538.318917@greenmonster.local>
References: <20050605160447.95587.qmail@web25510.mail.ukl.yahoo.com>
	<3be1d327a95a1e68d451170a344c4eb1@dscpl.com.au>
	<17060.24587.156538.318917@greenmonster.local>
Message-ID: <bd6e35000d8ef21e7f66268c1643c344@dscpl.com.au>


On 07/06/2005, at 12:39 AM, Daniel J. Popowich wrote:
>> What is the URL you are using for the request? Are you using 
>> "test.mps",
>> "test.html" or just "test" with no extension?
>>
>>    Options -MultiViews
>>
>
> mod_python servlets (mps) enforces "clean" urls, so the only way to
> access a servlet in "test.mps" is with "test", so MultiViews, in my
> experience, has to be turned off as Graham says.
>
>> for that part of the directory heirachy, and make sure you always use
>> "test.mps" explicitly.
>
> This is incorrect: using "test.mps" explicitly will fail and return a
> 404 error.
>
> mps does the following for req.filename:
>
>   ...

True. Forgot that mpservlets recommends/requires use of SetHandler. I 
had
put my AddHandler hat on where one would have had to specify an 
extension
and then the problems I described might eventuate. Sorry for the 
confusion. :-)

Graham

From huzaifa at hostway.com  Mon Jun  6 18:24:26 2005
From: huzaifa at hostway.com (Huzaifa Tapal)
Date: Mon Jun  6 18:26:46 2005
Subject: [mod_python] dbhash or pickle
In-Reply-To: <42A48836.7000007@sympatico.ca>
References: <42A47FE5.6050105@hostway.com> <42A48836.7000007@sympatico.ca>
Message-ID: <42A4CD1A.8050806@hostway.com>

Well actually I was going to consider setting up configuration like the 
DBM Session by loading a dbm file and unpickling the config dict and 
save it back in it after the change.  I wasn't planning on using the 
Session since I don't use mod_python's Session management anyway.

I was trying to figure out what would be the best approach to saving the 
configuration on disk and keep the persistent one updated at the same 
time.  I am really trying to figure out whether to use the dbm to store 
the config dict pickle makes sense or should the pickle itself be just 
stored on disk directly.

Hozi

Jim Gallacher wrote:

> Huzaifa Tapal wrote:
>
>> I am in the process of extending a python based web app framework 
>> that I recently converted to mod_python.  I want to store the web app 
>> configuration in some form of pickle type file that can be modified 
>> with ease.  I was looking into the dbm use by mod python for DBM 
>> Session and was wondering if using that is better than pickling and 
>> unpickling.
>
>
> DbmSession (and the forth coming FileSession) use pickles to store the 
> session data, so it's pretty much the same thing. However, sessions 
> have a timeout value at which time the session data will be deleted, 
> so a session may not be the best place to store configuration data.
>
>> My goal really was to store the configuration in memory for use by 
>> any applications running in the framework to use and when the web app 
>> configuration is modified through a management interface, that 
>> in-memory configuration is updated and rewritten to the file-based 
>> configuraiton file.
>
>
> This is probably obvious but make sure you consider file locking 
> issues so 2 processes are not trying to modify the filesystem data at 
> the same time.
>
> Regards,
> Jim
>
>> Would saving that dictionary based configuration be much better if 
>> saved in the dbm file?  Any thoughts on what could be the best 
>> approach to this?
>>
>> Hozi
>>
>> _______________________________________________
>> Mod_python mailing list
>> Mod_python@modpython.org
>> http://mailman.modpython.org/mailman/listinfo/mod_python
>>
>
>

From dan.eloff at gmail.com  Mon Jun  6 19:26:07 2005
From: dan.eloff at gmail.com (Dan Eloff)
Date: Mon Jun  6 19:26:13 2005
Subject: [mod_python] Thread safety
In-Reply-To: <64802.66.192.34.8.1118091943.squirrel@66.192.34.8>
References: <4817b6fc05060613424b0047e1@mail.gmail.com>
	<64802.66.192.34.8.1118091943.squirrel@66.192.34.8>
Message-ID: <4817b6fc0506061626536919e5@mail.gmail.com>

> if you are running Apache 2.0 with the "worker" MPM, then you need to be
> threadsafe.  if you are running "prefork" MPM or Apache 1.3, it only uses
> child processes for concurrent operation and is not threaded.  of course
> it might be a good idea to be threadsafe no matter what for portability
> reasons.

I forgot about that, I'd like to make things work with either
eventually. I'm working on an alternate publisher for mod_python. When
it's finished I'll share it with the mod_python community and if they
like it they can help me integrate it. I think initially I'll not
worry about threading, better to get everything running first.

Does mod_python work well under either mpm?

-Dan

From grahamd at dscpl.com.au  Mon Jun  6 20:21:12 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Mon Jun  6 20:21:18 2005
Subject: [mod_python] Thread safety
Message-ID: <1118103672.23290@dscpl.user.openhosting.com>

Dan Eloff wrote ..
> > if you are running Apache 2.0 with the "worker" MPM, then you need to
> be
> > threadsafe.  if you are running "prefork" MPM or Apache 1.3, it only
> uses
> > child processes for concurrent operation and is not threaded.  of course
> > it might be a good idea to be threadsafe no matter what for portability
> > reasons.
> 
> I forgot about that, I'd like to make things work with either
> eventually. I'm working on an alternate publisher for mod_python. When
> it's finished I'll share it with the mod_python community and if they
> like it they can help me integrate it. I think initially I'll not
> worry about threading, better to get everything running first.

Just curious, but what is it about your publisher that is different to the
standard mod_python.publisher or other extensions such as mpservlets
and Vampire.

I appreciate that writing a dispatch mechanism for mod_python is an
interesting programming task in its own right and that may be why you
are doing it, but there are a few others already to choose from. Obviously
though, each perhaps targets a different way of using mod_python and
you just might have in mind a different way again.

I am always interested to learn about different ways people see that
mod_python can be used. :-)

Graham
From grahamd at dscpl.com.au  Mon Jun  6 20:46:24 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Mon Jun  6 20:46:34 2005
Subject: [mod_python] Source code displayed by Mozilla/Firefox
Message-ID: <1118105184.7958@dscpl.user.openhosting.com>

Warning, long rambling response ...  :-)

Daniel J. Popowich wrote ..
> > BTW, why specifically are you using mpservlets as when using PSP you
> may
> > find they don't mesh very well? For example, one of the points of using
> > mpservlets is that by supplying its own write/writeln methods in the
> > servlet it does its own buffering of output. Because PSP is going to
> > write direct to the request object using req.write(), the buffering in
> > mpservlets is bypassed. Another reason people use mpservlets is that
> it
> > has some session support, but then so does PSP.
> 
> <soapbox>
> While output buffering and session handling are bonuses, the main
> reason I wrote mps was to have an OO view of the web.  Writing an
> abstract base class that manages the overall layout of a site and
> then writing subclasses for specific pages is, imho, very powerful.
> Also, being able to re-use base class features in every servlet
> (particularly form/query variable processing) saves hours of
> programming.
> </soapbox>

<bigger soapbox> :-) :-) :-)
I agree that an OO approach to writing response handlers is a good idea
and your HTMLPage servlet is great for people who want to hand craft the
HTML using code rather than using full blown templating systems, but the
original poster wasn't making use of that, nor the other inbuilt features
of the base class servlet. It may be that he just hasn't got to that point
yet, but for the code he was showing, it could equally be served by creating
a simple class which provides a "__call__()" method. Ie., the handler itself
is a callable object. 
</bigger soapbox>

To illustrate, I have included below some code which can be used in
combination with mod_python.publisher and which gives you the OO
type infrastructure. It is relatively straight forward and makes use of the
form processing and dispatch to handlers in seperate files features
that the mod_python.publisher package provides.

The only downside of using mod_python.publisher is that if you want
to mix static files in the same directory, you must use AddHandler and
a specific extension, usually ".py". Thus your Apache config for the code
given would look like:

  AddHandler python-program .py
  PythonHandler mod_python.publisher
  PythonDebug On 
    
  <Files *.psp>
  deny from all
  </Files>

I don't personally like having ".py" in a URL. One step better would be to
use:

  AddHandler python-program .psp
  PythonHandler mod_python.publisher
  PythonDebug On 
    
  <Files *.py>
  deny from all
  </Files>

This means you use a ".psp" extension, but mod_python.psp isn't used
as the actual handler. Instead, mod_python.publisher is used and you
would need a corresponding handler for each PSP file.

If all HTML files in the directory are going to be generated in this way,
ie., no static ".html" files, you could also use:

  AddHandler python-program .html
  PythonHandler mod_python.publisher
  PythonDebug On 
    
  <Files *.psp>
  deny from all
  </Files>
    
  <Files *.py>
  deny from all
  </Files>

Anyway, the idea of the code is that alongside each ".psp" file you have a
corresponding ".py" file which triggers the rendering of it. The servlet like
object would be named as "index" so that just the base name of the file
need be used in the URL with appropriate extension attached.

Thus, I might have a "example.psp" file containing:

  <html>
  <body>
  <p><%=message%></p>
  </body>
  </html>

Next to that I would have "example.py". With the very last config above, I
could access the rendered result as "example.html".

Anyway, here is the code. For starters it should be thrown into the "example.py",
but obviously the reusable classes should be separated out into a distinct
module so they can be access by more than one handler.

from mod_python import apache, util
psp = apache.import_module("mod_python.psp")

import os
import types


class Instance:

  def __init__(self,target,**args):
    self.__target = target
    self.__args = args

  def __call__(self,req):

    if not type(self.__target) in [types.ClassType,types.TypeType]:
      raise apache.SERVER_RETURN, apache.HTTP_INTERNAL_SERVER_ERROR

    instance = self.__target(req,**self.__args)

    if not callable(instance):
      raise apache.SERVER_RETURN, apache.HTTP_INTERNAL_SERVER_ERROR

    return util.apply_fs_data(instance,req.form)


class PSPServlet:

  content_type = "text/html"

  def __init__(self,req):
    self.req = req
    self.vars = {}

  def render(self):

    path = os.path.splitext(self.req.filename)[0] + ".psp"

    self.req.content_type = self.content_type
    self.req.send_http_header()

    template = psp.PSP(self.req,filename=path,vars=self.vars)
    template.run()

  def __call__(self):
    raise apache.SERVER_RETURN, apache.HTTP_INTERNAL_SERVER_ERROR


class MyServlet(PSPServlet):

  def __call__(self,message=""):
    if not message:
      message = "Give Blood!"

    self.vars["message"] = message

    self.render()


index = Instance(MyServlet)


From foo.Clark at gmail.com  Tue Jun  7 04:08:19 2005
From: foo.Clark at gmail.com (Clark)
Date: Tue Jun  7 04:07:56 2005
Subject: [mod_python] How to terminate responce?
Message-ID: <20050607080819.GA23342@dell.cad>

Hi,

With PSP, how to terminate current response?

I want to check some condition, if it's satisfied, I'll continue, 
otherwise I'll finish current page. To finish current page, is there
some function like "req.end()"?

For example, the PSP script is as follows:

<%
if xx != 0:
   req.end(); 

...
%>

Actually, there isn't a function "req.end()". I've try to use
"sys.exit()" instead, but this one will cause a exception. 
I want to finish the page normally, not a exception.
Can you give me some hints?

Clark
From grahamd at dscpl.com.au  Tue Jun  7 04:35:12 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Tue Jun  7 04:35:19 2005
Subject: [mod_python] How to terminate responce?
Message-ID: <1118133311.24306@dscpl.user.openhosting.com>

Clark wrote ..
> Hi,
> 
> With PSP, how to terminate current response?
> 
> I want to check some condition, if it's satisfied, I'll continue, 
> otherwise I'll finish current page. To finish current page, is there
> some function like "req.end()"?
> 
> For example, the PSP script is as follows:
> 
> <%
> if xx != 0:
>    req.end(); 
> 
> ...
> %>
> 
> Actually, there isn't a function "req.end()". I've try to use
> "sys.exit()" instead, but this one will cause a exception. 
> I want to finish the page normally, not a exception.
> Can you give me some hints?

Try:

  raise apache.SERVER_RETURN, apache.OK

This might be okay if you are using mod_python.psp direct,
but if you are writing your own handler that is creating an
instance of PSP object and calling its run() method, you will
need to catch the exception, detect that it is just apache.OK
and then finish up your handler as normal. Any other exception
would need to be reraised.

Graham
From mike_mp at zzzcomputing.com  Tue Jun  7 10:43:35 2005
From: mike_mp at zzzcomputing.com (mike bayer)
Date: Tue Jun  7 10:46:22 2005
Subject: [mod_python] Thread safety
In-Reply-To: <1118103672.23290@dscpl.user.openhosting.com>
References: <1118103672.23290@dscpl.user.openhosting.com>
Message-ID: <6023.66.192.34.8.1118155415.squirrel@66.192.34.8>

Graham Dumpleton said:
>
> Just curious, but what is it about your publisher that is different to the
> standard mod_python.publisher or other extensions such as mpservlets
> and Vampire.
>

are any of those publishers framework-agnostic (i.e. work in other
containers besides mod_python) ?   theres a great advantage to being able
to move an application over to other web environments, such as standalone
servers, lighttpd etc. either for performance testing or development. 
particularly if they can expose themselves via WSGI, which might become
the standard interface for delivering Python web applications.

From arnaudsj at mac.com  Tue Jun  7 10:47:50 2005
From: arnaudsj at mac.com (=?ISO-8859-1?Q?S=E9bastien_Arnaud?=)
Date: Tue Jun  7 10:48:53 2005
Subject: [mod_python] Problem keeping persistent object in memory (global)
In-Reply-To: <435169a9e8d44736d22e35fef748d325@dscpl.com.au>
References: <98EEE750-B672-45E3-B244-B089DD1FFCBA@mac.com>
	<42A481B8.7030604@hostway.com>
	<435169a9e8d44736d22e35fef748d325@dscpl.com.au>
Message-ID: <74B9E521-6DA1-4E68-9406-2B031B09F93D@mac.com>

Thank you Graham for the details on the proper use and issues with  
using a singleton.

I have modified my code and it seems that now the object mysitepool  
is staying in memory yeah!

The only other issue is that it seems the Site object I am inserting  
in the Pool is getting initialized every-time... It is like the  
Queueing mechanism is not working properly and initializing using the  
Contructor every-time.

I am using the pool.py written by Andy dustman (http://dustman.net/ 
andy/python/), and basically the mysitepool is now being initialized  
as shown below. What I am noticing is that the Site objects which are  
created in the Pool (basically in the Queue) are initialized each  
time you call mysitepool.get(). The behavior I am looking for is to  
keep all X Site objects in the Pool to stay in memory. FYI the Site  
object initialize a connection to the DB among other things, so it is  
critical that it is initialized and destroyed cleanly.

Thanks for sharing your wisdom once more ;)

S?bastien

handler.py (the one that mod_python points to via PythonHandler in  
the .htaccess)
----------
from mod_python import apache
from heracles.mysitepool import mysitepool

def handler(req):
     """
     Standard mod_python handler code for Heracles Web Application  
Framework
     """
     mySite = mysitepool.get()
     return mySite(req)
     mysitepool.put(mySite)

mysitepool.py
-------------

from mod_python import apache
from heracles.pool import Pool, Constructor
from heracles.site import Site

if not globals().has_attr("mysitepool"):
     global mysitepool
     mysitepool = Pool(Constructor(Site), apache.mpm_query(6))

pool.py
-------
# Credits: http://dustman.net/andy/python/

from Queue import Queue, Full, Empty

class Pool(Queue):
     """Manage a fixed-size pool of reusable, identical objects."""
     def __init__(self, constructor, poolsize=5):
         Queue.__init__(self, poolsize)
         self.constructor = constructor
     def get(self, block=1):
         """Get an object from the pool or a new one if empty."""
         try:
             return self.empty() and self.constructor() or Queue.get 
(self, block)
         except Empty:
             return self.constructor()
     def put(self, obj, block=1):
         """Put an object into the pool if it is not full. The caller  
must
         not use the object after this."""
         try:
             return self.full() and None or Queue.put(self, obj, block)
         except Full:
             pass

class Constructor:
     """Returns a constructor that returns apply(function, args, kwargs)
     when called."""
     def __init__(self, function, *args, **kwargs):
         self.f = function
         self.args = args
         self.kwargs = kwargs
     def __call__(self):
         return apply(self.f, self.args, self.kwargs)




On Jun 6, 2005, at 5:08 PM, Graham Dumpleton wrote:

> On 07/06/2005, at 3:02 AM, Huzaifa Tapal wrote:
>
>
>> One option that I use is to create a singleton in the module that  
>> I want to be global at the first import of that module.  So lets  
>> take your mySitePool module for example:
>>
>> class mySitePool:
>>    def __init__(self):
>>          ' suite
>>
>> ....
>>
>> global mysitepool
>> mysitepool = mySitePool()
>>
>
> Using singleton approach as described will help, now for some  
> really obscure
> stuff in case later on you find other strange problems.
>
> First is that if auto reloading of modules is on and the singleton  
> is stored
> in a module which at any time might get reloaded because the file  
> is changed,
> the act of reloading will replace the singleton object, resetting  
> it in the
> process.
>
> This means that the previously created pool object will become  
> inaccessible
> and potentially resources it uses in the way of database  
> connections might
> not get shutdown properly if that required an explicit step not  
> performed by
> normal Python object deletion.
>
> At the same time, a new pool object will be created and perhaps  
> another set
> of database connections. If old ones aren't cleaned up in the  
> inaccessible
> pool and new ones are created due to reloads, you might end up with  
> too many
> connections and not be able to create any more.
>
> To make the code durable and resistant to reloads, intended or not,  
> it is
> useful to write code as:
>
> if not globals().has_attr("mysitepool"):
>   mysitepool = mySitePool()
>
> What happens is that reload occurs on top of the existing module.  
> By seeing
> if the pool object already exists in globals, you simply avoid  
> creating it a
> second time.
>
> Also note that there are some threading issues in mod_python as  
> well, and
> if you don't do this fiddle but module reloading is turned off, you  
> can still
> have a problem. This is because the threading issues can result in  
> a module
> being loaded twice by mistake, as if a reload had occurred.
>
> For this, see patches at:
>
>   http://www.dscpl.com.au/projects/vampire/patches.html
>
> Graham
>
>


From dan.eloff at gmail.com  Tue Jun  7 14:52:38 2005
From: dan.eloff at gmail.com (Dan Eloff)
Date: Tue Jun  7 14:52:43 2005
Subject: [mod_python] Thread safety
In-Reply-To: <4817b6fc05060711524db12f36@mail.gmail.com>
References: <1118103672.23290@dscpl.user.openhosting.com>
	<4817b6fc05060711524db12f36@mail.gmail.com>
Message-ID: <4817b6fc05060711524bf7d7a9@mail.gmail.com>

> Just curious, but what is it about your publisher that is different to the
> standard mod_python.publisher or other extensions such as mpservlets
> and Vampire.

Some things are very similar, some things are very different. The
reason I'm doing it is for myself, I want to use the publisher I'm
writing. If nobody else does, it's no big loss to me, but I hope that
people will see enough useful things in it to help me make it better.
I'm designing it with simplicity in mind, keeping everything very
light while still saving a lot of time.

Time will tell how well I succeed at that.

-Dan

From grahamd at dscpl.com.au  Tue Jun  7 18:02:13 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Tue Jun  7 18:02:31 2005
Subject: [mod_python] Problem keeping persistent object in memory (global)
In-Reply-To: <74B9E521-6DA1-4E68-9406-2B031B09F93D@mac.com>
References: <98EEE750-B672-45E3-B244-B089DD1FFCBA@mac.com>
	<42A481B8.7030604@hostway.com>
	<435169a9e8d44736d22e35fef748d325@dscpl.com.au>
	<74B9E521-6DA1-4E68-9406-2B031B09F93D@mac.com>
Message-ID: <d7fcea76643441e5ab8cb75334af5ea5@dscpl.com.au>

Whoops. I made a mistake in the code I suggested. Should be:

if not globals().has_key("mysitepool"):
     global mysitepool
     mysitepool = Pool(Constructor(Site), apache.mpm_query(6))

Ie., has_key() and not has_attr().

Since there is no such thing has "has_attr()", that might be 
contributing.

Sorry. :-(

Graham

On 08/06/2005, at 12:47 AM, S?bastien Arnaud wrote:

> Thank you Graham for the details on the proper use and issues with 
> using a singleton.
>
> I have modified my code and it seems that now the object mysitepool is 
> staying in memory yeah!
>
> The only other issue is that it seems the Site object I am inserting 
> in the Pool is getting initialized every-time... It is like the 
> Queueing mechanism is not working properly and initializing using the 
> Contructor every-time.
>
> I am using the pool.py written by Andy dustman 
> (http://dustman.net/andy/python/), and basically the mysitepool is now 
> being initialized as shown below. What I am noticing is that the Site 
> objects which are created in the Pool (basically in the Queue) are 
> initialized each time you call mysitepool.get(). The behavior I am 
> looking for is to keep all X Site objects in the Pool to stay in 
> memory. FYI the Site object initialize a connection to the DB among 
> other things, so it is critical that it is initialized and destroyed 
> cleanly.
>
> Thanks for sharing your wisdom once more ;)
>
> S?bastien
>
> handler.py (the one that mod_python points to via PythonHandler in the 
> .htaccess)
> ----------
> from mod_python import apache
> from heracles.mysitepool import mysitepool
>
> def handler(req):
>     """
>     Standard mod_python handler code for Heracles Web Application 
> Framework
>     """
>     mySite = mysitepool.get()
>     return mySite(req)
>     mysitepool.put(mySite)
>
> mysitepool.py
> -------------
>
> from mod_python import apache
> from heracles.pool import Pool, Constructor
> from heracles.site import Site
>
> if not globals().has_attr("mysitepool"):
>     global mysitepool
>     mysitepool = Pool(Constructor(Site), apache.mpm_query(6))
>
> pool.py
> -------
> # Credits: http://dustman.net/andy/python/
>
> from Queue import Queue, Full, Empty
>
> class Pool(Queue):
>     """Manage a fixed-size pool of reusable, identical objects."""
>     def __init__(self, constructor, poolsize=5):
>         Queue.__init__(self, poolsize)
>         self.constructor = constructor
>     def get(self, block=1):
>         """Get an object from the pool or a new one if empty."""
>         try:
>             return self.empty() and self.constructor() or 
> Queue.get(self, block)
>         except Empty:
>             return self.constructor()
>     def put(self, obj, block=1):
>         """Put an object into the pool if it is not full. The caller 
> must
>         not use the object after this."""
>         try:
>             return self.full() and None or Queue.put(self, obj, block)
>         except Full:
>             pass
>
> class Constructor:
>     """Returns a constructor that returns apply(function, args, kwargs)
>     when called."""
>     def __init__(self, function, *args, **kwargs):
>         self.f = function
>         self.args = args
>         self.kwargs = kwargs
>     def __call__(self):
>         return apply(self.f, self.args, self.kwargs)
>
>
>
>
> On Jun 6, 2005, at 5:08 PM, Graham Dumpleton wrote:
>
>> On 07/06/2005, at 3:02 AM, Huzaifa Tapal wrote:
>>
>>
>>> One option that I use is to create a singleton in the module that I 
>>> want to be global at the first import of that module.  So lets take 
>>> your mySitePool module for example:
>>>
>>> class mySitePool:
>>>    def __init__(self):
>>>          ' suite
>>>
>>> ....
>>>
>>> global mysitepool
>>> mysitepool = mySitePool()
>>>
>>
>> Using singleton approach as described will help, now for some really 
>> obscure
>> stuff in case later on you find other strange problems.
>>
>> First is that if auto reloading of modules is on and the singleton is 
>> stored
>> in a module which at any time might get reloaded because the file is 
>> changed,
>> the act of reloading will replace the singleton object, resetting it 
>> in the
>> process.
>>
>> This means that the previously created pool object will become 
>> inaccessible
>> and potentially resources it uses in the way of database connections 
>> might
>> not get shutdown properly if that required an explicit step not 
>> performed by
>> normal Python object deletion.
>>
>> At the same time, a new pool object will be created and perhaps 
>> another set
>> of database connections. If old ones aren't cleaned up in the 
>> inaccessible
>> pool and new ones are created due to reloads, you might end up with 
>> too many
>> connections and not be able to create any more.
>>
>> To make the code durable and resistant to reloads, intended or not, 
>> it is
>> useful to write code as:
>>
>> if not globals().has_attr("mysitepool"):
>>   mysitepool = mySitePool()
>>
>> What happens is that reload occurs on top of the existing module. By 
>> seeing
>> if the pool object already exists in globals, you simply avoid 
>> creating it a
>> second time.
>>
>> Also note that there are some threading issues in mod_python as well, 
>> and
>> if you don't do this fiddle but module reloading is turned off, you 
>> can still
>> have a problem. This is because the threading issues can result in a 
>> module
>> being loaded twice by mistake, as if a reload had occurred.
>>
>> For this, see patches at:
>>
>>   http://www.dscpl.com.au/projects/vampire/patches.html
>>
>> Graham
>>
>>
>


From grahamd at dscpl.com.au  Tue Jun  7 19:06:52 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Tue Jun  7 19:07:06 2005
Subject: [mod_python] Thread safety
In-Reply-To: <4817b6fc05060613424b0047e1@mail.gmail.com>
References: <4817b6fc05060613424b0047e1@mail.gmail.com>
Message-ID: <e8de4ab5f6533f7aaf724abc9b3e8bb6@dscpl.com.au>


On 07/06/2005, at 6:42 AM, Dan Eloff wrote:

> When using a request handler, mod_python calls handler(req) for every
> incoming request. I would say it's a safe guess that this implies that
> handler can be called concurrently in different threads and anything
> done in this function and any functions it calls must be thread safe.
> I didn't find any mention of this in the docs (I didn't look too
> hard), so I thought I'd verify with the people sure to know.

BTW, you might want to read this old posting to the mailing list.

   http://www.modpython.org/pipermail/mod_python/2004-October/016605.html

Using threading and having automatic module reloading enabled at the
same time can be quite dangerous. Most of the problems arise because
of how apache.import_module() is implemented so as to use standard
Python module importing mechanisms and storage of modules in 
sys.modules.

Some of these problems are eliminated by systems such as Vampire and
mpservlets which have their own module loading mechanism which does
not reload on top of an existing module. Vampire goes a bit further
than mpservlets in as much as Vampire provides a means of still 
preserving
data across module reloads under strict user control so that thread
locking issues can be addressed.

Note, I posted this a fair time ago and I hope it is still accurate. I
understand things a bit better now and so possibly I may know of
simpler ways around the problems. :-)


Graham

From grahamd at dscpl.com.au  Tue Jun  7 19:30:55 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Tue Jun  7 19:31:18 2005
Subject: [mod_python] Thread safety
In-Reply-To: <6023.66.192.34.8.1118155415.squirrel@66.192.34.8>
References: <1118103672.23290@dscpl.user.openhosting.com>
	<6023.66.192.34.8.1118155415.squirrel@66.192.34.8>
Message-ID: <ff43801f4217658eb96cb4c4077c29b4@dscpl.com.au>


On 08/06/2005, at 12:43 AM, mike bayer wrote:

> Graham Dumpleton said:
>>
>> Just curious, but what is it about your publisher that is different 
>> to the
>> standard mod_python.publisher or other extensions such as mpservlets
>> and Vampire.
>>
>
> are any of those publishers framework-agnostic (i.e. work in other
> containers besides mod_python) ?   theres a great advantage to being 
> able
> to move an application over to other web environments, such as 
> standalone
> servers, lighttpd etc. either for performance testing or development.
> particularly if they can expose themselves via WSGI, which might become
> the standard interface for delivering Python web applications.

Neither of those two is framework agnostic. They are written 
specifically
to work with mod_python.

Personally I have a lot of doubts about this whole "framework agnostic"
goal as being pushed by WSGI. Although mod_python in itself is quite
simple, in conjunction with the underlying features of Apache it has
huge potential and certainly provides a great deal more flexibility
and configurability than other systems out there. The problem is that
most people don't appreciate what it could do and instead just scratch
the surface.

To me, WSGI in part seems to be solving the wrong problem. The main
problem they seem to be solving is that of there being too many HTTP
server frameworks for Python. At the moment at least, it isn't really
addressing the issue of making higher frameworks any better. In some
respects it can't even truly solve that, as in order to work on as many
HTTP server frameworks as it can, it can only really support the lowest
common denominator. If it started to depend on features that only
certain HTTP server frameworks can provide, then anything that relied
on those exposed features wouldn't be able to be portable, thus making
the whole exercise pointless.

So WSGI is currently great for simple frameworks where you want that 
good
feeling of knowing that it will work on lots of HTTP server frameworks,
but in practice I would argue that if you want to be able to build a
really powerful system you are better of sticking with one underlying
HTTP server framework and using as much power as it gives, rather than
limiting yourself.

Over time WSGI may grow to encompass higher level features that make
it more useful in itself, but at that point, it will just become yet
another high level framework to choose from.

End of rant..... :-)

Graham

From list at joreybump.com  Tue Jun  7 21:06:24 2005
From: list at joreybump.com (Jorey Bump)
Date: Tue Jun  7 21:06:37 2005
Subject: [mod_python] Thread safety
In-Reply-To: <6023.66.192.34.8.1118155415.squirrel@66.192.34.8>
References: <1118103672.23290@dscpl.user.openhosting.com>
	<6023.66.192.34.8.1118155415.squirrel@66.192.34.8>
Message-ID: <42A64490.3030109@joreybump.com>

mike bayer wrote:

> are any of those publishers framework-agnostic (i.e. work in other
> containers besides mod_python) ?   theres a great advantage to being able
> to move an application over to other web environments, such as standalone
> servers, lighttpd etc. either for performance testing or development. 

If you separate your core functionality properly, portability isn't much 
of an issue. Publishers and frameworks are best treated as simple 
interfaces to more complex code. Although it's possible to build entire 
applications with them, it's probably not a good idea.

For example, I have a few packages that handle db routines, HTML 
generation, proprietary authentication systems, etc. These are too 
site-specific to be part of the standard library, but are essential to 
the work I do, so I keep them in my PYTHONPATH. As a result, my 
mod_python.publisher applications tend to be very small, and I suspect 
that I could easily reimplement them in Vampire, mpservlets, CGI, or 
even as standalone Python applications with embedded HTTP servers.

More ambitious frameworks try to shield you from the development 
language entirely ("Edit your web site without any knowledge of HTML!") 
and should be considered as entirely proprietary. That's not a 
criticism, as it's usually the goal, but it's worth pointing out that it 
represents the furthest point of the spectrum. All ye who enter this 
land shall forsake portability. :)
From mike_mp at zzzcomputing.com  Tue Jun  7 23:43:12 2005
From: mike_mp at zzzcomputing.com (michael bayer)
Date: Tue Jun  7 23:43:19 2005
Subject: [mod_python] framework agnostics (was: Thread safety)
In-Reply-To: <42A64490.3030109@joreybump.com>
References: <1118103672.23290@dscpl.user.openhosting.com>
	<6023.66.192.34.8.1118155415.squirrel@66.192.34.8>
	<42A64490.3030109@joreybump.com>
Message-ID: <0052FF8D-0E54-4728-905B-F0CC04B5A86A@zzzcomputing.com>

This is interesting....Graham Dumpleton basically said that  
environment-agnostic frameworks have to build down to the lowest  
common denominator and therefore the developer loses most of the  
"special" functionality you get with apache and mod_python, whereas  
here you're saying the amount of framework-specific code should be  
very minimal and therefore you could probably port your applications  
to other frameworks quite easily.   Which is strange, both reasons  
are seemingly in direct conflict with each other yet both have a lot  
of truth to them.

For my part, I think the WSGI interface is so minimalistic and open  
ended that it probably could reveal the full featureset of mod_python  
pretty straightforwardly, and if it were widely adopted you wouldnt  
even have to port your application over between frameworks in most  
cases, except for those portions that drill into the interface more  
deeply for its special framework-specific features.

I have a guy using my own "sub"-framework Myghty for his company's  
website, and he actually moved his application from mod_python to  
lighthttpd where he apparently gets much higher performance (havent  
tried it myself), but none of his code had to change at all.  He just  
moved from the ApacheHandler, which adapts to mod_python, to the  
WSGIHandler, which adapts to lighthttpd via fast cgi, and started it up.

Myghty has started as pretty mod_python centric, but Im beginning to  
think of ways to expose both the mod_python and the WSGI interfaces  
depending on which one the application chooses to see, i.e. a  
function declares itself as def handle(r), it gets the mod_python  
request or an emulating object. if it declares itself as def handle 
(environ, start_response) it gets the WSGI stuff.  Im not sure where  
im going with that yet...though Im pretty inspired by the way Paste  
works by stringing together all sorts of disparate WSGI components  
and im feeling the urge to get more into that idea.


On Jun 7, 2005, at 9:06 PM, Jorey Bump wrote:

> mike bayer wrote:
>
>
>> are any of those publishers framework-agnostic (i.e. work in other
>> containers besides mod_python) ?   theres a great advantage to  
>> being able
>> to move an application over to other web environments, such as  
>> standalone
>> servers, lighttpd etc. either for performance testing or development.
>>
>
> If you separate your core functionality properly, portability isn't  
> much of an issue. Publishers and frameworks are best treated as  
> simple interfaces to more complex code. Although it's possible to  
> build entire applications with them, it's probably not a good idea.
>
> For example, I have a few packages that handle db routines, HTML  
> generation, proprietary authentication systems, etc. These are too  
> site-specific to be part of the standard library, but are essential  
> to the work I do, so I keep them in my PYTHONPATH. As a result, my  
> mod_python.publisher applications tend to be very small, and I  
> suspect that I could easily reimplement them in Vampire,  
> mpservlets, CGI, or even as standalone Python applications with  
> embedded HTTP servers.
>
> More ambitious frameworks try to shield you from the development  
> language entirely ("Edit your web site without any knowledge of  
> HTML!") and should be considered as entirely proprietary. That's  
> not a criticism, as it's usually the goal, but it's worth pointing  
> out that it represents the furthest point of the spectrum. All ye  
> who enter this land shall forsake portability. :)
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>
From grahamd at dscpl.com.au  Tue Jun  7 23:54:28 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Tue Jun  7 23:54:43 2005
Subject: [mod_python] framework agnostics (was: Thread safety)
In-Reply-To: <0052FF8D-0E54-4728-905B-F0CC04B5A86A@zzzcomputing.com>
References: <1118103672.23290@dscpl.user.openhosting.com>
	<6023.66.192.34.8.1118155415.squirrel@66.192.34.8>
	<42A64490.3030109@joreybump.com>
	<0052FF8D-0E54-4728-905B-F0CC04B5A86A@zzzcomputing.com>
Message-ID: <31490a25be6c3a5d9bf3cb02a3db7b01@dscpl.com.au>

I guess where I am looking is beyond just the mod_python basics, and 
more into
what Apache has to offer as well. For example, its different request 
processing
phases, the ability to use mod_python as more than just the content 
handler
phase, the ability to work with other Python modules such as mod_ssl 
etc etc.
Because these things are very Apache specific, there isn't going to 
really
be an equivalent in some other HTTP server framework and thus WSGI 
can't really
encompass them in a portable way. Even some of the mod_python specific 
things
like support for automatic module reloading don't have parallels in 
other
systems. Thus as I said, WSGI has to either pitch quite low, or grow to 
implement
these things at the level of WSGI, in which case it becomes yet another 
framework
in itself, rather than just glue to bring together the HTTP server and 
a framework.

On 08/06/2005, at 1:43 PM, michael bayer wrote:

> This is interesting....Graham Dumpleton basically said that 
> environment-agnostic frameworks have to build down to the lowest 
> common denominator and therefore the developer loses most of the 
> "special" functionality you get with apache and mod_python, whereas 
> here you're saying the amount of framework-specific code should be 
> very minimal and therefore you could probably port your applications 
> to other frameworks quite easily.   Which is strange, both reasons are 
> seemingly in direct conflict with each other yet both have a lot of 
> truth to them.
>
> For my part, I think the WSGI interface is so minimalistic and open 
> ended that it probably could reveal the full featureset of mod_python 
> pretty straightforwardly, and if it were widely adopted you wouldnt 
> even have to port your application over between frameworks in most 
> cases, except for those portions that drill into the interface more 
> deeply for its special framework-specific features.
>
> I have a guy using my own "sub"-framework Myghty for his company's 
> website, and he actually moved his application from mod_python to 
> lighthttpd where he apparently gets much higher performance (havent 
> tried it myself), but none of his code had to change at all.  He just 
> moved from the ApacheHandler, which adapts to mod_python, to the 
> WSGIHandler, which adapts to lighthttpd via fast cgi, and started it 
> up.
>
> Myghty has started as pretty mod_python centric, but Im beginning to 
> think of ways to expose both the mod_python and the WSGI interfaces 
> depending on which one the application chooses to see, i.e. a function 
> declares itself as def handle(r), it gets the mod_python request or an 
> emulating object. if it declares itself as def handle(environ, 
> start_response) it gets the WSGI stuff.  Im not sure where im going 
> with that yet...though Im pretty inspired by the way Paste works by 
> stringing together all sorts of disparate WSGI components and im 
> feeling the urge to get more into that idea.
>
>
> On Jun 7, 2005, at 9:06 PM, Jorey Bump wrote:
>
>> mike bayer wrote:
>>
>>
>>> are any of those publishers framework-agnostic (i.e. work in other
>>> containers besides mod_python) ?   theres a great advantage to being 
>>> able
>>> to move an application over to other web environments, such as 
>>> standalone
>>> servers, lighttpd etc. either for performance testing or development.
>>>
>>
>> If you separate your core functionality properly, portability isn't 
>> much of an issue. Publishers and frameworks are best treated as 
>> simple interfaces to more complex code. Although it's possible to 
>> build entire applications with them, it's probably not a good idea.
>>
>> For example, I have a few packages that handle db routines, HTML 
>> generation, proprietary authentication systems, etc. These are too 
>> site-specific to be part of the standard library, but are essential 
>> to the work I do, so I keep them in my PYTHONPATH. As a result, my 
>> mod_python.publisher applications tend to be very small, and I 
>> suspect that I could easily reimplement them in Vampire, mpservlets, 
>> CGI, or even as standalone Python applications with embedded HTTP 
>> servers.
>>
>> More ambitious frameworks try to shield you from the development 
>> language entirely ("Edit your web site without any knowledge of 
>> HTML!") and should be considered as entirely proprietary. That's not 
>> a criticism, as it's usually the goal, but it's worth pointing out 
>> that it represents the furthest point of the spectrum. All ye who 
>> enter this land shall forsake portability. :)
>> _______________________________________________
>> Mod_python mailing list
>> Mod_python@modpython.org
>> http://mailman.modpython.org/mailman/listinfo/mod_python
>>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python

From grahamd at dscpl.com.au  Wed Jun  8 00:03:27 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Wed Jun  8 00:03:40 2005
Subject: [mod_python] framework agnostics (was: Thread safety)
In-Reply-To: <31490a25be6c3a5d9bf3cb02a3db7b01@dscpl.com.au>
References: <1118103672.23290@dscpl.user.openhosting.com>
	<6023.66.192.34.8.1118155415.squirrel@66.192.34.8>
	<42A64490.3030109@joreybump.com>
	<0052FF8D-0E54-4728-905B-F0CC04B5A86A@zzzcomputing.com>
	<31490a25be6c3a5d9bf3cb02a3db7b01@dscpl.com.au>
Message-ID: <e64cbf30c90e2a108654daa956cd5284@dscpl.com.au>


On 08/06/2005, at 1:54 PM, Graham Dumpleton wrote:
>
> phase, the ability to work with other Python modules such as mod_ssl 
> etc etc.

Whoops, read as "other Apache modules such as mod_ssl".

From pacifico at drizzle.com  Wed Jun  8 00:38:25 2005
From: pacifico at drizzle.com (Al Pacifico)
Date: Wed Jun  8 00:39:20 2005
Subject: [mod_python] Opinion solicited re: saving state, form submission,
	and M-V-C concept 
Message-ID: <008701c56be3$ebe68af0$347ba8c0@Laptop8100>

I'm looking for suggestions re: solutions to the following problem.

I'm expanding templates using psp.PSP within a publisher handler because I
wish to separate application logic and presentation as much as possible. I
would like to have an HTML template that a HTML person can understand and
modify, as I don't have the artistic eye to create compelling HTML. My
preference is to code the business logic in classes, especially for
unit-testing outside the web browser. My application is not complex enough
to needs lots of sub-templates (or the object-orientation of the perl
HTML::Embperl framework, for example) and is therefore well-suited to a
simple HTML template model. It's 98% application and 2% content.

Now, to give a specific example:

In a representative part of the envisioned site, my browser visits a "client
list" page and clicks a client's name to link to a "client detail" page.
>From there, there are links to "edit billing address," "add/remove client
representatives," "change client's name," etc... you get the idea. After
filling in the appropriate form fields, I'd like clicking submit to land the
browser either back to the client list or to the client detail page (haven't
decided which, maybe give the user the option either).

What is the best way to validate and store the form data? (Also, let's
assume I'm allergic to javascript) I can think of:
1) submit goes to a new page that performs the processing, redirects
2) submit goes to a new page that performs the processing, then generates
the ultimate target page using PSP and the same template file (which brings
up the question, is PSP "directory savvy"). The name of the PSP template
file could be passed in the Session to the next page.
3) submit goes to either the "client list" or "client detail" page and both
are smart enough to know how to do the processing

My gut tells me that the latter is best and is best addressed with a
Transaction base class and a TransactionQueue class to minimize code
duplication and maximize maintainability. The logic of the publisher
function calling the PSP page containing the form would instantiate a
TransactionQueue, register a new Transaction class in it, and save it in
Session. Then whatever page receives the form data first registers itself
(or a redirect to the ultimate target) as the final element (in case the
form data is invalid and the browser needs to revisit the form page) and
then begins sequential execution of the operations registered in the
TransactionQueue instance.

My questions are:
1) What is the prevailing opinion re: best method given my description of
the problem (application rather than content)?
2) What are the pros and cons of various methods?
3) If my initial thought is correct, has someone implemented this, would
they share it with me, and how do others feel about it?

I've looked briefly at Myghty, PyWork, Vampire, JOTWeb, and Zope. None is
compelling, but maybe I need to look at one (or more) harder. I won't
comment on my first impressions of each, as they are only first impressions.

I'm often leery of "frameworks" from my previous experiences with mod_perl
(I'm new to mod_python) and HTML::Mason, which worked great for me at first,
but then gravitated in a less useful direction, eventually pushing me to
prefer HTML::Embperl and ultimately mod_perl without a framework instead.

Input is appreciated. If this question has already been thoroughly
addressed, please point me to the correct portion of the archive.

Thanks.
-al
Al Pacifico
Seattle, WA




From list at joreybump.com  Wed Jun  8 01:07:31 2005
From: list at joreybump.com (Jorey Bump)
Date: Wed Jun  8 01:07:42 2005
Subject: [mod_python] framework agnostics
In-Reply-To: <0052FF8D-0E54-4728-905B-F0CC04B5A86A@zzzcomputing.com>
References: <1118103672.23290@dscpl.user.openhosting.com>	<6023.66.192.34.8.1118155415.squirrel@66.192.34.8>	<42A64490.3030109@joreybump.com>
	<0052FF8D-0E54-4728-905B-F0CC04B5A86A@zzzcomputing.com>
Message-ID: <42A67D13.6010701@joreybump.com>

michael bayer wrote:
> This is interesting....Graham Dumpleton basically said that  
> environment-agnostic frameworks have to build down to the lowest  common 
> denominator and therefore the developer loses most of the  "special" 
> functionality you get with apache and mod_python, whereas  here you're 
> saying the amount of framework-specific code should be  very minimal and 
> therefore you could probably port your applications  to other frameworks 
> quite easily.   Which is strange, both reasons  are seemingly in direct 
> conflict with each other yet both have a lot  of truth to them.

I don't think they're in conflict. As Graham indicates, frameworks are 
available at different levels in terms of functionality and the tools 
offered to developers. Once you've removed the code that supports the 
purpose of your application, you're left with the interface code. My 
point is really one of style, that you should keep support code separate 
from interface code, making it easier to reimplement using other interfaces.

Even if WSGI offered true portability, I'd code the same way. Yes, it 
would be nice write the web interface once and have the opportunity to 
move it to another environment without modification. But is that what 
WSGI really offers? It seems that a variety of frameworks will be built 
upon the WSGI API, so I'll still be faced with reimplementation in 
whatever framework is available in the target environment, rather than 
use WSGI directly.

It looks like WSGI is a worthy attempt to achieve the usefulness of 
something like the Python Database API, which has eased the task of 
working with databases significantly, but doesn't quite allow one to 
write applications in a completely database-agnostic way. Still, it's a 
great evolutionary step forward, so it will be interesting to see if 
WSGI shares a similar success.

From grahamd at dscpl.com.au  Wed Jun  8 02:20:15 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Wed Jun  8 02:20:32 2005
Subject: [mod_python] ANN: Vampire 1.7 is now available.
Message-ID: <44ebde9cd058bc8418fc531b73133681@dscpl.com.au>

Vampire 1.7 is now available.

    http://www.dscpl.com.au/projects/vampire

    http://www.dscpl.com.au/downloads/vampire-1.7-20050608.tar.gz

Vampire is an extension module for mod_python, which provides a more
flexible dispatch mechanism for basic content handlers, as well as an
alternative implementation of the mod_python.publisher module. A range
of other useful features are also provided which make using mod_python
a much more pleasant experience. Note that Vampire is not strictly a
framework in itself, it is essentially glue to help you make it easier
to use mod_python.

For a quick overview of the features that Vampire provides check out:

   http://www.dscpl.com.au/projects/vampire/articles/vampire-001.html

For a full list of changes in this new version check out:

   http://www.dscpl.com.au/projects/vampire/changes.html

As usual, some bugs have been fixed in this version, along with some new
features and improvements.

One of the more significant changes is the ability to optionally install
import hooks so that the "import" syntax can be used to import file 
based
modules using the Vampire module importing and caching system. This 
means
that if using Cheetah Templates and a template extends another, a change
in the base class template will now result in the derived template being
automatically reloaded without the derived class template needing to be
recompiled.

Another change is the inclusion of a new wrapper class and changes to
some of the existing wrapper classes, such that if a class type is 
wrapped,
an instance of that class will be created automatically to handle each
request thus making it easier to construct servlet like handlers.

The range of examples included has been expanded upon, with better
examples on use of HTMLTemplate, Cheetah Templates, PSP, sessions and
the forms based login mechanism, as well as more basic examples of using
the wrapper classes to enhance basic content handlers.

Enjoy.

--
Graham Dumpleton (grahamd@dscpl.com.au)

From bortzmeyer at nic.fr  Wed Jun  8 04:02:04 2005
From: bortzmeyer at nic.fr (Stephane Bortzmeyer)
Date: Wed Jun  8 04:02:21 2005
Subject: [mod_python] [Vampire] Possible security problem with loginhandler
Message-ID: <20050608080204.GA4511@nic.fr>

If I make a typo in the filename of the loginhandler directive of the
Vampire configuration file, there is no warning and the access goes
on. Isn't it a security weakness?
From bortzmeyer at nic.fr  Wed Jun  8 04:47:40 2005
From: bortzmeyer at nic.fr (Stephane Bortzmeyer)
Date: Wed Jun  8 04:47:52 2005
Subject: [mod_python] Re: Sessions and Cheetah
In-Reply-To: <5ba37fa820172919bad01b9d79571c4a@dscpl.com.au>
References: <429F848B.5000203@cnri.reston.va.us>
	<ceaf34d74870f39305449ee6152e1c79@dscpl.com.au>
	<20050603120246.GA12889@nic.fr>
	<5ba37fa820172919bad01b9d79571c4a@dscpl.com.au>
Message-ID: <20050608084740.GB7561@nic.fr>

On Sat, Jun 04, 2005 at 11:02:00PM +1000,
 Graham Dumpleton <grahamd@dscpl.com.au> wrote 
 a message of 51 lines which said:

> If you are able to check out of the subversion repository the very
> latest source code for Vampire, you'll get the updated example which
> has been modified so as to use Cheetah templates for the various
> pages.

The example of session with Cheetah in Vampire 1.7 seems to work
perfectly for me (providing you install it with care and remember that
".vampire" files are not inherited, the first one takes all).

Graham, I do not know what our project would do without you.

From modpython at redry.net  Wed Jun  8 04:56:04 2005
From: modpython at redry.net (eoghan)
Date: Wed Jun  8 04:56:15 2005
Subject: [mod_python] mod_python and real app
Message-ID: <42A6B2A4.1060604@redry.net>

Hello
Im new to python and really new to mod_python. Im coming from a php 
background. Id like to know if anyone has any examples of real world app 
built for the web using mod_python... something pretty simple that the 
code is available for... i dont want it to use, but to learn how it used 
really.
Im probably diving in at the deep end, but i find it a lot easier to see 
whats going on when i can get my hands dirty :)
Thanks
Eoghan
From grahamd at dscpl.com.au  Wed Jun  8 04:18:32 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Wed Jun  8 05:46:04 2005
Subject: [mod_python] [Vampire] Possible security problem with loginhandler
In-Reply-To: <20050608080204.GA4511@nic.fr>
References: <20050608080204.GA4511@nic.fr>
Message-ID: <b6517035356b247f599f9e0d3cc0fa43@dscpl.com.au>


On 08/06/2005, at 6:02 PM, Stephane Bortzmeyer wrote:

> If I make a typo in the filename of the loginhandler directive of the
> Vampire configuration file, there is no warning and the access goes
> on. Isn't it a security weakness?

Agree that it is probably not good in that circumstance, should yield
an internal server error response at least and log something. Will have
to review what happens for other phases as well. In those cases you'll
probably end up with a not found error, but maybe something different
should be done there as well.

Thanks for pointing it out.

Graham

From grahamd at dscpl.com.au  Wed Jun  8 05:56:57 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Wed Jun  8 05:57:08 2005
Subject: [mod_python] Re: Sessions and Cheetah
In-Reply-To: <20050608084740.GB7561@nic.fr>
References: <429F848B.5000203@cnri.reston.va.us>
	<ceaf34d74870f39305449ee6152e1c79@dscpl.com.au>
	<20050603120246.GA12889@nic.fr>
	<5ba37fa820172919bad01b9d79571c4a@dscpl.com.au>
	<20050608084740.GB7561@nic.fr>
Message-ID: <7bbfa92743d8719e825521dd6da79194@dscpl.com.au>


On 08/06/2005, at 6:47 PM, Stephane Bortzmeyer wrote:

> On Sat, Jun 04, 2005 at 11:02:00PM +1000,
>  Graham Dumpleton <grahamd@dscpl.com.au> wrote
>  a message of 51 lines which said:
>
>> If you are able to check out of the subversion repository the very
>> latest source code for Vampire, you'll get the updated example which
>> has been modified so as to use Cheetah templates for the various
>> pages.
>
> The example of session with Cheetah in Vampire 1.7 seems to work
> perfectly for me (providing you install it with care and remember that
> ".vampire" files are not inherited, the first one takes all).

True, they aren't inherited in the sense of being cumulative, it will 
only
use the first file it finds on its search back upwards from the point 
the
request maps to, stopping its search if not found when it reaches where
PythonHandler was defined for that directory tree.

I probably made the session example a bit more complicated by importing
the PSP and Cheetah stuff out of the files in sibling directories. I 
didn't
want to duplicate the code in multiple places. :-)

Graham

From grahamd at dscpl.com.au  Wed Jun  8 06:12:19 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Wed Jun  8 06:12:31 2005
Subject: [mod_python] mod_python and real app
In-Reply-To: <42A6B2A4.1060604@redry.net>
References: <42A6B2A4.1060604@redry.net>
Message-ID: <5deeda9837bea6fc0951ee6471c47285@dscpl.com.au>


On 08/06/2005, at 6:56 PM, eoghan wrote:

> Hello
> Im new to python and really new to mod_python. Im coming from a php 
> background. Id like to know if anyone has any examples of real world 
> app built for the web using mod_python... something pretty simple that 
> the code is available for... i dont want it to use, but to learn how 
> it used really.
> Im probably diving in at the deep end, but i find it a lot easier to 
> see whats going on when i can get my hands dirty :)

There are various different usage styles for mod_python dependent on
what supplied package or third party add-ons you use. For example,
in mod_python itself there is the basic content handlers, PSP and
mod_python.publisher. Another major style is servlet based for which
and example is the third party mpservlets package. Beyond that you
get into the area of third party templating systems that can be used
in conjunction with mod_python.

What I would suggest is get hold of a copy of mpservlets from:

   http://home.comcast.net/~d.popowich/mpservlets/

and look through the examples it supplies in its "tutorial" directory.
That will give you an idea of a servlet based system. I think these
are the same as what is available at:

   http://lnx1.blue-fox.com/~dpopowich/mpstutorial/

Also get hold of Vampire from:

   http://www.dscpl.com.au/projects/vampire

It also has a range of examples covering basic handlers, publisher, PSP,
Cheetah, HTMLTemplate etc. Its examples are also online but not nicely
linked off a common page at the moment although that will start to 
change.
Thus you might just look through the code for those examples initially,
but if you want to know the URL for some specific examples let me know
and I'll tell you where to go for it.

Graham

From modpython at redry.net  Wed Jun  8 06:18:25 2005
From: modpython at redry.net (eoghan)
Date: Wed Jun  8 06:18:34 2005
Subject: [mod_python] mod_python and real app
In-Reply-To: <5deeda9837bea6fc0951ee6471c47285@dscpl.com.au>
References: <42A6B2A4.1060604@redry.net>
	<5deeda9837bea6fc0951ee6471c47285@dscpl.com.au>
Message-ID: <42A6C5F1.5000602@redry.net>

Thanks Graham...
Ive got a lot of stuff to look through there... this should get me a 
better understanding!
Eoghan

Graham Dumpleton wrote:
> 
> On 08/06/2005, at 6:56 PM, eoghan wrote:
> 
>> Hello
>> Im new to python and really new to mod_python. Im coming from a php 
>> background. Id like to know if anyone has any examples of real world 
>> app built for the web using mod_python... something pretty simple that 
>> the code is available for... i dont want it to use, but to learn how 
>> it used really.
>> Im probably diving in at the deep end, but i find it a lot easier to 
>> see whats going on when i can get my hands dirty :)
> 
> 
> There are various different usage styles for mod_python dependent on
> what supplied package or third party add-ons you use. For example,
> in mod_python itself there is the basic content handlers, PSP and
> mod_python.publisher. Another major style is servlet based for which
> and example is the third party mpservlets package. Beyond that you
> get into the area of third party templating systems that can be used
> in conjunction with mod_python.
> 
> What I would suggest is get hold of a copy of mpservlets from:
> 
>   http://home.comcast.net/~d.popowich/mpservlets/
> 
> and look through the examples it supplies in its "tutorial" directory.
> That will give you an idea of a servlet based system. I think these
> are the same as what is available at:
> 
>   http://lnx1.blue-fox.com/~dpopowich/mpstutorial/
> 
> Also get hold of Vampire from:
> 
>   http://www.dscpl.com.au/projects/vampire
> 
> It also has a range of examples covering basic handlers, publisher, PSP,
> Cheetah, HTMLTemplate etc. Its examples are also online but not nicely
> linked off a common page at the moment although that will start to change.
> Thus you might just look through the code for those examples initially,
> but if you want to know the URL for some specific examples let me know
> and I'll tell you where to go for it.
> 
> Graham
> 
> 
> 
From grahamd at dscpl.com.au  Wed Jun  8 06:55:25 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Wed Jun  8 06:55:47 2005
Subject: [mod_python] [Vampire] Possible security problem with loginhandler
In-Reply-To: <b6517035356b247f599f9e0d3cc0fa43@dscpl.com.au>
References: <20050608080204.GA4511@nic.fr>
	<b6517035356b247f599f9e0d3cc0fa43@dscpl.com.au>
Message-ID: <85a12f9153673a911cf9cda780389445@dscpl.com.au>


On 08/06/2005, at 6:18 PM, Graham Dumpleton wrote:

>
> On 08/06/2005, at 6:02 PM, Stephane Bortzmeyer wrote:
>
>> If I make a typo in the filename of the loginhandler directive of the
>> Vampire configuration file, there is no warning and the access goes
>> on. Isn't it a security weakness?
>
> Agree that it is probably not good in that circumstance, should yield
> an internal server error response at least and log something. Will have
> to review what happens for other phases as well. In those cases you'll
> probably end up with a not found error, but maybe something different
> should be done there as well.

Version of code in subversion has been updated so you can either update
against that or grab:

   http://svn.dscpl.com.au/vampire/trunk/software/vampire/lookup.py

and replace version in your copy.

You will now get errors where appropriate like:

   ImportError: No file named 
/Users/grahamd/Sites/vampire/examples/session/xaccess.py

or:

   ImportError: Cannot import loginhandler from 
/Users/grahamd/Sites/vampire/examples/session/access.py


Graham

From grahamd at dscpl.com.au  Wed Jun  8 17:37:55 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Wed Jun  8 17:38:11 2005
Subject: [mod_python] ANN: Vampire 1.7 is now available.
In-Reply-To: <44ebde9cd058bc8418fc531b73133681@dscpl.com.au>
References: <44ebde9cd058bc8418fc531b73133681@dscpl.com.au>
Message-ID: <ac10eadea399b2ee7dee15f7d8455176@dscpl.com.au>

FYI. I forgot to generate the HTML documentation and include it in the 
tar
ball when I released it. I have now updated the same tar ball to include
the HTML documentation. It is the same documentation as on the web site,
but if you are interested you can download it again.

If you had docutils installed, you could also generate the HTML 
documentation
yourself by running:

   ./scripts/rebuild.sh

in the top level source directory.

Graham

On 08/06/2005, at 4:20 PM, Graham Dumpleton wrote:

> Vampire 1.7 is now available.
>
>    http://www.dscpl.com.au/projects/vampire
>
>    http://www.dscpl.com.au/downloads/vampire-1.7-20050608.tar.gz
>
> Vampire is an extension module for mod_python, which provides a more
> flexible dispatch mechanism for basic content handlers, as well as an
> alternative implementation of the mod_python.publisher module. A range
> of other useful features are also provided which make using mod_python
> a much more pleasant experience. Note that Vampire is not strictly a
> framework in itself, it is essentially glue to help you make it easier
> to use mod_python.
>
> For a quick overview of the features that Vampire provides check out:
>
>   http://www.dscpl.com.au/projects/vampire/articles/vampire-001.html
>
> For a full list of changes in this new version check out:
>
>   http://www.dscpl.com.au/projects/vampire/changes.html
>
> As usual, some bugs have been fixed in this version, along with some 
> new
> features and improvements.
>
> One of the more significant changes is the ability to optionally 
> install
> import hooks so that the "import" syntax can be used to import file 
> based
> modules using the Vampire module importing and caching system. This 
> means
> that if using Cheetah Templates and a template extends another, a 
> change
> in the base class template will now result in the derived template 
> being
> automatically reloaded without the derived class template needing to be
> recompiled.
>
> Another change is the inclusion of a new wrapper class and changes to
> some of the existing wrapper classes, such that if a class type is 
> wrapped,
> an instance of that class will be created automatically to handle each
> request thus making it easier to construct servlet like handlers.
>
> The range of examples included has been expanded upon, with better
> examples on use of HTMLTemplate, Cheetah Templates, PSP, sessions and
> the forms based login mechanism, as well as more basic examples of 
> using
> the wrapper classes to enhance basic content handlers.
>
> Enjoy.
>
> --
> Graham Dumpleton (grahamd@dscpl.com.au)
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python

From nicolas.lehuen at gmail.com  Wed Jun  8 18:33:25 2005
From: nicolas.lehuen at gmail.com (Nicolas Lehuen)
Date: Wed Jun  8 18:33:30 2005
Subject: [mod_python] framework agnostics (was: Thread safety)
In-Reply-To: <e64cbf30c90e2a108654daa956cd5284@dscpl.com.au>
References: <1118103672.23290@dscpl.user.openhosting.com>
	<6023.66.192.34.8.1118155415.squirrel@66.192.34.8>
	<42A64490.3030109@joreybump.com>
	<0052FF8D-0E54-4728-905B-F0CC04B5A86A@zzzcomputing.com>
	<31490a25be6c3a5d9bf3cb02a3db7b01@dscpl.com.au>
	<e64cbf30c90e2a108654daa956cd5284@dscpl.com.au>
Message-ID: <c298f2d7050608153358f37ae5@mail.gmail.com>

>From what I've understood, WSGI is just a way for framework developers
to be server-agnostic. If you develop an application framework, then
using WSGI as the interface with the web server allows you to be
independent of the web server, hence to run on Apache through
mod_python, on IIS through the WSGI wrapper (see
http://www.amorhq.net/blogs/index.php/fumanchu?blog=2&cat=15&page=1&disp=posts&paged=1),
on the BasicHTTPServer, on Twisted, etc.

Currently the problem is that choosing an application framework
usually involves choosing a web server. If I've understood it
correctly, WSGI is there to provide a server-agnostic platform for
application framework developers to build on top, so its targets
audience is not the final application developer. So the end result for
the application developer is that he can pick the web server he wants,
pick the application framework he wants, and start coding.

WSGI is too low level to develop big applications. Like CGI or
Servlets, it's a very low level API, and unless you like to reinvent
the wheel and implement an application framework yourself, you need an
application framework to efficiently build some applications.

Building a WSGI interface on top of mod_python would therefore make
mod_python more friendly to application framework developers ; they
would not have to fight and build a wrapping layer around the
mod_python API (which mainly revolves around the request object).

Regards,
Nicolas

2005/6/8, Graham Dumpleton <grahamd@dscpl.com.au>:
> 
> On 08/06/2005, at 1:54 PM, Graham Dumpleton wrote:
> >
> > phase, the ability to work with other Python modules such as mod_ssl
> > etc etc.
> 
> Whoops, read as "other Apache modules such as mod_ssl".
> 
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>

From nicolas.lehuen at gmail.com  Wed Jun  8 18:44:49 2005
From: nicolas.lehuen at gmail.com (Nicolas Lehuen)
Date: Wed Jun  8 18:44:53 2005
Subject: [mod_python] framework agnostics (was: Thread safety)
In-Reply-To: <c298f2d7050608153358f37ae5@mail.gmail.com>
References: <1118103672.23290@dscpl.user.openhosting.com>
	<6023.66.192.34.8.1118155415.squirrel@66.192.34.8>
	<42A64490.3030109@joreybump.com>
	<0052FF8D-0E54-4728-905B-F0CC04B5A86A@zzzcomputing.com>
	<31490a25be6c3a5d9bf3cb02a3db7b01@dscpl.com.au>
	<e64cbf30c90e2a108654daa956cd5284@dscpl.com.au>
	<c298f2d7050608153358f37ae5@mail.gmail.com>
Message-ID: <c298f2d70506081544331eca25@mail.gmail.com>

Duh, the URL I've provided is indeed a WSGI implementation on top of
mod_python. Turns out it's a quite small amount of code :) I'm asking
the guy if he would consider donating his code to the mod_python
project.

I wanted to point to this URL, which is a WSGI implementation for IIS
from the same guy :

http://www.amorhq.net/blogs/index.php/fumanchu/2005/05/26/wsgi_gateway_for_asp_microsoft_iis

I can't see how including WSGI support could hurt mod_python.

Regards,
Nicolas

2005/6/9, Nicolas Lehuen <nicolas.lehuen@gmail.com>:
> From what I've understood, WSGI is just a way for framework developers
> to be server-agnostic. If you develop an application framework, then
> using WSGI as the interface with the web server allows you to be
> independent of the web server, hence to run on Apache through
> mod_python, on IIS through the WSGI wrapper (see
> http://www.amorhq.net/blogs/index.php/fumanchu?blog=2&cat=15&page=1&disp=posts&paged=1),
> on the BasicHTTPServer, on Twisted, etc.
> 
> Currently the problem is that choosing an application framework
> usually involves choosing a web server. If I've understood it
> correctly, WSGI is there to provide a server-agnostic platform for
> application framework developers to build on top, so its targets
> audience is not the final application developer. So the end result for
> the application developer is that he can pick the web server he wants,
> pick the application framework he wants, and start coding.
> 
> WSGI is too low level to develop big applications. Like CGI or
> Servlets, it's a very low level API, and unless you like to reinvent
> the wheel and implement an application framework yourself, you need an
> application framework to efficiently build some applications.
> 
> Building a WSGI interface on top of mod_python would therefore make
> mod_python more friendly to application framework developers ; they
> would not have to fight and build a wrapping layer around the
> mod_python API (which mainly revolves around the request object).
> 
> Regards,
> Nicolas
> 
> 2005/6/8, Graham Dumpleton <grahamd@dscpl.com.au>:
> >
> > On 08/06/2005, at 1:54 PM, Graham Dumpleton wrote:
> > >
> > > phase, the ability to work with other Python modules such as mod_ssl
> > > etc etc.
> >
> > Whoops, read as "other Apache modules such as mod_ssl".
> >
> > _______________________________________________
> > Mod_python mailing list
> > Mod_python@modpython.org
> > http://mailman.modpython.org/mailman/listinfo/mod_python
> >
>

From fumanchu at amor.org  Wed Jun  8 19:19:20 2005
From: fumanchu at amor.org (Robert Brewer)
Date: Wed Jun  8 19:18:46 2005
Subject: [mod_python] framework agnostics (was: Thread safety)
Message-ID: <3A81C87DC164034AA4E2DDFE11D258E3772382@exchange.hqamor.amorhq.net>

Nicolas Lehuen wrote:
> Duh, the URL I've provided is indeed a WSGI implementation on top of
> mod_python. Turns out it's a quite small amount of code :) I'm asking
> the guy if he would consider donating his code to the mod_python
> project.
> 
> I wanted to point to this URL, which is a WSGI implementation for IIS
> from the same guy :
> 
> http://www.amorhq.net/blogs/index.php/fumanchu/2005/05/26/wsgi
> _gateway_for_asp_microsoft_iis
> 
> I can't see how including WSGI support could hurt mod_python.

It's free for the taking. I offered it for inclusion in PEAK's wsgiref,
but I haven't received a response on how exactly to turn it over to that
project. Let me know what sort of licensing restrictions exist, and what
steps I'd need to take to make it official for the mod_python project.

Oh, and thanks for fixing the other link ;)


Robert Brewer
System Architect
Amor Ministries
fumanchu@amor.org

From davidbadawi at yahoo.com  Wed Jun  8 20:57:40 2005
From: davidbadawi at yahoo.com (David Badawi)
Date: Wed Jun  8 20:57:46 2005
Subject: [mod_python] Form Validation
Message-ID: <20050609005740.63333.qmail@web51001.mail.yahoo.com>

ModPythonGurus,
 
Anyone have an about how many and what python based form validation modules are available for integrating into a web app built with mod_python? I know that there is FormEncode, FunFormKit, and several others for Zope in particular. Thanks in advance.
 
David
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20050608/97608bb8/attachment.html
From dan.eloff at gmail.com  Thu Jun  9 13:41:51 2005
From: dan.eloff at gmail.com (Dan Eloff)
Date: Thu Jun  9 13:41:56 2005
Subject: [mod_python] Thread safety
In-Reply-To: <e8de4ab5f6533f7aaf724abc9b3e8bb6@dscpl.com.au>
References: <4817b6fc05060613424b0047e1@mail.gmail.com>
	<e8de4ab5f6533f7aaf724abc9b3e8bb6@dscpl.com.au>
Message-ID: <4817b6fc05060910415a7779e9@mail.gmail.com>

Thanks for that information, I appreciate it. I'm just going to not
worry about threaded mpms right now, in my mind it creates so many
points of potential failure and added complexity that the speed
improvement does not seem like a good trade. There's enough problems
with importing alone to make me think twice. Later when the code is
mature I'll probably go through it all and make it threadsafe.

-Dan

On 6/7/05, Graham Dumpleton <grahamd@dscpl.com.au> wrote:
> 
> On 07/06/2005, at 6:42 AM, Dan Eloff wrote:
> 
> > When using a request handler, mod_python calls handler(req) for every
> > incoming request. I would say it's a safe guess that this implies that
> > handler can be called concurrently in different threads and anything
> > done in this function and any functions it calls must be thread safe.
> > I didn't find any mention of this in the docs (I didn't look too
> > hard), so I thought I'd verify with the people sure to know.
> 
> BTW, you might want to read this old posting to the mailing list.
> 
>    http://www.modpython.org/pipermail/mod_python/2004-October/016605.html
> 
> Using threading and having automatic module reloading enabled at the
> same time can be quite dangerous. Most of the problems arise because
> of how apache.import_module() is implemented so as to use standard
> Python module importing mechanisms and storage of modules in
> sys.modules.
> 
> Some of these problems are eliminated by systems such as Vampire and
> mpservlets which have their own module loading mechanism which does
> not reload on top of an existing module. Vampire goes a bit further
> than mpservlets in as much as Vampire provides a means of still
> preserving
> data across module reloads under strict user control so that thread
> locking issues can be addressed.
> 
> Note, I posted this a fair time ago and I hope it is still accurate. I
> understand things a bit better now and so possibly I may know of
> simpler ways around the problems. :-)
> 
> 
> Graham
> 
>

From jzarecta at gmail.com  Fri Jun 10 10:49:24 2005
From: jzarecta at gmail.com (Kahlil Johnson)
Date: Fri Jun 10 10:49:29 2005
Subject: [mod_python] Getting Advx to run with mod_python
Message-ID: <4adf377d05061007494a0a6a83@mail.gmail.com>

I am using Mandrake 10.1 and it has Advx server wiht the Apache 2.0 .
One thing that I found myself lost is locating the files for the
apache configuration. I tried to put up the mod_python but all I get
is that the mime-type is not recognize and the browser ask to download
the .py.

I wonder where can I get the AddType since the
/etc/httpd/conf.d/httpd2.conf  dont includes the AddType in that file.

Also I might ahve messed up somewhere else since it worked once but
since I move several things I no longer know if it will again.

-- 
Kahlil Johnson
"Ya tengo GMAIL!!"

From py.adriano at gmail.com  Sat Jun 11 13:08:37 2005
From: py.adriano at gmail.com (Adriano Monteiro)
Date: Sat Jun 11 13:08:42 2005
Subject: [mod_python] Help! Error importing psp
Message-ID: <29ec21540506111008335517d3@mail.gmail.com>

Hi folks!

I'm getting this error from time to time:

Mod_python error: "PythonHandler mod_python.publisher"

Traceback (most recent call last):

  File "/usr/lib/python2.4/site-packages/mod_python/apache.py", line
299, in HandlerDispatch
    result = object(req)

  File "/usr/lib/python2.4/site-packages/mod_python/publisher.py",
line 98, in handler
    path=[path])

  File "/usr/lib/python2.4/site-packages/mod_python/apache.py", line
457, in import_module
    module = imp.load_module(mname, f, p, d)

  File "/var/www/quiron/core/CadastrarUsuario.py", line 17, in ?
    from mod_python import apache, psp

ImportError: cannot import name psp

I don't undesrtand why is this happening. I saw some threads that have
already talked about this problem, but I didn't find any solution!
I'm almost quiting. I'll have to change the language of my project
because of this problem if it persist..

[]'s!

-- 

Adriano Monteiro Marques
www.gopython.com.br
py.adriano@gmail.com

I'm FREE... Are you?
(PYTHON powered)

From foo.Clark at gmail.com  Sat Jun 11 13:24:27 2005
From: foo.Clark at gmail.com (Clark)
Date: Sat Jun 11 13:23:56 2005
Subject: [mod_python] Help! Error importing psp
In-Reply-To: <29ec21540506111008335517d3@mail.gmail.com>
References: <29ec21540506111008335517d3@mail.gmail.com>
Message-ID: <20050611172427.GA29396@dell.cad>

Maybe you'd better show your python script and mod_python configuration
(or give a simple example) to help us understand your problem.

On Sat, Jun 11, 2005 at 02:08:37PM -0300, Adriano Monteiro wrote:
> Hi folks!
> 
> I'm getting this error from time to time:
> 
> Mod_python error: "PythonHandler mod_python.publisher"
> 
> Traceback (most recent call last):
> 
>   File "/usr/lib/python2.4/site-packages/mod_python/apache.py", line
> 299, in HandlerDispatch
>     result = object(req)
> 
>   File "/usr/lib/python2.4/site-packages/mod_python/publisher.py",
> line 98, in handler
>     path=[path])
> 
>   File "/usr/lib/python2.4/site-packages/mod_python/apache.py", line
> 457, in import_module
>     module = imp.load_module(mname, f, p, d)
> 
>   File "/var/www/quiron/core/CadastrarUsuario.py", line 17, in ?
>     from mod_python import apache, psp
> 
> ImportError: cannot import name psp
> 
> I don't undesrtand why is this happening. I saw some threads that have
> already talked about this problem, but I didn't find any solution!
> I'm almost quiting. I'll have to change the language of my project
> because of this problem if it persist..
> 
> []'s!
> 
> -- 
> 
> Adriano Monteiro Marques
> www.gopython.com.br
> py.adriano@gmail.com
> 
> I'm FREE... Are you?
> (PYTHON powered)
> 
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
From py.adriano at gmail.com  Sat Jun 11 14:07:36 2005
From: py.adriano at gmail.com (Adriano Monteiro)
Date: Sat Jun 11 14:07:42 2005
Subject: [mod_python] Help! Error importing psp
In-Reply-To: <20050611172427.GA29396@dell.cad>
References: <29ec21540506111008335517d3@mail.gmail.com>
	<20050611172427.GA29396@dell.cad>
Message-ID: <29ec215405061111073e92ec46@mail.gmail.com>

Sure!!

My apache configuration:

    <Directory /var/www/quiron>
        AddHandler mod_python .psp .py
        DirectoryIndex Index.psp
        PythonHandler mod_python.psp | .psp
        PythonHandler mod_python.publisher | .py
        PythonDebug On
    </Directory>

Apache 2.0.53 and mod_python 3.1.3

I've created a python script to handle control flow and psp file to
handle the vision.
Within the pytho script I create a psp.PSP instance and call the run
method of the object.

>From time to time, I got error on psp import.

I just can't understand why...

My import line:
from mod_python import psp

How I call it:

obj = psp.PSP (req, 'file.psp')
obj.run ({'var':1})

Something that I'm doing wrong?

Regards,


On 6/11/05, Clark <foo.Clark@gmail.com> wrote:
> Maybe you'd better show your python script and mod_python configuration
> (or give a simple example) to help us understand your problem.
> 
> On Sat, Jun 11, 2005 at 02:08:37PM -0300, Adriano Monteiro wrote:
> > Hi folks!
> >
> > I'm getting this error from time to time:
> >
> > Mod_python error: "PythonHandler mod_python.publisher"
> >
> > Traceback (most recent call last):
> >
> >   File "/usr/lib/python2.4/site-packages/mod_python/apache.py", line
> > 299, in HandlerDispatch
> >     result = object(req)
> >
> >   File "/usr/lib/python2.4/site-packages/mod_python/publisher.py",
> > line 98, in handler
> >     path=[path])
> >
> >   File "/usr/lib/python2.4/site-packages/mod_python/apache.py", line
> > 457, in import_module
> >     module = imp.load_module(mname, f, p, d)
> >
> >   File "/var/www/quiron/core/CadastrarUsuario.py", line 17, in ?
> >     from mod_python import apache, psp
> >
> > ImportError: cannot import name psp
> >
> > I don't undesrtand why is this happening. I saw some threads that have
> > already talked about this problem, but I didn't find any solution!
> > I'm almost quiting. I'll have to change the language of my project
> > because of this problem if it persist..
> >
> > []'s!
> >
> > --
> >
> > Adriano Monteiro Marques
> > www.gopython.com.br
> > py.adriano@gmail.com
> >
> > I'm FREE... Are you?
> > (PYTHON powered)
> >
> > _______________________________________________
> > Mod_python mailing list
> > Mod_python@modpython.org
> > http://mailman.modpython.org/mailman/listinfo/mod_python
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
> 


-- 

Adriano Monteiro Marques
www.gopython.com.br
py.adriano@gmail.com

I'm FREE... Are you?
(PYTHON powered)

From dan.eloff at gmail.com  Sat Jun 11 19:46:36 2005
From: dan.eloff at gmail.com (Dan Eloff)
Date: Sat Jun 11 19:46:44 2005
Subject: [mod_python] How to perform cleanup action when the python process
	dies?
Message-ID: <4817b6fc050611164620228f3e@mail.gmail.com>

I have global resources that persist as long as the process does
(database connections) but they could also be files or sockets or
other resources that need to be released. Python destructors are very
dicey from what I've heard, there seems no guarantee that the __del__
method on the connection pool will be called before the database
module is itself destroyed. I can't use req.register_cleanup() since
the objects stay alive across all the requests. When apache is
restarted though, how do I ensure the database connections were closed
on exit?

I saw a similar post to this on the list, but it just recommends not
to trust python destructors for important things like closing a
database connection.

Thanks
-Dan

From nick at dd.revealed.net  Sun Jun 12 00:57:20 2005
From: nick at dd.revealed.net (Nick)
Date: Sun Jun 12 00:57:30 2005
Subject: [mod_python] How to perform cleanup action when the python process
	dies?
In-Reply-To: <4817b6fc050611164620228f3e@mail.gmail.com>
References: <4817b6fc050611164620228f3e@mail.gmail.com>
Message-ID: <42ABC0B0.9060604@dd.revealed.net>

When you restart apache you are actually destroying the python 
interpreter, so I wouldn't worry about ANYTHING being left behind on a 
restart.

Nick

Dan Eloff wrote:
> I have global resources that persist as long as the process does
> (database connections) but they could also be files or sockets or
> other resources that need to be released. Python destructors are very
> dicey from what I've heard, there seems no guarantee that the __del__
> method on the connection pool will be called before the database
> module is itself destroyed. I can't use req.register_cleanup() since
> the objects stay alive across all the requests. When apache is
> restarted though, how do I ensure the database connections were closed
> on exit?
> 
> I saw a similar post to this on the list, but it just recommends not
> to trust python destructors for important things like closing a
> database connection.

From foo.Clark at gmail.com  Sun Jun 12 02:38:23 2005
From: foo.Clark at gmail.com (Clark)
Date: Sun Jun 12 02:38:38 2005
Subject: [mod_python] Help! Error importing psp
In-Reply-To: <29ec215405061111073e92ec46@mail.gmail.com>
References: <29ec21540506111008335517d3@mail.gmail.com>
	<20050611172427.GA29396@dell.cad>
	<29ec215405061111073e92ec46@mail.gmail.com>
Message-ID: <20050612063823.GA31047@dell.cad>

I think it's a bug of mod_python 3.1.3
You can try the python script as follows:

import mod_python
for i in mod_python:
    req.write(i)
    req.write(<br>)

The output is

__all__
__builtins__
__doc__
__file__
__name__
__path__
apache
util

Three modules including psp, cgihandler and publisher miss.
I haven't tested mod_python 3.1.4. Maybe you can try this one.

On Sat, Jun 11, 2005 at 03:07:36PM -0300, Adriano Monteiro wrote:
> Sure!!
> 
> My apache configuration:
> 
>     <Directory /var/www/quiron>
>         AddHandler mod_python .psp .py
>         DirectoryIndex Index.psp
>         PythonHandler mod_python.psp | .psp
>         PythonHandler mod_python.publisher | .py
>         PythonDebug On
>     </Directory>
> 
> Apache 2.0.53 and mod_python 3.1.3
> 
> I've created a python script to handle control flow and psp file to
> handle the vision.
> Within the pytho script I create a psp.PSP instance and call the run
> method of the object.
> 
> >From time to time, I got error on psp import.
> 
> I just can't understand why...
> 
> My import line:
> from mod_python import psp
> 
> How I call it:
> 
> obj = psp.PSP (req, 'file.psp')
> obj.run ({'var':1})
> 
> Something that I'm doing wrong?
> 
> Regards,
> 
> 
> On 6/11/05, Clark <foo.Clark@gmail.com> wrote:
> > Maybe you'd better show your python script and mod_python configuration
> > (or give a simple example) to help us understand your problem.
> > 
> > On Sat, Jun 11, 2005 at 02:08:37PM -0300, Adriano Monteiro wrote:
> > > Hi folks!
> > >
> > > I'm getting this error from time to time:
> > >
> > > Mod_python error: "PythonHandler mod_python.publisher"
> > >
> > > Traceback (most recent call last):
> > >
> > >   File "/usr/lib/python2.4/site-packages/mod_python/apache.py", line
> > > 299, in HandlerDispatch
> > >     result = object(req)
> > >
> > >   File "/usr/lib/python2.4/site-packages/mod_python/publisher.py",
> > > line 98, in handler
> > >     path=[path])
> > >
> > >   File "/usr/lib/python2.4/site-packages/mod_python/apache.py", line
> > > 457, in import_module
> > >     module = imp.load_module(mname, f, p, d)
> > >
> > >   File "/var/www/quiron/core/CadastrarUsuario.py", line 17, in ?
> > >     from mod_python import apache, psp
> > >
> > > ImportError: cannot import name psp
> > >
> > > I don't undesrtand why is this happening. I saw some threads that have
> > > already talked about this problem, but I didn't find any solution!
> > > I'm almost quiting. I'll have to change the language of my project
> > > because of this problem if it persist..
> > >
> > > []'s!
> > >
> > > --
> > >
> > > Adriano Monteiro Marques
> > > www.gopython.com.br
> > > py.adriano@gmail.com
> > >
> > > I'm FREE... Are you?
> > > (PYTHON powered)
> > >
> > > _______________________________________________
> > > Mod_python mailing list
> > > Mod_python@modpython.org
> > > http://mailman.modpython.org/mailman/listinfo/mod_python
> > _______________________________________________
> > Mod_python mailing list
> > Mod_python@modpython.org
> > http://mailman.modpython.org/mailman/listinfo/mod_python
> > 
> 
> 
> -- 
> 
> Adriano Monteiro Marques
> www.gopython.com.br
> py.adriano@gmail.com
> 
> I'm FREE... Are you?
> (PYTHON powered)
> 
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
From grahamd at dscpl.com.au  Sun Jun 12 19:33:20 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Sun Jun 12 19:33:29 2005
Subject: [mod_python] How to perform cleanup action when the python
	process dies?
In-Reply-To: <4817b6fc050611164620228f3e@mail.gmail.com>
References: <4817b6fc050611164620228f3e@mail.gmail.com>
Message-ID: <b354fe76a29c14a4d03dd6bd2cf09d55@dscpl.com.au>


On 12/06/2005, at 9:46 AM, Dan Eloff wrote:

> I have global resources that persist as long as the process does
> (database connections) but they could also be files or sockets or
> other resources that need to be released. Python destructors are very
> dicey from what I've heard, there seems no guarantee that the __del__
> method on the connection pool will be called before the database
> module is itself destroyed. I can't use req.register_cleanup() since
> the objects stay alive across all the requests. When apache is
> restarted though, how do I ensure the database connections were closed
> on exit?
>
> I saw a similar post to this on the list, but it just recommends not
> to trust python destructors for important things like closing a
> database connection.

Use req.server.register_cleanup(). Although accessed through the "req"
object, it allows registration of a function which is to be called on
server shutdown. Since you would only want to call it once, make sure
you a keep a flag of your own which records when you have already done
so.

Graham

From grahamd at dscpl.com.au  Sun Jun 12 19:35:53 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Sun Jun 12 19:36:04 2005
Subject: [mod_python] Help! Error importing psp
In-Reply-To: <29ec215405061111073e92ec46@mail.gmail.com>
References: <29ec21540506111008335517d3@mail.gmail.com>
	<20050611172427.GA29396@dell.cad>
	<29ec215405061111073e92ec46@mail.gmail.com>
Message-ID: <ddf9c26e76fc8ac0e19ebd4b5416c52c@dscpl.com.au>

Here is the response I posted to your same question on comp.lang.python
a couple of days ago. Not sure if you saw it there.


May be related to this bug:

? http://issues.apache.org/jira/ browse/MODPYTHON-12

Where you have:

? import mod_python.psp

change it to:

? psp = apache.import_module("mod_pyth on.psp")

Access the PSP object then as:

? psp.PSP

and not:

? mod_python.psp.PSP

It will happen where somewhere else within the same document tree
there is a PythonHandler specified as mod_python.psp as well as
the explicit import of mod_python.psp. Depending on which ones gets
triggered first, it will screw up.


Graham


On 12/06/2005, at 4:07 AM, Adriano Monteiro wrote:

> Sure!!
>
> My apache configuration:
>
>     <Directory /var/www/quiron>
>         AddHandler mod_python .psp .py
>         DirectoryIndex Index.psp
>         PythonHandler mod_python.psp | .psp
>         PythonHandler mod_python.publisher | .py
>         PythonDebug On
>     </Directory>
>
> Apache 2.0.53 and mod_python 3.1.3
>
> I've created a python script to handle control flow and psp file to
> handle the vision.
> Within the pytho script I create a psp.PSP instance and call the run
> method of the object.
>
>> From time to time, I got error on psp import.
>
> I just can't understand why...
>
> My import line:
> from mod_python import psp
>
> How I call it:
>
> obj = psp.PSP (req, 'file.psp')
> obj.run ({'var':1})
>
> Something that I'm doing wrong?
>
> Regards,
>
>
> On 6/11/05, Clark <foo.Clark@gmail.com> wrote:
>> Maybe you'd better show your python script and mod_python 
>> configuration
>> (or give a simple example) to help us understand your problem.
>>
>> On Sat, Jun 11, 2005 at 02:08:37PM -0300, Adriano Monteiro wrote:
>>> Hi folks!
>>>
>>> I'm getting this error from time to time:
>>>
>>> Mod_python error: "PythonHandler mod_python.publisher"
>>>
>>> Traceback (most recent call last):
>>>
>>>   File "/usr/lib/python2.4/site-packages/mod_python/apache.py", line
>>> 299, in HandlerDispatch
>>>     result = object(req)
>>>
>>>   File "/usr/lib/python2.4/site-packages/mod_python/publisher.py",
>>> line 98, in handler
>>>     path=[path])
>>>
>>>   File "/usr/lib/python2.4/site-packages/mod_python/apache.py", line
>>> 457, in import_module
>>>     module = imp.load_module(mname, f, p, d)
>>>
>>>   File "/var/www/quiron/core/CadastrarUsuario.py", line 17, in ?
>>>     from mod_python import apache, psp
>>>
>>> ImportError: cannot import name psp
>>>
>>> I don't undesrtand why is this happening. I saw some threads that 
>>> have
>>> already talked about this problem, but I didn't find any solution!
>>> I'm almost quiting. I'll have to change the language of my project
>>> because of this problem if it persist..
>>>
>>> []'s!
>>>
>>> --
>>>
>>> Adriano Monteiro Marques
>>> www.gopython.com.br
>>> py.adriano@gmail.com
>>>
>>> I'm FREE... Are you?
>>> (PYTHON powered)
>>>
>>> _______________________________________________
>>> Mod_python mailing list
>>> Mod_python@modpython.org
>>> http://mailman.modpython.org/mailman/listinfo/mod_python
>> _______________________________________________
>> Mod_python mailing list
>> Mod_python@modpython.org
>> http://mailman.modpython.org/mailman/listinfo/mod_python
>>
>
>
> -- 
>
> Adriano Monteiro Marques
> www.gopython.com.br
> py.adriano@gmail.com
>
> I'm FREE... Are you?
> (PYTHON powered)
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python


From grahamd at dscpl.com.au  Sun Jun 12 19:40:35 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Sun Jun 12 19:40:47 2005
Subject: [mod_python] Getting Advx to run with mod_python
In-Reply-To: <4adf377d05061007494a0a6a83@mail.gmail.com>
References: <4adf377d05061007494a0a6a83@mail.gmail.com>
Message-ID: <64239115bb08332529a781535a3527d1@dscpl.com.au>


On 11/06/2005, at 12:49 AM, Kahlil Johnson wrote:

> I am using Mandrake 10.1 and it has Advx server wiht the Apache 2.0 .
> One thing that I found myself lost is locating the files for the
> apache configuration. I tried to put up the mod_python but all I get
> is that the mime-type is not recognize and the browser ask to download
> the .py.
>
> I wonder where can I get the AddType since the
> /etc/httpd/conf.d/httpd2.conf  dont includes the AddType in that file.
>
> Also I might ahve messed up somewhere else since it worked once but
> since I move several things I no longer know if it will again.

Using "AddType" in Apache to trigger mod_python isn't generally how
things are setup. You might want to review the installation 
documentation
for mod_python and start over with its test example. An alternate set
of instructions for getting a first test example in mod_python working
can be found at:

   http://www.dscpl.com.au/projects/vampire/articles/modpython-001.html

It describes some of the problems that can arise and where to look to
solve what is happening, including the common problem of why browsers
want to save the response to a file.

Graham

From scarfboy at gmail.com  Sun Jun 12 21:14:33 2005
From: scarfboy at gmail.com (Bart)
Date: Sun Jun 12 21:14:39 2005
Subject: [mod_python] Is it possible to not reuse interpreters?
Message-ID: <b71082d805061218145153edbd@mail.gmail.com>

Hey there,

Apologies if this has been asked and answered before, 
but is there any way to make apache/mod_python
temporarily *not* reuse the same interpreter? 
Google wasn't too helpful on the matter other
than providing the reasons.

While I'm clear on why this is generally good, while
coding it's quite annoying that I have to restart
apache just to not get it to randomly fail on code
that's in reality any your-guess-is-as-good-as-mine 
old version, but practically guaranteed not to be
the current one.

(I had another question, but it just occured to me
 this may have caused it.)

Thanks,
--Bart

From grahamd at dscpl.com.au  Sun Jun 12 21:26:23 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Sun Jun 12 21:26:33 2005
Subject: [mod_python] Is it possible to not reuse interpreters?
In-Reply-To: <b71082d805061218145153edbd@mail.gmail.com>
References: <b71082d805061218145153edbd@mail.gmail.com>
Message-ID: <2afe5008dca838abba27a01a48ac117a@dscpl.com.au>


On 13/06/2005, at 11:14 AM, Bart wrote:

> Hey there,
>
> Apologies if this has been asked and answered before,
> but is there any way to make apache/mod_python
> temporarily *not* reuse the same interpreter?

No.

> Google wasn't too helpful on the matter other
> than providing the reasons.
>
> While I'm clear on why this is generally good, while
> coding it's quite annoying that I have to restart
> apache just to not get it to randomly fail on code
> that's in reality any your-guess-is-as-good-as-mine
> old version, but practically guaranteed not to be
> the current one.

What you want is automayic module reloading.

Have a look at the automatic module reloading mechanism implicit
within the apache.import_module() function. See documentation at:

   http://www.modpython.org/live/current/doc-html/pyapi-apmeth.html

This same method is used by mod_python to load a handler. In that
case auto reloading is controlled by the PythonAutoReload directive.

   http://www.modpython.org/live/current/doc-html/dir-other-par.html

The current auto reloading mechanism has a number of shortcomings
and will not always work, but depending on the complexity of your
code it may be sufficient.

Graham

From py.adriano at gmail.com  Sun Jun 12 23:31:58 2005
From: py.adriano at gmail.com (Adriano Monteiro)
Date: Sun Jun 12 23:32:03 2005
Subject: [mod_python] Best way to use Session
Message-ID: <29ec2154050612203132b77a79@mail.gmail.com>

Hi again Folks...

Now I'm in trouble handling Sessions...
I can't make it happen by anyway, and it also break my script
sometimes... I just don? t understand what is the matter with it.

This is the way I'm importing it:

from mod_python import apache, Session

I was getting an error, saying that my page could not be found. When I
took of the Session from the import, the error disapeared and the
script worked.

Is there another way like session = apache.import_module ('xxxx') to
avoid this problem? I'm almost getting crazy with these bugs... :-/

Again... My apache is 2.0.59 and my mod_python is 3.1.3.

Regards

-- 

Adriano Monteiro Marques
www.gopython.com.br
py.adriano@gmail.com

I'm FREE... Are you?
(PYTHON powered)

From py.adriano at gmail.com  Sun Jun 12 23:42:48 2005
From: py.adriano at gmail.com (Adriano Monteiro)
Date: Sun Jun 12 23:42:53 2005
Subject: [mod_python] Error running pyc scripts
Message-ID: <29ec2154050612204225e9df87@mail.gmail.com>

Hi again...

I'm getting another error... Sometimes when I try to reach a page, the
server gives me the pyc file to download, and don't interpret it...

How could I avoid this?

Regards

[]'s!

-- 

Adriano Monteiro Marques
www.gopython.com.br
py.adriano@gmail.com

I'm FREE... Are you?
(PYTHON powered)

From grahamd at dscpl.com.au  Mon Jun 13 00:49:08 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Mon Jun 13 00:49:22 2005
Subject: [mod_python] Is it possible to not reuse interpreters?
In-Reply-To: <b71082d8050612191031b3333e@mail.gmail.com>
References: <b71082d805061218145153edbd@mail.gmail.com>
	<2afe5008dca838abba27a01a48ac117a@dscpl.com.au>
	<b71082d8050612191031b3333e@mail.gmail.com>
Message-ID: <8fac95cf24aad86ef57d8ebe6e5c80dd@dscpl.com.au>


On 13/06/2005, at 12:10 PM, Bart wrote:

> On 6/12/05, Graham Dumpleton <grahamd@dscpl.com.au> wrote:
>> On 13/06/2005, at 11:14 AM, Bart wrote:
>>> Hey there,
>>>
>>> Apologies if this has been asked and answered before,
>>> but is there any way to make apache/mod_python
>>> temporarily *not* reuse the same interpreter?
>> No.
>>
>>> Google wasn't too helpful on the matter other
>>> than providing the reasons.
>>>
>>> While I'm clear on why this is generally good, while
>>> coding it's quite annoying that I have to restart
>>> apache just to not get it to randomly fail on code
>>> that's in reality any your-guess-is-as-good-as-mine
>>> old version, but practically guaranteed not to be
>>> the current one.
>> What you want is automatic module reloading.
>>
>> Have a look at the automatic module reloading mechanism implicit
>> within the apache.import_module() function. See documentation at:
>>    http://www.modpython.org/live/current/doc-html/pyapi-apmeth.html
>>
>> This same method is used by mod_python to load a handler. In that
>> case auto reloading is controlled by the PythonAutoReload directive.
>>    http://www.modpython.org/live/current/doc-html/dir-other-par.html
>>
>> The current auto reloading mechanism has a number of shortcomings
>> and will not always work, but depending on the complexity of your
>> code it may be sufficient.
>
> 'Implicit' meaning I can use import normally rather than calling
> apache.import_module, ie. that it should just be working?
> And if the two are the same mechanism, doesn't that the
> 'is there newer code' check is what's failing?

No, the "import" statement is distinct and still is the normal Python
module importing system. The words "implicit within" were a
bad choice, read it as "implemented by". Because they aren't the
same anything imported using "import" isn't in anyway automatically
reloaded.

Even if you replaced imports at global scope within a handler module
with apache.import_module(), it still may not do what you want as the
code which checks for changes will only detect a change in the handler
module and not any module which is imported by it using
apache.import_module().

This is because the check for the sub import is only done at the time
of the call which is when the top level module is imported. Thus, only
way to get it all imported correctly is to touch the top level handler
to update the modification time. That way it will import the top level
and because the sub import has changed it will then reimport it as well.

One way of getting it to work a bit better is to sub import the module 
using
apache.import_module() within the handler function itself each time
it is called. That way the check of whether the sub import code has
changed is on each request and any changes will be updated 
automatically.

> I haven't disabled the PythonAutoReload thing (I'll enable it
> explicitly in my config to be sure), so it should be working, right?
> Are you telling me that (given it's not that) when it fails
> this problem can't be solved through apache or mod_python at all?

As I said, there are shortcomings in the apache.import_module() as it
is currently implemented.

> Is there any predictability to the method that I could affect?
> Removing pyc's, touching everything, sending a signal to kill
> running python interpreters in apache, something like that?

Some people use the method of touching everything, but you will need
to use apache.import_module() instead of the "import" statement for
those parts of your web application you want to be capable of being
reloaded. You should avoid using apache.import_module() on modules
installed in site-packages though.

> Actually, restarting apache is acceptable for me, but it
> appears to me there just has to be a better way, because
> presumably people develop this way...

It is certainly possible to get it to work properly, just not with
mod_python at the moment. Maybe in the future sometime it will be fixed.

If restarts are an acceptable way of managing this at the moment, I
would suggest you go with that.

Graham

From grahamd at dscpl.com.au  Mon Jun 13 01:03:14 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Mon Jun 13 01:03:25 2005
Subject: [mod_python] Best way to use Session
In-Reply-To: <29ec2154050612203132b77a79@mail.gmail.com>
References: <29ec2154050612203132b77a79@mail.gmail.com>
Message-ID: <031c5d289f883cda3496a1479a876620@dscpl.com.au>


On 13/06/2005, at 1:31 PM, Adriano Monteiro wrote:

> Hi again Folks...
>
> Now I'm in trouble handling Sessions...
> I can't make it happen by anyway, and it also break my script
> sometimes... I just don? t understand what is the matter with it.
>
> This is the way I'm importing it:
>
> from mod_python import apache, Session
>
> I was getting an error, saying that my page could not be found. When I
> took of the Session from the import, the error disapeared and the
> script worked.
>
> Is there another way like session = apache.import_module ('xxxx') to
> avoid this problem? I'm almost getting crazy with these bugs... :-/

You are going to have to provide the code for a complete, but small
example if you can, which exhibits the problem. You will need to be
clear about how any files are laid out in the directory hierarchy in
respect of each other and the steps to cause the problem to occur.

Your postings at the moment suggest you have both publisher handlers
and psp pages, plus within the publisher handlers you are explicitly
using the psp module to render pages. Are your problems when using
publisher by itself, or when you are also using the psp module from
within that publisher function? Are you using the same named publisher
code file, eg. index.py, in multiple directories at the same time?

You might want to read:

   http://issues.apache.org/jira/browse/MODPYTHON-9
   http://issues.apache.org/jira/browse/MODPYTHON-10
   http://issues.apache.org/jira/browse/MODPYTHON-11

if you are using the same named publisher file in multiple places. It
can in some circumstances explain why things aren't being found.

Don't know about ".pyc" files. Normally you wouldn't even have these
being created as Apache user would have permission to write to document
directory. If they are being delivered up for no reason when you aren't
even accessing them, can only surmise that it is perhaps in combination
with not found error above, use of Apache MultiViews and use of files
with the same basename and different extensions in the same directory.
ie., index.py and index.psp, with index.pyc file also existing.

You can turn off MultiViews using:

   Options -MultiViews

in your Apache configuration for your directory, but then you will need
to make sure you always use ".py" extension in your URLs.

Graham

From grahamd at dscpl.com.au  Mon Jun 13 01:08:23 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Mon Jun 13 01:08:32 2005
Subject: [mod_python] Best way to use Session
In-Reply-To: <031c5d289f883cda3496a1479a876620@dscpl.com.au>
References: <29ec2154050612203132b77a79@mail.gmail.com>
	<031c5d289f883cda3496a1479a876620@dscpl.com.au>
Message-ID: <dd623eef668ee2ec315d56d76ea74ec4@dscpl.com.au>


On 13/06/2005, at 3:03 PM, Graham Dumpleton wrote:
> Don't know about ".pyc" files. Normally you wouldn't even have these
> being created as Apache user would have permission to write to document
> directory.

Whoops, Apache user "would not have permission".

From grahamd at dscpl.com.au  Mon Jun 13 02:40:24 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Mon Jun 13 02:40:34 2005
Subject: [mod_python] Getting Advx to run with mod_python
In-Reply-To: <4adf377d05061223274d040540@mail.gmail.com>
References: <4adf377d05061007494a0a6a83@mail.gmail.com>
	<64239115bb08332529a781535a3527d1@dscpl.com.au>
	<4adf377d05061223274d040540@mail.gmail.com>
Message-ID: <2bf4151f01f7bc2cf38eab63807f9516@dscpl.com.au>


On 13/06/2005, at 4:27 PM, Kahlil Johnson wrote:

> Hi, thanks I solve the problem however it triggers some doubts. From
> the doc what I got is that I set up a handler per page? is that true?
> I mean I set up the mptest.py and get a index.py printing the hello
> world. However as I advanced in the documentation it seems I need to
> set each hanlder per page.
>
> Is that true, or I am just missunderstanding it?

There is the base mod_python system and then there is 
mod_python.publisher
which builds on top of the base system.

When you use the base mod_python system, ie.,

   AddHandler python-program .py
   PythonHandler mptest

all requests under that directory with a ".py" extension are routed 
through
through the "mptest.py" handler file.

When you use publisher, ie.,

   AddHandler python-program .py
   PythonHandler mod_python.publisher

it is overlaying a dispatch mechanism on top of the directory. That is, 
the
mod_python.publisher system allows you to put published methods in 
multiple
files in the directory with each distinct function having a unique URL.
A function will only be called when its corresponding URL is used.

In the base system, it didn't really matter what the URL path contained 
as
long as it had a ".py" extension.

Thus, they are two distinct things and you need to be clear which one 
you
are talking about.

If you don't have PythonHandler set to either of the above values then 
you are
likely using yet another system on top of mod_python which will likely 
behave
in different ways again.

Graham

> On 6/13/05, Graham Dumpleton <grahamd@dscpl.com.au> wrote:
>>
>> On 11/06/2005, at 12:49 AM, Kahlil Johnson wrote:
>>
>>> I am using Mandrake 10.1 and it has Advx server wiht the Apache 2.0 .
>>> One thing that I found myself lost is locating the files for the
>>> apache configuration. I tried to put up the mod_python but all I get
>>> is that the mime-type is not recognize and the browser ask to 
>>> download
>>> the .py.
>>>
>>> I wonder where can I get the AddType since the
>>> /etc/httpd/conf.d/httpd2.conf  dont includes the AddType in that 
>>> file.
>>>
>>> Also I might ahve messed up somewhere else since it worked once but
>>> since I move several things I no longer know if it will again.
>>
>> Using "AddType" in Apache to trigger mod_python isn't generally how
>> things are setup. You might want to review the installation
>> documentation
>> for mod_python and start over with its test example. An alternate set
>> of instructions for getting a first test example in mod_python working
>> can be found at:
>>
>>   http://www.dscpl.com.au/projects/vampire/articles/modpython-001.html
>>
>> It describes some of the problems that can arise and where to look to
>> solve what is happening, including the common problem of why browsers
>> want to save the response to a file.
>>
>> Graham
>>
>>
>
>
> -- 
> Kahlil Johnson
> "Ya tengo GMAIL!!"

From dharana at dharana.net  Mon Jun 13 09:38:34 2005
From: dharana at dharana.net (dharana)
Date: Mon Jun 13 09:39:49 2005
Subject: [mod_python] Suggestion for improving documentation
Message-ID: <42AD8C5A.2050407@dharana.net>

I believe it would make it easier for people new to modpython looking on how to 
fetch raw post data (ajax, xmlHttpRequest) if someone added the words "RAW POST 
data" or something similar to the read([len]) entry in the documentation.

   http://www.modpython.org/live/current/doc-html/pyapi-mprequest-meth.html

I have read this page twice and the doc page about req members but I couldn't 
saw that .read() was what I needed until I started eliminating possibilities one 
by one.

-- 
dharana

From dan.eloff at gmail.com  Mon Jun 13 09:41:37 2005
From: dan.eloff at gmail.com (Dan Eloff)
Date: Mon Jun 13 09:41:45 2005
Subject: [mod_python] How to perform cleanup action when the python
	process dies?
In-Reply-To: <b354fe76a29c14a4d03dd6bd2cf09d55@dscpl.com.au>
References: <4817b6fc050611164620228f3e@mail.gmail.com>
	<b354fe76a29c14a4d03dd6bd2cf09d55@dscpl.com.au>
Message-ID: <4817b6fc05061306411e345319@mail.gmail.com>

Thanks Graham, I completely missed the fact that server is an object :)

-Dan

On 6/12/05, Graham Dumpleton <grahamd@dscpl.com.au> wrote:
> 
> On 12/06/2005, at 9:46 AM, Dan Eloff wrote:
> 
> > I have global resources that persist as long as the process does
> > (database connections) but they could also be files or sockets or
> > other resources that need to be released. Python destructors are very
> > dicey from what I've heard, there seems no guarantee that the __del__
> > method on the connection pool will be called before the database
> > module is itself destroyed. I can't use req.register_cleanup() since
> > the objects stay alive across all the requests. When apache is
> > restarted though, how do I ensure the database connections were closed
> > on exit?
> >
> > I saw a similar post to this on the list, but it just recommends not
> > to trust python destructors for important things like closing a
> > database connection.
> 
> Use req.server.register_cleanup(). Although accessed through the "req"
> object, it allows registration of a function which is to be called on
> server shutdown. Since you would only want to call it once, make sure
> you a keep a flag of your own which records when you have already done
> so.
> 
> Graham
> 
>

From nick at dd.revealed.net  Mon Jun 13 09:46:49 2005
From: nick at dd.revealed.net (Nick)
Date: Mon Jun 13 09:47:09 2005
Subject: [mod_python] Is it possible to not reuse interpreters?
In-Reply-To: <b71082d805061218145153edbd@mail.gmail.com>
References: <b71082d805061218145153edbd@mail.gmail.com>
Message-ID: <42AD8E49.8020104@dd.revealed.net>

Bart wrote:
> Apologies if this has been asked and answered before, 
> but is there any way to make apache/mod_python
> temporarily *not* reuse the same interpreter? 
> Google wasn't too helpful on the matter other
> than providing the reasons.

During development I sometimes find it helpful to use the prefork MPM for 
apache2, and set the MaxRequestsPerChild to 1.  That will force a new 
server, and therefore Python interpreter, to be spawned for each request.

Nick
From py.adriano at gmail.com  Mon Jun 13 11:13:56 2005
From: py.adriano at gmail.com (Adriano Monteiro)
Date: Mon Jun 13 11:14:02 2005
Subject: [mod_python] Best way to use Session
In-Reply-To: <dd623eef668ee2ec315d56d76ea74ec4@dscpl.com.au>
References: <29ec2154050612203132b77a79@mail.gmail.com>
	<031c5d289f883cda3496a1479a876620@dscpl.com.au>
	<dd623eef668ee2ec315d56d76ea74ec4@dscpl.com.au>
Message-ID: <29ec215405061308132be86bab@mail.gmail.com>

Should the problem be because i'm trying to use Session within the psp file?

Regards

On 6/13/05, Graham Dumpleton <grahamd@dscpl.com.au> wrote:
> 
> On 13/06/2005, at 3:03 PM, Graham Dumpleton wrote:
> > Don't know about ".pyc" files. Normally you wouldn't even have these
> > being created as Apache user would have permission to write to document
> > directory.
> 
> Whoops, Apache user "would not have permission".
> 
> 


-- 

Adriano Monteiro Marques
www.gopython.com.br
py.adriano@gmail.com

I'm FREE... Are you?
(PYTHON powered)

From listspam at flowtheory.net  Mon Jun 13 13:12:06 2005
From: listspam at flowtheory.net (Joshua Ginsberg)
Date: Mon Jun 13 13:11:52 2005
Subject: [mod_python] PythonOption and req.get_options()
Message-ID: <aff1717d382d9718468402a4060121a3@flowtheory.net>

I must be missing something totally obvious here...

I've got the base path and base URL for my application defined in 
httpd.conf as a PythonOption directive:

     PythonOption baseURL http://foo.bar.tld/path/to/app/
     PythonOption basePath "/var/www/html/path/to/app/"

And then in my PSP code, I'm opening a pickle file based on that 
basePath directive:

pyOptions = req.get_options()
pckPath = pyOptions['basePath']+'signup_data.pck'
ifs = open(pckPath)

However, I get the following error:

   File "/var/www/network/jag/signup/dnq.psp", line 9, in ?
     ifs = open('signup_data.pck')

IOError: [Errno 2] No such file or directory: 'signup_data.pck'

So I thought "Hmm... let me see what the value of pyOptions is... so I 
changed my code:

pyOptions = req.get_options()
req.write(str(pyOptions))
pckPath = pyOptions['basePath']+'signup_data.pck'
ifs = open(pckPath)

And then the pickle file gets opened and it throws an error from 120 
lines further into the PSP file because I called psp.redirect and had 
already returned headers to print my options table. Oh, and the options 
table is printed with the correct values.

What am I missing? FC2 system with mod_python-3.1.3-1.fc2.2 from RPM. 
Thanks!

-jag

-------------- next part --------------
A non-text attachment was scrubbed...
Name: unknown.jpg
Type: image/jpeg
Size: 1984 bytes
Desc: not available
Url : http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20050613/6867cbd1/unknown.jpg
-------------- next part --------------

Joshua Ginsberg -- joshg@brainstorminternet.net
Brainstorm Internet Network Operations
970-247-1442 x131
From grahamd at dscpl.com.au  Mon Jun 13 18:26:40 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Mon Jun 13 18:26:59 2005
Subject: [mod_python] PythonOption and req.get_options()
In-Reply-To: <aff1717d382d9718468402a4060121a3@flowtheory.net>
References: <aff1717d382d9718468402a4060121a3@flowtheory.net>
Message-ID: <fd59337c697efae6d4d3d190ea9d5aaa@dscpl.com.au>


On 14/06/2005, at 3:12 AM, Joshua Ginsberg wrote:

> I must be missing something totally obvious here...
>
> I've got the base path and base URL for my application defined in  
> httpd.conf as a PythonOption directive:
>
>     PythonOption baseURL http://foo.bar.tld/path/to/app/
>     PythonOption basePath "/var/www/html/path/to/app/"
>
> And then in my PSP code, I'm opening a pickle file based on that  
> basePath directive:
>
> pyOptions = req.get_options()
> pckPath = pyOptions['basePath']+'signup_data.pck'
> ifs = open(pckPath)
>
> However, I get the following error:
>
>   File "/var/www/network/jag/signup/dnq.psp", line 9, in ?
>     ifs = open('signup_data.pck')
>
> IOError: [Errno 2] No such file or directory: 'signup_data.pck'

Don't put quotes around the value you set basePath to to as they will
not be removed, it will literally be set to what you put. Ie., use:

     PythonOption baseURL http://foo.bar.tld/path/to/app/
     PythonOption basePath /var/www/html/path/to/app/

Also recommend using:

   import os
   pyOptions = req.get_options()
   pckPath = os.path.join(pyOptions['basePath'],'signup_data.pck')

As you had your code originally, if you forget the trailing '/' on
the path it will fail. Using os.path.join() will ensure that a slash
is always added even if basePath doesn't include it.

BTW, there is nothing wrong with using hard coded paths in Apache
configuration files, but personally I don't like them as when you
move around directories of an application you potentially have to
change them.

As such, you might consider making the determination of the root
of your application more dynamic. You can do this if you always
have PythonHandler defined at the point of the top directory of
your web application. Ie., access "req.hlist" (mod_python 3.X)
and it will give you the name of the directory PythonHandler is
defined for.

   import os
   pckPath = os.path.join(req.hlist,'signup_data.pck')

Determining the base URL from req.hlist is possible but requires
more work. Look at the _ConfigCache._search() method of code in
the file:

   http://svn.dscpl.com.au/vampire/trunk/software/vampire/config.py

for an example. In that case it is using the existence of a config
file as the root of where you are working with, stopping where the
PythonHandler directive is defined if no config file found. The result
of the search are variables defining handler root, config root, base
URL absolute and base URL relative etc. For example:

    
http://www.dscpl.com.au/projects/vampire/examples/psp/ 
vampire_config.html

Note that base URL absolute doesn't include HTTP scheme or hostname
though as these can change dependent on many things. If these are
needed they should be determined from req, req.server and req.connection
as necessary.

Graham


From grahamd at dscpl.com.au  Mon Jun 13 18:51:47 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Mon Jun 13 18:51:59 2005
Subject: [mod_python] Best way to use Session
In-Reply-To: <29ec215405061308132be86bab@mail.gmail.com>
References: <29ec2154050612203132b77a79@mail.gmail.com>
	<031c5d289f883cda3496a1479a876620@dscpl.com.au>
	<dd623eef668ee2ec315d56d76ea74ec4@dscpl.com.au>
	<29ec215405061308132be86bab@mail.gmail.com>
Message-ID: <18bd761b1e4b4b955443505e9dea8e46@dscpl.com.au>


On 14/06/2005, at 1:13 AM, Adriano Monteiro wrote:

> Should the problem be because i'm trying to use Session within the psp 
> file?

Shouldn't, problems which come up when mixing publisher and psp 
generally
fall into either form POST data going missing, or hanging requests
because of two session objects being created. See:

   http://issues.apache.org/jira/browse/MODPYTHON-38


From gnb at itga.com.au  Mon Jun 13 22:14:02 2005
From: gnb at itga.com.au (Gregory Bond)
Date: Mon Jun 13 22:14:11 2005
Subject: [mod_python] SOAP / Web Services handler
Message-ID: <42AE3D6A.6000204@itga.com.au>

I need to make some python code available via Web Services.  We already 
have mod_python running.

Is there some common / standard / recommended Web Services framework for 
mod_python?

I've seen Clarens (untouched for 2+ years, so looks kinda dead to me) 
and ZSI (neat).  Any others?
From grahamd at dscpl.com.au  Mon Jun 13 22:38:04 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Mon Jun 13 22:38:15 2005
Subject: [mod_python] SOAP / Web Services handler
Message-ID: <1118716684.2726@dscpl.user.openhosting.com>

Gregory Bond wrote ..
> I need to make some python code available via Web Services.  We already
> have mod_python running.
> 
> Is there some common / standard / recommended Web Services framework for
> mod_python?
> 
> I've seen Clarens (untouched for 2+ years, so looks kinda dead to me) 
> and ZSI (neat).  Any others?

If you are wanting to provide WSDL/document style web services, I believe
the only real choice unless you want to hand craft everything, is to use ZSI.

For RPC style SOAP services there is SOAPpy, also a part of the pywebsvcs
project on SourceForge where you can find ZSI. Overall though, if you want
to do RPC style SOAP services, you would be better of just using XML-RPC
as RPC with SOAP has various limitations. You can see how XML-RPC and
SOAP compare at:

  http://www.xmlrpc.com/discuss/msgReader$2086?mode=topic

Whereas ZSI is a little toolkit which can be used within something bigger,
Clarens appears to be a bigger framework which you would have to buy
(not money) into to make serious use of it.

Graham
From gnb at itga.com.au  Tue Jun 14 04:17:08 2005
From: gnb at itga.com.au (Gregory Bond)
Date: Tue Jun 14 04:17:47 2005
Subject: [mod_python] SOAP / Web Services handler
In-Reply-To: <60aa719b0506140051d48367b@mail.gmail.com>
References: <42AE3D6A.6000204@itga.com.au>
	<60aa719b0506140051d48367b@mail.gmail.com>
Message-ID: <42AE9284.4000102@itga.com.au>

Thanks to Conrad & Graham!

Conrad Steenberg wrote:

>>I've seen Clarens (untouched for 2+ years, so looks kinda dead to me)
>>    
>>
>
>Oops, what gave you that idea? 
>

Um... sorry about that.  Google turned up a link to it from the 
python.org site that was v. 0.4 (or something) dated 2003.  Didn't find 
the official home page in my quick search!

>The upshot is that I have to agree with
>Graham D's response: use XML-RPC: it's well standardized and usable
>from a huge number of clients with minimal effort.
>
>  
>

I was under the impression that MS web services were SOAP based not 
XML-RPC based?

I'm a complete newbie when it comes to Web Services, but the requirement 
is pretty much that Joe Punter somewhere on the web can use his normal 
PC dev tools and code up calls to my Python functions (in VB, Excel or 
Visual Studio etc) just as easily/conveniently as if I had published the 
service using IIS or whatever is the official MS-blessed way of doing 
this. 

My international colleagues are using WebLogic or JBOSS for doing web 
services, but they are a java shop and all my logic is in python!

Greg.
You are in a maze of twisty little acronyms, all different.

From grahamd at dscpl.com.au  Tue Jun 14 06:20:11 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Tue Jun 14 06:20:30 2005
Subject: [mod_python] SOAP / Web Services handler
In-Reply-To: <42AE9284.4000102@itga.com.au>
References: <42AE3D6A.6000204@itga.com.au>
	<60aa719b0506140051d48367b@mail.gmail.com>
	<42AE9284.4000102@itga.com.au>
Message-ID: <657b908020a0c38bae91567c982c4f7f@dscpl.com.au>


On 14/06/2005, at 6:17 PM, Gregory Bond wrote:

>> The upshot is that I have to agree with
>> Graham D's response: use XML-RPC: it's well standardized and usable
>> from a huge number of clients with minimal effort.
>
> I was under the impression that MS web services were SOAP based not 
> XML-RPC based?

If you are writing some new services, does it matter what MS uses for 
there own?
If you are having to write clients against MS web services then I can 
understand
the need to talk SOAP, but other than that SOAP wouldn't be my first 
choice, or
my second, or my third, ....

> I'm a complete newbie when it comes to Web Services, but the 
> requirement is pretty much that Joe Punter somewhere on the web can 
> use his normal PC dev tools and code up calls to my Python functions 
> (in VB, Excel or Visual Studio etc) just as easily/conveniently as if 
> I had published the service using IIS or whatever is the official 
> MS-blessed way of doing this.
> My international colleagues are using WebLogic or JBOSS for doing web 
> services, but they are a java shop and all my logic is in python!

Hmmm, I have never seen the words "easily/conveniently" mentioned in 
conjunction
with SOAP before. I also wouldn't assume that just because you publish 
a SOAP
API that someone will go to the effort of specially writing clients to 
use it.
The only SOAP API I have seen really take off in that way was Google 
search.

> You are in a maze of twisty little acronyms, all different.

Sounds just like SOAP. :-)

Sorry if I sound cynical. You might find the following an interesting 
read:

   http://www.manageability.org/blog/stuff/soap-is-dead

Reminded me that the other alternative to SOAP/XML-RPC is REST style 
web services.

Graham

From amarrero at mitre.org  Tue Jun 14 08:54:04 2005
From: amarrero at mitre.org (=?ISO-8859-1?Q?Alexis_Marrero-Narv=E1ez?=)
Date: Tue Jun 14 08:54:04 2005
Subject: [mod_python] SOAP / Web Services handler
In-Reply-To: <657b908020a0c38bae91567c982c4f7f@dscpl.com.au>
References: <42AE3D6A.6000204@itga.com.au>
	<60aa719b0506140051d48367b@mail.gmail.com>
	<42AE9284.4000102@itga.com.au>
	<657b908020a0c38bae91567c982c4f7f@dscpl.com.au>
Message-ID: <2B0D5553-BC78-4F12-AA45-A46603D7758C@mitre.org>

Does anyone has a "Hello World" example of a web service using ZSI?

/amn

On Jun 14, 2005, at 6:20 AM, Graham Dumpleton wrote:

>
> On 14/06/2005, at 6:17 PM, Gregory Bond wrote:
>
>
>>> The upshot is that I have to agree with
>>> Graham D's response: use XML-RPC: it's well standardized and usable
>>> from a huge number of clients with minimal effort.
>>>
>>
>> I was under the impression that MS web services were SOAP based  
>> not XML-RPC based?
>>
>
> If you are writing some new services, does it matter what MS uses  
> for there own?
> If you are having to write clients against MS web services then I  
> can understand
> the need to talk SOAP, but other than that SOAP wouldn't be my  
> first choice, or
> my second, or my third, ....
>
>
>> I'm a complete newbie when it comes to Web Services, but the  
>> requirement is pretty much that Joe Punter somewhere on the web  
>> can use his normal PC dev tools and code up calls to my Python  
>> functions (in VB, Excel or Visual Studio etc) just as easily/ 
>> conveniently as if I had published the service using IIS or  
>> whatever is the official MS-blessed way of doing this.
>> My international colleagues are using WebLogic or JBOSS for doing  
>> web services, but they are a java shop and all my logic is in python!
>>
>
> Hmmm, I have never seen the words "easily/conveniently" mentioned  
> in conjunction
> with SOAP before. I also wouldn't assume that just because you  
> publish a SOAP
> API that someone will go to the effort of specially writing clients  
> to use it.
> The only SOAP API I have seen really take off in that way was  
> Google search.
>
>
>> You are in a maze of twisty little acronyms, all different.
>>
>
> Sounds just like SOAP. :-)
>
> Sorry if I sound cynical. You might find the following an  
> interesting read:
>
>   http://www.manageability.org/blog/stuff/soap-is-dead
>
> Reminded me that the other alternative to SOAP/XML-RPC is REST  
> style web services.
>
> Graham
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>


From grahamd at dscpl.com.au  Tue Jun 14 16:44:44 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Tue Jun 14 16:44:55 2005
Subject: [mod_python] SOAP / Web Services handler
In-Reply-To: <2B0D5553-BC78-4F12-AA45-A46603D7758C@mitre.org>
References: <42AE3D6A.6000204@itga.com.au>
	<60aa719b0506140051d48367b@mail.gmail.com>
	<42AE9284.4000102@itga.com.au>
	<657b908020a0c38bae91567c982c4f7f@dscpl.com.au>
	<2B0D5553-BC78-4F12-AA45-A46603D7758C@mitre.org>
Message-ID: <67b529681c9702a158e632e909a25459@dscpl.com.au>

Did you try reading the ZSI documentation?

   http://pywebsvcs.sourceforge.net/zsi.html#SECTION003130000000000000000


On 14/06/2005, at 10:54 PM, Alexis Marrero-Narv?ez wrote:

> Does anyone has a "Hello World" example of a web service using ZSI?
>
> /amn
>
> On Jun 14, 2005, at 6:20 AM, Graham Dumpleton wrote:
>
>>
>> On 14/06/2005, at 6:17 PM, Gregory Bond wrote:
>>
>>
>>>> The upshot is that I have to agree with
>>>> Graham D's response: use XML-RPC: it's well standardized and usable
>>>> from a huge number of clients with minimal effort.
>>>>
>>>
>>> I was under the impression that MS web services were SOAP based not 
>>> XML-RPC based?
>>>
>>
>> If you are writing some new services, does it matter what MS uses for 
>> there own?
>> If you are having to write clients against MS web services then I can 
>> understand
>> the need to talk SOAP, but other than that SOAP wouldn't be my first 
>> choice, or
>> my second, or my third, ....
>>
>>
>>> I'm a complete newbie when it comes to Web Services, but the 
>>> requirement is pretty much that Joe Punter somewhere on the web can 
>>> use his normal PC dev tools and code up calls to my Python functions 
>>> (in VB, Excel or Visual Studio etc) just as easily/conveniently as 
>>> if I had published the service using IIS or whatever is the official 
>>> MS-blessed way of doing this.
>>> My international colleagues are using WebLogic or JBOSS for doing 
>>> web services, but they are a java shop and all my logic is in 
>>> python!
>>>
>>
>> Hmmm, I have never seen the words "easily/conveniently" mentioned in 
>> conjunction
>> with SOAP before. I also wouldn't assume that just because you 
>> publish a SOAP
>> API that someone will go to the effort of specially writing clients 
>> to use it.
>> The only SOAP API I have seen really take off in that way was Google 
>> search.
>>
>>
>>> You are in a maze of twisty little acronyms, all different.
>>>
>>
>> Sounds just like SOAP. :-)
>>
>> Sorry if I sound cynical. You might find the following an interesting 
>> read:
>>
>>   http://www.manageability.org/blog/stuff/soap-is-dead
>>
>> Reminded me that the other alternative to SOAP/XML-RPC is REST style 
>> web services.
>>
>> Graham
>>
>> _______________________________________________
>> Mod_python mailing list
>> Mod_python@modpython.org
>> http://mailman.modpython.org/mailman/listinfo/mod_python
>>
>
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python


From amarrero at mitre.org  Tue Jun 14 17:35:18 2005
From: amarrero at mitre.org (=?ISO-8859-1?Q?Alexis_Marrero-Narv=E1ez?=)
Date: Tue Jun 14 17:35:17 2005
Subject: [mod_python] SOAP / Web Services handler
In-Reply-To: <67b529681c9702a158e632e909a25459@dscpl.com.au>
References: <42AE3D6A.6000204@itga.com.au>
	<60aa719b0506140051d48367b@mail.gmail.com>
	<42AE9284.4000102@itga.com.au>
	<657b908020a0c38bae91567c982c4f7f@dscpl.com.au>
	<2B0D5553-BC78-4F12-AA45-A46603D7758C@mitre.org>
	<67b529681c9702a158e632e909a25459@dscpl.com.au>
Message-ID: <B25D03AF-FFCC-4EA9-B54F-F15FD36F550A@mitre.org>

http://www.redcoat.net/pics/answer.gif
Promise!
/amn

On Jun 14, 2005, at 4:44 PM, Graham Dumpleton wrote:

> Did you try reading the ZSI documentation?
>
>   http://pywebsvcs.sourceforge.net/ 
> zsi.html#SECTION003130000000000000000
>
>
> On 14/06/2005, at 10:54 PM, Alexis Marrero-Narv?ez wrote:
>
>
>> Does anyone has a "Hello World" example of a web service using ZSI?
>>
>> /amn
>>
>> On Jun 14, 2005, at 6:20 AM, Graham Dumpleton wrote:
>>
>>
>>>
>>> On 14/06/2005, at 6:17 PM, Gregory Bond wrote:
>>>
>>>
>>>
>>>>> The upshot is that I have to agree with
>>>>> Graham D's response: use XML-RPC: it's well standardized and  
>>>>> usable
>>>>> from a huge number of clients with minimal effort.
>>>>>
>>>>>
>>>>
>>>> I was under the impression that MS web services were SOAP based  
>>>> not XML-RPC based?
>>>>
>>>>
>>>
>>> If you are writing some new services, does it matter what MS uses  
>>> for there own?
>>> If you are having to write clients against MS web services then I  
>>> can understand
>>> the need to talk SOAP, but other than that SOAP wouldn't be my  
>>> first choice, or
>>> my second, or my third, ....
>>>
>>>
>>>
>>>> I'm a complete newbie when it comes to Web Services, but the  
>>>> requirement is pretty much that Joe Punter somewhere on the web  
>>>> can use his normal PC dev tools and code up calls to my Python  
>>>> functions (in VB, Excel or Visual Studio etc) just as easily/ 
>>>> conveniently as if I had published the service using IIS or  
>>>> whatever is the official MS-blessed way of doing this.
>>>> My international colleagues are using WebLogic or JBOSS for  
>>>> doing web services, but they are a java shop and all my logic is  
>>>> in python!
>>>>
>>>>
>>>
>>> Hmmm, I have never seen the words "easily/conveniently" mentioned  
>>> in conjunction
>>> with SOAP before. I also wouldn't assume that just because you  
>>> publish a SOAP
>>> API that someone will go to the effort of specially writing  
>>> clients to use it.
>>> The only SOAP API I have seen really take off in that way was  
>>> Google search.
>>>
>>>
>>>
>>>> You are in a maze of twisty little acronyms, all different.
>>>>
>>>>
>>>
>>> Sounds just like SOAP. :-)
>>>
>>> Sorry if I sound cynical. You might find the following an  
>>> interesting read:
>>>
>>>   http://www.manageability.org/blog/stuff/soap-is-dead
>>>
>>> Reminded me that the other alternative to SOAP/XML-RPC is REST  
>>> style web services.
>>>
>>> Graham
>>>
>>> _______________________________________________
>>> Mod_python mailing list
>>> Mod_python@modpython.org
>>> http://mailman.modpython.org/mailman/listinfo/mod_python
>>>
>>>
>>
>>
>> _______________________________________________
>> Mod_python mailing list
>> Mod_python@modpython.org
>> http://mailman.modpython.org/mailman/listinfo/mod_python
>>
>
>



From dan.eloff at gmail.com  Wed Jun 15 16:36:22 2005
From: dan.eloff at gmail.com (Dan Eloff)
Date: Wed Jun 15 16:36:27 2005
Subject: [mod_python] Question about Session security
Message-ID: <4817b6fc0506151336480c47fc@mail.gmail.com>

I was looking through the Session code and I found an omission that bothers me.

In all the session mechanisms I've implemented in the past I have
always checked that the person resuming the session is at the same ip
as the person who created it.

Anyone who gleans the session cookie (which is sent in plaintext on
every request) could pass themselves off as the original person. If
you check the ip you restrict this down from the entire internet to
only people on the same network, which makes it less likely to happen.

Is there a reason for omitting this, something I don't understand maybe?

-Dan

From grahamd at dscpl.com.au  Wed Jun 15 17:25:28 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Wed Jun 15 17:25:40 2005
Subject: [mod_python] Question about Session security
In-Reply-To: <4817b6fc0506151336480c47fc@mail.gmail.com>
References: <4817b6fc0506151336480c47fc@mail.gmail.com>
Message-ID: <781a468205a245ba3612c0d57c183c7f@dscpl.com.au>

On 16/06/2005, at 6:36 AM, Dan Eloff wrote:

> I was looking through the Session code and I found an omission that 
> bothers me.
>
> In all the session mechanisms I've implemented in the past I have
> always checked that the person resuming the session is at the same ip
> as the person who created it.
>
> Anyone who gleans the session cookie (which is sent in plaintext on
> every request) could pass themselves off as the original person. If
> you check the ip you restrict this down from the entire internet to
> only people on the same network, which makes it less likely to happen.
>
> Is there a reason for omitting this, something I don't understand 
> maybe?

You can use req.connection to find the users incoming IP address and
save that in the session yourself for later checking.

Ie., not a prepackaged check, but the bits are there for you to do it
yourself in the manner you need.

Graham

From jg.lists at sympatico.ca  Wed Jun 15 17:41:42 2005
From: jg.lists at sympatico.ca (Jim Gallacher)
Date: Wed Jun 15 17:37:35 2005
Subject: [mod_python] Question about Session security
In-Reply-To: <781a468205a245ba3612c0d57c183c7f@dscpl.com.au>
References: <4817b6fc0506151336480c47fc@mail.gmail.com>
	<781a468205a245ba3612c0d57c183c7f@dscpl.com.au>
Message-ID: <42B0A096.1070407@sympatico.ca>

Graham Dumpleton wrote:
> On 16/06/2005, at 6:36 AM, Dan Eloff wrote:
> 
>> I was looking through the Session code and I found an omission that 
>> bothers me.
>>
>> In all the session mechanisms I've implemented in the past I have
>> always checked that the person resuming the session is at the same ip
>> as the person who created it.
>>
>> Anyone who gleans the session cookie (which is sent in plaintext on
>> every request) could pass themselves off as the original person. If
>> you check the ip you restrict this down from the entire internet to
>> only people on the same network, which makes it less likely to happen.
>>
>> Is there a reason for omitting this, something I don't understand maybe?
> 
> 
> You can use req.connection to find the users incoming IP address and
> save that in the session yourself for later checking.
> 
> Ie., not a prepackaged check, but the bits are there for you to do it
> yourself in the manner you need.

Since I'm (still) messing with the session code, maybe this is worth 
building this into the base code now? If it is a security issue let's 
address it and save users the worry and bother of implementing their own.

Jim

From jg.lists at sympatico.ca  Wed Jun 15 17:48:59 2005
From: jg.lists at sympatico.ca (Jim Gallacher)
Date: Wed Jun 15 17:44:51 2005
Subject: [mod_python] Question about Session security
In-Reply-To: <42B0A096.1070407@sympatico.ca>
References: <4817b6fc0506151336480c47fc@mail.gmail.com>	<781a468205a245ba3612c0d57c183c7f@dscpl.com.au>
	<42B0A096.1070407@sympatico.ca>
Message-ID: <42B0A24B.3040808@sympatico.ca>

Jim Gallacher wrote:
> Graham Dumpleton wrote:
> 
>> On 16/06/2005, at 6:36 AM, Dan Eloff wrote:
>>
>>> I was looking through the Session code and I found an omission that 
>>> bothers me.
>>>
>>> In all the session mechanisms I've implemented in the past I have
>>> always checked that the person resuming the session is at the same ip
>>> as the person who created it.
>>>
>>> Anyone who gleans the session cookie (which is sent in plaintext on
>>> every request) could pass themselves off as the original person. If
>>> you check the ip you restrict this down from the entire internet to
>>> only people on the same network, which makes it less likely to happen.
>>>
>>> Is there a reason for omitting this, something I don't understand maybe?
>>
>>
>>
>> You can use req.connection to find the users incoming IP address and
>> save that in the session yourself for later checking.
>>
>> Ie., not a prepackaged check, but the bits are there for you to do it
>> yourself in the manner you need.
> 
> 
> Since I'm (still) messing with the session code, maybe this is worth 
> building this into the base code now? If it is a security issue let's 
> address it and save users the worry and bother of implementing their own.
> 

Oh and another thing that's always bother me just a little - md5 
collisions of the generated session id's. I know the probability of a 
collision is extremely low, but it is finite. Checking an existing 
session against the ip would eliminate any chance of a collision (I think).

Regards,
Jim
From dharana at dharana.net  Wed Jun 15 17:47:19 2005
From: dharana at dharana.net (dharana)
Date: Wed Jun 15 17:47:27 2005
Subject: [mod_python] Question about Session security
In-Reply-To: <4817b6fc0506151336480c47fc@mail.gmail.com>
References: <4817b6fc0506151336480c47fc@mail.gmail.com>
Message-ID: <42B0A1E7.3080904@dharana.net>

To check against IP can be a burden for some users. If your users are behind a 
wall of load balanced proxies with different IP addresses (and/or network) they 
may find their sessions reloaded every two requests.

I think it's better to leave it to the people implementing it to choose wether 
or not to take the risk.

Dan Eloff wrote:
> I was looking through the Session code and I found an omission that bothers me.
> 
> In all the session mechanisms I've implemented in the past I have
> always checked that the person resuming the session is at the same ip
> as the person who created it.
> 
> Anyone who gleans the session cookie (which is sent in plaintext on
> every request) could pass themselves off as the original person. If
> you check the ip you restrict this down from the entire internet to
> only people on the same network, which makes it less likely to happen.
> 
> Is there a reason for omitting this, something I don't understand maybe?
> 
> -Dan
> 
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
> 
> 
> 

-- 
dharana

From nick at dd.revealed.net  Wed Jun 15 17:48:57 2005
From: nick at dd.revealed.net (Nick)
Date: Wed Jun 15 17:49:12 2005
Subject: [mod_python] Question about Session security
In-Reply-To: <42B0A096.1070407@sympatico.ca>
References: <4817b6fc0506151336480c47fc@mail.gmail.com>	<781a468205a245ba3612c0d57c183c7f@dscpl.com.au>
	<42B0A096.1070407@sympatico.ca>
Message-ID: <42B0A249.3020008@dd.revealed.net>

Jim Gallacher wrote:
>> You can use req.connection to find the users incoming IP address and
>> save that in the session yourself for later checking.
>>
>> Ie., not a prepackaged check, but the bits are there for you to do it
>> yourself in the manner you need.
> 
> Since I'm (still) messing with the session code, maybe this is worth 
> building this into the base code now? If it is a security issue let's 
> address it and save users the worry and bother of implementing their own.

Probably a good idea, but make it something you can optionally turn off, as 
there may be someone who wants to have an extended timeout on cookies and 
has users that may connect to the app from work, home, starbucks, etc. but 
keep the same session.

Nick
From jg.lists at sympatico.ca  Wed Jun 15 17:57:00 2005
From: jg.lists at sympatico.ca (Jim Gallacher)
Date: Wed Jun 15 17:52:51 2005
Subject: [mod_python] Question about Session security
In-Reply-To: <42B0A249.3020008@dd.revealed.net>
References: <4817b6fc0506151336480c47fc@mail.gmail.com>	<781a468205a245ba3612c0d57c183c7f@dscpl.com.au>
	<42B0A096.1070407@sympatico.ca> <42B0A249.3020008@dd.revealed.net>
Message-ID: <42B0A42C.4070802@sympatico.ca>

Nick wrote:
> Jim Gallacher wrote:
> 
>>> You can use req.connection to find the users incoming IP address and
>>> save that in the session yourself for later checking.
>>>
>>> Ie., not a prepackaged check, but the bits are there for you to do it
>>> yourself in the manner you need.
>>
>>
>> Since I'm (still) messing with the session code, maybe this is worth 
>> building this into the base code now? If it is a security issue let's 
>> address it and save users the worry and bother of implementing their own.
> 
> 
> Probably a good idea, but make it something you can optionally turn off, 
> as there may be someone who wants to have an extended timeout on cookies 
> and has users that may connect to the app from work, home, starbucks, 
> etc. but keep the same session.
> 
> Nick
> 

Very good point. I hadn't thought of that.

Jim
From dharana at dharana.net  Wed Jun 15 17:55:55 2005
From: dharana at dharana.net (dharana)
Date: Wed Jun 15 17:56:03 2005
Subject: [mod_python] Question about Session security
In-Reply-To: <42B0A24B.3040808@sympatico.ca>
References: <4817b6fc0506151336480c47fc@mail.gmail.com>	<781a468205a245ba3612c0d57c183c7f@dscpl.com.au>	<42B0A096.1070407@sympatico.ca>
	<42B0A24B.3040808@sympatico.ca>
Message-ID: <42B0A3EB.90801@dharana.net>

Just for the record. In Spain millions of users are forced to go throught our 
ISP's forced proxies. I have to mess with HTTP_X_FORWARDED_FOR and other HTTP 
headers to find their real IP.

If someone is worried about collisions they could always subclass session and 
make their own session_id generator function. It could also be possible to let 
them choose a hash function (md5, sha1, whirlpool, etc)

I don't think adding the IP to make it harder to find collisions is really so 
much of an advantage, think of NAT users.


http://www.google.com/search?q=telefonica%20proxies%20problems


Jim Gallacher wrote:
> Jim Gallacher wrote:
> 
>> Graham Dumpleton wrote:
>>
>>> On 16/06/2005, at 6:36 AM, Dan Eloff wrote:
>>>
>>>> I was looking through the Session code and I found an omission that 
>>>> bothers me.
>>>>
>>>> In all the session mechanisms I've implemented in the past I have
>>>> always checked that the person resuming the session is at the same ip
>>>> as the person who created it.
>>>>
>>>> Anyone who gleans the session cookie (which is sent in plaintext on
>>>> every request) could pass themselves off as the original person. If
>>>> you check the ip you restrict this down from the entire internet to
>>>> only people on the same network, which makes it less likely to happen.
>>>>
>>>> Is there a reason for omitting this, something I don't understand 
>>>> maybe?
>>>
>>>
>>>
>>>
>>> You can use req.connection to find the users incoming IP address and
>>> save that in the session yourself for later checking.
>>>
>>> Ie., not a prepackaged check, but the bits are there for you to do it
>>> yourself in the manner you need.
>>
>>
>>
>> Since I'm (still) messing with the session code, maybe this is worth 
>> building this into the base code now? If it is a security issue let's 
>> address it and save users the worry and bother of implementing their own.
>>
> 
> Oh and another thing that's always bother me just a little - md5 
> collisions of the generated session id's. I know the probability of a 
> collision is extremely low, but it is finite. Checking an existing 
> session against the ip would eliminate any chance of a collision (I think).
> 
> Regards,
> Jim
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
> 
> 
> 

-- 
dharana

From modpython at holovaty.com  Wed Jun 15 17:57:26 2005
From: modpython at holovaty.com (Adrian Holovaty)
Date: Wed Jun 15 18:00:59 2005
Subject: [mod_python] Question about Session security
In-Reply-To: <42B0A249.3020008@dd.revealed.net>
References: <4817b6fc0506151336480c47fc@mail.gmail.com>
	<42B0A096.1070407@sympatico.ca> <42B0A249.3020008@dd.revealed.net>
Message-ID: <200506151657.26578.modpython@holovaty.com>

Nick wrote:
> Jim Gallacher wrote:
> >> You can use req.connection to find the users incoming IP address and
> >> save that in the session yourself for later checking.
> >>
> >> Ie., not a prepackaged check, but the bits are there for you to do it
> >> yourself in the manner you need.
> >
> > Since I'm (still) messing with the session code, maybe this is worth
> > building this into the base code now? If it is a security issue let's
> > address it and save users the worry and bother of implementing their own.

I'm not sure it's foolproof to assume a user's IP address will be the same 
throughout a session. I seem to recall that AOL users have different IP 
addresses throughout sessions, because the AOL proxies use some sort of 
round-robin system.

http://www.google.com/search?q=%22ip+address%22+session+aol

Adrian
From jg.lists at sympatico.ca  Wed Jun 15 18:46:26 2005
From: jg.lists at sympatico.ca (Jim Gallacher)
Date: Wed Jun 15 18:42:18 2005
Subject: [mod_python] Question about Session security
In-Reply-To: <42B0A3EB.90801@dharana.net>
References: <4817b6fc0506151336480c47fc@mail.gmail.com>	<781a468205a245ba3612c0d57c183c7f@dscpl.com.au>	<42B0A096.1070407@sympatico.ca>
	<42B0A24B.3040808@sympatico.ca> <42B0A3EB.90801@dharana.net>
Message-ID: <42B0AFC2.1080300@sympatico.ca>

dharana wrote:
> Just for the record. In Spain millions of users are forced to go 
> throught our ISP's forced proxies. I have to mess with 
> HTTP_X_FORWARDED_FOR and other HTTP headers to find their real IP.
> 
> If someone is worried about collisions they could always subclass 
> session and make their own session_id generator function. It could also 
> be possible to let them choose a hash function (md5, sha1, whirlpool, etc)

The collision thing is just me being paranoid. An asteroid could drop on 
my house tommorow, but it's unlikely. Still, these are the kinds of 
things I worry about. Call me a pessimist. :)

> I don't think adding the IP to make it harder to find collisions is 
> really so much of an advantage, think of NAT users.

And as Nick pointed out, a user may want to access a long lived session 
from different locations. At this point my time is probably better spent 
  elsewhere rather than on this.

Regards
Jim

> 
> http://www.google.com/search?q=telefonica%20proxies%20problems
> 
> 
> Jim Gallacher wrote:
> 
>> Jim Gallacher wrote:
>>
>>> Graham Dumpleton wrote:
>>>
>>>> On 16/06/2005, at 6:36 AM, Dan Eloff wrote:
>>>>
>>>>> I was looking through the Session code and I found an omission that 
>>>>> bothers me.
>>>>>
>>>>> In all the session mechanisms I've implemented in the past I have
>>>>> always checked that the person resuming the session is at the same ip
>>>>> as the person who created it.
>>>>>
>>>>> Anyone who gleans the session cookie (which is sent in plaintext on
>>>>> every request) could pass themselves off as the original person. If
>>>>> you check the ip you restrict this down from the entire internet to
>>>>> only people on the same network, which makes it less likely to happen.
>>>>>
>>>>> Is there a reason for omitting this, something I don't understand 
>>>>> maybe?
>>>>
>>>>
>>>>
>>>>
>>>>
>>>> You can use req.connection to find the users incoming IP address and
>>>> save that in the session yourself for later checking.
>>>>
>>>> Ie., not a prepackaged check, but the bits are there for you to do it
>>>> yourself in the manner you need.
>>>
>>>
>>>
>>>
>>> Since I'm (still) messing with the session code, maybe this is worth 
>>> building this into the base code now? If it is a security issue let's 
>>> address it and save users the worry and bother of implementing their 
>>> own.
>>>
>>
>> Oh and another thing that's always bother me just a little - md5 
>> collisions of the generated session id's. I know the probability of a 
>> collision is extremely low, but it is finite. Checking an existing 
>> session against the ip would eliminate any chance of a collision (I 
>> think).
>>
>> Regards,
>> Jim
>> _______________________________________________
>> Mod_python mailing list
>> Mod_python@modpython.org
>> http://mailman.modpython.org/mailman/listinfo/mod_python
>>
>>
>>
> 

From jg.lists at sympatico.ca  Wed Jun 15 18:49:06 2005
From: jg.lists at sympatico.ca (Jim Gallacher)
Date: Wed Jun 15 18:44:58 2005
Subject: [mod_python] Question about Session security
In-Reply-To: <200506151657.26578.modpython@holovaty.com>
References: <4817b6fc0506151336480c47fc@mail.gmail.com>	<42B0A096.1070407@sympatico.ca>
	<42B0A249.3020008@dd.revealed.net>
	<200506151657.26578.modpython@holovaty.com>
Message-ID: <42B0B062.2020100@sympatico.ca>

Adrian Holovaty wrote:
> Nick wrote:
> 
>>Jim Gallacher wrote:
>>
>>>>You can use req.connection to find the users incoming IP address and
>>>>save that in the session yourself for later checking.
>>>>
>>>>Ie., not a prepackaged check, but the bits are there for you to do it
>>>>yourself in the manner you need.
>>>
>>>Since I'm (still) messing with the session code, maybe this is worth
>>>building this into the base code now? If it is a security issue let's
>>>address it and save users the worry and bother of implementing their own.
> 
> 
> I'm not sure it's foolproof to assume a user's IP address will be the same 
> throughout a session. I seem to recall that AOL users have different IP 
> addresses throughout sessions, because the AOL proxies use some sort of 
> round-robin system.

Evidence is rapidly mounting that this is a bad idea, or at least 
difficult to implement in a dependable way.

Jim
From dan.eloff at gmail.com  Wed Jun 15 19:03:55 2005
From: dan.eloff at gmail.com (Dan Eloff)
Date: Wed Jun 15 19:04:00 2005
Subject: [mod_python] Question about Session security
In-Reply-To: <781a468205a245ba3612c0d57c183c7f@dscpl.com.au>
References: <4817b6fc0506151336480c47fc@mail.gmail.com>
	<781a468205a245ba3612c0d57c183c7f@dscpl.com.au>
Message-ID: <4817b6fc05061516032b319f97@mail.gmail.com>

Good point, mod_python is very flexible. I really like that.

I have one more question about sessions. Are they saved automatically,
or do I have to explicitly call .save()?

Thanks for being so helpful guys,
-Dan

From dan.eloff at gmail.com  Wed Jun 15 19:29:33 2005
From: dan.eloff at gmail.com (Dan Eloff)
Date: Wed Jun 15 19:29:39 2005
Subject: [mod_python] Oops, found a small bug in the session code
In-Reply-To: <42B0A096.1070407@sympatico.ca>
References: <4817b6fc0506151336480c47fc@mail.gmail.com>
	<781a468205a245ba3612c0d57c183c7f@dscpl.com.au>
	<42B0A096.1070407@sympatico.ca>
Message-ID: <4817b6fc05061516292bfdc963@mail.gmail.com>

Just discovered this.

# XXX Not sure why, but on Win32 hlist.directory
# may contain a trailing \ - need to investigate,
# this value is given to us directly by httpd
if os.name == 'nt' and c.path[-1] == '\\':
    c.path = c.path[:-1]
        
# Sometimes there is no path, e.g. when Location
# is used. When Alias or UserDir are used, then
# the path wouldn't match the URI. In those cases
# just default to '/'
if not c.path or not self._req.uri.startswith(c.path):
    c.path = '/'

In the first if statement, c.path[-1] will throw IndexError if c.path
is empty (which is possible if you read the next comment). You should
change it to:

if os.name == 'nt' and (c.path and c.path[-1] == '\\'):
    c.path = c.path[:-1]

The chance of collisions for the md5 algo is very low, comparable to
the chance of that asteroid landing on your house, but if you're
worried you could always create two hashes, and md5, and a sha maybe
and concatenate them to form the sid. But to be honest the possibility
that someone intercepts your sid and takes advantage of that is higher
than a collision. If people need real security they will doubtless
make their own subclass and use ssl.

Cheers,
-Dan

From grahamd at dscpl.com.au  Wed Jun 15 19:34:21 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Wed Jun 15 19:35:26 2005
Subject: [mod_python] Question about Session security
Message-ID: <1118878461.2265@dscpl.user.openhosting.com>

Dan Eloff wrote ..
> Good point, mod_python is very flexible. I really like that.
> 
> I have one more question about sessions. Are they saved automatically,
> or do I have to explicitly call .save()?
> 
> Thanks for being so helpful guys,

If you are using mod_python.psp and using its mechanism within a
page for creating the session automatically, it will save the session
for you automatically as well.

If creating Session objects directly yourself from mod_python.publisher
or some other handler, you are responsible for saving the session
object.

Also, note that if you are using req.internal_redirect(), you are responsible
for saving and unlocking any session object before calling req.internal_redirect().
If you don't and the page you redirect too creates a session object for the
same SID, you will get a deadlock.

Graham
From jg.lists at sympatico.ca  Wed Jun 15 19:43:18 2005
From: jg.lists at sympatico.ca (Jim Gallacher)
Date: Wed Jun 15 19:39:10 2005
Subject: [mod_python] Question about Session security
In-Reply-To: <4817b6fc05061516032b319f97@mail.gmail.com>
References: <4817b6fc0506151336480c47fc@mail.gmail.com>	<781a468205a245ba3612c0d57c183c7f@dscpl.com.au>
	<4817b6fc05061516032b319f97@mail.gmail.com>
Message-ID: <42B0BD16.1020706@sympatico.ca>

Dan Eloff wrote:
> Good point, mod_python is very flexible. I really like that.
> 
> I have one more question about sessions. Are they saved automatically,
> or do I have to explicitly call .save()?

You must call save(). I have been thinking about an autosave though. 
Anyone else have any thoughts?

Jim

From grahamd at dscpl.com.au  Wed Jun 15 19:42:38 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Wed Jun 15 19:43:43 2005
Subject: [mod_python] Oops, found a small bug in the session code
Message-ID: <1118878958.7770@dscpl.user.openhosting.com>

Dan Eloff wrote ..
> Just discovered this.
> 
> # XXX Not sure why, but on Win32 hlist.directory
> # may contain a trailing \ - need to investigate,
> # this value is given to us directly by httpd
> if os.name == 'nt' and c.path[-1] == '\\':
>     c.path = c.path[:-1]

The underlying problem is a known issue. The hack in the session
code was presumably put there because someone didn't understand
the root cause. Anyway, the underlying problem has already been
fixed for 3.2 and the hack in Session code removed.

> # Sometimes there is no path, e.g. when Location
> # is used. When Alias or UserDir are used, then
> # the path wouldn't match the URI. In those cases
> # just default to '/'
> if not c.path or not self._req.uri.startswith(c.path):
>     c.path = '/'
> 
> In the first if statement, c.path[-1] will throw IndexError if c.path
> is empty (which is possible if you read the next comment). You should
> change it to:
> 
> if os.name == 'nt' and (c.path and c.path[-1] == '\\'):
>     c.path = c.path[:-1]

Also a known issue which I believe has been fixed for 3.2. You can
avoid the problem for now by setting ApplicationPath directive to
some value.

In general, would not recommend enabling of mod_python within a
Location directive as could cause other things to fail that expect to
be able to determine the physical directory context in which they are
being used. In other words use Directory directive instead.

Thanks for highlighting the issues as sometimes we might not know
about such things. For reference, various bugs and there status are
cataloged at:

  http://issues.apache.org/jira/browse/MODPYTHON?report=select

Graham
From grahamd at dscpl.com.au  Wed Jun 15 19:47:13 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Wed Jun 15 19:47:19 2005
Subject: [mod_python] Question about Session security
Message-ID: <1118879233.11424@dscpl.user.openhosting.com>

Jim Gallacher wrote ..
> Dan Eloff wrote:
> > Good point, mod_python is very flexible. I really like that.
> > 
> > I have one more question about sessions. Are they saved automatically,
> > or do I have to explicitly call .save()?
> 
> You must call save(). I have been thinking about an autosave though. 
> Anyone else have any thoughts?

I would vote for NO autosave.

It is like the IP issue on Session object, by adding it you are potentially
restricting in what ways it can be used. Ie., what if I want to bail and out
of a request without saving anything, how would I stop it from saving.

The ability to save a session object automatically is something that people
can do easily enough within their own frameworks if they want to, so it
is probably better off left that way.

Graham
From dharana at dharana.net  Wed Jun 15 19:52:31 2005
From: dharana at dharana.net (dharana)
Date: Wed Jun 15 19:52:40 2005
Subject: [mod_python] Question about Session security
In-Reply-To: <42B0BD16.1020706@sympatico.ca>
References: <4817b6fc0506151336480c47fc@mail.gmail.com>	<781a468205a245ba3612c0d57c183c7f@dscpl.com.au>	<4817b6fc05061516032b319f97@mail.gmail.com>
	<42B0BD16.1020706@sympatico.ca>
Message-ID: <42B0BF3F.8070202@dharana.net>

Jim Gallacher wrote:
> Dan Eloff wrote:
> 
>> Good point, mod_python is very flexible. I really like that.
>>
>> I have one more question about sessions. Are they saved automatically,
>> or do I have to explicitly call .save()?
> 
> 
> You must call save(). I have been thinking about an autosave though. 
> Anyone else have any thoughts?

I see no problems with this idea in my use of mp but I believe it shouldn't be 
done. I see sessions as file-like objects and as such I think it should be made 
explicit that you want to save the changes you make to a session. It seems more 
correct to me like it is right now. Maybe I'm wrong.

-- 
dharana

From jg.lists at sympatico.ca  Wed Jun 15 19:57:06 2005
From: jg.lists at sympatico.ca (Jim Gallacher)
Date: Wed Jun 15 19:52:56 2005
Subject: [mod_python] Question about Session security
In-Reply-To: <1118879233.11424@dscpl.user.openhosting.com>
References: <1118879233.11424@dscpl.user.openhosting.com>
Message-ID: <42B0C052.2090406@sympatico.ca>

Graham Dumpleton wrote:
> Jim Gallacher wrote ..
> 
>>Dan Eloff wrote:
>>
>>>Good point, mod_python is very flexible. I really like that.
>>>
>>>I have one more question about sessions. Are they saved automatically,
>>>or do I have to explicitly call .save()?
>>
>>You must call save(). I have been thinking about an autosave though. 
>>Anyone else have any thoughts?
> 
> 
> I would vote for NO autosave.
> 
> It is like the IP issue on Session object, by adding it you are potentially
> restricting in what ways it can be used. Ie., what if I want to bail and out
> of a request without saving anything, how would I stop it from saving.
> 
> The ability to save a session object automatically is something that people
> can do easily enough within their own frameworks if they want to, so it
> is probably better off left that way.
> 

It was just a random thought. I'm having one of those days. :)

Jim
From grahamd at dscpl.com.au  Wed Jun 15 19:54:08 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Wed Jun 15 19:54:13 2005
Subject: [mod_python] Question about Session security
Message-ID: <1118879648.15994@dscpl.user.openhosting.com>

Okay, badly thought out response which I am sure you will point
out. The autosave option if done would still be optionally enabled
at point of creation of session or something. The save could be
done at same point unlock is done by registered cleanup handler
for session object.

Ie., as long as autesave isn't the default and is only on by explicit
choice made by the user when they create the session. That way
others can still made autosave themselves in other ways.

Graham Dumpleton wrote ..
> Jim Gallacher wrote ..
> > Dan Eloff wrote:
> > > Good point, mod_python is very flexible. I really like that.
> > > 
> > > I have one more question about sessions. Are they saved automatically,
> > > or do I have to explicitly call .save()?
> > 
> > You must call save(). I have been thinking about an autosave though.
> > Anyone else have any thoughts?
> 
> I would vote for NO autosave.
> 
> It is like the IP issue on Session object, by adding it you are potentially
> restricting in what ways it can be used. Ie., what if I want to bail and
> out
> of a request without saving anything, how would I stop it from saving.
> 
> The ability to save a session object automatically is something that people
> can do easily enough within their own frameworks if they want to, so it
> is probably better off left that way.
> 
> Graham
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
From jg.lists at sympatico.ca  Wed Jun 15 20:02:03 2005
From: jg.lists at sympatico.ca (Jim Gallacher)
Date: Wed Jun 15 19:57:53 2005
Subject: [mod_python] Oops, found a small bug in the session code
In-Reply-To: <1118878958.7770@dscpl.user.openhosting.com>
References: <1118878958.7770@dscpl.user.openhosting.com>
Message-ID: <42B0C17B.80103@sympatico.ca>

Graham Dumpleton wrote:
> Dan Eloff wrote ..
> 
>>Just discovered this.
>>
>># XXX Not sure why, but on Win32 hlist.directory
>># may contain a trailing \ - need to investigate,
>># this value is given to us directly by httpd
>>if os.name == 'nt' and c.path[-1] == '\\':
>>    c.path = c.path[:-1]
> 
> 
> The underlying problem is a known issue. The hack in the session
> code was presumably put there because someone didn't understand
> the root cause. Anyway, the underlying problem has already been
> fixed for 3.2 and the hack in Session code removed.

Yes, it's been fixed. Current code in svn mod_python/trunk looks like this:


     def make_cookie(self):

         if self._secret:
             c = Cookie.SignedCookie(COOKIE_NAME, self._sid,
                                     secret=self._secret)
         else:
             c = Cookie.Cookie(COOKIE_NAME, self._sid)

         config = self._req.get_options()
         if config.has_key("ApplicationPath"):
             c.path = config["ApplicationPath"]
         else:
             # the path where *Handler directive was specified
             dirpath = self._req.hlist.directory
             if dirpath:
                 docroot = self._req.document_root()
                 c.path = dirpath[len(docroot):]
             else:
                 c.path = '/'

             # Sometimes there is no path, e.g. when Location
             # is used. When Alias or UserDir are used, then
             # the path wouldn't match the URI. In those cases
             # just default to '/'
             if not c.path or not self._req.uri.startswith(c.path):
                 c.path = '/'

         return c


Jim
From dan.eloff at gmail.com  Wed Jun 15 20:07:33 2005
From: dan.eloff at gmail.com (Dan Eloff)
Date: Wed Jun 15 20:07:39 2005
Subject: [mod_python] Question about Session security
In-Reply-To: <42B0BF3F.8070202@dharana.net>
References: <4817b6fc0506151336480c47fc@mail.gmail.com>
	<781a468205a245ba3612c0d57c183c7f@dscpl.com.au>
	<4817b6fc05061516032b319f97@mail.gmail.com>
	<42B0BD16.1020706@sympatico.ca> <42B0BF3F.8070202@dharana.net>
Message-ID: <4817b6fc05061517071dd84162@mail.gmail.com>

> I see no problems with this idea in my use of mp but I believe it shouldn't be
> done. I see sessions as file-like objects and as such I think it should be made
> explicit that you want to save the changes you make to a session. It seems more
> correct to me like it is right now. Maybe I'm wrong.
> 
> --
> dharana

Yes, I agree, it is better to have to save the session manually. For
example, suppose I have a page that makes several modifications to the
session data. If at one point there is a failure, I would end up with
a partially modified session object in an indeterminate state. Much
better to have manual save and put it after all the modifications so
that I either end up with the session as it was before the page, or I
end up with it successfully modified but nothing else.

-Dan

From hendry at iki.fi  Wed Jun 15 21:31:02 2005
From: hendry at iki.fi (Kai Hendry)
Date: Wed Jun 15 21:32:29 2005
Subject: [mod_python] File upload limits
Message-ID: <20050616013100.GL10974@iki.fi>

I am writing a Web application which requires the user to upload a file.

It seems sensible to me to limit how large the file upload can be. After
searching around it seems that I need to modify Apache's content-length
attribute and that mod_python is what I should look at.

It would be nice if the FieldStorage class:
http://www.modpython.org/live/current/doc-html/pyapi-util-fstor-fld.html
Had an input limit, because I can't see one.

Does anyone have an example of this type of input checking I am after?
From dan.eloff at gmail.com  Wed Jun 15 22:03:09 2005
From: dan.eloff at gmail.com (Dan Eloff)
Date: Wed Jun 15 22:03:14 2005
Subject: [mod_python] Multiple processes/threads and dbms
Message-ID: <4817b6fc05061519036244c1b4@mail.gmail.com>

Yes, I know you just groaned when you spotted another email from me :)

But here's the problem. Some resources (files, dbms) are shared
between processes and threads, so how can you synchronize access to
them?

In the Session module which has a session implementation using a dbm,
_apache._global_lock and _apache._global_unlock is used.

Is there anything that exposes that so I can use it too? If not should there be?

-Dan

From nick at dd.revealed.net  Wed Jun 15 22:23:46 2005
From: nick at dd.revealed.net (Nick)
Date: Wed Jun 15 22:24:01 2005
Subject: [mod_python] Multiple processes/threads and dbms
In-Reply-To: <4817b6fc05061519036244c1b4@mail.gmail.com>
References: <4817b6fc05061519036244c1b4@mail.gmail.com>
Message-ID: <42B0E2B2.8030405@dd.revealed.net>

Dan Eloff wrote:
> But here's the problem. Some resources (files, dbms) are shared
> between processes and threads, so how can you synchronize access to
> them?
> 
> In the Session module which has a session implementation using a dbm,
> _apache._global_lock and _apache._global_unlock is used.

I tend to stay away from using apache's locks, since they are limited in 
number and are used by apache and its modules.  I find flock works well 
in these cases, as it is the usual way to deal with simultaneous access 
to a dbm file from different processes.

As an alternative, if you're only dealing with 1 server process (e.g. 
apache2 on windows), python's threading module does a good enough job 
(Lock/RLock objects).  I find python's native locking mechanisms 
adequate for protecting the critical areas of my code across threads in 
apache.

Nick
From nick at dd.revealed.net  Wed Jun 15 22:30:21 2005
From: nick at dd.revealed.net (Nick)
Date: Wed Jun 15 22:30:38 2005
Subject: [mod_python] Multiple processes/threads and dbms
In-Reply-To: <42B0E2B2.8030405@dd.revealed.net>
References: <4817b6fc05061519036244c1b4@mail.gmail.com>
	<42B0E2B2.8030405@dd.revealed.net>
Message-ID: <42B0E43D.3050601@dd.revealed.net>

Duh, I'm showing my age... you want fcntl, not flock.

Nick

Nick wrote:
> Dan Eloff wrote:
> 
>> But here's the problem. Some resources (files, dbms) are shared
>> between processes and threads, so how can you synchronize access to
>> them?
>>
>> In the Session module which has a session implementation using a dbm,
>> _apache._global_lock and _apache._global_unlock is used.
> 
> 
> I tend to stay away from using apache's locks, since they are limited in 
> number and are used by apache and its modules.  I find flock works well 
> in these cases, as it is the usual way to deal with simultaneous access 
> to a dbm file from different processes.
> 
> As an alternative, if you're only dealing with 1 server process (e.g. 
> apache2 on windows), python's threading module does a good enough job 
> (Lock/RLock objects).  I find python's native locking mechanisms 
> adequate for protecting the critical areas of my code across threads in 
> apache.
> 
> Nick
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python

From lekang at samfundet.no  Wed Jun 15 22:45:53 2005
From: lekang at samfundet.no (=?UTF-8?Q?=C3=B8ystein_lekang?=)
Date: Wed Jun 15 22:45:59 2005
Subject: [mod_python] Published example and URL's
Message-ID: <20050616024553.GB5651@samfundet.no>


I would like to avoid what can be seen in 
http://www.modpython.org/examples/psp_site/templates/main_menu.html
or
http://www.modpython.org/examples/psp_site/templates/main_frame.html

but I'm not sure how to acomplish this. 
Help is very much apreciated.

regards

-- 
oystein lekang
From theman at eradman.com  Wed Jun 15 23:52:30 2005
From: theman at eradman.com (Eric Radman)
Date: Wed Jun 15 22:56:38 2005
Subject: [mod_python] Published example and URL's
In-Reply-To: <20050616024553.GB5651@samfundet.no>
References: <20050616024553.GB5651@samfundet.no>
Message-ID: <20050616035230.GA9809@us270-gl0.eradman.com>

On 04:45 Thu 16 Jun     , ??ystein lekang wrote:
> 
> I would like to avoid what can be seen in 
> http://www.modpython.org/examples/psp_site/templates/main_menu.html
> or
> http://www.modpython.org/examples/psp_site/templates/main_frame.html

This is what you'll get if there's no Apache handler set for the
location or the extension of your scripts. If Apache does not find a
specific handler then it just serves the content. Here is an example of
the publisher handler being used:

<Directory "/var/www/app">
    SetHandler mod_python
    PythonHandler mod_python.publisher
</Directory>

Here is the Apache documentation of Handlers:

http://httpd.apache.org/docs-2.0/handler.html

-- 
Eric Radman  |  http://eradman.com
From grahamd at dscpl.com.au  Wed Jun 15 23:46:58 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Wed Jun 15 23:47:09 2005
Subject: [mod_python] File upload limits
Message-ID: <1118893618.13805@dscpl.user.openhosting.com>

Kai Hendry wrote ..
> I am writing a Web application which requires the user to upload a file.
> 
> It seems sensible to me to limit how large the file upload can be. After
> searching around it seems that I need to modify Apache's content-length
> attribute and that mod_python is what I should look at.
> 
> It would be nice if the FieldStorage class:
> http://www.modpython.org/live/current/doc-html/pyapi-util-fstor-fld.html
> Had an input limit, because I can't see one.
> 
> Does anyone have an example of this type of input checking I am after?

Why do you feel you need to "modify Apache's content-length attribute"?

I can understand you wanting to reject a request based on input
content length being larger than a certain amount, but not what
would be gained from modifying the content length.

As long as you aren't using mod_python.publisher, you could insert
into your handler before you use the FieldStorage class a check of
the req.headers_in["content-length"] field to see if the combined total
of all form parameters in the POST containing the upload was
greater than some amount and reject it on that basis. Not sure if
the req.clength is the same thing as the "content-length" header or
not.

Without duplicating what FieldStorage does, can't see how you would
be able to reject it based on just the file upload part of a multipart
POST request being larger than a certain size.

Graham
From bortzmeyer at nic.fr  Thu Jun 16 06:29:13 2005
From: bortzmeyer at nic.fr (Stephane Bortzmeyer)
Date: Thu Jun 16 06:29:30 2005
Subject: [mod_python] Re: Question about Session security
In-Reply-To: <4817b6fc0506151336480c47fc@mail.gmail.com>
References: <4817b6fc0506151336480c47fc@mail.gmail.com>
Message-ID: <20050616102913.GA24012@nic.fr>

On Wed, Jun 15, 2005 at 01:36:22PM -0700,
 Dan Eloff <dan.eloff@gmail.com> wrote 
 a message of 19 lines which said:

> the session cookie (which is sent in plaintext on every request)
                                    ^^^^^^^^^^^^
                                    You use authenticated sessions 
and not httpS? You're wrong.
From wouter at squirrel-systems.com  Thu Jun 16 09:44:44 2005
From: wouter at squirrel-systems.com (Wouter van Marle)
Date: Thu Jun 16 09:45:03 2005
Subject: [mod_python] Re: Question about Session security
In-Reply-To: <20050616102913.GA24012@nic.fr>
References: <4817b6fc0506151336480c47fc@mail.gmail.com>
	<20050616102913.GA24012@nic.fr>
Message-ID: <1118929484.1207.273.camel@cm61-18-245-172.hkcable.com.hk>

On Thu, 2005-06-16 at 12:29 +0200, Stephane Bortzmeyer wrote:

> On Wed, Jun 15, 2005 at 01:36:22PM -0700,
>  Dan Eloff <dan.eloff@gmail.com> wrote 
>  a message of 19 lines which said:
> 
> > the session cookie (which is sent in plaintext on every request)
>                                     ^^^^^^^^^^^^
>                                     You use authenticated sessions 
> and not httpS? You're wrong.


A pretty rude way to say it. And I think a bit shortsighted. It depends
on the situation; why is a user authenticated. For what authorisation is
required.
For a mere authorisation to post messages in a board, or to track share
ratios (think of BitTorrent sites), that kind of things, I would say it
is safe enough. Not too much seriously bad can be done (and if it
happens: webmaster still has their logs). Unless someone targets an
enemy specifically, what use is there anyway in trying to hack someones
account by sniffing out a session ID?
When doing payments, or when accessing your source repository, that kind
of sensitive things, yes then https would be necessary. I'm using
session cookies myself, have for a moment thought of https, and rejected
it, and not only for the cost of a trusted certificate. It's just not
necessary for my site.

Wouter.


> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
> 
> 
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20050616/38309caa/attachment.html
From bortzmeyer at nic.fr  Thu Jun 16 10:03:27 2005
From: bortzmeyer at nic.fr (Stephane Bortzmeyer)
Date: Thu Jun 16 10:03:35 2005
Subject: [mod_python] Re: Question about Session security
In-Reply-To: <1118929484.1207.273.camel@cm61-18-245-172.hkcable.com.hk>
References: <4817b6fc0506151336480c47fc@mail.gmail.com>
	<20050616102913.GA24012@nic.fr>
	<1118929484.1207.273.camel@cm61-18-245-172.hkcable.com.hk>
Message-ID: <20050616140327.GA4476@nic.fr>

On Thu, Jun 16, 2005 at 09:44:44PM +0800,
 Wouter van Marle <wouter@squirrel-systems.com> wrote 
 a message of 87 lines which said:

> For a mere authorisation to post messages in a board, or to track
> share ratios (think of BitTorrent sites), that kind of things, I
> would say it is safe enough.

Sure. So is not taking IP addresses into account. Remember that the OP
wanted "more security" by appending the IP address of the client,
while still sending the cookie in plaintext. I just pointed the
contradiction.

From christopher.jackson at gmail.com  Thu Jun 16 13:32:44 2005
From: christopher.jackson at gmail.com (Chris Jackson)
Date: Thu Jun 16 13:33:22 2005
Subject: [mod_python] Two mod_python applications crashing each other
Message-ID: <4d11484d05061610323a479797@mail.gmail.com>

I have two mod_python applications running on one server and there
seems to be a resource contingency between the two causing 1 of the
two to crash.

Consider,

htdocs/app1/
htdocs/app2/

app1 has a <Directive> using SetHandler and mod_python.publisher

app2 has a <Directive> using AddHandler and mod_python.psp

When these two apps are running on the same server, ImportErrors
arrise crashing app1 with the following error:

PythonHandler mod_python.publisher: ImportError: No module named <blah>

It's as if it forgets where it resides.

<My Configuration>

Apache/2.0.52 (Unix) mod_python/3.1.3 Python/2.4 Server

</My Configuration>

Can anyone shed some light on this.

Thanks,

~= Chris =~

From nick at dd.revealed.net  Thu Jun 16 13:53:26 2005
From: nick at dd.revealed.net (Nick)
Date: Thu Jun 16 13:53:43 2005
Subject: [mod_python] Two mod_python applications crashing each other
In-Reply-To: <4d11484d05061610323a479797@mail.gmail.com>
References: <4d11484d05061610323a479797@mail.gmail.com>
Message-ID: <42B1BC96.1010904@dd.revealed.net>

See http://modpython.org/live/current/doc-html/dir-other-ipdv.html, 
hopefully that's all your problem is.

Nick

Chris Jackson wrote:
> I have two mod_python applications running on one server and there
> seems to be a resource contingency between the two causing 1 of the
> two to crash.
> 
> Consider,
> 
> htdocs/app1/
> htdocs/app2/
> 
> app1 has a <Directive> using SetHandler and mod_python.publisher
> 
> app2 has a <Directive> using AddHandler and mod_python.psp
> 
> When these two apps are running on the same server, ImportErrors
> arrise crashing app1 with the following error:
> 
> PythonHandler mod_python.publisher: ImportError: No module named <blah>
> 
> It's as if it forgets where it resides.
> 
> <My Configuration>
> 
> Apache/2.0.52 (Unix) mod_python/3.1.3 Python/2.4 Server
> 
> </My Configuration>
> 
> Can anyone shed some light on this.
> 
> Thanks,
> 
> ~= Chris =~
> 
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python

From christopher.jackson at gmail.com  Thu Jun 16 16:05:31 2005
From: christopher.jackson at gmail.com (Chris Jackson)
Date: Thu Jun 16 16:05:37 2005
Subject: [mod_python] Two mod_python applications crashing each other
In-Reply-To: <42B1BC96.1010904@dd.revealed.net>
References: <4d11484d05061610323a479797@mail.gmail.com>
	<42B1BC96.1010904@dd.revealed.net>
Message-ID: <4d11484d0506161305527204a4@mail.gmail.com>

Thanks Nick!

 I believe PythonInterpPerDirective works for me..  So far, so good.

I have it like so:

# First app
<Directory /path/to/app1>
...
PythonInterpPerDirective On
...
</Directory>

# Second app
<Directory /path/to/app2>
...
PythonInterpPerDirective On
...
</Directory>

Thanks again,

~= Chris =~
On 6/16/05, Nick <nick@dd.revealed.net> wrote:
> See http://modpython.org/live/current/doc-html/dir-other-ipdv.html,
> hopefully that's all your problem is.
> 
> Nick
> 
> Chris Jackson wrote:
> > I have two mod_python applications running on one server and there
> > seems to be a resource contingency between the two causing 1 of the
> > two to crash.
> >
> > Consider,
> >
> > htdocs/app1/
> > htdocs/app2/
> >
> > app1 has a <Directive> using SetHandler and mod_python.publisher
> >
> > app2 has a <Directive> using AddHandler and mod_python.psp
> >
> > When these two apps are running on the same server, ImportErrors
> > arrise crashing app1 with the following error:
> >
> > PythonHandler mod_python.publisher: ImportError: No module named <blah>
> >
> > It's as if it forgets where it resides.
> >
> > <My Configuration>
> >
> > Apache/2.0.52 (Unix) mod_python/3.1.3 Python/2.4 Server
> >
> > </My Configuration>
> >
> > Can anyone shed some light on this.
> >
> > Thanks,
> >
> > ~= Chris =~
> >
> > _______________________________________________
> > Mod_python mailing list
> > Mod_python@modpython.org
> > http://mailman.modpython.org/mailman/listinfo/mod_python
> 
>

From vsi at ebi.ac.uk  Fri Jun 17 10:41:04 2005
From: vsi at ebi.ac.uk (Ville Silventoinen)
Date: Fri Jun 17 10:41:11 2005
Subject: [mod_python] Problem with mod_python and ZConfig
Message-ID: <Pine.LNX.4.61.0506171514440.19260@wolf.ebi.ac.uk>

Hi,

I've been looking for something more extensive than ConfigParser
for my configuration files, so I tried ZConfig 2.3. I wrote a small
test module that uses ZConfig, which works ok. When I tried to use
the same module with mod_python, I get a Segmentation fault.

Has anyone had similar problems using mod_python with ZConfig 2.x?

My test handler looks like this:

   from mod_python import apache
   import ZConfig

   SCHEMA_FILE = '/homes/vsi/src/spylib/lib/Spy/spyschema.xml'
   CONFIG_FILE = '/homes/vsi/src/spylib/lib/Spy/spy.conf'

   def handler(req):
       try:
           req.write("Trying to load configuration...\n");
           schema = ZConfig.loadSchema(SCHEMA_FILE)
           config, handler = ZConfig.loadConfig(schema, CONFIG_FILE)
           req.write("Configuration loaded\n")
       except Exception, e:
           req.write("Failed to load configuration:\n%s" % str(e))

       return apache.OK

When called, I see "Trying to load configuration..." and then nothing.
In Apache error_log I get:

[Fri Jun 17 13:09:31 2005] [notice] mod_python: (Re)importing module 'testMPConfig'
[Fri Jun 17 13:09:33 2005] [notice] child pid 26452 exit signal Segmentation fault (11)

This happens every time I call the handler.

My configuration:

   LoadModule python_module /ebi/www/main/modules/mod_python.so

   <Directory /ebi/www/main/cgi-bin/vsi/test>
     AddHandler mod_python .py
     PythonHandler testMPConfig
     PythonAutoReload On
     PythonDebug On
   </Directory>

My environment:

   Apache-2.0.54
   Python-2.4
   mod_python-3.1.3
   ZConfig 2.3 (tried 2.2 as well)
   Red Hat Linux release 9 (Shrike) 2.4.20-8rlx4smp

Any help would be appreciated. I've tried commenting lines out of the
handler, looks like the problem happens with "loadSchema". I also tried
to use "loadSchemaFile", but it didn't help.

On the same note, what is the recommended way to handle configuration
with Python? I'm fairly new to Python. I'd like to have a configuration
that is reloaded automatically when modified, validation rules, sections
and proper values (so that integer strings become ints/longs in the
configuration object, keys with multiple values become lists, etc.)
Is the best way to write a Python module that contains the configuration?
This would skip parsing phase and let mod_python reload the module when
it's been modified.

Thanks,
Ville

From vsi at ebi.ac.uk  Fri Jun 17 11:44:49 2005
From: vsi at ebi.ac.uk (Ville Silventoinen)
Date: Fri Jun 17 11:44:57 2005
Subject: [mod_python] Problem with mod_python and ZConfig
In-Reply-To: <Pine.LNX.4.61.0506171514440.19260@wolf.ebi.ac.uk>
References: <Pine.LNX.4.61.0506171514440.19260@wolf.ebi.ac.uk>
Message-ID: <Pine.LNX.4.61.0506171641320.19260@wolf.ebi.ac.uk>

Hi,

looks like the problem is with xml.sax and expat. I found other
mails about the same problem.

Cheers,
Ville


On Fri, 17 Jun 2005, Ville Silventoinen wrote:

> Hi,
>
> I've been looking for something more extensive than ConfigParser
> for my configuration files, so I tried ZConfig 2.3. I wrote a small
> test module that uses ZConfig, which works ok. When I tried to use
> the same module with mod_python, I get a Segmentation fault.
>
> Has anyone had similar problems using mod_python with ZConfig 2.x?
>
> My test handler looks like this:
>
>  from mod_python import apache
>  import ZConfig
>
>  SCHEMA_FILE = '/homes/vsi/src/spylib/lib/Spy/spyschema.xml'
>  CONFIG_FILE = '/homes/vsi/src/spylib/lib/Spy/spy.conf'
>
>  def handler(req):
>      try:
>          req.write("Trying to load configuration...\n");
>          schema = ZConfig.loadSchema(SCHEMA_FILE)
>          config, handler = ZConfig.loadConfig(schema, CONFIG_FILE)
>          req.write("Configuration loaded\n")
>      except Exception, e:
>          req.write("Failed to load configuration:\n%s" % str(e))
>
>      return apache.OK
>
> When called, I see "Trying to load configuration..." and then nothing.
> In Apache error_log I get:
>
> [Fri Jun 17 13:09:31 2005] [notice] mod_python: (Re)importing module 
> 'testMPConfig'
> [Fri Jun 17 13:09:33 2005] [notice] child pid 26452 exit signal Segmentation 
> fault (11)
>
> This happens every time I call the handler.
>
> My configuration:
>
>  LoadModule python_module /ebi/www/main/modules/mod_python.so
>
>  <Directory /ebi/www/main/cgi-bin/vsi/test>
>    AddHandler mod_python .py
>    PythonHandler testMPConfig
>    PythonAutoReload On
>    PythonDebug On
>  </Directory>
>
> My environment:
>
>  Apache-2.0.54
>  Python-2.4
>  mod_python-3.1.3
>  ZConfig 2.3 (tried 2.2 as well)
>  Red Hat Linux release 9 (Shrike) 2.4.20-8rlx4smp
>
> Any help would be appreciated. I've tried commenting lines out of the
> handler, looks like the problem happens with "loadSchema". I also tried
> to use "loadSchemaFile", but it didn't help.
>
> On the same note, what is the recommended way to handle configuration
> with Python? I'm fairly new to Python. I'd like to have a configuration
> that is reloaded automatically when modified, validation rules, sections
> and proper values (so that integer strings become ints/longs in the
> configuration object, keys with multiple values become lists, etc.)
> Is the best way to write a Python module that contains the configuration?
> This would skip parsing phase and let mod_python reload the module when
> it's been modified.
>
> Thanks,
> Ville
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>
From dharana at dharana.net  Fri Jun 17 12:24:18 2005
From: dharana at dharana.net (dharana)
Date: Fri Jun 17 12:24:27 2005
Subject: [mod_python] Problem with mod_python and ZConfig
In-Reply-To: <Pine.LNX.4.61.0506171641320.19260@wolf.ebi.ac.uk>
References: <Pine.LNX.4.61.0506171514440.19260@wolf.ebi.ac.uk>
	<Pine.LNX.4.61.0506171641320.19260@wolf.ebi.ac.uk>
Message-ID: <42B2F932.5090406@dharana.net>

I too am having problems related to xml but from another package: 4Suite, which 
I believe is also based on xml.sax and expat. from Ft.Xml import MarkupWriter 
works if it's called from cmdline mode but it segfaults if called from mod_python.


Ville Silventoinen wrote:
> Hi,
> 
> looks like the problem is with xml.sax and expat. I found other
> mails about the same problem.
> 
> Cheers,
> Ville
> 
> 
> On Fri, 17 Jun 2005, Ville Silventoinen wrote:
> 
>> Hi,
>>
>> I've been looking for something more extensive than ConfigParser
>> for my configuration files, so I tried ZConfig 2.3. I wrote a small
>> test module that uses ZConfig, which works ok. When I tried to use
>> the same module with mod_python, I get a Segmentation fault.
>>
>> Has anyone had similar problems using mod_python with ZConfig 2.x?
>>
>> My test handler looks like this:
>>
>>  from mod_python import apache
>>  import ZConfig
>>
>>  SCHEMA_FILE = '/homes/vsi/src/spylib/lib/Spy/spyschema.xml'
>>  CONFIG_FILE = '/homes/vsi/src/spylib/lib/Spy/spy.conf'
>>
>>  def handler(req):
>>      try:
>>          req.write("Trying to load configuration...\n");
>>          schema = ZConfig.loadSchema(SCHEMA_FILE)
>>          config, handler = ZConfig.loadConfig(schema, CONFIG_FILE)
>>          req.write("Configuration loaded\n")
>>      except Exception, e:
>>          req.write("Failed to load configuration:\n%s" % str(e))
>>
>>      return apache.OK
>>
>> When called, I see "Trying to load configuration..." and then nothing.
>> In Apache error_log I get:
>>
>> [Fri Jun 17 13:09:31 2005] [notice] mod_python: (Re)importing module 
>> 'testMPConfig'
>> [Fri Jun 17 13:09:33 2005] [notice] child pid 26452 exit signal 
>> Segmentation fault (11)
>>
>> This happens every time I call the handler.
>>
>> My configuration:
>>
>>  LoadModule python_module /ebi/www/main/modules/mod_python.so
>>
>>  <Directory /ebi/www/main/cgi-bin/vsi/test>
>>    AddHandler mod_python .py
>>    PythonHandler testMPConfig
>>    PythonAutoReload On
>>    PythonDebug On
>>  </Directory>
>>
>> My environment:
>>
>>  Apache-2.0.54
>>  Python-2.4
>>  mod_python-3.1.3
>>  ZConfig 2.3 (tried 2.2 as well)
>>  Red Hat Linux release 9 (Shrike) 2.4.20-8rlx4smp
>>
>> Any help would be appreciated. I've tried commenting lines out of the
>> handler, looks like the problem happens with "loadSchema". I also tried
>> to use "loadSchemaFile", but it didn't help.
>>
>> On the same note, what is the recommended way to handle configuration
>> with Python? I'm fairly new to Python. I'd like to have a configuration
>> that is reloaded automatically when modified, validation rules, sections
>> and proper values (so that integer strings become ints/longs in the
>> configuration object, keys with multiple values become lists, etc.)
>> Is the best way to write a Python module that contains the configuration?
>> This would skip parsing phase and let mod_python reload the module when
>> it's been modified.
>>
>> Thanks,
>> Ville
>>
>> _______________________________________________
>> Mod_python mailing list
>> Mod_python@modpython.org
>> http://mailman.modpython.org/mailman/listinfo/mod_python
>>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
> 
> 
> 

-- 
dharana

From vsi at ebi.ac.uk  Fri Jun 17 12:37:58 2005
From: vsi at ebi.ac.uk (Ville Silventoinen)
Date: Fri Jun 17 12:38:12 2005
Subject: [mod_python] Problem with mod_python and ZConfig
In-Reply-To: <42B2F932.5090406@dharana.net>
References: <Pine.LNX.4.61.0506171514440.19260@wolf.ebi.ac.uk>
	<Pine.LNX.4.61.0506171641320.19260@wolf.ebi.ac.uk>
	<42B2F932.5090406@dharana.net>
Message-ID: <Pine.LNX.4.61.0506171732250.19260@wolf.ebi.ac.uk>

Hi,

I found some clues from here:

http://www.modpython.org/pipermail/mod_python/2004-May/015569.html

To put it shortly: you need to make sure Python and mod_python are using
the same expat library. Python 2.4 includes with expat-1.95.2, mod_python 
(or is it Apache, I'm not 100% sure) compiles with system expat (1.95.5 in
my Linux OS), which creates the segfault problem.

I have just installed expat-1.95.8 and I'm in the process of recompiling
Python-2.4 and mod_python. In my case I need to install expat and Python
in a non-standard path, which is mounted over NFS on several machines.

I'll write short instructions if I get it working (next week)!

Cheers,
Ville



On Fri, 17 Jun 2005, dharana wrote:

> I too am having problems related to xml but from another package: 4Suite, 
> which I believe is also based on xml.sax and expat. from Ft.Xml import 
> MarkupWriter works if it's called from cmdline mode but it segfaults if 
> called from mod_python.
>
>
> Ville Silventoinen wrote:
>> Hi,
>> 
>> looks like the problem is with xml.sax and expat. I found other
>> mails about the same problem.
>> 
>> Cheers,
>> Ville
>> 
>> 
>> On Fri, 17 Jun 2005, Ville Silventoinen wrote:
>> 
>>> Hi,
>>> 
>>> I've been looking for something more extensive than ConfigParser
>>> for my configuration files, so I tried ZConfig 2.3. I wrote a small
>>> test module that uses ZConfig, which works ok. When I tried to use
>>> the same module with mod_python, I get a Segmentation fault.
>>> 
>>> Has anyone had similar problems using mod_python with ZConfig 2.x?
>>> 
>>> My test handler looks like this:
>>> 
>>>  from mod_python import apache
>>>  import ZConfig
>>> 
>>>  SCHEMA_FILE = '/homes/vsi/src/spylib/lib/Spy/spyschema.xml'
>>>  CONFIG_FILE = '/homes/vsi/src/spylib/lib/Spy/spy.conf'
>>> 
>>>  def handler(req):
>>>      try:
>>>          req.write("Trying to load configuration...\n");
>>>          schema = ZConfig.loadSchema(SCHEMA_FILE)
>>>          config, handler = ZConfig.loadConfig(schema, CONFIG_FILE)
>>>          req.write("Configuration loaded\n")
>>>      except Exception, e:
>>>          req.write("Failed to load configuration:\n%s" % str(e))
>>> 
>>>      return apache.OK
>>> 
>>> When called, I see "Trying to load configuration..." and then nothing.
>>> In Apache error_log I get:
>>> 
>>> [Fri Jun 17 13:09:31 2005] [notice] mod_python: (Re)importing module 
>>> 'testMPConfig'
>>> [Fri Jun 17 13:09:33 2005] [notice] child pid 26452 exit signal 
>>> Segmentation fault (11)
>>> 
>>> This happens every time I call the handler.
>>> 
>>> My configuration:
>>> 
>>>  LoadModule python_module /ebi/www/main/modules/mod_python.so
>>> 
>>>  <Directory /ebi/www/main/cgi-bin/vsi/test>
>>>    AddHandler mod_python .py
>>>    PythonHandler testMPConfig
>>>    PythonAutoReload On
>>>    PythonDebug On
>>>  </Directory>
>>> 
>>> My environment:
>>> 
>>>  Apache-2.0.54
>>>  Python-2.4
>>>  mod_python-3.1.3
>>>  ZConfig 2.3 (tried 2.2 as well)
>>>  Red Hat Linux release 9 (Shrike) 2.4.20-8rlx4smp
>>> 
>>> Any help would be appreciated. I've tried commenting lines out of the
>>> handler, looks like the problem happens with "loadSchema". I also tried
>>> to use "loadSchemaFile", but it didn't help.
>>> 
>>> On the same note, what is the recommended way to handle configuration
>>> with Python? I'm fairly new to Python. I'd like to have a configuration
>>> that is reloaded automatically when modified, validation rules, sections
>>> and proper values (so that integer strings become ints/longs in the
>>> configuration object, keys with multiple values become lists, etc.)
>>> Is the best way to write a Python module that contains the configuration?
>>> This would skip parsing phase and let mod_python reload the module when
>>> it's been modified.
>>> 
>>> Thanks,
>>> Ville
>>> 
>>> _______________________________________________
>>> Mod_python mailing list
>>> Mod_python@modpython.org
>>> http://mailman.modpython.org/mailman/listinfo/mod_python
>>> 
>> _______________________________________________
>> Mod_python mailing list
>> Mod_python@modpython.org
>> http://mailman.modpython.org/mailman/listinfo/mod_python
>> 
>> 
>> 
>
> -- 
> dharana
>
>
From dan.eloff at gmail.com  Fri Jun 17 15:09:43 2005
From: dan.eloff at gmail.com (Dan Eloff)
Date: Fri Jun 17 15:09:50 2005
Subject: [mod_python] Threading and apache.import_module
Message-ID: <4817b6fc05061712095453abac@mail.gmail.com>

Well this is the biggest problem in my otherwise threadsafe code. From
what I've read, importing/reloading modules in a threaded environment
is just plain dangerous. There could be any number of requests
executing code from and accessing global variables in a module when it
changes and gets reloaded. Then you have the two level problem of what
happens to the executing requests, as well as what happens when
multiple incoming requests all spot that the module has changed, and
reload it multiple times in quick succession, re-executing code in the
module scope (this is pretty much worst case)

I know Graham knows a lot more about this than I do (help!).

I do have a lot of flexibility here, since I'm using my own publisher
I do not have to use apache.import_module. In fact I would prefer to
not have the whole importing/reloading business affect my code outside
of the publisher, that way I can change things internally at will.
Clearly one option is to create a simple import function that imports
once only in a production environment, and every time in a development
env, but I'm still interested in exploring the options.

-Dan

From wouter at squirrel-systems.com  Fri Jun 17 21:38:30 2005
From: wouter at squirrel-systems.com (Wouter van Marle)
Date: Fri Jun 17 21:38:39 2005
Subject: [mod_python] Download authorisation
Message-ID: <1119058710.24491.45.camel@cm61-18-245-172.hkcable.com.hk>

Hi all,

I've a problem that I'm struggling with: how to allow a certain user a
download, so that the user can download it once and only once? The
authorisation part I have; what I'm struggling with is how to open the
download for that specific file to the user (not too hard), and mainly
how to check whether the file has been downloaded completely. Taking
into account that a user may only be able to download it partly now, and
has to resume later.
I can't find anything with google... can't think of a specific enough
query.

Wouter.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20050618/902741d0/attachment.html
From nicolas.lehuen at gmail.com  Sat Jun 18 02:47:17 2005
From: nicolas.lehuen at gmail.com (Nicolas Lehuen)
Date: Sat Jun 18 02:47:22 2005
Subject: [mod_python] Threading and apache.import_module
In-Reply-To: <4817b6fc05061712095453abac@mail.gmail.com>
References: <4817b6fc05061712095453abac@mail.gmail.com>
Message-ID: <c298f2d705061723476b70b667@mail.gmail.com>

Hi Dan,

The subversion repository already contains fixes to the
apache.import_module function so that it is thread-safe. You can check
it out to see how it is done.

Regards,

Nicolas

2005/6/17, Dan Eloff <dan.eloff@gmail.com>:
> Well this is the biggest problem in my otherwise threadsafe code. From
> what I've read, importing/reloading modules in a threaded environment
> is just plain dangerous. There could be any number of requests
> executing code from and accessing global variables in a module when it
> changes and gets reloaded. Then you have the two level problem of what
> happens to the executing requests, as well as what happens when
> multiple incoming requests all spot that the module has changed, and
> reload it multiple times in quick succession, re-executing code in the
> module scope (this is pretty much worst case)
> 
> I know Graham knows a lot more about this than I do (help!).
> 
> I do have a lot of flexibility here, since I'm using my own publisher
> I do not have to use apache.import_module. In fact I would prefer to
> not have the whole importing/reloading business affect my code outside
> of the publisher, that way I can change things internally at will.
> Clearly one option is to create a simple import function that imports
> once only in a production environment, and every time in a development
> env, but I'm still interested in exploring the options.
> 
> -Dan
> 
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>

From dan.eloff at gmail.com  Sat Jun 18 03:34:26 2005
From: dan.eloff at gmail.com (Dan Eloff)
Date: Sat Jun 18 03:34:31 2005
Subject: [mod_python] Threading and apache.import_module
In-Reply-To: <c298f2d705061723476b70b667@mail.gmail.com>
References: <4817b6fc05061712095453abac@mail.gmail.com>
	<c298f2d705061723476b70b667@mail.gmail.com>
Message-ID: <4817b6fc05061800343c30478d@mail.gmail.com>

As usual you guys are one step ahead of me :)

Nice work.
-Dan

On 6/17/05, Nicolas Lehuen <nicolas.lehuen@gmail.com> wrote:
> Hi Dan,
> 
> The subversion repository already contains fixes to the
> apache.import_module function so that it is thread-safe. You can check
> it out to see how it is done.
> 
> Regards,
> 
> Nicolas
> 
> 2005/6/17, Dan Eloff <dan.eloff@gmail.com>:
> > Well this is the biggest problem in my otherwise threadsafe code. From
> > what I've read, importing/reloading modules in a threaded environment
> > is just plain dangerous. There could be any number of requests
> > executing code from and accessing global variables in a module when it
> > changes and gets reloaded. Then you have the two level problem of what
> > happens to the executing requests, as well as what happens when
> > multiple incoming requests all spot that the module has changed, and
> > reload it multiple times in quick succession, re-executing code in the
> > module scope (this is pretty much worst case)
> >
> > I know Graham knows a lot more about this than I do (help!).
> >
> > I do have a lot of flexibility here, since I'm using my own publisher
> > I do not have to use apache.import_module. In fact I would prefer to
> > not have the whole importing/reloading business affect my code outside
> > of the publisher, that way I can change things internally at will.
> > Clearly one option is to create a simple import function that imports
> > once only in a production environment, and every time in a development
> > env, but I'm still interested in exploring the options.
> >
> > -Dan
> >
> > _______________________________________________
> > Mod_python mailing list
> > Mod_python@modpython.org
> > http://mailman.modpython.org/mailman/listinfo/mod_python
> >
>

From mike_mp at zzzcomputing.com  Sat Jun 18 15:29:46 2005
From: mike_mp at zzzcomputing.com (michael bayer)
Date: Sat Jun 18 15:29:54 2005
Subject: [mod_python] Threading and apache.import_module
In-Reply-To: <4817b6fc05061712095453abac@mail.gmail.com>
References: <4817b6fc05061712095453abac@mail.gmail.com>
Message-ID: <1534F49B-5F65-45C4-9F65-7B08DC55EBCF@zzzcomputing.com>

I use the "two-check" approach to this, which allows multiple threads  
to get at an already-imported resource without blocking each other,  
while allowing the actual import to occur in a threadsafe  
manner...suppose every access of a module calls "verify_module" which  
reloads the module if needed, using the functions _needs_reload to  
perform a check and _reload_module to do the actual reload:

    import threading
    mutex = threading.RLock()

    def verify_module(module):
        if _needs_reload(module):
           mutex.acquire()
           try:
               if _needs_reload(module):
                    _reload_module(module)
           finally:
               mutex.release()

in the normal case, threads will call _needs_reload() without  
synchronization and return, without any bottleneck occuring.  when  
the reload is actually required, threads will line up onto the  
mutex.acquire() and re-check once entering the critical section, thus  
allowing only the first thread inside to actually perform the reload.

an additional optimization is to use a unique mutex for each  
module...that way multiple threads that are reloading several  
different modules also don't block each other.

the issue of other threads executing code against the module while  
its being reloaded is not really addressed here.  as a normal reload 
() or imp.load_module() doesnt remove any of the old module values,  
its usually (but not always) the case that nothing really  
happens....unless there are persistent pointers to the module's  
globals lying around elsewhere, which then become outdated.    I did  
see a reload() implementation that loads a new module under a  
temporary name, then moved it's dictionary over, which attempts to be  
more atomic...I havent tried it but its over at http:// 
lists.canonical.org/pipermail/kragen-hacks/2002-January/000302.html .

On Jun 17, 2005, at 3:09 PM, Dan Eloff wrote:

> Well this is the biggest problem in my otherwise threadsafe code. From
> what I've read, importing/reloading modules in a threaded environment
> is just plain dangerous. There could be any number of requests
> executing code from and accessing global variables in a module when it
> changes and gets reloaded. Then you have the two level problem of what
> happens to the executing requests, as well as what happens when
> multiple incoming requests all spot that the module has changed, and
> reload it multiple times in quick succession, re-executing code in the
> module scope (this is pretty much worst case)
>
> I know Graham knows a lot more about this than I do (help!).
>
> I do have a lot of flexibility here, since I'm using my own publisher
> I do not have to use apache.import_module. In fact I would prefer to
> not have the whole importing/reloading business affect my code outside
> of the publisher, that way I can change things internally at will.
> Clearly one option is to create a simple import function that imports
> once only in a production environment, and every time in a development
> env, but I'm still interested in exploring the options.
>
> -Dan
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>
From nicolas.lehuen at gmail.com  Sun Jun 19 04:19:21 2005
From: nicolas.lehuen at gmail.com (Nicolas Lehuen)
Date: Sun Jun 19 04:19:37 2005
Subject: [mod_python] Threading and apache.import_module
In-Reply-To: <1534F49B-5F65-45C4-9F65-7B08DC55EBCF@zzzcomputing.com>
References: <4817b6fc05061712095453abac@mail.gmail.com>
	<1534F49B-5F65-45C4-9F65-7B08DC55EBCF@zzzcomputing.com>
Message-ID: <c298f2d705061901192c8e6c68@mail.gmail.com>

Just as a note, those issues have been thoroughly covered by Graham
Dumpleton in his Vampire project, and some of his ideas have been
retrofitted into the development version of mod_python.

Regards,
Nicolas

2005/6/18, michael bayer <mike_mp@zzzcomputing.com>:
> I use the "two-check" approach to this, which allows multiple threads
> to get at an already-imported resource without blocking each other,
> while allowing the actual import to occur in a threadsafe
> manner...suppose every access of a module calls "verify_module" which
> reloads the module if needed, using the functions _needs_reload to
> perform a check and _reload_module to do the actual reload:
> 
>     import threading
>     mutex = threading.RLock()
> 
>     def verify_module(module):
>         if _needs_reload(module):
>            mutex.acquire()
>            try:
>                if _needs_reload(module):
>                     _reload_module(module)
>            finally:
>                mutex.release()
> 
> in the normal case, threads will call _needs_reload() without
> synchronization and return, without any bottleneck occuring.  when
> the reload is actually required, threads will line up onto the
> mutex.acquire() and re-check once entering the critical section, thus
> allowing only the first thread inside to actually perform the reload.
> 
> an additional optimization is to use a unique mutex for each
> module...that way multiple threads that are reloading several
> different modules also don't block each other.
> 
> the issue of other threads executing code against the module while
> its being reloaded is not really addressed here.  as a normal reload
> () or imp.load_module() doesnt remove any of the old module values,
> its usually (but not always) the case that nothing really
> happens....unless there are persistent pointers to the module's
> globals lying around elsewhere, which then become outdated.    I did
> see a reload() implementation that loads a new module under a
> temporary name, then moved it's dictionary over, which attempts to be
> more atomic...I havent tried it but its over at http://
> lists.canonical.org/pipermail/kragen-hacks/2002-January/000302.html .
> 
> On Jun 17, 2005, at 3:09 PM, Dan Eloff wrote:
> 
> > Well this is the biggest problem in my otherwise threadsafe code. From
> > what I've read, importing/reloading modules in a threaded environment
> > is just plain dangerous. There could be any number of requests
> > executing code from and accessing global variables in a module when it
> > changes and gets reloaded. Then you have the two level problem of what
> > happens to the executing requests, as well as what happens when
> > multiple incoming requests all spot that the module has changed, and
> > reload it multiple times in quick succession, re-executing code in the
> > module scope (this is pretty much worst case)
> >
> > I know Graham knows a lot more about this than I do (help!).
> >
> > I do have a lot of flexibility here, since I'm using my own publisher
> > I do not have to use apache.import_module. In fact I would prefer to
> > not have the whole importing/reloading business affect my code outside
> > of the publisher, that way I can change things internally at will.
> > Clearly one option is to create a simple import function that imports
> > once only in a production environment, and every time in a development
> > env, but I'm still interested in exploring the options.
> >
> > -Dan
> >
> > _______________________________________________
> > Mod_python mailing list
> > Mod_python@modpython.org
> > http://mailman.modpython.org/mailman/listinfo/mod_python
> >
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>

From mike_mp at zzzcomputing.com  Sun Jun 19 11:58:34 2005
From: mike_mp at zzzcomputing.com (michael bayer)
Date: Sun Jun 19 11:58:43 2005
Subject: [mod_python] Threading and apache.import_module
In-Reply-To: <c298f2d705061901192c8e6c68@mail.gmail.com>
References: <4817b6fc05061712095453abac@mail.gmail.com>
	<1534F49B-5F65-45C4-9F65-7B08DC55EBCF@zzzcomputing.com>
	<c298f2d705061901192c8e6c68@mail.gmail.com>
Message-ID: <4594D408-20D1-467C-A0A2-137A39B8A2FC@zzzcomputing.com>

I just searched around for this, and hey youre right, it does.     
Myghty imports "in-memory" modules in a similar way (i.e. via  
imp.new_module + exec)....but I hadnt thought of just bypassing  
sys.modules altogether.  A "request-level" module really doesnt need  
to be generally importable so that now makes sense.

I would most like to find a way to do this while also taking  
advantage of .pyc files (seems like, create .pyc file if it doesnt  
exist, else if it exists, read four bytes + one long value, then use  
marshal.load() to create a code object, then exec that).


On Jun 19, 2005, at 4:19 AM, Nicolas Lehuen wrote:

> Just as a note, those issues have been thoroughly covered by Graham
> Dumpleton in his Vampire project, and some of his ideas have been
> retrofitted into the development version of mod_python.
>
> Regards,
> Nicolas
>
> 2005/6/18, michael bayer <mike_mp@zzzcomputing.com>:
>
>> I use the "two-check" approach to this, which allows multiple threads
>> to get at an already-imported resource without blocking each other,
>> while allowing the actual import to occur in a threadsafe
>> manner...suppose every access of a module calls "verify_module" which
>> reloads the module if needed, using the functions _needs_reload to
>> perform a check and _reload_module to do the actual reload:
>>
>>     import threading
>>     mutex = threading.RLock()
>>
>>     def verify_module(module):
>>         if _needs_reload(module):
>>            mutex.acquire()
>>            try:
>>                if _needs_reload(module):
>>                     _reload_module(module)
>>            finally:
>>                mutex.release()
>>
>> in the normal case, threads will call _needs_reload() without
>> synchronization and return, without any bottleneck occuring.  when
>> the reload is actually required, threads will line up onto the
>> mutex.acquire() and re-check once entering the critical section, thus
>> allowing only the first thread inside to actually perform the reload.
>>
>> an additional optimization is to use a unique mutex for each
>> module...that way multiple threads that are reloading several
>> different modules also don't block each other.
>>
>> the issue of other threads executing code against the module while
>> its being reloaded is not really addressed here.  as a normal reload
>> () or imp.load_module() doesnt remove any of the old module values,
>> its usually (but not always) the case that nothing really
>> happens....unless there are persistent pointers to the module's
>> globals lying around elsewhere, which then become outdated.    I did
>> see a reload() implementation that loads a new module under a
>> temporary name, then moved it's dictionary over, which attempts to be
>> more atomic...I havent tried it but its over at http://
>> lists.canonical.org/pipermail/kragen-hacks/2002-January/000302.html .
>>
>> On Jun 17, 2005, at 3:09 PM, Dan Eloff wrote:
>>
>>
>>> Well this is the biggest problem in my otherwise threadsafe code.  
>>> From
>>> what I've read, importing/reloading modules in a threaded  
>>> environment
>>> is just plain dangerous. There could be any number of requests
>>> executing code from and accessing global variables in a module  
>>> when it
>>> changes and gets reloaded. Then you have the two level problem of  
>>> what
>>> happens to the executing requests, as well as what happens when
>>> multiple incoming requests all spot that the module has changed, and
>>> reload it multiple times in quick succession, re-executing code  
>>> in the
>>> module scope (this is pretty much worst case)
>>>
>>> I know Graham knows a lot more about this than I do (help!).
>>>
>>> I do have a lot of flexibility here, since I'm using my own  
>>> publisher
>>> I do not have to use apache.import_module. In fact I would prefer to
>>> not have the whole importing/reloading business affect my code  
>>> outside
>>> of the publisher, that way I can change things internally at will.
>>> Clearly one option is to create a simple import function that  
>>> imports
>>> once only in a production environment, and every time in a  
>>> development
>>> env, but I'm still interested in exploring the options.
>>>
>>> -Dan
>>>
>>> _______________________________________________
>>> Mod_python mailing list
>>> Mod_python@modpython.org
>>> http://mailman.modpython.org/mailman/listinfo/mod_python
>>>
>>>
>> _______________________________________________
>> Mod_python mailing list
>> Mod_python@modpython.org
>> http://mailman.modpython.org/mailman/listinfo/mod_python
>>
>
From dharana at dharana.net  Sun Jun 19 12:44:24 2005
From: dharana at dharana.net (dharana)
Date: Sun Jun 19 12:44:35 2005
Subject: [mod_python] StringField encoding?
Message-ID: <42B5A0E8.5030000@dharana.net>

Hello,

I have a form in one page. I send it with accented chars. Apache is configured 
to send content as UTF-8 and browser is Firefox so I presume Modpython gets 
utf-8 encoded data.

StringField inherits from str so, in this case, what kind of encoding should I 
pressume it has? I'm having trouble trying to decode('utf-8') the StringField 
instance, that's why I ask.

-- 
dharana

From nick at dd.revealed.net  Sun Jun 19 12:53:53 2005
From: nick at dd.revealed.net (Nick)
Date: Sun Jun 19 12:54:03 2005
Subject: [mod_python] StringField encoding?
In-Reply-To: <42B5A0E8.5030000@dharana.net>
References: <42B5A0E8.5030000@dharana.net>
Message-ID: <42B5A321.6000502@dd.revealed.net>

You could try explicity setting the media type in the content type to be 
ISO-8859-1 (or whatever character set you want to use) instead of unicode.

Nick

dharana wrote:
> Hello,
> 
> I have a form in one page. I send it with accented chars. Apache is 
> configured to send content as UTF-8 and browser is Firefox so I presume 
> Modpython gets utf-8 encoded data.
> 
> StringField inherits from str so, in this case, what kind of encoding 
> should I pressume it has? I'm having trouble trying to decode('utf-8') 
> the StringField instance, that's why I ask.
From dharana at dharana.net  Sun Jun 19 13:01:00 2005
From: dharana at dharana.net (dharana)
Date: Sun Jun 19 13:01:11 2005
Subject: [mod_python] StringField encoding?
In-Reply-To: <42B5A321.6000502@dd.revealed.net>
References: <42B5A0E8.5030000@dharana.net> <42B5A321.6000502@dd.revealed.net>
Message-ID: <42B5A4CC.2040209@dharana.net>

But if I understand it correctly (I doubt it anyway). How are you going to store 
an UTF-8 string into a str without loosing information? Let's say, a japanese kanji?

If every string is converted to str (when assigning to StringField) instead of 
unicode it won't be possible to recover the original string. Please tell me I'm 
wrong.

Nick wrote:
> You could try explicity setting the media type in the content type to be 
> ISO-8859-1 (or whatever character set you want to use) instead of unicode.
> 
> Nick
> 
> dharana wrote:
> 
>> Hello,
>>
>> I have a form in one page. I send it with accented chars. Apache is 
>> configured to send content as UTF-8 and browser is Firefox so I 
>> presume Modpython gets utf-8 encoded data.
>>
>> StringField inherits from str so, in this case, what kind of encoding 
>> should I pressume it has? I'm having trouble trying to decode('utf-8') 
>> the StringField instance, that's why I ask.
> 
> 
> 
> 

-- 
dharana

From nick at dd.revealed.net  Sun Jun 19 13:06:48 2005
From: nick at dd.revealed.net (Nick)
Date: Sun Jun 19 13:06:57 2005
Subject: [mod_python] StringField encoding?
In-Reply-To: <42B5A4CC.2040209@dharana.net>
References: <42B5A0E8.5030000@dharana.net> <42B5A321.6000502@dd.revealed.net>
	<42B5A4CC.2040209@dharana.net>
Message-ID: <42B5A628.7090809@dd.revealed.net>

That's why I avoid dealing with unicode altogether :)

Sorry that's not much help.

Nick

dharana wrote:
> But if I understand it correctly (I doubt it anyway). How are you going 
> to store an UTF-8 string into a str without loosing information? Let's 
> say, a japanese kanji?
> 
> If every string is converted to str (when assigning to StringField) 
> instead of unicode it won't be possible to recover the original string. 
> Please tell me I'm wrong.
> 
> Nick wrote:
> 
>> You could try explicity setting the media type in the content type to 
>> be ISO-8859-1 (or whatever character set you want to use) instead of 
>> unicode.
>>
>> Nick
>>
>> dharana wrote:
>>
>>> Hello,
>>>
>>> I have a form in one page. I send it with accented chars. Apache is 
>>> configured to send content as UTF-8 and browser is Firefox so I 
>>> presume Modpython gets utf-8 encoded data.
>>>
>>> StringField inherits from str so, in this case, what kind of encoding 
>>> should I pressume it has? I'm having trouble trying to 
>>> decode('utf-8') the StringField instance, that's why I ask.
>>
>>
>>
>>
>>
> 

From nicolas.lehuen at gmail.com  Sun Jun 19 13:42:31 2005
From: nicolas.lehuen at gmail.com (Nicolas Lehuen)
Date: Sun Jun 19 13:42:36 2005
Subject: [mod_python] StringField encoding?
In-Reply-To: <42B5A4CC.2040209@dharana.net>
References: <42B5A0E8.5030000@dharana.net> <42B5A321.6000502@dd.revealed.net>
	<42B5A4CC.2040209@dharana.net>
Message-ID: <c298f2d70506191042355ae1e1@mail.gmail.com>

Two things to remember :

1) str are sequences of bytes (think bytes, not chars)
2) unicode strings are sequences of unicode characters

An encoding is simply a mapping (sometimes an incomplete mapping)
between the two forms.

The UTF-8 encoding of a unicode string is a sequence of byte that can
perfectly be stored in a str. There is no information loss, you could
store japanese kanji or even klingon in UTF-8 form in a str instance.
In fact, any binary encoding of unicode can be stored into a str,
since a str can contain any binary content.

There are two ways of loosing information :

1) You pick an encoding which don't know how to encode your unicode
characters. For example, the ASCII encoding won't be able to encode
european accuated characters, not mentioning Japanese Kanji.
Fortunately, UTF-8 and UTF-16 can encode any unicode string, so there
should not be any encoding problem here.

2) You forget what encoding was used to get the sequence of bytes
found in a str and try to decode it with the wrong encoding. This may
be the problem you have with StringField : you get a sequence of byte,
but you don't know the encoding you should use (the parameter you
should pass to str.decode()). If you think that Apache and mod_python
are passing you UTF-8 encoded strings, then decode("UTF8") should be
sufficient. If it's not, then it means that the encoding used by
Apache and/or mod_python is not UTF8...

Regards,
Nicolas

2005/6/19, dharana <dharana@dharana.net>:
> But if I understand it correctly (I doubt it anyway). How are you going to store
> an UTF-8 string into a str without loosing information? Let's say, a japanese kanji?
> 
> If every string is converted to str (when assigning to StringField) instead of
> unicode it won't be possible to recover the original string. Please tell me I'm
> wrong.
> 
> Nick wrote:
> > You could try explicity setting the media type in the content type to be
> > ISO-8859-1 (or whatever character set you want to use) instead of unicode.
> >
> > Nick
> >
> > dharana wrote:
> >
> >> Hello,
> >>
> >> I have a form in one page. I send it with accented chars. Apache is
> >> configured to send content as UTF-8 and browser is Firefox so I
> >> presume Modpython gets utf-8 encoded data.
> >>
> >> StringField inherits from str so, in this case, what kind of encoding
> >> should I pressume it has? I'm having trouble trying to decode('utf-8')
> >> the StringField instance, that's why I ask.
> >
> >
> >
> >
> 
> --
> dharana
> 
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>

From dharana at dharana.net  Sun Jun 19 13:49:56 2005
From: dharana at dharana.net (dharana)
Date: Sun Jun 19 13:50:08 2005
Subject: [mod_python] StringField encoding?
In-Reply-To: <42B5A628.7090809@dd.revealed.net>
References: <42B5A0E8.5030000@dharana.net> <42B5A321.6000502@dd.revealed.net>
	<42B5A4CC.2040209@dharana.net> <42B5A628.7090809@dd.revealed.net>
Message-ID: <42B5B044.1060105@dharana.net>

Problem solved. I still don't understand exactly how but it's saving my kanjis. 
Move on before it breaks.. :)

Nick wrote:
> That's why I avoid dealing with unicode altogether :)
> 
> Sorry that's not much help.
> 
> Nick
> 
> dharana wrote:
> 
>> But if I understand it correctly (I doubt it anyway). How are you 
>> going to store an UTF-8 string into a str without loosing information? 
>> Let's say, a japanese kanji?
>>
>> If every string is converted to str (when assigning to StringField) 
>> instead of unicode it won't be possible to recover the original 
>> string. Please tell me I'm wrong.
>>
>> Nick wrote:
>>
>>> You could try explicity setting the media type in the content type to 
>>> be ISO-8859-1 (or whatever character set you want to use) instead of 
>>> unicode.
>>>
>>> Nick
>>>
>>> dharana wrote:
>>>
>>>> Hello,
>>>>
>>>> I have a form in one page. I send it with accented chars. Apache is 
>>>> configured to send content as UTF-8 and browser is Firefox so I 
>>>> presume Modpython gets utf-8 encoded data.
>>>>
>>>> StringField inherits from str so, in this case, what kind of 
>>>> encoding should I pressume it has? I'm having trouble trying to 
>>>> decode('utf-8') the StringField instance, that's why I ask.
>>>
>>>
>>>
>>>
>>>
>>>
>>
> 
> 
> 
> 

-- 
dharana

From dharana at dharana.net  Sun Jun 19 14:09:57 2005
From: dharana at dharana.net (dharana)
Date: Sun Jun 19 14:10:08 2005
Subject: [mod_python] StringField encoding?
In-Reply-To: <c298f2d70506191042355ae1e1@mail.gmail.com>
References: <42B5A0E8.5030000@dharana.net> <42B5A321.6000502@dd.revealed.net>	
	<42B5A4CC.2040209@dharana.net>
	<c298f2d70506191042355ae1e1@mail.gmail.com>
Message-ID: <42B5B4F5.3000402@dharana.net>

Nicolas Lehuen wrote:
> Two things to remember :
> 
> 1) str are sequences of bytes (think bytes, not chars)

This removes a wrong idea I had. Thanks

> 2) unicode strings are sequences of unicode characters
> 
> An encoding is simply a mapping (sometimes an incomplete mapping)
> between the two forms.
> 
> The UTF-8 encoding of a unicode string is a sequence of byte that can
> perfectly be stored in a str. There is no information loss, you could
> store japanese kanji or even klingon in UTF-8 form in a str instance.
> In fact, any binary encoding of unicode can be stored into a str,
> since a str can contain any binary content.
> 
> There are two ways of loosing information :
> 
> 1) You pick an encoding which don't know how to encode your unicode
> characters. For example, the ASCII encoding won't be able to encode
> european accuated characters, not mentioning Japanese Kanji.
> Fortunately, UTF-8 and UTF-16 can encode any unicode string, so there
> should not be any encoding problem here.
> 
> 2) You forget what encoding was used to get the sequence of bytes
> found in a str and try to decode it with the wrong encoding. This may
> be the problem you have with StringField : you get a sequence of byte,
> but you don't know the encoding you should use (the parameter you
> should pass to str.decode()). If you think that Apache and mod_python
> are passing you UTF-8 encoded strings, then decode("UTF8") should be
> sufficient. If it's not, then it means that the encoding used by
> Apache and/or mod_python is not UTF8...
> 

Ok, now I see the light. Now I understand exactly what is going on with the 
string and I can decode('utf-8') it. Thanks again :)

-- 
dharana

From grahamd at dscpl.com.au  Sun Jun 19 18:34:04 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Sun Jun 19 18:34:15 2005
Subject: [mod_python] Threading and apache.import_module
Message-ID: <1119220444.6882@dscpl.user.openhosting.com>

michael bayer wrote ..
> I just searched around for this, and hey youre right, it does.     
> Myghty imports "in-memory" modules in a similar way (i.e. via  
> imp.new_module + exec)....but I hadnt thought of just bypassing  
> sys.modules altogether.  A "request-level" module really doesnt need  
> to be generally importable so that now makes sense.

Unfortunately, if you want an alternate module import system to support
packages in a useful way, you don't have a choice but to still place loaded
modules into sys.modules. The key though is knowing that it isn't actually
necessary to name the module with its true module name. It can instead
be an arbitrary name based on the path name to the ".py" file. The name
can't be too long though as you run up against name length restrictions
in Python. Something like a md5 hexdigest of the full pathname generally
works okay. That said, the only problem with trying to support packages
is that dependency management can become hellish. It isn't enough to
simply reload the single file in a package which has changed, you must
reload the whole package because of the interdependencies that can exist
between the modules in the package. Also, if only one file in the package
is changed, anything dependent on any part of the module will need to
be reloaded at the next opportunity.

> I would most like to find a way to do this while also taking  
> advantage of .pyc files (seems like, create .pyc file if it doesnt  
> exist, else if it exists, read four bytes + one long value, then use  
> marshal.load() to create a code object, then exec that).

I would advise against trying to accomodate ".pyc" files. If you were to
do this you will in practice have to monitor the timestamps on both the
".py" and ".pyc" files and contend with issues such as what to do when
the ".pyc" file is removed but the ".py" still exists but you were originally
loaded from the ".pyc" file. Similarly, what do you do if you are loaded
from the ".pyc" file and the ".py" file is removed. Does this imply that
the user is intending the page to now no longer be available. Another
cases is what do you do if you are loaded from the ".pyc" file and the
".py" file modification time is changed to be older than what it was before.
Do you take this as meaning that an older file has been restored and
that should be used instead. As you can see you have to make various
assumptions and in some respects hope for the best. Although it can
be made to work in a reasonably sensible way, I found it complicates
the code unnecessarily and not worth the trouble, especially when
Apache generally runs as a user where ".pyc" files can't be created in
the first place.

Graham


From grahamd at dscpl.com.au  Sun Jun 19 18:47:04 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Sun Jun 19 18:47:13 2005
Subject: [mod_python] Threading and apache.import_module
Message-ID: <1119221224.15598@dscpl.user.openhosting.com>

Graham Dumpleton wrote ..
> Also, if only one file in the package
> is changed, anything dependent on any part of the module will need to
> be reloaded at the next opportunity.

Whoops, should read as "dependent on any part of the package".
Not that many would have any idea what I am raving on about. :-)

From mike_mp at zzzcomputing.com  Sun Jun 19 22:14:21 2005
From: mike_mp at zzzcomputing.com (michael bayer)
Date: Sun Jun 19 22:14:35 2005
Subject: [mod_python] Threading and apache.import_module
In-Reply-To: <1119220444.6882@dscpl.user.openhosting.com>
References: <1119220444.6882@dscpl.user.openhosting.com>
Message-ID: <5DA72FFC-3349-404D-87FB-8E5746F0D2DC@zzzcomputing.com>


On Jun 19, 2005, at 6:34 PM, Graham Dumpleton wrote:

> I would advise against trying to accomodate ".pyc" files. If you  
> were to
> do this you will in practice have to monitor the timestamps on both  
> the
> ".py" and ".pyc" files and contend with issues such as what to do when
> the ".pyc" file is removed but the ".py" still exists but you were  
> originally
> loaded from the ".pyc" file. Similarly, what do you do if you are  
> loaded
> from the ".pyc" file and the ".py" file is removed. Does this imply  
> that
> the user is intending the page to now no longer be available. Another
> cases is what do you do if you are loaded from the ".pyc" file and the
> ".py" file modification time is changed to be older than what it  
> was before.
> Do you take this as meaning that an older file has been restored and
> that should be used instead. As you can see you have to make various
> assumptions and in some respects hope for the best. Although it can
> be made to work in a reasonably sensible way, I found it complicates
> the code unnecessarily and not worth the trouble, especially when
> Apache generally runs as a user where ".pyc" files can't be created in
> the first place.

ah well, I can definitely make assumptions as I'm talking  
specifically about modules loaded for Myghty, and the primary ".py"  
modules I am loading were generated from template files, so its  
already a given that there is a "data directory" configured where the  
Apache process can write .py files, and theres no problem assuming  
that a .py file must exist for each .pyc file else it gets recreated  
by the template, and they arent really part of a "package".    For a  
large set of several hundred or thousands of templates, which are  
released from memory on a least-recently-used scheme, a lot of them  
will be falling out of memory and getting re-loaded back in again  
repeatedly;  the .pyc factor has a sizeable impact on how much work  
the server has to do, particularly upon startup or creation of new  
child processes, and also within setups that are sensitive to  
"thrashing".

I also have support for plain .py modules with callable functions/ 
objects in the spirit of Vampire/Publisher, but similarly they are  
just the end-points to handling a request...they arent really meant  
to be imported by other modules and I only seek to support basic  
reloading functionality for them;  if you change the back-end to code  
you would still have to restart the server.  Generally I would base  
module loading/reloading upon the existence/timestamp of the .py  
file, and then look for the .pyc file existence/timestamp as a second  
step, the way imp.load_source does (which is what Im using now).


-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20050619/ebf87abd/attachment-0001.html
From nicolas.lehuen at gmail.com  Mon Jun 20 02:11:38 2005
From: nicolas.lehuen at gmail.com (Nicolas Lehuen)
Date: Mon Jun 20 02:11:43 2005
Subject: [mod_python] Threading and apache.import_module
In-Reply-To: <1119220444.6882@dscpl.user.openhosting.com>
References: <1119220444.6882@dscpl.user.openhosting.com>
Message-ID: <c298f2d7050619231115806087@mail.gmail.com>

2005/6/20, Graham Dumpleton <grahamd@dscpl.com.au>:
> michael bayer wrote ..
> > I just searched around for this, and hey youre right, it does.
> > Myghty imports "in-memory" modules in a similar way (i.e. via
> > imp.new_module + exec)....but I hadnt thought of just bypassing
> > sys.modules altogether.  A "request-level" module really doesnt need
> > to be generally importable so that now makes sense.
> 
> Unfortunately, if you want an alternate module import system to support
> packages in a useful way, you don't have a choice but to still place loaded
> modules into sys.modules. The key though is knowing that it isn't actually
> necessary to name the module with its true module name. It can instead
> be an arbitrary name based on the path name to the ".py" file. The name
> can't be too long though as you run up against name length restrictions
> in Python. Something like a md5 hexdigest of the full pathname generally
> works okay. That said, the only problem with trying to support packages
> is that dependency management can become hellish. It isn't enough to
> simply reload the single file in a package which has changed, you must
> reload the whole package because of the interdependencies that can exist
> between the modules in the package. Also, if only one file in the package
> is changed, anything dependent on any part of the module will need to
> be reloaded at the next opportunity.

Regarding the naming of the package, don't give a module the same name
as its filename, that is to say with slashes and dots. It seems that
this breaks some behaviour of the Python import system, that is to say
that some imports that are performed in the dynamically loaded module
misteriously fail. I use a re.sub(r'\W+','_',filename) and everything
is OK. That being said, I didn't know about name length restrictions
so I have to correct my code to cope with this issue.

> > I would most like to find a way to do this while also taking
> > advantage of .pyc files (seems like, create .pyc file if it doesnt
> > exist, else if it exists, read four bytes + one long value, then use
> > marshal.load() to create a code object, then exec that).
> 
> I would advise against trying to accomodate ".pyc" files. If you were to
> do this you will in practice have to monitor the timestamps on both the
> ".py" and ".pyc" files and contend with issues such as what to do when
> the ".pyc" file is removed but the ".py" still exists but you were originally
> loaded from the ".pyc" file. Similarly, what do you do if you are loaded
> from the ".pyc" file and the ".py" file is removed. Does this imply that
> the user is intending the page to now no longer be available. Another
> cases is what do you do if you are loaded from the ".pyc" file and the
> ".py" file modification time is changed to be older than what it was before.
> Do you take this as meaning that an older file has been restored and
> that should be used instead. As you can see you have to make various
> assumptions and in some respects hope for the best. Although it can
> be made to work in a reasonably sensible way, I found it complicates
> the code unnecessarily and not worth the trouble, especially when
> Apache generally runs as a user where ".pyc" files can't be created in
> the first place.
> 
> Graham
> 
>

From grahamd at dscpl.com.au  Mon Jun 20 02:25:03 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Mon Jun 20 02:25:13 2005
Subject: [mod_python] Threading and apache.import_module
Message-ID: <1119248702.16665@dscpl.user.openhosting.com>

Nicolas Lehuen wrote ..
> Regarding the naming of the package, don't give a module the same name
> as its filename, that is to say with slashes and dots. It seems that
> this breaks some behaviour of the Python import system, that is to say
> that some imports that are performed in the dynamically loaded module
> misteriously fail. I use a re.sub(r'\W+','_',filename) and everything
> is OK. That being said, I didn't know about name length restrictions
> so I have to correct my code to cope with this issue.

The length restriction is that the name of the module can not be longer than
MAXPATHLEN. Thus, as long as you don't excessively increase the length
of the name when doing substitutions such that that is exceeded, you
should be okay.

BTW, using the simple substitution you have, I think one could probably
construct two pathnames which when substituted would result in the
same thing. I currently use:

    stub = os.path.splitext(file)[0]
    label = md5.new(stub).hexdigest()
    label = self._prefix + label
    label = label + "_" + str(len(stub))

For the length of data we are talking about, I doubt that md5 collisions
are going to occur. I append the length to stir things up a little bit more
but probably don't even need that and MD5 hexdigest is probably good
enough.

Graham
From wouter at squirrel-systems.com  Mon Jun 20 03:05:18 2005
From: wouter at squirrel-systems.com (Wouter van Marle)
Date: Mon Jun 20 03:05:38 2005
Subject: [mod_python] req.sendfile() questions
Message-ID: <1119251119.24491.56.camel@cm61-18-245-172.hkcable.com.hk>

Hi all,

I'm looking into a way of sending out specific files, and detect whether
or not the download was successful.
For sending the file I think I can best use req.sendfile(path,[offset,
len]). That seems easy enough to implement.

But how to detect whether the download was aborted (if so: at what
stage), or whether it has finished successful, etc. What I understand
after searching the web, is that req.sendfile does come back: just no
documentation on what it comes back with!

Wouter.

From dharana at dharana.net  Mon Jun 20 05:47:20 2005
From: dharana at dharana.net (dharana)
Date: Mon Jun 20 05:47:41 2005
Subject: [mod_python] PSP(req, string=None)
Message-ID: <42B690A8.30009@dharana.net>

PSP(req, string=None) won't print a blank page, it will try to load a file. Is 
this intended behaviour?

from the doc:

'''
req is a request object; filename and string are optional keyword arguments 
which indicate the source of the PSP code. Only one of these can be specified. 
If neither is specified, req.filename is used as filename.
'''

I'm really specifying the string param.


I came across this because I dynamically pass psp code to PSP and sometimes it's 
a blank string instead of useful contents.

-- 
dharana

From jg.lists at sympatico.ca  Mon Jun 20 08:37:43 2005
From: jg.lists at sympatico.ca (Jim Gallacher)
Date: Mon Jun 20 08:33:20 2005
Subject: [mod_python] req.sendfile() questions
In-Reply-To: <1119251119.24491.56.camel@cm61-18-245-172.hkcable.com.hk>
References: <1119251119.24491.56.camel@cm61-18-245-172.hkcable.com.hk>
Message-ID: <42B6B897.30507@sympatico.ca>

Wouter van Marle wrote:
> Hi all,
> 
> I'm looking into a way of sending out specific files, and detect whether
> or not the download was successful.
> For sending the file I think I can best use req.sendfile(path,[offset,
> len]). That seems easy enough to implement.
> 
> But how to detect whether the download was aborted (if so: at what
> stage), or whether it has finished successful, etc. What I understand
> after searching the web, is that req.sendfile does come back: just no
> documentation on what it comes back with!

It will raise an IOError exception if the client disconnects. Otherwise 
it will return the number of bytes sent.

req.sendfile is a wrapper around the apache function ap_send_fd(). A 
quick look at this tells me that nbytes is set to 0 on failure, so there 
is no way for mod_python to determine the progress if the client 
disconnects.

I'll add this to the documentation.

Jim
From wouter at squirrel-systems.com  Mon Jun 20 09:59:11 2005
From: wouter at squirrel-systems.com (Wouter van Marle)
Date: Mon Jun 20 09:59:21 2005
Subject: [mod_python] req.sendfile() questions
In-Reply-To: <42B6B897.30507@sympatico.ca>
References: <1119251119.24491.56.camel@cm61-18-245-172.hkcable.com.hk>
	<42B6B897.30507@sympatico.ca>
Message-ID: <1119275952.24491.95.camel@cm61-18-245-172.hkcable.com.hk>

On Mon, 2005-06-20 at 08:37 -0400, Jim Gallacher wrote:

> > I'm looking into a way of sending out specific files, and detect whether
> > or not the download was successful.
> > For sending the file I think I can best use req.sendfile(path,[offset,
> > len]). That seems easy enough to implement.
> > 
> > But how to detect whether the download was aborted (if so: at what
> > stage), or whether it has finished successful, etc. What I understand
> > after searching the web, is that req.sendfile does come back: just no
> > documentation on what it comes back with!
> 
> It will raise an IOError exception if the client disconnects. Otherwise 
> it will return the number of bytes sent.
> 

OK, I understand.
So basically I should say something like this (totally untested for
now):

def send_file(req):
	filename = "/path/to/file.zip"
	try:
		bytes_sent = req.sendfile(filename)
		success = True
	except IOError:
		# client disconnected!
		success = False

I've already noticed you have to add a line like:
req.headers_out['Content-Disposition'] = 'attachment; filename=file.zip'
to give the browser a file name for saving (and in case of Mozilla at
least forces the saving of an mp3 file instead of playing immediately),
and:
req.content_type = mimetype
to set the correct mime type. 

Another, related problem that I ran into: how to write some data to the
browser window, and then send the file? That didn't work. Or after the
download is finished, to write some data to the browser. It seems I have
to start a new request or so? Changing the content_type does not help!

> req.sendfile is a wrapper around the apache function ap_send_fd(). A 
> quick look at this tells me that nbytes is set to 0 on failure, so there 
> is no way for mod_python to determine the progress if the client 
> disconnects.
> 

That's less important to me; complete or not is the main issue here.
By the way, does the req.sendfile() function support resuming a
download?

Wouter.

> I'll add this to the documentation.
> 
> Jim
> 
> 

From jkohans at gmail.com  Mon Jun 20 11:21:43 2005
From: jkohans at gmail.com (Jeremy Kohansimeh)
Date: Mon Jun 20 11:21:51 2005
Subject: [mod_python] Lost Session
Message-ID: <b07823bd0506200821135f9f8a@mail.gmail.com>

Hello,

I am having trouble recovering a session. On the initial request, I create 
some entries for the session and then save it (I have confirmed that there 
is data in the session before I save it and that the save() function is 
being called). On subsequent requests, the session object that I have 
created is not reinstated, instead a new one is created (I have coonfirmed 
this with the is_new() function). I have checked my browser and there is a 
pysid cookie being set on the first request. Does anyone have any tips to 
debug this? I am really at a loss for what is going on.

Here is the code that I use to reinstate/create a session:

def handler(req, **kw):
"""handles initial requests"""

f = open( LOGFILE, 'a+')

req.sess = Session.Session( req)

if not req.sess.is_new():
# this is an old session, so load it up
req.sess.load()
f.write( 'old session\n')
else:
f.write( 'new session\n')

f.close()

return segment.dispatchToHandler( req)

Best Regards,
Jeremy Kohansimeh
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20050620/b8fcb336/attachment.html
From jg.lists at sympatico.ca  Mon Jun 20 11:43:34 2005
From: jg.lists at sympatico.ca (Jim Gallacher)
Date: Mon Jun 20 11:39:09 2005
Subject: [mod_python] req.sendfile() questions
In-Reply-To: <1119275952.24491.95.camel@cm61-18-245-172.hkcable.com.hk>
References: <1119251119.24491.56.camel@cm61-18-245-172.hkcable.com.hk>	
	<42B6B897.30507@sympatico.ca>
	<1119275952.24491.95.camel@cm61-18-245-172.hkcable.com.hk>
Message-ID: <42B6E426.8010900@sympatico.ca>

Wouter van Marle wrote:
> On Mon, 2005-06-20 at 08:37 -0400, Jim Gallacher wrote:
> 
> 
>>>I'm looking into a way of sending out specific files, and detect whether
>>>or not the download was successful.
>>>For sending the file I think I can best use req.sendfile(path,[offset,
>>>len]). That seems easy enough to implement.
>>>
>>>But how to detect whether the download was aborted (if so: at what
>>>stage), or whether it has finished successful, etc. What I understand
>>>after searching the web, is that req.sendfile does come back: just no
>>>documentation on what it comes back with!
>>
>>It will raise an IOError exception if the client disconnects. Otherwise 
>>it will return the number of bytes sent.
>>
> 
> 
> OK, I understand.
> So basically I should say something like this (totally untested for
> now):
> 
> def send_file(req):
> 	filename = "/path/to/file.zip"
> 	try:
> 		bytes_sent = req.sendfile(filename)
> 		success = True
> 	except IOError:
> 		# client disconnected!
> 		success = False

Seems reasonable.

> I've already noticed you have to add a line like:
> req.headers_out['Content-Disposition'] = 'attachment; filename=file.zip'
> to give the browser a file name for saving (and in case of Mozilla at
> least forces the saving of an mp3 file instead of playing immediately),
> and:
> req.content_type = mimetype
> to set the correct mime type. 
> 
> Another, related problem that I ran into: how to write some data to the
> browser window, and then send the file? That didn't work. Or after the
> download is finished, to write some data to the browser. It seems I have
> to start a new request or so? Changing the content_type does not help!

This is a limitation of HTTP. The content type is sent with the response 
header. Once you start sending content, it's too late to change anything 
in the header. Basically, you get one content_type per request.

You could try either req.internal_redirect() and util.redirect() but I'm 
not hopeful. I suspect they'll both complain about the headers already 
being sent.

> 
>>req.sendfile is a wrapper around the apache function ap_send_fd(). A 
>>quick look at this tells me that nbytes is set to 0 on failure, so there 
>>is no way for mod_python to determine the progress if the client 
>>disconnects.
>>
> 
> 
> That's less important to me; complete or not is the main issue here.
> By the way, does the req.sendfile() function support resuming a
> download?

Ah, so it *is* important to you. :) ap_send_fd() sets the number of 
bytes sent to 0 on failure - ie the client disconnects. There is no way 
for req.sendfile to know the number of bytes sent, so there is no way 
for it to resume a download, since it would not know where in the file 
to start sending.

You may be able to manipulate the http headers to get what you want. 
Take a look at headers such as Accept-Ranges, Content-Length, Range, 
etc. This will depend on the client also being able to resume downloads 
and sending the appropriate request. You will need to examine the 
request header to determine what part of the file to send in response.

See http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html

Regards,
Jim
From listspam at flowtheory.net  Mon Jun 20 12:01:42 2005
From: listspam at flowtheory.net (Joshua Ginsberg)
Date: Mon Jun 20 12:01:26 2005
Subject: [mod_python] Lost Session
In-Reply-To: <b07823bd0506200821135f9f8a@mail.gmail.com>
References: <b07823bd0506200821135f9f8a@mail.gmail.com>
Message-ID: <e91e03be74911565f71391af8f3a340c@flowtheory.net>

req.sess.save() ?

-jag

-------------- next part --------------
A non-text attachment was scrubbed...
Name: unknown.jpg
Type: image/jpeg
Size: 1984 bytes
Desc: not available
Url : http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20050620/a0f78c1c/unknown.jpg
-------------- next part --------------

Joshua Ginsberg -- joshg@brainstorminternet.net
Brainstorm Internet Network Operations
970-247-1442 x131
On Jun 20, 2005, at 9:21 AM, Jeremy Kohansimeh wrote:

> Hello,
>
>  I am having trouble recovering a session.? On the initial request, I 
> create some entries for the session and then save it (I have confirmed 
> that there is data in the session before I save it and that the save() 
> function is being called).? On subsequent requests, the session object 
> that I have created is not reinstated, instead a new one is created (I 
> have coonfirmed this with the is_new() function).? I have checked my 
> browser and there is a pysid cookie being set on the first request.? 
> Does anyone have any tips to debug this?? I am really at a loss for 
> what is going on.
>
>  Here is the code that I use to reinstate/create a session:
>
>  def handler(req, **kw):
>  ??? """handles initial requests"""
>  ???
>  ??? f = open( LOGFILE, 'a+')
>  ???
>  ??? req.sess = Session.Session( req)
>  ???
>  ??? if not req.sess.is_new():
>  ??? ??? # this is an old session, so load it up
>  ??? ??? req.sess.load()
>  ??? ??? f.write( 'old session\n')
>  ??? else:
>  ??? ??? f.write( 'new session\n')
>  ??? ???
>  ??? f.close()
>  ??? ???
>  ??? return segment.dispatchToHandler( req)
>
>  Best Regards,
>  Jeremy Kohansimeh
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
From jg.lists at sympatico.ca  Mon Jun 20 12:09:11 2005
From: jg.lists at sympatico.ca (Jim Gallacher)
Date: Mon Jun 20 12:04:47 2005
Subject: [mod_python] Lost Session
In-Reply-To: <b07823bd0506200821135f9f8a@mail.gmail.com>
References: <b07823bd0506200821135f9f8a@mail.gmail.com>
Message-ID: <42B6EA27.2020808@sympatico.ca>

Jeremy Kohansimeh wrote:
> Hello,
> 
> I am having trouble recovering a session.  On the initial request, I 
> create some entries for the session and then save it (I have confirmed 
> that there is data in the session before I save it and that the save() 
> function is being called).  On subsequent requests, the session object 
> that I have created is not reinstated, instead a new one is created (I 
> have coonfirmed this with the is_new() function).  I have checked my 
> browser and there is a pysid cookie being set on the first request.

Is pysid the same for subsequent requests? I think something got out of 
sync.

> Does anyone have any tips to debug this?  I am really at a loss for what 
> is going on.
> 
> Here is the code that I use to reinstate/create a session:
> 
> def handler(req, **kw):
>     """handles initial requests"""
>    
>     f = open( LOGFILE, 'a+')
>    
>     req.sess = Session.Session( req)

Session.Session() loads the session if it exists, otherwise creates a 
new one, as well as a new session cookie / session id. The new session 
*does not* automatically get saved. You need to call req.sess.save() at 
some point. I know you know this. ;)

>    
>     if not req.sess.is_new():
>         # this is an old session, so load it up
>         req.sess.load()

req.sess.load() is redundant.

>         f.write( 'old session\n')
>     else:
>         f.write( 'new session\n')

It's a new session (for whatever reason) with a new pysid in the cookie 
sent to the client, but we never call req.sess.save() in this request. 
Henceforth, every request will generate a new session.

Regards,
Jim




From jkohans at gmail.com  Mon Jun 20 12:07:30 2005
From: jkohans at gmail.com (Jeremy Kohansimeh)
Date: Mon Jun 20 12:07:36 2005
Subject: [mod_python] Lost Session
In-Reply-To: <e91e03be74911565f71391af8f3a340c@flowtheory.net>
References: <b07823bd0506200821135f9f8a@mail.gmail.com>
	<e91e03be74911565f71391af8f3a340c@flowtheory.net>
Message-ID: <b07823bd050620090731890ee0@mail.gmail.com>

I do make this call after I have filled the session with data. I didn't post 
that part of the code bc I've already established that the problem is not 
there. Unless, there is a problem with the save function--is there an 
artificial limit on the amount of data that can be stored into a session, or 
is it limited by the size of the disk?

Jeremy

On 6/20/05, Joshua Ginsberg <listspam@flowtheory.net> wrote:
> 
> req.sess.save() ?
> 
> -jag
> 
> 
> 
> 
> Joshua Ginsberg -- joshg@brainstorminternet.net
> Brainstorm Internet Network Operations
> 970-247-1442 x131
> On Jun 20, 2005, at 9:21 AM, Jeremy Kohansimeh wrote:
> 
> > Hello,
> >
> > I am having trouble recovering a session. On the initial request, I
> > create some entries for the session and then save it (I have confirmed
> > that there is data in the session before I save it and that the save()
> > function is being called). On subsequent requests, the session object
> > that I have created is not reinstated, instead a new one is created (I
> > have coonfirmed this with the is_new() function). I have checked my
> > browser and there is a pysid cookie being set on the first request.
> > Does anyone have any tips to debug this? I am really at a loss for
> > what is going on.
> >
> > Here is the code that I use to reinstate/create a session:
> >
> > def handler(req, **kw):
> > """handles initial requests"""
> > 
> > f = open( LOGFILE, 'a+')
> > 
> > req.sess = Session.Session( req)
> > 
> > if not req.sess.is_new():
> > # this is an old session, so load it up
> > req.sess.load()
> > f.write( 'old session\n')
> > else:
> > f.write( 'new session\n')
> > 
> > f.close()
> > 
> > return segment.dispatchToHandler( req)
> >
> > Best Regards,
> > Jeremy Kohansimeh
> > _______________________________________________
> > Mod_python mailing list
> > Mod_python@modpython.org
> > http://mailman.modpython.org/mailman/listinfo/mod_python
> 
> 
> 
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20050620/9ce86c84/attachment.html
From jkohans at gmail.com  Mon Jun 20 12:18:19 2005
From: jkohans at gmail.com (Jeremy Kohansimeh)
Date: Mon Jun 20 12:18:23 2005
Subject: [mod_python] Lost Session
In-Reply-To: <42B6EA27.2020808@sympatico.ca>
References: <b07823bd0506200821135f9f8a@mail.gmail.com>
	<42B6EA27.2020808@sympatico.ca>
Message-ID: <b07823bd05062009181dd0e134@mail.gmail.com>

I followed Jim's suggestion to see if the pysid cookie for the requests are 
the same and they are not. Do you have any other tips for debugging this? I 
am calling the save function before I start writing a response to the 
browser (I know there can be some conflict in saving a session if something 
has already been written to the browser since the pysid cookie can no longer 
be set).

Jeremy

On 6/20/05, Jim Gallacher <jg.lists@sympatico.ca> wrote:
> 
> Jeremy Kohansimeh wrote:
> > Hello,
> >
> > I am having trouble recovering a session. On the initial request, I
> > create some entries for the session and then save it (I have confirmed
> > that there is data in the session before I save it and that the save()
> > function is being called). On subsequent requests, the session object
> > that I have created is not reinstated, instead a new one is created (I
> > have coonfirmed this with the is_new() function). I have checked my
> > browser and there is a pysid cookie being set on the first request.
> 
> Is pysid the same for subsequent requests? I think something got out of
> sync.
> 
> > Does anyone have any tips to debug this? I am really at a loss for what
> > is going on.
> >
> > Here is the code that I use to reinstate/create a session:
> >
> > def handler(req, **kw):
> > """handles initial requests"""
> >
> > f = open( LOGFILE, 'a+')
> >
> > req.sess = Session.Session( req)
> 
> Session.Session() loads the session if it exists, otherwise creates a
> new one, as well as a new session cookie / session id. The new session
> *does not* automatically get saved. You need to call req.sess.save() at
> some point. I know you know this. ;)
> 
> >
> > if not req.sess.is_new():
> > # this is an old session, so load it up
> > req.sess.load()
> 
> req.sess.load() is redundant.
> 
> > f.write( 'old session\n')
> > else:
> > f.write( 'new session\n')
> 
> It's a new session (for whatever reason) with a new pysid in the cookie
> sent to the client, but we never call req.sess.save() in this request.
> Henceforth, every request will generate a new session.
> 
> Regards,
> Jim
> 
> 
> 
> 
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20050620/c5e3b5c4/attachment.html
From listspam at flowtheory.net  Mon Jun 20 12:26:06 2005
From: listspam at flowtheory.net (Joshua Ginsberg)
Date: Mon Jun 20 12:25:50 2005
Subject: [mod_python] Lost Session
In-Reply-To: <b07823bd050620090731890ee0@mail.gmail.com>
References: <b07823bd0506200821135f9f8a@mail.gmail.com>
	<e91e03be74911565f71391af8f3a340c@flowtheory.net>
	<b07823bd050620090731890ee0@mail.gmail.com>
Message-ID: <6383057687e3e980d38efac78757ae6d@flowtheory.net>

No, there's not really a problem in the save function... and the 
limitations of your data store are defined by the type of session. 
Memory session limits are how much memory you have; DBM session limits 
are how much disk you have. :-) If you'd like to post more code, I'd be 
happy to help triage, however absent more information, there's not a 
lot of help I can offer.

-jag

-------------- next part --------------
A non-text attachment was scrubbed...
Name: unknown.jpg
Type: image/jpeg
Size: 1984 bytes
Desc: not available
Url : http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20050620/adfc1133/unknown-0001.jpg
-------------- next part --------------

Joshua Ginsberg -- joshg@brainstorminternet.net
Brainstorm Internet Network Operations
970-247-1442 x131
On Jun 20, 2005, at 10:07 AM, Jeremy Kohansimeh wrote:

> I do make this call after I have filled the session with data.? I 
> didn't post that part of the code bc I've already established that the 
> problem is not there.? Unless, there is a problem with the save 
> function--is there an artificial limit on the amount of data that can 
> be stored into a session, or is it limited by the size of the disk?
>
>  Jeremy
>
> On 6/20/05, Joshua Ginsberg <listspam@flowtheory.net> wrote:
>>
>> -jag
>>
>>
>>
>>
>> Joshua Ginsberg -- joshg@brainstorminternet.net
>> Brainstorm Internet Network Operations
>> 970-247-1442 x131
>> On Jun 20, 2005, at 9:21 AM, Jeremy Kohansimeh wrote:
>>
>> > Hello,
>> >
>> >??I am having trouble recovering a session. On the initial request, I
>> > create some entries for the session and then save it (I have 
>> confirmed
>> > that there is data in the session before I save it and that the 
>> save()
>> > function is being called). On subsequent requests, the session 
>> object
>> > that I have created is not reinstated, instead a new one is created 
>> (I
>> > have coonfirmed this with the is_new() function). I have checked my
>> > browser and there is a pysid cookie being set on the first request.
>> > Does anyone have any tips to debug this? I am really at a loss for
>> > what is going on.
>> >
>> >??Here is the code that I use to reinstate/create a session:
>> >
>> >??def handler(req, **kw):
>> >?? """handles initial requests"""
>> >??
>> >?? f = open( LOGFILE, 'a+')
>> >??
>> >?? req.sess = Session.Session( req)
>> >??
>>  >?? if not req.sess.is_new():
>> >?? # this is an old session, so load it up
>> >?? req.sess.load()
>> >?? f.write( 'old session\n')
>> >?? else:
>> >?? f.write( 'new session\n')
>> >??
>> >?? f.close ()
>> >??
>> >?? return segment.dispatchToHandler( req)
>> >
>> >??Best Regards,
>> >??Jeremy Kohansimeh
>> > _______________________________________________
>> > Mod_python mailing list
>> > Mod_python@modpython.org
>> > http://mailman.modpython.org/mailman/listinfo/mod_python
>>
>>
>>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
From jg.lists at sympatico.ca  Mon Jun 20 12:59:06 2005
From: jg.lists at sympatico.ca (Jim Gallacher)
Date: Mon Jun 20 12:54:41 2005
Subject: [mod_python] Lost Session
In-Reply-To: <b07823bd05062009181dd0e134@mail.gmail.com>
References: <b07823bd0506200821135f9f8a@mail.gmail.com>	<42B6EA27.2020808@sympatico.ca>
	<b07823bd05062009181dd0e134@mail.gmail.com>
Message-ID: <42B6F5DA.6060306@sympatico.ca>

Any chance you are calling req.write('stuff') before Session.Session()? 
If so, the reqponse header will already have been sent, so the cookie 
Session() creates never makes it to the browser.

Jim


Jeremy Kohansimeh wrote:
> I followed Jim's suggestion to see if the pysid cookie for the requests 
> are the same and they are not.  Do you have any other tips for debugging 
> this?  I am calling the save function before I start writing a response 
> to the browser (I know there can be some conflict in saving a session if 
> something has already been written to the browser since the pysid cookie 
> can no longer be set).
> 
> Jeremy
> 
> On 6/20/05, *Jim Gallacher* <jg.lists@sympatico.ca 
> <mailto:jg.lists@sympatico.ca>> wrote:
> 
>     Jeremy Kohansimeh wrote:
>      > Hello,
>      >
>      > I am having trouble recovering a session.  On the initial request, I
>      > create some entries for the session and then save it (I have
>     confirmed
>      > that there is data in the session before I save it and that the
>     save()
>      > function is being called).  On subsequent requests, the session
>     object
>      > that I have created is not reinstated, instead a new one is
>     created (I
>      > have coonfirmed this with the is_new() function).  I have checked my
>      > browser and there is a pysid cookie being set on the first request.
> 
>     Is pysid the same for subsequent requests? I think something got out of
>     sync.
> 
>      > Does anyone have any tips to debug this?  I am really at a loss
>     for what
>      > is going on.
>      >
>      > Here is the code that I use to reinstate/create a session:
>      >
>      > def handler(req, **kw):
>      >     """handles initial requests"""
>      >
>      >     f = open( LOGFILE, 'a+')
>      >
>      >     req.sess = Session.Session( req)
> 
>     Session.Session() loads the session if it exists, otherwise creates a
>     new one, as well as a new session cookie / session id. The new session
>     *does not* automatically get saved. You need to call req.sess.save() at
>     some point. I know you know this. ;)
> 
>      >
>      >     if not req.sess.is_new():
>      >         # this is an old session, so load it up
>      >         req.sess.load()
> 
>     req.sess.load() is redundant.
> 
>      >         f.write( 'old session\n')
>      >     else:
>      >         f.write( 'new session\n')
> 
>     It's a new session (for whatever reason) with a new pysid in the cookie
>     sent to the client, but we never call req.sess.save() in this request.
>     Henceforth, every request will generate a new session.
> 
>     Regards,
>     Jim
> 
> 
> 
> 
> 
> 
> ------------------------------------------------------------------------
> 
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python

From jkohans at gmail.com  Mon Jun 20 13:11:09 2005
From: jkohans at gmail.com (Jeremy Kohansimeh)
Date: Mon Jun 20 13:11:15 2005
Subject: [mod_python] Lost Session
In-Reply-To: <6383057687e3e980d38efac78757ae6d@flowtheory.net>
References: <b07823bd0506200821135f9f8a@mail.gmail.com>
	<e91e03be74911565f71391af8f3a340c@flowtheory.net>
	<b07823bd050620090731890ee0@mail.gmail.com>
	<6383057687e3e980d38efac78757ae6d@flowtheory.net>
Message-ID: <b07823bd0506201011322afd4d@mail.gmail.com>

Here is the part of the code that handles the response (after some 
intermediate data processing):

def genAllChromsHTML( req):

pbean = req.pbean
sess = req.sess

vars = { 'image' : os.path.join( '../../images', sess[ 'image']),
'map_file' : os.path.join( '../../images', sess[ 'map_file']) }

sess.save()

return psp.PSP( req, filename=ALL_CHROMS_TMPL, vars=vars)

Here is the PSP code for the template file:

<html>
<body>
<center><a target="_new" href="<%= map_file %>"> <img src="<%= image %>" 
ismap></a></center>
</body>
</html>

I've been able to establish that the session object does contain the 
dictionary elements that I expect at this point in the code. Here are the 
dictionary keys in case they conflict with anything that might affect saving 
the session:

1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
map_file
image
num_of_lines
data_file
1800

Thanks for any help.

Jeremy

On 6/20/05, Joshua Ginsberg <listspam@flowtheory.net> wrote:
> 
> No, there's not really a problem in the save function... and the
> limitations of your data store are defined by the type of session.
> Memory session limits are how much memory you have; DBM session limits
> are how much disk you have. :-) If you'd like to post more code, I'd be 
> happy to help triage, however absent more information, there's not a
> lot of help I can offer.
> 
> -jag
> 
> 
> 
> 
> Joshua Ginsberg -- joshg@brainstorminternet.net 
> Brainstorm Internet Network Operations
> 970-247-1442 x131
> On Jun 20, 2005, at 10:07 AM, Jeremy Kohansimeh wrote:
> 
> > I do make this call after I have filled the session with data. I
> > didn't post that part of the code bc I've already established that the 
> > problem is not there. Unless, there is a problem with the save
> > function--is there an artificial limit on the amount of data that can
> > be stored into a session, or is it limited by the size of the disk? 
> >
> > Jeremy
> >
> > On 6/20/05, Joshua Ginsberg <listspam@flowtheory.net> wrote:
> >>
> >> -jag
> >>
> >>
> >>
> >>
> >> Joshua Ginsberg -- joshg@brainstorminternet.net
> >> Brainstorm Internet Network Operations
> >> 970-247-1442 x131
> >> On Jun 20, 2005, at 9:21 AM, Jeremy Kohansimeh wrote: 
> >>
> >> > Hello,
> >> >
> >> >I am having trouble recovering a session. On the initial request, I
> >> > create some entries for the session and then save it (I have
> >> confirmed 
> >> > that there is data in the session before I save it and that the
> >> save()
> >> > function is being called). On subsequent requests, the session
> >> object
> >> > that I have created is not reinstated, instead a new one is created 
> >> (I
> >> > have coonfirmed this with the is_new() function). I have checked my
> >> > browser and there is a pysid cookie being set on the first request.
> >> > Does anyone have any tips to debug this? I am really at a loss for 
> >> > what is going on.
> >> >
> >> >Here is the code that I use to reinstate/create a session:
> >> >
> >> >def handler(req, **kw):
> >> > """handles initial requests""" 
> >> >
> >> > f = open( LOGFILE, 'a+')
> >> >
> >> > req.sess = Session.Session( req)
> >> >
> >> > if not req.sess.is_new():
> >> > # this is an old session, so load it up 
> >> > req.sess.load()
> >> > f.write( 'old session\n')
> >> > else:
> >> > f.write( 'new session\n')
> >> >
> >> > f.close ()
> >> >
> >> > return segment.dispatchToHandler( req)
> >> >
> >> >Best Regards,
> >> >Jeremy Kohansimeh
> >> > _______________________________________________
> >> > Mod_python mailing list
> >> > Mod_python@modpython.org
> >> > http://mailman.modpython.org/mailman/listinfo/mod_python 
> >>
> >>
> >>
> > _______________________________________________
> > Mod_python mailing list
> > Mod_python@modpython.org
> > http://mailman.modpython.org/mailman/listinfo/mod_python
> 
> 
> 
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20050620/d9134e2a/attachment.html
From amit at digitalpeers.com  Mon Jun 20 14:58:34 2005
From: amit at digitalpeers.com (amit)
Date: Mon Jun 20 13:55:27 2005
Subject: [mod_python] mod_python and execfile
Message-ID: <42B711DA.5050707@digitalpeers.com>

Hello,

    I am using mod_pyton to write a collection of scripts. And I am 
facing the following problem:
I use the handler to execute a script. And I try to pass the req object 
to it:

def handler(req):
     execfile(req.filename, {'req':req})

in the script I have the following code:

def main():
    req.write('Hello there!')

I know that the script is executed but I don't get the 'hello there!' 
message in my browser. Can anyone help?

Thanks
    Amit

From scott_list at mischko.com  Mon Jun 20 15:08:11 2005
From: scott_list at mischko.com (Scott Chapman)
Date: Mon Jun 20 15:08:16 2005
Subject: [mod_python] Is external redirect supposed to send a cookie
	(mpservlets)?
Message-ID: <42B7141B.2050800@mischko.com>

Hi!

I'm having problems with session cookies and redirects.  Can this be
resolved or is this the way things work?

If a user requests a page that requires a login login and they are not
logged in (and they have no cookies), I automatically redirect
(external) them to the login screen, after setting a "returnto" session
entry.  The returnto is lost because the cookie is not sent with the 302
response.

Here's code in my auth method that sets the session returnto value and
redirects them:

> if requiresLogin:
>     self.req.log_error('AUTH - page: %s requires login' % methodName)
>     userID = self.session.get('userid', None)
>     # Check to see if the user is logged in
>     if not userID:
>         self.req.log_error('AUTH - user not logged in')
>         self.session['returnto'] = self.req.unparsed_uri
>         self.req.log_error('AUTH - sid when returnto set: ' + str(self.session.id()))
>         self.req.log_error('AUTH - returnto: ' + self.session['returnto'])
>         self.req.log_error('AUTH - external redirect to login')
>         self.external_redirect('/login')

Here's the code in my /login screen which is supposed to catch the
returnto and send them on their way:

> user_id = data_object.checkLoginAndPassword(login, password)
> if user_id:
>     # The login information is valid.
>     uberServlet.session['userid'] = user_id
>     uberServlet.req.log_error('LOGIN - username and password confirmed')
>     uberServlet.req.log_error('LOGIN - userid,email: %s, %s' % (user_id,login))
>     uberServlet.req.log_error('LOGIN - session id: ' + str(uberServlet.session.id()))
>     return_to = uberServlet.session.pop('returnto: ','/index')
>     uberServlet.req.log_error('LOGIN - return_to' + return_to)
>     util.redirect(uberServlet.req,return_to)

Here's the log:

> HANDLER-calling prep
> HANDLER-calling auth
> AUTH - methodName: change_password
> AUTH - method found
> AUTH - page: change_password requires login
> AUTH - user not logged in
> AUTH - sid when returnto set: 82d588854c0a23ac67c7f986ab86ad79
> AUTH - returnto: /change_password
> AUTH - external redirect to login
> HANDLER-calling prep
> HANDLER-calling auth
> AUTH - methodName: login
> HANDLER-calling respond
> UBERSERVLET RESPOND - method name: login
> UBERSERVLET RESPOND - calling method
> HANDLER-calling wrapup
> =========== login screen ===========
> HANDLER-calling prep, referer: http://nsnserver/login
> HANDLER-calling auth, referer: http://nsnserver/login
> AUTH - methodName: login, referer: http://nsnserver/login
> HANDLER-calling respond, referer: http://nsnserver/login
> UBERSERVLET RESPOND - Converting form to dict, referer: http://nsnserver/login
> UBERSERVLET RESPOND - Form Entry Type: <class 'mod_python.util.StringField'>, referer: http://nsnserver/login
> UBERSERVLET RESPOND - key: login, referer: http://nsnserver/login
> UBERSERVLET RESPOND - Single Item, referer: http://nsnserver/login
> UBERSERVLET RESPOND - Form Entry Type: <class 'mod_python.util.StringField'>, referer: http://nsnserver/login
> UBERSERVLET RESPOND - key: password, referer: http://nsnserver/login
> UBERSERVLET RESPOND - Single Item, referer: http://nsnserver/login
> UBERSERVLET RESPOND - form dict: {'login': 'scott@mischko.com', 'password': 'letmein'}, referer: http://nsnserver/login
> UBERSERVLET RESPOND - method name: login, referer: http://nsnserver/login
> UBERSERVLET RESPOND - calling method, referer: http://nsnserver/login
> LOGIN - username and password confirmed, referer: http://nsnserver/login
> LOGIN - userid,email: 1, scott@mischko.com, referer: http://nsnserver/login
> LOGIN - session id: e17247d6be677abadf19748044acb0bf, referer: http://nsnserver/login
> LOGIN - return_to/index, referer: http://nsnserver/login
> HANDLER-calling prep, referer: http://nsnserver/login
> HANDLER-calling auth, referer: http://nsnserver/login
> AUTH - methodName: index, referer: http://nsnserver/login
> AUTH - method found, referer: http://nsnserver/login
> AUTH - page: index does not require login, referer: http://nsnserver/login
> HANDLER-calling respond, referer: http://nsnserver/login
> UBERSERVLET RESPOND - method name: index, referer: http://nsnserver/login
> UBERSERVLET RESPOND - calling method, referer: http://nsnserver/login
> HANDLER-calling wrapup, referer: http://nsnserver/login


And here's the HTTP live capture of headers:

> http://nsnserver/change_password                                                                           
>                                                                                                            
> GET /change_password HTTP/1.1                                                                              
> Host: nsnserver                                                                                            
> User-Agent: Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.7.8) Gecko/20050511 Firefox/1.0.4         
> Accept: text/xml,application/xml,application/xhtml+xml,text/html;q=0.9,text/plain;q=0.8,image/png,*/*;q=0.5
> Accept-Language: en-us,en;q=0.5                                                                            
> Accept-Encoding: gzip,deflate                                                                              
> Accept-Charset: ISO-8859-1,utf-8;q=0.7,*;q=0.7                                                             
> Keep-Alive: 300                                                                                            
> Connection: keep-alive                                                                                     
>                                                                                                            
> HTTP/1.x 302 Found                                                                                         
> Date: Fri, 17 Jun 2005 21:50:24 GMT                                                                        
> Server: Apache/2.0.53 (Unix) mod_ssl/2.0.53 OpenSSL/0.9.7d mod_python/3.1.4 Python/2.4.1c2 PHP/4.3.10      
> Location: /login                                                                                           
> Content-Length: 336                                                                                        
> Keep-Alive: timeout=15, max=100                                                                            
> Connection: Keep-Alive                                                                                     
> Content-Type: text/html; charset=iso-8859-1                                                                
> ----------------------------------------------------------                                                 
> http://nsnserver/login                                                                                     
>                                                                                                            
> GET /login HTTP/1.1                                                                                        
> Host: nsnserver                                                                                            
> User-Agent: Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.7.8) Gecko/20050511 Firefox/1.0.4         
> Accept: text/xml,application/xml,application/xhtml+xml,text/html;q=0.9,text/plain;q=0.8,image/png,*/*;q=0.5
> Accept-Language: en-us,en;q=0.5                                                                            
> Accept-Encoding: gzip,deflate                                                                              
> Accept-Charset: ISO-8859-1,utf-8;q=0.7,*;q=0.7                                                             
> Keep-Alive: 300                                                                                            
> Connection: keep-alive                                                                                     
>                                                                                                            
> HTTP/1.x 200 OK                                                                                            
> Date: Fri, 17 Jun 2005 21:50:25 GMT                                                                        
> Server: Apache/2.0.53 (Unix) mod_ssl/2.0.53 OpenSSL/0.9.7d mod_python/3.1.4 Python/2.4.1c2 PHP/4.3.10      
> Cache-Control: no-cache="set-cookie"                                                                       
> Set-Cookie: pysid=e17247d6be677abadf19748044acb0bf; path=/                                                 
> Keep-Alive: timeout=15, max=99                                                                             
> Connection: Keep-Alive                                                                                     
> Transfer-Encoding: chunked                                                                                 
> Content-Type: text/html                                                                                    
> ----------------------------------------------------------                                                 
> ==========login screen in web browser here=====================
> http://nsnserver/login
> 
> POST /login HTTP/1.1
> Host: nsnserver
> User-Agent: Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.7.8) Gecko/20050511 Firefox/1.0.4
> Accept: text/xml,application/xml,application/xhtml+xml,text/html;q=0.9,text/plain;q=0.8,image/png,*/*;q=0.5
> Accept-Language: en-us,en;q=0.5
> Accept-Encoding: gzip,deflate
> Accept-Charset: ISO-8859-1,utf-8;q=0.7,*;q=0.7
> Keep-Alive: 300
> Connection: keep-alive
> Referer: http://nsnserver/login
> Cookie: pysid=e17247d6be677abadf19748044acb0bf; testSessionCookie=Enabled
> Content-Type: application/x-www-form-urlencoded
> Content-Length: 42
> login=scott%40mischko.com&password=letmein
> HTTP/1.x 302 Found
> Date: Fri, 17 Jun 2005 21:51:12 GMT
> Server: Apache/2.0.53 (Unix) mod_ssl/2.0.53 OpenSSL/0.9.7d mod_python/3.1.4 Python/2.4.1c2 PHP/4.3.10
> Location: /index
> Keep-Alive: timeout=15, max=100
> Connection: Keep-Alive
> Transfer-Encoding: chunked
> Content-Type: text/plain
> ----------------------------------------------------------
> http://nsnserver/index
> 
> GET /index HTTP/1.1
> Host: nsnserver
> User-Agent: Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.7.8) Gecko/20050511 Firefox/1.0.4
> Accept: text/xml,application/xml,application/xhtml+xml,text/html;q=0.9,text/plain;q=0.8,image/png,*/*;q=0.5
> Accept-Language: en-us,en;q=0.5
> Accept-Encoding: gzip,deflate
> Accept-Charset: ISO-8859-1,utf-8;q=0.7,*;q=0.7
> Keep-Alive: 300
> Connection: keep-alive
> Referer: http://nsnserver/login
> Cookie: pysid=e17247d6be677abadf19748044acb0bf; testSessionCookie=Enabled
> 
> HTTP/1.x 200 OK
> Date: Fri, 17 Jun 2005 21:51:14 GMT
> Server: Apache/2.0.53 (Unix) mod_ssl/2.0.53 OpenSSL/0.9.7d mod_python/3.1.4 Python/2.4.1c2 PHP/4.3.10
> Keep-Alive: timeout=15, max=100
> Connection: Keep-Alive
> Transfer-Encoding: chunked
> Content-Type: text/html



From sanders at apache.org  Mon Jun 20 16:08:10 2005
From: sanders at apache.org (Scott Sanders)
Date: Mon Jun 20 16:08:27 2005
Subject: [mod_python] Is external redirect supposed to send a cookie
	(mpservlets)?
In-Reply-To: <42B7141B.2050800@mischko.com>
References: <42B7141B.2050800@mischko.com>
Message-ID: <D127B5AD-4D3C-4ABF-ABE1-2A7C68149BEA@apache.org>

The session cookie is not in the error headers, which are the only  
headers sent on redirect.  My workaround was to write a redirect  
function that wrote out the session cookie in the error headers.  I  
will try and look for the source code.

Scott

On Jun 20, 2005, at 12:08 PM, Scott Chapman wrote:

> Hi!
>
> I'm having problems with session cookies and redirects.  Can this be
> resolved or is this the way things work?
>
> If a user requests a page that requires a login login and they are not
> logged in (and they have no cookies), I automatically redirect
> (external) them to the login screen, after setting a "returnto"  
> session
> entry.  The returnto is lost because the cookie is not sent with  
> the 302
> response.
>
> Here's code in my auth method that sets the session returnto value and
> redirects them:
>
>
>> if requiresLogin:
>>     self.req.log_error('AUTH - page: %s requires login' % methodName)
>>     userID = self.session.get('userid', None)
>>     # Check to see if the user is logged in
>>     if not userID:
>>         self.req.log_error('AUTH - user not logged in')
>>         self.session['returnto'] = self.req.unparsed_uri
>>         self.req.log_error('AUTH - sid when returnto set: ' + str 
>> (self.session.id()))
>>         self.req.log_error('AUTH - returnto: ' + self.session 
>> ['returnto'])
>>         self.req.log_error('AUTH - external redirect to login')
>>         self.external_redirect('/login')
>>
>
> Here's the code in my /login screen which is supposed to catch the
> returnto and send them on their way:
>
>
>> user_id = data_object.checkLoginAndPassword(login, password)
>> if user_id:
>>     # The login information is valid.
>>     uberServlet.session['userid'] = user_id
>>     uberServlet.req.log_error('LOGIN - username and password  
>> confirmed')
>>     uberServlet.req.log_error('LOGIN - userid,email: %s, %s' %  
>> (user_id,login))
>>     uberServlet.req.log_error('LOGIN - session id: ' + str 
>> (uberServlet.session.id()))
>>     return_to = uberServlet.session.pop('returnto: ','/index')
>>     uberServlet.req.log_error('LOGIN - return_to' + return_to)
>>     util.redirect(uberServlet.req,return_to)
>>
>
> Here's the log:
>
>
>> HANDLER-calling prep
>> HANDLER-calling auth
>> AUTH - methodName: change_password
>> AUTH - method found
>> AUTH - page: change_password requires login
>> AUTH - user not logged in
>> AUTH - sid when returnto set: 82d588854c0a23ac67c7f986ab86ad79
>> AUTH - returnto: /change_password
>> AUTH - external redirect to login
>> HANDLER-calling prep
>> HANDLER-calling auth
>> AUTH - methodName: login
>> HANDLER-calling respond
>> UBERSERVLET RESPOND - method name: login
>> UBERSERVLET RESPOND - calling method
>> HANDLER-calling wrapup
>> =========== login screen ===========
>> HANDLER-calling prep, referer: http://nsnserver/login
>> HANDLER-calling auth, referer: http://nsnserver/login
>> AUTH - methodName: login, referer: http://nsnserver/login
>> HANDLER-calling respond, referer: http://nsnserver/login
>> UBERSERVLET RESPOND - Converting form to dict, referer: http:// 
>> nsnserver/login
>> UBERSERVLET RESPOND - Form Entry Type: <class  
>> 'mod_python.util.StringField'>, referer: http://nsnserver/login
>> UBERSERVLET RESPOND - key: login, referer: http://nsnserver/login
>> UBERSERVLET RESPOND - Single Item, referer: http://nsnserver/login
>> UBERSERVLET RESPOND - Form Entry Type: <class  
>> 'mod_python.util.StringField'>, referer: http://nsnserver/login
>> UBERSERVLET RESPOND - key: password, referer: http://nsnserver/login
>> UBERSERVLET RESPOND - Single Item, referer: http://nsnserver/login
>> UBERSERVLET RESPOND - form dict: {'login': 'scott@mischko.com',  
>> 'password': 'letmein'}, referer: http://nsnserver/login
>> UBERSERVLET RESPOND - method name: login, referer: http:// 
>> nsnserver/login
>> UBERSERVLET RESPOND - calling method, referer: http://nsnserver/login
>> LOGIN - username and password confirmed, referer: http://nsnserver/ 
>> login
>> LOGIN - userid,email: 1, scott@mischko.com, referer: http:// 
>> nsnserver/login
>> LOGIN - session id: e17247d6be677abadf19748044acb0bf, referer:  
>> http://nsnserver/login
>> LOGIN - return_to/index, referer: http://nsnserver/login
>> HANDLER-calling prep, referer: http://nsnserver/login
>> HANDLER-calling auth, referer: http://nsnserver/login
>> AUTH - methodName: index, referer: http://nsnserver/login
>> AUTH - method found, referer: http://nsnserver/login
>> AUTH - page: index does not require login, referer: http:// 
>> nsnserver/login
>> HANDLER-calling respond, referer: http://nsnserver/login
>> UBERSERVLET RESPOND - method name: index, referer: http:// 
>> nsnserver/login
>> UBERSERVLET RESPOND - calling method, referer: http://nsnserver/login
>> HANDLER-calling wrapup, referer: http://nsnserver/login
>>
>
>
> And here's the HTTP live capture of headers:
>
>
>> http://nsnserver/ 
>> change_password                                                       
>>                                                                       
>>                                                            GET / 
>> change_password HTTP/ 
>> 1.1                                                                   
>>             Host:  
>> nsnserver                                                             
>>                                 User-Agent: Mozilla/5.0 (Windows;  
>> U; Windows NT 5.1; en-US; rv:1.7.8) Gecko/20050511 Firefox/ 
>> 1.0.4         Accept: text/xml,application/xml,application/xhtml 
>> +xml,text/html;q=0.9,text/plain;q=0.8,image/png,*/*;q=0.5
>> Accept-Language: en- 
>> us,en;q=0.5                                                           
>>                   Accept-Encoding:  
>> gzip,deflate                                                          
>>                      Accept-Charset:  
>> ISO-8859-1,utf-8;q=0.7,*;q=0.7                                        
>>                       Keep-Alive:  
>> 300                                                                   
>>                           Connection: keep- 
>> alive                                                                 
>>                                                                       
>>                                                            HTTP/ 
>> 1.x 302  
>> Found                                                                 
>>                          Date: Fri, 17 Jun 2005 21:50:24  
>> GMT                                                                   
>>       Server: Apache/2.0.53 (Unix) mod_ssl/2.0.53 OpenSSL/0.9.7d  
>> mod_python/3.1.4 Python/2.4.1c2 PHP/4.3.10      Location: / 
>> login                                                                 
>>                            Content-Length:  
>> 336                                                                   
>>                       Keep-Alive: timeout=15,  
>> max=100                                                               
>>               Connection: Keep- 
>> Alive                                                                 
>>                      Content-Type: text/html;  
>> charset=iso-8859-1                                                    
>>               
>> ----------------------------------------------------------            
>>                                       http://nsnserver/ 
>> login                                                                 
>>                                                                       
>>                                                            GET / 
>> login HTTP/ 
>> 1.1                                                                   
>>                       Host:  
>> nsnserver                                                             
>>                                 User-Agent: Mozilla/5.0 (Windows;  
>> U; Windows NT 5.1; en-US; rv:1.7.8) Gecko/20050511 Firefox/ 
>> 1.0.4         Accept: text/xml,application/xml,application/xhtml 
>> +xml,text/html;q=0.9,text/plain;q=0.8,image/png,*/*;q=0.5
>> Accept-Language: en- 
>> us,en;q=0.5                                                           
>>                   Accept-Encoding:  
>> gzip,deflate                                                          
>>                      Accept-Charset:  
>> ISO-8859-1,utf-8;q=0.7,*;q=0.7                                        
>>                       Keep-Alive:  
>> 300                                                                   
>>                           Connection: keep- 
>> alive                                                                 
>>                                                                       
>>                                                            HTTP/ 
>> 1.x 200  
>> OK                                                                    
>>                          Date: Fri, 17 Jun 2005 21:50:25  
>> GMT                                                                   
>>       Server: Apache/2.0.53 (Unix) mod_ssl/2.0.53 OpenSSL/0.9.7d  
>> mod_python/3.1.4 Python/2.4.1c2 PHP/4.3.10      Cache-Control: no- 
>> cache="set- 
>> cookie"                                                               
>>          Set-Cookie: pysid=e17247d6be677abadf19748044acb0bf;  
>> path=/                                                 Keep-Alive:  
>> timeout=15,  
>> max=99                                                                
>>               Connection: Keep- 
>> Alive                                                                 
>>                      Transfer-Encoding:  
>> chunked                                                               
>>                    Content-Type: text/ 
>> html                                                                  
>>                     
>> ----------------------------------------------------------            
>>                                       ==========login screen in  
>> web browser here=====================
>> http://nsnserver/login
>> POST /login HTTP/1.1
>> Host: nsnserver
>> User-Agent: Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv: 
>> 1.7.8) Gecko/20050511 Firefox/1.0.4
>> Accept: text/xml,application/xml,application/xhtml+xml,text/ 
>> html;q=0.9,text/plain;q=0.8,image/png,*/*;q=0.5
>> Accept-Language: en-us,en;q=0.5
>> Accept-Encoding: gzip,deflate
>> Accept-Charset: ISO-8859-1,utf-8;q=0.7,*;q=0.7
>> Keep-Alive: 300
>> Connection: keep-alive
>> Referer: http://nsnserver/login
>> Cookie: pysid=e17247d6be677abadf19748044acb0bf;  
>> testSessionCookie=Enabled
>> Content-Type: application/x-www-form-urlencoded
>> Content-Length: 42
>> login=scott%40mischko.com&password=letmein
>> HTTP/1.x 302 Found
>> Date: Fri, 17 Jun 2005 21:51:12 GMT
>> Server: Apache/2.0.53 (Unix) mod_ssl/2.0.53 OpenSSL/0.9.7d  
>> mod_python/3.1.4 Python/2.4.1c2 PHP/4.3.10
>> Location: /index
>> Keep-Alive: timeout=15, max=100
>> Connection: Keep-Alive
>> Transfer-Encoding: chunked
>> Content-Type: text/plain
>> ----------------------------------------------------------
>> http://nsnserver/index
>> GET /index HTTP/1.1
>> Host: nsnserver
>> User-Agent: Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv: 
>> 1.7.8) Gecko/20050511 Firefox/1.0.4
>> Accept: text/xml,application/xml,application/xhtml+xml,text/ 
>> html;q=0.9,text/plain;q=0.8,image/png,*/*;q=0.5
>> Accept-Language: en-us,en;q=0.5
>> Accept-Encoding: gzip,deflate
>> Accept-Charset: ISO-8859-1,utf-8;q=0.7,*;q=0.7
>> Keep-Alive: 300
>> Connection: keep-alive
>> Referer: http://nsnserver/login
>> Cookie: pysid=e17247d6be677abadf19748044acb0bf;  
>> testSessionCookie=Enabled
>> HTTP/1.x 200 OK
>> Date: Fri, 17 Jun 2005 21:51:14 GMT
>> Server: Apache/2.0.53 (Unix) mod_ssl/2.0.53 OpenSSL/0.9.7d  
>> mod_python/3.1.4 Python/2.4.1c2 PHP/4.3.10
>> Keep-Alive: timeout=15, max=100
>> Connection: Keep-Alive
>> Transfer-Encoding: chunked
>> Content-Type: text/html
>>
>
>
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>

From scott_list at mischko.com  Mon Jun 20 17:03:40 2005
From: scott_list at mischko.com (Scott Chapman)
Date: Mon Jun 20 17:03:48 2005
Subject: [mod_python] Is external redirect supposed to send a cookie
	(mpservlets)?
In-Reply-To: <D127B5AD-4D3C-4ABF-ABE1-2A7C68149BEA@apache.org>
References: <42B7141B.2050800@mischko.com>
	<D127B5AD-4D3C-4ABF-ABE1-2A7C68149BEA@apache.org>
Message-ID: <42B72F2C.6090804@mischko.com>

Scott Sanders wrote:
> The session cookie is not in the error headers, which are the only  
> headers sent on redirect.  My workaround was to write a redirect  
> function that wrote out the session cookie in the error headers.  I  
> will try and look for the source code.
> 
> Scott

Scott,
That would be perfect.  I hope you find the source code!

Thanks!
Scott
From administrator at leebrown.org  Mon Jun 20 17:08:16 2005
From: administrator at leebrown.org (Lee Brown)
Date: Mon Jun 20 17:08:38 2005
Subject: [mod_python] mod_python and execfile
In-Reply-To: <42B711DA.5050707@digitalpeers.com>
Message-ID: <A51862EC044A@underdog>

Greetings!

Always the first thing to try when nothing appears in the browser:
 
def main():
	req.content_type = 'text/plain' 
   	req.write('Hello there!')

Best Regards,
Lee E. Brown
(administrator@leebrown.org)

-----Original Message-----
From: mod_python-bounces@modpython.org
[mailto:mod_python-bounces@modpython.org] On Behalf Of amit
Sent: Monday, June 20, 2005 2:59 PM
To: mod_python@modpython.org
Subject: [mod_python] mod_python and execfile

Hello,

    I am using mod_pyton to write a collection of scripts. And I am facing
the following problem:
I use the handler to execute a script. And I try to pass the req object to
it:

def handler(req):
     execfile(req.filename, {'req':req})

in the script I have the following code:

def main():
    req.write('Hello there!')

I know that the script is executed but I don't get the 'hello there!' 
message in my browser. Can anyone help?

Thanks
    Amit

_______________________________________________
Mod_python mailing list
Mod_python@modpython.org
http://mailman.modpython.org/mailman/listinfo/mod_python

From amit at digitalpeers.com  Mon Jun 20 18:20:44 2005
From: amit at digitalpeers.com (amit)
Date: Mon Jun 20 17:17:34 2005
Subject: [mod_python] mod_python and execfile
In-Reply-To: <A51862EC044A@underdog>
References: <A51862EC044A@underdog>
Message-ID: <42B7413C.80504@digitalpeers.com>

Thanks for the reply Lee,

 But this doesn't help, I already have the 'req.content_type = ...' in 
the main script. (I simplified the script in the original mail)

def handler(req):
	req.content_type = 'text/plain' 
	...
     	execfile(req.filename, {'req':req})


Amit

Lee Brown wrote:

>Greetings!
>
>Always the first thing to try when nothing appears in the browser:
> 
>def main():
>	req.content_type = 'text/plain' 
>   	req.write('Hello there!')
>
>Best Regards,
>Lee E. Brown
>(administrator@leebrown.org)
>
>-----Original Message-----
>From: mod_python-bounces@modpython.org
>[mailto:mod_python-bounces@modpython.org] On Behalf Of amit
>Sent: Monday, June 20, 2005 2:59 PM
>To: mod_python@modpython.org
>Subject: [mod_python] mod_python and execfile
>
>Hello,
>
>    I am using mod_pyton to write a collection of scripts. And I am facing
>the following problem:
>I use the handler to execute a script. And I try to pass the req object to
>it:
>
>def handler(req):
>     execfile(req.filename, {'req':req})
>
>in the script I have the following code:
>
>def main():
>    req.write('Hello there!')
>
>I know that the script is executed but I don't get the 'hello there!' 
>message in my browser. Can anyone help?
>
>Thanks
>    Amit
>
>_______________________________________________
>Mod_python mailing list
>Mod_python@modpython.org
>http://mailman.modpython.org/mailman/listinfo/mod_python
>
>
>
>  
>

From grisha at modpython.org  Mon Jun 20 17:23:03 2005
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Mon Jun 20 17:23:17 2005
Subject: [mod_python] mod_python and execfile
In-Reply-To: <42B711DA.5050707@digitalpeers.com>
References: <42B711DA.5050707@digitalpeers.com>
Message-ID: <20050620172237.Y22322@grisha.dyndns.org>


What calls the main() function below?

Grisha


On Mon, 20 Jun 2005, amit wrote:

> Hello,
>
>   I am using mod_pyton to write a collection of scripts. And I am facing the 
> following problem:
> I use the handler to execute a script. And I try to pass the req object to 
> it:
>
> def handler(req):
>    execfile(req.filename, {'req':req})
>
> in the script I have the following code:
>
> def main():
>   req.write('Hello there!')
>
> I know that the script is executed but I don't get the 'hello there!' message 
> in my browser. Can anyone help?
>
> Thanks
>   Amit
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>
From amit at digitalpeers.com  Mon Jun 20 18:59:07 2005
From: amit at digitalpeers.com (amit)
Date: Mon Jun 20 17:55:57 2005
Subject: [mod_python] mod_python and execfile
In-Reply-To: <20050620172237.Y22322@grisha.dyndns.org>
References: <42B711DA.5050707@digitalpeers.com>
	<20050620172237.Y22322@grisha.dyndns.org>
Message-ID: <42B74A3B.5040002@digitalpeers.com>

Hello Grisha,

    def main():
        req.write('Hello there!')

    if __name__=='__main__':
        import test_mod              # test_mod.py is the name of the script
        ret = test_mod.main()
        sys.exit(ret)

Nothing happend.
I guessed that __name__ under mod_python might behave differently so I 
changed the '==' to '!=' and got the following traceback:

	Mod_python error: "PythonHandler pythonframe"

	Traceback (most recent call last):

	  File "F:\Python23\Lib\site-packages\mod_python\apache.py", line 299, in HandlerDispatch
	    result = object(req)

	  File "C:/Program Files/Apache Group/Apache2/cgi-bin/mod_python/\pythonframe.py", line 91, in handler
	    execfile(req.filename, {'req':req})

	  File "C:/Program Files/Apache Group/Apache2/cgi-bin/mod_python/test_mod.py", line 6, in ?
	    ret = test_mod.main()

	  File "C:/Program Files/Apache Group/Apache2/cgi-bin/mod_python/\test_mod.py", line 2, in main
	    req.write('Hello there!')

	NameError: global name 'req' is not defined


Amit



I tried using the usual method to call main()
Gregory (Grisha) Trubetskoy wrote:

>
> What calls the main() function below?
>
> Grisha
>
>
> On Mon, 20 Jun 2005, amit wrote:
>
>> Hello,
>>
>>   I am using mod_pyton to write a collection of scripts. And I am 
>> facing the following problem:
>> I use the handler to execute a script. And I try to pass the req 
>> object to it:
>>
>> def handler(req):
>>    execfile(req.filename, {'req':req})
>>
>> in the script I have the following code:
>>
>> def main():
>>   req.write('Hello there!')
>>
>> I know that the script is executed but I don't get the 'hello there!' 
>> message in my browser. Can anyone help?
>>
>> Thanks
>>   Amit
>>
>> _______________________________________________
>> Mod_python mailing list
>> Mod_python@modpython.org
>> http://mailman.modpython.org/mailman/listinfo/mod_python
>>
>
>

From grahamd at dscpl.com.au  Mon Jun 20 18:23:32 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Mon Jun 20 18:23:47 2005
Subject: [mod_python] mod_python and execfile
Message-ID: <1119306212.31857@dscpl.user.openhosting.com>

If what you are trying to do is come up with your own mechanism for 
dispatching different URLs against different handlers in different files,
you should probably start by researching how mod_python.cgihandler,
mod_python.publisher, mpservlets and Vampire work as they all provide
this basic feature in various ways

You will find mod_python.publisher and mod_python.cgihandler as a
part of mod_python itself. As to mpservlets and Vampire, you can
find them at:

  http://home.comcast.net/~d.popowich/mpservlets/
  http://www.dscpl.com.au/projects/vampire

A quick way of doing it (untested) would be:

  from mod_python import apache
  import os

  def handler(req):
      directory = os.path.dirname(req.filename)
      name = os.path.splitext(os.path.split(req.filename)[1])[0]
      module = apache.import_module(name,path=[directory])
      return module.main(req)

Then in the script file:

  def main(req):
     req.content_type = "text/plain"
     req.send_http_header()
     req.write('Hello there!')
     return apache.OK

This will not necessarily work in all situations as it doesn't do all
the checks it should. You would be better off using one of the
other dispatchers available unless your plan is to learn by writing
your own.

Graham

amit wrote ..
> Hello Grisha,
> 
>     def main():
>         req.write('Hello there!')
> 
>     if __name__=='__main__':
>         import test_mod              # test_mod.py is the name of the script
>         ret = test_mod.main()
>         sys.exit(ret)
> 
> Nothing happend.
> I guessed that __name__ under mod_python might behave differently so I
> changed the '==' to '!=' and got the following traceback:
> 
> 	Mod_python error: "PythonHandler pythonframe"
> 
> 	Traceback (most recent call last):
> 
> 	  File "F:\Python23\Lib\site-packages\mod_python\apache.py", line 299,
> in HandlerDispatch
> 	    result = object(req)
> 
> 	  File "C:/Program Files/Apache Group/Apache2/cgi-bin/mod_python/\pythonframe.py",
> line 91, in handler
> 	    execfile(req.filename, {'req':req})
> 
> 	  File "C:/Program Files/Apache Group/Apache2/cgi-bin/mod_python/test_mod.py",
> line 6, in ?
> 	    ret = test_mod.main()
> 
> 	  File "C:/Program Files/Apache Group/Apache2/cgi-bin/mod_python/\test_mod.py",
> line 2, in main
> 	    req.write('Hello there!')
> 
> 	NameError: global name 'req' is not defined
> 
> 
> Amit
> 
> 
> 
> I tried using the usual method to call main()
> Gregory (Grisha) Trubetskoy wrote:
> 
> >
> > What calls the main() function below?
> >
> > Grisha
> >
> >
> > On Mon, 20 Jun 2005, amit wrote:
> >
> >> Hello,
> >>
> >>   I am using mod_pyton to write a collection of scripts. And I am 
> >> facing the following problem:
> >> I use the handler to execute a script. And I try to pass the req 
> >> object to it:
> >>
> >> def handler(req):
> >>    execfile(req.filename, {'req':req})
> >>
> >> in the script I have the following code:
> >>
> >> def main():
> >>   req.write('Hello there!')
> >>
> >> I know that the script is executed but I don't get the 'hello there!'
> >> message in my browser. Can anyone help?
> >>
> >> Thanks
> >>   Amit
> >>
> >> _______________________________________________
> >> Mod_python mailing list
> >> Mod_python@modpython.org
> >> http://mailman.modpython.org/mailman/listinfo/mod_python
> >>
> >
> >
> 
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
From grahamd at dscpl.com.au  Mon Jun 20 18:38:48 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Mon Jun 20 18:39:00 2005
Subject: [mod_python] Is external redirect supposed to send a
	cookie(mpservlets)?
Message-ID: <1119307128.10106@dscpl.user.openhosting.com>

Scott Sanders wrote ..
> The session cookie is not in the error headers, which are the only  
> headers sent on redirect.  My workaround was to write a redirect  
> function that wrote out the session cookie in the error headers.  I  
> will try and look for the source code.

Hmmm, that doesn't quite make sense. I use util.redirect() with a
session based login and have no problem at all. You might be able
to learn something from:

  http://svn.dscpl.com.au/vampire/trunk/examples/session/access.py
  http://svn.dscpl.com.au/vampire/trunk/examples/session/

Working example at:

  http://www.dscpl.com.au/projects/vampire/examples/session

Use mickey/mouse as login/password.

I know it isn't using mpservlets and relies on a different package,
but might still be useful.

Graham

> On Jun 20, 2005, at 12:08 PM, Scott Chapman wrote:
> 
> > Hi!
> >
> > I'm having problems with session cookies and redirects.  Can this be
> > resolved or is this the way things work?
> >
> > If a user requests a page that requires a login login and they are not
> > logged in (and they have no cookies), I automatically redirect
> > (external) them to the login screen, after setting a "returnto"  
> > session
> > entry.  The returnto is lost because the cookie is not sent with  
> > the 302
> > response.
> >
> > Here's code in my auth method that sets the session returnto value and
> > redirects them:
> >
> >
> >> if requiresLogin:
> >>     self.req.log_error('AUTH - page: %s requires login' % methodName)
> >>     userID = self.session.get('userid', None)
> >>     # Check to see if the user is logged in
> >>     if not userID:
> >>         self.req.log_error('AUTH - user not logged in')
> >>         self.session['returnto'] = self.req.unparsed_uri
> >>         self.req.log_error('AUTH - sid when returnto set: ' + str 
> >> (self.session.id()))
> >>         self.req.log_error('AUTH - returnto: ' + self.session 
> >> ['returnto'])
> >>         self.req.log_error('AUTH - external redirect to login')
> >>         self.external_redirect('/login')
> >>
> >
> > Here's the code in my /login screen which is supposed to catch the
> > returnto and send them on their way:
> >
> >
> >> user_id = data_object.checkLoginAndPassword(login, password)
> >> if user_id:
> >>     # The login information is valid.
> >>     uberServlet.session['userid'] = user_id
> >>     uberServlet.req.log_error('LOGIN - username and password  
> >> confirmed')
> >>     uberServlet.req.log_error('LOGIN - userid,email: %s, %s' %  
> >> (user_id,login))
> >>     uberServlet.req.log_error('LOGIN - session id: ' + str 
> >> (uberServlet.session.id()))
> >>     return_to = uberServlet.session.pop('returnto: ','/index')
> >>     uberServlet.req.log_error('LOGIN - return_to' + return_to)
> >>     util.redirect(uberServlet.req,return_to)
> >>
> >
> > Here's the log:
> >
> >
> >> HANDLER-calling prep
> >> HANDLER-calling auth
> >> AUTH - methodName: change_password
> >> AUTH - method found
> >> AUTH - page: change_password requires login
> >> AUTH - user not logged in
> >> AUTH - sid when returnto set: 82d588854c0a23ac67c7f986ab86ad79
> >> AUTH - returnto: /change_password
> >> AUTH - external redirect to login
> >> HANDLER-calling prep
> >> HANDLER-calling auth
> >> AUTH - methodName: login
> >> HANDLER-calling respond
> >> UBERSERVLET RESPOND - method name: login
> >> UBERSERVLET RESPOND - calling method
> >> HANDLER-calling wrapup
> >> =========== login screen ===========
> >> HANDLER-calling prep, referer: http://nsnserver/login
> >> HANDLER-calling auth, referer: http://nsnserver/login
> >> AUTH - methodName: login, referer: http://nsnserver/login
> >> HANDLER-calling respond, referer: http://nsnserver/login
> >> UBERSERVLET RESPOND - Converting form to dict, referer: http:// 
> >> nsnserver/login
> >> UBERSERVLET RESPOND - Form Entry Type: <class  
> >> 'mod_python.util.StringField'>, referer: http://nsnserver/login
> >> UBERSERVLET RESPOND - key: login, referer: http://nsnserver/login
> >> UBERSERVLET RESPOND - Single Item, referer: http://nsnserver/login
> >> UBERSERVLET RESPOND - Form Entry Type: <class  
> >> 'mod_python.util.StringField'>, referer: http://nsnserver/login
> >> UBERSERVLET RESPOND - key: password, referer: http://nsnserver/login
> >> UBERSERVLET RESPOND - Single Item, referer: http://nsnserver/login
> >> UBERSERVLET RESPOND - form dict: {'login': 'scott@mischko.com',  
> >> 'password': 'letmein'}, referer: http://nsnserver/login
> >> UBERSERVLET RESPOND - method name: login, referer: http:// 
> >> nsnserver/login
> >> UBERSERVLET RESPOND - calling method, referer: http://nsnserver/login
> >> LOGIN - username and password confirmed, referer: http://nsnserver/
> >> login
> >> LOGIN - userid,email: 1, scott@mischko.com, referer: http:// 
> >> nsnserver/login
> >> LOGIN - session id: e17247d6be677abadf19748044acb0bf, referer:  
> >> http://nsnserver/login
> >> LOGIN - return_to/index, referer: http://nsnserver/login
> >> HANDLER-calling prep, referer: http://nsnserver/login
> >> HANDLER-calling auth, referer: http://nsnserver/login
> >> AUTH - methodName: index, referer: http://nsnserver/login
> >> AUTH - method found, referer: http://nsnserver/login
> >> AUTH - page: index does not require login, referer: http:// 
> >> nsnserver/login
> >> HANDLER-calling respond, referer: http://nsnserver/login
> >> UBERSERVLET RESPOND - method name: index, referer: http:// 
> >> nsnserver/login
> >> UBERSERVLET RESPOND - calling method, referer: http://nsnserver/login
> >> HANDLER-calling wrapup, referer: http://nsnserver/login
> >>
> >
> >
> > And here's the HTTP live capture of headers:
> >
> >
> >> http://nsnserver/ 
> >> change_password                                                    
> >>                                                                    
> >>                                                            GET / 
> >> change_password HTTP/ 
> >> 1.1                                                                
> >>             Host:  
> >> nsnserver                                                          
> >>                                 User-Agent: Mozilla/5.0 (Windows;  
> >> U; Windows NT 5.1; en-US; rv:1.7.8) Gecko/20050511 Firefox/ 
> >> 1.0.4         Accept: text/xml,application/xml,application/xhtml 
> >> +xml,text/html;q=0.9,text/plain;q=0.8,image/png,*/*;q=0.5
> >> Accept-Language: en- 
> >> us,en;q=0.5                                                        
> >>                   Accept-Encoding:  
> >> gzip,deflate                                                       
> >>                      Accept-Charset:  
> >> ISO-8859-1,utf-8;q=0.7,*;q=0.7                                     
> >>                       Keep-Alive:  
> >> 300                                                                
> >>                           Connection: keep- 
> >> alive                                                              
> >>                                                                    
> >>                                                            HTTP/ 
> >> 1.x 302  
> >> Found                                                              
> >>                          Date: Fri, 17 Jun 2005 21:50:24  
> >> GMT                                                                
> >>       Server: Apache/2.0.53 (Unix) mod_ssl/2.0.53 OpenSSL/0.9.7d  
> >> mod_python/3.1.4 Python/2.4.1c2 PHP/4.3.10      Location: / 
> >> login                                                              
> >>                            Content-Length:  
> >> 336                                                                
> >>                       Keep-Alive: timeout=15,  
> >> max=100                                                            
> >>               Connection: Keep- 
> >> Alive                                                              
> >>                      Content-Type: text/html;  
> >> charset=iso-8859-1                                                 
> >>               
> >> ----------------------------------------------------------         
> >>                                       http://nsnserver/ 
> >> login                                                              
> >>                                                                    
> >>                                                            GET / 
> >> login HTTP/ 
> >> 1.1                                                                
> >>                       Host:  
> >> nsnserver                                                          
> >>                                 User-Agent: Mozilla/5.0 (Windows;  
> >> U; Windows NT 5.1; en-US; rv:1.7.8) Gecko/20050511 Firefox/ 
> >> 1.0.4         Accept: text/xml,application/xml,application/xhtml 
> >> +xml,text/html;q=0.9,text/plain;q=0.8,image/png,*/*;q=0.5
> >> Accept-Language: en- 
> >> us,en;q=0.5                                                        
> >>                   Accept-Encoding:  
> >> gzip,deflate                                                       
> >>                      Accept-Charset:  
> >> ISO-8859-1,utf-8;q=0.7,*;q=0.7                                     
> >>                       Keep-Alive:  
> >> 300                                                                
> >>                           Connection: keep- 
> >> alive                                                              
> >>                                                                    
> >>                                                            HTTP/ 
> >> 1.x 200  
> >> OK                                                                 
> >>                          Date: Fri, 17 Jun 2005 21:50:25  
> >> GMT                                                                
> >>       Server: Apache/2.0.53 (Unix) mod_ssl/2.0.53 OpenSSL/0.9.7d  
> >> mod_python/3.1.4 Python/2.4.1c2 PHP/4.3.10      Cache-Control: no- 
> >> cache="set- 
> >> cookie"                                                            
> >>          Set-Cookie: pysid=e17247d6be677abadf19748044acb0bf;  
> >> path=/                                                 Keep-Alive: 
> >> timeout=15,  
> >> max=99                                                             
> >>               Connection: Keep- 
> >> Alive                                                              
> >>                      Transfer-Encoding:  
> >> chunked                                                            
> >>                    Content-Type: text/ 
> >> html                                                               
> >>                     
> >> ----------------------------------------------------------         
> >>                                       ==========login screen in  
> >> web browser here=====================
> >> http://nsnserver/login
> >> POST /login HTTP/1.1
> >> Host: nsnserver
> >> User-Agent: Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv: 
> >> 1.7.8) Gecko/20050511 Firefox/1.0.4
> >> Accept: text/xml,application/xml,application/xhtml+xml,text/ 
> >> html;q=0.9,text/plain;q=0.8,image/png,*/*;q=0.5
> >> Accept-Language: en-us,en;q=0.5
> >> Accept-Encoding: gzip,deflate
> >> Accept-Charset: ISO-8859-1,utf-8;q=0.7,*;q=0.7
> >> Keep-Alive: 300
> >> Connection: keep-alive
> >> Referer: http://nsnserver/login
> >> Cookie: pysid=e17247d6be677abadf19748044acb0bf;  
> >> testSessionCookie=Enabled
> >> Content-Type: application/x-www-form-urlencoded
> >> Content-Length: 42
> >> login=scott%40mischko.com&password=letmein
> >> HTTP/1.x 302 Found
> >> Date: Fri, 17 Jun 2005 21:51:12 GMT
> >> Server: Apache/2.0.53 (Unix) mod_ssl/2.0.53 OpenSSL/0.9.7d  
> >> mod_python/3.1.4 Python/2.4.1c2 PHP/4.3.10
> >> Location: /index
> >> Keep-Alive: timeout=15, max=100
> >> Connection: Keep-Alive
> >> Transfer-Encoding: chunked
> >> Content-Type: text/plain
> >> ----------------------------------------------------------
> >> http://nsnserver/index
> >> GET /index HTTP/1.1
> >> Host: nsnserver
> >> User-Agent: Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv: 
> >> 1.7.8) Gecko/20050511 Firefox/1.0.4
> >> Accept: text/xml,application/xml,application/xhtml+xml,text/ 
> >> html;q=0.9,text/plain;q=0.8,image/png,*/*;q=0.5
> >> Accept-Language: en-us,en;q=0.5
> >> Accept-Encoding: gzip,deflate
> >> Accept-Charset: ISO-8859-1,utf-8;q=0.7,*;q=0.7
> >> Keep-Alive: 300
> >> Connection: keep-alive
> >> Referer: http://nsnserver/login
> >> Cookie: pysid=e17247d6be677abadf19748044acb0bf;  
> >> testSessionCookie=Enabled
> >> HTTP/1.x 200 OK
> >> Date: Fri, 17 Jun 2005 21:51:14 GMT
> >> Server: Apache/2.0.53 (Unix) mod_ssl/2.0.53 OpenSSL/0.9.7d  
> >> mod_python/3.1.4 Python/2.4.1c2 PHP/4.3.10
> >> Keep-Alive: timeout=15, max=100
> >> Connection: Keep-Alive
> >> Transfer-Encoding: chunked
> >> Content-Type: text/html
> >>
> >
> >
> >
> > _______________________________________________
> > Mod_python mailing list
> > Mod_python@modpython.org
> > http://mailman.modpython.org/mailman/listinfo/mod_python
> >
> 
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
From grahamd at dscpl.com.au  Mon Jun 20 19:09:41 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Mon Jun 20 19:09:46 2005
Subject: [mod_python] Is external redirect supposed to send
	acookie(mpservlets)?
Message-ID: <1119308981.32080@dscpl.user.openhosting.com>

Is the problem perhaps that you are using:

  self.external_redirect(...)

and not:

  util.redirect(...)

In util.redirect(), it writes actual page content out and this may
trigger the flushing out of any headers that have been set indirectly
by Session for cookies.

In self.external_redirect() of mpservlets() it neither flushes the
headers or writes any content and so cookie headers may not
get written.

Graham

Graham Dumpleton wrote ..
> Scott Sanders wrote ..
> > The session cookie is not in the error headers, which are the only  
> > headers sent on redirect.  My workaround was to write a redirect  
> > function that wrote out the session cookie in the error headers.  I 
> > will try and look for the source code.
> 
> Hmmm, that doesn't quite make sense. I use util.redirect() with a
> session based login and have no problem at all. You might be able
> to learn something from:
> 
>   http://svn.dscpl.com.au/vampire/trunk/examples/session/access.py
>   http://svn.dscpl.com.au/vampire/trunk/examples/session/
> 
> Working example at:
> 
>   http://www.dscpl.com.au/projects/vampire/examples/session
> 
> Use mickey/mouse as login/password.
> 
> I know it isn't using mpservlets and relies on a different package,
> but might still be useful.
> 
> Graham
> 
> > On Jun 20, 2005, at 12:08 PM, Scott Chapman wrote:
> > 
> > > Hi!
> > >
> > > I'm having problems with session cookies and redirects.  Can this be
> > > resolved or is this the way things work?
> > >
> > > If a user requests a page that requires a login login and they are
> not
> > > logged in (and they have no cookies), I automatically redirect
> > > (external) them to the login screen, after setting a "returnto"  
> > > session
> > > entry.  The returnto is lost because the cookie is not sent with  
> > > the 302
> > > response.
> > >
> > > Here's code in my auth method that sets the session returnto value
> and
> > > redirects them:
> > >
> > >
> > >> if requiresLogin:
> > >>     self.req.log_error('AUTH - page: %s requires login' % methodName)
> > >>     userID = self.session.get('userid', None)
> > >>     # Check to see if the user is logged in
> > >>     if not userID:
> > >>         self.req.log_error('AUTH - user not logged in')
> > >>         self.session['returnto'] = self.req.unparsed_uri
> > >>         self.req.log_error('AUTH - sid when returnto set: ' + str
> > >> (self.session.id()))
> > >>         self.req.log_error('AUTH - returnto: ' + self.session 
> > >> ['returnto'])
> > >>         self.req.log_error('AUTH - external redirect to login')
> > >>         self.external_redirect('/login')
> > >>
> > >
> > > Here's the code in my /login screen which is supposed to catch the
> > > returnto and send them on their way:
> > >
> > >
> > >> user_id = data_object.checkLoginAndPassword(login, password)
> > >> if user_id:
> > >>     # The login information is valid.
> > >>     uberServlet.session['userid'] = user_id
> > >>     uberServlet.req.log_error('LOGIN - username and password  
> > >> confirmed')
> > >>     uberServlet.req.log_error('LOGIN - userid,email: %s, %s' %  
> > >> (user_id,login))
> > >>     uberServlet.req.log_error('LOGIN - session id: ' + str 
> > >> (uberServlet.session.id()))
> > >>     return_to = uberServlet.session.pop('returnto: ','/index')
> > >>     uberServlet.req.log_error('LOGIN - return_to' + return_to)
> > >>     util.redirect(uberServlet.req,return_to)
> > >>
> > >
> > > Here's the log:
> > >
> > >
> > >> HANDLER-calling prep
> > >> HANDLER-calling auth
> > >> AUTH - methodName: change_password
> > >> AUTH - method found
> > >> AUTH - page: change_password requires login
> > >> AUTH - user not logged in
> > >> AUTH - sid when returnto set: 82d588854c0a23ac67c7f986ab86ad79
> > >> AUTH - returnto: /change_password
> > >> AUTH - external redirect to login
> > >> HANDLER-calling prep
> > >> HANDLER-calling auth
> > >> AUTH - methodName: login
> > >> HANDLER-calling respond
> > >> UBERSERVLET RESPOND - method name: login
> > >> UBERSERVLET RESPOND - calling method
> > >> HANDLER-calling wrapup
> > >> =========== login screen ===========
> > >> HANDLER-calling prep, referer: http://nsnserver/login
> > >> HANDLER-calling auth, referer: http://nsnserver/login
> > >> AUTH - methodName: login, referer: http://nsnserver/login
> > >> HANDLER-calling respond, referer: http://nsnserver/login
> > >> UBERSERVLET RESPOND - Converting form to dict, referer: http:// 
> > >> nsnserver/login
> > >> UBERSERVLET RESPOND - Form Entry Type: <class  
> > >> 'mod_python.util.StringField'>, referer: http://nsnserver/login
> > >> UBERSERVLET RESPOND - key: login, referer: http://nsnserver/login
> > >> UBERSERVLET RESPOND - Single Item, referer: http://nsnserver/login
> > >> UBERSERVLET RESPOND - Form Entry Type: <class  
> > >> 'mod_python.util.StringField'>, referer: http://nsnserver/login
> > >> UBERSERVLET RESPOND - key: password, referer: http://nsnserver/login
> > >> UBERSERVLET RESPOND - Single Item, referer: http://nsnserver/login
> > >> UBERSERVLET RESPOND - form dict: {'login': 'scott@mischko.com',  
> > >> 'password': 'letmein'}, referer: http://nsnserver/login
> > >> UBERSERVLET RESPOND - method name: login, referer: http:// 
> > >> nsnserver/login
> > >> UBERSERVLET RESPOND - calling method, referer: http://nsnserver/login
> > >> LOGIN - username and password confirmed, referer: http://nsnserver/
> > >> login
> > >> LOGIN - userid,email: 1, scott@mischko.com, referer: http:// 
> > >> nsnserver/login
> > >> LOGIN - session id: e17247d6be677abadf19748044acb0bf, referer:  
> > >> http://nsnserver/login
> > >> LOGIN - return_to/index, referer: http://nsnserver/login
> > >> HANDLER-calling prep, referer: http://nsnserver/login
> > >> HANDLER-calling auth, referer: http://nsnserver/login
> > >> AUTH - methodName: index, referer: http://nsnserver/login
> > >> AUTH - method found, referer: http://nsnserver/login
> > >> AUTH - page: index does not require login, referer: http:// 
> > >> nsnserver/login
> > >> HANDLER-calling respond, referer: http://nsnserver/login
> > >> UBERSERVLET RESPOND - method name: index, referer: http:// 
> > >> nsnserver/login
> > >> UBERSERVLET RESPOND - calling method, referer: http://nsnserver/login
> > >> HANDLER-calling wrapup, referer: http://nsnserver/login
> > >>
> > >
> > >
> > > And here's the HTTP live capture of headers:
> > >
> > >
> > >> http://nsnserver/ 
> > >> change_password                                                  
> > >>                                                                  
> > >>                                                            GET / 
> > >> change_password HTTP/ 
> > >> 1.1                                                              
> > >>             Host:  
> > >> nsnserver                                                        
> > >>                                 User-Agent: Mozilla/5.0 (Windows;
> > >> U; Windows NT 5.1; en-US; rv:1.7.8) Gecko/20050511 Firefox/ 
> > >> 1.0.4         Accept: text/xml,application/xml,application/xhtml 
> > >> +xml,text/html;q=0.9,text/plain;q=0.8,image/png,*/*;q=0.5
> > >> Accept-Language: en- 
> > >> us,en;q=0.5                                                      
> > >>                   Accept-Encoding:  
> > >> gzip,deflate                                                     
> > >>                      Accept-Charset:  
> > >> ISO-8859-1,utf-8;q=0.7,*;q=0.7                                   
> > >>                       Keep-Alive:  
> > >> 300                                                              
> > >>                           Connection: keep- 
> > >> alive                                                            
> > >>                                                                  
> > >>                                                            HTTP/ 
> > >> 1.x 302  
> > >> Found                                                            
> > >>                          Date: Fri, 17 Jun 2005 21:50:24  
> > >> GMT                                                              
> > >>       Server: Apache/2.0.53 (Unix) mod_ssl/2.0.53 OpenSSL/0.9.7d 
> > >> mod_python/3.1.4 Python/2.4.1c2 PHP/4.3.10      Location: / 
> > >> login                                                            
> > >>                            Content-Length:  
> > >> 336                                                              
> > >>                       Keep-Alive: timeout=15,  
> > >> max=100                                                          
> > >>               Connection: Keep- 
> > >> Alive                                                            
> > >>                      Content-Type: text/html;  
> > >> charset=iso-8859-1                                               
> > >>               
> > >> ----------------------------------------------------------       
> > >>                                       http://nsnserver/ 
> > >> login                                                            
> > >>                                                                  
> > >>                                                            GET / 
> > >> login HTTP/ 
> > >> 1.1                                                              
> > >>                       Host:  
> > >> nsnserver                                                        
> > >>                                 User-Agent: Mozilla/5.0 (Windows;
> > >> U; Windows NT 5.1; en-US; rv:1.7.8) Gecko/20050511 Firefox/ 
> > >> 1.0.4         Accept: text/xml,application/xml,application/xhtml 
> > >> +xml,text/html;q=0.9,text/plain;q=0.8,image/png,*/*;q=0.5
> > >> Accept-Language: en- 
> > >> us,en;q=0.5                                                      
> > >>                   Accept-Encoding:  
> > >> gzip,deflate                                                     
> > >>                      Accept-Charset:  
> > >> ISO-8859-1,utf-8;q=0.7,*;q=0.7                                   
> > >>                       Keep-Alive:  
> > >> 300                                                              
> > >>                           Connection: keep- 
> > >> alive                                                            
> > >>                                                                  
> > >>                                                            HTTP/ 
> > >> 1.x 200  
> > >> OK                                                               
> > >>                          Date: Fri, 17 Jun 2005 21:50:25  
> > >> GMT                                                              
> > >>       Server: Apache/2.0.53 (Unix) mod_ssl/2.0.53 OpenSSL/0.9.7d 
> > >> mod_python/3.1.4 Python/2.4.1c2 PHP/4.3.10      Cache-Control: no-
> > >> cache="set- 
> > >> cookie"                                                          
> > >>          Set-Cookie: pysid=e17247d6be677abadf19748044acb0bf;  
> > >> path=/                                                 Keep-Alive:
> > >> timeout=15,  
> > >> max=99                                                           
> > >>               Connection: Keep- 
> > >> Alive                                                            
> > >>                      Transfer-Encoding:  
> > >> chunked                                                          
> > >>                    Content-Type: text/ 
> > >> html                                                             
> > >>                     
> > >> ----------------------------------------------------------       
> > >>                                       ==========login screen in  
> > >> web browser here=====================
> > >> http://nsnserver/login
> > >> POST /login HTTP/1.1
> > >> Host: nsnserver
> > >> User-Agent: Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv: 
> > >> 1.7.8) Gecko/20050511 Firefox/1.0.4
> > >> Accept: text/xml,application/xml,application/xhtml+xml,text/ 
> > >> html;q=0.9,text/plain;q=0.8,image/png,*/*;q=0.5
> > >> Accept-Language: en-us,en;q=0.5
> > >> Accept-Encoding: gzip,deflate
> > >> Accept-Charset: ISO-8859-1,utf-8;q=0.7,*;q=0.7
> > >> Keep-Alive: 300
> > >> Connection: keep-alive
> > >> Referer: http://nsnserver/login
> > >> Cookie: pysid=e17247d6be677abadf19748044acb0bf;  
> > >> testSessionCookie=Enabled
> > >> Content-Type: application/x-www-form-urlencoded
> > >> Content-Length: 42
> > >> login=scott%40mischko.com&password=letmein
> > >> HTTP/1.x 302 Found
> > >> Date: Fri, 17 Jun 2005 21:51:12 GMT
> > >> Server: Apache/2.0.53 (Unix) mod_ssl/2.0.53 OpenSSL/0.9.7d  
> > >> mod_python/3.1.4 Python/2.4.1c2 PHP/4.3.10
> > >> Location: /index
> > >> Keep-Alive: timeout=15, max=100
> > >> Connection: Keep-Alive
> > >> Transfer-Encoding: chunked
> > >> Content-Type: text/plain
> > >> ----------------------------------------------------------
> > >> http://nsnserver/index
> > >> GET /index HTTP/1.1
> > >> Host: nsnserver
> > >> User-Agent: Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv: 
> > >> 1.7.8) Gecko/20050511 Firefox/1.0.4
> > >> Accept: text/xml,application/xml,application/xhtml+xml,text/ 
> > >> html;q=0.9,text/plain;q=0.8,image/png,*/*;q=0.5
> > >> Accept-Language: en-us,en;q=0.5
> > >> Accept-Encoding: gzip,deflate
> > >> Accept-Charset: ISO-8859-1,utf-8;q=0.7,*;q=0.7
> > >> Keep-Alive: 300
> > >> Connection: keep-alive
> > >> Referer: http://nsnserver/login
> > >> Cookie: pysid=e17247d6be677abadf19748044acb0bf;  
> > >> testSessionCookie=Enabled
> > >> HTTP/1.x 200 OK
> > >> Date: Fri, 17 Jun 2005 21:51:14 GMT
> > >> Server: Apache/2.0.53 (Unix) mod_ssl/2.0.53 OpenSSL/0.9.7d  
> > >> mod_python/3.1.4 Python/2.4.1c2 PHP/4.3.10
> > >> Keep-Alive: timeout=15, max=100
> > >> Connection: Keep-Alive
> > >> Transfer-Encoding: chunked
> > >> Content-Type: text/html
> > >>
> > >
> > >
> > >
> > > _______________________________________________
> > > Mod_python mailing list
> > > Mod_python@modpython.org
> > > http://mailman.modpython.org/mailman/listinfo/mod_python
> > >
> > 
> > _______________________________________________
> > Mod_python mailing list
> > Mod_python@modpython.org
> > http://mailman.modpython.org/mailman/listinfo/mod_python
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
From scott_list at mischko.com  Mon Jun 20 20:01:11 2005
From: scott_list at mischko.com (Scott Chapman)
Date: Mon Jun 20 20:01:19 2005
Subject: [mod_python] Is external redirect supposed to send a
	cookie(mpservlets)?
In-Reply-To: <1119307128.10106@dscpl.user.openhosting.com>
References: <1119307128.10106@dscpl.user.openhosting.com>
Message-ID: <42B758C7.2070301@mischko.com>

Graham Dumpleton wrote:
> Scott Sanders wrote ..
> 
>>The session cookie is not in the error headers, which are the only  
>>headers sent on redirect.  My workaround was to write a redirect  
>>function that wrote out the session cookie in the error headers.  I  
>>will try and look for the source code.
> 
> 
> Hmmm, that doesn't quite make sense. I use util.redirect() with a
> session based login and have no problem at all. You might be able
> to learn something from:
> 
>   http://svn.dscpl.com.au/vampire/trunk/examples/session/access.py
>   http://svn.dscpl.com.au/vampire/trunk/examples/session/
> 
> Working example at:
> 
>   http://www.dscpl.com.au/projects/vampire/examples/session
> 
> Use mickey/mouse as login/password.
> 
> I know it isn't using mpservlets and relies on a different package,
> but might still be useful.
> 
> Graham

Graham,
Your example does use 302 redirect to get to the login page and it's 
sending a cookie so you've got some magic going that mpservlets doesn't 
have.  I'll dig into your code and see what's up!

Thanks!
Scott
From scott_list at mischko.com  Mon Jun 20 20:35:27 2005
From: scott_list at mischko.com (Scott Chapman)
Date: Mon Jun 20 20:35:35 2005
Subject: [mod_python] Is external redirect supposed to
	send	acookie(mpservlets)?
In-Reply-To: <1119308981.32080@dscpl.user.openhosting.com>
References: <1119308981.32080@dscpl.user.openhosting.com>
Message-ID: <42B760CF.2050902@mischko.com>

Graham Dumpleton wrote:
> Is the problem perhaps that you are using:
> 
>   self.external_redirect(...)
> 
> and not:
> 
>   util.redirect(...)
> 
> In util.redirect(), it writes actual page content out and this may
> trigger the flushing out of any headers that have been set indirectly
> by Session for cookies.
> 
> In self.external_redirect() of mpservlets() it neither flushes the
> headers or writes any content and so cookie headers may not
> get written.
> 
> Graham

That fixed it.  I was also popping the wrong value but popping the 
correct one did not solve the problem.  Using util.redirect did.

Thanks Graham!

Scott
From wouter at squirrel-systems.com  Tue Jun 21 00:44:31 2005
From: wouter at squirrel-systems.com (Wouter van Marle)
Date: Tue Jun 21 00:44:40 2005
Subject: [mod_python] req.sendfile() questions
In-Reply-To: <42B6E426.8010900@sympatico.ca>
References: <1119251119.24491.56.camel@cm61-18-245-172.hkcable.com.hk>
	<42B6B897.30507@sympatico.ca>
	<1119275952.24491.95.camel@cm61-18-245-172.hkcable.com.hk>
	<42B6E426.8010900@sympatico.ca>
Message-ID: <1119329072.24491.107.camel@cm61-18-245-172.hkcable.com.hk>

On Mon, 2005-06-20 at 11:43 -0400, Jim Gallacher wrote:

> >>req.sendfile is a wrapper around the apache function ap_send_fd(). A 
> >>quick look at this tells me that nbytes is set to 0 on failure, so there 
> >>is no way for mod_python to determine the progress if the client 
> >>disconnects.
> > That's less important to me; complete or not is the main issue here.
> > By the way, does the req.sendfile() function support resuming a
> > download?
> 
> Ah, so it *is* important to you. :) 

Well maybe in a way it is :) I hoped a resume option would be built in
already. That would save me some headaches. I guess most modern browsers
support resume of downloads (they should, imho). I know http is not the
best option for downloading files (ftp is designed for that of course)
but well it seems to be the easiest now. I didn't intend to store
progress information except for complete or not complete.

> ap_send_fd() sets the number of 
> bytes sent to 0 on failure - ie the client disconnects. There is no way 
> for req.sendfile to know the number of bytes sent, so there is no way 
> for it to resume a download, since it would not know where in the file 
> to start sending.
> 
> You may be able to manipulate the http headers to get what you want. 
> Take a look at headers such as Accept-Ranges, Content-Length, Range, 
> etc. This will depend on the client also being able to resume downloads 
> and sending the appropriate request. You will need to examine the 
> request header to determine what part of the file to send in response.

I see. So client requests resuming from a certain off-set. That
shouldn't be too hard to implement (in a future version). Thanks.

Any thoughts on using ftp downloads instead? Could allow for faster
downloads. Though then it seems I'll have to set up an ftp server. I
know again most web browsers do support ftp.

> See http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html

I will.

Regards,
Wouter.

> Regards,
> Jim
> 
> 

From grahamd at dscpl.com.au  Tue Jun 21 01:04:09 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Tue Jun 21 01:04:21 2005
Subject: [mod_python] PSP(req, string=None)
Message-ID: <1119330249.2100@dscpl.user.openhosting.com>

dharana wrote ..
> PSP(req, string=None) won't print a blank page, it will try to load a file.
> Is 
> this intended behaviour?

If in doubt, always check the code:

        if not filename and not string:
            filename = req.filename

> from the doc:
> 
> '''
> req is a request object; filename and string are optional keyword arguments
> which indicate the source of the PSP code. Only one of these can be specified.
> If neither is specified, req.filename is used as filename.
> '''
> 
> I'm really specifying the string param.

You aren't really specifying it, as None is the default value
and special significance, in this evaluating to false.

But then, specifying an empty string will not help either as
that evaluates false as well. You would need:

  PSP(req, string=" ")

Ie., string consisting of 1 space.

> I came across this because I dynamically pass psp code to PSP and sometimes
> it's 
> a blank string instead of useful contents.
From vsi at ebi.ac.uk  Tue Jun 21 04:24:25 2005
From: vsi at ebi.ac.uk (Ville Silventoinen)
Date: Tue Jun 21 04:24:33 2005
Subject: [mod_python] Problem with mod_python and ZConfig
In-Reply-To: <42B2F932.5090406@dharana.net>
References: <Pine.LNX.4.61.0506171514440.19260@wolf.ebi.ac.uk>
	<Pine.LNX.4.61.0506171641320.19260@wolf.ebi.ac.uk>
	<42B2F932.5090406@dharana.net>
Message-ID: <Pine.LNX.4.61.0506210855350.18213@wolf.ebi.ac.uk>

Hi,

just to summarize:

I got ZConfig working. In my environment, I cannot use standard
paths, because we have many web servers, which share the same
binaries over NFS. Here's what I did:

1. I compiled expat-1.95.8 to location /path/to/expat.

2. I recompiled Apache 2.0.54 using --with-expat=/path/to/expat
option with configure. I checked with "ldd httpd" that Apache
depends now on right expat shared library.

3. I compiled Python 2.4.1, which contains its own expat-1.95.8.
I didn't modify Modules/Setup.

4. I compiled mod_python 3.1.4.

5. I configured Apache, stopped and started the server.
I tested with a handler that uses ZConfig. It works!

Upgrading the system expat wasn't an option for me (we use the same
Linux image on our web servers, which cannot be changed just like
that), but probably it is the easiest solution if you have just one
or two servers to look after.

I'm quite surprised that this problem is not mentioned in mod_python
documentation. Luckily I found information on this mailing list and
on few pages:

http://uche.ogbuji.net/tech/akara/nodes/2005-03-23/expat
http://www.cheshire3.org/docs/install.html
http://www.modpython.org/pipermail/mod_python/2005-January/017250.html
http://www.modpython.org/pipermail/mod_python/2004-May/015561.html


Cheers,
Ville






On Fri, 17 Jun 2005, dharana wrote:

> I too am having problems related to xml but from another package: 4Suite, 
> which I believe is also based on xml.sax and expat. from Ft.Xml import 
> MarkupWriter works if it's called from cmdline mode but it segfaults if 
> called from mod_python.
>
>
> Ville Silventoinen wrote:
>> Hi,
>> 
>> looks like the problem is with xml.sax and expat. I found other
>> mails about the same problem.
>> 
>> Cheers,
>> Ville
>> 
>> 
>> On Fri, 17 Jun 2005, Ville Silventoinen wrote:
>> 
>>> Hi,
>>> 
>>> I've been looking for something more extensive than ConfigParser
>>> for my configuration files, so I tried ZConfig 2.3. I wrote a small
>>> test module that uses ZConfig, which works ok. When I tried to use
>>> the same module with mod_python, I get a Segmentation fault.
>>> 
>>> Has anyone had similar problems using mod_python with ZConfig 2.x?
>>> 
>>> My test handler looks like this:
>>> 
>>>  from mod_python import apache
>>>  import ZConfig
>>> 
>>>  SCHEMA_FILE = '/homes/vsi/src/spylib/lib/Spy/spyschema.xml'
>>>  CONFIG_FILE = '/homes/vsi/src/spylib/lib/Spy/spy.conf'
>>> 
>>>  def handler(req):
>>>      try:
>>>          req.write("Trying to load configuration...\n");
>>>          schema = ZConfig.loadSchema(SCHEMA_FILE)
>>>          config, handler = ZConfig.loadConfig(schema, CONFIG_FILE)
>>>          req.write("Configuration loaded\n")
>>>      except Exception, e:
>>>          req.write("Failed to load configuration:\n%s" % str(e))
>>> 
>>>      return apache.OK
>>> 
>>> When called, I see "Trying to load configuration..." and then nothing.
>>> In Apache error_log I get:
>>> 
>>> [Fri Jun 17 13:09:31 2005] [notice] mod_python: (Re)importing module 
>>> 'testMPConfig'
>>> [Fri Jun 17 13:09:33 2005] [notice] child pid 26452 exit signal 
>>> Segmentation fault (11)
>>> 
>>> This happens every time I call the handler.
>>> 
>>> My configuration:
>>> 
>>>  LoadModule python_module /ebi/www/main/modules/mod_python.so
>>> 
>>>  <Directory /ebi/www/main/cgi-bin/vsi/test>
>>>    AddHandler mod_python .py
>>>    PythonHandler testMPConfig
>>>    PythonAutoReload On
>>>    PythonDebug On
>>>  </Directory>
>>> 
>>> My environment:
>>> 
>>>  Apache-2.0.54
>>>  Python-2.4
>>>  mod_python-3.1.3
>>>  ZConfig 2.3 (tried 2.2 as well)
>>>  Red Hat Linux release 9 (Shrike) 2.4.20-8rlx4smp
>>> 
>>> Any help would be appreciated. I've tried commenting lines out of the
>>> handler, looks like the problem happens with "loadSchema". I also tried
>>> to use "loadSchemaFile", but it didn't help.
>>> 
>>> On the same note, what is the recommended way to handle configuration
>>> with Python? I'm fairly new to Python. I'd like to have a configuration
>>> that is reloaded automatically when modified, validation rules, sections
>>> and proper values (so that integer strings become ints/longs in the
>>> configuration object, keys with multiple values become lists, etc.)
>>> Is the best way to write a Python module that contains the configuration?
>>> This would skip parsing phase and let mod_python reload the module when
>>> it's been modified.
>>> 
>>> Thanks,
>>> Ville
>>> 
>>> _______________________________________________
>>> Mod_python mailing list
>>> Mod_python@modpython.org
>>> http://mailman.modpython.org/mailman/listinfo/mod_python
>>> 
>> _______________________________________________
>> Mod_python mailing list
>> Mod_python@modpython.org
>> http://mailman.modpython.org/mailman/listinfo/mod_python
>> 
>> 
>> 
>
> -- 
> dharana
>
>
From dpopowich at comcast.net  Tue Jun 21 09:27:15 2005
From: dpopowich at comcast.net (Daniel Popowich)
Date: Tue Jun 21 09:27:24 2005
Subject: [mod_python] Is external redirect supposed to
	send	acookie(mpservlets)?
In-Reply-To: <42B760CF.2050902@mischko.com>
References: <42B760CF.2050902@mischko.com>
Message-ID: <17080.5555.769812.840545@greenmonster.local>


Scott Chapman writes:
> Graham Dumpleton wrote:
> > Is the problem perhaps that you are using:
> > 
> >   self.external_redirect(...)
> > 
> > and not:
> > 
> >   util.redirect(...)
> > 
> > In util.redirect(), it writes actual page content out and this may
> > trigger the flushing out of any headers that have been set indirectly
> > by Session for cookies.
> > 
> > In self.external_redirect() of mpservlets() it neither flushes the
> > headers or writes any content and so cookie headers may not
> > get written.
> > 
> > Graham
> 
> That fixed it.  I was also popping the wrong value but popping the 
> correct one did not solve the problem.  Using util.redirect did.
> 

I have to confess, when I wrote mpservlets I completely missed
utils.redirect().  Duh.  Everywhere else I built on top of
mod_python, not wanting to reinvent the wheel.  Here's a lesson for
you!

Next version, external_redirect() will wrap utils.redirect().  I will
apply this fix to my next release of mpservlets.  Thanks to Scott and
Graham.

Cheers,

Daniel Popowich
-----------------------------------------------
http://home.comcast.net/~d.popowich/mpservlets/
From falka777 at gmx.de  Tue Jun 21 11:34:44 2005
From: falka777 at gmx.de (Wojtek Dabrowski)
Date: Tue Jun 21 11:30:34 2005
Subject: [mod_python] Apache not executing python scripts...
Message-ID: <42B83394.6060605@gmx.de>

Hello everybody!

I just installed apache 2 and mod_python (apt-get install apache2
libapache2-mod-python, on debian). apache 2 works fine, but I can't get
mod_python to work, I keep getting the suggestion to download my .py file :(

When I restart apache, I get the following in error.log:

[Tue Jun 21 17:17:48 2005] [notice] caught SIGTERM, shutting down
[Tue Jun 21 17:17:49 2005] [notice] mod_python: Creating 32 session
mutexes based on 6 max processes and 25 max threads.
[Tue Jun 21 17:17:49 2005] [notice] Apache/2.0.54 (Debian GNU/Linux)
mod_python/3.1.3 Python/2.3.5 configured -- resuming normal operations

which, to me, indicates that mod_python is getting loaded correctly.

I have the following in my httpd.conf:

<Directory /var/www/Dwojtek/>
    AddHandler mod_python .py
    PythonHandler mptest
    PythonDebug On
</Directory>

I also have a .htaccess in /var/www/Dwojtek/, containing the lines:

AddHandler mod_python .py
PythonHandler mptest
PythonDebug On

But when I go to http://127.0.0.1/Dwojtek/mptest.py, I get a download
box. I don't wanna download the script, I want it executed :(

The corresponding line in the access.log is:
127.0.0.1 - - [21/Jun/2005:17:31:01 +0200] "GET /Dwojtek/mptest.py
HTTP/1.1" 200 12 "-" "Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.7.8)
Gecko/20050511 Firefox/1.0.4"

Which seems correct, too...

The mptest.py is, by the way:

from mod_python import apache

def handler(req):
    req.write("Hello World!")
    return apache.OK

Oh, and when I go to http://127.0.0.1/Dwojtek/, I just get a directory
listing.

Anybody any ideas what I may be doing wrong? :(

Thanks a lot in advance,
-Wojtek

--
This is a .signature-virus. If you see this, copy it into your .signature!
If you don't know what a .signature is, you've most probably been
infected by another virus of name Microsoft. In this case, please remove
yourself from my fov or infect yourself with linux ;)

-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 189 bytes
Desc: OpenPGP digital signature
Url : http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20050621/00b8c683/signature.bin
From administrator at leebrown.org  Tue Jun 21 11:48:08 2005
From: administrator at leebrown.org (Lee Brown)
Date: Tue Jun 21 11:48:26 2005
Subject: [mod_python] Apache not executing python scripts...
In-Reply-To: <42B83394.6060605@gmx.de>
Message-ID: <A919AE63065B@underdog>

Greetings!

Try this:

def handler(req):
    req.content_type = 'text/plain'
    req.write("Hello World!")
    return apache.OK 

Best Regards,
Lee E. Brown
(administrator@leebrown.org)

-----Original Message-----
From: mod_python-bounces@modpython.org
[mailto:mod_python-bounces@modpython.org] On Behalf Of Wojtek Dabrowski
Sent: Tuesday, June 21, 2005 11:35 AM
To: mod_python@modpython.org
Subject: [mod_python] Apache not executing python scripts...

Hello everybody!

I just installed apache 2 and mod_python (apt-get install apache2
libapache2-mod-python, on debian). apache 2 works fine, but I can't get
mod_python to work, I keep getting the suggestion to download my .py file :(

When I restart apache, I get the following in error.log:

[Tue Jun 21 17:17:48 2005] [notice] caught SIGTERM, shutting down [Tue Jun
21 17:17:49 2005] [notice] mod_python: Creating 32 session mutexes based on
6 max processes and 25 max threads.
[Tue Jun 21 17:17:49 2005] [notice] Apache/2.0.54 (Debian GNU/Linux)
mod_python/3.1.3 Python/2.3.5 configured -- resuming normal operations

which, to me, indicates that mod_python is getting loaded correctly.

I have the following in my httpd.conf:

<Directory /var/www/Dwojtek/>
    AddHandler mod_python .py
    PythonHandler mptest
    PythonDebug On
</Directory>

I also have a .htaccess in /var/www/Dwojtek/, containing the lines:

AddHandler mod_python .py
PythonHandler mptest
PythonDebug On

But when I go to http://127.0.0.1/Dwojtek/mptest.py, I get a download box. I
don't wanna download the script, I want it executed :(

The corresponding line in the access.log is:
127.0.0.1 - - [21/Jun/2005:17:31:01 +0200] "GET /Dwojtek/mptest.py HTTP/1.1"
200 12 "-" "Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.7.8)
Gecko/20050511 Firefox/1.0.4"

Which seems correct, too...

The mptest.py is, by the way:

from mod_python import apache

def handler(req):
    req.write("Hello World!")
    return apache.OK

Oh, and when I go to http://127.0.0.1/Dwojtek/, I just get a directory
listing.

Anybody any ideas what I may be doing wrong? :(

Thanks a lot in advance,
-Wojtek

--
This is a .signature-virus. If you see this, copy it into your .signature!
If you don't know what a .signature is, you've most probably been infected
by another virus of name Microsoft. In this case, please remove yourself
from my fov or infect yourself with linux ;)


From vmanera at manord.com  Tue Jun 21 12:36:47 2005
From: vmanera at manord.com (Manera, Villiam)
Date: Tue Jun 21 12:37:57 2005
Subject: [mod_python] Loading  servlet problem
Message-ID: <52DC70C1C1575C418CB033523A29CF141049F7@exchange2000.manord.com>

I noted a funny behavior on loading servlet, sometime work sometime :

File "/usr/local/lib/python2.4/site-packages/mod_python/servlet.py",
line 1345, in get_servlet
    klass, servlets = self.__load_servlet(filename)

  File "/usr/local/lib/python2.4/site-packages/mod_python/servlet.py",
line 1276, in __load_servlet
    raise ValueError, ('%s is not a subclass of Servlet (in %s)'

ValueError: menu is not a subclass of Servlet (in
/discoe/script/cgi/bulgaria/bulgaria_menu.py/menu.mps)

Obviously menu.mps is subclass od Servlet.


This happened sometime, on different servlet ????


If I restart apache all work fine for some time...


Villiam

From dpopowich at comcast.net  Tue Jun 21 14:35:47 2005
From: dpopowich at comcast.net (Daniel Popowich)
Date: Tue Jun 21 14:35:53 2005
Subject: [mod_python] Loading  servlet problem
In-Reply-To: <52DC70C1C1575C418CB033523A29CF141049F7@exchange2000.manord.com>
References: <52DC70C1C1575C418CB033523A29CF141049F7@exchange2000.manord.com>
Message-ID: <17080.24067.802547.969574@greenmonster.local>


Manera, Villiam writes:
> I noted a funny behavior on loading servlet, sometime work sometime :
> 
> File "/usr/local/lib/python2.4/site-packages/mod_python/servlet.py",
> line 1345, in get_servlet
>     klass, servlets = self.__load_servlet(filename)
> 
>   File "/usr/local/lib/python2.4/site-packages/mod_python/servlet.py",
> line 1276, in __load_servlet
>     raise ValueError, ('%s is not a subclass of Servlet (in %s)'
> 
> ValueError: menu is not a subclass of Servlet (in
> /discoe/script/cgi/bulgaria/bulgaria_menu.py/menu.mps)
> 
> Obviously menu.mps is subclass od Servlet.
> 
> 
> This happened sometime, on different servlet ????
> 
> 
> If I restart apache all work fine for some time...

Have you modified servlet.py?  If so and PythonAutoReload is "on"
then servlet.py is being reloaded by the python interpreter which
will create a new Servlet class with different identifier than the
one cached by the servlet manager in servlet.py.  That's why
restarting apache fixes your problem: you get fresh copies of
everything in new python interpreters.

To avoid this:

  1. You really shouldn't change servlet.py.  Put
     modifications/extensions in subclasses...the power of OO and
     all...

  2. In development mode, I configure my prefork apache with:

        MaxRequestsPerChild  1

     Sure, it's a performance hit, but you NEVER have to deal with
     stale python module importing issues and you don't have to
     litter your code with special-case importing code, etc.



Cheers,

Daniel Popowich
-----------------------------------------------
http://home.comcast.net/~d.popowich/mpservlets/
From jarrod.roberson at gmail.com  Wed Jun 22 01:18:53 2005
From: jarrod.roberson at gmail.com (jarrod roberson)
Date: Wed Jun 22 01:18:58 2005
Subject: [mod_python] Download authorisation
In-Reply-To: <1119058710.24491.45.camel@cm61-18-245-172.hkcable.com.hk>
References: <1119058710.24491.45.camel@cm61-18-245-172.hkcable.com.hk>
Message-ID: <2389d47305062122187bec4ed6@mail.gmail.com>

On 6/17/05, Wouter van Marle <wouter@squirrel-systems.com> wrote:
> 
> Hi all,
> 
> I've a problem that I'm struggling with: how to allow a certain user a 
> download, so that the user can download it once and only once? The 
> authorisation part I have; what I'm struggling with is how to open the 
> download for that specific file to the user (not too hard), and mainly how 
> to check whether the file has been downloaded completely. Taking into 
> account that a user may only be able to download it partly now, and has to 
> resume later.
> I can't find anything with google... can't think of a specific enough 
> query.
> 
> Wouter. 



you could try just write a cleanup handler that deleted the file when the 
download was completed 200 OK.

If you want to allow ranged gets for partial downloads you will have to 
store what parts the person has downloaded somewhere in a file and update 
that and check for completion in a cleanup handler somewhere.

this is just a data tracking problem, if you have a single server this is 
easy to solve, if you have a cluster of servers it gets more complicated 
very quicklly



-- 
If you don't know what you want, you probably need a nap.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20050622/13645a9a/attachment.html
From sanders at apache.org  Wed Jun 22 01:41:33 2005
From: sanders at apache.org (Scott Sanders)
Date: Wed Jun 22 01:41:40 2005
Subject: [mod_python] Is external redirect supposed to send a cookie
	(mpservlets)?
In-Reply-To: <42B72F2C.6090804@mischko.com>
References: <42B7141B.2050800@mischko.com>
	<D127B5AD-4D3C-4ABF-ABE1-2A7C68149BEA@apache.org>
	<42B72F2C.6090804@mischko.com>
Message-ID: <F9A2016A-55D4-46D7-91FB-C18A0110ECD7@apache.org>

I know you find a different answer but here is the code I added to my  
applications:

req.err_headers_out.add("Set-Cookie", str(session.make_cookie()))

Scott Sanders

On Jun 20, 2005, at 2:03 PM, Scott Chapman wrote:

> Scott Sanders wrote:
>
>> The session cookie is not in the error headers, which are the  
>> only  headers sent on redirect.  My workaround was to write a  
>> redirect  function that wrote out the session cookie in the error  
>> headers.  I  will try and look for the source code.
>> Scott
>>
>
> Scott,
> That would be perfect.  I hope you find the source code!
>
> Thanks!
> Scott
>

From wouter at squirrel-systems.com  Wed Jun 22 03:51:09 2005
From: wouter at squirrel-systems.com (Wouter van Marle)
Date: Wed Jun 22 03:51:30 2005
Subject: [mod_python] Download authorisation
In-Reply-To: <2389d47305062122187bec4ed6@mail.gmail.com>
References: <1119058710.24491.45.camel@cm61-18-245-172.hkcable.com.hk>
	<2389d47305062122187bec4ed6@mail.gmail.com>
Message-ID: <1119426670.24491.116.camel@cm61-18-245-172.hkcable.com.hk>

On Wed, 2005-06-22 at 01:18 -0400, jarrod roberson wrote:
> 
> 
> On 6/17/05, Wouter van Marle <wouter@squirrel-systems.com> wrote:
>         Hi all,
>         
>         I've a problem that I'm struggling with: how to allow a
>         certain user a download, so that the user can download it once
>         and only once? The authorisation part I have; what I'm
>         struggling with is how to open the download for that specific
>         file to the user (not too hard), and mainly how to check
>         whether the file has been downloaded completely. Taking into
>         account that a user may only be able to download it partly
>         now, and has to resume later.
>         I can't find anything with google... can't think of a specific
>         enough query.
>         
>         Wouter.
> 
> 
> you could try just write a cleanup handler that deleted the file when
> the download was completed 200 OK.

The clean-up handler is the easy part :)
How to capture such a 200 OK message?

> If you want to allow ranged gets for partial downloads you will have
> to store what parts the person has downloaded somewhere in a file and
> update that and check for completion in a cleanup handler somewhere.

No partial downloads other than later resumes - and as I understand from
Jim Gallacher the client should request this, so no need to store
progress info on my side.

Wouter.

> 
> this is just a data tracking problem, if you have a single server this
> is easy to solve, if you have a cluster of servers it gets more
> complicated very quicklly
> 
> 
> 
> 
> 
> -- 
> If you don't know what you want, you probably need a nap.

From vmanera at manord.com  Wed Jun 22 04:15:17 2005
From: vmanera at manord.com (Manera, Villiam)
Date: Wed Jun 22 04:16:27 2005
Subject: R: [mod_python] Loading  servlet problem
Message-ID: <52DC70C1C1575C418CB033523A29CF141049F8@exchange2000.manord.com>

No may change are in subclass of Servlet,I stil have the version 1.1.5 from 08/09/2004 patched as you suggest:

I see your problem.  While I don't think I want to add this to the mainstream distribution, it's actually quite simple (so, perhaps I should just shut up and do it!).  You can apply the patch attached below.  It adds a keep_blank_values attribute with a default of 0 to Servlet, so unless you change something in a subclass, servlets will behave exactly as they do now.  To get the behaviour you want, set keep_blank_values to 1 in a subclass, eg:

   MyServlet(HTMLPage):
      keep_blank_values = 1
      ...

      content_type = None
      auth_realm = 'Unspecified'
      reusable = True
+     keep_blank_values = 0
      use_session = False
      session = None
      session_timeout = 60 * 30 # 30 minutes

.....
!         self.form = util.FieldStorage(self.req, self.keep_blank_values)
--------------------------------------------
I noted that in the 1.1.6 version this in still missing and I will patch it myself.

Now for debug I changed:
            try:
                if not issubclass(klass, Servlet):
                    raise ValueError
            except:
                raise ValueError, ('%s is not a subclass of Servlet (in %s) code: %s'
                                   % (basename, fname, str(code)))

With the code displayed I hope to find something more...

Villiam

-----Messaggio originale-----
Da: Daniel Popowich [mailto:dpopowich@comcast.net] 
Inviato: marted? 21 giugno 2005 20.36
A: Manera, Villiam
Cc: mod_python@modpython.org
Oggetto: Re: [mod_python] Loading servlet problem



Manera, Villiam writes:
> I noted a funny behavior on loading servlet, sometime work sometime :
> 
> File "/usr/local/lib/python2.4/site-packages/mod_python/servlet.py",
> line 1345, in get_servlet
>     klass, servlets = self.__load_servlet(filename)
> 
>   File "/usr/local/lib/python2.4/site-packages/mod_python/servlet.py",
> line 1276, in __load_servlet
>     raise ValueError, ('%s is not a subclass of Servlet (in %s)'
> 
> ValueError: menu is not a subclass of Servlet (in
> /discoe/script/cgi/bulgaria/bulgaria_menu.py/menu.mps)
> 
> Obviously menu.mps is subclass od Servlet.
> 
> 
> This happened sometime, on different servlet ????
> 
> 
> If I restart apache all work fine for some time...

Have you modified servlet.py?  If so and PythonAutoReload is "on" then servlet.py is being reloaded by the python interpreter which will create a new Servlet class with different identifier than the one cached by the servlet manager in servlet.py.  That's why restarting apache fixes your problem: you get fresh copies of everything in new python interpreters.

To avoid this:

  1. You really shouldn't change servlet.py.  Put
     modifications/extensions in subclasses...the power of OO and
     all...

  2. In development mode, I configure my prefork apache with:

        MaxRequestsPerChild  1

     Sure, it's a performance hit, but you NEVER have to deal with
     stale python module importing issues and you don't have to
     litter your code with special-case importing code, etc.



Cheers,

Daniel Popowich
-----------------------------------------------
http://home.comcast.net/~d.popowich/mpservlets/

From jarrod.roberson at gmail.com  Thu Jun 23 02:17:47 2005
From: jarrod.roberson at gmail.com (jarrod roberson)
Date: Thu Jun 23 02:17:54 2005
Subject: [mod_python] Download authorisation
In-Reply-To: <1119426670.24491.116.camel@cm61-18-245-172.hkcable.com.hk>
References: <1119058710.24491.45.camel@cm61-18-245-172.hkcable.com.hk>
	<2389d47305062122187bec4ed6@mail.gmail.com>
	<1119426670.24491.116.camel@cm61-18-245-172.hkcable.com.hk>
Message-ID: <2389d4730506222317682e0b3a@mail.gmail.com>

On 6/22/05, Wouter van Marle <wouter@squirrel-systems.com> wrote:
> 
> On Wed, 2005-06-22 at 01:18 -0400, jarrod roberson wrote:
> >
> >
> > On 6/17/05, Wouter van Marle <wouter@squirrel-systems.com> wrote:
> > Hi all,
> >
> > I've a problem that I'm struggling with: how to allow a
> > certain user a download, so that the user can download it once
> > and only once? The authorisation part I have; what I'm
> > struggling with is how to open the download for that specific
> > file to the user (not too hard), and mainly how to check
> > whether the file has been downloaded completely. Taking into
> > account that a user may only be able to download it partly
> > now, and has to resume later.
> > I can't find anything with google... can't think of a specific
> > enough query.
> >
> > Wouter.
> >
> >
> > you could try just write a cleanup handler that deleted the file when
> > the download was completed 200 OK.
> 
> The clean-up handler is the easy part :)
> How to capture such a 200 OK message?


you have the request and response references, and lots of other stuff in the 
api

> If you want to allow ranged gets for partial downloads you will have
> > to store what parts the person has downloaded somewhere in a file and
> > update that and check for completion in a cleanup handler somewhere.
> 
> No partial downloads other than later resumes - and as I understand from
> Jim Gallacher the client should request this, so no need to store
> progress info on my side.


if you don't store that they downloaded parts and total them up how are you 
going to stop them
from downloading the file over and over, one part at a time? Since the parts 
can be arbitrary lenghts
this is an EASY way to game the system.

Wouter.
> 
> >
> > this is just a data tracking problem, if you have a single server this
> > is easy to solve, if you have a cluster of servers it gets more
> > complicated very quicklly
> >
> >
> >
> >
> >
> > --
> > If you don't know what you want, you probably need a nap.
> 
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
> 



-- 
If you don't know what you want, you probably need a nap.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20050623/0a8bedfd/attachment.html
From wouter at squirrel-systems.com  Thu Jun 23 04:17:03 2005
From: wouter at squirrel-systems.com (Wouter van Marle)
Date: Thu Jun 23 04:17:20 2005
Subject: [mod_python] Download authorisation
In-Reply-To: <2389d4730506222317682e0b3a@mail.gmail.com>
References: <1119058710.24491.45.camel@cm61-18-245-172.hkcable.com.hk>
	<2389d47305062122187bec4ed6@mail.gmail.com>
	<1119426670.24491.116.camel@cm61-18-245-172.hkcable.com.hk>
	<2389d4730506222317682e0b3a@mail.gmail.com>
Message-ID: <1119514623.16903.11.camel@cm61-18-245-172.hkcable.com.hk>

On Thu, 2005-06-23 at 02:17 -0400, jarrod roberson wrote:


> if you don't store that they downloaded parts and total them up how
> are you going to stop them
> from downloading the file over and over, one part at a time? Since the
> parts can be arbitrary lenghts
> this is an EASY way to game the system.


I think that's simple to prevent.
If later a user requests a partial download, with the upper limit being
the end of the file, then if that download has succeeded the download is
considered complete. If the user tries to grab parts, they can get all
parts except for the last byte. As soon as that byte is sent, the
download is registered as finished. Regarding partial downloads, I don't
plan on supporting anything more than a resume - not parts. So if a user
requests resume from byte x, they're going to get everything from byte x
straight to the end.
In case a user wants to download a file and later share it with their
friends, I can think of easier ways to do that than download except for
the last bit.

And if a user wants to download it twice, that's also fine: I even
intend to keep records of all sales, and on request allow a user to
re-download a file if necessary.

Wouter.

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20050623/d55f4cf4/attachment.html
From listspam at flowtheory.net  Thu Jun 23 12:28:12 2005
From: listspam at flowtheory.net (Joshua Ginsberg)
Date: Thu Jun 23 12:28:52 2005
Subject: [mod_python] This is just friggin' weird...
Message-ID: <f6babae41296428f7275664b5a5493e7@flowtheory.net>

I have an application that I developed using PSP pages. It is seven 
steps to sign somebody up with our company. It worked just great 
yesterday, this morning, it hangs going from step 1 to step 2, but only 
with certain input data. Nothing in any of my logs is of any use.

I have a development server for it that queries the same MySQL and 
MSSQL databases -- it hangs too at the same point. I inserted some 
debug output in the development server to see where it's hanging up.

When I don't have a Session defined, it hangs up at a section that is:
- a call to an API that inserts some data in a MySQL server
- a call to psp.redirect (which should throw an error because i've 
already returned stuff to the client, but it doesn't throw an error)

Trying that API from command line by hand works like a charm, so I'm 
not convinced it's the API.

When I do have a Session defined, it hangs up on trying to import the 
session. I've got a wrapper around the Session,DbmSession class which 
basically does nothing but return an empty string instead of raising an 
error if a key doesn't exist. I've already cleared the dbm file, 
started over from scratch, and ensured that the dbm file is 
readable/writable by apache.

I cleared the semaphore array for Apache, I've restarted Apache, I've 
restarted MySQL, and none of it has helped...

Anybody have any ideas? I'm just stumped at this point. If you need 
code snippets or the site to test it out on, let me know. Thanks!

-jag


-------------- next part --------------
A non-text attachment was scrubbed...
Name: unknown.jpg
Type: image/jpeg
Size: 1984 bytes
Desc: not available
Url : http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20050623/2e6dd26f/unknown.jpg
-------------- next part --------------

Joshua Ginsberg -- joshg@brainstorminternet.net
Brainstorm Internet Network Operations
970-247-1442 x131
From dharana at dharana.net  Thu Jun 23 13:03:12 2005
From: dharana at dharana.net (dharana)
Date: Thu Jun 23 13:03:33 2005
Subject: [mod_python] Using a psp parser from outside mod_python
Message-ID: <42BAEB50.3070601@dharana.net>

Hello list,

If I try to:

	from mod_python.psp import PSP

from a cmdline python script I get "ImportError: No module named _apache". I'm 
dynamically generating psp templates (mixes of xhtml and <% %> tags) that need 
to be parsed into full xhtml from a non-apache env. Is there any possibility of 
using PSP this way?

-- 
dharana

From jg.lists at sympatico.ca  Thu Jun 23 13:28:58 2005
From: jg.lists at sympatico.ca (Jim Gallacher)
Date: Thu Jun 23 13:24:22 2005
Subject: [mod_python] Using a psp parser from outside mod_python
In-Reply-To: <42BAEB50.3070601@dharana.net>
References: <42BAEB50.3070601@dharana.net>
Message-ID: <42BAF15A.9020604@sympatico.ca>

dharana wrote:
> Hello list,
> 
> If I try to:
> 
>     from mod_python.psp import PSP
> 
> from a cmdline python script I get "ImportError: No module named 
> _apache". I'm dynamically generating psp templates (mixes of xhtml and 
> <% %> tags) that need to be parsed into full xhtml from a non-apache 
> env. Is there any possibility of using PSP this way?
> 

A quick look at psp.py indicates that the _apache module (which is only 
available within the apache) is used for acquiring a global lock on the 
dbm file used for caching psp pages.

It should be easy to adapt psp.py to implement your own locking scheme, 
or eliminate locking altogether if you are generating your pages in a 
single process.

And I'm sure you've already figured out that you'll need to simulate the 
request object.

Regards
Jim

From mamading at gmail.com  Thu Jun 23 13:33:45 2005
From: mamading at gmail.com (Mamading Ceesay)
Date: Thu Jun 23 13:33:50 2005
Subject: [mod_python] Using a psp parser from outside mod_python
In-Reply-To: <42BAEB50.3070601@dharana.net>
References: <42BAEB50.3070601@dharana.net>
Message-ID: <57a9359705062310337ba811a7@mail.gmail.com>

On 6/23/05, dharana <dharana@dharana.net> wrote:
> 
> If I try to:
> 
>         from mod_python.psp import PSP
> 
> from a cmdline python script I get "ImportError: No module named _apache". I'm
> dynamically generating psp templates (mixes of xhtml and <% %> tags) that need
> to be parsed into full xhtml from a non-apache env. Is there any possibility of
> using PSP this way?
> 

Do you really need PSP, or can you not use something like PyHP
http://www.freenet.org.nz/python/pyweb/docs/pyhp.html ?

Personally, I've used Cheetah to generate templates from the command line.

-- 
Mamading Ceesay

"You never change things by fighting the existing reality. To change 
something, build a new model that makes the existing model obsolete." 
-- R. Buckminster Fuller

From dharana at dharana.net  Thu Jun 23 13:48:40 2005
From: dharana at dharana.net (dharana)
Date: Thu Jun 23 13:49:00 2005
Subject: [mod_python] Using a psp parser from outside mod_python
In-Reply-To: <42BAF15A.9020604@sympatico.ca>
References: <42BAEB50.3070601@dharana.net> <42BAF15A.9020604@sympatico.ca>
Message-ID: <42BAF5F8.50103@dharana.net>

Hmmm,

-----
from mod_python import _psp
_psp.parsestring(python_code)
-----

works without any problems as it has no needs to be in apache env. Shouldn't we 
split psp.py into the apache-specific stuff (PSP class) and general purpose 
stuff for better modularity? I find myself using _psp.parsestring instead of 
psp.parsestring a lot more. And I think the _psp functions shouldn't be directly 
called (correct me please if I'm wrong).


Jim Gallacher wrote:
> dharana wrote:
> 
>> Hello list,
>>
>> If I try to:
>>
>>     from mod_python.psp import PSP
>>
>> from a cmdline python script I get "ImportError: No module named 
>> _apache". I'm dynamically generating psp templates (mixes of xhtml and 
>> <% %> tags) that need to be parsed into full xhtml from a non-apache 
>> env. Is there any possibility of using PSP this way?
>>
> 
> A quick look at psp.py indicates that the _apache module (which is only 
> available within the apache) is used for acquiring a global lock on the 
> dbm file used for caching psp pages.
> 
> It should be easy to adapt psp.py to implement your own locking scheme, 
> or eliminate locking altogether if you are generating your pages in a 
> single process.
> 
> And I'm sure you've already figured out that you'll need to simulate the 
> request object.
> 
> Regards
> Jim
> 
> 
> 
> 

-- 
dharana

From dharana at dharana.net  Thu Jun 23 13:54:08 2005
From: dharana at dharana.net (dharana)
Date: Thu Jun 23 13:54:29 2005
Subject: [mod_python] Using a psp parser from outside mod_python
In-Reply-To: <57a9359705062310337ba811a7@mail.gmail.com>
References: <42BAEB50.3070601@dharana.net>
	<57a9359705062310337ba811a7@mail.gmail.com>
Message-ID: <42BAF740.8050502@dharana.net>

Thank you for the suggestion Mamading but I'm already using PSP on a lot of 
parts of my application and I would rather stick to only one php-like parsing 
module.

Mamading Ceesay wrote:
> On 6/23/05, dharana <dharana@dharana.net> wrote:
> 
>>If I try to:
>>
>>        from mod_python.psp import PSP
>>
>>from a cmdline python script I get "ImportError: No module named _apache". I'm
>>dynamically generating psp templates (mixes of xhtml and <% %> tags) that need
>>to be parsed into full xhtml from a non-apache env. Is there any possibility of
>>using PSP this way?
>>
> 
> 
> Do you really need PSP, or can you not use something like PyHP
> http://www.freenet.org.nz/python/pyweb/docs/pyhp.html ?
> 
> Personally, I've used Cheetah to generate templates from the command line.
> 

-- 
dharana

From mamading at gmail.com  Thu Jun 23 13:57:44 2005
From: mamading at gmail.com (Mamading Ceesay)
Date: Thu Jun 23 13:57:49 2005
Subject: [mod_python] Using a psp parser from outside mod_python
In-Reply-To: <42BAF740.8050502@dharana.net>
References: <42BAEB50.3070601@dharana.net>
	<57a9359705062310337ba811a7@mail.gmail.com>
	<42BAF740.8050502@dharana.net>
Message-ID: <57a9359705062310577ad8549e@mail.gmail.com>

On 6/23/05, dharana <dharana@dharana.net> wrote:
>
> Thank you for the suggestion Mamading but I'm already using PSP on a lot of
> parts of my application and I would rather stick to only one php-like parsing
> module.
> 

Understood.  The context wasn't clear from your original post, which
is why I asked if PSP is needed.  As you are already using it in other
parts of the app then sticking with it is the right thing to do.

-- 
Mamading Ceesay

"You never change things by fighting the existing reality. To change 
something, build a new model that makes the existing model obsolete." 
-- R. Buckminster Fuller

From cy.khormaee at hp.com  Thu Jun 23 14:02:23 2005
From: cy.khormaee at hp.com (Khormaee, Cy)
Date: Thu Jun 23 14:03:28 2005
Subject: [mod_python] modules with mod_python
Message-ID: <51E9B8FBB414C44A9A2CB19A5F4F5DD90422CCF8@cacexc03.americas.cpqcorp.net>

Hey all,

Im very new to mod_python and wanted to import/use some other packages(NumPy, SciPy, and wxPython) to use in web applications.  I successfully installed(manually) them and am able to use them in the system's(running redhat linux) python 2.2.3 interpreter, but mod_python simply does not recognize them.  Are there any compatability/propogation issues I am unaware of?  Any help would be greatly appreciated.

From simo at simoivanov.com  Thu Jun 23 15:52:34 2005
From: simo at simoivanov.com (simeon ivanov)
Date: Thu Jun 23 15:53:10 2005
Subject: [mod_python] how to run python code in the parent apache process
Message-ID: <42BB1302.4000502@simoivanov.com>

Hi,

Is it possible to run python code in the parent apache process, similar
to what happens in mod_perl? From looking at the docs and the code, it
seems that module imports happen on the child initialization stage,
after the child processes fork from the parent process. In the
particular setup I am considering it is okay to use a single interpreter
for the whole server.  Is there any particular reason why python code
should not be loaded in the parent startup stage?

Best regards:
Simeon
From jg.lists at sympatico.ca  Thu Jun 23 17:01:11 2005
From: jg.lists at sympatico.ca (Jim Gallacher)
Date: Thu Jun 23 16:56:39 2005
Subject: [mod_python] This is just friggin' weird...
In-Reply-To: <f6babae41296428f7275664b5a5493e7@flowtheory.net>
References: <f6babae41296428f7275664b5a5493e7@flowtheory.net>
Message-ID: <42BB2317.70302@sympatico.ca>

Nothing obvious comes to mind with the information, but I'll comment 
anyway. :)

Joshua Ginsberg wrote:
> I have an application that I developed using PSP pages. It is seven 
> steps to sign somebody up with our company. It worked just great 
> yesterday, this morning, it hangs going from step 1 to step 2, but only 
> with certain input data. 

Is it always the *same* data? What is different about that data?

> 
> I have a development server for it that queries the same MySQL and MSSQL 
> databases -- it hangs too at the same point. I inserted some debug 
> output in the development server to see where it's hanging up.

Not clear in the following where it is hanging. It either hangs at one 
point or the other. Can't hang at 2 places at once, so which is it?

> When I don't have a Session defined, it hangs up at a section that is:
> - a call to an API that inserts some data in a MySQL server
> - a call to psp.redirect (which should throw an error because i've 
> already returned stuff to the client, but it doesn't throw an error)

Does psp.redirect get called or are you saying it hangs before it 
reaches the redirect?. The beauty of python is you can jump right it and 
change it. Stick a self.req.log_error() into the psp.redirect method in 
psp.py and make sure it actually reaches that point if you are in doubt.

> Trying that API from command line by hand works like a charm, so I'm not 
> convinced it's the API.
> 
> When I do have a Session defined, it hangs up on trying to import the 
> session. 

Import the session or create the session? ie
import Session
    vs.
sess = Session.DbmSession(req)

If you mean creating the session, it sounds like a deadlock issue. There 
are known problems when using sessions in conjunction with psp pages, 
where you create a session before calling a psp page which contains a 
variable named 'session'. You'll need to manually save and unlock the 
session before calling the psp run method.

If you are on Windows there is a double whammy if you are trying to use 
DbmSession in your handler code. The psp code will try to create a new 
session instance but using MemorySession instead of DbmSession. (It's 
not really Windows specific, it just that the default apache mpm on 
Windows is threaded and so MemorySession is selected as the default. 
And, it's is not actually a deadlock issue, but it will make it appear 
like your session data is getting lost.)

These issues will be fixed in the soon to be released (we all hope) 
version 3.2.

> I've got a wrapper around the Session,DbmSession class which 
> basically does nothing but return an empty string instead of raising an 
> error if a key doesn't exist.

So could this be masking some important information if an exception is 
being raised?

> I've already cleared the dbm file, started 
> over from scratch, and ensured that the dbm file is readable/writable by 
> apache.
> 
> I cleared the semaphore array for Apache, I've restarted Apache, I've 
> restarted MySQL, and none of it has helped...
> 
> Anybody have any ideas? I'm just stumped at this point. If you need code 
> snippets or the site to test it out on, let me know. Thanks!
> 

Sorry I couldn't really help, but at least there a few more things for 
you to think about.

Regards,
Jim

From listspam at flowtheory.net  Thu Jun 23 18:06:59 2005
From: listspam at flowtheory.net (Joshua Ginsberg)
Date: Thu Jun 23 18:06:43 2005
Subject: [mod_python] This is just friggin' weird...
In-Reply-To: <42BABEE5.40604@jamiebecker.com>
References: <f6babae41296428f7275664b5a5493e7@flowtheory.net>
	<42BABEE5.40604@jamiebecker.com>
Message-ID: <470c67cfbfaa9f6d1d9e132b7f3f0979@flowtheory.net>

Posted off list...

Forgot to mention...

Full query logging shows the query going through as expected. Running 
the API command including the SQL from the python command line works 
just fine as does running from the mysql cli client...

:-/ Yeah -- weird, I know. Any other ideas anybody?

-jag


-------------- next part --------------
A non-text attachment was scrubbed...
Name: unknown.jpg
Type: image/jpeg
Size: 1984 bytes
Desc: not available
Url : http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20050623/b12cfae9/unknown.jpg
-------------- next part --------------

Joshua Ginsberg -- joshg@brainstorminternet.net
Brainstorm Internet Network Operations
970-247-1442 x131
On Jun 23, 2005, at 7:53 AM, jamie@jamiebecker.com wrote:

> Don't know. Can you turn on debug (full query logging) logs for MySQL?
> Can you run the SQL from the mysql command line client ok?
>
> Joshua Ginsberg wrote:
>
>> I have an application that I developed using PSP pages. It is seven
>> steps to sign somebody up with our company. It worked just great
>> yesterday, this morning, it hangs going from step 1 to step 2, but
>> only with certain input data. Nothing in any of my logs is of any use.
>>
>> I have a development server for it that queries the same MySQL and
>> MSSQL databases -- it hangs too at the same point. I inserted some
>> debug output in the development server to see where it's hanging up.
>>
>> When I don't have a Session defined, it hangs up at a section that is:
>> - a call to an API that inserts some data in a MySQL server
>> - a call to psp.redirect (which should throw an error because i've
>> already returned stuff to the client, but it doesn't throw an error)
>>
>> Trying that API from command line by hand works like a charm, so I'm
>> not convinced it's the API.
>>
>> When I do have a Session defined, it hangs up on trying to import the
>> session. I've got a wrapper around the Session,DbmSession class which
>> basically does nothing but return an empty string instead of raising
>> an error if a key doesn't exist. I've already cleared the dbm file,
>> started over from scratch, and ensured that the dbm file is
>> readable/writable by apache.
>>
>> I cleared the semaphore array for Apache, I've restarted Apache, I've
>> restarted MySQL, and none of it has helped...
>>
>> Anybody have any ideas? I'm just stumped at this point. If you need
>> code snippets or the site to test it out on, let me know. Thanks!
>>
>> -jag
>>
>>
>>
>> ---------------------------------------------------------------------- 
>> --
>>
>>
>> Joshua Ginsberg -- joshg@brainstorminternet.net
>> Brainstorm Internet Network Operations
>> 970-247-1442 x131
>>
>> ---------------------------------------------------------------------- 
>> --
>>
>> _______________________________________________
>> Mod_python mailing list
>> Mod_python@modpython.org
>> http://mailman.modpython.org/mailman/listinfo/mod_python
>>
>>
>
From listspam at flowtheory.net  Thu Jun 23 18:09:12 2005
From: listspam at flowtheory.net (Joshua Ginsberg)
Date: Thu Jun 23 18:08:57 2005
Subject: [mod_python] This is just friggin' weird...
In-Reply-To: <f6babae41296428f7275664b5a5493e7@flowtheory.net>
References: <f6babae41296428f7275664b5a5493e7@flowtheory.net>
Message-ID: <dbf75dc3f03a39154ea17640797605c8@flowtheory.net>

Okay, and something else I've discovered... it appears to be hanging on 
psp.redirect...

Now, at least in my experience, psp.redirect will throw an error if 
data has been written back out to the client when redirect() is called. 
It's not doing that. It's just... hanging.

The way I discovered this was by accident. I was testing it by 
telnetting to port 80 and manually entering for data. I accidentally 
left off a field, and it hung at a different place it had ever hung 
before. At that spot, there's a psp.redirect to an error handler...

So... why? I don't get it.

-jag

-------------- next part --------------
A non-text attachment was scrubbed...
Name: unknown.jpg
Type: image/jpeg
Size: 1984 bytes
Desc: not available
Url : http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20050623/d1096425/unknown.jpg
-------------- next part --------------

Joshua Ginsberg -- joshg@brainstorminternet.net
Brainstorm Internet Network Operations
970-247-1442 x131
On Jun 23, 2005, at 10:28 AM, Joshua Ginsberg wrote:

> I have an application that I developed using PSP pages. It is seven 
> steps to sign somebody up with our company. It worked just great 
> yesterday, this morning, it hangs going from step 1 to step 2, but 
> only with certain input data. Nothing in any of my logs is of any use.
>
> I have a development server for it that queries the same MySQL and 
> MSSQL databases -- it hangs too at the same point. I inserted some 
> debug output in the development server to see where it's hanging up.
>
> When I don't have a Session defined, it hangs up at a section that is:
> - a call to an API that inserts some data in a MySQL server
> - a call to psp.redirect (which should throw an error because i've 
> already returned stuff to the client, but it doesn't throw an error)
>
> Trying that API from command line by hand works like a charm, so I'm 
> not convinced it's the API.
>
> When I do have a Session defined, it hangs up on trying to import the 
> session. I've got a wrapper around the Session,DbmSession class which 
> basically does nothing but return an empty string instead of raising 
> an error if a key doesn't exist. I've already cleared the dbm file, 
> started over from scratch, and ensured that the dbm file is 
> readable/writable by apache.
>
> I cleared the semaphore array for Apache, I've restarted Apache, I've 
> restarted MySQL, and none of it has helped...
>
> Anybody have any ideas? I'm just stumped at this point. If you need 
> code snippets or the site to test it out on, let me know. Thanks!
>
> -jag
>
>
> <unknown.jpg>
> Joshua Ginsberg -- joshg@brainstorminternet.net
> Brainstorm Internet Network Operations
> 970-247-1442 x131_______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
From administrator at leebrown.org  Thu Jun 23 18:26:51 2005
From: administrator at leebrown.org (Lee Brown)
Date: Thu Jun 23 18:27:32 2005
Subject: [mod_python] modules with mod_python
In-Reply-To: <51E9B8FBB414C44A9A2CB19A5F4F5DD90422CCF8@cacexc03.americas.cpqcorp.net>
Message-ID: <B4D398070FF3@underdog>

Greetings!

First, make sure that the paths to those other python modules are available
to the local interpreter handling the request:

	def handler(req):
		req.content_type = 'text/plain'
		req.write(sys.path)
		return apache.OK 

And if that's the problem, try adding this to your apache config file
somewhere after the mod_python "AddHandler" directive:

	PythonPath "sys.path + ['path/to/pkg1' + 'path/to/pkg2', ...]"

Best Regards,
Lee E. Brown
(administrator@leebrown.org)

-----Original Message-----
From: mod_python-bounces@modpython.org
[mailto:mod_python-bounces@modpython.org] On Behalf Of Khormaee, Cy
Sent: Thursday, June 23, 2005 2:02 PM
To: mod_python@modpython.org
Subject: [mod_python] modules with mod_python

Hey all,

Im very new to mod_python and wanted to import/use some other
packages(NumPy, SciPy, and wxPython) to use in web applications.  I
successfully installed(manually) them and am able to use them in the
system's(running redhat linux) python 2.2.3 interprete r, but mod_python
simply does not recognize them.  Are there any compatability/propogation
issues I am unaware of?  Any help would be greatly appreciated.

_______________________________________________
Mod_python mailing list
Mod_python@modpython.org
http://mailman.modpython.org/mailman/listinfo/mod_python

From listspam at flowtheory.net  Thu Jun 23 18:33:39 2005
From: listspam at flowtheory.net (Joshua Ginsberg)
Date: Thu Jun 23 18:33:25 2005
Subject: [mod_python] This is just friggin' weird...
In-Reply-To: <42BB2317.70302@sympatico.ca>
References: <f6babae41296428f7275664b5a5493e7@flowtheory.net>
	<42BB2317.70302@sympatico.ca>
Message-ID: <e5ac3a0f8b769279e8049bd3bf402682@flowtheory.net>

Hi Jim -- replies inline...
On Jun 23, 2005, at 3:01 PM, Jim Gallacher wrote:

> Nothing obvious comes to mind with the information, but I'll comment 
> anyway. :)
>
> Joshua Ginsberg wrote:
>> I have an application that I developed using PSP pages. It is seven 
>> steps to sign somebody up with our company. It worked just great 
>> yesterday, this morning, it hangs going from step 1 to step 2, but 
>> only with certain input data.
>
> Is it always the *same* data? What is different about that data?

Certain input data. What's different about the data is it fails certain 
error checking tests.

>> I have a development server for it that queries the same MySQL and 
>> MSSQL databases -- it hangs too at the same point. I inserted some 
>> debug output in the development server to see where it's hanging up.
>
> Not clear in the following where it is hanging. It either hangs at one 
> point or the other. Can't hang at 2 places at once, so which is it?

It hangs at the same point on both the development server and the 
production server.

>> When I don't have a Session defined, it hangs up at a section that is:
>> - a call to an API that inserts some data in a MySQL server
>> - a call to psp.redirect (which should throw an error because i've 
>> already returned stuff to the client, but it doesn't throw an error)
>
> Does psp.redirect get called or are you saying it hangs before it 
> reaches the redirect?. The beauty of python is you can jump right it 
> and change it. Stick a self.req.log_error() into the psp.redirect 
> method in psp.py and make sure it actually reaches that point if you 
> are in doubt.

I believe it is getting the the psp.redirect and hanging. As I said in 
my other post, it hangs at a different point when I enter form data 
that is bad in another way and a psp.redirect is being called.

>> Trying that API from command line by hand works like a charm, so I'm 
>> not convinced it's the API.
>> When I do have a Session defined, it hangs up on trying to import the 
>> session.
>
> Import the session or create the session? ie
> import Session
>    vs.
> sess = Session.DbmSession(req)

class BSISession(Session.DbmSession):
     def __getitem__(self, key):
         try:
             return super(BSISession, self).__getitem__(key)
         except KeyError:
             return ''

It hangs on:

sess=SignupLib.BSISession(req)

The session is not new at this point, so it's reading it from the DBM 
file.

> If you mean creating the session, it sounds like a deadlock issue. 
> There are known problems when using sessions in conjunction with psp 
> pages, where you create a session before calling a psp page which 
> contains a variable named 'session'. You'll need to manually save and 
> unlock the session before calling the psp run method.
>
> If you are on Windows there is a double whammy if you are trying to 
> use DbmSession in your handler code. The psp code will try to create a 
> new session instance but using MemorySession instead of DbmSession. 
> (It's not really Windows specific, it just that the default apache mpm 
> on Windows is threaded and so MemorySession is selected as the 
> default. And, it's is not actually a deadlock issue, but it will make 
> it appear like your session data is getting lost.)
>

Apache on Linux.

> These issues will be fixed in the soon to be released (we all hope) 
> version 3.2.
>
>> I've got a wrapper around the Session,DbmSession class which 
>> basically does nothing but return an empty string instead of raising 
>> an error if a key doesn't exist.
>
> So could this be masking some important information if an exception is 
> being raised?
>

My code is above... I think it's unlikely, but you tell me...

>> I've already cleared the dbm file, started over from scratch, and 
>> ensured that the dbm file is readable/writable by apache.
>> I cleared the semaphore array for Apache, I've restarted Apache, I've 
>> restarted MySQL, and none of it has helped...
>> Anybody have any ideas? I'm just stumped at this point. If you need 
>> code snippets or the site to test it out on, let me know. Thanks!
>
> Sorry I couldn't really help, but at least there a few more things for 
> you to think about.
>

I appreciate the feedback... but I'm afraid I'm still stuck... :-/

-jag

From listspam at flowtheory.net  Thu Jun 23 18:38:37 2005
From: listspam at flowtheory.net (Joshua Ginsberg)
Date: Thu Jun 23 18:38:22 2005
Subject: [mod_python] This is just friggin' weird...
In-Reply-To: <dbf75dc3f03a39154ea17640797605c8@flowtheory.net>
References: <f6babae41296428f7275664b5a5493e7@flowtheory.net>
	<dbf75dc3f03a39154ea17640797605c8@flowtheory.net>
Message-ID: <d33d9ac90882b70d0ea46f3083195c6d@flowtheory.net>

Okay, discovering new stuff all the time... I backed out my last 
changes to the code and it works great... the last change was that I 
added as the first line to my PSP page:

psp.set_error_page('error.psp')

When I comment this out, I get the error on psp.redirect() that I've 
already send data back to the client -- it's talking about the 
debugging code I put in to triage this issue.

Why would this make things run amok?

-jag

-------------- next part --------------
A non-text attachment was scrubbed...
Name: unknown.jpg
Type: image/jpeg
Size: 1984 bytes
Desc: not available
Url : http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20050623/39180fc7/unknown-0001.jpg
-------------- next part --------------

Joshua Ginsberg -- joshg@brainstorminternet.net
Brainstorm Internet Network Operations
970-247-1442 x131
On Jun 23, 2005, at 4:09 PM, Joshua Ginsberg wrote:

> Okay, and something else I've discovered... it appears to be hanging 
> on psp.redirect...
>
> Now, at least in my experience, psp.redirect will throw an error if 
> data has been written back out to the client when redirect() is 
> called. It's not doing that. It's just... hanging.
>
> The way I discovered this was by accident. I was testing it by 
> telnetting to port 80 and manually entering for data. I accidentally 
> left off a field, and it hung at a different place it had ever hung 
> before. At that spot, there's a psp.redirect to an error handler...
>
> So... why? I don't get it.
>
> -jag
>
> <unknown.jpg>
> Joshua Ginsberg -- joshg@brainstorminternet.net
> Brainstorm Internet Network Operations
> 970-247-1442 x131
> On Jun 23, 2005, at 10:28 AM, Joshua Ginsberg wrote:
>
>> I have an application that I developed using PSP pages. It is seven 
>> steps to sign somebody up with our company. It worked just great 
>> yesterday, this morning, it hangs going from step 1 to step 2, but 
>> only with certain input data. Nothing in any of my logs is of any 
>> use.
>>
>> I have a development server for it that queries the same MySQL and 
>> MSSQL databases -- it hangs too at the same point. I inserted some 
>> debug output in the development server to see where it's hanging up.
>>
>> When I don't have a Session defined, it hangs up at a section that is:
>> - a call to an API that inserts some data in a MySQL server
>> - a call to psp.redirect (which should throw an error because i've 
>> already returned stuff to the client, but it doesn't throw an error)
>>
>> Trying that API from command line by hand works like a charm, so I'm 
>> not convinced it's the API.
>>
>> When I do have a Session defined, it hangs up on trying to import the 
>> session. I've got a wrapper around the Session,DbmSession class which 
>> basically does nothing but return an empty string instead of raising 
>> an error if a key doesn't exist. I've already cleared the dbm file, 
>> started over from scratch, and ensured that the dbm file is 
>> readable/writable by apache.
>>
>> I cleared the semaphore array for Apache, I've restarted Apache, I've 
>> restarted MySQL, and none of it has helped...
>>
>> Anybody have any ideas? I'm just stumped at this point. If you need 
>> code snippets or the site to test it out on, let me know. Thanks!
>>
>> -jag
>>
>>
>> <unknown.jpg>
>> Joshua Ginsberg -- joshg@brainstorminternet.net
>> Brainstorm Internet Network Operations
>> 970-247-1442 x131_______________________________________________
>> Mod_python mailing list
>> Mod_python@modpython.org
>> http://mailman.modpython.org/mailman/listinfo/mod_python
From administrator at leebrown.org  Thu Jun 23 18:42:02 2005
From: administrator at leebrown.org (Lee Brown)
Date: Thu Jun 23 18:42:33 2005
Subject: [mod_python] This is just friggin' weird...
In-Reply-To: <dbf75dc3f03a39154ea17640797605c8@flowtheory.net>
Message-ID: <B4E18E122C1F@underdog>

Greetings!

I know that this is but faint help, but if psp.redirect is throwing an
error, who is (eventually) catching it? 

I had a problem once that was somewhat vaguely similar: if the application
tosses an error that none of the application's error handlers can trap and
correct, it 'percolates' its way up to the interpreter's default exception
handlers - and those try to write to sys.stderr (it says here in the Python
manual).

When the PythonDebug directive is set to "On," the error messages are
redirected to the requesting client.  When it's "Off," I have no idea where
they go (/dev/null for all I know...)

So mebbe turn Python Debug On and see what you get?

Best Regards,
Lee E. Brown
(administrator@leebrown.org)

-----Original Message-----
From: mod_python-bounces@modpython.org
[mailto:mod_python-bounces@modpython.org] On Behalf Of Joshua Ginsberg
Sent: Thursday, June 23, 2005 6:09 PM
To: Joshua Ginsberg
Cc: mod_python@modpython.org
Subject: Re: [mod_python] This is just friggin' weird...

Okay, and something else I've discovered... it appears to be hanging on
psp.redirect...

Now, at least in my experience, psp.redirect will throw an error if data has
been written back out to the client when redirect() is called. 
It's not doing that. It's just... hanging.

The way I discovered this was by accident. I was testing it by telnetting to
port 80 and manually entering for data. I accidentally left off a field, and
it hung at a different place it had ever hung before. At that spot, there's
a psp.redirect to an error handler...

So... why? I don't get it.

-jag


From listspam at flowtheory.net  Thu Jun 23 18:54:16 2005
From: listspam at flowtheory.net (Joshua Ginsberg)
Date: Thu Jun 23 18:54:01 2005
Subject: [mod_python] This is just friggin' weird...
In-Reply-To: <B4E18E122C1F@underdog>
References: <B4E18E122C1F@underdog>
Message-ID: <7d2029d94485a9bcc7c1379981a9064a@flowtheory.net>

It's been on this whole time. If there were a server error, it would 
close the connection, but it doesn't.

My guess is that the return apache.HTTP_MOVED_TEMPORARILY return code 
from psp.redirect is caught by the "try" clause in PSPInstance that 
processes psp.error_page :-/

-jag

-------------- next part --------------
A non-text attachment was scrubbed...
Name: unknown.jpg
Type: image/jpeg
Size: 1984 bytes
Desc: not available
Url : http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20050623/309368b4/unknown.jpg
-------------- next part --------------

Joshua Ginsberg -- joshg@brainstorminternet.net
Brainstorm Internet Network Operations
970-247-1442 x131
On Jun 23, 2005, at 4:42 PM, Lee Brown wrote:

> Greetings!
>
> I know that this is but faint help, but if psp.redirect is throwing an
> error, who is (eventually) catching it?
>
> I had a problem once that was somewhat vaguely similar: if the 
> application
> tosses an error that none of the application's error handlers can trap 
> and
> correct, it 'percolates' its way up to the interpreter's default 
> exception
> handlers - and those try to write to sys.stderr (it says here in the 
> Python
> manual).
>
> When the PythonDebug directive is set to "On," the error messages are
> redirected to the requesting client.  When it's "Off," I have no idea 
> where
> they go (/dev/null for all I know...)
>
> So mebbe turn Python Debug On and see what you get?
>
> Best Regards,
> Lee E. Brown
> (administrator@leebrown.org)
>
> -----Original Message-----
> From: mod_python-bounces@modpython.org
> [mailto:mod_python-bounces@modpython.org] On Behalf Of Joshua Ginsberg
> Sent: Thursday, June 23, 2005 6:09 PM
> To: Joshua Ginsberg
> Cc: mod_python@modpython.org
> Subject: Re: [mod_python] This is just friggin' weird...
>
> Okay, and something else I've discovered... it appears to be hanging on
> psp.redirect...
>
> Now, at least in my experience, psp.redirect will throw an error if 
> data has
> been written back out to the client when redirect() is called.
> It's not doing that. It's just... hanging.
>
> The way I discovered this was by accident. I was testing it by 
> telnetting to
> port 80 and manually entering for data. I accidentally left off a 
> field, and
> it hung at a different place it had ever hung before. At that spot, 
> there's
> a psp.redirect to an error handler...
>
> So... why? I don't get it.
>
> -jag
>
>
From grahamd at dscpl.com.au  Thu Jun 23 18:57:25 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Thu Jun 23 18:57:50 2005
Subject: [mod_python] This is just friggin' weird...
In-Reply-To: <d33d9ac90882b70d0ea46f3083195c6d@flowtheory.net>
References: <f6babae41296428f7275664b5a5493e7@flowtheory.net>
	<dbf75dc3f03a39154ea17640797605c8@flowtheory.net>
	<d33d9ac90882b70d0ea46f3083195c6d@flowtheory.net>
Message-ID: <2F634D42-56EC-4B7B-A3F9-0A97AD522C77@dscpl.com.au>


On 24/06/2005, at 8:38 AM, Joshua Ginsberg wrote:

> Okay, discovering new stuff all the time... I backed out my last  
> changes to the code and it works great... the last change was that  
> I added as the first line to my PSP page:
>
> psp.set_error_page('error.psp')
>
> When I comment this out, I get the error on psp.redirect() that  
> I've already send data back to the client -- it's talking about the  
> debugging code I put in to triage this issue.
>
> Why would this make things run amok?

Are you accessing the "session" object in the error page?

I have no access to mod_python source code right now to check,
but vaguely remember that if error page tries to access "session"
object it will deadlock. This is part of the reasons for having the
PSP object check if req.session exists and use it instead of creating
a new one each time, as proposed in one of the JIRA bug reports
I have posted. I'll post the JIRA link later.

Graham
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20050624/d7af4db3/attachment.html
From jg.lists at sympatico.ca  Thu Jun 23 19:14:04 2005
From: jg.lists at sympatico.ca (Jim Gallacher)
Date: Thu Jun 23 19:09:27 2005
Subject: [mod_python] This is just friggin' weird...
In-Reply-To: <2F634D42-56EC-4B7B-A3F9-0A97AD522C77@dscpl.com.au>
References: <f6babae41296428f7275664b5a5493e7@flowtheory.net>	<dbf75dc3f03a39154ea17640797605c8@flowtheory.net>	<d33d9ac90882b70d0ea46f3083195c6d@flowtheory.net>
	<2F634D42-56EC-4B7B-A3F9-0A97AD522C77@dscpl.com.au>
Message-ID: <42BB423C.4080600@sympatico.ca>

Graham Dumpleton wrote:
> 
> On 24/06/2005, at 8:38 AM, Joshua Ginsberg wrote:
> 
>> Okay, discovering new stuff all the time... I backed out my last 
>> changes to the code and it works great... the last change was that I 
>> added as the first line to my PSP page:
>>
>> psp.set_error_page('error.psp')
>>
>> When I comment this out, I get the error on psp.redirect() that I've 
>> already send data back to the client -- it's talking about the 
>> debugging code I put in to triage this issue.
>>
>> Why would this make things run amok?
> 
> 
> Are you accessing the "session" object in the error page?
> 
> I have no access to mod_python source code right now to check,
> but vaguely remember that if error page tries to access "session"
> object it will deadlock. This is part of the reasons for having the
> PSP object check if req.session exists and use it instead of creating
> a new one each time, as proposed in one of the JIRA bug reports
> I have posted. I'll post the JIRA link later.

This is solved with the req.get_session() code that I've checked into 
svn trunk. See http://issues.apache.org/jira/browse/MODPYTHON-59

Jim
From listspam at flowtheory.net  Thu Jun 23 19:23:58 2005
From: listspam at flowtheory.net (Joshua Ginsberg)
Date: Thu Jun 23 19:23:43 2005
Subject: [mod_python] This is just friggin' weird...
In-Reply-To: <2F634D42-56EC-4B7B-A3F9-0A97AD522C77@dscpl.com.au>
References: <f6babae41296428f7275664b5a5493e7@flowtheory.net>
	<dbf75dc3f03a39154ea17640797605c8@flowtheory.net>
	<d33d9ac90882b70d0ea46f3083195c6d@flowtheory.net>
	<2F634D42-56EC-4B7B-A3F9-0A97AD522C77@dscpl.com.au>
Message-ID: <7aedc6c13189abf3e09bfc1b841ae0c7@flowtheory.net>

Yes. Yes I am. I will stop doing this now. :-)

-jag

-------------- next part --------------
A non-text attachment was scrubbed...
Name: unknown.jpg
Type: image/jpeg
Size: 1984 bytes
Desc: not available
Url : http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20050623/73982e65/unknown.jpg
-------------- next part --------------

Joshua Ginsberg -- joshg@brainstorminternet.net
Brainstorm Internet Network Operations
970-247-1442 x131
On Jun 23, 2005, at 4:57 PM, Graham Dumpleton wrote:

>
> On 24/06/2005, at 8:38 AM, Joshua Ginsberg wrote:
>
>> Okay, discovering new stuff all the time... I backed out my last 
>> changes to the code and it works great... the last change was that I 
>> added as the first line to my PSP page:
>>
>> psp.set_error_page('error.psp')
>>
>> When I comment this out, I get the error on psp.redirect() that I've 
>> already send data back to the client -- it's talking about the 
>> debugging code I put in to triage this issue.
>>
>> Why would this make things run amok?
> Are you accessing the "session" object in the error page?
>
> I have no access to mod_python source code right now to check,
> but vaguely remember that if error page tries to access "session"
> object it will deadlock. This is part of the reasons for having the
> PSP object check if req.session exists and use it instead of creating
> a new one each time, as proposed in one of the JIRA bug reports
> I have posted. I'll post the JIRA link later.
>
> Graham
From listspam at flowtheory.net  Thu Jun 23 19:26:11 2005
From: listspam at flowtheory.net (Joshua Ginsberg)
Date: Thu Jun 23 19:25:55 2005
Subject: [mod_python] This is just friggin' weird...
In-Reply-To: <2F634D42-56EC-4B7B-A3F9-0A97AD522C77@dscpl.com.au>
References: <f6babae41296428f7275664b5a5493e7@flowtheory.net>
	<dbf75dc3f03a39154ea17640797605c8@flowtheory.net>
	<d33d9ac90882b70d0ea46f3083195c6d@flowtheory.net>
	<2F634D42-56EC-4B7B-A3F9-0A97AD522C77@dscpl.com.au>
Message-ID: <700ca93c227306c1e0df7100de6fa35d@flowtheory.net>

BTW, isn't it a bug if psp.redirect invokes the page specified by 
psp.set_error_page?

-jag

-------------- next part --------------
A non-text attachment was scrubbed...
Name: unknown.jpg
Type: image/jpeg
Size: 1984 bytes
Desc: not available
Url : http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20050623/0047e65f/unknown-0001.jpg
-------------- next part --------------

Joshua Ginsberg -- joshg@brainstorminternet.net
Brainstorm Internet Network Operations
970-247-1442 x131
On Jun 23, 2005, at 4:57 PM, Graham Dumpleton wrote:

>
> On 24/06/2005, at 8:38 AM, Joshua Ginsberg wrote:
>
>> Okay, discovering new stuff all the time... I backed out my last 
>> changes to the code and it works great... the last change was that I 
>> added as the first line to my PSP page:
>>
>> psp.set_error_page('error.psp')
>>
>> When I comment this out, I get the error on psp.redirect() that I've 
>> already send data back to the client -- it's talking about the 
>> debugging code I put in to triage this issue.
>>
>> Why would this make things run amok?
> Are you accessing the "session" object in the error page?
>
> I have no access to mod_python source code right now to check,
> but vaguely remember that if error page tries to access "session"
> object it will deadlock. This is part of the reasons for having the
> PSP object check if req.session exists and use it instead of creating
> a new one each time, as proposed in one of the JIRA bug reports
> I have posted. I'll post the JIRA link later.
>
> Graham
From grahamd at dscpl.com.au  Thu Jun 23 20:09:46 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Thu Jun 23 20:09:56 2005
Subject: [mod_python] This is just friggin' weird...
Message-ID: <1119571786.12367@dscpl.user.openhosting.com>

Joshua Ginsberg wrote ..
> BTW, isn't it a bug if psp.redirect invokes the page specified by 
> psp.set_error_page?

The code in question is:

            try:
                exec code in global_scope
                req.flush()
                
                # the mere instantiation of a session changes it
                # (access time), so it *always* has to be saved
                if session is not None:
                    session.save()
            except:
                et, ev, etb = sys.exc_info()
                if psp.error_page:
                    # run error page
                    psp.error_page.run({"exception": (et, ev, etb)})
                else:
                    raise et, ev, etb


One might say that it would make more sense if the exception
raised is apache.SERVER_RETURN that it should pass it back
immediately and not call the error page, but then some people
might want customised error pages for actual HTTP errors.

Anyone else got any thoughts about it?

Graham
From administrator at leebrown.org  Thu Jun 23 22:40:14 2005
From: administrator at leebrown.org (Lee Brown)
Date: Thu Jun 23 22:40:46 2005
Subject: [mod_python] This is just friggin' weird...
In-Reply-To: <700ca93c227306c1e0df7100de6fa35d@flowtheory.net>
Message-ID: <B5BB94005AD4@underdog>

 
It depends.  If it's in the documentation, it's called a "feature."

Nyuk-Nyuk-Nyuk!

Best Regards,
Lee E. Brown
(administrator@leebrown.org)

-----Original Message-----
From: mod_python-bounces@modpython.org
[mailto:mod_python-bounces@modpython.org] On Behalf Of Joshua Ginsberg
Sent: Thursday, June 23, 2005 7:26 PM
To: Graham Dumpleton
Cc: mod_python@modpython.org
Subject: Re: [mod_python] This is just friggin' weird...

BTW, isn't it a bug if psp.redirect invokes the page specified by
psp.set_error_page?

-jag


From grahamd at dscpl.com.au  Fri Jun 24 06:27:40 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Fri Jun 24 06:27:53 2005
Subject: [mod_python] This is just friggin' weird...
In-Reply-To: <42BB423C.4080600@sympatico.ca>
References: <f6babae41296428f7275664b5a5493e7@flowtheory.net>	<dbf75dc3f03a39154ea17640797605c8@flowtheory.net>	<d33d9ac90882b70d0ea46f3083195c6d@flowtheory.net>
	<2F634D42-56EC-4B7B-A3F9-0A97AD522C77@dscpl.com.au>
	<42BB423C.4080600@sympatico.ca>
Message-ID: <717e3515dcafa1b6f464580115f29488@dscpl.com.au>


On 24/06/2005, at 9:14 AM, Jim Gallacher wrote:
>> Are you accessing the "session" object in the error page?
>> I have no access to mod_python source code right now to check,
>> but vaguely remember that if error page tries to access "session"
>> object it will deadlock. This is part of the reasons for having the
>> PSP object check if req.session exists and use it instead of creating
>> a new one each time, as proposed in one of the JIRA bug reports
>> I have posted. I'll post the JIRA link later.
>
> This is solved with the req.get_session() code that I've checked
> into svn trunk. See http://issues.apache.org/jira/browse/MODPYTHON-59

I can't refer to the JIRA bug report at the moment as JIRA is broken,
but you might want to look at some of my comments if you can find the
bug report related to psp and form objects. It talks about the session
object in there as well and one of the issues I pointed out is whether
when the PSP object doesn't create the session in the first place,
should it assume that it should save the session. With the way you
have made the change, the PSP object will save the session even if
it didn't create it in the first place. Am not sure if this is the
appropriate thing to do or not.

Graham

From jg.lists at sympatico.ca  Fri Jun 24 08:36:45 2005
From: jg.lists at sympatico.ca (Jim Gallacher)
Date: Fri Jun 24 08:32:05 2005
Subject: [mod_python] This is just friggin' weird...
In-Reply-To: <717e3515dcafa1b6f464580115f29488@dscpl.com.au>
References: <f6babae41296428f7275664b5a5493e7@flowtheory.net>	<dbf75dc3f03a39154ea17640797605c8@flowtheory.net>	<d33d9ac90882b70d0ea46f3083195c6d@flowtheory.net>	<2F634D42-56EC-4B7B-A3F9-0A97AD522C77@dscpl.com.au>	<42BB423C.4080600@sympatico.ca>
	<717e3515dcafa1b6f464580115f29488@dscpl.com.au>
Message-ID: <42BBFE5D.8040308@sympatico.ca>

Graham Dumpleton wrote:
> 
> On 24/06/2005, at 9:14 AM, Jim Gallacher wrote:
> 
>>> Are you accessing the "session" object in the error page?
>>> I have no access to mod_python source code right now to check,
>>> but vaguely remember that if error page tries to access "session"
>>> object it will deadlock. This is part of the reasons for having the
>>> PSP object check if req.session exists and use it instead of creating
>>> a new one each time, as proposed in one of the JIRA bug reports
>>> I have posted. I'll post the JIRA link later.
>>
>>
>> This is solved with the req.get_session() code that I've checked
>> into svn trunk. See http://issues.apache.org/jira/browse/MODPYTHON-59
> 
> 
> I can't refer to the JIRA bug report at the moment as JIRA is broken,
> but you might want to look at some of my comments if you can find the
> bug report related to psp and form objects. It talks about the session
> object in there as well and one of the issues I pointed out is whether
> when the PSP object doesn't create the session in the first place,
> should it assume that it should save the session. With the way you
> have made the change, the PSP object will save the session even if
> it didn't create it in the first place. Am not sure if this is the
> appropriate thing to do or not.
> 

I'm familiar with the issue you mention. The only change I've made in 
the PSP class is to replace "session = Session.Session()" with "session 
= req.get_session()". Other than that the behaviour is identical to 3.1.4.

So the question is really whether the current behaviour of psp pages 
should change. I totally get what you are saying about auto-saving. The 
problem is if we change it now we'll likely break existing code. I can 
see the "Hey, I upgraded to 3.2 and now my sessions don't work" messages 
already.

Using req.get_sessions() addresses 2 issues:

1. Gets the current session instance if it exists, thus avoiding 
deadlock problems. The user is no longer forced to call sess.save() 
before calling PSP.run(), which makes their code simpler, as well as 
improving performance for any session class that uses the disk for 
persistence.

2. Creates a new session instance of *the correct type*, assuming a 
session class has be defined with PythonOption. This is bug in the 
current code, where a user could create a session in their code with 
something other than the default session class for their platform, for 
example "sess = Session.FileSession(req)". If psp needs to create a 
session it will be DbmSession on some platforms, and so the session data 
will be lost. Although now that I think about it, I wonder why I didn't 
just modify Session.Session to handle this part...  Hmm, I'll have to 
look at my notes.

And misses these issues:
3. Should the session automatically be saved in psp run()?
    Yes: - it's the current behavoiur
         - using sessions with psp pages is transparent
         - the user does not need to remember to do this
    No:  - the code monkey has less control over their application
         - ?
    Maybe we just need a attribute in the session to enable/disable 
saving? Default would be to save the session.

4. Should the session be unlocked in psp run()?
    Yes: - it's the current behavoiur
    No:  - since we are now passing around the session instance with the 
request, the session will be unlocked when the request is completed.

Regards,
Jim
From elim at elinkage.net  Fri Jun 24 08:46:42 2005
From: elim at elinkage.net (Elim Qiu)
Date: Fri Jun 24 08:47:01 2005
Subject: [mod_python] mptest.py test
References: <200506232238.j5NMcnnJ018865@modpython.org>
Message-ID: <00a501c578ba$c5fba260$0102a8c0@grace>

After installed mod_python (apache 2.0.54, python
2.3.5,mod_python-3.1.3.win32-py2.3.exe),
Instead "Hello World!", IE displays the whole code for the url
http://localost/mptest.py:
from mod_python import apache

def hello(req):
    req.write("Hello World!")
    return apache.OKI tried other version of apache with corresponding
mod_python, no differences.Please help. Thanks


From grahamd at dscpl.com.au  Fri Jun 24 08:58:02 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Fri Jun 24 08:58:16 2005
Subject: [mod_python] This is just friggin' weird...
In-Reply-To: <42BBFE5D.8040308@sympatico.ca>
References: <f6babae41296428f7275664b5a5493e7@flowtheory.net>	<dbf75dc3f03a39154ea17640797605c8@flowtheory.net>	<d33d9ac90882b70d0ea46f3083195c6d@flowtheory.net>	<2F634D42-56EC-4B7B-A3F9-0A97AD522C77@dscpl.com.au>	<42BB423C.4080600@sympatico.ca>
	<717e3515dcafa1b6f464580115f29488@dscpl.com.au>
	<42BBFE5D.8040308@sympatico.ca>
Message-ID: <fc86463d832afeb02b8e0131bcc5f1f0@dscpl.com.au>


On 24/06/2005, at 10:36 PM, Jim Gallacher wrote:
> And misses these issues:
> 3. Should the session automatically be saved in psp run()?
>    Yes: - it's the current behavoiur
>         - using sessions with psp pages is transparent
>         - the user does not need to remember to do this
>    No:  - the code monkey has less control over their application
>         - ?
>    Maybe we just need a attribute in the session to enable/disable 
> saving? Default would be to save the session.
>
> 4. Should the session be unlocked in psp run()?
>    Yes: - it's the current behavoiur
>    No:  - since we are now passing around the session instance with 
> the request, the session will be unlocked when the request is 
> completed.

Am not suggesting that the behaviour of PSP object be changed for where 
it
is triggered from mod_python.psp, that would stay the same to ensure
compatibility. Am thinking more about the situation where someone is
using PSP object explicitly from a publisher handler to render HTML.

As it stands at the moment, if publisher code created a session object
and the PSP page accesses "session", you will get a deadlock. This means
that in practice no one is doing this at the moment. Thus, one could 
have:

         session = None
         session_created = False
         if "session" in code.co_names:
             if not hasattr(req,"session") or req.session is None:
                 session_created = True
             session = req.get_session()

         ....

                 if session is not None and session_created:
                     session.save()

         finally:
             if session is not None and session_created:
                     session.unlock()

In other words, if created by PSP object, still save it and unlock it.
If created externally, assume that code that triggered creation of it
will also ensure it is saved as well and unlock if appropriate.

Only problem with this is that req.get_session() hides the real session
object and there isn't a way to tell if it has already been created.
Ie., above assumes that "session" attribute stores the Session object
instance or provides access to it which doesn't current occur.

Thus, you might want to consider adding to request_rec_mbrs a hook for
getting access to the session object so one can tell if it has already 
been
created, or have a member function that can be called to query whether
session exists yet.

Graham

From grahamd at dscpl.com.au  Fri Jun 24 08:59:59 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Fri Jun 24 09:00:18 2005
Subject: [mod_python] mptest.py test
In-Reply-To: <00a501c578ba$c5fba260$0102a8c0@grace>
References: <200506232238.j5NMcnnJ018865@modpython.org>
	<00a501c578ba$c5fba260$0102a8c0@grace>
Message-ID: <990b4883cff6452611a12d0ed9a9860e@dscpl.com.au>


On 24/06/2005, at 10:46 PM, Elim Qiu wrote:

> After installed mod_python (apache 2.0.54, python
> 2.3.5,mod_python-3.1.3.win32-py2.3.exe),
> Instead "Hello World!", IE displays the whole code for the url
> http://localost/mptest.py:
> from mod_python import apache
>
> def hello(req):
>     req.write("Hello World!")
>     return apache.OKI tried other version of apache with corresponding
> mod_python, no differences.Please help. Thanks

Read through:

   http://www.dscpl.com.au/projects/vampire/articles/modpython-001.html

and follow its suggestions.

Graham

From jg.lists at sympatico.ca  Fri Jun 24 10:28:01 2005
From: jg.lists at sympatico.ca (Jim Gallacher)
Date: Fri Jun 24 10:23:22 2005
Subject: [mod_python] mptest.py test
In-Reply-To: <990b4883cff6452611a12d0ed9a9860e@dscpl.com.au>
References: <200506232238.j5NMcnnJ018865@modpython.org>	<00a501c578ba$c5fba260$0102a8c0@grace>
	<990b4883cff6452611a12d0ed9a9860e@dscpl.com.au>
Message-ID: <42BC1871.2000501@sympatico.ca>

Graham Dumpleton wrote:
> 
> On 24/06/2005, at 10:46 PM, Elim Qiu wrote:
> 
>> After installed mod_python (apache 2.0.54, python
>> 2.3.5,mod_python-3.1.3.win32-py2.3.exe),
>> Instead "Hello World!", IE displays the whole code for the url
>> http://localost/mptest.py:
>> from mod_python import apache
>>
>> def hello(req):
>>     req.write("Hello World!")
>>     return apache.OKI tried other version of apache with corresponding
>> mod_python, no differences.Please help. Thanks
> 
> 
> Read through:
> 
>   http://www.dscpl.com.au/projects/vampire/articles/modpython-001.html
> 

Nice. Any objections if I add this to the mod_python docs Graham?

Regards,
Jim
From listspam at flowtheory.net  Fri Jun 24 10:46:07 2005
From: listspam at flowtheory.net (Joshua Ginsberg)
Date: Fri Jun 24 10:45:53 2005
Subject: [mod_python] This is just friggin' weird...
In-Reply-To: <1119571786.12367@dscpl.user.openhosting.com>
References: <1119571786.12367@dscpl.user.openhosting.com>
Message-ID: <32ed4521781c79f9af88fd5f2b2189da@flowtheory.net>

It's a bit hacky, but perhaps the way to keep everybody happy is that 
if the error is SERVER_RETURN and the return code is < 400, the error 
page should not be called; however if the error is other than 
SERVER_RETURN or the http return code >= 400, the error page is 
invoked.

-jag

-------------- next part --------------
A non-text attachment was scrubbed...
Name: unknown.jpg
Type: image/jpeg
Size: 1984 bytes
Desc: not available
Url : http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20050624/ff20a631/unknown-0001.jpg
-------------- next part --------------

Joshua Ginsberg -- joshg@brainstorminternet.net
Brainstorm Internet Network Operations
970-247-1442 x131
On Jun 23, 2005, at 6:09 PM, Graham Dumpleton wrote:

> Joshua Ginsberg wrote ..
>> BTW, isn't it a bug if psp.redirect invokes the page specified by
>> psp.set_error_page?
>
> The code in question is:
>
>             try:
>                 exec code in global_scope
>                 req.flush()
>
>                 # the mere instantiation of a session changes it
>                 # (access time), so it *always* has to be saved
>                 if session is not None:
>                     session.save()
>             except:
>                 et, ev, etb = sys.exc_info()
>                 if psp.error_page:
>                     # run error page
>                     psp.error_page.run({"exception": (et, ev, etb)})
>                 else:
>                     raise et, ev, etb
>
>
> One might say that it would make more sense if the exception
> raised is apache.SERVER_RETURN that it should pass it back
> immediately and not call the error page, but then some people
> might want customised error pages for actual HTTP errors.
>
> Anyone else got any thoughts about it?
>
> Graham
>
From jg.lists at sympatico.ca  Fri Jun 24 11:33:53 2005
From: jg.lists at sympatico.ca (Jim Gallacher)
Date: Fri Jun 24 11:29:13 2005
Subject: [mod_python] session and psp (Was This is just friggin' weird...)
In-Reply-To: <fc86463d832afeb02b8e0131bcc5f1f0@dscpl.com.au>
References: <f6babae41296428f7275664b5a5493e7@flowtheory.net>	<dbf75dc3f03a39154ea17640797605c8@flowtheory.net>	<d33d9ac90882b70d0ea46f3083195c6d@flowtheory.net>	<2F634D42-56EC-4B7B-A3F9-0A97AD522C77@dscpl.com.au>	<42BB423C.4080600@sympatico.ca>
	<717e3515dcafa1b6f464580115f29488@dscpl.com.au>
	<42BBFE5D.8040308@sympatico.ca>
	<fc86463d832afeb02b8e0131bcc5f1f0@dscpl.com.au>
Message-ID: <42BC27E1.5010405@sympatico.ca>

Graham Dumpleton wrote:
> 
> On 24/06/2005, at 10:36 PM, Jim Gallacher wrote:
> 
>> And misses these issues:
>> 3. Should the session automatically be saved in psp run()?
>>    Yes: - it's the current behavoiur
>>         - using sessions with psp pages is transparent
>>         - the user does not need to remember to do this
>>    No:  - the code monkey has less control over their application
>>         - ?
>>    Maybe we just need a attribute in the session to enable/disable 
>> saving? Default would be to save the session.
>>
>> 4. Should the session be unlocked in psp run()?
>>    Yes: - it's the current behavoiur
>>    No:  - since we are now passing around the session instance with 
>> the request, the session will be unlocked when the request is completed.
> 
> 
> Am not suggesting that the behaviour of PSP object be changed for where it
> is triggered from mod_python.psp, that would stay the same to ensure
> compatibility. Am thinking more about the situation where someone is
> using PSP object explicitly from a publisher handler to render HTML.
> 
> As it stands at the moment, if publisher code created a session object
> and the PSP page accesses "session", you will get a deadlock. This means
> that in practice no one is doing this at the moment. Thus, one could have:
> 
>         session = None
>         session_created = False
>         if "session" in code.co_names:
>             if not hasattr(req,"session") or req.session is None:
>                 session_created = True
>             session = req.get_session()
> 
>         ....
> 
>                 if session is not None and session_created:
>                     session.save()
> 
>         finally:
>             if session is not None and session_created:
>                     session.unlock()
> 
> In other words, if created by PSP object, still save it and unlock it.
> If created externally, assume that code that triggered creation of it
> will also ensure it is saved as well and unlock if appropriate.

Makes sense. There is still a problem where a user is keeping a 
reference to their session in the request object but using a name other 
than session as the key. eg. req.sess = Session.Session(). Oops, 
deadlock. No easy solution to that other than documenting it.

> Only problem with this is that req.get_session() hides the real session
> object and there isn't a way to tell if it has already been created.
> Ie., above assumes that "session" attribute stores the Session object
> instance or provides access to it which doesn't current occur.
> Thus, you might want to consider adding to request_rec_mbrs a hook for
> getting access to the session object so one can tell if it has already been
> created, or have a member function that can be called to query whether
> session exists yet.

I had considered using getreq_recmbr/setreq_recmbr for managing sessions 
but rejected it because of concern about breaking existing user code. It 
may seem obvious that people would only save a session instance in 
something called req.session, but I'm never suprised by the strange 
things people do. You just know that someone is using req.session for 
something else, like the session id, or their mother's maiden name.

I do see a need for a way to test of the existence of a session with 
something like req.session_exists(). Go too far done that road though 
and we end up with get_session, set_sesssion and session_exists methods, 
which is becoming rather ugly. What I really need to do is put together 
a document which outlines the goals for the new session management 
mechanism, and throw it out there for a wider discussion. The code to 
handle all this is pretty simple, so it won't really delay the release 
of 3.2 if changes are required.

Regards,
Jim









From jg.lists at sympatico.ca  Fri Jun 24 11:52:22 2005
From: jg.lists at sympatico.ca (Jim Gallacher)
Date: Fri Jun 24 11:47:46 2005
Subject: [mod_python] session and psp (Was This is just friggin' weird...)
In-Reply-To: <42BC27E1.5010405@sympatico.ca>
References: <f6babae41296428f7275664b5a5493e7@flowtheory.net>	<dbf75dc3f03a39154ea17640797605c8@flowtheory.net>	<d33d9ac90882b70d0ea46f3083195c6d@flowtheory.net>	<2F634D42-56EC-4B7B-A3F9-0A97AD522C77@dscpl.com.au>	<42BB423C.4080600@sympatico.ca>	<717e3515dcafa1b6f464580115f29488@dscpl.com.au>	<42BBFE5D.8040308@sympatico.ca>	<fc86463d832afeb02b8e0131bcc5f1f0@dscpl.com.au>
	<42BC27E1.5010405@sympatico.ca>
Message-ID: <42BC2C36.9020309@sympatico.ca>

Jim Gallacher wrote:
> Graham Dumpleton wrote:
> 
>>
>> On 24/06/2005, at 10:36 PM, Jim Gallacher wrote:
>>
>>> And misses these issues:
>>> 3. Should the session automatically be saved in psp run()?
>>>    Yes: - it's the current behavoiur
>>>         - using sessions with psp pages is transparent
>>>         - the user does not need to remember to do this
>>>    No:  - the code monkey has less control over their application
>>>         - ?
>>>    Maybe we just need a attribute in the session to enable/disable 
>>> saving? Default would be to save the session.
>>>
>>> 4. Should the session be unlocked in psp run()?
>>>    Yes: - it's the current behavoiur
>>>    No:  - since we are now passing around the session instance with 
>>> the request, the session will be unlocked when the request is completed.
>>
>>
>>
>> Am not suggesting that the behaviour of PSP object be changed for 
>> where it
>> is triggered from mod_python.psp, that would stay the same to ensure
>> compatibility. Am thinking more about the situation where someone is
>> using PSP object explicitly from a publisher handler to render HTML.
>>
>> As it stands at the moment, if publisher code created a session object
>> and the PSP page accesses "session", you will get a deadlock. This means
>> that in practice no one is doing this at the moment. Thus, one could 
>> have:
>>
>>         session = None
>>         session_created = False
>>         if "session" in code.co_names:
>>             if not hasattr(req,"session") or req.session is None:
>>                 session_created = True
>>             session = req.get_session()
>>
>>         ....
>>
>>                 if session is not None and session_created:
>>                     session.save()
>>
>>         finally:
>>             if session is not None and session_created:
>>                     session.unlock()
>>
>> In other words, if created by PSP object, still save it and unlock it.
>> If created externally, assume that code that triggered creation of it
>> will also ensure it is saved as well and unlock if appropriate.
> 
> 
> Makes sense. There is still a problem where a user is keeping a 
> reference to their session in the request object but using a name other 
> than session as the key. eg. req.sess = Session.Session(). Oops, 
> deadlock. No easy solution to that other than documenting it.
> 
>> Only problem with this is that req.get_session() hides the real session
>> object and there isn't a way to tell if it has already been created.
>> Ie., above assumes that "session" attribute stores the Session object
>> instance or provides access to it which doesn't current occur.
>> Thus, you might want to consider adding to request_rec_mbrs a hook for
>> getting access to the session object so one can tell if it has already 
>> been
>> created, or have a member function that can be called to query whether
>> session exists yet.
> 
> 
> I had considered using getreq_recmbr/setreq_recmbr for managing sessions 
> but rejected it because of concern about breaking existing user code. It 
> may seem obvious that people would only save a session instance in 
> something called req.session, but I'm never suprised by the strange 
> things people do. You just know that someone is using req.session for 
> something else, like the session id, or their mother's maiden name.
> 
> I do see a need for a way to test of the existence of a session with 
> something like req.session_exists(). Go too far done that road though 
> and we end up with get_session, set_sesssion and session_exists methods, 
> which is becoming rather ugly. What I really need to do is put together 
> a document which outlines the goals for the new session management 
> mechanism, and throw it out there for a wider discussion. The code to 
> handle all this is pretty simple, so it won't really delay the release 
> of 3.2 if changes are required.

After thinking about this for another 10 minutes, I'm starting to think 
getreq_recmbr/setreq_recmbr might be the better way. The psp code could 
check if req.session is a subclass of BaseSession to make sure there are 
no unintended consequences. And people really wouldn't save their 
mother's maiden name in req.session, right?  RIGHT??? ;)

Regards,
Jim



From grahamd at dscpl.com.au  Fri Jun 24 18:28:56 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Fri Jun 24 18:29:05 2005
Subject: [mod_python] mptest.py test
In-Reply-To: <42BC1871.2000501@sympatico.ca>
References: <200506232238.j5NMcnnJ018865@modpython.org>	<00a501c578ba$c5fba260$0102a8c0@grace>
	<990b4883cff6452611a12d0ed9a9860e@dscpl.com.au>
	<42BC1871.2000501@sympatico.ca>
Message-ID: <d3e2264bde4c3910a466ab2f599ad230@dscpl.com.au>


On 25/06/2005, at 12:28 AM, Jim Gallacher wrote:

> Graham Dumpleton wrote:
>> On 24/06/2005, at 10:46 PM, Elim Qiu wrote:
>>> After installed mod_python (apache 2.0.54, python
>>> 2.3.5,mod_python-3.1.3.win32-py2.3.exe),
>>> Instead "Hello World!", IE displays the whole code for the url
>>> http://localost/mptest.py:
>>> from mod_python import apache
>>>
>>> def hello(req):
>>>     req.write("Hello World!")
>>>     return apache.OKI tried other version of apache with 
>>> corresponding
>>> mod_python, no differences.Please help. Thanks
>> Read through:
>>   http://www.dscpl.com.au/projects/vampire/articles/modpython-001.html
>
> Nice. Any objections if I add this to the mod_python docs Graham?

By all means add a link, not the actual content though as I update it
occasionally to add more stuff when I see the strange things people
try and thus where it has to be explained why that scenario may not
work as well.

This has been out there for a few months now and I have referred to
it a fair bit, so am surprised you have only just seen it.

Graham

From tusharpatil1982 at rediffmail.com  Sat Jun 25 08:57:32 2005
From: tusharpatil1982 at rediffmail.com (tushar liladhar patil)
Date: Sat Jun 25 08:56:07 2005
Subject: [mod_python] Error in making .exe from .py file
Message-ID: <20050625125732.26781.qmail@mailweb34.rediffmail.com>

 ?
Hi friends,
         I want to make an .exe file from .py file using py2exe but it is giving me an error like:

The following modules appear to be missing
['gdk', 'ltihooks', 'sitecustomize']
when i tried to run it.

Also I had tried for 'exemaker' but it will not run by dubble clicking it is giving an error 'python.exe' not found. for that i have to copy python.exe to my folder. If i run it from console just by typing 'filename' it will run perfectly without copping the python.exe file.

please do the needfull...

Thanking you,
Tushar.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20050625/5c151c96/attachment.html
From miffe-miffe at telia.com  Sat Jun 25 10:03:44 2005
From: miffe-miffe at telia.com (Mikael Eriksson)
Date: Sat Jun 25 10:03:49 2005
Subject: [mod_python] Error in making .exe from .py file
In-Reply-To: <20050625125732.26781.qmail@mailweb34.rediffmail.com>
References: <20050625125732.26781.qmail@mailweb34.rediffmail.com>
Message-ID: <42BD6440.2030605@telia.com>

tushar liladhar patil wrote:
>  
> Hi friends,
>         I want to make an .exe file from .py file using py2exe but it is 
> giving me an error like:
> 
> The following modules appear to be missing
> ['gdk', 'ltihooks', 'sitecustomize']
> when i tried to run it.

You have to exclude the packages gtk,gobject and pango.
and the copy them manually to the library.zip
and put the .pyd file outside the zip.

> Also I had tried for 'exemaker' but it will not run by dubble clicking 
> it is giving an error 'python.exe' not found. for that i have to copy 
> python.exe to my folder. If i run it from console just by typing 
> 'filename' it will run perfectly without copping the python.exe file.
> 
> please do the needfull...
> 
> Thanking you,
> Tushar.
> 
> 
> 
> <http://clients.rediff.com/signature/track_sig.asp>
> 
> 
> ------------------------------------------------------------------------
> 
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python

From gnulife at gmail.com  Sat Jun 25 10:03:58 2005
From: gnulife at gmail.com (GNULife)
Date: Sat Jun 25 10:04:08 2005
Subject: [mod_python] a problem about mod_python.publisher
Message-ID: <42BD644E.9010804@gmail.com>

I use mod_python.publisher,my apache's setting as is:

DirectoryIndex index.html index.html.var index.htm index.php index.py

<Directory E:/Program/website>
SetHandler mod_python
PythonHandler mod_python.publisher
PythonDebug On
</Directory>

And I create a file named: E:\Program\website\index.py

import os

def main():
return "Hello"

Now I can get "Hello" from http://localhost/main , but I want to get
"Hello" from http://localhost/ ,how to do it?
From nicolas.lehuen at gmail.com  Sat Jun 25 10:07:43 2005
From: nicolas.lehuen at gmail.com (Nicolas Lehuen)
Date: Sat Jun 25 10:07:49 2005
Subject: [mod_python] Error in making .exe from .py file
In-Reply-To: <20050625125732.26781.qmail@mailweb34.rediffmail.com>
References: <20050625125732.26781.qmail@mailweb34.rediffmail.com>
Message-ID: <c298f2d70506250707775c073f@mail.gmail.com>

Hi Tushar,

You can ask this question to the py2exe mailing list, as explained here :

http://starship.python.net/crew/theller/py2exe/

py2exe have nothing remotely related to mod_python (apart from Python,
of course)...

Regards,
Nicolas

25 Jun 2005 12:57:32 -0000, tushar liladhar patil
<tusharpatil1982@rediffmail.com>:
> 
> 
>    
>  Hi friends,
>          I want to make an .exe file from .py file using py2exe but it is
> giving me an error like:
>  
>  The following modules appear to be missing
>  ['gdk', 'ltihooks', 'sitecustomize']
>  when i tried to run it.
>  
>  Also I had tried for 'exemaker' but it will not run by dubble clicking it
> is giving an error 'python.exe' not found. for that i have to copy
> python.exe to my folder. If i run it from console just by typing 'filename'
> it will run perfectly without copping the python.exe file.
>  
>  please do the needfull...
>  
>  Thanking you,
>  Tushar. 
> 
>  
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
> 
> 
>

From nicolas.lehuen at gmail.com  Sat Jun 25 10:12:42 2005
From: nicolas.lehuen at gmail.com (Nicolas Lehuen)
Date: Sat Jun 25 10:12:47 2005
Subject: [mod_python] a problem about mod_python.publisher
In-Reply-To: <42BD644E.9010804@gmail.com>
References: <42BD644E.9010804@gmail.com>
Message-ID: <c298f2d70506250712445075ea@mail.gmail.com>

Hi,

You should give your function the name 'index', not 'main'.

Regards,
Nicolas

2005/6/25, GNULife <gnulife@gmail.com>:
> I use mod_python.publisher,my apache's setting as is:
> 
> DirectoryIndex index.html index.html.var index.htm index.php index.py
> 
> <Directory E:/Program/website>
> SetHandler mod_python
> PythonHandler mod_python.publisher
> PythonDebug On"
> </Directory>
> 
> And I create a file named: E:\Program\website\index.py
> 
> import os
> 
> def main():
> return "Hello"
> 
> Now I can get "Hello" from http://localhost/main , but I want to get
> "Hello" from http://localhost/ ,how to do it?
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>

From gnulife at gmail.com  Sat Jun 25 13:29:44 2005
From: gnulife at gmail.com (GNULife)
Date: Sat Jun 25 13:29:55 2005
Subject: [mod_python] Error About Mod_python.Publisher
Message-ID: <42BD9488.3020504@gmail.com>

I wrote some code, and it can return the exact result when I run it in
python shell. but I when run it in mod_python.publisher, it failed. the
detail message of error,please open the attachment
picture(ErrorAboutPublisher.gif).
-------------- next part --------------
A non-text attachment was scrubbed...
Name: ErrorAboutPublisher.gif
Type: image/gif
Size: 21154 bytes
Desc: not available
Url : http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20050626/fb9fd722/ErrorAboutPublisher-0001.gif
From paul at doublegemini.com  Sat Jun 25 14:36:21 2005
From: paul at doublegemini.com (Paul Sholtz)
Date: Sat Jun 25 14:36:26 2005
Subject: [mod_python] Problems with mod_python on MacOS
Message-ID: <B2141E17-9FE7-4143-9FCD-6F3E251CEA08@doublegemini.com>

Hi, I'm trying to get mod_python to run on the following system:

(*) MacOS 10.4
(*) Apache 2.0.54
(*) mod_python 3.1.4
(*) Python 2.3.5

I've tried getting it to work w/ the mod_python handler configured as  
both (a) an . htaccess file; and (b) in the general httpd.conf file  
for all of Apache. I'm trying to get the mptest.py "demo" that's  
described in the mod_python documentation to work. Every time I try  
to access the mptest.py file through my Web browser, I get a HTTP 500  
"Internal Server Error".. Since the "sig" on my Apache error notice  
includes the line:

Apache/2.0.54 (Unix) mod_python/3.1.4 Python/2.3.5 Server at  
localhost Port 80

and since in my error_log I have a line (when I restart apache) to  
the effect of:

[notice] Apache/2.0.54 (Unix) mod_python/3.1.4 Python/2.3.5  
configured -- resuming normal operations

I'm *assuming* that Apache is able to find mod_python and load it  
correctly.

I've checked permissions on my .py files, and they're all set to 777,  
so I assume that Apache can read and load and execute those files,  
and do what not else it needs to. I have noticed, however, that  
Apache never "loads" or "compiles" those files down into .pyc files.  
Perhaps this could be part of the problem?

I've gotten mod_python to run before on a FreeBSD system, although  
that was w/ slightly different versions of apache/mod_python/python,  
and granted MacOS isn't *quite* FreeBSD either..

Any ideas???

From jg.lists at sympatico.ca  Sat Jun 25 17:43:45 2005
From: jg.lists at sympatico.ca (Jim Gallacher)
Date: Sat Jun 25 17:39:05 2005
Subject: [mod_python] Any LaTex gurus here?
Message-ID: <42BDD011.8080708@sympatico.ca>

I'm trying to generate the mod_python documentation, but finding some
slight weirdness in the index that is created. I'm hoping someone here
may have be able to offer some insight before I wander off elsewhere in
search of an answer.

OS: Debian unstable
TeTex version: 2.0.2
Python src: 2.3.5

This does not work (it ignores the \longprogramopt):

   \indexii{./configure}{\longprogramopt{with-apxs}}

Output:

<a href="inst-configure.html#l2h-6">\longprogramoptwith-apxs</a>


But this alternate form does work:

   \index{./configure!\longprogramopt{with-apxs}}

Output:

<a href="inst-configure.html#l2h-6"><b
class="programopt">--with-apxs</b></a>

Any ideas what may be wrong?

Regards,
Jim


From nick at dd.revealed.net  Sat Jun 25 18:06:31 2005
From: nick at dd.revealed.net (Nick)
Date: Sat Jun 25 18:06:49 2005
Subject: [mod_python] Any LaTex gurus here?
In-Reply-To: <42BDD011.8080708@sympatico.ca>
References: <42BDD011.8080708@sympatico.ca>
Message-ID: <42BDD567.2060409@dd.revealed.net>

I believe the indexing is actually done in perl, and it's probably one 
of the most problematic features I've encountered.  Generally, just go 
with what works, unless you want to rip into the perl to figure out what 
the problem is.  I've banged my head enough times against the wall on 
problems like these to either: a) just do broad indexing for the TOC and 
not worry about a keyword index, or b) use non-contextual indexing, 
because it just seems to work better.

Nick

Jim Gallacher wrote:
> I'm trying to generate the mod_python documentation, but finding some
> slight weirdness in the index that is created. I'm hoping someone here
> may have be able to offer some insight before I wander off elsewhere in
> search of an answer.
> 
> OS: Debian unstable
> TeTex version: 2.0.2
> Python src: 2.3.5
> 
> This does not work (it ignores the \longprogramopt):
> 
>   \indexii{./configure}{\longprogramopt{with-apxs}}
> 
> Output:
> 
> <a href="inst-configure.html#l2h-6">\longprogramoptwith-apxs</a>
> 
> 
> But this alternate form does work:
> 
>   \index{./configure!\longprogramopt{with-apxs}}
> 
> Output:
> 
> <a href="inst-configure.html#l2h-6"><b
> class="programopt">--with-apxs</b></a>
> 
> Any ideas what may be wrong?
> 
> Regards,
> Jim
> 
> 
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python

From grahamd at dscpl.com.au  Sat Jun 25 18:28:52 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Sat Jun 25 18:29:10 2005
Subject: [mod_python] Problems with mod_python on MacOS
In-Reply-To: <B2141E17-9FE7-4143-9FCD-6F3E251CEA08@doublegemini.com>
References: <B2141E17-9FE7-4143-9FCD-6F3E251CEA08@doublegemini.com>
Message-ID: <c2841324f4a63478c7b1fb467ddf1c7a@dscpl.com.au>


On 26/06/2005, at 4:36 AM, Paul Sholtz wrote:

> Hi, I'm trying to get mod_python to run on the following system:
>
> (*) MacOS 10.4
> (*) Apache 2.0.54
> (*) mod_python 3.1.4
> (*) Python 2.3.5
>
> I've tried getting it to work w/ the mod_python handler configured as 
> both (a) an . htaccess file; and (b) in the general httpd.conf file 
> for all of Apache. I'm trying to get the mptest.py "demo" that's 
> described in the mod_python documentation to work. Every time I try to 
> access the mptest.py file through my Web browser, I get a HTTP 500 
> "Internal Server Error".. Since the "sig" on my Apache error notice 
> includes the line:

Follow the procedure and suggestions documented in the following page 
instead.

   http://www.dscpl.com.au/projects/vampire/articles/modpython-001.html



From paul at doublegemini.com  Sat Jun 25 20:27:16 2005
From: paul at doublegemini.com (Paul Sholtz)
Date: Sat Jun 25 20:27:23 2005
Subject: [mod_python] Problems with mod_python on MacOS
In-Reply-To: <c2841324f4a63478c7b1fb467ddf1c7a@dscpl.com.au>
References: <B2141E17-9FE7-4143-9FCD-6F3E251CEA08@doublegemini.com>
	<c2841324f4a63478c7b1fb467ddf1c7a@dscpl.com.au>
Message-ID: <C808F19E-3961-421E-AED0-98BCD11C9B6A@doublegemini.com>

Thanks for the advice. In fact, I already checked that Web page  
before I posted on this list, but .... for some reason it's still not  
working.

I'm baffled b/c the Web page says if you get an "Internal Server  
Error", it probably means that Apache hasn't loaded mod_python yet,  
but per what I'm seeing in error_log, and per the sig I can in my  
apache error messages, it looks like mod_python has in fact been  
loaded...

I'll look into it a bit more. If I figure it out, I'll let you know!

On Jun 25, 2005, at 6:28 PM, Graham Dumpleton wrote:

>
> On 26/06/2005, at 4:36 AM, Paul Sholtz wrote:
>
>
>> Hi, I'm trying to get mod_python to run on the following system:
>>
>> (*) MacOS 10.4
>> (*) Apache 2.0.54
>> (*) mod_python 3.1.4
>> (*) Python 2.3.5
>>
>> I've tried getting it to work w/ the mod_python handler configured  
>> as both (a) an . htaccess file; and (b) in the general httpd.conf  
>> file for all of Apache. I'm trying to get the mptest.py "demo"  
>> that's described in the mod_python documentation to work. Every  
>> time I try to access the mptest.py file through my Web browser, I  
>> get a HTTP 500 "Internal Server Error".. Since the "sig" on my  
>> Apache error notice includes the line:
>>
>
> Follow the procedure and suggestions documented in the following  
> page instead.
>
>   http://www.dscpl.com.au/projects/vampire/articles/modpython-001.html
>
>
>
>
>
>

From wouter at squirrel-systems.com  Sat Jun 25 21:45:41 2005
From: wouter at squirrel-systems.com (Wouter van Marle)
Date: Sat Jun 25 21:46:00 2005
Subject: [mod_python] Problems with mod_python on MacOS
In-Reply-To: <C808F19E-3961-421E-AED0-98BCD11C9B6A@doublegemini.com>
References: <B2141E17-9FE7-4143-9FCD-6F3E251CEA08@doublegemini.com>
	<c2841324f4a63478c7b1fb467ddf1c7a@dscpl.com.au>
	<C808F19E-3961-421E-AED0-98BCD11C9B6A@doublegemini.com>
Message-ID: <1119750342.28967.34.camel@cm61-18-245-172.hkcable.com.hk>

On Sat, 2005-06-25 at 20:27 -0400, Paul Sholtz wrote:

> Thanks for the advice. In fact, I already checked that Web page  
> before I posted on this list, but .... for some reason it's still not  
> working.
> 
> I'm baffled b/c the Web page says if you get an "Internal Server  
> Error", it probably means that Apache hasn't loaded mod_python yet,  
> but per what I'm seeing in error_log, and per the sig I can in my  
> apache error messages, it looks like mod_python has in fact been  
> loaded...


If your script does not return any output to apache to display, then you
also get an internal server error. So check your script!

Wouter.



> 
> I'll look into it a bit more. If I figure it out, I'll let you know!
> 
> On Jun 25, 2005, at 6:28 PM, Graham Dumpleton wrote:
> 
> >
> > On 26/06/2005, at 4:36 AM, Paul Sholtz wrote:
> >
> >
> >> Hi, I'm trying to get mod_python to run on the following system:
> >>
> >> (*) MacOS 10.4
> >> (*) Apache 2.0.54
> >> (*) mod_python 3.1.4
> >> (*) Python 2.3.5
> >>
> >> I've tried getting it to work w/ the mod_python handler configured  
> >> as both (a) an . htaccess file; and (b) in the general httpd.conf  
> >> file for all of Apache. I'm trying to get the mptest.py "demo"  
> >> that's described in the mod_python documentation to work. Every  
> >> time I try to access the mptest.py file through my Web browser, I  
> >> get a HTTP 500 "Internal Server Error".. Since the "sig" on my  
> >> Apache error notice includes the line:
> >>
> >
> > Follow the procedure and suggestions documented in the following  
> > page instead.
> >
> >   http://www.dscpl.com.au/projects/vampire/articles/modpython-001.html
> >
> >
> >
> >
> >
> >
> 
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
> 
> 
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20050626/d29fc982/attachment.html
From grahamd at dscpl.com.au  Sun Jun 26 03:38:48 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Sun Jun 26 03:39:08 2005
Subject: [mod_python] Problems with mod_python on MacOS
In-Reply-To: <1119750342.28967.34.camel@cm61-18-245-172.hkcable.com.hk>
References: <B2141E17-9FE7-4143-9FCD-6F3E251CEA08@doublegemini.com>
	<c2841324f4a63478c7b1fb467ddf1c7a@dscpl.com.au>
	<C808F19E-3961-421E-AED0-98BCD11C9B6A@doublegemini.com>
	<1119750342.28967.34.camel@cm61-18-245-172.hkcable.com.hk>
Message-ID: <d172cfff84adda945e2224784f2d0f6b@dscpl.com.au>

There is an alternate solution somewhere down below. :-)

On 26/06/2005, at 11:45 AM, Wouter van Marle wrote:

>  On Sat, 2005-06-25 at 20:27 -0400, Paul Sholtz wrote:
>
>>  Thanks for the advice. In fact, I already checked that Web page
>>  before I posted on this list, but .... for some reason it's still not
>>  working.
>>
>>  I'm baffled b/c the Web page says if you get an "Internal Server
>>  Error", it probably means that Apache hasn't loaded mod_python yet,
>>  but per what I'm seeing in error_log, and per the sig I can in my
>>  apache error messages, it looks like mod_python has in fact been
>>  loaded...
>
>
>  If your script does not return any output to apache to display, then
> you also get an internal server error. So check your script!

For the "mptest" example I don't think this is the case.

If one is using mod_python.publisher and you don't write back a response
explicitly and let the function return None, then yes you will get a 500
error, but not so with mptest.

For example, for mptest.py, if you have:

   def handler(req):
     req.content_type = "text/plain"
     req.send_http_header()
     req.write("XXX")

Ie., leave off return of apache.OK, you will get an error in the browser
like:

XXX
<pre>
Mod_python error: "PythonHandler mptest"

Traceback (most recent call last):

   File  
"/System/Library/Frameworks/Python.framework/Versions/2.3/lib/ 
python2.3/site-packages/mod_python/apache.py", line 310, in  
HandlerDispatch
     assert (type(result) == type(int())), \

AssertionError: Handler 'mptest' returned invalid return code.

</pre>

With the Python error details also appearing in the Apache error log.

If you simply don't return any content, ie.,

   def handler(req):
     return apache.OK

The browser will get a 200 and may well timeout waiting for content.

I am inclined to think that what may be happening is that the original
poster is running up against problems associated with:

   http://issues.apache.org/jira/browse/MODPYTHON-35

This is where 500 errors are occurring in some strange situations in
the mod_python.c code file but reasons for the 500 errors aren't logged.

This exact issue was hitting someone else before with Mac OS X. It
came down to being caused by a known Mac OS X specific problem but where
rather than causing the Apache process to crash as it had for other
people, it was causing 500 errors.

End result is that original poster should try applying the patches
detailed at:

   http://www.dscpl.com.au/projects/vampire/patches.html

These actually address something multithreading issues, but also
include a Mac OS X specific workaround for the problem which can cause
these Apache crashes or 500 errors on that platform.

Graham

From jg.lists at sympatico.ca  Sun Jun 26 09:23:11 2005
From: jg.lists at sympatico.ca (Jim Gallacher)
Date: Sun Jun 26 09:18:28 2005
Subject: [mod_python] Any LaTex gurus here?
In-Reply-To: <42BDD567.2060409@dd.revealed.net>
References: <42BDD011.8080708@sympatico.ca> <42BDD567.2060409@dd.revealed.net>
Message-ID: <42BEAC3F.8010803@sympatico.ca>

Nick wrote:
> I believe the indexing is actually done in perl, and it's probably one 
> of the most problematic features I've encountered.  Generally, just go 
> with what works, unless you want to rip into the perl to figure out what 
> the problem is.  

Perl. Nooooooooo........ :) So I'll just go with the hack for now. It 
only affects a couple of lines and it works, so it's good enough.

Thanks Nick.

Jim


> I've banged my head enough times against the wall on 
> problems like these to either: a) just do broad indexing for the TOC and 
> not worry about a keyword index, or b) use non-contextual indexing, 
> because it just seems to work better.
> 
> Nick
> 
> Jim Gallacher wrote:
> 
>> I'm trying to generate the mod_python documentation, but finding some
>> slight weirdness in the index that is created. I'm hoping someone here
>> may have be able to offer some insight before I wander off elsewhere in
>> search of an answer.
>>
>> OS: Debian unstable
>> TeTex version: 2.0.2
>> Python src: 2.3.5
>>
>> This does not work (it ignores the \longprogramopt):
>>
>>   \indexii{./configure}{\longprogramopt{with-apxs}}
>>
>> Output:
>>
>> <a href="inst-configure.html#l2h-6">\longprogramoptwith-apxs</a>
>>
>>
>> But this alternate form does work:
>>
>>   \index{./configure!\longprogramopt{with-apxs}}
>>
>> Output:
>>
>> <a href="inst-configure.html#l2h-6"><b
>> class="programopt">--with-apxs</b></a>
>>
>> Any ideas what may be wrong?
>>
>> Regards,
>> Jim
>>
>>
>> _______________________________________________
>> Mod_python mailing list
>> Mod_python@modpython.org
>> http://mailman.modpython.org/mailman/listinfo/mod_python
> 
> 

From sanders at apache.org  Sun Jun 26 10:23:10 2005
From: sanders at apache.org (Scott Sanders)
Date: Sun Jun 26 10:23:19 2005
Subject: [mod_python] Problems with mod_python on MacOS
In-Reply-To: <d172cfff84adda945e2224784f2d0f6b@dscpl.com.au>
References: <B2141E17-9FE7-4143-9FCD-6F3E251CEA08@doublegemini.com>
	<c2841324f4a63478c7b1fb467ddf1c7a@dscpl.com.au>
	<C808F19E-3961-421E-AED0-98BCD11C9B6A@doublegemini.com>
	<1119750342.28967.34.camel@cm61-18-245-172.hkcable.com.hk>
	<d172cfff84adda945e2224784f2d0f6b@dscpl.com.au>
Message-ID: <B2F032E3-2229-483E-827E-30DC8477C54F@apache.org>

I was receiving this on OS X because mod_python was loading, but it  
was using the wrong copy of python, so the import _apache failed and  
caused the server error, though NOTHING came out in the logs.

Scott

On Jun 26, 2005, at 12:38 AM, Graham Dumpleton wrote:

>>> I'm baffled b/c the Web page says if you get an "Internal Server
>>>  Error",

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20050626/03a89f4c/attachment-0001.html
From christopher.jackson at gmail.com  Sun Jun 26 17:30:35 2005
From: christopher.jackson at gmail.com (Chris Jackson)
Date: Sun Jun 26 17:30:39 2005
Subject: [mod_python] Error About Mod_python.Publisher
In-Reply-To: <42BD9488.3020504@gmail.com>
References: <42BD9488.3020504@gmail.com>
Message-ID: <4d11484d050626143051396bc1@mail.gmail.com>

Try just 

import code.db

then do, 

cur = db.dbInit()...

That way the line "from code import db" does not expect to be an
object or a module with no dbInit() method.

May or may not work, but worth the shot.

~= Chris =~

On 6/25/05, GNULife <gnulife@gmail.com> wrote:
> I wrote some code, and it can return the exact result when I run it in
> python shell. but I when run it in mod_python.publisher, it failed. the
> detail message of error,please open the attachment
> picture(ErrorAboutPublisher.gif).
> 
> 
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
> 
> 
> 
>

From grahamd at dscpl.com.au  Sun Jun 26 19:59:57 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Sun Jun 26 20:00:09 2005
Subject: [mod_python] Problems with mod_python on MacOS
Message-ID: <1119830397.27800@dscpl.user.openhosting.com>

Scott Sanders wrote ..
> I was receiving this on OS X because mod_python was loading, but it  
> was using the wrong copy of python, so the import _apache failed and  
> caused the server error, though NOTHING came out in the logs.

The lack of logging in that situation is the sort of thing that the bug
report I referred to was about. Thus, known issue which masks the
true nature of a couple of problems. Already addressed for next version.

Graham
From patfitz at gmail.com  Mon Jun 27 02:56:55 2005
From: patfitz at gmail.com (Patrick Fitzsimmons)
Date: Mon Jun 27 02:57:01 2005
Subject: [mod_python] mod_python crashes Apache under Windows XP
Message-ID: <76d1249d05062623567211251e@mail.gmail.com>

Hi,

I am running mod_python 3.1 under Apache 2.0.50.0 and Windows XP.  I
am building a database driven web site using Python Server Pages and a
MySQL back end (using the ADOdb module).  The site is up and working
fine.  My problem is that when I try and do a primitive load test by
reloading the pages very, very quickly, two critical bugs appear.

The first problem is that sometimes the req.uri mysteriously changes
from "/home.html" to "other.html"

Here's the source code in my handler script:

----------------------------------------------
from mod_python import apache, psp, Session, util
##import wingdbstub
import sys
import os
import traceback
import time
import initModule


def handler(req):
    #Standard out should print to the browser for debugging
    oldstdout = sys.stdout
    sys.stdout = req

    print req.uri       # Here req.uri always prints out "/home.html",
even when reloading quickly
    print "1"
    init = initModule.InitClass()
    init.req = req
    print init.req.uri   # Here req.uri also prints out "/home.html"
until I start reloading too quickly.  Then it prints out "/other.html"

What's going on here?  Are somehow the two requests trying to access
the same object?  But why does it say "/other.html"?  From what I can
tell, the word other.html is not used a single time in any of my
scripts nor does other.html exist as a file.  I've gotten the same
problem in both Firefox and IE.  I never have any problems running PHP
scripts.


The second problem is that sometimes the request just hangs, and then
Windows gives me a message saying "Apache.exe encountered a critical
error and was forced to shut down"

I thought that some kind of threading problems might be the issue. 
I've looked through all my modules though, and from what I can tell
not once do I modify module variables  (I only read the variables and
call functions).  Also, for the database connection I am using a pool,
whereby new connections are created if existing ones are being used. 
I do have PHP installed in the same Apache, but it's not being
actively used.

I also edited the Apache conf file and set MaxRequestPerChild to 1,
but that did not solve the problem either.

Has anyone else had these problems? Can anyone help me?  I'm going to
try uploading the site to my Linux Virtual Private Server (I'm only
running mod_python on XP so that I can do development on my laptop). 
Hopefully this problem is just a Windows issue.  Otherwise I don't see
how I can use mod_python.

Help greatly appreciated,
Patrick

From grahamd at dscpl.com.au  Mon Jun 27 03:13:22 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Mon Jun 27 03:13:28 2005
Subject: [mod_python] mod_python crashes Apache under Windows XP
Message-ID: <1119856402.27103@dscpl.user.openhosting.com>

Patrick Fitzsimmons wrote ..
> I am running mod_python 3.1 under Apache 2.0.50.0 and Windows XP.

Are you really using mod_python 3.1, or are you perhaps using 3.1.3 or
3.1.4?

Would you be prepared to try out a snapshot of the as yet unreleased 3.2?
There are some threading problems in earlier versions which this version
addresses. There is a chance it may be related to that.

Anyway, there are others on the list who use Win32 whereas I don't, so
they may have more intelligent things to say. I at least just wanted to
clarify which version you were using.

Graham
From patfitz at gmail.com  Mon Jun 27 03:25:40 2005
From: patfitz at gmail.com (Patrick Fitzsimmons)
Date: Mon Jun 27 03:25:47 2005
Subject: [mod_python] mod_python crashes Apache under Windows XP
In-Reply-To: <1119856402.27103@dscpl.user.openhosting.com>
References: <1119856402.27103@dscpl.user.openhosting.com>
Message-ID: <76d1249d050627002515ab91ef@mail.gmail.com>

Correction, I am in fact using 3.1.3.  Do I need a compiler to run the
3.2 snapshot, or is it just python?  If I need a compiler, which
should I use?

Also, I've played around a little more, and found that sometimes the
output to the browser was the folloing:

/view.html 1 /view.html /other.html 1 /other.html /other.html 2

That means the code "print 1" is actually being run twice, even though
it only appears once in the script.  It seems that two different
browser requests are being handled at the same time.

-Patrick

On 6/27/05, Graham Dumpleton <grahamd@dscpl.com.au> wrote:
> Patrick Fitzsimmons wrote ..
> > I am running mod_python 3.1 under Apache 2.0.50.0 and Windows XP.
> 
> Are you really using mod_python 3.1, or are you perhaps using 3.1.3 or
> 3.1.4?
> 
> Would you be prepared to try out a snapshot of the as yet unreleased 3.2?
> There are some threading problems in earlier versions which this version
> addresses. There is a chance it may be related to that.
> 
> Anyway, there are others on the list who use Win32 whereas I don't, so
> they may have more intelligent things to say. I at least just wanted to
> clarify which version you were using.
> 
> Graham
>

From nicolas.lehuen at gmail.com  Mon Jun 27 05:12:02 2005
From: nicolas.lehuen at gmail.com (Nicolas Lehuen)
Date: Mon Jun 27 05:12:09 2005
Subject: [mod_python] mod_python crashes Apache under Windows XP
In-Reply-To: <76d1249d050627002515ab91ef@mail.gmail.com>
References: <1119856402.27103@dscpl.user.openhosting.com>
	<76d1249d050627002515ab91ef@mail.gmail.com>
Message-ID: <c298f2d70506270212466da73b@mail.gmail.com>

Hi Patrick,

If you want to try the latest mod_python 3.2 development release, it
is available here :

http://nicolas.lehuen.com/download/mod_python

Your problem is very strange. I can't find any reference to
"other.html" in mod_python's source code. Are you 100% sure that you
are the only one using your server during the stress testing ?

Regards,
Nicolas

2005/6/27, Patrick Fitzsimmons <patfitz@gmail.com>:
> Correction, I am in fact using 3.1.3.  Do I need a compiler to run the
> 3.2 snapshot, or is it just python?  If I need a compiler, which
> should I use?
> 
> Also, I've played around a little more, and found that sometimes the
> output to the browser was the folloing:
> 
> /view.html 1 /view.html /other.html 1 /other.html /other.html 2
> 
> That means the code "print 1" is actually being run twice, even though
> it only appears once in the script.  It seems that two different
> browser requests are being handled at the same time.
> 
> -Patrick
> 
> On 6/27/05, Graham Dumpleton <grahamd@dscpl.com.au> wrote:
> > Patrick Fitzsimmons wrote ..
> > > I am running mod_python 3.1 under Apache 2.0.50.0 and Windows XP.
> >
> > Are you really using mod_python 3.1, or are you perhaps using 3.1.3 or
> > 3.1.4?
> >
> > Would you be prepared to try out a snapshot of the as yet unreleased 3.2?
> > There are some threading problems in earlier versions which this version
> > addresses. There is a chance it may be related to that.
> >
> > Anyway, there are others on the list who use Win32 whereas I don't, so
> > they may have more intelligent things to say. I at least just wanted to
> > clarify which version you were using.
> >
> > Graham
> >
> 
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>

From patfitz at gmail.com  Mon Jun 27 05:28:06 2005
From: patfitz at gmail.com (Patrick Fitzsimmons)
Date: Mon Jun 27 05:28:12 2005
Subject: [mod_python] mod_python crashes Apache under Windows XP
In-Reply-To: <c298f2d70506270212466da73b@mail.gmail.com>
References: <1119856402.27103@dscpl.user.openhosting.com>
	<76d1249d050627002515ab91ef@mail.gmail.com>
	<c298f2d70506270212466da73b@mail.gmail.com>
Message-ID: <76d1249d050627022848b96615@mail.gmail.com>

Thanks for the link.

I am positive that no one else is using the server (it's running on
localhost off of my laptop).  I'm going to write up a quick search to
find if other.html is mentioned in any of my scripts or config files.


On 6/27/05, Nicolas Lehuen <nicolas.lehuen@gmail.com> wrote:
> Hi Patrick,
> 
> If you want to try the latest mod_python 3.2 development release, it
> is available here :
> 
> http://nicolas.lehuen.com/download/mod_python
> 
> Your problem is very strange. I can't find any reference to
> "other.html" in mod_python's source code. Are you 100% sure that you
> are the only one using your server during the stress testing ?
> 
> Regards,
> Nicolas
> 
> 2005/6/27, Patrick Fitzsimmons <patfitz@gmail.com>:
> > Correction, I am in fact using 3.1.3.  Do I need a compiler to run the
> > 3.2 snapshot, or is it just python?  If I need a compiler, which
> > should I use?
> >
> > Also, I've played around a little more, and found that sometimes the
> > output to the browser was the folloing:
> >
> > /view.html 1 /view.html /other.html 1 /other.html /other.html 2
> >
> > That means the code "print 1" is actually being run twice, even though
> > it only appears once in the script.  It seems that two different
> > browser requests are being handled at the same time.
> >
> > -Patrick
> >
> > On 6/27/05, Graham Dumpleton <grahamd@dscpl.com.au> wrote:
> > > Patrick Fitzsimmons wrote ..
> > > > I am running mod_python 3.1 under Apache 2.0.50.0 and Windows XP.
> > >
> > > Are you really using mod_python 3.1, or are you perhaps using 3.1.3 or
> > > 3.1.4?
> > >
> > > Would you be prepared to try out a snapshot of the as yet unreleased 3.2?
> > > There are some threading problems in earlier versions which this version
> > > addresses. There is a chance it may be related to that.
> > >
> > > Anyway, there are others on the list who use Win32 whereas I don't, so
> > > they may have more intelligent things to say. I at least just wanted to
> > > clarify which version you were using.
> > >
> > > Graham
> > >
> >
> > _______________________________________________
> > Mod_python mailing list
> > Mod_python@modpython.org
> > http://mailman.modpython.org/mailman/listinfo/mod_python
> >
>

From paul at doublegemini.com  Mon Jun 27 09:26:29 2005
From: paul at doublegemini.com (Paul Sholtz)
Date: Mon Jun 27 09:26:49 2005
Subject: [mod_python] Problems with mod_python on MacOS
In-Reply-To: <1119830397.27800@dscpl.user.openhosting.com>
References: <1119830397.27800@dscpl.user.openhosting.com>
Message-ID: <3495ABCE-7ABA-4CF1-AE97-E5F3B1ED5A2E@doublegemini.com>

Hey,

Thanks for all the help.

I got it to work, and ...... I'm not 100% sure what I did to make it  
work. Just kinda seemed to "magically" start working on it own....

I did notice this, though... (and I'm not sure this is what caused it  
to start working, but... it is something that I did *differently*)..  
Before, whenever I was making changes to httpd.conf or the mptest.py  
file, etc, I would just type "apachectl restart" on the command line  
and figure that the changes would be applied. Since I saw the message  
"mod_python/3.1.4 Python/2.3.5 configured -- resuming normal  
operations" come through in error_log, I figured that the changes  
were being applied, etc

What I did this time, was do a "hard reboot" on Apache, by first  
stopping it ("apachectl stop") and then starting it back up  
("apachectl start").

For whatever reason, that seems to have made it work....

On Jun 26, 2005, at 7:59 PM, Graham Dumpleton wrote:

> Scott Sanders wrote ..
>
>> I was receiving this on OS X because mod_python was loading, but it
>> was using the wrong copy of python, so the import _apache failed and
>> caused the server error, though NOTHING came out in the logs.
>>
>
> The lack of logging in that situation is the sort of thing that the  
> bug
> report I referred to was about. Thus, known issue which masks the
> true nature of a couple of problems. Already addressed for next  
> version.
>
> Graham
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>
>
>

From dharana at dharana.net  Mon Jun 27 11:04:13 2005
From: dharana at dharana.net (dharana)
Date: Mon Jun 27 11:04:46 2005
Subject: [mod_python] Quesiton about util.redirect()
Message-ID: <42C0156D.7080105@dharana.net>

I'm using a custom handler and I'm also using redirect(). Recently I've noticed 
that redirect() raises apache.SERVER_RETURN, apache.OK. Am I as the custom 
handler developer supposed to do anything with the exception?

I've noticed the exceptions now because I've added a wrapper in my custom 
handler that notifies me if it catches any exception and now I'm getting an 
exception every time there is a redirect.

-- 
dharana

From amit at digitalpeers.com  Mon Jun 27 13:05:49 2005
From: amit at digitalpeers.com (amit)
Date: Mon Jun 27 12:02:37 2005
Subject: [mod_python] switiching to different python version.
Message-ID: <42C031ED.2090006@digitalpeers.com>

Hello,

 My webhost has two installations of python: Python 2.2 and Python 2.3.
The mod_python works with the Python 2.3. But the MySQLdb module is 
installed
only on the Python 2.2 installation. This means that I can't use 
mod_python for accessing
the MySQL database.
  It will take a couple of days till my webhost installs the MySQLdb 
module in the
Python2.3 installation. They might even not do it as the Python 2.3 
installation was done
by a third party software (plesk panel) and they are afraid to mess 
things up.

Meanwhile, is there a way to tell the mod_python to use another path for 
the python interpreter?

Thanks
   Amit
From trepca at gmail.com  Mon Jun 27 16:46:56 2005
From: trepca at gmail.com (Sebastjan Trepca)
Date: Mon Jun 27 16:47:01 2005
Subject: [mod_python] MemorySession problem
Message-ID: <cd329af8050627134615b4e60a@mail.gmail.com>

Hi,

I have a problem using memory sessions (MemorySession object) with Threaded 
MPM. The sessions seems to timeout after cca 30 seconds (maybe the 
dictionary that holds session data frees?). If I change the session handling 
to DbmSession everything works normally and timeouts when the timeout 
interval is reached.

This is my apache configuration:


<IfModule worker.c>
StartServers 1
MaxClients 150
MinSpareThreads 25
MaxSpareThreads 75
ThreadsPerChild 25
MaxRequestsPerChild 0
</IfModule>

<Directory /srv/web/as>
Options FollowSymLinks
SetHandler mod_python
PythonInterpreter interpreter
PythonHandler as
AllowOverride None
</Directory>

What am I missing?

Thanks for help!

Regards, Sebastjan
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20050627/bacaaa9b/attachment.html
From grahamd at dscpl.com.au  Mon Jun 27 18:02:36 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Mon Jun 27 18:02:53 2005
Subject: [mod_python] switiching to different python version.
In-Reply-To: <42C031ED.2090006@digitalpeers.com>
References: <42C031ED.2090006@digitalpeers.com>
Message-ID: <39f47c4a94f0dacd29d0264e381d1c6d@dscpl.com.au>


On 28/06/2005, at 3:05 AM, amit wrote:

> My webhost has two installations of python: Python 2.2 and Python 2.3.
> The mod_python works with the Python 2.3. But the MySQLdb module is 
> installed
> only on the Python 2.2 installation. This means that I can't use 
> mod_python for accessing
> the MySQL database.
>  It will take a couple of days till my webhost installs the MySQLdb 
> module in the
> Python2.3 installation. They might even not do it as the Python 2.3 
> installation was done
> by a third party software (plesk panel) and they are afraid to mess 
> things up.
>
> Meanwhile, is there a way to tell the mod_python to use another path 
> for the python interpreter?

When mod_python is built and installed, it is done so against a 
specific version
of Python. You thus can't simply change which version of installed 
Python module
files it uses as it will not work. All that can be done is for 
mod_python to be
rebuilt and reinstalled using the alternate version of Python. This 
however is
going to affect everyone who uses mod_python on that system if the same 
Apache
installation is used by everyone. If you are however on a virtual 
hosting system
where you have access to your own Apache configuration and own Apache 
modules
directory, you could look at replacing the mod_python install for just 
your setup.

Graham

From grahamd at dscpl.com.au  Mon Jun 27 18:11:44 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Mon Jun 27 18:12:23 2005
Subject: [mod_python] Quesiton about util.redirect()
In-Reply-To: <42C0156D.7080105@dharana.net>
References: <42C0156D.7080105@dharana.net>
Message-ID: <9db4f7ade2cc40f1907e30a7e96b2f9a@dscpl.com.au>


On 28/06/2005, at 1:04 AM, dharana wrote:

> I'm using a custom handler and I'm also using redirect(). Recently 
> I've noticed that redirect() raises apache.SERVER_RETURN, apache.OK. 
> Am I as the custom handler developer supposed to do anything with the 
> exception?
>
> I've noticed the exceptions now because I've added a wrapper in my 
> custom handler that notifies me if it catches any exception and now 
> I'm getting an exception every time there is a redirect.

In general you would raise it again. You should be doing this with any
sort of error. The top level mod_python code will then catch them, and 
in
the case of either:

   raise apache.SERVER_RETURN, apache.HTTP_MOVED_PERMANENTLY

or:

   req.status = apache.HTTP_MOVED_PERMANENTLY
   raise apache.SERVER_RETURN, apache.OK

it should effectively change it to:

   req.status = apache.HTTP_MOVED_PERMANENTLY
   return apache.OK

in the top level return.

If some Python code error is raised, the top level mod_python code will
turn it into a 500 error which trace back sent to browser if debug is 
on.

I think I have described that right.

Graham

From davmac at deakin.edu.au  Tue Jun 28 00:30:09 2005
From: davmac at deakin.edu.au (Davin McCall)
Date: Tue Jun 28 00:24:27 2005
Subject: [mod_python] Build troubles on Solaris
Message-ID: <42C0D251.8040203@deakin.edu.au>

I was having trouble building mod_python on Solaris 9, using gcc 3.4.4 
and apache 2.0.54.

I got:

/usr/local/apache2/build/libtool --silent --mode=link gcc -o 
mod_python.la  -rpath /usr/local/apache2/modules -module 
-avoid-version    hlistobject.lo hlist.lo
filterobject.lo connobject.lo serverobject.lo util.lo tableobject.lo 
requestobject.lo _apachemodule.lo mod_python.lo 
-L/usr/local/bin/../../../package/Python-2.4.1/usr/local/lib/python2.4/config 
-lm -lpython2.4 -lresolv -lsocket -lnsl -lrt
-ldl -lpthread -lm _eprintf.o _floatdidf.o _muldi3.o

*** Warning: Linking the shared library mod_python.la against the 
non-libtool
*** objects  _eprintf.o _floatdidf.o _muldi3.o is not portable!
Text relocation remains                         referenced
    against symbol                  offset      in file
<unknown>                           0x1030      
/usr/local/bin/../../../package/Python-2.4.1/usr/local/lib/python2.4/config/libpython2.4.a(floatobject.o)
<unknown>                           0x1034      
/usr/local/bin/../../../package/Python-2.4.1/usr/local/lib/python2.4/config/libpython2.4.a(floatobject.o)
<unknown>                           0x1038      
/usr/local/bin/../../../package/Python-2.4.1/usr/local/lib/python2.4/config/libpython2.4.a(floatobject.o)
<unknown>                           0x103c      
/usr/local/bin/../../../package/Python-2.4.1/usr/local/lib/python2.4/config/libpython2.4.a(floatobject.o)
...

... and eventually:

ld: fatal: relocations remain against allocatable but non-writable sections
collect2: ld returned 1 exit status
apxs:Error: Command failed with rc=65536
.
make[1]: *** [mod_python.so] Error 1
make[1]: Leaving directory `/usr/local/src/mod_python-3.1.4/src'
make: *** [do_dso] Error 2


 From browsing list archives I see that one or two other people have had 
a similar problem.  I resolved it by re-building python with 
--enable-shared. It doesn't mention in the mod_python docs that you need 
to do this, but apparently so.

Davin

-- 
Davin McCall, Research Programmer
Deakin University, Burwood, Australia.
Phone: 03 9251 7045 International: +61 3 9251 7045
Email: Davin.McCall@deakin.edu.au
Website: http://www.deakin.edu.au
Deakin University CRICOS Provider Code 00113B (Vic)

From davmac at deakin.edu.au  Tue Jun 28 00:55:22 2005
From: davmac at deakin.edu.au (Davin McCall)
Date: Tue Jun 28 00:49:46 2005
Subject: [mod_python] Build troubles on Solaris
In-Reply-To: <42C0D251.8040203@deakin.edu.au>
References: <42C0D251.8040203@deakin.edu.au>
Message-ID: <42C0D83A.9090608@deakin.edu.au>

It seems however that the resulting module causes apache to segfault.

Anyone out there know what might be happening, or can give me some 
guidelines for debugging?

Davin


Davin McCall wrote:

> I was having trouble building mod_python on Solaris 9, using gcc 3.4.4 
> and apache 2.0.54.
>
> I got:
>
> /usr/local/apache2/build/libtool --silent --mode=link gcc -o 
> mod_python.la  -rpath /usr/local/apache2/modules -module 
> -avoid-version    hlistobject.lo hlist.lo
> filterobject.lo connobject.lo serverobject.lo util.lo tableobject.lo 
> requestobject.lo _apachemodule.lo mod_python.lo 
> -L/usr/local/bin/../../../package/Python-2.4.1/usr/local/lib/python2.4/config 
> -lm -lpython2.4 -lresolv -lsocket -lnsl -lrt
> -ldl -lpthread -lm _eprintf.o _floatdidf.o _muldi3.o
>
> *** Warning: Linking the shared library mod_python.la against the 
> non-libtool
> *** objects  _eprintf.o _floatdidf.o _muldi3.o is not portable!
> Text relocation remains                         referenced
>    against symbol                  offset      in file
> <unknown>                           0x1030      
> /usr/local/bin/../../../package/Python-2.4.1/usr/local/lib/python2.4/config/libpython2.4.a(floatobject.o) 
>
> <unknown>                           0x1034      
> /usr/local/bin/../../../package/Python-2.4.1/usr/local/lib/python2.4/config/libpython2.4.a(floatobject.o) 
>
> <unknown>                           0x1038      
> /usr/local/bin/../../../package/Python-2.4.1/usr/local/lib/python2.4/config/libpython2.4.a(floatobject.o) 
>
> <unknown>                           0x103c      
> /usr/local/bin/../../../package/Python-2.4.1/usr/local/lib/python2.4/config/libpython2.4.a(floatobject.o) 
>
> ...
>
> ... and eventually:
>
> ld: fatal: relocations remain against allocatable but non-writable 
> sections
> collect2: ld returned 1 exit status
> apxs:Error: Command failed with rc=65536
> .
> make[1]: *** [mod_python.so] Error 1
> make[1]: Leaving directory `/usr/local/src/mod_python-3.1.4/src'
> make: *** [do_dso] Error 2
>
>
> From browsing list archives I see that one or two other people have 
> had a similar problem.  I resolved it by re-building python with 
> --enable-shared. It doesn't mention in the mod_python docs that you 
> need to do this, but apparently so.
>
> Davin
>


-- 
Davin McCall, Research Programmer
Deakin University, Burwood, Australia.
Phone: 03 9251 7045 International: +61 3 9251 7045
Email: Davin.McCall@deakin.edu.au
Website: http://www.deakin.edu.au
Deakin University CRICOS Provider Code 00113B (Vic)

From davmac at deakin.edu.au  Tue Jun 28 01:13:59 2005
From: davmac at deakin.edu.au (Davin McCall)
Date: Tue Jun 28 01:08:17 2005
Subject: [mod_python] Build troubles on Solaris
In-Reply-To: <42C0D83A.9090608@deakin.edu.au>
References: <42C0D251.8040203@deakin.edu.au> <42C0D83A.9090608@deakin.edu.au>
Message-ID: <42C0DC97.3040909@deakin.edu.au>

Not to get into a habit of replying to my own posts, but it seems the 
problem has mysteriously vanished (after restarting apache again).

Davin

Davin McCall wrote:

> It seems however that the resulting module causes apache to segfault.
>
> Anyone out there know what might be happening, or can give me some 
> guidelines for debugging?
>
> Davin
>
>
> Davin McCall wrote:
>
>> I was having trouble building mod_python on Solaris 9, using gcc 
>> 3.4.4 and apache 2.0.54.
>>
>> I got:
>>
>> /usr/local/apache2/build/libtool --silent --mode=link gcc -o 
>> mod_python.la  -rpath /usr/local/apache2/modules -module 
>> -avoid-version    hlistobject.lo hlist.lo
>> filterobject.lo connobject.lo serverobject.lo util.lo tableobject.lo 
>> requestobject.lo _apachemodule.lo mod_python.lo 
>> -L/usr/local/bin/../../../package/Python-2.4.1/usr/local/lib/python2.4/config 
>> -lm -lpython2.4 -lresolv -lsocket -lnsl -lrt
>> -ldl -lpthread -lm _eprintf.o _floatdidf.o _muldi3.o
>>
>> *** Warning: Linking the shared library mod_python.la against the 
>> non-libtool
>> *** objects  _eprintf.o _floatdidf.o _muldi3.o is not portable!
>> Text relocation remains                         referenced
>>    against symbol                  offset      in file
>> <unknown>                           0x1030      
>> /usr/local/bin/../../../package/Python-2.4.1/usr/local/lib/python2.4/config/libpython2.4.a(floatobject.o) 
>>
>> <unknown>                           0x1034      
>> /usr/local/bin/../../../package/Python-2.4.1/usr/local/lib/python2.4/config/libpython2.4.a(floatobject.o) 
>>
>> <unknown>                           0x1038      
>> /usr/local/bin/../../../package/Python-2.4.1/usr/local/lib/python2.4/config/libpython2.4.a(floatobject.o) 
>>
>> <unknown>                           0x103c      
>> /usr/local/bin/../../../package/Python-2.4.1/usr/local/lib/python2.4/config/libpython2.4.a(floatobject.o) 
>>
>> ...
>>
>> ... and eventually:
>>
>> ld: fatal: relocations remain against allocatable but non-writable 
>> sections
>> collect2: ld returned 1 exit status
>> apxs:Error: Command failed with rc=65536
>> .
>> make[1]: *** [mod_python.so] Error 1
>> make[1]: Leaving directory `/usr/local/src/mod_python-3.1.4/src'
>> make: *** [do_dso] Error 2
>>
>>
>> From browsing list archives I see that one or two other people have 
>> had a similar problem.  I resolved it by re-building python with 
>> --enable-shared. It doesn't mention in the mod_python docs that you 
>> need to do this, but apparently so.
>>
>> Davin
>>
>
>


-- 
Davin McCall, Research Programmer
Deakin University, Burwood, Australia.
Phone: 03 9251 7045 International: +61 3 9251 7045
Email: Davin.McCall@deakin.edu.au
Website: http://www.deakin.edu.au
Deakin University CRICOS Provider Code 00113B (Vic)

From shalofin at gmail.com  Tue Jun 28 08:45:56 2005
From: shalofin at gmail.com (Wayne Pierce)
Date: Tue Jun 28 08:46:02 2005
Subject: [mod_python] Configuring Session.Session
Message-ID: <4617fd6d05062805452b852d11@mail.gmail.com>

Is it possible to change the session name mod_python sends?  I have a
machine where I will be developing several mod_python apps and would
like to keep the sessions separate.

However, I have found that each app will use the same session name,
which has caused conflicts (especially when I reuse code between
apps).

I didn't find anything in the documentation to do this.  Thanks,

Wayne

From jcigar at ulb.ac.be  Tue Jun 28 09:13:40 2005
From: jcigar at ulb.ac.be (Julien)
Date: Tue Jun 28 09:12:04 2005
Subject: [mod_python] Internal Server Error
Message-ID: <1119964421.7322.30.camel@horologium>

Hello,

I'm using mod_python 3.1.3 with Apache 2.0.54 on a Debian box with the
publisher handler and the Clearsilver template engine, and from time to
time apache returns an 500 error code (Internal Server Error). 
Apache errog.log file looks like :

[Tue Jun 28 14:42:12 2005] [error] [client 164.x.x.x] PythonHandler
mod_python.publisher: Traceback (most recent call last):
[Tue Jun 28 14:42:12 2005] [error] [client 164.x.x.x] PythonHandler
mod_python.publisher:   File
"/usr/lib/python2.3/site-packages/mod_python/apache.py", line 299, in
HandlerDispatch\n    result = object(req)
[Tue Jun 28 14:42:12 2005] [error] [client 164.x.x.x] PythonHandler
mod_python.publisher:   File
"/usr/lib/python2.3/site-packages/mod_python/publisher.py", line 98, in
handler\n    path=[path])
[Tue Jun 28 14:42:12 2005] [error] [client 164.x.x.x] PythonHandler
mod_python.publisher:   File
"/usr/lib/python2.3/site-packages/mod_python/apache.py", line 454, in
import_module\n    f, p, d = imp.find_module(parts[i], path)
[Tue Jun 28 14:42:12 2005] [error] [client 164.x.x.x] PythonHandler
mod_python.publisher: ImportError: No module named taxal

...

What is strange is that when I reload the page, it's displayed fine, but
from time to time I get 500 error code ... which is quite annoying ...

As I'm using the publisher handler, my index.py looks like :

import sys
import os.path
import neo_cgi
import neo_util
import neo_cs

from mod_python import util, apache
from psycopg import QuotedString

config = apache.import_module('config', autoreload = 0, log = 0)
utils = apache.import_module('utils', autoreload = 0, log = 0)
specimen = apache.import_module('specimen', autoreload = 0, log = 0)
taxon = apache.import_module('taxon', autoreload = 0, log = 0)
fulltextsearch = apache.import_module('fulltextsearch', autoreload = 0,
log = 0)

template_directory  = config.getTemplateDirectory()
template_main       = config.getTemplateMain()
template_menu       = config.getTemplateMenu()

def index(req):
    return home(req)

def home(req):
    return _render(req, 'home')

def links(req):
    return _render(req, 'links')

def contact(req):
    return _render(req, 'contact')

def taxal(req):
    sort    = req.form.getfirst('sort')
    order   = req.form.getfirst('order')

    tl = taxon.taxon()
    tl.getTaxaList(sort, order)
    hdf = tl.getHDF()
    return _render(req, 'taxalist', hdf)

(...)

So for the above example if I GET http://b.abc.be/birds/taxal it should
run the "def taxal(req)" function ... I don't understand why I get a
"mod_python.publisher: ImportError: No module named taxal" error message
in the apache logfile.

We have several virtualhosts : a.abc.be, b.abc.be, c.abc.be, ...
(fictive addresses). Our www directory is organized like this :
/var/www/vhosts/a.abc.be/ 
/var/www/vhosts/b.abc.be/
/var/www/vhosts/b.abc.be/enbi/
/var/www/vhosts/b.abc.be/enbi/projects/birds/
/var/www/vhosts/b.abc.be/enbi/projects/butterfly/
/var/www/vhosts/b.abc.be/enbi/projects/rubiaceae/
/var/www/vhosts/c.abc.be/blah/

I've tried with "PythonInterpPerDirectory on" in my .htaccess, but
without success ...

In advance thanks for your support

-- 
Julien Cigar (jcigar@ulb.ac.be)
Belgian Biodiversity Information Facility
Universit? Libre de Bruxelles
Campus de la Plaine CP 257
B?timent NO, Bureau 4 N4 115C (Niveau 4)
Boulevard du Triomphe, entr?e ULB 2
B-1050 Bruxelles
http://www.bebif.be

From nicolas.lehuen at gmail.com  Tue Jun 28 09:32:00 2005
From: nicolas.lehuen at gmail.com (Nicolas Lehuen)
Date: Tue Jun 28 09:32:06 2005
Subject: [mod_python] Configuring Session.Session
In-Reply-To: <4617fd6d05062805452b852d11@mail.gmail.com>
References: <4617fd6d05062805452b852d11@mail.gmail.com>
Message-ID: <c298f2d705062806323ae99b13@mail.gmail.com>

Hi Wayne,

Right now it's not possible, unfortunately. It's not so difficult to do, 
however, so you can expect it to be included in the next mod_python release.

If this is really urgent I can provide you a hack which will give you the 
ability to define the session cookie name using "PythonOption 
SessionCookieName foobar". But it will be definitely a hack and will turn 
you mod_python version into a non-standard one, which is not a good idea. So 
it's better to wait for the next release if you can do so.

Regards,
Nicolas

2005/6/28, Wayne Pierce <shalofin@gmail.com>:
> 
> Is it possible to change the session name mod_python sends? I have a
> machine where I will be developing several mod_python apps and would
> like to keep the sessions separate.
> 
> However, I have found that each app will use the same session name,
> which has caused conflicts (especially when I reuse code between
> apps).
> 
> I didn't find anything in the documentation to do this. Thanks,
> 
> Wayne
> 
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20050628/c48562c7/attachment.html
From shalofin at gmail.com  Tue Jun 28 09:41:09 2005
From: shalofin at gmail.com (Wayne Pierce)
Date: Tue Jun 28 09:41:14 2005
Subject: [mod_python] Configuring Session.Session
In-Reply-To: <c298f2d705062806323ae99b13@mail.gmail.com>
References: <4617fd6d05062805452b852d11@mail.gmail.com>
	<c298f2d705062806323ae99b13@mail.gmail.com>
Message-ID: <4617fd6d050628064114eb808f@mail.gmail.com>

Nicolas,

It's not a major issue right now, more of an annoyance as I tend to
overwrite session variables or erase all the sessions when logging out
of one app.  I'll wait for the next version.

Thanks for the reply,

Wayne

On 6/28/05, Nicolas Lehuen <nicolas.lehuen@gmail.com> wrote:
> Hi Wayne,
>  
>  Right now it's not possible, unfortunately. It's not so difficult to do,
> however, so you can expect it to be included in the next mod_python release.
>  
>  If this is really urgent I can provide you a hack which will give you the
> ability to define the session cookie name using "PythonOption
> SessionCookieName foobar ". But it will be definitely a hack and will turn
> you mod_python version into a non-standard one, which is not a good idea. So
> it's better to wait for the next release if you can do so.
>  
>  Regards,
>  Nicolas
>  
> 2005/6/28, Wayne Pierce <shalofin@gmail.com>:
> > 
> > Is it possible to change the session name mod_python sends?  I have a
> > machine where I will be developing several mod_python apps and would
> > like to keep the sessions separate.
> > 
> > However, I have found that each app will use the same session name, 
> > which has caused conflicts (especially when I reuse code between
> > apps).
> > 
> > I didn't find anything in the documentation to do this.  Thanks,
> > 
> > Wayne
> > 
> > _______________________________________________
> > Mod_python mailing list
> > Mod_python@modpython.org
> > http://mailman.modpython.org/mailman/listinfo/mod_python 
> > 
> 
>

From jg.lists at sympatico.ca  Tue Jun 28 10:53:48 2005
From: jg.lists at sympatico.ca (Jim Gallacher)
Date: Tue Jun 28 10:48:52 2005
Subject: [mod_python] Configuring Session.Session
In-Reply-To: <c298f2d705062806323ae99b13@mail.gmail.com>
References: <4617fd6d05062805452b852d11@mail.gmail.com>
	<c298f2d705062806323ae99b13@mail.gmail.com>
Message-ID: <42C1647C.5010704@sympatico.ca>

Hi Nicolas,

I can add this feature if you'd like. I'm hoping to spend some time on 
Session.py today anyway.

By the way, is CamelCase preferred for use as keywords in PythonOption / 
apache config files. I'm not a fan, preferring session_cookie_name to 
SessionCookieName, but it's more important to be consistent than right. 
:) If CamelCase is the standard I'll change my code accordingly.
Jim

Nicolas Lehuen wrote:
> Hi Wayne,
> 
> Right now it's not possible, unfortunately. It's not so difficult to do, 
> however, so you can expect it to be included in the next mod_python release.
> 
> If this is really urgent I can provide you a hack which will give you 
> the ability to define the session cookie name using "PythonOption 
> SessionCookieName foobar ". But it will be definitely a hack and will 
> turn you mod_python version into a non-standard one, which is not a good 
> idea. So it's better to wait for the next release if you can do so.
> 
> Regards,
> Nicolas
> 
> 2005/6/28, Wayne Pierce <shalofin@gmail.com <mailto:shalofin@gmail.com>>:
> 
>     Is it possible to change the session name mod_python sends?  I have a
>     machine where I will be developing several mod_python apps and would
>     like to keep the sessions separate.
> 
>     However, I have found that each app will use the same session name,
>     which has caused conflicts (especially when I reuse code between
>     apps).
> 
>     I didn't find anything in the documentation to do this.  Thanks,
> 
>     Wayne
> 
>     _______________________________________________
>     Mod_python mailing list
>     Mod_python@modpython.org <mailto:Mod_python@modpython.org>
>     http://mailman.modpython.org/mailman/listinfo/mod_python
>     <http://mailman.modpython.org/mailman/listinfo/mod_python>
> 
> 
> 
> ------------------------------------------------------------------------
> 
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python

From vsi at ebi.ac.uk  Tue Jun 28 12:19:29 2005
From: vsi at ebi.ac.uk (Ville Silventoinen)
Date: Tue Jun 28 12:19:40 2005
Subject: [mod_python] parsed_uri
Message-ID: <Pine.LNX.4.61.0506281712120.28791@wolf.ebi.ac.uk>

Hi,

has anyone used req.parsed_uri fields successfully?

   def handler(req):
       req.content_type = "text/plain"
       for field in req.parsed_uri:
           req.write("%s," % str(field))
       return apache.OK

shows following:

   None,None,None,None,None,None,/cgi-bin/vsi/auth/login.py,None,None,

Is there any other way to determine scheme, host and port?
Or to get the original URL? I need to check that scheme is 'https'...

Thanks,
Ville


From nick at dd.revealed.net  Tue Jun 28 12:26:10 2005
From: nick at dd.revealed.net (Nick)
Date: Tue Jun 28 12:26:37 2005
Subject: [mod_python] parsed_uri
In-Reply-To: <Pine.LNX.4.61.0506281712120.28791@wolf.ebi.ac.uk>
References: <Pine.LNX.4.61.0506281712120.28791@wolf.ebi.ac.uk>
Message-ID: <42C17A22.30900@dd.revealed.net>

If that's all you need to check, then there are SSL variables in the 
subprocess_env.  Or, req.unparsed_uri.split(':')[0].

Nick

Ville Silventoinen wrote:
> Hi,
> 
> has anyone used req.parsed_uri fields successfully?
> 
>   def handler(req):
>       req.content_type = "text/plain"
>       for field in req.parsed_uri:
>           req.write("%s," % str(field))
>       return apache.OK
> 
> shows following:
> 
>   None,None,None,None,None,None,/cgi-bin/vsi/auth/login.py,None,None,
> 
> Is there any other way to determine scheme, host and port?
> Or to get the original URL? I need to check that scheme is 'https'...
> 
> Thanks,
> Ville
> 
> 
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python

From vsi at ebi.ac.uk  Tue Jun 28 12:47:39 2005
From: vsi at ebi.ac.uk (Ville Silventoinen)
Date: Tue Jun 28 12:47:46 2005
Subject: [mod_python] parsed_uri
In-Reply-To: <42C17A22.30900@dd.revealed.net>
References: <Pine.LNX.4.61.0506281712120.28791@wolf.ebi.ac.uk>
	<42C17A22.30900@dd.revealed.net>
Message-ID: <Pine.LNX.4.61.0506281744460.28791@wolf.ebi.ac.uk>

Hi Nick,

yes, I just found out that if I call:

req.add_common_vars()
for k,v in req.subprocess_env.items():
     req.write("%s=%s\n" % (k,v))

I get all the CGI environment variables. There's "HTTPS=on" and
SERVER_NAME and SERVER_PORT. This solves my problem.

req.unparsed_uri.split(':')[0] returns just "/cgi-bin/vsi/auth/login.py".

Cheers,
Ville


On Tue, 28 Jun 2005, Nick wrote:

> If that's all you need to check, then there are SSL variables in the 
> subprocess_env.  Or, req.unparsed_uri.split(':')[0].
>
> Nick
>
> Ville Silventoinen wrote:
>> Hi,
>> 
>> has anyone used req.parsed_uri fields successfully?
>> 
>>   def handler(req):
>>       req.content_type = "text/plain"
>>       for field in req.parsed_uri:
>>           req.write("%s," % str(field))
>>       return apache.OK
>> 
>> shows following:
>> 
>>   None,None,None,None,None,None,/cgi-bin/vsi/auth/login.py,None,None,
>> 
>> Is there any other way to determine scheme, host and port?
>> Or to get the original URL? I need to check that scheme is 'https'...
>> 
>> Thanks,
>> Ville
>> 
>> 
>> _______________________________________________
>> Mod_python mailing list
>> Mod_python@modpython.org
>> http://mailman.modpython.org/mailman/listinfo/mod_python
>
>
From nick at dd.revealed.net  Tue Jun 28 12:57:23 2005
From: nick at dd.revealed.net (Nick)
Date: Tue Jun 28 12:57:53 2005
Subject: [mod_python] parsed_uri
In-Reply-To: <Pine.LNX.4.61.0506281744460.28791@wolf.ebi.ac.uk>
References: <Pine.LNX.4.61.0506281712120.28791@wolf.ebi.ac.uk>	<42C17A22.30900@dd.revealed.net>
	<Pine.LNX.4.61.0506281744460.28791@wolf.ebi.ac.uk>
Message-ID: <42C18173.6080800@dd.revealed.net>

Hm... is this a bug in mod_python?  The original code checking parsed_uri 
should have worked for that matter.

Nick

Ville Silventoinen wrote:
> req.unparsed_uri.split(':')[0] returns just "/cgi-bin/vsi/auth/login.py".
> 
> On Tue, 28 Jun 2005, Nick wrote:
> 
>> If that's all you need to check, then there are SSL variables in the 
>> subprocess_env.  Or, req.unparsed_uri.split(':')[0].
>>
>> Nick
>>
>> Ville Silventoinen wrote:
>>
>>> Hi,
>>>
>>> has anyone used req.parsed_uri fields successfully?
>>>
>>>   def handler(req):
>>>       req.content_type = "text/plain"
>>>       for field in req.parsed_uri:
>>>           req.write("%s," % str(field))
>>>       return apache.OK
>>>
>>> shows following:
>>>
>>>   None,None,None,None,None,None,/cgi-bin/vsi/auth/login.py,None,None,


From jg.lists at sympatico.ca  Tue Jun 28 13:14:28 2005
From: jg.lists at sympatico.ca (Jim Gallacher)
Date: Tue Jun 28 13:09:52 2005
Subject: [mod_python] parsed_uri
In-Reply-To: <42C18173.6080800@dd.revealed.net>
References: <Pine.LNX.4.61.0506281712120.28791@wolf.ebi.ac.uk>	<42C17A22.30900@dd.revealed.net>	<Pine.LNX.4.61.0506281744460.28791@wolf.ebi.ac.uk>
	<42C18173.6080800@dd.revealed.net>
Message-ID: <42C18574.606@sympatico.ca>

I don't have time to look at the code right now, but I believe that 
mod_python just returns the parsed_uri structure in the apache request 
record. If this is the case then it doesn't constitute a mod_python bug 
as such. I'll investigate further tonight if time permits.

Jim

Nick wrote:
> Hm... is this a bug in mod_python?  The original code checking 
> parsed_uri should have worked for that matter.
> 
> Nick
> 
> Ville Silventoinen wrote:
> 
>> req.unparsed_uri.split(':')[0] returns just "/cgi-bin/vsi/auth/login.py".
>>
>> On Tue, 28 Jun 2005, Nick wrote:
>>
>>> If that's all you need to check, then there are SSL variables in the 
>>> subprocess_env.  Or, req.unparsed_uri.split(':')[0].
>>>
>>> Nick
>>>
>>> Ville Silventoinen wrote:
>>>
>>>> Hi,
>>>>
>>>> has anyone used req.parsed_uri fields successfully?
>>>>
>>>>   def handler(req):
>>>>       req.content_type = "text/plain"
>>>>       for field in req.parsed_uri:
>>>>           req.write("%s," % str(field))
>>>>       return apache.OK
>>>>
>>>> shows following:
>>>>
>>>>   None,None,None,None,None,None,/cgi-bin/vsi/auth/login.py,None,None,
> 
> 
> 
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
> 

From amery at geeks.cl  Tue Jun 28 13:11:28 2005
From: amery at geeks.cl (Alejandro Mery)
Date: Tue Jun 28 13:11:31 2005
Subject: [mod_python] writting a handler in python
Message-ID: <42C184C0.6080406@geeks.cl>

hi, i need to do a mod_foo (written in python) to be able to:
AddHandler Foo .foo

can you give me a hint, url or something to learn how can i benefit of 
mod_python to achieve my goal?

TIA,
Alejandro Mery

From nicolas.lehuen at gmail.com  Tue Jun 28 14:46:10 2005
From: nicolas.lehuen at gmail.com (Nicolas Lehuen)
Date: Tue Jun 28 14:46:20 2005
Subject: [mod_python] Configuring Session.Session
In-Reply-To: <42C1647C.5010704@sympatico.ca>
References: <4617fd6d05062805452b852d11@mail.gmail.com>
	<c298f2d705062806323ae99b13@mail.gmail.com>
	<42C1647C.5010704@sympatico.ca>
Message-ID: <c298f2d705062811466d991610@mail.gmail.com>

Yeah, I prefer session_cookie_name too. But don't worry about the 
implementation, I've done it. It was a 15 minutes job, including the tests 
:o).

Regards,
Nicolas

2005/6/28, Jim Gallacher <jg.lists@sympatico.ca>:
> 
> Hi Nicolas,
> 
> I can add this feature if you'd like. I'm hoping to spend some time on
> Session.py today anyway.
> 
> By the way, is CamelCase preferred for use as keywords in PythonOption /
> apache config files. I'm not a fan, preferring session_cookie_name to
> SessionCookieName, but it's more important to be consistent than right.
> :) If CamelCase is the standard I'll change my code accordingly.
> Jim
> 
> Nicolas Lehuen wrote:
> > Hi Wayne,
> >
> > Right now it's not possible, unfortunately. It's not so difficult to do,
> > however, so you can expect it to be included in the next mod_python 
> release.
> >
> > If this is really urgent I can provide you a hack which will give you
> > the ability to define the session cookie name using "PythonOption
> > SessionCookieName foobar ". But it will be definitely a hack and will
> > turn you mod_python version into a non-standard one, which is not a good
> > idea. So it's better to wait for the next release if you can do so.
> >
> > Regards,
> > Nicolas
> >
> > 2005/6/28, Wayne Pierce <shalofin@gmail.com <mailto:shalofin@gmail.com
> >>:
> >
> > Is it possible to change the session name mod_python sends? I have a
> > machine where I will be developing several mod_python apps and would
> > like to keep the sessions separate.
> >
> > However, I have found that each app will use the same session name,
> > which has caused conflicts (especially when I reuse code between
> > apps).
> >
> > I didn't find anything in the documentation to do this. Thanks,
> >
> > Wayne
> >
> > _______________________________________________
> > Mod_python mailing list
> > Mod_python@modpython.org <mailto:Mod_python@modpython.org>
> > http://mailman.modpython.org/mailman/listinfo/mod_python
> > <http://mailman.modpython.org/mailman/listinfo/mod_python>
> >
> >
> >
> > ------------------------------------------------------------------------
> >
> > _______________________________________________
> > Mod_python mailing list
> > Mod_python@modpython.org
> > http://mailman.modpython.org/mailman/listinfo/mod_python
> 
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20050628/feac782a/attachment.html
From nick at dd.revealed.net  Tue Jun 28 14:56:26 2005
From: nick at dd.revealed.net (Nick)
Date: Tue Jun 28 14:56:45 2005
Subject: [mod_python] parsed_uri
In-Reply-To: <42C18574.606@sympatico.ca>
References: <Pine.LNX.4.61.0506281712120.28791@wolf.ebi.ac.uk>	<42C17A22.30900@dd.revealed.net>	<Pine.LNX.4.61.0506281744460.28791@wolf.ebi.ac.uk>
	<42C18173.6080800@dd.revealed.net> <42C18574.606@sympatico.ca>
Message-ID: <42C19D5A.6020006@dd.revealed.net>

Then at the very least it's a documentation bug, since most everything 
listed in parsed_uri will always be None.

Nick

Jim Gallacher wrote:
> I don't have time to look at the code right now, but I believe that 
> mod_python just returns the parsed_uri structure in the apache request 
> record. If this is the case then it doesn't constitute a mod_python bug 
> as such. I'll investigate further tonight if time permits.
> 
> Jim
> 
> Nick wrote:
> 
>> Hm... is this a bug in mod_python?  The original code checking 
>> parsed_uri should have worked for that matter.
>>
>> Nick
>>
>> Ville Silventoinen wrote:
>>
>>> req.unparsed_uri.split(':')[0] returns just 
>>> "/cgi-bin/vsi/auth/login.py".
>>>
>>> On Tue, 28 Jun 2005, Nick wrote:
>>>
>>>> If that's all you need to check, then there are SSL variables in the 
>>>> subprocess_env.  Or, req.unparsed_uri.split(':')[0].
>>>>
>>>> Nick
>>>>
>>>> Ville Silventoinen wrote:
>>>>
>>>>> Hi,
>>>>>
>>>>> has anyone used req.parsed_uri fields successfully?
>>>>>
>>>>>   def handler(req):
>>>>>       req.content_type = "text/plain"
>>>>>       for field in req.parsed_uri:
>>>>>           req.write("%s," % str(field))
>>>>>       return apache.OK
>>>>>
>>>>> shows following:
>>>>>
>>>>>   None,None,None,None,None,None,/cgi-bin/vsi/auth/login.py,None,None,
>>
>>
>>
>>
>> _______________________________________________
>> Mod_python mailing list
>> Mod_python@modpython.org
>> http://mailman.modpython.org/mailman/listinfo/mod_python
>>
> 

From nick at dd.revealed.net  Tue Jun 28 15:03:23 2005
From: nick at dd.revealed.net (Nick)
Date: Tue Jun 28 15:03:40 2005
Subject: [mod_python] parsed_uri
In-Reply-To: <42C19D5A.6020006@dd.revealed.net>
References: <Pine.LNX.4.61.0506281712120.28791@wolf.ebi.ac.uk>	<42C17A22.30900@dd.revealed.net>	<Pine.LNX.4.61.0506281744460.28791@wolf.ebi.ac.uk>	<42C18173.6080800@dd.revealed.net>
	<42C18574.606@sympatico.ca> <42C19D5A.6020006@dd.revealed.net>
Message-ID: <42C19EFB.30905@dd.revealed.net>

Well, "bug" is too strong a word, and "most everything" is probably 
overstating the problem.  But something should probably change :)

Nick

Nick wrote:
> Then at the very least it's a documentation bug, since most everything 
> listed in parsed_uri will always be None.
> 
> Nick
> 
> Jim Gallacher wrote:
> 
>> I don't have time to look at the code right now, but I believe that 
>> mod_python just returns the parsed_uri structure in the apache request 
>> record. If this is the case then it doesn't constitute a mod_python 
>> bug as such. I'll investigate further tonight if time permits.
>>
>> Jim
>>
>> Nick wrote:
>>
>>> Hm... is this a bug in mod_python?  The original code checking 
>>> parsed_uri should have worked for that matter.
>>>
>>> Nick
>>>
>>> Ville Silventoinen wrote:
>>>
>>>> req.unparsed_uri.split(':')[0] returns just 
>>>> "/cgi-bin/vsi/auth/login.py".
>>>>
>>>> On Tue, 28 Jun 2005, Nick wrote:
>>>>
>>>>> If that's all you need to check, then there are SSL variables in 
>>>>> the subprocess_env.  Or, req.unparsed_uri.split(':')[0].
>>>>>
>>>>> Nick
>>>>>
>>>>> Ville Silventoinen wrote:
>>>>>
>>>>>> Hi,
>>>>>>
>>>>>> has anyone used req.parsed_uri fields successfully?
>>>>>>
>>>>>>   def handler(req):
>>>>>>       req.content_type = "text/plain"
>>>>>>       for field in req.parsed_uri:
>>>>>>           req.write("%s," % str(field))
>>>>>>       return apache.OK
>>>>>>
>>>>>> shows following:
>>>>>>
>>>>>>   None,None,None,None,None,None,/cgi-bin/vsi/auth/login.py,None,None,
>>>
>>>
>>>
>>>
>>>
>>> _______________________________________________
>>> Mod_python mailing list
>>> Mod_python@modpython.org
>>> http://mailman.modpython.org/mailman/listinfo/mod_python
>>>
>>
> 
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python

From grahamd at dscpl.com.au  Tue Jun 28 17:48:48 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Tue Jun 28 17:49:15 2005
Subject: [mod_python] Configuring Session.Session
In-Reply-To: <c298f2d705062806323ae99b13@mail.gmail.com>
References: <4617fd6d05062805452b852d11@mail.gmail.com>
	<c298f2d705062806323ae99b13@mail.gmail.com>
Message-ID: <f4538a06edf5976eeca276cb605e7ab1@dscpl.com.au>

At a quick glance I can't see how this may or may not be used by the 
Session
implementation, but isn't it possible to tie cookies to a particular 
path
within in a domain? If the session was somehow associated with a path, 
eg.
the handler root, could different session IDs for different parts of the
documentation tree simply be kept separate by appropriate use of Handler
directive in the root of each separate application context. How does the
existing ApplicationPath option come into this? Never exactly understood
what it did and thought that it was something related to having 
different
session contexts? Seems to me that this might be better than fudging 
what
name the session cookie uses.

On 28/06/2005, at 11:32 PM, Nicolas Lehuen wrote:

> Hi Wayne,
>
>  Right now it's not possible, unfortunately. It's not so difficult to 
> do, however, so you can expect it to be included in the next 
> mod_python release.
>
>  If this is really urgent I can provide you a hack which will give you 
> the ability to define the session cookie name using "PythonOption 
> SessionCookieName foobar ". But it will be definitely a hack and will 
> turn you mod_python version into a non-standard one, which is not a 
> good idea. So it's better to wait for the next release if you can do 
> so.
>
>  Regards,
>  Nicolas
>
> 2005/6/28, Wayne Pierce <shalofin@gmail.com>:
>  Is it possible to change the session name mod_python sends???I have a
> machine where I will be developing several mod_python apps and would
> like to keep the sessions separate.
>
> However, I have found that each app will use the same session name,
> which has caused conflicts (especially when I reuse code between
> apps).
>
> I didn't find anything in the documentation to do this.??Thanks,
>
> Wayne
>
> _______________________________________________
>  Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python


From nicolas.lehuen at gmail.com  Tue Jun 28 17:56:51 2005
From: nicolas.lehuen at gmail.com (Nicolas Lehuen)
Date: Tue Jun 28 17:56:59 2005
Subject: [mod_python] Configuring Session.Session
In-Reply-To: <f4538a06edf5976eeca276cb605e7ab1@dscpl.com.au>
References: <4617fd6d05062805452b852d11@mail.gmail.com>
	<c298f2d705062806323ae99b13@mail.gmail.com>
	<f4538a06edf5976eeca276cb605e7ab1@dscpl.com.au>
Message-ID: <c298f2d705062814561f1f987d@mail.gmail.com>

Duh, hence the code about ApplicationPath in Session.Session.make_cookie. 
This should work, of course. Thanks, Graham !

OK so Wayne, you may get what you want right now by setting the 
ApplicationPath option :

PythonOption ApplicationPath /path/to/my/app/as/an/url

For example if app1 is accessible through http://localhost/app1 and app2 
accessible through http://localhost/app2, then you would define PythonOption 
ApplicationPath /app1 in a Directory section or in a .htaccess file for your 
first app, and PythonOption ApplicationPath /app2 for your second app.

Tell us if this works for you.

Regards,
Nicolas

2005/6/28, Graham Dumpleton <grahamd@dscpl.com.au>:
> 
> At a quick glance I can't see how this may or may not be used by the
> Session
> implementation, but isn't it possible to tie cookies to a particular
> path
> within in a domain? If the session was somehow associated with a path,
> eg.
> the handler root, could different session IDs for different parts of the
> documentation tree simply be kept separate by appropriate use of Handler
> directive in the root of each separate application context. How does the
> existing ApplicationPath option come into this? Never exactly understood
> what it did and thought that it was something related to having
> different
> session contexts? Seems to me that this might be better than fudging
> what
> name the session cookie uses.
> 
> On 28/06/2005, at 11:32 PM, Nicolas Lehuen wrote:
> 
> > Hi Wayne,
> >
> > Right now it's not possible, unfortunately. It's not so difficult to
> > do, however, so you can expect it to be included in the next
> > mod_python release.
> >
> > If this is really urgent I can provide you a hack which will give you
> > the ability to define the session cookie name using "PythonOption
> > SessionCookieName foobar ". But it will be definitely a hack and will
> > turn you mod_python version into a non-standard one, which is not a
> > good idea. So it's better to wait for the next release if you can do
> > so.
> >
> > Regards,
> > Nicolas
> >
> > 2005/6/28, Wayne Pierce <shalofin@gmail.com>:
> > Is it possible to change the session name mod_python sends?I have a
> > machine where I will be developing several mod_python apps and would
> > like to keep the sessions separate.
> >
> > However, I have found that each app will use the same session name,
> > which has caused conflicts (especially when I reuse code between
> > apps).
> >
> > I didn't find anything in the documentation to do this.Thanks,
> >
> > Wayne
> >
> > _______________________________________________
> > Mod_python mailing list
> > Mod_python@modpython.org
> > http://mailman.modpython.org/mailman/listinfo/mod_python
> >
> > _______________________________________________
> > Mod_python mailing list
> > Mod_python@modpython.org
> > http://mailman.modpython.org/mailman/listinfo/mod_python
> 
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20050628/5600c16f/attachment.html
From dharana at dharana.net  Tue Jun 28 18:06:09 2005
From: dharana at dharana.net (dharana)
Date: Tue Jun 28 18:06:19 2005
Subject: [mod_python] Configuring Session.Session
In-Reply-To: <f4538a06edf5976eeca276cb605e7ab1@dscpl.com.au>
References: <4617fd6d05062805452b852d11@mail.gmail.com>	<c298f2d705062806323ae99b13@mail.gmail.com>
	<f4538a06edf5976eeca276cb605e7ab1@dscpl.com.au>
Message-ID: <42C1C9D1.6040407@dharana.net>

Graham Dumpleton wrote:
> At a quick glance I can't see how this may or may not be used by the 
> Session
> implementation, but isn't it possible to tie cookies to a particular path
> within in a domain? If the session was somehow associated with a path, eg.
> the handler root, could different session IDs for different parts of the
> documentation tree simply be kept separate by appropriate use of Handler
> directive in the root of each separate application context. How does the
> existing ApplicationPath option come into this? Never exactly understood
> what it did and thought that it was something related to having different
> session contexts? Seems to me that this might be better than fudging what
> name the session cookie uses.

It seems Nicolas was faster. Anyways, I don't believe it will hurt to have the 
cookie name configurable btw.

-- 
dharana

From grahamd at dscpl.com.au  Tue Jun 28 18:24:43 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Tue Jun 28 18:25:14 2005
Subject: [mod_python] Configuring Session.Session
In-Reply-To: <c298f2d705062814561f1f987d@mail.gmail.com>
References: <4617fd6d05062805452b852d11@mail.gmail.com>
	<c298f2d705062806323ae99b13@mail.gmail.com>
	<f4538a06edf5976eeca276cb605e7ab1@dscpl.com.au>
	<c298f2d705062814561f1f987d@mail.gmail.com>
Message-ID: <1697ec0d6b2183cf9d16b40c6957989e@dscpl.com.au>

Now that I have been up for a few minutes and had a shower and my head 
is
clear, I can answer this properly.

It should not be necessary to use ApplicationPath provided that 
PythonHandler
is set at the root of each applications directory structure. To my 
mind, this
is the preferable thing to do than setting PythonHandler at some level 
above
and hosting multiple applications under the same place. The reason is 
that
the handler directory accessible by req.hlist.directory gives useful 
context
information about where the root of the application is. This can be 
used in
ways such as retrieving config or template files from near the root of 
the
application directory structure.

That said, the use of a distinct PythonHandler directive will not work 
to keep
the session contexts separate in the case where the the application 
directories
are not stored under the HTTP server document root. For example, if 
they are
stored in a user directory accessed using "/~user", or if the directory 
is mapped
into the URL namespace from elsewhere using Alias directive or other 
means. In
this case the ApplicationPath notionally is set to "/" so they will 
share the
same context regardless.

Note there is also currently a bug where if PythonHandler is defined in 
a Location
directive instead of a Directory directive you'll get a Python error. 
For now
one has to set ApplicationPath explicitly to avoid the bug, but in next 
version
it to will default to "/" in that case and so may still need to be 
overriden
explicitly in future to keep it separate.

Anyway, I would suggest simply setting PythonHandler at the root of 
each application
and only use ApplicationPath if one of the other situations is the case.

Graham

On 29/06/2005, at 7:56 AM, Nicolas Lehuen wrote:

> Duh, hence the code about ApplicationPath in 
> Session.Session.make_cookie. This should work, of course. Thanks, 
> Graham !
>
>  OK so Wayne, you may get what you want right now by setting the 
> ApplicationPath option :
>
> PythonOption ApplicationPath /path/to/my/app/as/an/url
>
>  For example if app1 is accessible through http://localhost/app1 and 
> app2 accessible through http://localhost/app2, then you would define 
> PythonOption ApplicationPath /app1 in a Directory section or in a 
> .htaccess file for your first app, and PythonOption ApplicationPath 
> /app2 for your second app.
>
> Tell us if this works for you.
>
>  Regards,
>  Nicolas
>
> 2005/6/28, Graham Dumpleton <grahamd@dscpl.com.au>:
>  At a quick glance I can't see how this may or may not be used by the
> Session
> implementation, but isn't it possible to tie cookies to a particular
> path
> within in a domain? If the session was somehow associated with a path,
> eg.
> the handler root, could different session IDs for different parts of 
> the
> documentation tree simply be kept separate by appropriate use of 
> Handler
> directive in the root of each separate application context. How does 
> the
> existing ApplicationPath option come into this? Never exactly 
> understood
> what it did and thought that it was something related to having
> different
> session contexts? Seems to me that this might be better than fudging
> what
> name the session cookie uses.
>
> On 28/06/2005, at 11:32 PM, Nicolas Lehuen wrote:
>
> > Hi Wayne,
> >
> >??Right now it's not possible, unfortunately. It's not so difficult to
> > do, however, so you can expect it to be included in the next
>  > mod_python release.
> >
> >??If this is really urgent I can provide you a hack which will give 
> you
> > the ability to define the session cookie name using "PythonOption
> > SessionCookieName foobar ". But it will be definitely a hack and will
> > turn you mod_python version into a non-standard one, which is not a
> > good idea. So it's better to wait for the next release if you can do
> > so.
> >
> >??Regards,
> >??Nicolas
> >
> > 2005/6/28, Wayne Pierce < shalofin@gmail.com>:
> >??Is it possible to change the session name mod_python sends?I have a
> > machine where I will be developing several mod_python apps and would
>  > like to keep the sessions separate.
> >
> > However, I have found that each app will use the same session name,
> > which has caused conflicts (especially when I reuse code between
> > apps).
> >
>  > I didn't find anything in the documentation to do this.Thanks,
> >
> > Wayne
> >
> > _______________________________________________
> >??Mod_python mailing list
> > Mod_python@modpython.org
> > http://mailman.modpython.org/mailman/listinfo/mod_python
> >
> > _______________________________________________
>  > Mod_python mailing list
> > Mod_python@modpython.org
> > http://mailman.modpython.org/mailman/listinfo/mod_python
>
>


From grahamd at dscpl.com.au  Tue Jun 28 18:34:17 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Tue Jun 28 18:34:32 2005
Subject: [mod_python] Configuring Session.Session
In-Reply-To: <42C1C9D1.6040407@dharana.net>
References: <4617fd6d05062805452b852d11@mail.gmail.com>	<c298f2d705062806323ae99b13@mail.gmail.com>
	<f4538a06edf5976eeca276cb605e7ab1@dscpl.com.au>
	<42C1C9D1.6040407@dharana.net>
Message-ID: <4dfef5de1ef978b6e78287a80c3e56e6@dscpl.com.au>


On 29/06/2005, at 8:06 AM, dharana wrote:

> Graham Dumpleton wrote:
>> At a quick glance I can't see how this may or may not be used by the 
>> Session
>> implementation, but isn't it possible to tie cookies to a particular 
>> path
>> within in a domain? If the session was somehow associated with a 
>> path, eg.
>> the handler root, could different session IDs for different parts of 
>> the
>> documentation tree simply be kept separate by appropriate use of 
>> Handler
>> directive in the root of each separate application context. How does 
>> the
>> existing ApplicationPath option come into this? Never exactly 
>> understood
>> what it did and thought that it was something related to having 
>> different
>> session contexts? Seems to me that this might be better than fudging 
>> what
>> name the session cookie uses.
>
> It seems Nicolas was faster.

Faster in what respect? What is better, a quick answer or a correct 
answer? :-)

Although I did notice that Nicolas' reply to my ApplicationPath mail 
got to
me before my original even came back from the mailing list. Spooky.

> Anyways, I don't believe it will hurt to have the cookie name 
> configurable btw.

One also shouldn't let rampant featureism creep in either. If there is 
already
one good way of doing things, one shouldn't be adding in new stuff just 
for the
sake of it. In practice I don't feel that the ability to change the 
cookie name
would get used. The only good reason I can see for the ability to 
change the
name is to eliminate "py" out of the cookie name to hide the fact that 
Python
is used in an implementation of a site. I don't believe one gains 
anything
more than that from the feature given that ApplicationPath already 
provides a
better solution.

Graham

From grahamd at dscpl.com.au  Tue Jun 28 20:20:49 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Tue Jun 28 20:21:08 2005
Subject: [mod_python] writting a handler in python
Message-ID: <1120004449.12111@dscpl.user.openhosting.com>

Alejandro Mery wrote ..
> hi, i need to do a mod_foo (written in python) to be able to:
> AddHandler Foo .foo
> 
> can you give me a hint, url or something to learn how can i benefit of
> mod_python to achieve my goal?

Reading the documentation on the mod_python site would be a good start.

  http://www.modpython.org

Having done that, then try and work out what the following does:

  # .htaccess file

  AddHandler python-program .foo
  PythonHandler mod_foo
  PythonDebug On

  # mod_foo.py file

  from mod_python import apache

  def handler(req):
    req.content_type = "text/plain"
    req.send_http_header()
    req.write("uri = %s"%req.uri)
    return apache.OK

Graham
From grahamd at dscpl.com.au  Tue Jun 28 20:40:04 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Tue Jun 28 20:40:10 2005
Subject: [mod_python] Internal Server Error
Message-ID: <1120005604.24215@dscpl.user.openhosting.com>

Julien wrote ..

> I'm using mod_python 3.1.3 with Apache 2.0.54 on a Debian box with the
> publisher handler and the Clearsilver template engine, and from time to
> time apache returns an 500 error code (Internal Server Error). 
> Apache errog.log file looks like :

Are you using "index.py" in multiple directories, especially in directories
that are children of a parent that also uses that filename. If so, you may
be getting affected by:

  http://issues.apache.org/jira/browse/MODPYTHON-9

When you get a child directory module get stuck as described, if you
then access a parent directory module, the function you want will not be
able to be found and it may manifest with the error you see.

Not sure though, as PythonInterpPerDirectory should possibly avoid the
problem and I would also possibly have expected a not found error
instead of a 500 error.

You might also indicate if you explicitly use the PythonPath directive,
whether you use packages, whether a module or package is imported
both using "import" statement as well as "apache.import_module()"
and finally whether you have Apache "MultiViews" option enabled for
the directory. Use of all these can trigger strange things in certain
cases so more information about these might help to track it down.

> import os.path

You don't need to explictly import "os.path", it is sufficient to import just "os"
as it will import approriate module as "path". I only mention this as there is an
obtuse comment in Python source code which suggests that import "os.path"
may be frowned upon and a special check required because people do do it.

        # Grrr, some people "import os.path"
        if len(parts) == 2 and hasattr(top_module, parts[1]):
            return top_module

Graham
From grahamd at dscpl.com.au  Wed Jun 29 02:31:00 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Wed Jun 29 02:31:05 2005
Subject: [mod_python] Internal Server Error
Message-ID: <1120026660.28140@dscpl.user.openhosting.com>

Graham Dumpleton wrote ..
> Julien wrote ..
> 
> > import os.path
> 
> You don't need to explictly import "os.path", it is sufficient to import
> just "os"
> as it will import approriate module as "path". I only mention this as there
> is an
> obtuse comment in Python source code which suggests that import "os.path"
> may be frowned upon and a special check required because people do do it.
> 
>         # Grrr, some people "import os.path"
>         if len(parts) == 2 and hasattr(top_module, parts[1]):
>             return top_module

I had one direct email commenting on this, so after a little bit more
research, can only assume that this is because the "os" module isn't
a package yet a mechanism designed for importing sub modules or
sub packages of a package is being used.

Graham
From bortzmeyer at nic.fr  Tue Jun 28 15:49:50 2005
From: bortzmeyer at nic.fr (Stephane Bortzmeyer)
Date: Wed Jun 29 05:11:30 2005
Subject: [mod_python] Re: Internal Server Error
In-Reply-To: <1119964421.7322.30.camel@horologium>
References: <1119964421.7322.30.camel@horologium>
Message-ID: <20050628194950.GA1539@laperouse.internatif.org>

On Tue, Jun 28, 2005 at 03:13:40PM +0200,
 Julien <jcigar@ulb.ac.be> wrote 
 a message of 108 lines which said:

> from time to time apache returns an 500 error code
...
> [Tue Jun 28 14:42:12 2005] [error] [client 164.x.x.x] PythonHandler
> mod_python.publisher: ImportError: No module named taxal

Since mod_python.publisher does not handle properly several Python
modules with the same name, a possible reason is that *some* Apache
childs loaded another module "index" which does not have "taxal"... It
would explain the "from time to time" that I had also.

From grahamd at dscpl.com.au  Wed Jun 29 06:17:00 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Wed Jun 29 06:17:12 2005
Subject: [mod_python] Internal Server Error
In-Reply-To: <1119964421.7322.30.camel@horologium>
References: <1119964421.7322.30.camel@horologium>
Message-ID: <c0dd5b1583bdbd2069fed1579389257f@dscpl.com.au>


On 28/06/2005, at 11:13 PM, Julien wrote:
> As I'm using the publisher handler, my index.py looks like :
>
> import sys
> import os.path
> import neo_cgi
> import neo_util
> import neo_cs
>
> from mod_python import util, apache
> from psycopg import QuotedString
>
> config = apache.import_module('config', autoreload = 0, log = 0)
> utils = apache.import_module('utils', autoreload = 0, log = 0)
> specimen = apache.import_module('specimen', autoreload = 0, log = 0)
> taxon = apache.import_module('taxon', autoreload = 0, log = 0)
> fulltextsearch = apache.import_module('fulltextsearch', autoreload = 0,
> log = 0)
>
> template_directory  = config.getTemplateDirectory()
> template_main       = config.getTemplateMain()
> template_menu       = config.getTemplateMenu()
>
> def index(req):
>     return home(req)
>
> def home(req):
>     return _render(req, 'home')
>
> def links(req):
>     return _render(req, 'links')
>
> def contact(req):
>     return _render(req, 'contact')
>
> def taxal(req):
>     sort    = req.form.getfirst('sort')
>     order   = req.form.getfirst('order')
>
>     tl = taxon.taxon()
>     tl.getTaxaList(sort, order)
>     hdf = tl.getHDF()
>     return _render(req, 'taxalist', hdf)
>
> (...)
>
> So for the above example if I GET http://b.abc.be/birds/taxal it should
> run the "def taxal(req)" function ... I don't understand why I get a
> "mod_python.publisher: ImportError: No module named taxal" error 
> message
> in the apache logfile.

Okay, lets try something different. You should be able to use either:

   http://b.abc.be/birds/taxal

or:

   http://b.abc.be/birds/index/taxal

Since the first variant doesn't work, try changing all your URLs to use
the second form. Ie., don't rely on mod_python.publisher automatically
inserting "index" into the path to determine the file to load. I suggest
this as there have been some issues with this ability for "index" to be
inserted automatically. See for example:

   http://issues.apache.org/jira/browse/MODPYTHON-23
   http://issues.apache.org/jira/browse/MODPYTHON-24

There may be other cases I didn't stumble across.

Besides that, at this stage all I can suggest is to use the almost drop
in replacement for mod_python.publisher that exists and see if that gets
rid of the problem. Required changes would be a few lines in the Apache
configuration and change away from using "apache.import_module()" to a
replacement function. If you get desperate enough to want to try that
let me know and I'll let you know what to do off list.

Graham

From jcigar at ulb.ac.be  Wed Jun 29 07:48:43 2005
From: jcigar at ulb.ac.be (Julien)
Date: Wed Jun 29 07:47:01 2005
Subject: [mod_python] Internal Server Error
In-Reply-To: <c0dd5b1583bdbd2069fed1579389257f@dscpl.com.au>
References: <1119964421.7322.30.camel@horologium>
	<c0dd5b1583bdbd2069fed1579389257f@dscpl.com.au>
Message-ID: <1120045723.11851.15.camel@horologium>

On Wed, 2005-06-29 at 20:17 +1000, Graham Dumpleton wrote:
> On 28/06/2005, at 11:13 PM, Julien wrote:
> > As I'm using the publisher handler, my index.py looks like :
> >
> > import sys
> > import os.path
> > import neo_cgi
> > import neo_util
> > import neo_cs
> >
> > from mod_python import util, apache
> > from psycopg import QuotedString
> >
> > config = apache.import_module('config', autoreload = 0, log = 0)
> > utils = apache.import_module('utils', autoreload = 0, log = 0)
> > specimen = apache.import_module('specimen', autoreload = 0, log = 0)
> > taxon = apache.import_module('taxon', autoreload = 0, log = 0)
> > fulltextsearch = apache.import_module('fulltextsearch', autoreload = 0,
> > log = 0)
> >
> > template_directory  = config.getTemplateDirectory()
> > template_main       = config.getTemplateMain()
> > template_menu       = config.getTemplateMenu()
> >
> > def index(req):
> >     return home(req)
> >
> > def home(req):
> >     return _render(req, 'home')
> >
> > def links(req):
> >     return _render(req, 'links')
> >
> > def contact(req):
> >     return _render(req, 'contact')
> >
> > def taxal(req):
> >     sort    = req.form.getfirst('sort')
> >     order   = req.form.getfirst('order')
> >
> >     tl = taxon.taxon()
> >     tl.getTaxaList(sort, order)
> >     hdf = tl.getHDF()
> >     return _render(req, 'taxalist', hdf)
> >
> > (...)
> >
> > So for the above example if I GET http://b.abc.be/birds/taxal it should
> > run the "def taxal(req)" function ... I don't understand why I get a
> > "mod_python.publisher: ImportError: No module named taxal" error 
> > message
> > in the apache logfile.
> 
> Okay, lets try something different. You should be able to use either:
> 
>    http://b.abc.be/birds/taxal
> 
> or:
> 
>    http://b.abc.be/birds/index/taxal
> 
> Since the first variant doesn't work, try changing all your URLs to use
> the second form. Ie., don't rely on mod_python.publisher automatically
> inserting "index" into the path to determine the file to load. I suggest
> this as there have been some issues with this ability for "index" to be
> inserted automatically. See for example:
> 
>    http://issues.apache.org/jira/browse/MODPYTHON-23
>    http://issues.apache.org/jira/browse/MODPYTHON-24
> 
> There may be other cases I didn't stumble across.
> 
> Besides that, at this stage all I can suggest is to use the almost drop
> in replacement for mod_python.publisher that exists and see if that gets
> rid of the problem. Required changes would be a few lines in the Apache
> configuration and change away from using "apache.import_module()" to a
> replacement function. If you get desperate enough to want to try that
> let me know and I'll let you know what to do off list.
> 
> Graham
> 

it seems to work with index.py/taxal in place of /taxal
thanks!

-- 
Julien Cigar (jcigar@ulb.ac.be)
Belgian Biodiversity Information Facility
Universit? Libre de Bruxelles
Campus de la Plaine CP 257
B?timent NO, Bureau 4 N4 115C (Niveau 4)
Boulevard du Triomphe, entr?e ULB 2
B-1050 Bruxelles
http://www.bebif.be

From shalofin at gmail.com  Wed Jun 29 11:50:07 2005
From: shalofin at gmail.com (Wayne Pierce)
Date: Wed Jun 29 11:50:16 2005
Subject: [mod_python] Configuring Session.Session
In-Reply-To: <4617fd6d05062908491e4fd00e@mail.gmail.com>
References: <4617fd6d05062805452b852d11@mail.gmail.com>
	<c298f2d705062806323ae99b13@mail.gmail.com>
	<f4538a06edf5976eeca276cb605e7ab1@dscpl.com.au>
	<42C1C9D1.6040407@dharana.net>
	<4dfef5de1ef978b6e78287a80c3e56e6@dscpl.com.au>
	<4617fd6d05062908491e4fd00e@mail.gmail.com>
Message-ID: <4617fd6d0506290850e11aea2@mail.gmail.com>

After hitting send I realized the last message only went to Graham...

On 6/29/05, Wayne Pierce <shalofin@gmail.com> wrote:
> It works for me with both ApplicationPath and the explicity
> PythonHandler for each directory.  One of my applications (which I
> can't change yet) is running off the web root; so all the other
> applications are technically under that app.
> 
> For archival purposes, here are the relevant lines in my
> .../conf.d/python.conf file:
> 
> <Directory "/var/www/html">
>     AddHandler mod_python .psp
>     PythonHandler mod_python.psp
>     PythonOption ApplicationPath /var/www/html
>     PythonDebug Off
> </Directory>
> 
> <Directory "/var/www/html/dev/chblmd">
>     AddHandler mod_python .psp
>     PythonHandler mod_python.psp
>     PythonOption ApplicationPath /var/www/html/dev/chblmd
>     PythonDebug Off
> </Directory>
> 
> Thanks for all the help,
> 
> Wayne
> 
> On 6/28/05, Graham Dumpleton <grahamd@dscpl.com.au> wrote:
> >
> > On 29/06/2005, at 8:06 AM, dharana wrote:
> >
> > > Graham Dumpleton wrote:
> > >> At a quick glance I can't see how this may or may not be used by the
> > >> Session
> > >> implementation, but isn't it possible to tie cookies to a particular
> > >> path
> > >> within in a domain? If the session was somehow associated with a
> > >> path, eg.
> > >> the handler root, could different session IDs for different parts of
> > >> the
> > >> documentation tree simply be kept separate by appropriate use of
> > >> Handler
> > >> directive in the root of each separate application context. How does
> > >> the
> > >> existing ApplicationPath option come into this? Never exactly
> > >> understood
> > >> what it did and thought that it was something related to having
> > >> different
> > >> session contexts? Seems to me that this might be better than fudging
> > >> what
> > >> name the session cookie uses.
> > >
> > > It seems Nicolas was faster.
> >
> > Faster in what respect? What is better, a quick answer or a correct
> > answer? :-)
> >
> > Although I did notice that Nicolas' reply to my ApplicationPath mail
> > got to
> > me before my original even came back from the mailing list. Spooky.
> >
> > > Anyways, I don't believe it will hurt to have the cookie name
> > > configurable btw.
> >
> > One also shouldn't let rampant featureism creep in either. If there is
> > already
> > one good way of doing things, one shouldn't be adding in new stuff just
> > for the
> > sake of it. In practice I don't feel that the ability to change the
> > cookie name
> > would get used. The only good reason I can see for the ability to
> > change the
> > name is to eliminate "py" out of the cookie name to hide the fact that
> > Python
> > is used in an implementation of a site. I don't believe one gains
> > anything
> > more than that from the feature given that ApplicationPath already
> > provides a
> > better solution.
> >
> > Graham
> >
> > _______________________________________________
> > Mod_python mailing list
> > Mod_python@modpython.org
> > http://mailman.modpython.org/mailman/listinfo/mod_python
> >
>

From dharana at dharana.net  Wed Jun 29 14:51:39 2005
From: dharana at dharana.net (dharana)
Date: Wed Jun 29 14:51:49 2005
Subject: [mod_python] Configuring Session.Session
In-Reply-To: <4dfef5de1ef978b6e78287a80c3e56e6@dscpl.com.au>
References: <4617fd6d05062805452b852d11@mail.gmail.com>	<c298f2d705062806323ae99b13@mail.gmail.com>
	<f4538a06edf5976eeca276cb605e7ab1@dscpl.com.au>
	<42C1C9D1.6040407@dharana.net>
	<4dfef5de1ef978b6e78287a80c3e56e6@dscpl.com.au>
Message-ID: <42C2EDBB.4010109@dharana.net>

Graham Dumpleton wrote:
> 
> On 29/06/2005, at 8:06 AM, dharana wrote:
> 
>> Graham Dumpleton wrote:
>>
>>> At a quick glance I can't see how this may or may not be used by the 
>>> Session
>>> implementation, but isn't it possible to tie cookies to a particular 
>>> path
>>> within in a domain? If the session was somehow associated with a 
>>> path, eg.
>>> the handler root, could different session IDs for different parts of the
>>> documentation tree simply be kept separate by appropriate use of Handler
>>> directive in the root of each separate application context. How does the
>>> existing ApplicationPath option come into this? Never exactly understood
>>> what it did and thought that it was something related to having 
>>> different
>>> session contexts? Seems to me that this might be better than fudging 
>>> what
>>> name the session cookie uses.
>>
>>
>> It seems Nicolas was faster.
> 
> 
> Faster in what respect? 

Faster in answering with a solution.

> What is better, a quick answer or a correct answer? :-)
> 

I don't need to answer this, it's evident :)

> Although I did notice that Nicolas' reply to my ApplicationPath mail got to
> me before my original even came back from the mailing list. Spooky.
> 
>> Anyways, I don't believe it will hurt to have the cookie name 
>> configurable btw.
> 
> 
> One also shouldn't let rampant featureism creep in either. If there is 
> already
> one good way of doing things, one shouldn't be adding in new stuff just 
> for the
> sake of it. 

I also think about feature-creeping like you but in this case should I subclass 
or modify modpython's code to change a cookie name?

> In practice I don't feel that the ability to change the 
> cookie name
> would get used. The only good reason I can see for the ability to change 
> the
> name is to eliminate "py" out of the cookie name to hide the fact that 
> Python
> is used in an implementation of a site. 
> 

That's exactly what I was thinking about.

-- 
dharana

From mattnuzum at gmail.com  Wed Jun 29 20:44:05 2005
From: mattnuzum at gmail.com (Matthew Nuzum)
Date: Wed Jun 29 20:44:12 2005
Subject: [mod_python] creating httpd.conf on the file with python
Message-ID: <f3c0b4080506291744168d17ab@mail.gmail.com>

I'd like to add some brain power to my apache httpd.conf file. You can
do this with mod_perl (see attached below), but since python is better
than perl, I'd prefer to do it in python. Is this possible?

I've searched and looked through the archives, but I'm not having
luck. I likely don't know what terms to search for. An example or link
to some documentation would be greatly appreciated.

I'm using apache 1.3, libapach-mod-python2.3 version 2.7

I tried the obvious and added <Python></Python> and received an
Invalid Command error message.

Here is a snippet from mod_perl (old cobalt Raq server, I think):

<Perl>
use Apache::PerlSections();
use lib qw(/usr/sausalito/perl);
use CCE;
use Base::Httpd qw(httpd_get_vhost_conf_file);

my $cce = new CCE;
$cce->connectuds();

my @ssl_sites = $cce->find('Vsite', { 'SSL.enabled' => 1 }, {
'SSL.expires' => '^.+' });

# Only a temp variable until we go the whole hog.
my (@ssl_conf, $ip, $rewrite_rules, $proto, $ret);

# O.K. What we bassically want to do is build up new section in the conf file
# for SSL sections.
for my $oid (@ssl_sites)
{
my ($ok, $vsite) = $cce->get($oid);
my $conf_file = httpd_get_vhost_conf_file($vsite->{name});

open HTTPD_CONF, "<$conf_file" or die "Can't open $conf_file: $!\n";

# reset
@ssl_conf = ();

while(<HTTPD_CONF>)
{
if ( /^<VirtualHost ([\d\.]+)>/o )
{
$ip = $1;
# skip everything before the VirtualHost entry since it doesn't need
to be duplicated
last;
}
}

# read the rest
while(<HTTPD_CONF>)
{
# These two are for the rewrite options
s/http/https/go if (/^Rewrite/);
s/80/443/go if (/^Rewrite/);
s#https://$vsite->{fqdn}/#https://$vsite->{fqdn}:443/# if (/^RewriteRule/);
push @ssl_conf, $_;

# Hardcoded, issues with mod_perl and cobalt modules.
if (/^<\/Virtual/ && (-f "$vsite->{basedir}/certs/certificate") && (-f
"$vsite->{basedir}/certs/key"))
{
$PerlConfig .= "Listen $ip:443\n";
$PerlConfig .= "<VirtualHost $ip:443>\n";
$PerlConfig .= "SSLengine on\n";
if (-f "$vsite->{basedir}/certs/ca-certs")
{
$PerlConfig .= "SSLCACertificateFile $vsite->{basedir}/certs/ca-certs\n";
}
$PerlConfig .= "SSLCertificateFile $vsite->{basedir}/certs/certificate\n";
$PerlConfig .= "SSLCertificateKeyFile $vsite->{basedir}/certs/key\n";
$PerlConfig .= join('', @ssl_conf);
}
}
close HTTPD_CONF;
}

$cce->bye('SUCCESS');

if (-f '/etc/DEBUG')
{
print STDERR Apache::PerlSections->dump();
}
</Perl>
-- 
Matthew Nuzum
www.bearfruit.org

From grahamd at dscpl.com.au  Wed Jun 29 20:58:12 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Wed Jun 29 20:58:20 2005
Subject: [mod_python] creating httpd.conf on the file with python
Message-ID: <1120093092.19280@dscpl.user.openhosting.com>


Matthew Nuzum wrote ..
> I'd like to add some brain power to my apache httpd.conf file. You can
> do this with mod_perl (see attached below), but since python is better
> than perl, I'd prefer to do it in python. Is this possible?

Sorry, you are out of luck. No way of embedding Python code in the
actual httpd.conf so as to affect the configuration itself.

At least, not unless there is some magic feature I don't know about. :-)
From jcigar at ulb.ac.be  Thu Jun 30 05:50:12 2005
From: jcigar at ulb.ac.be (Julien)
Date: Thu Jun 30 05:48:37 2005
Subject: [mod_python] Internal Server Error
In-Reply-To: <1120045723.11851.15.camel@horologium>
References: <1119964421.7322.30.camel@horologium>
	<c0dd5b1583bdbd2069fed1579389257f@dscpl.com.au>
	<1120045723.11851.15.camel@horologium>
Message-ID: <1120125012.16557.6.camel@horologium>

After looking a bit more it seems that the problem was clearsilver.
In fact we used PSP before clearsilver, and we had no problems.

Any experience with clearsilver .. ?

Thanks,
Julien


On Wed, 2005-06-29 at 13:48 +0200, Julien wrote:
> On Wed, 2005-06-29 at 20:17 +1000, Graham Dumpleton wrote:
> > On 28/06/2005, at 11:13 PM, Julien wrote:
> > > As I'm using the publisher handler, my index.py looks like :
> > >
> > > import sys
> > > import os.path
> > > import neo_cgi
> > > import neo_util
> > > import neo_cs
> > >
> > > from mod_python import util, apache
> > > from psycopg import QuotedString
> > >
> > > config = apache.import_module('config', autoreload = 0, log = 0)
> > > utils = apache.import_module('utils', autoreload = 0, log = 0)
> > > specimen = apache.import_module('specimen', autoreload = 0, log = 0)
> > > taxon = apache.import_module('taxon', autoreload = 0, log = 0)
> > > fulltextsearch = apache.import_module('fulltextsearch', autoreload = 0,
> > > log = 0)
> > >
> > > template_directory  = config.getTemplateDirectory()
> > > template_main       = config.getTemplateMain()
> > > template_menu       = config.getTemplateMenu()
> > >
> > > def index(req):
> > >     return home(req)
> > >
> > > def home(req):
> > >     return _render(req, 'home')
> > >
> > > def links(req):
> > >     return _render(req, 'links')
> > >
> > > def contact(req):
> > >     return _render(req, 'contact')
> > >
> > > def taxal(req):
> > >     sort    = req.form.getfirst('sort')
> > >     order   = req.form.getfirst('order')
> > >
> > >     tl = taxon.taxon()
> > >     tl.getTaxaList(sort, order)
> > >     hdf = tl.getHDF()
> > >     return _render(req, 'taxalist', hdf)
> > >
> > > (...)
> > >
> > > So for the above example if I GET http://b.abc.be/birds/taxal it should
> > > run the "def taxal(req)" function ... I don't understand why I get a
> > > "mod_python.publisher: ImportError: No module named taxal" error 
> > > message
> > > in the apache logfile.
> > 
> > Okay, lets try something different. You should be able to use either:
> > 
> >    http://b.abc.be/birds/taxal
> > 
> > or:
> > 
> >    http://b.abc.be/birds/index/taxal
> > 
> > Since the first variant doesn't work, try changing all your URLs to use
> > the second form. Ie., don't rely on mod_python.publisher automatically
> > inserting "index" into the path to determine the file to load. I suggest
> > this as there have been some issues with this ability for "index" to be
> > inserted automatically. See for example:
> > 
> >    http://issues.apache.org/jira/browse/MODPYTHON-23
> >    http://issues.apache.org/jira/browse/MODPYTHON-24
> > 
> > There may be other cases I didn't stumble across.
> > 
> > Besides that, at this stage all I can suggest is to use the almost drop
> > in replacement for mod_python.publisher that exists and see if that gets
> > rid of the problem. Required changes would be a few lines in the Apache
> > configuration and change away from using "apache.import_module()" to a
> > replacement function. If you get desperate enough to want to try that
> > let me know and I'll let you know what to do off list.
> > 
> > Graham
> > 
> 
> it seems to work with index.py/taxal in place of /taxal
> thanks!
> 
-- 
Julien Cigar (jcigar@ulb.ac.be)
Belgian Biodiversity Information Facility
Universit? Libre de Bruxelles
Campus de la Plaine CP 257
B?timent NO, Bureau 4 N4 115C (Niveau 4)
Boulevard du Triomphe, entr?e ULB 2
B-1050 Bruxelles
http://www.bebif.be

From jcigar at ulb.ac.be  Thu Jun 30 07:25:26 2005
From: jcigar at ulb.ac.be (Julien)
Date: Thu Jun 30 07:24:08 2005
Subject: [mod_python] Internal Server Error
In-Reply-To: <1120125012.16557.6.camel@horologium>
References: <1119964421.7322.30.camel@horologium>
	<c0dd5b1583bdbd2069fed1579389257f@dscpl.com.au>
	<1120045723.11851.15.camel@horologium>
	<1120125012.16557.6.camel@horologium>
Message-ID: <1120130726.16557.8.camel@horologium>

Okay.. I found the problem :
http://groups.yahoo.com/group/ClearSilver/message/267

/me happy

On Thu, 2005-06-30 at 11:50 +0200, Julien wrote:
> After looking a bit more it seems that the problem was clearsilver.
> In fact we used PSP before clearsilver, and we had no problems.
> 
> Any experience with clearsilver .. ?
> 
> Thanks,
> Julien
> 
> 
> On Wed, 2005-06-29 at 13:48 +0200, Julien wrote:
> > On Wed, 2005-06-29 at 20:17 +1000, Graham Dumpleton wrote:
> > > On 28/06/2005, at 11:13 PM, Julien wrote:
> > > > As I'm using the publisher handler, my index.py looks like :
> > > >
> > > > import sys
> > > > import os.path
> > > > import neo_cgi
> > > > import neo_util
> > > > import neo_cs
> > > >
> > > > from mod_python import util, apache
> > > > from psycopg import QuotedString
> > > >
> > > > config = apache.import_module('config', autoreload = 0, log = 0)
> > > > utils = apache.import_module('utils', autoreload = 0, log = 0)
> > > > specimen = apache.import_module('specimen', autoreload = 0, log = 0)
> > > > taxon = apache.import_module('taxon', autoreload = 0, log = 0)
> > > > fulltextsearch = apache.import_module('fulltextsearch', autoreload = 0,
> > > > log = 0)
> > > >
> > > > template_directory  = config.getTemplateDirectory()
> > > > template_main       = config.getTemplateMain()
> > > > template_menu       = config.getTemplateMenu()
> > > >
> > > > def index(req):
> > > >     return home(req)
> > > >
> > > > def home(req):
> > > >     return _render(req, 'home')
> > > >
> > > > def links(req):
> > > >     return _render(req, 'links')
> > > >
> > > > def contact(req):
> > > >     return _render(req, 'contact')
> > > >
> > > > def taxal(req):
> > > >     sort    = req.form.getfirst('sort')
> > > >     order   = req.form.getfirst('order')
> > > >
> > > >     tl = taxon.taxon()
> > > >     tl.getTaxaList(sort, order)
> > > >     hdf = tl.getHDF()
> > > >     return _render(req, 'taxalist', hdf)
> > > >
> > > > (...)
> > > >
> > > > So for the above example if I GET http://b.abc.be/birds/taxal it should
> > > > run the "def taxal(req)" function ... I don't understand why I get a
> > > > "mod_python.publisher: ImportError: No module named taxal" error 
> > > > message
> > > > in the apache logfile.
> > > 
> > > Okay, lets try something different. You should be able to use either:
> > > 
> > >    http://b.abc.be/birds/taxal
> > > 
> > > or:
> > > 
> > >    http://b.abc.be/birds/index/taxal
> > > 
> > > Since the first variant doesn't work, try changing all your URLs to use
> > > the second form. Ie., don't rely on mod_python.publisher automatically
> > > inserting "index" into the path to determine the file to load. I suggest
> > > this as there have been some issues with this ability for "index" to be
> > > inserted automatically. See for example:
> > > 
> > >    http://issues.apache.org/jira/browse/MODPYTHON-23
> > >    http://issues.apache.org/jira/browse/MODPYTHON-24
> > > 
> > > There may be other cases I didn't stumble across.
> > > 
> > > Besides that, at this stage all I can suggest is to use the almost drop
> > > in replacement for mod_python.publisher that exists and see if that gets
> > > rid of the problem. Required changes would be a few lines in the Apache
> > > configuration and change away from using "apache.import_module()" to a
> > > replacement function. If you get desperate enough to want to try that
> > > let me know and I'll let you know what to do off list.
> > > 
> > > Graham
> > > 
> > 
> > it seems to work with index.py/taxal in place of /taxal
> > thanks!
> > 
-- 
Julien Cigar (jcigar@ulb.ac.be)
Belgian Biodiversity Information Facility
Universit? Libre de Bruxelles
Campus de la Plaine CP 257
B?timent NO, Bureau 4 N4 115C (Niveau 4)
Boulevard du Triomphe, entr?e ULB 2
B-1050 Bruxelles
http://www.bebif.be

From dharana at dharana.net  Thu Jun 30 07:38:32 2005
From: dharana at dharana.net (dharana)
Date: Thu Jun 30 07:38:52 2005
Subject: [mod_python] Memory limit of mod_python interpreter
Message-ID: <42C3D9B8.8090308@dharana.net>

Is there any possibility of specifying a hard limit for memory usage?

Currently, there is no way of stopping a custom handler from consuming all 
available memory, right?

Also, is there any apache-specific limit on the time a request will run or is it 
by default unlimited? (I know HTTP requests timeout earlier but I'm interested 
in server processes).

-- 
dharana

From gnulife at gmail.com  Thu Jun 30 08:39:04 2005
From: gnulife at gmail.com (GNULife)
Date: Thu Jun 30 08:41:13 2005
Subject: [mod_python] How to get the current directory?
Message-ID: <42C3E7E8.9040901@gmail.com>

I have a test.py in d:\temp , I want to know where's test.py when I run
it. I have tried to join "os.getcwd()" into test.py , but it return
"C:\\Program Files\\Apache Group\\Apache2". How to do it?
From amery at geeks.cl  Thu Jun 30 16:10:22 2005
From: amery at geeks.cl (Alejandro Mery)
Date: Thu Jun 30 16:10:22 2005
Subject: [mod_python] writting a handler in python
In-Reply-To: <1120004449.12111@dscpl.user.openhosting.com>
References: <1120004449.12111@dscpl.user.openhosting.com>
Message-ID: <42C451AE.4060702@geeks.cl>


> Reading the documentation on the mod_python site would be a good start.
> 
>   http://www.modpython.org
> 

:-)

i haven't found anything about on python-program on mod_python manual 
3.1.3, i guess i should re-reading (on print) carefully but i need to 
buy ink and paper before.

> Having done that, then try and work out what the following does:
> 
>   # .htaccess file
> 
>   AddHandler python-program .foo
>   PythonHandler mod_foo
>   PythonDebug On
> 
>   # mod_foo.py file
> 
>   from mod_python import apache
> 
>   def handler(req):
>     req.content_type = "text/plain"
>     req.send_http_header()
>     req.write("uri = %s"%req.uri)
>     return apache.OK
> 
> Graham

my last question, how would that be to have mod_foo handling .foo and 
mod_bar handling .bar

the changes i have tried always end on an error :-\

please :)

Alejandro
From grahamd at dscpl.com.au  Thu Jun 30 18:05:28 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Thu Jun 30 18:05:40 2005
Subject: [mod_python] How to get the current directory?
In-Reply-To: <42C3E7E8.9040901@gmail.com>
References: <42C3E7E8.9040901@gmail.com>
Message-ID: <e817e28ae940936fa3b8ce27bdb42c9a@dscpl.com.au>


On 30/06/2005, at 10:39 PM, GNULife wrote:

> I have a test.py in d:\temp , I want to know where's test.py when I run
> it. I have tried to join "os.getcwd()" into test.py , but it return
> "C:\\Program Files\\Apache Group\\Apache2". How to do it?

import os

directory = os.path.dirname(__file__)

From grahamd at dscpl.com.au  Thu Jun 30 18:21:33 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Thu Jun 30 18:21:57 2005
Subject: [mod_python] writting a handler in python
In-Reply-To: <42C451AE.4060702@geeks.cl>
References: <1120004449.12111@dscpl.user.openhosting.com>
	<42C451AE.4060702@geeks.cl>
Message-ID: <524cd1c0f87edd9732e20dda0ec9253e@dscpl.com.au>


On 01/07/2005, at 6:10 AM, Alejandro Mery wrote:

>
>> Reading the documentation on the mod_python site would be a good 
>> start.
>>   http://www.modpython.org
>
> i haven't found anything about on python-program on mod_python manual 
> 3.1.3, i guess i should re-reading (on print) carefully but i need to 
> buy ink and paper before.

If you are using mod_python 3.1.X, you can use either "mod_python" or
"python-program" as the first parameter to "AddHandler". If you are
using mod_python 2.7.X, you can only use "python-program". Ie., the
name used changed but old one kept for backward compatibility. As I
didn't know which version of mod_python you were using, I gave the
one which will work in both old and new versions.

>> Having done that, then try and work out what the following does:
>>   # .htaccess file
>>   AddHandler python-program .foo
>>   PythonHandler mod_foo
>>   PythonDebug On
>>   # mod_foo.py file
>>   from mod_python import apache
>>   def handler(req):
>>     req.content_type = "text/plain"
>>     req.send_http_header()
>>     req.write("uri = %s"%req.uri)
>>     return apache.OK
>
> the changes i have tried always end on an error :-\

Are you sure about what version of mod_python you are even using? Are
you perhaps using the wrong documentation for the version you are using?

I would suggest perhaps you follow the examples and suggestions for
problem shooting in:

   http://www.dscpl.com.au/articles/modpython-001.html

Am suggesting this at this point as not clear if you have even got a
simple example going.

It would also help if you are were to post on the list what code you
are using and what errors you are getting. See guidelines at end of
referenced document as to what it is a good idea to supply in the way
of information. Without these details we would just be guessing.

> my last question, how would that be to have mod_foo handling .foo and 
> mod_bar handling .bar

 From memory, in mod_python 3.1.X you can say:

   AddHandler python-program .foo
   PythonHandler mod_foo | .foo

   AddHandler python-program .bar
   PythonHandler mod_bar | .bar

You could then have separate Python code files to handle each extension.


From bortzmeyer at nic.fr  Thu Jun 30 17:52:13 2005
From: bortzmeyer at nic.fr (Stephane Bortzmeyer)
Date: Fri Jul  1 05:02:25 2005
Subject: [mod_python] [Vampire] Module partially loaded?
Message-ID: <20050630215213.GA2190@laperouse.internatif.org>

I have a Python module which defines several functions and also
includes a bit a code is executed when the module is imported:

do_something()

def function1():
   ...

If do_something() fails (it connects to a database and the database
server may be down), the rest of the module is not executed, function1
is not defined but the module stays loaded: further requests just get
a message that there is no function1 defined.

Restarting Apache is the only solution to get rid of the partly loaded
module.

It seems a bug to me: if the module cannot be fully loaded because the
initialization code fails, the module should not be loaded at all, so
that further attempts have a chance to succeed. 

Apache 2.0.54, mod_python 3.1.3, Vampire 1.7
