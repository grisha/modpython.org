From depling at insightbb.com  Tue Jan  5 21:02:29 2010
From: depling at insightbb.com (Doug Epling)
Date: Tue Jan  5 21:02:32 2010
Subject: [mod_python] server side parameters
Message-ID: <4B43EF35.4050600@insightbb.com>

Sorry, but I really need a boost here.  I might be dense, but I can not 
get a 'script.py' file with a greet(req, name) function to accept either 
POST or GET arguments.  I am getting a 403 Forbidden server error.  
Where might I read about server side parameters?

Thanks.

Graham
 From james at sindacio.us  Fri Nov 13 02:45:00 2009
From: james at sindacio.us (James Newton)
Date: Fri Nov 13 02:45:10 2009
Subject: [mod_python] POST example?
In-Reply-To: <c2f9e3c20911122342g58179609s1bb0046b24ac6240@mail.gmail.com>
References: <c2f9e3c20911122342g58179609s1bb0046b24ac6240@mail.gmail.com>
Message-ID: <c2f9e3c20911122345i3812ac58qc69974240f980a65@mail.gmail.com>

Hi,

After looking around I can't seem to find a really straight forward example
of how to POST, all I can seem to figure out is GET. Currently I'm trying to
figure this out so I can post to a page with curl, rather then post via a
form, after asking around and getting turned away with "don't use
mod_python" on most occasions, I was hoping someone on this list could give
me an example of how to post/store post data.

Thanks,
James Newton
-------------- next part --------------
An HTML attachment was scrubbed...
URL: 
http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20091113/8048f618/attachment.html
 From graham.dumpleton at gmail.com  Fri Nov 13 04:26:17 2009
From: graham.dumpleton at gmail.com (Graham Dumpleton)
Date: Fri Nov 13 04:26:26 2009
Subject: [mod_python] POST example?
In-Reply-To: <c2f9e3c20911122345i3812ac58qc69974240f980a65@mail.gmail.com>
References: <c2f9e3c20911122342g58179609s1bb0046b24ac6240@mail.gmail.com>
<c2f9e3c20911122345i3812ac58qc69974240f980a65@mail.gmail.com>
Message-ID: <88e286470911130126m21222b57v8270616a602069ce@mail.gmail.com>

Read:

   http://webpython.codepoint.net/mod_python_tutorial

First result for Google on 'mod_python tutorial'.

Graham

2009/11/13 James Newton <james@sindacio.us>:
 > Hi,
 > After looking around I can't seem to find a really straight forward 
example
 > of how to POST, all I can seem to figure out is GET. Currently I'm 
trying to
 > figure this out so I can post to a page with curl, rather then post via a
 > form, after asking around and getting turned away with "don't use
 > mod_python" on most occasions, I was hoping someone on this list 
could give
 > me an example of how to post/store post data.
 > Thanks,
 > James Newton
 >
 > _______________________________________________
 > Mod_python mailing list
 > Mod_python@modpython.org
 > http://mailman.modpython.org/mailman/listinfo/mod_python
 >
 >
 From clodoaldo.pinto.neto at gmail.com  Fri Nov 13 05:56:08 2009
From: clodoaldo.pinto.neto at gmail.com (Clodoaldo Neto)
Date: Fri Nov 13 05:56:12 2009
Subject: Fwd: [mod_python] POST example?
In-Reply-To: <a595de7a0911130107y1067a22exd498225e8aa4baf3@mail.gmail.com>
References: <c2f9e3c20911122342g58179609s1bb0046b24ac6240@mail.gmail.com>
<c2f9e3c20911122345i3812ac58qc69974240f980a65@mail.gmail.com>
<a595de7a0911130107y1067a22exd498225e8aa4baf3@mail.gmail.com>
Message-ID: <a595de7a0911130256i78bb0c99yce88dcbdca1c959f@mail.gmail.com>

Forgot to post to the list.

Clodoaldo

---------- Forwarded message ----------
From: Clodoaldo Neto <clodoaldo.pinto.neto@gmail.com>
Date: 2009/11/13
Subject: Re: [mod_python] POST example?
To: James Newton <james@sindacio.us>


2009/11/13 James Newton <james@sindacio.us>:
 > Hi,
 > After looking around I can't seem to find a really straight forward 
example
 > of how to POST, all I can seem to figure out is GET. Currently I'm 
trying to
 > figure this out so I can post to a page with curl, rather then post via a
 > form, after asking around and getting turned away with "don't use
 > mod_python" on most occasions, I was hoping someone on this list 
could give
 > me an example of how to post/store post data.

You mean you can read data posted by an html form and can't do it when
it is posted by curl? If so show what is your curl code.

If what you are looking for is how to read data posted by any means read:

http://webpython.codepoint.net/mod_python_tutorial

Regards, Clodoaldo

 > Thanks,
 > James Newton
 >
 > _______________________________________________
 > Mod_python mailing list
 > Mod_python@modpython.org
 > http://mailman.modpython.org/mailman/listinfo/mod_python
 >
 >
 From clodoaldo.pinto.neto at gmail.com  Fri Nov 13 05:56:23 2009
From: clodoaldo.pinto.neto at gmail.com (Clodoaldo Neto)
Date: Fri Nov 13 05:56:25 2009
Subject: Fwd: [mod_python] POST example?
In-Reply-To: <c2f9e3c20911130153y4f16535bg2759654e7cf92c86@mail.gmail.com>
References: <c2f9e3c20911122342g58179609s1bb0046b24ac6240@mail.gmail.com>
<c2f9e3c20911122345i3812ac58qc69974240f980a65@mail.gmail.com>
<a595de7a0911130107y1067a22exd498225e8aa4baf3@mail.gmail.com>
<c2f9e3c20911130153y4f16535bg2759654e7cf92c86@mail.gmail.com>
Message-ID: <a595de7a0911130256i6c82a8c4o1dfb199726e12a73@mail.gmail.com>

---------- Forwarded message ----------
From: James Newton <james@sindacio.us>
Date: 2009/11/13
Subject: Re: [mod_python] POST example?
To: clodoaldo.pinto.neto@gmail.com


I may be misunderstanding it, I'm assuming POST and GET are handled
the exact same way? The curl command would be like so: curl -F
'postvar=<-' http://url.tld/. I used the example on that website for a
get var, but using it for post just created another get? I may not
being reading into this right.
James

On Fri, Nov 13, 2009 at 3:07 AM, Clodoaldo Neto
<clodoaldo.pinto.neto@gmail.com> wrote:
 >
 > 2009/11/13 James Newton <james@sindacio.us>:
 > > Hi,
 > > After looking around I can't seem to find a really straight forward 
example
 > > of how to POST, all I can seem to figure out is GET. Currently I'm 
trying to
 > > figure this out so I can post to a page with curl, rather then post 
via a
 > > form, after asking around and getting turned away with "don't use
 > > mod_python" on most occasions, I was hoping someone on this list 
could give
 > > me an example of how to post/store post data.
 >
 > You mean you can read data posted by an html form and can't do it when
 > it is posted by curl? If so show what is your curl code.
 >
 > If what you are looking for is how to read data posted by any means read:
 >
 > http://webpython.codepoint.net/mod_python_tutorial
 >
 > Regards, Clodoaldo
 >
 > > Thanks,
 > > James Newton
 > >
 > > _______________________________________________
 > > Mod_python mailing list
 > > Mod_python@modpython.org
 > > http://mailman.modpython.org/mailman/listinfo/mod_python
 > >
 > >
From jb at infodentity.com  Tue Jan  5 21:40:39 2010
From: jb at infodentity.com (john burke)
Date: Tue Jan  5 21:41:04 2010
Subject: [mod_python] server side parameters
In-Reply-To: <4B43EF35.4050600@insightbb.com>
References: <4B43EF35.4050600@insightbb.com>
Message-ID: <4B43F827.7090004@infodentity.com>

this should be all you really need. what you do with the data from
request_data is your own business.

from mod_python import apache, util

def login(req):

  request_data = util.FieldStorage(req)

  logreqdata(req, request_data)
  
  qry = "SELECT u.user_id as id, u.user_name as name FROM users u"
  qry += " WHERE u.user_name = '"
  qry += request_data.getfirst("user_name")
  qry += "' AND u.user_pass ='"
  qry += request_data.getfirst("user_pass")
  qry += "'"
  return dorequest(req, qry, "users", "user").toxml("utf-8")

def logreqdata(req, data):

  if (DEBUG > 0):
   
apache.log_error("********************************************************")
    apache.log_error(str(req.parsed_uri))
    apache.log_error(str(data))

in this case you can imagine that the the dorequest method knows how to
query a database (eg. some database is also imported), and that in this
instance it returns xml of the form:

<users>
<user>
<id>1</id>
<name>john smith</name>
</user>
</users>

unless it doesn't find the user, in which case it returns an error. the
logrequestdata function logs the url that was called and the data it was
passed. it might look like this:

[Sun Sep 20 13:25:37 2009] [error]
********************************************************
[Sun Sep 20 13:25:37 2009] [error] (None, None, None, None, None, None,
'/site/python/site.py/login', 'user_name=user&user_pass=pass', None)
[Sun Sep 20 13:25:37 2009] [error] {'user_name': [Field('user_name',
'user')], 'user_pass': [Field('user_pass', 'pass')]}

based on this information you should be able to determine the proper url
to call and process the passed data.

good luck

john


Doug Epling wrote:
> Sorry, but I really need a boost here.  I might be dense, but I can
> not get a 'script.py' file with a greet(req, name) function to accept
> either POST or GET arguments.  I am getting a 403 Forbidden server
> error.  Where might I read about server side parameters?
>
> Thanks.
>
> Graham
> From james at sindacio.us  Fri Nov 13 02:45:00 2009
> From: james at sindacio.us (James Newton)
> Date: Fri Nov 13 02:45:10 2009
> Subject: [mod_python] POST example?
> In-Reply-To:
> <c2f9e3c20911122342g58179609s1bb0046b24ac6240@mail.gmail.com>
> References: <c2f9e3c20911122342g58179609s1bb0046b24ac6240@mail.gmail.com>
> Message-ID: <c2f9e3c20911122345i3812ac58qc69974240f980a65@mail.gmail.com>
>
> Hi,
>
> After looking around I can't seem to find a really straight forward
> example
> of how to POST, all I can seem to figure out is GET. Currently I'm
> trying to
> figure this out so I can post to a page with curl, rather then post via a
> form, after asking around and getting turned away with "don't use
> mod_python" on most occasions, I was hoping someone on this list could
> give
> me an example of how to post/store post data.
>
> Thanks,
> James Newton
> -------------- next part --------------
> An HTML attachment was scrubbed...
> URL:
> http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20091113/8048f618/attachment.html
>
> From graham.dumpleton at gmail.com  Fri Nov 13 04:26:17 2009
> From: graham.dumpleton at gmail.com (Graham Dumpleton)
> Date: Fri Nov 13 04:26:26 2009
> Subject: [mod_python] POST example?
> In-Reply-To:
> <c2f9e3c20911122345i3812ac58qc69974240f980a65@mail.gmail.com>
> References: <c2f9e3c20911122342g58179609s1bb0046b24ac6240@mail.gmail.com>
> <c2f9e3c20911122345i3812ac58qc69974240f980a65@mail.gmail.com>
> Message-ID: <88e286470911130126m21222b57v8270616a602069ce@mail.gmail.com>
>
> Read:
>
>   http://webpython.codepoint.net/mod_python_tutorial
>
> First result for Google on 'mod_python tutorial'.
>
> Graham
>
> 2009/11/13 James Newton <james@sindacio.us>:
> > Hi,
> > After looking around I can't seem to find a really straight forward
> example
> > of how to POST, all I can seem to figure out is GET. Currently I'm
> trying to
> > figure this out so I can post to a page with curl, rather then post
> via a
> > form, after asking around and getting turned away with "don't use
> > mod_python" on most occasions, I was hoping someone on this list
> could give
> > me an example of how to post/store post data.
> > Thanks,
> > James Newton
> >
> > _______________________________________________
> > Mod_python mailing list
> > Mod_python@modpython.org
> > http://mailman.modpython.org/mailman/listinfo/mod_python
> >
> >
> From clodoaldo.pinto.neto at gmail.com  Fri Nov 13 05:56:08 2009
> From: clodoaldo.pinto.neto at gmail.com (Clodoaldo Neto)
> Date: Fri Nov 13 05:56:12 2009
> Subject: Fwd: [mod_python] POST example?
> In-Reply-To:
> <a595de7a0911130107y1067a22exd498225e8aa4baf3@mail.gmail.com>
> References: <c2f9e3c20911122342g58179609s1bb0046b24ac6240@mail.gmail.com>
> <c2f9e3c20911122345i3812ac58qc69974240f980a65@mail.gmail.com>
> <a595de7a0911130107y1067a22exd498225e8aa4baf3@mail.gmail.com>
> Message-ID: <a595de7a0911130256i78bb0c99yce88dcbdca1c959f@mail.gmail.com>
>
> Forgot to post to the list.
>
> Clodoaldo
>
> ---------- Forwarded message ----------
> From: Clodoaldo Neto <clodoaldo.pinto.neto@gmail.com>
> Date: 2009/11/13
> Subject: Re: [mod_python] POST example?
> To: James Newton <james@sindacio.us>
>
>
> 2009/11/13 James Newton <james@sindacio.us>:
> > Hi,
> > After looking around I can't seem to find a really straight forward
> example
> > of how to POST, all I can seem to figure out is GET. Currently I'm
> trying to
> > figure this out so I can post to a page with curl, rather then post
> via a
> > form, after asking around and getting turned away with "don't use
> > mod_python" on most occasions, I was hoping someone on this list
> could give
> > me an example of how to post/store post data.
>
> You mean you can read data posted by an html form and can't do it when
> it is posted by curl? If so show what is your curl code.
>
> If what you are looking for is how to read data posted by any means read:
>
> http://webpython.codepoint.net/mod_python_tutorial
>
> Regards, Clodoaldo
>
> > Thanks,
> > James Newton
> >
> > _______________________________________________
> > Mod_python mailing list
> > Mod_python@modpython.org
> > http://mailman.modpython.org/mailman/listinfo/mod_python
> >
> >
> From clodoaldo.pinto.neto at gmail.com  Fri Nov 13 05:56:23 2009
> From: clodoaldo.pinto.neto at gmail.com (Clodoaldo Neto)
> Date: Fri Nov 13 05:56:25 2009
> Subject: Fwd: [mod_python] POST example?
> In-Reply-To:
> <c2f9e3c20911130153y4f16535bg2759654e7cf92c86@mail.gmail.com>
> References: <c2f9e3c20911122342g58179609s1bb0046b24ac6240@mail.gmail.com>
> <c2f9e3c20911122345i3812ac58qc69974240f980a65@mail.gmail.com>
> <a595de7a0911130107y1067a22exd498225e8aa4baf3@mail.gmail.com>
> <c2f9e3c20911130153y4f16535bg2759654e7cf92c86@mail.gmail.com>
> Message-ID: <a595de7a0911130256i6c82a8c4o1dfb199726e12a73@mail.gmail.com>
>
> ---------- Forwarded message ----------
> From: James Newton <james@sindacio.us>
> Date: 2009/11/13
> Subject: Re: [mod_python] POST example?
> To: clodoaldo.pinto.neto@gmail.com
>
>
> I may be misunderstanding it, I'm assuming POST and GET are handled
> the exact same way? The curl command would be like so: curl -F
> 'postvar=<-' http://url.tld/. I used the example on that website for a
> get var, but using it for post just created another get? I may not
> being reading into this right.
> James
>
> On Fri, Nov 13, 2009 at 3:07 AM, Clodoaldo Neto
> <clodoaldo.pinto.neto@gmail.com> wrote:
> >
> > 2009/11/13 James Newton <james@sindacio.us>:
> > > Hi,
> > > After looking around I can't seem to find a really straight
> forward example
> > > of how to POST, all I can seem to figure out is GET. Currently I'm
> trying to
> > > figure this out so I can post to a page with curl, rather then
> post via a
> > > form, after asking around and getting turned away with "don't use
> > > mod_python" on most occasions, I was hoping someone on this list
> could give
> > > me an example of how to post/store post data.
> >
> > You mean you can read data posted by an html form and can't do it when
> > it is posted by curl? If so show what is your curl code.
> >
> > If what you are looking for is how to read data posted by any means
> read:
> >
> > http://webpython.codepoint.net/mod_python_tutorial
> >
> > Regards, Clodoaldo
> >
> > > Thanks,
> > > James Newton
> > >
> > > _______________________________________________
> > > Mod_python mailing list
> > > Mod_python@modpython.org
> > > http://mailman.modpython.org/mailman/listinfo/mod_python
> > >
> > >
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>
>

From depling at insightbb.com  Tue Jan  5 22:12:52 2010
From: depling at insightbb.com (Doug Epling)
Date: Tue Jan  5 22:12:55 2010
Subject: [mod_python] server side parameters
In-Reply-To: <4B43F827.7090004@infodentity.com>
References: <4B43EF35.4050600@insightbb.com> <4B43F827.7090004@infodentity.com>
Message-ID: <4B43FFB4.8070909@insightbb.com>

Why would I want to import apache, util?  The request object created by 
the publisher automatically creates a FieldStorage object.  So when I 
pass the request object, whether POST or GET, along with some other 
trivial data the python script on the server should simply take the data 
argument as a parameter and return a page with it printed on it.  Why 
doesn't the apache user have this permission?

calling page:

def index():
     s = """\
<html>
<head></head>
<body>
<h2>Hello World!</h2>

<form action="script/greet" method="GET">
     Name: <input type="text" name="name"><br>
<input type="submit">
</form>

</body>
</html>
"""
     return s

server script:

def greet(req, name):

     return 'Hello %s' % name

On 01/05/2010 09:40 PM, john burke wrote:
> this should be all you really need. what you do with the data from
> request_data is your own business.
>
> from mod_python import apache, util
>
> def login(req):
>
>    request_data = util.FieldStorage(req)
>
>    logreqdata(req, request_data)
>
>    qry = "SELECT u.user_id as id, u.user_name as name FROM users u"
>    qry += " WHERE u.user_name = '"
>    qry += request_data.getfirst("user_name")
>    qry += "' AND u.user_pass ='"
>    qry += request_data.getfirst("user_pass")
>    qry += "'"
>    return dorequest(req, qry, "users", "user").toxml("utf-8")
>
> def logreqdata(req, data):
>
>    if (DEBUG>  0):
>
> apache.log_error("********************************************************")
>      apache.log_error(str(req.parsed_uri))
>      apache.log_error(str(data))
>
> in this case you can imagine that the the dorequest method knows how to
> query a database (eg. some database is also imported), and that in this
> instance it returns xml of the form:
>
> <users>
> <user>
> <id>1</id>
> <name>john smith</name>
> </user>
> </users>
>
> unless it doesn't find the user, in which case it returns an error. the
> logrequestdata function logs the url that was called and the data it was
> passed. it might look like this:
>
> [Sun Sep 20 13:25:37 2009] [error]
> ********************************************************
> [Sun Sep 20 13:25:37 2009] [error] (None, None, None, None, None, None,
> '/site/python/site.py/login', 'user_name=user&user_pass=pass', None)
> [Sun Sep 20 13:25:37 2009] [error] {'user_name': [Field('user_name',
> 'user')], 'user_pass': [Field('user_pass', 'pass')]}
>
> based on this information you should be able to determine the proper url
> to call and process the passed data.
>
> good luck
>
> john
>
>
> Doug Epling wrote:
>    
>> Sorry, but I really need a boost here.  I might be dense, but I can
>> not get a 'script.py' file with a greet(req, name) function to accept
>> either POST or GET arguments.  I am getting a 403 Forbidden server
>> error.  Where might I read about server side parameters?
>>
>> Thanks.
>>
>> Graham
>>  From james at sindacio.us  Fri Nov 13 02:45:00 2009
>> From: james at sindacio.us (James Newton)
>> Date: Fri Nov 13 02:45:10 2009
>> Subject: [mod_python] POST example?
>> In-Reply-To:
>> <c2f9e3c20911122342g58179609s1bb0046b24ac6240@mail.gmail.com>
>> References:<c2f9e3c20911122342g58179609s1bb0046b24ac6240@mail.gmail.com>
>> Message-ID:<c2f9e3c20911122345i3812ac58qc69974240f980a65@mail.gmail.com>
>>
>> Hi,
>>
>> After looking around I can't seem to find a really straight forward
>> example
>> of how to POST, all I can seem to figure out is GET. Currently I'm
>> trying to
>> figure this out so I can post to a page with curl, rather then post via a
>> form, after asking around and getting turned away with "don't use
>> mod_python" on most occasions, I was hoping someone on this list could
>> give
>> me an example of how to post/store post data.
>>
>> Thanks,
>> James Newton
>> -------------- next part --------------
>> An HTML attachment was scrubbed...
>> URL:
>> http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20091113/8048f618/attachment.html
>>
>>  From graham.dumpleton at gmail.com  Fri Nov 13 04:26:17 2009
>> From: graham.dumpleton at gmail.com (Graham Dumpleton)
>> Date: Fri Nov 13 04:26:26 2009
>> Subject: [mod_python] POST example?
>> In-Reply-To:
>> <c2f9e3c20911122345i3812ac58qc69974240f980a65@mail.gmail.com>
>> References:<c2f9e3c20911122342g58179609s1bb0046b24ac6240@mail.gmail.com>
>> <c2f9e3c20911122345i3812ac58qc69974240f980a65@mail.gmail.com>
>> Message-ID:<88e286470911130126m21222b57v8270616a602069ce@mail.gmail.com>
>>
>> Read:
>>
>>    http://webpython.codepoint.net/mod_python_tutorial
>>
>> First result for Google on 'mod_python tutorial'.
>>
>> Graham
>>
>> 2009/11/13 James Newton<james@sindacio.us>:
>>      
>>> Hi,
>>> After looking around I can't seem to find a really straight forward
>>>        
>> example
>>      
>>> of how to POST, all I can seem to figure out is GET. Currently I'm
>>>        
>> trying to
>>      
>>> figure this out so I can post to a page with curl, rather then post
>>>        
>> via a
>>      
>>> form, after asking around and getting turned away with "don't use
>>> mod_python" on most occasions, I was hoping someone on this list
>>>        
>> could give
>>      
>>> me an example of how to post/store post data.
>>> Thanks,
>>> James Newton
>>>
>>> _______________________________________________
>>> Mod_python mailing list
>>> Mod_python@modpython.org
>>> http://mailman.modpython.org/mailman/listinfo/mod_python
>>>
>>>
>>>        
>>  From clodoaldo.pinto.neto at gmail.com  Fri Nov 13 05:56:08 2009
>> From: clodoaldo.pinto.neto at gmail.com (Clodoaldo Neto)
>> Date: Fri Nov 13 05:56:12 2009
>> Subject: Fwd: [mod_python] POST example?
>> In-Reply-To:
>> <a595de7a0911130107y1067a22exd498225e8aa4baf3@mail.gmail.com>
>> References:<c2f9e3c20911122342g58179609s1bb0046b24ac6240@mail.gmail.com>
>> <c2f9e3c20911122345i3812ac58qc69974240f980a65@mail.gmail.com>
>> <a595de7a0911130107y1067a22exd498225e8aa4baf3@mail.gmail.com>
>> Message-ID:<a595de7a0911130256i78bb0c99yce88dcbdca1c959f@mail.gmail.com>
>>
>> Forgot to post to the list.
>>
>> Clodoaldo
>>
>> ---------- Forwarded message ----------
>> From: Clodoaldo Neto<clodoaldo.pinto.neto@gmail.com>
>> Date: 2009/11/13
>> Subject: Re: [mod_python] POST example?
>> To: James Newton<james@sindacio.us>
>>
>>
>> 2009/11/13 James Newton<james@sindacio.us>:
>>      
>>> Hi,
>>> After looking around I can't seem to find a really straight forward
>>>        
>> example
>>      
>>> of how to POST, all I can seem to figure out is GET. Currently I'm
>>>        
>> trying to
>>      
>>> figure this out so I can post to a page with curl, rather then post
>>>        
>> via a
>>      
>>> form, after asking around and getting turned away with "don't use
>>> mod_python" on most occasions, I was hoping someone on this list
>>>        
>> could give
>>      
>>> me an example of how to post/store post data.
>>>        
>> You mean you can read data posted by an html form and can't do it when
>> it is posted by curl? If so show what is your curl code.
>>
>> If what you are looking for is how to read data posted by any means read:
>>
>> http://webpython.codepoint.net/mod_python_tutorial
>>
>> Regards, Clodoaldo
>>
>>      
>>> Thanks,
>>> James Newton
>>>
>>> _______________________________________________
>>> Mod_python mailing list
>>> Mod_python@modpython.org
>>> http://mailman.modpython.org/mailman/listinfo/mod_python
>>>
>>>
>>>        
>>  From clodoaldo.pinto.neto at gmail.com  Fri Nov 13 05:56:23 2009
>> From: clodoaldo.pinto.neto at gmail.com (Clodoaldo Neto)
>> Date: Fri Nov 13 05:56:25 2009
>> Subject: Fwd: [mod_python] POST example?
>> In-Reply-To:
>> <c2f9e3c20911130153y4f16535bg2759654e7cf92c86@mail.gmail.com>
>> References:<c2f9e3c20911122342g58179609s1bb0046b24ac6240@mail.gmail.com>
>> <c2f9e3c20911122345i3812ac58qc69974240f980a65@mail.gmail.com>
>> <a595de7a0911130107y1067a22exd498225e8aa4baf3@mail.gmail.com>
>> <c2f9e3c20911130153y4f16535bg2759654e7cf92c86@mail.gmail.com>
>> Message-ID:<a595de7a0911130256i6c82a8c4o1dfb199726e12a73@mail.gmail.com>
>>
>> ---------- Forwarded message ----------
>> From: James Newton<james@sindacio.us>
>> Date: 2009/11/13
>> Subject: Re: [mod_python] POST example?
>> To: clodoaldo.pinto.neto@gmail.com
>>
>>
>> I may be misunderstanding it, I'm assuming POST and GET are handled
>> the exact same way? The curl command would be like so: curl -F
>> 'postvar=<-' http://url.tld/. I used the example on that website for a
>> get var, but using it for post just created another get? I may not
>> being reading into this right.
>> James
>>
>> On Fri, Nov 13, 2009 at 3:07 AM, Clodoaldo Neto
>> <clodoaldo.pinto.neto@gmail.com>  wrote:
>>      
>>> 2009/11/13 James Newton<james@sindacio.us>:
>>>        
>>>> Hi,
>>>> After looking around I can't seem to find a really straight
>>>>          
>> forward example
>>      
>>>> of how to POST, all I can seem to figure out is GET. Currently I'm
>>>>          
>> trying to
>>      
>>>> figure this out so I can post to a page with curl, rather then
>>>>          
>> post via a
>>      
>>>> form, after asking around and getting turned away with "don't use
>>>> mod_python" on most occasions, I was hoping someone on this list
>>>>          
>> could give
>>      
>>>> me an example of how to post/store post data.
>>>>          
>>> You mean you can read data posted by an html form and can't do it when
>>> it is posted by curl? If so show what is your curl code.
>>>
>>> If what you are looking for is how to read data posted by any means
>>>        
>> read:
>>      
>>> http://webpython.codepoint.net/mod_python_tutorial
>>>
>>> Regards, Clodoaldo
>>>
>>>        
>>>> Thanks,
>>>> James Newton
>>>>
>>>> _______________________________________________
>>>> Mod_python mailing list
>>>> Mod_python@modpython.org
>>>> http://mailman.modpython.org/mailman/listinfo/mod_python
>>>>
>>>>
>>>>          
>> _______________________________________________
>> Mod_python mailing list
>> Mod_python@modpython.org
>> http://mailman.modpython.org/mailman/listinfo/mod_python
>>
>>
>>      
>    

From thomascl at free.fr  Wed Jan  6 13:52:12 2010
From: thomascl at free.fr (Thomas Clement)
Date: Wed Jan  6 13:52:49 2010
Subject: [mod_python] mod_python+trac+Leopard and 'process has forked,
	you must exec' error log
Message-ID: <3352944D-E5CF-4065-AF18-5C30E80AA1AC@free.fr>

Hello,

First, my configuration:
- Mac OS X Leopard 10.5
-  trac installed from MacPorts (with Python 2.6.4)
- mod_python 3.3.1 from sources
- Apache 2 built-in from Leopard

Everything is working pretty well except that I'm getting lots of this  
messages in the apache error log when browsing trac:

The process has forked and you cannot use this CoreFoundation  
functionality safely. You MUST exec().
Break on  
__THE_PROCESS_HAS_FORKED_AND_YOU_CANNOT_USE_THIS_COREFOUNDATION_FUNCTIONALITY___YOU_MUST_EXEC__ 
() to debug.

Apache does not crash however.


I have read that php could do that but it seems the php apache module  
is not loaded here.
Any idea?


Thanks,
Thomas

From graham.dumpleton at gmail.com  Thu Jan  7 04:56:28 2010
From: graham.dumpleton at gmail.com (Graham Dumpleton)
Date: Thu Jan  7 04:56:39 2010
Subject: [mod_python] server side parameters
In-Reply-To: <4B43FFB4.8070909@insightbb.com>
References: <4B43EF35.4050600@insightbb.com> <4B43F827.7090004@infodentity.com>
	<4B43FFB4.8070909@insightbb.com>
Message-ID: <88e286471001070156kcb7322n5d1f52af3e2bf33c@mail.gmail.com>

If you are getting a 403 forbidden error then you either haven't
configured Apache correctly such that the mod_python URL you are using
is a valid URL which can be accessed, that the specific URL is
matching some pattern elsewhere in Apache which is denied for some
reason, or, you have named your publisher handler with a leading
underscore, which are private and therefore forbidden.

You need to work out what is generating the 403, Apache or mod_python.

Graham

2010/1/6 Doug Epling <depling@insightbb.com>:
> Why would I want to import apache, util? ?The request object created by the
> publisher automatically creates a FieldStorage object. ?So when I pass the
> request object, whether POST or GET, along with some other trivial data the
> python script on the server should simply take the data argument as a
> parameter and return a page with it printed on it. ?Why doesn't the apache
> user have this permission?
>
> calling page:
>
> def index():
> ? ?s = """\
> <html>
> <head></head>
> <body>
> <h2>Hello World!</h2>
>
> <form action="script/greet" method="GET">
> ? ?Name: <input type="text" name="name"><br>
> <input type="submit">
> </form>
>
> </body>
> </html>
> """
> ? ?return s
>
> server script:
>
> def greet(req, name):
>
> ? ?return 'Hello %s' % name
>
> On 01/05/2010 09:40 PM, john burke wrote:
>>
>> this should be all you really need. what you do with the data from
>> request_data is your own business.
>>
>> from mod_python import apache, util
>>
>> def login(req):
>>
>> ? request_data = util.FieldStorage(req)
>>
>> ? logreqdata(req, request_data)
>>
>> ? qry = "SELECT u.user_id as id, u.user_name as name FROM users u"
>> ? qry += " WHERE u.user_name = '"
>> ? qry += request_data.getfirst("user_name")
>> ? qry += "' AND u.user_pass ='"
>> ? qry += request_data.getfirst("user_pass")
>> ? qry += "'"
>> ? return dorequest(req, qry, "users", "user").toxml("utf-8")
>>
>> def logreqdata(req, data):
>>
>> ? if (DEBUG> ?0):
>>
>>
>> apache.log_error("********************************************************")
>> ? ? apache.log_error(str(req.parsed_uri))
>> ? ? apache.log_error(str(data))
>>
>> in this case you can imagine that the the dorequest method knows how to
>> query a database (eg. some database is also imported), and that in this
>> instance it returns xml of the form:
>>
>> <users>
>> <user>
>> <id>1</id>
>> <name>john smith</name>
>> </user>
>> </users>
>>
>> unless it doesn't find the user, in which case it returns an error. the
>> logrequestdata function logs the url that was called and the data it was
>> passed. it might look like this:
>>
>> [Sun Sep 20 13:25:37 2009] [error]
>> ********************************************************
>> [Sun Sep 20 13:25:37 2009] [error] (None, None, None, None, None, None,
>> '/site/python/site.py/login', 'user_name=user&user_pass=pass', None)
>> [Sun Sep 20 13:25:37 2009] [error] {'user_name': [Field('user_name',
>> 'user')], 'user_pass': [Field('user_pass', 'pass')]}
>>
>> based on this information you should be able to determine the proper url
>> to call and process the passed data.
>>
>> good luck
>>
>> john
>>
>>
>> Doug Epling wrote:
>>
>>>
>>> Sorry, but I really need a boost here. ?I might be dense, but I can
>>> not get a 'script.py' file with a greet(req, name) function to accept
>>> either POST or GET arguments. ?I am getting a 403 Forbidden server
>>> error. ?Where might I read about server side parameters?
>>>
>>> Thanks.
>>>
>>> Graham
>>> ?From james at sindacio.us ?Fri Nov 13 02:45:00 2009
>>> From: james at sindacio.us (James Newton)
>>> Date: Fri Nov 13 02:45:10 2009
>>> Subject: [mod_python] POST example?
>>> In-Reply-To:
>>> <c2f9e3c20911122342g58179609s1bb0046b24ac6240@mail.gmail.com>
>>> References:<c2f9e3c20911122342g58179609s1bb0046b24ac6240@mail.gmail.com>
>>> Message-ID:<c2f9e3c20911122345i3812ac58qc69974240f980a65@mail.gmail.com>
>>>
>>> Hi,
>>>
>>> After looking around I can't seem to find a really straight forward
>>> example
>>> of how to POST, all I can seem to figure out is GET. Currently I'm
>>> trying to
>>> figure this out so I can post to a page with curl, rather then post via a
>>> form, after asking around and getting turned away with "don't use
>>> mod_python" on most occasions, I was hoping someone on this list could
>>> give
>>> me an example of how to post/store post data.
>>>
>>> Thanks,
>>> James Newton
>>> -------------- next part --------------
>>> An HTML attachment was scrubbed...
>>> URL:
>>>
>>> http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20091113/8048f618/attachment.html
>>>
>>> ?From graham.dumpleton at gmail.com ?Fri Nov 13 04:26:17 2009
>>> From: graham.dumpleton at gmail.com (Graham Dumpleton)
>>> Date: Fri Nov 13 04:26:26 2009
>>> Subject: [mod_python] POST example?
>>> In-Reply-To:
>>> <c2f9e3c20911122345i3812ac58qc69974240f980a65@mail.gmail.com>
>>> References:<c2f9e3c20911122342g58179609s1bb0046b24ac6240@mail.gmail.com>
>>> <c2f9e3c20911122345i3812ac58qc69974240f980a65@mail.gmail.com>
>>> Message-ID:<88e286470911130126m21222b57v8270616a602069ce@mail.gmail.com>
>>>
>>> Read:
>>>
>>> ? http://webpython.codepoint.net/mod_python_tutorial
>>>
>>> First result for Google on 'mod_python tutorial'.
>>>
>>> Graham
>>>
>>> 2009/11/13 James Newton<james@sindacio.us>:
>>>
>>>>
>>>> Hi,
>>>> After looking around I can't seem to find a really straight forward
>>>>
>>>
>>> example
>>>
>>>>
>>>> of how to POST, all I can seem to figure out is GET. Currently I'm
>>>>
>>>
>>> trying to
>>>
>>>>
>>>> figure this out so I can post to a page with curl, rather then post
>>>>
>>>
>>> via a
>>>
>>>>
>>>> form, after asking around and getting turned away with "don't use
>>>> mod_python" on most occasions, I was hoping someone on this list
>>>>
>>>
>>> could give
>>>
>>>>
>>>> me an example of how to post/store post data.
>>>> Thanks,
>>>> James Newton
>>>>
>>>> _______________________________________________
>>>> Mod_python mailing list
>>>> Mod_python@modpython.org
>>>> http://mailman.modpython.org/mailman/listinfo/mod_python
>>>>
>>>>
>>>>
>>>
>>> ?From clodoaldo.pinto.neto at gmail.com ?Fri Nov 13 05:56:08 2009
>>> From: clodoaldo.pinto.neto at gmail.com (Clodoaldo Neto)
>>> Date: Fri Nov 13 05:56:12 2009
>>> Subject: Fwd: [mod_python] POST example?
>>> In-Reply-To:
>>> <a595de7a0911130107y1067a22exd498225e8aa4baf3@mail.gmail.com>
>>> References:<c2f9e3c20911122342g58179609s1bb0046b24ac6240@mail.gmail.com>
>>> <c2f9e3c20911122345i3812ac58qc69974240f980a65@mail.gmail.com>
>>> <a595de7a0911130107y1067a22exd498225e8aa4baf3@mail.gmail.com>
>>> Message-ID:<a595de7a0911130256i78bb0c99yce88dcbdca1c959f@mail.gmail.com>
>>>
>>> Forgot to post to the list.
>>>
>>> Clodoaldo
>>>
>>> ---------- Forwarded message ----------
>>> From: Clodoaldo Neto<clodoaldo.pinto.neto@gmail.com>
>>> Date: 2009/11/13
>>> Subject: Re: [mod_python] POST example?
>>> To: James Newton<james@sindacio.us>
>>>
>>>
>>> 2009/11/13 James Newton<james@sindacio.us>:
>>>
>>>>
>>>> Hi,
>>>> After looking around I can't seem to find a really straight forward
>>>>
>>>
>>> example
>>>
>>>>
>>>> of how to POST, all I can seem to figure out is GET. Currently I'm
>>>>
>>>
>>> trying to
>>>
>>>>
>>>> figure this out so I can post to a page with curl, rather then post
>>>>
>>>
>>> via a
>>>
>>>>
>>>> form, after asking around and getting turned away with "don't use
>>>> mod_python" on most occasions, I was hoping someone on this list
>>>>
>>>
>>> could give
>>>
>>>>
>>>> me an example of how to post/store post data.
>>>>
>>>
>>> You mean you can read data posted by an html form and can't do it when
>>> it is posted by curl? If so show what is your curl code.
>>>
>>> If what you are looking for is how to read data posted by any means read:
>>>
>>> http://webpython.codepoint.net/mod_python_tutorial
>>>
>>> Regards, Clodoaldo
>>>
>>>
>>>>
>>>> Thanks,
>>>> James Newton
>>>>
>>>> _______________________________________________
>>>> Mod_python mailing list
>>>> Mod_python@modpython.org
>>>> http://mailman.modpython.org/mailman/listinfo/mod_python
>>>>
>>>>
>>>>
>>>
>>> ?From clodoaldo.pinto.neto at gmail.com ?Fri Nov 13 05:56:23 2009
>>> From: clodoaldo.pinto.neto at gmail.com (Clodoaldo Neto)
>>> Date: Fri Nov 13 05:56:25 2009
>>> Subject: Fwd: [mod_python] POST example?
>>> In-Reply-To:
>>> <c2f9e3c20911130153y4f16535bg2759654e7cf92c86@mail.gmail.com>
>>> References:<c2f9e3c20911122342g58179609s1bb0046b24ac6240@mail.gmail.com>
>>> <c2f9e3c20911122345i3812ac58qc69974240f980a65@mail.gmail.com>
>>> <a595de7a0911130107y1067a22exd498225e8aa4baf3@mail.gmail.com>
>>> <c2f9e3c20911130153y4f16535bg2759654e7cf92c86@mail.gmail.com>
>>> Message-ID:<a595de7a0911130256i6c82a8c4o1dfb199726e12a73@mail.gmail.com>
>>>
>>> ---------- Forwarded message ----------
>>> From: James Newton<james@sindacio.us>
>>> Date: 2009/11/13
>>> Subject: Re: [mod_python] POST example?
>>> To: clodoaldo.pinto.neto@gmail.com
>>>
>>>
>>> I may be misunderstanding it, I'm assuming POST and GET are handled
>>> the exact same way? The curl command would be like so: curl -F
>>> 'postvar=<-' http://url.tld/. I used the example on that website for a
>>> get var, but using it for post just created another get? I may not
>>> being reading into this right.
>>> James
>>>
>>> On Fri, Nov 13, 2009 at 3:07 AM, Clodoaldo Neto
>>> <clodoaldo.pinto.neto@gmail.com> ?wrote:
>>>
>>>>
>>>> 2009/11/13 James Newton<james@sindacio.us>:
>>>>
>>>>>
>>>>> Hi,
>>>>> After looking around I can't seem to find a really straight
>>>>>
>>>
>>> forward example
>>>
>>>>>
>>>>> of how to POST, all I can seem to figure out is GET. Currently I'm
>>>>>
>>>
>>> trying to
>>>
>>>>>
>>>>> figure this out so I can post to a page with curl, rather then
>>>>>
>>>
>>> post via a
>>>
>>>>>
>>>>> form, after asking around and getting turned away with "don't use
>>>>> mod_python" on most occasions, I was hoping someone on this list
>>>>>
>>>
>>> could give
>>>
>>>>>
>>>>> me an example of how to post/store post data.
>>>>>
>>>>
>>>> You mean you can read data posted by an html form and can't do it when
>>>> it is posted by curl? If so show what is your curl code.
>>>>
>>>> If what you are looking for is how to read data posted by any means
>>>>
>>>
>>> read:
>>>
>>>>
>>>> http://webpython.codepoint.net/mod_python_tutorial
>>>>
>>>> Regards, Clodoaldo
>>>>
>>>>
>>>>>
>>>>> Thanks,
>>>>> James Newton
>>>>>
>>>>> _______________________________________________
>>>>> Mod_python mailing list
>>>>> Mod_python@modpython.org
>>>>> http://mailman.modpython.org/mailman/listinfo/mod_python
>>>>>
>>>>>
>>>>>
>>>
>>> _______________________________________________
>>> Mod_python mailing list
>>> Mod_python@modpython.org
>>> http://mailman.modpython.org/mailman/listinfo/mod_python
>>>
>>>
>>>
>>
>>
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>

From graham.dumpleton at gmail.com  Thu Jan  7 05:57:47 2010
From: graham.dumpleton at gmail.com (Graham Dumpleton)
Date: Thu Jan  7 05:57:55 2010
Subject: [mod_python] mod_python+trac+Leopard and 'process has forked, you 
	must exec' error log
In-Reply-To: <3352944D-E5CF-4065-AF18-5C30E80AA1AC@free.fr>
References: <3352944D-E5CF-4065-AF18-5C30E80AA1AC@free.fr>
Message-ID: <88e286471001070257m418c927g94fe26712083b088@mail.gmail.com>

2010/1/7 Thomas Clement <thomascl@free.fr>:
> Hello,
>
> First, my configuration:
> - Mac OS X Leopard 10.5
> - ?trac installed from MacPorts (with Python 2.6.4)
> - mod_python 3.3.1 from sources
> - Apache 2 built-in from Leopard
>
> Everything is working pretty well except that I'm getting lots of this
> messages in the apache error log when browsing trac:
>
> The process has forked and you cannot use this CoreFoundation functionality
> safely. You MUST exec().
> Break on
> __THE_PROCESS_HAS_FORKED_AND_YOU_CANNOT_USE_THIS_COREFOUNDATION_FUNCTIONALITY___YOU_MUST_EXEC__()
> to debug.
>
> Apache does not crash however.
>
>
> I have read that php could do that but it seems the php apache module is not
> loaded here.
> Any idea?

Prior discussion about it at:

  http://groups.google.com/group/modwsgi/browse_thread/thread/fa1ce8c9a9e45db1?tvc=2

Is caused by something being loaded which links to MacOS X Carbon library.

If not caused by PHP extension module called GD, them is something else.

Graham

From thomascl at free.fr  Thu Jan  7 07:24:37 2010
From: thomascl at free.fr (Thomas Clement)
Date: Thu Jan  7 07:24:54 2010
Subject: [mod_python] mod_python+trac+Leopard and 'process has forked,
	you  must exec' error log
In-Reply-To: <88e286471001070257m418c927g94fe26712083b088@mail.gmail.com>
References: <3352944D-E5CF-4065-AF18-5C30E80AA1AC@free.fr>
	<88e286471001070257m418c927g94fe26712083b088@mail.gmail.com>
Message-ID: <C3687174-C94F-4E5F-8E91-72605FD59C82@free.fr>

On Jan 7, 2010, at 11:57 AM, Graham Dumpleton wrote:

> Prior discussion about it at:
>
>  http://groups.google.com/group/modwsgi/browse_thread/thread/fa1ce8c9a9e45db1?tvc=2
>
> Is caused by something being loaded which links to MacOS X Carbon  
> library.
>
> If not caused by PHP extension module called GD, them is something  
> else.

I looked for libraries linking against CoreFoundation and found  
mod_bonjour.so.
I stopped loading it and the error logs are now gone.

Thanks for your help!
Thomas

From depling at insightbb.com  Thu Jan  7 19:55:26 2010
From: depling at insightbb.com (Doug Epling)
Date: Thu Jan  7 19:55:31 2010
Subject: [mod_python] server side parameters
In-Reply-To: <88e286471001070156kcb7322n5d1f52af3e2bf33c@mail.gmail.com>
References: <4B43EF35.4050600@insightbb.com> <4B43F827.7090004@infodentity.com>
	<4B43FFB4.8070909@insightbb.com>
	<88e286471001070156kcb7322n5d1f52af3e2bf33c@mail.gmail.com>
Message-ID: <4B46827E.7040604@insightbb.com>

Apparently I am having some kind of conflict with Apache modsec.  Do the 
following lines from the Apache error_log mean anything?  Is this 
something I need to take up with my distro, which is Fedora Core?  Any 
help here will be appreciated; I have spent at least two days on this.

Thanks.

[Thu Jan 07 19:36:59 2010] [notice] Apache/2.2.14 (Unix) DAV/2 
mod_python/3.3.1 Python/2.6.2 mod_ssl/2.2.14 OpenSSL/1.0.0-fips-beta4 
mod_wsgi/2.5   configured -- resuming normal operations
[Thu Jan 07 19:36:59 2010] [info] Server built: Dec  3 2009 10:25:53
[Thu Jan 07 19:36:59 2010] [debug] prefork.c(1013): AcceptMutex: sysvsem 
(default: sysvsem)
[Thu Jan 07 19:37:22 2010] [error] 
/usr/lib/python2.6/site-packages/mod_python/importer.py:32: 
DeprecationWarning: the md5 module is deprecated; use hashlib instead
[Thu Jan 07 19:37:22 2010] [error]   import md5
[Thu Jan 07 19:37:38 2010] [error] 
/usr/lib/python2.6/site-packages/mod_python/importer.py:32: 
DeprecationWarning: the md5 module is deprecated; use hashlib instead
[Thu Jan 07 19:37:38 2010] [error]   import md5

On 01/07/2010 04:56 AM, Graham Dumpleton wrote:
> If you are getting a 403 forbidden error then you either haven't
> configured Apache correctly such that the mod_python URL you are using
> is a valid URL which can be accessed, that the specific URL is
> matching some pattern elsewhere in Apache which is denied for some
> reason, or, you have named your publisher handler with a leading
> underscore, which are private and therefore forbidden.
>
> You need to work out what is generating the 403, Apache or mod_python.
>
> Graham
>
> 2010/1/6 Doug Epling<depling@insightbb.com>:
>    
>> Why would I want to import apache, util?  The request object created by the
>> publisher automatically creates a FieldStorage object.  So when I pass the
>> request object, whether POST or GET, along with some other trivial data the
>> python script on the server should simply take the data argument as a
>> parameter and return a page with it printed on it.  Why doesn't the apache
>> user have this permission?
>>
>> calling page:
>>
>> def index():
>>     s = """\
>> <html>
>> <head></head>
>> <body>
>> <h2>Hello World!</h2>
>>
>> <form action="script/greet" method="GET">
>>     Name:<input type="text" name="name"><br>
>> <input type="submit">
>> </form>
>>
>> </body>
>> </html>
>> """
>>     return s
>>
>> server script:
>>
>> def greet(req, name):
>>
>>     return 'Hello %s' % name
>>
>> On 01/05/2010 09:40 PM, john burke wrote:
>>      
>>> this should be all you really need. what you do with the data from
>>> request_data is your own business.
>>>
>>> from mod_python import apache, util
>>>
>>> def login(req):
>>>
>>>    request_data = util.FieldStorage(req)
>>>
>>>    logreqdata(req, request_data)
>>>
>>>    qry = "SELECT u.user_id as id, u.user_name as name FROM users u"
>>>    qry += " WHERE u.user_name = '"
>>>    qry += request_data.getfirst("user_name")
>>>    qry += "' AND u.user_pass ='"
>>>    qry += request_data.getfirst("user_pass")
>>>    qry += "'"
>>>    return dorequest(req, qry, "users", "user").toxml("utf-8")
>>>
>>> def logreqdata(req, data):
>>>
>>>    if (DEBUG>    0):
>>>
>>>
>>> apache.log_error("********************************************************")
>>>      apache.log_error(str(req.parsed_uri))
>>>      apache.log_error(str(data))
>>>
>>> in this case you can imagine that the the dorequest method knows how to
>>> query a database (eg. some database is also imported), and that in this
>>> instance it returns xml of the form:
>>>
>>> <users>
>>> <user>
>>> <id>1</id>
>>> <name>john smith</name>
>>> </user>
>>> </users>
>>>
>>> unless it doesn't find the user, in which case it returns an error. the
>>> logrequestdata function logs the url that was called and the data it was
>>> passed. it might look like this:
>>>
>>> [Sun Sep 20 13:25:37 2009] [error]
>>> ********************************************************
>>> [Sun Sep 20 13:25:37 2009] [error] (None, None, None, None, None, None,
>>> '/site/python/site.py/login', 'user_name=user&user_pass=pass', None)
>>> [Sun Sep 20 13:25:37 2009] [error] {'user_name': [Field('user_name',
>>> 'user')], 'user_pass': [Field('user_pass', 'pass')]}
>>>
>>> based on this information you should be able to determine the proper url
>>> to call and process the passed data.
>>>
>>> good luck
>>>
>>> john
>>>
>>>
>>> Doug Epling wrote:
>>>
>>>        
>>>> Sorry, but I really need a boost here.  I might be dense, but I can
>>>> not get a 'script.py' file with a greet(req, name) function to accept
>>>> either POST or GET arguments.  I am getting a 403 Forbidden server
>>>> error.  Where might I read about server side parameters?
>>>>
>>>> Thanks.
>>>>
>>>> Graham
>>>>   From james at sindacio.us  Fri Nov 13 02:45:00 2009
>>>> From: james at sindacio.us (James Newton)
>>>> Date: Fri Nov 13 02:45:10 2009
>>>> Subject: [mod_python] POST example?
>>>> In-Reply-To:
>>>> <c2f9e3c20911122342g58179609s1bb0046b24ac6240@mail.gmail.com>
>>>> References:<c2f9e3c20911122342g58179609s1bb0046b24ac6240@mail.gmail.com>
>>>> Message-ID:<c2f9e3c20911122345i3812ac58qc69974240f980a65@mail.gmail.com>
>>>>
>>>> Hi,
>>>>
>>>> After looking around I can't seem to find a really straight forward
>>>> example
>>>> of how to POST, all I can seem to figure out is GET. Currently I'm
>>>> trying to
>>>> figure this out so I can post to a page with curl, rather then post via a
>>>> form, after asking around and getting turned away with "don't use
>>>> mod_python" on most occasions, I was hoping someone on this list could
>>>> give
>>>> me an example of how to post/store post data.
>>>>
>>>> Thanks,
>>>> James Newton
>>>> -------------- next part --------------
>>>> An HTML attachment was scrubbed...
>>>> URL:
>>>>
>>>> http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20091113/8048f618/attachment.html
>>>>
>>>>   From graham.dumpleton at gmail.com  Fri Nov 13 04:26:17 2009
>>>> From: graham.dumpleton at gmail.com (Graham Dumpleton)
>>>> Date: Fri Nov 13 04:26:26 2009
>>>> Subject: [mod_python] POST example?
>>>> In-Reply-To:
>>>> <c2f9e3c20911122345i3812ac58qc69974240f980a65@mail.gmail.com>
>>>> References:<c2f9e3c20911122342g58179609s1bb0046b24ac6240@mail.gmail.com>
>>>> <c2f9e3c20911122345i3812ac58qc69974240f980a65@mail.gmail.com>
>>>> Message-ID:<88e286470911130126m21222b57v8270616a602069ce@mail.gmail.com>
>>>>
>>>> Read:
>>>>
>>>>    http://webpython.codepoint.net/mod_python_tutorial
>>>>
>>>> First result for Google on 'mod_python tutorial'.
>>>>
>>>> Graham
>>>>
>>>> 2009/11/13 James Newton<james@sindacio.us>:
>>>>
>>>>          
>>>>> Hi,
>>>>> After looking around I can't seem to find a really straight forward
>>>>>
>>>>>            
>>>> example
>>>>
>>>>          
>>>>> of how to POST, all I can seem to figure out is GET. Currently I'm
>>>>>
>>>>>            
>>>> trying to
>>>>
>>>>          
>>>>> figure this out so I can post to a page with curl, rather then post
>>>>>
>>>>>            
>>>> via a
>>>>
>>>>          
>>>>> form, after asking around and getting turned away with "don't use
>>>>> mod_python" on most occasions, I was hoping someone on this list
>>>>>
>>>>>            
>>>> could give
>>>>
>>>>          
>>>>> me an example of how to post/store post data.
>>>>> Thanks,
>>>>> James Newton
>>>>>
>>>>> _______________________________________________
>>>>> Mod_python mailing list
>>>>> Mod_python@modpython.org
>>>>> http://mailman.modpython.org/mailman/listinfo/mod_python
>>>>>
>>>>>
>>>>>
>>>>>            
>>>>   From clodoaldo.pinto.neto at gmail.com  Fri Nov 13 05:56:08 2009
>>>> From: clodoaldo.pinto.neto at gmail.com (Clodoaldo Neto)
>>>> Date: Fri Nov 13 05:56:12 2009
>>>> Subject: Fwd: [mod_python] POST example?
>>>> In-Reply-To:
>>>> <a595de7a0911130107y1067a22exd498225e8aa4baf3@mail.gmail.com>
>>>> References:<c2f9e3c20911122342g58179609s1bb0046b24ac6240@mail.gmail.com>
>>>> <c2f9e3c20911122345i3812ac58qc69974240f980a65@mail.gmail.com>
>>>> <a595de7a0911130107y1067a22exd498225e8aa4baf3@mail.gmail.com>
>>>> Message-ID:<a595de7a0911130256i78bb0c99yce88dcbdca1c959f@mail.gmail.com>
>>>>
>>>> Forgot to post to the list.
>>>>
>>>> Clodoaldo
>>>>
>>>> ---------- Forwarded message ----------
>>>> From: Clodoaldo Neto<clodoaldo.pinto.neto@gmail.com>
>>>> Date: 2009/11/13
>>>> Subject: Re: [mod_python] POST example?
>>>> To: James Newton<james@sindacio.us>
>>>>
>>>>
>>>> 2009/11/13 James Newton<james@sindacio.us>:
>>>>
>>>>          
>>>>> Hi,
>>>>> After looking around I can't seem to find a really straight forward
>>>>>
>>>>>            
>>>> example
>>>>
>>>>          
>>>>> of how to POST, all I can seem to figure out is GET. Currently I'm
>>>>>
>>>>>            
>>>> trying to
>>>>
>>>>          
>>>>> figure this out so I can post to a page with curl, rather then post
>>>>>
>>>>>            
>>>> via a
>>>>
>>>>          
>>>>> form, after asking around and getting turned away with "don't use
>>>>> mod_python" on most occasions, I was hoping someone on this list
>>>>>
>>>>>            
>>>> could give
>>>>
>>>>          
>>>>> me an example of how to post/store post data.
>>>>>
>>>>>            
>>>> You mean you can read data posted by an html form and can't do it when
>>>> it is posted by curl? If so show what is your curl code.
>>>>
>>>> If what you are looking for is how to read data posted by any means read:
>>>>
>>>> http://webpython.codepoint.net/mod_python_tutorial
>>>>
>>>> Regards, Clodoaldo
>>>>
>>>>
>>>>          
>>>>> Thanks,
>>>>> James Newton
>>>>>
>>>>> _______________________________________________
>>>>> Mod_python mailing list
>>>>> Mod_python@modpython.org
>>>>> http://mailman.modpython.org/mailman/listinfo/mod_python
>>>>>
>>>>>
>>>>>
>>>>>            
>>>>   From clodoaldo.pinto.neto at gmail.com  Fri Nov 13 05:56:23 2009
>>>> From: clodoaldo.pinto.neto at gmail.com (Clodoaldo Neto)
>>>> Date: Fri Nov 13 05:56:25 2009
>>>> Subject: Fwd: [mod_python] POST example?
>>>> In-Reply-To:
>>>> <c2f9e3c20911130153y4f16535bg2759654e7cf92c86@mail.gmail.com>
>>>> References:<c2f9e3c20911122342g58179609s1bb0046b24ac6240@mail.gmail.com>
>>>> <c2f9e3c20911122345i3812ac58qc69974240f980a65@mail.gmail.com>
>>>> <a595de7a0911130107y1067a22exd498225e8aa4baf3@mail.gmail.com>
>>>> <c2f9e3c20911130153y4f16535bg2759654e7cf92c86@mail.gmail.com>
>>>> Message-ID:<a595de7a0911130256i6c82a8c4o1dfb199726e12a73@mail.gmail.com>
>>>>
>>>> ---------- Forwarded message ----------
>>>> From: James Newton<james@sindacio.us>
>>>> Date: 2009/11/13
>>>> Subject: Re: [mod_python] POST example?
>>>> To: clodoaldo.pinto.neto@gmail.com
>>>>
>>>>
>>>> I may be misunderstanding it, I'm assuming POST and GET are handled
>>>> the exact same way? The curl command would be like so: curl -F
>>>> 'postvar=<-' http://url.tld/. I used the example on that website for a
>>>> get var, but using it for post just created another get? I may not
>>>> being reading into this right.
>>>> James
>>>>
>>>> On Fri, Nov 13, 2009 at 3:07 AM, Clodoaldo Neto
>>>> <clodoaldo.pinto.neto@gmail.com>    wrote:
>>>>
>>>>          
>>>>> 2009/11/13 James Newton<james@sindacio.us>:
>>>>>
>>>>>            
>>>>>> Hi,
>>>>>> After looking around I can't seem to find a really straight
>>>>>>
>>>>>>              
>>>> forward example
>>>>
>>>>          
>>>>>> of how to POST, all I can seem to figure out is GET. Currently I'm
>>>>>>
>>>>>>              
>>>> trying to
>>>>
>>>>          
>>>>>> figure this out so I can post to a page with curl, rather then
>>>>>>
>>>>>>              
>>>> post via a
>>>>
>>>>          
>>>>>> form, after asking around and getting turned away with "don't use
>>>>>> mod_python" on most occasions, I was hoping someone on this list
>>>>>>
>>>>>>              
>>>> could give
>>>>
>>>>          
>>>>>> me an example of how to post/store post data.
>>>>>>
>>>>>>              
>>>>> You mean you can read data posted by an html form and can't do it when
>>>>> it is posted by curl? If so show what is your curl code.
>>>>>
>>>>> If what you are looking for is how to read data posted by any means
>>>>>
>>>>>            
>>>> read:
>>>>
>>>>          
>>>>> http://webpython.codepoint.net/mod_python_tutorial
>>>>>
>>>>> Regards, Clodoaldo
>>>>>
>>>>>
>>>>>            
>>>>>> Thanks,
>>>>>> James Newton
>>>>>>
>>>>>> _______________________________________________
>>>>>> Mod_python mailing list
>>>>>> Mod_python@modpython.org
>>>>>> http://mailman.modpython.org/mailman/listinfo/mod_python
>>>>>>
>>>>>>
>>>>>>
>>>>>>              
>>>> _______________________________________________
>>>> Mod_python mailing list
>>>> Mod_python@modpython.org
>>>> http://mailman.modpython.org/mailman/listinfo/mod_python
>>>>
>>>>
>>>>
>>>>          
>>>
>>>        
>> _______________________________________________
>> Mod_python mailing list
>> Mod_python@modpython.org
>> http://mailman.modpython.org/mailman/listinfo/mod_python
>>
>>      

From graham.dumpleton at gmail.com  Thu Jan  7 21:52:57 2010
From: graham.dumpleton at gmail.com (Graham Dumpleton)
Date: Thu Jan  7 21:53:06 2010
Subject: [mod_python] server side parameters
In-Reply-To: <4B46827E.7040604@insightbb.com>
References: <4B43EF35.4050600@insightbb.com> <4B43F827.7090004@infodentity.com>
	<4B43FFB4.8070909@insightbb.com>
	<88e286471001070156kcb7322n5d1f52af3e2bf33c@mail.gmail.com>
	<4B46827E.7040604@insightbb.com>
Message-ID: <88e286471001071852q61480e68s40789460bb9c3118@mail.gmail.com>

2010/1/8 Doug Epling <depling@insightbb.com>:
> Apparently I am having some kind of conflict with Apache modsec. ?Do the
> following lines from the Apache error_log mean anything? ?Is this something
> I need to take up with my distro, which is Fedora Core? ?Any help here will
> be appreciated; I have spent at least two days on this.
>
> Thanks.
>
> [Thu Jan 07 19:36:59 2010] [notice] Apache/2.2.14 (Unix) DAV/2
> mod_python/3.3.1 Python/2.6.2 mod_ssl/2.2.14 OpenSSL/1.0.0-fips-beta4
> mod_wsgi/2.5 ? configured -- resuming normal operations
> [Thu Jan 07 19:36:59 2010] [info] Server built: Dec ?3 2009 10:25:53
> [Thu Jan 07 19:36:59 2010] [debug] prefork.c(1013): AcceptMutex: sysvsem
> (default: sysvsem)
> [Thu Jan 07 19:37:22 2010] [error]
> /usr/lib/python2.6/site-packages/mod_python/importer.py:32:
> DeprecationWarning: the md5 module is deprecated; use hashlib instead
> [Thu Jan 07 19:37:22 2010] [error] ? import md5
> [Thu Jan 07 19:37:38 2010] [error]
> /usr/lib/python2.6/site-packages/mod_python/importer.py:32:
> DeprecationWarning: the md5 module is deprecated; use hashlib instead
> [Thu Jan 07 19:37:38 2010] [error] ? import md5

The deprecation warning just shows that mod_python is way out of date.
The warning shouldn't otherwise cause anything to fail.

BTW, why if you are also loading mod_wsgi are you even trying to use
mod_python. Why not use one of the WSGI frameworks such as Werkzeug or
Django even and save yourself a lot of trouble.

If you do use WSGI based solutions, just make sure you disable
mod_python and only load mod_wsgi.

Graham

> On 01/07/2010 04:56 AM, Graham Dumpleton wrote:
>>
>> If you are getting a 403 forbidden error then you either haven't
>> configured Apache correctly such that the mod_python URL you are using
>> is a valid URL which can be accessed, that the specific URL is
>> matching some pattern elsewhere in Apache which is denied for some
>> reason, or, you have named your publisher handler with a leading
>> underscore, which are private and therefore forbidden.
>>
>> You need to work out what is generating the 403, Apache or mod_python.
>>
>> Graham
>>
>> 2010/1/6 Doug Epling<depling@insightbb.com>:
>>
>>>
>>> Why would I want to import apache, util? ?The request object created by
>>> the
>>> publisher automatically creates a FieldStorage object. ?So when I pass
>>> the
>>> request object, whether POST or GET, along with some other trivial data
>>> the
>>> python script on the server should simply take the data argument as a
>>> parameter and return a page with it printed on it. ?Why doesn't the
>>> apache
>>> user have this permission?
>>>
>>> calling page:
>>>
>>> def index():
>>> ? ?s = """\
>>> <html>
>>> <head></head>
>>> <body>
>>> <h2>Hello World!</h2>
>>>
>>> <form action="script/greet" method="GET">
>>> ? ?Name:<input type="text" name="name"><br>
>>> <input type="submit">
>>> </form>
>>>
>>> </body>
>>> </html>
>>> """
>>> ? ?return s
>>>
>>> server script:
>>>
>>> def greet(req, name):
>>>
>>> ? ?return 'Hello %s' % name
>>>
>>> On 01/05/2010 09:40 PM, john burke wrote:
>>>
>>>>
>>>> this should be all you really need. what you do with the data from
>>>> request_data is your own business.
>>>>
>>>> from mod_python import apache, util
>>>>
>>>> def login(req):
>>>>
>>>> ? request_data = util.FieldStorage(req)
>>>>
>>>> ? logreqdata(req, request_data)
>>>>
>>>> ? qry = "SELECT u.user_id as id, u.user_name as name FROM users u"
>>>> ? qry += " WHERE u.user_name = '"
>>>> ? qry += request_data.getfirst("user_name")
>>>> ? qry += "' AND u.user_pass ='"
>>>> ? qry += request_data.getfirst("user_pass")
>>>> ? qry += "'"
>>>> ? return dorequest(req, qry, "users", "user").toxml("utf-8")
>>>>
>>>> def logreqdata(req, data):
>>>>
>>>> ? if (DEBUG> ? ?0):
>>>>
>>>>
>>>>
>>>> apache.log_error("********************************************************")
>>>> ? ? apache.log_error(str(req.parsed_uri))
>>>> ? ? apache.log_error(str(data))
>>>>
>>>> in this case you can imagine that the the dorequest method knows how to
>>>> query a database (eg. some database is also imported), and that in this
>>>> instance it returns xml of the form:
>>>>
>>>> <users>
>>>> <user>
>>>> <id>1</id>
>>>> <name>john smith</name>
>>>> </user>
>>>> </users>
>>>>
>>>> unless it doesn't find the user, in which case it returns an error. the
>>>> logrequestdata function logs the url that was called and the data it was
>>>> passed. it might look like this:
>>>>
>>>> [Sun Sep 20 13:25:37 2009] [error]
>>>> ********************************************************
>>>> [Sun Sep 20 13:25:37 2009] [error] (None, None, None, None, None, None,
>>>> '/site/python/site.py/login', 'user_name=user&user_pass=pass', None)
>>>> [Sun Sep 20 13:25:37 2009] [error] {'user_name': [Field('user_name',
>>>> 'user')], 'user_pass': [Field('user_pass', 'pass')]}
>>>>
>>>> based on this information you should be able to determine the proper url
>>>> to call and process the passed data.
>>>>
>>>> good luck
>>>>
>>>> john
>>>>
>>>>
>>>> Doug Epling wrote:
>>>>
>>>>
>>>>>
>>>>> Sorry, but I really need a boost here. ?I might be dense, but I can
>>>>> not get a 'script.py' file with a greet(req, name) function to accept
>>>>> either POST or GET arguments. ?I am getting a 403 Forbidden server
>>>>> error. ?Where might I read about server side parameters?
>>>>>
>>>>> Thanks.
>>>>>
>>>>> Graham
>>>>> ?From james at sindacio.us ?Fri Nov 13 02:45:00 2009
>>>>> From: james at sindacio.us (James Newton)
>>>>> Date: Fri Nov 13 02:45:10 2009
>>>>> Subject: [mod_python] POST example?
>>>>> In-Reply-To:
>>>>> <c2f9e3c20911122342g58179609s1bb0046b24ac6240@mail.gmail.com>
>>>>>
>>>>> References:<c2f9e3c20911122342g58179609s1bb0046b24ac6240@mail.gmail.com>
>>>>>
>>>>> Message-ID:<c2f9e3c20911122345i3812ac58qc69974240f980a65@mail.gmail.com>
>>>>>
>>>>> Hi,
>>>>>
>>>>> After looking around I can't seem to find a really straight forward
>>>>> example
>>>>> of how to POST, all I can seem to figure out is GET. Currently I'm
>>>>> trying to
>>>>> figure this out so I can post to a page with curl, rather then post via
>>>>> a
>>>>> form, after asking around and getting turned away with "don't use
>>>>> mod_python" on most occasions, I was hoping someone on this list could
>>>>> give
>>>>> me an example of how to post/store post data.
>>>>>
>>>>> Thanks,
>>>>> James Newton
>>>>> -------------- next part --------------
>>>>> An HTML attachment was scrubbed...
>>>>> URL:
>>>>>
>>>>>
>>>>> http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20091113/8048f618/attachment.html
>>>>>
>>>>> ?From graham.dumpleton at gmail.com ?Fri Nov 13 04:26:17 2009
>>>>> From: graham.dumpleton at gmail.com (Graham Dumpleton)
>>>>> Date: Fri Nov 13 04:26:26 2009
>>>>> Subject: [mod_python] POST example?
>>>>> In-Reply-To:
>>>>> <c2f9e3c20911122345i3812ac58qc69974240f980a65@mail.gmail.com>
>>>>>
>>>>> References:<c2f9e3c20911122342g58179609s1bb0046b24ac6240@mail.gmail.com>
>>>>> <c2f9e3c20911122345i3812ac58qc69974240f980a65@mail.gmail.com>
>>>>>
>>>>> Message-ID:<88e286470911130126m21222b57v8270616a602069ce@mail.gmail.com>
>>>>>
>>>>> Read:
>>>>>
>>>>> ? http://webpython.codepoint.net/mod_python_tutorial
>>>>>
>>>>> First result for Google on 'mod_python tutorial'.
>>>>>
>>>>> Graham
>>>>>
>>>>> 2009/11/13 James Newton<james@sindacio.us>:
>>>>>
>>>>>
>>>>>>
>>>>>> Hi,
>>>>>> After looking around I can't seem to find a really straight forward
>>>>>>
>>>>>>
>>>>>
>>>>> example
>>>>>
>>>>>
>>>>>>
>>>>>> of how to POST, all I can seem to figure out is GET. Currently I'm
>>>>>>
>>>>>>
>>>>>
>>>>> trying to
>>>>>
>>>>>
>>>>>>
>>>>>> figure this out so I can post to a page with curl, rather then post
>>>>>>
>>>>>>
>>>>>
>>>>> via a
>>>>>
>>>>>
>>>>>>
>>>>>> form, after asking around and getting turned away with "don't use
>>>>>> mod_python" on most occasions, I was hoping someone on this list
>>>>>>
>>>>>>
>>>>>
>>>>> could give
>>>>>
>>>>>
>>>>>>
>>>>>> me an example of how to post/store post data.
>>>>>> Thanks,
>>>>>> James Newton
>>>>>>
>>>>>> _______________________________________________
>>>>>> Mod_python mailing list
>>>>>> Mod_python@modpython.org
>>>>>> http://mailman.modpython.org/mailman/listinfo/mod_python
>>>>>>
>>>>>>
>>>>>>
>>>>>>
>>>>>
>>>>> ?From clodoaldo.pinto.neto at gmail.com ?Fri Nov 13 05:56:08 2009
>>>>> From: clodoaldo.pinto.neto at gmail.com (Clodoaldo Neto)
>>>>> Date: Fri Nov 13 05:56:12 2009
>>>>> Subject: Fwd: [mod_python] POST example?
>>>>> In-Reply-To:
>>>>> <a595de7a0911130107y1067a22exd498225e8aa4baf3@mail.gmail.com>
>>>>>
>>>>> References:<c2f9e3c20911122342g58179609s1bb0046b24ac6240@mail.gmail.com>
>>>>> <c2f9e3c20911122345i3812ac58qc69974240f980a65@mail.gmail.com>
>>>>> <a595de7a0911130107y1067a22exd498225e8aa4baf3@mail.gmail.com>
>>>>>
>>>>> Message-ID:<a595de7a0911130256i78bb0c99yce88dcbdca1c959f@mail.gmail.com>
>>>>>
>>>>> Forgot to post to the list.
>>>>>
>>>>> Clodoaldo
>>>>>
>>>>> ---------- Forwarded message ----------
>>>>> From: Clodoaldo Neto<clodoaldo.pinto.neto@gmail.com>
>>>>> Date: 2009/11/13
>>>>> Subject: Re: [mod_python] POST example?
>>>>> To: James Newton<james@sindacio.us>
>>>>>
>>>>>
>>>>> 2009/11/13 James Newton<james@sindacio.us>:
>>>>>
>>>>>
>>>>>>
>>>>>> Hi,
>>>>>> After looking around I can't seem to find a really straight forward
>>>>>>
>>>>>>
>>>>>
>>>>> example
>>>>>
>>>>>
>>>>>>
>>>>>> of how to POST, all I can seem to figure out is GET. Currently I'm
>>>>>>
>>>>>>
>>>>>
>>>>> trying to
>>>>>
>>>>>
>>>>>>
>>>>>> figure this out so I can post to a page with curl, rather then post
>>>>>>
>>>>>>
>>>>>
>>>>> via a
>>>>>
>>>>>
>>>>>>
>>>>>> form, after asking around and getting turned away with "don't use
>>>>>> mod_python" on most occasions, I was hoping someone on this list
>>>>>>
>>>>>>
>>>>>
>>>>> could give
>>>>>
>>>>>
>>>>>>
>>>>>> me an example of how to post/store post data.
>>>>>>
>>>>>>
>>>>>
>>>>> You mean you can read data posted by an html form and can't do it when
>>>>> it is posted by curl? If so show what is your curl code.
>>>>>
>>>>> If what you are looking for is how to read data posted by any means
>>>>> read:
>>>>>
>>>>> http://webpython.codepoint.net/mod_python_tutorial
>>>>>
>>>>> Regards, Clodoaldo
>>>>>
>>>>>
>>>>>
>>>>>>
>>>>>> Thanks,
>>>>>> James Newton
>>>>>>
>>>>>> _______________________________________________
>>>>>> Mod_python mailing list
>>>>>> Mod_python@modpython.org
>>>>>> http://mailman.modpython.org/mailman/listinfo/mod_python
>>>>>>
>>>>>>
>>>>>>
>>>>>>
>>>>>
>>>>> ?From clodoaldo.pinto.neto at gmail.com ?Fri Nov 13 05:56:23 2009
>>>>> From: clodoaldo.pinto.neto at gmail.com (Clodoaldo Neto)
>>>>> Date: Fri Nov 13 05:56:25 2009
>>>>> Subject: Fwd: [mod_python] POST example?
>>>>> In-Reply-To:
>>>>> <c2f9e3c20911130153y4f16535bg2759654e7cf92c86@mail.gmail.com>
>>>>>
>>>>> References:<c2f9e3c20911122342g58179609s1bb0046b24ac6240@mail.gmail.com>
>>>>> <c2f9e3c20911122345i3812ac58qc69974240f980a65@mail.gmail.com>
>>>>> <a595de7a0911130107y1067a22exd498225e8aa4baf3@mail.gmail.com>
>>>>> <c2f9e3c20911130153y4f16535bg2759654e7cf92c86@mail.gmail.com>
>>>>>
>>>>> Message-ID:<a595de7a0911130256i6c82a8c4o1dfb199726e12a73@mail.gmail.com>
>>>>>
>>>>> ---------- Forwarded message ----------
>>>>> From: James Newton<james@sindacio.us>
>>>>> Date: 2009/11/13
>>>>> Subject: Re: [mod_python] POST example?
>>>>> To: clodoaldo.pinto.neto@gmail.com
>>>>>
>>>>>
>>>>> I may be misunderstanding it, I'm assuming POST and GET are handled
>>>>> the exact same way? The curl command would be like so: curl -F
>>>>> 'postvar=<-' http://url.tld/. I used the example on that website for a
>>>>> get var, but using it for post just created another get? I may not
>>>>> being reading into this right.
>>>>> James
>>>>>
>>>>> On Fri, Nov 13, 2009 at 3:07 AM, Clodoaldo Neto
>>>>> <clodoaldo.pinto.neto@gmail.com> ? ?wrote:
>>>>>
>>>>>
>>>>>>
>>>>>> 2009/11/13 James Newton<james@sindacio.us>:
>>>>>>
>>>>>>
>>>>>>>
>>>>>>> Hi,
>>>>>>> After looking around I can't seem to find a really straight
>>>>>>>
>>>>>>>
>>>>>
>>>>> forward example
>>>>>
>>>>>
>>>>>>>
>>>>>>> of how to POST, all I can seem to figure out is GET. Currently I'm
>>>>>>>
>>>>>>>
>>>>>
>>>>> trying to
>>>>>
>>>>>
>>>>>>>
>>>>>>> figure this out so I can post to a page with curl, rather then
>>>>>>>
>>>>>>>
>>>>>
>>>>> post via a
>>>>>
>>>>>
>>>>>>>
>>>>>>> form, after asking around and getting turned away with "don't use
>>>>>>> mod_python" on most occasions, I was hoping someone on this list
>>>>>>>
>>>>>>>
>>>>>
>>>>> could give
>>>>>
>>>>>
>>>>>>>
>>>>>>> me an example of how to post/store post data.
>>>>>>>
>>>>>>>
>>>>>>
>>>>>> You mean you can read data posted by an html form and can't do it when
>>>>>> it is posted by curl? If so show what is your curl code.
>>>>>>
>>>>>> If what you are looking for is how to read data posted by any means
>>>>>>
>>>>>>
>>>>>
>>>>> read:
>>>>>
>>>>>
>>>>>>
>>>>>> http://webpython.codepoint.net/mod_python_tutorial
>>>>>>
>>>>>> Regards, Clodoaldo
>>>>>>
>>>>>>
>>>>>>
>>>>>>>
>>>>>>> Thanks,
>>>>>>> James Newton
>>>>>>>
>>>>>>> _______________________________________________
>>>>>>> Mod_python mailing list
>>>>>>> Mod_python@modpython.org
>>>>>>> http://mailman.modpython.org/mailman/listinfo/mod_python
>>>>>>>
>>>>>>>
>>>>>>>
>>>>>>>
>>>>>
>>>>> _______________________________________________
>>>>> Mod_python mailing list
>>>>> Mod_python@modpython.org
>>>>> http://mailman.modpython.org/mailman/listinfo/mod_python
>>>>>
>>>>>
>>>>>
>>>>>
>>>>
>>>>
>>>
>>> _______________________________________________
>>> Mod_python mailing list
>>> Mod_python@modpython.org
>>> http://mailman.modpython.org/mailman/listinfo/mod_python
>>>
>>>
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>

From saeed.bhuta at placr.co.uk  Mon Jan 11 08:00:56 2010
From: saeed.bhuta at placr.co.uk (Saeed Bhuta)
Date: Mon Jan 11 08:01:07 2010
Subject: [mod_python] Invalid command 'PythonHandler' error.
Message-ID: <4B4B2108.1070300@placr.co.uk>

Hi All,

I am trying to install mod_python on an Apache 2.2 server. I have 
followed the instructions from this web page 
(http://www.cyberciti.biz/faq/ubuntu-mod_python-apache-tutorial/).

However I am now getting the following error when restarting the server;

*Invalid command 'PythonHandler', perhaps misspelled or defined by a 
module not included in the server configuration
*
Many Thanks,

Saeed.*
*

-- 
-- ----------------------------------------------------------------
Saeed Bhuta <saeed.bhuta@placr.co.uk>
Software Engineer, Placr Ltd.
http://www.placr.co.uk/
Twitter @placrsaeed SkypeID: placrsaeed
+44 20 3239 9993 Office  +44 7903 552369 mobile
-------------------------------------------------------------------

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20100111/da7f92ef/attachment.html
From konference at brabenec.net  Mon Jan 11 09:53:05 2010
From: konference at brabenec.net (Tomas Brabenec)
Date: Mon Jan 11 09:53:16 2010
Subject: [SPAM] [mod_python] Invalid command 'PythonHandler' error.
In-Reply-To: <4B4B2108.1070300@placr.co.uk>
References: <4B4B2108.1070300@placr.co.uk>
Message-ID: <4B4B3B51.9020309@brabenec.net>

In Your httpd.conf probably missing load mod_python module.
Mod_python is not active project. If You start with Python & Apache, try 
mod_wsgi instead.

Tomas


Dne 11.1.2010 14:00, Saeed Bhuta napsal(a):
> Hi All,
>
> I am trying to install mod_python on an Apache 2.2 server. I have 
> followed the instructions from this web page 
> (http://www.cyberciti.biz/faq/ubuntu-mod_python-apache-tutorial/).
>
> However I am now getting the following error when restarting the server;
>
> *Invalid command 'PythonHandler', perhaps misspelled or defined by a 
> module not included in the server configuration
> *
> Many Thanks,
>
> Saeed.*
> *
> -- 
> -- ----------------------------------------------------------------
> Saeed Bhuta<saeed.bhuta@placr.co.uk>
> Software Engineer, Placr Ltd.
> http://www.placr.co.uk/
> Twitter @placrsaeed SkypeID: placrsaeed
> +44 20 3239 9993 Office  +44 7903 552369 mobile
> -------------------------------------------------------------------
>    
> ------------------------------------------------------------------------
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>    
From saeed.bhuta at placr.co.uk  Tue Jan 12 04:28:15 2010
From: saeed.bhuta at placr.co.uk (Saeed Bhuta)
Date: Tue Jan 12 04:28:28 2010
Subject: [mod_python] ImportError: No module named mod_python.apache
Message-ID: <4B4C40AF.20104@placr.co.uk>

Hi All,

I am trying to install mod_python for Apache 2.2 for use with Python 
2.6. An internal server error is displayed when the python is script is 
accessed from the web and Apache's error log has the following:

"*[Tue Jan 12 08:16:56 2010] [error] make_obcallback: could not import 
mod_python.apache.\n
ImportError: No module named mod_python.apache
[Tue Jan 12 08:16:56 2010] [error] make_obcallback: Python path being 
used "['/usr/local/lib/python2.6', 
'/usr/local/lib/python2.6/plat-linux2', '/usr/local$
[Tue Jan 12 08:16:56 2010] [error] get_interpreter: no interpreter 
callback found.
[Tue Jan 12 08:16:56 2010] [error] [client 195.157.141.25] 
python_handler: Can't get/create interpreter., referer: 
http://placraa1.miniserver.com/py/*"

I have installed Apache 2.2 on Ubuntu Karmic Koala 9.10

Any help is greatly appreciated.

Saeed

-- 
-- ----------------------------------------------------------------
Saeed Bhuta <saeed.bhuta@placr.co.uk>
Software Engineer, Placr Ltd.
http://www.placr.co.uk/
Twitter @placrsaeed SkypeID: placrsaeed
+44 20 3239 9993 Office  +44 7903 552369 mobile
-------------------------------------------------------------------

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20100112/c04d3fea/attachment.html
From lists at elasticmind.net  Tue Jan 12 06:54:29 2010
From: lists at elasticmind.net (mog)
Date: Tue Jan 12 06:54:46 2010
Subject: [SPAM] [mod_python] ImportError: No module named mod_python.apache
In-Reply-To: <4B4C40AF.20104@placr.co.uk>
References: <4B4C40AF.20104@placr.co.uk>
Message-ID: <4B4C62F5.4090206@elasticmind.net>

On 12/01/2010 09:28, Saeed Bhuta wrote:
> Hi All,
>
> I am trying to install mod_python for Apache 2.2 for use with Python 
> 2.6. An internal server error is displayed when the python is script 
> is accessed from the web and Apache's error log has the following:
>
> "*[Tue Jan 12 08:16:56 2010] [error] make_obcallback: could not import 
> mod_python.apache.\n
> ImportError: No module named mod_python.apache
> [Tue Jan 12 08:16:56 2010] [error] make_obcallback: Python path being 
> used "['/usr/local/lib/python2.6', 
> '/usr/local/lib/python2.6/plat-linux2', '/usr/local$
> [Tue Jan 12 08:16:56 2010] [error] get_interpreter: no interpreter 
> callback found.
> [Tue Jan 12 08:16:56 2010] [error] [client 195.157.141.25] 
> python_handler: Can't get/create interpreter., referer: 
> http://placraa1.miniserver.com/py/*"
>
> I have installed Apache 2.2 on Ubuntu Karmic Koala 9.10
>
> Any help is greatly appreciated.
>
> Saeed


Hi,

What is this going to be used for? Is it for a new project you are making?

mog
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20100112/37ab2a5e/attachment.html
From lists at elasticmind.net  Tue Jan 12 08:32:49 2010
From: lists at elasticmind.net (mog)
Date: Tue Jan 12 08:33:09 2010
Subject: [mod_python] bye bye mod_python, hello... what?
Message-ID: <4B4C7A01.20205@elasticmind.net>

So, the time has come. I need to start a new project and also migrate my 
old mod_python stuff to something else :(

After all the sweat, blood and tears I put into learning about how 
Python web apps work, learning how to use mod_python, and how to put web 
apps together (using mod_python). It's really sad to think that a good 
portion of that effort seems lost because, unfortunately, mod_python is 
deprecated :(

I looked at a few web frameworks but found they either simply didn't 
work, exhibited weird random unpredictable behaviour that was impossible 
to work with, or seemed to abstract so far away from real HTTP which 
made me feel uncomfortable. I finally settled on mod_python because it 
seemed to be a nice balance of powerful functionality and usefulness - 
oh, and it worked.

With mod_python I felt as though I was working closely with the HTTP 
requests because I could use the request objects directly and, if I 
wanted (and I did), stick stuff in them to use in sessions. mod_python 
seemed pretty raw, but not so much so that I had to write my own request 
handlers and all the nitty gritty things like that (which, being new to 
web development, was and probably still is beyond my ability to do well 
and securely). I liked it because it also provided lots of in-built 
utilities making it really easy to do session handling, redirection and 
so on.

I'm trying to avoid using one of the mainstream frameworks because I 
feel they overcomplicate things, bloat things up, and abstract too much 
away from what is really going on. Many of them annoyingly also end up 
requiring a bazillion dependencies to install. Personally I like to use 
small and compact programs that are really good at doing the small 
number of things I need them to, as opposed to installing some giant 
application (and all its dependencies) that can do everything under the 
sun I'll never use.

With all this in mind. I was hoping someone would please be so kind as 
to recommend things that I could use instead of mod_python as a WSGI 
layer, but that hopefully works in a similar way to mod_python?

Thank you in advance for your time and consideration.

Kind regards,
mog
From lists at elasticmind.net  Tue Jan 12 08:44:47 2010
From: lists at elasticmind.net (mog)
Date: Tue Jan 12 08:45:11 2010
Subject: [SPAM] [mod_python] ImportError: No module named mod_python.apache
In-Reply-To: <4B4C6623.8080303@placr.co.uk>
References: <4B4C40AF.20104@placr.co.uk> <4B4C62F5.4090206@elasticmind.net>
	<4B4C6623.8080303@placr.co.uk>
Message-ID: <4B4C7CCF.7070405@elasticmind.net>

On 12/01/2010 12:08, Saeed Bhuta wrote:
> mog wrote:
>> On 12/01/2010 09:28, Saeed Bhuta wrote:
>>> Hi All,
>>>
>>> I am trying to install mod_python for Apache 2.2 for use with Python 
>>> 2.6. An internal server error is displayed when the python is script 
>>> is accessed from the web and Apache's error log has the following:
>>>
>>> "*[Tue Jan 12 08:16:56 2010] [error] make_obcallback: could not 
>>> import mod_python.apache.\n
>>> ImportError: No module named mod_python.apache
>>> [Tue Jan 12 08:16:56 2010] [error] make_obcallback: Python path 
>>> being used "['/usr/local/lib/python2.6', 
>>> '/usr/local/lib/python2.6/plat-linux2', '/usr/local$
>>> [Tue Jan 12 08:16:56 2010] [error] get_interpreter: no interpreter 
>>> callback found.
>>> [Tue Jan 12 08:16:56 2010] [error] [client 195.157.141.25] 
>>> python_handler: Can't get/create interpreter., referer: 
>>> http://placraa1.miniserver.com/py/*"
>>>
>>> I have installed Apache 2.2 on Ubuntu Karmic Koala 9.10
>>>
>>> Any help is greatly appreciated.
>>>
>>> Saeed
>>
>>
>> Hi,
>>
>> What is this going to be used for? Is it for a new project you are 
>> making?
>>
>> mog
>>    
> Hi Mog,
>
> Not for a new project, I managed to have mod_python working on Apache 
> on my laptop. But its not working on the VPS.
>
> Saeed.


Hi Saeed,

It's much better if you keep conversations on the mailing list, because 
that way everyone can join in and help.

Have you made sure to load the mod_python module into Apache via the 
httpd.conf file?

Also, since mod_python is deprecated and one day will likely stop 
working altogether. I would advise you look at migrating any mod_python 
projects to use WSGI or something similar to ensure they continue to be 
supported.

mog
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20100112/49f9cd67/attachment.html
From sdavis2 at mail.nih.gov  Tue Jan 12 08:51:44 2010
From: sdavis2 at mail.nih.gov (Sean Davis)
Date: Tue Jan 12 08:51:53 2010
Subject: [mod_python] bye bye mod_python, hello... what?
In-Reply-To: <4B4C7A01.20205@elasticmind.net>
References: <4B4C7A01.20205@elasticmind.net>
Message-ID: <264855a01001120551k42eb770bue7670a0291e64914@mail.gmail.com>

On Tue, Jan 12, 2010 at 8:32 AM, mog <lists@elasticmind.net> wrote:
> So, the time has come. I need to start a new project and also migrate my
> old mod_python stuff to something else :(
>
> After all the sweat, blood and tears I put into learning about how
> Python web apps work, learning how to use mod_python, and how to put web
> apps together (using mod_python). It's really sad to think that a good
> portion of that effort seems lost because, unfortunately, mod_python is
> deprecated :(
>
> I looked at a few web frameworks but found they either simply didn't
> work, exhibited weird random unpredictable behaviour that was impossible
> to work with, or seemed to abstract so far away from real HTTP which
> made me feel uncomfortable. I finally settled on mod_python because it
> seemed to be a nice balance of powerful functionality and usefulness -
> oh, and it worked.
>
> With mod_python I felt as though I was working closely with the HTTP
> requests because I could use the request objects directly and, if I
> wanted (and I did), stick stuff in them to use in sessions. mod_python
> seemed pretty raw, but not so much so that I had to write my own request
> handlers and all the nitty gritty things like that (which, being new to
> web development, was and probably still is beyond my ability to do well
> and securely). I liked it because it also provided lots of in-built
> utilities making it really easy to do session handling, redirection and
> so on.
>
> I'm trying to avoid using one of the mainstream frameworks because I
> feel they overcomplicate things, bloat things up, and abstract too much
> away from what is really going on. Many of them annoyingly also end up
> requiring a bazillion dependencies to install. Personally I like to use
> small and compact programs that are really good at doing the small
> number of things I need them to, as opposed to installing some giant
> application (and all its dependencies) that can do everything under the
> sun I'll never use.
>
> With all this in mind. I was hoping someone would please be so kind as
> to recommend things that I could use instead of mod_python as a WSGI
> layer, but that hopefully works in a similar way to mod_python?

How about mod_wsgi?

http://code.google.com/p/modwsgi/

Sean

> Thank you in advance for your time and consideration.
>
> Kind regards,
> mog
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>
From saeed.bhuta at placr.co.uk  Tue Jan 12 08:51:43 2010
From: saeed.bhuta at placr.co.uk (Saeed Bhuta)
Date: Tue Jan 12 08:52:05 2010
Subject: [SPAM] [mod_python] ImportError: No module named mod_python.apache
In-Reply-To: <4B4C7CCF.7070405@elasticmind.net>
References: <4B4C40AF.20104@placr.co.uk> <4B4C62F5.4090206@elasticmind.net>
	<4B4C6623.8080303@placr.co.uk> <4B4C7CCF.7070405@elasticmind.net>
Message-ID: <4B4C7E6F.3010307@placr.co.uk>

mog wrote:
> On 12/01/2010 12:08, Saeed Bhuta wrote:
>> mog wrote:
>>> On 12/01/2010 09:28, Saeed Bhuta wrote:
>>>> Hi All,
>>>>
>>>> I am trying to install mod_python for Apache 2.2 for use with 
>>>> Python 2.6. An internal server error is displayed when the python 
>>>> is script is accessed from the web and Apache's error log has the 
>>>> following:
>>>>
>>>> "*[Tue Jan 12 08:16:56 2010] [error] make_obcallback: could not 
>>>> import mod_python.apache.\n
>>>> ImportError: No module named mod_python.apache
>>>> [Tue Jan 12 08:16:56 2010] [error] make_obcallback: Python path 
>>>> being used "['/usr/local/lib/python2.6', 
>>>> '/usr/local/lib/python2.6/plat-linux2', '/usr/local$
>>>> [Tue Jan 12 08:16:56 2010] [error] get_interpreter: no interpreter 
>>>> callback found.
>>>> [Tue Jan 12 08:16:56 2010] [error] [client 195.157.141.25] 
>>>> python_handler: Can't get/create interpreter., referer: 
>>>> http://placraa1.miniserver.com/py/*"
>>>>
>>>> I have installed Apache 2.2 on Ubuntu Karmic Koala 9.10
>>>>
>>>> Any help is greatly appreciated.
>>>>
>>>> Saeed
>>>
>>>
>>> Hi,
>>>
>>> What is this going to be used for? Is it for a new project you are 
>>> making?
>>>
>>> mog
>>>   
>> Hi Mog,
>>
>> Not for a new project, I managed to have mod_python working on Apache 
>> on my laptop. But its not working on the VPS.
>>
>> Saeed.
>
>
> Hi Saeed,
>
> It's much better if you keep conversations on the mailing list, 
> because that way everyone can join in and help.
>
> Have you made sure to load the mod_python module into Apache via the 
> httpd.conf file?
>
> Also, since mod_python is deprecated and one day will likely stop 
> working altogether. I would advise you look at migrating any 
> mod_python projects to use WSGI or something similar to ensure they 
> continue to be supported.
>
> mog
Hi Mog,

I overlooked that when replying to you, thanks for the pointer.

I'm not too familiar with Apache, according to the tutorial I followed 
(http://www.cyberciti.biz/faq/ubuntu-mod_python-apache-tutorial/), I 
just edited the /etc/apache2/sites-available/default file. Am I meant to 
also edit httpd.conf? If so, can you provide what is meant to go into it 
please?

Many Thanks,

Saeed

-- 
-- ----------------------------------------------------------------
Saeed Bhuta <saeed.bhuta@placr.co.uk>
Software Engineer, Placr Ltd.
http://www.placr.co.uk/
Twitter @placrsaeed SkypeID: placrsaeed
+44 20 3239 9993 Office  +44 7903 552369 mobile
-------------------------------------------------------------------

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20100112/0b48babe/attachment-0001.html
From clodoaldo.pinto.neto at gmail.com  Tue Jan 12 08:56:58 2010
From: clodoaldo.pinto.neto at gmail.com (Clodoaldo Neto)
Date: Tue Jan 12 08:57:07 2010
Subject: [mod_python] bye bye mod_python, hello... what?
In-Reply-To: <4B4C7A01.20205@elasticmind.net>
References: <4B4C7A01.20205@elasticmind.net>
Message-ID: <a595de7a1001120556s31282e40j5ef11cc0d452dc6d@mail.gmail.com>

2010/1/12 mog <lists@elasticmind.net>:
> So, the time has come. I need to start a new project and also migrate my old
> mod_python stuff to something else :(
>
> After all the sweat, blood and tears I put into learning about how Python
> web apps work, learning how to use mod_python, and how to put web apps
> together (using mod_python). It's really sad to think that a good portion of
> that effort seems lost because, unfortunately, mod_python is deprecated :(
>
> I looked at a few web frameworks but found they either simply didn't work,
> exhibited weird random unpredictable behaviour that was impossible to work
> with, or seemed to abstract so far away from real HTTP which made me feel
> uncomfortable. I finally settled on mod_python because it seemed to be a
> nice balance of powerful functionality and usefulness - oh, and it worked.
>
> With mod_python I felt as though I was working closely with the HTTP
> requests because I could use the request objects directly and, if I wanted
> (and I did), stick stuff in them to use in sessions. mod_python seemed
> pretty raw, but not so much so that I had to write my own request handlers
> and all the nitty gritty things like that (which, being new to web
> development, was and probably still is beyond my ability to do well and
> securely). I liked it because it also provided lots of in-built utilities
> making it really easy to do session handling, redirection and so on.
>
> I'm trying to avoid using one of the mainstream frameworks because I feel
> they overcomplicate things, bloat things up, and abstract too much away from
> what is really going on. Many of them annoyingly also end up requiring a
> bazillion dependencies to install. Personally I like to use small and
> compact programs that are really good at doing the small number of things I
> need them to, as opposed to installing some giant application (and all its
> dependencies) that can do everything under the sun I'll never use.
>
> With all this in mind. I was hoping someone would please be so kind as to
> recommend things that I could use instead of mod_python as a WSGI layer, but
> that hopefully works in a similar way to mod_python?

You could start trying Werkzeug which calls itself "a simple
collection of various utilities for WSGI applications".

http://werkzeug.pocoo.org/

Then WebOb:

http://pythonpaste.org/webob/

Regarding small and simple I think the two above are some of the best
approaches but don't expect something like the mod_python's publisher
handler.

Regards, Clodoaldo

>
> Thank you in advance for your time and consideration.
>
> Kind regards,
> mog
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>
From wdepli at mikrotec.com  Tue Jan 12 09:07:17 2010
From: wdepli at mikrotec.com (Doug Epling)
Date: Tue Jan 12 09:07:27 2010
Subject: [mod_python] bye bye mod_python, hello... what?
In-Reply-To: <a595de7a1001120556s31282e40j5ef11cc0d452dc6d@mail.gmail.com>
References: <4B4C7A01.20205@elasticmind.net>
	<a595de7a1001120556s31282e40j5ef11cc0d452dc6d@mail.gmail.com>
Message-ID: <4B4C8215.3040407@mikrotec.com>

An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20100112/667e077d/attachment.html
From geert at nznl.com  Tue Jan 12 09:09:13 2010
From: geert at nznl.com (Geert Dekkers)
Date: Tue Jan 12 09:09:23 2010
Subject: [mod_python] bye bye mod_python, hello... what?
In-Reply-To: <a595de7a1001120556s31282e40j5ef11cc0d452dc6d@mail.gmail.com>
References: <4B4C7A01.20205@elasticmind.net>
	<a595de7a1001120556s31282e40j5ef11cc0d452dc6d@mail.gmail.com>
Message-ID: <C591E771-9454-4578-BB9F-018EC6CF147E@nznl.com>

How about mod_wsgi (http://code.google.com/p/modwsgi/) ???
Geert

On Jan 12, 2010, at 2:56 PM, Clodoaldo Neto wrote:

> 2010/1/12 mog <lists@elasticmind.net>:
>> So, the time has come. I need to start a new project and also migrate my old
>> mod_python stuff to something else :(
>> 
>> After all the sweat, blood and tears I put into learning about how Python
>> web apps work, learning how to use mod_python, and how to put web apps
>> together (using mod_python). It's really sad to think that a good portion of
>> that effort seems lost because, unfortunately, mod_python is deprecated :(
>> 
>> I looked at a few web frameworks but found they either simply didn't work,
>> exhibited weird random unpredictable behaviour that was impossible to work
>> with, or seemed to abstract so far away from real HTTP which made me feel
>> uncomfortable. I finally settled on mod_python because it seemed to be a
>> nice balance of powerful functionality and usefulness - oh, and it worked.
>> 
>> With mod_python I felt as though I was working closely with the HTTP
>> requests because I could use the request objects directly and, if I wanted
>> (and I did), stick stuff in them to use in sessions. mod_python seemed
>> pretty raw, but not so much so that I had to write my own request handlers
>> and all the nitty gritty things like that (which, being new to web
>> development, was and probably still is beyond my ability to do well and
>> securely). I liked it because it also provided lots of in-built utilities
>> making it really easy to do session handling, redirection and so on.
>> 
>> I'm trying to avoid using one of the mainstream frameworks because I feel
>> they overcomplicate things, bloat things up, and abstract too much away from
>> what is really going on. Many of them annoyingly also end up requiring a
>> bazillion dependencies to install. Personally I like to use small and
>> compact programs that are really good at doing the small number of things I
>> need them to, as opposed to installing some giant application (and all its
>> dependencies) that can do everything under the sun I'll never use.
>> 
>> With all this in mind. I was hoping someone would please be so kind as to
>> recommend things that I could use instead of mod_python as a WSGI layer, but
>> that hopefully works in a similar way to mod_python?
> 
> You could start trying Werkzeug which calls itself "a simple
> collection of various utilities for WSGI applications".
> 
> http://werkzeug.pocoo.org/
> 
> Then WebOb:
> 
> http://pythonpaste.org/webob/
> 
> Regarding small and simple I think the two above are some of the best
> approaches but don't expect something like the mod_python's publisher
> handler.
> 
> Regards, Clodoaldo
> 
>> 
>> Thank you in advance for your time and consideration.
>> 
>> Kind regards,
>> mog
>> _______________________________________________
>> Mod_python mailing list
>> Mod_python@modpython.org
>> http://mailman.modpython.org/mailman/listinfo/mod_python
>> 
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python


From lists at elasticmind.net  Tue Jan 12 14:00:56 2010
From: lists at elasticmind.net (mog)
Date: Tue Jan 12 14:01:22 2010
Subject: [mod_python] bye bye mod_python, hello... what?
In-Reply-To: <C591E771-9454-4578-BB9F-018EC6CF147E@nznl.com>
References: <4B4C7A01.20205@elasticmind.net>	<a595de7a1001120556s31282e40j5ef11cc0d452dc6d@mail.gmail.com>
	<C591E771-9454-4578-BB9F-018EC6CF147E@nznl.com>
Message-ID: <4B4CC6E8.5020907@elasticmind.net>

On 12/01/2010 14:09, Geert Dekkers wrote:
> How about mod_wsgi (http://code.google.com/p/modwsgi/) ???
> Geert
>
> On Jan 12, 2010, at 2:56 PM, Clodoaldo Neto wrote:
>
>    
>> 2010/1/12 mog<lists@elasticmind.net>:
>>      
>>> So, the time has come. I need to start a new project and also migrate my old
>>> mod_python stuff to something else :(
>>>
>>> After all the sweat, blood and tears I put into learning about how Python
>>> web apps work, learning how to use mod_python, and how to put web apps
>>> together (using mod_python). It's really sad to think that a good portion of
>>> that effort seems lost because, unfortunately, mod_python is deprecated :(
>>>
>>> I looked at a few web frameworks but found they either simply didn't work,
>>> exhibited weird random unpredictable behaviour that was impossible to work
>>> with, or seemed to abstract so far away from real HTTP which made me feel
>>> uncomfortable. I finally settled on mod_python because it seemed to be a
>>> nice balance of powerful functionality and usefulness - oh, and it worked.
>>>
>>> With mod_python I felt as though I was working closely with the HTTP
>>> requests because I could use the request objects directly and, if I wanted
>>> (and I did), stick stuff in them to use in sessions. mod_python seemed
>>> pretty raw, but not so much so that I had to write my own request handlers
>>> and all the nitty gritty things like that (which, being new to web
>>> development, was and probably still is beyond my ability to do well and
>>> securely). I liked it because it also provided lots of in-built utilities
>>> making it really easy to do session handling, redirection and so on.
>>>
>>> I'm trying to avoid using one of the mainstream frameworks because I feel
>>> they overcomplicate things, bloat things up, and abstract too much away from
>>> what is really going on. Many of them annoyingly also end up requiring a
>>> bazillion dependencies to install. Personally I like to use small and
>>> compact programs that are really good at doing the small number of things I
>>> need them to, as opposed to installing some giant application (and all its
>>> dependencies) that can do everything under the sun I'll never use.
>>>
>>> With all this in mind. I was hoping someone would please be so kind as to
>>> recommend things that I could use instead of mod_python as a WSGI layer, but
>>> that hopefully works in a similar way to mod_python?
>>>        
>> You could start trying Werkzeug which calls itself "a simple
>> collection of various utilities for WSGI applications".
>>
>> http://werkzeug.pocoo.org/
>>
>> Then WebOb:
>>
>> http://pythonpaste.org/webob/
>>
>> Regarding small and simple I think the two above are some of the best
>> approaches but don't expect something like the mod_python's publisher
>> handler.
>>
>> Regards, Clodoaldo
>>
>>      
>>> Thank you in advance for your time and consideration.
>>>
>>> Kind regards,
>>> mog


Sorry guys, I think it would have helped for me to be a bit more specific.

I am definitely going to be using mod_wsgi as the the Python/Apache 
interpreter; in fact, I installed and tested mod_wsgi last night on my 
server - it seems to work just fine.

What I wasn't sure about were the ways in which mod_wsgi is different to 
mod_python. For example, my app would make use of mod_python's session 
support and put a user_id into the request object so it was persistent 
(accessing the request info directly). It would also use internal 
redirects for pages that required authentication; so if a user needed to 
log in first, it would automatically show them a login screen and then 
take them to their requested page following a successful login.

I was under the impression that mod_wsgi did not provide similar 
functionality for these common things for me to use (like mod_python 
does). So I'd need to use some kind of utilities or "framework" to help 
me with this. I guess what I was really asking for advice on was: what I 
might be able to use to help me effectively migrate from mod_python to 
mod_wsgi... It seems as though Werkzeug might be promising.

Thanks to everyone who replied and offered advice/suggestions, it is 
greatly appreciated.

Kind regards,
mog
From lists at elasticmind.net  Tue Jan 12 16:24:24 2010
From: lists at elasticmind.net (mog)
Date: Tue Jan 12 16:24:42 2010
Subject: [mod_python] mod_wsgi (pid=88536): Unable to change working
	directory
Message-ID: <4B4CE888.7000002@elasticmind.net>

Hi,

I'm seeing this error in my main Apache log when I switched to using 
daemon mode:

[Tue Jan 12 21:13:47 2010] [alert] (2)No such file or directory: 
mod_wsgi (pid=88536): Unable to change working directory to '/nonexistent'.

Not sure why it would be happening though, why mod_wsgi would need to 
change directories, or what the "correct" solution is? If someone could 
please point me in the right direction, it would be greatly appreciated.

Thanks,
mog
From graham.dumpleton at gmail.com  Tue Jan 12 17:17:07 2010
From: graham.dumpleton at gmail.com (Graham Dumpleton)
Date: Tue Jan 12 17:17:17 2010
Subject: [mod_python] mod_wsgi (pid=88536): Unable to change working 
	directory
In-Reply-To: <4B4CE888.7000002@elasticmind.net>
References: <4B4CE888.7000002@elasticmind.net>
Message-ID: <88e286471001121417x1e1d5c7dwa45e2f782518a540@mail.gmail.com>

Wrong mailing list. Use:

  http://groups.google.com/group/modwsgi

and all will be explained there.

Also read:

  http://code.google.com/p/modwsgi/wiki/WhereToGetHelp

Graham

2010/1/13 mog <lists@elasticmind.net>:
> Hi,
>
> I'm seeing this error in my main Apache log when I switched to using daemon
> mode:
>
> [Tue Jan 12 21:13:47 2010] [alert] (2)No such file or directory: mod_wsgi
> (pid=88536): Unable to change working directory to '/nonexistent'.
>
> Not sure why it would be happening though, why mod_wsgi would need to change
> directories, or what the "correct" solution is? If someone could please
> point me in the right direction, it would be greatly appreciated.
>
> Thanks,
> mog
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>
From graham.dumpleton at gmail.com  Tue Jan 12 17:19:40 2010
From: graham.dumpleton at gmail.com (Graham Dumpleton)
Date: Tue Jan 12 17:19:50 2010
Subject: [SPAM] [mod_python] ImportError: No module named 
	mod_python.apache
In-Reply-To: <4B4C7CCF.7070405@elasticmind.net>
References: <4B4C40AF.20104@placr.co.uk> <4B4C62F5.4090206@elasticmind.net>
	<4B4C6623.8080303@placr.co.uk> <4B4C7CCF.7070405@elasticmind.net>
Message-ID: <88e286471001121419m1bc0550aj813cbee6329a0024@mail.gmail.com>

2010/1/13 mog <lists@elasticmind.net>:
> On 12/01/2010 12:08, Saeed Bhuta wrote:
>
> mog wrote:
>
> On 12/01/2010 09:28, Saeed Bhuta wrote:
>
> Hi All,
>
> I am trying to install mod_python for Apache 2.2 for use with Python 2.6. An
> internal server error is displayed when the python is script is accessed
> from the web and Apache's error log has the following:
>
> "[Tue Jan 12 08:16:56 2010] [error] make_obcallback: could not import
> mod_python.apache.\n
> ImportError: No module named mod_python.apache
> [Tue Jan 12 08:16:56 2010] [error] make_obcallback: Python path being used
> "['/usr/local/lib/python2.6', '/usr/local/lib/python2.6/plat-linux2',
> '/usr/local$
> [Tue Jan 12 08:16:56 2010] [error] get_interpreter: no interpreter callback
> found.
> [Tue Jan 12 08:16:56 2010] [error] [client 195.157.141.25] python_handler:
> Can't get/create interpreter., referer: http://placraa1.miniserver.com/py/"

The mod_python.so is using /usr/local/ installation of Python, but
that installation doesn't have the Python components of mod_python
installed. Read:

  http://www.dscpl.com.au/wiki/ModPython/Articles/GettingModPythonWorking

Graham

> I have installed Apache 2.2 on Ubuntu Karmic Koala 9.10
>
> Any help is greatly appreciated.
>
> Saeed
>
>
> Hi,
>
> What is this going to be used for? Is it for a new project you are making?
>
> mog
>
>
>
> Hi Mog,
>
> Not for a new project, I managed to have mod_python working on Apache on my
> laptop. But its not working on the VPS.
>
> Saeed.
>
>
> Hi Saeed,
>
> It's much better if you keep conversations on the mailing list, because that
> way everyone can join in and help.
>
> Have you made sure to load the mod_python module into Apache via the
> httpd.conf file?
>
> Also, since mod_python is deprecated and one day will likely stop working
> altogether. I would advise you look at migrating any mod_python projects to
> use WSGI or something similar to ensure they continue to be supported.
>
> mog
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>
>
From graham.dumpleton at gmail.com  Tue Jan 12 17:27:34 2010
From: graham.dumpleton at gmail.com (Graham Dumpleton)
Date: Tue Jan 12 17:27:42 2010
Subject: [mod_python] bye bye mod_python, hello... what?
In-Reply-To: <a595de7a1001120556s31282e40j5ef11cc0d452dc6d@mail.gmail.com>
References: <4B4C7A01.20205@elasticmind.net>
	<a595de7a1001120556s31282e40j5ef11cc0d452dc6d@mail.gmail.com>
Message-ID: <88e286471001121427j505462b1tdc87388a14147ffb@mail.gmail.com>

2010/1/13 Clodoaldo Neto <clodoaldo.pinto.neto@gmail.com>:
> 2010/1/12 mog <lists@elasticmind.net>:
>> So, the time has come. I need to start a new project and also migrate my old
>> mod_python stuff to something else :(
>>
>> After all the sweat, blood and tears I put into learning about how Python
>> web apps work, learning how to use mod_python, and how to put web apps
>> together (using mod_python). It's really sad to think that a good portion of
>> that effort seems lost because, unfortunately, mod_python is deprecated :(
>>
>> I looked at a few web frameworks but found they either simply didn't work,
>> exhibited weird random unpredictable behaviour that was impossible to work
>> with, or seemed to abstract so far away from real HTTP which made me feel
>> uncomfortable. I finally settled on mod_python because it seemed to be a
>> nice balance of powerful functionality and usefulness - oh, and it worked.
>>
>> With mod_python I felt as though I was working closely with the HTTP
>> requests because I could use the request objects directly and, if I wanted
>> (and I did), stick stuff in them to use in sessions. mod_python seemed
>> pretty raw, but not so much so that I had to write my own request handlers
>> and all the nitty gritty things like that (which, being new to web
>> development, was and probably still is beyond my ability to do well and
>> securely). I liked it because it also provided lots of in-built utilities
>> making it really easy to do session handling, redirection and so on.
>>
>> I'm trying to avoid using one of the mainstream frameworks because I feel
>> they overcomplicate things, bloat things up, and abstract too much away from
>> what is really going on. Many of them annoyingly also end up requiring a
>> bazillion dependencies to install. Personally I like to use small and
>> compact programs that are really good at doing the small number of things I
>> need them to, as opposed to installing some giant application (and all its
>> dependencies) that can do everything under the sun I'll never use.
>>
>> With all this in mind. I was hoping someone would please be so kind as to
>> recommend things that I could use instead of mod_python as a WSGI layer, but
>> that hopefully works in a similar way to mod_python?
>
> You could start trying Werkzeug which calls itself "a simple
> collection of various utilities for WSGI applications".
>
> http://werkzeug.pocoo.org/
>
> Then WebOb:
>
> http://pythonpaste.org/webob/
>
> Regarding small and simple I think the two above are some of the best
> approaches but don't expect something like the mod_python's publisher
> handler.

I'd second Werkzeug, but also add 'bobo' which uses Paste but gives
some simple to use URL dispatch mechanisms.

Neither have inbuilt session support however, so for that you would
need to use Beaker.

Graham
From diazona at gmail.com  Tue Jan 12 17:41:24 2010
From: diazona at gmail.com (David Zaslavsky)
Date: Tue Jan 12 17:41:36 2010
Subject: [mod_python] bye bye mod_python, hello... what?
In-Reply-To: <88e286471001121427j505462b1tdc87388a14147ffb@mail.gmail.com>
References: <4B4C7A01.20205@elasticmind.net>
	<a595de7a1001120556s31282e40j5ef11cc0d452dc6d@mail.gmail.com>
	<88e286471001121427j505462b1tdc87388a14147ffb@mail.gmail.com>
Message-ID: <201001121741.31076.diazona@gmail.com>

Werkzeug actually does have session management, in the 
werkzeug.contrib.sessions package.  I've only used it a little but it seems 
about as capable as what there was in mod_python.

:) David

On Tuesday 12 January 2010 5:27:34 pm Graham Dumpleton wrote:
> I'd second Werkzeug, but also add 'bobo' which uses Paste but gives
> some simple to use URL dispatch mechanisms.
> 
> Neither have inbuilt session support however, so for that you would
> need to use Beaker.
> 
> Graham
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
> 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 198 bytes
Desc: This is a digitally signed message part.
Url : http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20100112/195fb849/attachment.bin
From lists at elasticmind.net  Tue Jan 12 17:44:18 2010
From: lists at elasticmind.net (mog)
Date: Tue Jan 12 17:44:26 2010
Subject: [mod_python] mod_wsgi (pid=88536): Unable to change working
	directory
In-Reply-To: <4B4CE888.7000002@elasticmind.net>
References: <4B4CE888.7000002@elasticmind.net>
Message-ID: <4B4CFB42.1040208@elasticmind.net>

On 12/01/2010 21:24, mog wrote:
> Hi,
>
> I'm seeing this error in my main Apache log when I switched to using 
> daemon mode:
>
> [Tue Jan 12 21:13:47 2010] [alert] (2)No such file or directory: 
> mod_wsgi (pid=88536): Unable to change working directory to 
> '/nonexistent'.
>
> Not sure why it would be happening though, why mod_wsgi would need to 
> change directories, or what the "correct" solution is? If someone 
> could please point me in the right direction, it would be greatly 
> appreciated.
>
> Thanks,
> mog
>

I read that mod_wsgi's daemon mode is the way forward, so let's "make it 
so". It doesn't seem to want to play nicely though.

The 'unable to change working directory' problems sort of go away if I 
specify 'WSGIDaemonProcess home=/root', but that just doesn't feel right 
to me. Is there something more appropriate I should be using for that?

My Apache vhost config is pretty normal with these WSGI specifics in:

     WSGIDaemonProcess meow.elasticmind.net processes=1 threads=5 
home=/root display-name=%{GROUP}
     WSGIProcessGroup meow.elasticmind.net
     WSGIApplicationGroup %{GLOBAL}
     WSGIScriptAlias / /home/test/trunk/test/test.wsgi

These are all present inside the VirtualHost directive but not contained 
within any Directory directives etc.

Unfortunately though, it doesn't seem happy with these things. The only 
error messages I'm seeing are these:

     [error] Script timed out before returning headers: test.wsgi

The content of test.wsgi is:

def application(environ, start_response):
     status = '200 OK'
     output = 'Hello World!'
     response_headers = [('Content-type', 'text/plain'),
                         ('Content-Length', str(len(output)))]
     start_response(status, response_headers)
     return [output]

So without the DaemonProcess process stuff, this works absolutely fine. 
With the daemon mode process stuff, it breaks :(

Thanks in advanced,
mog
From graham.dumpleton at gmail.com  Tue Jan 12 17:47:55 2010
From: graham.dumpleton at gmail.com (Graham Dumpleton)
Date: Tue Jan 12 17:48:04 2010
Subject: [mod_python] bye bye mod_python, hello... what?
In-Reply-To: <201001121741.31076.diazona@gmail.com>
References: <4B4C7A01.20205@elasticmind.net>
	<a595de7a1001120556s31282e40j5ef11cc0d452dc6d@mail.gmail.com>
	<88e286471001121427j505462b1tdc87388a14147ffb@mail.gmail.com>
	<201001121741.31076.diazona@gmail.com>
Message-ID: <88e286471001121447u1e736a2dwcc3536e7b45918b7@mail.gmail.com>

2010/1/13 David Zaslavsky <diazona@gmail.com>:
> Werkzeug actually does have session management, in the
> werkzeug.contrib.sessions package. ?I've only used it a little but it seems
> about as capable as what there was in mod_python.

Okay, added since last time I had a good look then. :-)

Graham

> :) David
>
> On Tuesday 12 January 2010 5:27:34 pm Graham Dumpleton wrote:
>> I'd second Werkzeug, but also add 'bobo' which uses Paste but gives
>> some simple to use URL dispatch mechanisms.
>>
>> Neither have inbuilt session support however, so for that you would
>> need to use Beaker.
>>
>> Graham
>> _______________________________________________
>> Mod_python mailing list
>> Mod_python@modpython.org
>> http://mailman.modpython.org/mailman/listinfo/mod_python
>>
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>
>

From graham.dumpleton at gmail.com  Tue Jan 12 17:55:08 2010
From: graham.dumpleton at gmail.com (Graham Dumpleton)
Date: Tue Jan 12 17:55:20 2010
Subject: [mod_python] mod_wsgi (pid=88536): Unable to change working 
	directory
In-Reply-To: <4B4CFB42.1040208@elasticmind.net>
References: <4B4CE888.7000002@elasticmind.net>
	<4B4CFB42.1040208@elasticmind.net>
Message-ID: <88e286471001121455g7b2f3d44r1b7cd8ffa5a547ee@mail.gmail.com>

2010/1/13 mog <lists@elasticmind.net>:
> On 12/01/2010 21:24, mog wrote:
>>
>> Hi,
>>
>> I'm seeing this error in my main Apache log when I switched to using
>> daemon mode:
>>
>> [Tue Jan 12 21:13:47 2010] [alert] (2)No such file or directory: mod_wsgi
>> (pid=88536): Unable to change working directory to '/nonexistent'.
>>
>> Not sure why it would be happening though, why mod_wsgi would need to
>> change directories, or what the "correct" solution is? If someone could
>> please point me in the right direction, it would be greatly appreciated.
>>
>> Thanks,
>> mog
>>
>
> I read that mod_wsgi's daemon mode is the way forward, so let's "make it
> so". It doesn't seem to want to play nicely though.
>
> The 'unable to change working directory' problems sort of go away if I
> specify 'WSGIDaemonProcess home=/root', but that just doesn't feel right to
> me. Is there something more appropriate I should be using for that?

By rights it perhaps shouldn't be an alert but a warning. You can ignore it.

It occurs because in daemon mode mod_wsgi will change working
directory to the home directory of the user that the daemon process
runs as. On your system, the default Apache user doesn't have a home
directory and so the message. It will not stop anything from working.

If you really want to get rid of it, then override home as you have
done, setting it to '/tmp' even. Alternatively, create a dedicated
user, or use another existing user account that does have a home
directory, specifying the user/group options to WSGIDaemonProcess so
that the daemon process runs as that user and not the default Apache
user.

> My Apache vhost config is pretty normal with these WSGI specifics in:
>
> ? ?WSGIDaemonProcess meow.elasticmind.net processes=1 threads=5 home=/root
> display-name=%{GROUP}
> ? ?WSGIProcessGroup meow.elasticmind.net
> ? ?WSGIApplicationGroup %{GLOBAL}
> ? ?WSGIScriptAlias / /home/test/trunk/test/test.wsgi
>
> These are all present inside the VirtualHost directive but not contained
> within any Directory directives etc.
>
> Unfortunately though, it doesn't seem happy with these things. The only
> error messages I'm seeing are these:
>
> ? ?[error] Script timed out before returning headers: test.wsgi
>
> The content of test.wsgi is:
>
> def application(environ, start_response):
> ? ?status = '200 OK'
> ? ?output = 'Hello World!'
> ? ?response_headers = [('Content-type', 'text/plain'),
> ? ? ? ? ? ? ? ? ? ? ? ?('Content-Length', str(len(output)))]
> ? ?start_response(status, response_headers)
> ? ?return [output]
>
> So without the DaemonProcess process stuff, this works absolutely fine. With
> the daemon mode process stuff, it breaks :(

Are you still loading mod_python into same Apache?

You likely have a conflicting version of mod_python loaded which is
causing problems. Disable mod_python and try again.

Please use mod_wsgi list in future as I already pointed out.

Graham

From lists at elasticmind.net  Tue Jan 12 18:11:32 2010
From: lists at elasticmind.net (mog)
Date: Tue Jan 12 18:11:49 2010
Subject: [mod_python] mod_wsgi (pid=88536): Unable to change working 
	directory
In-Reply-To: <88e286471001121455g7b2f3d44r1b7cd8ffa5a547ee@mail.gmail.com>
References: <4B4CE888.7000002@elasticmind.net>	
	<4B4CFB42.1040208@elasticmind.net>
	<88e286471001121455g7b2f3d44r1b7cd8ffa5a547ee@mail.gmail.com>
Message-ID: <4B4D01A4.8050702@elasticmind.net>

On 12/01/2010 22:55, Graham Dumpleton wrote:
> By rights it perhaps shouldn't be an alert but a warning. You can 
> ignore it.
> It occurs because in daemon mode mod_wsgi will change working
> directory to the home directory of the user that the daemon process
> runs as. On your system, the default Apache user doesn't have a home
> directory and so the message. It will not stop anything from working.
>
> If you really want to get rid of it, then override home as you have
> done, setting it to '/tmp' even. Alternatively, create a dedicated
> user, or use another existing user account that does have a home
> directory, specifying the user/group options to WSGIDaemonProcess so
> that the daemon process runs as that user and not the default Apache
> user.
>    

Ahh right, that totally makes sense. Thanks.


> Are you still loading mod_python into same Apache?
> You likely have a conflicting version of mod_python loaded which is
> causing problems. Disable mod_python and try again.
>    

I removed the mod_python port and installed mod_wsgi-3.1 last night. 
There really shouldn't be any remnants of mod_python lurking around; but 
even if there are, I removed the mod_python LoadModule directive from 
httpd.conf and have stopped and restarted Apache numerous times - so it 
really should be gone.


> Please use mod_wsgi list in future as I already pointed out.
>    

Oooops sorry, I don't remember any mention of that but I really should 
have thought to switch myself. I'll get myself subscribed to the 
mod_wsgi list pronto.

Thanks again everyone!
From graham.dumpleton at gmail.com  Tue Jan 12 18:21:43 2010
From: graham.dumpleton at gmail.com (Graham Dumpleton)
Date: Tue Jan 12 18:21:53 2010
Subject: [mod_python] mod_wsgi (pid=88536): Unable to change working 
	directory
In-Reply-To: <4B4D01A4.8050702@elasticmind.net>
References: <4B4CE888.7000002@elasticmind.net>
	<4B4CFB42.1040208@elasticmind.net>
	<88e286471001121455g7b2f3d44r1b7cd8ffa5a547ee@mail.gmail.com>
	<4B4D01A4.8050702@elasticmind.net>
Message-ID: <88e286471001121521t25dfcf37nf6ea377706952656@mail.gmail.com>

2010/1/13 mog <lists@elasticmind.net>:
> On 12/01/2010 22:55, Graham Dumpleton wrote:
>>
>> By rights it perhaps shouldn't be an alert but a warning. You can ignore
>> it.
>> It occurs because in daemon mode mod_wsgi will change working
>> directory to the home directory of the user that the daemon process
>> runs as. On your system, the default Apache user doesn't have a home
>> directory and so the message. It will not stop anything from working.
>>
>> If you really want to get rid of it, then override home as you have
>> done, setting it to '/tmp' even. Alternatively, create a dedicated
>> user, or use another existing user account that does have a home
>> directory, specifying the user/group options to WSGIDaemonProcess so
>> that the daemon process runs as that user and not the default Apache
>> user.
>>
>
> Ahh right, that totally makes sense. Thanks.
>
>
>> Are you still loading mod_python into same Apache?
>> You likely have a conflicting version of mod_python loaded which is
>> causing problems. Disable mod_python and try again.
>>
>
> I removed the mod_python port and installed mod_wsgi-3.1 last night. There
> really shouldn't be any remnants of mod_python lurking around; but even if
> there are, I removed the mod_python LoadModule directive from httpd.conf and
> have stopped and restarted Apache numerous times - so it really should be
> gone.

Just the LoadModule line for mod_python is enough to cause the
problem. This is because it is still loaded even if not used.

Also make sure you did a complete 'stop' of Apache and not just a
Linux init reload, as sometimes mod_python doesn't unload properly the
Python library.

If still a problem, you perhaps have SELinux extensions enabled and it
should be disabled or properly configured.

Graham

>> Please use mod_wsgi list in future as I already pointed out.
>>
>
> Oooops sorry, I don't remember any mention of that but I really should have
> thought to switch myself. I'll get myself subscribed to the mod_wsgi list
> pronto.
>
> Thanks again everyone!
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>
From alertmaster at yahoo.com  Sat Jan 16 17:07:27 2010
From: alertmaster at yahoo.com (Samuel Hazelett)
Date: Sat Jan 16 17:07:35 2010
Subject: [mod_python] bye bye mod_python, hello... what?
In-Reply-To: <88e286471001121427j505462b1tdc87388a14147ffb@mail.gmail.com>
References: <4B4C7A01.20205@elasticmind.net>
	<a595de7a1001120556s31282e40j5ef11cc0d452dc6d@mail.gmail.com>
	<88e286471001121427j505462b1tdc87388a14147ffb@mail.gmail.com>
Message-ID: <65853.73715.qm@web57202.mail.re3.yahoo.com>

"unfortunately, mod_python is deprecated"

What does this mean: deprecated
Why?
Does it mean there will be no future releases of mod_python?  The "end of history!"
I was just getting started.  Woe is me/us.


________________________________
From: Graham Dumpleton <graham.dumpleton@gmail.com>
To: clodoaldo.pinto.neto@gmail.com
Cc: mod_python@modpython.org
Sent: Tue, January 12, 2010 5:27:34 PM
Subject: Re: [mod_python] bye bye mod_python, hello... what?

2010/1/13 Clodoaldo Neto <clodoaldo.pinto.neto@gmail.com>:
> 2010/1/12 mog <lists@elasticmind.net>:
>> So, the time has come. I need to start a new project and also migrate my old
>> mod_python stuff to something else :(
>>
>> After all the sweat, blood and tears I put into learning about how Python
>> web apps work, learning how to use mod_python, and how to put web apps
>> together (using mod_python). It's really sad to think that a good portion of
>> that effort seems lost because, unfortunately, mod_python is deprecated :(
>>
>> I looked at a few web frameworks but found they either simply didn't work,
>> exhibited weird random unpredictable behaviour that was impossible to work
>> with, or seemed to abstract so far away from real HTTP which made me feel
>> uncomfortable. I finally settled on mod_python because it seemed to be a
>> nice balance of powerful functionality and usefulness - oh, and it worked.
>>
>> With mod_python I felt as though I was working closely with the HTTP
>> requests because I could use the request objects directly and, if I wanted
>> (and I did), stick stuff in them to use in sessions. mod_python seemed
>> pretty raw, but not so much so that I had to write my own request handlers
>> and all the nitty gritty things like that (which, being new to web
>> development, was and probably still is beyond my ability to do well and
>> securely). I liked it because it also provided lots of in-built utilities
>> making it really easy to do session handling, redirection and so on.
>>
>> I'm trying to avoid using one of the mainstream frameworks because I feel
>> they overcomplicate things, bloat things up, and abstract too much away from
>> what is really going on. Many of them annoyingly also end up requiring a
>> bazillion dependencies to install. Personally I like to use small and
>> compact programs that are really good at doing the small number of things I
>> need them to, as opposed to installing some giant application (and all its
>> dependencies) that can do everything under the sun I'll never use.
>>
>> With all this in mind. I was hoping someone would please be so kind as to
>> recommend things that I could use instead of mod_python as a WSGI layer, but
>> that hopefully works in a similar way to mod_python?
>
> You could start trying Werkzeug which calls itself "a simple
> collection of various utilities for WSGI applications".
>
> http://werkzeug.pocoo.org/
>
> Then WebOb:
>
> http://pythonpaste.org/webob/
>
> Regarding small and simple I think the two above are some of the best
> approaches but don't expect something like the mod_python's publisher
> handler.

I'd second Werkzeug, but also add 'bobo' which uses Paste but gives
some simple to use URL dispatch mechanisms.

Neither have inbuilt session support however, so for that you would
need to use Beaker.

Graham
_______________________________________________
Mod_python mailing list
Mod_python@modpython.org
http://mailman.modpython.org/mailman/listinfo/mod_python



      
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20100116/50310c6a/attachment.html
From konference at brabenec.net  Sat Jan 16 17:20:31 2010
From: konference at brabenec.net (Tomas Brabenec)
Date: Sat Jan 16 17:20:36 2010
Subject: [mod_python] bye bye mod_python, hello... what?
In-Reply-To: <4B4C7A01.20205@elasticmind.net>
References: <4B4C7A01.20205@elasticmind.net>
Message-ID: <4B523BAF.50608@brabenec.net>

Hello,

I migrate from mod_python to CherryPy + Apache with mod_wsgi.

I had very very small "framework" runing under mod_python. Now I rewrite 
this "framework" for using with CherryPy with minimal effort (only 4 
days).  In applicationsusing my "framework" i must make only few revisions.

Good luck,

Tomas


mog napsal(a):
> So, the time has come. I need to start a new project and also migrate 
> my old mod_python stuff to something else :(
>
> After all the sweat, blood and tears I put into learning about how 
> Python web apps work, learning how to use mod_python, and how to put 
> web apps together (using mod_python). It's really sad to think that a 
> good portion of that effort seems lost because, unfortunately, 
> mod_python is deprecated :(
>
> I looked at a few web frameworks but found they either simply didn't 
> work, exhibited weird random unpredictable behaviour that was 
> impossible to work with, or seemed to abstract so far away from real 
> HTTP which made me feel uncomfortable. I finally settled on mod_python 
> because it seemed to be a nice balance of powerful functionality and 
> usefulness - oh, and it worked.
>
> With mod_python I felt as though I was working closely with the HTTP 
> requests because I could use the request objects directly and, if I 
> wanted (and I did), stick stuff in them to use in sessions. mod_python 
> seemed pretty raw, but not so much so that I had to write my own 
> request handlers and all the nitty gritty things like that (which, 
> being new to web development, was and probably still is beyond my 
> ability to do well and securely). I liked it because it also provided 
> lots of in-built utilities making it really easy to do session 
> handling, redirection and so on.
>
> I'm trying to avoid using one of the mainstream frameworks because I 
> feel they overcomplicate things, bloat things up, and abstract too 
> much away from what is really going on. Many of them annoyingly also 
> end up requiring a bazillion dependencies to install. Personally I 
> like to use small and compact programs that are really good at doing 
> the small number of things I need them to, as opposed to installing 
> some giant application (and all its dependencies) that can do 
> everything under the sun I'll never use.
>
> With all this in mind. I was hoping someone would please be so kind as 
> to recommend things that I could use instead of mod_python as a WSGI 
> layer, but that hopefully works in a similar way to mod_python?
>
> Thank you in advance for your time and consideration.
>
> Kind regards,
> mog
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python

From graham.dumpleton at gmail.com  Sat Jan 16 17:33:59 2010
From: graham.dumpleton at gmail.com (Graham Dumpleton)
Date: Sat Jan 16 17:34:08 2010
Subject: [mod_python] bye bye mod_python, hello... what?
In-Reply-To: <65853.73715.qm@web57202.mail.re3.yahoo.com>
References: <4B4C7A01.20205@elasticmind.net>
	<a595de7a1001120556s31282e40j5ef11cc0d452dc6d@mail.gmail.com>
	<88e286471001121427j505462b1tdc87388a14147ffb@mail.gmail.com>
	<65853.73715.qm@web57202.mail.re3.yahoo.com>
Message-ID: <88e286471001161433x2f4d903ar11a64a3e26af2997@mail.gmail.com>

2010/1/17 Samuel Hazelett <alertmaster@yahoo.com>:
> "unfortunately, mod_python is deprecated"
>
> What does this mean: deprecated
> Why?
> Does it mean there will be no future releases of mod_python?? The "end of
> history!"
> I was just getting started.? Woe is me/us.

There has been no official statement about future of mod_python.

There is however no one actively developing it or maintaining it and
so the consensus of many is that it is a dead end. Some would say it
has been deprecated in favour of mod_wsgi, but that technically is not
true.

As is, mod_python source code tar ball releases will not compile on
latest Apache 2.2.X versions without a minor patch.

The source code also will not compile on Apache 2.3 (unstable branch
for Apache 2.4), without more substantial changes due to Apache API
changes.

Porting mod_python to Python 3.0 will be very hard and any
applications on top would also need to see substantial changes due to
the necessary changes in the API of mod_python. It is possible that
some aspects of mod_python.publisher will not be able to work the same
at all on Python 3.0 because of the removal in Python 3.0 of some
features of the language/libraries.

As such, if all you need is a way of hosting a WSGI capable Python web
application on Apache, you are better off using standard WSGI hosting
mechanisms as provided by mod_wsgi of fastcgi/flup.

If starting on a new project, you may be better off looking at some of
the WSGI frameworks. For low level stuff see Werkzeug, Paste and bobo.
For more high level, see Django, TurboGears, Pylons and Web2Py.

Graham

From wdepli at mikrotec.com  Sun Jan 17 09:28:32 2010
From: wdepli at mikrotec.com (Doug Epling)
Date: Sun Jan 17 09:28:42 2010
Subject: [mod_python] bye bye mod_python, hello... what?
In-Reply-To: <65853.73715.qm@web57202.mail.re3.yahoo.com>
References: <4B4C7A01.20205@elasticmind.net>	<a595de7a1001120556s31282e40j5ef11cc0d452dc6d@mail.gmail.com>	<88e286471001121427j505462b1tdc87388a14147ffb@mail.gmail.com>
	<65853.73715.qm@web57202.mail.re3.yahoo.com>
Message-ID: <4B531E90.3070102@mikrotec.com>

An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20100117/e9b4cec8/attachment.html
From alertmaster at yahoo.com  Sun Jan 17 11:20:42 2010
From: alertmaster at yahoo.com (Samuel Hazelett)
Date: Sun Jan 17 11:20:49 2010
Subject: [mod_python] bye bye mod_python, hello... what?
In-Reply-To: <4B531E90.3070102@mikrotec.com>
References: <4B4C7A01.20205@elasticmind.net>
	<a595de7a1001120556s31282e40j5ef11cc0d452dc6d@mail.gmail.com>
	<88e286471001121427j505462b1tdc87388a14147ffb@mail.gmail.com>
	<65853.73715.qm@web57202.mail.re3.yahoo.com>
	<4B531E90.3070102@mikrotec.com>
Message-ID: <264983.79123.qm@web57201.mail.re3.yahoo.com>

I am little disappointed in the Apache Software Foundation for having taken mod_python under its umbrella only to allow it to wither.
If mod_python is moribund, what will happen to Mod_python@modpython.org?  What's to say the new-fangled API won't suffer a similar fate?

If, as you say Doug, WSGI API bridge is a better idea, then I shouldn't become/remain a Luddite and I "should get with the program".

I had brought mod_python into my workplace because of a, perhaps outdated, recommedation that it should be coupled with Django.
With respect to the workplace, I work in a secured lab that makes it a small nuisance to bring anything new within its perimeter.
For this reason, I do most of my learning/experimenting with non-sensitive test data on my home desktop.

Maybe I should drop the Django idea, too. I haven't invested much time in it, nor bought the book.
I see mention of such related s/w as werkzeug, CherryPy, and pythonpaste.
I'm barely a Python programmer, hand-jamming database connections and HTML reports.
What's a newbie to do?




________________________________
From: Doug Epling <wdepli@mikrotec.com>
To: Samuel Hazelett <alertmaster@yahoo.com>
Cc: Mod_python@modpython.org
Sent: Sun, January 17, 2010 9:28:32 AM
Subject: Re: [mod_python] bye bye mod_python, hello... what?

 Samuel Hazelett wrote: 
> 
>"unfortunately,
>mod_python is deprecated"
>
>>What does this mean: deprecated
>>Why?
>>Does it mean there will be no future releases of mod_python?  The "end
>of history!"
>>I was just getting started.  Woe is me/us.
>
Yeah, I am the same way, especially, having worked with php some, with
losing the concept of psp as well as the publisher handler.

But from what I can tell the WSGI API bridge is a much better idea. 
mod_wsgi is designed to be to python what rails is to ruby.

Except python is a standards based technology!;-) 


________________________________
From: >Graham Dumpleton <graham.dumpleton@gmail.com>
>To: clodoaldo.pinto.neto@gmail.com
>Cc: mod_python@modpython.org
>Sent: Tue, January 12,
>2010 5:27:34 PM
>Subject: Re:
>[mod_python] bye bye mod_python, hello... what?
>
>>2010/1/13 Clodoaldo Neto <clodoaldo.pinto.neto@gmail.com>:
>>> 2010/1/12 mog <lists@elasticmind.net>:
>>>> So, the time has come. I need to start a new project and also
>migrate my old
>>>> mod_python stuff to something else :(
>>>>
>>>> After all the sweat, blood and tears I put into learning about
>how Python
>>>> web apps work, learning how to use mod_python, and how to put
>web apps
>>>> together (using mod_python). It's really sad to think that a
>good portion of
>>>> that effort seems lost because, unfortunately, mod_python is
>deprecated :(
>>>>
>>>> I looked at a few web frameworks but found they either simply
>didn't work,
>>>> exhibited weird random unpredictable behaviour that was
>impossible to work
>>>> with, or seemed to abstract so far away from real HTTP which
>made me feel
>>>> uncomfortable. I finally settled on mod_python because it
>seemed to be a
>>>> nice balance of powerful functionality and usefulness - oh,
>and it worked.
>>>>
>>>> With mod_python I felt as though I was working closely with
>the HTTP
>>>> requests because I could use the request objects directly and,
>if I wanted
>>>> (and I did), stick stuff in them to use in sessions.
>mod_python seemed
>>>> pretty raw, but not so much so that I had to write my own
>request handlers
>>>> and all the nitty gritty things like that (which, being new to
>web
>>>> development, was and probably still is beyond my ability to do
>well and
>>>> securely). I liked it because it also provided lots of
>in-built utilities
>>>> making it really easy to do session handling, redirection and
>so on.
>>>>
>>>> I'm trying to avoid using one of the mainstream frameworks
>because I feel
>>>> they overcomplicate things, bloat things up, and abstract too
>much away from
>>>> what is really going on. Many of them annoyingly also end up
>requiring a
>>>> bazillion dependencies to install. Personally I like to use
>small and
>>>> compact programs that are really good at doing the small
>number of things I
>>>> need them to, as opposed to installing some giant application
>(and all its
>>>> dependencies) that can do everything under the sun I'll never
>use.
>>>>
>>>> With all this in mind. I was hoping someone would please be so
>kind as to
>>>> recommend things that I could use instead of mod_python as a
>WSGI layer, but
>>>> that hopefully works in a similar way to mod_python?
>>>
>>> You could start trying Werkzeug which calls itself "a simple
>>> collection of various utilities for WSGI applications".
>>>
>> http://werkzeug.pocoo.org/
>>>
>>> Then WebOb:
>>>
>> http://pythonpaste.org/webob/
>>>
>>> Regarding small and simple I think the two above are some of the
>best
>>> approaches but don't expect something like the mod_python's
>publisher
>>> handler.
>
>>I'd second Werkzeug, but also add 'bobo' which uses Paste but gives
>>some simple to use URL dispatch mechanisms.
>
>>Neither have inbuilt session support however, so for that you would
>>need to use Beaker.
>
>>Graham
>>_______________________________________________
>>Mod_python mailing list
>Mod_python@modpython.org
>http://mailman.modpython.org/mailman/listinfo/mod_python
>
>
>
________________________________

>_______________________________________________
>Mod_python mailing list
>Mod_python@modpython.org http://mailman.modpython.org/mailman/listinfo/mod_python 



      
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20100117/fa0f12f7/attachment-0001.html
From graham.dumpleton at gmail.com  Sun Jan 17 16:46:27 2010
From: graham.dumpleton at gmail.com (Graham Dumpleton)
Date: Sun Jan 17 16:46:37 2010
Subject: [mod_python] bye bye mod_python, hello... what?
In-Reply-To: <264983.79123.qm@web57201.mail.re3.yahoo.com>
References: <4B4C7A01.20205@elasticmind.net>
	<a595de7a1001120556s31282e40j5ef11cc0d452dc6d@mail.gmail.com>
	<88e286471001121427j505462b1tdc87388a14147ffb@mail.gmail.com>
	<65853.73715.qm@web57202.mail.re3.yahoo.com>
	<4B531E90.3070102@mikrotec.com>
	<264983.79123.qm@web57201.mail.re3.yahoo.com>
Message-ID: <88e286471001171346m162b2758u6f93306edf6358a5@mail.gmail.com>

2010/1/18 Samuel Hazelett <alertmaster@yahoo.com>:
> I am little disappointed in the Apache Software Foundation for having taken
> mod_python under its umbrella only to allow it to wither.

The ASF is a volunteer organisation. You can't therefore blame the
ASF. The problem is that users of mod_python (such as yourself), can't
be bothered contributing to mod_python any more. If you, or anyone
else, is truly passionate about mod_python then all you need to do is
step up and volunteer to take over the project, albeit that any
handover may be problematic due to inactivity of majority of prior
developers. This though isn't insurmountable as that is where the ASF
project management committees would step in and likely assist in
delegating control over to new contributors.

At least in my role as member of the ASF, if I didn't care, I would
have removed myself from the mailing list over 2 years ago when I
stopped being interested in mod_python. Instead I still hang around
here and answer peoples questions.

> If mod_python is moribund, what will happen to Mod_python@modpython.org?

The modpython.org domain is not under the ownership of the ASF anyway,
nor is the content on the site. Both are owned by the original primary
author of mod_python and he is also missing in action. That they are
owned by him and not the ASF is part of the problem. That is, it was
always exceedingly difficult to get anything on that site updated. As
a result, certain things related to the site have decayed over time
and haven't been able to be fixed.

> What's to say the new-fangled API won't suffer a similar fate?

Because it is described by a Python PEP. These are as close as you get
to a standard in the Python world. See:

  http://www.python.org/dev/peps/pep-0333/

> If, as you say Doug, WSGI API bridge is a better idea, then I shouldn't
> become/remain a Luddite and I "should get with the program".

It certainly where the mindshare currently is.

> I had brought mod_python into my workplace because of a, perhaps outdated,
> recommedation that it should be coupled with Django.
> With respect to the workplace, I work in a secured lab that makes it a small
> nuisance to bring anything new within its perimeter.
> For this reason, I do most of my learning/experimenting with non-sensitive
> test data on my home desktop.
>
> Maybe I should drop the Django idea, too. I haven't invested much time in
> it, nor bought the book.

Django is not bound to mod_python. If you had read any books on Django
then maybe you would know this. The Django stack can quite happily run
on top of WSGI hosting mechanisms such as mod_wsgi.

> I see mention of such related s/w as werkzeug, CherryPy, and pythonpaste.
> I'm barely a Python programmer, hand-jamming database connections and HTML
> reports.
> What's a newbie to do?

Keep using Django since you have started with it already. Just read
the hosting documentation for Django and understand that it can run on
various hosting mechanisms.

Other Python web frameworks are WSGI specific, but Django isn't.

Graham

> ________________________________
> From: Doug Epling <wdepli@mikrotec.com>
> To: Samuel Hazelett <alertmaster@yahoo.com>
> Cc: Mod_python@modpython.org
> Sent: Sun, January 17, 2010 9:28:32 AM
> Subject: Re: [mod_python] bye bye mod_python, hello... what?
>
> Samuel Hazelett wrote:
>
> "unfortunately, mod_python is deprecated"
>
> What does this mean: deprecated
> Why?
> Does it mean there will be no future releases of mod_python?? The "end of
> history!"
> I was just getting started.? Woe is me/us.
>
> Yeah, I am the same way, especially, having worked with php some, with
> losing the concept of psp as well as the publisher handler.
>
> But from what I can tell the WSGI API bridge is a much better idea.
> mod_wsgi is designed to be to python what rails is to ruby.
>
> Except python is a standards based technology!;-)
>
> ________________________________
> From: Graham Dumpleton <graham.dumpleton@gmail.com>
> To: clodoaldo.pinto.neto@gmail.com
> Cc: mod_python@modpython.org
> Sent: Tue, January 12, 2010 5:27:34 PM
> Subject: Re: [mod_python] bye bye mod_python, hello... what?
>
> 2010/1/13 Clodoaldo Neto <clodoaldo.pinto.neto@gmail.com>:
>> 2010/1/12 mog <lists@elasticmind.net>:
>>> So, the time has come. I need to start a new project and also migrate my
>>> old
>>> mod_python stuff to something else :(
>>>
>>> After all the sweat, blood and tears I put into learning about how Python
>>> web apps work, learning how to use mod_python, and how to put web apps
>>> together (using mod_python). It's really sad to think that a good portion
>>> of
>>> that effort seems lost because, unfortunately, mod_python is deprecated
>>> :(
>>>
>>> I looked at a few web frameworks but found they either simply didn't
>>> work,
>>> exhibited weird random unpredictable behaviour that was impossible to
>>> work
>>> with, or seemed to abstract so far away from real HTTP which made me feel
>>> uncomfortable. I finally settled on mod_python because it seemed to be a
>>> nice balance of powerful functionality and usefulness - oh, and it
>>> worked.
>>>
>>> With mod_python I felt as though I was working closely with the HTTP
>>> requests because I could use the request objects directly and, if I
>>> wanted
>>> (and I did), stick stuff in them to use in sessions. mod_python seemed
>>> pretty raw, but not so much so that I had to write my own request
>>> handlers
>>> and all the nitty gritty things like that (which, being new to web
>>> development, was and probably still is beyond my ability to do well and
>>> securely). I liked it because it also provided lots of in-built utilities
>>> making it really easy to do session handling, redirection and so on.
>>>
>>> I'm trying to avoid using one of the mainstream frameworks because I feel
>>> they overcomplicate things, bloat things up, and abstract too much away
>>> from
>>> what is really going on. Many of them annoyingly also end up requiring a
>>> bazillion dependencies to install. Personally I like to use small and
>>> compact programs that are really good at doing the small number of things
>>> I
>>> need them to, as opposed to installing some giant application (and all
>>> its
>>> dependencies) that can do everything under the sun I'll never use.
>>>
>>> With all this in mind. I was hoping someone would please be so kind as to
>>> recommend things that I could use instead of mod_python as a WSGI layer,
>>> but
>>> that hopefully works in a similar way to mod_python?
>>
>> You could start trying Werkzeug which calls itself "a simple
>> collection of various utilities for WSGI applications".
>>
>> http://werkzeug.pocoo.org/
>>
>> Then WebOb:
>>
>> http://pythonpaste.org/webob/
>>
>> Regarding small and simple I think the two above are some of the best
>> approaches but don't expect something like the mod_python's publisher
>> handler.
>
> I'd second Werkzeug, but also add 'bobo' which uses Paste but gives
> some simple to use URL dispatch mechanisms.
>
> Neither have inbuilt session support however, so for that you would
> need to use Beaker.
>
> Graham
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>
> ________________________________
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>
>
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>
>

From yves.moisan at boreal-is.com  Wed Jan 20 11:55:52 2010
From: yves.moisan at boreal-is.com (Yves Moisan)
Date: Wed Jan 20 11:56:02 2010
Subject: [mod_python] Multiple Apaches on windows ?
Message-ID: <1264006552.4353.26.camel@yves-laptop>

Hi,

I am wondering if mod_python can be pointed to more than one Apache
instance on a windows machine.  Would re-running the mod_python install
simply replace the old Apache location or would it add what's needed in
the new Apache too and both could be used with mod_python ?

TIA,

Yves Moisan

From graham.dumpleton at gmail.com  Wed Jan 20 18:09:05 2010
From: graham.dumpleton at gmail.com (Graham Dumpleton)
Date: Wed Jan 20 18:09:14 2010
Subject: [mod_python] Multiple Apaches on windows ?
In-Reply-To: <1264006552.4353.26.camel@yves-laptop>
References: <1264006552.4353.26.camel@yves-laptop>
Message-ID: <88e286471001201509t5c20f5b3g8ee93e492e8c2a26@mail.gmail.com>

2010/1/21 Yves Moisan <yves.moisan@boreal-is.com>:
> Hi,
>
> I am wondering if mod_python can be pointed to more than one Apache
> instance on a windows machine. ?Would re-running the mod_python install
> simply replace the old Apache location or would it add what's needed in
> the new Apache too and both could be used with mod_python ?

That only part of mod_python that gets installed into the Apache
install tree is the mod_python module .so file. All you need to do is
copy that file into same location in other Apache installations and
add appropriate LoadModule and other directives to Apache
configuration so it is used and your application launched. No strict
need to reinstall the whole of mod_python as the rest is already
installed in your Python installation which mod_python under other
Apache's will still use. When copying the file, just make sure it has
same ownership/permissions as original to ensure that other Apache
instances can still access it.

Graham

From nashii at gmail.com  Wed Jan 20 21:08:10 2010
From: nashii at gmail.com (=?ISO-8859-1?Q?Rapha=EBl_B=2E?=)
Date: Wed Jan 20 21:08:19 2010
Subject: [mod_python] mod_python.Session freezes with apache 2
Message-ID: <478da2591001201808x5499f166q857bea963118bf93@mail.gmail.com>

Hello,

I'm attempting to create some web application with mod_python, but as soon
as I call one attribute/method that is linked to the session module, the
navigator is "freezing" (not exactly, in fact, it is searching the webpage,
and searching, and searching ...)

I'm working with mod_python.psp in apache, but I have tried with
mod_python.publisher too, and neither is working ...

psp: there is just that in the page:

<%
if not hasattr(req,'session'):
    req.session = Session.Session(req)

if req.session.is_new():
    req.write("Hello !")
%>


and publisher:

#!/usr/bin/python
# -*- coding: iso-8859-1 -*-

import sys
from mod_python import apache, util, Session

def index(req):
    req.content_type = "text/plain; charset=iso-8859-1"
    req.send_http_header()
    req.write("Hello world!\n")
    sess = Session.Session(req)
    return "Bye bye!"


Both are freezing.

I think my head will explode if it continue ><

Could you please help me ? Perhaps apache is misconfigured for mod_python ?
Could you give me some way to correct the problem ?

Thank you very much,
Rapha?l

PS: Excuse me for my english, i'm French.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20100121/635a99f8/attachment.html
From graham.dumpleton at gmail.com  Wed Jan 20 23:42:21 2010
From: graham.dumpleton at gmail.com (Graham Dumpleton)
Date: Wed Jan 20 23:42:29 2010
Subject: [mod_python] mod_python.Session freezes with apache 2
In-Reply-To: <478da2591001201808x5499f166q857bea963118bf93@mail.gmail.com>
References: <478da2591001201808x5499f166q857bea963118bf93@mail.gmail.com>
Message-ID: <88e286471001202042i7d2bc263tb9fff8db99ec2ab5@mail.gmail.com>

2010/1/21 Rapha?l B. <nashii@gmail.com>:
> Hello,
>
> I'm attempting to create some web application with mod_python, but as soon
> as I call one attribute/method that is linked to the session module, the
> navigator is "freezing" (not exactly, in fact, it is searching the webpage,
> and searching, and searching ...)
>
> I'm working with mod_python.psp in apache, but I have tried with
> mod_python.publisher too, and neither is working ...
>
> psp: there is just that in the page:
>
> <%
> if not hasattr(req,'session'):
> ??? req.session = Session.Session(req)

The session object is already created for you by PSP so these lines
should not be needed.

> if req.session.is_new():
> ??? req.write("Hello !")
> %>

You should though from memory only be accessing session object as
'session' and not 'req.session'. This is because PSP will look for the
fact that 'session' is used and use that as a basis of creating it for
you.

It is possible that the way you are doing this is deadlocking the
request on itself as you can't have one request create two session
objects.

Once it is deadlocked like that, even if you close the browser it says
deadlocked and so further requests will also be locked out.

Thus, fix the code, restart Apache to get rid of deadlock and start over.

> and publisher:
>
> #!/usr/bin/python

You don't need the above line.

> # -*- coding: iso-8859-1 -*-
>
> import sys
> from mod_python import apache, util, Session
>
> def index(req):
> ??? req.content_type = "text/plain; charset=iso-8859-1"
> ??? req.send_http_header()
> ??? req.write("Hello world!\n")
> ??? sess = Session.Session(req)

As a guideline, always save session as 'req.session'. Further, if
needing to create/access sessions in sub functions, always a good idea
to use the pattern:

  def function(req):
    if not hasattr(req, 'session'):
      req.session = Session.Session(req)

If you don't do this, you risk deadlocking on yourself again.

Graham

> ??? return "Bye bye!"
>
> Both are freezing.
>
> I think my head will explode if it continue ><
>
> Could you please help me ? Perhaps apache is misconfigured for mod_python ?
> Could you give me some way to correct the problem ?
>
> Thank you very much,
> Rapha?l
>
> PS: Excuse me for my english, i'm French.
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>
>

From nashii at gmail.com  Thu Jan 21 19:36:06 2010
From: nashii at gmail.com (=?ISO-8859-1?Q?Rapha=EBl_B=2E?=)
Date: Thu Jan 21 19:36:12 2010
Subject: [mod_python] mod_python.Session freezes with apache 2
In-Reply-To: <88e286471001202042i7d2bc263tb9fff8db99ec2ab5@mail.gmail.com>
References: <478da2591001201808x5499f166q857bea963118bf93@mail.gmail.com>
	<88e286471001202042i7d2bc263tb9fff8db99ec2ab5@mail.gmail.com>
Message-ID: <478da2591001211636r783db94bpcae64e7e7897fce@mail.gmail.com>

Hello,

Thank you for your help.
After restarting apache, the problem was still here, so I've closed firefox
(I was very angry :D) and later, restarted it ... and ... it worked ... !

Have a good day, and thank you very much for your 'tips' !
Rapha?l

Le 21 janvier 2010 05:42, Graham Dumpleton <graham.dumpleton@gmail.com> a
?crit :

> 2010/1/21 Rapha?l B. <nashii@gmail.com>:
> > Hello,
> >
> > I'm attempting to create some web application with mod_python, but as
> soon
> > as I call one attribute/method that is linked to the session module, the
> > navigator is "freezing" (not exactly, in fact, it is searching the
> webpage,
> > and searching, and searching ...)
> >
> > I'm working with mod_python.psp in apache, but I have tried with
> > mod_python.publisher too, and neither is working ...
> >
> > psp: there is just that in the page:
> >
> > <%
> > if not hasattr(req,'session'):
> >     req.session = Session.Session(req)
>
> The session object is already created for you by PSP so these lines
> should not be needed.
>
> > if req.session.is_new():
> >     req.write("Hello !")
> > %>
>
> You should though from memory only be accessing session object as
> 'session' and not 'req.session'. This is because PSP will look for the
> fact that 'session' is used and use that as a basis of creating it for
> you.
>
> It is possible that the way you are doing this is deadlocking the
> request on itself as you can't have one request create two session
> objects.
>
> Once it is deadlocked like that, even if you close the browser it says
> deadlocked and so further requests will also be locked out.
>
> Thus, fix the code, restart Apache to get rid of deadlock and start over.
>
> > and publisher:
> >
> > #!/usr/bin/python
>
> You don't need the above line.
>
> > # -*- coding: iso-8859-1 -*-
> >
> > import sys
> > from mod_python import apache, util, Session
> >
> > def index(req):
> >     req.content_type = "text/plain; charset=iso-8859-1"
> >     req.send_http_header()
> >     req.write("Hello world!\n")
> >     sess = Session.Session(req)
>
> As a guideline, always save session as 'req.session'. Further, if
> needing to create/access sessions in sub functions, always a good idea
> to use the pattern:
>
>  def function(req):
>     if not hasattr(req, 'session'):
>      req.session = Session.Session(req)
>
> If you don't do this, you risk deadlocking on yourself again.
>
> Graham
>
> >     return "Bye bye!"
> >
> > Both are freezing.
> >
> > I think my head will explode if it continue ><
> >
> > Could you please help me ? Perhaps apache is misconfigured for mod_python
> ?
> > Could you give me some way to correct the problem ?
> >
> > Thank you very much,
> > Rapha?l
> >
> > PS: Excuse me for my english, i'm French.
> >
> > _______________________________________________
> > Mod_python mailing list
> > Mod_python@modpython.org
> > http://mailman.modpython.org/mailman/listinfo/mod_python
> >
> >
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20100122/f646abfd/attachment.html
From barlow at sentex.net  Sat Jan 23 23:37:25 2010
From: barlow at sentex.net (Chris Barlow)
Date: Sat Jan 23 23:37:34 2010
Subject: [mod_python] Using NLTK with mod_python
Message-ID: <4B5BCE85.3040706@sentex.net>

An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20100123/a488f7cb/attachment.html
From dyamins at gmail.com  Sun Jan 24 00:47:41 2010
From: dyamins at gmail.com (Dan Yamins)
Date: Sun Jan 24 00:47:50 2010
Subject: [mod_python] Using NLTK with mod_python
In-Reply-To: <4B5BCE85.3040706@sentex.net>
References: <4B5BCE85.3040706@sentex.net>
Message-ID: <15e4667e1001232147j4ac75097xe1e98837a2a8ade@mail.gmail.com>

>
>
> File "C:\Python25\lib\os.py", line 433, in __getitem__
> return self.data[key.upper()]
>
> KeyError: 'APPDATA'
>
>
In general, The above error message means that a python dictionary (see
http://docs.python.org/tutorial/datastructures.html, section 5.5)  is being
asked for a key that it doesn't have.  This portion of the message:

.....
>
>   File "C:\Python25\Lib\site-packages\nltk\data.py", line 80, in <module>
>     os.path.join(os.environ['APPDATA'], 'nltk_data')]
>
>
tells us that the dictionary "os.environ" doesn't have the 'APPDATA' key.
The os.environ is the dictionary of environment variables in the shell that
launched process.  (See http://docs.python.org/library/os.html)  So, the
ultimate point is that an environment variable that needs to be defined for
nltk to work is not defined.

I can't tell you what "APPDATA' is supposed to refer to .. but probably it's
something that's suppose to be set by the user of NLTK to locate a file
resource needed for operation of the package.

Assuming you know what the value APPDATA should be ... you can use
os.environ to set the proper value before importing nltk, or you can set it
in the shell that launches the process ... (I'm not that familar with
Windows, so I can't give you precise details on how to set environment
variables there .. but you can google it easily.)

If you don't know what value APPDATA is supposed to be set at in the first
place, you should probably either look in NLTK documentation  or write to an
NLTK user group.


Hth,
Dan



> My code is:
> from mod_python import apache
> import sys
> import nltk
>
> def handler(req):
> 	req.content_type = 'text/plain'
> 	s= sys.version
> 	req.write(s)
> 	
> 	return apache.OK
>
>
> I'm sure I'm doing something dumb, but with one day's experience of Python
> - told you I was a noob - I haven't the foggiest. I've googled obvious
> terms, but with no luck.
>
> Any ideas?
> Thanks,
> Chris
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20100124/ab2eee78/attachment.html
From lingbao at swingvine.com  Mon Jan 25 06:02:47 2010
From: lingbao at swingvine.com (Ling Bao)
Date: Mon Jan 25 06:02:56 2010
Subject: [mod_python] any way to log tracebacks on a single line w/ mod
	python?
Message-ID: <4d9a24d51001250302m31f374abkc4c981e378614d9f@mail.gmail.com>

Mod Python seems to log tracebacks on multiple lines in the apache logs.
This can make it tough to setup simple monitoring alert emails w/ standard
tools like monit that alert developers when N distinct ERROR's or X distinct
WARNINGS occur w/in a set period of time. These tools can't tell if 5 lines
of apache errors are a single traceback of 5 distinct error entries.

Is there any way to configure mod python to log a single line per traceback?
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20100125/401c6f3b/attachment.html
From graham.dumpleton at gmail.com  Mon Jan 25 06:14:23 2010
From: graham.dumpleton at gmail.com (Graham Dumpleton)
Date: Mon Jan 25 06:14:32 2010
Subject: [mod_python] any way to log tracebacks on a single line w/ mod 
	python?
In-Reply-To: <4d9a24d51001250302m31f374abkc4c981e378614d9f@mail.gmail.com>
References: <4d9a24d51001250302m31f374abkc4c981e378614d9f@mail.gmail.com>
Message-ID: <88e286471001250314p2d214283s88e5fb5e2b62b5bd@mail.gmail.com>

2010/1/25 Ling Bao <lingbao@swingvine.com>:
> Mod Python seems to log tracebacks on multiple lines in the apache logs.
> This can make it tough to setup simple monitoring alert emails w/ standard
> tools like monit that alert developers when N distinct ERROR's or X distinct
> WARNINGS occur w/in a set period of time. These tools can't tell if 5 lines
> of apache errors are a single traceback of 5 distinct error entries.
>
> Is there any way to configure mod python to log a single line per traceback?

No. You would need to modify the code and maintain your own version of
mod_python.

Note you can run into potential problems with truncation of lines if
they exceed approximately 8000-8192 characters. At least when on
separate lines, risk of that occurring is less and from that pretty
well everyone here wouldn't even know such truncation does in fact
occur.

Graham
From durumdara at gmail.com  Mon Jan 25 08:08:40 2010
From: durumdara at gmail.com (Durumdara)
Date: Mon Jan 25 08:08:51 2010
Subject: [mod_python] Is Python 2.6 supported on Windows?
Message-ID: <9e384ef61001250508v5a2b6569wf24b0adf605f7a24@mail.gmail.com>

Hi!

Is Python 2.6 supported on Windows?
I need to port my system to PG8.4/Py2.6. But now I see that in this place
only 2.5 supported... :-(

http://xenia.sote.hu/ftp/mirrors/www.apache.org/httpd/modpython/win/3.3.1/

How to make 2.6's mod_python.dll?

Thanks for your help:
     dd
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20100125/68082454/attachment.html
From graham.dumpleton at gmail.com  Mon Jan 25 18:00:32 2010
From: graham.dumpleton at gmail.com (Graham Dumpleton)
Date: Mon Jan 25 18:00:41 2010
Subject: [mod_python] Is Python 2.6 supported on Windows?
In-Reply-To: <9e384ef61001250508v5a2b6569wf24b0adf605f7a24@mail.gmail.com>
References: <9e384ef61001250508v5a2b6569wf24b0adf605f7a24@mail.gmail.com>
Message-ID: <88e286471001251500k5eede369sb5d1842dacb9bf2f@mail.gmail.com>

2010/1/26 Durumdara <durumdara@gmail.com>:
> Hi!
>
> Is Python 2.6 supported on Windows?

No precompiled binaries are provided.

> I need to port my system to PG8.4/Py2.6. But now I see that in this place
> only 2.5 supported... :-(

If you aren't actually using mod_python specific features and only
need to host a WSGI application, see mod_wsgi instead which has Python
2.6 binaries.

> http://xenia.sote.hu/ftp/mirrors/www.apache.org/httpd/modpython/win/3.3.1/
>
> How to make 2.6's mod_python.dll?

Start out by reading:

  dist/build_installer.bat

in mod_python source code.

Also read old instructions at:

  http://www.modpython.org/pipermail/mod_python/2006-September/022092.html
  http://www.modpython.org/pipermail/mod_python/2007-May/023637.html

You will need however to use Visual Studio 2008 instead and make other
changes as appropriate dependent on tools being used.

Graham
From nashii at gmail.com  Fri Jan 29 20:07:25 2010
From: nashii at gmail.com (=?ISO-8859-1?Q?Rapha=EBl_B=2E?=)
Date: Fri Jan 29 20:12:39 2010
Subject: [mod_python] Method POST
Message-ID: <478da2591001291707t5524385euace50f95d6059103@mail.gmail.com>

Hello,

Is there any way to know if some data that are in req.form are "POST" or
"GET" data ?
It's better if we want to protect our form ... And I want to treat ONLY the
POSTed data ...

Can you help me ?

Thanks,
Rapha?l
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20100130/6da34094/attachment.html
From estrand at isomedia.com  Fri Jan 29 20:20:19 2010
From: estrand at isomedia.com (Eric Strand)
Date: Fri Jan 29 20:20:09 2010
Subject: [mod_python] Method POST
In-Reply-To: <478da2591001291707t5524385euace50f95d6059103@mail.gmail.com>
References: <478da2591001291707t5524385euace50f95d6059103@mail.gmail.com>
Message-ID: <4B638953.7060601@isomedia.com>


Check out the "method" member of the request object documented here:

http://www.modpython.org/live/current/doc-html/pyapi-mprequest-mem.html

--Eric



Rapha?l B. wrote:
> Hello,
> 
> Is there any way to know if some data that are in req.form are "POST" or 
> "GET" data ?
> It's better if we want to protect our form ... And I want to treat ONLY 
> the POSTed data ...
> 
> Can you help me ?
> 
> Thanks,
> Rapha?l
> 
> 
> ------------------------------------------------------------------------
> 
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python

From nashii at gmail.com  Sat Jan 30 13:13:18 2010
From: nashii at gmail.com (=?ISO-8859-1?Q?Rapha=EBl_B=2E?=)
Date: Sat Jan 30 13:13:21 2010
Subject: [mod_python] Method POST
In-Reply-To: <a595de7a1001291729p73d6e0afnacfb0cfb4ddbf21d@mail.gmail.com>
References: <478da2591001291707t5524385euace50f95d6059103@mail.gmail.com>
	<a595de7a1001291729p73d6e0afnacfb0cfb4ddbf21d@mail.gmail.com>
Message-ID: <478da2591001301013j57eae9fw74d80063605cb980@mail.gmail.com>

2010/1/30 Eric Strand <estrand@isomedia.com>

>
> Check out the "method" member of the request object documented here:
>
> http://www.modpython.org/live/current/doc-html/pyapi-mprequest-mem.html
>
> --Eric
>

It works if we want to know the global method to load the webpage, but not
to know which field is "posted" and which other is "getted" !
I would like to split the two kinds of submissions ! Is this possible ?

Thanks for your answer ;)

Le 30 janvier 2010 02:29, Clodoaldo Neto <clodoaldo.pinto@gmail.com> a ?crit
:

>
> What do you mean by "protect our form"? Although it takes more work to
> fake a posted form than to fake a geted form it is not worth to even
> think about it in terms of security. It is much saner to just to use
> the post/get semantics: if it will not change the state of the
> universe then it is a get, otherwise it is a post.
>
> Regards, Clodoaldo


If it's not really a "protection", it's a way to be sure that the form was
submitted by the right way, and I prefer. In fact, I would like to be sure
that all of the data that are obtained are from my form !

Regards,
Rapha?l
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20100130/8adef17b/attachment.html
From nashii at gmail.com  Sat Jan 30 19:52:01 2010
From: nashii at gmail.com (=?ISO-8859-1?Q?Rapha=EBl_B=2E?=)
Date: Sat Jan 30 19:52:21 2010
Subject: [mod_python] Method POST
In-Reply-To: <a595de7a1001301104i355020fave4d3fe22c7724ff7@mail.gmail.com>
References: <478da2591001291707t5524385euace50f95d6059103@mail.gmail.com>
	<a595de7a1001291729p73d6e0afnacfb0cfb4ddbf21d@mail.gmail.com>
	<478da2591001301013j57eae9fw74d80063605cb980@mail.gmail.com>
	<a595de7a1001301104i355020fave4d3fe22c7724ff7@mail.gmail.com>
Message-ID: <478da2591001301652q8304aa0h9cb0f8bd9e3130da@mail.gmail.com>

Yeah I know that, but in PHP, for instance, we can authentificate a form a
little bit by checking the referrent uri and the $_POST variable :)

I just want to do the same.

So, I have made this method:

def getPostData(req):
>     if req.method.upper() != 'POST': return {}
>     else:
>         posted = dict(util.FieldStorage(req, keep_blank_values=1))
>         if posted and req.args:
>             query_args = re.findall('(?i)(?:&|^)(.*?)=.*?', req.args)
>             for query_arg in query_args:
>                 if query_arg in posted.keys():
>                     if type(posted[query_arg]) == list:
>                         posted[query_arg].pop(0)
>                         if len(posted[query_arg]) == 1: posted[query_arg] =
> posted[query_arg][0]
>                     else: del posted[query_arg]
>         return posted
>
> req.post = dict(getPostData(req))
>

So, req.post contains only the data that were POSTed.

You can after that verify the Referrer with something like:

> if not 'Referer' in req.headers_in.keys() or not
> re.search('^https?://'+req.hostname+'/$', req.headers_in['Referer'])
>
You must change the end of the regex if you want to be able to have a
referer that is not only the domain, this line is for my proper use ;)

Have a nice night :p
Rapha?l

Le 30 janvier 2010 20:04, Clodoaldo Neto <clodoaldo.pinto@gmail.com> a ?crit
:

> 2010/1/30 Rapha?l B. <nashii@gmail.com>:
> > 2010/1/30 Eric Strand <estrand@isomedia.com>
> >>
> >> Check out the "method" member of the request object documented here:
> >>
> >> http://www.modpython.org/live/current/doc-html/pyapi-mprequest-mem.html
> >>
> >> --Eric
> >
> > It works if we want to know the global method to load the webpage, but
> not
> > to know which field is "posted" and which other is "getted" !
> > I would like to split the two kinds of submissions ! Is this possible ?
> >
> > Thanks for your answer ;)
> >
> > Le 30 janvier 2010 02:29, Clodoaldo Neto <clodoaldo.pinto@gmail.com> a
> ?crit
> > :
> >>
> >> What do you mean by "protect our form"? Although it takes more work to
> >> fake a posted form than to fake a geted form it is not worth to even
> >> think about it in terms of security. It is much saner to just to use
> >> the post/get semantics: if it will not change the state of the
> >> universe then it is a get, otherwise it is a post.
> >>
> >> Regards, Clodoaldo
> >
> > If it's not really a "protection", it's a way to be sure that the form
> was
> > submitted by the right way, and I prefer. In fact, I would like to be
> sure
> > that all of the data that are obtained are from my form !
>
> There is no way to be sure about that. Even if you authenticate the
> user you can't "authenticate" the form because submitted data is the
> only thing you will get, not the original form. And all the hidden
> fields you send the client can just submit then back.
>
> It sounds like you want to avoid the server side sanitation and
> checking code and you can't avoid it. The client side code is just a
> user convenience and everything will have to be rewritten server side.
>
> Clodoaldo
>
> >
> > Regards,
> > Rapha?l
> >
> >
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20100131/1007dc81/attachment.html
From graham.dumpleton at gmail.com  Sat Jan 30 20:56:21 2010
From: graham.dumpleton at gmail.com (Graham Dumpleton)
Date: Sat Jan 30 20:56:27 2010
Subject: [mod_python] Method POST
In-Reply-To: <478da2591001291707t5524385euace50f95d6059103@mail.gmail.com>
References: <478da2591001291707t5524385euace50f95d6059103@mail.gmail.com>
Message-ID: <88e286471001301756w676e1019q1a546990b5c6d657@mail.gmail.com>

2010/1/30 Rapha?l B. <nashii@gmail.com>:
> Hello,
>
> Is there any way to know if some data that are in req.form are "POST" or
> "GET" data ?
> It's better if we want to protect our form ... And I want to treat ONLY the
> POSTed data ...
>
> Can you help me ?

Use:

  if req.method == "POST" and req.args:
    ... GET style args were supplied to POST, so generate an error to forbid it

If you want to try and still allow it but treat them differently, it
gets a bit harder. This is being FieldStorage class merges GET args
into POST args.

        #### lib/python/mod_python/util.py

        # always process GET-style parameters
        if req.args:
            pairs = parse_qsl(req.args, keep_blank_values)
            for pair in pairs:
                self.add_field(pair[0], pair[1])

You would have to parse req.args yourself like above. Removing the
entries with that key may not be sufficient however in as much as the
same value could have been supplied through both GET and POST args, in
which case there will be multiple entries. Thus you would need to also
look at value of arg supplied via GET and be selective about which to
remove from overall argument set.

You could get even more tricky by using a special handler to null out
req.args prior to mod_python.publisher getting to it. Thus:

  PythonHandler mymodules.fixupargs .py
  PythonHandler mod_python.publisher .py

Where in your mymodules/fixupargs.py (installed on module path
somewhere), you have:

  from mod_python import apache

  def handler(req):
    if req.method == "POST" and req.args:
      req.args = ""
    return apache.DECLINED

Overall your goal of trying to ensure people use your form isn't going
to really work doing it this way. This is because someone could just
copy the HTML of your form to local disk on their machine, change the
form, charge the target of the form to list your site explicitly and
then still use POST. If you were going to try and be more
sophisticated you would look at the HTTP Referrer header, but even
that can be forged when using custom HTTP client.

So, what is the real issue you are trying to solve that would even
require such checks.

Graham

