From bl at netgroup.dk  Tue Mar  1 02:16:21 2005
From: bl at netgroup.dk (Bo Lorentsen)
Date: Tue Mar  1 02:16:15 2005
Subject: [mod_python] Beta testers for "vampire::publisher"?
In-Reply-To: <1109633510.29012@dscpl.user.openhosting.com>
References: <1109633510.29012@dscpl.user.openhosting.com>
Message-ID: <422416C5.3060506@netgroup.dk>

Graham Dumpleton wrote:

>The new code hasn't been released as a package yet and thus not
>documented there. I am also still trying to catch up on providing
>documentation for existing features. :-)
>  
>
I know the feeling, and on the other hand ... code are the ultimate 
documentation :-)

>It is because the documentation isn't done that I indicated I would
>explicitly help people to convert if they wanted to try it out.
>  
>
It would be nice with a quick publisher -> vampire "hello world" 
example, both to signal that it is possible and to show the differance 
regrading imports.

Btw. regarding your form element parsing (the dot notation). it is 
possible to make a  "dict.element" = "data -> dict = {'element':data}", 
but how about sequences like fks :

seq.index.element = data

that may in python become :

seq[ index ] =  {'element':data}

I use somthing like this for "onemany" DB relations in my current code, 
to repeate a block of ellements. Together with my data abstraction layer 
(that also need documentation :-)), this makes a really nice and easy 
way to renter and edit database content.

/BL
From grahamd at dscpl.com.au  Tue Mar  1 05:02:48 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Tue Mar  1 05:02:55 2005
Subject: [mod_python] Beta testers for "vampire::publisher"?
In-Reply-To: <422416C5.3060506@netgroup.dk>
References: <1109633510.29012@dscpl.user.openhosting.com>
	<422416C5.3060506@netgroup.dk>
Message-ID: <b98c0beb24beab05d814c262506a952f@dscpl.com.au>


On 01/03/2005, at 6:16 PM, Bo Lorentsen wrote:
> Btw. regarding your form element parsing (the dot notation). it is  
> possible to make a  "dict.element" = "data -> dict =  
> {'element':data}", but how about sequences like fks :
>
> seq.index.element = data
>
> that may in python become :
>
> seq[ index ] =  {'element':data}
>
> I use somthing like this for "onemany" DB relations in my current  
> code, to repeate a block of ellements. Together with my data  
> abstraction layer (that also need documentation :-)), this makes a  
> really nice and easy way to renter and edit database content.

It isn't actually my notation, I got permission to use code written by  
someone
else which did it as I couldn't see that I could do any better. The  
original
code I used was written by Ian Bicking and is at:

   http://svn.colorstudy.com/trunk/Validator/validator/variabledecode.py

Lists and dictionaries can nest if that is what you mean. Click on the  
link:

    
http://www.dscpl.com.au/projects/vampire/examples-01/form-values.html? 
seq.index.element=data

It yields:

   seq = {'index': {'element': 'data'}}

The top level is a dictionary and not an array. If you wanted an array,  
try:

    
http://www.dscpl.com.au/projects/vampire/examples-01/form-values.html? 
seq-1.element=data1&seq-2.element=data2

This yields:

   seq = [{'element': 'data1'}, {'element': 'data2'}]

Ie. array of dictionaries.

Anyway, read the documentation in the original source and then play  
with that
URL, adding whatever variation of form parameters you want to try out  
and it
will tell you what they get converted to.

BTW, decided that I should add an option to Vampire to turn off this  
more
advanced form parameter parsing if not wanted. When turned off, it will
behave just like mod_python.publisher.

Graham

From donniejones18 at gmail.com  Tue Mar  1 09:34:38 2005
From: donniejones18 at gmail.com (donnie jones)
Date: Tue Mar  1 09:34:43 2005
Subject: [mod_python] Session example and problems.
In-Reply-To: <4d11484d05022719311ddb4dd5@mail.gmail.com>
References: <ff87600805022412551319bf59@mail.gmail.com>
	<ff8760080502261433141c7620@mail.gmail.com>
	<4d11484d05022710432e6fafe4@mail.gmail.com>
	<4d11484d050227104773e5bc0d@mail.gmail.com>
	<ff87600805022711433919868@mail.gmail.com>
	<4d11484d050227182957605606@mail.gmail.com>
	<ff876008050227183970237892@mail.gmail.com>
	<4d11484d05022718585f0b8786@mail.gmail.com>
	<ff876008050227192147a93be3@mail.gmail.com>
	<4d11484d05022719311ddb4dd5@mail.gmail.com>
Message-ID: <ff8760080503010634f522eb6@mail.gmail.com>

>From what I can tell, since I am using XMLHttpRequest
to load individual parts of the page, the cookie for the Session
is not getting updated.

I created a "login" page that creates the initial Session and then
goes on to use the other functions, and now the sessions
are working fine with the correct session id throughout each function.

For testing, I set the session expire to 30 seconds.
The problem is that the session keeps expiring, I think that
the XMLHttpRequest must not update the cookie for the session?

Any ideas...?  Is there a way I can manually update the cookie
through python?

Thanks for all the help.
__
Donnie


On Sun, 27 Feb 2005 22:31:00 -0500, Chris Jackson
<christopher.jackson@gmail.com> wrote:
> Ah, i see.
> 
> ~= Chris =~
> 
> On Sun, 27 Feb 2005 22:21:02 -0500, donnie jones
> <donniejones18@gmail.com> wrote:
> > Well, GetMailboxes is the real function, but
> > UseSession is the test function...
> >
> > It actually seems that the sid I am returning from my GetSid function
> > isn't the actual sid that is in the Cookie, so each time the function is
> > called and I pass my sid, it must think it is a new request and create
> > a new session, that's the best I can figure...
> >
> > So, now I am trying to figure out why I am not getting the correct
> > session id the same as what is in the Cookie.
> >
> > __
> > Donnie
> >
> > On Sun, 27 Feb 2005 21:58:01 -0500, Chris Jackson
> > <christopher.jackson@gmail.com> wrote:
> > > [comments inline]
> > >
> > > On Sun, 27 Feb 2005 21:39:25 -0500, donnie jones
> > > <donniejones18@gmail.com> wrote:
> > > > Here is the code that calls the UseSession function,
> > > > and it passes the sid that was from the GetSid function
> > > > through the javascript.
> > > >
> > > > xmlhttp=new XMLHttpRequest();
> > > >
> > > > if(xmlhttp2) {
> > > >   url = "mail.py/GetMailboxes?sid=" + sid;
> > > >   xmlhttp2.open("GET", url, true);
> > > > }
> > > >
> > >
> > > hmm, i still don't see the UseSession function. Although I do notice
> > > GetMailboxes:)
> > >
> > > > I have a sneaking suspicion that each req is
> > > > overriding my sess = Session(req, sid) with a new session id
> > > > and it may be because the XMLHttpRequest doesn't pass
> > > > the cookie that is generated for the session to the page,
> > > > and insteach with each calls it thinks a new session should
> > > > be created.
> > > >
> > >
> > > I guess new connections via XMLHttpRequest could be happening,
> > > preventing cookies from being persistent as expected.  I'm not too familiar with
> > > XMLHttpRequest, although your req.write works and displays the correct sid,
> > > so the cookie must be reaching the page.
> > >
> > > And once you have the sid, your good to go, because when using sessions,
> > > data is stored on the server, and the cookie just holds the sid.  you can read
> > > your /tmp/mp_sess* files and watch new session ids being created.
> > >
> > > > I'm working on trying to figure more out...
> > > > __
> > > > Donnie
> > > >
> > >
> > > ~= Chris =~
> > >
> > > > On Sun, 27 Feb 2005 21:29:57 -0500, Chris Jackson
> > > > <christopher.jackson@gmail.com> wrote:
> > > > > Can you paste the line of code where you call UseSession, passing it the sid.
> > > > >
> > > > > ~= Chris =~
> > > > >
> > > > > On Sun, 27 Feb 2005 14:43:38 -0500, donnie jones
> > > > > <donniejones18@gmail.com> wrote:
> > > > > > The javascript uses XMLHttpRequest and from the responseText is
> > > > > > able to get the SID and pass it to the UseSession function.
> > > > > >
> > > > > > I write out the session id in the UseSession function to make sure
> > > > > > that the same session id is being passed, and it works.
> > > > > > However, when I pass that same session id to the Session(req, sid)
> > > > > > it creates another session...
> > > > > >
> > > > > > __
> > > > > > Donnie
> > > > > >
From christopher.jackson at gmail.com  Tue Mar  1 12:31:14 2005
From: christopher.jackson at gmail.com (Chris Jackson)
Date: Tue Mar  1 12:32:14 2005
Subject: [mod_python] Session example and problems.
In-Reply-To: <ff8760080503010634f522eb6@mail.gmail.com>
References: <ff87600805022412551319bf59@mail.gmail.com>
	<4d11484d05022710432e6fafe4@mail.gmail.com>
	<4d11484d050227104773e5bc0d@mail.gmail.com>
	<ff87600805022711433919868@mail.gmail.com>
	<4d11484d050227182957605606@mail.gmail.com>
	<ff876008050227183970237892@mail.gmail.com>
	<4d11484d05022718585f0b8786@mail.gmail.com>
	<ff876008050227192147a93be3@mail.gmail.com>
	<4d11484d05022719311ddb4dd5@mail.gmail.com>
	<ff8760080503010634f522eb6@mail.gmail.com>
Message-ID: <4d11484d0503010931795c861f@mail.gmail.com>

If you mean updating the expiration (timeout) time of the cookie, you
can do this by updating
the timeout time(in secs) in the fourth parameter of sess =
Session(....), or do sess.set_timeout(..)

~= Chris =~


On Tue, 1 Mar 2005 09:34:38 -0500, donnie jones <donniejones18@gmail.com> wrote:
> From what I can tell, since I am using XMLHttpRequest
> to load individual parts of the page, the cookie for the Session
> is not getting updated.
> 
> I created a "login" page that creates the initial Session and then
> goes on to use the other functions, and now the sessions
> are working fine with the correct session id throughout each function.
> 
> For testing, I set the session expire to 30 seconds.
> The problem is that the session keeps expiring, I think that
> the XMLHttpRequest must not update the cookie for the session?
> 
> Any ideas...?  Is there a way I can manually update the cookie
> through python?
> 
> Thanks for all the help.
> __
> Donnie
> 
> On Sun, 27 Feb 2005 22:31:00 -0500, Chris Jackson
> <christopher.jackson@gmail.com> wrote:
> > Ah, i see.
> >
> > ~= Chris =~
> >
> > On Sun, 27 Feb 2005 22:21:02 -0500, donnie jones
> > <donniejones18@gmail.com> wrote:
> > > Well, GetMailboxes is the real function, but
> > > UseSession is the test function...
> > >
> > > It actually seems that the sid I am returning from my GetSid function
> > > isn't the actual sid that is in the Cookie, so each time the function is
> > > called and I pass my sid, it must think it is a new request and create
> > > a new session, that's the best I can figure...
> > >
> > > So, now I am trying to figure out why I am not getting the correct
> > > session id the same as what is in the Cookie.
> > >
> > > __
> > > Donnie
> > >
> > > On Sun, 27 Feb 2005 21:58:01 -0500, Chris Jackson
> > > <christopher.jackson@gmail.com> wrote:
> > > > [comments inline]
> > > >
> > > > On Sun, 27 Feb 2005 21:39:25 -0500, donnie jones
> > > > <donniejones18@gmail.com> wrote:
> > > > > Here is the code that calls the UseSession function,
> > > > > and it passes the sid that was from the GetSid function
> > > > > through the javascript.
> > > > >
> > > > > xmlhttp=new XMLHttpRequest();
> > > > >
> > > > > if(xmlhttp2) {
> > > > >   url = "mail.py/GetMailboxes?sid=" + sid;
> > > > >   xmlhttp2.open("GET", url, true);
> > > > > }
> > > > >
> > > >
> > > > hmm, i still don't see the UseSession function. Although I do notice
> > > > GetMailboxes:)
> > > >
> > > > > I have a sneaking suspicion that each req is
> > > > > overriding my sess = Session(req, sid) with a new session id
> > > > > and it may be because the XMLHttpRequest doesn't pass
> > > > > the cookie that is generated for the session to the page,
> > > > > and insteach with each calls it thinks a new session should
> > > > > be created.
> > > > >
> > > >
> > > > I guess new connections via XMLHttpRequest could be happening,
> > > > preventing cookies from being persistent as expected.  I'm not too familiar with
> > > > XMLHttpRequest, although your req.write works and displays the correct sid,
> > > > so the cookie must be reaching the page.
> > > >
> > > > And once you have the sid, your good to go, because when using sessions,
> > > > data is stored on the server, and the cookie just holds the sid.  you can read
> > > > your /tmp/mp_sess* files and watch new session ids being created.
> > > >
> > > > > I'm working on trying to figure more out...
> > > > > __
> > > > > Donnie
> > > > >
> > > >
> > > > ~= Chris =~
> > > >
> > > > > On Sun, 27 Feb 2005 21:29:57 -0500, Chris Jackson
> > > > > <christopher.jackson@gmail.com> wrote:
> > > > > > Can you paste the line of code where you call UseSession, passing it the sid.
> > > > > >
> > > > > > ~= Chris =~
> > > > > >
> > > > > > On Sun, 27 Feb 2005 14:43:38 -0500, donnie jones
> > > > > > <donniejones18@gmail.com> wrote:
> > > > > > > The javascript uses XMLHttpRequest and from the responseText is
> > > > > > > able to get the SID and pass it to the UseSession function.
> > > > > > >
> > > > > > > I write out the session id in the UseSession function to make sure
> > > > > > > that the same session id is being passed, and it works.
> > > > > > > However, when I pass that same session id to the Session(req, sid)
> > > > > > > it creates another session...
> > > > > > >
> > > > > > > __
> > > > > > > Donnie
> > > > > > >
>
From grahamd at dscpl.com.au  Tue Mar  1 18:05:11 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Tue Mar  1 18:05:14 2005
Subject: [mod_python] mod_python.publisher and req.path_info.
Message-ID: <1109718311.27911@dscpl.user.openhosting.com>

One of the issues in using mod_python.publisher is that the
req.path_info data is used in performing traversal to work out
which Python method is to be called or which object to be
accessed. The contents of req.path_info must match exactly
what object structure is available. There is no ability for
mod_python.publisher to match as far as it can and then
supply what is left as additional path_info for use by the called
method. There were however ways of doing it if you constructed
your own handler and didn't use mod_python.publisher.

Now others may see the following solution to not being able
to process additional path_info in mod_python.publisher as
obvious, and I admit I have toyed with the idea in my mind for
a while but hadn't actually tried it. Now that I have, thought I
would post it here along with some more thoughts on what
could be done in the future if/when mod_python.publisher is
updated to support new style classes.

The code I have been playing with is:

###

class _extra_path_info:
  def __init__(self,callback,path=""):
    self.__callback = callback
    self.__path = path
  def __call__(self,req):
    req.extra_path_info = self.__path
    return self.__callback(req)
  def __getattr__(self,name):
    if name[0] != '_':
      return _extra_path_info(self.__callback,'/'.join([self.__path,name]))
    raise AttributeError()

class A: 
  def __init__(self):
    self.method = _extra_path_info(self.method)
  def method(self,req):
    return req.path_info,req.extra_path_info

a = A()

def method(req):
  return req.path_info,req.extra_path_info

method = _extra_path_info(method)

###

The intent with the code is that the _extra_path_info class is used
to wrap a function or method. By doing this, as a URL is now resolved
against the object structure, a transient instance of _extra_path_info
is created for each element of the path that extends beyond that
which would have matched the function or method in the first place.
When the end of the URL is reached and a call is made against the
object, the original wrapped method is called, with req.extra_path_info
being set to be the part of the URL beyond that which matched the
original method.

The result of all this for various URLs is as follows:

  '/method' --> ('/method', '')
  '/method/a/b/c' --> ('/method/a/b/c', '/a/b/c')

  '/a/method' --> ('/a/method', '')
  '/a/method/a/b/c' --> ('/a/method/a/b/c/', '/a/b/c')

Now I don't recollect ever seeing anything on the mailing list or in any
other documentation talking about such a technique, but it could be
quite useful in certain type of circumstances.

The only issue with it is that _extra_path_info has to be customised
for each method being wrapped if the method also accepts form
parameters. In this case, any form parameters that are accepted by
the wrapped method have to exist in the __call__() method and it has
to forward them to the wrapped method.

Now I haven't looked too deeply into new style classes, but from some
where I have got it in my head that one should be able to using new
style classes create new methods and dynamically setup the parameters
they accept. If this is true then _extra_path_info could be replaced
with a magic method which would create a wrapper around a function
and automatically fill into the __call__() method all the parameters
which the wrapped method was expecting. Used in conjunction with
decorators in Python 2.4, I am speculating that one could simple write:

@extra_path_info
def method(req):
  return req.path_info,req.extra_path_info

The only problem with this even if it can be done, is that the object which
wraps the function most likely is an instance of a new style class and
presently, mod_python.publisher cannot traverse into new style classes.
Luckily the vampire::publisher code I have and will release at some point
will, so I can try it out and see how it goes.

Anyway, thought this all might be of interest to someone so though I
would post it here. I wander if there is a place for stuff like this at the
Python cookbook site. There are a few examples there which mention
mod_python, but they seem to be more general recipes also applicable
in other situations.

Would be interested to hear any comments on this and whether anyone
is already doing something like it.


Graham
From grahamd at dscpl.com.au  Tue Mar  1 18:39:27 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Tue Mar  1 18:39:32 2005
Subject: [mod_python] mod_python.publisher and req.path_info.
Message-ID: <1109720366.11416@dscpl.user.openhosting.com>

Graham Dumpleton wrote ..
> Now I haven't looked too deeply into new style classes, but from some
> where I have got it in my head that one should be able to using new
> style classes create new methods and dynamically setup the parameters
> they accept. If this is true then _extra_path_info could be replaced
> with a magic method which would create a wrapper around a function
> and automatically fill into the __call__() method all the parameters
> which the wrapped method was expecting. Used in conjunction with
> decorators in Python 2.4, I am speculating that one could simple write:
> 
> @extra_path_info
> def method(req):
>   return req.path_info,req.extra_path_info
> 
> The only problem with this even if it can be done, is that the object which
> wraps the function most likely is an instance of a new style class and
> presently, mod_python.publisher cannot traverse into new style classes.
> Luckily the vampire::publisher code I have and will release at some point
> will, so I can try it out and see how it goes.

Actually, in vampire::publisher I don't need new style classes as I can
reuse one of my internal methods for parameter matching and write:

from vampire.lookup import _params

class _extra_path_info_kw:
  def __init__(self,callback,path=""):
    self.__callback = callback
    self.__path = path
  def __call__(self,**args):
    if args.has_key("req"):
      args["req"].extra_path_info = self.__path
    status,kwargs,expected = _params(self.__callback)
    if status != apache.OK:
      raise apache.SERVER_RETURN, status
    if kwargs == False:
      for name in args.keys():
        if name not in expected:
          del args[name]
    return self.__callback(**args)
  def __getattr__(self,name):
    if name[0] != '_':
      return _extra_path_info_kw(self.__callback,'/'.join([self.__path,name]))
    raise AttributeError()

class A:
  def __init__(self):
    self.method = _extra_path_info_kw(self.method)
  def method(self,req,arg1="1",arg2="2"):
    return req.path_info,req.extra_path_info,arg1,arg2

a = A()

This gives me with one method a way of wrapping methods with
arbitrary form parameters.

In mod_python.publisher there is parameter matching code as well in
util.apply_fs_data() and as a result one can write:

from mod_python import util 

class _extra_path_info_kw:
  def __init__(self,callback,path=""):
    self.__callback = callback
    self.__path = path
  def __call__(self,req):
    req.extra_path_info = self.__path
    return util.apply_fs_data(self.__callback,req.form,req=req)
  def __getattr__(self,name):
    if name[0] != '_':
      return _extra_path_info_kw(self.__callback,'/'.join([self.__path,name]))
    raise AttributeError()

class A:
  def __init__(self):
    self.method = _extra_path_info_kw(self.method)
  def method(self,req,arg1="1",arg2="2"):
    return req.path_info,req.extra_path_info,arg1,arg2

a = A()

This is though going to result in a second processing of req.form in the
case of mod_python.publisher.

Anyway, time to get back to some real work. :-)


Graham
From azurit at pobox.sk  Wed Mar  2 06:45:25 2005
From: azurit at pobox.sk (azurIt)
Date: Wed Mar  2 06:45:30 2005
Subject: [mod_python] run scripts not under web server user
Message-ID: <200503021145.j22BjOrl014359@www6.pobox.sk>

hi,

it is possible to run scripts under the owner of the files
rather then under web server user ? i have many users on my
server and i want to allow them to run their own python scripts
on webs but i can't because it is always run under web server
user (which is a security hole). thnx for answer.

azurIt
____________________________________
Hladate nove prilezitosti pre Vasu firmu ?
Zapojte sa do verejnych sutazi na Slovensku a v Europskej unii.
Denne aktualizovane na http://www.epi.sk/vo.htm


From b.hughes at factorymotorparts.com  Wed Mar  2 14:20:11 2005
From: b.hughes at factorymotorparts.com (Bert Hughes)
Date: Wed Mar  2 14:17:39 2005
Subject: [mod_python] Re: run scripts not under web server user
Message-ID: <422611EB.3070800@factorymotorparts.com>

Check out apache module suEXEC.

Bert Hughes

From b.hughes at factorymotorparts.com  Wed Mar  2 14:22:05 2005
From: b.hughes at factorymotorparts.com (Bert Hughes)
Date: Wed Mar  2 14:19:33 2005
Subject: [mod_python] run scripts not under web server user
In-Reply-To: <200503021145.j22BjOrl014359@www6.pobox.sk>
References: <200503021145.j22BjOrl014359@www6.pobox.sk>
Message-ID: <4226125D.10006@factorymotorparts.com>

Try this link:

http://httpd.apache.org/docs/suexec.html

Bert Hughes


azurIt wrote:

>hi,
>
>it is possible to run scripts under the owner of the files
>rather then under web server user ? i have many users on my
>server and i want to allow them to run their own python scripts
>on webs but i can't because it is always run under web server
>user (which is a security hole). thnx for answer.
>
>azurIt
>____________________________________
>Hladate nove prilezitosti pre Vasu firmu ?
>Zapojte sa do verejnych sutazi na Slovensku a v Europskej unii.
>Denne aktualizovane na http://www.epi.sk/vo.htm
>
>
>_______________________________________________
>Mod_python mailing list
>Mod_python@modpython.org
>http://mailman.modpython.org/mailman/listinfo/mod_python
>
>.
>
>  
>


From list at joreybump.com  Wed Mar  2 14:32:24 2005
From: list at joreybump.com (Jorey Bump)
Date: Wed Mar  2 14:32:28 2005
Subject: [mod_python] Re: run scripts not under web server user
In-Reply-To: <422611EB.3070800@factorymotorparts.com>
References: <422611EB.3070800@factorymotorparts.com>
Message-ID: <422614C8.80301@joreybump.com>

Bert Hughes wrote:
> Check out apache module suEXEC.

This will only work for CGI scripts, not mod_python.
From azurit at pobox.sk  Thu Mar  3 07:27:24 2005
From: azurit at pobox.sk (azurIt)
Date: Thu Mar  3 07:27:23 2005
Subject: [mod_python] Re: run scripts not under web server user
Message-ID: <200503031227.j23CROLP002624@www3.pobox.sk>

> Bert Hughes wrote:
> > Check out apache module suEXEC.
>
> This will only work for CGI scripts, not mod_python.

yes, that's true. any other ideas ? :/

azurIt

____________________________________
EPI.sk Ekonomicke a pravne informacie - denne aktualizovane.
Zakony, sutaze, udaje o firmach, odborne clanky.
Najdete na stranke http://www.epi.sk/info.htm


From list at joreybump.com  Thu Mar  3 10:05:42 2005
From: list at joreybump.com (Jorey Bump)
Date: Thu Mar  3 10:05:51 2005
Subject: [mod_python] Re: run scripts not under web server user
In-Reply-To: <200503031227.j23CROLP002624@www3.pobox.sk>
References: <200503031227.j23CROLP002624@www3.pobox.sk>
Message-ID: <422727C6.5080208@joreybump.com>

azurIt wrote:
>>Bert Hughes wrote:
>>
>>>Check out apache module suEXEC.
>>
>>This will only work for CGI scripts, not mod_python.
> 
> yes, that's true. any other ideas ? :/

Well, ideally, it would be nice to use the perchild MPM, which is an 
attempt to deal with exactly this issue and embedded interpreters:

  http://httpd.apache.org/docs-2.0/mod/perchild.html

However, according to the docs, it does not currently work. :(

I know how to set up private instances of apache/mod_python, but it's 
not an elegant solution (I use it to test new versions of 
apache/mod_python). I don't otherwise require user separation in any of 
my environments, so I can't recommend anything, as I haven't thrown 
myself at the problem.
From azurit at pobox.sk  Thu Mar  3 15:03:43 2005
From: azurit at pobox.sk (azurIt)
Date: Thu Mar  3 15:03:47 2005
Subject: [mod_python] Re: run scripts not under web server user
Message-ID: <200503032003.j23K3gHo019715@www4.pobox.sk>

thanks for you answer Eric but i don't think this will help me. if 
you are still interested in helping me, beginning of this thread is 
here:

http://www.modpython.org/pipermail/mod_python/2005-March/017562.html


> On Thursday 03 March 2005 04:27 am, azurIt wrote:
> > > Bert Hughes wrote:
> > > > Check out apache module suEXEC.
> > >
> > > This will only work for CGI scripts, not mod_python.
> >
> > yes, that's true. any other ideas ? :/
> 
> I deleted the beginning of this thread (didn't see it on Google, 
> either), so I'm not sure I have a perfect answer...
> 
> I once had to set up mod_python to run a long process with super 
user 
> privileges using 'sudo'.  If this sounds like it might meet your 
> needs, the results of a Google search for:
> 
> mod_python "eric walstad" sudo
> 
> will show you what I did.
> 
> Good luck,
> 
> Eric.
> 

____________________________________
Vsetko o SuperStar
http://superstar.atlas.sk


From list at joreybump.com  Thu Mar  3 15:14:49 2005
From: list at joreybump.com (Jorey Bump)
Date: Thu Mar  3 15:14:57 2005
Subject: [mod_python] options to suppress error when accessing module
	directly with Publisher
Message-ID: <42277039.8070007@joreybump.com>

I'm replacing a directory of files with a single module for use with 
Publisher. As this location is used by a new set of users each cycle, I 
won't need to account for any old links. However, it's likely that some 
users will try backing up from the function to the module name itself, 
which will return a mod_python error (I have debug on). Is there any way 
to handle this error in another way?

For example, given a module foo.py with a function bar, this is the link 
we will be distributing to users:

  http://example.com/foo/bar

This also works:

  http://example.com/foo/bar/

And this returns a 404 Not Found error, which is fine:

  http://example.com/foo

But adding a slash returns a mod_python error:

  http://example.com/foo/

This is the kind of thing that users will try to do to search for 
information. It's usually nonmalicious, and some browsers even provide 
convenient widgets to backtrack over an URL. I'd rather return a 404 
than an interpreter error. Any thoughts?

It's interesting that naming a module index.py can hide the module name 
in an URL. Why not do the opposite, and allow a function named index in 
a module to be the default location if the module is called directly, 
with a trailing slash?
From nick at dd.revealed.net  Thu Mar  3 15:33:26 2005
From: nick at dd.revealed.net (Nick)
Date: Thu Mar  3 15:33:52 2005
Subject: [mod_python] options to suppress error when accessing module
	directly with Publisher
In-Reply-To: <42277039.8070007@joreybump.com>
References: <42277039.8070007@joreybump.com>
Message-ID: <42277496.9030100@dd.revealed.net>

Hate to sound like a broken record, but I usually resolve these sorts of 
issues with mod_rewrite.

Nick

Jorey Bump wrote:
> I'm replacing a directory of files with a single module for use with 
> Publisher. As this location is used by a new set of users each cycle, I 
> won't need to account for any old links. However, it's likely that some 
> users will try backing up from the function to the module name itself, 
> which will return a mod_python error (I have debug on). Is there any way 
> to handle this error in another way?
> 
> For example, given a module foo.py with a function bar, this is the link 
> we will be distributing to users:
> 
>  http://example.com/foo/bar
> 
> This also works:
> 
>  http://example.com/foo/bar/
> 
> And this returns a 404 Not Found error, which is fine:
> 
>  http://example.com/foo
> 
> But adding a slash returns a mod_python error:
> 
>  http://example.com/foo/
> 
> This is the kind of thing that users will try to do to search for 
> information. It's usually nonmalicious, and some browsers even provide 
> convenient widgets to backtrack over an URL. I'd rather return a 404 
> than an interpreter error. Any thoughts?
> 
> It's interesting that naming a module index.py can hide the module name 
> in an URL. Why not do the opposite, and allow a function named index in 
> a module to be the default location if the module is called directly, 
> with a trailing slash?
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python

From list at joreybump.com  Thu Mar  3 15:44:41 2005
From: list at joreybump.com (Jorey Bump)
Date: Thu Mar  3 15:44:50 2005
Subject: [mod_python] options to suppress error when accessing module
	directly with Publisher
In-Reply-To: <42277496.9030100@dd.revealed.net>
References: <42277039.8070007@joreybump.com> <42277496.9030100@dd.revealed.net>
Message-ID: <42277739.2010204@joreybump.com>

Nick wrote:
> Hate to sound like a broken record, but I usually resolve these sorts of 
> issues with mod_rewrite.

My first approach was to use Redirect, but that resulted in a browser 
error. I'll give mod_rewrite a try.
From grahamd at dscpl.com.au  Thu Mar  3 16:05:35 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Thu Mar  3 16:05:44 2005
Subject: [mod_python] options to suppress error when accessing module
	directly with Publisher
In-Reply-To: <42277039.8070007@joreybump.com>
References: <42277039.8070007@joreybump.com>
Message-ID: <74f677104da01831fe52f5ac3a0f8819@dscpl.com.au>

Which version of mod_python are you using?

On mod_python-3.1.4 I get OK, OK, 404, 404. I don't get any mod_python 
error
for the last one.

If I add an index() function, then the last two yield the index() 
function
instead as you are expecting.

On 04/03/2005, at 7:14 AM, Jorey Bump wrote:

> I'm replacing a directory of files with a single module for use with 
> Publisher. As this location is used by a new set of users each cycle, 
> I won't need to account for any old links. However, it's likely that 
> some users will try backing up from the function to the module name 
> itself, which will return a mod_python error (I have debug on). Is 
> there any way to handle this error in another way?
>
> For example, given a module foo.py with a function bar, this is the 
> link we will be distributing to users:
>
>  http://example.com/foo/bar
>
> This also works:
>
>  http://example.com/foo/bar/
>
> And this returns a 404 Not Found error, which is fine:
>
>  http://example.com/foo
>
> But adding a slash returns a mod_python error:
>
>  http://example.com/foo/
>
> This is the kind of thing that users will try to do to search for 
> information. It's usually nonmalicious, and some browsers even provide 
> convenient widgets to backtrack over an URL. I'd rather return a 404 
> than an interpreter error. Any thoughts?
>
> It's interesting that naming a module index.py can hide the module 
> name in an URL. Why not do the opposite, and allow a function named 
> index in a module to be the default location if the module is called 
> directly, with a trailing slash?
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python

From grahamd at dscpl.com.au  Thu Mar  3 16:13:59 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Thu Mar  3 16:14:10 2005
Subject: [mod_python] options to suppress error when accessing module
	directly with Publisher
In-Reply-To: <74f677104da01831fe52f5ac3a0f8819@dscpl.com.au>
References: <42277039.8070007@joreybump.com>
	<74f677104da01831fe52f5ac3a0f8819@dscpl.com.au>
Message-ID: <b5db22b95ae27c0d35d9bbcfdcd30632@dscpl.com.au>

Yep, you must be using mod_python 2.7.X as there I get:

Mod_python error: "PythonHandler mod_python.publisher"

Traceback (most recent call last):

   File  
"/System/Library/Frameworks/Python.framework/Versions/2.3/lib/ 
python2.3/site-packages/mod_python/apache.py", line 193, in Dispatch
     result = object(req)

   File  
"/System/Library/Frameworks/Python.framework/Versions/2.3/lib/ 
python2.3/site-packages/mod_python/publisher.py", line 89, in handler
     if func_path[-1] == ".":

IndexError: string index out of range

BTW, on a quick test of "vampire:publisher" on mod_python 2.7.X, which  
I hadn't tried
before, all four work as expect. Ie., first two are OK, second two 404,  
or with index
function second two yield index.

This is one of the benefits of having publisher code which is outside  
of the main
release. It can be made to work the same with both 2.7.X and 3.1.X  
versions of mod_python
and you don't have to suffer the fact that such bugs in 2.7.X will most  
likely never
be fixed.

Graham

On 04/03/2005, at 8:05 AM, Graham Dumpleton wrote:

> Which version of mod_python are you using?
>
> On mod_python-3.1.4 I get OK, OK, 404, 404. I don't get any mod_python  
> error
> for the last one.
>
> If I add an index() function, then the last two yield the index()  
> function
> instead as you are expecting.
>
> On 04/03/2005, at 7:14 AM, Jorey Bump wrote:
>
>> I'm replacing a directory of files with a single module for use with  
>> Publisher. As this location is used by a new set of users each cycle,  
>> I won't need to account for any old links. However, it's likely that  
>> some users will try backing up from the function to the module name  
>> itself, which will return a mod_python error (I have debug on). Is  
>> there any way to handle this error in another way?
>>
>> For example, given a module foo.py with a function bar, this is the  
>> link we will be distributing to users:
>>
>>  http://example.com/foo/bar
>>
>> This also works:
>>
>>  http://example.com/foo/bar/
>>
>> And this returns a 404 Not Found error, which is fine:
>>
>>  http://example.com/foo
>>
>> But adding a slash returns a mod_python error:
>>
>>  http://example.com/foo/
>>
>> This is the kind of thing that users will try to do to search for  
>> information. It's usually nonmalicious, and some browsers even  
>> provide convenient widgets to backtrack over an URL. I'd rather  
>> return a 404 than an interpreter error. Any thoughts?
>>
>> It's interesting that naming a module index.py can hide the module  
>> name in an URL. Why not do the opposite, and allow a function named  
>> index in a module to be the default location if the module is called  
>> directly, with a trailing slash?
>> _______________________________________________
>> Mod_python mailing list
>> Mod_python@modpython.org
>> http://mailman.modpython.org/mailman/listinfo/mod_python
>

From list at joreybump.com  Thu Mar  3 16:50:40 2005
From: list at joreybump.com (Jorey Bump)
Date: Thu Mar  3 16:50:49 2005
Subject: [mod_python] options to suppress error when accessing module
	directly with Publisher
In-Reply-To: <b5db22b95ae27c0d35d9bbcfdcd30632@dscpl.com.au>
References: <42277039.8070007@joreybump.com>
	<74f677104da01831fe52f5ac3a0f8819@dscpl.com.au>
	<b5db22b95ae27c0d35d9bbcfdcd30632@dscpl.com.au>
Message-ID: <422786B0.4070403@joreybump.com>

Graham Dumpleton wrote:
> Yep, you must be using mod_python 2.7.X as there I get:

I am. I'm sorry I didn't test it on my 3.1 installation, where it works 
as expected. I made a wrong assumption when I glanced at the current 
docs for info on Publisher traversal:

  http://www.modpython.org/live/current/doc-html/hand-pub-alg-trav.html

It turns out that this example refers to the module *and* function, 
which are both named index:

  http://www.somehost/index/ will return "We are in index()"

Thanks for pointing out the 3.1 behaviour.

> This is one of the benefits of having publisher code which is outside  
> of the main
> release. It can be made to work the same with both 2.7.X and 3.1.X  
> versions of mod_python
> and you don't have to suffer the fact that such bugs in 2.7.X will most  
> likely never
> be fixed.

True, but I'm revamping the site in preparation for upgrading to apache 
2.x/mod_python 3.x, where it won't be an issue.
From bedouglas at earthlink.net  Fri Mar  4 00:53:08 2005
From: bedouglas at earthlink.net (bruce)
Date: Fri Mar  4 00:52:39 2005
Subject: [mod_python] could not import mod_python.apache
Message-ID: <003101c5207e$7185a800$0301a8c0@Mesa.com>

hi...

i'm trying to implement 'trac' (trac.edgewall.com) and seem to be running
into an issue.

i'm having an issue where i'm geting a 'could not import mod_python.apache'
error in my apache error log file.

i'm running linux rh8.0, apache2.50, mod_python3.1.3-5

searching google/etc doesn't give any light on this...

any ideas as to what's going on here?

if needed, i could supply the relevant segment of the apache config file.

thanks

bruce
bedouglas@earthlink.net


From dmkurilov at mail.ru  Fri Mar  4 01:05:00 2005
From: dmkurilov at mail.ru (Dmitriy Kurilov)
Date: Fri Mar  4 01:05:03 2005
Subject: [mod_python] And how to use <%@ include %> directive ?
Message-ID: <E1D75vo-000P3f-00.dmkurilov-mail-ru@f29.mail.ru>

How do you do, everybody.

Please, help me a little.

When I try to use include directive it includes nothing.
For example:

<%
if username == 'Greptham':
        #
%>
<%@ include file='/full/path/to/file' %>

, but it includes nothing... Unfortunately... Even if I just wrote:
<@ include file='/path/to/file' %>

How to use it?
From grahamd at dscpl.com.au  Fri Mar  4 01:19:11 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Fri Mar  4 01:19:18 2005
Subject: [mod_python] could not import mod_python.apache
Message-ID: <1109917151.30866@dscpl.user.openhosting.com>

bruce wrote ..
> hi...
> 
> i'm trying to implement 'trac' (trac.edgewall.com) and seem to be running
> into an issue.
> 
> i'm having an issue where i'm geting a 'could not import mod_python.apache'
> error in my apache error log file.
> 
> i'm running linux rh8.0, apache2.50, mod_python3.1.3-5
> 
> searching google/etc doesn't give any light on this...
> 
> any ideas as to what's going on here?
> 
> if needed, i could supply the relevant segment of the apache config file.

Config file information can always be useful, but in this case possibly
not unless it contains a PythonPath setting which totally overrides the
standard Python search path, which would be wrong.

Anyway, the basic problem here seems to be that the mod_python module
cannot find "mod_python.apache" which is normally installed into the
Python site-packages directory for the version of Python being used.

Possibilities are that it isn't installed, or that it is installed into a different
version of Python than what Apache is using. How many versions of
Apache do you have on your box?

If mod_python has been installed, you can determine some stuff about
it by executing "python" itself and attempting to import the module
"mod_python.psp". For example:

  ~ [510]$ python
  Python 2.3 (#1, Sep 13 2003, 00:49:11) 
  [GCC 3.3 20030304 (Apple Computer, Inc. build 1495)] on darwin
  Type "help", "copyright", "credits" or "license" for more information.
  >>> import mod_python.psp

If you see a Python exception of the form:

  ImportError: No module named _apache

it means that you have mod_python version 3.1. If you see the Python exception:

  ImportError: No module named psp

it means that you only have version 2.7. Finally, if you instead see the Python exception:

  ImportError: No module named mod_python.psp

it means that mod_python isn't installed after all, or at least not for the version of
Python you are trying to use.

Graham
From azurit at pobox.sk  Fri Mar  4 01:59:29 2005
From: azurit at pobox.sk (azurIt)
Date: Fri Mar  4 01:59:35 2005
Subject: [mod_python] options to suppress error when accessing module
	directly with Publisher
Message-ID: <200503040659.j246xSWQ009407@www5.pobox.sk>

hi,

i already reported this bug (but not received an answer
yet..) and it can be easily fixed. just edit publisher.py,
find this code:
    if func_path[-1] == ".":
        func_path = func_path[:-1]

    # if any part of the path begins with "_", abort
    if func_path[0] == '_' or string.count(func_path, "._"):
        raise apache.SERVER_RETURN, apache.HTTP_NOT_FOUND

and and replace it with this:
    if func_path != "" and func_path[-1] == ".":
        func_path = func_path[:-1]

    # if any part of the path begins with "_", abort
    if func_path != "":
        if func_path[0] == '_' or string.count(func_path,
"._"):
            raise apache.SERVER_RETURN, apache.HTTP_NOT_FOUND



and there is also another bug. when you will try to refer to a
function in non-existing script, you will get ImportError, for
example http://192.168.0.1/non-existing-script/anything-here .
this can be easily fixed too:

find this:
    module = apache.import_module(module_name, _req, [path])

replace with this:
    try:
        module = apache.import_module(module_name, _req,
[path])
    except ImportError:
        raise apache.SERVER_RETURN, apache.HTTP_NOT_FOUND


these bugs probably 'works' only in 2.7.x

azurIt


> Graham Dumpleton wrote:
> > Yep, you must be using mod_python 2.7.X as there I get:
> 
> I am. I'm sorry I didn't test it on my 3.1 installation,
where it works  > as expected. I made a wrong assumption when I
glanced at the current  > docs for info on Publisher traversal:
> 
>  
http://www.modpython.org/live/current/doc-html/hand-pub-alg-trav.html > 
> It turns out that this example refers to the module *and*
function,  > which are both named index:
> 
>   http://www.somehost/index/ will return "We are in index()"
> 
> Thanks for pointing out the 3.1 behaviour.
> 
> > This is one of the benefits of having publisher code which
is outside   > > of the main
> > release. It can be made to work the same with both 2.7.X
and 3.1.X   > > versions of mod_python
> > and you don't have to suffer the fact that such bugs in
2.7.X will most   > > likely never
> > be fixed.
> 
> True, but I'm revamping the site in preparation for upgrading
to apache  > 2.x/mod_python 3.x, where it won't be an issue.
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
> 

____________________________________
EPI.sk Zbierka zakonov a uplne znenia online.
Zakony, vyhlasky, nariadenia, denna aktualizacia.
Najdete na stranke http://www.epi.sk/zbierka.htm


From grahamd at dscpl.com.au  Fri Mar  4 03:46:38 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Fri Mar  4 03:46:47 2005
Subject: [mod_python] options to suppress error when accessing module
	directly with Publisher
In-Reply-To: <200503040659.j246xSWQ009407@www5.pobox.sk>
References: <200503040659.j246xSWQ009407@www5.pobox.sk>
Message-ID: <15714cf255306ca5188f16b8f560b9c3@dscpl.com.au>

Bugs reported on the mailing list inevitably get lost over time. You 
should
instead log any bugs at:

   http://issues.apache.org/jira/browse/MODPYTHON?report=select

It is preferable if you can check whether the problem also exists in 
3.1.X
and note that in the bug report.

 From what I can tell, both things you talk about are addressed in 3.1.X.

Graham

On 04/03/2005, at 5:59 PM, azurIt wrote:

> hi,
>
> i already reported this bug (but not received an answer
> yet..) and it can be easily fixed. just edit publisher.py,
> find this code:
>     if func_path[-1] == ".":
>         func_path = func_path[:-1]
>
>     # if any part of the path begins with "_", abort
>     if func_path[0] == '_' or string.count(func_path, "._"):
>         raise apache.SERVER_RETURN, apache.HTTP_NOT_FOUND
>
> and and replace it with this:
>     if func_path != "" and func_path[-1] == ".":
>         func_path = func_path[:-1]
>
>     # if any part of the path begins with "_", abort
>     if func_path != "":
>         if func_path[0] == '_' or string.count(func_path,
> "._"):
>             raise apache.SERVER_RETURN, apache.HTTP_NOT_FOUND
>
>
>
> and there is also another bug. when you will try to refer to a
> function in non-existing script, you will get ImportError, for
> example http://192.168.0.1/non-existing-script/anything-here .
> this can be easily fixed too:
>
> find this:
>     module = apache.import_module(module_name, _req, [path])
>
> replace with this:
>     try:
>         module = apache.import_module(module_name, _req,
> [path])
>     except ImportError:
>         raise apache.SERVER_RETURN, apache.HTTP_NOT_FOUND
>
>
> these bugs probably 'works' only in 2.7.x
>
> azurIt
>
>
>> Graham Dumpleton wrote:
>>> Yep, you must be using mod_python 2.7.X as there I get:
>>
>> I am. I'm sorry I didn't test it on my 3.1 installation,
> where it works  > as expected. I made a wrong assumption when I
> glanced at the current  > docs for info on Publisher traversal:
>>
>>
> http://www.modpython.org/live/current/doc-html/hand-pub-alg-trav.html >
>> It turns out that this example refers to the module *and*
> function,  > which are both named index:
>>
>>   http://www.somehost/index/ will return "We are in index()"
>>
>> Thanks for pointing out the 3.1 behaviour.
>>
>>> This is one of the benefits of having publisher code which
> is outside   > > of the main
>>> release. It can be made to work the same with both 2.7.X
> and 3.1.X   > > versions of mod_python
>>> and you don't have to suffer the fact that such bugs in
> 2.7.X will most   > > likely never
>>> be fixed.
>>
>> True, but I'm revamping the site in preparation for upgrading
> to apache  > 2.x/mod_python 3.x, where it won't be an issue.
>> _______________________________________________
>> Mod_python mailing list
>> Mod_python@modpython.org
>> http://mailman.modpython.org/mailman/listinfo/mod_python
>>
>
> ____________________________________
> EPI.sk Zbierka zakonov a uplne znenia online.
> Zakony, vyhlasky, nariadenia, denna aktualizacia.
> Najdete na stranke http://www.epi.sk/zbierka.htm
>
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python

From lroubeyrie at limair.asso.fr  Fri Mar  4 04:10:39 2005
From: lroubeyrie at limair.asso.fr (Lionel Roubeyrie)
Date: Fri Mar  4 05:12:55 2005
Subject: [mod_python] Red-Hat vs Debian
Message-ID: <200503041010.40183.lroubeyrie@limair.asso.fr>

Hi all,
I go in trouble with two servers, one running under Debian Sarge with 
Apache2 version 2.0.53
Python 2.3.5
mod_python 3.1.3
and one under RedHat 3ES with
Apache 2.0.46
Python 2.2.3
mod_python 3.0.3

The two servers have the same files, but I can't configure them to show the 
same things :
with Debian, all work fine :
<Directory /home/lionel/Developpement/PREVAIR_LIMAIR/CARTAIR>
        Order allow,deny
        Allow from all
        Options Indexes Includes FollowSymLinks MultiViews
        AddHandler mod_python .py
        PythonHandler mod_python.publisher
        PythonDebug On
</Directory>
But if I put this conf in RedHat, The page is not passed in the publisher, the 
text of the .py file is directly printed on the screen.
I have modified 
AddHandler mod_python .py 
by
AddHandler python-program .py
, the pages are correctly diplayed this time, but the internals links don't 
work anymore, like in the page integration.py, the link
<a href='integration/prevair'> doesn't work, but
<a href='integration.py /prevair'> is ok.
Do I have to change all the links in all my pages?




-- 
Lionel Roubeyrie - lroubeyrie@limair.asso.fr
LIMAIR
http://www.limair.asso.fr

From grahamd at dscpl.com.au  Fri Mar  4 05:25:25 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Fri Mar  4 05:25:35 2005
Subject: [mod_python] Red-Hat vs Debian
In-Reply-To: <200503041010.40183.lroubeyrie@limair.asso.fr>
References: <200503041010.40183.lroubeyrie@limair.asso.fr>
Message-ID: <73453db4648173b81a22f972ff016b9e@dscpl.com.au>

What happens if you turn off MultiViews, it can give problems sometimes
in Apache 2.0 when using mod_python.

On 04/03/2005, at 8:10 PM, Lionel Roubeyrie wrote:

> Hi all,
> I go in trouble with two servers, one running under Debian Sarge with
> Apache2 version 2.0.53
> Python 2.3.5
> mod_python 3.1.3
> and one under RedHat 3ES with
> Apache 2.0.46
> Python 2.2.3
> mod_python 3.0.3
>
> The two servers have the same files, but I can't configure them to 
> show the
> same things :
> with Debian, all work fine :
> <Directory /home/lionel/Developpement/PREVAIR_LIMAIR/CARTAIR>
>         Order allow,deny
>         Allow from all
>         Options Indexes Includes FollowSymLinks MultiViews
>         AddHandler mod_python .py
>         PythonHandler mod_python.publisher
>         PythonDebug On
> </Directory>
> But if I put this conf in RedHat, The page is not passed in the 
> publisher, the
> text of the .py file is directly printed on the screen.
> I have modified
> AddHandler mod_python .py
> by
> AddHandler python-program .py
> , the pages are correctly diplayed this time, but the internals links 
> don't
> work anymore, like in the page integration.py, the link
> <a href='integration/prevair'> doesn't work, but
> <a href='integration.py /prevair'> is ok.
> Do I have to change all the links in all my pages?
>
>
>
>
> -- 
> Lionel Roubeyrie - lroubeyrie@limair.asso.fr
> LIMAIR
> http://www.limair.asso.fr
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python

From adithya.buddhavarapu at ORACLE.COM  Fri Mar  4 10:51:38 2005
From: adithya.buddhavarapu at ORACLE.COM (Adithya Buddhavarapu)
Date: Fri Mar  4 12:08:15 2005
Subject: [mod_python] Unable to execute python sample script 
Message-ID: <4228840A.9040908@oracle.com>

An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20050304/8390e518/attachment.html
-------------- next part --------------
A non-text attachment was scrubbed...
Name: adithya.buddhavarapu.vcf
Type: text/x-vcard
Size: 138 bytes
Desc: not available
Url : http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20050304/8390e518/adithya.buddhavarapu.vcf
From alan at goatpunch.com  Fri Mar  4 13:42:09 2005
From: alan at goatpunch.com (Alan Davies)
Date: Fri Mar  4 13:42:12 2005
Subject: [mod_python] Module reload/derived class problem
Message-ID: <1109961729.6041.216581352@webmail.messagingengine.com>

Hi,

I just wanted to contribute some information about a problem I'd been
having, for a while that I couldn't find a clear answer to anywhere.
It's a combination of two problems that I'd seen discussed in different
places.

The problem was this:

    I created a class 'A', in it's own module, that serves up a dynamic
    site.

    I then derived a class 'B' from 'A', that adds a few extras. Some of
    'A's methods were overridden, deferring functionality to the base
    class by explicitly calling 'A' (e.g. calling A.foo(self) from
    within
    B::foo()).

    Everything seemed to work as expected, but once in a while I would
    get an error like this when a method on 'B' was called:

        TypeError: unbound method foo() must be called with A instance 
                   as first argument (got B instance instead)

    The error would go away when I restarted Apache.

The problem was, of course, caused by the module containing 'A' being
reloaded. The reloads would happen when I made a change to 'A', which is
called directly by mod python. Module 'A' would reload when I modified
it, which I would do occasionally, without thinking to test 'B' which
shouldn't have been impacted by the changes.

The reloaded class 'A' is a different class from the original 'A'. I
suppose this has to happen when a module is reloaded, and it's probably
a feature that just looks like a bug.

The problem can be demonstrated without even using mod_python, by the
following simple example:

------ file testa.py ---------

class A:
    def foo(self):
        print "A:foo"

-----file testderive.py -----

import testa

class B(testa.A):
    def foo(self):
        print "B::foo"
        testa.A.foo(self)

b = B()

print "first request:"
b.foo()

# simulate mod_python performing a reload
reload(testa)

print "second request:"
b.foo()

---- testderive.py output ---------

>>> 
first request:
B::foo
A:foo
second request:
B::foo
Traceback (most recent call last):
  File "testderive.py", line 16, in ?
    b.foo()
  File "testderive.py", line 6, in foo
    testa.A.foo(self)
TypeError: unbound method foo() must be called with A instance as first
argument (got B instance instead)

------------------------------------

Now that I've realised why I get that error message, I can avoid the
problem by brute force either by 'touch'ing 'B' every time I change
'A', or by restarting Apache after a change to 'A' (instead of a week
later when I notice the problem).

More advanced ideas for fixing the module reloading problem would be
appreciated.

Hope someone finds this useful,

--Alan
From grahamd at dscpl.com.au  Fri Mar  4 21:55:32 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Fri Mar  4 21:55:41 2005
Subject: [mod_python] Module reload/derived class problem
In-Reply-To: <1109961729.6041.216581352@webmail.messagingengine.com>
References: <1109961729.6041.216581352@webmail.messagingengine.com>
Message-ID: <209c09c658c8cc014e5c747ed8ce2fd3@dscpl.com.au>


On 05/03/2005, at 5:42 AM, Alan Davies wrote:

> Now that I've realised why I get that error message, I can avoid the
> problem by brute force either by 'touch'ing 'B' every time I change
> 'A', or by restarting Apache after a change to 'A' (instead of a week
> later when I notice the problem).
>
> More advanced ideas for fixing the module reloading problem would be
> appreciated.

The problem derives from two short comings of the present module loading
system used by mod_python. The first is that module reloads are done on
top of the already loaded module. This in itself can cause some issues.
The second is that the module loading system isn't able to determine 
that
a parent module should be reloaded when a child module it depends on has
been changed.

The trigger for your problem is the second of these issues, but the 
cause
of the error actually derives from the first issue.

Namely, the parent module module has what are effectively stale 
references
to a type object which has since been superseded because the child 
module
was re-imported as a result of some other request. When the child module
code is called it no longer identifies the instance as being of the same
type because the type object for the child has since been changed.

FWIW, the module loading system in Vampire doesn't suffer the problem.
When I write the code as:

## testa.py

class A:
   def foo(self):
     return "A:foo"

## testdrive.py

import vampire
import os

directory = os.path.dirname(__file__)
testa = vampire.importModule("testa",directory,__req__)

class B(testa.A):
   def foo(self):
     return "B::foo", testa.A.foo(self)

b = B()

and using the new publisher support in version of Vampire I am working 
on,
if I access "/testdrive/b/foo" and then touch "testa.py" it still works
when I access "/testdrive/b/foo" again.

This is because Vampire has a means of determining that "testdrive.py"
depends on "testa.py" and thus when "testa.py" is modified, it will 
without
any prompting reload both "testdrive.py" and "testa.py" on the 
subsequent
request even though "testdrive.py" hadn't actually been touched.

This is illustrated by logged messages. After a fresh restart, access 
the
URL:

[Sat Mar 05 13:41:57 2005] [notice] mod_python: (Re)importing module 
'vampire'
[Sat Mar 05 13:41:57 2005] [notice] vampire: Importing module 
'/Users/grahamd/Sites/vampire/examples/publisher/testdrive.py'
[Sat Mar 05 13:41:57 2005] [notice] vampire: Importing module 
'/Users/grahamd/Sites/vampire/examples/publisher/testa.py'

Then run "touch testa.py". The "testdrive.py" file has not been touched 
or
modified in any way and thus still has same modification time. Then 
access
the URL again:

[Sat Mar 05 13:42:10 2005] [notice] vampire: Reimporting module 
'/Users/grahamd/Sites/vampire/examples/publisher/testdrive.py'
[Sat Mar 05 13:42:10 2005] [notice] vampire: Reimporting module 
'/Users/grahamd/Sites/vampire/examples/publisher/testa.py'

Thereby showing how both parent and child were reimported even though 
only
child had been changed.

It is because it was detected that the parent depended on the modified 
child and
was also reloaded, you don't suffer the sort of problem you are seeing.

Thus for most cases the Vampire module loading system is a bit more 
resilient
that the default provided with mod_python. I still know of some cases 
which
it wouldn't be able to handle, but it is impossible to make any 
reloading
system completely perfect because of the various ways that type objects 
and
class instances could be cached and then later used again in the 
context of
freshly reloaded code which has a different idea of what it then 
expects.

Thus, as to a technical solution, you might consider using Vampire. If 
you
want the publisher support, you'll either have to wait for the next 
version
of Vampire or indicate that you are prepared to work with a beta version
which some others are also trying.

Graham

From grahamd at dscpl.com.au  Fri Mar  4 21:59:30 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Fri Mar  4 21:59:36 2005
Subject: [mod_python] Unable to execute python sample script 
In-Reply-To: <4228840A.9040908@oracle.com>
References: <4228840A.9040908@oracle.com>
Message-ID: <f94efee0b97ba56f6d84a5feae0d896a@dscpl.com.au>


If having any difficulties with mod_python, it is always a good idea to  
consult the Apache error log file. The log file is also useful for  
finding information about Python modules that mod_python is loading.

When starting out with mod_python, the first thing you would want to  
look for in the error log is evidence that mod_python is actually being  
loaded by Apache. The startup message of mod_python takes the following  
form:

[Tue Feb 01 16:08:21 2005] [notice] Apache/2.0.51 (Unix)
   mod_python/3.1.3 Python/2.3 configured -- resuming normal operations

The first time after a restart that a particular content handler needs  
to be loaded, mod_python will output a message into the log file to  
indicate this. The import message for the module containing the content  
handler will be of the form:

[Tue Feb 01 16:09:32 2005] [notice] mod_python: (Re)importing module  
'mptest'

If you can't find the startup mod_python message in the log file,  
Apache may not have been restarted properly or the loading of the  
module may not have been configured correctly.

Thus, first see if you can find any of these messages.


On 05/03/2005, at 2:51 AM, Adithya Buddhavarapu wrote:

>  Hi,
>  I have the following configuration:
>  Apache/2.0.53 (Win32) mod_python/3.1.3 Python/2.3.3 on Windows 2000.
>
>  1. I added the following information to httpd.conf
>  -----------------------------httpd.conf---------------------
>  a. LoadModule python_module modules/mod_python.s
>
>  b.
> <Directory /htdocs/test>
>  ??????? AddHandler python_module .py
>  ??? ??? ??? ??? PythonHandler mptest
>  ??????? PythonDebug On
>  </Directory>
> -----------------------------------------------------------
>
>  2. The mptest.py is there under apacheroot/htdocs/test folder
>
>
>  3. The mptest.py has
>  --------------------------------------
>  from mod_python import apache
>
>  ??? def handler(req):
>  ??????? req.content_type = "text/html"
>  ??????? req.write("Hello World!")
>  ??????? return apache.OK
>  -------------------------------------
>
>  When I try "http://localhost/test/mptest.py" the above text (in  
> mptest.py) is returned. It does not seem like mod_python is processing  
> it. How do I debug? Appreciate and suggestions.
>  Thanks,
>  Adithya
>
>   
> <adithya.buddhavarapu.vcf>_____________________________________________ 
> __
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python


From grahamd at dscpl.com.au  Sat Mar  5 19:43:14 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Sat Mar  5 19:43:24 2005
Subject: [mod_python] Re: python/linux guru needed.. now!!!!
In-Reply-To: <006b01c521d0$260fc8d0$0301a8c0@Mesa.com>
References: <006b01c521d0$260fc8d0$0301a8c0@Mesa.com>
Message-ID: <a4704b47c443560b3be0c3d8c81c3969@dscpl.com.au>


On 06/03/2005, at 9:10 AM, bruce wrote:

> graham...
>
> i did post this issue/question to the modpython group... although i 
> haven't
> posted there for a guru...

And on the mod_python mailing list you were asked some questions and
given some things to try. You didn't however give an answer to the
questions. We can't read minds. :-)

> but in answer to the rest of your questions....
>
> here's what i'm doing...
>
> python
> pyhton 2.3.3 ......
> type help...
>>>> import mod_python.psp
>   .
>   .
>   .
> ImportError: No module named mod_python

Getting this error in itself is strange, as trying to import a submodule
of a module that does not exist, would usually yield:

   ImportError: No module named mod_python.psp

if the parent module does not exist.

Either way, it simply doesn't look like mod_python is installed for that
version of Python. Does saying:

   import mod_python

fail as well. What error does it give in that situation?

You can verify manually whether it has been installed by finding the 
"site-packages"
directory for the Python installation and looking in there for a 
mod_python
directory.

Note that there are two parts to the installation of mod_python, there 
is the
Apache handler .so which gets installed in Apache modules directory and 
the
Python code modules which get installed in "site-packages". So far it 
seems
it is the latter that does not exist.

Anyway, if you don't know where to look for the "site-packages" 
directory, run
in Python:

   import sys
   print sys.prefix

This should tell you where Python stuff is being installed. For Python 
2.3, the
site-packages directory would be in a subdirectory of that directory 
called:

   lib/python2.3/site-packages

Thus change to directory specified by sys.prefix and then run:

   ls lib/python2.3/site-packages/mod_python

Does that say the directory doesn't exist? If it doesn't exist, then 
your installation
isn't complete. If it does exist, what is in that directory?

I also ask again the same question as posed in the original mailing 
list response to
you, do you possibly have more than one version of Python installed on 
your system?

> i'm doing the above from the linux command line
>
>
> i have
> RH8.0
> python-2.3.3-6
> mod_python-3.1.3-5
> apache/2.0.50 (built from source)
>
>
> so, any ideas!!!
>
> thanks...
>
> bruce
>
>
> -----Original Message-----
> From: python-list-bounces+bedouglas=earthlink.net@python.org
> [mailto:python-list-bounces+bedouglas=earthlink.net@python.org]On 
> Behalf
> Of grahamd@dscpl.com.au
> Sent: Saturday, March 05, 2005 1:56 PM
> To: python-list@python.org
> Subject: Re: python/linux guru needed.. now!!!!
>
>
>
> bruce wrote:
>> hi...
>>
>> i have a situation with a linux rh8 server. i can't seem to get
>> python/mod_python/apache working as one...
>>
>> i can't seem to import mod_python from the python interpreter to
> work, and
>> i'm not sure as to why. i'm fairly convinced that it's a conflict
> issue of
>> some type, but i'm not sure as to how to resolve it...
>>
>> if you are a guru with python/mod_python/linux then i'd like to talk
> with
>> you...
>>
>> searching through google/mailing lists/etc... is getting me nowhere!!
>
> You will do better if you present your problem in the mod_python
> mailing
> list. Go to http://www.modpython.org to get the mailing list details,
> get
> yourself on the list and then post the following information as a
> start.
>
> Which version of mod_python you are using.
>
> Whether you are using the global configuration file or a .htaccess
> file.
>
> The snippet of the Apache configuration you are using to configure
> mod_python and enable its use in the directory you are working in.
>
> Details of any error responses which are being displayed by your web
> browser.
>
> Details of messages, be they notices or error messages, which occur in
> the Apache error log file corresponding to any request you are making
> which is not working.
>
> The full contents of the Python code file for the content handler you
> are
> trying to use.
>
> --
> http://mail.python.org/mailman/listinfo/python-list

From jrraines at comcast.net  Sat Mar  5 21:33:29 2005
From: jrraines at comcast.net (John Raines)
Date: Sat Mar  5 21:33:38 2005
Subject: [mod_python] Re: python/linux guru needed.. now!!!!
In-Reply-To: <a4704b47c443560b3be0c3d8c81c3969@dscpl.com.au>
References: <006b01c521d0$260fc8d0$0301a8c0@Mesa.com>
	<a4704b47c443560b3be0c3d8c81c3969@dscpl.com.au>
Message-ID: <f6dd5b9ea0e747db2c6b9b2c31507e13@comcast.net>

I would say this much more briefly: you can only import mod_python from 
code running under apache; python won't find mod_python otherwise.
On Mar 5, 2005, at 6:43 PM, Graham Dumpleton wrote:

>
> On 06/03/2005, at 9:10 AM, bruce wrote:
>
>> graham...
>>
>> i did post this issue/question to the modpython group... although i 
>> haven't
>> posted there for a guru...
>
> And on the mod_python mailing list you were asked some questions and
> given some things to try. You didn't however give an answer to the
> questions. We can't read minds. :-)
>
>> but in answer to the rest of your questions....
>>
>> here's what i'm doing...
>>
>> python
>> pyhton 2.3.3 ......
>> type help...
>>>>> import mod_python.psp
>>   .
>>   .
>>   .
>> ImportError: No module named mod_python
>
> Getting this error in itself is strange, as trying to import a 
> submodule
> of a module that does not exist, would usually yield:
>
>   ImportError: No module named mod_python.psp
>
> if the parent module does not exist.
>
> Either way, it simply doesn't look like mod_python is installed for 
> that
> version of Python. Does saying:
>
>   import mod_python
>
> fail as well. What error does it give in that situation?
>
> You can verify manually whether it has been installed by finding the 
> "site-packages"
> directory for the Python installation and looking in there for a 
> mod_python
> directory.
>
> Note that there are two parts to the installation of mod_python, there 
> is the
> Apache handler .so which gets installed in Apache modules directory 
> and the
> Python code modules which get installed in "site-packages". So far it 
> seems
> it is the latter that does not exist.
>
> Anyway, if you don't know where to look for the "site-packages" 
> directory, run
> in Python:
>
>   import sys
>   print sys.prefix
>
> This should tell you where Python stuff is being installed. For Python 
> 2.3, the
> site-packages directory would be in a subdirectory of that directory 
> called:
>
>   lib/python2.3/site-packages
>
> Thus change to directory specified by sys.prefix and then run:
>
>   ls lib/python2.3/site-packages/mod_python
>
> Does that say the directory doesn't exist? If it doesn't exist, then 
> your installation
> isn't complete. If it does exist, what is in that directory?
>
> I also ask again the same question as posed in the original mailing 
> list response to
> you, do you possibly have more than one version of Python installed on 
> your system?
>
>> i'm doing the above from the linux command line
>>
>>
>> i have
>> RH8.0
>> python-2.3.3-6
>> mod_python-3.1.3-5
>> apache/2.0.50 (built from source)
>>
>>
>> so, any ideas!!!
>>
>> thanks...
>>
>> bruce
>>
>>
>> -----Original Message-----
>> From: python-list-bounces+bedouglas=earthlink.net@python.org
>> [mailto:python-list-bounces+bedouglas=earthlink.net@python.org]On 
>> Behalf
>> Of grahamd@dscpl.com.au
>> Sent: Saturday, March 05, 2005 1:56 PM
>> To: python-list@python.org
>> Subject: Re: python/linux guru needed.. now!!!!
>>
>>
>>
>> bruce wrote:
>>> hi...
>>>
>>> i have a situation with a linux rh8 server. i can't seem to get
>>> python/mod_python/apache working as one...
>>>
>>> i can't seem to import mod_python from the python interpreter to
>> work, and
>>> i'm not sure as to why. i'm fairly convinced that it's a conflict
>> issue of
>>> some type, but i'm not sure as to how to resolve it...
>>>
>>> if you are a guru with python/mod_python/linux then i'd like to talk
>> with
>>> you...
>>>
>>> searching through google/mailing lists/etc... is getting me nowhere!!
>>
>> You will do better if you present your problem in the mod_python
>> mailing
>> list. Go to http://www.modpython.org to get the mailing list details,
>> get
>> yourself on the list and then post the following information as a
>> start.
>>
>> Which version of mod_python you are using.
>>
>> Whether you are using the global configuration file or a .htaccess
>> file.
>>
>> The snippet of the Apache configuration you are using to configure
>> mod_python and enable its use in the directory you are working in.
>>
>> Details of any error responses which are being displayed by your web
>> browser.
>>
>> Details of messages, be they notices or error messages, which occur in
>> the Apache error log file corresponding to any request you are making
>> which is not working.
>>
>> The full contents of the Python code file for the content handler you
>> are
>> trying to use.
>>
>> --
>> http://mail.python.org/mailman/listinfo/python-list
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>

From grahamd at dscpl.com.au  Sat Mar  5 21:44:14 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Sat Mar  5 21:44:22 2005
Subject: [mod_python] Re: python/linux guru needed.. now!!!!
In-Reply-To: <f6dd5b9ea0e747db2c6b9b2c31507e13@comcast.net>
References: <006b01c521d0$260fc8d0$0301a8c0@Mesa.com>
	<a4704b47c443560b3be0c3d8c81c3969@dscpl.com.au>
	<f6dd5b9ea0e747db2c6b9b2c31507e13@comcast.net>
Message-ID: <03514116052c8ccb976a76f4db193efa@dscpl.com.au>

Not strictly true. You will not be meaningfully be able to do anything 
because
_apache which is builtin to mod_python will not be available, but one 
can learn
various things from the errors which result when you do try and load 
mod_python
from a command line Python.

Repeating some instructions from a previous email:


If mod_python has been installed, you can determine which version is 
being
used by executing "python" itself and attempting to import the module
"mod_python.psp". For example:

   ~ [510]$ python
   Python 2.3 (#1, Sep 13 2003, 00:49:11)
   [GCC 3.3 20030304 (Apple Computer, Inc. build 1495)] on darwin
   Type "help", "copyright", "credits" or "license" for more information.
   >>> import mod_python.psp

If you see a Python exception of the form:

   ImportError: No module named _apache

it means that you have mod_python version 3.1. If you see the Python 
exception:

   ImportError: No module named psp

it means that you only have version 2.7. Finally, if you instead see 
the Python
exception:

   ImportError: No module named mod_python.psp

it means that mod_python isn't installed after all, or at least not for 
the version
of Python you are trying to use.


On 06/03/2005, at 1:33 PM, John Raines wrote:

> I would say this much more briefly: you can only import mod_python 
> from code running under apache; python won't find mod_python 
> otherwise.
> On Mar 5, 2005, at 6:43 PM, Graham Dumpleton wrote:
>
>>
>> On 06/03/2005, at 9:10 AM, bruce wrote:
>>
>>> graham...
>>>
>>> i did post this issue/question to the modpython group... although i 
>>> haven't
>>> posted there for a guru...
>>
>> And on the mod_python mailing list you were asked some questions and
>> given some things to try. You didn't however give an answer to the
>> questions. We can't read minds. :-)
>>
>>> but in answer to the rest of your questions....
>>>
>>> here's what i'm doing...
>>>
>>> python
>>> pyhton 2.3.3 ......
>>> type help...
>>>>>> import mod_python.psp
>>>   .
>>>   .
>>>   .
>>> ImportError: No module named mod_python
>>
>> Getting this error in itself is strange, as trying to import a 
>> submodule
>> of a module that does not exist, would usually yield:
>>
>>   ImportError: No module named mod_python.psp
>>
>> if the parent module does not exist.
>>
>> Either way, it simply doesn't look like mod_python is installed for 
>> that
>> version of Python. Does saying:
>>
>>   import mod_python
>>
>> fail as well. What error does it give in that situation?
>>
>> You can verify manually whether it has been installed by finding the 
>> "site-packages"
>> directory for the Python installation and looking in there for a 
>> mod_python
>> directory.
>>
>> Note that there are two parts to the installation of mod_python, 
>> there is the
>> Apache handler .so which gets installed in Apache modules directory 
>> and the
>> Python code modules which get installed in "site-packages". So far it 
>> seems
>> it is the latter that does not exist.
>>
>> Anyway, if you don't know where to look for the "site-packages" 
>> directory, run
>> in Python:
>>
>>   import sys
>>   print sys.prefix
>>
>> This should tell you where Python stuff is being installed. For 
>> Python 2.3, the
>> site-packages directory would be in a subdirectory of that directory 
>> called:
>>
>>   lib/python2.3/site-packages
>>
>> Thus change to directory specified by sys.prefix and then run:
>>
>>   ls lib/python2.3/site-packages/mod_python
>>
>> Does that say the directory doesn't exist? If it doesn't exist, then 
>> your installation
>> isn't complete. If it does exist, what is in that directory?
>>
>> I also ask again the same question as posed in the original mailing 
>> list response to
>> you, do you possibly have more than one version of Python installed 
>> on your system?
>>
>>> i'm doing the above from the linux command line
>>>
>>>
>>> i have
>>> RH8.0
>>> python-2.3.3-6
>>> mod_python-3.1.3-5
>>> apache/2.0.50 (built from source)
>>>
>>>
>>> so, any ideas!!!
>>>
>>> thanks...
>>>
>>> bruce
>>>
>>>
>>> -----Original Message-----
>>> From: python-list-bounces+bedouglas=earthlink.net@python.org
>>> [mailto:python-list-bounces+bedouglas=earthlink.net@python.org]On 
>>> Behalf
>>> Of grahamd@dscpl.com.au
>>> Sent: Saturday, March 05, 2005 1:56 PM
>>> To: python-list@python.org
>>> Subject: Re: python/linux guru needed.. now!!!!
>>>
>>>
>>>
>>> bruce wrote:
>>>> hi...
>>>>
>>>> i have a situation with a linux rh8 server. i can't seem to get
>>>> python/mod_python/apache working as one...
>>>>
>>>> i can't seem to import mod_python from the python interpreter to
>>> work, and
>>>> i'm not sure as to why. i'm fairly convinced that it's a conflict
>>> issue of
>>>> some type, but i'm not sure as to how to resolve it...
>>>>
>>>> if you are a guru with python/mod_python/linux then i'd like to talk
>>> with
>>>> you...
>>>>
>>>> searching through google/mailing lists/etc... is getting me 
>>>> nowhere!!
>>>
>>> You will do better if you present your problem in the mod_python
>>> mailing
>>> list. Go to http://www.modpython.org to get the mailing list details,
>>> get
>>> yourself on the list and then post the following information as a
>>> start.
>>>
>>> Which version of mod_python you are using.
>>>
>>> Whether you are using the global configuration file or a .htaccess
>>> file.
>>>
>>> The snippet of the Apache configuration you are using to configure
>>> mod_python and enable its use in the directory you are working in.
>>>
>>> Details of any error responses which are being displayed by your web
>>> browser.
>>>
>>> Details of messages, be they notices or error messages, which occur 
>>> in
>>> the Apache error log file corresponding to any request you are making
>>> which is not working.
>>>
>>> The full contents of the Python code file for the content handler you
>>> are
>>> trying to use.
>>>
>>> --
>>> http://mail.python.org/mailman/listinfo/python-list
>>
>> _______________________________________________
>> Mod_python mailing list
>> Mod_python@modpython.org
>> http://mailman.modpython.org/mailman/listinfo/mod_python
>>
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python

From nuno at salgado.no-ip.com  Sat Mar  5 22:11:38 2005
From: nuno at salgado.no-ip.com (Nuno Salgado)
Date: Sat Mar  5 22:12:06 2005
Subject: [mod_python] And how to use <%@ include %> directive ?
References: <E1D75vo-000P3f-00.dmkurilov-mail-ru@f29.mail.ru>
Message-ID: <00a301c521fa$37aecb70$0202a8c0@LUA>

I think you are using it well.

I use it with a relative path to the 'main' file, like:
<%@ include file="../Header.psp"%> or 
<%@ include file="frm.psp"%>
and it works ok (note that the path to the file must be a str constant).

Regards,

----- Original Message ----- 
From: "Dmitriy Kurilov" <dmkurilov@mail.ru>
To: <mod_python@modpython.org>
Sent: Friday, March 04, 2005 6:05 AM
Subject: [mod_python] And how to use <%@ include %> directive ?


How do you do, everybody.

Please, help me a little.

When I try to use include directive it includes nothing.
For example:

<%
if username == 'Greptham':
        #
%>
<%@ include file='/full/path/to/file' %>

, but it includes nothing... Unfortunately... Even if I just wrote:
<@ include file='/path/to/file' %>

How to use it?
_______________________________________________
Mod_python mailing list
Mod_python@modpython.org
http://mailman.modpython.org/mailman/listinfo/mod_python
From lists at tuxdoit.com  Sun Mar  6 15:04:25 2005
From: lists at tuxdoit.com (=?ISO-8859-1?Q?M=E1rio_Gamito?=)
Date: Sun Mar  6 15:04:28 2005
Subject: [mod_python] Can't parse code
Message-ID: <422B6249.6030509@tuxdoit.com>

Hi,

I've installed mod_python in Apache, *carefully* following the 
instructions in the site:

"$ ./configure --with-apxs=/usr/local/apache/bin/apxs
make
make install"

After that, i've configured (and restarted) Apache:
"LoadModule python_module libexec/mod_python.so

(...)

<Directory /var/www/html>
         AddHandler mod_python .py
         PythonHandler mptest
         PythonDebug On
</Directory>"

wrote the example in the tutorial:
"from mod_python import apache

     def handler(req):
         req.write("Hello World!")
         return apache.OK"

and put it in /var/www/html in a file named mptest.py

--

Now, the problems :(

Apache won't start if i have the lines:
"PythonHandler mptest
PythonDebug On"

It says:
"Invalid Command PythonHandler, perhaps mis-spelled or defined by a 
module not included in the server configuration"
"Invalid Command PythonDebug, perhaps mis-spelled or defined by a module 
not included in the server configuration".

If i comment those lines, Apache starts but mod_python doesn't parse the 
code, it just displays it in the browser :(

If i use a .htaccess file in /var/www/html, same thing happens.

I've read the FAQ, googled for the problem, but did not found any 
suggestion that solved this issue.

I'm using Apache 1.3.33, mod_python 2.7.11 and Python 2.3.4

I'm stuck on this :(

Any help would be apreciated.

Warm Regards,
M?rio Gamito
From grahamd at dscpl.com.au  Sun Mar  6 16:06:36 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Sun Mar  6 16:06:43 2005
Subject: [mod_python] Can't parse code
In-Reply-To: <422B6249.6030509@tuxdoit.com>
References: <422B6249.6030509@tuxdoit.com>
Message-ID: <3e5e2e279ffac1728de52621bca74f13@dscpl.com.au>

You used the wrong documentation. You have installed 2.7.X but followed
instructions for 3.1.X for setting up test.

Change config to:

<Directory /var/www/html>
         AddHandler python-program .py
         PythonHandler mptest
         PythonDebug On
</Directory>"

Ie. change "mod_python" to "python-program".

Also recommended you change mptest.py code to:

from mod_python import apache

def handler(req):
         req.content_type = "text/plain"
         req.send_http_headers()
         req.write("Hello World!")
         return apache.OK

Ie., exlicitly set content type to "text/plain", otherwise you are at
mercy of server/browser config as to what type it is sent as, with 
browsers
sometimes asking you to save file rather than view it.

On 07/03/2005, at 7:04 AM, M?rio Gamito wrote:

> Hi,
>
> I've installed mod_python in Apache, *carefully* following the 
> instructions in the site:
>
> "$ ./configure --with-apxs=/usr/local/apache/bin/apxs
> make
> make install"
>
> After that, i've configured (and restarted) Apache:
> "LoadModule python_module libexec/mod_python.so
>
> (...)
>
> <Directory /var/www/html>
>         AddHandler mod_python .py
>         PythonHandler mptest
>         PythonDebug On
> </Directory>"
>
> wrote the example in the tutorial:
> "from mod_python import apache
>
>     def handler(req):
>         req.write("Hello World!")
>         return apache.OK"
>
> and put it in /var/www/html in a file named mptest.py
>
> --
>
> Now, the problems :(
>
> Apache won't start if i have the lines:
> "PythonHandler mptest
> PythonDebug On"
>
> It says:
> "Invalid Command PythonHandler, perhaps mis-spelled or defined by a 
> module not included in the server configuration"
> "Invalid Command PythonDebug, perhaps mis-spelled or defined by a 
> module not included in the server configuration".
>
> If i comment those lines, Apache starts but mod_python doesn't parse 
> the code, it just displays it in the browser :(
>
> If i use a .htaccess file in /var/www/html, same thing happens.
>
> I've read the FAQ, googled for the problem, but did not found any 
> suggestion that solved this issue.
>
> I'm using Apache 1.3.33, mod_python 2.7.11 and Python 2.3.4
>
> I'm stuck on this :(
>
> Any help would be apreciated.
>
> Warm Regards,
> M?rio Gamito
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python


From lists at tuxdoit.com  Sun Mar  6 17:25:46 2005
From: lists at tuxdoit.com (=?ISO-8859-1?Q?M=E1rio_Gamito?=)
Date: Sun Mar  6 17:25:49 2005
Subject: [mod_python] Can't parse code
In-Reply-To: <3e5e2e279ffac1728de52621bca74f13@dscpl.com.au>
References: <422B6249.6030509@tuxdoit.com>
	<3e5e2e279ffac1728de52621bca74f13@dscpl.com.au>
Message-ID: <422B836A.7020607@tuxdoit.com>

Hi Graham,

Thank you very much for your help, but the proble persists :(

Apache still refuses to start with "PythonHandler mptest" in httpd.conf 
and without that the ouput to the browser is still the python code.

Any idea ?

Warm Regards,
M?rio Gamito


Graham Dumpleton wrote:
> You used the wrong documentation. You have installed 2.7.X but followed
> instructions for 3.1.X for setting up test.
> 
> Change config to:
> 
> <Directory /var/www/html>
>         AddHandler python-program .py
>         PythonHandler mptest
>         PythonDebug On
> </Directory>"
> 
> Ie. change "mod_python" to "python-program".
> 
> Also recommended you change mptest.py code to:
> 
> from mod_python import apache
> 
> def handler(req):
>         req.content_type = "text/plain"
>         req.send_http_headers()
>         req.write("Hello World!")
>         return apache.OK
> 
> Ie., exlicitly set content type to "text/plain", otherwise you are at
> mercy of server/browser config as to what type it is sent as, with browsers
> sometimes asking you to save file rather than view it.
> 
> On 07/03/2005, at 7:04 AM, M?rio Gamito wrote:
> 
>> Hi,
>>
>> I've installed mod_python in Apache, *carefully* following the 
>> instructions in the site:
>>
>> "$ ./configure --with-apxs=/usr/local/apache/bin/apxs
>> make
>> make install"
>>
>> After that, i've configured (and restarted) Apache:
>> "LoadModule python_module libexec/mod_python.so
>>
>> (...)
>>
>> <Directory /var/www/html>
>>         AddHandler mod_python .py
>>         PythonHandler mptest
>>         PythonDebug On
>> </Directory>"
>>
>> wrote the example in the tutorial:
>> "from mod_python import apache
>>
>>     def handler(req):
>>         req.write("Hello World!")
>>         return apache.OK"
>>
>> and put it in /var/www/html in a file named mptest.py
>>
>> -- 
>>
>> Now, the problems :(
>>
>> Apache won't start if i have the lines:
>> "PythonHandler mptest
>> PythonDebug On"
>>
>> It says:
>> "Invalid Command PythonHandler, perhaps mis-spelled or defined by a 
>> module not included in the server configuration"
>> "Invalid Command PythonDebug, perhaps mis-spelled or defined by a 
>> module not included in the server configuration".
>>
>> If i comment those lines, Apache starts but mod_python doesn't parse 
>> the code, it just displays it in the browser :(
>>
>> If i use a .htaccess file in /var/www/html, same thing happens.
>>
>> I've read the FAQ, googled for the problem, but did not found any 
>> suggestion that solved this issue.
>>
>> I'm using Apache 1.3.33, mod_python 2.7.11 and Python 2.3.4
>>
>> I'm stuck on this :(
>>
>> Any help would be apreciated.
>>
>> Warm Regards,
>> M?rio Gamito
>> _______________________________________________
>> Mod_python mailing list
>> Mod_python@modpython.org
>> http://mailman.modpython.org/mailman/listinfo/mod_python
> 
> 

From grahamd at dscpl.com.au  Sun Mar  6 18:06:57 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Sun Mar  6 18:07:03 2005
Subject: [mod_python] Can't parse code
Message-ID: <1110150417.10290@dscpl.user.openhosting.com>

Do you see any messages of the form:

[Fri Sep 24 15:14:01 2004] [notice] mod_python: Creating 32 session mutexes based on 150 max processes and 0 max threads. 
[Fri Sep 24 15:14:01 2004] [notice] Apache/2.0.51 (Unix) mod_python/3.1.3 Python/2.3 configured -- resuming normal operations 

in the Apache error_log file where mod_python is mentioned. This should
be output when mod_python module is loaded by Apache, although the
exact details of version, number of process and threads will be different.

For your particular Apache installation, are modules definitely installed in
a "libexec" subdirectory? Verify where the mod_python.so is installed and
ensure config file is the same. Try using an absolute path to the location
of the mod_python.so rather than a relative path.

If there is some sort of problem with mod_python.so not finding required
libraries, would expect some other error message to be logged, so see if
there are any strange error messages at all in the error_log file.

Graham

=?ISO-8859-1?Q?M=E1rio_Gamito?= wrote ..
> Hi Graham,
> 
> Thank you very much for your help, but the proble persists :(
> 
> Apache still refuses to start with "PythonHandler mptest" in httpd.conf
> and without that the ouput to the browser is still the python code.
> 
> Any idea ?
> 
> Warm Regards,
> M?rio Gamito
> 
> 
> Graham Dumpleton wrote:
> > You used the wrong documentation. You have installed 2.7.X but followed
> > instructions for 3.1.X for setting up test.
> > 
> > Change config to:
> > 
> > <Directory /var/www/html>
> >         AddHandler python-program .py
> >         PythonHandler mptest
> >         PythonDebug On
> > </Directory>"
> > 
> > Ie. change "mod_python" to "python-program".
> > 
> > Also recommended you change mptest.py code to:
> > 
> > from mod_python import apache
> > 
> > def handler(req):
> >         req.content_type = "text/plain"
> >         req.send_http_headers()
> >         req.write("Hello World!")
> >         return apache.OK
> > 
> > Ie., exlicitly set content type to "text/plain", otherwise you are at
> > mercy of server/browser config as to what type it is sent as, with browsers
> > sometimes asking you to save file rather than view it.
> > 
> > On 07/03/2005, at 7:04 AM, M?rio Gamito wrote:
> > 
> >> Hi,
> >>
> >> I've installed mod_python in Apache, *carefully* following the 
> >> instructions in the site:
> >>
> >> "$ ./configure --with-apxs=/usr/local/apache/bin/apxs
> >> make
> >> make install"
> >>
> >> After that, i've configured (and restarted) Apache:
> >> "LoadModule python_module libexec/mod_python.so
> >>
> >> (...)
> >>
> >> <Directory /var/www/html>
> >>         AddHandler mod_python .py
> >>         PythonHandler mptest
> >>         PythonDebug On
> >> </Directory>"
> >>
> >> wrote the example in the tutorial:
> >> "from mod_python import apache
> >>
> >>     def handler(req):
> >>         req.write("Hello World!")
> >>         return apache.OK"
> >>
> >> and put it in /var/www/html in a file named mptest.py
> >>
> >> -- 
> >>
> >> Now, the problems :(
> >>
> >> Apache won't start if i have the lines:
> >> "PythonHandler mptest
> >> PythonDebug On"
> >>
> >> It says:
> >> "Invalid Command PythonHandler, perhaps mis-spelled or defined by a
> >> module not included in the server configuration"
> >> "Invalid Command PythonDebug, perhaps mis-spelled or defined by a 
> >> module not included in the server configuration".
> >>
> >> If i comment those lines, Apache starts but mod_python doesn't parse
> >> the code, it just displays it in the browser :(
> >>
> >> If i use a .htaccess file in /var/www/html, same thing happens.
> >>
> >> I've read the FAQ, googled for the problem, but did not found any 
> >> suggestion that solved this issue.
> >>
> >> I'm using Apache 1.3.33, mod_python 2.7.11 and Python 2.3.4
> >>
> >> I'm stuck on this :(
> >>
> >> Any help would be apreciated.
> >>
> >> Warm Regards,
> >> M?rio Gamito
> >> _______________________________________________
> >> Mod_python mailing list
> >> Mod_python@modpython.org
> >> http://mailman.modpython.org/mailman/listinfo/mod_python
> > 
> > 
From grahamd at dscpl.com.au  Sun Mar  6 18:18:20 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Sun Mar  6 18:18:22 2005
Subject: [mod_python] Can't parse code
Message-ID: <1110151100.15497@dscpl.user.openhosting.com>

It should have been:

  req.send_http_header()

Ie., not plural.

Because I had asked you to set the "content_type", in 2.7.X it is necessary
to explicitly trigger the flushing out of the HTTP response headers before
writing back any actual page content. In 3.1.X, the headers are automatically
flushed out the first time you write back actual content. Thus, if you want
code to be portable between 2.7.X and 3.1.X, you need to call the method
req.send_http_header().

The consequences of not doing it in 2.7.X is that if the Apache configuration
isn't setup to send back a default content type if not set in the response
explicitly, then a browser will use the extension appearing on the request
to work out what to do with the response. Most of the time a ".py" extension
means nothing to a browser and it will pop up a dialog asking you to save
the file rather than simply display it.

Graham

=?ISO-8859-1?Q?M=E1rio_Gamito?= wrote ..
> Hi Graham,
> 
> Meanwhile i've manged to solve the problem.
> Your line "req.send_http_headers()" gives an error (what is its 
> importance ?).
> If i remove it, then everything works just fine.
> 
> Thank you very much for your help.
> 
> Warm regards,
> M?rio Gamito
> 
> Graham Dumpleton wrote:
> > Do you see any messages of the form:
> > 
> > [Fri Sep 24 15:14:01 2004] [notice] mod_python: Creating 32 session mutexes
> based on 150 max processes and 0 max threads. 
> > [Fri Sep 24 15:14:01 2004] [notice] Apache/2.0.51 (Unix) mod_python/3.1.3
> Python/2.3 configured -- resuming normal operations 
> > 
> > in the Apache error_log file where mod_python is mentioned. This should
> > be output when mod_python module is loaded by Apache, although the
> > exact details of version, number of process and threads will be different.
> > 
> > For your particular Apache installation, are modules definitely installed
> in
> > a "libexec" subdirectory? Verify where the mod_python.so is installed
> and
> > ensure config file is the same. Try using an absolute path to the location
> > of the mod_python.so rather than a relative path.
> > 
> > If there is some sort of problem with mod_python.so not finding required
> > libraries, would expect some other error message to be logged, so see
> if
> > there are any strange error messages at all in the error_log file.
> > 
> > Graham
> > 
> > =?ISO-8859-1?Q?M=E1rio_Gamito?= wrote ..
> > 
> >>Hi Graham,
> >>
> >>Thank you very much for your help, but the proble persists :(
> >>
> >>Apache still refuses to start with "PythonHandler mptest" in httpd.conf
> >>and without that the ouput to the browser is still the python code.
> >>
> >>Any idea ?
> >>
> >>Warm Regards,
> >>M?rio Gamito
> >>
> >>
> >>Graham Dumpleton wrote:
> >>
> >>>You used the wrong documentation. You have installed 2.7.X but followed
> >>>instructions for 3.1.X for setting up test.
> >>>
> >>>Change config to:
> >>>
> >>><Directory /var/www/html>
> >>>        AddHandler python-program .py
> >>>        PythonHandler mptest
> >>>        PythonDebug On
> >>></Directory>"
> >>>
> >>>Ie. change "mod_python" to "python-program".
> >>>
> >>>Also recommended you change mptest.py code to:
> >>>
> >>>from mod_python import apache
> >>>
> >>>def handler(req):
> >>>        req.content_type = "text/plain"
> >>>        req.send_http_headers()
> >>>        req.write("Hello World!")
> >>>        return apache.OK
> >>>
> >>>Ie., exlicitly set content type to "text/plain", otherwise you are at
> >>>mercy of server/browser config as to what type it is sent as, with browsers
> >>>sometimes asking you to save file rather than view it.
> >>>
> >>>On 07/03/2005, at 7:04 AM, M?rio Gamito wrote:
> >>>
> >>>
> >>>>Hi,
> >>>>
> >>>>I've installed mod_python in Apache, *carefully* following the 
> >>>>instructions in the site:
> >>>>
> >>>>"$ ./configure --with-apxs=/usr/local/apache/bin/apxs
> >>>>make
> >>>>make install"
> >>>>
> >>>>After that, i've configured (and restarted) Apache:
> >>>>"LoadModule python_module libexec/mod_python.so
> >>>>
> >>>>(...)
> >>>>
> >>>><Directory /var/www/html>
> >>>>        AddHandler mod_python .py
> >>>>        PythonHandler mptest
> >>>>        PythonDebug On
> >>>></Directory>"
> >>>>
> >>>>wrote the example in the tutorial:
> >>>>"from mod_python import apache
> >>>>
> >>>>    def handler(req):
> >>>>        req.write("Hello World!")
> >>>>        return apache.OK"
> >>>>
> >>>>and put it in /var/www/html in a file named mptest.py
> >>>>
> >>>>-- 
> >>>>
> >>>>Now, the problems :(
> >>>>
> >>>>Apache won't start if i have the lines:
> >>>>"PythonHandler mptest
> >>>>PythonDebug On"
> >>>>
> >>>>It says:
> >>>>"Invalid Command PythonHandler, perhaps mis-spelled or defined by a
> >>>>module not included in the server configuration"
> >>>>"Invalid Command PythonDebug, perhaps mis-spelled or defined by a 
> >>>>module not included in the server configuration".
> >>>>
> >>>>If i comment those lines, Apache starts but mod_python doesn't parse
> >>>>the code, it just displays it in the browser :(
> >>>>
> >>>>If i use a .htaccess file in /var/www/html, same thing happens.
> >>>>
> >>>>I've read the FAQ, googled for the problem, but did not found any 
> >>>>suggestion that solved this issue.
> >>>>
> >>>>I'm using Apache 1.3.33, mod_python 2.7.11 and Python 2.3.4
> >>>>
> >>>>I'm stuck on this :(
> >>>>
> >>>>Any help would be apreciated.
> >>>>
> >>>>Warm Regards,
> >>>>M?rio Gamito
> >>>>_______________________________________________
> >>>>Mod_python mailing list
> >>>>Mod_python@modpython.org
> >>>>http://mailman.modpython.org/mailman/listinfo/mod_python
> >>>
> >>>
From wagnerh at oclc.org  Mon Mar  7 10:01:22 2005
From: wagnerh at oclc.org (Wagner,Harry)
Date: Mon Mar  7 10:01:27 2005
Subject: [mod_python] Using python profiler with mod_python
Message-ID: <811A02A11096B343880D2EEF72C4C832551D82@OAEXCH2SERVER.oa.oclc.org>

Does anyone have any experience using the python profiler with
mod_python, or know of any other tools available for diagnosing
performance problems?  TIA... harry

From nick at dd.revealed.net  Mon Mar  7 10:16:59 2005
From: nick at dd.revealed.net (Nick)
Date: Mon Mar  7 10:17:17 2005
Subject: [mod_python] Using python profiler with mod_python
In-Reply-To: <811A02A11096B343880D2EEF72C4C832551D82@OAEXCH2SERVER.oa.oclc.org>
References: <811A02A11096B343880D2EEF72C4C832551D82@OAEXCH2SERVER.oa.oclc.org>
Message-ID: <422C706B.3050709@dd.revealed.net>

The Python profiler works great.  I do a log_error at the end of the request 
with the default text report.  If you want to profile an entire handler, 
just make a wrapper handler that sets up the profiler to call your normal 
handler, and point to that in your apache config.

Nick

Wagner,Harry wrote:
> Does anyone have any experience using the python profiler with
> mod_python, or know of any other tools available for diagnosing
> performance problems?  TIA... harry
> 
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python

From wagnerh at oclc.org  Mon Mar  7 16:32:27 2005
From: wagnerh at oclc.org (Wagner,Harry)
Date: Mon Mar  7 16:32:31 2005
Subject: [mod_python] Mod_python & global persistence
Message-ID: <811A02A11096B343880D2EEF72C4C832551D8D@OAEXCH2SERVER.oa.oclc.org>

Is there a way with mod_python to init global variables in a handler the
first time it is called, so that they are available (and already
initialized) in subsequent calls to the handler?  I thought the
following might work, but no joy:

from mod_python import apache, util, Session

def handler(req):
#	req.log_error("in handler")
	global ddcServer
	ddcServer.req = req
	ddcServer.do_GET()
	return apache.OK
...
ddcServer = ''
if not ddcServer:
	...
	ddcServer = DDCServer(None)	
	ddcServer.captions = DDCCaptions(captionsFile)
	ddcServer.localText = TextLocalization(captionsFile)
	ddcServer.ddcSearch = ddc3.DDCSearch(oclc2ddcFile, recFileName,
compFile)

The 'if not ddcServer' code is invoked with every call to the handler.
Any ideas what I am doing wrong, or if this is possible with mod_python?


TIA... harry

From grahamd at dscpl.com.au  Mon Mar  7 17:04:32 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Mon Mar  7 17:04:34 2005
Subject: [mod_python] Mod_python & global persistence
Message-ID: <1110233072.27855@dscpl.user.openhosting.com>

The variable assignments and code at global scope within one instance of an
interpreter should not be getting executed on each request. What you are
possibly getting confused other is that if running in prefork mode for Apache,
there will be multiple processes, each with their own interpreter and thus their
own copy of the load module and data.

Thus, the data assignment and code at global scope will be executed once
per process. Each process has its own copy. The data is not shared across
processes. You will need to use some form of external persistence if you
want data shared between processes.

Just to make things more confusing, if using a multithreaded MPM for Apache,
there are some bugs in mod_python which can cause multiple interpreters to
be incorrectly created within one process. Further within one interpreter, a
module at startup may be loaded more than once, thus causing code to be
executed more than once. Fixes for the bugs can be found at:

  http://www.dscpl.com.au/projects/vampire/PATCHES

BTW, it is not generally good practice to be caching a request object into
global data structures as the request object only really exists in a valid
state for the length of the request. Also, in general the approach you are
using looks like it would fail in a multithreaded MPM. This is because more
than one request could invoke the handler at the same time, and thus they
will muck up each other because they both manipulate the global data
without any exclusion locks.

Wagner,Harry wrote ..
> Is there a way with mod_python to init global variables in a handler the
> first time it is called, so that they are available (and already
> initialized) in subsequent calls to the handler?  I thought the
> following might work, but no joy:
> 
> from mod_python import apache, util, Session
> 
> def handler(req):
> #	req.log_error("in handler")
> 	global ddcServer
> 	ddcServer.req = req
> 	ddcServer.do_GET()
> 	return apache.OK
> ...
> ddcServer = ''
> if not ddcServer:
> 	...
> 	ddcServer = DDCServer(None)	
> 	ddcServer.captions = DDCCaptions(captionsFile)
> 	ddcServer.localText = TextLocalization(captionsFile)
> 	ddcServer.ddcSearch = ddc3.DDCSearch(oclc2ddcFile, recFileName,
> compFile)
> 
> The 'if not ddcServer' code is invoked with every call to the handler.
> Any ideas what I am doing wrong, or if this is possible with mod_python?
> 
> 
> TIA... harry
> 
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
From alan at goatpunch.com  Mon Mar  7 17:10:26 2005
From: alan at goatpunch.com (Alan Davies)
Date: Mon Mar  7 17:10:28 2005
Subject: [mod_python] Using python profiler with mod_python
In-Reply-To: <422C706B.3050709@dd.revealed.net>
References: <811A02A11096B343880D2EEF72C4C832551D82@OAEXCH2SERVER.oa.oclc.org>
	<422C706B.3050709@dd.revealed.net>
Message-ID: <1110233426.12119.216770438@webmail.messagingengine.com>

I've had useful results too using profile with mod_python. Has anyone
written a similar module for tracking memory usage?

The interface to the profile module is a little unusual, I use 
some quick and dirty code similar to this to append profiling results
to every request during debugging:

------- album.py ------------

from mod_python import apache
_profiling_req=None

def handler(req, profiling=True):
    if profiling:
        import profile, pstats, sys, StringIO, tempfile
        global _profiling_req
        _profiling_req = req
        temp = tempfile.NamedTemporaryFile()
        profile.run("import album; album.handler(album._profiling_req,
        False)", temp.name)
        stats = pstats.Stats(temp.name)
        strstream = StringIO.StringIO()
        sys.stdout = strstream
        stats.sort_stats("cumulative")
        stats.print_stats()
        req.write("<pre>" + strstream.getvalue() + "</pre>)
        _profiling_req = None
    else:
        # regular handler code goes here...
    return apache.OK

-----------------------------

--Alan


On Mon, 07 Mar 2005 09:16:59 -0600, "Nick" <nick@dd.revealed.net> said:
> The Python profiler works great.  I do a log_error at the end of the
> request 
> with the default text report.  If you want to profile an entire handler, 
> just make a wrapper handler that sets up the profiler to call your normal 
> handler, and point to that in your apache config.
> 
> Nick
> 
> Wagner,Harry wrote:
> > Does anyone have any experience using the python profiler with
> > mod_python, or know of any other tools available for diagnosing
> > performance problems?  TIA... harry
> > 
> > _______________________________________________
> > Mod_python mailing list
> > Mod_python@modpython.org
> > http://mailman.modpython.org/mailman/listinfo/mod_python
> 
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
From grahamd at dscpl.com.au  Mon Mar  7 17:13:43 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Mon Mar  7 17:13:44 2005
Subject: [mod_python] Mod_python & global persistence
Message-ID: <1110233623.32311@dscpl.user.openhosting.com>

Graham Dumpleton wrote ..
> Thus, the data assignment and code at global scope will be executed once
> per process. Each process has its own copy. The data is not shared across
> processes. You will need to use some form of external persistence if you
> want data shared between processes.

Also forgot to mention, that if auto reload is enabled, each time you modify
the code file it will reload the module and reexecute the code. This can also
give a false impression that the code is being rerun on every single request.
It would be rerun in this case, but only because a reload occurred due to the
code file change.
From alan at goatpunch.com  Mon Mar  7 17:17:50 2005
From: alan at goatpunch.com (Alan Davies)
Date: Mon Mar  7 17:17:51 2005
Subject: [mod_python] Mod_python & global persistence
In-Reply-To: <811A02A11096B343880D2EEF72C4C832551D8D@OAEXCH2SERVER.oa.oclc.org>
References: <811A02A11096B343880D2EEF72C4C832551D8D@OAEXCH2SERVER.oa.oclc.org>
Message-ID: <1110233870.12858.216775824@webmail.messagingengine.com>

Hi,

not sure why your code wouldn't work. I use the equivalent of the
following to get the effect you're looking for:


ddcServer = None

def handler(req):
    global ddcServer 
    if not ddcServer :
        ddcServer = DDCServer()
        # ...
    # ...


Incidentally, I once had problems with huge memory leaks when I wrote
code similar to yours that assigned req to a variable that persisted
across calls. They were fixed by assigning the variable to another value
before returning (strange but true):

    ddcServer.req = req
    ddcServer.do_GET()
    ddcServer.req = None

--Alan


On Mon, 7 Mar 2005 16:32:27 -0500, "Wagner,Harry" <wagnerh@oclc.org>
said:
> Is there a way with mod_python to init global variables in a handler the
> first time it is called, so that they are available (and already
> initialized) in subsequent calls to the handler?  I thought the
> following might work, but no joy:
> 
> from mod_python import apache, util, Session
> 
> def handler(req):
> #       req.log_error("in handler")
> 	global ddcServer
> 	ddcServer.req = req
> 	ddcServer.do_GET()
> 	return apache.OK
> ...
> ddcServer = ''
> if not ddcServer:
> 	...
> 	ddcServer = DDCServer(None)	
> 	ddcServer.captions = DDCCaptions(captionsFile)
> 	ddcServer.localText = TextLocalization(captionsFile)
> 	ddcServer.ddcSearch = ddc3.DDCSearch(oclc2ddcFile, recFileName,
> compFile)
> 
> The 'if not ddcServer' code is invoked with every call to the handler.
> Any ideas what I am doing wrong, or if this is possible with mod_python?
> 
> 
> TIA... harry
> 
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
From alan at goatpunch.com  Mon Mar  7 17:30:29 2005
From: alan at goatpunch.com (Alan Davies)
Date: Mon Mar  7 17:30:31 2005
Subject: [mod_python] Mod_python & global persistence
In-Reply-To: <1110233072.27855@dscpl.user.openhosting.com>
References: <1110233072.27855@dscpl.user.openhosting.com>
Message-ID: <1110234629.13970.216777252@webmail.messagingengine.com>

Yes, I've found it much safer to pass the request object around
as a parameter:

    ddcServer.do_GET(req)

I wrap access to global objects with a thread lock, taking care
to ensure that the thread is unlocked even if an exception is
raised:

import thread
lock = thread.allocate_lock();
ddcServer = None

def handler(req):
    lock.acquire
    try:
        global ddcServer
        if not ddcServer:
            # create ddcServer ...
    finally:
        lock.release()
    ddcServer.do_GET(req)

--Alan

On Mon, 7 Mar 2005 17:04:32 -0500, "Graham Dumpleton"
<grahamd@dscpl.com.au> said:
> BTW, it is not generally good practice to be caching a request object
> into
> global data structures as the request object only really exists in a
> valid
> state for the length of the request. Also, in general the approach you
> are
> using looks like it would fail in a multithreaded MPM. This is because
> more
> than one request could invoke the handler at the same time, and thus they
> will muck up each other because they both manipulate the global data
> without any exclusion locks.
From kwang at activegrid.com  Tue Mar  8 19:50:33 2005
From: kwang at activegrid.com (Kevin Wang)
Date: Tue Mar  8 19:50:32 2005
Subject: [mod_python] apache's log and hook api in mod_python?
Message-ID: <422E4859.2010404@activegrid.com>

Hi All,

Does mod_python expose Apache's log api, for example, ap_log_error() and 
ap_log_rerror(), to mod_python's applications?  If not, how can we access 
Apache's log api, or should we use our own logging?

In addition, is that possible for us to create a hook in mod_python so that 
other modules can call it?

I am not quite sure if this is the right mailing list for these questions. 
If not, should I send it to python-dev@httpd.apache.org?

Thanks.

-- Kevin
From grahamd at dscpl.com.au  Tue Mar  8 20:53:38 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Tue Mar  8 20:53:47 2005
Subject: [mod_python] apache's log and hook api in mod_python?
Message-ID: <1110333218.21754@dscpl.user.openhosting.com>

Not sure that everything you might want is available or not. Access is
provided to:

  log_error(message[, level])

  An interface to the Apache ap_log_rerror  function. message is a
  string with the error message,  level is one of the following flags constants:

    APLOG_EMERG
    APLOG_ALERT
    APLOG_CRIT
    APLOG_ERR
    APLOG_WARNING
    APLOG_NOTICE
    APLOG_INFO
    APLOG_DEBUG
    APLOG_NOERRNO

  If you need to write to log and do not have a reference to a request object,
  use the apache.log_error function.

This is in the request object and is documented in:

  http://www.modpython.org/live/current/doc-html/pyapi-mprequest-meth.html

There also is mod_python.apache.log_error() which does the same thing.

There is something about log levels in the server object.

  http://www.modpython.org/live/current/doc-html/pyapi-mpsrv-mem.html

You can also supply a log handler.

  http://www.modpython.org/live/current/doc-html/dir-handlers-plh.html

I can't remember any other log related stuff at the moment.

Am not sure what you mean by "In addition, is that possible for us to
create a hook in mod_python so that  other modules can call it?". Can
you elaborate?

Graham

Kevin Wang wrote ..
> Hi All,
> 
> Does mod_python expose Apache's log api, for example, ap_log_error() and
> ap_log_rerror(), to mod_python's applications?  If not, how can we access
> Apache's log api, or should we use our own logging?
> 
> In addition, is that possible for us to create a hook in mod_python so
> that 
> other modules can call it?
> 
> I am not quite sure if this is the right mailing list for these questions.
> If not, should I send it to python-dev@httpd.apache.org?
> 
> Thanks.
> 
> -- Kevin
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
From kwang at activegrid.com  Tue Mar  8 21:03:58 2005
From: kwang at activegrid.com (Kevin Wang)
Date: Tue Mar  8 21:03:57 2005
Subject: [mod_python] apache's log and hook api in mod_python?
In-Reply-To: <1110333218.21754@dscpl.user.openhosting.com>
References: <1110333218.21754@dscpl.user.openhosting.com>
Message-ID: <422E598E.9070708@activegrid.com>

Hi Graham,

Wow, that information sounds good enough!  Sorry for that I haven't been 
able to check the doc thoroughly.  Thanks a lot for your prompt response.

For my second question, actually it is unrelated with the first one.  In 
Apache 2's C api, we can create a hook in a module, and all the other 
modules are able to call that hook at any time.  I am wondering if 
mod_python allows us to create our own hook (using python), and other 
modules (probably C implementations) can call that hook.

Thanks.

-- Kevin

Graham Dumpleton wrote:
> Not sure that everything you might want is available or not. Access is
> provided to:
> 
>   log_error(message[, level])
> 
>   An interface to the Apache ap_log_rerror  function. message is a
>   string with the error message,  level is one of the following flags constants:
> 
>     APLOG_EMERG
>     APLOG_ALERT
>     APLOG_CRIT
>     APLOG_ERR
>     APLOG_WARNING
>     APLOG_NOTICE
>     APLOG_INFO
>     APLOG_DEBUG
>     APLOG_NOERRNO
> 
>   If you need to write to log and do not have a reference to a request object,
>   use the apache.log_error function.
> 
> This is in the request object and is documented in:
> 
>   http://www.modpython.org/live/current/doc-html/pyapi-mprequest-meth.html
> 
> There also is mod_python.apache.log_error() which does the same thing.
> 
> There is something about log levels in the server object.
> 
>   http://www.modpython.org/live/current/doc-html/pyapi-mpsrv-mem.html
> 
> You can also supply a log handler.
> 
>   http://www.modpython.org/live/current/doc-html/dir-handlers-plh.html
> 
> I can't remember any other log related stuff at the moment.
> 
> Am not sure what you mean by "In addition, is that possible for us to
> create a hook in mod_python so that  other modules can call it?". Can
> you elaborate?
> 
> Graham
> 
> Kevin Wang wrote ..
> 
>>Hi All,
>>
>>Does mod_python expose Apache's log api, for example, ap_log_error() and
>>ap_log_rerror(), to mod_python's applications?  If not, how can we access
>>Apache's log api, or should we use our own logging?
>>
>>In addition, is that possible for us to create a hook in mod_python so
>>that 
>>other modules can call it?
>>
>>I am not quite sure if this is the right mailing list for these questions.
>>If not, should I send it to python-dev@httpd.apache.org?
>>
>>Thanks.
>>
>>-- Kevin
>>_______________________________________________
>>Mod_python mailing list
>>Mod_python@modpython.org
>>http://mailman.modpython.org/mailman/listinfo/mod_python
> 
> 
> 
From grahamd at dscpl.com.au  Tue Mar  8 21:19:07 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Tue Mar  8 21:19:11 2005
Subject: [mod_python] apache's log and hook api in mod_python?
Message-ID: <1110334747.1756@dscpl.user.openhosting.com>

Kevin Wang wrote ..

> For my second question, actually it is unrelated with the first one.  In
> Apache 2's C api, we can create a hook in a module, and all the other 
> modules are able to call that hook at any time.  I am wondering if 
> mod_python allows us to create our own hook (using python), and other 
> modules (probably C implementations) can call that hook.

That question I don't think I can answer.

I haven't used them or even really looked at them, but one can use
mod_python to create filters.

  http://www.modpython.org/live/current/doc-html/pyapi-filter.html

This isn't exactly direct callable from another module, but presume it
would allow the output of another module to be filtered through something
running under mod_python.

Handlers in general may allow you implement some phases of a request
otherwise handled by another module, but not sure as have always done
everything under mod_python and not mixed it with other modules.

  http://www.modpython.org/live/current/doc-html/pyapi-handler.html

Don't know if this helps or not.

You might grep through the source code for mod_python to see if you see
the particular Apache API hook methods being used and deduce from that
if it does what you are looking for.

Graham
From johannes.nel at gmail.com  Wed Mar  9 14:21:12 2005
From: johannes.nel at gmail.com (Johannes Nel)
Date: Wed Mar  9 14:21:13 2005
Subject: [mod_python] mod_python, apache and cygwin on xp pro
Message-ID: <51b90744050309112164f4d85c@mail.gmail.com>

hi

ok, i have just wasted a weekend trying to get this working on my
windows machine with cygwin

1st tried apache 2.* with mod_python 3.1*,
unfortunatly my bin/apxs work(apache 2.* and 1.3*) with a pretty
standard apache install script of

./configure --prefix-/my/path
make
make install
-> it says DSO is not supported on this platform. Fair enough

so then compiling mod_python using

./configure --with-apxs-/path/to/apxs 
will obviously fail.

so i decided bahamba, no reason for DSO i can just do it the old way.
so mod_python 3.1 does not support static compile so had to switch to
apache 1.3* and mod_python 2.7* and compile mod_python into the apache
source.

so compiling mod_python fails for me now on the make!!!
./configure --with-apache=/path/to/my/apache/source
make static 
--> Error 2 could not find mod_python.c 

obviously the file is in the mod_python folder src folder.

well thats my sad tale. any insight will be appreciated...
has anybody gotten it working, and if they did, how?
thanks
johan
ps: how do i search the archives of this list?

-- 
j:pn
From kwang at activegrid.com  Wed Mar  9 14:39:21 2005
From: kwang at activegrid.com (Kevin Wang)
Date: Wed Mar  9 14:39:15 2005
Subject: [mod_python] apache's hook api in mod_python?
In-Reply-To: <1110334747.1756@dscpl.user.openhosting.com>
References: <1110334747.1756@dscpl.user.openhosting.com>
Message-ID: <422F50E9.60009@activegrid.com>

Hi Graham,

Thanks a lot for your kind help!

My understanding of Apache C API's hook is that it allows module A to create 
a callback hook and all other modules can provide their own callback 
functions to hook on it, and then those callback functions can be called by 
module A at any time.

I doubt it can be replaced by Apache's filters, as filters themselves are 
hook callbacks which are called at various request processing stages.  If I 
am wrong or if there any smarter way to achieve what I want, please let me know.

I am cc'ing this email to mod_python development mailing list to see if this 
  does exist or it is a nice feature to have in the future.

Thanks.

-- Kevin

Graham Dumpleton wrote:
> Kevin Wang wrote ..
> 
> 
>>For my second question, actually it is unrelated with the first one.  In
>>Apache 2's C api, we can create a hook in a module, and all the other 
>>modules are able to call that hook at any time.  I am wondering if 
>>mod_python allows us to create our own hook (using python), and other 
>>modules (probably C implementations) can call that hook.
> 
> 
> That question I don't think I can answer.
> 
> I haven't used them or even really looked at them, but one can use
> mod_python to create filters.
> 
>   http://www.modpython.org/live/current/doc-html/pyapi-filter.html
> 
> This isn't exactly direct callable from another module, but presume it
> would allow the output of another module to be filtered through something
> running under mod_python.
> 
> Handlers in general may allow you implement some phases of a request
> otherwise handled by another module, but not sure as have always done
> everything under mod_python and not mixed it with other modules.
> 
>   http://www.modpython.org/live/current/doc-html/pyapi-handler.html
> 
> Don't know if this helps or not.
> 
> You might grep through the source code for mod_python to see if you see
> the particular Apache API hook methods being used and deduce from that
> if it does what you are looking for.
> 
> Graham
> 
> 
From list at joreybump.com  Wed Mar  9 14:47:59 2005
From: list at joreybump.com (Jorey Bump)
Date: Wed Mar  9 14:48:08 2005
Subject: [mod_python] mod_python, apache and cygwin on xp pro
In-Reply-To: <51b90744050309112164f4d85c@mail.gmail.com>
References: <51b90744050309112164f4d85c@mail.gmail.com>
Message-ID: <422F52EF.1030105@joreybump.com>

Johannes Nel wrote:

> ok, i have just wasted a weekend trying to get this working on my
> windows machine with cygwin

It may be pointless, as cygwin uses python 2.4.
From nuno at salgado.no-ip.com  Wed Mar  9 17:48:58 2005
From: nuno at salgado.no-ip.com (Nuno Salgado)
Date: Wed Mar  9 17:49:06 2005
Subject: [mod_python] mod_python, apache and cygwin on xp pro
References: <51b90744050309112164f4d85c@mail.gmail.com>
Message-ID: <006a01c524fa$2f8c1260$0202a8c0@LUA>

    Hi Johan,

Why are you using cygwin? Because you can install all parts (without cygwin) 
in Windows XP (I have).

I search the archives through the site Search facility in www.modpython.org.

Regards,
Nuno


----- Original Message ----- 
From: "Johannes Nel" <johannes.nel@gmail.com>
To: <>
Sent: Wednesday, March 09, 2005 7:21 PM
Subject: [mod_python] mod_python, apache and cygwin on xp pro


...
well thats my sad tale. any insight will be appreciated...


thanks
johan
ps: how do i search the archives of this list?

-- 
j:pn
_______________________________________________
Mod_python mailing list
Mod_python@modpython.org
http://mailman.modpython.org/mailman/listinfo/mod_python 

From nicolas.lehuen at gmail.com  Wed Mar  9 19:21:27 2005
From: nicolas.lehuen at gmail.com (Nicolas Lehuen)
Date: Wed Mar  9 19:21:30 2005
Subject: [mod_python] mod_python, apache and cygwin on xp pro
In-Reply-To: <51b90744050309112164f4d85c@mail.gmail.com>
References: <51b90744050309112164f4d85c@mail.gmail.com>
Message-ID: <c298f2d705030916215ba5472c@mail.gmail.com>

Hi,

You can fetch a pure Win32 (non-cygwin) setup for mod_python 3.1.4
with Python 2.4 on :

http://nicolas.lehuen.com/download/

If you're clever enough to build any version of mod_python under
Cygwin, then we'll be grateful to share your experience ; however I
think it's pretty safe to say this is an unsupported platform choice,
so don't expect too much help here.

As for the mailing list archives :
http://www.modpython.org/pipermail/mod_python/

Regards,

Nicolas


On Wed, 9 Mar 2005 19:21:12 +0000, Johannes Nel <johannes.nel@gmail.com> wrote:
> hi
> 
> ok, i have just wasted a weekend trying to get this working on my
> windows machine with cygwin
> 
> 1st tried apache 2.* with mod_python 3.1*,
> unfortunatly my bin/apxs work(apache 2.* and 1.3*) with a pretty
> standard apache install script of
> 
> ./configure --prefix-/my/path
> make
> make install
> -> it says DSO is not supported on this platform. Fair enough
> 
> so then compiling mod_python using
> 
> ./configure --with-apxs-/path/to/apxs
> will obviously fail.
> 
> so i decided bahamba, no reason for DSO i can just do it the old way.
> so mod_python 3.1 does not support static compile so had to switch to
> apache 1.3* and mod_python 2.7* and compile mod_python into the apache
> source.
> 
> so compiling mod_python fails for me now on the make!!!
> ./configure --with-apache=/path/to/my/apache/source
> make static
> --> Error 2 could not find mod_python.c
> 
> obviously the file is in the mod_python folder src folder.
> 
> well thats my sad tale. any insight will be appreciated...
> has anybody gotten it working, and if they did, how?
> thanks
> johan
> ps: how do i search the archives of this list?
> 
> --
> j:pn
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>
From Nitesh at photoninfotech.com  Thu Mar 10 06:01:23 2005
From: Nitesh at photoninfotech.com (Nitesh)
Date: Thu Mar 10 05:57:51 2005
Subject: [mod_python] mod_python problem
Message-ID: <001c01c52560$7fbdf210$b205a8c0@NITESH>

Hi all

 I am getting this error on compling test.py

Mod_python error: "PythonHandler test"

Traceback (most recent call last):

  File "/usr/src/build/276269-i386/install/usr/lib/python2.2/site-packages/mod_python/apache.py", line 332, in HandlerDispatch

  File "/var/www/html/cmacademy/test.py", line 5, in handler
    req.send_http_headers()

AttributeError: 'mp_request' object has no attribute 'send_http_headers'

My apache configuartion is:

<Directory /var/www/html/cmacademy>
Options Multiviews Indexs SymLinksOwnerMatch IncludesNoexec ExecCGI
AddHandler python-program .py
PythonHandler test
PythonPath "['/var/www/html/cmacademy']+sys.path"
PythonDebug On
Allow from all
</Directory>

I am using Apache 2.0.46 and python 2.2

Please help me its urgent

Regards
Nitesh
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20050310/029c361a/attachment.html
From terry.macdonald at dsl.pipex.com  Thu Mar 10 06:24:05 2005
From: terry.macdonald at dsl.pipex.com (Terry MacDonald)
Date: Thu Mar 10 06:24:17 2005
Subject: [mod_python] mod_python problem
In-Reply-To: <001c01c52560$7fbdf210$b205a8c0@NITESH>
References: <001c01c52560$7fbdf210$b205a8c0@NITESH>
Message-ID: <42302E55.6060503@dsl.pipex.com>

I think you will find its send_http_header()  (drop the plural)

First thing to check with these kind of errors is typos!

Nitesh wrote:

>  
>  I am getting this error on compling test.py
>  
> AttributeError: 'mp_request' object has no attribute 'send_http_headers'
>  
>
>------------------------------------------------------------------------
>
>_______________________________________________
>Mod_python mailing list
>Mod_python@modpython.org
>http://mailman.modpython.org/mailman/listinfo/mod_python
>  
>

From jason at ruff.com  Thu Mar 10 11:37:59 2005
From: jason at ruff.com (Jason Lanquist)
Date: Thu Mar 10 11:38:20 2005
Subject: [mod_python] Getting modpython and php to work on the same computer
Message-ID: <423077E7.5ADD1831@ruff.com>

I've been having problems getting Python/mod_python/MySQLdb to work on
my computer at home.  I finally figured out that if I commented out my
php module from loading in my httpd.conf file then mod_python would
work.  I'm wondering if there is a way to get mod_python to work even
when php is loaded.

system info:
Linux Slackware 8.1 w/ 2.4.22 kernel
Apache          2.0.49
Python          2.3.3
mod_python      3.1.3
MySQL-python    0.9.2
PHP             4.3.4

Specific error:

--- from httpd.conf ---
LoadModule python_module /usr/local/apache/modules/mod_python.so
LoadModule php4_module   /usr/local/apache/modules/libphp4.so
--- /from httpd.conf ---

Actually, there were no errors reported to the browser.  Mod_Python
would silently stop execution and the only evidence of anything strange
in log files was an "exit signal Segmentation fault (11)" in my apache
error log.

--- from httpd.conf ---
LoadModule python_module /usr/local/apache/modules/mod_python.so
#LoadModule php4_module   /usr/local/apache/modules/libphp4.so
--- /from httpd.conf ---

If I commented out php4_module in httpd.conf, then everything worked
fine in python.  Unfortunately, php doesn't work in this case.

I'm able to duplicate this behavior on a different computer with the
same things installed so I'm not thinking it's a hardware issue

Any help would be greatly appreciated!

Jason Lanquist
From azurit at pobox.sk  Thu Mar 10 12:12:59 2005
From: azurit at pobox.sk (Jozef 'azurIt' Sudolsky)
Date: Thu Mar 10 12:07:21 2005
Subject: [mod_python] Getting modpython and php to work on the same
	computer
Message-ID: <200503101712.j2AHCucw013223@www7.pobox.sk>

hi,

i had similar problem few days ago: the mod_python works fine but it 
wasn't possible to use MySQL-python. when i unloaded php, it started 
to work. this problem disappear after i recompiled php WITHOUT 
option '--with-mysql'. i think your problem will be something like 
this (but probably with other php compile options).

azurIt

> I've been having problems getting Python/mod_python/MySQLdb to work 
on
> my computer at home.  I finally figured out that if I commented out 
my
> php module from loading in my httpd.conf file then mod_python would
> work.  I'm wondering if there is a way to get mod_python to work 
even
> when php is loaded.
> 
> system info:
> Linux Slackware 8.1 w/ 2.4.22 kernel
> Apache          2.0.49
> Python          2.3.3
> mod_python      3.1.3
> MySQL-python    0.9.2
> PHP             4.3.4
> 
> Specific error:
> 
> --- from httpd.conf ---
> LoadModule python_module /usr/local/apache/modules/mod_python.so
> LoadModule php4_module   /usr/local/apache/modules/libphp4.so
> --- /from httpd.conf ---
> 
> Actually, there were no errors reported to the browser.  Mod_Python
> would silently stop execution and the only evidence of anything 
strange
> in log files was an "exit signal Segmentation fault (11)" in my 
apache
> error log.
> 
> --- from httpd.conf ---
> LoadModule python_module /usr/local/apache/modules/mod_python.so
> #LoadModule php4_module   /usr/local/apache/modules/libphp4.so
> --- /from httpd.conf ---
> 
> If I commented out php4_module in httpd.conf, then everything worked
> fine in python.  Unfortunately, php doesn't work in this case.
> 
> I'm able to duplicate this behavior on a different computer with the
> same things installed so I'm not thinking it's a hardware issue
> 
> Any help would be greatly appreciated!
> 
> Jason Lanquist
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
> 

____________________________________
Vsetko o SuperStar
http://superstar.atlas.sk


From grahamd at dscpl.com.au  Thu Mar 10 16:02:32 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Thu Mar 10 16:02:40 2005
Subject: [mod_python] Getting modpython and php to work on the same
	computer
In-Reply-To: <423077E7.5ADD1831@ruff.com>
References: <423077E7.5ADD1831@ruff.com>
Message-ID: <df87fbd8ef491d3556541d064f6627c8@dscpl.com.au>

These problems usually come down to PHP and Python, or some module being
used by either, being compiled against different versions of some shared
library. The main culprit tends to be libexpat but there can also be
issues with MySQL. See FAQ entry:

    
http://www.modpython.org/FAQ/faqw.py? 
query=PHP&querytype=simple&casefold=yes&req=search



On 11/03/2005, at 3:37 AM, Jason Lanquist wrote:

> I've been having problems getting Python/mod_python/MySQLdb to work on
> my computer at home.  I finally figured out that if I commented out my
> php module from loading in my httpd.conf file then mod_python would
> work.  I'm wondering if there is a way to get mod_python to work even
> when php is loaded.
>
> system info:
> Linux Slackware 8.1 w/ 2.4.22 kernel
> Apache          2.0.49
> Python          2.3.3
> mod_python      3.1.3
> MySQL-python    0.9.2
> PHP             4.3.4
>
> Specific error:
>
> --- from httpd.conf ---
> LoadModule python_module /usr/local/apache/modules/mod_python.so
> LoadModule php4_module   /usr/local/apache/modules/libphp4.so
> --- /from httpd.conf ---
>
> Actually, there were no errors reported to the browser.  Mod_Python
> would silently stop execution and the only evidence of anything strange
> in log files was an "exit signal Segmentation fault (11)" in my apache
> error log.
>
> --- from httpd.conf ---
> LoadModule python_module /usr/local/apache/modules/mod_python.so
> #LoadModule php4_module   /usr/local/apache/modules/libphp4.so
> --- /from httpd.conf ---
>
> If I commented out php4_module in httpd.conf, then everything worked
> fine in python.  Unfortunately, php doesn't work in this case.
>
> I'm able to duplicate this behavior on a different computer with the
> same things installed so I'm not thinking it's a hardware issue
>
> Any help would be greatly appreciated!
>
> Jason Lanquist
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python

From reed at intersiege.com  Thu Mar 10 18:03:45 2005
From: reed at intersiege.com (Reed L. O'Brien)
Date: Thu Mar 10 18:03:55 2005
Subject: [mod_python] Getting modpython and php to work on the
	same	computer
In-Reply-To: <df87fbd8ef491d3556541d064f6627c8@dscpl.com.au>
References: <423077E7.5ADD1831@ruff.com>
	<df87fbd8ef491d3556541d064f6627c8@dscpl.com.au>
Message-ID: <4230D251.9030008@intersiege.com>

I think Graham maybe meant this:

http://www.modpython.org/FAQ/faqw.py?req=all#2.13
which basically says this:

The solution (from David Geller) is as follows:

In my httpd.conf I was loading two DSO modules: mod_python and php4. It 
turns out, when I removed the reference to php4, the mod_python worked 
perfectly. Now, why was this? Well, I went back to the php4 module, and 
checked out "configure" - if you know anything about php, it was being 
configured with the "--with-mysql" flag, which tells it to use an 
"internal" version of mysql libs. Apparently, this is fine - as long as 
*no other modules use mysql* (the php configure tells you this at the 
end). If they do, you should specify the actual mysql library directory. 
Well, mod_python was basically another module using mysql. Duuuuh! 
(well, not so obvious to me, really). When I specified the actual mysql 
library to php configure, and recompiled and reinstalled the PHP, I 
could have LoadModules for both php and mod_python and both /appear/ to 
work.



cheers,
~r

Graham Dumpleton wrote:

> These problems usually come down to PHP and Python, or some module being
> used by either, being compiled against different versions of some shared
> library. The main culprit tends to be libexpat but there can also be
> issues with MySQL. See FAQ entry:
>
>    http://www.modpython.org/FAQ/faqw.py? 
> query=PHP&querytype=simple&casefold=yes&req=search
>
>
>
> On 11/03/2005, at 3:37 AM, Jason Lanquist wrote:
>
>> I've been having problems getting Python/mod_python/MySQLdb to work on
>> my computer at home.  I finally figured out that if I commented out my
>> php module from loading in my httpd.conf file then mod_python would
>> work.  I'm wondering if there is a way to get mod_python to work even
>> when php is loaded.
>>
>> system info:
>> Linux Slackware 8.1 w/ 2.4.22 kernel
>> Apache          2.0.49
>> Python          2.3.3
>> mod_python      3.1.3
>> MySQL-python    0.9.2
>> PHP             4.3.4
>>
>> Specific error:
>>
>> --- from httpd.conf ---
>> LoadModule python_module /usr/local/apache/modules/mod_python.so
>> LoadModule php4_module   /usr/local/apache/modules/libphp4.so
>> --- /from httpd.conf ---
>>
>> Actually, there were no errors reported to the browser.  Mod_Python
>> would silently stop execution and the only evidence of anything strange
>> in log files was an "exit signal Segmentation fault (11)" in my apache
>> error log.
>>
>> --- from httpd.conf ---
>> LoadModule python_module /usr/local/apache/modules/mod_python.so
>> #LoadModule php4_module   /usr/local/apache/modules/libphp4.so
>> --- /from httpd.conf ---
>>
>> If I commented out php4_module in httpd.conf, then everything worked
>> fine in python.  Unfortunately, php doesn't work in this case.
>>
>> I'm able to duplicate this behavior on a different computer with the
>> same things installed so I'm not thinking it's a hardware issue
>>
>> Any help would be greatly appreciated!
>>
>> Jason Lanquist
>> _______________________________________________
>> Mod_python mailing list
>> Mod_python@modpython.org
>> http://mailman.modpython.org/mailman/listinfo/mod_python
>
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python




From grahamd at dscpl.com.au  Thu Mar 10 18:28:31 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Thu Mar 10 18:28:33 2005
Subject: [mod_python] Getting modpython and php to work on thesamecomputer
Message-ID: <1110497311.710@dscpl.user.openhosting.com>

Unless the URL got mangled, what I sent should have worked, it was just a
more general query on anything PHP related, so picked up other stuff
besides the MySQL issue as well. :-(

More specific URL is good though as well. :-)

Reed L. O'Brien wrote ..
> I think Graham maybe meant this:
> 
> http://www.modpython.org/FAQ/faqw.py?req=all#2.13
> which basically says this:
> 
> The solution (from David Geller) is as follows:
> 
> In my httpd.conf I was loading two DSO modules: mod_python and php4. It
> turns out, when I removed the reference to php4, the mod_python worked
> perfectly. Now, why was this? Well, I went back to the php4 module, and
> checked out "configure" - if you know anything about php, it was being
> configured with the "--with-mysql" flag, which tells it to use an 
> "internal" version of mysql libs. Apparently, this is fine - as long as
> *no other modules use mysql* (the php configure tells you this at the 
> end). If they do, you should specify the actual mysql library directory.
> Well, mod_python was basically another module using mysql. Duuuuh! 
> (well, not so obvious to me, really). When I specified the actual mysql
> library to php configure, and recompiled and reinstalled the PHP, I 
> could have LoadModules for both php and mod_python and both /appear/ to
> work.
> 
> 
> 
> cheers,
> ~r
> 
> Graham Dumpleton wrote:
> 
> > These problems usually come down to PHP and Python, or some module being
> > used by either, being compiled against different versions of some shared
> > library. The main culprit tends to be libexpat but there can also be
> > issues with MySQL. See FAQ entry:
> >
> >    http://www.modpython.org/FAQ/faqw.py? 
> > query=PHP&querytype=simple&casefold=yes&req=search
> >
> >
> >
> > On 11/03/2005, at 3:37 AM, Jason Lanquist wrote:
> >
> >> I've been having problems getting Python/mod_python/MySQLdb to work
> on
> >> my computer at home.  I finally figured out that if I commented out
> my
> >> php module from loading in my httpd.conf file then mod_python would
> >> work.  I'm wondering if there is a way to get mod_python to work even
> >> when php is loaded.
> >>
> >> system info:
> >> Linux Slackware 8.1 w/ 2.4.22 kernel
> >> Apache          2.0.49
> >> Python          2.3.3
> >> mod_python      3.1.3
> >> MySQL-python    0.9.2
> >> PHP             4.3.4
> >>
> >> Specific error:
> >>
> >> --- from httpd.conf ---
> >> LoadModule python_module /usr/local/apache/modules/mod_python.so
> >> LoadModule php4_module   /usr/local/apache/modules/libphp4.so
> >> --- /from httpd.conf ---
> >>
> >> Actually, there were no errors reported to the browser.  Mod_Python
> >> would silently stop execution and the only evidence of anything strange
> >> in log files was an "exit signal Segmentation fault (11)" in my apache
> >> error log.
> >>
> >> --- from httpd.conf ---
> >> LoadModule python_module /usr/local/apache/modules/mod_python.so
> >> #LoadModule php4_module   /usr/local/apache/modules/libphp4.so
> >> --- /from httpd.conf ---
> >>
> >> If I commented out php4_module in httpd.conf, then everything worked
> >> fine in python.  Unfortunately, php doesn't work in this case.
> >>
> >> I'm able to duplicate this behavior on a different computer with the
> >> same things installed so I'm not thinking it's a hardware issue
> >>
> >> Any help would be greatly appreciated!
> >>
> >> Jason Lanquist
> >> _______________________________________________
> >> Mod_python mailing list
> >> Mod_python@modpython.org
> >> http://mailman.modpython.org/mailman/listinfo/mod_python
> >
> >
> > _______________________________________________
> > Mod_python mailing list
> > Mod_python@modpython.org
> > http://mailman.modpython.org/mailman/listinfo/mod_python
> 
> 
> 
> 
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
From jason at ruff.com  Thu Mar 10 21:03:24 2005
From: jason at ruff.com (Jason Lanquist)
Date: Thu Mar 10 21:04:30 2005
Subject: [mod_python] Getting modpython and php to work on thesamecomputer
In-Reply-To: <1110497311.710@dscpl.user.openhosting.com>
References: <1110497311.710@dscpl.user.openhosting.com>
Message-ID: <4230FC6C.6080209@ruff.com>

Thanks for the link, that's exactly my problem!  I tried it but ended up 
with bigger problems

I was unsure about what was the path to the mysql library so I thought 
it was the lib directory:
./configure --with-apxs2=/usr/local/apache/bin/apxs 
--with-mysql=/usr/local/mysql/lib
error: something to the effect of "this isn't the library"
./configure --with-apxs2=/usr/local/apache/bin/apxs 
--with-mysql=/usr/local/mysql/bin
same error
./configure --with-apxs2=/usr/local/apache/bin/apxs 
--with-mysql=/usr/local/mysql
this one worked, but is this the mysql library?

anyway, I did a make/make install and then apache wouldn't start.  
something about not enough memory to create a lock

I deleted the "/usr/local/apache/", "/usr/local/httpd-2.0.49/", untarred 
the httpd-2.0.49.tar.gz and installed it , restarted the computer, 
started apache and now it works.
I installed mod_python again and now I have mod_python working correctly!

Now to install php...should I do a make clean before I configure it?
(here's what I'll type)
cd /usr/local/php-4.3.4
make clean
./configure --with-apxs2=/usr/local/apache/bin/apxs 
--with-mysql=/usr/local/mysql
make
make install

Please correct me if I have the wrong path to the mysql library or 
confirm that it's correct. (/usr/local/mysql is the base directory where 
mysql is installed)

Thanks so much for all of your input on this!

Jason Lanquist


Graham Dumpleton wrote:

>Unless the URL got mangled, what I sent should have worked, it was just a
>more general query on anything PHP related, so picked up other stuff
>besides the MySQL issue as well. :-(
>
>More specific URL is good though as well. :-)
>
>Reed L. O'Brien wrote ..
>  
>
>>I think Graham maybe meant this:
>>
>>http://www.modpython.org/FAQ/faqw.py?req=all#2.13
>>which basically says this:
>>
>>The solution (from David Geller) is as follows:
>>
>>In my httpd.conf I was loading two DSO modules: mod_python and php4. It
>>turns out, when I removed the reference to php4, the mod_python worked
>>perfectly. Now, why was this? Well, I went back to the php4 module, and
>>checked out "configure" - if you know anything about php, it was being
>>configured with the "--with-mysql" flag, which tells it to use an 
>>"internal" version of mysql libs. Apparently, this is fine - as long as
>>*no other modules use mysql* (the php configure tells you this at the 
>>end). If they do, you should specify the actual mysql library directory.
>>Well, mod_python was basically another module using mysql. Duuuuh! 
>>(well, not so obvious to me, really). When I specified the actual mysql
>>library to php configure, and recompiled and reinstalled the PHP, I 
>>could have LoadModules for both php and mod_python and both /appear/ to
>>work.
>>
>>
>>
>>cheers,
>>~r
>>
>>Graham Dumpleton wrote:
>>
>>    
>>
>>>These problems usually come down to PHP and Python, or some module being
>>>used by either, being compiled against different versions of some shared
>>>library. The main culprit tends to be libexpat but there can also be
>>>issues with MySQL. See FAQ entry:
>>>
>>>   http://www.modpython.org/FAQ/faqw.py? 
>>>query=PHP&querytype=simple&casefold=yes&req=search
>>>      
>>>

From jason at ruff.com  Thu Mar 10 22:46:42 2005
From: jason at ruff.com (Jason Lanquist)
Date: Thu Mar 10 22:47:46 2005
Subject: [mod_python] Getting modpython and php to work on thesamecomputer
In-Reply-To: <4230FC6C.6080209@ruff.com>
References: <1110497311.710@dscpl.user.openhosting.com>
	<4230FC6C.6080209@ruff.com>
Message-ID: <423114A2.90507@ruff.com>

Nevermind about my question, I saw on the php site that the mysql base 
directory is correct.  I installed it and started up apache.  And no 
errors!  Thanks so much for helping me with this!

Jason Lanquist


Jason Lanquist wrote:

> Thanks for the link, that's exactly my problem!  I tried it but ended 
> up with bigger problems
>
> I was unsure about what was the path to the mysql library so I thought 
> it was the lib directory:
> ./configure --with-apxs2=/usr/local/apache/bin/apxs 
> --with-mysql=/usr/local/mysql/lib
> error: something to the effect of "this isn't the library"
> ./configure --with-apxs2=/usr/local/apache/bin/apxs 
> --with-mysql=/usr/local/mysql/bin
> same error
> ./configure --with-apxs2=/usr/local/apache/bin/apxs 
> --with-mysql=/usr/local/mysql
> this one worked, but is this the mysql library?
>
> anyway, I did a make/make install and then apache wouldn't start.  
> something about not enough memory to create a lock
>
> I deleted the "/usr/local/apache/", "/usr/local/httpd-2.0.49/", 
> untarred the httpd-2.0.49.tar.gz and installed it , restarted the 
> computer, started apache and now it works.
> I installed mod_python again and now I have mod_python working correctly!
>
> Now to install php...should I do a make clean before I configure it?
> (here's what I'll type)
> cd /usr/local/php-4.3.4
> make clean
> ./configure --with-apxs2=/usr/local/apache/bin/apxs 
> --with-mysql=/usr/local/mysql
> make
> make install
>
> Please correct me if I have the wrong path to the mysql library or 
> confirm that it's correct. (/usr/local/mysql is the base directory 
> where mysql is installed)
>
> Thanks so much for all of your input on this!
>
> Jason Lanquist
>
>
> Graham Dumpleton wrote:
>
>> Unless the URL got mangled, what I sent should have worked, it was 
>> just a
>> more general query on anything PHP related, so picked up other stuff
>> besides the MySQL issue as well. :-(
>>
>> More specific URL is good though as well. :-)
>>
>> Reed L. O'Brien wrote ..
>>  
>>
>>> I think Graham maybe meant this:
>>>
>>> http://www.modpython.org/FAQ/faqw.py?req=all#2.13
>>> which basically says this:
>>>
>>> The solution (from David Geller) is as follows:
>>>
>>> In my httpd.conf I was loading two DSO modules: mod_python and php4. It
>>> turns out, when I removed the reference to php4, the mod_python worked
>>> perfectly. Now, why was this? Well, I went back to the php4 module, and
>>> checked out "configure" - if you know anything about php, it was being
>>> configured with the "--with-mysql" flag, which tells it to use an 
>>> "internal" version of mysql libs. Apparently, this is fine - as long as
>>> *no other modules use mysql* (the php configure tells you this at 
>>> the end). If they do, you should specify the actual mysql library 
>>> directory.
>>> Well, mod_python was basically another module using mysql. Duuuuh! 
>>> (well, not so obvious to me, really). When I specified the actual mysql
>>> library to php configure, and recompiled and reinstalled the PHP, I 
>>> could have LoadModules for both php and mod_python and both /appear/ to
>>> work.
>>>
>>>
>>>
>>> cheers,
>>> ~r
>>>
>>> Graham Dumpleton wrote:
>>>
>>>   
>>>
>>>> These problems usually come down to PHP and Python, or some module 
>>>> being
>>>> used by either, being compiled against different versions of some 
>>>> shared
>>>> library. The main culprit tends to be libexpat but there can also be
>>>> issues with MySQL. See FAQ entry:
>>>>
>>>>   http://www.modpython.org/FAQ/faqw.py? 
>>>> query=PHP&querytype=simple&casefold=yes&req=search
>>>>     
>>>

From noelrv at gmail.com  Sat Mar 12 05:30:05 2005
From: noelrv at gmail.com (noel villamor)
Date: Sat Mar 12 05:36:56 2005
Subject: [mod_python] Apache2 unable to run my python script
Message-ID: <6654695d05031202302171a039@mail.gmail.com>

When I access a python script from a Firefox, I am prompted to
download the .py file.

I followed the instructions stated in:
http://172.29.15.14/doc/libapache2-mod-python-doc/doc-html/inst-testing.html

I am using Apache/2.0.52 (Debian Testing) mod_python/3.1.3 Python/2.3.5.

Hints please.
From grahamd at dscpl.com.au  Sat Mar 12 05:51:34 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Sat Mar 12 05:51:43 2005
Subject: [mod_python] Apache2 unable to run my python script
In-Reply-To: <6654695d05031202302171a039@mail.gmail.com>
References: <6654695d05031202302171a039@mail.gmail.com>
Message-ID: <ec64bac7953ffc72b6b4bdb3849210ee@dscpl.com.au>

Your Apache config most likely doesn't define a default content type
and you used:

     from mod_python import apache

     def handler(req):
         req.write("Hello World!")
         return apache.OK

Instead of that, use:

     from mod_python import apache

     def handler(req):
         req.content_type = "text/plain"
         req.write("Hello World!")
         return apache.OK

You will need to be clearer about what you are getting though. Does what
FireFox saves have the desired content in it, or does it contain the
Python code used to produce it? The latter indicates other configuration
problems.

Suggest if the above doesn't help, make sure you supply all the  
following:

	? 	Whether you are using the global configuration file or a .htaccess  
file.
	? 	The snippet of the Apache configuration you are using to configure  
mod_python
          and enable its use in the directory you are working in.
	? 	The full contents of the Python code file for the content handler  
you are trying to use.

Without this we would be largely guessing based on what are common  
problems.

Graham

On 12/03/2005, at 9:30 PM, noel villamor wrote:

> When I access a python script from a Firefox, I am prompted to
> download the .py file.
>
> I followed the instructions stated in:
> http://172.29.15.14/doc/libapache2-mod-python-doc/doc-html/inst- 
> testing.html
>
> I am using Apache/2.0.52 (Debian Testing) mod_python/3.1.3  
> Python/2.3.5.
>
> Hints please.
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python


From bedouglas at earthlink.net  Sat Mar 12 12:30:43 2005
From: bedouglas at earthlink.net (bruce)
Date: Sat Mar 12 12:29:54 2005
Subject: [mod_python] python/mod_python.apache err msg
In-Reply-To: <a4704b47c443560b3be0c3d8c81c3969@dscpl.com.au>
Message-ID: <009c01c52729$39d37930$0301a8c0@Mesa.com>

graham.. sorry about the time dealy since the last post!

ok.. i now have a fresh/newly installed FC3 linux. i have the following
rpms:
[root@lserver4 lib]# rpm -q httpd
httpd-2.0.52-3
[root@lserver4 lib]# rpm -q mod_python
mod_python-3.1.3-5
[root@lserver4 lib]# rpm -q python
python-2.3.4-11

when i do a 'import mod_python, i get no return errs.

when i do a 'import mod_python.apache', i get the following

[root@lserver4 lib]# python
Python 2.3.4 (#1, Oct 26 2004, 16:42:40)
[GCC 3.4.2 20041017 (Red Hat 3.4.2-6.fc3)] on linux2
Type "help", "copyright", "credits" or "license" for more information.
>>> import mod_python
>>> import mod_python.apache
Traceback (most recent call last):
  File "<stdin>", line 1, in ?
  File "/usr/lib/python2.3/site-packages/mod_python/apache.py", line 28, in
?
    import _apache
ImportError: No module named _apache
>>> import sys
>>> print sys.prefix
/usr
>>>

my dirs/locations for mod_python/mod_python.so are:

[root@lserver4 lib]# ls /usr/lib/python2.3/site-packages/mod_python
apache.py ....

[root@lserver4 lib]# ls /etc/httpd/modules
mod_python.so ...

as far as i can tell, the dirs are similar to an FC2 system i have that
appears to have mod_python/apache installed correctly.

any ideas as to why i'm getting the 'ImportError: No module named _apache'
msg?

thanks

-bruce


-----Original Message-----
From: Graham Dumpleton [mailto:grahamd@dscpl.com.au]
Sent: Saturday, March 05, 2005 4:43 PM
To: bedouglas@earthlink.net
Cc: mod_python user mailing list
Subject: Re: python/linux guru needed.. now!!!!



On 06/03/2005, at 9:10 AM, bruce wrote:

> graham...
>
> i did post this issue/question to the modpython group... although i
> haven't
> posted there for a guru...

And on the mod_python mailing list you were asked some questions and
given some things to try. You didn't however give an answer to the
questions. We can't read minds. :-)

> but in answer to the rest of your questions....
>
> here's what i'm doing...
>
> python
> pyhton 2.3.3 ......
> type help...
>>>> import mod_python.psp
>   .
>   .
>   .
> ImportError: No module named mod_python

Getting this error in itself is strange, as trying to import a submodule
of a module that does not exist, would usually yield:

   ImportError: No module named mod_python.psp

if the parent module does not exist.

Either way, it simply doesn't look like mod_python is installed for that
version of Python. Does saying:

   import mod_python

fail as well. What error does it give in that situation?

You can verify manually whether it has been installed by finding the
"site-packages"
directory for the Python installation and looking in there for a
mod_python
directory.

Note that there are two parts to the installation of mod_python, there
is the
Apache handler .so which gets installed in Apache modules directory and
the
Python code modules which get installed in "site-packages". So far it
seems
it is the latter that does not exist.

Anyway, if you don't know where to look for the "site-packages"
directory, run
in Python:

   import sys
   print sys.prefix

This should tell you where Python stuff is being installed. For Python
2.3, the
site-packages directory would be in a subdirectory of that directory
called:

   lib/python2.3/site-packages

Thus change to directory specified by sys.prefix and then run:

   ls lib/python2.3/site-packages/mod_python

Does that say the directory doesn't exist? If it doesn't exist, then
your installation
isn't complete. If it does exist, what is in that directory?

I also ask again the same question as posed in the original mailing
list response to
you, do you possibly have more than one version of Python installed on
your system?

> i'm doing the above from the linux command line
>
>
> i have
> RH8.0
> python-2.3.3-6
> mod_python-3.1.3-5
> apache/2.0.50 (built from source)
>
>
> so, any ideas!!!
>
> thanks...
>
> bruce
>
>
> -----Original Message-----
> From: python-list-bounces+bedouglas=earthlink.net@python.org
> [mailto:python-list-bounces+bedouglas=earthlink.net@python.org]On
> Behalf
> Of grahamd@dscpl.com.au
> Sent: Saturday, March 05, 2005 1:56 PM
> To: python-list@python.org
> Subject: Re: python/linux guru needed.. now!!!!
>
>
>
> bruce wrote:
>> hi...
>>
>> i have a situation with a linux rh8 server. i can't seem to get
>> python/mod_python/apache working as one...
>>
>> i can't seem to import mod_python from the python interpreter to
> work, and
>> i'm not sure as to why. i'm fairly convinced that it's a conflict
> issue of
>> some type, but i'm not sure as to how to resolve it...
>>
>> if you are a guru with python/mod_python/linux then i'd like to talk
> with
>> you...
>>
>> searching through google/mailing lists/etc... is getting me nowhere!!
>
> You will do better if you present your problem in the mod_python
> mailing
> list. Go to http://www.modpython.org to get the mailing list details,
> get
> yourself on the list and then post the following information as a
> start.
>
> Which version of mod_python you are using.
>
> Whether you are using the global configuration file or a .htaccess
> file.
>
> The snippet of the Apache configuration you are using to configure
> mod_python and enable its use in the directory you are working in.
>
> Details of any error responses which are being displayed by your web
> browser.
>
> Details of messages, be they notices or error messages, which occur in
> the Apache error log file corresponding to any request you are making
> which is not working.
>
> The full contents of the Python code file for the content handler you
> are
> trying to use.
>
> --
> http://mail.python.org/mailman/listinfo/python-list

From grahamd at dscpl.com.au  Sat Mar 12 16:58:05 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Sat Mar 12 16:58:14 2005
Subject: [mod_python] Re: python/mod_python.apache err msg
In-Reply-To: <009c01c52729$39d37930$0301a8c0@Mesa.com>
References: <009c01c52729$39d37930$0301a8c0@Mesa.com>
Message-ID: <4f8bc485f6bc40134646f526747b2bc7@dscpl.com.au>


On 13/03/2005, at 4:30 AM, bruce wrote:

> when i do a 'import mod_python.apache', i get the following
>
> [root@lserver4 lib]# python
> Python 2.3.4 (#1, Oct 26 2004, 16:42:40)
> [GCC 3.4.2 20041017 (Red Hat 3.4.2-6.fc3)] on linux2
> Type "help", "copyright", "credits" or "license" for more information.
>>>> import mod_python
>>>> import mod_python.apache
> Traceback (most recent call last):
>   File "<stdin>", line 1, in ?
>   File "/usr/lib/python2.3/site-packages/mod_python/apache.py", line 
> 28, in
> ?
>     import _apache
> ImportError: No module named _apache
>
> ...
>
> any ideas as to why i'm getting the 'ImportError: No module named 
> _apache'
> msg?

When doing an import of mod_python.apache from the command line Python,
this is exactly what you do want. The "_apache" module is a special
module which is embedded within the mod_python.so file which is loaded
into Apache. The "_apache" module will be preloaded into the Python
interpreter when Apache loads mod_python.so. Thus, it will only be there
when running scripts under mod_python proper under Apache.

The only reason I went down the track of asking you to try these imports
from command line Python in the first place, is because the errors which
will occur help to show which version of mod_python you have and whether
all the bits are there. You should now go back to trying the mptest case
under Apache itself and you may have more luck this time.


Graham

From jkp at kirkconsulting.co.uk  Sun Mar 13 06:39:06 2005
From: jkp at kirkconsulting.co.uk (Jamie Kirkpatrick)
Date: Sun Mar 13 06:39:19 2005
Subject: [mod_python] OS X / Apache 2 / mod_python bug
Message-ID: <3CC55788-3F95-43DB-B05C-BD07CB1805C4@kirkconsulting.co.uk>

Dear all.

This mail is really directed at the developers so I hope there are some 
of you listening.  I would have preferred to enter this in a bug 
tracker of some sort, but I couldn't find a relevant URL on the 
website.  Anyway.

I have just spent 5 days battling with what i probably the most 
annoying bug I have ever come across!  For the last week I have been 
trying to work out why the hell I couldnt' get a working install of 
mod_python on OS X and I have tried _everything_.    I had managed to 
get it up and running once or twice, but then I would attempt to tweak 
my Apache config to set things up for the sw i wanted to use (trac) and 
it would die again.  The logs showed absolutely nothing of use even 
with PythonDebug on.

The bug I have discovered basically boils down to a tiny thing that is 
not an easy thing to discover.  If you use `apachectl restart` to 
control the execution of Apache with mod_python installed on OS X 
(server at least, I didnt try the client version but I imagine it will 
be the same), you will find mod_python ceases to function, producing a 
500 error from apache.

As I say , this is not an easy bug to discover, since you never expect 
there to be a difference in the way  a module behaves due to such an 
obscure thing.  I can confirm that this happens on OS X Server 10.3.6-8 
with various different builds of apache2.  I used the stock build, a 
custom built version (from the latest sources) and one from dports with 
the same results.  I also tried different versions of python (The stock 
2.3 Framework, 2.4 built as a framework, 2.4 normal, 2.3 normal....) as 
I had read on these lists that there are some oddities in this area on 
OS X.    Same results.  Just as I was beginning to give up completely I 
worked out what was going on. :p

Bottom line is that i dont want anyone to have to go through the pain I 
went through this week trying to get to the bottom of this issue.  I 
feel 10 times better now I know what the problem is, and for the time 
being the solution is to simply issue a `stop` followed by a `start` 
when i need to change the configuration of the server.  I hope this 
email at least finds it's way to the archives so that fellow OS X 
travellers can learn from my experience as there really is practially 
nothing relating to mod_python on os x on the web.  /me wishes apple 
would have just bundled it in....

I really hope however that my findings can be investigated further so 
that the bug can be resolved and a fix can be rolled into the trunk.

I am happy to do any further testing if a patch is added by anyone.  I 
would like to try myself, but I just don't have the time to get further 
into this stuff.

Many thanks

ps.  At this stage I have only reported the bug to you guys since the 
apache bug tracker asks you to specifically verify that the bug isnt 
related to a module - lets make sure that mod_python isnt at fault 
first and then pass it to the main apache guys if not.

--
jkp

-----BEGIN PGP PUBLIC KEY BLOCK-----
Version: PGP 8.0.3

mQGiBEAvrCkRBADP0l+qGhYxe7VZe8NhHPvHKGfYEzMg/FpZxqRY179JI2EAPM4P
ojR8YuTmFDEPgz+4Ae4IUIJyhJBean5D/CFy3TpHYTUlK3eA1cH7PDNOW7oTGSmM
+zRkD1HnkaPVwylmNvI4RmceA0JuhCi9Y35Bkxa1yBLLB+uRC1Zf4+Ek/QCg/4Jh
161Ewn5UOV2eAmxFFRmyCLsD/jCeNrU4w5i/8YLoVFy3vZYhNsPL299vNc/PmF+h
+NPbbWAgay2UVnyc0lkbtOr+ZiEjgf0ltr3rDrjaF6faxwo8sDE5Tuh1yUUJ5Ngv
VLgyDLn9ChnOxiKYGZeI173JXYYhk3V8eU8qtIdH+IBQeHJjeWJg4dKRNqqDzlaI
r3GmA/9S11g+wKWYwKUNbPqRp29KuiRkINV34EXjAdK20kwb3misSt1x86xUHslq
Egys6T7Ulw1bAFKAWnm4pddv0khVx95reQlk/pIJZym26QSdXORPIjJatEgkQuHX
p5hWVsN4mwak7gKFw6VhJMZGXtT3V/WJgrUUE9AMcMJPQSYneLQsSmFtaWUgS2ly
a3BhdHJpY2sgPGprcEBraXJrY29uc3VsdGluZy5jby51az6JAFcEEBECABcFAkAv
rCkHCwkIBwMCCgIZAQUbAwAAAAAKCRDhFdzdKJk0z8bWAKCbTJ/gTWEpBE4+6uwW
Dn+mGLNi1gCgtQE1xpBMxTY3wjFM7SCT4vUlwGa5Ag0EQC+sKRAIAPZCV7cIfwgX
cqK61qlC8wXo+VMROU+28W65Szgg2gGnVqMU6Y9AVfPQB8bLQ6mUrfdMZIZJ+AyD
vWXpF9Sh01D49Vlf3HZSTz09jdvOmeFXklnN/biudE/F/Ha8g8VHMGHOfMlm/xX5
u/2RXscBqtNbno2gpXI61Brwv0YAWCvl9Ij9WE5J280gtJ3kkQc2azNsOA1FHQ98
iLMcfFstjvbzySPAQ/ClWxiNjrtVjLhdONM0/XwXV0OjHRhs3jMhLLUq/zzhsSlA
GBGNfISnCnLWhsQDGcgHKXrKlQzZlp+r0ApQmwJG0wg9ZqRdQZ+cfL2JSyIZJrqr
ol7DVekyCzsAAgIH/0aGygku5RCrzJUp3lXlPuvc7BvmwRP0RRO9ktbP4abEZXYp
UcUeRbBcU6E3AukBHf5hgmTcNDNAyQeZA75XZhJTQoAkEM9oVUkV66+KoF307hrG
4dNOlFSBYHe/hiT/khmOlXIfB+SvDWYSjsIrP+JU/F1nxrcAqru5xeUh6Y+qIt4b
JPYNYxwf3+OeaRhQFneN+7oxBgSEl74qHmT79jQKqfllZshrs01PpB1UvG77Rn/I
zadbj29gIFw1Gt2eh5aRIN0F2QxvqeMvZ6APqjutv4i+tm1L3U8JNW8fsCpCKkI6
h6MBJSaW6GWTtCBGA/5IX35cg5HlpbwZw96Y892JAEwEGBECAAwFAkAvrCkFGwwA
AAAACgkQ4RXc3SiZNM/0VACeORa/zYtGyekOwxUXzW5BQqdlsjIAoPhHLTE5Kwcq
2WgOOCUuqD0QoU8e
=/4Ed
-----END PGP PUBLIC KEY BLOCK-----

From nicolas.lehuen at gmail.com  Sun Mar 13 12:37:25 2005
From: nicolas.lehuen at gmail.com (Nicolas Lehuen)
Date: Sun Mar 13 13:37:30 2005
Subject: [mod_python] OS X / Apache 2 / mod_python bug
In-Reply-To: <3CC55788-3F95-43DB-B05C-BD07CB1805C4@kirkconsulting.co.uk>
References: <3CC55788-3F95-43DB-B05C-BD07CB1805C4@kirkconsulting.co.uk>
Message-ID: <c298f2d705031309373f85708b@mail.gmail.com>

Hi Jamie,

First of all, the bug tracker for mod_python is there :

http://issues.apache.org/jira/browse/MODPYTHON

Do not hesitate to report the bug here. If you have found where the
issue is, post it there ; if you have a patch, we'll try to include it
ASAP on the Subversion repository, and it will be included in the next
release.

Regards,
Nicolas


On Sun, 13 Mar 2005 11:39:06 +0000, Jamie Kirkpatrick
<jkp@kirkconsulting.co.uk> wrote:
> Dear all.
> 
> This mail is really directed at the developers so I hope there are some
> of you listening.  I would have preferred to enter this in a bug
> tracker of some sort, but I couldn't find a relevant URL on the
> website.  Anyway.
> 
> I have just spent 5 days battling with what i probably the most
> annoying bug I have ever come across!  For the last week I have been
> trying to work out why the hell I couldnt' get a working install of
> mod_python on OS X and I have tried _everything_.    I had managed to
> get it up and running once or twice, but then I would attempt to tweak
> my Apache config to set things up for the sw i wanted to use (trac) and
> it would die again.  The logs showed absolutely nothing of use even
> with PythonDebug on.
> 
> The bug I have discovered basically boils down to a tiny thing that is
> not an easy thing to discover.  If you use `apachectl restart` to
> control the execution of Apache with mod_python installed on OS X
> (server at least, I didnt try the client version but I imagine it will
> be the same), you will find mod_python ceases to function, producing a
> 500 error from apache.
> 
> As I say , this is not an easy bug to discover, since you never expect
> there to be a difference in the way  a module behaves due to such an
> obscure thing.  I can confirm that this happens on OS X Server 10.3.6-8
> with various different builds of apache2.  I used the stock build, a
> custom built version (from the latest sources) and one from dports with
> the same results.  I also tried different versions of python (The stock
> 2.3 Framework, 2.4 built as a framework, 2.4 normal, 2.3 normal....) as
> I had read on these lists that there are some oddities in this area on
> OS X.    Same results.  Just as I was beginning to give up completely I
> worked out what was going on. :p
> 
> Bottom line is that i dont want anyone to have to go through the pain I
> went through this week trying to get to the bottom of this issue.  I
> feel 10 times better now I know what the problem is, and for the time
> being the solution is to simply issue a `stop` followed by a `start`
> when i need to change the configuration of the server.  I hope this
> email at least finds it's way to the archives so that fellow OS X
> travellers can learn from my experience as there really is practially
> nothing relating to mod_python on os x on the web.  /me wishes apple
> would have just bundled it in....
> 
> I really hope however that my findings can be investigated further so
> that the bug can be resolved and a fix can be rolled into the trunk.
> 
> I am happy to do any further testing if a patch is added by anyone.  I
> would like to try myself, but I just don't have the time to get further
> into this stuff.
> 
> Many thanks
> 
> ps.  At this stage I have only reported the bug to you guys since the
> apache bug tracker asks you to specifically verify that the bug isnt
> related to a module - lets make sure that mod_python isnt at fault
> first and then pass it to the main apache guys if not.
> 
> --
> jkp
> 
> -----BEGIN PGP PUBLIC KEY BLOCK-----
> Version: PGP 8.0.3
> 
> mQGiBEAvrCkRBADP0l+qGhYxe7VZe8NhHPvHKGfYEzMg/FpZxqRY179JI2EAPM4P
> ojR8YuTmFDEPgz+4Ae4IUIJyhJBean5D/CFy3TpHYTUlK3eA1cH7PDNOW7oTGSmM
> +zRkD1HnkaPVwylmNvI4RmceA0JuhCi9Y35Bkxa1yBLLB+uRC1Zf4+Ek/QCg/4Jh
> 161Ewn5UOV2eAmxFFRmyCLsD/jCeNrU4w5i/8YLoVFy3vZYhNsPL299vNc/PmF+h
> +NPbbWAgay2UVnyc0lkbtOr+ZiEjgf0ltr3rDrjaF6faxwo8sDE5Tuh1yUUJ5Ngv
> VLgyDLn9ChnOxiKYGZeI173JXYYhk3V8eU8qtIdH+IBQeHJjeWJg4dKRNqqDzlaI
> r3GmA/9S11g+wKWYwKUNbPqRp29KuiRkINV34EXjAdK20kwb3misSt1x86xUHslq
> Egys6T7Ulw1bAFKAWnm4pddv0khVx95reQlk/pIJZym26QSdXORPIjJatEgkQuHX
> p5hWVsN4mwak7gKFw6VhJMZGXtT3V/WJgrUUE9AMcMJPQSYneLQsSmFtaWUgS2ly
> a3BhdHJpY2sgPGprcEBraXJrY29uc3VsdGluZy5jby51az6JAFcEEBECABcFAkAv
> rCkHCwkIBwMCCgIZAQUbAwAAAAAKCRDhFdzdKJk0z8bWAKCbTJ/gTWEpBE4+6uwW
> Dn+mGLNi1gCgtQE1xpBMxTY3wjFM7SCT4vUlwGa5Ag0EQC+sKRAIAPZCV7cIfwgX
> cqK61qlC8wXo+VMROU+28W65Szgg2gGnVqMU6Y9AVfPQB8bLQ6mUrfdMZIZJ+AyD
> vWXpF9Sh01D49Vlf3HZSTz09jdvOmeFXklnN/biudE/F/Ha8g8VHMGHOfMlm/xX5
> u/2RXscBqtNbno2gpXI61Brwv0YAWCvl9Ij9WE5J280gtJ3kkQc2azNsOA1FHQ98
> iLMcfFstjvbzySPAQ/ClWxiNjrtVjLhdONM0/XwXV0OjHRhs3jMhLLUq/zzhsSlA
> GBGNfISnCnLWhsQDGcgHKXrKlQzZlp+r0ApQmwJG0wg9ZqRdQZ+cfL2JSyIZJrqr
> ol7DVekyCzsAAgIH/0aGygku5RCrzJUp3lXlPuvc7BvmwRP0RRO9ktbP4abEZXYp
> UcUeRbBcU6E3AukBHf5hgmTcNDNAyQeZA75XZhJTQoAkEM9oVUkV66+KoF307hrG
> 4dNOlFSBYHe/hiT/khmOlXIfB+SvDWYSjsIrP+JU/F1nxrcAqru5xeUh6Y+qIt4b
> JPYNYxwf3+OeaRhQFneN+7oxBgSEl74qHmT79jQKqfllZshrs01PpB1UvG77Rn/I
> zadbj29gIFw1Gt2eh5aRIN0F2QxvqeMvZ6APqjutv4i+tm1L3U8JNW8fsCpCKkI6
> h6MBJSaW6GWTtCBGA/5IX35cg5HlpbwZw96Y892JAEwEGBECAAwFAkAvrCkFGwwA
> AAAACgkQ4RXc3SiZNM/0VACeORa/zYtGyekOwxUXzW5BQqdlsjIAoPhHLTE5Kwcq
> 2WgOOCUuqD0QoU8e
> =/4Ed
> -----END PGP PUBLIC KEY BLOCK-----
> 
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>
From jason at pengale.com  Sun Mar 13 15:07:51 2005
From: jason at pengale.com (Jason Stitt)
Date: Sun Mar 13 15:07:57 2005
Subject: [mod_python] OS X / Apache 2 / mod_python bug
In-Reply-To: <3CC55788-3F95-43DB-B05C-BD07CB1805C4@kirkconsulting.co.uk>
References: <3CC55788-3F95-43DB-B05C-BD07CB1805C4@kirkconsulting.co.uk>
Message-ID: <6fb402a04381e9ed8e65712a3994b33a@pengale.com>

I can second this exactly. Because I compiled everything myself, I 
thought I might have just messed up a config switch or something, but 
it looks like the problem may be more widespread.

I'm on OS X version 10.3.8 (desktop, not server), with Python 2.4 
(first stable) compiled as a framework, httpd 2.0.52 and mod_python 
3.1.3.

apachectl 'restart' and 'graceful' both make mod_python stop working. 
Stopping apache, waiting and starting it again works fine.

I also have nothing in the logs to indicate any problem or cause.


On Mar 13, 2005, at 5:39 AM, Jamie Kirkpatrick wrote:

-snip-
>
> The bug I have discovered basically boils down to a tiny thing that is 
> not an easy thing to discover.  If you use `apachectl restart` to 
> control the execution of Apache with mod_python installed on OS X 
> (server at least, I didnt try the client version but I imagine it will 
> be the same), you will find mod_python ceases to function, producing a 
> 500 error from apache.
>
- snip -

From grahamd at dscpl.com.au  Sun Mar 13 15:31:23 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Sun Mar 13 15:31:28 2005
Subject: [mod_python] OS X / Apache 2 / mod_python bug
In-Reply-To: <6fb402a04381e9ed8e65712a3994b33a@pengale.com>
Message-ID: <DDC96404-93FE-11D9-A204-000393BB31F6@dscpl.com.au>

Have either of you applied the patch to mod_python which is required
to make it work with standard Python 2.3 which is supplied by Apple?

I know you are using Python 2.4 and as far as I know the patch is
only required with Python 2.3 that Apple supplies, but still want to
know in case it may be relevant.

The details of the patch are posted at:

    
http://www.modpython.org/pipermail/mod_python/2004-September/016507.html

I'll have further questions based on original posters message soon as
some things aren't totally clear.

BTW, I have working, and have had no problems with:

   Python 2.3 (Apple supplied) / mod_python 2.7.11 / Apache 1.3 (Apple  
supplied)

   Python 2.3 (Apple supplied) / mod_python 3.1.3 / Apache 2.0

This has been on Mac OS X (10.3.2ish-10.3.7).

Graham

On Monday, March 14, 2005, at 07:07  AM, Jason Stitt wrote:

> I can second this exactly. Because I compiled everything myself, I  
> thought I might have just messed up a config switch or something, but  
> it looks like the problem may be more widespread.
>
> I'm on OS X version 10.3.8 (desktop, not server), with Python 2.4  
> (first stable) compiled as a framework, httpd 2.0.52 and mod_python  
> 3.1.3.
>
> apachectl 'restart' and 'graceful' both make mod_python stop working.  
> Stopping apache, waiting and starting it again works fine.
>
> I also have nothing in the logs to indicate any problem or cause.
>
>
> On Mar 13, 2005, at 5:39 AM, Jamie Kirkpatrick wrote:
>
> -snip-
>>
>> The bug I have discovered basically boils down to a tiny thing that  
>> is not an easy thing to discover.  If you use `apachectl restart` to  
>> control the execution of Apache with mod_python installed on OS X  
>> (server at least, I didnt try the client version but I imagine it  
>> will be the same), you will find mod_python ceases to function,  
>> producing a 500 error from apache.
>>
> - snip -
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python

From grahamd at dscpl.com.au  Sun Mar 13 16:06:13 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Sun Mar 13 16:06:21 2005
Subject: [mod_python] OS X / Apache 2 / mod_python bug
In-Reply-To: <3CC55788-3F95-43DB-B05C-BD07CB1805C4@kirkconsulting.co.uk>
Message-ID: <BB820910-9403-11D9-A204-000393BB31F6@dscpl.com.au>

Just want to confirm a few things. Please try and answer all the
questions even if you think the answer should be obvious. Something
in your response might indicate something to someone.

On Sunday, March 13, 2005, at 10:39  PM, Jamie Kirkpatrick wrote:

> The bug I have discovered basically boils down to a tiny thing that is 
> not an easy thing to discover.  If you use `apachectl restart` to 
> control the execution of Apache with mod_python installed on OS X 
> (server at least, I didnt try the client version but I imagine it will 
> be the same), you will find mod_python ceases to function, producing a 
> 500 error from apache.

A 500 error is something that would be returned for a request from
a client. This therefore suggests that the restart appears to work
but then upon receiving a request it delivers up a 500 error to the
client. Is this what you mean?

Does every request against the server result in 500 being returned,
or only requests which fall under the control of mod_python?

Does running "apachectl configtest" yield any sort of error or warning
message?

If there is some sort of configuration error in the main Apache config
file, this would usually be displayed on restart/start but can also be
seen by running configtest.

If a configuration error appears in a .htaccess file however, you only
know because the client will receive a 500 error when making a request
against a directory controlled by that .htaccess file. From what I have
seen, nothing normally gets logged in this case.

That said, have you setup use of Apache in the main configuration file
or in a .htaccess file? Can you post what configuration you are using
so we can see if it is pretty normal or something strange? Post it if
you can.

Do you get these 500 errors if the only mod_python application 
configured
is a really basic "mptest" type test handler, or does it only happen
when you go to set it up for this more complicated application?

What parts of mod_python does this more complicated application use?
does it use mod_python.psp, or mod_python.publisher? Does it make use of
cookies or session support in mod_python?

Apart from configuration problems, 500 errors can be raised from within
your code itself, so knowing whether your code is dependent on certain
packages may be important. Also knowing if it uses sessions may also be
useful, as it may be some sort of corruption in the session database.

In both cases when you use restart/start, does the Apache log file 
clearly
show mod_python being loaded and initialised?

> As I say , this is not an easy bug to discover, since you never expect 
> there to be a difference in the way  a module behaves due to such an 
> obscure thing.  I can confirm that this happens on OS X Server 
> 10.3.6-8 with various different builds of apache2.  I used the stock 
> build, a custom built version (from the latest sources) and one from 
> dports with the same results.  I also tried different versions of 
> python (The stock 2.3 Framework, 2.4 built as a framework, 2.4 normal, 
> 2.3 normal....) as I had read on these lists that there are some 
> oddities in this area on OS X.    Same results.  Just as I was 
> beginning to give up completely I worked out what was going on. :p

When you used stock Python 2.3 supplied by Apple, did you have the 
patches
applied which were mentioned in previous email? Without this patch, the
Apache child process would have crashed the first time it received a 
request
for mod_python. I don't recollect whether the client would have seen a 
500
error or not, but that the process crashed is evident in the Apache log 
file.

> I really hope however that my findings can be investigated further so 
> that the bug can be resolved and a fix can be rolled into the trunk.
>
> I am happy to do any further testing if a patch is added by anyone.  I 
> would like to try myself, but I just don't have the time to get 
> further into this stuff.

Answering the above questions would be a good first step to knowing a 
bit more
about your circumstances. A few other things that may prove useful are 
listed
below.

Are you using Apache in "prefork" mode? Did you ever compile it up in 
"worker"
mode with threading to see if it made a difference? If using "worker" 
did you
restrict it to one process with many threads? Doing this would cause 
session
database to go from being disked based to memory based. Did you try 
removing
the session database from /tmp.

Anyway, if you are prepared to go to a bit of effort to answer each 
question we
can see if we can sort this out.

Graham

From jkp at kirkconsulting.co.uk  Mon Mar 14 04:16:57 2005
From: jkp at kirkconsulting.co.uk (Jamie Kirkpatrick)
Date: Mon Mar 14 04:17:16 2005
Subject: [mod_python] OS X / Apache 2 / mod_python bug
In-Reply-To: <669a286ae467c6c7b470e80e7f7dd600@comcast.net>
References: <3CC55788-3F95-43DB-B05C-BD07CB1805C4@kirkconsulting.co.uk>
	<669a286ae467c6c7b470e80e7f7dd600@comcast.net>
Message-ID: <3480CB75-9D48-44AC-8CDE-7F822F8EAC1F@kirkconsulting.co.uk>


On 13 Mar 2005, at 17:13, John Raines wrote:

> I'm running Apache2.0.53,python 2.3.3(from fink), osX10.3.8 and 
> mod_python 3.1.4.  Apachectl that comes in the sys path is targeted 
> at the Apache1.3 that came with my powerMacG4. the apachectl that 
> relates to apache2 on my machine is at 
> /usr/local/apache2/bin/apachectl and can be invoked with the full 
> path; I renamed the std apachectl and put a link to the apache2 
> version into /usr/sbin (where apachectl for 1.3 sits)

Sure, but I'm definitely using the right one!!!! ;)

>
> Another issue has been the dynamic shared object thing which has 
> prevented me from moving up to python 2.3.4 or python2.4.
>
> Graham Dumpleton set me straight on that issue in these posts:
>
> If you really want to use Python 2.4, you are going to have to somehow
> force a reference to the Python library in mod_python.so. Since you 
> aren't
> using a framework install, not sure what the library is you have to 
> force
> link with. You might want to look for Python related libraries in such
> directories as:
>
>   /usr/local/lib
>   /usr/local/lib/python2.4/config

That's pretty easy to do - just point the ./configure script at the 
correct python install when you build and make sure it's components are 
first in your path.  that way it will be preffered over the stock 
install.  Darwinports is already configured to used  it's own 2.4 
install and I had no trouble linking to my own.  You can tell which is 
being using by the footer (or looking in the error_log) shown by Apache.

>
> BTW, is there anything you really want in Python 2.4? Especially if 
> you are
> a UNIX novice, trying to host two different versions of Python on 
> MacOSX
> can be a problem. I guess at least you didn't use a framework install 
> and
> do it on top of the system supplied version of Python. Doing that can
> really screw things up bad.

I don't really need 2.4, but I tried all versions in my quest to sort 
this mess out!

>
> The only catch on using standard MacOSX Python installation is that 
> you
> need to patch src/mod_python.c file in source to workaround a problem
> with it. Use of "worker" may also trigger some other mod_python bugs.
> Fixes for both are detailed in:
>
>   http://www.dscpl.com.au/projects/vampire/PATCHES
>
> Graham
>
> The problem is that the libpython2.4.a is a static library and there
> is not a dynamically loadable library. See following comment from the
> mod_python README file:
>
>   3. On Darwin, libpython cannot be linked statically with mod_python
>   using libtool. libpython has to be a dynamic shared object. The 
> Python
>   distribution does not provide a way of building libpython as a 
> shared
>   library, but the Fink Python distribution comes with one
>   (/sw/lib/python2.2/config/libpython2.2.dylib), so the easiest thing 
> is
>   to install Python from Fink (fink.sourceforge.net).
>
> I would assume the same comment applies if building your own version
> of Python on full MacOSX and where a framework install wasn't done.
>
> Normally with a framework install, the dynamically loadable version is
> installed under the framework package as:
>
>   /System/Library/Frameworks/Python.framework/Versions/2.3/Python
>
> If you run "otool -L" on your old mod_python.so which used standard
> Python version, that is what you should have seen.
>
> Your options thus seem to be:
>
> 1. Use standard Python 2.3 shipped with MacOSX.
>
> 2. Use Python 2.4 provided with "fink" packages.
>
> 3. Install Python 2.4 as a framework but make sure you install it
> such that you don't overwrite the standard Python installation.

I did do this at one point - it doesn't overwrite since it puts 
everything in /Library rather that /System/Library.

>
> The safest and quickest thing to do is use Python 2.3 shipped with
> the box. Using fink means a lot of crap get installed on your box
> that you might not want. Installing Python 2.4 runs the risk of
> trashing your system version of Python if you do the wrong thing.

I think he is right here, just that this bug was obscuring my vision.  
If I could iron out the bug I might go back to building everything from 
source and doing it this way.  I prefer the control i get of things 
that way.  Lets see what the responses from the list turn up!

Cheers

Jamie

PS - my errors seem to be of a different breed to yours since you got 
detail in the logs.  Even with PythonDebug on i get nothing.  :/

>
> Graham
>
>
> John Raines wrote ..
>> My website had been stable and running without error but I'd been
>> running on 2.3.3, 2.0.52 and 3.1.3; since everything was behind the
>> times I decided to finally reinstall; I made the mistake of doing it 
>> on
>> the drive that everything was being served off of instead of using my
>> backup drive. :-(
>>
>> I installed python 2.4 and it seems to work when I call it from the
>> shell. I did not do a frameworkInstall, which seems to be recommended
>> by some people. I am too much of a unix novice to understand what the
>> implications of frameworkInstall are. I installed apache and 
>> mod_python
>> as follows:
>>
>> cd ~/Desktop/httpd-2.0.53
>> ./configure --enable-so --with-mpm=worker
>> make
>> sudo make install
>>
>> cd ~/Desktop/mod_python-3.1.4
>> ./configure --with apxs=/usr/local/apache2/bin/apxs
>> --with-python=/usr/local/bin/python2.4
>> make
>> sudo make install
>>
>> I restored my old httpd.conf file and my website files. My index.html
>> file is straight html which links to .py files. As soon as I try to
>> access any of the .py stuff I now get an internal server error 
>> message
>> and the server log shows this:
>>
>> [Tue Feb 15 16:25:25 2005] [notice] mod_python: Creating 32 session
>> mutexes based on 6 max processes and 25 max threads.
>> [Tue Feb 15 16:25:25 2005] [notice] Apache configured -- resuming
>> normal operations
>> [Tue Feb 15 16:25:36 2005] [error] make_obcallback: could not import
>> mod_python.apache.\n
>> Traceback (most recent call last):
>>    File 
>> "/usr/local/lib/python2.4/site-packages/mod_python/apache.py",
>> line 22, in ?
>>      import time
>> ImportError: Failure linking new module: : dyld:
>> /usr/local/apache2/bin/httpd Undefined symbols:
>> /usr/local/lib/python2.4/lib-dynload/time.so undefined reference to
>> _PyArg_Parse expected to be defined in the executable
>> /usr/local/lib/python2.4/lib-dynload/time.so undefined reference to
>> _PyArg_ParseTuple expected to be defined in the executable
>> /usr/local/lib/python2.4/lib-dynload/time.so undefined reference to
>> _PyDict_GetItemString expected to be defined in the executable
>> /usr/local/lib/python2.4/lib-dynload/time.so un
>>                                                               <--what
>> happened here??
>> [Tue Feb 15 16:25:36 2005] [error] make_obcallback: could not import
>> mod_python.apache.
>>
>> for what its worth I can access various parts of the time module 
>> when I
>> run Python2.4 from the shell.
>>
>> Going back through the the mailing list I saw that Graham Dumpleton
>> (back on Dec 23) suggested the output from this might be useful; 
>> what I
>> get is different from what he saw but I'm not sure what to make of my
>> result:
>>
>> jraines-Computer:~/Desktop/Website jrraines$ otool otool -L
>> /usr/local/apache2/modules/mod_python.so
>> otool: can't open file: otool (No such file or directory)
>> /usr/local/apache2/modules/mod_python.so:
>>          /usr/lib/libSystem.B.dylib (compatibility version 1.0.0,
>> current version 71.1.1)
>>
>> jraines-Computer:~/Desktop/Website jrraines$ ls
>> /usr/local/apache2/modules
>> httpd.exp       mod_python.so
>>
>> My problem seemed like it might be similar to a thread titled Weird
>> ob_callback problems at the end of Jan. I tried the suggestions 
>> Grisha
>> made:Try defining DYLD_FORCE_FLAT_NAMESPACE=1 environment variable
>> before launching httpd.
>> That didn't help either.
>
> On Mar 13, 2005, at 5:39 AM, Jamie Kirkpatrick wrote:
>
>> Dear all.
>>
>> This mail is really directed at the developers so I hope there are 
>> some of you listening.  I would have preferred to enter this in a 
>> bug tracker of some sort, but I couldn't find a relevant URL on the 
>> website.  Anyway.
>>
>> I have just spent 5 days battling with what i probably the most 
>> annoying bug I have ever come across!  For the last week I have been 
>> trying to work out why the hell I couldnt' get a working install of 
>> mod_python on OS X and I have tried _everything_.    I had managed 
>> to get it up and running once or twice, but then I would attempt to 
>> tweak my Apache config to set things up for the sw i wanted to use 
>> (trac) and it would die again.  The logs showed absolutely nothing 
>> of use even with PythonDebug on.
>>
>> The bug I have discovered basically boils down to a tiny thing that 
>> is not an easy thing to discover.  If you use `apachectl restart` to 
>> control the execution of Apache with mod_python installed on OS X 
>> (server at least, I didnt try the client version but I imagine it 
>> will be the same), you will find mod_python ceases to function, 
>> producing a 500 error from apache.
>>
>> As I say , this is not an easy bug to discover, since you never 
>> expect there to be a difference in the way  a module behaves due to 
>> such an obscure thing.  I can confirm that this happens on OS X 
>> Server 10.3.6-8 with various different builds of apache2.  I used 
>> the stock build, a custom built version (from the latest sources) 
>> and one from dports with the same results.  I also tried different 
>> versions of python (The stock 2.3 Framework, 2.4 built as a 
>> framework, 2.4 normal, 2.3 normal....) as I had read on these lists 
>> that there are some oddities in this area on OS X.    Same results.  
>> Just as I was beginning to give up completely I worked out what was 
>> going on. :p
>>
>> Bottom line is that i dont want anyone to have to go through the 
>> pain I went through this week trying to get to the bottom of this 
>> issue.  I feel 10 times better now I know what the problem is, and 
>> for the time being the solution is to simply issue a `stop` followed 
>> by a `start` when i need to change the configuration of the server.  
>> I hope this email at least finds it's way to the archives so that 
>> fellow OS X travellers can learn from my experience as there really 
>> is practially nothing relating to mod_python on os x on the web.  
>> /me wishes apple would have just bundled it in....
>>
>> I really hope however that my findings can be investigated further 
>> so that the bug can be resolved and a fix can be rolled into the 
>> trunk.
>>
>> I am happy to do any further testing if a patch is added by anyone.  
>> I would like to try myself, but I just don't have the time to get 
>> further into this stuff.
>>
>> Many thanks
>>
>> ps.  At this stage I have only reported the bug to you guys since 
>> the apache bug tracker asks you to specifically verify that the bug 
>> isnt related to a module - lets make sure that mod_python isnt at 
>> fault first and then pass it to the main apache guys if not.
>>
>> --
>> jkp
>>
>> -----BEGIN PGP PUBLIC KEY BLOCK-----
>> Version: PGP 8.0.3
>>
>> mQGiBEAvrCkRBADP0l+qGhYxe7VZe8NhHPvHKGfYEzMg/FpZxqRY179JI2EAPM4P
>> ojR8YuTmFDEPgz+4Ae4IUIJyhJBean5D/CFy3TpHYTUlK3eA1cH7PDNOW7oTGSmM
>> +zRkD1HnkaPVwylmNvI4RmceA0JuhCi9Y35Bkxa1yBLLB+uRC1Zf4+Ek/QCg/4Jh
>> 161Ewn5UOV2eAmxFFRmyCLsD/jCeNrU4w5i/8YLoVFy3vZYhNsPL299vNc/PmF+h
>> +NPbbWAgay2UVnyc0lkbtOr+ZiEjgf0ltr3rDrjaF6faxwo8sDE5Tuh1yUUJ5Ngv
>> VLgyDLn9ChnOxiKYGZeI173JXYYhk3V8eU8qtIdH+IBQeHJjeWJg4dKRNqqDzlaI
>> r3GmA/9S11g+wKWYwKUNbPqRp29KuiRkINV34EXjAdK20kwb3misSt1x86xUHslq
>> Egys6T7Ulw1bAFKAWnm4pddv0khVx95reQlk/pIJZym26QSdXORPIjJatEgkQuHX
>> p5hWVsN4mwak7gKFw6VhJMZGXtT3V/WJgrUUE9AMcMJPQSYneLQsSmFtaWUgS2ly
>> a3BhdHJpY2sgPGprcEBraXJrY29uc3VsdGluZy5jby51az6JAFcEEBECABcFAkAv
>> rCkHCwkIBwMCCgIZAQUbAwAAAAAKCRDhFdzdKJk0z8bWAKCbTJ/gTWEpBE4+6uwW
>> Dn+mGLNi1gCgtQE1xpBMxTY3wjFM7SCT4vUlwGa5Ag0EQC+sKRAIAPZCV7cIfwgX
>> cqK61qlC8wXo+VMROU+28W65Szgg2gGnVqMU6Y9AVfPQB8bLQ6mUrfdMZIZJ+AyD
>> vWXpF9Sh01D49Vlf3HZSTz09jdvOmeFXklnN/biudE/F/Ha8g8VHMGHOfMlm/xX5
>> u/2RXscBqtNbno2gpXI61Brwv0YAWCvl9Ij9WE5J280gtJ3kkQc2azNsOA1FHQ98
>> iLMcfFstjvbzySPAQ/ClWxiNjrtVjLhdONM0/XwXV0OjHRhs3jMhLLUq/zzhsSlA
>> GBGNfISnCnLWhsQDGcgHKXrKlQzZlp+r0ApQmwJG0wg9ZqRdQZ+cfL2JSyIZJrqr
>> ol7DVekyCzsAAgIH/0aGygku5RCrzJUp3lXlPuvc7BvmwRP0RRO9ktbP4abEZXYp
>> UcUeRbBcU6E3AukBHf5hgmTcNDNAyQeZA75XZhJTQoAkEM9oVUkV66+KoF307hrG
>> 4dNOlFSBYHe/hiT/khmOlXIfB+SvDWYSjsIrP+JU/F1nxrcAqru5xeUh6Y+qIt4b
>> JPYNYxwf3+OeaRhQFneN+7oxBgSEl74qHmT79jQKqfllZshrs01PpB1UvG77Rn/I
>> zadbj29gIFw1Gt2eh5aRIN0F2QxvqeMvZ6APqjutv4i+tm1L3U8JNW8fsCpCKkI6
>> h6MBJSaW6GWTtCBGA/5IX35cg5HlpbwZw96Y892JAEwEGBECAAwFAkAvrCkFGwwA
>> AAAACgkQ4RXc3SiZNM/0VACeORa/zYtGyekOwxUXzW5BQqdlsjIAoPhHLTE5Kwcq
>> 2WgOOCUuqD0QoU8e
>> =/4Ed
>> -----END PGP PUBLIC KEY BLOCK-----
>>
>> _______________________________________________
>> Mod_python mailing list
>> Mod_python@modpython.org
>> http://mailman.modpython.org/mailman/listinfo/mod_python
>>
>

From jkp at kirkconsulting.co.uk  Mon Mar 14 04:07:55 2005
From: jkp at kirkconsulting.co.uk (Jamie Kirkpatrick)
Date: Mon Mar 14 05:40:10 2005
Subject: [mod_python] OS X / Apache 2 / mod_python bug
Message-ID: <6D17D784-9475-11D9-93F3-000393BB31F6@kirkconsulting.co.uk>


On 13 Mar 2005, at 21:06, Graham Dumpleton wrote:

Just want to confirm a few things. Please try and answer all the

questions even if you think the answer should be obvious. Something

in your response might indicate something to someone.



On Sunday, March 13, 2005, at 10:39?PM, Jamie Kirkpatrick wrote:



The bug I have discovered basically boils down to a tiny thing that is  
not an easy thing to discover.?If you use `apachectl restart` to  
control the execution of Apache with mod_python installed on OS X  
(server at least, I didnt try the client version but I imagine it will  
be the same), you will find mod_python ceases to function, producing a  
500 error from apache.



A 500 error is something that would be returned for a request from

a client. This therefore suggests that the restart appears to work

but then upon receiving a request it delivers up a 500 error to the

client. Is this what you mean?


Yep.



Does every request against the server result in 500 being returned,

or only requests which fall under the control of mod_python?




Only those that fall under mod_python.? Other pages are fine.



Does running "apachectl configtest" yield any sort of error or warning

message?


None.



If there is some sort of configuration error in the main Apache config

file, this would usually be displayed on restart/start but can also be

seen by running configtest.


None.? The same configuration works fine using start / stop, there is  
nothing in the error nor access log.




If a configuration error appears in a .htaccess file however, you only

know because the client will receive a 500 error when making a request

against a directory controlled by that .htaccess file. From what I have

seen, nothing normally gets logged in this case.


It's all?configured from the main config file.



That said, have you setup use of Apache in the main configuration file

or in a .htaccess file? Can you post what configuration you are using

so we can see if it is pretty normal or something strange? Post it if

you can.




I can post but its rather long - I am pretty darn confident that there  
is nothing wrong with the config tho.? I havent changed barely anything  
from the stock install, in-fact, I can?reproduce the error by leaving  
everything as is from when the install is performed and only adding a  
python handler to the default htdocs directory.? The only thing I have  
consistently changed is the port the server is listening on to port  
8080.? I have tested with the minimum of changes: added a handler and  
dropped in a small test script.



Do you get these 500 errors if the only mod_python application  
configured

is a really basic "mptest" type test handler, or does it only happen

when you go to set it up for this more complicated application?


I used the hello.py example from the site and consistently got the same  
results.? This was how I finally pinned it down to mod_python.? See the  
last answer for further details.



What parts of mod_python does this more complicated application use?

does it use mod_python.psp, or mod_python.publisher? Does it make use of

cookies or session support in mod_python?


See answer above.? The other app uses all sorts, but this is  
fairly?irrelevant since i can reproduce the error on a test script.? PS  
- Im not a python programmer at all so I am fairly bad at being able to  
track things down within python itself.



Apart from configuration problems, 500 errors can be raised from within

your code itself, so knowing whether your code is dependent on certain

packages may be important. Also knowing if it uses sessions may also be

useful, as it may be some sort of corruption in the session database.



In both cases when you use restart/start, does the Apache log file  
clearly

show mod_python being loaded and initialised?


In all cases it shows as being cleanly loaded.



As I say , this is not an easy bug to discover, since you never expect  
there to be a difference in the way?a module behaves due to such an  
obscure thing.?I can confirm that this happens on OS X Server 10.3.6-8  
with various different builds of apache2.?I used the stock build, a  
custom built version (from the latest sources) and one from dports with  
the same results.?I also tried different versions of python (The stock  
2.3 Framework, 2.4 built as a framework, 2.4 normal, 2.3 normal....) as  
I had read on these lists that there are some oddities in this area on  
OS X.? ?Same results.?Just as I was beginning to give up completely I  
worked out what was going on. :p



When you used stock Python 2.3 supplied by Apple, did you have the  
patches

applied which were mentioned in previous email? Without this patch, the

Apache child process would have crashed the first time it received a  
request

for mod_python. I don't recollect whether the client would have seen a  
500

error or not, but that the process crashed is evident in the Apache log  
file.


I patched this existing Apple Makefile  
(/System/Library/Frameworks/Python.framework/Versions/2.3/lib/ 
python2.3/config/Makefile) with



:98



LDSHARED=?env MACOSX_DEPLOYMENT_TARGET=10.3 $(CC) $(LDFLAGS)  
-bundle?-undefined dynamic_lookup

BLDSHARED=?env MACOSX_DEPLOYMENT_TARGET=10.3 $(CC) $(LDFLAGS)  
-bundle?-undefined dynamic_lookup



and I patched any other 3.3.x Makefiles too as per older emails.




I really hope however that my findings can be investigated further so  
that the bug can be resolved and a fix can be rolled into the trunk.



I am happy to do any further testing if a patch is added by anyone.?I  
would like to try myself, but I just don't have the time to get further  
into this stuff.



Answering the above questions would be a good first step to knowing a  
bit more

about your circumstances. A few other things that may prove useful are  
listed

below.



Are you using Apache in "prefork" mode?


Nope.

Did you ever compile it up in "worker"

mode with threading to see if it made a difference? If using "worker"  
did you

restrict it to one process with many threads?

Doing this would cause session

database to go from being disked based to memory based. Did you try  
removing

the session database from /tmp.


I did not try any of these options - perhaps I'll look them up but I do  
feel it should build without stuff like that.? I could be wrong tho!



Anyway, if you are prepared to go to a bit of effort to answer each  
question we

can see if we can sort this out.


sure...anything I can do to help.? I havent included the config file  
now as its so long.? If you feel its gonna help I'll do so in the next  
mail.? Also, sorry for the shortness of some of my responses - It's  
early here!? I wanted to get something back to you so you wouild know  
something more, I hope what I have written will give you a better  
picture.? I look?forward to helping to iron this one out.



Graham




-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: text/enriched
Size: 6912 bytes
Desc: not available
Url : http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20050314/bfb5ce0c/attachment.bin
From grahamd at dscpl.com.au  Mon Mar 14 06:13:45 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Mon Mar 14 06:13:51 2005
Subject: [mod_python] OS X / Apache 2 / mod_python bug
In-Reply-To: <B016CA09-48B3-45DD-B472-EB3CC36C1071@kirkconsulting.co.uk>
Message-ID: <21B3AD9A-947A-11D9-93F3-000393BB31F6@dscpl.com.au>


On Monday, March 14, 2005, at 08:07  PM, Jamie Kirkpatrick wrote:
> That said, have you setup use of Apache in the main configuration file
>
> or in a .htaccess file? Can you post what configuration you are using
>
> so we can see if it is pretty normal or something strange? Post it if
>
> you can.
>
> I can post but its rather long - I am pretty darn confident that there 
> is nothing wrong with the config tho.? I havent changed barely 
> anything from the stock install, in-fact, I can?reproduce the error by 
> leaving everything as is from when the install is performed and only 
> adding a python handler to the default htdocs directory.? The only 
> thing I have consistently changed is the port the server is listening 
> on to port 8080.? I have tested with the minimum of changes: added a 
> handler and dropped in a small test script.

The whole Apache config file isn't required, but just the small section 
where
your define SetHandler/AddHandler and PythonHandler. Ie., the 
appropriate
<Directory> construct covering your htdocs directory. This is just to 
get the
whole picture and clarify that it is being done within a Directory 
directive
as opposed to being at global scope in the config.

> Do you get these 500 errors if the only mod_python application 
> configured
>
> is a really basic "mptest" type test handler, or does it only happen
>
> when you go to set it up for this more complicated application?
>
>
> I used the hello.py example from the site and consistently got the 
> same results.? This was how I finally pinned it down to mod_python.? 
> See the last answer for further details.

Sending a copy of the hello.py wouldn't hurt as well.

Based on your other answers, is very strange and nothing obvious stands 
out.
The next thing I would try is to localise where the 500 error actually 
gets
raised. There are four possible places it could be occurring. These are:

1. In Python code executed within the handler itself.

2. In the Python code part of mod_python. Ie., somewhere within the file
lib/python/mod_python/apache.py.

3. In the C code part of mod_python. Ie., somewhere within the file
src/mod_python.c.

4. In Apache itself somewhere prior to, but possibly after mod_python is
invoked. Lets hope not. :-)

Elimination of 1 is pretty straight forward by using a test handler 
which
contains:

     from mod_python import apache
     apache.log_error("start import")

     def handler(req):
         apache.log_error("start handler")
         req.content_type = "text/plain"
         req.send_http_header()
         req.write("Hello World!")
         apache.log_error("end handler")
         return apache.OK

     apache.log_error("end import")

If the 500 error is not generated from within the import of the handler
module or the handler itself when called, you should see in the Apache
error log all of the messages above.

BTW, as an extra precaution, if Apache is able to write to your document
directories, you may want to manually remove any ".pyc" files that may
have been generated as the result of a prior test, before running the 
test.

To test out 2, one would need to modify lib/python/mod_python/apache.py
and reinstall it. You should add calls to apache.log_error() into 
apache.py
to track where it may get to within its execution.

I think the appropriate place to place log statements in that file is at
the start of the class method:

   def HandlerDispatch(self, req):

     log_error("start dispatch")

Prior to the final return of the method, add:

     log_error("end dispatch %s"%str(result))

There is a return part way through the method which returns a 500 error,
but it is preceded by logging of a message anyway.

If it is found that 500 is being returned from the method, this would
localise the cause of the problem to this method. At this point we would
have to start analysing further the method and the potential sources of
the 500 error by adding more logging and checking where result is being
set to 500.

If this method always returns a 200 status response, yet the browser
still sees 500, we would have to consider number 3 above.

At this point things get a bit trickier as one is dealing with the C 
code.
It is worth noting though that most instances of where a 500 response 
are
generated in the mod_python.c file are preceded by message logging. The
only ones that aren't are all of the form:

     /* get/create interpreter */
     idata = get_interpreter(interp_name, req->server);

     if (!idata)
         return HTTP_INTERNAL_SERVER_ERROR;

Not being able to get/create the interpreter is pretty severe and if 
that
was happening then no Python code at all would be getting executed. I am
not sure why this situation couldn't be logged as well. Thus instead of
that above, have:

     if (!idata) {
         ap_log_rerror(APLOG_MARK, APLOG_NOERRNO|APLOG_ERR, 0, req,
                       "python_handler: Can't get/create interpreter.");

         return HTTP_INTERNAL_SERVER_ERROR;
     }

Anyway, that is the steps I would personally pursue to try and narrow 
down
where the 500 error is being generated from. Once one can reliably 
pinpoint
it down to a specific area of code in this way, have a better chance of
determining why it is happening.

Graham



  
    

From toni.brkic at switchcore.com  Mon Mar 14 08:06:48 2005
From: toni.brkic at switchcore.com (Toni Brkic)
Date: Mon Mar 14 08:06:52 2005
Subject: [mod_python] mod_python stopped working
Message-ID: <42358C68.9040401@switchcore.com>

Hi,

I've used trac with mod_python but after an security update it stopped 
working so I assume the fault is in mod_python/apache2 and not in the 
python scritpts.

But I would appreciate if anybody could give any hints how to pinpoint
where the problem is a little bit better, because right now I have no 
idea on how to go forward.

My OS is Linux with SuSE9.1. The installed rpm:s i have are:
apache2-prefork-2.0.50-3.1
apache2-2.0.50-3.1
apache2-mod_python-3.1.3-37.6

My error log looks like below when I use mod_python now. My scripts 
works fine with cgi.

What I noticed is that before I got the message:
mod_python: (Re)importing module 'trac.ModPythonHandler'
But I dont get that anymore.

[Mon Mar 14 11:00:46 2005] [notice] suEXEC mechanism enabled (wrapper: 
/usr/sbin/suexec2)
[Mon Mar 14 11:00:46 2005] [notice] mod_python: Creating 32 session 
mutexes based on 150 max processes and 0 max threads.
[Mon Mar 14 11:00:46 2005] [notice] Apache/2.0.50 (Linux/SUSE) 
configured -- resuming normal operations
[Mon Mar 14 11:01:04 2005] [notice] child pid 7377 exit signal 
Segmentation fault (11)
[Mon Mar 14 11:01:11 2005] [notice] child pid 7378 exit signal 
Segmentation fault (11)
[Mon Mar 14 11:01:21 2005] [notice] child pid 7376 exit signal 
Segmentation fault (11)
[Mon Mar 14 11:01:25 2005] [notice] child pid 7379 exit signal 
Segmentation fault (11)
[Mon Mar 14 11:03:04 2005] [notice] child pid 7380 exit signal 
Segmentation fault (11)
[Mon Mar 14 11:03:21 2005] [notice] child pid 7395 exit signal 
Segmentation fault (11)
[Mon Mar 14 11:05:37 2005] [warn] child process 7398 still did not exit, 
sending a SIGTERM
[Mon Mar 14 11:05:37 2005] [warn] child process 7396 still did not exit, 
sending a SIGTERM
[Mon Mar 14 11:05:37 2005] [warn] child process 7397 still did not exit, 
sending a SIGTERM
[Mon Mar 14 11:05:37 2005] [warn] child process 7426 still did not exit, 
sending a SIGTERM
[Mon Mar 14 11:05:37 2005] [warn] child process 7438 still did not exit, 
sending a SIGTERM
[Mon Mar 14 11:05:37 2005] [warn] child process 7398 still did not exit, 
sending a SIGTERM
[Mon Mar 14 11:05:37 2005] [warn] child process 7396 still did not exit, 
sending a SIGTERM
[Mon Mar 14 11:05:37 2005] [warn] child process 7397 still did not exit, 
sending a SIGTERM
[Mon Mar 14 11:05:37 2005] [warn] child process 7426 still did not exit, 
sending a SIGTERM
[Mon Mar 14 11:05:37 2005] [warn] child process 7438 still did not exit, 
sending a SIGTERM
[Mon Mar 14 11:05:38 2005] [notice] caught SIGTERM, shutting down
From bortzmeyer at nic.fr  Mon Mar 14 10:17:37 2005
From: bortzmeyer at nic.fr (Stephane Bortzmeyer)
Date: Mon Mar 14 10:17:44 2005
Subject: [mod_python] mod_python.publisher and Cheetah
Message-ID: <20050314151737.GA9521@generic-nic.net>

I always used Cheetah on Apache with a custom mod_python handler (see
http://wiki.cheetahtemplate.org/cheetahrecipes.html). I would like to
use mod_python's publisher
http://www.modpython.org/live/current/doc-html/hand-pub.html, in order
to limit my liability :-) specially for security reasons.

It works fine but not if I use Cheetah's inheritance, as described in
http://www.cheetahtemplate.org/docs/users_guide_html_multipage/inheritanceEtc.extends.html.
My foobar.tmpl Cheetah file is compiled as foobar.py, which includes a
foobar class. I added a index() routine but Cheetah puts in in the
foobar class, not directly in the foobar module. When
mod_python.publisher calls index(), it finds nothing and returns
NOT_FOUND.



My SiteLogic.py:


from Cheetah.Template import Template

class SiteLogic(Template):
        """ Pure Python class containing methods for the site """

        # Never found because Cheetah puts it in a class
        def index(req):
            return "Dummy"
        


My Site.tmpl:



#from SiteLogic import SiteLogic
#extends SiteLogic
#implements respond

#def title
No title #slurp
#end def

#def body
<P>Default body.
#end def

<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<HTML>
<HEAD>
<TITLE>
$title
</TITLE>
</HEAD>
<BODY>
<H1>$title</H1>
$body
<HR>



A typical page:


#from Site import Site
#extends Site
#implements body
#def title
Welcome
#end def

<P>Some content.
From grahamd at dscpl.com.au  Mon Mar 14 15:53:39 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Mon Mar 14 15:53:45 2005
Subject: [mod_python] mod_python stopped working
In-Reply-To: <42358C68.9040401@switchcore.com>
Message-ID: <24827A36-94CB-11D9-A045-000393BB31F6@dscpl.com.au>

Segmentation faults generally result from different packages being
used directly/indirectly within Apache and mod_python which have
been compiled against different versions of some shared libraries.

The two main libraries which seem to always trigger this are libexpat
and the MySQL shared libraries.

On Fedora, there was also a specific libexpat RPM version which would
cause segmentation faults.

First thing to try would be to disable PHP so that it isn't loaded
at all by Apache and then try the mod_python code. This is because
it is generally PHP which is the other package using these shared
libraries which are in conflict with what mod_python is using.

Also try reading over the following links:

   http://www.modpython.org/FAQ/faqw.py?req=show&file=faq02.013.htp
   
http://www.modpython.org/pipermail/mod_python/2005-February/017305.html

You can search for more from the search box on the mod_python site.

You would then need to investigate as to what shared libraries PHP
and various Python modules such as pyexpat may have been compiled
against.

One of the suggestions generally put up is to not trust the packaged
versions and build everything from source code so you know which
versions are used.

Graham

On Tuesday, March 15, 2005, at 12:06  AM, Toni Brkic wrote:

> Hi,
>
> I've used trac with mod_python but after an security update it stopped 
> working so I assume the fault is in mod_python/apache2 and not in the 
> python scritpts.
>
> But I would appreciate if anybody could give any hints how to pinpoint
> where the problem is a little bit better, because right now I have no 
> idea on how to go forward.
>
> My OS is Linux with SuSE9.1. The installed rpm:s i have are:
> apache2-prefork-2.0.50-3.1
> apache2-2.0.50-3.1
> apache2-mod_python-3.1.3-37.6
>
> My error log looks like below when I use mod_python now. My scripts 
> works fine with cgi.
>
> What I noticed is that before I got the message:
> mod_python: (Re)importing module 'trac.ModPythonHandler'
> But I dont get that anymore.
>
> [Mon Mar 14 11:00:46 2005] [notice] suEXEC mechanism enabled (wrapper: 
> /usr/sbin/suexec2)
> [Mon Mar 14 11:00:46 2005] [notice] mod_python: Creating 32 session 
> mutexes based on 150 max processes and 0 max threads.
> [Mon Mar 14 11:00:46 2005] [notice] Apache/2.0.50 (Linux/SUSE) 
> configured -- resuming normal operations
> [Mon Mar 14 11:01:04 2005] [notice] child pid 7377 exit signal 
> Segmentation fault (11)
> [Mon Mar 14 11:01:11 2005] [notice] child pid 7378 exit signal 
> Segmentation fault (11)
> [Mon Mar 14 11:01:21 2005] [notice] child pid 7376 exit signal 
> Segmentation fault (11)
> [Mon Mar 14 11:01:25 2005] [notice] child pid 7379 exit signal 
> Segmentation fault (11)
> [Mon Mar 14 11:03:04 2005] [notice] child pid 7380 exit signal 
> Segmentation fault (11)
> [Mon Mar 14 11:03:21 2005] [notice] child pid 7395 exit signal 
> Segmentation fault (11)
> [Mon Mar 14 11:05:37 2005] [warn] child process 7398 still did not 
> exit, sending a SIGTERM
> [Mon Mar 14 11:05:37 2005] [warn] child process 7396 still did not 
> exit, sending a SIGTERM
> [Mon Mar 14 11:05:37 2005] [warn] child process 7397 still did not 
> exit, sending a SIGTERM
> [Mon Mar 14 11:05:37 2005] [warn] child process 7426 still did not 
> exit, sending a SIGTERM
> [Mon Mar 14 11:05:37 2005] [warn] child process 7438 still did not 
> exit, sending a SIGTERM
> [Mon Mar 14 11:05:37 2005] [warn] child process 7398 still did not 
> exit, sending a SIGTERM
> [Mon Mar 14 11:05:37 2005] [warn] child process 7396 still did not 
> exit, sending a SIGTERM
> [Mon Mar 14 11:05:37 2005] [warn] child process 7397 still did not 
> exit, sending a SIGTERM
> [Mon Mar 14 11:05:37 2005] [warn] child process 7426 still did not 
> exit, sending a SIGTERM
> [Mon Mar 14 11:05:37 2005] [warn] child process 7438 still did not 
> exit, sending a SIGTERM
> [Mon Mar 14 11:05:38 2005] [notice] caught SIGTERM, shutting down
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python

From grahamd at dscpl.com.au  Mon Mar 14 16:29:50 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Mon Mar 14 16:29:57 2005
Subject: [mod_python] mod_python.publisher and Cheetah
In-Reply-To: <20050314151737.GA9521@generic-nic.net>
Message-ID: <32396CB3-94D0-11D9-A045-000393BB31F6@dscpl.com.au>

I somewhat suspect that you aren't going to get the code as by
default generated by Cheetah to play well with publisher. As to
your original custom handler, you could clean it up somewhat
by using something like:

start = "/python/"

from mod_python import apache
import string

def handler(req):

      req.content_type = "text/html"
      module_name = string.replace (req.uri, start, "")

      #     try:
      #              exec ("""import %s
      #tmpl = %s.%s()
      #tmpl.req = req""" % (module_name, module_name, module_name))
      #     except ImportError:
      #              return apache.HTTP_NOT_FOUND

      module = apache.import_module(module_name)
      if not hasattr(module,module_name):
            return apache.HTTP_NOT_FOUND

      tmpl = getattr(module,module_name)()
      tmpl.req = req

      req.send_http_header()
      req.write(tmpl.respond())

      return apache.OK

I still see some issues with this code in as much as I think it
requires everything to be in the one directory. Ie., can't have
subdirectories. Using "start" as a fixed value is not good, but
that can also be fixed. Also, you can't mix different file types
in the same directory.

When I get a chance, I'll write you a better version of this
which would fix these problems and provide new abilities as well.
I am surprised though that someone hasn't already written a
better handler for integrating Cheetah with mod_python.

BTW, I am not on the Cheetah mailing list, so ensure any responses
also go back to the mod_python list as well.

Graham

On Tuesday, March 15, 2005, at 02:17  AM, Stephane Bortzmeyer wrote:

> I always used Cheetah on Apache with a custom mod_python handler (see
> http://wiki.cheetahtemplate.org/cheetahrecipes.html). I would like to
> use mod_python's publisher
> http://www.modpython.org/live/current/doc-html/hand-pub.html, in order
> to limit my liability :-) specially for security reasons.
>
> It works fine but not if I use Cheetah's inheritance, as described in
> http://www.cheetahtemplate.org/docs/users_guide_html_multipage/ 
> inheritanceEtc.extends.html.
> My foobar.tmpl Cheetah file is compiled as foobar.py, which includes a
> foobar class. I added a index() routine but Cheetah puts in in the
> foobar class, not directly in the foobar module. When
> mod_python.publisher calls index(), it finds nothing and returns
> NOT_FOUND.
>
>
>
> My SiteLogic.py:
>
>
> from Cheetah.Template import Template
>
> class SiteLogic(Template):
>         """ Pure Python class containing methods for the site """
>
>         # Never found because Cheetah puts it in a class
>         def index(req):
>             return "Dummy"
>
>
>
> My Site.tmpl:
>
>
>
> #from SiteLogic import SiteLogic
> #extends SiteLogic
> #implements respond
>
> #def title
> No title #slurp
> #end def
>
> #def body
> <P>Default body.
> #end def
>
> <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
> <HTML>
> <HEAD>
> <TITLE>
> $title
> </TITLE>
> </HEAD>
> <BODY>
> <H1>$title</H1>
> $body
> <HR>
>
>
>
> A typical page:
>
>
> #from Site import Site
> #extends Site
> #implements body
> #def title
> Welcome
> #end def
>
> <P>Some content.
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python

From toby at rcsreg.com  Mon Mar 14 17:26:44 2005
From: toby at rcsreg.com (Tobiah)
Date: Mon Mar 14 17:22:38 2005
Subject: [mod_python] Post and Get vars together?
Message-ID: <42360FA4.20704@rcsreg.com>

Hi, I noticed that I don't seem to be able to
get POST vars and GET vars at the same time
out of the req.form object as passed by the
Publisher Handler.  I am used to PHP, where
they are available separately.  Is this possible,
and if not, would it be possible with the Default
Handler (not using the publisher).

Thanks,

Toby
From grahamd at dscpl.com.au  Mon Mar 14 17:44:18 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Mon Mar 14 17:44:21 2005
Subject: [mod_python] Post and Get vars together?
Message-ID: <1110840258.17260@dscpl.user.openhosting.com>

Tobiah wrote ..
> Hi, I noticed that I don't seem to be able to
> get POST vars and GET vars at the same time
> out of the req.form object as passed by the
> Publisher Handler.  I am used to PHP, where
> they are available separately.  Is this possible,
> and if not, would it be possible with the Default
> Handler (not using the publisher).

Even if using handler and not publisher, you would normally use
util.FieldStorage from mod_python, which is what publisher uses
anyway. Ie., it would behave the same way.

What you can do though is try cgi.FieldStorage from the standard
Python cgi module to see if it supports the PHP style of allowing
GET style form parameters at the same time as POST ones.

If cgi.FieldStorage does work, you might put up a report at:

  http://issues.apache.org/jira/browse/MODPYTHON

as an "improvement", that util.FieldStorage in mod_python be
enhanced along the lines of cgi.FieldStorage to support such an
ability.

BTW, do not comment in util.FieldStorage code:

""" The classes below are a (almost) a drop-in replacement for the
    standard cgi.py FieldStorage class. They should have pretty much the
    same functionality.
    
    These classes differ in that unlike cgi.FieldStorage, they are not
    recursive. The class FieldStorage contains a list of instances of
    Field class. Field class is incapable of storing anything in it.
    
    These objects should be considerably faster than the ones in cgi.py
    because they do not expect CGI environment, and are
    optimized specifically for Apache and mod_python.
"""

Thus, you might see some slowdown in performance.

Graham
From grahamd at dscpl.com.au  Mon Mar 14 18:25:50 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Mon Mar 14 18:25:54 2005
Subject: [mod_python] mod_python.publisher and Cheetah
Message-ID: <1110842750.4984@dscpl.user.openhosting.com>

Here is a better version of a handler which allows use of Cheetah
templates with mod_python.



from mod_python import apache

import os

# It is assumed that Apache config or .htaccess file
# blocks access to ".tmpl", ".py" and ".pyc" files.

def handler(req):

  # Assume REST style URLs. Ie., no extension is used
  # for accessing Cheetah pages. On this basis, first
  # perform a check that there is a ".py" file in
  # existance. This is done because can't distinguish
  # between a non existant module and a module which has
  # a coding error in it when using the function
  # "apache.import_module()". By returning DECLINED,
  # Apache will then serve up any static files in the
  # directory which may otherwise be matched.

  target = req.filename + ".py"

  if not os.path.exists(target):
    return apache.DECLINED

  # Grab the module name to look for from the last part
  # of the path. This means that pages can be spread
  # across subdirectories as well.

  directory,module_name = os.path.split(req.filename)

  # Import the module. Any coding error in the module
  # being imported is thrown back to the user. Error
  # also results if by chance the target just vanished.

  module = apache.import_module(module_name,[directory])

  # Ensure that there is a class defined in the module
  # of the appropriate name.

  if not hasattr(module,module_name):
    return apache.DECLINED

  # Create instance of the class and setup request object.

  tmpl = getattr(module,module_name)()
  tmpl.req = req

  # Assume that HTML is being generated.

  req.content_type = "text/plain"
  req.send_http_header()

  # Now generate the actual content and return it.

  req.write(tmpl.respond())

  return apache.OK



Graham Dumpleton wrote ..
> I somewhat suspect that you aren't going to get the code as by
> default generated by Cheetah to play well with publisher. As to
> your original custom handler, you could clean it up somewhat
> by using something like:
> 
> start = "/python/"
> 
> from mod_python import apache
> import string
> 
> def handler(req):
> 
>       req.content_type = "text/html"
>       module_name = string.replace (req.uri, start, "")
> 
>       #     try:
>       #              exec ("""import %s
>       #tmpl = %s.%s()
>       #tmpl.req = req""" % (module_name, module_name, module_name))
>       #     except ImportError:
>       #              return apache.HTTP_NOT_FOUND
> 
>       module = apache.import_module(module_name)
>       if not hasattr(module,module_name):
>             return apache.HTTP_NOT_FOUND
> 
>       tmpl = getattr(module,module_name)()
>       tmpl.req = req
> 
>       req.send_http_header()
>       req.write(tmpl.respond())
> 
>       return apache.OK
> 
> I still see some issues with this code in as much as I think it
> requires everything to be in the one directory. Ie., can't have
> subdirectories. Using "start" as a fixed value is not good, but
> that can also be fixed. Also, you can't mix different file types
> in the same directory.
> 
> When I get a chance, I'll write you a better version of this
> which would fix these problems and provide new abilities as well.
> I am surprised though that someone hasn't already written a
> better handler for integrating Cheetah with mod_python.
> 
> BTW, I am not on the Cheetah mailing list, so ensure any responses
> also go back to the mod_python list as well.
> 
> Graham
> 
> On Tuesday, March 15, 2005, at 02:17  AM, Stephane Bortzmeyer wrote:
> 
> > I always used Cheetah on Apache with a custom mod_python handler (see
> > http://wiki.cheetahtemplate.org/cheetahrecipes.html). I would like to
> > use mod_python's publisher
> > http://www.modpython.org/live/current/doc-html/hand-pub.html, in order
> > to limit my liability :-) specially for security reasons.
> >
> > It works fine but not if I use Cheetah's inheritance, as described in
> > http://www.cheetahtemplate.org/docs/users_guide_html_multipage/ 
> > inheritanceEtc.extends.html.
> > My foobar.tmpl Cheetah file is compiled as foobar.py, which includes
> a
> > foobar class. I added a index() routine but Cheetah puts in in the
> > foobar class, not directly in the foobar module. When
> > mod_python.publisher calls index(), it finds nothing and returns
> > NOT_FOUND.
> >
> >
> >
> > My SiteLogic.py:
> >
> >
> > from Cheetah.Template import Template
> >
> > class SiteLogic(Template):
> >         """ Pure Python class containing methods for the site """
> >
> >         # Never found because Cheetah puts it in a class
> >         def index(req):
> >             return "Dummy"
> >
> >
> >
> > My Site.tmpl:
> >
> >
> >
> > #from SiteLogic import SiteLogic
> > #extends SiteLogic
> > #implements respond
> >
> > #def title
> > No title #slurp
> > #end def
> >
> > #def body
> > <P>Default body.
> > #end def
> >
> > <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
> > <HTML>
> > <HEAD>
> > <TITLE>
> > $title
> > </TITLE>
> > </HEAD>
> > <BODY>
> > <H1>$title</H1>
> > $body
> > <HR>
> >
> >
> >
> > A typical page:
> >
> >
> > #from Site import Site
> > #extends Site
> > #implements body
> > #def title
> > Welcome
> > #end def
> >
> > <P>Some content.
> > _______________________________________________
> > Mod_python mailing list
> > Mod_python@modpython.org
> > http://mailman.modpython.org/mailman/listinfo/mod_python
> 
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
From grahamd at dscpl.com.au  Mon Mar 14 18:35:42 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Mon Mar 14 18:35:45 2005
Subject: [mod_python] mod_python.publisher and Cheetah
Message-ID: <1110843342.10330@dscpl.user.openhosting.com>

BTW, make sure that Apache MultiViews option is not enabled,
else this will not always work. Thus:

  Options -MultiViews


Graham Dumpleton wrote ..
> Here is a better version of a handler which allows use of Cheetah
> templates with mod_python.
> 
> 
> 
> from mod_python import apache
> 
> import os
> 
> # It is assumed that Apache config or .htaccess file
> # blocks access to ".tmpl", ".py" and ".pyc" files.
> 
> def handler(req):
> 
>   # Assume REST style URLs. Ie., no extension is used
>   # for accessing Cheetah pages. On this basis, first
>   # perform a check that there is a ".py" file in
>   # existance. This is done because can't distinguish
>   # between a non existant module and a module which has
>   # a coding error in it when using the function
>   # "apache.import_module()". By returning DECLINED,
>   # Apache will then serve up any static files in the
>   # directory which may otherwise be matched.
> 
>   target = req.filename + ".py"
> 
>   if not os.path.exists(target):
>     return apache.DECLINED
> 
>   # Grab the module name to look for from the last part
>   # of the path. This means that pages can be spread
>   # across subdirectories as well.
> 
>   directory,module_name = os.path.split(req.filename)
> 
>   # Import the module. Any coding error in the module
>   # being imported is thrown back to the user. Error
>   # also results if by chance the target just vanished.
> 
>   module = apache.import_module(module_name,[directory])
> 
>   # Ensure that there is a class defined in the module
>   # of the appropriate name.
> 
>   if not hasattr(module,module_name):
>     return apache.DECLINED
> 
>   # Create instance of the class and setup request object.
> 
>   tmpl = getattr(module,module_name)()
>   tmpl.req = req
> 
>   # Assume that HTML is being generated.
> 
>   req.content_type = "text/plain"
>   req.send_http_header()
> 
>   # Now generate the actual content and return it.
> 
>   req.write(tmpl.respond())
> 
>   return apache.OK
> 
> 
> 
> Graham Dumpleton wrote ..
> > I somewhat suspect that you aren't going to get the code as by
> > default generated by Cheetah to play well with publisher. As to
> > your original custom handler, you could clean it up somewhat
> > by using something like:
> > 
> > start = "/python/"
> > 
> > from mod_python import apache
> > import string
> > 
> > def handler(req):
> > 
> >       req.content_type = "text/html"
> >       module_name = string.replace (req.uri, start, "")
> > 
> >       #     try:
> >       #              exec ("""import %s
> >       #tmpl = %s.%s()
> >       #tmpl.req = req""" % (module_name, module_name, module_name))
> >       #     except ImportError:
> >       #              return apache.HTTP_NOT_FOUND
> > 
> >       module = apache.import_module(module_name)
> >       if not hasattr(module,module_name):
> >             return apache.HTTP_NOT_FOUND
> > 
> >       tmpl = getattr(module,module_name)()
> >       tmpl.req = req
> > 
> >       req.send_http_header()
> >       req.write(tmpl.respond())
> > 
> >       return apache.OK
> > 
> > I still see some issues with this code in as much as I think it
> > requires everything to be in the one directory. Ie., can't have
> > subdirectories. Using "start" as a fixed value is not good, but
> > that can also be fixed. Also, you can't mix different file types
> > in the same directory.
> > 
> > When I get a chance, I'll write you a better version of this
> > which would fix these problems and provide new abilities as well.
> > I am surprised though that someone hasn't already written a
> > better handler for integrating Cheetah with mod_python.
> > 
> > BTW, I am not on the Cheetah mailing list, so ensure any responses
> > also go back to the mod_python list as well.
> > 
> > Graham
> > 
> > On Tuesday, March 15, 2005, at 02:17  AM, Stephane Bortzmeyer wrote:
> > 
> > > I always used Cheetah on Apache with a custom mod_python handler (see
> > > http://wiki.cheetahtemplate.org/cheetahrecipes.html). I would like
> to
> > > use mod_python's publisher
> > > http://www.modpython.org/live/current/doc-html/hand-pub.html, in order
> > > to limit my liability :-) specially for security reasons.
> > >
> > > It works fine but not if I use Cheetah's inheritance, as described
> in
> > > http://www.cheetahtemplate.org/docs/users_guide_html_multipage/ 
> > > inheritanceEtc.extends.html.
> > > My foobar.tmpl Cheetah file is compiled as foobar.py, which includes
> > a
> > > foobar class. I added a index() routine but Cheetah puts in in the
> > > foobar class, not directly in the foobar module. When
> > > mod_python.publisher calls index(), it finds nothing and returns
> > > NOT_FOUND.
> > >
> > >
> > >
> > > My SiteLogic.py:
> > >
> > >
> > > from Cheetah.Template import Template
> > >
> > > class SiteLogic(Template):
> > >         """ Pure Python class containing methods for the site """
> > >
> > >         # Never found because Cheetah puts it in a class
> > >         def index(req):
> > >             return "Dummy"
> > >
> > >
> > >
> > > My Site.tmpl:
> > >
> > >
> > >
> > > #from SiteLogic import SiteLogic
> > > #extends SiteLogic
> > > #implements respond
> > >
> > > #def title
> > > No title #slurp
> > > #end def
> > >
> > > #def body
> > > <P>Default body.
> > > #end def
> > >
> > > <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
> > > <HTML>
> > > <HEAD>
> > > <TITLE>
> > > $title
> > > </TITLE>
> > > </HEAD>
> > > <BODY>
> > > <H1>$title</H1>
> > > $body
> > > <HR>
> > >
> > >
> > >
> > > A typical page:
> > >
> > >
> > > #from Site import Site
> > > #extends Site
> > > #implements body
> > > #def title
> > > Welcome
> > > #end def
> > >
> > > <P>Some content.
> > > _______________________________________________
> > > Mod_python mailing list
> > > Mod_python@modpython.org
> > > http://mailman.modpython.org/mailman/listinfo/mod_python
> > 
> > _______________________________________________
> > Mod_python mailing list
> > Mod_python@modpython.org
> > http://mailman.modpython.org/mailman/listinfo/mod_python
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
From grahamd at dscpl.com.au  Mon Mar 14 18:45:05 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Mon Mar 14 18:45:11 2005
Subject: [mod_python] mod_python.publisher and Cheetah
Message-ID: <1110843905.15493@dscpl.user.openhosting.com>

My obvious error should also be fixed. :-)

  # Assume that HTML is being generated.

  req.content_type = "text/html"
  req.send_http_header()

Browser was smart enough to realise it was HTML anyway when
I tested it.

Graham

Graham Dumpleton wrote ..
> Here is a better version of a handler which allows use of Cheetah
> templates with mod_python.
> 
> 
> 
> from mod_python import apache
> 
> import os
> 
> # It is assumed that Apache config or .htaccess file
> # blocks access to ".tmpl", ".py" and ".pyc" files.
> 
> def handler(req):
> 
>   # Assume REST style URLs. Ie., no extension is used
>   # for accessing Cheetah pages. On this basis, first
>   # perform a check that there is a ".py" file in
>   # existance. This is done because can't distinguish
>   # between a non existant module and a module which has
>   # a coding error in it when using the function
>   # "apache.import_module()". By returning DECLINED,
>   # Apache will then serve up any static files in the
>   # directory which may otherwise be matched.
> 
>   target = req.filename + ".py"
> 
>   if not os.path.exists(target):
>     return apache.DECLINED
> 
>   # Grab the module name to look for from the last part
>   # of the path. This means that pages can be spread
>   # across subdirectories as well.
> 
>   directory,module_name = os.path.split(req.filename)
> 
>   # Import the module. Any coding error in the module
>   # being imported is thrown back to the user. Error
>   # also results if by chance the target just vanished.
> 
>   module = apache.import_module(module_name,[directory])
> 
>   # Ensure that there is a class defined in the module
>   # of the appropriate name.
> 
>   if not hasattr(module,module_name):
>     return apache.DECLINED
> 
>   # Create instance of the class and setup request object.
> 
>   tmpl = getattr(module,module_name)()
>   tmpl.req = req
> 
>   # Assume that HTML is being generated.
> 
>   req.content_type = "text/plain"
>   req.send_http_header()
> 
>   # Now generate the actual content and return it.
> 
>   req.write(tmpl.respond())
> 
>   return apache.OK
> 
> 
> 
> Graham Dumpleton wrote ..
> > I somewhat suspect that you aren't going to get the code as by
> > default generated by Cheetah to play well with publisher. As to
> > your original custom handler, you could clean it up somewhat
> > by using something like:
> > 
> > start = "/python/"
> > 
> > from mod_python import apache
> > import string
> > 
> > def handler(req):
> > 
> >       req.content_type = "text/html"
> >       module_name = string.replace (req.uri, start, "")
> > 
> >       #     try:
> >       #              exec ("""import %s
> >       #tmpl = %s.%s()
> >       #tmpl.req = req""" % (module_name, module_name, module_name))
> >       #     except ImportError:
> >       #              return apache.HTTP_NOT_FOUND
> > 
> >       module = apache.import_module(module_name)
> >       if not hasattr(module,module_name):
> >             return apache.HTTP_NOT_FOUND
> > 
> >       tmpl = getattr(module,module_name)()
> >       tmpl.req = req
> > 
> >       req.send_http_header()
> >       req.write(tmpl.respond())
> > 
> >       return apache.OK
> > 
> > I still see some issues with this code in as much as I think it
> > requires everything to be in the one directory. Ie., can't have
> > subdirectories. Using "start" as a fixed value is not good, but
> > that can also be fixed. Also, you can't mix different file types
> > in the same directory.
> > 
> > When I get a chance, I'll write you a better version of this
> > which would fix these problems and provide new abilities as well.
> > I am surprised though that someone hasn't already written a
> > better handler for integrating Cheetah with mod_python.
> > 
> > BTW, I am not on the Cheetah mailing list, so ensure any responses
> > also go back to the mod_python list as well.
> > 
> > Graham
> > 
> > On Tuesday, March 15, 2005, at 02:17  AM, Stephane Bortzmeyer wrote:
> > 
> > > I always used Cheetah on Apache with a custom mod_python handler (see
> > > http://wiki.cheetahtemplate.org/cheetahrecipes.html). I would like
> to
> > > use mod_python's publisher
> > > http://www.modpython.org/live/current/doc-html/hand-pub.html, in order
> > > to limit my liability :-) specially for security reasons.
> > >
> > > It works fine but not if I use Cheetah's inheritance, as described
> in
> > > http://www.cheetahtemplate.org/docs/users_guide_html_multipage/ 
> > > inheritanceEtc.extends.html.
> > > My foobar.tmpl Cheetah file is compiled as foobar.py, which includes
> > a
> > > foobar class. I added a index() routine but Cheetah puts in in the
> > > foobar class, not directly in the foobar module. When
> > > mod_python.publisher calls index(), it finds nothing and returns
> > > NOT_FOUND.
> > >
> > >
> > >
> > > My SiteLogic.py:
> > >
> > >
> > > from Cheetah.Template import Template
> > >
> > > class SiteLogic(Template):
> > >         """ Pure Python class containing methods for the site """
> > >
> > >         # Never found because Cheetah puts it in a class
> > >         def index(req):
> > >             return "Dummy"
> > >
> > >
> > >
> > > My Site.tmpl:
> > >
> > >
> > >
> > > #from SiteLogic import SiteLogic
> > > #extends SiteLogic
> > > #implements respond
> > >
> > > #def title
> > > No title #slurp
> > > #end def
> > >
> > > #def body
> > > <P>Default body.
> > > #end def
> > >
> > > <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
> > > <HTML>
> > > <HEAD>
> > > <TITLE>
> > > $title
> > > </TITLE>
> > > </HEAD>
> > > <BODY>
> > > <H1>$title</H1>
> > > $body
> > > <HR>
> > >
> > >
> > >
> > > A typical page:
> > >
> > >
> > > #from Site import Site
> > > #extends Site
> > > #implements body
> > > #def title
> > > Welcome
> > > #end def
> > >
> > > <P>Some content.
> > > _______________________________________________
> > > Mod_python mailing list
> > > Mod_python@modpython.org
> > > http://mailman.modpython.org/mailman/listinfo/mod_python
> > 
> > _______________________________________________
> > Mod_python mailing list
> > Mod_python@modpython.org
> > http://mailman.modpython.org/mailman/listinfo/mod_python
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
From jan at huelsbergen.de  Mon Mar 14 19:40:27 2005
From: jan at huelsbergen.de (Jan Huelsbergen)
Date: Mon Mar 14 19:39:48 2005
Subject: [mod_python] restricting access to certain variables using
	mod_python.publisher
Message-ID: <20050315004027.GB4836@lisan>

Hi,

The mod_python.publisher documentation states at
http://modpython.org/live/current/doc-html/hand-pub-alg-trav.html that
if
"Any of the traversed object's names begin with an underscore ("_")." 
they are not accsessable through the web, yet, when I put a 
_foo = 'bar'
in my index.py, http://my.site/_foo returns 'bar'. 

Am I missinterpreting the documentation? 
How to protect a variable from outside access?

TIA
		Jan
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
Url : http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20050315/e201fc34/attachment.bin
From grahamd at dscpl.com.au  Mon Mar 14 20:07:54 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Mon Mar 14 20:07:59 2005
Subject: [mod_python] restricting access to certain variables
	usingmod_python.publisher
Message-ID: <1110848874.26770@dscpl.user.openhosting.com>

You have found a bug in mod_python.publisher. It shouldn't be visible,
but the code which handles defaulting to "index.py" doesn't reapply the
rule which stops access to "_" variables.

Ie., early in code in publisher.py, it has a check:

    # if any part of the path begins with "_", abort
    if func_path[0] == '_' or func_path.count("._"):
        raise apache.SERVER_RETURN, apache.HTTP_NOT_FOUND

After that point though it has:

    try:
        module = apache.import_module(module_name, 
                                      autoreload=autoreload,
                                      log=log,
                                      path=[path])
    except ImportError:
        et, ev, etb = sys.exc_info()
        # try again, using default module, perhaps this is a 
        # /directory/function (as opposed to /directory/module/function)
        func_path = module_name
        module_name = "index"
        try:
            module = apache.import_module(module_name, 
                                          autoreload=autoreload,
                                          log=log,
                                          path=[path])
        except ImportError:
            # raise the original exception
            raise et, ev, etb

Note how it resets the value of func_path. After that the code goes on
to reolve the object, but the new func_path has skipped the check.

I believe the fix would be for the "_" check to be after the import and
not before.

The only workaround you would have in the short term is not to use
an "index.py" file and always name it something different.

This is actually a security hole because any __auth__ stuff would
be visible and thus people could work out login/passwd. This may
require another security fix release of mod_python. :-(

Graham



Jan Huelsbergen wrote ..
> Hi,
> 
> The mod_python.publisher documentation states at
> http://modpython.org/live/current/doc-html/hand-pub-alg-trav.html that
> if
> "Any of the traversed object's names begin with an underscore ("_")." 
> they are not accsessable through the web, yet, when I put a 
> _foo = 'bar'
> in my index.py, http://my.site/_foo returns 'bar'. 
> 
> Am I missinterpreting the documentation? 
> How to protect a variable from outside access?
> 
> TIA
> 		Jan
From grahamd at dscpl.com.au  Mon Mar 14 20:19:33 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Mon Mar 14 20:19:39 2005
Subject: [mod_python] restricting access to certain
	variablesusingmod_python.publisher
Message-ID: <1110849573.32517@dscpl.user.openhosting.com>

Graham Dumpleton wrote ..
> You have found a bug in mod_python.publisher. It shouldn't be visible,
> but the code which handles defaulting to "index.py" doesn't reapply the
> rule which stops access to "_" variables.
>
> ...
> The only workaround you would have in the short term is not to use
> an "index.py" file and always name it something different.
> 
> This is actually a security hole because any __auth__ stuff would
> be visible and thus people could work out login/passwd. This may
> require another security fix release of mod_python. :-(

FWIW, the vampire::publisher replacement I wrote for mod_python.publisher
doesn't suffer this problem. It wasn't intentional that I fixed it, but because
of how I completely turned around how a lot of the checks and things are
done, it just so happened to eliminate the bug.

Thus, for those who want to come to the dark side and use my alternative
to mod_python.publisher, that would also be a solution to avoiding this
problem. :-)

Graham
From jan at huelsbergen.de  Mon Mar 14 20:53:35 2005
From: jan at huelsbergen.de (Jan Huelsbergen)
Date: Mon Mar 14 20:52:55 2005
Subject: [mod_python] restricting access to certain
	variablesusingmod_python.publisher
In-Reply-To: <1110849573.32517@dscpl.user.openhosting.com>
References: <1110849573.32517@dscpl.user.openhosting.com>
Message-ID: <20050315015335.GC4836@lisan>

Hi again,

first, thanks for the quick reply.

Graham Dumpleton wrote:
> FWIW, the vampire::publisher replacement I wrote for mod_python.publisher
> doesn't suffer this problem. It wasn't intentional that I fixed it, but because
> of how I completely turned around how a lot of the checks and things are
> done, it just so happened to eliminate the bug.

That sounds intriguing, but I must admit I was not able to find this
vampire::publisher handler in your latest Vampire release (nor did I
find it using google or the Mailinglist archives).

Can you point me to where the fun is?

regards,

		Jan
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
Url : http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20050315/e1149a9a/attachment.bin
From list at joreybump.com  Mon Mar 14 21:16:21 2005
From: list at joreybump.com (Jorey Bump)
Date: Mon Mar 14 21:16:27 2005
Subject: [mod_python] restricting access to certain
	variables	usingmod_python.publisher
In-Reply-To: <1110848874.26770@dscpl.user.openhosting.com>
References: <1110848874.26770@dscpl.user.openhosting.com>
Message-ID: <42364575.5030108@joreybump.com>

Graham Dumpleton wrote:

> The only workaround you would have in the short term is not to use
> an "index.py" file and always name it something different.

Always good advice. The only time I would even consider using a module 
named index.py would be as in Jan's example, where one might want to run 
an entire site with mod_python transparently.

> This is actually a security hole because any __auth__ stuff would
> be visible and thus people could work out login/passwd. This may
> require another security fix release of mod_python. :-(

No argument here, any information leak is a security hole and should be 
fixed. But, even with __auth__, there's no good reason to store login 
details in the module or anywhere within the DocumentRoot, for that matter.

> Jan Huelsbergen wrote ..
> 
>>The mod_python.publisher documentation states at
>>http://modpython.org/live/current/doc-html/hand-pub-alg-trav.html that
>>if
>>"Any of the traversed object's names begin with an underscore ("_")." 
>>they are not accsessable through the web, yet, when I put a 
>>_foo = 'bar'
>>in my index.py, http://my.site/_foo returns 'bar'. 
>>
>>Am I missinterpreting the documentation? 
>>How to protect a variable from outside access?

I've been creating all of my mod_python applications as packages that 
sit in a directory outside of the DocumentRoot. I use the PythonPath 
directive to append the directory to the module search path. Then I 
import enough of the package to bootstrap my published module, which 
might contain a single function that acts as a frontend to a dispatcher.

It might sound like a lot of work, but with good planning it can set a 
solid foundation for future projects, thus saving a *lot* of time in the 
long run. By using this approach, along with dotted notation imports, 
explicit restriction of *from imported objects with __all__, and 
enclosing almost everything in functions, I haven't been affected by any 
of the recent security issues, including this one.  You can even take 
this to an extreme and obfuscate your login details and imported names 
so that they would not be human readable or even grepped (haven't gone 
there, yet).

Example:

~/python/
     domain/
         __init__.py
         database.py
         html.py
         foo/
             __init__.py
             database.py
             form.py
         bar/
             __init.py
             database.py
             util.py

Then the published module might look like this:

  #foo.py
  import domain.foo

  def start(req):
      """
      Public interface to application backend.
      """
      return domain.foo.dispatch(req)

Nothing's exposed, lots of reusable code, provides for separation 
between modules, and results in excellent caching of imported modules 
and database connections. The only downside is that it makes you more 
dependent on a test environment, because it is sometimes necessary to 
restart apache to force a reload of imported modules that have been 
updated.

From grahamd at dscpl.com.au  Mon Mar 14 21:51:02 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Mon Mar 14 21:51:08 2005
Subject: [mod_python] restricting access to
	certainvariablesusingmod_python.publisher
Message-ID: <1110855062.16665@dscpl.user.openhosting.com>

Jorey Bump wrote ..
> It might sound like a lot of work, but with good planning it can set a
> solid foundation for future projects, thus saving a *lot* of time in the
> long run. By using this approach, along with dotted notation imports, 
> explicit restriction of *from imported objects with __all__, and 
> enclosing almost everything in functions, I haven't been affected by any
> of the recent security issues, including this one. 

I would be intrigued to know how you think you weren't affected at all
by the object traversal bug which was fixed in 3.1.4 if you were using
publisher. If you were exporting any function, or method of an object
you would have potentially been affected even if your code was stored
outside of the document tree.

Are you still running 3.1.3 on your web site? If you are, care to tell me
some URLs of exported methods in your web application so I can see what
I can find. Your most private data may not have been exposed if you
were indeed careful, but other internal data could still have been
which should not have.
From grahamd at dscpl.com.au  Mon Mar 14 21:57:36 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Mon Mar 14 21:57:41 2005
Subject: [mod_python] restricting access to certain
	variablesusingmod_python.publisher
Message-ID: <1110855456.20259@dscpl.user.openhosting.com>

Jan Huelsbergen wrote ..
> Hi again,
> 
> first, thanks for the quick reply.
> 
> Graham Dumpleton wrote:
> > FWIW, the vampire::publisher replacement I wrote for mod_python.publisher
> > doesn't suffer this problem. It wasn't intentional that I fixed it, but
> because
> > of how I completely turned around how a lot of the checks and things
> are
> > done, it just so happened to eliminate the bug.
> 
> That sounds intriguing, but I must admit I was not able to find this
> vampire::publisher handler in your latest Vampire release (nor did I
> find it using google or the Mailinglist archives).
> 
> Can you point me to where the fun is?

Up till now the newer version had only been available to a few who
had responded to being interested in beta testing it. I am at the point
where I could make details of the subversion repository more well
known, just want though to change some of the directory names
and layout of the documentation files. I'll try and mail something
around about it later today my time. Not quite at the point of the
release as haven't added to the documentation yet something about
the new publisher type functionality. This is also holding up me
doing a complete cutover of my web site to a new mod_python based
structure from using PHP. :-)

Graham
From list at joreybump.com  Mon Mar 14 23:37:33 2005
From: list at joreybump.com (Jorey Bump)
Date: Mon Mar 14 23:37:38 2005
Subject: [mod_python] restricting access to
	certainvariablesusingmod_python.publisher
In-Reply-To: <1110855062.16665@dscpl.user.openhosting.com>
References: <1110855062.16665@dscpl.user.openhosting.com>
Message-ID: <4236668D.7050500@joreybump.com>

Graham Dumpleton wrote:

> I would be intrigued to know how you think you weren't affected at all
> by the object traversal bug which was fixed in 3.1.4 if you were using
> publisher. If you were exporting any function, or method of an object
> you would have potentially been affected even if your code was stored
> outside of the document tree.

Assuming you mean CAN-2005-0088, I was affected, but I ran the exploit 
and it exposed nothing of value.

> Are you still running 3.1.3 on your web site? 

No, I use 2.7.8 on my Debian Woody production servers, and it's been 
patched. My 3.1.x testing servers are up to date.

> If you are, care to tell me
> some URLs of exported methods in your web application so I can see what
> I can find. Your most private data may not have been exposed if you
> were indeed careful, but other internal data could still have been
> which should not have.

I can hear myself asking my boss, now: "There's a tenacious Australian 
bug hunter wants to probe our server..." :)
From SamirMishra at cbuae.gov.ae  Tue Mar 15 00:17:42 2005
From: SamirMishra at cbuae.gov.ae (Samir Mishra)
Date: Tue Mar 15 01:45:07 2005
Subject: [mod_python] Killer mod_python App
Message-ID: <211AD0070D42D1118C7B00A024FF19AE2EC1AD@AUHEXCH>

Hello all,

Are there any killer (or even very good) apps available that use mod_python?
I'd like to showcase this project where I work, and something like this
would facilitate its adoption.

Thanks.

Regards,
Samir
From troy at tblog.ath.cx  Tue Mar 15 04:42:15 2005
From: troy at tblog.ath.cx (Troy Unrau)
Date: Tue Mar 15 04:34:44 2005
Subject: [mod_python] subclassing Session for Postgresql
Message-ID: <200503150342.15753.troy@tblog.ath.cx>

I'm using postgresql for all of my website data, so naturally I was looking to 
use it for storing of session data.  The code doesn't seem to be postgresql 
specific as it uses the standard python db api, and the SQL is fairly 
standard.

from my source:

class SQLSession(Session.BaseSession):

    def __init__(self, req, 
                 db, table, key_colname, val_colname,
	         sid=0, secret=None,
                 timeout=0, lock=1):
        """
        SQLSession class arguments:

        req: mod_python request object
        db: python DB API 2 object, such as a postgresql connection returned
            from the psycopg module
        table: name of the SQL table to store objects in
        key_colname: name of the column in above table corresponding to the
                     session id key.
        val_colname: name of the column in above table corresponding to the
                     actual session data

        All other arguments follow from BaseSession in mod_python.  See docs
        for mod_python 3.1.x, section 4.8.1
        """

I have attached the code I've concocted that does the job for me, if anyone is 
interested.  It does work for me using a psycopg returned DB object for 
postgresql.

One comment.  Using this method, the apache lock calls don't seem to be 
required, however I have left them in there since they don't seem to be doing 
any harm.  What /should/ happen though is for locking to take into account 
the fact that there could be multiple apache servers in a cluster all using 
the same session data from one database.  In this case, a database oriented 
locking scheme should be implemented instead.

Comments, suggestions and reuse are welcome. (the file is under a very 
slightly modified BSD-style licence)

Cheers, 

Troy Unrau
http://tblog.ath.cx/troy
-------------- next part --------------
A non-text attachment was scrubbed...
Name: SQLSession.py
Type: application/x-python
Size: 9431 bytes
Desc: not available
Url : http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20050315/c9b4233e/SQLSession.bin
From bortzmeyer at nic.fr  Tue Mar 15 06:28:53 2005
From: bortzmeyer at nic.fr (Stephane Bortzmeyer)
Date: Tue Mar 15 06:30:26 2005
Subject: [mod_python] Re: mod_python.publisher and Cheetah
In-Reply-To: <1110842750.4984@dscpl.user.openhosting.com>
References: <1110842750.4984@dscpl.user.openhosting.com>
Message-ID: <20050315112853.GB14336@sources.org>

On Mon, Mar 14, 2005 at 06:25:50PM -0500,
 Graham Dumpleton <grahamd@dscpl.com.au> wrote 
 a message of 200 lines which said:

> Here is a better version of a handler which allows use of Cheetah
> templates with mod_python.

It seems to work fine. Many thanks.

>   target = req.filename + ".py"
> 
>   if not os.path.exists(target):
>     return apache.DECLINED

I changed it (personal preference and I have only Python content) to:

  if req.filename[:-3] != ".py":
     target = req.filename + ".py"
  else:
     target = req.filename

  if not os.path.exists(target):
    raise apache.SERVER_RETURN, apache.HTTP_NOT_FOUND

From bortzmeyer at nic.fr  Tue Mar 15 06:27:05 2005
From: bortzmeyer at nic.fr (Stephane Bortzmeyer)
Date: Tue Mar 15 06:30:26 2005
Subject: [mod_python] Re: mod_python.publisher and Cheetah
In-Reply-To: <20050314151737.GA9521@generic-nic.net>
References: <20050314151737.GA9521@generic-nic.net>
Message-ID: <20050315112705.GA14336@sources.org>

On Mon, Mar 14, 2005 at 04:17:37PM +0100,
 Stephane Bortzmeyer <bortzmeyer@nic.fr> wrote 
 a message of 75 lines which said:

> I always used Cheetah on Apache with a custom mod_python handler (see
> http://wiki.cheetahtemplate.org/cheetahrecipes.html). I would like to
> use mod_python's publisher
> http://www.modpython.org/live/current/doc-html/hand-pub.html, in order
> to limit my liability :-) specially for security reasons.

Well, it seems there is no other solution than to write your own
publisher. Graham sent one (which works fine), here is another
possible one, based on the mod_python.publisher.
-------------- next part --------------
--- /usr/lib/python2.3/site-packages/mod_python/publisher.py	2005-02-11 13:34:45.000000000 +0100
+++ codev-nic-publisher.py	2005-03-14 17:19:31.992143758 +0100
@@ -28,8 +28,8 @@
   5. Does not give special meaning to '.' and '..'.
 """
 
-import apache
-import util
+from mod_python import apache
+from mod_python import util
 
 import sys
 import os
@@ -67,7 +67,7 @@
     path, module_name =  os.path.split(req.filename)
     if not module_name:
         module_name = "index"
-
+    
     # get rid of the suffix
     #   explanation: Suffixes that will get stripped off
     #   are those that were specified as an argument to the
@@ -116,7 +116,7 @@
 
     # resolve the object ('traverse')
     try:
-        object = resolve_object(req, module, func_path, realm, user, passwd)
+        object = resolve_object(req, module, module_name, func_path, realm, user, passwd)
     except AttributeError:
         raise apache.SERVER_RETURN, apache.HTTP_NOT_FOUND
     
@@ -252,17 +252,18 @@
 
     return realm, user, passwd
 
-def resolve_object(req, obj, object_str, realm=None, user=None, passwd=None):
+def resolve_object(req, obj, module_name, object_str, realm=None, user=None, passwd=None):
     """
     This function traverses the objects separated by .
     (period) to find the last one we're looking for.
     """
 
     parts = object_str.split('.')
-
+    obj = getattr(obj, module_name)
+    instance = obj()
     for n in range(len(parts)):
 
-        obj = getattr(obj, parts[n])
+        obj = getattr(instance, parts[n])
         obj_type = type(obj)
 
         # object cannot be a module or a class

From bortzmeyer at nic.fr  Tue Mar 15 06:38:21 2005
From: bortzmeyer at nic.fr (Stephane Bortzmeyer)
Date: Tue Mar 15 06:40:24 2005
Subject: [mod_python] Re: mod_python.publisher and Cheetah
In-Reply-To: <c41f67b90503141337450df528@mail.gmail.com>
References: <20050314151737.GA9521@generic-nic.net>
	<32396CB3-94D0-11D9-A045-000393BB31F6@dscpl.com.au>
	<c41f67b90503141337450df528@mail.gmail.com>
Message-ID: <20050315113821.GC14336@sources.org>

On Mon, Mar 14, 2005 at 01:37:18PM -0800,
 Shannon -jj Behrens <jjinux@gmail.com> wrote 
 a message of 12 lines which said:

> If you'll forgive the advertisement, Aquarium works with Cheetah and
> mod_python just fine.

You are forgiven and I've added "Test and evaluate Aquarium" to my
TODO list :-)
From jason at ruff.com  Tue Mar 15 10:35:32 2005
From: jason at ruff.com (Jason Lanquist)
Date: Tue Mar 15 10:35:51 2005
Subject: [mod_python] Cookies for domain.com/www.domain.com
Message-ID: <423700C4.975F76D5@ruff.com>

First off, thanks so much again for helping me with the config problems
last week.  I have another newbie question about cookies.  When I login
to the local server without the "www." prefix, the cookie will be added
for the domain without the "www."  (example:  http://mydomain.com)

Then the page redirects to a page with the www prefix (example: 
http://www.mydomain.com) and the cookie is not there.  Is there a way to
add 1 cookie that would be valid for both urls or should I just make
sure that all urls have the www. prefix?  If the latter, how would you
do this because req uses /home/user/public_html/index.py instead of
domain.com?

Also, is there a way to search through old messages?

Thanks!
Jason
From jkp at kirkconsulting.co.uk  Tue Mar 15 14:12:37 2005
From: jkp at kirkconsulting.co.uk (Jamie Kirkpatrick)
Date: Tue Mar 15 14:12:49 2005
Subject: [mod_python] OS X / Apache 2 / mod_python bug
In-Reply-To: <21B3AD9A-947A-11D9-93F3-000393BB31F6@dscpl.com.au>
References: <21B3AD9A-947A-11D9-93F3-000393BB31F6@dscpl.com.au>
Message-ID: <A346CFCB-FF28-45DC-ACD1-6B02930D026F@kirkconsulting.co.uk>

I just throught I'd drop a line to say that I'm not the only one who 
has had this issue.  A fellow OS X user who is actually the author of 
the python package i wanted to install (trac) has the same issue - it's 
a shame he didnt understand fully what I was seeing as he could have 
saved me days of hassle!

This should get nailed if possible.

Jamie

On 14 Mar 2005, at 11:13, Graham Dumpleton wrote:

>
> On Monday, March 14, 2005, at 08:07  PM, Jamie Kirkpatrick wrote:
>> That said, have you setup use of Apache in the main configuration 
>> file
>>
>> or in a .htaccess file? Can you post what configuration you are using
>>
>> so we can see if it is pretty normal or something strange? Post it if
>>
>> you can.
>>
>> I can post but its rather long - I am pretty darn confident that 
>> there is nothing wrong with the config tho.  I havent changed barely 
>> anything from the stock install, in-fact, I can reproduce the error 
>> by leaving everything as is from when the install is performed and 
>> only adding a python handler to the default htdocs directory.  The 
>> only thing I have consistently changed is the port the server is 
>> listening on to port 8080.  I have tested with the minimum of 
>> changes: added a handler and dropped in a small test script.
>
> The whole Apache config file isn't required, but just the small 
> section where
> your define SetHandler/AddHandler and PythonHandler. Ie., the 
> appropriate
> <Directory> construct covering your htdocs directory. This is just to 
> get the
> whole picture and clarify that it is being done within a Directory 
> directive
> as opposed to being at global scope in the config.
>
>> Do you get these 500 errors if the only mod_python application 
>> configured
>>
>> is a really basic "mptest" type test handler, or does it only happen
>>
>> when you go to set it up for this more complicated application?
>>
>>
>> I used the hello.py example from the site and consistently got the 
>> same results.  This was how I finally pinned it down to mod_python.  
>> See the last answer for further details.
>
> Sending a copy of the hello.py wouldn't hurt as well.
>
> Based on your other answers, is very strange and nothing obvious 
> stands out.
> The next thing I would try is to localise where the 500 error 
> actually gets
> raised. There are four possible places it could be occurring. These 
> are:
>
> 1. In Python code executed within the handler itself.
>
> 2. In the Python code part of mod_python. Ie., somewhere within the 
> file
> lib/python/mod_python/apache.py.
>
> 3. In the C code part of mod_python. Ie., somewhere within the file
> src/mod_python.c.
>
> 4. In Apache itself somewhere prior to, but possibly after mod_python 
> is
> invoked. Lets hope not. :-)
>
> Elimination of 1 is pretty straight forward by using a test handler 
> which
> contains:
>
>     from mod_python import apache
>     apache.log_error("start import")
>
>     def handler(req):
>         apache.log_error("start handler")
>         req.content_type = "text/plain"
>         req.send_http_header()
>         req.write("Hello World!")
>         apache.log_error("end handler")
>         return apache.OK
>
>     apache.log_error("end import")
>
> If the 500 error is not generated from within the import of the 
> handler
> module or the handler itself when called, you should see in the Apache
> error log all of the messages above.
>
> BTW, as an extra precaution, if Apache is able to write to your 
> document
> directories, you may want to manually remove any ".pyc" files that may
> have been generated as the result of a prior test, before running the 
> test.
>
> To test out 2, one would need to modify 
> lib/python/mod_python/apache.py
> and reinstall it. You should add calls to apache.log_error() into 
> apache.py
> to track where it may get to within its execution.
>
> I think the appropriate place to place log statements in that file is 
> at
> the start of the class method:
>
>   def HandlerDispatch(self, req):
>
>     log_error("start dispatch")
>
> Prior to the final return of the method, add:
>
>     log_error("end dispatch %s"%str(result))
>
> There is a return part way through the method which returns a 500 
> error,
> but it is preceded by logging of a message anyway.
>
> If it is found that 500 is being returned from the method, this would
> localise the cause of the problem to this method. At this point we 
> would
> have to start analysing further the method and the potential sources 
> of
> the 500 error by adding more logging and checking where result is 
> being
> set to 500.
>
> If this method always returns a 200 status response, yet the browser
> still sees 500, we would have to consider number 3 above.
>
> At this point things get a bit trickier as one is dealing with the C 
> code.
> It is worth noting though that most instances of where a 500 response 
> are
> generated in the mod_python.c file are preceded by message logging. 
> The
> only ones that aren't are all of the form:
>
>     /* get/create interpreter */
>     idata = get_interpreter(interp_name, req->server);
>
>     if (!idata)
>         return HTTP_INTERNAL_SERVER_ERROR;
>
> Not being able to get/create the interpreter is pretty severe and if 
> that
> was happening then no Python code at all would be getting executed. I 
> am
> not sure why this situation couldn't be logged as well. Thus instead 
> of
> that above, have:
>
>     if (!idata) {
>         ap_log_rerror(APLOG_MARK, APLOG_NOERRNO|APLOG_ERR, 0, req,
>                       "python_handler: Can't get/create 
> interpreter.");
>
>         return HTTP_INTERNAL_SERVER_ERROR;
>     }
>
> Anyway, that is the steps I would personally pursue to try and narrow 
> down
> where the 500 error is being generated from. Once one can reliably 
> pinpoint
> it down to a specific area of code in this way, have a better chance 
> of
> determining why it is happening.
>
> Graham
>
>
>
>

From jkp at kirkconsulting.co.uk  Tue Mar 15 15:25:27 2005
From: jkp at kirkconsulting.co.uk (Jamie Kirkpatrick)
Date: Tue Mar 15 15:25:38 2005
Subject: [mod_python] OS X / Apache 2 / mod_python bug
In-Reply-To: <21B3AD9A-947A-11D9-93F3-000393BB31F6@dscpl.com.au>
References: <21B3AD9A-947A-11D9-93F3-000393BB31F6@dscpl.com.au>
Message-ID: <D3529EB8-2AA2-4BD9-9FF3-659EAE62F146@kirkconsulting.co.uk>


On 14 Mar 2005, at 11:13, Graham Dumpleton wrote:

>
> On Monday, March 14, 2005, at 08:07  PM, Jamie Kirkpatrick wrote:
>> That said, have you setup use of Apache in the main configuration 
>> file
>>
>> or in a .htaccess file? Can you post what configuration you are using
>>
>> so we can see if it is pretty normal or something strange? Post it if
>>
>> you can.
>>
>> I can post but its rather long - I am pretty darn confident that 
>> there is nothing wrong with the config tho.  I havent changed barely 
>> anything from the stock install, in-fact, I can reproduce the error 
>> by leaving everything as is from when the install is performed and 
>> only adding a python handler to the default htdocs directory.  The 
>> only thing I have consistently changed is the port the server is 
>> listening on to port 8080.  I have tested with the minimum of 
>> changes: added a handler and dropped in a small test script.
>
> The whole Apache config file isn't required, but just the small 
> section where
> your define SetHandler/AddHandler and PythonHandler. Ie., the 
> appropriate
> <Directory> construct covering your htdocs directory. This is just to 
> get the
> whole picture and clarify that it is being done within a Directory 
> directive
> as opposed to being at global scope in the config.

DocumentRoot "/opt/local/apache2/htdocs"

<Directory />
     Options FollowSymLinks
     AllowOverride None
</Directory>

<Directory "/opt/local/apache2/htdocs">
         AddHandler mod_python .py
         PythonHandler mod_python.publisher
         PythonDebug On
         Options Indexes FollowSymLinks
         AllowOverride None
         Order allow,deny
         Allow from all
</Directory>


<snip>

> Sending a copy of the hello.py wouldn't hurt as well.

cat hello.py

def hello(name=None):
     if name:
         return 'Hello, %s!' % name.capitalize()
     else:
         return 'Hello there!'

>
> Based on your other answers, is very strange and nothing obvious 
> stands out.
> The next thing I would try is to localise where the 500 error 
> actually gets
> raised. There are four possible places it could be occurring. These 
> are:
>
> 1. In Python code executed within the handler itself.
>
> 2. In the Python code part of mod_python. Ie., somewhere within the 
> file
> lib/python/mod_python/apache.py.
>
> 3. In the C code part of mod_python. Ie., somewhere within the file
> src/mod_python.c.
>
> 4. In Apache itself somewhere prior to, but possibly after mod_python 
> is
> invoked. Lets hope not. :-)
>
> Elimination of 1 is pretty straight forward by using a test handler 
> which
> contains:
>
>     from mod_python import apache
>     apache.log_error("start import")
>
>     def handler(req):
>         apache.log_error("start handler")
>         req.content_type = "text/plain"
>         req.send_http_header()
>         req.write("Hello World!")
>         apache.log_error("end handler")
>         return apache.OK
>
>     apache.log_error("end import")

Using the above code after a stop / start i get this in the error_log:

[Tue Mar 15 19:31:49 2005] [notice] mod_python: Creating 32 session 
mutexes based on 150 max processes and 0 max threads.
[Tue Mar 15 19:31:49 2005] [notice] Digest: generating secret for 
digest authentication ...
[Tue Mar 15 19:31:49 2005] [notice] Digest: done
[Tue Mar 15 19:31:50 2005] [notice] Apache/2.0.53 (Unix) DAV/2 
mod_python/3.1.3 Python/2.4 configured -- resuming normal operations
[Tue Mar 15 19:31:54 2005] [notice] mod_python: (Re)importing module 
'test'
[Tue Mar 15 19:31:54 2005] [error] start import
[Tue Mar 15 19:31:54 2005] [error] end import
[Tue Mar 15 19:31:54 2005] [error] start handler
[Tue Mar 15 19:31:54 2005] [error] end handler

All normal. BUT, when I use a restart, it doesnt even get that far:

[Tue Mar 15 19:33:11 2005] [notice] mod_python: Creating 32 session 
mutexes based on 150 max processes and 0 max threads.
[Tue Mar 15 19:33:11 2005] [notice] Digest: generating secret for 
digest authentication ...
[Tue Mar 15 19:33:11 2005] [notice] Digest: done
[Tue Mar 15 19:33:12 2005] [notice] Apache/2.0.53 (Unix) DAV/2 
mod_python/3.1.3 Python/2.4 configured -- resuming normal operations

Nothing shows in the log as you can see.  Then a stop / start again and 
everything is normal.

>
> If the 500 error is not generated from within the import of the 
> handler
> module or the handler itself when called, you should see in the Apache
> error log all of the messages above.
>
> BTW, as an extra precaution, if Apache is able to write to your 
> document
> directories, you may want to manually remove any ".pyc" files that may
> have been generated as the result of a prior test, before running the 
> test.

It isn't, but thanks anyway.  I take it it caches stuff?

>
> To test out 2, one would need to modify 
> lib/python/mod_python/apache.py
> and reinstall it. You should add calls to apache.log_error() into 
> apache.py
> to track where it may get to within its execution.



>
> I think the appropriate place to place log statements in that file is 
> at
> the start of the class method:
>
>   def HandlerDispatch(self, req):
>
>     log_error("start dispatch")
>
> Prior to the final return of the method, add:
>
>     log_error("end dispatch %s"%str(result))
>
> There is a return part way through the method which returns a 500 
> error,
> but it is preceded by logging of a message anyway.

Right - so i alterterd the file, recompiled and installed (I mean 
forced a recompilation of the python object files).  On a normal run 
(stop/start) using the above handler i get this in the error_log:

[Tue Mar 15 20:06:28 2005] [notice] Apache/2.0.53 (Unix) DAV/2 
mod_python/3.1.3 Python/2.4 configured -- resuming normal operations
[Tue Mar 15 20:06:31 2005] [error] start dispatch
[Tue Mar 15 20:06:31 2005] [notice] mod_python: (Re)importing module 
'test'
[Tue Mar 15 20:06:31 2005] [error] start import
[Tue Mar 15 20:06:31 2005] [error] end import
[Tue Mar 15 20:06:31 2005] [error] start handler
[Tue Mar 15 20:06:31 2005] [error] end handler
[Tue Mar 15 20:06:31 2005] [error] end dispatch 0

And everything works fine.  However, when I restart I see nothing in 
the error_log:

[Tue Mar 15 20:09:17 2005] [notice] SIGHUP received.  Attempting to 
restart
[Tue Mar 15 20:09:17 2005] [notice] mod_python: Creating 32 session 
mutexes based on 150 max processes and 0 max threads.
[Tue Mar 15 20:09:17 2005] [notice] Digest: generating secret for 
digest authentication ...
[Tue Mar 15 20:09:17 2005] [notice] Digest: done
[Tue Mar 15 20:09:18 2005] [notice] Apache/2.0.53 (Unix) DAV/2 
mod_python/3.1.3 Python/2.4 configured -- resuming normal operations

That shows the restart and there is nothing following it even after I 
pull up the 500 error several times.  Access_log shows 500 errors:

192.168.2.2 - - [15/Mar/2005:20:09:20 +0000] "GET /test.py HTTP/1.1" 
500 641
192.168.2.2 - - [15/Mar/2005:20:09:35 +0000] "GET /test.py HTTP/1.1" 
500 641

>
> If it is found that 500 is being returned from the method, this would
> localise the cause of the problem to this method. At this point we 
> would
> have to start analysing further the method and the potential sources 
> of
> the 500 error by adding more logging and checking where result is 
> being
> set to 500.
>
> If this method always returns a 200 status response, yet the browser
> still sees 500, we would have to consider number 3 above.

As it doesn't even seem to be getting as far as calling the method 
since the first message isnt logged then I guess this points to the C 
code?

>
> At this point things get a bit trickier as one is dealing with the C 
> code.
> It is worth noting though that most instances of where a 500 response 
> are
> generated in the mod_python.c file are preceded by message logging. 
> The
> only ones that aren't are all of the form:
>
>     /* get/create interpreter */
>     idata = get_interpreter(interp_name, req->server);
>
>     if (!idata)
>         return HTTP_INTERNAL_SERVER_ERROR;
>
> Not being able to get/create the interpreter is pretty severe and if 
> that
> was happening then no Python code at all would be getting executed. I 
> am
> not sure why this situation couldn't be logged as well. Thus instead 
> of
> that above, have:
>
>     if (!idata) {
>         ap_log_rerror(APLOG_MARK, APLOG_NOERRNO|APLOG_ERR, 0, req,
>                       "python_handler: Can't get/create 
> interpreter.");
>
>         return HTTP_INTERNAL_SERVER_ERROR;
>     }

OK - so this does indeed seem to be the case.  On a restart I get the 
message logged:

[Tue Mar 15 20:20:55 2005] [notice] Apache/2.0.53 (Unix) DAV/2 
mod_python/3.1.3 Python/2.4 configured -- resuming normal operations
[Tue Mar 15 20:20:59 2005] [error] [client 192.168.2.2] python_handler: 
Can't get/create interpreter.

So, at least we have a better idea where things are going wrong 
(unfortunately its in the C code).  One thing of note.  I noticed that 
after restarting httpd and doing `ps ax | grep httpd` I saw some 
strange results.  If I havent yet called a page (just restarted) I can 
see only one instance.  However, as soon as I call a script (and get 
the 500 error) I see multiple instances of httpd -

  7717  ??  Ss     0:01.23 /opt/local/apache2/bin/httpd -k start
7792  ??  S      0:00.02 /opt/local/apache2/bin/httpd -k start
7793  ??  S      0:00.01 /opt/local/apache2/bin/httpd -k start
7794  ??  S      0:00.01 /opt/local/apache2/bin/httpd -k start
7795  ??  S      0:00.00 /opt/local/apache2/bin/httpd -k start
7796  ??  S      0:00.01 /opt/local/apache2/bin/httpd -k start

They dont die either.  This is obvioulsy wrong, but whats causing it I 
dont know.  Hope that gives you a better idea on whats going on.  Let 
me know what to try next and I'll do it when I get a moment.

Cheers

Jamie

From wagnerh at oclc.org  Tue Mar 15 15:43:43 2005
From: wagnerh at oclc.org (Wagner,Harry)
Date: Tue Mar 15 15:43:46 2005
Subject: [mod_python] Mod_python & global persistence
Message-ID: <811A02A11096B343880D2EEF72C4C832551DDD@OAEXCH2SERVER.oa.oclc.org>

Alan, Graham,
Thanks for your help with this, and sorry for the delay in responding. I
am still trying to understand what is happening here.  I changed my test
script to: 

from mod_python import apache
import sys, urllib, urlparse, xml.dom.pulldom, cgi, socket,
xml.sax.saxutils, StringIO, math, glob, os.path, time

ddcServer = None
resp = None

def list(req):
	global ddcServer
	now = str(time.time())
	if ddcServer:
		ddcServer.testing = "ddcServer found"
	else:
		ddcServer = DDCServer("ddcServer not found")
	resp = '''
	<?xml version="1.0" encoding="iso-8859-1"?>
	<!DOCTYPE html\n
	  PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"\n
	  "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">\n
	<html xmlns="http://www.w3.org/1999/xhtml">\n
	  <head>\n
	    <title>ddcServerT</title>\n
	  <body>\n
	  <h1>''' + ddcServer.testing + '''</h1>
	  <h2>''' + now + '''</h2>
	  </body>
	</html>\n
	'''
	return resp
	
class DDCServer(object):
    def __init__(self, testing):
	self.testing = testing

And wrapped it in another small bit of code (ddcServerTest.py):

from mod_python import apache
from ddcServerT2 import list
import sys, urllib, urlparse, xml.dom.pulldom, cgi, socket,
xml.sax.saxutils, StringIO, math, glob, os.path

def handle(req):
	return list(req)

This is the code that gets invoked by the mod_python.publisher handler.
The key was to only import the list function and not the ddcServerT2
module. 

I can't explain the results, but the first few get requests to
ddcServerTest.py produce 'ddcServer not found'.  After that the global
remains resident in memory (I get ddcServer found).  The display time
changes so I know it is not being cached by my browser.  

Is this reliable?  Any ideas why it takes a few get requests before the
global remains resident?

Thanks!  harry 


---
not sure why your code wouldn't work. I use the equivalent of the
following to get the effect you're looking for:


ddcServer = None

def handler(req):
    global ddcServer 
    if not ddcServer :
        ddcServer = DDCServer()
        # ...
    # ...


Incidentally, I once had problems with huge memory leaks when I wrote
code similar to yours that assigned req to a variable that persisted
across calls. They were fixed by assigning the variable to another value
before returning (strange but true):

    ddcServer.req = req
    ddcServer.do_GET()
    ddcServer.req = None

--Alan


On Mon, 7 Mar 2005 16:32:27 -0500, "Wagner,Harry" <wagnerh@oclc.org>
said:
> Is there a way with mod_python to init global variables in a handler 
> the first time it is called, so that they are available (and already
> initialized) in subsequent calls to the handler?  I thought the 
> following might work, but no joy:
> 
> from mod_python import apache, util, Session
> 
> def handler(req):
> #       req.log_error("in handler")
> 	global ddcServer
> 	ddcServer.req = req
> 	ddcServer.do_GET()
> 	return apache.OK
> ...
> ddcServer = ''
> if not ddcServer:
> 	...
> 	ddcServer = DDCServer(None)	
> 	ddcServer.captions = DDCCaptions(captionsFile)
> 	ddcServer.localText = TextLocalization(captionsFile)
> 	ddcServer.ddcSearch = ddc3.DDCSearch(oclc2ddcFile, recFileName,
> compFile)
> 
> The 'if not ddcServer' code is invoked with every call to the handler.
> Any ideas what I am doing wrong, or if this is possible with
mod_python?
> 
> 
> TIA... harry
> 
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python

From grahamd at dscpl.com.au  Tue Mar 15 16:03:29 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Tue Mar 15 16:03:40 2005
Subject: [mod_python] Re: mod_python.publisher and Cheetah
In-Reply-To: <20050315112853.GB14336@sources.org>
References: <1110842750.4984@dscpl.user.openhosting.com>
	<20050315112853.GB14336@sources.org>
Message-ID: <3aec49ed1f7efbac45fa4e992c8c6d86@dscpl.com.au>


On 15/03/2005, at 10:28 PM, Stephane Bortzmeyer wrote:

> On Mon, Mar 14, 2005 at 06:25:50PM -0500,
>  Graham Dumpleton <grahamd@dscpl.com.au> wrote
>>   target = req.filename + ".py"
>>
>>   if not os.path.exists(target):
>>     return apache.DECLINED
>
> I changed it (personal preference and I have only Python content) to:
>
>   if req.filename[:-3] != ".py":
>      target = req.filename + ".py"
>   else:
>      target = req.filename
>
>   if not os.path.exists(target):
>     raise apache.SERVER_RETURN, apache.HTTP_NOT_FOUND

I would strongly recommend against changing apache.DECLINED to
apache.HTTP_NOT_FOUND, it is there for a very specific reason.

By using apache.DECLINED, it is possible to put other types of
files such as images, plain text etc into the same directory
and Apache will serve them up without you having to go to
contortions in the Apache configuration to have it only use
mod_python for ".py" or some other extension. It is also not
really good practice to use ".py" extension in a URL anyway as
that is then exposing to a user of your web site what you are
using to implement the web site. This can open up security
issues in as much as they have a better idea of what potential
security holes to probe. Using ".py" extension also makes it
harder to change internally how pages are implemented to some
other Python based toolkit as you are more likely to have to
change the URL, thus invalidating bookmarks, search engine
databases etc. Thus, you are better off using REST style of no
extension, or use ".html" if it truly is HTML content.

For example, to use ".html" extension you might to the extent
of having:

   # Only interpret ".html" requests.

   target,extn = os.path.splitext(req.filename)

   if extn != ".html":
     return apache.DECLINED

   # We only want to treat request as being a possible
   # request for a Cheetah generated template file if
   # there exists both a ".tmpl" and ".py" file.

   target_tmpl = target + ".tmpl"
   target_py = target + ".py"

   if not os.path.exists(target_tmpl) and not os.path.exists(target_py):
     return apache.DECLINED

This will allow ".html" requests for virtual pages generated from
Cheetah templates, presuming ".tmpl" is in same directory, or a
static ".html" constructed by hand residing in the same directory.
The latter will work because DECLINED is returned, which gives Apache
a second chance at it, instead of HTTP_NOT_FOUND, which gives it no
chance.

Graham

From grahamd at dscpl.com.au  Tue Mar 15 16:13:20 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Tue Mar 15 16:13:26 2005
Subject: [mod_python] Cookies for domain.com/www.domain.com
In-Reply-To: <423700C4.975F76D5@ruff.com>
References: <423700C4.975F76D5@ruff.com>
Message-ID: <db76510570c107cc448f38013659433e@dscpl.com.au>


On 16/03/2005, at 2:35 AM, Jason Lanquist wrote:

> First off, thanks so much again for helping me with the config problems
> last week.  I have another newbie question about cookies.  When I login
> to the local server without the "www." prefix, the cookie will be added
> for the domain without the "www."  (example:  http://mydomain.com)
>
> Then the page redirects to a page with the www prefix (example:
> http://www.mydomain.com) and the cookie is not there.  Is there a way 
> to
> add 1 cookie that would be valid for both urls or should I just make
> sure that all urls have the www. prefix?  If the latter, how would you
> do this because req uses /home/user/public_html/index.py instead of
> domain.com?

Guessing here, but can you perhaps control that from the Apache
configuration using a configuration directive to always ensure
it is set the same. Just saw that there is a CookieDomain
directive which I'm not really sure what does. I was though
actually more though thinking whether using ServerName to
specify the site name would work.

> Also, is there a way to search through old messages?

Go to www.modpython.org and type in to the search box:

   inurl:pipermail cookie

Graham

From grahamd at dscpl.com.au  Tue Mar 15 16:31:30 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Tue Mar 15 16:31:47 2005
Subject: [mod_python] OS X / Apache 2 / mod_python bug
In-Reply-To: <D3529EB8-2AA2-4BD9-9FF3-659EAE62F146@kirkconsulting.co.uk>
References: <21B3AD9A-947A-11D9-93F3-000393BB31F6@dscpl.com.au>
	<D3529EB8-2AA2-4BD9-9FF3-659EAE62F146@kirkconsulting.co.uk>
Message-ID: <3b4cd6a0e473e17c4a012732625f926e@dscpl.com.au>

Thanks for going to all the effort, a lot of times when suggesting 
things on
the mailing list, you simply never hear from people again, so you have 
no
idea if what you suggested worked or not.

See further suggestions below.

On 16/03/2005, at 7:25 AM, Jamie Kirkpatrick wrote:
>> At this point things get a bit trickier as one is dealing with the C 
>> code.
>> It is worth noting though that most instances of where a 500 response 
>> are
>> generated in the mod_python.c file are preceded by message logging. 
>> The
>> only ones that aren't are all of the form:
>>
>>     /* get/create interpreter */
>>     idata = get_interpreter(interp_name, req->server);
>>
>>     if (!idata)
>>         return HTTP_INTERNAL_SERVER_ERROR;
>>
>> Not being able to get/create the interpreter is pretty severe and if 
>> that
>> was happening then no Python code at all would be getting executed. I 
>> am
>> not sure why this situation couldn't be logged as well. Thus instead 
>> of
>> that above, have:
>>
>>     if (!idata) {
>>         ap_log_rerror(APLOG_MARK, APLOG_NOERRNO|APLOG_ERR, 0, req,
>>                       "python_handler: Can't get/create 
>> interpreter.");
>>
>>         return HTTP_INTERNAL_SERVER_ERROR;
>>     }
>
> OK - so this does indeed seem to be the case.  On a restart I get the 
> message logged:
>
> [Tue Mar 15 20:20:55 2005] [notice] Apache/2.0.53 (Unix) DAV/2 
> mod_python/3.1.3 Python/2.4 configured -- resuming normal operations
> [Tue Mar 15 20:20:59 2005] [error] [client 192.168.2.2] 
> python_handler: Can't get/create interpreter.

Next thing to try would be to add logging inside the get_interpreter() 
function.
Suggest logging the "name" input parameter supplied to the function, 
but more
importantly log whether the "interpreters" global variable is actually 
set when
the function is being called. Ie.,

     if (!interpreters) {
         ap_log_rerror(APLOG_MARK, APLOG_NOERRNO|APLOG_ERR, 0, req,
                       "python_handler: interpreters dictionary not 
initialised.");
         return NULL;
     }

There is a return near the end of the function as well which doesn't 
log anything
which you could add something for as well.

         if (!idata->obcallback)
         {
#ifdef WITH_THREAD
             PyEval_ReleaseThread(tstate);
#endif
             PyThreadState_Delete(tstate);
             ap_log_rerror(APLOG_MARK, APLOG_NOERRNO|APLOG_ERR, 0, req,
                       "python_handler: no interpreter callback found.");

             return NULL;
         }

When I get a chance I'll have a look at how "interpreters" gets set and 
what problems
could result. Wander if my Mac OS X patch screws this up in some cases.

Graham

From grahamd at dscpl.com.au  Tue Mar 15 18:22:19 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Tue Mar 15 18:22:20 2005
Subject: [mod_python] Mod_python & global persistence
Message-ID: <1110928939.23798@dscpl.user.openhosting.com>

In answer to why it seems to take a few requests before the initialisation
sticks, as explained in prior email, if you are using Apache in prefork
mode this is exactly what you would expect as the first few requests
are likely performed in different processes.

I would suggest that you import the "os" module and then in your HTML
response display the result of calling "os.getpid()". If this values differs
it will show that they are different processes which are handling the
requests. As mentioned before, the data in each process is distinct and
setting the value in one doesn't cause it to be set in another process.

Anyway, this is the most likely explaination. Suggest you try seeing what
"os.getpid()" yields for each request. If it is the same for each and every
request and it still takes a few times to set the value, then come back
to us.

BTW, not a good idea to use "list" as it then hides the Python name for
creation of instances of the list type.

Graham

Wagner,Harry wrote ..
> Alan, Graham,
> Thanks for your help with this, and sorry for the delay in responding.
> I
> am still trying to understand what is happening here.  I changed my test
> script to: 
> 
> from mod_python import apache
> import sys, urllib, urlparse, xml.dom.pulldom, cgi, socket,
> xml.sax.saxutils, StringIO, math, glob, os.path, time
> 
> ddcServer = None
> resp = None
> 
> def list(req):
> 	global ddcServer
> 	now = str(time.time())
> 	if ddcServer:
> 		ddcServer.testing = "ddcServer found"
> 	else:
> 		ddcServer = DDCServer("ddcServer not found")
> 	resp = '''
> 	<?xml version="1.0" encoding="iso-8859-1"?>
> 	<!DOCTYPE html\n
> 	  PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"\n
> 	  "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">\n
> 	<html xmlns="http://www.w3.org/1999/xhtml">\n
> 	  <head>\n
> 	    <title>ddcServerT</title>\n
> 	  <body>\n
> 	  <h1>''' + ddcServer.testing + '''</h1>
> 	  <h2>''' + now + '''</h2>
> 	  </body>
> 	</html>\n
> 	'''
> 	return resp
> 	
> class DDCServer(object):
>     def __init__(self, testing):
> 	self.testing = testing
> 
> And wrapped it in another small bit of code (ddcServerTest.py):
> 
> from mod_python import apache
> from ddcServerT2 import list
> import sys, urllib, urlparse, xml.dom.pulldom, cgi, socket,
> xml.sax.saxutils, StringIO, math, glob, os.path
> 
> def handle(req):
> 	return list(req)
> 
> This is the code that gets invoked by the mod_python.publisher handler.
> The key was to only import the list function and not the ddcServerT2
> module. 
> 
> I can't explain the results, but the first few get requests to
> ddcServerTest.py produce 'ddcServer not found'.  After that the global
> remains resident in memory (I get ddcServer found).  The display time
> changes so I know it is not being cached by my browser.  
> 
> Is this reliable?  Any ideas why it takes a few get requests before the
> global remains resident?
> 
> Thanks!  harry 
> 
> 
> ---
> not sure why your code wouldn't work. I use the equivalent of the
> following to get the effect you're looking for:
> 
> 
> ddcServer = None
> 
> def handler(req):
>     global ddcServer 
>     if not ddcServer :
>         ddcServer = DDCServer()
>         # ...
>     # ...
> 
> 
> Incidentally, I once had problems with huge memory leaks when I wrote
> code similar to yours that assigned req to a variable that persisted
> across calls. They were fixed by assigning the variable to another value
> before returning (strange but true):
> 
>     ddcServer.req = req
>     ddcServer.do_GET()
>     ddcServer.req = None
> 
> --Alan
> 
> 
> On Mon, 7 Mar 2005 16:32:27 -0500, "Wagner,Harry" <wagnerh@oclc.org>
> said:
> > Is there a way with mod_python to init global variables in a handler
> > the first time it is called, so that they are available (and already
> > initialized) in subsequent calls to the handler?  I thought the 
> > following might work, but no joy:
> > 
> > from mod_python import apache, util, Session
> > 
> > def handler(req):
> > #       req.log_error("in handler")
> > 	global ddcServer
> > 	ddcServer.req = req
> > 	ddcServer.do_GET()
> > 	return apache.OK
> > ...
> > ddcServer = ''
> > if not ddcServer:
> > 	...
> > 	ddcServer = DDCServer(None)	
> > 	ddcServer.captions = DDCCaptions(captionsFile)
> > 	ddcServer.localText = TextLocalization(captionsFile)
> > 	ddcServer.ddcSearch = ddc3.DDCSearch(oclc2ddcFile, recFileName,
> > compFile)
> > 
> > The 'if not ddcServer' code is invoked with every call to the handler.
> > Any ideas what I am doing wrong, or if this is possible with
> mod_python?
> > 
> > 
> > TIA... harry
> > 
> > _______________________________________________
> > Mod_python mailing list
> > Mod_python@modpython.org
> > http://mailman.modpython.org/mailman/listinfo/mod_python
> 
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
From john at neggie.net  Tue Mar 15 22:25:20 2005
From: john at neggie.net (John Belmonte)
Date: Tue Mar 15 22:25:29 2005
Subject: [mod_python] mod_python interpreter creation issue
Message-ID: <4237A720.7040508@neggie.net>

Several months ago an installation of my application which uses 
mod_python/Quixote/ZODB/ZEO suddenly stopped working.  It appears to 
have been caused by a mod_python upgrade.  I'm on Debian and now using 
3.1.3, although I don't know what version I was using previously.

I traced the error to a "ImportError: No module named copy_reg" 
resulting from a cPickle.Pickler() call.  This is caused by Python 
thinking that it's in restricted execution mode.  The error is happening 
within ZEO's client thread code.

The following mod_python list message "Threads running in restricted 
mode?" seems to detail similar problems, but no one responded to the issue.

   http://www.modpython.org/pipermail/mod_python/2005-January/017129.html

Tim Peters speculates that mod_python might be starting a new 
interpreter from time to time using the Python C API.  The new 
interpreter will have distinct copies of the sys module, the sys.modules 
dict, and the sys.path list, triggering Python's restricted execution mode.

Anyone have some insight to this problem?  Or at least, would someone 
explain how and when mod_python creates new interpreters?

--John Belmonte
From grahamd at dscpl.com.au  Tue Mar 15 23:19:25 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Tue Mar 15 23:19:27 2005
Subject: [mod_python] mod_python interpreter creation issue
Message-ID: <1110946765.25089@dscpl.user.openhosting.com>

John Belmonte wrote ..
> Several months ago an installation of my application which uses 
> mod_python/Quixote/ZODB/ZEO suddenly stopped working.  It appears to 
> have been caused by a mod_python upgrade.  I'm on Debian and now using
> 3.1.3, although I don't know what version I was using previously.
> 
> I traced the error to a "ImportError: No module named copy_reg" 
> resulting from a cPickle.Pickler() call.  This is caused by Python 
> thinking that it's in restricted execution mode.  The error is happening
> within ZEO's client thread code.
> 
> The following mod_python list message "Threads running in restricted 
> mode?" seems to detail similar problems, but no one responded to the issue.
> 
>    http://www.modpython.org/pipermail/mod_python/2005-January/017129.html
> 
> Tim Peters speculates that mod_python might be starting a new 
> interpreter from time to time using the Python C API.  The new 
> interpreter will have distinct copies of the sys module, the sys.modules
> dict, and the sys.path list, triggering Python's restricted execution mode.
> 
> Anyone have some insight to this problem?  Or at least, would someone 
> explain how and when mod_python creates new interpreters?

For an explaination of interpreters and what gets created when, read:

  http://www.modpython.org/live/mod_python-3.1.2b/doc-html/pyapi-interps.html

The closest I have ever got to problems with restricted mode is the
runtime exception "classes are read-only in restricted mode".

In my circumstance, which was probably pretty unique in terms of
what I was actually doing, I was trying to communicate between
subinterpreters within the one Apache process using a messaging
system (http://ose.sourceforge.net).

In order to do this the event system which runs the messaging system
is started up within its own thread from Python. The messaging system
then actually executes in its own right as C++ code, not Python code.

So that messages can come back into the Python world, callbacks are
registered in the C++ world for the Python functions to be called. At
some later point when the messaging system has something it will
execute the Python callback.

What happened though was that when the callback was executed I
got the Python run time error "classes are read-only in restricted mode".

The cause of this turned out to be because I had created the initial
thread for the messaging system in a dedicated interpreter created
for that purpose by using PythonImport directive with a special
interpreter name.

A programming problem in OSE however meant that it saved away
the thread state corresponding to that special interpreter and it
tried to use that thread state when trying to callback into other
interpreters. Because the thread state wasn't associated with these
other interpreters, it would only execute code in restricted mode.

Correspondingly, the messaging system worked great for where
you wanted to communicate within the one interpreter and to outside
processes, but not between multiple interpreters created by mod_python
in the same Apache process. I have yet to fix OSE to make it work
but might be motivated now to do something about it.

How is this tale relevant. Well, it may if any of those packages you
are using have a C/C++ based component which operates a distinct
thread which at some point needs to callback into Python code.

Now you may think, "but I don't create any extra interpreters", but
that may not matter. This is because there are some bugs in the
mod_python code which can cause multiple sub interpreters of the
same name to be errornously created if a web server is under load
immediately from the point it was started and you are using a
multithread MPM.

What the bug means is that an interpreter gets created with a specific
name but because of inadequate thread locking on the creation of
interpreters, a second interpreter of the same name can get created
at the same time. One of these will get thrown away, with possibly
leaking of resources and after that you wouldn't normally notice
anything.

Theorectically however, if the first of those interpreters initialised some
C/C++ based module which created an internal thread it may have
saved away the thread state for that interpreter. Now if the second
interpreter registered some callback with C/C++ code, when that
code executes the callback, the saved thread state could be wrong
for that interpreter and thus it may execute in restricted mode.

Now all this may be totally irrelevant, but thread state problems and
callbacks is the only way I have seen that restricted mode can be triggered,
so thus simple mentioning it in case it might be helpful.

As to what to do about it, first thing would be to patch the thread
problems in mod_python using patches at:

  http://www.dscpl.com.au/projects/vampire/PATCHES

If however you aren't using a multithread MPM, this may make no
difference at all.

The only other thing I can add is to ask whether you are using a
multithreaded MPM? Do any of the third party packages create
internal threads? Do any of the third party packages have a C/C++
component to them?

Hope this helps.

Graham
From jkp at kirkconsulting.co.uk  Wed Mar 16 04:42:16 2005
From: jkp at kirkconsulting.co.uk (Jamie Kirkpatrick)
Date: Wed Mar 16 04:42:31 2005
Subject: [mod_python] OS X / Apache 2 / mod_python bug
In-Reply-To: <3b4cd6a0e473e17c4a012732625f926e@dscpl.com.au>
References: <21B3AD9A-947A-11D9-93F3-000393BB31F6@dscpl.com.au>
	<D3529EB8-2AA2-4BD9-9FF3-659EAE62F146@kirkconsulting.co.uk>
	<3b4cd6a0e473e17c4a012732625f926e@dscpl.com.au>
Message-ID: <FA961FA0-264D-4906-BD25-BA0AB4F1CE15@kirkconsulting.co.uk>

<snip>

> Next thing to try would be to add logging inside the 
> get_interpreter() function.
> Suggest logging the "name" input parameter supplied to the function, 
> but more
> importantly log whether the "interpreters" global variable is 
> actually set when
> the function is being called. Ie.,
>
>     if (!interpreters) {
>         ap_log_rerror(APLOG_MARK, APLOG_NOERRNO|APLOG_ERR, 0, req,
>                       "python_handler: interpreters dictionary not 
> initialised.");
>         return NULL;
>     }
>
> There is a return near the end of the function as well which doesn't 
> log anything
> which you could add something for as well.
>
>         if (!idata->obcallback)
>         {
> #ifdef WITH_THREAD
>             PyEval_ReleaseThread(tstate);
> #endif
>             PyThreadState_Delete(tstate);
>             ap_log_rerror(APLOG_MARK, APLOG_NOERRNO|APLOG_ERR, 0, req,
>                       "python_handler: no interpreter callback 
> found.");
>
>             return NULL;
>         }

Firstly, not that this code is slightly different to that which you 
posted ->

if (!idata->obcallback) {

         idata->obcallback = make_obcallback(srv);

         if (!idata->obcallback)
         {
#ifdef WITH_THREAD
             PyEval_ReleaseThread(tstate);
#endif
             PyThreadState_Delete(tstate);
             return NULL;
         }
     }

Anyway, I added the logging though I think you meant to tell me to use 
a different function (ap_log_error?)

I used something along the lines of
             ap_log_error(APLOG_MARK, APLOG_NOERRNO|APLOG_ERR, 0, srv,
              "Error message here.");

Then I built things again installed and started with a start command.

The log showed this on a call to test.py

[Wed Mar 16 09:25:58 2005] [error] interpreter name that was passed is:
[Wed Mar 16 09:25:58 2005] [error] thegrove.homeip.net
[Wed Mar 16 09:25:59 2005] [notice] mod_python: (Re)importing module 
'test'
[Wed Mar 16 09:25:59 2005] [error] start import
[Wed Mar 16 09:25:59 2005] [error] end import
[Wed Mar 16 09:25:59 2005][error] start handler
[Wed Mar 16 09:25:59 2005] [error] end handler
[Wed Mar 16 09:25:59 2005] [error] interpreter name that was passed is:
[Wed Mar 16 09:26:05 2005] [notice] child pid 24966 exit signal Bus 
error (10)

That's interesting coz it seems that after the request has been 
fulfilled the function is getting called again.  It takes a minute for 
the child PID to die (presumably coz it has not data to work with?).  
Also, just to note that a start now seems to be invoking multiple 
instances of httpd

25282  ??  Ss     0:00.80 /opt/local/apache2/bin/httpd -k start
25283  ??  S      0:00.01 /opt/local/apache2/bin/httpd -k start
25284  ??  S      0:00.01 /opt/local/apache2/bin/httpd -k start
25285  ??  S      0:00.01 /opt/local/apache2/bin/httpd -k start
25286  ??  S      0:00.00 /opt/local/apache2/bin/httpd -k start
25287  ??  S      0:00.01 /opt/local/apache2/bin/httpd -k start

Next after a restart:  just after restarting, before calling anything I 
check the logs -

[Wed Mar 16 09:33:26 2005] [error] interpreter name that was passed is:
[Wed Mar 16 09:33:26 2005] [error] interpreter name that was passed is:
[Wed Mar 16 09:33:26 2005] [error] interpreter name that was passed is:
[Wed Mar 16 09:33:26 2005] [error] interpreter name that was passed is:
[Wed Mar 16 09:33:26 2005] [error] interpreter name that was passed is:

A minute or so later I check back and i see

[Wed Mar 16 09:33:32 2005] [warn] child process 25283 still did not 
exit, sending a SIGTERM
[Wed Mar 16 09:33:32 2005] [warn] child process 25284 still did not 
exit, sending a SIGTERM
[Wed Mar 16 09:33:32 2005] [warn] child process 25285 still did not 
exit, sending a SIGTERM
[Wed Mar 16 09:33:32 2005] [warn] child process 25286 still did not 
exit, sending a SIGTERM
[Wed Mar 16 09:33:32 2005] [warn] child process 25287 still did not 
exit, sending a SIGTERM

So for some reason it is spawing lots of children and then killing them 
off one by one after the restart.

Seems odd to me that it is calling the get_interpreter() function here 
on a restart ( I would have imagined that would only happen when you 
call a script), anyway...the bit that we were after - the logs relating 
to trying to pull the page up after the restart: (I did it two times, 
so you can see how the same sequence repeats each time)

[Wed Mar 16 09:34:43 2005] [error] interpreter name that was passed is:
[Wed Mar 16 09:34:43 2005] [error] thegrove.homeip.net
[Wed Mar 16 09:34:43 2005] [error] python_handler: interpreters 
dictionary not initialised.
[Wed Mar 16 09:35:10 2005] [error] interpreter name that was passed is:
[Wed Mar 16 09:35:10 2005] [error] thegrove.homeip.net
[Wed Mar 16 09:35:10 2005] [error] python_handler: interpreters 
dictionary not initialised.

So a name is passed in, but it seems that global variable is not 
getting set :/

Right - i'll wait for you to get back to me now.  I appoligise for not 
being able to take more initiative but I just havent got the time to 
lerarn the Apache API and to read all the code.  I would actually be 
interested in some of this at a later point though since I am keen to 
port an authentication module to apache2.

Look forward to hearing back from you.

Jamie

From grahamd at dscpl.com.au  Wed Mar 16 05:05:13 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Wed Mar 16 05:05:32 2005
Subject: [mod_python] OS X / Apache 2 / mod_python bug
In-Reply-To: <FA961FA0-264D-4906-BD25-BA0AB4F1CE15@kirkconsulting.co.uk>
References: <21B3AD9A-947A-11D9-93F3-000393BB31F6@dscpl.com.au>
	<D3529EB8-2AA2-4BD9-9FF3-659EAE62F146@kirkconsulting.co.uk>
	<3b4cd6a0e473e17c4a012732625f926e@dscpl.com.au>
	<FA961FA0-264D-4906-BD25-BA0AB4F1CE15@kirkconsulting.co.uk>
Message-ID: <f6e65387db9eb406302f5c041ea98305@dscpl.com.au>


On 16/03/2005, at 8:42 PM, Jamie Kirkpatrick wrote:

> Next after a restart:  just after restarting, before calling anything 
> I check the logs -
>
> [Wed Mar 16 09:33:26 2005] [error] interpreter name that was passed is:
> [Wed Mar 16 09:33:26 2005] [error] interpreter name that was passed is:
> [Wed Mar 16 09:33:26 2005] [error] interpreter name that was passed is:
> [Wed Mar 16 09:33:26 2005] [error] interpreter name that was passed is:
> [Wed Mar 16 09:33:26 2005] [error] interpreter name that was passed is:
>
> A minute or so later I check back and i see
>
> [Wed Mar 16 09:33:32 2005] [warn] child process 25283 still did not 
> exit, sending a SIGTERM
> [Wed Mar 16 09:33:32 2005] [warn] child process 25284 still did not 
> exit, sending a SIGTERM
> [Wed Mar 16 09:33:32 2005] [warn] child process 25285 still did not 
> exit, sending a SIGTERM
> [Wed Mar 16 09:33:32 2005] [warn] child process 25286 still did not 
> exit, sending a SIGTERM
> [Wed Mar 16 09:33:32 2005] [warn] child process 25287 still did not 
> exit, sending a SIGTERM

In one place in the code, it passed NULL for the interpreter name so
the code you added to log the name is probably causing the crash. You
thus may need to do something like:

   if (name != NULL)
     ... log that name is NULL
   else
     ... log the name

BTW, can you confirm that you have the Mac OS X fix for Python 2.3 
(standard)
that I have previously mentioned. If you have applied the patch, in 
python_init()
there will be:

     /* initialize global Python interpreter if necessary */
     if (initialized == 0 || ! Py_IsInitialized())
     {
         initialized = 1;

where as unpatched mod_python has:

     /* initialize global Python interpreter if necessary */
     if (! Py_IsInitialized())
     {

I ask as the logged message "interpreters dictionary not initialised" 
indicates
that it may not and that you are hitting the same problem I saw but 
that it
simply doesn't happen all the time.

If you haven't patched it, add log message in if check for 
Py_IsInitialized
call in python_init() to see that the code is actually being called and
thus that "interpreters" is even being initialised.

     /* initialize global Python interpreter if necessary */
     if (! Py_IsInitialized())
     {

        ap_log_error(APLOG_MARK, APLOG_NOERRNO|APLOG_ERR, 0, srv,
              "Performing Initialisation.");

BTW, the Mac OS X patch is a part of general patches included in:

   http://www.dscpl.com.au/projects/vampire/PATCHES

Graham

From bl at netgroup.dk  Wed Mar 16 06:18:19 2005
From: bl at netgroup.dk (Bo Lorentsen)
Date: Wed Mar 16 06:18:10 2005
Subject: [mod_python] subclassing Session for Postgresql
In-Reply-To: <200503150342.15753.troy@tblog.ath.cx>
References: <200503150342.15753.troy@tblog.ath.cx>
Message-ID: <423815FB.6040802@netgroup.dk>

Troy Unrau wrote:

>I'm using postgresql for all of my website data, so naturally I was looking to 
>use it for storing of session data.  The code doesn't seem to be postgresql 
>specific as it uses the standard python db api, and the SQL is fairly 
>standard.
>  
>
Thaks for this nice peace of code, just what I was dreaming about !

/BL
From eddielee at tropicsoft.com  Wed Mar 16 11:33:10 2005
From: eddielee at tropicsoft.com (Eddie Diener)
Date: Wed Mar 16 12:34:09 2005
Subject: [mod_python] Support for Python 2.4
Message-ID: <000e01c52a45$d7f1b860$02fea8c0@eldiener>

Are there any plans for a version of mod_python for Python 2.4 ? Attempting to install the 3.13 version of mod_python for Python 2.4 when both Python 2.3 and Python 2.4 exist on my machine just does not work. I do have the mod_python 3.13 installed for Python 2.3 already but I want to use it with Python 2.4 .
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20050316/7fd0786e/attachment.html
From azurit at pobox.sk  Wed Mar 16 13:44:59 2005
From: azurit at pobox.sk (azurIt)
Date: Wed Mar 16 13:45:03 2005
Subject: [mod_python] Support for Python 2.4
Message-ID: <200503161844.j2GIixHo025422@www4.pobox.sk>

hi,

i'm useing mod_python 2.7.11 with Python 2.4 without any problems :) 
but i have installed ONLY Python 2.4

azurIt

> Are there any plans for a version of mod_python for Python 2.4 ? 
Attempting to install the 3.13 version of mod_python for Python 2.4 
when both Python 2.3 and Python 2.4 exist on my machine just does not 
work. I do have the mod_python 3.13 installed for Python 2.3 already 
but I want to use it with Python 2.4 .

____________________________________
Vsetko o SuperStar
http://superstar.atlas.sk


From nick at dd.revealed.net  Wed Mar 16 13:55:31 2005
From: nick at dd.revealed.net (Nick)
Date: Wed Mar 16 13:55:26 2005
Subject: [mod_python] Support for Python 2.4
In-Reply-To: <200503161844.j2GIixHo025422@www4.pobox.sk>
References: <200503161844.j2GIixHo025422@www4.pobox.sk>
Message-ID: <42388123.2040206@dd.revealed.net>

When using multiple versions of Python on the same system, make sure you 
make use of the --with-python option when configuring.

Nick

azurIt wrote:
> hi,
> 
> i'm useing mod_python 2.7.11 with Python 2.4 without any problems :) 
> but i have installed ONLY Python 2.4
> 
> azurIt
> 
> 
>>Are there any plans for a version of mod_python for Python 2.4 ? 
> 
> Attempting to install the 3.13 version of mod_python for Python 2.4 
> when both Python 2.3 and Python 2.4 exist on my machine just does not 
> work. I do have the mod_python 3.13 installed for Python 2.3 already 
> but I want to use it with Python 2.4 .
> 
> ____________________________________
> Vsetko o SuperStar
> http://superstar.atlas.sk
> 
> 
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python

From christopher.jackson at gmail.com  Wed Mar 16 13:59:37 2005
From: christopher.jackson at gmail.com (Chris Jackson)
Date: Wed Mar 16 13:59:41 2005
Subject: [mod_python] Support for Python 2.4
In-Reply-To: <000e01c52a45$d7f1b860$02fea8c0@eldiener>
References: <000e01c52a45$d7f1b860$02fea8c0@eldiener>
Message-ID: <4d11484d05031610597d35a0ea@mail.gmail.com>

This works for me.  Your problem is of course centered around having
two python installations installed.  More specifically, one cause of
your problem could be the different versions of expat that comes with
Python2.3 and Python2.4.

Do a search on the python mailing list for 'expat' and you should get
a list of threads discussing the same issue that you're having.

~= Chris =~ 


On Wed, 16 Mar 2005 11:33:10 -0500, Eddie Diener
<eddielee@tropicsoft.com> wrote:
>  
> Are there any plans for a version of mod_python for Python 2.4 ? Attempting
> to install the 3.13 version of mod_python for Python 2.4 when both Python
> 2.3 and Python 2.4 exist on my machine just does not work. I do have the
> mod_python 3.13 installed for Python 2.3 already but I want to use it with
> Python 2.4 . 
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
> 
> 
>
From jkp at kirkconsulting.co.uk  Wed Mar 16 14:03:16 2005
From: jkp at kirkconsulting.co.uk (Jamie Kirkpatrick)
Date: Wed Mar 16 14:03:20 2005
Subject: [mod_python] OS X / Apache 2 / mod_python bug
In-Reply-To: <f6e65387db9eb406302f5c041ea98305@dscpl.com.au>
References: <21B3AD9A-947A-11D9-93F3-000393BB31F6@dscpl.com.au>
	<D3529EB8-2AA2-4BD9-9FF3-659EAE62F146@kirkconsulting.co.uk>
	<3b4cd6a0e473e17c4a012732625f926e@dscpl.com.au>
	<FA961FA0-264D-4906-BD25-BA0AB4F1CE15@kirkconsulting.co.uk>
	<f6e65387db9eb406302f5c041ea98305@dscpl.com.au>
Message-ID: <1D262F53-1919-4AA2-8AE9-5213E5C414A2@kirkconsulting.co.uk>


On 16 Mar 2005, at 10:05, Graham Dumpleton wrote:

>
> On 16/03/2005, at 8:42 PM, Jamie Kirkpatrick wrote:
>
>> Next after a restart:  just after restarting, before calling 
>> anything I check the logs -
>>
>> [Wed Mar 16 09:33:26 2005] [error] interpreter name that was passed 
>> is:
>> [Wed Mar 16 09:33:26 2005] [error] interpreter name that was passed 
>> is:
>> [Wed Mar 16 09:33:26 2005] [error] interpreter name that was passed 
>> is:
>> [Wed Mar 16 09:33:26 2005] [error] interpreter name that was passed 
>> is:
>> [Wed Mar 16 09:33:26 2005] [error] interpreter name that was passed 
>> is:
>>
>> A minute or so later I check back and i see
>>
>> [Wed Mar 16 09:33:32 2005] [warn] child process 25283 still did not 
>> exit, sending a SIGTERM
>> [Wed Mar 16 09:33:32 2005] [warn] child process 25284 still did not 
>> exit, sending a SIGTERM
>> [Wed Mar 16 09:33:32 2005] [warn] child process 25285 still did not 
>> exit, sending a SIGTERM
>> [Wed Mar 16 09:33:32 2005] [warn] child process 25286 still did not 
>> exit, sending a SIGTERM
>> [Wed Mar 16 09:33:32 2005] [warn] child process 25287 still did not 
>> exit, sending a SIGTERM
>
> In one place in the code, it passed NULL for the interpreter name so
> the code you added to log the name is probably causing the crash. You
> thus may need to do something like:
>
>   if (name != NULL)
>     ... log that name is NULL
>   else
>     ... log the name
>
> BTW, can you confirm that you have the Mac OS X fix for Python 2.3 
> (standard)
> that I have previously mentioned. If you have applied the patch, in 
> python_init()
> there will be:
>
>     /* initialize global Python interpreter if necessary */
>     if (initialized == 0 || ! Py_IsInitialized())
>     {
>         initialized = 1;
>
> where as unpatched mod_python has:
>
>     /* initialize global Python interpreter if necessary */
>     if (! Py_IsInitialized())
>     {
>

I'm unpatched...I tried first by making the alteration to the logging 
of name and including the other logging statement shown below.

<snip>

> /* initialize global Python interpreter if necessary */
>     if (! Py_IsInitialized())
>     {
>
>        ap_log_error(APLOG_MARK, APLOG_NOERRNO|APLOG_ERR, 0, srv,
>              "Performing Initialisation.");

So, after a normal start error log shows:

[Wed Mar 16 11:03:43 2005] [notice] mod_python: Creating 32 session 
mutexes based on 150 max processes and 0 max threads.
[Wed Mar 16 11:03:43 2005] [error] Performing Initialisation.
[Wed Mar 16 11:03:43 2005] [notice] Digest: generating secret for 
digest authentication ...
[Wed Mar 16 11:03:43 2005] [notice] Digest: done
[Wed Mar 16 11:03:44 2005] [notice] Apache/2.0.53 (Unix) DAV/2 
mod_python/3.1.3 Python/2.4 configured -- resuming normal operations

Then I call the test script:

[Wed Mar 16 11:04:52 2005] [error] The name passed was:
[Wed Mar 16 11:04:52 2005] [error] thegrove.homeip.net
[Wed Mar 16 11:04:53 2005] [notice] mod_python: (Re)importing module 
'test'
[Wed Mar 16 11:04:53 2005] [error] start import
[Wed Mar 16 11:04:53 2005] [error] end import
[Wed Mar 16 11:04:53 2005] [error] start handler
[Wed Mar 16 11:04:53 2005] [error] end handler
[Wed Mar 16 11:04:53 2005] [error] Name was NULL.

Cool - fixed that crash (my fault!), but it still puzzles me why the 
handler gets called again here.

Now a restart - the following is added to the logs:

[Wed Mar 16 11:06:01 2005] [error] Name was NULL.
[Wed Mar 16 11:06:01 2005] [error] Name was NULL.
[Wed Mar 16 11:06:01 2005] [error] Name was NULL.
[Wed Mar 16 11:06:01 2005] [error] Name was NULL.
[Wed Mar 16 11:06:01 2005] [error] Name was NULL.
[Wed Mar 16 11:06:01 2005] [error] Name was NULL.
[Wed Mar 16 11:06:07 2005] [notice] SIGHUP received.  Attempting to 
restart
[Wed Mar 16 11:06:07 2005] [notice] mod_python: Creating 32 session 
mutexes based on 150 max processes and 0 max threads.
[Wed Mar 16 11:06:07 2005] [notice] Digest: generating secret for 
digest authentication ...
[Wed Mar 16 11:06:07 2005] [notice] Digest: done
[Wed Mar 16 11:06:08 2005] [notice] Apache/2.0.53 (Unix) DAV/2 
mod_python/3.1.3 Python/2.4 configured -- resuming normal operations

Again I have multiple instances of httpd running now ... is this normal?

Now to make the call again:

[Wed Mar 16 11:08:09 2005] [error] The name passed was:
[Wed Mar 16 11:08:09 2005] [error] thegrove.homeip.net
[Wed Mar 16 11:08:09 2005] [error] python_handler: interpreters 
dictionary not initialised.

Same results as before - at least we eliminated the crash i introduced! 
  Next I tried compiling again with the os x patch started normal and 
pulled up the page - this yields the same log as what i have posted 
above.  Now the restart - again, the same logs as i posted above, and 
pulling up the page works!

So, basically, it seems that I have been unfortunate enough not to have 
stumbled on your patch when I was working on this.  Is there any reason 
it hasn't been rolled into the main trunk yet?  A few #IFDEF DARWIN or 
suchlike could surely allow the inclusion of such a patch.  I will take 
the immediate measure of posting my findings to the darwinports mailing 
lists in order to make them aware of the issue and the fix.  I have to 
say, that from the point of view of an OS X user it would be useful to 
at least mention the patch in one of the docs in the main disto.  I 
appologise for seemingly wasting your time, but I honestly spent days 
on this and never stumbled on that patch - the only patches I saw were 
for the Makefile's.

Many thanks for all your time and effort - it has been educational for 
me at least!  I would like to hear whether or not this patch will in 
some way be added to the main release anyway.

Cheers Graham

Jamie

From grahamd at dscpl.com.au  Wed Mar 16 15:58:12 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Wed Mar 16 15:58:19 2005
Subject: [mod_python] Support for Python 2.4
In-Reply-To: <000e01c52a45$d7f1b860$02fea8c0@eldiener>
References: <000e01c52a45$d7f1b860$02fea8c0@eldiener>
Message-ID: <6a0a896c6742998afed5ea76fdc8027e@dscpl.com.au>


On 17/03/2005, at 3:33 AM, Eddie Diener wrote:

> Are there any plans for a version of mod_python for Python 2.4 ? 
> Attempting to install the 3.13 version of mod_python for Python 2.4 
> when both Python 2.3 and Python 2.4 exist on my machine just does not 
> work. I do have the mod_python 3.13 installed for Python 2.3 already 
> but I want to use it with Python 2.4 .

I few people have given some suggestions and comments and hopefully 
they have
helped, but my question is can you actually explain what is wrong? Does 
the
installation fail? Does it continue to use the wrong version of Python? 
Does
it crash when used? Ie., what is the actual problem and how does it 
manifest?

Unless the other posters comments have solved your problem, you are 
probably
going to need to provide more details. Would also help if you mention 
which
platform you are using.

Graham

From azaroth at liverpool.ac.uk  Wed Mar 16 16:15:14 2005
From: azaroth at liverpool.ac.uk (Dr Robert Sanderson)
Date: Wed Mar 16 16:10:45 2005
Subject: [mod_python] Support for Python 2.4
In-Reply-To: <6a0a896c6742998afed5ea76fdc8027e@dscpl.com.au>
References: <000e01c52a45$d7f1b860$02fea8c0@eldiener>
	<6a0a896c6742998afed5ea76fdc8027e@dscpl.com.au>
Message-ID: <Pine.LNX.4.61.0503162113320.24907@localhost.localdomain>


>> Are there any plans for a version of mod_python for Python 2.4 ? Attempting 
>> to install the 3.13 version of mod_python for Python 2.4 when both Python 
>> 2.3 and Python 2.4 exist on my machine just does not work. I do have the

It has worked fine for me in several installs.

I install Apache, then python2.4, then mod_python 3.1.3.  All of them get 
installed to a local directory (eg with --prefix=/home/user/install) and 
you set the LD_LIBRARY_PATH and LD_RUN_PATH appropriately.

What doesn't work for you?

Rob


       ,'/:.          Dr Robert Sanderson (azaroth@liverpool.ac.uk)
     ,'-/::::.        http://www.o-r-g.org/~azaroth/
   ,'--/::(@)::.      Dept. of Computer Science, Room 805
,'---/::::::::::.    University of Liverpool
____/:::::::::::::.  L5R Shop: http://www.cardsnotwords.com/
I L L U M I N A T I
From grahamd at dscpl.com.au  Wed Mar 16 16:20:30 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Wed Mar 16 16:20:42 2005
Subject: [mod_python] OS X / Apache 2 / mod_python bug
In-Reply-To: <1D262F53-1919-4AA2-8AE9-5213E5C414A2@kirkconsulting.co.uk>
References: <21B3AD9A-947A-11D9-93F3-000393BB31F6@dscpl.com.au>
	<D3529EB8-2AA2-4BD9-9FF3-659EAE62F146@kirkconsulting.co.uk>
	<3b4cd6a0e473e17c4a012732625f926e@dscpl.com.au>
	<FA961FA0-264D-4906-BD25-BA0AB4F1CE15@kirkconsulting.co.uk>
	<f6e65387db9eb406302f5c041ea98305@dscpl.com.au>
	<1D262F53-1919-4AA2-8AE9-5213E5C414A2@kirkconsulting.co.uk>
Message-ID: <09d4422daff3dde7eb027d0c34bd5fc4@dscpl.com.au>


On 17/03/2005, at 6:03 AM, Jamie Kirkpatrick wrote:

>
> On 16 Mar 2005, at 10:05, Graham Dumpleton wrote:
>> BTW, can you confirm that you have the Mac OS X fix for Python 2.3  
>> (standard)
>> that I have previously mentioned. If you have applied the patch, in  
>> python_init()
>> there will be:
>>
>>     /* initialize global Python interpreter if necessary */
>>     if (initialized == 0 || ! Py_IsInitialized())
>>     {
>>         initialized = 1;
>>
>> where as unpatched mod_python has:
>>
>>     /* initialize global Python interpreter if necessary */
>>     if (! Py_IsInitialized())
>>     {
>>
>
> I'm unpatched...I tried first by making the alteration to the logging  
> of name and including the other logging statement shown below.
>
> <snip>
>
>> /* initialize global Python interpreter if necessary */
>>     if (! Py_IsInitialized())
>>     {
>>
>>        ap_log_error(APLOG_MARK, APLOG_NOERRNO|APLOG_ERR, 0, srv,
>>              "Performing Initialisation.");
>
> So, after a normal start error log shows:
>
> [Wed Mar 16 11:03:43 2005] [notice] mod_python: Creating 32 session  
> mutexes based on 150 max processes and 0 max threads.
> [Wed Mar 16 11:03:43 2005] [error] Performing Initialisation.
> [Wed Mar 16 11:03:43 2005] [notice] Digest: generating secret for  
> digest authentication ...
> [Wed Mar 16 11:03:43 2005] [notice] Digest: done
> [Wed Mar 16 11:03:44 2005] [notice] Apache/2.0.53 (Unix) DAV/2  
> mod_python/3.1.3 Python/2.4 configured -- resuming normal operations
>
> Then I call the test script:
>
> [Wed Mar 16 11:04:52 2005] [error] The name passed was:
> [Wed Mar 16 11:04:52 2005] [error] thegrove.homeip.net
> [Wed Mar 16 11:04:53 2005] [notice] mod_python: (Re)importing module  
> 'test'
> [Wed Mar 16 11:04:53 2005] [error] start import
> [Wed Mar 16 11:04:53 2005] [error] end import
> [Wed Mar 16 11:04:53 2005] [error] start handler
> [Wed Mar 16 11:04:53 2005] [error] end handler
> [Wed Mar 16 11:04:53 2005] [error] Name was NULL.
>
> Cool - fixed that crash (my fault!), but it still puzzles me why the  
> handler gets called again here.

Am not sure which part of the logs you are referring to, I only see
the handler itself being called once.

> Now a restart - the following is added to the logs:
>
> [Wed Mar 16 11:06:01 2005] [error] Name was NULL.
> [Wed Mar 16 11:06:01 2005] [error] Name was NULL.
> [Wed Mar 16 11:06:01 2005] [error] Name was NULL.
> [Wed Mar 16 11:06:01 2005] [error] Name was NULL.
> [Wed Mar 16 11:06:01 2005] [error] Name was NULL.
> [Wed Mar 16 11:06:01 2005] [error] Name was NULL.
> [Wed Mar 16 11:06:07 2005] [notice] SIGHUP received.  Attempting to  
> restart
> [Wed Mar 16 11:06:07 2005] [notice] mod_python: Creating 32 session  
> mutexes based on 150 max processes and 0 max threads.
> [Wed Mar 16 11:06:07 2005] [notice] Digest: generating secret for  
> digest authentication ...
> [Wed Mar 16 11:06:07 2005] [notice] Digest: done
> [Wed Mar 16 11:06:08 2005] [notice] Apache/2.0.53 (Unix) DAV/2  
> mod_python/3.1.3 Python/2.4 configured -- resuming normal operations
>
> Again I have multiple instances of httpd running now ... is this  
> normal?

The lookup of interpreters by NULL is something to do with the
cleanup handlers for the interpreter. Not sure why NULL though.
Can't tell here whether they are in separate processes or not.
Are you using "ps" to note there are multiple processes running.
Because your Apache is running in prefork mode, it is normal for
it to create multiple processes even if not all may be used in
your simple test.

> Now to make the call again:
>
> [Wed Mar 16 11:08:09 2005] [error] The name passed was:
> [Wed Mar 16 11:08:09 2005] [error] thegrove.homeip.net
> [Wed Mar 16 11:08:09 2005] [error] python_handler: interpreters  
> dictionary not initialised.
>
> Same results as before - at least we eliminated the crash i  
> introduced!  Next I tried compiling again with the os x patch started  
> normal and pulled up the page - this yields the same log as what i  
> have posted above.  Now the restart - again, the same logs as i posted  
> above, and pulling up the page works!
>
> So, basically, it seems that I have been unfortunate enough not to  
> have stumbled on your patch when I was working on this.  Is there any  
> reason it hasn't been rolled into the main trunk yet?  A few #IFDEF  
> DARWIN or suchlike could surely allow the inclusion of such a patch.   
> I will take the immediate measure of posting my findings to the  
> darwinports mailing lists in order to make them aware of the issue and  
> the fix.  I have to say, that from the point of view of an OS X user  
> it would be useful to at least mention the patch in one of the docs in  
> the main disto.  I appologise for seemingly wasting your time, but I  
> honestly spent days on this and never stumbled on that patch - the  
> only patches I saw were for the Makefile's.
>
> Many thanks for all your time and effort - it has been educational for  
> me at least!  I would like to hear whether or not this patch will in  
> some way be added to the main release anyway.

I understand the patch is in the subversion repository for the  
mod_python
source code:

    
https://svn.apache.org/repos/asf/httpd/mod_python/trunk/src/ 
mod_python.c

The original person who developed mod_python doesn't really look after  
it
anymore and maintenance has been taken over by someone else. He has been
slowly working through fixing some of the known problems and simply  
hasn't
made an updated release yet. The security fix release done recently was  
a
rush job based on source of previous version. Because there is this
transition to a new maintainer, updating of the web site is also in a  
state
of flux to a degree.

I possibly should point out that although I try and provide help to  
people
on the mailing list, I am not involved in the maintenance of mod_python
itself except as far as I have posted up a lot of bug reports for stuff  
I've
found and possible fixes. I have only been using mod_python for about  
six
months and wasn't intending to get so involved in it nor develop  
Vampire.
I was only after an easier way to construct web pages for my site. I  
really
need to be getting back to my main projects which have been stagnating  
while
on this diversion. :-(

Anyway, outcome from your problem is that I now know that the Mac OS X  
fix
is relevant to the platform generally and not just Apples Python 2.3
installation. Another bit of useful information to help people out.

Graham

From list at joreybump.com  Wed Mar 16 16:29:51 2005
From: list at joreybump.com (Jorey Bump)
Date: Wed Mar 16 16:30:05 2005
Subject: [mod_python] OS X / Apache 2 / mod_python bug
In-Reply-To: <09d4422daff3dde7eb027d0c34bd5fc4@dscpl.com.au>
References: <21B3AD9A-947A-11D9-93F3-000393BB31F6@dscpl.com.au>	<D3529EB8-2AA2-4BD9-9FF3-659EAE62F146@kirkconsulting.co.uk>	<3b4cd6a0e473e17c4a012732625f926e@dscpl.com.au>	<FA961FA0-264D-4906-BD25-BA0AB4F1CE15@kirkconsulting.co.uk>	<f6e65387db9eb406302f5c041ea98305@dscpl.com.au>	<1D262F53-1919-4AA2-8AE9-5213E5C414A2@kirkconsulting.co.uk>
	<09d4422daff3dde7eb027d0c34bd5fc4@dscpl.com.au>
Message-ID: <4238A54F.7040404@joreybump.com>

Graham Dumpleton wrote:

> The original person who developed mod_python doesn't really look after  it
> anymore and maintenance has been taken over by someone else. He has been
> slowly working through fixing some of the known problems and simply  hasn't
> made an updated release yet. The security fix release done recently was  a
> rush job based on source of previous version. Because there is this
> transition to a new maintainer, updating of the web site is also in a  
> state of flux to a degree.

Is there an official announcement on this subject anywhere?

From jkp at kirkconsulting.co.uk  Wed Mar 16 16:36:45 2005
From: jkp at kirkconsulting.co.uk (Jamie Kirkpatrick)
Date: Wed Mar 16 16:36:57 2005
Subject: [mod_python] OS X / Apache 2 / mod_python bug
In-Reply-To: <09d4422daff3dde7eb027d0c34bd5fc4@dscpl.com.au>
References: <21B3AD9A-947A-11D9-93F3-000393BB31F6@dscpl.com.au>
	<D3529EB8-2AA2-4BD9-9FF3-659EAE62F146@kirkconsulting.co.uk>
	<3b4cd6a0e473e17c4a012732625f926e@dscpl.com.au>
	<FA961FA0-264D-4906-BD25-BA0AB4F1CE15@kirkconsulting.co.uk>
	<f6e65387db9eb406302f5c041ea98305@dscpl.com.au>
	<1D262F53-1919-4AA2-8AE9-5213E5C414A2@kirkconsulting.co.uk>
	<09d4422daff3dde7eb027d0c34bd5fc4@dscpl.com.au>
Message-ID: <299FA41A-6582-4553-8878-F0ED447A35B1@kirkconsulting.co.uk>

>>
>> So, after a normal start error log shows:
>>
>> [Wed Mar 16 11:03:43 2005] [notice] mod_python: Creating 32 session  
>> mutexes based on 150 max processes and 0 max threads.
>> [Wed Mar 16 11:03:43 2005] [error] Performing Initialisation.
>> [Wed Mar 16 11:03:43 2005] [notice] Digest: generating secret for  
>> digest authentication ...
>> [Wed Mar 16 11:03:43 2005] [notice] Digest: done
>> [Wed Mar 16 11:03:44 2005] [notice] Apache/2.0.53 (Unix) DAV/2  
>> mod_python/3.1.3 Python/2.4 configured -- resuming normal operations
>>
>> Then I call the test script:
>>
>> [Wed Mar 16 11:04:52 2005] [error] The name passed was:
>> [Wed Mar 16 11:04:52 2005] [error] thegrove.homeip.net
>> [Wed Mar 16 11:04:53 2005] [notice] mod_python: (Re)importing module  
>> 'test'
>> [Wed Mar 16 11:04:53 2005] [error] start import
>> [Wed Mar 16 11:04:53 2005] [error] end import
>> [Wed Mar 16 11:04:53 2005] [error] start handler
>> [Wed Mar 16 11:04:53 2005] [error] end handler
>> [Wed Mar 16 11:04:53 2005] [error] Name was NULL.
>>
>> Cool - fixed that crash (my fault!), but it still puzzles me why the  
>> handler gets called again here.
>
> Am not sure which part of the logs you are referring to, I only see
> the handler itself being called once.

I dont mean the handler, i mean the initialiser (sorry).  The first  
time name is set to thegrove.homeip.net and the second time to NULL.

>
>> Now a restart - the following is added to the logs:
>>
>> [Wed Mar 16 11:06:01 2005] [error] Name was NULL.
>> [Wed Mar 16 11:06:01 2005] [error] Name was NULL.
>> [Wed Mar 16 11:06:01 2005] [error] Name was NULL.
>> [Wed Mar 16 11:06:01 2005] [error] Name was NULL.
>> [Wed Mar 16 11:06:01 2005] [error] Name was NULL.
>> [Wed Mar 16 11:06:01 2005] [error] Name was NULL.
>> [Wed Mar 16 11:06:07 2005] [notice] SIGHUP received.  Attempting to  
>> restart
>> [Wed Mar 16 11:06:07 2005] [notice] mod_python: Creating 32 session  
>> mutexes based on 150 max processes and 0 max threads.
>> [Wed Mar 16 11:06:07 2005] [notice] Digest: generating secret for  
>> digest authentication ...
>> [Wed Mar 16 11:06:07 2005] [notice] Digest: done
>> [Wed Mar 16 11:06:08 2005] [notice] Apache/2.0.53 (Unix) DAV/2  
>> mod_python/3.1.3 Python/2.4 configured -- resuming normal operations
>>
>> Again I have multiple instances of httpd running now ... is this  
>> normal?
>
> The lookup of interpreters by NULL is something to do with the
> cleanup handlers for the interpreter. Not sure why NULL though.
> Can't tell here whether they are in separate processes or not.
> Are you using "ps" to note there are multiple processes running.
> Because your Apache is running in prefork mode, it is normal for
> it to create multiple processes even if not all may be used in
> your simple test.

I am using ps and there are multiple instances running.  I didnt start  
them so ill assume this is normal apache behaviour.  Is prefork the  
default then?  What is the alternative to this mode?

<snip>

>
> I understand the patch is in the subversion repository for the  
> mod_python
> source code:
>
>    
> https://svn.apache.org/repos/asf/httpd/mod_python/trunk/src/ 
> mod_python.c
>

Good!

> The original person who developed mod_python doesn't really look  
> after it
> anymore and maintenance has been taken over by someone else. He has  
> been
> slowly working through fixing some of the known problems and simply  
> hasn't
> made an updated release yet. The security fix release done recently  
> was a
> rush job based on source of previous version. Because there is this
> transition to a new maintainer, updating of the web site is also in a  
> state
> of flux to a degree.
>

Noted.

> I possibly should point out that although I try and provide help to  
> people
> on the mailing list, I am not involved in the maintenance of  
> mod_python
> itself except as far as I have posted up a lot of bug reports for  
> stuff I've
> found and possible fixes. I have only been using mod_python for about  
> six
> months and wasn't intending to get so involved in it nor develop  
> Vampire.
> I was only after an easier way to construct web pages for my site. I  
> really
> need to be getting back to my main projects which have been  
> stagnating while
> on this diversion. :-(
>
> Anyway, outcome from your problem is that I now know that the Mac OS  
> X fix
> is relevant to the platform generally and not just Apples Python 2.3
> installation. Another bit of useful information to help people out.
>
> Graham
>

So, just to say a big thank you.  Your tips were an interesting insight  
into how this stuff works, but I really ought to read the API for  
Apache to understand this stuff better - as with you though too much to  
do!

But yes, you are right, this has been useful as I can say with  
certainty that this is a general OS X issue - it appears on the stock  
2.3, a custom 2.3 and 2.4.  I have informed dports of the issue and we  
have included a patch in the port now so people installing that way  
should get something that works correctly.  Well done on the patch tho,  
and thanks for all your effort...

Jamie

..../me unsubscribes ;)

From grahamd at dscpl.com.au  Wed Mar 16 16:48:40 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Wed Mar 16 16:48:48 2005
Subject: [mod_python] OS X / Apache 2 / mod_python bug
In-Reply-To: <299FA41A-6582-4553-8878-F0ED447A35B1@kirkconsulting.co.uk>
References: <21B3AD9A-947A-11D9-93F3-000393BB31F6@dscpl.com.au>
	<D3529EB8-2AA2-4BD9-9FF3-659EAE62F146@kirkconsulting.co.uk>
	<3b4cd6a0e473e17c4a012732625f926e@dscpl.com.au>
	<FA961FA0-264D-4906-BD25-BA0AB4F1CE15@kirkconsulting.co.uk>
	<f6e65387db9eb406302f5c041ea98305@dscpl.com.au>
	<1D262F53-1919-4AA2-8AE9-5213E5C414A2@kirkconsulting.co.uk>
	<09d4422daff3dde7eb027d0c34bd5fc4@dscpl.com.au>
	<299FA41A-6582-4553-8878-F0ED447A35B1@kirkconsulting.co.uk>
Message-ID: <1dc5d4ee7502e584b16d6a7373520e4a@dscpl.com.au>


On 17/03/2005, at 8:36 AM, Jamie Kirkpatrick wrote:
>> Because your Apache is running in prefork mode, it is normal for
>> it to create multiple processes even if not all may be used in
>> your simple test.
>
> I am using ps and there are multiple instances running.  I didnt start 
> them so ill assume this is normal apache behaviour.  Is prefork the 
> default then?  What is the alternative to this mode?

See:

   http://httpd.apache.org/docs-2.0/mpm.html

Main other one on UNIX of interest is "worker". This puts multiple 
threads
for handling of requests within a process. On Win32 this multithreaded
approach is the default because of there being no equivalent to UNIX
process forking.

When using "worker" and Win32 however, you start potentially hitting
against some of the mod_python thread bugs which were in that patches
file I pointed to.

> Your tips were an interesting insight into how this stuff works, but I 
> really ought to read the API for Apache to understand this stuff 
> better - as with you though too much to do!

To be honest, I have never actually sat down and tried to understand the
Apache API itself. I know quite little, just enough to be able to poke
at the mod_python C code files and understand it a bit. :-)

Graham

From grahamd at dscpl.com.au  Wed Mar 16 16:51:09 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Wed Mar 16 16:51:19 2005
Subject: [mod_python] OS X / Apache 2 / mod_python bug
In-Reply-To: <4238A54F.7040404@joreybump.com>
References: <21B3AD9A-947A-11D9-93F3-000393BB31F6@dscpl.com.au>	<D3529EB8-2AA2-4BD9-9FF3-659EAE62F146@kirkconsulting.co.uk>	<3b4cd6a0e473e17c4a012732625f926e@dscpl.com.au>	<FA961FA0-264D-4906-BD25-BA0AB4F1CE15@kirkconsulting.co.uk>	<f6e65387db9eb406302f5c041ea98305@dscpl.com.au>	<1D262F53-1919-4AA2-8AE9-5213E5C414A2@kirkconsulting.co.uk>
	<09d4422daff3dde7eb027d0c34bd5fc4@dscpl.com.au>
	<4238A54F.7040404@joreybump.com>
Message-ID: <671128cbbe963fdf4bf4ff945023c29e@dscpl.com.au>


On 17/03/2005, at 8:29 AM, Jorey Bump wrote:

> Graham Dumpleton wrote:
>
>> The original person who developed mod_python doesn't really look 
>> after  it
>> anymore and maintenance has been taken over by someone else. He has 
>> been
>> slowly working through fixing some of the known problems and simply  
>> hasn't
>> made an updated release yet. The security fix release done recently 
>> was  a
>> rush job based on source of previous version. Because there is this
>> transition to a new maintainer, updating of the web site is also in a 
>>  state of flux to a degree.
>
> Is there an official announcement on this subject anywhere?

If you are talking about change in maintainer, then not that I know.
I am sure that Nicolas would appreciate help of others if you have the
time. I unfortunately don't and really need to get back to my other
projects.

Graham

From berry.groenendijk at gmail.com  Wed Mar 16 16:54:20 2005
From: berry.groenendijk at gmail.com (berry groenendijk)
Date: Wed Mar 16 16:54:23 2005
Subject: [mod_python] Error using sessions
Message-ID: <680bcd95050316135458c53944@mail.gmail.com>

When I set 'use_session = True' in my code I get the following error:

-- begin error --
Mod_python error: "PythonHandler _servlet"

Traceback (most recent call last):

  File "/usr/lib64/python2.3/site-packages/mod_python/apache.py", line
299, in HandlerDispatch
    result = object(req)

  File "./_servlet.py", line 1472, in handler
    servlet._finally()

  File "./_servlet.py", line 688, in _finally
    self.__cleanup_session()

  File "./_servlet.py", line 386, in __cleanup_session
    self.session.save()

  File "/usr/lib64/python2.3/site-packages/mod_python/Session.py",
line 204, in save
    self.do_save(dict)

  File "/usr/lib64/python2.3/site-packages/mod_python/Session.py",
line 327, in do_save
    dbm = self._get_dbm()

  File "/usr/lib64/python2.3/site-packages/mod_python/Session.py",
line 302, in _get_dbm
    result = self._dbmtype.open(self._dbmfile, 'c')

  File "/usr/src/build/475202-x86_64/install/usr/lib64/python2.3/anydbm.py",
line 83, in open
    return mod.open(file, flag, mode)

  File "/usr/src/build/475202-x86_64/install/usr/lib64/python2.3/dbhash.py",
line 16, in open
    return bsddb.hashopen(file, flag, mode)

  File "/usr/src/build/475202-x86_64/install/usr/lib64/python2.3/bsddb/__init__.py",
line 192, in hashopen

DBInvalidArgError: (22, 'Invalid argument')
-- end error --

I am using the Servlet classes from Daniel Popowich:
http://home.comcast.net/~d.popowich/mpservlets/

In standalone programs anydbm and dbhash are working perfectly. What
is the 'invalid argument'?

-- 
Berry Groenendijk
http://www.bersie.de
From list at joreybump.com  Wed Mar 16 16:59:01 2005
From: list at joreybump.com (Jorey Bump)
Date: Wed Mar 16 16:59:11 2005
Subject: [mod_python] OS X / Apache 2 / mod_python bug
In-Reply-To: <671128cbbe963fdf4bf4ff945023c29e@dscpl.com.au>
References: <21B3AD9A-947A-11D9-93F3-000393BB31F6@dscpl.com.au>	<D3529EB8-2AA2-4BD9-9FF3-659EAE62F146@kirkconsulting.co.uk>	<3b4cd6a0e473e17c4a012732625f926e@dscpl.com.au>	<FA961FA0-264D-4906-BD25-BA0AB4F1CE15@kirkconsulting.co.uk>	<f6e65387db9eb406302f5c041ea98305@dscpl.com.au>	<1D262F53-1919-4AA2-8AE9-5213E5C414A2@kirkconsulting.co.uk>
	<09d4422daff3dde7eb027d0c34bd5fc4@dscpl.com.au>
	<4238A54F.7040404@joreybump.com>
	<671128cbbe963fdf4bf4ff945023c29e@dscpl.com.au>
Message-ID: <4238AC25.6070808@joreybump.com>

Graham Dumpleton wrote:

> If you are talking about change in maintainer, then not that I know.
> I am sure that Nicolas would appreciate help of others if you have the
> time. I unfortunately don't and really need to get back to my other
> projects.

Is Grisha still involved?
From eddielee at tropicsoft.com  Wed Mar 16 16:42:56 2005
From: eddielee at tropicsoft.com (Eddie Diener)
Date: Wed Mar 16 17:43:52 2005
Subject: [mod_python] Re: Support for Python 2.4
Message-ID: <002e01c52a71$1de64b30$02fea8c0@eldiener>

Let me clarify. I am trying to install the Windows binary, mod_python-3.1.3.win32-py2.3.exe, which is the latest mod_python Windows binary, under Python 2.4 running under Windows. I have already installed this binary under Python 2.3 but I want naturally to use the latest version of Python and mod_python under Windows. When I attempt to install the binary, it says it only finds the registry entry for Python 2.3, and therefore the installation paths are for Python 2.3 and not Python 2.4 under Windows, and can not be changed.

Is there a reason that no Windows binary installation of mod_python has been created for Python 2.4 ? Will there be a Windows binary version of mod_python for Python 2.4 ? I would much appreciate having one as I have planned to do my web server programming using mod_python and, if I can not get mod_python to install for the latest Python distribution, I have to look for another means of doing Python web server programming even though I am already very familiar with mod_python and enjoy using it.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20050316/28383832/attachment.html
From grahamd at dscpl.com.au  Wed Mar 16 18:16:56 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Wed Mar 16 18:16:57 2005
Subject: [mod_python] Re: Support for Python 2.4
Message-ID: <1111015016.25346@dscpl.user.openhosting.com>

See:

  http://www.modpython.org/pipermail/mod_python/2005-February/017486.html

The Win32 Python 2.4 binary mentioned still seems to be there.

Eddie Diener wrote ..
> Let me clarify. I am trying to install the Windows binary, mod_python-3.1.3.win32-py2.3.exe,
> which is the latest mod_python Windows binary, under Python 2.4 running
> under Windows. I have already installed this binary under Python 2.3 but
> I want naturally to use the latest version of Python and mod_python under
> Windows. When I attempt to install the binary, it says it only finds the
> registry entry for Python 2.3, and therefore the installation paths are
> for Python 2.3 and not Python 2.4 under Windows, and can not be changed.
> 
> Is there a reason that no Windows binary installation of mod_python has
> been created for Python 2.4 ? Will there be a Windows binary version of
> mod_python for Python 2.4 ? I would much appreciate having one as I have
> planned to do my web server programming using mod_python and, if I can
> not get mod_python to install for the latest Python distribution, I have
> to look for another means of doing Python web server programming even though
> I am already very familiar with mod_python and enjoy using it.
From grahamd at dscpl.com.au  Wed Mar 16 18:24:51 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Wed Mar 16 18:24:53 2005
Subject: [mod_python] Re: Quickie question for you
Message-ID: <1111015491.29153@dscpl.user.openhosting.com>

I have now pushed this discussion onto the mailing where
it should be. :-)

 Davin Boling wrote ..
> Thing is, I'm specifying the method manually. I should have mentioned that.
> 
> 
> <form action="http://demo.wordpainter.net/content/login" method="post">
>        <div>
>         Handle:
>         <input type="text" name="handle" maxlength="32"/>
> 
>         Password:
>         <input type="password" name="password" maxlength="32"/>
>         <input type="submit" name="login" value="Log in!"/>
>        </div>
> </form>
> 
> 
> When a submission is made from this form, I can't pull "handle", 
> "password", or even "login" from a util.FieldStorage instance. req.read
> appears to be returning a blank string.

Without the code for your specific handler, hard to tell. If by handler
you simply mean something that is running under mod_python.publisher
then mod_python.publisher will already have consumed all data for a
post and so req.read() wouldn't return anything nor would FieldStorage
be able to decode anything for a post if you ran it your self. In the case
of mod_python.publisher, the FieldStorage instance it created will be
accessible as req.form.

I suggest you show the code for this handler and also describe how
you are defining the PythonHandler directive.

> Graham Dumpleton wrote:
> 
> > 
> > On 17/03/2005, at 6:17 AM, Davin Boling wrote:
> > 
> >> I know I should take this to the list instead of bugging you directly,
> >> but after searching the last few months on the mod_python mailing list
> >> you seem to be the one who knows the most about what he's talking 
> >> about anyway. (read: I'm lazy but flattery will get me everywhere.)
> >> Seriously though, let me know if writing you direct is a problem - 
> >> I'll try not to make it a habit. ;D
> >>
> >> I'm experimenting with writing my own handler still for the sake of
> >> understanding mod_python's internals, but I can't figure out how to
> >> handle POST forms for the life of me. As an experiment, I had my 
> >> handler write the result of req.method to a debug page just to see 
> >> what was going on...and it seems to be returning "GET" every time!
> >>
> >> I suspect I'm going about this the wrong way, and that the actual POST
> >> data is sent in a seperate request perhaps? Even so, I'm still having
> >> trouble tracking down where the POST data is actually being 
> >> sent...even with a "if req.method == 'POST':" trap that logs an error,
> >> I'm still not finding it.
> >>
> >> If you could give me a nudge in the right direction I'd really 
> >> appreciate it. I've tried FAQs, searching through the last few months
> >> of the mailing list, Googling, looking at source code...I'm quite 
> >> obviously missing something here.
> > 
> > 
> > Whether a GET or POST is used for a request is dictated by the HTML form
> > being
> > used as the trigger for the request. Take the following form for example:
> > 
> > <FORM method="POST">
> >     <P>
> >     First name: <INPUT type="text" name="firstname"><BR>
> >     Last name: <INPUT type="text" name="lastname"><BR>
> >     email: <INPUT type="text" name="email"><BR>
> >     <INPUT type="radio" name="sex" value="Male"> Male<BR>
> >     <INPUT type="radio" name="sex" value="Female"> Female<BR>
> >     <INPUT type="submit" value="Send"> <INPUT type="reset">
> >     </P>
> >  </FORM>
> > 
> > See how "method" attribute of the "FORM" element is set to "POST". This
> > makes the
> > form be sent as a POST as opposed to a GET.
> > 
> > Thus, look up information of HTML forms and the difference between GET
> > and POST
> > when using them.
> > 
> > Graham
> > 
From grahamd at dscpl.com.au  Wed Mar 16 18:27:14 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Wed Mar 16 18:27:18 2005
Subject: [mod_python] OS X / Apache 2 / mod_python bug
Message-ID: <1111015634.30654@dscpl.user.openhosting.com>

Jorey Bump wrote ..
> Graham Dumpleton wrote:
> 
> > If you are talking about change in maintainer, then not that I know.
> > I am sure that Nicolas would appreciate help of others if you have the
> > time. I unfortunately don't and really need to get back to my other
> > projects.
> 
> Is Grisha still involved?

I shouldn't really be talking for others here, but ...

Grisha was involved in getting the security fix version out but other than
that I understand his main focus is elsewhere these days. I don't know to
what degree he may still be giving input or assistance to Nicolas in taking
over.

Graham
From sanders at apache.org  Wed Mar 16 18:35:30 2005
From: sanders at apache.org (Scott Sanders)
Date: Wed Mar 16 18:35:36 2005
Subject: [mod_python] OS X / Apache 2 / mod_python bug
In-Reply-To: <1111015634.30654@dscpl.user.openhosting.com>
References: <1111015634.30654@dscpl.user.openhosting.com>
Message-ID: <9673f7b88ffb168a5afb5fe5b3fe4a72@apache.org>

I can help with this if there is a canonical patch for the issue in 
JIRA.  Just point me at it, and I will integrate it into the 
repository.

Scott

On Mar 16, 2005, at 3:27 PM, Graham Dumpleton wrote:

> Jorey Bump wrote ..
>> Graham Dumpleton wrote:
>>
>>> If you are talking about change in maintainer, then not that I know.
>>> I am sure that Nicolas would appreciate help of others if you have 
>>> the
>>> time. I unfortunately don't and really need to get back to my other
>>> projects.
>>
>> Is Grisha still involved?
>
> I shouldn't really be talking for others here, but ...
>
> Grisha was involved in getting the security fix version out but other 
> than
> that I understand his main focus is elsewhere these days. I don't know 
> to
> what degree he may still be giving input or assistance to Nicolas in 
> taking
> over.
>
> Graham
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python

From grahamd at dscpl.com.au  Wed Mar 16 18:50:58 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Wed Mar 16 18:51:10 2005
Subject: [mod_python] Making web site more useful. (Was: OS X / Apache 2 /
	mod_python bug)
Message-ID: <1111017058.10071@dscpl.user.openhosting.com>

Scott Sanders wrote ..
> I can help with this if there is a canonical patch for the issue in 
> JIRA.  Just point me at it, and I will integrate it into the 
> repository.

The solution to the original problem was already in the repository
of as yet unreleased source code. It wasn't appreciated that it applied
to the specific problem with that version of Python even though it
was suggested early on that it be tried anyway.

What would help at the moment is for the web site to be updated
to include the following:

1. A link to the JIRA bug reporting page for mod_python. The only
references to this are in past mailing list postings. Site should
say to try and solve problem first by looking at mailing list
archive and by discussion on mailing list to avoid reports which
relate to a person understanding rather than a bug.

2. A link to and instructions on how latest working copy of code
could be checked out of subversion repository so people can
try that if they want to, to see if it fixes their problems. Note
sure it is common knowledge at all where the subversion
repository is.

3. A variant of the search box on the main web site which will
look just in the archive of mailing list mail and which is marked
as such. Ie., include the search term "inurl:pipermail". This would
avoid the questions of how to search the mailing list. Comments
on the site directing people to try searching the mailing list
archive for solutions to problems would also help.

4. For myself and others who help out, we should be more
diligent in posting more FAQ entries on common problems.

Graham

From list at joreybump.com  Wed Mar 16 18:52:37 2005
From: list at joreybump.com (Jorey Bump)
Date: Wed Mar 16 18:52:46 2005
Subject: [mod_python] Re: Quickie question for you
In-Reply-To: <1111015491.29153@dscpl.user.openhosting.com>
References: <1111015491.29153@dscpl.user.openhosting.com>
Message-ID: <4238C6C5.2030206@joreybump.com>

Graham Dumpleton wrote:
> I have now pushed this discussion onto the mailing where
> it should be. :-)
> 
>  Davin Boling wrote ..
> 
>>Thing is, I'm specifying the method manually. I should have mentioned that.
>>
>>
>><form action="http://demo.wordpainter.net/content/login" method="post">
>>       <div>
>>        Handle:
>>        <input type="text" name="handle" maxlength="32"/>
>>
>>        Password:
>>        <input type="password" name="password" maxlength="32"/>
>>        <input type="submit" name="login" value="Log in!"/>
>>       </div>
>></form>
>>
>>
>>When a submission is made from this form, I can't pull "handle", 
>>"password", or even "login" from a util.FieldStorage instance. req.read
>>appears to be returning a blank string.
> 
> 
> Without the code for your specific handler, hard to tell. If by handler
> you simply mean something that is running under mod_python.publisher
> then mod_python.publisher will already have consumed all data for a
> post and so req.read() wouldn't return anything nor would FieldStorage
> be able to decode anything for a post if you ran it your self. In the case
> of mod_python.publisher, the FieldStorage instance it created will be
> accessible as req.form.

As Graham mentions, the Publisher handler returns this info in the 
req.form dictionary, so you would look at:

  req.form['handle']
  req.form['password']
  req.form['login']

From davin at wordpainter.net  Wed Mar 16 19:49:10 2005
From: davin at wordpainter.net (Davin Boling)
Date: Wed Mar 16 19:49:08 2005
Subject: [mod_python] Trouble fetching POST arguments
In-Reply-To: <1111015491.29153@dscpl.user.openhosting.com>
References: <1111015491.29153@dscpl.user.openhosting.com>
Message-ID: <4238D406.1070400@wordpainter.net>

(First of all, a big thanks to Graham for putting up with a thinly 
veiled attempt of escapism from Too Many Mailing Lists syndrome. :) That 
said, no offense to him, the e-mail he forwarded really wasn't mailing 
list material: I just wanted a quick second opinion to make sure I was 
sane.)


I was working with my own custom handler when I ran into a random 
roadblock: for some reason the headers of submitted forms were being 
eaten, and I'm not using mod_python.publisher! With req.read() returning 
blank strings, it was obvious that util.FieldStorage(req) wasn't going 
to be of much use. I also tried a simple test, which offered some very 
bizarre results. I changed the top of my handler to the following:

def handler(req):
     test = req.read()
     req.log_error(test)

And this is what I get whenever I try to POST to it:

[Wed Mar 16 19:27:53 2005] [error] [client X.X.X.X] GET, referer: 
http://real.url/nothere

Very interesting, GET instead of POST. Maybe my HTML was at fault? I 
wrote up a small test form that was *nothing* but a good form: same result.



At my wit's end, I wrote a quick handler from scratch and placed it into 
the same environment. I didn't restart Apache, all I did was make a copy 
of __init.py__ and overwrite it with a simple test. Interestingly 
enough, the "handler from scratch" worked as expected: req.read() 
returned a non-empty string, and req.method returned "POST".

I overwrote __init.py__ again with the original version, and reran the 
same form. ...Back to GET again. It makes no sense! It's like something 
upstream is "eating" req.read(), but how is that possible when I'm 
fetching the contents of req.read *at the start* of my handler(req) 
function?

Here's my Apache configuration for the virtual host in question, if it 
helps:

<VirtualHost 69.15.43.130:80>
ServerName foo.bar.baz
DocumentRoot /not/a/real/path
   <Directory /not/a/real/path>
    PythonDebug On
    SetHandler mod_python
    PythonHandler handler
    <IfModule mod_access.c>
      Order allow,deny
      Allow from all
    </IfModule>
   </Directory>
</VirtualHost>



(I'd share the code in question, but it's going to be placed in a secure 
environment and I can't have it archived to the mailing list. I'll 
report my results when I find the culprit, but in the meantime I'd 
appreciate feedback on what people think might be going wrong.)

From davin at wordpainter.net  Wed Mar 16 19:59:40 2005
From: davin at wordpainter.net (Davin Boling)
Date: Wed Mar 16 19:59:38 2005
Subject: [mod_python] Trouble fetching POST arguments
In-Reply-To: <4238D406.1070400@wordpainter.net>
References: <1111015491.29153@dscpl.user.openhosting.com>
	<4238D406.1070400@wordpainter.net>
Message-ID: <4238D67C.1020400@wordpainter.net>

I pasted the wrong code snip by accident.

This was the top of my custom handler, the one that didn't work:
def handler(req):
     test = req.method
     req.log_error(test)

(I try the one listed in the e-mail as well, but it wasn't getting 
reported to the log since req.read() contained no data.)
From grahamd at dscpl.com.au  Wed Mar 16 20:48:32 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Wed Mar 16 20:48:34 2005
Subject: [mod_python] Trouble fetching POST arguments
Message-ID: <1111024112.4494@dscpl.user.openhosting.com>

Point whatever form you are using at:

  http://dscpl.user.openhosting.com/~grahamd/testing/details.py

Eg:

<form action="http://dscpl.user.openhosting.com/~grahamd/testing/details.py" method="post">
       <div>
        Handle:
        <input type="text" name="handle" maxlength="32"/>

        Password:
        <input type="password" name="password" maxlength="32"/>
        <input type="submit" name="login" value="Log in!"/>
       </div>
</form>

That URL will display various details about the request and for me at
least for a post form, yields something for req.read(). As an example,
try:

  http://dscpl.user.openhosting.com/~grahamd/testing/form.html

You can see my code for generating this at:

  http://dscpl.user.openhosting.com/~grahamd/testing/form-html.txt
  http://dscpl.user.openhosting.com/~grahamd/testing/details-html.txt
  http://dscpl.user.openhosting.com/~grahamd/testing/details-py.txt

I'll leave this up for a while, but will take it down at some point.

Hope this helps.

Graham

Davin Boling wrote ..
> (First of all, a big thanks to Graham for putting up with a thinly 
> veiled attempt of escapism from Too Many Mailing Lists syndrome. :) That
> said, no offense to him, the e-mail he forwarded really wasn't mailing
> list material: I just wanted a quick second opinion to make sure I was
> sane.)
> 
> 
> I was working with my own custom handler when I ran into a random 
> roadblock: for some reason the headers of submitted forms were being 
> eaten, and I'm not using mod_python.publisher! With req.read() returning
> blank strings, it was obvious that util.FieldStorage(req) wasn't going
> to be of much use. I also tried a simple test, which offered some very
> bizarre results. I changed the top of my handler to the following:
> 
> def handler(req):
>      test = req.read()
>      req.log_error(test)
> 
> And this is what I get whenever I try to POST to it:
> 
> [Wed Mar 16 19:27:53 2005] [error] [client X.X.X.X] GET, referer: 
> http://real.url/nothere
> 
> Very interesting, GET instead of POST. Maybe my HTML was at fault? I 
> wrote up a small test form that was *nothing* but a good form: same result.
> 
> 
> 
> At my wit's end, I wrote a quick handler from scratch and placed it into
> the same environment. I didn't restart Apache, all I did was make a copy
> of __init.py__ and overwrite it with a simple test. Interestingly 
> enough, the "handler from scratch" worked as expected: req.read() 
> returned a non-empty string, and req.method returned "POST".
> 
> I overwrote __init.py__ again with the original version, and reran the
> same form. ...Back to GET again. It makes no sense! It's like something
> upstream is "eating" req.read(), but how is that possible when I'm 
> fetching the contents of req.read *at the start* of my handler(req) 
> function?
> 
> Here's my Apache configuration for the virtual host in question, if it
> helps:
> 
> <VirtualHost 69.15.43.130:80>
> ServerName foo.bar.baz
> DocumentRoot /not/a/real/path
>    <Directory /not/a/real/path>
>     PythonDebug On
>     SetHandler mod_python
>     PythonHandler handler
>     <IfModule mod_access.c>
>       Order allow,deny
>       Allow from all
>     </IfModule>
>    </Directory>
> </VirtualHost>
> 
> 
> 
> (I'd share the code in question, but it's going to be placed in a secure
> environment and I can't have it archived to the mailing list. I'll 
> report my results when I find the culprit, but in the meantime I'd 
> appreciate feedback on what people think might be going wrong.)
> 
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
From davin at wordpainter.net  Wed Mar 16 21:17:59 2005
From: davin at wordpainter.net (Davin Boling)
Date: Wed Mar 16 21:17:58 2005
Subject: [mod_python] Trouble fetching POST arguments
In-Reply-To: <1111024112.4494@dscpl.user.openhosting.com>
References: <1111024112.4494@dscpl.user.openhosting.com>
Message-ID: <4238E8D7.4020901@wordpainter.net>

I've got an example that works correctly already. The problem is that in 
the larger handler that I've written, SOMETHING is breaking. I can't 
understand at all why req.read() returns nothing on a POST when it's the 
very first thing I assign to a variable. I'm about to go on a commenting 
crusade to narrow down where the problem is.

This is my "from scratch" handler, which works correctly...just to show 
that I know how to handle a POST:


from mod_python import apache

def handler(req):
     head = """
            <?xml version="1.0" encoding="utf-8"?>
            <!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
             "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
             <html>
             <head>
             <title>Debug</title>
             </head>
             <body>
            """
     data = req.read()
     method = req.method
     req.content_type = "text/html"
     req.write(head + data + method + '</body></html>')
     return apache.OK




Graham Dumpleton wrote:

> Point whatever form you are using at:
> 
>   http://dscpl.user.openhosting.com/~grahamd/testing/details.py
> 
> Eg:
> 
> <form action="http://dscpl.user.openhosting.com/~grahamd/testing/details.py" method="post">
>        <div>
>         Handle:
>         <input type="text" name="handle" maxlength="32"/>
> 
>         Password:
>         <input type="password" name="password" maxlength="32"/>
>         <input type="submit" name="login" value="Log in!"/>
>        </div>
> </form>
> 
> That URL will display various details about the request and for me at
> least for a post form, yields something for req.read(). As an example,
> try:
> 
>   http://dscpl.user.openhosting.com/~grahamd/testing/form.html
> 
> You can see my code for generating this at:
> 
>   http://dscpl.user.openhosting.com/~grahamd/testing/form-html.txt
>   http://dscpl.user.openhosting.com/~grahamd/testing/details-html.txt
>   http://dscpl.user.openhosting.com/~grahamd/testing/details-py.txt
> 
> I'll leave this up for a while, but will take it down at some point.
> 
> Hope this helps.
> 
> Graham
> 
> Davin Boling wrote ..
> 
>>(First of all, a big thanks to Graham for putting up with a thinly 
>>veiled attempt of escapism from Too Many Mailing Lists syndrome. :) That
>>said, no offense to him, the e-mail he forwarded really wasn't mailing
>>list material: I just wanted a quick second opinion to make sure I was
>>sane.)
>>
>>
>>I was working with my own custom handler when I ran into a random 
>>roadblock: for some reason the headers of submitted forms were being 
>>eaten, and I'm not using mod_python.publisher! With req.read() returning
>>blank strings, it was obvious that util.FieldStorage(req) wasn't going
>>to be of much use. I also tried a simple test, which offered some very
>>bizarre results. I changed the top of my handler to the following:
>>
>>def handler(req):
>>     test = req.read()
>>     req.log_error(test)
>>
>>And this is what I get whenever I try to POST to it:
>>
>>[Wed Mar 16 19:27:53 2005] [error] [client X.X.X.X] GET, referer: 
>>http://real.url/nothere
>>
>>Very interesting, GET instead of POST. Maybe my HTML was at fault? I 
>>wrote up a small test form that was *nothing* but a good form: same result.
>>
>>
>>
>>At my wit's end, I wrote a quick handler from scratch and placed it into
>>the same environment. I didn't restart Apache, all I did was make a copy
>>of __init.py__ and overwrite it with a simple test. Interestingly 
>>enough, the "handler from scratch" worked as expected: req.read() 
>>returned a non-empty string, and req.method returned "POST".
>>
>>I overwrote __init.py__ again with the original version, and reran the
>>same form. ...Back to GET again. It makes no sense! It's like something
>>upstream is "eating" req.read(), but how is that possible when I'm 
>>fetching the contents of req.read *at the start* of my handler(req) 
>>function?
>>
>>Here's my Apache configuration for the virtual host in question, if it
>>helps:
>>
>><VirtualHost 69.15.43.130:80>
>>ServerName foo.bar.baz
>>DocumentRoot /not/a/real/path
>>   <Directory /not/a/real/path>
>>    PythonDebug On
>>    SetHandler mod_python
>>    PythonHandler handler
>>    <IfModule mod_access.c>
>>      Order allow,deny
>>      Allow from all
>>    </IfModule>
>>   </Directory>
>></VirtualHost>
>>
>>
>>
>>(I'd share the code in question, but it's going to be placed in a secure
>>environment and I can't have it archived to the mailing list. I'll 
>>report my results when I find the culprit, but in the meantime I'd 
>>appreciate feedback on what people think might be going wrong.)
>>
>>_______________________________________________
>>Mod_python mailing list
>>Mod_python@modpython.org
>>http://mailman.modpython.org/mailman/listinfo/mod_python

From grahamd at dscpl.com.au  Wed Mar 16 21:28:15 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Wed Mar 16 21:28:19 2005
Subject: [mod_python] Trouble fetching POST arguments
Message-ID: <1111026495.25085@dscpl.user.openhosting.com>

Davin Boling wrote ..
> I've got an example that works correctly already. The problem is that in
> the larger handler that I've written, SOMETHING is breaking. I can't 
> understand at all why req.read() returns nothing on a POST when it's the
> very first thing I assign to a variable. I'm about to go on a commenting
> crusade to narrow down where the problem is.
> 
> This is my "from scratch" handler, which works correctly...just to show
> that I know how to handle a POST:
> 
> 
> from mod_python import apache
> 
> def handler(req):
>      head = """
>             <?xml version="1.0" encoding="utf-8"?>
>             <!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
>              "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
>              <html>
>              <head>
>              <title>Debug</title>
>              </head>
>              <body>
>             """
>      data = req.read()
>      method = req.method
>      req.content_type = "text/html"
>      req.write(head + data + method + '</body></html>')
>      return apache.OK

Get the content length out of the headers and supply it to req.read()
and see if that makes a difference. Ie.,

      length = int(req.headers_in["content-length"])
      data = req.read(length)

Also note what documentation says about timeouts.

  read([len])

    Reads at most len bytes directly from the client, returning a  string
    with the data read. If the len argument is negative or omitted, reads
    all data given by the client.

    This function is affected by the Timeout Apache configuration  directive.
    The read will be aborted and an IOError  raised if the Timeout is reached
    while reading client data.

    This function relies on the client providing the Content-length  header.
    Absence of the Content-length header will be treated as  if
    Content-length: 0 was supplied.

    Incorrect Content-length may cause the function to try to read  more
    data than available, which will make the function block until a  Timeout
    is reached.

One would expect an IOError according to this if a timeout occured, but
maybe it isn't being generated for some reason.

You might also add:

  time.sleep(10)

at the start of your handler and see if it makes a difference. Ie., try and
determine if it is the time the client takes to send the post data.

Graham
     
From rich.mcdonough at rawkin.net  Wed Mar 16 21:33:09 2005
From: rich.mcdonough at rawkin.net (Rich McDonough)
Date: Wed Mar 16 21:33:39 2005
Subject: [mod_python] Transparently using mod_python to handle images
Message-ID: <4238EC65.8020508@rawkin.net>

First let me extend my thanks to this group. It is a fountain of useful 
information.

I am sure that this question will be easily answered by someone here, in 
fact there is probably some code snippets around that will do the deed 
quickly and easily. I am trying to write a handler that will server 
images from a subdirectory. The goal is to have the handler serve the 
image and insert a record into a database indicating the referring page, 
filename, time, etc... It would ideally be a folder within a UserDir, so 
for this to work the user would have to add the appropriate .htaccess 
and index.py files added to it. Users would then just add the images 
they want served to the folder, the handler would do the rest.

I have been doing this with Zope for a while now but need to move away 
from zodb due to size issues. Also, my current approach requires the URL 
to be rather ugly and include an argument (i.e. 
http://server/folder/image?sparky.jpg). I would love to get away from 
passing the argument in the URL and simply have users place the real 
path to the image, then let the handler do the manipulating for me.

Does anyone have any quick pointers or examples of such an application?

Thank you in advance,
Rich
From davin at wordpainter.net  Wed Mar 16 21:35:35 2005
From: davin at wordpainter.net (Davin Boling)
Date: Wed Mar 16 21:35:35 2005
Subject: [mod_python] Trouble fetching POST arguments
In-Reply-To: <1111026495.25085@dscpl.user.openhosting.com>
References: <1111026495.25085@dscpl.user.openhosting.com>
Message-ID: <4238ECF7.6010704@wordpainter.net>

(forgive the double-mail Graham, replied direct and didn't hit the list 
by accident)


I took your suggestion involving time.sleep, but it made no difference. 
As for grabbing the content-length in the method you described...the 
plot thickens!

Using your code at the very beginning of the handler(req):, I get the 
following exception:


Mod_python error: "PythonHandler handler"

Traceback (most recent call last):

   File "/usr/lib/python2.3/site-packages/mod_python/apache.py", line 
299, in HandlerDispatch
     result = object(req)

   File "/home/davin/public_html/demo/handler/__init__.py", line 83, in 
handler
     length = int(req.headers_in["content-length"])

KeyError: 'content-length'


Graham Dumpleton wrote:

> Davin Boling wrote ..
> 
>>I've got an example that works correctly already. The problem is that in
>>the larger handler that I've written, SOMETHING is breaking. I can't 
>>understand at all why req.read() returns nothing on a POST when it's the
>>very first thing I assign to a variable. I'm about to go on a commenting
>>crusade to narrow down where the problem is.
>>
>>This is my "from scratch" handler, which works correctly...just to show
>>that I know how to handle a POST:
>>
>>
>>from mod_python import apache
>>
>>def handler(req):
>>     head = """
>>            <?xml version="1.0" encoding="utf-8"?>
>>            <!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
>>             "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
>>             <html>
>>             <head>
>>             <title>Debug</title>
>>             </head>
>>             <body>
>>            """
>>     data = req.read()
>>     method = req.method
>>     req.content_type = "text/html"
>>     req.write(head + data + method + '</body></html>')
>>     return apache.OK
> 
> 
> Get the content length out of the headers and supply it to req.read()
> and see if that makes a difference. Ie.,
> 
>       length = int(req.headers_in["content-length"])
>       data = req.read(length)
> 
> Also note what documentation says about timeouts.
> 
>   read([len])
> 
>     Reads at most len bytes directly from the client, returning a  string
>     with the data read. If the len argument is negative or omitted, reads
>     all data given by the client.
> 
>     This function is affected by the Timeout Apache configuration  directive.
>     The read will be aborted and an IOError  raised if the Timeout is reached
>     while reading client data.
> 
>     This function relies on the client providing the Content-length  header.
>     Absence of the Content-length header will be treated as  if
>     Content-length: 0 was supplied.
> 
>     Incorrect Content-length may cause the function to try to read  more
>     data than available, which will make the function block until a  Timeout
>     is reached.
> 
> One would expect an IOError according to this if a timeout occured, but
> maybe it isn't being generated for some reason.
> 
> You might also add:
> 
>   time.sleep(10)
> 
> at the start of your handler and see if it makes a difference. Ie., try and
> determine if it is the time the client takes to send the post data.
> 
> Graham
>      

From grahamd at dscpl.com.au  Wed Mar 16 21:41:15 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Wed Mar 16 21:41:18 2005
Subject: [mod_python] Trouble fetching POST arguments
Message-ID: <1111027275.31817@dscpl.user.openhosting.com>

The content length will not be set for a GET, thus I had in mine:

    if req.method == "POST":
      length = int(req.headers_in["content-length"])
      template.req_read.content = req.read(length)

I believe that for a POST, content length must be provided by the
client, certainly for the content types that FieldStorage is designed
to work with.

Davin Boling wrote ..
> (forgive the double-mail Graham, replied direct and didn't hit the list
> by accident)
> 
> 
> I took your suggestion involving time.sleep, but it made no difference.
> As for grabbing the content-length in the method you described...the 
> plot thickens!
> 
> Using your code at the very beginning of the handler(req):, I get the 
> following exception:
> 
> 
> Mod_python error: "PythonHandler handler"
> 
> Traceback (most recent call last):
> 
>    File "/usr/lib/python2.3/site-packages/mod_python/apache.py", line 
> 299, in HandlerDispatch
>      result = object(req)
> 
>    File "/home/davin/public_html/demo/handler/__init__.py", line 83, in
> handler
>      length = int(req.headers_in["content-length"])
> 
> KeyError: 'content-length'
> 
> 
> Graham Dumpleton wrote:
> 
> > Davin Boling wrote ..
> > 
> >>I've got an example that works correctly already. The problem is that
> in
> >>the larger handler that I've written, SOMETHING is breaking. I can't
> >>understand at all why req.read() returns nothing on a POST when it's
> the
> >>very first thing I assign to a variable. I'm about to go on a commenting
> >>crusade to narrow down where the problem is.
> >>
> >>This is my "from scratch" handler, which works correctly...just to show
> >>that I know how to handle a POST:
> >>
> >>
> >>from mod_python import apache
> >>
> >>def handler(req):
> >>     head = """
> >>            <?xml version="1.0" encoding="utf-8"?>
> >>            <!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
> >>             "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
> >>             <html>
> >>             <head>
> >>             <title>Debug</title>
> >>             </head>
> >>             <body>
> >>            """
> >>     data = req.read()
> >>     method = req.method
> >>     req.content_type = "text/html"
> >>     req.write(head + data + method + '</body></html>')
> >>     return apache.OK
> > 
> > 
> > Get the content length out of the headers and supply it to req.read()
> > and see if that makes a difference. Ie.,
> > 
> >       length = int(req.headers_in["content-length"])
> >       data = req.read(length)
> > 
> > Also note what documentation says about timeouts.
> > 
> >   read([len])
> > 
> >     Reads at most len bytes directly from the client, returning a  string
> >     with the data read. If the len argument is negative or omitted, reads
> >     all data given by the client.
> > 
> >     This function is affected by the Timeout Apache configuration  directive.
> >     The read will be aborted and an IOError  raised if the Timeout is
> reached
> >     while reading client data.
> > 
> >     This function relies on the client providing the Content-length 
> header.
> >     Absence of the Content-length header will be treated as  if
> >     Content-length: 0 was supplied.
> > 
> >     Incorrect Content-length may cause the function to try to read  more
> >     data than available, which will make the function block until a 
> Timeout
> >     is reached.
> > 
> > One would expect an IOError according to this if a timeout occured, but
> > maybe it isn't being generated for some reason.
> > 
> > You might also add:
> > 
> >   time.sleep(10)
> > 
> > at the start of your handler and see if it makes a difference. Ie., try
> and
> > determine if it is the time the client takes to send the post data.
> > 
> > Graham
> >      
From grahamd at dscpl.com.au  Wed Mar 16 21:57:10 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Wed Mar 16 21:57:12 2005
Subject: [mod_python] Transparently using mod_python to handle images
Message-ID: <1111028230.7310@dscpl.user.openhosting.com>

Rich McDonough wrote ..
> First let me extend my thanks to this group. It is a fountain of useful
> information.
> 
> I am sure that this question will be easily answered by someone here, in
> fact there is probably some code snippets around that will do the deed
> quickly and easily. I am trying to write a handler that will server 
> images from a subdirectory. The goal is to have the handler serve the 
> image and insert a record into a database indicating the referring page,
> filename, time, etc... It would ideally be a folder within a UserDir, so
> for this to work the user would have to add the appropriate .htaccess 
> and index.py files added to it. Users would then just add the images 
> they want served to the folder, the handler would do the rest.
> 
> I have been doing this with Zope for a while now but need to move away
> from zodb due to size issues. Also, my current approach requires the URL
> to be rather ugly and include an argument (i.e. 
> http://server/folder/image?sparky.jpg). I would love to get away from 
> passing the argument in the URL and simply have users place the real 
> path to the image, then let the handler do the manipulating for me.
> 
> Does anyone have any quick pointers or examples of such an application?

I would not recommend using mod_python.publisher for this, use a
basic content handler instead and you don't have to use form paramaters.
It is actually quite easy, just put the following code in the images
directory as "_images.py".

  from mod_python import apache

  import os

  def handler(req):

    if req.filename == __file__:
      return apache.HTTP_FORBIDDEN
    elif req.filename == __file__ + 'c':
      return apache.HTTP_FORBIDDEN

    if os.path.exists(req.filename):
      apache.log_error("fetch "+req.filename)

    return apache.DECLINED

Modify the log line to what you need as appropriate.

In the .htaccess file for that directory then have:

  SetHandler python-program
  PythonHandler _images

If you then access:

  /images/foo.gif

It will log the access and then by returning apache.DECLINED
pushes the request back to Apache which will then send back
the content of the actual file.

Graham


From davin at wordpainter.net  Wed Mar 16 21:57:28 2005
From: davin at wordpainter.net (Davin Boling)
Date: Wed Mar 16 21:57:27 2005
Subject: [mod_python] Trouble fetching POST arguments
In-Reply-To: <1111027275.31817@dscpl.user.openhosting.com>
References: <1111027275.31817@dscpl.user.openhosting.com>
Message-ID: <4238F218.6040409@wordpainter.net>

I had already established that the method type is somehow getting 
switched in the non-working handler. As much as it's hell-bent to force 
me to use a GET for my form, I'd much rather figure out why it's forcing 
a GET when I'm telling it to use a POST.


1) I can make a script from scratch that accepts a POST operation just 
fine. That's the one that I provided a moment ago.
2) req.read() isn't working on the bad handler, even if I put it at the 
top of the bad handler. That was my first hint that something was 
strange, and by logging req.method I was able to find out that Apache 
wants to use GET instead of POST with my non-working handler. It doesn't 
make sense, since I'm using the exact same form that worked with the 
smaller (working) handler.
3) Before anyone asks, I'm manually killing my browser cache between 
submissions just to be safe. The strange behavior is exhibited in both 
Mozilla and IE.


Graham Dumpleton wrote:

> The content length will not be set for a GET, thus I had in mine:
> 
>     if req.method == "POST":
>       length = int(req.headers_in["content-length"])
>       template.req_read.content = req.read(length)
> 
> I believe that for a POST, content length must be provided by the
> client, certainly for the content types that FieldStorage is designed
> to work with.
> 
> Davin Boling wrote ..
> 
>>(forgive the double-mail Graham, replied direct and didn't hit the list
>>by accident)
>>
>>
>>I took your suggestion involving time.sleep, but it made no difference.
>>As for grabbing the content-length in the method you described...the 
>>plot thickens!
>>
>>Using your code at the very beginning of the handler(req):, I get the 
>>following exception:
>>
>>
>>Mod_python error: "PythonHandler handler"
>>
>>Traceback (most recent call last):
>>
>>   File "/usr/lib/python2.3/site-packages/mod_python/apache.py", line 
>>299, in HandlerDispatch
>>     result = object(req)
>>
>>   File "/home/davin/public_html/demo/handler/__init__.py", line 83, in
>>handler
>>     length = int(req.headers_in["content-length"])
>>
>>KeyError: 'content-length'
>>
>>
>>Graham Dumpleton wrote:
>>
>>
>>>Davin Boling wrote ..
>>>
>>>
>>>>I've got an example that works correctly already. The problem is that
>>
>>in
>>
>>>>the larger handler that I've written, SOMETHING is breaking. I can't
>>>>understand at all why req.read() returns nothing on a POST when it's
>>
>>the
>>
>>>>very first thing I assign to a variable. I'm about to go on a commenting
>>>>crusade to narrow down where the problem is.
>>>>
>>>>This is my "from scratch" handler, which works correctly...just to show
>>>>that I know how to handle a POST:
>>>>
>>>>
>>>
>>>>from mod_python import apache
>>>
>>>>def handler(req):
>>>>    head = """
>>>>           <?xml version="1.0" encoding="utf-8"?>
>>>>           <!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
>>>>            "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
>>>>            <html>
>>>>            <head>
>>>>            <title>Debug</title>
>>>>            </head>
>>>>            <body>
>>>>           """
>>>>    data = req.read()
>>>>    method = req.method
>>>>    req.content_type = "text/html"
>>>>    req.write(head + data + method + '</body></html>')
>>>>    return apache.OK
>>>
>>>
>>>Get the content length out of the headers and supply it to req.read()
>>>and see if that makes a difference. Ie.,
>>>
>>>      length = int(req.headers_in["content-length"])
>>>      data = req.read(length)
>>>
>>>Also note what documentation says about timeouts.
>>>
>>>  read([len])
>>>
>>>    Reads at most len bytes directly from the client, returning a  string
>>>    with the data read. If the len argument is negative or omitted, reads
>>>    all data given by the client.
>>>
>>>    This function is affected by the Timeout Apache configuration  directive.
>>>    The read will be aborted and an IOError  raised if the Timeout is
>>
>>reached
>>
>>>    while reading client data.
>>>
>>>    This function relies on the client providing the Content-length 
>>
>>header.
>>
>>>    Absence of the Content-length header will be treated as  if
>>>    Content-length: 0 was supplied.
>>>
>>>    Incorrect Content-length may cause the function to try to read  more
>>>    data than available, which will make the function block until a 
>>
>>Timeout
>>
>>>    is reached.
>>>
>>>One would expect an IOError according to this if a timeout occured, but
>>>maybe it isn't being generated for some reason.
>>>
>>>You might also add:
>>>
>>>  time.sleep(10)
>>>
>>>at the start of your handler and see if it makes a difference. Ie., try
>>
>>and
>>
>>>determine if it is the time the client takes to send the post data.
>>>
>>>Graham
>>>     

From grahamd at dscpl.com.au  Wed Mar 16 22:00:54 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Wed Mar 16 22:01:07 2005
Subject: [mod_python] Trouble fetching POST arguments
Message-ID: <1111028454.9005@dscpl.user.openhosting.com>

Are you going direct to the server, or via a web proxy? Just a thought.
I have never heard of web proxies change POST requests to GET, but
I have had problems with web proxy caches before. This is why I
tend to explicitly use:

  req.headers_out['Pragma'] = 'no-cache'
  req.headers_out['Cache-Control'] = 'no-cache'
  req.headers_out['Expires'] = '-1'

When a handler is processing forms, whether it be GET or POST.

Graham

Davin Boling wrote ..
> I had already established that the method type is somehow getting 
> switched in the non-working handler. As much as it's hell-bent to force
> me to use a GET for my form, I'd much rather figure out why it's forcing
> a GET when I'm telling it to use a POST.
> 
> 
> 1) I can make a script from scratch that accepts a POST operation just
> fine. That's the one that I provided a moment ago.
> 2) req.read() isn't working on the bad handler, even if I put it at the
> top of the bad handler. That was my first hint that something was 
> strange, and by logging req.method I was able to find out that Apache 
> wants to use GET instead of POST with my non-working handler. It doesn't
> make sense, since I'm using the exact same form that worked with the 
> smaller (working) handler.
> 3) Before anyone asks, I'm manually killing my browser cache between 
> submissions just to be safe. The strange behavior is exhibited in both
> Mozilla and IE.
> 
> 
> Graham Dumpleton wrote:
> 
> > The content length will not be set for a GET, thus I had in mine:
> > 
> >     if req.method == "POST":
> >       length = int(req.headers_in["content-length"])
> >       template.req_read.content = req.read(length)
> > 
> > I believe that for a POST, content length must be provided by the
> > client, certainly for the content types that FieldStorage is designed
> > to work with.
> > 
> > Davin Boling wrote ..
> > 
> >>(forgive the double-mail Graham, replied direct and didn't hit the list
> >>by accident)
> >>
> >>
> >>I took your suggestion involving time.sleep, but it made no difference.
> >>As for grabbing the content-length in the method you described...the
> >>plot thickens!
> >>
> >>Using your code at the very beginning of the handler(req):, I get the
> >>following exception:
> >>
> >>
> >>Mod_python error: "PythonHandler handler"
> >>
> >>Traceback (most recent call last):
> >>
> >>   File "/usr/lib/python2.3/site-packages/mod_python/apache.py", line
> >>299, in HandlerDispatch
> >>     result = object(req)
> >>
> >>   File "/home/davin/public_html/demo/handler/__init__.py", line 83,
> in
> >>handler
> >>     length = int(req.headers_in["content-length"])
> >>
> >>KeyError: 'content-length'
> >>
> >>
> >>Graham Dumpleton wrote:
> >>
> >>
> >>>Davin Boling wrote ..
> >>>
> >>>
> >>>>I've got an example that works correctly already. The problem is that
> >>
> >>in
> >>
> >>>>the larger handler that I've written, SOMETHING is breaking. I can't
> >>>>understand at all why req.read() returns nothing on a POST when it's
> >>
> >>the
> >>
> >>>>very first thing I assign to a variable. I'm about to go on a commenting
> >>>>crusade to narrow down where the problem is.
> >>>>
> >>>>This is my "from scratch" handler, which works correctly...just to
> show
> >>>>that I know how to handle a POST:
> >>>>
> >>>>
> >>>
> >>>>from mod_python import apache
> >>>
> >>>>def handler(req):
> >>>>    head = """
> >>>>           <?xml version="1.0" encoding="utf-8"?>
> >>>>           <!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
> >>>>            "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
> >>>>            <html>
> >>>>            <head>
> >>>>            <title>Debug</title>
> >>>>            </head>
> >>>>            <body>
> >>>>           """
> >>>>    data = req.read()
> >>>>    method = req.method
> >>>>    req.content_type = "text/html"
> >>>>    req.write(head + data + method + '</body></html>')
> >>>>    return apache.OK
> >>>
> >>>
> >>>Get the content length out of the headers and supply it to req.read()
> >>>and see if that makes a difference. Ie.,
> >>>
> >>>      length = int(req.headers_in["content-length"])
> >>>      data = req.read(length)
> >>>
> >>>Also note what documentation says about timeouts.
> >>>
> >>>  read([len])
> >>>
> >>>    Reads at most len bytes directly from the client, returning a  string
> >>>    with the data read. If the len argument is negative or omitted,
> reads
> >>>    all data given by the client.
> >>>
> >>>    This function is affected by the Timeout Apache configuration  directive.
> >>>    The read will be aborted and an IOError  raised if the Timeout is
> >>
> >>reached
> >>
> >>>    while reading client data.
> >>>
> >>>    This function relies on the client providing the Content-length
> >>
> >>header.
> >>
> >>>    Absence of the Content-length header will be treated as  if
> >>>    Content-length: 0 was supplied.
> >>>
> >>>    Incorrect Content-length may cause the function to try to read 
> more
> >>>    data than available, which will make the function block until a
> >>
> >>Timeout
> >>
> >>>    is reached.
> >>>
> >>>One would expect an IOError according to this if a timeout occured,
> but
> >>>maybe it isn't being generated for some reason.
> >>>
> >>>You might also add:
> >>>
> >>>  time.sleep(10)
> >>>
> >>>at the start of your handler and see if it makes a difference. Ie.,
> try
> >>
> >>and
> >>
> >>>determine if it is the time the client takes to send the post data.
> >>>
> >>>Graham
> >>>     
From rich.mcdonough at rawkin.net  Wed Mar 16 22:07:03 2005
From: rich.mcdonough at rawkin.net (Rich McDonough)
Date: Wed Mar 16 22:07:33 2005
Subject: [mod_python] Transparently using mod_python to handle images
In-Reply-To: <1111028230.7310@dscpl.user.openhosting.com>
References: <1111028230.7310@dscpl.user.openhosting.com>
Message-ID: <4238F457.9020107@rawkin.net>

Wow! Thanks for the quick answer. I knew it was something simple but 
couldn't quite put my finger on it. I am still something of a mod_python 
n00b.

Graham Dumpleton wrote:

>Rich McDonough wrote ..
>  
>
>>First let me extend my thanks to this group. It is a fountain of useful
>>information.
>>
>>I am sure that this question will be easily answered by someone here, in
>>fact there is probably some code snippets around that will do the deed
>>quickly and easily. I am trying to write a handler that will server 
>>images from a subdirectory. The goal is to have the handler serve the 
>>image and insert a record into a database indicating the referring page,
>>filename, time, etc... It would ideally be a folder within a UserDir, so
>>for this to work the user would have to add the appropriate .htaccess 
>>and index.py files added to it. Users would then just add the images 
>>they want served to the folder, the handler would do the rest.
>>
>>I have been doing this with Zope for a while now but need to move away
>>from zodb due to size issues. Also, my current approach requires the URL
>>to be rather ugly and include an argument (i.e. 
>>http://server/folder/image?sparky.jpg). I would love to get away from 
>>passing the argument in the URL and simply have users place the real 
>>path to the image, then let the handler do the manipulating for me.
>>
>>Does anyone have any quick pointers or examples of such an application?
>>    
>>
>
>I would not recommend using mod_python.publisher for this, use a
>basic content handler instead and you don't have to use form paramaters.
>It is actually quite easy, just put the following code in the images
>directory as "_images.py".
>
>  from mod_python import apache
>
>  import os
>
>  def handler(req):
>
>    if req.filename == __file__:
>      return apache.HTTP_FORBIDDEN
>    elif req.filename == __file__ + 'c':
>      return apache.HTTP_FORBIDDEN
>
>    if os.path.exists(req.filename):
>      apache.log_error("fetch "+req.filename)
>
>    return apache.DECLINED
>
>Modify the log line to what you need as appropriate.
>
>In the .htaccess file for that directory then have:
>
>  SetHandler python-program
>  PythonHandler _images
>
>If you then access:
>
>  /images/foo.gif
>
>It will log the access and then by returning apache.DECLINED
>pushes the request back to Apache which will then send back
>the content of the actual file.
>
>Graham
>
>
>
>
>  
>
From davin at wordpainter.net  Wed Mar 16 23:18:42 2005
From: davin at wordpainter.net (Davin Boling)
Date: Wed Mar 16 23:18:39 2005
Subject: [mod_python] Trouble fetching POST arguments
In-Reply-To: <1111028454.9005@dscpl.user.openhosting.com>
References: <1111028454.9005@dscpl.user.openhosting.com>
Message-ID: <42390522.4000101@wordpainter.net>

Found it, and damn was it ever an obsure one. Basicly, Apache+mod_python 
gets confused when you try to do a POST to a URI which corresponds to a 
real directory on the filesystem.


I understand that's a bit hard to follow, so I'll provide the following 
example:

1) DocumentRoot is /home/foobar/public_html/python
2) In this directory, you have a folder named "htdocs".
3) Inside this directory, you have a number of HTML templates which are 
combined to form the full document.
4) The handler is written so that when a client requests 
foobar.com/htdocs, they aren't served a real file on the filesystem, but 
a dynamic document generated from the templates in the corresponding 
filesystem directory.
5) THE PROBLEM: User attempts to post action="http://foobar.com/htdocs".
6) Unexplainable GET->POST calamity rears its ugly head.
7) SOLUTION: Add a trailing slash. It's the proper syntax anyway! 
action="http://foobar.com/htdocs/"
8) BETTER SOLUTION: Don't be a halfass, store your templates somewhere 
on the filesystem that isn't accessible by the web. Even if the 
templates don't contain any secure information, it's good to get in the 
practice.



Graham Dumpleton wrote:
> Are you going direct to the server, or via a web proxy? Just a thought.
> I have never heard of web proxies change POST requests to GET, but
> I have had problems with web proxy caches before. This is why I
> tend to explicitly use:
> 
>   req.headers_out['Pragma'] = 'no-cache'
>   req.headers_out['Cache-Control'] = 'no-cache'
>   req.headers_out['Expires'] = '-1'
> 
> When a handler is processing forms, whether it be GET or POST.
> 
> Graham
> 
> Davin Boling wrote ..
> 
>>I had already established that the method type is somehow getting 
>>switched in the non-working handler. As much as it's hell-bent to force
>>me to use a GET for my form, I'd much rather figure out why it's forcing
>>a GET when I'm telling it to use a POST.
>>
>>
>>1) I can make a script from scratch that accepts a POST operation just
>>fine. That's the one that I provided a moment ago.
>>2) req.read() isn't working on the bad handler, even if I put it at the
>>top of the bad handler. That was my first hint that something was 
>>strange, and by logging req.method I was able to find out that Apache 
>>wants to use GET instead of POST with my non-working handler. It doesn't
>>make sense, since I'm using the exact same form that worked with the 
>>smaller (working) handler.
>>3) Before anyone asks, I'm manually killing my browser cache between 
>>submissions just to be safe. The strange behavior is exhibited in both
>>Mozilla and IE.
>>
>>
>>Graham Dumpleton wrote:
>>
>>
>>>The content length will not be set for a GET, thus I had in mine:
>>>
>>>    if req.method == "POST":
>>>      length = int(req.headers_in["content-length"])
>>>      template.req_read.content = req.read(length)
>>>
>>>I believe that for a POST, content length must be provided by the
>>>client, certainly for the content types that FieldStorage is designed
>>>to work with.
>>>
>>>Davin Boling wrote ..
>>>
>>>
>>>>(forgive the double-mail Graham, replied direct and didn't hit the list
>>>>by accident)
>>>>
>>>>
>>>>I took your suggestion involving time.sleep, but it made no difference.
>>>>As for grabbing the content-length in the method you described...the
>>>>plot thickens!
>>>>
>>>>Using your code at the very beginning of the handler(req):, I get the
>>>>following exception:
>>>>
>>>>
>>>>Mod_python error: "PythonHandler handler"
>>>>
>>>>Traceback (most recent call last):
>>>>
>>>>  File "/usr/lib/python2.3/site-packages/mod_python/apache.py", line
>>>>299, in HandlerDispatch
>>>>    result = object(req)
>>>>
>>>>  File "/home/davin/public_html/demo/handler/__init__.py", line 83,
>>
>>in
>>
>>>>handler
>>>>    length = int(req.headers_in["content-length"])
>>>>
>>>>KeyError: 'content-length'
>>>>
>>>>
>>>>Graham Dumpleton wrote:
>>>>
>>>>
>>>>
>>>>>Davin Boling wrote ..
>>>>>
>>>>>
>>>>>
>>>>>>I've got an example that works correctly already. The problem is that
>>>>
>>>>in
>>>>
>>>>
>>>>>>the larger handler that I've written, SOMETHING is breaking. I can't
>>>>>>understand at all why req.read() returns nothing on a POST when it's
>>>>
>>>>the
>>>>
>>>>
>>>>>>very first thing I assign to a variable. I'm about to go on a commenting
>>>>>>crusade to narrow down where the problem is.
>>>>>>
>>>>>>This is my "from scratch" handler, which works correctly...just to
>>
>>show
>>
>>>>>>that I know how to handle a POST:
>>>>>>
>>>>>>
>>>>>
>>>>>>from mod_python import apache
>>>>>
>>>>>
>>>>>>def handler(req):
>>>>>>   head = """
>>>>>>          <?xml version="1.0" encoding="utf-8"?>
>>>>>>          <!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
>>>>>>           "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
>>>>>>           <html>
>>>>>>           <head>
>>>>>>           <title>Debug</title>
>>>>>>           </head>
>>>>>>           <body>
>>>>>>          """
>>>>>>   data = req.read()
>>>>>>   method = req.method
>>>>>>   req.content_type = "text/html"
>>>>>>   req.write(head + data + method + '</body></html>')
>>>>>>   return apache.OK
>>>>>
>>>>>
>>>>>Get the content length out of the headers and supply it to req.read()
>>>>>and see if that makes a difference. Ie.,
>>>>>
>>>>>     length = int(req.headers_in["content-length"])
>>>>>     data = req.read(length)
>>>>>
>>>>>Also note what documentation says about timeouts.
>>>>>
>>>>> read([len])
>>>>>
>>>>>   Reads at most len bytes directly from the client, returning a  string
>>>>>   with the data read. If the len argument is negative or omitted,
>>
>>reads
>>
>>>>>   all data given by the client.
>>>>>
>>>>>   This function is affected by the Timeout Apache configuration  directive.
>>>>>   The read will be aborted and an IOError  raised if the Timeout is
>>>>
>>>>reached
>>>>
>>>>
>>>>>   while reading client data.
>>>>>
>>>>>   This function relies on the client providing the Content-length
>>>>
>>>>header.
>>>>
>>>>
>>>>>   Absence of the Content-length header will be treated as  if
>>>>>   Content-length: 0 was supplied.
>>>>>
>>>>>   Incorrect Content-length may cause the function to try to read 
>>
>>more
>>
>>>>>   data than available, which will make the function block until a
>>>>
>>>>Timeout
>>>>
>>>>
>>>>>   is reached.
>>>>>
>>>>>One would expect an IOError according to this if a timeout occured,
>>
>>but
>>
>>>>>maybe it isn't being generated for some reason.
>>>>>
>>>>>You might also add:
>>>>>
>>>>> time.sleep(10)
>>>>>
>>>>>at the start of your handler and see if it makes a difference. Ie.,
>>
>>try
>>
>>>>and
>>>>
>>>>
>>>>>determine if it is the time the client takes to send the post data.
>>>>>
>>>>>Graham
>>>>>    

From john at neggie.net  Thu Mar 17 00:16:30 2005
From: john at neggie.net (John Belmonte)
Date: Thu Mar 17 00:16:42 2005
Subject: [mod_python] mod_python interpreter creation issue
In-Reply-To: <1110946765.25089@dscpl.user.openhosting.com>
References: <1110946765.25089@dscpl.user.openhosting.com>
Message-ID: <423912AE.5040106@neggie.net>

Graham Dumpleton wrote:
> As to what to do about it, first thing would be to patch the thread
> problems in mod_python using patches at:
> 
>   http://www.dscpl.com.au/projects/vampire/PATCHES
> 
> If however you aren't using a multithread MPM, this may make no
> difference at all.
> 
> The only other thing I can add is to ask whether you are using a
> multithreaded MPM? Do any of the third party packages create
> internal threads? Do any of the third party packages have a C/C++
> component to them?

Hi Graham,

Thanks for the reply.  I'm using mpm-worker.  I tried the mod_python 
patch, but there was no change.  As far as third party packages, Quixote 
doesn't use threads as far as I know, and only has one C module.  ZODB 
has several C modules.  ZEO, which is on top of ZODB and where the 
exception is happening, creates threads via the threading module.

Do you have any suggestions as to what I should instrument to locate the 
problem?

Thanks,
-John
From grahamd at dscpl.com.au  Thu Mar 17 00:30:33 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Thu Mar 17 00:30:38 2005
Subject: [mod_python] Trouble fetching POST arguments
Message-ID: <1111037433.18903@dscpl.user.openhosting.com>

Davin Boling wrote ..
> Found it, and damn was it ever an obsure one. Basicly, Apache+mod_python
> gets confused when you try to do a POST to a URI which corresponds to a
> real directory on the filesystem.
> 
> 
> I understand that's a bit hard to follow, so I'll provide the following
> example:
> 
> 1) DocumentRoot is /home/foobar/public_html/python
> 2) In this directory, you have a folder named "htdocs".
> 3) Inside this directory, you have a number of HTML templates which are
> combined to form the full document.
> 4) The handler is written so that when a client requests 
> foobar.com/htdocs, they aren't served a real file on the filesystem, but
> a dynamic document generated from the templates in the corresponding 
> filesystem directory.
> 5) THE PROBLEM: User attempts to post action="http://foobar.com/htdocs".
> 6) Unexplainable GET->POST calamity rears its ugly head.
> 7) SOLUTION: Add a trailing slash. It's the proper syntax anyway! 
> action="http://foobar.com/htdocs/"
> 8) BETTER SOLUTION: Don't be a halfass, store your templates somewhere
> on the filesystem that isn't accessible by the web. Even if the 
> templates don't contain any secure information, it's good to get in the
> practice.

FWIW, did my own test and yes you are absolutely correct about 5,6,7.

Quite interesting behaviour which I wasn't aware of before. It is worth
remembering in as much as it means you can't have a default index
page for a directory be a form which you use POST with and a URL
which maps to the directory rather than the specific index page. In
effect it is because POST data will not survive an URL redirection.

I don't believe however your suggestion in 8 makes any difference.
You would still need to add the trailing slash mentioned in 7 anyway
if you were using a URL which actually mapped to the root directory
where the PythonHandler was defined, or any subdirectory for that
matter.

Thus 8 really comes down to a matter of preferences of how to
structure your application, I don't really see it as a better solution.

Graham
From grahamd at dscpl.com.au  Thu Mar 17 00:50:14 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Thu Mar 17 00:50:18 2005
Subject: [mod_python] mod_python interpreter creation issue
Message-ID: <1111038614.28722@dscpl.user.openhosting.com>

John Belmonte wrote ..
> Thanks for the reply.  I'm using mpm-worker.  I tried the mod_python 
> patch, but there was no change.  As far as third party packages, Quixote
> doesn't use threads as far as I know, and only has one C module.  ZODB
> has several C modules.  ZEO, which is on top of ZODB and where the 
> exception is happening, creates threads via the threading module.
> 
> Do you have any suggestions as to what I should instrument to locate the
> problem?

Not really. You seem to know where the specific error comes from, so maybe
you can add debugging to understand the context in which it is being
executed and develop a very cut down example which demonstrates the
problem and which isn't dependent on any third party packages. If you can
do that and others can duplicate it then we might be able to help investigate.

I have already gone back and tried the original example which you cited:

  http://www.modpython.org/pipermail/mod_python/2005-January/017129.html

However, I didn't have any problem running the example on my platform so
can't even use that as a basis for any investigation.

I also managed to fix yesterday the problem in the code I was talking about where
I personally was having issues with restricted mode, but overall I am still not
any further along in really understanding in general what causes Python to run
in restricted mode. Would need to do some more research about it when I have
the time.

Graham
From nicolas.lehuen at gmail.com  Thu Mar 17 02:17:43 2005
From: nicolas.lehuen at gmail.com (Nicolas Lehuen)
Date: Thu Mar 17 02:17:45 2005
Subject: [mod_python] OS X / Apache 2 / mod_python bug
In-Reply-To: <1111015634.30654@dscpl.user.openhosting.com>
References: <1111015634.30654@dscpl.user.openhosting.com>
Message-ID: <c298f2d7050316231742124df9@mail.gmail.com>

On Wed, 16 Mar 2005 18:27:14 -0500, Graham Dumpleton
<grahamd@dscpl.com.au> wrote:
> Jorey Bump wrote ..
> > Graham Dumpleton wrote:
> >
> > > If you are talking about change in maintainer, then not that I know.
> > > I am sure that Nicolas would appreciate help of others if you have the
> > > time. I unfortunately don't and really need to get back to my other
> > > projects.
> >
> > Is Grisha still involved?
> 
> I shouldn't really be talking for others here, but ...
> 
> Grisha was involved in getting the security fix version out but other than
> that I understand his main focus is elsewhere these days. I don't know to
> what degree he may still be giving input or assistance to Nicolas in taking
> over.

Skimming through the lot of emails that the lis have produced
recently... To make things clear, I am not an official maintainer, and
I'm not taking over Grisha :). I only have commiters rights on the
subversion repository, and I have been submitting a few bugs to the
JIRA repository and a few patches to subversion. I usually try to do a
few hours of coding on mod_python on rainy weekends, and lately it's
been quite difficult (not because of the lack of rain, but because my
real work load is currently quite high so I tend to relax on WEs).

For now, I only have access to a Win32 platform. The good thing is
that I can release builds for Win32 and Python2.4
(http://nicolas.lehuen.com/download). The bad thing is that I can't do
much for Mac OS X issues. What I can do is commit a fix to the
subversion repository (just post a patch to the JIRA repository),
while making sure that it does not break anything for the Win32
platform. But I cannot do any test on Mac OS X. Well, I guess this
could be a good pretext to buy a Mac Mini :).

Nicolas
From davin at wordpainter.net  Thu Mar 17 08:15:54 2005
From: davin at wordpainter.net (Davin Boling)
Date: Thu Mar 17 08:15:50 2005
Subject: [mod_python] Trouble fetching POST arguments
In-Reply-To: <1111037433.18903@dscpl.user.openhosting.com>
References: <1111037433.18903@dscpl.user.openhosting.com>
Message-ID: <4239830A.6090507@wordpainter.net>

Graham Dumpleton wrote:
> 
> I don't believe however your suggestion in 8 makes any difference.
> You would still need to add the trailing slash mentioned in 7 anyway
> if you were using a URL which actually mapped to the root directory
> where the PythonHandler was defined, or any subdirectory for that
> matter.
> 
> Thus 8 really comes down to a matter of preferences of how to
> structure your application, I don't really see it as a better solution.
> 
> Graham

This is what I meant by 8:

1) The problem only manifests if the URI corresponds to a filesystem 
directory off of the DocumentRoot.
2) Thusly, if it isn't imperative that the virtual documents that you 
are serving actually map to directories in the DocumentRoot, you can 
store your template components outside of DocumentRoot. They can still 
be named after the virtual documents/directories that you are serving, 
but they don't actually have to be in the DocumentRoot.


Otherwise, yeah, it pretty much does come down to personal preferance - 
I guess I was just scolding myself because this is going to be a secure 
site anyway and I should have written it that way from the start. 
Nevermind that it isn't too hard to just fix the action URL with a 
trailing slash, *as long as you know this behavior exists*. And now we 
do, so six hours of pulling my hair over this amount to something at 
least. :)

Thanks for the brainstorming session!
From list at joreybump.com  Thu Mar 17 08:33:14 2005
From: list at joreybump.com (Jorey Bump)
Date: Thu Mar 17 08:33:24 2005
Subject: [mod_python] Trouble fetching POST arguments
In-Reply-To: <4239830A.6090507@wordpainter.net>
References: <1111037433.18903@dscpl.user.openhosting.com>
	<4239830A.6090507@wordpainter.net>
Message-ID: <4239871A.8060904@joreybump.com>

Davin Boling wrote:

> Nevermind that it isn't too hard to just fix the action URL with a 
> trailing slash, *as long as you know this behavior exists*. And now we 
> do, so six hours of pulling my hair over this amount to something at 
> least. :)

I suspect that enabling mod_dir will take care of this for you 
automatically.
From davin at wordpainter.net  Thu Mar 17 08:52:15 2005
From: davin at wordpainter.net (Davin Boling)
Date: Thu Mar 17 08:52:21 2005
Subject: [mod_python] Trouble fetching POST arguments
In-Reply-To: <4239871A.8060904@joreybump.com>
References: <1111037433.18903@dscpl.user.openhosting.com>
	<4239830A.6090507@wordpainter.net> <4239871A.8060904@joreybump.com>
Message-ID: <42398B8F.2080307@wordpainter.net>

Jorey Bump wrote:

> Davin Boling wrote:
> 
>> Nevermind that it isn't too hard to just fix the action URL with a 
>> trailing slash, *as long as you know this behavior exists*. And now we 
>> do, so six hours of pulling my hair over this amount to something at 
>> least. :)
> 
> 
> I suspect that enabling mod_dir will take care of this for you 
> automatically.

I have mod_dir enabled outside of mod_python, but the functionality gets 
squashed once Apache passes the request to mod_python. If you know of a 
sensible way to have mod_dir work in this case, by all means, share it 
with me.
From list at joreybump.com  Thu Mar 17 08:54:27 2005
From: list at joreybump.com (Jorey Bump)
Date: Thu Mar 17 08:54:39 2005
Subject: [mod_python] Trouble fetching POST arguments
In-Reply-To: <42398B8F.2080307@wordpainter.net>
References: <1111037433.18903@dscpl.user.openhosting.com>
	<4239830A.6090507@wordpainter.net> <4239871A.8060904@joreybump.com>
	<42398B8F.2080307@wordpainter.net>
Message-ID: <42398C13.6050900@joreybump.com>

Davin Boling wrote:
> Jorey Bump wrote:
> 
>> I suspect that enabling mod_dir will take care of this for you 
>> automatically.
> 
> I have mod_dir enabled outside of mod_python, but the functionality gets 
> squashed once Apache passes the request to mod_python. If you know of a 
> sensible way to have mod_dir work in this case, by all means, share it 
> with me.

No, it was only a suspicion. :)
From bortzmeyer at nic.fr  Thu Mar 17 09:46:51 2005
From: bortzmeyer at nic.fr (Stephane Bortzmeyer)
Date: Thu Mar 17 09:47:00 2005
Subject: [mod_python] Re: Quickie question for you
In-Reply-To: <4238C6C5.2030206@joreybump.com>
References: <1111015491.29153@dscpl.user.openhosting.com>
	<4238C6C5.2030206@joreybump.com>
Message-ID: <20050317144651.GA11378@nic.fr>

On Wed, Mar 16, 2005 at 06:52:37PM -0500,
 Jorey Bump <list@joreybump.com> wrote 
 a message of 45 lines which said:

> As Graham mentions, the Publisher handler returns this info in the 
> req.form dictionary, so you would look at:

I thought that it was a util.FieldStorage
(http://www.modpython.org/live/current/doc-html/node92.html) which is
not a dictionary?  Although is has __getattr__ so, in practice, your
example works:
 
>  req.form['handle']
>  req.form['password']
>  req.form['login']
From gustavo.cordova at q-voz.com  Thu Mar 17 09:53:02 2005
From: gustavo.cordova at q-voz.com (=?ISO-8859-1?Q?Gustavo_C=F3rdova_Avila?=)
Date: Thu Mar 17 09:55:43 2005
Subject: [mod_python] Transparently using mod_python to handle images
In-Reply-To: <4238EC65.8020508@rawkin.net>
References: <4238EC65.8020508@rawkin.net>
Message-ID: <423999CE.6020402@q-voz.com>

Rich McDonough wrote:

> First let me extend my thanks to this group. It is a fountain of 
> useful information.
>
> I am sure that this question will be easily answered by someone here, 
> in fact there is probably some code snippets around that will do the 
> deed quickly and easily. I am trying to write a handler that will 
> server images from a subdirectory. The goal is to have the handler 
> serve the image and insert a record into a database indicating the 
> referring page, filename, time, etc... It would ideally be a folder 
> within a UserDir, so for this to work the user would have to add the 
> appropriate .htaccess and index.py files added to it. Users would then 
> just add the images they want served to the folder, the handler would 
> do the rest.
>
> I have been doing this with Zope for a while now but need to move away 
> from zodb due to size issues. Also, my current approach requires the 
> URL to be rather ugly and include an argument (i.e. 
> http://server/folder/image?sparky.jpg). I would love to get away from 
> passing the argument in the URL and simply have users place the real 
> path to the image, then let the handler do the manipulating for me.
>
> Does anyone have any quick pointers or examples of such an application?
>
> Thank you in advance,
> Rich

You're welcome :-)

Something like this, perhaps???

    # Do this for all .../imgsrv/ directories.
    <DirectoryMatch "/imgsrv/">
        SetHandler mod_python
        PythonPath "['/location/of/your/script']+sys.path"
        PythonHandler image_server
    </DirectoryMatch>

And then, you place somewhere in your PythonPath:

    # image_server.py
    # This small handler serves images, and records
    # the information to who it was sent to.

    import os, re, time
    from mod_python import apache

    rxParts = re.compile(r"(([^/]+)\.([^./]+))$")

    # The function "record_serving" handles inserting into the
    # database a record of an image served.
    # Usage: RecordServing(
    from DatabaseStuff import RecordServing

    # This is your document root.
    DOCROOT = "/var/www/htdocs"

    def handler(req):
        # *IF* the image exists, then record a serving.
        if os.access(DOCROOT + req.uri, os.F_OK):
           fullname, name, extension = rxParts.search(req.uri).groups()
           referer = req.header_in.get("referer")
           timestamp = time.strftime("%F %T")
           RecordServing(timestamp, fullname, referer)

        # Finally, let Apache send the file.
        return apache.DECLINED

What this handler does, is intercept all fetches for files inside all 
subdirectories called "imgsrv"; when the file actually exists, it saves 
a record to the database (v?a the "RecordServing" function). Finally, 
the request is declined, to let apache handle sending the actual file to 
the client.

I haven't actually run it, but the basic design should work.  Comments 
are appreciated.

Hope this helps.

-gus
-------------- next part --------------
A non-text attachment was scrubbed...
Name: gustavo.cordova.vcf
Type: text/x-vcard
Size: 189 bytes
Desc: not available
Url : http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20050317/c3abe2c1/gustavo.cordova.vcf
From eddielee at tropicsoft.com  Thu Mar 17 10:04:05 2005
From: eddielee at tropicsoft.com (Eddie Diener)
Date: Thu Mar 17 11:05:13 2005
Subject: [mod_python] Re: Re: Support for Python 2.4 (Edward Diener)
Message-ID: <002101c52b02$91bae200$02fea8c0@eldiener>

After downloading from the aforementioned url below and installing mod_python-3.1.4.win32-py2.4.exe, when I attempted to start Apache 2.052 I received a failure and these messages in the Windows Event Viewer:

The Apache service named reported the following error:
>>> Syntax error on line 173 of C:/Program Files/Apache Group/Apache2/conf/httpd.conf: 


The Apache service named reported the following error:
>>> Cannot load C:/Program Files/Apache Group/Apache2/modules/mod_python.so into server: The specified module could not be found. 

When I revert to the mod_python.so from the mod_python-3.1.3.win32-py2.3.exe installation, Apache starts and works with no problems.

Does anybody know what might be wrong ?

"See:

http://www.modpython.org/pipermail/mod_python/2005-February/017486.html

The Win32 Python 2.4 binary mentioned still seems to be there."

Eddie Diener wrote ..
> Let me clarify. I am trying to install the Windows binary, mod_python-3.1.3.win32-py2.3.exe,
> which is the latest mod_python Windows binary, under Python 2.4 running
> under Windows. I have already installed this binary under Python 2.3 but
> I want naturally to use the latest version of Python and mod_python under
> Windows. When I attempt to install the binary, it says it only finds the
> registry entry for Python 2.3, and therefore the installation paths are
> for Python 2.3 and not Python 2.4 under Windows, and can not be changed.
> 
> Is there a reason that no Windows binary installation of mod_python has
> been created for Python 2.4 ? Will there be a Windows binary version of
> mod_python for Python 2.4 ? I would much appreciate having one as I have
> planned to do my web server programming using mod_python and, if I can
> not get mod_python to install for the latest Python distribution, I have
> to look for another means of doing Python web server programming even though
> I am already very familiar with mod_python and enjoy using it.

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20050317/60e3c56a/attachment.html
From sanders at apache.org  Thu Mar 17 12:07:30 2005
From: sanders at apache.org (Scott Sanders)
Date: Thu Mar 17 12:07:36 2005
Subject: [mod_python] OS X / Apache 2 / mod_python bug
In-Reply-To: <c298f2d7050316231742124df9@mail.gmail.com>
References: <1111015634.30654@dscpl.user.openhosting.com>
	<c298f2d7050316231742124df9@mail.gmail.com>
Message-ID: <b019a58ff5462c7de4d61e007857b66b@apache.org>


On Mar 16, 2005, at 11:17 PM, Nicolas Lehuen wrote:
> For now, I only have access to a Win32 platform. The good thing is
> that I can release builds for Win32 and Python2.4
> (http://nicolas.lehuen.com/download). The bad thing is that I can't do
> much for Mac OS X issues. What I can do is commit a fix to the
> subversion repository (just post a patch to the JIRA repository),
> while making sure that it does not break anything for the Win32
> platform. But I cannot do any test on Mac OS X. Well, I guess this
> could be a good pretext to buy a Mac Mini :).
>
While I don't want to ruin any excuse to buy a mini ;), I have Win32, 
Mac OS X, and RedHat9-i386, and build on the latter two (Redhat is 
production, so it always builds last)

Scott

From list at joreybump.com  Thu Mar 17 12:22:26 2005
From: list at joreybump.com (Jorey Bump)
Date: Thu Mar 17 12:22:37 2005
Subject: [mod_python] Re: Quickie question for you
In-Reply-To: <20050317144651.GA11378@nic.fr>
References: <1111015491.29153@dscpl.user.openhosting.com>
	<4238C6C5.2030206@joreybump.com> <20050317144651.GA11378@nic.fr>
Message-ID: <4239BCD2.2070607@joreybump.com>

Stephane Bortzmeyer wrote:

> I thought that it was a util.FieldStorage
> (http://www.modpython.org/live/current/doc-html/node92.html) which is
> not a dictionary?  Although is has __getattr__ so, in practice, your
> example works:
> 
>> req.form['handle']
>> req.form['password']
>> req.form['login']

Yes, you're right, it's an instance that behaves like a dictionary, and 
responds to dictionary methods like req.form.has_key(), but isn't 
actually a dictionary. I oversimplified, but it's important to keep the 
distinction in mind.
From nicolas.lehuen at gmail.com  Thu Mar 17 15:09:31 2005
From: nicolas.lehuen at gmail.com (Nicolas Lehuen)
Date: Thu Mar 17 15:09:35 2005
Subject: [mod_python] Re: Re: Support for Python 2.4 (Edward Diener)
In-Reply-To: <002101c52b02$91bae200$02fea8c0@eldiener>
References: <002101c52b02$91bae200$02fea8c0@eldiener>
Message-ID: <c298f2d705031712097b7a9dfb@mail.gmail.com>

Hi,

Two questions here :

1) When you run the 3.1.4 installer, at the end of the installation
process, do you get a directory selector dialog asking you where the
Apache installation is ? If not, please check if you have a TCL/TK
environment set (check for the presence of TCL_* variables in your
environment variables). Maybe it's getting in the way.

2) Do you point it to the root of the installation directory, i.e. to
the directory in which you can find the bin, lib, modules and other
directories ? You should not point to the bin or modules directory. If
you did so, mod_python.so must have ended at the wrong place, or the
installer should have displayed an error message.

3) Do you get any error message just after this dialog ?

4) Do you have a file named "mod_python_so.pyd" in your
$PYTHON\Lib\site-packages directory ? If so, the installation has
failed for a reason or another, just copy and rename it to
$APACHE\modules\mod_python.so

Regards,
Nicolas


On Thu, 17 Mar 2005 10:04:05 -0500, Eddie Diener
<eddielee@tropicsoft.com> wrote:
>  
>  
> 
> After downloading from the aforementioned url below and installing
> mod_python-3.1.4.win32-py2.4.exe, when I attempted to start Apache 2.052 I
> received a failure and these messages in the Windows Event Viewer: 
> 
> The Apache service named reported the following error:
> >>> Syntax error on line 173 of C:/Program Files/Apache
> Group/Apache2/conf/httpd.conf: 
>  
> 
> The Apache service named reported the following error:
> >>> Cannot load C:/Program Files/Apache Group/Apache2/modules/mod_python.so
> into server: The specified module could not be found. 
> 
> When I revert to the mod_python.so from the mod_python-3.1.3.win32-py2.3.exe
> installation, Apache starts and works with no problems. 
> 
> Does anybody know what might be wrong ? 
> 
> "See:
> 
> http://www.modpython.org/pipermail/mod_python/2005-February/017486.html
> 
> The Win32 Python 2.4 binary mentioned still seems to be there."
> 
> Eddie Diener wrote ..
> > Let me clarify. I am trying to install the Windows binary,
> mod_python-3.1.3.win32-py2.3.exe,
> > which is the latest mod_python Windows binary, under Python 2.4 running
> > under Windows. I have already installed this binary under Python 2.3 but
> > I want naturally to use the latest version of Python and mod_python under
> > Windows. When I attempt to install the binary, it says it only finds the
> > registry entry for Python 2.3, and therefore the installation paths are
> > for Python 2.3 and not Python 2.4 under Windows, and can not be changed.
> > 
> > Is there a reason that no Windows binary installation of mod_python has
> > been created for Python 2.4 ? Will there be a Windows binary version of
> > mod_python for Python 2.4 ? I would much appreciate having one as I have
> > planned to do my web server programming using mod_python and, if I can
> > not get mod_python to install for the latest Python distribution, I have
> > to look for another means of doing Python web server programming even
> though
> > I am already very familiar with mod_python and enjoy using it.
>  
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
> 
> 
>
From nicolas.lehuen at gmail.com  Thu Mar 17 15:10:11 2005
From: nicolas.lehuen at gmail.com (Nicolas Lehuen)
Date: Thu Mar 17 15:10:15 2005
Subject: [mod_python] Re: Re: Support for Python 2.4 (Edward Diener)
In-Reply-To: <c298f2d705031712097b7a9dfb@mail.gmail.com>
References: <002101c52b02$91bae200$02fea8c0@eldiener>
	<c298f2d705031712097b7a9dfb@mail.gmail.com>
Message-ID: <c298f2d7050317121075f2d5a5@mail.gmail.com>

As you may have noticed, my two question promptly became four, as
nobody expect the Spanish Inquisition !


On Thu, 17 Mar 2005 21:09:31 +0100, Nicolas Lehuen
<nicolas.lehuen@gmail.com> wrote:
> Hi,
> 
> Two questions here :
> 
> 1) When you run the 3.1.4 installer, at the end of the installation
> process, do you get a directory selector dialog asking you where the
> Apache installation is ? If not, please check if you have a TCL/TK
> environment set (check for the presence of TCL_* variables in your
> environment variables). Maybe it's getting in the way.
> 
> 2) Do you point it to the root of the installation directory, i.e. to
> the directory in which you can find the bin, lib, modules and other
> directories ? You should not point to the bin or modules directory. If
> you did so, mod_python.so must have ended at the wrong place, or the
> installer should have displayed an error message.
> 
> 3) Do you get any error message just after this dialog ?
> 
> 4) Do you have a file named "mod_python_so.pyd" in your
> $PYTHON\Lib\site-packages directory ? If so, the installation has
> failed for a reason or another, just copy and rename it to
> $APACHE\modules\mod_python.so
> 
> Regards,
> Nicolas
> 
> 
> On Thu, 17 Mar 2005 10:04:05 -0500, Eddie Diener
> <eddielee@tropicsoft.com> wrote:
> >
> >
> >
> > After downloading from the aforementioned url below and installing
> > mod_python-3.1.4.win32-py2.4.exe, when I attempted to start Apache 2.052 I
> > received a failure and these messages in the Windows Event Viewer:
> >
> > The Apache service named reported the following error:
> > >>> Syntax error on line 173 of C:/Program Files/Apache
> > Group/Apache2/conf/httpd.conf:
> >
> >
> > The Apache service named reported the following error:
> > >>> Cannot load C:/Program Files/Apache Group/Apache2/modules/mod_python.so
> > into server: The specified module could not be found.
> >
> > When I revert to the mod_python.so from the mod_python-3.1.3.win32-py2.3.exe
> > installation, Apache starts and works with no problems.
> >
> > Does anybody know what might be wrong ?
> >
> > "See:
> >
> > http://www.modpython.org/pipermail/mod_python/2005-February/017486.html
> >
> > The Win32 Python 2.4 binary mentioned still seems to be there."
> >
> > Eddie Diener wrote ..
> > > Let me clarify. I am trying to install the Windows binary,
> > mod_python-3.1.3.win32-py2.3.exe,
> > > which is the latest mod_python Windows binary, under Python 2.4 running
> > > under Windows. I have already installed this binary under Python 2.3 but
> > > I want naturally to use the latest version of Python and mod_python under
> > > Windows. When I attempt to install the binary, it says it only finds the
> > > registry entry for Python 2.3, and therefore the installation paths are
> > > for Python 2.3 and not Python 2.4 under Windows, and can not be changed.
> > >
> > > Is there a reason that no Windows binary installation of mod_python has
> > > been created for Python 2.4 ? Will there be a Windows binary version of
> > > mod_python for Python 2.4 ? I would much appreciate having one as I have
> > > planned to do my web server programming using mod_python and, if I can
> > > not get mod_python to install for the latest Python distribution, I have
> > > to look for another means of doing Python web server programming even
> > though
> > > I am already very familiar with mod_python and enjoy using it.
> >
> > _______________________________________________
> > Mod_python mailing list
> > Mod_python@modpython.org
> > http://mailman.modpython.org/mailman/listinfo/mod_python
> >
> >
> >
>
From feuerschwanz76 at web.de  Thu Mar 17 16:28:48 2005
From: feuerschwanz76 at web.de (Alexander Nagel)
Date: Thu Mar 17 16:43:25 2005
Subject: [mod_python] Problem with psphandler
Message-ID: <d1csnk$vn7$1@sea.gmane.org>

Hi,
i have here an apache2 running with mod_python
and i configured it for use with .psp-pages.
I add
AddHandler mod_python .psp
PythonHandler mod_python.psp
in httpd.conf like in section 6.2 in the manual.
After that i tested the time example from section 4.9
and it worked successfully.
Now i thought: 'wow how simple'
and i expand it with a single print statement.
<html>
<%
import time
%>
Hello world, the time is: <%=time.strftime("%Y-%m-%d, %H:%M:%S")%>
<%
print "Test"
%>
</html>

But it doesn't work.
'Test' isn't displayed in the browser.
Why?
Thanks
Alex

From cmd.exe at 163.com  Thu Mar 17 19:24:37 2005
From: cmd.exe at 163.com (cmd.exe@163.com)
Date: Thu Mar 17 19:25:05 2005
Subject: [mod_python] mod_python doesn't work
Message-ID: <004b01c52b50$de1a49d0$81a7e0db@unig>

hi:
  mod_python doesn't work with apache together, i don't know why!
details:
  mod_python/3.1.3
  python/2.3.5
  apache/2.0.53
conf:
 LoadModule python_module modules/mod_python.so
 <Directory "d:/Apache2/htdocs/bs/">
 AddHandler python-program .py
 PythonHandler mptest
 PythonDebug On
</Directory>
when i enter http://localhost/bs/he.py in IE, it return:
Mod_python error: "PythonHandler mptest"

Traceback (most recent call last):

  File "D:\PYTHON23\Lib\site-packages\mod_python\apache.py", line 287, in HandlerDispatch
    log=debug)

  File "D:\PYTHON23\Lib\site-packages\mod_python\apache.py", line 454, in import_module
    f, p, d = imp.find_module(parts[i], path)

ImportError: No module named mptest


thanks!
 
unig
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20050318/3a3d8fb0/attachment.html
From craig.warren at encorp.com  Fri Mar 18 10:44:08 2005
From: craig.warren at encorp.com (Craig Warren)
Date: Fri Mar 18 10:44:13 2005
Subject: [mod_python] Problem with psphandler
In-Reply-To: <d1csnk$vn7$1@sea.gmane.org>
References: <d1csnk$vn7$1@sea.gmane.org>
Message-ID: <423AF748.4090708@encorp.com>

Print will just print to stdout

try
psp.write('test')


Alexander Nagel wrote:

> Hi,
> i have here an apache2 running with mod_python
> and i configured it for use with .psp-pages.
> I add
> AddHandler mod_python .psp
> PythonHandler mod_python.psp
> in httpd.conf like in section 6.2 in the manual.
> After that i tested the time example from section 4.9
> and it worked successfully.
> Now i thought: 'wow how simple'
> and i expand it with a single print statement.
> <html>
> <%
> import time
> %>
> Hello world, the time is: <%=time.strftime("%Y-%m-%d, %H:%M:%S")%>
> <%
> print "Test"
> %>
> </html>
>
> But it doesn't work.
> 'Test' isn't displayed in the browser.
> Why?
> Thanks
> Alex
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python


From feuerschwanz76 at web.de  Fri Mar 18 11:22:47 2005
From: feuerschwanz76 at web.de (Alexander Nagel)
Date: Fri Mar 18 11:34:44 2005
Subject: [mod_python] Re: Problem with psphandler
In-Reply-To: <423AF748.4090708@encorp.com>
References: <d1csnk$vn7$1@sea.gmane.org> <423AF748.4090708@encorp.com>
Message-ID: <d1ev5j$jul$1@sea.gmane.org>

Hi,
psp.write doesn't work.
This is the error code:
Mod_python error: "PythonHandler mod_python.psp"

Traceback (most recent call last):

   File "/usr/lib/python2.3/site-packages/mod_python/apache.py", line 
299, in HandlerDispatch
     result = object(req)

   File "/usr/lib/python2.3/site-packages/mod_python/psp.py", line 297, 
in handler
     p.run()

   File "/usr/lib/python2.3/site-packages/mod_python/psp.py", line 208, 
in run
     exec code in global_scope

   File "/var/www/index.psp.de", line 47, in ?
     %>

AttributeError: PSPInterface instance has no attribute 'write'

But
<%
req.write ("Test")
%>
works fine.
Thanks to Robert G.
Greets
Alex

Craig Warren schrieb:
> Print will just print to stdout
> 
> try
> psp.write('test')
> 

From a.flow at tiscali.it  Fri Mar 18 16:21:03 2005
From: a.flow at tiscali.it (Andrea Fiore)
Date: Fri Mar 18 15:20:48 2005
Subject: [mod_python] Using mod_python on a commercial hosting provider
Message-ID: <423B463F.6060608@tiscali.it>

Hello,
I'm trying to use mod_python on a commercial hosting provider, that give 
me really few info about their setting. I now only that they have 
python2.2 in /usr/bin and that python is linked to apache via 
mod_python. Now, how can i execute the simple "hello word" script 
written in the manual?

from mod_python import apache

     def handler(req):

         req.content_type = "text/plain"
         req.send_http_header()
         req.write("Hello World!")

         return apache.OK

how can i set a python handler if i have not write access to httpd.conf?

Thank you in advance,

_Andrea Fiore
From azurit at pobox.sk  Fri Mar 18 16:00:26 2005
From: azurit at pobox.sk (azurIt)
Date: Fri Mar 18 15:53:49 2005
Subject: [mod_python] Using mod_python on a commercial hosting provider
Message-ID: <200503182100.j2IL0QZP028975@www7.pobox.sk>

hi,

make file '.htaccess' in directory where you python scripts are and 
write this into it:

AddHandler python-program .py .pyc
PythonHandler mod_python.publisher
PythonDebug On

it will set the handler for .py and .pyc files to the mod_python's 
publisher.py . if it won't work, you don't have a permission to do 
it, then you must ask the admin to do this for you.

azurIt

> Hello,
> I'm trying to use mod_python on a commercial hosting provider, 
that give 
> me really few info about their setting. I now only that they have 
> python2.2 in /usr/bin and that python is linked to apache via 
> mod_python. Now, how can i execute the simple "hello word" script 
> written in the manual?
> 
> from mod_python import apache
> 
>      def handler(req):
> 
>          req.content_type = "text/plain"
>          req.send_http_header()
>          req.write("Hello World!")
> 
>          return apache.OK
> 
> how can i set a python handler if i have not write access to 
httpd.conf?
> 
> Thank you in advance,
> 
> _Andrea Fiore
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
> 

____________________________________
Vsetko o SuperStar
http://superstar.atlas.sk


From list at joreybump.com  Fri Mar 18 16:13:56 2005
From: list at joreybump.com (Jorey Bump)
Date: Fri Mar 18 16:14:05 2005
Subject: [mod_python] Using mod_python on a commercial hosting provider
In-Reply-To: <200503182100.j2IL0QZP028975@www7.pobox.sk>
References: <200503182100.j2IL0QZP028975@www7.pobox.sk>
Message-ID: <423B4494.600@joreybump.com>

azurIt wrote:

> make file '.htaccess' in directory where you python scripts are and 
> write this into it:
> 
> AddHandler python-program .py .pyc
> PythonHandler mod_python.publisher
> PythonDebug On
> 
> it will set the handler for .py and .pyc files to the mod_python's 
> publisher.py . if it won't work, you don't have a permission to do 
> it, then you must ask the admin to do this for you.

On some hosts, httpd.conf is world readable, so look for it and see how 
the admin has already configured mod_python. Also look for AllowOverride 
statements to get an idea of what you can do with .htaccess files.

From JFeghhi at visa.com  Sat Mar 19 18:31:28 2005
From: JFeghhi at visa.com (Feghhi, Jalil)
Date: Sat Mar 19 18:31:57 2005
Subject: [mod_python] Unicode Question
Message-ID: <8C53AAFA2050EE40BDCDB9455DA7D63401E01D30@sw720ex020.visa.com>


I know this issue has been brought up many times and I have tried to
search and read as much as possible but still have not been able to
resolve my issue. I have a mysql database (not the latest but it
supports unicode). I am keeping some columns in utf8 format and only
save data that is in utf8. However, when I read the data back (I am
using mod_python and mysqldb module) I see characters like the following
on my web page:
 
%u0631
 
Now if I replace "%u" with "&#x" in my python code b/f sending them to
browser, everything displays fine!
 
Am I doing something wrong in mysql side, or, is this the job of the
python to do the conversion. 
 
I appreciate any help. 
 
-Jalil
 

From craig.warren at encorp.com  Sat Mar 19 20:25:39 2005
From: craig.warren at encorp.com (Craig Warren)
Date: Sat Mar 19 20:25:43 2005
Subject: [mod_python] Re: Problem with psphandler
In-Reply-To: <d1ev5j$jul$1@sea.gmane.org>
References: <d1csnk$vn7$1@sea.gmane.org> <423AF748.4090708@encorp.com>
	<d1ev5j$jul$1@sea.gmane.org>
Message-ID: <423CD113.8010507@encorp.com>

Sorry
req.write("test")

is what I meant to write.
NOT
psp.write

Craig

Alexander Nagel wrote:

> Hi,
> psp.write doesn't work.
> This is the error code:
> Mod_python error: "PythonHandler mod_python.psp"
>
> Traceback (most recent call last):
>
>   File "/usr/lib/python2.3/site-packages/mod_python/apache.py", line 
> 299, in HandlerDispatch
>     result = object(req)
>
>   File "/usr/lib/python2.3/site-packages/mod_python/psp.py", line 297, 
> in handler
>     p.run()
>
>   File "/usr/lib/python2.3/site-packages/mod_python/psp.py", line 208, 
> in run
>     exec code in global_scope
>
>   File "/var/www/index.psp.de", line 47, in ?
>     %>
>
> AttributeError: PSPInterface instance has no attribute 'write'
>
> But
> <%
> req.write ("Test")
> %>
> works fine.
> Thanks to Robert G.
> Greets
> Alex
>
> Craig Warren schrieb:
>
>> Print will just print to stdout
>>
>> try
>> psp.write('test')
>>
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python


From grahamd at dscpl.com.au  Sat Mar 19 20:31:54 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Sat Mar 19 20:32:09 2005
Subject: [mod_python] mod_python doesn't work
In-Reply-To: <004b01c52b50$de1a49d0$81a7e0db@unig>
References: <004b01c52b50$de1a49d0$81a7e0db@unig>
Message-ID: <6d0311ec6bd3d69588546c80d230887a@dscpl.com.au>


On 18/03/2005, at 11:24 AM, <cmd.exe@163.com> wrote:

> hi:
> ? mod_python doesn't work with apache together, i don't know why!

Read through the following article, comparing what it suggests to what
you are doing and taking note of recommendations it gives about looking
in Apache log files etc.

   http://svn.dscpl.com.au/vampire/trunk/articles/modpython-001.txt

This will be available as a proper HTML page when I launch my updated
web site next weekend.

If this doesn't help and you still can't work it out, then come back
to the mailing list, providing the more detailed information that the
article suggests you supply to make it easier for people to help you.

Graham


From grahamd at dscpl.com.au  Sat Mar 19 20:41:41 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Sat Mar 19 20:41:50 2005
Subject: [mod_python] Sneak peak at Vampire 1.5,
	including vampire::publisher support.
In-Reply-To: <20050315015335.GC4836@lisan>
References: <1110849573.32517@dscpl.user.openhosting.com>
	<20050315015335.GC4836@lisan>
Message-ID: <56bc036683614e841ec8c7554e7e2383@dscpl.com.au>


On 15/03/2005, at 12:53 PM, Jan Huelsbergen wrote:

> Hi again,
>
> first, thanks for the quick reply.
>
> Graham Dumpleton wrote:
>> FWIW, the vampire::publisher replacement I wrote for 
>> mod_python.publisher
>> doesn't suffer this problem. It wasn't intentional that I fixed it, 
>> but because
>> of how I completely turned around how a lot of the checks and things 
>> are
>> done, it just so happened to eliminate the bug.
>
> That sounds intriguing, but I must admit I was not able to find this
> vampire::publisher handler in your latest Vampire release (nor did I
> find it using google or the Mailinglist archives).
>
> Can you point me to where the fun is?

Vampire 1.5 will be released over the Easter weekend along with a 
complete
update of my web site.

You can get a sneak peek at the raw docutils text for the article 
giving an
overview of this new version of Vampire at:

   http://svn.dscpl.com.au/vampire/trunk/articles/vampire-001.txt

Smart people should be able to work out from that URL how they can view
all the source code as well and even check out a copy of the working
version using a subversion client if they have one. :-)

Be warned that I am in overload mode at the moment because of my real
job and other commitments. I tend to not read email for days at a time
when that happens. All the same, will try and answer any questions if
there are any.

Graham



From vegeta.z at gmail.com  Sat Mar 19 23:52:39 2005
From: vegeta.z at gmail.com (vegetax)
Date: Sun Mar 20 00:13:17 2005
Subject: [mod_python] some questions about using mod_python
Message-ID: <d1iver$7eq$1@sea.gmane.org>

hi, i just finished reading the docs and i have some obstacles to start
implementing a web system using mod_python.

First 2 observations in the docs:
-please correct the docs in the hello world example,it doesnt work!
req.content_type = '/text/html' is needed,i spended an hour trying to find
the problem in the hello world??

-Please remark that in order to send any kind of output headers,including
cookies and sessions,the code should be before any req.write().

My doubts:

- PythonPath directive doesnt work at all,when i set it at any config level
i get a NOT FOUND error,from apache when i try to access anything that uses
mod_python, the definition is : PythonPath "sys.path + ['/devel/classes']"

- Where do i set a database connection pool to load at server
initialization ,so that all request can access it? is the pythonImport
directive the best place? where do i set a clean up function for the pool
at server finalization ?

- Is it ok to configure apache to just use one process and several threads
like in windows? what other implications it has? besides losing some of the
stability and safety that apache provides, is just that too many things go
wrong in the dynamic applications when mixing using both process and
threads.

- I want to use a MVC approach,the publisher's methods are the controlers
that do the processing and send internal redirects to psps to show the
results,so i need to pass objects to the psps from the pub methods,i need
those objects to be in the request object of the handler and available to
the target psp.

this code doesnt work,it shows an error saying req object has no
attribute,data: 

def regHandler(req):
    data = [1,2,'a']
    req.data = data
    req.internal_redirect('/var/www/myapp/psp/showReg.psp') 
    return apache.OK

showReq.psp:

the data :
<%= req.prev.data %>


I also tried to load the data in a session object retrieved or created in
reqHandler,but same results,the session object in the psp always creates a
new session and the gives : Key error, session object has no key 'data'

Also, the post in site
(http://dotnot.org/blog/archives/2004/06/27/nasty-deadlock-in-modpython-when-using-sessions/)
,describing that some rare things happens to session locks,when internal
redirecting between python handlers,in my case the pspHandler and the
pythonHandler or publisher? how can i overcome those issues?

What exactly happens between internal redirects that affect mod_python
behavior,sessions,etc, when used like i want to use it? And is it fast to
internal redirect a lot? since all request phases are processed every time.

Thanks, in advance, sorry to have to many doubts =P

From grahamd at dscpl.com.au  Sun Mar 20 05:55:40 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Sun Mar 20 05:55:49 2005
Subject: [mod_python] some questions about using mod_python
In-Reply-To: <d1iver$7eq$1@sea.gmane.org>
References: <d1iver$7eq$1@sea.gmane.org>
Message-ID: <ac0979c5b01d09a8ec3b5f44a46e3b70@dscpl.com.au>

Another one of my long rambles. Making up for not reading email for
a few days at a time at the moment. :-)

On 20/03/2005, at 3:52 PM, vegetax wrote:

> hi, i just finished reading the docs and i have some obstacles to start
> implementing a web system using mod_python.
>
> First 2 observations in the docs:
> -please correct the docs in the hello world example,it doesnt work!
> req.content_type = '/text/html' is needed,i spended an hour trying to  
> find
> the problem in the hello world??

Are you talking about the example in:

   http://www.modpython.org/live/current/doc-html/inst-testing.html

The example will work without req.content_type being set, at least
mod_python will work correctly.

The problem is that if your Apache configuration does not set:

   DefaultType text/plain

and return that with a response if the handler doesn't, then your  
browser
will not necessarily know what do with a file with an extension of ".py"
and may ask you to save the response to a file instead of showing it in
the browser itself.

It is always thus a good idea to set content type regardless as a matter
of best practice, but the outcome if not set is an issue to do with the
Apache configuration and not mod_python.

BTW, for that part example, it should be "text/plain" for the content
type and not "text/html".

> -Please remark that in order to send any kind of output  
> headers,including
> cookies and sessions,the code should be before any req.write()

This one is fair enough. The only veiled reference on the request object
members page seems to be:

   set_content_length(len)
      Sets the value of req.clength and the "Content-Length" header to  
len.
      Note that after the headers have been sent out (which  happens just
      before the first byte of the body is written,  i.e. first call to
      req.write()), calling the method is meaningless.

I would suggest you log a report for an improvement to mod_python at:

   http://issues.apache.org/jira/browse/MODPYTHON

You should probably reference this email as it appears in the mailing
list archive for reference.

This is the only place where such requests will over time be noticed. If
only the mailing list they well be lost and forgotten.

> My doubts:
>
> - PythonPath directive doesnt work at all,when i set it at any config  
> level
> i get a NOT FOUND error,from apache when i try to access anything that  
> uses
> mod_python, the definition is : PythonPath "sys.path +  
> ['/devel/classes']"

Hmmmm, PythonPath does generally work okay from what I have seen. Only  
issue
I have with it is that if a high up within the directory hierarchy you  
set
it to:

   PythonPath: 'sys.path'

then there is no going back. That is, regardless of the fact that in a
subdirectory you might use SetHandler/PythonHandler to enable mod_python
use a second time, PythonPath will be inherited from the mod_python  
scope
higher up and no extension of the Python path will occur in the new
mod_python scope which is introduced. :-(

Anyway, you might like to be a bit more specific and give some working
examples which demonstrate the problem. Is this somehow tied up with you
redirections from publisher to PSP? I can see them potentially screwing
each other up if there requirements for setting the Python path are
different.

Are your PSP pages nested at a lower scope than the publisher handlers
that redirect to them? Maybe you are running up against a similar issue
to what I was having with nesting of different methods for using  
mod_python.

> - Where do i set a database connection pool to load at server
> initialization ,so that all request can access it? is the pythonImport
> directive the best place? where do i set a clean up function for the  
> pool
> at server finalization ?

Cleanup function registration for stuff that should be done at time of  
child
termination can only be done with req.server.register_cleanup(). There
probably should be an apache.register_cleanup() method which would be
available from a module imported using PythonImport. This would then be  
the
best way of doing it.

It seems that the best one could do now is import the module when  
required
but don't do anything at the time of import which would require a  
cleanup
function to be registered. Then, when the first handler calls in to the
actual module, require that the "req" object be passed into the pool,  
with
those resources which need to be cleaned up later being created then  
with a
cleanup function being registered through req.server.register_cleanup().

I have added a bug report suggesting that apache.register_cleanup() be
added to allow it to be used from module imported using PythonImport.

FWIW, in Vampire, when Vampire's module importing mechanism is used a
stripped down request object is available in the set of global variables
during import as __req__. Thus in Vampire one could actually register
a cleanup function during import by using:

   __req__.server.register_cleanup(....)

This would save each handler having to pass the req object into a pool  
and
means one wouldn't have to delay creation of resources which needed the
cleanup function to be registered.

> - Is it ok to configure apache to just use one process and several  
> threads
> like in windows? what other implications it has? besides losing some  
> of the
> stability and safety that apache provides, is just that too many  
> things go
> wrong in the dynamic applications when mixing using both process and
> threads.

No reason why you can't use "worker" MPM with one process and many  
threads
just like on Win32. You just have to deal with the same multithreading
issues as you do on Win32.

First thing to is to patch mod_python to fix the multithreading  
problems.
The patches can be found at:

   http://www.dscpl.com.au/projects/vampire/PATCHES

This address will change after easter to:

   http://www.dscpl.com.au/projects/vampire/patches.txt

In terms of other multithreading issues, there are a few problems you  
need
to be aware of and code for if you want a robust application. One of my
prior posts on this topic in relation to module importing is:

   http://www.modpython.org/pipermail/mod_python/2004-October/016605.html

You should go back and forth within that particular thread for other  
stuff
related to threading.

> - I want to use a MVC approach,the publisher's methods are the  
> controlers
> that do the processing and send internal redirects to psps to show the
> results,so i need to pass objects to the psps from the pub methods,i  
> need
> those objects to be in the request object of the handler and available  
> to
> the target psp.

Why do you need to redirect the request to PSP? Why couldn't you simply
write a common method of your own which triggered PSP page rendering
directly within your publisher method with the desired environment?

At its simplest, you could use:

     template = psp.PSP(req,filename=path,vars=settings)
     template.run()

Where "path" is the name of the PSP file and "settings" is a dictionary
populated with data that your controller has obtained from the model.
Using redirection seems to me to be drawing too much of an artificial
separation between your controller and view.

> this code doesnt work,it shows an error saying req object has no
> attribute,data:
>
> def regHandler(req):
>     data = [1,2,'a']
>     req.data = data
>     req.internal_redirect('/var/www/myapp/psp/showReg.psp')
>     return apache.OK
>
> showReq.psp:
>
> the data :
> <%= req.prev.data %>
>
> I also tried to load the data in a session object retrieved or created  
> in
> reqHandler,but same results,the session object in the psp always  
> creates a
> new session and the gives : Key error, session object has no key 'data'

The documentation does say:

   The httpd server handles internal redirection by creating a new   
request object
   and processing all request phases. Within an internal  redirect,  
req.prev will
   contain a reference to a request  object from which it was redirected.

However, this doesn't explicitly say that "req.prev" will be the same  
req object
as was used in the handler from which redirection occurred. All it says  
is that
it "will contain a reference to a request object from which it was  
redirected".

I read this as saying that "req.prev" will hold valid data pertaining  
to the
original request as passed in by Apache, but I don't see it  
guaranteeing that any
data you might cache in the original request object will be available.

But then, I back this up by looking at the source code to see that  
internal
redirection is handled by a call back into Apache.

   ap_internal_redirect(new_uri, self->request_rec);

Here "request_rec" is the original Apache request object and not the  
Python one
that wraps it, thus anything that you stash in the Python part of the  
object
cannot possibly be available to the handler to which redirection occurs  
as
the Apache code which does the redirection doesn't have access to it.

All that could be said is that the documentation could explicitly say  
that any
user data stashed in the req object is not available. That would clear  
things
up.

> Also, the post in site
> (http://dotnot.org/blog/archives/2004/06/27/nasty-deadlock-in- 
> modpython-when-using-sessions/)
> ,describing that some rare things happens to session locks,when  
> internal
> redirecting between python handlers,in my case the pspHandler and the
> pythonHandler or publisher? how can i overcome those issues?
>
> What exactly happens between internal redirects that affect mod_python
> behavior,sessions,etc, when used like i want to use it? And is it fast  
> to
> internal redirect a lot? since all request phases are processed every  
> time.

That one has to unlock sessions explicitly before an internal redirect  
has been
covered on the mailing list a number of times. The documentation could  
mention
it and there probably should be a FAQ entry for it.

It all comes about because an internal redirect effectively appears  
like a
nested function call from the original handler. Ie., after the  
redirection,
the original handler continues to execute. Since sessions use a non  
reentrant
lock, a second attempt to lock it from the same thread will cause a  
deadlock.

At this point I don't know enough about the internals of Apache runtime
library to know whether it is possible to have reentrant locks, but if  
it
did, it might be reasonable to have sessions use a reentrant lock  
instead and
this whole problem might be avoided.

Note however that if in your own handler code you used non reentrant  
locks
you would potentially end up with the same sort of problems and would
either have to unlock them before the internal redirect, or change to a
reentrant lock. Ie., threading.RLock instead of threading.Lock.

Thus, one could possibly improve mod_python by using a reentrant lock  
for
a session object if no reasonable reason could be found not to. The only
danger in doing that is that the same code will no longer work on older  
versions
of mod_python. It might be sensible to wait until a point where a major
version of mod_python was brought out which wasn't backwards compatible
in other ways as well.

Hope this is all interesting.

BTW, have you considered other page templating solutions besides PSP?  
In terms
of best separation between model, view and controller, or at least  
between the
HTML that represents a page and the code that populates it, I would  
recommend
using HTMLTemplate.

   http://freespace.virgin.net/hamish.sanderson/htmltemplate.html

Why I prefer it over PSP is that in PSP you are effectively still  
embedding
Python code in the template itself and to render the template you are  
actually
executing it, with there being call outs from the template to collect  
data.

In HTMLTemplate, the template object is distinct, with your controller  
code
making calls into the template object when desired to set fields within  
it.
Ie., DOM like but not having the overhead of a DOM because only  
fillable parts
of the template are indexed.

What this means is that with HTMLTemplate you aren't forced to prepare  
all your
data up front before filling in the template, instead you can fill it  
in bit
by bit.

I can supply references to example of using HTMLTemplate from Vampire  
later if
you are interested.

Graham

From grahamd at dscpl.com.au  Sun Mar 20 16:30:54 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Sun Mar 20 16:31:01 2005
Subject: [mod_python] some questions about using mod_python
In-Reply-To: <ac0979c5b01d09a8ec3b5f44a46e3b70@dscpl.com.au>
References: <d1iver$7eq$1@sea.gmane.org>
	<ac0979c5b01d09a8ec3b5f44a46e3b70@dscpl.com.au>
Message-ID: <9d6cbb089a43ddb4d721ada28fd53cc5@dscpl.com.au>


On 20/03/2005, at 9:55 PM, Graham Dumpleton wrote:

>> - I want to use a MVC approach,the publisher's methods are the 
>> controlers
>> that do the processing and send internal redirects to psps to show the
>> results,so i need to pass objects to the psps from the pub methods,i 
>> need
>> those objects to be in the request object of the handler and 
>> available to
>> the target psp.
>
> Why do you need to redirect the request to PSP? Why couldn't you simply
> write a common method of your own which triggered PSP page rendering
> directly within your publisher method with the desired environment?
>
> At its simplest, you could use:
>
>     template = psp.PSP(req,filename=path,vars=settings)
>     template.run()
>
> Where "path" is the name of the PSP file and "settings" is a dictionary
> populated with data that your controller has obtained from the model.
> Using redirection seems to me to be drawing too much of an artificial
> separation between your controller and view.

Another issue that you should be mindful of when using internal 
redirects
is that POST form parameters do not survive an internal redirect. Your
controller code which does the internal redirect would need to process
any POST form parameters and work out what to do with them. There would
be no means of communicating any result of this processing through to 
the
PSP page though. The only thing which will get transfered through to the
PSP pages is the original GET form parameters.

If you follow the recipe above and use psp.PSP() direct, you still hit a
similar problem in that psp.PSP() ignores any req.form data which is 
left
there by publisher and instead tries to process form parameters again.
Thus, any POST form parameters are still not available. I have posted
that this could possibly be improved by having psp.PSP() look for the
req.form from a prior parsing of the form parameters.

   http://issues.apache.org/jira/browse/MODPYTHON-38

When using psp.PSP() direct, you have a few options for making use of 
forms
when triggered from inside publisher. The first is that the controller
code in the publisher function translates them all into "vars" settings
supplied to psp.PSP(). Alternatively, a PSP page rather than accessing
the form through the "form" variable, instead uses "req.form" which will
access directly the FieldStorage instance left by the original publisher
function.

The best workaround though would probably be to use:

??  ?settings["form"] = req.form
  ????template = psp.PSP(req,filename=path,vars=settings)
  ????template.run()

The caller setting of "form" here takes precedence over that put into 
the
variable set by PSP. The PSP pages can then still use "form". The only
downside of this is that it doesn't eliminate the redundant processing
of form parameters that occurs because "form" is referenced in the PSP 
page.

Graham






From vegeta.z at gmail.com  Sun Mar 20 19:01:27 2005
From: vegeta.z at gmail.com (vegetax)
Date: Sun Mar 20 19:02:46 2005
Subject: [mod_python] Re: some questions about using mod_python
References: <d1iver$7eq$1@sea.gmane.org>
	<ac0979c5b01d09a8ec3b5f44a46e3b70@dscpl.com.au>
Message-ID: <d1l2oi$q9q$1@sea.gmane.org>

Graham Dumpleton wrote:

> Another one of my long rambles. Making up for not reading email for
> a few days at a time at the moment. :-)
> 
> On 20/03/2005, at 3:52 PM, vegetax wrote:
> 
>> hi, i just finished reading the docs and i have some obstacles to start
>> implementing a web system using mod_python.
>>
>> First 2 observations in the docs:
>> -please correct the docs in the hello world example,it doesnt work!
>> req.content_type = '/text/html' is needed,i spended an hour trying to
>> find
>> the problem in the hello world??
> 
> Are you talking about the example in:
> 
>    http://www.modpython.org/live/current/doc-html/inst-testing.html
> 
> The example will work without req.content_type being set, at least
> mod_python will work correctly.
> 
> The problem is that if your Apache configuration does not set:
> 
>    DefaultType text/plain
> 
> and return that with a response if the handler doesn't, then your
> browser
> will not necessarily know what do with a file with an extension of ".py"
> and may ask you to save the response to a file instead of showing it in
> the browser itself.
> 
> It is always thus a good idea to set content type regardless as a matter
> of best practice, but the outcome if not set is an issue to do with the
> Apache configuration and not mod_python.
> 
> BTW, for that part example, it should be "text/plain" for the content
> type and not "text/html".
> 
>> -Please remark that in order to send any kind of output
>> headers,including
>> cookies and sessions,the code should be before any req.write()
> 
> This one is fair enough. The only veiled reference on the request object
> members page seems to be:
> 
>    set_content_length(len)
>       Sets the value of req.clength and the "Content-Length" header to
> len.
>       Note that after the headers have been sent out (which  happens just
>       before the first byte of the body is written,  i.e. first call to
>       req.write()), calling the method is meaningless.
> 
> I would suggest you log a report for an improvement to mod_python at:
> 
>    http://issues.apache.org/jira/browse/MODPYTHON
> 
> You should probably reference this email as it appears in the mailing
> list archive for reference.
> 
> This is the only place where such requests will over time be noticed. If
> only the mailing list they well be lost and forgotten.

Done, added a documentation improvement to jira.

>> My doubts:
>>
>> - PythonPath directive doesnt work at all,when i set it at any config
>> level
>> i get a NOT FOUND error,from apache when i try to access anything that
>> uses
>> mod_python, the definition is : PythonPath "sys.path +
>> ['/devel/classes']"
> 
> Hmmmm, PythonPath does generally work okay from what I have seen. Only
> issue
> I have with it is that if a high up within the directory hierarchy you
> set
> it to:
> 
>    PythonPath: 'sys.path'
> 
> then there is no going back. That is, regardless of the fact that in a
> subdirectory you might use SetHandler/PythonHandler to enable mod_python
> use a second time, PythonPath will be inherited from the mod_python
> scope
> higher up and no extension of the Python path will occur in the new
> mod_python scope which is introduced. :-(
> 
> Anyway, you might like to be a bit more specific and give some working
> examples which demonstrate the problem. Is this somehow tied up with you
> redirections from publisher to PSP? I can see them potentially screwing
> each other up if there requirements for setting the Python path are
> different.
> 
> Are your PSP pages nested at a lower scope than the publisher handlers
> that redirect to them? Maybe you are running up against a similar issue
> to what I was having with nesting of different methods for using
> mod_python.

None of those cases, is just that "any" handler wont work when i set
PythonPath to sys.path or sys.path + ['/devel/classes']"
But i will try to dig more on it, to find the issue.

>> - Where do i set a database connection pool to load at server
>> initialization ,so that all request can access it? is the pythonImport
>> directive the best place? where do i set a clean up function for the
>> pool
>> at server finalization ?
> 
> Cleanup function registration for stuff that should be done at time of
> child
> termination can only be done with req.server.register_cleanup(). There
> probably should be an apache.register_cleanup() method which would be
> available from a module imported using PythonImport. This would then be
> the
> best way of doing it.
> 
> It seems that the best one could do now is import the module when
> required
> but don't do anything at the time of import which would require a
> cleanup
> function to be registered. Then, when the first handler calls in to the
> actual module, require that the "req" object be passed into the pool,
> with
> those resources which need to be cleaned up later being created then
> with a
> cleanup function being registered through req.server.register_cleanup().
> 
> I have added a bug report suggesting that apache.register_cleanup() be
> added to allow it to be used from module imported using PythonImport.

But is to problematic to clean resources at request level, i think in the
midtime i will be cleaning up resources like connections with an external
script which i run after apache exits.

> FWIW, in Vampire, when Vampire's module importing mechanism is used a
> stripped down request object is available in the set of global variables
> during import as __req__. Thus in Vampire one could actually register
> a cleanup function during import by using:
> 
>    __req__.server.register_cleanup(....)
> 
> This would save each handler having to pass the req object into a pool
> and
> means one wouldn't have to delay creation of resources which needed the
> cleanup function to be registered.

Looks like a good solution when the clean up is needed per request,and is
also posible that the pool component was made by someone else,and cant take
req as parameter.

>> - Is it ok to configure apache to just use one process and several
>> threads
>> like in windows? what other implications it has? besides losing some
>> of the
>> stability and safety that apache provides, is just that too many
>> things go
>> wrong in the dynamic applications when mixing using both process and
>> threads.
> 
> No reason why you can't use "worker" MPM with one process and many
> threads
> just like on Win32. You just have to deal with the same multithreading
> issues as you do on Win32.
> 
> First thing to is to patch mod_python to fix the multithreading
> problems.
> The patches can be found at:
> 
>    http://www.dscpl.com.au/projects/vampire/PATCHES
> 
> This address will change after easter to:
> 
>    http://www.dscpl.com.au/projects/vampire/patches.txt
> 
> In terms of other multithreading issues, there are a few problems you
> need
> to be aware of and code for if you want a robust application. One of my
> prior posts on this topic in relation to module importing is:
> 
>    http://www.modpython.org/pipermail/mod_python/2004-October/016605.html
> 
> You should go back and forth within that particular thread for other
> stuff
> related to threading.

Thanks i will analyze those issues.

>> - I want to use a MVC approach,the publisher's methods are the
>> controlers
>> that do the processing and send internal redirects to psps to show the
>> results,so i need to pass objects to the psps from the pub methods,i
>> need
>> those objects to be in the request object of the handler and available
>> to
>> the target psp.
> 
> Why do you need to redirect the request to PSP? Why couldn't you simply
> write a common method of your own which triggered PSP page rendering
> directly within your publisher method with the desired environment?
> 
> At its simplest, you could use:
> 
>      template = psp.PSP(req,filename=path,vars=settings)
>      template.run()
> 
> Where "path" is the name of the PSP file and "settings" is a dictionary
> populated with data that your controller has obtained from the model.
> Using redirection seems to me to be drawing too much of an artificial
> separation between your controller and view.

Yes, i am trying to make a well defined separation.

>> this code doesnt work,it shows an error saying req object has no
>> attribute,data:
>>
>> def regHandler(req):
>>     data = [1,2,'a']
>>     req.data = data
>>     req.internal_redirect('/var/www/myapp/psp/showReg.psp')
>>     return apache.OK
>>
>> showReq.psp:
>>
>> the data :
>> <%= req.prev.data %>
>>
>> I also tried to load the data in a session object retrieved or created
>> in
>> reqHandler,but same results,the session object in the psp always
>> creates a
>> new session and the gives : Key error, session object has no key 'data'
> 
> The documentation does say:
> 
>    The httpd server handles internal redirection by creating a new
> request object
>    and processing all request phases. Within an internal  redirect,
> req.prev will
>    contain a reference to a request  object from which it was redirected.
> 
> However, this doesn't explicitly say that "req.prev" will be the same
> req object
> as was used in the handler from which redirection occurred. All it says
> is that
> it "will contain a reference to a request object from which it was
> redirected".
> 
> I read this as saying that "req.prev" will hold valid data pertaining
> to the
> original request as passed in by Apache, but I don't see it
> guaranteeing that any
> data you might cache in the original request object will be available.
> 
> But then, I back this up by looking at the source code to see that
> internal
> redirection is handled by a call back into Apache.
> 
>    ap_internal_redirect(new_uri, self->request_rec);
> 
> Here "request_rec" is the original Apache request object and not the
> Python one
> that wraps it, thus anything that you stash in the Python part of the
> object
> cannot possibly be available to the handler to which redirection occurs
> as
> the Apache code which does the redirection doesn't have access to it.
> 
> All that could be said is that the documentation could explicitly say
> that any
> user data stashed in the req object is not available. That would clear
> things
> up.

Perhaps another documentation issue to jira to cover all these internal
redirect complications.

>> Also, the post in site
>> (http://dotnot.org/blog/archives/2004/06/27/nasty-deadlock-in-
>> modpython-when-using-sessions/)
>> ,describing that some rare things happens to session locks,when
>> internal
>> redirecting between python handlers,in my case the pspHandler and the
>> pythonHandler or publisher? how can i overcome those issues?
>>
>> What exactly happens between internal redirects that affect mod_python
>> behavior,sessions,etc, when used like i want to use it? And is it fast
>> to
>> internal redirect a lot? since all request phases are processed every
>> time.
> 
> That one has to unlock sessions explicitly before an internal redirect
> has been
> covered on the mailing list a number of times. The documentation could
> mention
> it and there probably should be a FAQ entry for it.
> 
> It all comes about because an internal redirect effectively appears
> like a
> nested function call from the original handler. Ie., after the
> redirection,
> the original handler continues to execute. Since sessions use a non
> reentrant
> lock, a second attempt to lock it from the same thread will cause a
> deadlock.
> 
> At this point I don't know enough about the internals of Apache runtime
> library to know whether it is possible to have reentrant locks, but if
> it
> did, it might be reasonable to have sessions use a reentrant lock
> instead and
> this whole problem might be avoided.
> 
> Note however that if in your own handler code you used non reentrant
> locks
> you would potentially end up with the same sort of problems and would
> either have to unlock them before the internal redirect, or change to a
> reentrant lock. Ie., threading.RLock instead of threading.Lock.
> 
> Thus, one could possibly improve mod_python by using a reentrant lock
> for
> a session object if no reasonable reason could be found not to. The only
> danger in doing that is that the same code will no longer work on older
> versions
> of mod_python. It might be sensible to wait until a point where a major
> version of mod_python was brought out which wasn't backwards compatible
> in other ways as well.
> 
> Hope this is all interesting.

Yes, i think that these handler chaining using internal redirects may be
needed by more complex handlers, and a reentrant lock is the only solution
that comes to mind, also that older code would be really easy to fix.

> BTW, have you considered other page templating solutions besides PSP?
> In terms
> of best separation between model, view and controller, or at least
> between the
> HTML that represents a page and the code that populates it, I would
> recommend
> using HTMLTemplate.
> 
>    http://freespace.virgin.net/hamish.sanderson/htmltemplate.html
> 
> Why I prefer it over PSP is that in PSP you are effectively still
> embedding
> Python code in the template itself and to render the template you are
> actually
> executing it, with there being call outs from the template to collect
> data.
> In HTMLTemplate, the template object is distinct, with your controller
> code
> making calls into the template object when desired to set fields within
> it.
> Ie., DOM like but not having the overhead of a DOM because only
> fillable parts
> of the template are indexed.
> 
> What this means is that with HTMLTemplate you aren't forced to prepare
> all your
> data up front before filling in the template, instead you can fill it
> in bit
> by bit.
> 
> I can supply references to example of using HTMLTemplate from Vampire
> later if
> you are interested.
> Graham

Thanks for the advice graham,but i dont share the philosophy kind of those
templates engines, first and last it uses its own tag language, i HATE
that. I like psp because it lets you embed python code, so that i can
generate complex dynamic views,but the code inside the psp is only for
content displaying, 100% of the form processing is done by the controler
calling domain object's methods! in extremely exceptional situations the
psp code will have a litle processing or data gathering, but those are only
exceptions, the key here is that the team respect the rules.

I work with web designers,you simply cant let them touch the dynamic
parts,those parts tend to be complex,they should work in the static parts
and coordinate with the programmer in charge of the dynamic view
generation,and then plug dynamic and static parts together, in order to
coordinate they MUST have some programming knowledge ,anyway i use
javascript a lot and i dont take a person who doesnt know javascript as a
web designer.Thats my point of view.

What i am trying to acomplish are two things :

First : make a small ordering system that has all the peculiarities of a
data oriented application:
1 common sql queries like insert,delete.. ,findbyName,findbyNameEmail,etc
2 common ORM(Object relational mappings) issues like the tree kind of
relationships,inheritance.
3 extended data gathering,processing components that are business
specific,and therefore create on a case by case basis.

Second : make a code generator that takes an sql script with some metadata
required by the generator.
This will generate 1 and 2, and provide a framework to build 3,the domain
especific rules.
The generator should be flexible enough to stay out of your way to define
the business specific rules,queries,processing, i will use an approach very
similar to apache extensibility provided by handlers.In case of requirement
change or system extension the generator should only regenerate the parts
it generated previously and not delete user written code.

As you can see it has very complex requirements, the sql and domain model
generation is somewhat ready for test, now i need to test the interface
design and generation. The interface code should be very clean and modular
so that the generator can do its work, and provide a clean extension hook
for programmer defined interfaces.

So psp seemed like a good choice, because it provides the power of python to
generate complex interfaces,defined by the code generator or by the
user,but as it just displays things, no processing logic.
But i have my doubts about the extension system that psp provides,the
"include" directive doesnt seem enough for my complex requirements,so i was
thinking about using my own interface code generation libraries,that can
use object oriented goodies like polimorphism ,inheritance to provide the
required flexibility and extensibility.
But i am also considering using internal redirects to servlets or something
like that,servlets use the full object oriented python power to generate
dynamic interfaces, but also have my doubts about it.




From grahamd at dscpl.com.au  Sun Mar 20 19:39:54 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Sun Mar 20 19:39:58 2005
Subject: [mod_python] Re: some questions about using mod_python
Message-ID: <1111365594.18885@dscpl.user.openhosting.com>

vegetax wrote ..
> Graham Dumpleton wrote:
> 
> >> - Where do i set a database connection pool to load at server
> >> initialization ,so that all request can access it? is the pythonImport
> >> directive the best place? where do i set a clean up function for the
> >> pool
> >> at server finalization ?
> > 
> > Cleanup function registration for stuff that should be done at time of
> > child
> > termination can only be done with req.server.register_cleanup(). There
> > probably should be an apache.register_cleanup() method which would be
> > available from a module imported using PythonImport. This would then
> be
> > the
> > best way of doing it.
> > 
> > It seems that the best one could do now is import the module when
> > required
> > but don't do anything at the time of import which would require a
> > cleanup
> > function to be registered. Then, when the first handler calls in to the
> > actual module, require that the "req" object be passed into the pool,
> > with
> > those resources which need to be cleaned up later being created then
> > with a
> > cleanup function being registered through req.server.register_cleanup().
> > 
> > I have added a bug report suggesting that apache.register_cleanup() be
> > added to allow it to be used from module imported using PythonImport.
> 
> But is to problematic to clean resources at request level, i think in the
> midtime i will be cleaning up resources like connections with an external
> script which i run after apache exits.

I perhaps didn't explain it properly or I don't understand what you are
saying.

>From a request object there are two ways of registering a cleanup
function. The first is:

  req.register_cleanup()

The register function in this case will be called when the handler for
that specific request is finished.

The other which I referenced was:

  req.server.register_cleanup()

This registers a function which will only be called when the Apache
process itself terminates. Ie., when one does apachectl stop or
restart.

Thus, wasn't talking about cleaning up resources at request level.
The unfortunate bit was that since apache.register_cleanup() doesn't
exist, one has to defer registration of cleanup function for process
termination until one has access to req.server, which is at point of
first request that needs pool.

> > FWIW, in Vampire, when Vampire's module importing mechanism is used a
> > stripped down request object is available in the set of global variables
> > during import as __req__. Thus in Vampire one could actually register
> > a cleanup function during import by using:
> > 
> >    __req__.server.register_cleanup(....)
> > 
> > This would save each handler having to pass the req object into a pool
> > and
> > means one wouldn't have to delay creation of resources which needed the
> > cleanup function to be registered.
> 
> Looks like a good solution when the clean up is needed per request,and
> is
> also posible that the pool component was made by someone else,and cant
> take
> req as parameter.

Again, not talking per request here as am registering cleanup handler
via the server object and not the actual request object.

> > BTW, have you considered other page templating solutions besides PSP?
> > In terms
> > of best separation between model, view and controller, or at least
> > between the
> > HTML that represents a page and the code that populates it, I would
> > recommend
> > using HTMLTemplate.
> > 
> >    http://freespace.virgin.net/hamish.sanderson/htmltemplate.html
> > 
> > Why I prefer it over PSP is that in PSP you are effectively still
> > embedding
> > Python code in the template itself and to render the template you are
> > actually
> > executing it, with there being call outs from the template to collect
> > data.
> > In HTMLTemplate, the template object is distinct, with your controller
> > code
> > making calls into the template object when desired to set fields within
> > it.
> > Ie., DOM like but not having the overhead of a DOM because only
> > fillable parts
> > of the template are indexed.
> > 
> > What this means is that with HTMLTemplate you aren't forced to prepare
> > all your
> > data up front before filling in the template, instead you can fill it
> > in bit
> > by bit.
> > 
> > I can supply references to example of using HTMLTemplate from Vampire
> > later if
> > you are interested.
> > Graham
> 
> Thanks for the advice graham,but i dont share the philosophy kind of those
> templates engines, first and last it uses its own tag language, i HATE
> that.

Huh. PSP also defines its own language within HTML so I don't really
see the difference. I personally find the PSP syntax more confusing,
more complicated and more error prone especially if embedding actual
Python code. Please don't confuse HTMLTemplate with systems like
TAL and Metal. It is different and much simpler, with the manner in
which pages are constructed and then rendered being different as well.

> I like psp because it lets you embed python code, so that i can
> generate complex dynamic views,but the code inside the psp is only for
> content displaying, 100% of the form processing is done by the controler
> calling domain object's methods! in extremely exceptional situations the
> psp code will have a litle processing or data gathering, but those are
> only
> exceptions, the key here is that the team respect the rules.
> 
> I work with web designers,you simply cant let them touch the dynamic
> parts,those parts tend to be complex,they should work in the static parts
> and coordinate with the programmer in charge of the dynamic view
> generation,and then plug dynamic and static parts together, in order to
> coordinate they MUST have some programming knowledge ,anyway i use
> javascript a lot and i dont take a person who doesnt know javascript as
> a
> web designer.Thats my point of view.

When using HTMLTemplate the web designers don't need to touch
any Python code at all and thus don't go anywhere near the controller
aspects of the application. Because HTMLTemplate is standard XHTML
the web designer can even use high level web design tools. All they
need to do is add the appropriate namespace designated attributes
in the XHTML as per Python coders directions as to what data will be
filled in. The web designer can even put in dummy data in the template
as place holders so the pages look correct for some set of data when
they are designing it, with the dummy content being replaced by the
controller code when it runs.

Anyway, there is probably no point continuing this particular discussion.
As I always find it is always very hard to get someone else to see what
you can see, especially when one is using a different framework to
bring all the bits together. :-(

Graham
From vegeta.z at gmail.com  Sun Mar 20 20:02:10 2005
From: vegeta.z at gmail.com (vegetax)
Date: Sun Mar 20 20:02:24 2005
Subject: [mod_python] Re: Re: some questions about using mod_python
References: <1111365594.18885@dscpl.user.openhosting.com>
Message-ID: <d1l6a9$1ne$1@sea.gmane.org>

Graham Dumpleton wrote:

> vegetax wrote ..
>> Graham Dumpleton wrote:
>> 
>> >> - Where do i set a database connection pool to load at server
>> >> initialization ,so that all request can access it? is the pythonImport
>> >> directive the best place? where do i set a clean up function for the
>> >> pool
>> >> at server finalization ?
>> > 
>> > Cleanup function registration for stuff that should be done at time of
>> > child
>> > termination can only be done with req.server.register_cleanup(). There
>> > probably should be an apache.register_cleanup() method which would be
>> > available from a module imported using PythonImport. This would then
>> be
>> > the
>> > best way of doing it.
>> > 
>> > It seems that the best one could do now is import the module when
>> > required
>> > but don't do anything at the time of import which would require a
>> > cleanup
>> > function to be registered. Then, when the first handler calls in to the
>> > actual module, require that the "req" object be passed into the pool,
>> > with
>> > those resources which need to be cleaned up later being created then
>> > with a
>> > cleanup function being registered through
>> > req.server.register_cleanup().
>> > 
>> > I have added a bug report suggesting that apache.register_cleanup() be
>> > added to allow it to be used from module imported using PythonImport.
>> 
>> But is to problematic to clean resources at request level, i think in the
>> midtime i will be cleaning up resources like connections with an external
>> script which i run after apache exits.
> 
> I perhaps didn't explain it properly or I don't understand what you are
> saying.
> 
>>From a request object there are two ways of registering a cleanup
> function. The first is:
> 
>   req.register_cleanup()
> 
> The register function in this case will be called when the handler for
> that specific request is finished.
> 
> The other which I referenced was:
> 
>   req.server.register_cleanup()
> 
> This registers a function which will only be called when the Apache
> process itself terminates. Ie., when one does apachectl stop or
> restart.
> 
> Thus, wasn't talking about cleaning up resources at request level.
> The unfortunate bit was that since apache.register_cleanup() doesn't
> exist, one has to defer registration of cleanup function for process
> termination until one has access to req.server, which is at point of
> first request that needs pool.
> 
>> > FWIW, in Vampire, when Vampire's module importing mechanism is used a
>> > stripped down request object is available in the set of global
>> > variables during import as __req__. Thus in Vampire one could actually
>> > register a cleanup function during import by using:
>> > 
>> >    __req__.server.register_cleanup(....)
>> > 
>> > This would save each handler having to pass the req object into a pool
>> > and
>> > means one wouldn't have to delay creation of resources which needed the
>> > cleanup function to be registered.
>> 
>> Looks like a good solution when the clean up is needed per request,and
>> is
>> also posible that the pool component was made by someone else,and cant
>> take
>> req as parameter.
> 
> Again, not talking per request here as am registering cleanup handler
> via the server object and not the actual request object.

Sorry about the missunderstanding,i see the irony of the
req.server.register_cleanup, maybe adding a PythonCleanUp directive ?
 
>> > BTW, have you considered other page templating solutions besides PSP?
>> > In terms
>> > of best separation between model, view and controller, or at least
>> > between the
>> > HTML that represents a page and the code that populates it, I would
>> > recommend
>> > using HTMLTemplate.
>> > 
>> >    http://freespace.virgin.net/hamish.sanderson/htmltemplate.html
>> > 
>> > Why I prefer it over PSP is that in PSP you are effectively still
>> > embedding
>> > Python code in the template itself and to render the template you are
>> > actually
>> > executing it, with there being call outs from the template to collect
>> > data.
>> > In HTMLTemplate, the template object is distinct, with your controller
>> > code
>> > making calls into the template object when desired to set fields within
>> > it.
>> > Ie., DOM like but not having the overhead of a DOM because only
>> > fillable parts
>> > of the template are indexed.
>> > 
>> > What this means is that with HTMLTemplate you aren't forced to prepare
>> > all your
>> > data up front before filling in the template, instead you can fill it
>> > in bit
>> > by bit.
>> > 
>> > I can supply references to example of using HTMLTemplate from Vampire
>> > later if
>> > you are interested.
>> > Graham
>> 
>> Thanks for the advice graham,but i dont share the philosophy kind of
>> those templates engines, first and last it uses its own tag language, i
>> HATE that.
> 
> Huh. PSP also defines its own language within HTML so I don't really
> see the difference. I personally find the PSP syntax more confusing,
> more complicated and more error prone especially if embedding actual
> Python code. Please don't confuse HTMLTemplate with systems like
> TAL and Metal. It is different and much simpler, with the manner in
> which pages are constructed and then rendered being different as well.
> 
>> I like psp because it lets you embed python code, so that i can
>> generate complex dynamic views,but the code inside the psp is only for
>> content displaying, 100% of the form processing is done by the controler
>> calling domain object's methods! in extremely exceptional situations the
>> psp code will have a litle processing or data gathering, but those are
>> only
>> exceptions, the key here is that the team respect the rules.
>> 
>> I work with web designers,you simply cant let them touch the dynamic
>> parts,those parts tend to be complex,they should work in the static parts
>> and coordinate with the programmer in charge of the dynamic view
>> generation,and then plug dynamic and static parts together, in order to
>> coordinate they MUST have some programming knowledge ,anyway i use
>> javascript a lot and i dont take a person who doesnt know javascript as
>> a
>> web designer.Thats my point of view.
> 
> When using HTMLTemplate the web designers don't need to touch
> any Python code at all and thus don't go anywhere near the controller
> aspects of the application. Because HTMLTemplate is standard XHTML
> the web designer can even use high level web design tools. All they
> need to do is add the appropriate namespace designated attributes
> in the XHTML as per Python coders directions as to what data will be
> filled in. The web designer can even put in dummy data in the template
> as place holders so the pages look correct for some set of data when
> they are designing it, with the dummy content being replaced by the
> controller code when it runs.


> Anyway, there is probably no point continuing this particular discussion.

I also agree with you =) in that ,is just that we have different
methodologies and/or requirements,which need different tools to work well.


From crosseyedpenguin at cox.net  Mon Mar 21 10:09:33 2005
From: crosseyedpenguin at cox.net (Roger)
Date: Mon Mar 21 10:09:43 2005
Subject: [mod_python] File Progress Upload Indicator
Message-ID: <423EE3AD.2040100@cox.net>

Does anyone have any links to a file upload progress indicator similar 
to megaupload but written in Python?

If not, does anyone have an idea as to how to find the size of the file 
being uploaded and the bytes transferred so far?

Roger

From dpopowich at comcast.net  Mon Mar 21 20:59:47 2005
From: dpopowich at comcast.net (Daniel Popowich)
Date: Mon Mar 21 21:00:22 2005
Subject: [mod_python] Error using sessions
In-Reply-To: <680bcd95050316135458c53944@mail.gmail.com>
References: <680bcd95050316135458c53944@mail.gmail.com>
Message-ID: <16959.31763.559885.338427@h00a0cc25a952.ne.client2.attbi.com>


berry groenendijk writes:
> When I set 'use_session = True' in my code I get the following error:

Have you figured this out yet?  Is it possible you're trying to store
an unpickle-able object in your session?

> -- begin error --
> Mod_python error: "PythonHandler _servlet"
> 
> Traceback (most recent call last):
> 
>   File "/usr/lib64/python2.3/site-packages/mod_python/apache.py", line
> 299, in HandlerDispatch
>     result = object(req)
> 
>   File "./_servlet.py", line 1472, in handler
>     servlet._finally()
> 
>   File "./_servlet.py", line 688, in _finally
>     self.__cleanup_session()
> 
>   File "./_servlet.py", line 386, in __cleanup_session
>     self.session.save()
> 
>   File "/usr/lib64/python2.3/site-packages/mod_python/Session.py",
> line 204, in save
>     self.do_save(dict)
> 
>   File "/usr/lib64/python2.3/site-packages/mod_python/Session.py",
> line 327, in do_save
>     dbm = self._get_dbm()
> 
>   File "/usr/lib64/python2.3/site-packages/mod_python/Session.py",
> line 302, in _get_dbm
>     result = self._dbmtype.open(self._dbmfile, 'c')
> 
>   File "/usr/src/build/475202-x86_64/install/usr/lib64/python2.3/anydbm.py",
> line 83, in open
>     return mod.open(file, flag, mode)
> 
>   File "/usr/src/build/475202-x86_64/install/usr/lib64/python2.3/dbhash.py",
> line 16, in open
>     return bsddb.hashopen(file, flag, mode)
> 
>   File "/usr/src/build/475202-x86_64/install/usr/lib64/python2.3/bsddb/__init__.py",
> line 192, in hashopen
> 
> DBInvalidArgError: (22, 'Invalid argument')
> -- end error --
> 
> I am using the Servlet classes from Daniel Popowich:
> http://home.comcast.net/~d.popowich/mpservlets/
> 
> In standalone programs anydbm and dbhash are working perfectly. What
> is the 'invalid argument'?
> 
> -- 
> Berry Groenendijk
> http://www.bersie.de
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python

From dpopowich at comcast.net  Mon Mar 21 21:01:25 2005
From: dpopowich at comcast.net (Daniel Popowich)
Date: Mon Mar 21 21:02:00 2005
Subject: [mod_python] Re: some questions about using mod_python
In-Reply-To: <d1l2oi$q9q$1@sea.gmane.org>
References: <d1iver$7eq$1@sea.gmane.org>
	<ac0979c5b01d09a8ec3b5f44a46e3b70@dscpl.com.au>
	<d1l2oi$q9q$1@sea.gmane.org>
Message-ID: <16959.31861.969160.875948@h00a0cc25a952.ne.client2.attbi.com>


> But i am also considering using internal redirects to servlets or
> something like that,servlets use the full object oriented python
> power to generate dynamic interfaces, but also have my doubts about
> it.

I'm (naturally) curious what your doubts are...

Daniel Popowich
-----------------------------------------------
http://home.comcast.net/~d.popowich/mpservlets/

From dave at davebritton.com  Tue Mar 22 08:05:49 2005
From: dave at davebritton.com (Dave Britton)
Date: Tue Mar 22 08:05:52 2005
Subject: [mod_python] apache2 won't load mod_python
Message-ID: <04e901c52edf$de95ef80$080aa8c0@DAVE>

I have built apache 2.053 and mod_python 3.1.4 and apache serves pages ok, 
and python will import mod_python, so both exist in the right places, but I 
get this error message, on attempting to access the simple mptest.py 
example:
========
[Tue Mar 22 13:38:42 2005] [notice] SIGHUP received.  Attempting to restart
[Tue Mar 22 13:38:42 2005] [notice] mod_python: Creating 25 session mutexes 
based on 25 max processes and 0 max threads.
[Tue Mar 22 13:38:42 2005] [notice] Apache/2.0.53 (Unix) mod_python/3.1.4 
Python/2.3.3 configured -- resuming normal operations
[Tue Mar 22 13:38:42 2005] [info] Server built: Mar 16 2005 19:13:58
[Tue Mar 22 13:38:42 2005] [debug] prefork.c(956): AcceptMutex: sysvsem 
(default: sysvsem)
[Tue Mar 22 13:39:17 2005] [error] make_obcallback: could not import 
mod_python.apache.\n
[root@ap1 apache2]#
========
apache was built with the configure --enable-so option, to allow DSO 
imports.

I've been struggling with this for a couple of days, and I am clueless. I'd 
appreciate any help!
Thanks!
-Dave



From nicolas.lehuen at gmail.com  Tue Mar 22 08:23:56 2005
From: nicolas.lehuen at gmail.com (Nicolas Lehuen)
Date: Tue Mar 22 08:23:57 2005
Subject: [mod_python] apache2 won't load mod_python
In-Reply-To: <04e901c52edf$de95ef80$080aa8c0@DAVE>
References: <04e901c52edf$de95ef80$080aa8c0@DAVE>
Message-ID: <c298f2d705032205231265156@mail.gmail.com>

Hi,

mod_python is loaded all right, but it cannot find the mod_python
module. If you login under the same account Apache is running under,
can you also import mod_python ? Could you give us your httpd.conf
lines related to the mod_python configuration ?

Regards,
Nicolas


On Tue, 22 Mar 2005 08:05:49 -0500, Dave Britton <dave@davebritton.com> wrote:
> I have built apache 2.053 and mod_python 3.1.4 and apache serves pages ok,
> and python will import mod_python, so both exist in the right places, but I
> get this error message, on attempting to access the simple mptest.py
> example:
> ========
> [Tue Mar 22 13:38:42 2005] [notice] SIGHUP received.  Attempting to restart
> [Tue Mar 22 13:38:42 2005] [notice] mod_python: Creating 25 session mutexes
> based on 25 max processes and 0 max threads.
> [Tue Mar 22 13:38:42 2005] [notice] Apache/2.0.53 (Unix) mod_python/3.1.4
> Python/2.3.3 configured -- resuming normal operations
> [Tue Mar 22 13:38:42 2005] [info] Server built: Mar 16 2005 19:13:58
> [Tue Mar 22 13:38:42 2005] [debug] prefork.c(956): AcceptMutex: sysvsem
> (default: sysvsem)
> [Tue Mar 22 13:39:17 2005] [error] make_obcallback: could not import
> mod_python.apache.\n
> [root@ap1 apache2]#
> ========
> apache was built with the configure --enable-so option, to allow DSO
> imports.
> 
> I've been struggling with this for a couple of days, and I am clueless. I'd
> appreciate any help!
> Thanks!
> -Dave
> 
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>
From dave at davebritton.com  Tue Mar 22 09:05:52 2005
From: dave at davebritton.com (Dave Britton)
Date: Tue Mar 22 09:05:56 2005
Subject: [mod_python] apache2 won't load mod_python
References: <04e901c52edf$de95ef80$080aa8c0@DAVE>
	<c298f2d705032205231265156@mail.gmail.com>
Message-ID: <051d01c52ee8$4279dc20$080aa8c0@DAVE>

When I am logged in under su as root I can start python and import 
mod_python. (import * fails of course on _apache):
========
[Tue Mar 22 14:00:38 2005] [info] Server built: Mar 16 2005 19:13:58
[Tue Mar 22 14:00:38 2005] [debug] prefork.c(956): AcceptMutex: sysvsem 
(default: sysvsem)
[Tue Mar 22 14:01:52 2005] [error] make_obcallback: could not import 
mod_python.apache.\n
[root@ap1 apache2]# python
Python 2.3.3 (#1, May 18 2004, 02:14:01)
[GCC 3.2.2 20030222 (Red Hat Linux 3.2.2-5)] on linux2
Type "help", "copyright", "credits" or "license" for more information.
>>> import mod_python
>>> from mod_python import *
Traceback (most recent call last):
  File "<stdin>", line 1, in ?
  File "/usr/local/lib/python2.3/site-packages/mod_python/apache.py", line 
28, in ?
    import _apache
ImportError: No module named _apache
==========
I have tried many different configurations for mod_python and none of them 
have worked so far. The one I currently have which fails is the very simple:
<Directory /usr/local/apache2/htdocs>
AddHandler mod_python .py
PythonHandler mptest
PythonDebug On
</Directory>

Is there some special flag for mod_python's configure?
Thanks for helping!
-Dave

----- Original Message ----- 
From: "Nicolas Lehuen" <nicolas.lehuen@gmail.com>
To: "Dave Britton" <dave@davebritton.com>
Cc: <mod_python@modpython.org>
Sent: Tuesday, March 22, 2005 8:23 AM
Subject: Re: [mod_python] apache2 won't load mod_python


> Hi,
>
> mod_python is loaded all right, but it cannot find the mod_python
> module. If you login under the same account Apache is running under,
> can you also import mod_python ? Could you give us your httpd.conf
> lines related to the mod_python configuration ?
>
> Regards,
> Nicolas
>
>
> On Tue, 22 Mar 2005 08:05:49 -0500, Dave Britton <dave@davebritton.com> 
> wrote:
>> I have built apache 2.053 and mod_python 3.1.4 and apache serves pages 
>> ok,
>> and python will import mod_python, so both exist in the right places, but 
>> I
>> get this error message, on attempting to access the simple mptest.py
>> example:
>> ========
>> [Tue Mar 22 13:38:42 2005] [notice] SIGHUP received.  Attempting to 
>> restart
>> [Tue Mar 22 13:38:42 2005] [notice] mod_python: Creating 25 session 
>> mutexes
>> based on 25 max processes and 0 max threads.
>> [Tue Mar 22 13:38:42 2005] [notice] Apache/2.0.53 (Unix) mod_python/3.1.4
>> Python/2.3.3 configured -- resuming normal operations
>> [Tue Mar 22 13:38:42 2005] [info] Server built: Mar 16 2005 19:13:58
>> [Tue Mar 22 13:38:42 2005] [debug] prefork.c(956): AcceptMutex: sysvsem
>> (default: sysvsem)
>> [Tue Mar 22 13:39:17 2005] [error] make_obcallback: could not import
>> mod_python.apache.\n
>> [root@ap1 apache2]#
>> ========
>> apache was built with the configure --enable-so option, to allow DSO
>> imports.
>>
>> I've been struggling with this for a couple of days, and I am clueless. 
>> I'd
>> appreciate any help!
>> Thanks!
>> -Dave
>>
>> _______________________________________________
>> Mod_python mailing list
>> Mod_python@modpython.org
>> http://mailman.modpython.org/mailman/listinfo/mod_python
>>
> 


From grahamd at dscpl.com.au  Tue Mar 22 16:13:34 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Tue Mar 22 16:13:46 2005
Subject: [mod_python] apache2 won't load mod_python
In-Reply-To: <051d01c52ee8$4279dc20$080aa8c0@DAVE>
References: <04e901c52edf$de95ef80$080aa8c0@DAVE>
	<c298f2d705032205231265156@mail.gmail.com>
	<051d01c52ee8$4279dc20$080aa8c0@DAVE>
Message-ID: <5081d658c82d29e78430c055b579139c@dscpl.com.au>

How many versions of Python are installed on your system? You appear to
be trying to use the one in /usr/local, is that the one you actually
want? When you configured Apache, did you tell it to use a particular
version or simply use whatever it could find? Have you got PYTHONPATH
set manually in your environment or that of Apache?

Anyway, this particular sort of problem is generally the result of 
issues
with there being multiple versions of Python on a system, or a missing
or incomplete install of the Python side of the mod_python system. Go
through each of the site-packages directories for each version of Python
you have and see which have a mod_python directory, when the files were
copied into the directory and try and work out which version of 
mod_python
the files may be for. If a mod_python installation is 3.X, it will have
psp.py in the Python mod_python package directory. Doing this may help
clarify for you what went where and what version Apache might be trying
to load.

I wander whether the mod_python module when it is being loaded from
Apache should dump out to the Apache error log the contents of sys.path.
This may aid in debugging these sort of problems as right now it isn't
easily detectable where Apache may be looking. The startup message may
say which version of Python the Apache module was compiled against, but
this is not necessarily a true indication of where it is looking for
modules.

BTW, also read:

   http://www.modpython.org/FAQ/faqw.py?req=show&file=faq02.001.htp

Also tell us what operating system you are using.

Graham

On 23/03/2005, at 1:05 AM, Dave Britton wrote:

> When I am logged in under su as root I can start python and import 
> mod_python. (import * fails of course on _apache):
> ========
> [Tue Mar 22 14:00:38 2005] [info] Server built: Mar 16 2005 19:13:58
> [Tue Mar 22 14:00:38 2005] [debug] prefork.c(956): AcceptMutex: 
> sysvsem (default: sysvsem)
> [Tue Mar 22 14:01:52 2005] [error] make_obcallback: could not import 
> mod_python.apache.\n
> [root@ap1 apache2]# python
> Python 2.3.3 (#1, May 18 2004, 02:14:01)
> [GCC 3.2.2 20030222 (Red Hat Linux 3.2.2-5)] on linux2
> Type "help", "copyright", "credits" or "license" for more information.
>>>> import mod_python
>>>> from mod_python import *
> Traceback (most recent call last):
>  File "<stdin>", line 1, in ?
>  File "/usr/local/lib/python2.3/site-packages/mod_python/apache.py", 
> line 28, in ?
>    import _apache
> ImportError: No module named _apache
> ==========
> I have tried many different configurations for mod_python and none of 
> them have worked so far. The one I currently have which fails is the 
> very simple:
> <Directory /usr/local/apache2/htdocs>
> AddHandler mod_python .py
> PythonHandler mptest
> PythonDebug On
> </Directory>
>
> Is there some special flag for mod_python's configure?
> Thanks for helping!
> -Dave
>
> ----- Original Message ----- From: "Nicolas Lehuen" 
> <nicolas.lehuen@gmail.com>
> To: "Dave Britton" <dave@davebritton.com>
> Cc: <mod_python@modpython.org>
> Sent: Tuesday, March 22, 2005 8:23 AM
> Subject: Re: [mod_python] apache2 won't load mod_python
>
>
>> Hi,
>>
>> mod_python is loaded all right, but it cannot find the mod_python
>> module. If you login under the same account Apache is running under,
>> can you also import mod_python ? Could you give us your httpd.conf
>> lines related to the mod_python configuration ?
>>
>> Regards,
>> Nicolas
>>
>>
>> On Tue, 22 Mar 2005 08:05:49 -0500, Dave Britton 
>> <dave@davebritton.com> wrote:
>>> I have built apache 2.053 and mod_python 3.1.4 and apache serves 
>>> pages ok,
>>> and python will import mod_python, so both exist in the right 
>>> places, but I
>>> get this error message, on attempting to access the simple mptest.py
>>> example:
>>> ========
>>> [Tue Mar 22 13:38:42 2005] [notice] SIGHUP received.  Attempting to 
>>> restart
>>> [Tue Mar 22 13:38:42 2005] [notice] mod_python: Creating 25 session 
>>> mutexes
>>> based on 25 max processes and 0 max threads.
>>> [Tue Mar 22 13:38:42 2005] [notice] Apache/2.0.53 (Unix) 
>>> mod_python/3.1.4
>>> Python/2.3.3 configured -- resuming normal operations
>>> [Tue Mar 22 13:38:42 2005] [info] Server built: Mar 16 2005 19:13:58
>>> [Tue Mar 22 13:38:42 2005] [debug] prefork.c(956): AcceptMutex: 
>>> sysvsem
>>> (default: sysvsem)
>>> [Tue Mar 22 13:39:17 2005] [error] make_obcallback: could not import
>>> mod_python.apache.\n
>>> [root@ap1 apache2]#
>>> ========
>>> apache was built with the configure --enable-so option, to allow DSO
>>> imports.
>>>
>>> I've been struggling with this for a couple of days, and I am 
>>> clueless. I'd
>>> appreciate any help!
>>> Thanks!
>>> -Dave
>>>
>>> _______________________________________________
>>> Mod_python mailing list
>>> Mod_python@modpython.org
>>> http://mailman.modpython.org/mailman/listinfo/mod_python
>>>
>
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python

From dave at davebritton.com  Tue Mar 22 17:38:19 2005
From: dave at davebritton.com (Dave Britton)
Date: Tue Mar 22 17:38:22 2005
Subject: [mod_python] apache2 won't load mod_python (still)
References: <04e901c52edf$de95ef80$080aa8c0@DAVE>	<c298f2d705032205231265156@mail.gmail.com>
	<051d01c52ee8$4279dc20$080aa8c0@DAVE>
	<424080A4.9030300@worksofmagic.com>
Message-ID: <05d301c52f2f$d8cc1930$080aa8c0@DAVE>

Robert wrote:
===
> Is _apache.py in /usr/local/lib/python2.3/site-packages/mod_python? If 
> not, that's the problem. Clean the mod_python source directory and try 
> installing it again. If it is there, check sys.path. Is 
> /usr/local/lib/python2.3/site-packages in it?
===
I did this re-build (again, carefully),  and the server is still failing...

  I don't think that the mod_python setup actually creates _apache.py. Isn't 
that supposed to be the DSO callback into apache itself that links python 
into apache? Here's what I get after cleaning the mod_python directory out 
and redoing config, install and make install: Make outputs:
======
[root@ap1 mod_python-3.1.4]# make install
make[1]: Entering directory `/usr/local/mod_python-3.1.4'
make[2]: Entering directory `/usr/local/mod_python-3.1.4/src'
make[2]: Leaving directory `/usr/local/mod_python-3.1.4/src'
make[2]: Entering directory `/usr/local/mod_python-3.1.4/dist'
make[3]: Entering directory `/usr/local/mod_python-3.1.4/src'
make[3]: `psp_parser.c' is up to date.
make[3]: Leaving directory `/usr/local/mod_python-3.1.4/src'
/usr/local/bin/python setup.py build
running build
running build_py
running build_ext
make[2]: Leaving directory `/usr/local/mod_python-3.1.4/dist'

Now su and make install
  (or, if you only want to perform a partial install,
   you can use make install_dso and make install_py_lib)


Performing DSO installation.

/usr/bin/install -c -d /usr/local/apache2/modules
/usr/bin/install -c src/mod_python.so /usr/local/apache2/modules
make[2]: Entering directory `/usr/local/mod_python-3.1.4'
cd dist && make install_py_lib
make[3]: Entering directory `/usr/local/mod_python-3.1.4/dist'
make[4]: Entering directory `/usr/local/mod_python-3.1.4/src'
make[4]: `psp_parser.c' is up to date.
make[4]: Leaving directory `/usr/local/mod_python-3.1.4/src'
if test -z "" ; then \
        /usr/local/bin/python setup.py install --optimize 2 --force ; \
else \
        /usr/local/bin/python setup.py install --optimize 2 --force --root 
; \
fi
running install
running build
running build_py
running build_ext
running install_lib
creating /usr/local/lib/python2.3/site-packages/mod_python
copying build/lib.linux-i686-2.3/mod_python/cgihandler.py -> 
/usr/local/lib/python2.3/site-packages/mod_python
copying build/lib.linux-i686-2.3/mod_python/Cookie.py -> 
/usr/local/lib/python2.3/site-packages/mod_python
copying build/lib.linux-i686-2.3/mod_python/util.py -> 
/usr/local/lib/python2.3/site-packages/mod_python
copying build/lib.linux-i686-2.3/mod_python/publisher.py -> 
/usr/local/lib/python2.3/site-packages/mod_python
copying build/lib.linux-i686-2.3/mod_python/__init__.py -> 
/usr/local/lib/python2.3/site-packages/mod_python
copying build/lib.linux-i686-2.3/mod_python/apache.py -> 
/usr/local/lib/python2.3/site-packages/mod_python
copying build/lib.linux-i686-2.3/mod_python/psp.py -> 
/usr/local/lib/python2.3/site-packages/mod_python
copying build/lib.linux-i686-2.3/mod_python/Session.py -> 
/usr/local/lib/python2.3/site-packages/mod_python
copying build/lib.linux-i686-2.3/mod_python/_psp.so -> 
/usr/local/lib/python2.3/site-packages/mod_python
byte-compiling 
/usr/local/lib/python2.3/site-packages/mod_python/cgihandler.py to 
cgihandler.pyc
byte-compiling /usr/local/lib/python2.3/site-packages/mod_python/Cookie.py 
to Cookie.pyc
byte-compiling /usr/local/lib/python2.3/site-packages/mod_python/util.py to 
util.pyc
byte-compiling 
/usr/local/lib/python2.3/site-packages/mod_python/publisher.py to 
publisher.pyc
byte-compiling /usr/local/lib/python2.3/site-packages/mod_python/__init__.py 
to __init__.pyc
byte-compiling /usr/local/lib/python2.3/site-packages/mod_python/apache.py 
to apache.pyc
byte-compiling /usr/local/lib/python2.3/site-packages/mod_python/psp.py to 
psp.pyc
byte-compiling /usr/local/lib/python2.3/site-packages/mod_python/Session.py 
to Session.pyc
writing byte-compilation script '/tmp/tmpuJI-72.py'
/usr/local/bin/python -OO /tmp/tmpuJI-72.py
removing /tmp/tmpuJI-72.py
make[3]: Leaving directory `/usr/local/mod_python-3.1.4/dist'
make[2]: Leaving directory `/usr/local/mod_python-3.1.4'

Now don't forget to edit your main config and add
    LoadModule python_module /usr/local/apache2/modules/mod_python.so
and if your configuration uses ClearModuleList, then also
    AddModule mod_python.c

make[1]: Leaving directory `/usr/local/mod_python-3.1.4'
[root@ap1 mod_python-3.1.4]#
================
python sys.path reports:
============
[root@ap1 python2.3]# python
Python 2.3.3 (#1, May 18 2004, 02:14:01)
[GCC 3.2.2 20030222 (Red Hat Linux 3.2.2-5)] on linux2
Type "help", "copyright", "credits" or "license" for more information.
>>> import sys
>>> print sys.path
['', '/usr/local/lib/python23.zip', '/usr/local/lib/python2.3', 
'/usr/local/lib/python2.3/plat-linux2', '/usr/local/lib/python2.3/lib-tk', 
'/usr/local/lib/python2.3/lib-dynload', 
'/usr/local/lib/python2.3/site-packages']
>>>
=================
So, you see there is an apache.py, but no _apache.py. Everything else calls 
apache.py which then fails when it tries to load _apache.py - apache can't 
load the dso module.
I removed the apache2 and mod_python directories and rebuilt everything from 
scratch,
using the apache configure:
./configure --enable-mods-shared --enable-so --enable-python=shared
and mod_python:
./configure --with-apxs=/usr/local/apache2/bin/apxs
In the httpd.conf file I have:

LoadModule python_module /usr/local/apache2/modules/mod_python.so
(which file is in the right place: -rwxr-xr-x    1 root     root 
4093859 Mar 22 22:46 mod_python.so)

and
<Directory /usr/local/apache2/htdocs>
AddHandler mod_python .py
PythonHandler mptest
PythonDebug On
</Directory>

and still get this error message when I browse to 
http://myserverIP/mptest.py:
(taken from the error log, from the point of server startup:)
=========
[Tue Mar 22 23:12:41 2005] [notice] mod_python: Creating 25 session mutexes 
based on 25 max processes and 0 max threads.
[Tue Mar 22 23:12:41 2005] [notice] Apache/2.0.53 (Unix) mod_python/3.1.4 
Python/2.3.3 configured -- resuming normal operations
[Tue Mar 22 23:12:41 2005] [info] Server built: Mar 16 2005 19:13:58
[Tue Mar 22 23:12:41 2005] [debug] prefork.c(956): AcceptMutex: sysvsem 
(default: sysvsem)
[Tue Mar 22 23:15:31 2005] [error] make_obcallback: could not import 
mod_python.apache.\n
========

What could be wrong?

-Dave


From grahamd at dscpl.com.au  Tue Mar 22 19:30:07 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Tue Mar 22 19:30:08 2005
Subject: [mod_python] apache2 won't load mod_python (still)
Message-ID: <1111537807.4248@dscpl.user.openhosting.com>

Dave Britton wrote ..

> and still get this error message when I browse to 
> http://myserverIP/mptest.py:
> (taken from the error log, from the point of server startup:)
> =========
> [Tue Mar 22 23:12:41 2005] [notice] mod_python: Creating 25 session mutexes
> based on 25 max processes and 0 max threads.
> [Tue Mar 22 23:12:41 2005] [notice] Apache/2.0.53 (Unix) mod_python/3.1.4
> Python/2.3.3 configured -- resuming normal operations
> [Tue Mar 22 23:12:41 2005] [info] Server built: Mar 16 2005 19:13:58
> [Tue Mar 22 23:12:41 2005] [debug] prefork.c(956): AcceptMutex: sysvsem
> (default: sysvsem)
> [Tue Mar 22 23:15:31 2005] [error] make_obcallback: could not import 
> mod_python.apache.\n
> ========
> 
> What could be wrong?

Are you confident that there are no other error messages in your log
file that are relevant to Python/mod_python.

As an experiment I removed my mod_python site packages directory
and started Apache. In my log I got.

[Wed Mar 23 11:12:47 2005] [notice] mod_python: Creating 32 session mutexes based on 6 max processes and 25 max threads.
[Wed Mar 23 11:12:47 2005] [error] make_obcallback: could not import mod_python.apache.\n
[Wed Mar 23 11:12:47 2005] [notice] Apache/2.0.51 (Unix) mod_python/3.1.4 Python/2.3 configured -- resuming normal operations

What is strange here though is that the C code if the import fails is doing:

    if (! ((m = PyImport_ImportModule(MODULENAME)))) {
        ap_log_error(APLOG_MARK, APLOG_NOERRNO|APLOG_ERR, 0, s,
                     "make_obcallback: could not import %s.\n", MODULENAME);
        PyErr_Print();
    }

Note how it calls PyErr_Print() to dump out the actual Python error which
caused the import to fail. This isn't displaying in the log though because
it is logging through the Apache logging API.

What is interesting though is that for my configuration and operating
system, when I shutdown Apache, then the error message created by
PyErr_Print() finally gets flushed and display in the error log.

[Wed Mar 23 11:15:55 2005] [error] make_obcallback: could not import mod_python.apache.\n
ImportError: No module named mod_python.apache
ImportError: No module named mod_python.apache
[Wed Mar 23 11:15:55 2005] [notice] caught SIGTERM, shutting down

Note the ImportError.

Thus, make sure you check throughly in your Apache error log for any
other Python error messages. On your platform, depending on how it is
setup, such messages may not actually got to the Apache error log, so
you might also check in your general system log files in "/var/log" or
otherwise as appropriate. If you can find these error messages it will
give you more clues as to what is wrong.

Now unfortunately, it doesn't seem to be very practical to make some
call other than PyErr_Print() which logs to the Apache logging API as the
internals are quite complicated.

One option to try if the messages aren't getting flush when Apache is
being shutdown is to run Apache as:

  /usr/local/apache-2.0/bin/httpd -X

On my system at least, running Apache in single process mode like this
results in the extra error information being flush immediately.

[Wed Mar 23 11:22:15 2005] [notice] mod_python: Creating 32 session mutexes based on 6 max processes and 25 max threads.
[Wed Mar 23 11:22:15 2005] [error] make_obcallback: could not import mod_python.apache.\n
ImportError: No module named mod_python.apache

Anyway, try and find the error messages which PyErr_Print() is generating.

I'll have some code changes you can make to mod_python.c soon as well
to help track down whether the search path used by Python is correct.

Graham

From grahamd at dscpl.com.au  Tue Mar 22 19:49:19 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Tue Mar 22 19:49:20 2005
Subject: [mod_python] apache2 won't load mod_python (still)
Message-ID: <1111538959.14324@dscpl.user.openhosting.com>

Graham Dumpleton wrote ..
> Note how it calls PyErr_Print() to dump out the actual Python error which
> caused the import to fail. This isn't displaying in the log though because
> it is logging through the Apache logging API.

s/it is logging/it is not logging/  :-(

> Anyway, try and find the error messages which PyErr_Print() is generating.
> 
> I'll have some code changes you can make to mod_python.c soon as well
> to help track down whether the search path used by Python is correct.

Also try the following.

Manually edit your site-packages/mod_python/apache.py file and change
where the imports are to read:

import sys
sys.stderr.write("importing mod_python.apache\n")
import traceback
import time
import os
import pdb
import stat
import imp
import types
import _apache
sys.stderr.write("imported _apache\n")

If you can't find where the stderr messages are getting flushed to, use
something like the following instead.

mylog = open("/tmp/mp.log","w")
mylog.write("importing mod_python.apache\n")

import sys

import traceback
import time
import os
import pdb
import stat
import imp
import types
import _apache

mylog.write("imported _apache\n")
mylog.close()

If after doing the latter and restarting Apache, you can not find
any /tmp/mp.log file, it simply means that Python when executing
under Apache isn't even looking in your site-packages directory
where you think it should.

At that point, try setting PYTHONHOME explicitly as mentioned in
FAQ entry I referenced in previous mail.

    export PYTHONHOME='/home/httpd/python'
    httpd -X 2>error_log

I am not sure what you are mean't to set PYTHONHOME to, so you
might have to play and read documentation about what it does.
I think that it might need to be "/usr/local" for your installation.

Graham
From gdamjan at mail.net.mk  Wed Mar 23 10:33:20 2005
From: gdamjan at mail.net.mk (Damjan)
Date: Wed Mar 23 10:33:25 2005
Subject: [mod_python] Trouble fetching POST arguments
In-Reply-To: <1111037433.18903@dscpl.user.openhosting.com>
References: <1111037433.18903@dscpl.user.openhosting.com>
Message-ID: <20050323153320.GA11368@legolas.on.net.mk>

> > 5) THE PROBLEM: User attempts to post action="http://foobar.com/htdocs".
> > 6) Unexplainable GET->POST calamity rears its ugly head.
> > 7) SOLUTION: Add a trailing slash. It's the proper syntax anyway! 
> > action="http://foobar.com/htdocs/"

> FWIW, did my own test and yes you are absolutely correct about 5,6,7.

Is this because Apache sends a 30x redirect to the client to the URL
with a slash added?

Anyway, you people should use LiveHTTP headers in Firefox for debuging
these stuff.


-- 
damjan | ??????
This is my jabber ID --> damjan@bagra.net.mk <-- not my mail address!!!
From gdamjan at mail.net.mk  Wed Mar 23 10:53:58 2005
From: gdamjan at mail.net.mk (Damjan)
Date: Wed Mar 23 10:54:01 2005
Subject: [mod_python] apache2 won't load mod_python
In-Reply-To: <051d01c52ee8$4279dc20$080aa8c0@DAVE>
References: <04e901c52edf$de95ef80$080aa8c0@DAVE>
	<c298f2d705032205231265156@mail.gmail.com>
	<051d01c52ee8$4279dc20$080aa8c0@DAVE>
Message-ID: <20050323155358.GB11368@legolas.on.net.mk>

> When I am logged in under su as root I can start python and import 
> mod_python. (import * fails of course on _apache):

Apache doesn't work as root, it either works under an 'apache' user or
'nobody'.

you might try to debug this problem with 'strace httpd -X'

[you can filter the output with '... 2>&1 | grep open' for example]




-- 
damjan | ??????
This is my jabber ID --> damjan@bagra.net.mk <-- not my mail address!!!
From gdamjan at mail.net.mk  Wed Mar 23 13:02:56 2005
From: gdamjan at mail.net.mk (Damjan)
Date: Wed Mar 23 13:03:00 2005
Subject: [mod_python] File Progress Upload Indicator
In-Reply-To: <423EE3AD.2040100@cox.net>
References: <423EE3AD.2040100@cox.net>
Message-ID: <20050323180256.GC11368@legolas.on.net.mk>

> Does anyone have any links to a file upload progress indicator similar 
> to megaupload but written in Python?
>
> If not, does anyone have an idea as to how to find the size of the file 
> being uploaded and the bytes transferred so far?

Why not analyze megaupload or http://freshmeat.net/projects/progressbar/ 
how they do it ... I guess the client sends a Content-length header
and then you can write a loop like this:
	req.read(1024)
	percent = 1024/length * 100
	req.write(SOME_HTML_DISPLAYING_PERCENT % percent)

-- 
damjan | ??????
This is my jabber ID --> damjan@bagra.net.mk <-- not my mail address!!!
From ycchan at gmail.com  Wed Mar 23 22:52:35 2005
From: ycchan at gmail.com (William Chan)
Date: Wed Mar 23 22:52:37 2005
Subject: [mod_python] os.listdir()
Message-ID: <3996b84d050323195228789fd3@mail.gmail.com>

Hi,

   I'm using mod_python. os.listdir('/tmp') in a request handler
returns a list of empty strings (note: the number of empty strings is
the same as the number of elements in /tmp). I am sure that I can
access the filesystem in request handlers since os.stat('/tmp').st_ino
returns the correct inode number. Any idea what may go wrong?

Thanks,
William
From grahamd at dscpl.com.au  Wed Mar 23 23:34:22 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Wed Mar 23 23:34:25 2005
Subject: [mod_python] os.listdir()
Message-ID: <1111638862.27904@dscpl.user.openhosting.com>

Post the code which uses the result of calling os.listdir("/tmp").

If you are using mod_python.publisher, what do get if a publisher
function is written as:

  def function():
    return os.listdir("/tmp")

Does the list of files correctly display on the browser?

If you are trying to display the result yourself in some way in a HTML
page, are you passing each file name through cgi.escape() to ensure that
no special characters in the names are stuffing up the HTML when parsed
by the browser?

Graham

William Chan wrote ..
> Hi,
> 
>    I'm using mod_python. os.listdir('/tmp') in a request handler
> returns a list of empty strings (note: the number of empty strings is
> the same as the number of elements in /tmp). I am sure that I can
> access the filesystem in request handlers since os.stat('/tmp').st_ino
> returns the correct inode number. Any idea what may go wrong?
> 
> Thanks,
> William
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
From ycchan at gmail.com  Thu Mar 24 00:58:46 2005
From: ycchan at gmail.com (William Chan)
Date: Thu Mar 24 00:58:48 2005
Subject: [mod_python] os.listdir()
In-Reply-To: <1111637846.2966.56.camel@localhost.localdomain>
References: <3996b84d050323195228789fd3@mail.gmail.com>
	<1111637846.2966.56.camel@localhost.localdomain>
Message-ID: <3996b84d0503232158214303e6@mail.gmail.com>

All files in the directory are world-readable.

I couldn't run Python CLI as user apache.


On Wed, 23 Mar 2005 22:17:26 -0600, Jamieson Becker
<jamie@jamiebecker.com> wrote:
> Shot in the dark -- maybe the user Apache is running does not have read
> rights to the files in that directory but does have read access to the
> directory itself? Does it work in python CLI itself?
> 
> On Wed, 2005-03-23 at 19:52 -0800, William Chan wrote:
> > Hi,
> >
> >    I'm using mod_python. os.listdir('/tmp') in a request handler
> > returns a list of empty strings (note: the number of empty strings is
> > the same as the number of elements in /tmp). I am sure that I can
> > access the filesystem in request handlers since os.stat('/tmp').st_ino
> > returns the correct inode number. Any idea what may go wrong?
> >
> > Thanks,
> > William
> > _______________________________________________
> > Mod_python mailing list
> > Mod_python@modpython.org
> > http://mailman.modpython.org/mailman/listinfo/mod_python
> 
>
From grahamd at dscpl.com.au  Thu Mar 24 01:15:49 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Thu Mar 24 01:15:51 2005
Subject: [mod_python] os.listdir()
Message-ID: <1111644949.12214@dscpl.user.openhosting.com>

William Chan wrote ..
> I'm using mod_python.publisher. My codes are:
> 
> import os
> def index():
>     return str(os.listdir('/tmp'))
> 
> and the output is:
> 
> ['', '', '', '', '', '', '', '', '', '']

The explicit conversion of the result of os.listdir() to a string
using str() is not actually required as mod_python.publisher
will automatically convert any result into a string anyway.
This fact shouldn't make any difference though.

All I can suggest is changing your handler to:

  import os

  def index(req):
    req.content_type = "text/plain"
    req.send_http_header()
    return os.listdir('/tmp')

By setting the content type to "text/plain" you avoid publisher
making a guess as to whether the content type may be HTML
or not. It is possible, although unlikely that some filename in
/tmp contains the magic characters it looks for. I don't though
see this happening based on what you say is being displayed.

Other thing to try would be:

  import os

  def index(req):
    req.content_type = "text/plain"
    req.send_http_header()
    return repr(os.listdir('/tmp'))

This takes the task of converting the result to a string away from
publisher and displays it in a form which will hopefully encode
any strange characters so they are visible and will not cause any
problem.

Graham


From ycchan at gmail.com  Thu Mar 24 01:29:45 2005
From: ycchan at gmail.com (William Chan)
Date: Thu Mar 24 01:29:46 2005
Subject: [mod_python] os.listdir()
In-Reply-To: <1111644949.12214@dscpl.user.openhosting.com>
References: <1111644949.12214@dscpl.user.openhosting.com>
Message-ID: <3996b84d0503232229dd5be24@mail.gmail.com>

I am sure that the problem is not output conversion. In fact, what I'm
trying to do is:

import os
def index(req, **kwargs):
    ...
    for name in os.listdir('/tmp'):
        if name[0] == '.':
            ...
    ...

However, I get "IndexError: string index out of range". So They are
really empty strings.


On Thu, 24 Mar 2005 01:15:49 -0500, Graham Dumpleton
<grahamd@dscpl.com.au> wrote:
> William Chan wrote ..
> > I'm using mod_python.publisher. My codes are:
> >
> > import os
> > def index():
> >     return str(os.listdir('/tmp'))
> >
> > and the output is:
> >
> > ['', '', '', '', '', '', '', '', '', '']
> 
> The explicit conversion of the result of os.listdir() to a string
> using str() is not actually required as mod_python.publisher
> will automatically convert any result into a string anyway.
> This fact shouldn't make any difference though.
> 
> All I can suggest is changing your handler to:
> 
>   import os
> 
>   def index(req):
>     req.content_type = "text/plain"
>     req.send_http_header()
>     return os.listdir('/tmp')
> 
> By setting the content type to "text/plain" you avoid publisher
> making a guess as to whether the content type may be HTML
> or not. It is possible, although unlikely that some filename in
> /tmp contains the magic characters it looks for. I don't though
> see this happening based on what you say is being displayed.
> 
> Other thing to try would be:
> 
>   import os
> 
>   def index(req):
>     req.content_type = "text/plain"
>     req.send_http_header()
>     return repr(os.listdir('/tmp'))
> 
> This takes the task of converting the result to a string away from
> publisher and displays it in a form which will hopefully encode
> any strange characters so they are visible and will not cause any
> problem.
> 
> Graham
> 
>
From grahamd at dscpl.com.au  Fri Mar 25 02:07:32 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Fri Mar 25 02:07:45 2005
Subject: [mod_python] ANN: Vampire 1.5 is now available.
Message-ID: <2c440d194249be2365c34df9615c3ef4@dscpl.com.au>

Vampire 1.5 is now available.

    http://www.dscpl.com.au/projects/vampire

    http://www.dscpl.com.au/downloads/vampire-1.5-20050325.tar.gz

Vampire is an extension module for mod_python, which provides a more 
flexible
dispatch mechanism for basic content handlers, as well as an alternative
implementation of the mod_python.publisher module. A range of other 
useful
features are also provided which make using mod_python a much more 
pleasant
experience.

For a quick overview of the features that Vampire provides check out:

   http://www.dscpl.com.au/projects/vampire/articles/vampire-001.html

The most important new feature in this release is "vampire::publisher", 
an
attempt at a drop in replacement for mod_python.publisher which avoids 
many
of the problems present in the original in respect of module loading. 
This
version also addresses all the currently known bugs and some limitations
listed for mod_python.publisher on the mod_python bugs list.

Other features worthy of mentioning are a handler object which can be 
used
selectively in place of a basic content handler to introduce publisher 
style
URL mapping for a single resource. Two handler objects which allow a 
function
exported as a publisher to accept additional path information and have 
that
supplied as a single parameter or for each part of the additional path 
to
be supplied in distinct parameters. Finally, a handler object is 
provided
which allows publisher style URL mapping for XML-RPC service requests.

Note that I have also completely overhauled the mechanisms to construct 
my
own web site. I am no longer using PHP but have changed to using a 
combination
of mod_python, Vampire, HTMLTemplate and docutils, with style sheets 
borrowed
from Ruthsarian Layouts. The implementation of the web site itself may 
be of
interest and the code used to do it is included with the Vampire source 
code.

I will now be shifting my main focus back to my other open source 
package
called OSE, which contains a distributed messaging system including a 
service
agent framework incorporating presence and ability to communicate with 
both
request/reply and publish/subscribe styles of interaction. Although 
written
in C++, this package provides Python wrappers and can be used from 
Apache
using mod_python. This allows a mod_python web application to be used 
as a
front end to quite complicated distributed systems. It was in part to 
achieve
this that I started writing Vampire, although Vampire isn't strictly 
required
to make this work.

Although my main focus will now be elsewhere, now that my web site has 
been
updated to make it easier to put up new stuff, I will continue to 
create new
documentation for Vampire as time allows.

--
Graham Dumpleton (grahamd@dscpl.com.au)

From bortzmeyer at nic.fr  Fri Mar 25 06:15:37 2005
From: bortzmeyer at nic.fr (Stephane Bortzmeyer)
Date: Fri Mar 25 06:15:46 2005
Subject: [mod_python] Re: mod_python.publisher and Cheetah
In-Reply-To: <3aec49ed1f7efbac45fa4e992c8c6d86@dscpl.com.au>
References: <1110842750.4984@dscpl.user.openhosting.com>
	<20050315112853.GB14336@sources.org>
	<3aec49ed1f7efbac45fa4e992c8c6d86@dscpl.com.au>
Message-ID: <20050325111537.GC4328@nic.fr>

On Wed, Mar 16, 2005 at 08:03:29AM +1100,
 Graham Dumpleton <grahamd@dscpl.com.au> wrote 
 a message of 67 lines which said:

> I would strongly recommend against changing apache.DECLINED to
> apache.HTTP_NOT_FOUND, it is there for a very specific reason.

OK, I went back to DECLINED.

I modified the publisher again to have both Cheetah-generated files
and "classic" mod_python scripts in the same directory.

-------------- next part --------------
A non-text attachment was scrubbed...
Name: cheetah-publisher.py
Type: text/x-python
Size: 2082 bytes
Desc: not available
Url : http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20050325/263a1abb/cheetah-publisher.py
From barry.pearce at copyrightwitness.net  Fri Mar 25 06:30:41 2005
From: barry.pearce at copyrightwitness.net (Barry Pearce)
Date: Fri Mar 25 06:30:38 2005
Subject: [mod_python] file upload very slow in fieldStorage
Message-ID: <4243F661.6090309@copyrightwitness.net>

Hi,

I am uploading a 155Mb file to my python handler (just using 
PythonHandler). The handler uses FieldStorage. However the time between 
the browser reporting the upload as complete, and *my* handler being 
called is quite excessive!

Any ideas on where to investigate further? Does anyone know the 
particular area of code internals?

Im concerned because I need to upload in GB!!!!
-- 
Regards

Barry Pearce

From craig.warren at encorp.com  Fri Mar 25 11:18:30 2005
From: craig.warren at encorp.com (Craig Warren)
Date: Fri Mar 25 11:18:53 2005
Subject: [mod_python] file upload very slow in fieldStorage
In-Reply-To: <4243F661.6090309@copyrightwitness.net>
References: <4243F661.6090309@copyrightwitness.net>
Message-ID: <424439D6.7080900@encorp.com>

Also be aware that  it doesn't stream it in (unless someone can tell me 
how to make it stream in), so it seems to read it all into memory (which 
might be your slowness, if it has to write to swap a lot) before it 
writes it to a tmp file.  We have had problems with this since we are 
running on an embedded system that doesn't have a swap, so we run out of 
memory.  I have been writing a handler that streams in the file, but 
have not completed it yet.  We switched to using WebDav to upload big 
files, but you can't really do it from a web interface, but it works 
over port 80 and "streams" the files in, which is nice.

Craig



Barry Pearce wrote:

> Hi,
>
> I am uploading a 155Mb file to my python handler (just using 
> PythonHandler). The handler uses FieldStorage. However the time 
> between the browser reporting the upload as complete, and *my* handler 
> being called is quite excessive!
>
> Any ideas on where to investigate further? Does anyone know the 
> particular area of code internals?
>
> Im concerned because I need to upload in GB!!!!


From barry.pearce at copyrightwitness.net  Fri Mar 25 11:22:52 2005
From: barry.pearce at copyrightwitness.net (Barry Pearce)
Date: Fri Mar 25 11:22:06 2005
Subject: [mod_python] Due to design of code util.FieldStorage causes
 MemoryError on V.Large files
Message-ID: <42443ADB.4040001@copyrightwitness.net>

Hi all,

Ive just tried to upload an .iso using FieldStorage - an unfortunately 
this causes some problems - namely it just calls 'readline' without a 
specific sizing.

Im going to take a look at the code and try to improve it so that it 
would cope with multi-GB files...

I will also make some enhancements to allow callbacks detailing progress 
(thus allowing upload progress bars?) and the ability to control the 
directory used for the temporary files so that simple file renaming can 
be used instead of copying to move files around (which is v.expensive 
for large files), Ill also add the ability to find the name of the temp 
file used so the renaming is possible.

Once Ive done all this Ill push the changes back to mod_python.org for 
consideration for inclusion in a future release.

Any thoughts before I plough headlong into this?
-- 
Regards

Barry Pearce


From dave at davebritton.com  Fri Mar 25 11:39:13 2005
From: dave at davebritton.com (Dave Britton)
Date: Fri Mar 25 11:39:31 2005
Subject: [mod_python] apache2 won't load mod_python
References: <04e901c52edf$de95ef80$080aa8c0@DAVE>
	<c298f2d705032205231265156@mail.gmail.com>
	<051d01c52ee8$4279dc20$080aa8c0@DAVE>
	<5081d658c82d29e78430c055b579139c@dscpl.com.au>
Message-ID: <1f9401c53159$2d9be910$080aa8c0@DAVE>

Graham,
It turned out that there actually was another version of python that had 
been installed without my knowledge that was interfering with apache2 
finding the right path. I would never have suspected or found this without 
your clues. Once I removed it and rebuilt everything, my upgrade to apache2 
and mod_python 3 works.

Thanks for helping me track this down! I really appreciate it.

-Dave
----- Original Message ----- 
From: "Graham Dumpleton" <grahamd@dscpl.com.au>
To: "Dave Britton" <dave@davebritton.com>
Cc: <nicolas@lehuen.com>; <mod_python@modpython.org>
Sent: Tuesday, March 22, 2005 4:13 PM
Subject: Re: [mod_python] apache2 won't load mod_python


> How many versions of Python are installed on your system? You appear to
> be trying to use the one in /usr/local, is that the one you actually
> want? When you configured Apache, did you tell it to use a particular
> version or simply use whatever it could find? Have you got PYTHONPATH
> set manually in your environment or that of Apache?
>
> Anyway, this particular sort of problem is generally the result of issues
> with there being multiple versions of Python on a system, or a missing
> or incomplete install of the Python side of the mod_python system. Go
> through each of the site-packages directories for each version of Python
> you have and see which have a mod_python directory, when the files were
> copied into the directory and try and work out which version of mod_python
> the files may be for. If a mod_python installation is 3.X, it will have
> psp.py in the Python mod_python package directory. Doing this may help
> clarify for you what went where and what version Apache might be trying
> to load.
>
> I wander whether the mod_python module when it is being loaded from
> Apache should dump out to the Apache error log the contents of sys.path.
> This may aid in debugging these sort of problems as right now it isn't
> easily detectable where Apache may be looking. The startup message may
> say which version of Python the Apache module was compiled against, but
> this is not necessarily a true indication of where it is looking for
> modules.
>
> BTW, also read:
>
>   http://www.modpython.org/FAQ/faqw.py?req=show&file=faq02.001.htp
>
> Also tell us what operating system you are using.
>
> Graham
>
> 

From list at joreybump.com  Fri Mar 25 12:08:01 2005
From: list at joreybump.com (Jorey Bump)
Date: Fri Mar 25 12:08:10 2005
Subject: [mod_python] Due to design of code util.FieldStorage causes
	MemoryError on V.Large files
In-Reply-To: <42443ADB.4040001@copyrightwitness.net>
References: <42443ADB.4040001@copyrightwitness.net>
Message-ID: <42444571.1050605@joreybump.com>

Barry Pearce wrote:

> Ive just tried to upload an .iso using FieldStorage - an unfortunately 
> this causes some problems - namely it just calls 'readline' without a 
> specific sizing.
> 
> Im going to take a look at the code and try to improve it so that it 
> would cope with multi-GB files...

> Any thoughts before I plough headlong into this?

I would probably never allow transfers of this type using HTTP, so be 
sure to provide sane defaults and a limiting mechanism.

Also, considering the amount of time it would take to complete the 
transfer on just about any typical connection, how many simultaneous 
transfers would be possible in a default apache setup before it 
effectively stops serving pages?

How will you handle uploads of the same file when a luser keeps 
submitting the same form? For small files, this is a nuisance, but for 
large ones it could be a catastrophe.

Finally, consider every aspect of the worst case scenario and don't 
discount human stupidity. For example, a user once tried to send me an 
email with a 40GB attachment (the entire C: drive) using Outlook 
Express. His mail server properly identified the maximum size it would 
handle, but OE stubbornly continued to transfer bytes and attempted to 
clear out its Outbox all night long (he had gone to bed). In the 
morning, his provider gave him an angry call. We took the machine 
offline and spent a couple of hours trying to purge the message from OE 
(harder than you would think). Test your code with every browser 
available to you, and do every stupid thing you can think of before 
giving ordinary users the power to DoS your system.



From nicolas.lehuen at gmail.com  Fri Mar 25 15:04:47 2005
From: nicolas.lehuen at gmail.com (Nicolas Lehuen)
Date: Fri Mar 25 15:04:49 2005
Subject: [mod_python] Due to design of code util.FieldStorage causes
	MemoryError on V.Large files
In-Reply-To: <42444571.1050605@joreybump.com>
References: <42443ADB.4040001@copyrightwitness.net>
	<42444571.1050605@joreybump.com>
Message-ID: <c298f2d70503251204344263c7@mail.gmail.com>

>From the source code (mod_python/util.py line 169), it seems that
mod_python will stream to a temporary file instead of memory if and
only if the Content-Disposition header of the file attachement
contains a filename attribute. Otherwise, it loads the file into
memory, hence the MemoryError.

Now, does your browser correctly send a filename attribute ? Maybe
FieldStorage should not care about a filename being available and
always try to stream to disk ?

Anyway, I agree with Jorey, HTTP is not made for this kind of huge
file transfer...

Regards,
Nicolas

On Fri, 25 Mar 2005 12:08:01 -0500, Jorey Bump <list@joreybump.com> wrote:
> Barry Pearce wrote:
> 
> > Ive just tried to upload an .iso using FieldStorage - an unfortunately
> > this causes some problems - namely it just calls 'readline' without a
> > specific sizing.
> >
> > Im going to take a look at the code and try to improve it so that it
> > would cope with multi-GB files...
> 
> > Any thoughts before I plough headlong into this?
> 
> I would probably never allow transfers of this type using HTTP, so be
> sure to provide sane defaults and a limiting mechanism.
> 
> Also, considering the amount of time it would take to complete the
> transfer on just about any typical connection, how many simultaneous
> transfers would be possible in a default apache setup before it
> effectively stops serving pages?
> 
> How will you handle uploads of the same file when a luser keeps
> submitting the same form? For small files, this is a nuisance, but for
> large ones it could be a catastrophe.
> 
> Finally, consider every aspect of the worst case scenario and don't
> discount human stupidity. For example, a user once tried to send me an
> email with a 40GB attachment (the entire C: drive) using Outlook
> Express. His mail server properly identified the maximum size it would
> handle, but OE stubbornly continued to transfer bytes and attempted to
> clear out its Outbox all night long (he had gone to bed). In the
> morning, his provider gave him an angry call. We took the machine
> offline and spent a couple of hours trying to purge the message from OE
> (harder than you would think). Test your code with every browser
> available to you, and do every stupid thing you can think of before
> giving ordinary users the power to DoS your system.
> 
> 
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>
From nicolas.lehuen at gmail.com  Fri Mar 25 15:08:01 2005
From: nicolas.lehuen at gmail.com (Nicolas Lehuen)
Date: Fri Mar 25 15:08:02 2005
Subject: [mod_python] file upload very slow in fieldStorage
In-Reply-To: <424439D6.7080900@encorp.com>
References: <4243F661.6090309@copyrightwitness.net>
	<424439D6.7080900@encorp.com>
Message-ID: <c298f2d705032512084003206@mail.gmail.com>

Like I've wrote in another mail, FieldStorage will stream only if the
Content-Disposition header of the file part of the POST entity
contains a filename attribute (see mod_python/util.py line 169). Maybe
we should change this behaviour :

1) Always stream to disk unless told otherwise
2) Allow to pass a directory name where uploaded files will be
streamed ; if not specified a temporary file is used.

Regards,
Nicolas


On Fri, 25 Mar 2005 09:18:30 -0700, Craig Warren
<craig.warren@encorp.com> wrote:
> Also be aware that  it doesn't stream it in (unless someone can tell me
> how to make it stream in), so it seems to read it all into memory (which
> might be your slowness, if it has to write to swap a lot) before it
> writes it to a tmp file.  We have had problems with this since we are
> running on an embedded system that doesn't have a swap, so we run out of
> memory.  I have been writing a handler that streams in the file, but
> have not completed it yet.  We switched to using WebDav to upload big
> files, but you can't really do it from a web interface, but it works
> over port 80 and "streams" the files in, which is nice.
> 
> Craig
> 
> 
> Barry Pearce wrote:
> 
> > Hi,
> >
> > I am uploading a 155Mb file to my python handler (just using
> > PythonHandler). The handler uses FieldStorage. However the time
> > between the browser reporting the upload as complete, and *my* handler
> > being called is quite excessive!
> >
> > Any ideas on where to investigate further? Does anyone know the
> > particular area of code internals?
> >
> > Im concerned because I need to upload in GB!!!!
> 
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>
From nick at dd.revealed.net  Fri Mar 25 15:20:42 2005
From: nick at dd.revealed.net (Nick)
Date: Fri Mar 25 15:21:46 2005
Subject: [mod_python] file upload very slow in fieldStorage
In-Reply-To: <c298f2d705032512084003206@mail.gmail.com>
References: <4243F661.6090309@copyrightwitness.net>	<424439D6.7080900@encorp.com>
	<c298f2d705032512084003206@mail.gmail.com>
Message-ID: <4244729A.3050707@dd.revealed.net>

Nicolas Lehuen wrote:
> Like I've wrote in another mail, FieldStorage will stream only if the
> Content-Disposition header of the file part of the POST entity
> contains a filename attribute (see mod_python/util.py line 169). Maybe
> we should change this behaviour :
> 
> 1) Always stream to disk unless told otherwise

I would agree this should be done.  Regardless of whether HTTP should or 
should not be used for huge file uploads, it does leave you open to DoS.

Nick
From chagner at yahoo.com  Fri Mar 25 15:50:20 2005
From: chagner at yahoo.com (Chris Hagner)
Date: Fri Mar 25 15:50:33 2005
Subject: [mod_python] _req.write buffer/flush question
Message-ID: <20050325205020.89393.qmail@web41004.mail.yahoo.com>

Hi there,

I am trying to figure out some strangeness that I'm
observing when having > 1 _req.write() statements.  I
use a templating system, os my first call to
_req.write() gets the output of rendered HTML
template.  The second call is used when I turn on my
own internal debugging which dumps more information to
the browser (thus simplifying tracking down values and
settings).  This all worked fine under modpy 2.x but
I'm noticing that in 3.1 only a fraction of the second
call of _req.write() is showing up in the browser.

Initially, the second output didn't appear at all
until I turned off 'flush' when calling _req.write(). 
This was due to my framework being originally written
for modpy 2.x.  Now second output appears, but only a
fraction of it.  It appears to drop output after a
certain length.  Basically, when I try to write too
long string through the second _req.write() call, it
gets truncated (at least in mozilla).  In konqueror,
the second output doesn't appear at all.  Grrr.

Oh yeah, I did try various combinations of flushing or
telling the write to flush, but there was no real
improvement.

I haven't really kept up with the latest changes in
3.x, but there didn't seem to be anything in the docs
or in the mailing list.

Thanks for your help!

Chris



		
__________________________________ 
Do you Yahoo!? 
Yahoo! Small Business - Try our new resources site!
http://smallbusiness.yahoo.com/resources/ 
From list at joreybump.com  Fri Mar 25 16:04:43 2005
From: list at joreybump.com (Jorey Bump)
Date: Fri Mar 25 16:04:51 2005
Subject: [mod_python] Due to design of code util.FieldStorage
	causes	MemoryError on V.Large files
In-Reply-To: <1111781813.2944.122.camel@localhost.localdomain>
References: <42443ADB.4040001@copyrightwitness.net>	
	<42444571.1050605@joreybump.com>	
	<c298f2d70503251204344263c7@mail.gmail.com>
	<1111781813.2944.122.camel@localhost.localdomain>
Message-ID: <42447CEB.60606@joreybump.com>

Jamie Becker wrote:

> Since people download ISO's via HTTP all the time, it's best to err in
> the realm of possibility where possible and assume that sometimes they'd
> upload ISO's via HTTP as well. (http://www.linuxiso.org, for example.)
> HTTP has some unique flexibility and security advantages, especially
> over FTP. Not that I recommend large files over HTTP either, but there
> are circumstances where I can see that functionality being useful and
> within the realm of good design.

I routinely perform DoS attacks on my home network, usually whenever 
there is a new Knoppix or Slackware release. :) Even with DSL, the 
effect on my throughput can be severe enough that I usually run these 
tasks overnight. The mirrors I use are meant to support a one-to-many 
relationship, but some of them are under a strain simply returning such 
large files and there is a limit to how many simultaneous connections 
they can support. Can you imagine if the situation was reversed, and 
everyone was *uploading* an ISO? Clearly there is a difference, which 
you can simulate somewhat by trying to download several ISOs to one 
machine.

You're right that uploading files via a browser is useful, and I 
incorporate it regularly in applications for nontechnical users, but I 
can't think of a single server I admin on which I would consider using 
HTTP for ISO uploads. This implies a technical use that is appropriate 
for FTP, or rsync or compressed scp/sftp if the users have shell accounts.

> Another example is uploading a zipped-up directory of photographs for a
> photo gallery, rather than go through an individual file upload for each
> one. HTTP can be very good at these sorts of things, while FTP can be
> hazardous at best.

Many transfer protocols are optimized for improved bandwidth usage and 
data integrity, both areas that aren't as well supported in HTTP uploads 
(will your browser automatically gzip your ISO or report server-side 
errors?).

The main problem with FTP is that it's a multiport protocol, which is 
out-of-place in today's firewalled world. It's still better than HTTP 
because it provides better feedback about the destination and supports 
many more commands. Security concerns can be minimized by chrooting 
users to home directories. But, yes, FTP generally sucks and sftp gives 
away the store by requiring a shell account. WebDAV is still immature 
and requires many layers of administration. It will be nice when someone 
develops a simple, secure transfer protocol that isn't attacked by the 
RIAA or used as a virus distribution mechanism.




From chagner at yahoo.com  Fri Mar 25 16:21:58 2005
From: chagner at yahoo.com (Chris Hagner)
Date: Fri Mar 25 16:22:31 2005
Subject: [mod_python] _req.write buffer/flush question
In-Reply-To: 6667
Message-ID: <20050325212158.83618.qmail@web41001.mail.yahoo.com>

One last thing...

The amount of the truncation of the second write
output seems to vary... 95% of the time it appears to
cut off at the same place.  But approx 5% of the time
a bit more is able to appear.  Not sure if this helps
to decipher what's happening.

Chris

--- Chris Hagner <chagner@yahoo.com> wrote:
> Hi there,
> 
> I am trying to figure out some strangeness that I'm
> observing when having > 1 _req.write() statements. 
> I
> use a templating system, os my first call to
> _req.write() gets the output of rendered HTML
> template.  The second call is used when I turn on my
> own internal debugging which dumps more information
> to
> the browser (thus simplifying tracking down values
> and
> settings).  This all worked fine under modpy 2.x but
> I'm noticing that in 3.1 only a fraction of the
> second
> call of _req.write() is showing up in the browser.
> 
> Initially, the second output didn't appear at all
> until I turned off 'flush' when calling
> _req.write(). 
> This was due to my framework being originally
> written
> for modpy 2.x.  Now second output appears, but only
> a
> fraction of it.  It appears to drop output after a
> certain length.  Basically, when I try to write too
> long string through the second _req.write() call, it
> gets truncated (at least in mozilla).  In konqueror,
> the second output doesn't appear at all.  Grrr.
> 
> Oh yeah, I did try various combinations of flushing
> or
> telling the write to flush, but there was no real
> improvement.
> 
> I haven't really kept up with the latest changes in
> 3.x, but there didn't seem to be anything in the
> docs
> or in the mailing list.
> 
> Thanks for your help!
> 
> Chris
> 
> 
> 
> 		
> __________________________________ 
> Do you Yahoo!? 
> Yahoo! Small Business - Try our new resources site!
> http://smallbusiness.yahoo.com/resources/ 
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
>
http://mailman.modpython.org/mailman/listinfo/mod_python
> 


		
__________________________________ 
Do you Yahoo!? 
Yahoo! Small Business - Try our new resources site!
http://smallbusiness.yahoo.com/resources/ 
From nicolas.lehuen at gmail.com  Fri Mar 25 16:52:40 2005
From: nicolas.lehuen at gmail.com (Nicolas Lehuen)
Date: Fri Mar 25 16:52:41 2005
Subject: [mod_python] file upload very slow in fieldStorage
In-Reply-To: <4244729A.3050707@dd.revealed.net>
References: <4243F661.6090309@copyrightwitness.net>
	<424439D6.7080900@encorp.com>
	<c298f2d705032512084003206@mail.gmail.com>
	<4244729A.3050707@dd.revealed.net>
Message-ID: <c298f2d7050325135231e043d7@mail.gmail.com>

I've entered this in the JIRA bug repository :

http://issues.apache.org/jira/browse/MODPYTHON-40

Regards,
Nicolas


On Fri, 25 Mar 2005 14:20:42 -0600, Nick <nick@dd.revealed.net> wrote:
> Nicolas Lehuen wrote:
> > Like I've wrote in another mail, FieldStorage will stream only if the
> > Content-Disposition header of the file part of the POST entity
> > contains a filename attribute (see mod_python/util.py line 169). Maybe
> > we should change this behaviour :
> >
> > 1) Always stream to disk unless told otherwise
> 
> I would agree this should be done.  Regardless of whether HTTP should or
> should not be used for huge file uploads, it does leave you open to DoS.
> 
> Nick
>
From chagner at yahoo.com  Fri Mar 25 17:24:36 2005
From: chagner at yahoo.com (Chris Hagner)
Date: Fri Mar 25 17:24:39 2005
Subject: [mod_python] _req.write buffer/flush question
In-Reply-To: 6667
Message-ID: <20050325222437.18125.qmail@web41014.mail.yahoo.com>

Okay last one (I promise)... apparently if the first
output string written is large enough, the second
output string doesn't show up at all in the browser. 
Thus, there's some dependency between the size of the
first write and the amount of output allowed through
the second.

Chris

--- Chris Hagner <chagner@yahoo.com> wrote:
> One last thing...
> 
> The amount of the truncation of the second write
> output seems to vary... 95% of the time it appears
> to
> cut off at the same place.  But approx 5% of the
> time
> a bit more is able to appear.  Not sure if this
> helps
> to decipher what's happening.
> 
> Chris
> 




		
__________________________________ 
Do you Yahoo!? 
Yahoo! Small Business - Try our new resources site!
http://smallbusiness.yahoo.com/resources/ 
From grahamd at dscpl.com.au  Fri Mar 25 17:31:30 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Fri Mar 25 17:31:36 2005
Subject: [mod_python] _req.write buffer/flush question
In-Reply-To: <20050325222437.18125.qmail@web41014.mail.yahoo.com>
References: <20050325222437.18125.qmail@web41014.mail.yahoo.com>
Message-ID: <e8e2024419b25826fa6d189cb132beae@dscpl.com.au>

Are you or the templating system you are using set the outgoing
content length?

If possible, you might like to post a cut down version of your
code which demonstrates the problem.

On 26/03/2005, at 9:24 AM, Chris Hagner wrote:

> Okay last one (I promise)... apparently if the first
> output string written is large enough, the second
> output string doesn't show up at all in the browser.
> Thus, there's some dependency between the size of the
> first write and the amount of output allowed through
> the second.
>
> Chris
>
> --- Chris Hagner <chagner@yahoo.com> wrote:
>> One last thing...
>>
>> The amount of the truncation of the second write
>> output seems to vary... 95% of the time it appears
>> to
>> cut off at the same place.  But approx 5% of the
>> time
>> a bit more is able to appear.  Not sure if this
>> helps
>> to decipher what's happening.
>>
>> Chris
>>
>
>
>
>
> 		
> __________________________________
> Do you Yahoo!?
> Yahoo! Small Business - Try our new resources site!
> http://smallbusiness.yahoo.com/resources/
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python

From grahamd at dscpl.com.au  Fri Mar 25 18:18:06 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Fri Mar 25 18:18:12 2005
Subject: [mod_python] apache2 won't load mod_python
In-Reply-To: <1f9401c53159$2d9be910$080aa8c0@DAVE>
References: <04e901c52edf$de95ef80$080aa8c0@DAVE>
	<c298f2d705032205231265156@mail.gmail.com>
	<051d01c52ee8$4279dc20$080aa8c0@DAVE>
	<5081d658c82d29e78430c055b579139c@dscpl.com.au>
	<1f9401c53159$2d9be910$080aa8c0@DAVE>
Message-ID: <adc2b5420d1ad4bf7cbde7f897dcd0ee@dscpl.com.au>

Good to hear. BTW, in one of my emails I mentioned about issues with
output of PyErr_Print() not being flushed to log promptly. Turns out
there is a FAQ entry about flushing issues.

http://www.modpython.org/FAQ/faqw.py?req=show&file=faq02.003.htp

It says that restarting of Apache will cause stderr to be flushed,
but don't understand why an explicit flush couldn't be done. Will
need to experiment. :-)

On 26/03/2005, at 3:39 AM, Dave Britton wrote:

> Graham,
> It turned out that there actually was another version of python that 
> had been installed without my knowledge that was interfering with 
> apache2 finding the right path. I would never have suspected or found 
> this without your clues. Once I removed it and rebuilt everything, my 
> upgrade to apache2 and mod_python 3 works.
>
> Thanks for helping me track this down! I really appreciate it.
>
> -Dave
> ----- Original Message ----- From: "Graham Dumpleton" 
> <grahamd@dscpl.com.au>
> To: "Dave Britton" <dave@davebritton.com>
> Cc: <nicolas@lehuen.com>; <mod_python@modpython.org>
> Sent: Tuesday, March 22, 2005 4:13 PM
> Subject: Re: [mod_python] apache2 won't load mod_python
>
>
>> How many versions of Python are installed on your system? You appear 
>> to
>> be trying to use the one in /usr/local, is that the one you actually
>> want? When you configured Apache, did you tell it to use a particular
>> version or simply use whatever it could find? Have you got PYTHONPATH
>> set manually in your environment or that of Apache?
>>
>> Anyway, this particular sort of problem is generally the result of 
>> issues
>> with there being multiple versions of Python on a system, or a missing
>> or incomplete install of the Python side of the mod_python system. Go
>> through each of the site-packages directories for each version of 
>> Python
>> you have and see which have a mod_python directory, when the files 
>> were
>> copied into the directory and try and work out which version of 
>> mod_python
>> the files may be for. If a mod_python installation is 3.X, it will 
>> have
>> psp.py in the Python mod_python package directory. Doing this may help
>> clarify for you what went where and what version Apache might be 
>> trying
>> to load.
>>
>> I wander whether the mod_python module when it is being loaded from
>> Apache should dump out to the Apache error log the contents of 
>> sys.path.
>> This may aid in debugging these sort of problems as right now it isn't
>> easily detectable where Apache may be looking. The startup message may
>> say which version of Python the Apache module was compiled against, 
>> but
>> this is not necessarily a true indication of where it is looking for
>> modules.
>>
>> BTW, also read:
>>
>>   http://www.modpython.org/FAQ/faqw.py?req=show&file=faq02.001.htp
>>
>> Also tell us what operating system you are using.
>>
>> Graham
>>

From scottie at mischko.com  Sat Mar 26 16:29:25 2005
From: scottie at mischko.com (Scott Chapman)
Date: Sat Mar 26 16:29:27 2005
Subject: [mod_python] session locking causes hang with mpservlets
Message-ID: <4245D435.3020002@mischko.com>

Using linux - prefork mpm.
I set my httpd.conf:
StartServers 1
MinSpareServers 1
MaxSpareServers 0
MaxClients 1
MaxRequestsPerChild  0

for this test run.

Here's my UberServlet:
-------------- snip --------------
from mod_python.servlet import Servlet

class uberservlet(Servlet):
     use_session = True

     def respond(self):
         self.req.log_error('Responding')
 
methodName=self.req.uri[:len(self.req.uri)-len(self.req.path_info)][1:]
         self.req.log_error('methodName: '+methodName)
         if methodName == 'index':
             self.req.log_error('Redirecting to login')
             self.internal_redirect('/login')
         if methodName == 'login':
             self.req.log_error('Doing login')
             self.writeln ('<h1>login_here</h1>')
             return True

     def wrapup(self):
         Servlet.wrapup(self)
-------------- snip --------------
When I make Sesssion lock=0, it doesn't hang.
When I don't set lock = 0 (the default) it hangs when trying to 
establish the session:
   self.session = Session.Session(self.req, timeout=self.session_timeout)

What problems do I look forward to if I run with lock=0?

Quoting Grisha:
"One thing you may try as an experiment is to disable session locking
(Session(lock=0)). It will still use locking for access to the DBM, but 
it won't lock individual sessions."

Grisha calls this "an experiment".  Can anyone tell me why locking is 
failing and what will happen if I run with locking off?

TIA,
Scott
From grahamd at dscpl.com.au  Sat Mar 26 17:01:52 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Sat Mar 26 17:02:00 2005
Subject: [mod_python] session locking causes hang with mpservlets
In-Reply-To: <4245D435.3020002@mischko.com>
References: <4245D435.3020002@mischko.com>
Message-ID: <f52b2115daddfae9b3da993bb53ee176@dscpl.com.au>

Try adding:

   self.session.unlock()

just before the internal redirect and see what happens.

I don't believe this should be required as mpservlets is using
its own internal redirect which actually saves the session before
doing the real internal redirect.

Anyway, this "experiment" might at least help you to understand
things better.

BTW, I am assuming when you say "make session lock=0", you mean
setting "use_session" appropriately. Is that correct?

Graham

On 27/03/2005, at 7:29 AM, Scott Chapman wrote:

> Using linux - prefork mpm.
> I set my httpd.conf:
> StartServers 1
> MinSpareServers 1
> MaxSpareServers 0
> MaxClients 1
> MaxRequestsPerChild  0
>
> for this test run.
>
> Here's my UberServlet:
> -------------- snip --------------
> from mod_python.servlet import Servlet
>
> class uberservlet(Servlet):
>     use_session = True
>
>     def respond(self):
>         self.req.log_error('Responding')
> methodName=self.req.uri[:len(self.req.uri)-len(self.req.path_info)][1:]
>         self.req.log_error('methodName: '+methodName)
>         if methodName == 'index':
>             self.req.log_error('Redirecting to login')
>             self.internal_redirect('/login')
>         if methodName == 'login':
>             self.req.log_error('Doing login')
>             self.writeln ('<h1>login_here</h1>')
>             return True
>
>     def wrapup(self):
>         Servlet.wrapup(self)
> -------------- snip --------------
> When I make Sesssion lock=0, it doesn't hang.
> When I don't set lock = 0 (the default) it hangs when trying to 
> establish the session:
>   self.session = Session.Session(self.req, 
> timeout=self.session_timeout)
>
> What problems do I look forward to if I run with lock=0?
>
> Quoting Grisha:
> "One thing you may try as an experiment is to disable session locking
> (Session(lock=0)). It will still use locking for access to the DBM, 
> but it won't lock individual sessions."
>
> Grisha calls this "an experiment".  Can anyone tell me why locking is 
> failing and what will happen if I run with locking off?
>
> TIA,
> Scott
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python

From scottie at mischko.com  Sat Mar 26 17:24:13 2005
From: scottie at mischko.com (Scott Chapman)
Date: Sat Mar 26 17:24:15 2005
Subject: [mod_python] session locking causes hang with mpservlets
In-Reply-To: <f52b2115daddfae9b3da993bb53ee176@dscpl.com.au>
References: <4245D435.3020002@mischko.com>
	<f52b2115daddfae9b3da993bb53ee176@dscpl.com.au>
Message-ID: <4245E10D.2090606@mischko.com>

Graham Dumpleton wrote:

> Try adding:
>
>   self.session.unlock()
>
> just before the internal redirect and see what happens.
>
> I don't believe this should be required as mpservlets is using
> its own internal redirect which actually saves the session before
> doing the real internal redirect.

I'll try that.

> Anyway, this "experiment" might at least help you to understand
> things better.
>
> BTW, I am assuming when you say "make session lock=0", you mean
> setting "use_session" appropriately. Is that correct?

See my code snippet below.  I set use_session in the top of the class.

I mean I changed the servlet.py where it establishes the session to 
include "lock=0" explicitly.

> On 27/03/2005, at 7:29 AM, Scott Chapman wrote:

>> Here's my UberServlet:
>> -------------- snip --------------
>> from mod_python.servlet import Servlet
>>
>> class uberservlet(Servlet):
>>     use_session = True
>

From scottie at mischko.com  Sat Mar 26 17:41:28 2005
From: scottie at mischko.com (Scott Chapman)
Date: Sat Mar 26 17:41:30 2005
Subject: [mod_python] session locking causes hang with mpservlets
In-Reply-To: <f52b2115daddfae9b3da993bb53ee176@dscpl.com.au>
References: <4245D435.3020002@mischko.com>
	<f52b2115daddfae9b3da993bb53ee176@dscpl.com.au>
Message-ID: <4245E518.9020305@mischko.com>


My previous post didn't address the issue correctly.
I made some error logging in mpservlets to see where things stop.  In 
this case, the internal redirect is not being called.  It never gets 
that far:
[Sat Mar 26 14:34:02 2005] [error] [client 192.168.1.127] HANDLER - 
calling auth
[Sat Mar 26 14:34:02 2005] [error] [client 192.168.1.127] HANDLER - 
calling prep
[Sat Mar 26 14:34:02 2005] [error] [client 192.168.1.127] PREP - 
clearing self.__out
[Sat Mar 26 14:34:02 2005] [error] [client 192.168.1.127] PREP - setting 
self.form
[Sat Mar 26 14:34:02 2005] [error] [client 192.168.1.127] PREP - calling 
__load_vars()
[Sat Mar 26 14:34:02 2005] [error] [client 192.168.1.127] PREP - setting 
self.session

-- end of log --

We never see "Redirecting to login" in the log.

So, the initial establishment of the session is failing, due to locking.

I have no idea why.

Scott


Graham Dumpleton wrote:

> Try adding:
>
>   self.session.unlock()
>
> just before the internal redirect and see what happens.
>
> I don't believe this should be required as mpservlets is using
> its own internal redirect which actually saves the session before
> doing the real internal redirect.
>
> Anyway, this "experiment" might at least help you to understand
> things better.
>
> BTW, I am assuming when you say "make session lock=0", you mean
> setting "use_session" appropriately. Is that correct?
>
> Graham
>
> On 27/03/2005, at 7:29 AM, Scott Chapman wrote:
>
>> Using linux - prefork mpm.
>> I set my httpd.conf:
>> StartServers 1
>> MinSpareServers 1
>> MaxSpareServers 0
>> MaxClients 1
>> MaxRequestsPerChild  0
>>
>> for this test run.
>>
>> Here's my UberServlet:
>> -------------- snip --------------
>> from mod_python.servlet import Servlet
>>
>> class uberservlet(Servlet):
>>     use_session = True
>>
>>     def respond(self):
>>         self.req.log_error('Responding')
>> methodName=self.req.uri[:len(self.req.uri)-len(self.req.path_info)][1:]
>>         self.req.log_error('methodName: '+methodName)
>>         if methodName == 'index':
>>             self.req.log_error('Redirecting to login')
>>             self.internal_redirect('/login')
>>         if methodName == 'login':
>>             self.req.log_error('Doing login')
>>             self.writeln ('<h1>login_here</h1>')
>>             return True
>>
>>     def wrapup(self):
>>         Servlet.wrapup(self)
>> -------------- snip --------------
>> When I make Sesssion lock=0, it doesn't hang.
>> When I don't set lock = 0 (the default) it hangs when trying to 
>> establish the session:
>>   self.session = Session.Session(self.req, timeout=self.session_timeout)
>>
>> What problems do I look forward to if I run with lock=0?
>>
>> Quoting Grisha:
>> "One thing you may try as an experiment is to disable session locking
>> (Session(lock=0)). It will still use locking for access to the DBM, 
>> but it won't lock individual sessions."
>>
>> Grisha calls this "an experiment".  Can anyone tell me why locking is 
>> failing and what will happen if I run with locking off?
>>
>> TIA,
>> Scott
>> _______________________________________________
>> Mod_python mailing list
>> Mod_python@modpython.org
>> http://mailman.modpython.org/mailman/listinfo/mod_python
>
>
>
>

From barry.pearce at copyrightwitness.net  Sun Mar 27 05:10:10 2005
From: barry.pearce at copyrightwitness.net (Barry Pearce)
Date: Sun Mar 27 05:08:20 2005
Subject: [mod_python] file upload very slow in fieldStorage
In-Reply-To: <c298f2d7050325135231e043d7@mail.gmail.com>
References: <4243F661.6090309@copyrightwitness.net>	
	<424439D6.7080900@encorp.com>	
	<c298f2d705032512084003206@mail.gmail.com>	
	<4244729A.3050707@dd.revealed.net>
	<c298f2d7050325135231e043d7@mail.gmail.com>
Message-ID: <42468682.6050601@copyrightwitness.net>

Hi,

um. The problem is in the streaming itself.
use of req.readline does not limit the amount of memory used. Should a 
binary file be uploaded it potentially loads everything into memory.

I believe that all readline() calls involved in file data with or 
without the content disposition header should use a limited readline() - 
I am currently experimenting with my fix and  a 64KB buffer size seems 
to work well. Although this highlights other issues - namely the line 
'sline = line.strip()'. If the line size is not even remotely close to 
the boundary line length then the strip will just eat another ~64KB of 
memory...

Ill post new code when Its working to my satisfaction.

Cheers,
Barry

Nicolas Lehuen wrote:
> I've entered this in the JIRA bug repository :
> 
> http://issues.apache.org/jira/browse/MODPYTHON-40
> 
> Regards,
> Nicolas
> 
> 
> On Fri, 25 Mar 2005 14:20:42 -0600, Nick <nick@dd.revealed.net> wrote:
> 
>>Nicolas Lehuen wrote:
>>
>>>Like I've wrote in another mail, FieldStorage will stream only if the
>>>Content-Disposition header of the file part of the POST entity
>>>contains a filename attribute (see mod_python/util.py line 169). Maybe
>>>we should change this behaviour :
>>>
>>>1) Always stream to disk unless told otherwise
>>
>>I would agree this should be done.  Regardless of whether HTTP should or
>>should not be used for huge file uploads, it does leave you open to DoS.
>>
>>Nick
>>
> 
From grahamd at dscpl.com.au  Sun Mar 27 19:31:00 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Sun Mar 27 19:31:11 2005
Subject: [mod_python] session locking causes hang with mpservlets
In-Reply-To: <4245E518.9020305@mischko.com>
References: <4245D435.3020002@mischko.com>
	<f52b2115daddfae9b3da993bb53ee176@dscpl.com.au>
	<4245E518.9020305@mischko.com>
Message-ID: <6d44e143a7e807ac17c12ff4bbda339b@dscpl.com.au>

Scott, did you work this out yet?

I had a little play with it, although I had to change your code first  
as what
you posted didn't even work. Needed to use code:

     def respond(self):
         self.req.log_error('Responding ' + self.req.uri)
          
#methodName=self.req.uri[:len(self.req.uri)- 
len(self.req.path_info)][1:]
          
methodName=self.req.uri[len(self.req.uri)-len(self.req.path_info):][1:]
         self.req.log_error('methodName: '+methodName)
         if methodName == 'index':
             #self.internal_redirect('/login')
              
prefix=self.req.uri[:len(self.req.uri)-len(self.req.path_info)]
             self.req.log_error('Redirecting to login '+prefix+'/login')
             self.internal_redirect(prefix+'/login')
         if methodName == 'login':
             self.req.log_error('Doing login')
             self.writeln ('<h1>login_here</h1>')
             return True

This may partly be because I wasn't doing it in document root.

Anyway, after some digging found that adding "self.session.unlock()"  
will
fix the problem but it has to be in the mpservlets Servlet class. Thus,  
it
may well be a issue that Daniel (author of mpservlets) may need to look  
at.

The change in mpservlets is:

     def __cleanup_session(self):
         if self.use_session and self.session is not None:
             self.session.save()
             self.session.unlock()
             self.session = None

Ie., add call to unlock() just after saving the session.

Normally this unlock() would be called, but only when the Session object
itself is deleted or by way of a cleanup function registered against the
request using req.register_cleanup().

The problem is that even though one sets self.session to None, this  
doesn't
mean it will be deleted immediately as one is in part at the mercy of  
the
Python garbage collector. That it isn't unlocked may actually keep it  
alive
longer and normally it may only be unlocked by request cleanup function
at which point it then gets destroyed.

Unfortunately, because your internal redirect loops back onto the same
servlet, the second time through it tries to lock the same session, but
where the prior hasn't been unlocked yet. Thus deadlock as lock is not
reentrant for same thread.

Thus, believe mpservlet possibly needs to be fixed, but might also  
question
your design anyway, there possibly being better ways of achieving what  
you
want. You might want to explain to the list what you are wanting to  
achieve
and you might get some helpful suggestions back.

Graham


On 27/03/2005, at 8:41 AM, Scott Chapman wrote:

>
> My previous post didn't address the issue correctly.
> I made some error logging in mpservlets to see where things stop.  In  
> this case, the internal redirect is not being called.  It never gets  
> that far:
> [Sat Mar 26 14:34:02 2005] [error] [client 192.168.1.127] HANDLER -  
> calling auth
> [Sat Mar 26 14:34:02 2005] [error] [client 192.168.1.127] HANDLER -  
> calling prep
> [Sat Mar 26 14:34:02 2005] [error] [client 192.168.1.127] PREP -  
> clearing self.__out
> [Sat Mar 26 14:34:02 2005] [error] [client 192.168.1.127] PREP -  
> setting self.form
> [Sat Mar 26 14:34:02 2005] [error] [client 192.168.1.127] PREP -  
> calling __load_vars()
> [Sat Mar 26 14:34:02 2005] [error] [client 192.168.1.127] PREP -  
> setting self.session
>
> -- end of log --
>
> We never see "Redirecting to login" in the log.
>
> So, the initial establishment of the session is failing, due to  
> locking.
>
> I have no idea why.
>
> Scott
>
>
> Graham Dumpleton wrote:
>
>> Try adding:
>>
>>   self.session.unlock()
>>
>> just before the internal redirect and see what happens.
>>
>> I don't believe this should be required as mpservlets is using
>> its own internal redirect which actually saves the session before
>> doing the real internal redirect.
>>
>> Anyway, this "experiment" might at least help you to understand
>> things better.
>>
>> BTW, I am assuming when you say "make session lock=0", you mean
>> setting "use_session" appropriately. Is that correct?
>>
>> Graham
>>
>> On 27/03/2005, at 7:29 AM, Scott Chapman wrote:
>>
>>> Using linux - prefork mpm.
>>> I set my httpd.conf:
>>> StartServers 1
>>> MinSpareServers 1
>>> MaxSpareServers 0
>>> MaxClients 1
>>> MaxRequestsPerChild  0
>>>
>>> for this test run.
>>>
>>> Here's my UberServlet:
>>> -------------- snip --------------
>>> from mod_python.servlet import Servlet
>>>
>>> class uberservlet(Servlet):
>>>     use_session = True
>>>
>>>     def respond(self):
>>>         self.req.log_error('Responding')
>>> methodName=self.req.uri[:len(self.req.uri)- 
>>> len(self.req.path_info)][1:]
>>>         self.req.log_error('methodName: '+methodName)
>>>         if methodName == 'index':
>>>             self.req.log_error('Redirecting to login')
>>>             self.internal_redirect('/login')
>>>         if methodName == 'login':
>>>             self.req.log_error('Doing login')
>>>             self.writeln ('<h1>login_here</h1>')
>>>             return True
>>>
>>>     def wrapup(self):
>>>         Servlet.wrapup(self)
>>> -------------- snip --------------
>>> When I make Sesssion lock=0, it doesn't hang.
>>> When I don't set lock = 0 (the default) it hangs when trying to  
>>> establish the session:
>>>   self.session = Session.Session(self.req,  
>>> timeout=self.session_timeout)
>>>
>>> What problems do I look forward to if I run with lock=0?
>>>
>>> Quoting Grisha:
>>> "One thing you may try as an experiment is to disable session locking
>>> (Session(lock=0)). It will still use locking for access to the DBM,  
>>> but it won't lock individual sessions."
>>>
>>> Grisha calls this "an experiment".  Can anyone tell me why locking  
>>> is failing and what will happen if I run with locking off?
>>>
>>> TIA,
>>> Scott
>>> _______________________________________________
>>> Mod_python mailing list
>>> Mod_python@modpython.org
>>> http://mailman.modpython.org/mailman/listinfo/mod_python
>>
>>
>>
>>

From grahamd at dscpl.com.au  Sun Mar 27 20:35:10 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Sun Mar 27 20:35:17 2005
Subject: [mod_python] session locking causes hang with mpservlets
In-Reply-To: <6d44e143a7e807ac17c12ff4bbda339b@dscpl.com.au>
References: <4245D435.3020002@mischko.com>
	<f52b2115daddfae9b3da993bb53ee176@dscpl.com.au>
	<4245E518.9020305@mischko.com>
	<6d44e143a7e807ac17c12ff4bbda339b@dscpl.com.au>
Message-ID: <c8f51f407304b22351a60022d12f4075@dscpl.com.au>


On 28/03/2005, at 10:31 AM, Graham Dumpleton wrote:
> The change in mpservlets is:
>
>     def __cleanup_session(self):
>         if self.use_session and self.session is not None:
>             self.session.save()
>             self.session.unlock()
>             self.session = None
>
> Ie., add call to unlock() just after saving the session.
>
> Normally this unlock() would be called, but only when the Session 
> object
> itself is deleted or by way of a cleanup function registered against 
> the
> request using req.register_cleanup().
>
> The problem is that even though one sets self.session to None, this 
> doesn't
> mean it will be deleted immediately as one is in part at the mercy of 
> the
> Python garbage collector. That it isn't unlocked may actually keep it 
> alive
> longer and normally it may only be unlocked by request cleanup function
> at which point it then gets destroyed.
>
> Unfortunately, because your internal redirect loops back onto the same
> servlet, the second time through it tries to lock the same session, but
> where the prior hasn't been unlocked yet. Thus deadlock as lock is not
> reentrant for same thread.
>
> Thus, believe mpservlet possibly needs to be fixed, but might also 
> question
> your design anyway, there possibly being better ways of achieving what 
> you
> want. You might want to explain to the list what you are wanting to 
> achieve
> and you might get some helpful suggestions back.

Actually, it is the registered cleanup function in Session code that 
keeps
the session object alive and locked. This is interesting, as it possibly
means that the general solution we give to people about session locking
problems and internal redirects should be changed to:

   self.session.save()
   self.session.unlock()
   req.internal_redirect(...)

If you don't include the unlock(), any redirect back onto the same 
handler
will cause a deadlock as was the case with the mpservlets case.

About time for a FAQ entry for redirects and mention this. I'll add it 
to my
list of things to do. :-)

Graham

From unselfishly at gmail.com  Mon Mar 28 07:37:49 2005
From: unselfishly at gmail.com (Keerati Inochanon)
Date: Mon Mar 28 07:38:52 2005
Subject: [mod_python] Question about vampire module loading
Message-ID: <b16e3ab705032804374c7af36d@mail.gmail.com>

Hi,

I have been experimenting with vampire a little, and having problems
with module loading. I store handlers in $documentroot and some other
handlers in $documentroot/modules.

Here is my rough directory structure:
$documentroot:
index.html index.py login.html login.py modules register.html register.py

$documentroot/modules:
SessionManagement.py Settings.py UserManagement.py

In my login.py file, I import the module using vampire importModule mechanism:

config = vampire.loadConfig(__req__, ".vampire")
directory = config.get("Modules", "common")
UserManagement = vampire.importModule("UserManagement", directory)
SessionManagement = vampire.importModule("SessionManagement", directory)
--

In my UserManagement.py, I also need some stuff from
SessionManagement, so I also do:

config = vampire.loadConfig(__req__, ".vampire")
directory = config.get("Modules", "common")
SessionManagement = vampire.importModule("SessionManagement", directory)
Settings = vampire.importModule("Settings", directory)
--

My handler_html in login.py:

def handler_html(req, error=''):
  if not os.path.exists(req.filename):
    return apache.DECLINED

  # Immediately redirect to the main page if session exists
  session = SessionManagement.checkSession(req)
  if session['isAuthorized'] and session['username']:
    util.redirect(req, 'main.html')

  message = ''
  if error == 'invalid':
    message = 'invalid username/password'
    
  def renderTemplate(template, error):
    template.result.content = error
  
  html = open(req.filename, 'r')
  template = HTMLTemplate.Template(renderTemplate, html.read())
  html.close()

def handler_html(req, error=''):
  if not os.path.exists(req.filename):
    return apache.DECLINED

  # Immediately redirect to the main page if session exists
  session = SessionManagement.checkSession(req)
  if session['isAuthorized'] and session['username']:
    util.redirect(req, 'main.html')

  message = '';
  if error == 'invalid':
    message = 'invalid username/password'
    
  def renderTemplate(template, error):
    template.result.content = error
  
  html = open(req.filename, 'r')
  template = HTMLTemplate.Template(renderTemplate, html.read())
  html.close()
--

My httpd.conf:

<Directory "/home/www/testing">
        PythonOption VampireDirectoryIndex index.html
        SetHandler python-program
        PythonHandler vampire
        PythonPath 'sys.path'
#       PythonOption VampireDefaultHandlers On
        PythonDebug On
        <Files ~ "^\.vampire">
          Order allow,deny
          deny from all
        </Files>
</Directory>
--

When accessing login.html, I get this error:
Mod_python error: "PythonHandler vampire"

Traceback (most recent call last):

  File "/usr/lib/python2.3/site-packages/mod_python/apache.py", line
299, in HandlerDispatch
    result = object(req)

  File "/usr/lib/python2.3/site-packages/vampire/lookup.py", line 585,
in _handler
    module = _import(req,file)

  File "/usr/lib/python2.3/site-packages/vampire/lookup.py", line 53, in _import
    module = _moduleCache.importModule(name,directory,req)

  File "/usr/lib/python2.3/site-packages/vampire/cache.py", line 181,
in importModule
    execfile(file,module.__dict__)

  File "/home/www/testing/login.py", line 9, in ?
    UserManagement = vampire.importModule("UserManagement", directory)

  File "/usr/lib/python2.3/site-packages/vampire/cache.py", line 306,
in importModule
    return _moduleCache.importModule(name,path,req)

  File "/usr/lib/python2.3/site-packages/vampire/cache.py", line 181,
in importModule
    execfile(file,module.__dict__)

  File "/home/www/testing/modules/UserManagement.py", line 8, in ?
    config = vampire.loadConfig(__req__, ".vampire")

  File "/usr/lib/python2.3/site-packages/vampire/config.py", line 263,
in loadConfig
    return _configCache.loadConfig(req,name)

  File "/usr/lib/python2.3/site-packages/vampire/config.py", line 198,
in loadConfig
    req.vampire = { "config": {} }

AttributeError: 'NoneType' object has no attribute 'vampire'
--

I was wondering whether what I am doing is allowed or not. What should
I do to get around it? I am using vampire-1.5. Python, mod_python, and
vampire are still pretty new to me. Please let me know if you need any
further information. Thank you very much in advance.

Best regards,
Keerati
From dpopowich at comcast.net  Mon Mar 28 09:38:19 2005
From: dpopowich at comcast.net (Daniel Popowich)
Date: Mon Mar 28 09:38:36 2005
Subject: [mod_python] session locking causes hang with mpservlets
In-Reply-To: <c8f51f407304b22351a60022d12f4075@dscpl.com.au>
References: <4245D435.3020002@mischko.com>
	<f52b2115daddfae9b3da993bb53ee176@dscpl.com.au>	<4245E518.9020305@mischko.com>
	<6d44e143a7e807ac17c12ff4bbda339b@dscpl.com.au>
	<c8f51f407304b22351a60022d12f4075@dscpl.com.au>
Message-ID: <16968.5851.917906.872291@greenmonster.local>


Graham Dumpleton writes:
> 
> On 28/03/2005, at 10:31 AM, Graham Dumpleton wrote:
> > The change in mpservlets is:
> >
> >     def __cleanup_session(self):
> >         if self.use_session and self.session is not None:
> >             self.session.save()
> >             self.session.unlock()
> >             self.session = None
> >
> > Ie., add call to unlock() just after saving the session.
> >
> > Normally this unlock() would be called, but only when the Session
> > object itself is deleted or by way of a cleanup function
> > registered against the request using req.register_cleanup().
> >
> > The problem is that even though one sets self.session to None,
> > this doesn't mean it will be deleted immediately as one is in part
> > at the mercy of the Python garbage collector. That it isn't
> > unlocked may actually keep it alive longer and normally it may
> > only be unlocked by request cleanup function at which point it
> > then gets destroyed.

Thanks for digging into this Graham.  Yes, I thought this would be
sufficient:

            self.session.save()
            self.session = None

as the garbage collector would clean up the session.  I have used this
extensively with and without internal redirects, without error or
deadlock, but as you say, you're at the whimsy of the garbage
collector.

To be on the safe side, I will patch mpservlets to include the explict
call to unlock().

Daniel Popowich
-----------------------------------------------
http://home.comcast.net/~d.popowich/mpservlets/

From nick at dd.revealed.net  Mon Mar 28 09:49:15 2005
From: nick at dd.revealed.net (Nick)
Date: Mon Mar 28 09:49:40 2005
Subject: [mod_python] session locking causes hang with mpservlets
In-Reply-To: <16968.5851.917906.872291@greenmonster.local>
References: <4245D435.3020002@mischko.com>	<f52b2115daddfae9b3da993bb53ee176@dscpl.com.au>	<4245E518.9020305@mischko.com>	<6d44e143a7e807ac17c12ff4bbda339b@dscpl.com.au>	<c8f51f407304b22351a60022d12f4075@dscpl.com.au>
	<16968.5851.917906.872291@greenmonster.local>
Message-ID: <4248196B.7000705@dd.revealed.net>

Daniel Popowich wrote:
>>>The problem is that even though one sets self.session to None,
>>>this doesn't mean it will be deleted immediately as one is in part
>>>at the mercy of the Python garbage collector.
[...]
> Thanks for digging into this Graham.  Yes, I thought this would be
> sufficient:
> 
>             self.session.save()
>             self.session = None
> 
> as the garbage collector would clean up the session.

I have noticed that even calls explicitly to gc.collect() don't necessarily 
do the job, either... so in general, if you've got an object with an 
explicit __del__ method, it's best to del it explicitly.

Nick
From scottie at mischko.com  Mon Mar 28 13:20:39 2005
From: scottie at mischko.com (Scott Chapman)
Date: Mon Mar 28 13:20:42 2005
Subject: [mod_python] session locking causes hang with mpservlets
In-Reply-To: <6d44e143a7e807ac17c12ff4bbda339b@dscpl.com.au>
References: <4245D435.3020002@mischko.com>
	<f52b2115daddfae9b3da993bb53ee176@dscpl.com.au>
	<4245E518.9020305@mischko.com>
	<6d44e143a7e807ac17c12ff4bbda339b@dscpl.com.au>
Message-ID: <42484AF7.3010201@mischko.com>

Graham Dumpleton wrote:

> Unfortunately, because your internal redirect loops back onto the same
> servlet, the second time through it tries to lock the same session, but
> where the prior hasn't been unlocked yet. Thus deadlock as lock is not
> reentrant for same thread.
>
> Thus, believe mpservlet possibly needs to be fixed, but might also  
> question
> your design anyway, there possibly being better ways of achieving 
> what  you
> want. You might want to explain to the list what you are wanting to  
> achieve
> and you might get some helpful suggestions back.

Graham,
Thank you very much for the good digging here.  Your changes keep things 
from hanging. 

I've noticed a new problem which I'll send in another email as this 
thread is in good shape now.

My design is using a uberServlet.  It'll be included in the other email 
mentioned above.

Scott
From scottie at mischko.com  Mon Mar 28 13:48:15 2005
From: scottie at mischko.com (Scott Chapman)
Date: Mon Mar 28 13:48:18 2005
Subject: [mod_python] Internal redirect does not end processing and session
 is not saved on internal redirect - mpservlets
Message-ID: <4248516F.3090903@mischko.com>

Here's my uberServlet which demonstrates this "interesting" behavior.  
If I use the external redirect and comment out the internal redirect, 
everything works perfectly.

Note that I have changed mpservlets to call prep BEFORE auth.  This 
makes better sense to me.

uberServlet:

> from mod_python.servlet import Servlet
> from mod_python import apache,util
> from pages import Pages
> import data_object
>
> class uberservlet(Servlet):
>     use_session = True
>
>     def prep(self):
>         Servlet.prep(self)
>
>     def auth(self):
>         pages=Pages()
>         
> methodName=self.req.uri[:len(self.req.uri)-len(self.req.path_info)][1:]
>         self.req.log_error('AUTH - methodName: ' + methodName)
>         if methodName in ['login','doLogin','logout']:
>             return
>         method=getattr(pages,methodName,None)
>         if method:
>             self.req.log_error('AUTH - method found')
>
>             # Check to see if the page requires user to be logged in
>             requiresLogin = data_object.requires_login(methodName)
>
>             if requiresLogin == 'unknown':
>                 self.req.log_error('AUTH - page: %s not found in pages 
> table' % methodName)
>                 raise apache.SERVER_RETURN, apache.HTTP_NOT_FOUND
>
>             if not requiresLogin:
>                 self.req.log_error('AUTH - page: %s does not require 
> login' % methodName)
>                 return
>
>             if requiresLogin:
>                 self.req.log_error('AUTH - page: %s requires login' % 
> methodName)
>                 userName = self.session.get('username', None)
>                 # Check to see if the user is logged in
>                 if userName:
>                     self.req.log_error('AUTH - user already logged in: 
> %s' % userName)
>                     # Check that the user has access to the page.
>                     access_ok = 
> data_object.check_access(methodName,userName)
>                     if access_ok:
>                         return
>                     else:
>                         raise apache.SERVER_RETURN, apache.HTTP_FORBIDDEN
>                 else:
>                     self.req.log_error('AUTH - user not logged in')
>                     self.session['returnto'] = self.req.unparsed_uri
>                     self.req.log_error('AUTH - sid when returnto set: 
> ' + str(self.session.id()))
>                     self.req.log_error('AUTH - returnto: ' + 
> self.session['returnto'])
>                     self.req.log_error('AUTH - internal redirect to 
> login')
>                     #Tried doing an internal redirect here but
>                     #things don't go well. Code is executed after the 
> internal redirect.
>                     #The cookie with the session info is not sent to 
> the client here so the returnto is lost.
>                     self.session.save()
>                     self.session.unlock()
>                     self.req.internal_redirect('/login')
>                     
>                     #util.redirect(self.req,'/login')
>
>                     #The next line should never be reached.  
>                     #It is reached when internal redirect is done, not 
> when external is done.
>                     self.req.log_error('AUTH - logging after redirect 
> - should never happen!')
>         else:
>             self.req.log_error('AUTH - method not found')
>             raise apache.SERVER_RETURN, apache.HTTP_NOT_FOUND
>         return
>         
>     def respond(self):
>         
> methodName=self.req.uri[:len(self.req.uri)-len(self.req.path_info)][1:]
>         self.req.log_error ('UBERSERVLET RESPOND - method name: %s' % 
> methodName)
>         pages=Pages()
>         method=getattr(pages,methodName,None)
>         if method:
>             self.req.log_error('UBERSERVLET RESPOND - calling method')
>             if self.form.list:
>                 self.write(method(self,self.form))
>             else:
>                 self.write(method(self))
>             return True
>         else:
>             self.req.log_error('UBERSERVLET RESPOND - method not found')
>             return False
>         


      
Here's the "pages" contents:

> from mod_python import util, apache
> import data_object
> import templates
> import table_builder
>
> class Pages:
>     def login(self,uberServlet):
>         center=templates.login_template
>         return templates.site_template(2,center=center,menu=False)
>
>
>     def doLogin(self,uberServlet, form):
>         login = form.getfirst('login')
>         password = form.getfirst('password')
>         if data_object.checkLoginAndPassword(login, password):
>             uberServlet.session['username'] = login
>             uberServlet.req.log_error('DOLOGIN - username and password 
> confirmed')
>             uberServlet.req.log_error('DOLOGIN - sid: ' + 
> str(uberServlet.session.id()))
>             return_to = uberServlet.session.pop('returnto','/index')
>             uberServlet.req.log_error('DOLOGIN - return_to' + return_to)
>             util.redirect(uberServlet.req,return_to)
>         else:
>             return self.login()
>
>     def table(self,uberServlet):
>         return ....


Here's my log of the session, using internal redirect with code above:

> --- session cookies cleared in browser and request for /table 
> submitted ----
> HANDLER-calling prep
> HANDLER-calling auth
> AUTH - methodName: table
> AUTH - method found
> AUTH - page: table requires login
> AUTH - user not logged in
> AUTH - sid when returnto set: 01e782d539e43cf4d490196e104bd257
> AUTH - returnto: /table
> AUTH - internal redirect to login
> HANDLER-calling prep
> HANDLER-calling auth
> AUTH - methodName: login
> HANDLER-calling respond
> UBERSERVLET RESPOND - method name: login
> UBERSERVLET RESPOND - calling method
> HANDLER-calling wrapup
> AUTH - logging after redirect - should never happen!
> HANDLER-calling respond
> UBERSERVLET RESPOND - method name: table
> UBERSERVLET RESPOND - calling method
> HANDLER-calling wrapup
> ---- login screen in browser ----
> HANDLER-calling prep, referer: http://nsnserver/table
> HANDLER-calling auth, referer: http://nsnserver/table
> AUTH - methodName: doLogin, referer: http://nsnserver/table
> HANDLER-calling respond, referer: http://nsnserver/table
> UBERSERVLET RESPOND - method name: doLogin, referer: 
> http://nsnserver/table
> UBERSERVLET RESPOND - calling method, referer: http://nsnserver/table
> DOLOGIN - username and password confirmed, referer: http://nsnserver/table
> DOLOGIN - sid: b8efe481dabadabdba61b7301de32f98, referer: 
> http://nsnserver/table
> DOLOGIN - return_to/index, referer: http://nsnserver/table
> ---- table contents shows up in browser as text (no headers sent back 
> to browser) followed by redirect

Here's what showed in the browser (not view source):

<-snip->
</tr>
</tbody>
</table>
</body>
</html>
HTTP/1.1 302 Found
Date: Mon, 28 Mar 2005 18:41:40 GMT
Server: Apache/2.0.53 (Unix) mod_ssl/2.0.53 OpenSSL/0.9.7d 
mod_python/3.1.4 Python/2.4.1c2
Location: /index
Keep-Alive: timeout=15, max=99
Connection: Keep-Alive
Transfer-Encoding: chunked
Content-Type: text/plain

38
<p>The document has moved <a href="/index">here</a></p>

0

Cordially,
Scott
From grahamd at dscpl.com.au  Mon Mar 28 16:38:03 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Mon Mar 28 16:38:15 2005
Subject: [mod_python] Question about vampire module loading
In-Reply-To: <b16e3ab705032804374c7af36d@mail.gmail.com>
References: <b16e3ab705032804374c7af36d@mail.gmail.com>
Message-ID: <36ebd747ab51a4e0ad128e1bcd6dd089@dscpl.com.au>

First off, need to pass request object as third argument to 
importModule()
if in that sub module you are intending to do global level config search
and additional imports. If this isn't done and you use __req__ from the
sub module it will be None. See changes below.

Also suggest better way of using HTMLTemplate below.

On 28/03/2005, at 10:37 PM, Keerati Inochanon wrote:

> Hi,
>
> I have been experimenting with vampire a little, and having problems
> with module loading. I store handlers in $documentroot and some other
> handlers in $documentroot/modules.
>
> Here is my rough directory structure:
> $documentroot:
> index.html index.py login.html login.py modules register.html 
> register.py
>
> $documentroot/modules:
> SessionManagement.py Settings.py UserManagement.py
>
> In my login.py file, I import the module using vampire importModule 
> mechanism:
>
> config = vampire.loadConfig(__req__, ".vampire")
> directory = config.get("Modules", "common")
> UserManagement = vampire.importModule("UserManagement", directory)

Change this to:

   UserManagement = vampire.importModule("UserManagement", directory, 
__req__)

> SessionManagement = vampire.importModule("SessionManagement", 
> directory)
> --
>
> In my UserManagement.py, I also need some stuff from
> SessionManagement, so I also do:
>
> config = vampire.loadConfig(__req__, ".vampire")
> directory = config.get("Modules", "common")
> SessionManagement = vampire.importModule("SessionManagement", 
> directory)

Change this to:

   SessionManagement = vampire.importModule("SessionManagement", 
directory, __req__)

> Settings = vampire.importModule("Settings", directory)
> --
>
> My handler_html in login.py:
>
> def handler_html(req, error=''):
>   if not os.path.exists(req.filename):
>     return apache.DECLINED
>
>   # Immediately redirect to the main page if session exists
>   session = SessionManagement.checkSession(req)
>   if session['isAuthorized'] and session['username']:
>     util.redirect(req, 'main.html')
>
>   message = ''
>   if error == 'invalid':
>     message = 'invalid username/password'
>
>   def renderTemplate(template, error):
>     template.result.content = error
>
>   html = open(req.filename, 'r')
>   template = HTMLTemplate.Template(renderTemplate, html.read())
>   html.close()

You can replace these five lines with:

   template = vampire.loadTemplate(req.filename)
   template.result.content = error

Ie., use Vampire's internal loading and caching system for HTMLTemplate.
It will do automatic reloading of source HTML when changes are made to 
it.

BTW, where do you render the page and return it. Ie.,

   req.content_type = "text/html"
   req.send_http_header()
   req.write(template.render())

>
> def handler_html(req, error=''):
>   if not os.path.exists(req.filename):
>     return apache.DECLINED
>
>   # Immediately redirect to the main page if session exists
>   session = SessionManagement.checkSession(req)
>   if session['isAuthorized'] and session['username']:
>     util.redirect(req, 'main.html')
>
>   message = '';
>   if error == 'invalid':
>     message = 'invalid username/password'
>
>   def renderTemplate(template, error):
>     template.result.content = error
>
>   html = open(req.filename, 'r')
>   template = HTMLTemplate.Template(renderTemplate, html.read())
>   html.close()

Similarly:


   template = vampire.loadTemplate(req.filename)
   template.result.content = error

   req.content_type = "text/html"
   req.send_http_header()
   req.write(template.render())


> --
>
> My httpd.conf:
>
> <Directory "/home/www/testing">
>         PythonOption VampireDirectoryIndex index.html
>         SetHandler python-program
>         PythonHandler vampire
>         PythonPath 'sys.path'
> #       PythonOption VampireDefaultHandlers On
>         PythonDebug On
>         <Files ~ "^\.vampire">
>           Order allow,deny
>           deny from all
>         </Files>
> </Directory>
> --
>
> When accessing login.html, I get this error:
> Mod_python error: "PythonHandler vampire"
>
> Traceback (most recent call last):
>
>   File "/usr/lib/python2.3/site-packages/mod_python/apache.py", line
> 299, in HandlerDispatch
>     result = object(req)
>
>   File "/usr/lib/python2.3/site-packages/vampire/lookup.py", line 585,
> in _handler
>     module = _import(req,file)
>
>   File "/usr/lib/python2.3/site-packages/vampire/lookup.py", line 53, 
> in _import
>     module = _moduleCache.importModule(name,directory,req)
>
>   File "/usr/lib/python2.3/site-packages/vampire/cache.py", line 181,
> in importModule
>     execfile(file,module.__dict__)
>
>   File "/home/www/testing/login.py", line 9, in ?
>     UserManagement = vampire.importModule("UserManagement", directory)
>
>   File "/usr/lib/python2.3/site-packages/vampire/cache.py", line 306,
> in importModule
>     return _moduleCache.importModule(name,path,req)
>
>   File "/usr/lib/python2.3/site-packages/vampire/cache.py", line 181,
> in importModule
>     execfile(file,module.__dict__)
>
>   File "/home/www/testing/modules/UserManagement.py", line 8, in ?
>     config = vampire.loadConfig(__req__, ".vampire")
>
>   File "/usr/lib/python2.3/site-packages/vampire/config.py", line 263,
> in loadConfig
>     return _configCache.loadConfig(req,name)
>
>   File "/usr/lib/python2.3/site-packages/vampire/config.py", line 198,
> in loadConfig
>     req.vampire = { "config": {} }
>
> AttributeError: 'NoneType' object has no attribute 'vampire'
> --
>
> I was wondering whether what I am doing is allowed or not. What should
> I do to get around it? I am using vampire-1.5. Python, mod_python, and
> vampire are still pretty new to me. Please let me know if you need any
> further information. Thank you very much in advance.
>
> Best regards,
> Keerati
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python

From grahamd at dscpl.com.au  Mon Mar 28 17:37:31 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Mon Mar 28 17:37:39 2005
Subject: [mod_python] session locking causes hang with mpservlets
In-Reply-To: <4248196B.7000705@dd.revealed.net>
References: <4245D435.3020002@mischko.com>	<f52b2115daddfae9b3da993bb53ee176@dscpl.com.au>	<4245E518.9020305@mischko.com>	<6d44e143a7e807ac17c12ff4bbda339b@dscpl.com.au>	<c8f51f407304b22351a60022d12f4075@dscpl.com.au>
	<16968.5851.917906.872291@greenmonster.local>
	<4248196B.7000705@dd.revealed.net>
Message-ID: <193807d367a3bc279c3ba5bb2fadda40@dscpl.com.au>


On 29/03/2005, at 12:49 AM, Nick wrote:

> Daniel Popowich wrote:
>>>> The problem is that even though one sets self.session to None,
>>>> this doesn't mean it will be deleted immediately as one is in part
>>>> at the mercy of the Python garbage collector.
> [...]
>> Thanks for digging into this Graham.  Yes, I thought this would be
>> sufficient:
>>             self.session.save()
>>             self.session = None
>> as the garbage collector would clean up the session.
>
> I have noticed that even calls explicitly to gc.collect() don't 
> necessarily do the job, either... so in general, if you've got an 
> object with an explicit __del__ method, it's best to del it 
> explicitly.

As already mentioned in a followup to that original email, it turned 
out not
to be the garbage collector as there was still a reference to the 
object held
by the cleanup function registered for the session.

   http://www.modpython.org/pipermail/mod_python/2005-March/017775.html

Registration of a request cleanup function for session objects was 
apparently
introduced in 3.1.3 based on some old mail in the mailing list from 
Grisha
that I found.

Graham


From scottie at mischko.com  Mon Mar 28 18:45:22 2005
From: scottie at mischko.com (Scott Chapman)
Date: Mon Mar 28 18:45:24 2005
Subject: [mod_python] Internal redirect does not end processing and session
	is not saved on internal redirect - mpservlets
In-Reply-To: <4248516F.3090903@mischko.com>
References: <4248516F.3090903@mischko.com>
Message-ID: <42489712.30206@mischko.com>

I have updated the uberServlet and the logged output below. 

Using the internal_redirect from mpservlet prevents code from being 
executed that is after the redirect.  One problem is solved.

I'm not sure how to transfer the session to the internal redirect at 
this point.  It would be nice if that worked because I'm pretty sure 
I'll need it later.  This is a brand new session and no cookie has been 
sent to the browser at the time of the internal redirect so things don't 
work very well there.  How should I transfer the session to the 
internally redirected URI?

Scott

Scott Chapman wrote:

> Here's my uberServlet which demonstrates this "interesting" behavior.  
> If I use the external redirect and comment out the internal redirect, 
> everything works perfectly.
>
> Note that I have changed mpservlets to call prep BEFORE auth.  This 
> makes better sense to me.
>
> uberServlet:
>
>> from mod_python.servlet import Servlet
>> from mod_python import apache,util
>> from pages import Pages
>> import data_object
>>
>> class uberservlet(Servlet):
>>     use_session = True
>>
>>     def prep(self):
>>         Servlet.prep(self)
>>
>>     def auth(self):
>>         pages=Pages()
>>         
>> methodName=self.req.uri[:len(self.req.uri)-len(self.req.path_info)][1:]
>>         self.req.log_error('AUTH - methodName: ' + methodName)
>>         if methodName in ['login','doLogin','logout']:
>>             return
>>         method=getattr(pages,methodName,None)
>>         if method:
>>             self.req.log_error('AUTH - method found')
>>
>>             # Check to see if the page requires user to be logged in
>>             requiresLogin = data_object.requires_login(methodName)
>>
>>             if requiresLogin == 'unknown':
>>                 self.req.log_error('AUTH - page: %s not found in 
>> pages table' % methodName)
>>                 raise apache.SERVER_RETURN, apache.HTTP_NOT_FOUND
>>
>>             if not requiresLogin:
>>                 self.req.log_error('AUTH - page: %s does not require 
>> login' % methodName)
>>                 return
>>
>>             if requiresLogin:
>>                 self.req.log_error('AUTH - page: %s requires login' % 
>> methodName)
>>                 userName = self.session.get('username', None)
>>                 # Check to see if the user is logged in
>>                 if userName:
>>                     self.req.log_error('AUTH - user already logged 
>> in: %s' % userName)
>>                     # Check that the user has access to the page.
>>                     access_ok = 
>> data_object.check_access(methodName,userName)
>>                     if access_ok:
>>                         return
>>                     else:
>>                         raise apache.SERVER_RETURN, apache.HTTP_FORBIDDEN
>>                 else:
>>                     self.req.log_error('AUTH - user not logged in')
>>                     self.session['returnto'] = self.req.unparsed_uri
>>                     self.req.log_error('AUTH - sid when returnto set: 
>> ' + str(self.session.id()))
>>                     self.req.log_error('AUTH - returnto: ' + 
>> self.session['returnto'])
>>                     self.req.log_error('AUTH - internal redirect to 
>> login')
>>                     #Tried doing an internal redirect here but
>>                     #things don't go well. Code is executed after the 
>> internal redirect.
>>                     #The cookie with the session info is not sent to 
>> the client here so the returnto is lost.
>>                     #self.session.save()
>>                     #self.session.unlock()
>>                     # Commenting out the above two lines makes no 
>> difference.
>>                     # Servlet has better session_cleanup now.
>>                     self.internal_redirect('/login')
>>                     
>>                     #util.redirect(self.req,'/login')
>>
>>         else:
>>             self.req.log_error('AUTH - method not found')
>>             raise apache.SERVER_RETURN, apache.HTTP_NOT_FOUND
>>         return
>>         
>>     def respond(self):
>>         
>> methodName=self.req.uri[:len(self.req.uri)-len(self.req.path_info)][1:]
>>         self.req.log_error ('UBERSERVLET RESPOND - method name: %s' % 
>> methodName)
>>         pages=Pages()
>>         method=getattr(pages,methodName,None)
>>         if method:
>>             self.req.log_error('UBERSERVLET RESPOND - calling method')
>>             if self.form.list:
>>                 self.write(method(self,self.form))
>>             else:
>>                 self.write(method(self))
>>             return True
>>         else:
>>             self.req.log_error('UBERSERVLET RESPOND - method not found')
>>             return False
>>         
>
>
>
>
>      Here's the "pages" contents:
>
>> from mod_python import util, apache
>> import data_object
>> import templates
>> import table_builder
>>
>> class Pages:
>>     def login(self,uberServlet):
>>         center=templates.login_template
>>         return templates.site_template(2,center=center,menu=False)
>>
>>
>>     def doLogin(self,uberServlet, form):
>>         login = form.getfirst('login')
>>         password = form.getfirst('password')
>>         if data_object.checkLoginAndPassword(login, password):
>>             uberServlet.session['username'] = login
>>             uberServlet.req.log_error('DOLOGIN - username and 
>> password confirmed')
>>             uberServlet.req.log_error('DOLOGIN - sid: ' + 
>> str(uberServlet.session.id()))
>>             return_to = uberServlet.session.pop('returnto','/index')
>>             uberServlet.req.log_error('DOLOGIN - return_to' + return_to)
>>             util.redirect(uberServlet.req,return_to)
>>         else:
>>             return self.login()
>>
>>     def table(self,uberServlet):
>>         return ....
>
>
>
> Here's my log of the session, using internal redirect with code above:

> ==== session cookies cleared here ====
> HANDLER-calling prep
> HANDLER-calling auth
> AUTH - methodName: table
> AUTH - method found
> AUTH - page: table requires login
> AUTH - user not logged in
> AUTH - sid when returnto set: ee97afd50f2f09af23f815da70815158
> AUTH - returnto: /table
> AUTH - internal redirect to login
> HANDLER-calling prep
> HANDLER-calling auth
> AUTH - methodName: login
> HANDLER-calling respond
> UBERSERVLET RESPOND - method name: login
> UBERSERVLET RESPOND - calling method
> HANDLER-calling wrapup
> --- login page ---
> HANDLER-calling prep, referer: http://nsnserver/table
> HANDLER-calling auth, referer: http://nsnserver/table
> AUTH - methodName: doLogin, referer: http://nsnserver/table
> HANDLER-calling respond, referer: http://nsnserver/table
> UBERSERVLET RESPOND - method name: doLogin, referer: 
> http://nsnserver/table
> UBERSERVLET RESPOND - calling method, referer: http://nsnserver/table
> DOLOGIN - username and password confirmed, referer: http://nsnserver/table
> DOLOGIN - sid: a8b4af31a3ccd4dce90ef03e86d7dcc6, referer: 
> http://nsnserver/table
> DOLOGIN - return_to/index, referer: http://nsnserver/table
> HANDLER-calling prep, referer: http://nsnserver/table
> HANDLER-calling auth, referer: http://nsnserver/table
> AUTH - methodName: index, referer: http://nsnserver/table
> AUTH - method found, referer: http://nsnserver/table
> AUTH - page: index does not require login, referer: http://nsnserver/table
> HANDLER-calling respond, referer: http://nsnserver/table
> UBERSERVLET RESPOND - method name: index, referer: http://nsnserver/table
> UBERSERVLET RESPOND - calling method, referer: http://nsnserver/table
> HANDLER-calling wrapup, referer: http://nsnserver/table
> --- index page ---
>


From vivian at vdesmedt.com  Mon Mar 28 22:49:31 2005
From: vivian at vdesmedt.com (Vivian De Smedt)
Date: Mon Mar 28 22:49:34 2005
Subject: [mod_python] Cookie documentation, small correction
Message-ID: <4248D04B.9080004@vdesmedt.com>

Dear mod_python developper,

 I just want notify you a small mistakes the Cookie module documentation.
The sample section use the get_cookie api instead of the get_cookies one.
In consequence the following section:

    from mod_python import apache, Cookie

    def handler(req):

        cookies = Cookie.get_cookie(req, Cookie.MarshalCookie,
                                        secret='secret007')
        if cookies.has_key('spam'):
            spamcookie = cookies['spam']

            req.write('Great, a spam cookie was found: %s\n' \
                                          % str(spamcookie))
            if type(spamcookie) is Cookie.MarshalCookie:
                req.write('Here is what it looks like decoded: %s=%s\n'
                          % (spamcookie.name, spamcookie.value))
            else:
                req.write('WARNING: The cookie found is not a \
                           MarshalCookie, it may have been tapered with!')

        else:

            # MarshaCookie allows value to be any marshallable object
            value = {'egg_count': 32, 'color': 'white'}
            Cookie.add_cookie(req, Cookie.MarshalCookie('spam', value, \
                              'secret007'))
            req.write('Spam cookie not found, but we just set one!\n')

        return apache.OK

should be rewritten:

    from mod_python import apache, Cookie

    def handler(req):

        cookies = Cookie.get_cookie*s*(req, Cookie.MarshalCookie,
                                        secret='secret007')
        if cookies.has_key('spam'):
            spamcookie = cookies['spam']

            req.write('Great, a spam cookie was found: %s\n' \
                                          % str(spamcookie))
            if type(spamcookie) is Cookie.MarshalCookie:
                req.write('Here is what it looks like decoded: %s=%s\n'
                          % (spamcookie.name, spamcookie.value))
            else:
                req.write('WARNING: The cookie found is not a \
                           MarshalCookie, it may have been tapered with!')

        else:

            # MarshaCookie allows value to be any marshallable object
            value = {'egg_count': 32, 'color': 'white'}
            Cookie.add_cookie(req, Cookie.MarshalCookie('spam', value, \
                              'secret007'))
            req.write('Spam cookie not found, but we just set one!\n')

        return apache.OK

Thanks for your nice module,
Vivian.

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20050329/d235503b/attachment.html
From grahamd at dscpl.com.au  Mon Mar 28 23:23:59 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Mon Mar 28 23:24:02 2005
Subject: [mod_python] Cookie documentation, small correction
Message-ID: <1112070239.2102@dscpl.user.openhosting.com>

Can you submit this at:

  http://issues.apache.org/jira/browse/MODPYTHON

It will be lost in the mailing list archives otherwise.

Thanks.

Vivian De Smedt wrote ..
> Dear mod_python developper,
> 
>  I just want notify you a small mistakes the Cookie module documentation.
> The sample section use the get_cookie api instead of the get_cookies one.
> In consequence the following section:
> 
>     from mod_python import apache, Cookie
> 
>     def handler(req):
> 
>         cookies = Cookie.get_cookie(req, Cookie.MarshalCookie,
>                                         secret='secret007')
>         if cookies.has_key('spam'):
>             spamcookie = cookies['spam']
> 
>             req.write('Great, a spam cookie was found: %s\n' \
>                                           % str(spamcookie))
>             if type(spamcookie) is Cookie.MarshalCookie:
>                 req.write('Here is what it looks like decoded: %s=%s\n'
>                           % (spamcookie.name, spamcookie.value))
>             else:
>                 req.write('WARNING: The cookie found is not a \
>                            MarshalCookie, it may have been tapered with!')
> 
>         else:
> 
>             # MarshaCookie allows value to be any marshallable object
>             value = {'egg_count': 32, 'color': 'white'}
>             Cookie.add_cookie(req, Cookie.MarshalCookie('spam', value,
> \
>                               'secret007'))
>             req.write('Spam cookie not found, but we just set one!\n')
> 
>         return apache.OK
> 
> should be rewritten:
> 
>     from mod_python import apache, Cookie
> 
>     def handler(req):
> 
>         cookies = Cookie.get_cookie*s*(req, Cookie.MarshalCookie,
>                                         secret='secret007')
>         if cookies.has_key('spam'):
>             spamcookie = cookies['spam']
> 
>             req.write('Great, a spam cookie was found: %s\n' \
>                                           % str(spamcookie))
>             if type(spamcookie) is Cookie.MarshalCookie:
>                 req.write('Here is what it looks like decoded: %s=%s\n'
>                           % (spamcookie.name, spamcookie.value))
>             else:
>                 req.write('WARNING: The cookie found is not a \
>                            MarshalCookie, it may have been tapered with!')
> 
>         else:
> 
>             # MarshaCookie allows value to be any marshallable object
>             value = {'egg_count': 32, 'color': 'white'}
>             Cookie.add_cookie(req, Cookie.MarshalCookie('spam', value,
> \
>                               'secret007'))
>             req.write('Spam cookie not found, but we just set one!\n')
> 
>         return apache.OK
> 
> Thanks for your nice module,
> Vivian.
From jg.lists at sympatico.ca  Tue Mar 29 11:28:00 2005
From: jg.lists at sympatico.ca (Jim Gallacher)
Date: Tue Mar 29 11:27:45 2005
Subject: [mod_python] Cookie documentation, small correction
In-Reply-To: <1112070239.2102@dscpl.user.openhosting.com>
References: <1112070239.2102@dscpl.user.openhosting.com>
Message-ID: <42498210.2020008@sympatico.ca>

I submitted a patch to the list for this last November (pre-jira?) and 
it looks like it did get lost. I see Vivian has created a jira entry, so 
I've attached the patch to that issue.

See  http://issues.apache.org/jira/browse/MODPYTHON-42

Jim Gallacher

Graham Dumpleton wrote:
> Can you submit this at:
> 
>   http://issues.apache.org/jira/browse/MODPYTHON
> 
> It will be lost in the mailing list archives otherwise.
> 
> Thanks.
> 
> Vivian De Smedt wrote ..
> 
>>Dear mod_python developper,
>>
>> I just want notify you a small mistakes the Cookie module documentation.
>>The sample section use the get_cookie api instead of the get_cookies one.
>>In consequence the following section:
>>
>>    from mod_python import apache, Cookie
>>
>>    def handler(req):
>>
>>        cookies = Cookie.get_cookie(req, Cookie.MarshalCookie,
>>                                        secret='secret007')
>>        if cookies.has_key('spam'):
>>            spamcookie = cookies['spam']
>>
>>            req.write('Great, a spam cookie was found: %s\n' \
>>                                          % str(spamcookie))
>>            if type(spamcookie) is Cookie.MarshalCookie:
>>                req.write('Here is what it looks like decoded: %s=%s\n'
>>                          % (spamcookie.name, spamcookie.value))
>>            else:
>>                req.write('WARNING: The cookie found is not a \
>>                           MarshalCookie, it may have been tapered with!')
>>
>>        else:
>>
>>            # MarshaCookie allows value to be any marshallable object
>>            value = {'egg_count': 32, 'color': 'white'}
>>            Cookie.add_cookie(req, Cookie.MarshalCookie('spam', value,
>>\
>>                              'secret007'))
>>            req.write('Spam cookie not found, but we just set one!\n')
>>
>>        return apache.OK
>>
>>should be rewritten:
>>
>>    from mod_python import apache, Cookie
>>
>>    def handler(req):
>>
>>        cookies = Cookie.get_cookie*s*(req, Cookie.MarshalCookie,
>>                                        secret='secret007')
>>        if cookies.has_key('spam'):
>>            spamcookie = cookies['spam']
>>
>>            req.write('Great, a spam cookie was found: %s\n' \
>>                                          % str(spamcookie))
>>            if type(spamcookie) is Cookie.MarshalCookie:
>>                req.write('Here is what it looks like decoded: %s=%s\n'
>>                          % (spamcookie.name, spamcookie.value))
>>            else:
>>                req.write('WARNING: The cookie found is not a \
>>                           MarshalCookie, it may have been tapered with!')
>>
>>        else:
>>
>>            # MarshaCookie allows value to be any marshallable object
>>            value = {'egg_count': 32, 'color': 'white'}
>>            Cookie.add_cookie(req, Cookie.MarshalCookie('spam', value,
>>\
>>                              'secret007'))
>>            req.write('Spam cookie not found, but we just set one!\n')
>>
>>        return apache.OK
>>
>>Thanks for your nice module,
>>Vivian.
> 
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
> 

From shuying at gmail.com  Tue Mar 29 20:49:22 2005
From: shuying at gmail.com (Shuying Wang)
Date: Tue Mar 29 20:49:28 2005
Subject: [mod_python] PythonPath problem
Message-ID: <75fa0c3a0503291749364223cb@mail.gmail.com>

Hi,

I'm new to mod_python and I have a whole bunch of legacy code to get
running with mod_python. I've followed the manual for configuration
and I'm getting a blank page. I read mod_python FAQ #2.4 but I still
can't figure out what I'm doing wrong.

I've added the following  to my apache config file:
LoadModule python_module /usr/lib/httpd/mod_python.so
AddHandler mod_python .py 
PythonPath "sys.path + ['$python_lib', '$docroot']"
PythonHandler mod_python.cgihandler  
PythonOptimize On
DirectoryIndex index.py
PythonDebug On

$python_lib and $docroot are 2 sub-directories in the current
directory and files in $docroot requires packages in $python_lib to
work.  If I do not use the PythonPath directive, I  get "ImportError:
No module named x" where x is a module in $python_lib. I'm using
apache2 (httpd-2.0.46-44.ent) with mod_python3.0.3
(mod_python-3.0.3-5.ent) on rhel-3.

Thanks for any help in advanced.

--Shuying
From grahamd at dscpl.com.au  Tue Mar 29 21:26:37 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Tue Mar 29 21:26:41 2005
Subject: [mod_python] PythonPath problem
Message-ID: <1112149597.516@dscpl.user.openhosting.com>

Shuying Wang wrote ..
> Hi,
> 
> I'm new to mod_python and I have a whole bunch of legacy code to get
> running with mod_python. I've followed the manual for configuration
> and I'm getting a blank page.

Before you tried to use mod_python.cgihandler, did you first try and
get a mptest.py type example going as documented? Have you gone
through the Apache log files to see what you can find in the way of
errors or history of your actual requests etc? Did you manage to get
a simple mod_python CGI example working that didn't import anything,
but just displayed something?

> I read mod_python FAQ #2.4 but I still
> can't figure out what I'm doing wrong.
> 
> I've added the following  to my apache config file:
> LoadModule python_module /usr/lib/httpd/mod_python.so
> AddHandler mod_python .py 
> PythonHandler mod_python.cgihandler  

It is not generally good practice to enable mod_python at global scope
across a whole site. You would be better to do it within a <Directory>
directive so that it is at least limited to a part of the document tree.
Even if you do want it for the whole document tree, still use the
<Directory> directive but have the document root as what it applies
to. By doing this, that directory at least will be automatically added
to sys.path for you.

> DirectoryIndex index.py

In Apache 2, I am not sure that DirectoryIndex will actually do anything
for you as far as directing a directory access to index.py. It will if you
are using Apache 1.3 and index.py actually exists. Anyway, your mileage
may vary on this point depending on your Apache configuration and which
handler is used.

> PythonPath "sys.path + ['$python_lib', '$docroot']"
> ...
>
> $python_lib and $docroot are 2 sub-directories in the current
> directory and files in $docroot requires packages in $python_lib to
> work.  If I do not use the PythonPath directive, I  get "ImportError:
> No module named x" where x is a module in $python_lib.

Are '$python_lib' and '$docroot' mean't to be indicative only of your
actual pathnames or is this actually what you are setting them to?

To help us understand, you may want to show actual pathnames for
your document root and what these two values really are.

Graham
From coldoherty68 at yahoo.co.uk  Wed Mar 30 14:37:00 2005
From: coldoherty68 at yahoo.co.uk (Colin Doherty)
Date: Wed Mar 30 14:37:03 2005
Subject: [mod_python] seg fault with mod_python  - python-ldap
Message-ID: <20050330193700.5586.qmail@web25007.mail.ukl.yahoo.com>

Hi,

I'm getting an apache seg fault when submitting
authentication details using the mod_python auth
mechanism and python-ldap. The python-ldap module
works fine from a standalone script so it seems to be
an apache  - python-ldap - openldap library issue. Set
up is as follows on solaris 8:

apache 2 (2.0.53), python-ldap 2.0.6, mod_python
3.1.4, mpservlets 1.1.6, openldap 2.2.7

Anyone come across this issue ?

TIA

Send instant messages to your online friends http://uk.messenger.yahoo.com 
From alan at goatpunch.com  Wed Mar 30 14:45:27 2005
From: alan at goatpunch.com (Alan Davies)
Date: Wed Mar 30 14:45:29 2005
Subject: [mod_python] All spawned threads in Restricted Exection Mode
Message-ID: <1112211927.30280.230740211@webmail.messagingengine.com>

Hi,

I've seen some comments on this problem in the past, and was wondering
if a fix/workaround has ever emerged.

It seems that when I spawn a thread in mod_python, the thread runs in
Restricted Execution Mode. I get errors like this when I try to do
simple things such as import Python Image Library's 'Image' module:

    RuntimeError: cannot unmarshal code objects in restricted execution
    mode

The same code running in the main thread works fine. I've tried python
versions 2.2 and 2.3, and just tried installing the latest versions I
could find: Apache/2.0.53 (Win32) mod_python/3.1.4 Python/2.4 - problem
is still there. A few months ago I had this code up and running on
this same machine, probably with Python 2.3.

Another machine with this configuration has no problem: Apache/2.0.52
(Win32) mod_python/3.1.3 Python/2.3.2

This is a very annoying problem; the ability to have a thread running
that persists across and interacts with http requests is my reason for
using mod_python, any ideas how I can solve this?

Thanks,

--Alan
From joni.kahara at gmail.com  Wed Mar 30 15:34:45 2005
From: joni.kahara at gmail.com (jonk)
Date: Wed Mar 30 15:34:47 2005
Subject: [mod_python] Communicating between interpreters?
Message-ID: <2ae7aa1d050330123417259043@mail.gmail.com>

Hi y'all, my first post.

I'm running mod_python 3.1.3 (I think) on FC3. Now I was
wondering that is it possible for interpreters (surely mixing
things here but please read along if you can stand it) to share
data, and in what way(s)?

I would like to have one interpreter (the master) to grab
video data, and others to feed it to clients. So this master
would take care of video data buffer, and also it would need
to pass data to and from slave interpreters (again, terms
a still somewhat fuzzy to me). Also some kind of mutex
system would be handy.

If I did this in C, it would be really simple multithreaded
program. But I don't want to write stand alone web server
for this purpose, and I want to learn new things.

So, to sum up, how to do inter process communications
in mod_python?


    Jonk
From grahamd at dscpl.com.au  Wed Mar 30 16:30:13 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Wed Mar 30 16:30:22 2005
Subject: [mod_python] Communicating between interpreters?
In-Reply-To: <2ae7aa1d050330123417259043@mail.gmail.com>
References: <2ae7aa1d050330123417259043@mail.gmail.com>
Message-ID: <6cff37d4447aae0b07a691f5d1db882a@dscpl.com.au>

I can provide pointers to a package that may help, but not sure how
it would cope with video as it is a more generic solution for general
internal and interprocess communication. Its architecture may not be
all that good for what you want either. It does though handle 
interprocess
communications as well as communications between distinct Python
interpreters in the same process.

What size video are we talking about and what type of throughput on
it? Does the server have to handle more than one video stream, or just 
one?

You also may want to clarify how you have Apache setup. Are you 
intending
to run it in standard prefork mode, or are you using a multithreaded MPM
which may mean one or more processes? If one using a multithreaded MPM
and one process, most of your problems may vanish. If using more than
one process in prefork or worker modes, then good approach may be for
a distinct application to be running which shoves data into shared 
memory
with each Apache process connecting to the shared memory segment to get
the video feed.

Graham

On 31/03/2005, at 6:34 AM, jonk wrote:

> Hi y'all, my first post.
>
> I'm running mod_python 3.1.3 (I think) on FC3. Now I was
> wondering that is it possible for interpreters (surely mixing
> things here but please read along if you can stand it) to share
> data, and in what way(s)?
>
> I would like to have one interpreter (the master) to grab
> video data, and others to feed it to clients. So this master
> would take care of video data buffer, and also it would need
> to pass data to and from slave interpreters (again, terms
> a still somewhat fuzzy to me). Also some kind of mutex
> system would be handy.
>
> If I did this in C, it would be really simple multithreaded
> program. But I don't want to write stand alone web server
> for this purpose, and I want to learn new things.
>
> So, to sum up, how to do inter process communications
> in mod_python?

From grahamd at dscpl.com.au  Wed Mar 30 17:33:38 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Wed Mar 30 17:33:41 2005
Subject: [mod_python] seg fault with mod_python  - python-ldap
Message-ID: <1112222018.23417@dscpl.user.openhosting.com>

Colin Doherty wrote ..
> Hi,
> 
> I'm getting an apache seg fault when submitting
> authentication details using the mod_python auth
> mechanism and python-ldap. The python-ldap module
> works fine from a standalone script so it seems to be
> an apache  - python-ldap - openldap library issue. Set
> up is as follows on solaris 8:
> 
> apache 2 (2.0.53), python-ldap 2.0.6, mod_python
> 3.1.4, mpservlets 1.1.6, openldap 2.2.7
> 
> Anyone come across this issue ?

First thing to do would be to try and determine if the python-ldap
module has been compiled against the same version of ldap libraries
that any loaded mod_ldap module used by Apache, or any compiled
in support for ldap in PHP uses.

A mismatch in library versions required for different modules in
the areas of Python, Apache and PHP is usually the cause of
such unexplained seg faults.

Graham
From grahamd at dscpl.com.au  Wed Mar 30 18:28:26 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Wed Mar 30 18:28:31 2005
Subject: [mod_python] All spawned threads in Restricted Exection Mode
Message-ID: <1112225306.17670@dscpl.user.openhosting.com>

Alan Davies wrote ..
> Hi,
> 
> I've seen some comments on this problem in the past, and was wondering
> if a fix/workaround has ever emerged.
> 
> It seems that when I spawn a thread in mod_python, the thread runs in
> Restricted Execution Mode. I get errors like this when I try to do
> simple things such as import Python Image Library's 'Image' module:
> 
>     RuntimeError: cannot unmarshal code objects in restricted execution
>     mode
> 
> The same code running in the main thread works fine. I've tried python
> versions 2.2 and 2.3, and just tried installing the latest versions I
> could find: Apache/2.0.53 (Win32) mod_python/3.1.4 Python/2.4 - problem
> is still there. A few months ago I had this code up and running on
> this same machine, probably with Python 2.3.
> 
> Another machine with this configuration has no problem: Apache/2.0.52
> (Win32) mod_python/3.1.3 Python/2.3.2
> 
> This is a very annoying problem; the ability to have a thread running
> that persists across and interacts with http requests is my reason for
> using mod_python, any ideas how I can solve this?

The only self contained purported examples of the problem worked for
other people and thus weren't useful in helping to track down any problem.

In the main it always seems to involve third party packages which are
non trivial or may be hard to install which makes it a harder process for
someone else to try and duplicate it. PIL as a third party package doesn't
have strange runtime requirements such as a database needing to be
created, so try and get as small an example as possible put together
and post here on the list and I at least can try it and see if I see the
problem. I would be testing it on Mac OS X, Apache 2.X and Python 2.3.

In the multithreaded stuff I am doing at the moment, I personally don't
have problems and mine is probably a stranger arrangement than most. :-)

Graham
From grisha at modpython.org  Wed Mar 30 18:36:03 2005
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Wed Mar 30 18:36:48 2005
Subject: [mod_python] Communicating between interpreters?
In-Reply-To: <2ae7aa1d050330123417259043@mail.gmail.com>
References: <2ae7aa1d050330123417259043@mail.gmail.com>
Message-ID: <20050330182556.C8211@grisha.dyndns.org>


I did something like this about two years ago when I tried to make a 
mod_python based streaming server as a proof of concept. I still have the 
code somewhere, may be some day it'll be cleaned up and released.

I used an mmap file that I called a "cuecard". A child that would be 
dedicated to writing was called a "prompter" and a process that read the 
cuecard and sent the data to the client was called an "actor".

To syncronize reads and writes to the cuecard I used the apache.mpm_query 
to figure out whether we're multithreaded and then based on that either 
used the fcntl or the threading modules for locking.

It all wasn't terribly complicated and worked quite well actually. I 
really with I had more time to dust this thing off...

Grisha

On Wed, 30 Mar 2005, jonk wrote:

> Hi y'all, my first post.
>
> I'm running mod_python 3.1.3 (I think) on FC3. Now I was
> wondering that is it possible for interpreters (surely mixing
> things here but please read along if you can stand it) to share
> data, and in what way(s)?
>
> I would like to have one interpreter (the master) to grab
> video data, and others to feed it to clients. So this master
> would take care of video data buffer, and also it would need
> to pass data to and from slave interpreters (again, terms
> a still somewhat fuzzy to me). Also some kind of mutex
> system would be handy.
>
> If I did this in C, it would be really simple multithreaded
> program. But I don't want to write stand alone web server
> for this purpose, and I want to learn new things.
>
> So, to sum up, how to do inter process communications
> in mod_python?
>
>
>    Jonk
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>
From shuying at gmail.com  Wed Mar 30 21:11:38 2005
From: shuying at gmail.com (Shuying Wang)
Date: Wed Mar 30 21:11:41 2005
Subject: [mod_python] PythonPath problem
In-Reply-To: <1112149597.516@dscpl.user.openhosting.com>
References: <1112149597.516@dscpl.user.openhosting.com>
Message-ID: <75fa0c3a0503301811329fd18@mail.gmail.com>

On Tue, 29 Mar 2005 21:26:37 -0500, Graham Dumpleton
<grahamd@dscpl.com.au> wrote:
> Before you tried to use mod_python.cgihandler, did you first try and
> get a mptest.py type example going as documented? Have you gone

Yep. And that worked.  Although the mptest example in the
documentation that came with the package appeared to be missing the
line "req.content_type= 'text/plain'" which was required to get the
test script working. A simple CGI script which didn't import anything
but just displayed a string worked as well.

> through the Apache log files to see what you can find in the way of
> errors or history of your actual requests etc? Did you manage to get

There was a log of these requests but no errors were logged.  I seem
to have progressed from a blank page however following your
suggestion. Now I get ImportError even though I've included the path
to that module via the PythonPath directive within <Directory>
directive.

> > PythonPath "sys.path + ['$python_lib', '$docroot']"
> > ...
> > $python_lib and $docroot are 2 sub-directories in the current
> > directory and files in $docroot requires packages in $python_lib to
> > work.  If I do not use the PythonPath directive, I  get "ImportError:
> > No module named x" where x is a module in $python_lib. 
> Are '$python_lib' and '$docroot' mean't to be indicative only of your
> actual pathnames or is this actually what you are setting them to?

$python_lib and $docroot expands to the actual path where the
corresponding directories are located since httpd.conf is generated by
a script.
 
> To help us understand, you may want to show actual pathnames for
> your document root and what these two values really are.

I've got a test environment where apache reads the configuration file
httpd.conf from a generated directory in /tmp.  $python_lib and
$docroot are directories of the python source in my home directory and
when the configuration file gets generated, points to the right
location.

In the CGI script which has imported modules, I first had 
"import x,  y" and when that resulted in "ImportError: No module named
x", I tried
from mod_python import apache
xx =  apache.import_module("x") ...
which also gave me the same error.

Thanks,
Shuying
From grahamd at dscpl.com.au  Wed Mar 30 21:23:51 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Wed Mar 30 21:23:55 2005
Subject: [mod_python] PythonPath problem
Message-ID: <1112235831.9490@dscpl.user.openhosting.com>

Shuying Wang wrote ..
> In the CGI script which has imported modules, I first had 
> "import x,  y" and when that resulted in "ImportError: No module named
> x", I tried
> from mod_python import apache
> xx =  apache.import_module("x") ...
> which also gave me the same error.

Try passing the actual directory in which the modules are located
into the import_module() function. Ie.,

  xx =  apache.import_module("x",path=[directory])

where "directory" is substituted with the actual path. By passing it
explicitly, you avoid the whole PythonPath problem as it will look
specifically in the specified directory.

Graham
From shuying at gmail.com  Wed Mar 30 22:13:43 2005
From: shuying at gmail.com (Shuying Wang)
Date: Wed Mar 30 22:13:49 2005
Subject: [mod_python] PythonPath problem
In-Reply-To: <1112235831.9490@dscpl.user.openhosting.com>
References: <1112235831.9490@dscpl.user.openhosting.com>
Message-ID: <75fa0c3a05033019134f5d2643@mail.gmail.com>

On Wed, 30 Mar 2005 21:23:51 -0500, Graham Dumpleton
<grahamd@dscpl.com.au> wrote:
> Try passing the actual directory in which the modules are located
> into the import_module() function. Ie.,
> where "directory" is substituted with the actual path. By passing it
> explicitly, you avoid the whole PythonPath problem as it will look
> specifically in the specified directory.

That works but I don't understand why the PythonPath directive can't
do the same thing. Hardcoding the path into a couple of files is fine,
but doing that for several hundred files isn't really ideal.

thanks,
Shuying
From alan at goatpunch.com  Wed Mar 30 22:39:50 2005
From: alan at goatpunch.com (Alan Davies)
Date: Wed Mar 30 22:40:12 2005
Subject: [mod_python] All spawned threads in Restricted Exection Mode
In-Reply-To: <1112225306.17670@dscpl.user.openhosting.com>
References: <1112225306.17670@dscpl.user.openhosting.com>
Message-ID: <1112240390.18770.230769133@webmail.messagingengine.com>


On Wed, 30 Mar 2005 18:28:26 -0500, "Graham Dumpleton"
<grahamd@dscpl.com.au> said:
> In the main it always seems to involve third party packages which are
> non trivial or may be hard to install which makes it a harder process for
> someone else to try and duplicate it. PIL as a third party package
> doesn't
> have strange runtime requirements such as a database needing to be
> created, so try and get as small an example as possible put together
> and post here on the list and I at least can try it and see if I see the
> problem. I would be testing it on Mac OS X, Apache 2.X and Python 2.3.
> 
> In the multithreaded stuff I am doing at the moment, I personally don't
> have problems and mine is probably a stranger arrangement than most. :-)
> 
> Graham

Mine is a very simple arrangement, there's not even any need to bring
PIL
into the picture to reproduce the problem. I've written a short example
script
attempts to open a file, which is just one of the many things not
possible
in restricted mode.

The script can be run here:

http://goatpunch.com:8080/flow/threadtest.py

The output is:

In main thread: file() was OK
In child thread: file() threw exception: file() constructor not
accessible in restricted mode


------ threadtest.py ------

import threading, time, mod_python

def openfiletest(req):
    try:
        a = file("test", "w")
        req.write("file() was OK\n") 
    except Exception, e:
        req.write("file() threw exception: " + str(e) + "\n")

def handler(req):
    req.write("In main thread: ")
    openfiletest(req)
    req.write("In child thread: ")
    t = threading.Thread(target=openfiletest, args=(req,) )
    t.start()
    time.sleep(1)
    return mod_python.apache.OK

---------------------------


I added the following to httpd.conf to execute the above script:


<Directory "C:/[...]/htdocs/flow">

  Options Indexes FollowSymLinks
  AllowOverride None
  Order allow,deny
  Allow from all

  AddHandler python-program .py
  PythonDebug On 

  <Files threadtest.py>
      PythonPath "['C:/[...]/htdocs/flow'] + sys.path"
      PythonHandler threadtest
  </Files>
</Directory>


Thanks for any help or advice you're able to offer- let me know if
you have any ideas for other code I could run to help narrow down
this problem.

--Alan
From alan at goatpunch.com  Wed Mar 30 22:48:57 2005
From: alan at goatpunch.com (Alan Davies)
Date: Wed Mar 30 22:49:11 2005
Subject: [mod_python] All spawned threads in Restricted Exection Mode
In-Reply-To: <1112225306.17670@dscpl.user.openhosting.com>
References: <1112225306.17670@dscpl.user.openhosting.com>
Message-ID: <1112240937.19413.230770869@webmail.messagingengine.com>


On Wed, 30 Mar 2005 18:28:26 -0500, "Graham Dumpleton"
<grahamd@dscpl.com.au> said:
> The only self contained purported examples of the problem worked for
> other people and thus weren't useful in helping to track down any
> problem.

I had another idea; to setup a clean Apache/mod_python installation on
another machine, make the minimum changes to httpd.conf and run the
test script.

It's available here:

http://goatpunch.com:6666/pytest/threadtest.py

All installers, config file, and the source of the script (same as
last email) are here:

http://goatpunch.com:6666/setup/

Apache/2.0.53 (Win32) mod_python/3.1.4 Python/2.4 Server at
goatpunch.com Port 6666

Can anyone else reproduce this problem but me? Should I try other
versions
of Apache/Python/mod_python?

--Alan
From grahamd at dscpl.com.au  Wed Mar 30 23:01:05 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Wed Mar 30 23:01:07 2005
Subject: [mod_python] All spawned threads in Restricted Exection Mode
Message-ID: <1112241665.28888@dscpl.user.openhosting.com>

Possibly not much too different to:

  http://www.modpython.org/pipermail/mod_python/2005-January/017129.html

Both the earlier one and your one work for me under:

  mod_python: Creating 32 session mutexes based on 6 max processes and 25 max threads.

Ie., Mac OS X, worker MPM.

The previous poster didn't say what platform they were one from I
can see. Can someone else on Win32 platform try both these examples?

Graham

Alan Davies wrote ..
> Mine is a very simple arrangement, there's not even any need to bring
> PIL
> into the picture to reproduce the problem. I've written a short example
> script
> attempts to open a file, which is just one of the many things not
> possible
> in restricted mode.
> 
> The script can be run here:
> 
> http://goatpunch.com:8080/flow/threadtest.py
> 
> The output is:
> 
> In main thread: file() was OK
> In child thread: file() threw exception: file() constructor not
> accessible in restricted mode
> 
> 
> ------ threadtest.py ------
> 
> import threading, time, mod_python
> 
> def openfiletest(req):
>     try:
>         a = file("test", "w")
>         req.write("file() was OK\n") 
>     except Exception, e:
>         req.write("file() threw exception: " + str(e) + "\n")
> 
> def handler(req):
>     req.write("In main thread: ")
>     openfiletest(req)
>     req.write("In child thread: ")
>     t = threading.Thread(target=openfiletest, args=(req,) )
>     t.start()
>     time.sleep(1)
>     return mod_python.apache.OK
> 
> ---------------------------
> 
> 
> I added the following to httpd.conf to execute the above script:
> 
> 
> <Directory "C:/[...]/htdocs/flow">
> 
>   Options Indexes FollowSymLinks
>   AllowOverride None
>   Order allow,deny
>   Allow from all
> 
>   AddHandler python-program .py
>   PythonDebug On 
> 
>   <Files threadtest.py>
>       PythonPath "['C:/[...]/htdocs/flow'] + sys.path"
>       PythonHandler threadtest
>   </Files>
> </Directory>
> 
> 
> Thanks for any help or advice you're able to offer- let me know if
> you have any ideas for other code I could run to help narrow down
> this problem.
> 
> --Alan
From alan at goatpunch.com  Thu Mar 31 00:58:01 2005
From: alan at goatpunch.com (Alan Davies)
Date: Thu Mar 31 00:58:04 2005
Subject: [mod_python] All spawned threads in Restricted Exection Mode
In-Reply-To: <1112241665.28888@dscpl.user.openhosting.com>
References: <1112241665.28888@dscpl.user.openhosting.com>
Message-ID: <1112248681.26892.230776728@webmail.messagingengine.com>

I tried some tests with different versions of Apache/Python/mod_python,
and narrowed it down to Python version 2.3.5 or later:

Apache/2.0.44 (Win32) mod_python/3.0.3 Python/2.2.3 - OK
Apache/2.0.53 (Win32) mod_python/3.1.3 Python/2.3.4 - OK
Apache/2.0.44 (Win32) mod_python/3.1.3 Python/2.3.5 - Fails
Apache/2.0.53 (Win32) mod_python/3.1.3 Python/2.3.5 - Fails
Apache/2.0.53 (Win32) mod_python/3.1.4 Python/2.4 - Fails

Looking for information to do with 2.3.5, I found that this bug has
already been logged:

http://sourceforge.net/tracker/index.php?func=detail&aid=1163563&group_id=5470&atid=105470

Not sure whether this is a Win32-only problem.

I'm going back to version 2.3.4 as I don't know enough about the
internals of python to fix this, and threads are useful things to have
working.

Thanks for your time,

--Alan

On Wed, 30 Mar 2005 23:01:05 -0500, "Graham Dumpleton"
<grahamd@dscpl.com.au> said:
> Possibly not much too different to:
> 
>   http://www.modpython.org/pipermail/mod_python/2005-January/017129.html
> 
> Both the earlier one and your one work for me under:
> 
>   mod_python: Creating 32 session mutexes based on 6 max processes and 25
>   max threads.
> 
> Ie., Mac OS X, worker MPM.
> 
> The previous poster didn't say what platform they were one from I
> can see. Can someone else on Win32 platform try both these examples?
> 
> Graham
> 
> Alan Davies wrote ..
> > Mine is a very simple arrangement, there's not even any need to bring
> > PIL
> > into the picture to reproduce the problem. I've written a short example
> > script
> > attempts to open a file, which is just one of the many things not
> > possible
> > in restricted mode.
> > 
> > The script can be run here:
> > 
> > http://goatpunch.com:8080/flow/threadtest.py
> > 
> > The output is:
> > 
> > In main thread: file() was OK
> > In child thread: file() threw exception: file() constructor not
> > accessible in restricted mode
> > 
> > 
> > ------ threadtest.py ------
> > 
> > import threading, time, mod_python
> > 
> > def openfiletest(req):
> >     try:
> >         a = file("test", "w")
> >         req.write("file() was OK\n") 
> >     except Exception, e:
> >         req.write("file() threw exception: " + str(e) + "\n")
> > 
> > def handler(req):
> >     req.write("In main thread: ")
> >     openfiletest(req)
> >     req.write("In child thread: ")
> >     t = threading.Thread(target=openfiletest, args=(req,) )
> >     t.start()
> >     time.sleep(1)
> >     return mod_python.apache.OK
> > 
> > ---------------------------
> > 
> > 
> > I added the following to httpd.conf to execute the above script:
> > 
> > 
> > <Directory "C:/[...]/htdocs/flow">
> > 
> >   Options Indexes FollowSymLinks
> >   AllowOverride None
> >   Order allow,deny
> >   Allow from all
> > 
> >   AddHandler python-program .py
> >   PythonDebug On 
> > 
> >   <Files threadtest.py>
> >       PythonPath "['C:/[...]/htdocs/flow'] + sys.path"
> >       PythonHandler threadtest
> >   </Files>
> > </Directory>
> > 
> > 
> > Thanks for any help or advice you're able to offer- let me know if
> > you have any ideas for other code I could run to help narrow down
> > this problem.
> > 
> > --Alan
From joni.kahara at gmail.com  Thu Mar 31 01:22:39 2005
From: joni.kahara at gmail.com (jonk)
Date: Thu Mar 31 01:22:42 2005
Subject: [mod_python] Communicating between interpreters?
In-Reply-To: <6cff37d4447aae0b07a691f5d1db882a@dscpl.com.au>
References: <2ae7aa1d050330123417259043@mail.gmail.com>
	<6cff37d4447aae0b07a691f5d1db882a@dscpl.com.au>
Message-ID: <2ae7aa1d05033022223122ed5c@mail.gmail.com>

On Thu, 31 Mar 2005 07:30:13 +1000, Graham Dumpleton
<grahamd@dscpl.com.au> wrote:

Thanks a lot all!

> What size video are we talking about and what type of throughput on
> it? Does the server have to handle more than one video stream, or just
> one?

Just one video stream right now. This one "master" would grab and
compress, but these tasks would be delegated to libjpeg etc, so it's
more about copying data around on the python side. I would expect
these video frames to be around 15-20 kilobytes each. And it's for our
web pages (tha place I work for), nothing too serious really.

> You also may want to clarify how you have Apache setup. Are you
> intending
> to run it in standard prefork mode, or are you using a multithreaded MPM
> which may mean one or more processes? If one using a multithreaded MPM
> and one process, most of your problems may vanish. If using more than

Yeah, sorry if I gave too little info. It seems that I am running in forked
mode, as apache.mpm_query(apache.AP_MPMQ_IS_FORKED) is
true, and _IS_THREADED is not true. This is how it was pre-configured
out of box. I'll investigate further.


    Jonk
From nicolas.lehuen at gmail.com  Thu Mar 31 02:39:28 2005
From: nicolas.lehuen at gmail.com (Nicolas Lehuen)
Date: Thu Mar 31 02:39:30 2005
Subject: [mod_python] Communicating between interpreters?
In-Reply-To: <2ae7aa1d05033022223122ed5c@mail.gmail.com>
References: <2ae7aa1d050330123417259043@mail.gmail.com>
	<6cff37d4447aae0b07a691f5d1db882a@dscpl.com.au>
	<2ae7aa1d05033022223122ed5c@mail.gmail.com>
Message-ID: <c298f2d70503302339736cb92b@mail.gmail.com>

On Thu, 31 Mar 2005 09:22:39 +0300, jonk <joni.kahara@gmail.com> wrote:
> On Thu, 31 Mar 2005 07:30:13 +1000, Graham Dumpleton
> <grahamd@dscpl.com.au> wrote:
> 
> Thanks a lot all!
> 
> > What size video are we talking about and what type of throughput on
> > it? Does the server have to handle more than one video stream, or just
> > one?
> 
> Just one video stream right now. This one "master" would grab and
> compress, but these tasks would be delegated to libjpeg etc, so it's
> more about copying data around on the python side. I would expect
> these video frames to be around 15-20 kilobytes each. And it's for our
> web pages (tha place I work for), nothing too serious really.
> 
> > You also may want to clarify how you have Apache setup. Are you
> > intending
> > to run it in standard prefork mode, or are you using a multithreaded MPM
> > which may mean one or more processes? If one using a multithreaded MPM
> > and one process, most of your problems may vanish. If using more than
> 
> Yeah, sorry if I gave too little info. It seems that I am running in forked
> mode, as apache.mpm_query(apache.AP_MPMQ_IS_FORKED) is
> true, and _IS_THREADED is not true. This is how it was pre-configured
> out of box. I'll investigate further.
> 
> 
>     Jonk
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
> 

If you use the forked MPM, different requests can be handled by
different processes, so the different Python interpreter can't easily
share data. You'll have to resort to inter-process communication
(IPC). You could use sockets or TCP/IP, but if you really need high
performance in sharing high volumes of data, I've heard (but not
tried) that memory-mapped files are the way to go. Check the mmap
module in standard Python, or a higher level module built on mmap,
Vmaps :

http://snafu.freedom.org/Vmaps/Vmaps.html

Regards,

Nicolas
From mateusz at ant.gliwice.pl  Thu Mar 31 06:44:40 2005
From: mateusz at ant.gliwice.pl (Mateusz Korniak)
Date: Thu Mar 31 06:44:35 2005
Subject: [mod_python] SSL/TLS connection handling from mod_python
Message-ID: <200503311344.41059.mateusz@ant.gliwice.pl>

Hello,
I would like to get information about 
1. cipher used (if any) when mod_python handles HTTPS request.
2. peer certificate used (if any) on ohter side
3. how to be able to verify peer certficate under mod_python.

I have checked google and list archives back to 2003 but have not found any 
interesting information.

Thanks in advance for any help/docs/examples in above topics.

-- 
Mateusz Korniak

From nicolas.lehuen at gmail.com  Thu Mar 31 08:56:08 2005
From: nicolas.lehuen at gmail.com (Nicolas Lehuen)
Date: Thu Mar 31 08:56:11 2005
Subject: [mod_python] SSL/TLS connection handling from mod_python
In-Reply-To: <200503311344.41059.mateusz@ant.gliwice.pl>
References: <200503311344.41059.mateusz@ant.gliwice.pl>
Message-ID: <c298f2d7050331055625ba9840@mail.gmail.com>

Hi,

Did you check in the environment variables returned by
req.subprocess_env (you may have to call req.add_common_vars() first
to fill in the information you need) ? AFAIK there is no special
support for SSL in mod_python, so the interface is pretty much the
same that it is with any standard CGI (or standard Apache module),
i.e. through environment variables.

Regards,

Nicolas


On Thu, 31 Mar 2005 13:44:40 +0200, Mateusz Korniak
<mateusz@ant.gliwice.pl> wrote:
> Hello,
> I would like to get information about
> 1. cipher used (if any) when mod_python handles HTTPS request.
> 2. peer certificate used (if any) on ohter side
> 3. how to be able to verify peer certficate under mod_python.
> 
> I have checked google and list archives back to 2003 but have not found any
> interesting information.
> 
> Thanks in advance for any help/docs/examples in above topics.
> 
> --
> Mateusz Korniak
> 
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>
From dpopowich at blue-fox.com  Thu Mar 31 09:36:37 2005
From: dpopowich at blue-fox.com (Daniel J. Popowich)
Date: Thu Mar 31 09:36:47 2005
Subject: [mod_python] seg fault with mod_python  - python-ldap
In-Reply-To: <1112222018.23417@dscpl.user.openhosting.com>
References: <1112222018.23417@dscpl.user.openhosting.com>
Message-ID: <16972.2805.589575.820018@greenmonster.local>

Graham Dumpleton writes:
> Colin Doherty wrote ..
> > Hi,
> > 
> > I'm getting an apache seg fault when submitting
> > authentication details using the mod_python auth
> > mechanism and python-ldap. The python-ldap module
> > works fine from a standalone script so it seems to be
> > an apache  - python-ldap - openldap library issue. Set
> > up is as follows on solaris 8:
> > 
> > apache 2 (2.0.53), python-ldap 2.0.6, mod_python
> > 3.1.4, mpservlets 1.1.6, openldap 2.2.7
> > 
> > Anyone come across this issue ?
> 
> First thing to do would be to try and determine if the python-ldap
> module has been compiled against the same version of ldap libraries
> that any loaded mod_ldap module used by Apache, or any compiled
> in support for ldap in PHP uses.
> 
> A mismatch in library versions required for different modules in
> the areas of Python, Apache and PHP is usually the cause of
> such unexplained seg faults.

I have a vague memory of dealing with this issue (ldap/apache); I
think the problem was a mismatch of Berkeley DB libraries (sleepycat).
I had built openldap against the latest sleepycat distro, but apache
was built against my standard RedHat distro.  No faster way to core
dump apache!

Make sure apache/python-ldap/openldap are all in sync.  The ldd
utility can help you figure out which binary/library is dependent on
what.

Daniel Popowich
-----------------------------------------------
http://home.comcast.net/~d.popowich/mpservlets/
From coldoherty68 at yahoo.co.uk  Thu Mar 31 13:55:10 2005
From: coldoherty68 at yahoo.co.uk (Colin Doherty)
Date: Thu Mar 31 13:55:33 2005
Subject: [mod_python] seg fault with mod_python  - python-ldap
In-Reply-To: 6667
Message-ID: <20050331185510.58552.qmail@web25009.mail.ukl.yahoo.com>

That looks like the cause of the problem. I recompiled
everything, ensuring everything was pointing at the
same openldap/bdb install and that fixed it. 

Thanks
Colin Doherty

--- "Daniel J. Popowich" <dpopowich@blue-fox.com>
wrote:
> Graham Dumpleton writes:
> > Colin Doherty wrote ..
> > > Hi,
> > > 
> > > I'm getting an apache seg fault when submitting
> > > authentication details using the mod_python auth
> > > mechanism and python-ldap. The python-ldap
> module
> > > works fine from a standalone script so it seems
> to be
> > > an apache  - python-ldap - openldap library
> issue. Set
> > > up is as follows on solaris 8:
> > > 
> > > apache 2 (2.0.53), python-ldap 2.0.6, mod_python
> > > 3.1.4, mpservlets 1.1.6, openldap 2.2.7
> > > 
> > > Anyone come across this issue ?
> > 
> > First thing to do would be to try and determine if
> the python-ldap
> > module has been compiled against the same version
> of ldap libraries
> > that any loaded mod_ldap module used by Apache, or
> any compiled
> > in support for ldap in PHP uses.
> > 
> > A mismatch in library versions required for
> different modules in
> > the areas of Python, Apache and PHP is usually the
> cause of
> > such unexplained seg faults.
> 
> I have a vague memory of dealing with this issue
> (ldap/apache); I
> think the problem was a mismatch of Berkeley DB
> libraries (sleepycat).
> I had built openldap against the latest sleepycat
> distro, but apache
> was built against my standard RedHat distro.  No
> faster way to core
> dump apache!
> 
> Make sure apache/python-ldap/openldap are all in
> sync.  The ldd
> utility can help you figure out which binary/library
> is dependent on
> what.
> 
> Daniel Popowich
> -----------------------------------------------
> http://home.comcast.net/~d.popowich/mpservlets/
> 

Send instant messages to your online friends http://uk.messenger.yahoo.com 
From grahamd at dscpl.com.au  Thu Mar 31 16:51:20 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Thu Mar 31 16:51:29 2005
Subject: [mod_python] PythonPath problem
In-Reply-To: <75fa0c3a05033019134f5d2643@mail.gmail.com>
References: <1112235831.9490@dscpl.user.openhosting.com>
	<75fa0c3a05033019134f5d2643@mail.gmail.com>
Message-ID: <f418d889d821abcc6005f79d15d24ae2@dscpl.com.au>


On 31/03/2005, at 1:13 PM, Shuying Wang wrote:

> On Wed, 30 Mar 2005 21:23:51 -0500, Graham Dumpleton
> <grahamd@dscpl.com.au> wrote:
>> Try passing the actual directory in which the modules are located
>> into the import_module() function. Ie.,
>> where "directory" is substituted with the actual path. By passing it
>> explicitly, you avoid the whole PythonPath problem as it will look
>> specifically in the specified directory.
>
> That works but I don't understand why the PythonPath directive can't
> do the same thing. Hardcoding the path into a couple of files is fine,
> but doing that for several hundred files isn't really ideal.

At least now that you have something going, you can add logging to see
what sys.path actually gets set to and from that perhaps determine why
PythonPath isn't working.

