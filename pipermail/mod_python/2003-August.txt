From azaroth at liverpool.ac.uk  Fri Aug  1 19:41:27 2003
From: azaroth at liverpool.ac.uk (Robert Sanderson)
Date: Fri Jan  9 21:47:36 2004
Subject: [mod_python] MacOS X Install
Message-ID: <Pine.LNX.4.44.0308011937060.16855-100000@gondolin.hist.liv.ac.uk>


Okay, has anyone gotten mod_python working under MacOS X recently?  In 
particular, using 2.3 (to avoid the issue with python thinking it's 
running in restricted mode)

I've patched libtool as per the readme.
Installed Apache 2.0.47, configured with --enable-so
Installed Jack Jensen's build of Python2.3
Fixed LONG_LONG to PY_LONG_LONG in the mod_python source
Compiled mod_python, installed it.

When I try to run apache from the command line, with 
DYLD_FORCE_FLAT_NAMESPACE defined or without, I get:

Cannot load /usr/local/apache2/modules/mod_python.so into server: dyld: 
/usr/sbin/httpd Undefined symbols:
_PyExc_AttributeError
_PyExc_IOError
_PyExc_IndexError
_PyExc_KeyError

Previously I tried the same thing without patching libtool and got:

Undefined symbols:
_PyInt_Type
_Py_OptimizeFlag
Trace/(something)

Rob

-- 
      ,'/:.          Dr Robert Sanderson (azaroth@liverpool.ac.uk)
    ,'-/::::.        http://www.o-r-g.org/~azaroth/
  ,'--/::(@)::.      Special Collections and Archives, extension 3142
,'---/::::::::::.    Nebmedes:  telnet: nebmedes.o-r-g.org 7777
____/:::::::::::::.                WWW: http://nebmedes.o-r-g.org:8000/
I L L U M I N A T I

From ron at rwsoft.ca  Fri Aug  1 15:13:56 2003
From: ron at rwsoft.ca (Ron Wills)
Date: Fri Jan  9 21:47:37 2004
Subject: [mod_python] File Upload Problem
Message-ID: <1059772435.4143.63.camel@ron.gw.rwsoft.ca>

  I've seem to have found an oddity will binary file uploads with
modpython on windows 2K. I've created a file upload form in which a zip
can be upload to restore a mysql db. I use the util.FieldStorage class
to parse the request and it seems to convert all \n characters in the
binary file to \r\n.
  It doesn't seem to be the browsers (Tested with Mozilla 1.3 1.4, EI 6
and Opera) and I can't see it being Apache (Never run into this problem
using PHP). Is there a way to tell modpython it's binary and not to do
any conversions on the upload?

Using:
	Win2K
	Apache 2.0.46
	modpython 3.0.3

  Thanks for any help.

-- 
Ron Wills
RW Software
http://www.rwsoft.ca
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: This is a digitally signed message part
Url : http://mailman.modpython.org/pipermail/mod_python/attachments/20030801/29e64401/attachment.bin
From grisha at modpython.org  Mon Aug  4 11:44:15 2003
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 21:47:37 2004
Subject: [mod_python] File Upload Problem
In-Reply-To: <1059772435.4143.63.camel@ron.gw.rwsoft.ca>
References: <1059772435.4143.63.camel@ron.gw.rwsoft.ca>
Message-ID: <20030804114304.L88668@onyx.ispol.com>


As far as I can tell mod_python trats everything as binary.

Could you provide the HTML for the form, and also the code you use to get
the data from the file on the server - I suspect there may be something
there.

Grisha

On Fri, 1 Aug 2003, Ron Wills wrote:

>   I've seem to have found an oddity will binary file uploads with
> modpython on windows 2K. I've created a file upload form in which a zip
> can be upload to restore a mysql db. I use the util.FieldStorage class
> to parse the request and it seems to convert all \n characters in the
> binary file to \r\n.
>   It doesn't seem to be the browsers (Tested with Mozilla 1.3 1.4, EI 6
> and Opera) and I can't see it being Apache (Never run into this problem
> using PHP). Is there a way to tell modpython it's binary and not to do
> any conversions on the upload?
>
> Using:
> 	Win2K
> 	Apache 2.0.46
> 	modpython 3.0.3
>
>   Thanks for any help.
>
> --
> Ron Wills
> RW Software
> http://www.rwsoft.ca
>
From leader730 at hotmail.com  Tue Aug  5 00:57:38 2003
From: leader730 at hotmail.com (Jer icho)
Date: Fri Jan  9 21:47:37 2004
Subject: [mod_python] 
	server returning "500 Internal Server Error" with mod_python files
Message-ID: <Law14-F46G4YdlbEwPI0000b2f5@hotmail.com>

An HTML attachment was scrubbed...
URL: http://mailman.modpython.org/pipermail/mod_python/attachments/20030805/906d125f/attachment.htm
From gnb at itga.com.au  Tue Aug  5 15:47:30 2003
From: gnb at itga.com.au (Gregory Bond)
Date: Fri Jan  9 21:47:37 2004
Subject: [mod_python] server returning "500 Internal Server Error" with
	mod_python files 
In-Reply-To: Your message of Tue, 05 Aug 2003 00:57:38 -0400.
Message-ID: <200308050547.PAA08734@lightning.itga.com.au>

> <DIV>[error] make_obcallback: could not import mod_python.apache.</DIV>

See the very first quesiton in the FAQ:

http://www.modpython.org/FAQ/faqw.py?req=show&file=faq02.001.htp

From post at nlhas.no  Tue Aug  5 11:50:02 2003
From: post at nlhas.no (post@nlhas.no)
Date: Fri Jan  9 21:47:37 2004
Subject: [mod_python] Compiling with Python2.3
Message-ID: <20030805095002.CFF9E1506A@nlhhost>

I can't get mod_python to compile with Python2.3 (Apache 2.0.47, RedHat 7.0) :

]# make
make[1]: Entering directory `/home/public/transfer/mod_python-3.0.3/src'
Compiling for DSO.
.....snip.....
requestobject.c: At top level:
requestobject.c:1270: warning: initialization from incompatible pointer type
apxs:Error: Command failed with rc=65536
.
make[1]: *** [mod_python.so] Error 1
make[1]: Leaving directory `/home/public/transfer/mod_python-3.0.3/src'
make: *** [do_dso] Error 2

Same setup configured with Python2.2 compiles perfectly, so I presume this is a problem mod_python<>Python2.3.

Any suggestions?

pm

From grisha at modpython.org  Tue Aug  5 09:26:40 2003
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 21:47:37 2004
Subject: [mod_python] Compiling with Python2.3
In-Reply-To: <20030805095002.CFF9E1506A@nlhhost>
References: <20030805095002.CFF9E1506A@nlhhost>
Message-ID: <20030805092556.Q95995@onyx.ispol.com>


I added a FAQ entry for this:

http://www.modpython.org/FAQ/faqw.py?req=show&file=faq04.002.htp

Grisha

On Tue, 5 Aug 2003 post@nlhas.no wrote:

> I can't get mod_python to compile with Python2.3 (Apache 2.0.47, RedHat 7.0) :
>
> ]# make
> make[1]: Entering directory `/home/public/transfer/mod_python-3.0.3/src'
> Compiling for DSO.
> .....snip.....
> requestobject.c: At top level:
> requestobject.c:1270: warning: initialization from incompatible pointer type
> apxs:Error: Command failed with rc=65536
> .
> make[1]: *** [mod_python.so] Error 1
> make[1]: Leaving directory `/home/public/transfer/mod_python-3.0.3/src'
> make: *** [do_dso] Error 2
>
> Same setup configured with Python2.2 compiles perfectly, so I presume this is a problem mod_python<>Python2.3.
>
> Any suggestions?
>
> pm
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>
From dlrubin at yahoo.com  Wed Aug  6 09:12:10 2003
From: dlrubin at yahoo.com (Daniel Rubin)
Date: Fri Jan  9 21:47:37 2004
Subject: [mod_python] build error on solais
Message-ID: <20030806161210.74520.qmail@web13904.mail.yahoo.com>

Trying to build mod_python 3.0.3 on solaris 2.8. My
configure command is: ./configure
--with-apxs=/home/rubin/opt/apache/bin/apxs
--prefix=/home/rubin
and that runs fine. Then when I make, I get this error
during the build:

/home/rubin/opt/apache/build/libtool --silent
--mode=compile gcc -prefer-pic 
-DAP_HAVE_DESIGNATED_INITIALIZER -DSOLARIS2=8
-D_POSIX_PTHREAD_SEMANTICS -D_REENTRANT -g -O2
-pthreads -I/home/rubin/opt/apache/include 
-I/home/rubin/opt/apache/include  
-I/home/rubin/opt/apache/include 
-I/home/rubin/src/mod_python-3.0.3/src/include
-I/home/rubin/opt/apache/include
-I/home/rubin/include/python2.3  -c -o
requestobject.lo requestobject.c && touch
requestobject.slo
In file included from
/home/rubin/include/python2.3/Python.h:8,
                 from
/home/rubin/src/mod_python-3.0.3/src/include/mod_python.h:92,
                 from requestobject.c:64:
/home/rubin/include/python2.3/pyconfig.h:822:1:
warning: "_FILE_OFFSET_BITS" redefined
In file included from
/home/rubin/lib/gcc-lib/sparc-sun-solaris2.8/3.2.2/include/sys/types.h:28,
                 from
/home/rubin/opt/apache/include/apr.h:149,
                 from
/home/rubin/opt/apache/include/ap_config.h:58,
                 from
/home/rubin/opt/apache/include/httpd.h:72,
                 from
/home/rubin/src/mod_python-3.0.3/src/include/mod_python.h:71,
                 from requestobject.c:64:
/usr/include/sys/feature_tests.h:96:1: warning: this
is the location of the previous definition
requestobject.c: In function `getreq_recmbr_off':
requestobject.c:1055: `LONG_LONG' undeclared (first
use in this function)
requestobject.c:1055: (Each undeclared identifier is
reported only once
requestobject.c:1055: for each function it appears
in.)
requestobject.c:1056: parse error before "l"
requestobject.c:1057: `l' undeclared (first use in
this function)
requestobject.c: At top level:
requestobject.c:1270: warning: initialization from
incompatible pointer type
apxs:Error: Command failed with rc=65536
.
make[1]: *** [mod_python.so] Error 1
make[1]: Leaving directory
`/home/rubin/src/mod_python-3.0.3/src'
make: *** [do_dso] Error 2


__________________________________
Do you Yahoo!?
Yahoo! SiteBuilder - Free, easy-to-use web site design software
http://sitebuilder.yahoo.com
From grisha at modpython.org  Wed Aug  6 12:47:44 2003
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 21:47:37 2004
Subject: [mod_python] build error on solais
In-Reply-To: <20030806161210.74520.qmail@web13904.mail.yahoo.com>
References: <20030806161210.74520.qmail@web13904.mail.yahoo.com>
Message-ID: <20030806124705.P15215@onyx.ispol.com>



http://www.modpython.org/FAQ/faqw.py?req=show&file=faq04.002.htp

HTH,

Grisha

On Wed, 6 Aug 2003, Daniel Rubin wrote:

> Trying to build mod_python 3.0.3 on solaris 2.8. My
> configure command is: ./configure
> --with-apxs=/home/rubin/opt/apache/bin/apxs
> --prefix=/home/rubin
> and that runs fine. Then when I make, I get this error
> during the build:
>
> /home/rubin/opt/apache/build/libtool --silent
> --mode=compile gcc -prefer-pic
> -DAP_HAVE_DESIGNATED_INITIALIZER -DSOLARIS2=8
> -D_POSIX_PTHREAD_SEMANTICS -D_REENTRANT -g -O2
> -pthreads -I/home/rubin/opt/apache/include
> -I/home/rubin/opt/apache/include
> -I/home/rubin/opt/apache/include
> -I/home/rubin/src/mod_python-3.0.3/src/include
> -I/home/rubin/opt/apache/include
> -I/home/rubin/include/python2.3  -c -o
> requestobject.lo requestobject.c && touch
> requestobject.slo
> In file included from
> /home/rubin/include/python2.3/Python.h:8,
>                  from
> /home/rubin/src/mod_python-3.0.3/src/include/mod_python.h:92,
>                  from requestobject.c:64:
> /home/rubin/include/python2.3/pyconfig.h:822:1:
> warning: "_FILE_OFFSET_BITS" redefined
> In file included from
> /home/rubin/lib/gcc-lib/sparc-sun-solaris2.8/3.2.2/include/sys/types.h:28,
>                  from
> /home/rubin/opt/apache/include/apr.h:149,
>                  from
> /home/rubin/opt/apache/include/ap_config.h:58,
>                  from
> /home/rubin/opt/apache/include/httpd.h:72,
>                  from
> /home/rubin/src/mod_python-3.0.3/src/include/mod_python.h:71,
>                  from requestobject.c:64:
> /usr/include/sys/feature_tests.h:96:1: warning: this
> is the location of the previous definition
> requestobject.c: In function `getreq_recmbr_off':
> requestobject.c:1055: `LONG_LONG' undeclared (first
> use in this function)
> requestobject.c:1055: (Each undeclared identifier is
> reported only once
> requestobject.c:1055: for each function it appears
> in.)
> requestobject.c:1056: parse error before "l"
> requestobject.c:1057: `l' undeclared (first use in
> this function)
> requestobject.c: At top level:
> requestobject.c:1270: warning: initialization from
> incompatible pointer type
> apxs:Error: Command failed with rc=65536
> .
> make[1]: *** [mod_python.so] Error 1
> make[1]: Leaving directory
> `/home/rubin/src/mod_python-3.0.3/src'
> make: *** [do_dso] Error 2
>
>
> __________________________________
> Do you Yahoo!?
> Yahoo! SiteBuilder - Free, easy-to-use web site design software
> http://sitebuilder.yahoo.com
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>
From conrad at hep.caltech.edu  Wed Aug  6 22:25:56 2003
From: conrad at hep.caltech.edu (Conrad Steenberg)
Date: Fri Jan  9 21:47:37 2004
Subject: [mod_python] Authentication behaviour
Message-ID: <1060233956.2639.13.camel@192_168_0_100>

Hi

I have an authenhandler that basically ignores authentication headers
for GET requests, but requires them to be present for POST requests.

With Apache 2.0.46 this worked fine with a setup like e.g.
<Directory /opt/midir/>
       SetHandler python-program
       AddHandler python-program .py
       PythonHandler my_handler
       PythonAuthenHandler my_handler
       AuthType Basic
       AuthName "Restricted Area"
</Directory>

In 2.0.47 the authenhandler doesn't get called unless I add
      require valid-user
to the above. But this makes browsers pop up a password dialog for
requests without authentication headers (GET requests in this case).

Is there any way to make the browser not pop up the password dialog, but
still have the authenhandler called? I.e. where does the response get
generated that returns a "authentication required" value to the browser,
if not in the authenhandler?

Any help appreciated!

Conrad

-- 
Conrad Steenberg <conrad@hep.caltech.edu>
-- 

From mike.looijmans at asml.com  Thu Aug  7 07:47:14 2003
From: mike.looijmans at asml.com (Mike Looijmans)
Date: Fri Jan  9 21:47:37 2004
Subject: [mod_python] Authentication behaviour
Message-ID: <01c35ca7$5ad97380$926a1e6e@wsasd464>

I think in this case, you may want to consider the alternative, which is to
just provide a 'regular' request handler, and when authentication is
required but not given, just return a "401 Unauthorized" response with a
WWW-Authenticate header specifying the realm.

That will give the user a password popup and the browser will then retry the
same request. Note that for large POST request, this is wasting a lot of
bandwidth, as the first (and therefore unauthorized) POST request will be
completely rejected! It may be better to direct the user to a GET page first
to authenticate, and only after that page start doing the POST things.

Note that (unless the "Digest" authentication algorithm is used) the "Basic"
HTTP authentication is highly insecure and therefore you should never ever
use unix account data for this. Digest is only supported by IE and probably
the newer Mozilla's (haven't tried those, NS 6 did not support it).

I prefer using session cookies for authentication, since that is (if
implemented properly) more secure and allows the user to log out.

Mike.

-----Original Message-----
From: Conrad Steenberg <conrad@hep.caltech.edu>
To: ModPython mail list <mod_python@modpython.org>
Date: Thursday, August 07, 2003 7:31 AM
Subject: [mod_python] Authentication behaviour


>Hi
>
>I have an authenhandler that basically ignores authentication headers
>for GET requests, but requires them to be present for POST requests.
>
>With Apache 2.0.46 this worked fine with a setup like e.g.
><Directory /opt/midir/>
>       SetHandler python-program
>       AddHandler python-program .py
>       PythonHandler my_handler
>       PythonAuthenHandler my_handler
>       AuthType Basic
>       AuthName "Restricted Area"
></Directory>
>
>In 2.0.47 the authenhandler doesn't get called unless I add
>      require valid-user
>to the above. But this makes browsers pop up a password dialog for
>requests without authentication headers (GET requests in this case).
>
>Is there any way to make the browser not pop up the password dialog, but
>still have the authenhandler called? I.e. where does the response get
>generated that returns a "authentication required" value to the browser,
>if not in the authenhandler?
>
>Any help appreciated!
>
>Conrad
>
>--
>Conrad Steenberg <conrad@hep.caltech.edu>
>--
>
>_______________________________________________
>Mod_python mailing list
>Mod_python@modpython.org
>http://mailman.modpython.org/mailman/listinfo/mod_python
>
>
>
>

From davidf at sjsoft.com  Thu Aug  7 08:21:48 2003
From: davidf at sjsoft.com (David Fraser)
Date: Fri Jan  9 21:47:37 2004
Subject: [mod_python] Authentication behaviour
In-Reply-To: <01c35ca7$5ad97380$926a1e6e@wsasd464>
References: <01c35ca7$5ad97380$926a1e6e@wsasd464>
Message-ID: <3F31EFFC.7090603@sjsoft.com>

Mike Looijmans wrote:

>Note that (unless the "Digest" authentication algorithm is used) the "Basic"
>HTTP authentication is highly insecure and therefore you should never ever
>use unix account data for this. Digest is only supported by IE and probably
>the newer Mozilla's (haven't tried those, NS 6 did not support it).
>  
>
Mozilla supported Digest authentication since December 2001 (see 
http://bugzilla.mozilla.org/show_bug.cgi?id=15860)
Netscape 6 was released in December 2000 so doesn't include it; Mozilla 
0.9.7 or higher and Netscape 7.0 or higher should include it.
However, note this article about incompatibilities with at least some 
versions of IE and Apache:
http://www.eweek.com/print_article/0,3668,a%3D24177,00.asp
I think I've seen problems from this, so I would concur with the advice 
about using session cookies if possible.
David

>I prefer using session cookies for authentication, since that is (if
>implemented properly) more secure and allows the user to log out.
>
>Mike.
>  
>


From etienne at cs.vu.nl  Thu Aug  7 09:44:54 2003
From: etienne at cs.vu.nl (Etienne Posthumus)
Date: Fri Jan  9 21:47:37 2004
Subject: [mod_python] Authentication behaviour
In-Reply-To: <3F31EFFC.7090603@sjsoft.com>
References: <01c35ca7$5ad97380$926a1e6e@wsasd464>
	<3F31EFFC.7090603@sjsoft.com>
Message-ID: <Pine.GSO.4.53.0308070939460.10965@flits.cs.vu.nl>

On Thu, 7 Aug 2003, David Fraser wrote:
> However, note this article about incompatibilities with at least some
> versions of IE and Apache:
> http://www.eweek.com/print_article/0,3668,a%3D24177,00.asp
> I think I've seen problems from this, so I would concur with the advice
> about using session cookies if possible.

It is IMHO a pity that the 'proper' authentication methods for HTTP don't
really work broadly enough. In my experience Digest works OK'ish for
simple URIs, but as soon as you start using parameters in your URI MS IE
(and Mac OS X Safari) fails as it passes throught the realms differently
to what Apache expects.

Bugger. :-( So at the moment I use SSL + Basic with a self-signed
certificate. Not ideal but the only pragmatic choice.

Etienne Posthumus
Programmer, IIDS - Intelligent Interactive Distributed Systems
http://www.iids.org/
Vrije Universiteit Amsterdam
----------------------------
From vlindberg at verio.net  Thu Aug  7 09:04:51 2003
From: vlindberg at verio.net (VanL)
Date: Fri Jan  9 21:47:37 2004
Subject: [mod_python] Persistent db connections
Message-ID: <3F326A93.5060505@verio.net>

Hello,

I am using quixote+mod_python as a front-end for a database app.  Based 
on the example in the faq, it looks like I could just make the 
connection in a separate module and mod_python would automatically make 
the database connections persist. 

For example,

if I have code that is run by mod_python

=== persistdb.py ==================
import psycopg as db
def connect():
    global connection
    try:
        conn = connection
        return conn
    except NameError:
        connection = db.connect(connection_string)
    return connection

=== application.py ==================
import persistdb
conn = persistdb.connect()
# Use conn here

 From the FAQ, it appears that the db connection "connection" would 
persist transparently.  Is this a correct understanding?
If that is true, would there be any benefit to using dbpool, as opposed 
to the code posted above?

Thanks,

VanL


From conrad at hep.caltech.edu  Thu Aug  7 08:30:12 2003
From: conrad at hep.caltech.edu (Conrad Steenberg)
Date: Fri Jan  9 21:47:37 2004
Subject: [mod_python] Authentication behaviour
In-Reply-To: <01c35ca7$5ad97380$926a1e6e@wsasd464>
References: <01c35ca7$5ad97380$926a1e6e@wsasd464>
Message-ID: <1060270212.3569.21.camel@192_168_0_100>

On Wed, 2003-08-06 at 22:47, Mike Looijmans wrote:
> I think in this case, you may want to consider the alternative, which is to
> just provide a 'regular' request handler, and when authentication is
> required but not given, just return a "401 Unauthorized" response with a
> WWW-Authenticate header specifying the realm.

> That will give the user a password popup and the browser will then retry the
> same request. Note that for large POST request, this is wasting a lot of
> bandwidth, as the first (and therefore unauthorized) POST request will be
> completely rejected! It may be better to direct the user to a GET page first
> to authenticate, and only after that page start doing the POST things.

Yes, eliminating this roundtrip is exactly what I'm trying to do. The
problem is that Apache itself sends the 401 reply at some stage without
bothering to consult my authenhandler ;-)

Thanks for your reply!
Conrad
-- 

From conrad at hep.caltech.edu  Thu Aug  7 08:36:30 2003
From: conrad at hep.caltech.edu (Conrad Steenberg)
Date: Fri Jan  9 21:47:37 2004
Subject: [mod_python] Persistent db connections
In-Reply-To: <3F326A93.5060505@verio.net>
References: <3F326A93.5060505@verio.net>
Message-ID: <1060270589.3569.28.camel@192_168_0_100>

Hi Van

Doing it the way you describe would work, but depending on the DB and
Apache settings, you might have more Apache processes spawned than the
number of connections your DB can handle.

Using dbpool would make your web app fail more gracefully, i.e. get
slower with more connections, instead of giving some users an error that
it was unable to connect to the DB, as you often see on overloaded
discussion sites.

Cheers

Conrad

On Thu, 2003-08-07 at 08:04, VanL wrote:
> Hello,
> 
> I am using quixote+mod_python as a front-end for a database app.  Based 
> on the example in the faq, it looks like I could just make the 
> connection in a separate module and mod_python would automatically make 
> the database connections persist. 
> 
> For example,
> 
> if I have code that is run by mod_python
> 
> === persistdb.py ==================
> import psycopg as db
> def connect():
>     global connection
>     try:
>         conn = connection
>         return conn
>     except NameError:
>         connection = db.connect(connection_string)
>     return connection
> 
> === application.py ==================
> import persistdb
> conn = persistdb.connect()
> # Use conn here
> 
>  From the FAQ, it appears that the db connection "connection" would 
> persist transparently.  Is this a correct understanding?
> If that is true, would there be any benefit to using dbpool, as opposed 
> to the code posted above?
> 
> Thanks,
> 
> VanL
> 
> 
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
-- 

From vlindberg at verio.net  Thu Aug  7 11:17:25 2003
From: vlindberg at verio.net (VanL)
Date: Fri Jan  9 21:47:37 2004
Subject: [mod_python] Persistent db connections
In-Reply-To: <1060270589.3569.28.camel@192_168_0_100>
References: <3F326A93.5060505@verio.net>
	<1060270589.3569.28.camel@192_168_0_100>
Message-ID: <3F3289A5.8090604@verio.net>

Conrad Steenberg wrote:

>Using dbpool would make your web app fail more gracefully, i.e. get
>slower with more connections, instead of giving some users an error that
>it was unable to connect to the DB, as you often see on overloaded
>discussion sites.
>
Is this correct?  I thought that even dbpool would not pool resources 
between different apache processes.  Thus having a 
one-connection-per-process (or two, or three, but some fixed number) 
rule along with an apache maxclients setting would tend to keep the 
database connections within an acceptable range.

If the max number of clients could be known, regardless of the number of 
apache child processes, that would be great.  However, that doesn't 
match my understanding of how it works.

VanL

From conrad at hep.caltech.edu  Thu Aug  7 10:51:01 2003
From: conrad at hep.caltech.edu (Conrad Steenberg)
Date: Fri Jan  9 21:47:37 2004
Subject: [mod_python] Persistent db connections
In-Reply-To: <3F3289A5.8090604@verio.net>
References: <3F326A93.5060505@verio.net><3F3289A5.8090604@verio.net>
Message-ID: <1060278661.5313.28.camel@heppc22>

Hi Van

You're right, I confused dbpool (python) with dbpool (java) which does
what I described.

If you can provide a DB connection limit >= the Apache connection limit
you should probably be fine. 

>From python the SqlRelay also does what I described (allow many more
connections to the DB than the DB connection limit). See
http://sqlrelay.sourceforge.net/ and esp.
http://sqlrelay.sourceforge.net/sqlrelay/faq.html#howwork

Cheers

Conrad

On Thu, 2003-08-07 at 10:17, VanL wrote:
> Conrad Steenberg wrote:
> 
> >Using dbpool would make your web app fail more gracefully, i.e. get
> >slower with more connections, instead of giving some users an error that
> >it was unable to connect to the DB, as you often see on overloaded
> >discussion sites.
> >
> Is this correct?  I thought that even dbpool would not pool resources 
> between different apache processes.  Thus having a 
> one-connection-per-process (or two, or three, but some fixed number) 
> rule along with an apache maxclients setting would tend to keep the 
> database connections within an acceptable range.
> 
> If the max number of clients could be known, regardless of the number of 
> apache child processes, that would be great.  However, that doesn't 
> match my understanding of how it works.
> 
> VanL
-- 
Conrad Steenberg <conrad@hep.caltech.edu>

From fgeter at itc.nrcs.usda.gov  Thu Aug  7 16:30:17 2003
From: fgeter at itc.nrcs.usda.gov (Geter, Frank)
Date: Fri Jan  9 21:47:37 2004
Subject: [mod_python] Help with mod_python install
Message-ID: <768D32B675BED311968F009027DE9E3001D01043@rocky.itc.nrcs.usda.gov>

I am having trouble getting python scripts to run after installing
mod_python from a Mandrake 9.1 rpm.

I am running:
Mandrake 9.1
Apache 2.044 
mod_python 3.0.1 installed from
apache2-mod_python-2.0.44_3.0.1-1mdk.i586.rpm

I no NOTHING about apache and that is probably my problem.  I have edited
httpd2.conf file to include the Directory tag as per instructions.  I have
made the python script executable (755) mode.  Apache is running OK.

Need help!

Frank Geter
2150 Centre Avenue, Bldg. A
Fort Collins, CO 80526-1891
Ph# (970) 295-5536
Fax# (970) 295-5414


From mike.looijmans at asml.com  Fri Aug  8 07:25:15 2003
From: mike.looijmans at asml.com (Mike Looijmans)
Date: Fri Jan  9 21:47:37 2004
Subject: [mod_python] Persistent db connections
Message-ID: <01c35d6d$727b2f80$926a1e6e@wsasd464>

More importantly, make sure that your DB engine supports multiple threads
over a single connection.

If you're using a threading MPM, there will be multiple clients sharing the
same connection.

For MySQL for example this will fail if you also use scrolling cursors,
since you can have only one such cursor per connection.

What I did was to use a threading-only MPM and have each request grab a DB
connection from a pool (and remove it), and when done, it returns the DB
object to the pool. If the pool is empty, a new connection object is created
(so the pool grows automatically to meet demand).
This allows many threads to use the same connection objects, but no threads
will ever share the same object.

If the number of connections is limited, you could create a fixed number of
objects and do a lock-and-wait until one is available when the pool is
drained.

Mike.

-----Original Message-----
From: VanL <vlindberg@verio.net>
To: Conrad Steenberg <conrad@hep.caltech.edu>
Cc: ModPython mail list <mod_python@modpython.org>
Date: Thursday, August 07, 2003 7:22 PM
Subject: Re: [mod_python] Persistent db connections


>Conrad Steenberg wrote:
>
>>Using dbpool would make your web app fail more gracefully, i.e. get
>>slower with more connections, instead of giving some users an error that
>>it was unable to connect to the DB, as you often see on overloaded
>>discussion sites.
>>
>Is this correct?  I thought that even dbpool would not pool resources
>between different apache processes.  Thus having a
>one-connection-per-process (or two, or three, but some fixed number)
>rule along with an apache maxclients setting would tend to keep the
>database connections within an acceptable range.
>
>If the max number of clients could be known, regardless of the number of
>apache child processes, that would be great.  However, that doesn't
>match my understanding of how it works.


From DFarrell at ScholasticLibrary.com  Fri Aug  8 10:21:23 2003
From: DFarrell at ScholasticLibrary.com (Farrell, Doug)
Date: Fri Jan  9 21:47:37 2004
Subject: [mod_python] Problem understanding PythonAccessHandler
Message-ID: <582005C4B6AE4B4CAD684A93D283A16F01FFBE12@corpex01.corp.scholasticinc.local>

Hi all,

I'm trying to make use of mod_python to build a content server. This server
gets it's content from one of our product servers and strips out irrelevant
stuff and delivers that. The product server is authenticated and we use a
mod_perl script to do that part. I'm not at all familiar with mod_perl or
Perl for that matter, but would like to do the authentication/access using
mod_python. However, I'm having problems setting up httpd.conf to do the
right thing. Here is a section of http.conf from the product server that
uses mod_perl:

	#authenticate the whole product
	<Location /gme-ol/*.html>
       		PerlAccessHandler Apache::grolier::grolier_auth
	</Location>

	#authenticate the applications and log them as well.
	<Location /cgi-bin>
       		PerlAccessHandler Apache::grolier::grolier_auth
	</Location>

Here is a section of my content server http.conf:

	ScriptAlias /cs /data/cs/handlers

	<Location /cs>
		SetHandler python-program
		PythonHandler mod_python.publisher
		PythonDebug On
	</Location>

	<Directory /cs/gme/handler>
		AddHandler python-program .py
		PythonAccessHandler gme_auth
	</Directory>

My script, gme_auth.py just returns apache.OK for now till I figure out how
to authenticate. But it looks like it's never being called. 

Can anyone give me some help about how to set this up correctly?

Thanks in advance for your help,
Doug Farrell
From rey4 at columbia.edu  Sat Aug  9 11:01:21 2003
From: rey4 at columbia.edu (Russell Yanofsky)
Date: Fri Jan  9 21:47:37 2004
Subject: [mod_python] script_name bug?
Message-ID: <bh32ej$m9l$1@main.gmane.org>

I've noticed that req.subprocess_env['SCRIPT_NAME'] seems to have the wrong
value whenever the requested URL ends in a forward slash. This happens with
mod_python 3.0.3 and apache 2.0.47. Here are some examples:

  Requested URL: /mptest/mptest.py/
    Actual SCRIPT_NAME = /mptest/mptest.py/
    Expected SCRIPT_NAME = /mptest/mptest.py
    PATH_INFO = /

  Requested URL: /mptest/mptest.py/abc/
    Actual SCRIPT_NAME = /mptest/mptest.py/abc
    Expected SCRIPT_NAME = /mptest/mptest.py
    PATH_INFO = /abc/

  Requested URL: /mptest/mptest.py/abc/123/
    Actual SCRIPT_NAME = /mptest/mptest.py/abc/123
    Expected SCRIPT_NAME = /mptest/mptest.py
    PATH_INFO = /abc/123/

When the request doesn't end with a forward slash there's no problem:

  Requested URL: /mptest/mptest.py
    Actual SCRIPT_NAME = /mptest/mptest.py
    Expected SCRIPT_NAME = /mptest/mptest.py
    PATH_INFO =

  Requested URL: /mptest/mptest.py/abc
    Actual SCRIPT_NAME = /mptest/mptest.py
    Expected SCRIPT_NAME = /mptest/mptest.py
    PATH_INFO = /abc

  Requested URL: /mptest/mptest.py/abc/123
    Actual SCRIPT_NAME = /mptest/mptest.py
    Expected SCRIPT_NAME = /mptest/mptest.py
    PATH_INFO = /abc/123

Here's the code I used to produce the above output:

-- begin .htaccess listing --
AddHandler python-program .py
PythonHandler mptest
PythonDebug On
-- end .htaccess listing -- 

-- begin mptest.py listing --
from mod_python import apache

def handler(req):
  req.content_type = 'text/plain'
  env = req.subprocess_env
  req.write('Requested URL: %s\n' % env['REQUEST_URI'])
  req.write('  Actual SCRIPT_NAME = %s\n' % env['SCRIPT_NAME'])
  fixenv(env)
  req.write('  Expected SCRIPT_NAME = %s\n' % env['SCRIPT_NAME'])
  req.write('  PATH_INFO = %s\n' % env.get('PATH_INFO', ''))
  return apache.OK

# This is only a partial fix, does not work in the presence
# of double slashes in the PATH_INFO segment
def fixenv(env):
  path_info = env.get('PATH_INFO', '')
  if path_info and path_info[-1] == '/':
    script_name = env['SCRIPT_NAME']
    path_len = len(path_info) - 1
    if path_len:
      assert script_name[-path_len:] == path_info[:-1]
      env['SCRIPT_NAME'] = script_name[:-path_len]
    else:
      assert script_name[-1] == '/'
      env['SCRIPT_NAME'] = script_name[:-1]
-- end mptest.py listing --

This behavior only seems to occur in mod_python. SCRIPT_NAME does seem to
have the right value in CGI scripts.

- Russ


From rey4 at columbia.edu  Sat Aug  9 11:16:48 2003
From: rey4 at columbia.edu (Russell Yanofsky)
Date: Fri Jan  9 21:47:37 2004
Subject: [mod_python] script_name bug?
Message-ID: <00b001c35e89$411dd330$daf627a0@turtle>

I've noticed that req.subprocess_env['SCRIPT_NAME'] seems to have the wrong
value whenever the requested URL ends in a forward slash. This happens with
mod_python 3.0.3 and apache 2.0.47. Here are some examples:

  Requested URL: /mptest/mptest.py/
    Actual SCRIPT_NAME = /mptest/mptest.py/
    Expected SCRIPT_NAME = /mptest/mptest.py
    PATH_INFO = /

  Requested URL: /mptest/mptest.py/abc/
    Actual SCRIPT_NAME = /mptest/mptest.py/abc
    Expected SCRIPT_NAME = /mptest/mptest.py
    PATH_INFO = /abc/

  Requested URL: /mptest/mptest.py/abc/123/
    Actual SCRIPT_NAME = /mptest/mptest.py/abc/123
    Expected SCRIPT_NAME = /mptest/mptest.py
    PATH_INFO = /abc/123/

When the request doesn't end with a forward slash there's no problem:

  Requested URL: /mptest/mptest.py
    Actual SCRIPT_NAME = /mptest/mptest.py
    Expected SCRIPT_NAME = /mptest/mptest.py
    PATH_INFO =

  Requested URL: /mptest/mptest.py/abc
    Actual SCRIPT_NAME = /mptest/mptest.py
    Expected SCRIPT_NAME = /mptest/mptest.py
    PATH_INFO = /abc

  Requested URL: /mptest/mptest.py/abc/123
    Actual SCRIPT_NAME = /mptest/mptest.py
    Expected SCRIPT_NAME = /mptest/mptest.py
    PATH_INFO = /abc/123

Here's the code I used to produce the above output:

-- begin .htaccess listing --
AddHandler python-program .py
PythonHandler mptest
PythonDebug On
-- end .htaccess listing -- 

-- begin mptest.py listing --
from mod_python import apache

def handler(req):
  req.content_type = 'text/plain'
  env = req.subprocess_env
  req.write('Requested URL: %s\n' % env['REQUEST_URI'])
  req.write('  Actual SCRIPT_NAME = %s\n' % env['SCRIPT_NAME'])
  fixenv(env)
  req.write('  Expected SCRIPT_NAME = %s\n' % env['SCRIPT_NAME'])
  req.write('  PATH_INFO = %s\n' % env.get('PATH_INFO', ''))
  return apache.OK

# This is only a partial fix, does not work in the presence
# of double slashes in the PATH_INFO segment
def fixenv(env):
  path_info = env.get('PATH_INFO', '')
  if path_info and path_info[-1] == '/':
    script_name = env['SCRIPT_NAME']
    path_len = len(path_info) - 1
    if path_len:
      assert script_name[-path_len:] == path_info[:-1]
      env['SCRIPT_NAME'] = script_name[:-path_len]
    else:
      assert script_name[-1] == '/'
      env['SCRIPT_NAME'] = script_name[:-1]
-- end mptest.py listing --

This behavior only seems to occur in mod_python. SCRIPT_NAME does seem to
have the right value in CGI scripts.

- Russ

From grisha at modpython.org  Sat Aug  9 13:13:09 2003
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 21:47:37 2004
Subject: [mod_python] script_name bug?
In-Reply-To: <bh32ej$m9l$1@main.gmane.org>
References: <bh32ej$m9l$1@main.gmane.org>
Message-ID: <20030809123926.T83158@onyx.ispol.com>


Russel -

Since mod_python isn't a CGI environment (and doesn't care to be one
either), the definition of SCRIPT_NAME is rather blurry.

In CGI it is meant to refer to the script which is executed as a separate
process - in mod_python there is no separate process, and the file
containing the code isn't located by the web server, but rather follows
the Python sys.path search rules.

I don't think it would be right to tinker with what req.subprocess_env
contains - it should return whatever apache put there, uncensored, so to
that degree it's not a bug as far as I am concerned.

P.S. If you look at build_cgi_env() in apache.py, it seems to adress this
issue.

Grisha

On Sat, 9 Aug 2003, Russell Yanofsky wrote:

> I've noticed that req.subprocess_env['SCRIPT_NAME'] seems to have the wrong
> value whenever the requested URL ends in a forward slash. This happens with
> mod_python 3.0.3 and apache 2.0.47. Here are some examples:
>
>   Requested URL: /mptest/mptest.py/
>     Actual SCRIPT_NAME = /mptest/mptest.py/
>     Expected SCRIPT_NAME = /mptest/mptest.py
>     PATH_INFO = /
>
>   Requested URL: /mptest/mptest.py/abc/
>     Actual SCRIPT_NAME = /mptest/mptest.py/abc
>     Expected SCRIPT_NAME = /mptest/mptest.py
>     PATH_INFO = /abc/
>
>   Requested URL: /mptest/mptest.py/abc/123/
>     Actual SCRIPT_NAME = /mptest/mptest.py/abc/123
>     Expected SCRIPT_NAME = /mptest/mptest.py
>     PATH_INFO = /abc/123/
>
> When the request doesn't end with a forward slash there's no problem:
>
>   Requested URL: /mptest/mptest.py
>     Actual SCRIPT_NAME = /mptest/mptest.py
>     Expected SCRIPT_NAME = /mptest/mptest.py
>     PATH_INFO =
>
>   Requested URL: /mptest/mptest.py/abc
>     Actual SCRIPT_NAME = /mptest/mptest.py
>     Expected SCRIPT_NAME = /mptest/mptest.py
>     PATH_INFO = /abc
>
>   Requested URL: /mptest/mptest.py/abc/123
>     Actual SCRIPT_NAME = /mptest/mptest.py
>     Expected SCRIPT_NAME = /mptest/mptest.py
>     PATH_INFO = /abc/123
>
> Here's the code I used to produce the above output:
>
> -- begin .htaccess listing --
> AddHandler python-program .py
> PythonHandler mptest
> PythonDebug On
> -- end .htaccess listing --
>
> -- begin mptest.py listing --
> from mod_python import apache
>
> def handler(req):
>   req.content_type = 'text/plain'
>   env = req.subprocess_env
>   req.write('Requested URL: %s\n' % env['REQUEST_URI'])
>   req.write('  Actual SCRIPT_NAME = %s\n' % env['SCRIPT_NAME'])
>   fixenv(env)
>   req.write('  Expected SCRIPT_NAME = %s\n' % env['SCRIPT_NAME'])
>   req.write('  PATH_INFO = %s\n' % env.get('PATH_INFO', ''))
>   return apache.OK
>
> # This is only a partial fix, does not work in the presence
> # of double slashes in the PATH_INFO segment
> def fixenv(env):
>   path_info = env.get('PATH_INFO', '')
>   if path_info and path_info[-1] == '/':
>     script_name = env['SCRIPT_NAME']
>     path_len = len(path_info) - 1
>     if path_len:
>       assert script_name[-path_len:] == path_info[:-1]
>       env['SCRIPT_NAME'] = script_name[:-path_len]
>     else:
>       assert script_name[-1] == '/'
>       env['SCRIPT_NAME'] = script_name[:-1]
> -- end mptest.py listing --
>
> This behavior only seems to occur in mod_python. SCRIPT_NAME does seem to
> have the right value in CGI scripts.
>
> - Russ
>
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>
From damon at asianreflection.com  Sun Aug 10 15:05:31 2003
From: damon at asianreflection.com (Damon Lynch)
Date: Fri Jan  9 21:47:37 2004
Subject: [mod_python] Cannot run test script: (Re)importing module 'mptest'
Message-ID: <1060484731.2960.94.camel@damon.asianreflection.com>

Hi,

There is an example test script in:

http://www.modpython.org/live/current/doc-html/inst-testing.html

I cannot get the example test script to run: the "Hello World" is being
dumped to the browser incorrectly - the browser prompts to save it,
instead of displaying it.  I've checked and rechecked (and rechecked
again!!) and I believe I've followed the instructions as best I can.

I'm running (on Mandrake 9.1):

apache2-2.0.47-1.1mdk
apache2-mod_python-2.0.47_3.0.3-4mdk
python-2.2.2-6mdk

httpd2.conf contains:

LoadModule python_module                 extramodules/mod_python.so

commonhttpd.conf contains:

<Directory "/var/www/html/test/">
  AddHandler python-program .py
  PythonHandler mptest
  PythonDebug On
</Directory>

the apache error log shows:

[notice] mod_python: (Re)importing module 'mptest'

the URL I'm using is:
http://myserver/test/mptest

Any help is much appreciated!

Thanks
Damon

From rey4 at columbia.edu  Sat Aug  9 23:31:56 2003
From: rey4 at columbia.edu (Russell Yanofsky)
Date: Fri Jan  9 21:47:37 2004
Subject: [mod_python] Re: script_name bug?
References: <bh32ej$m9l$1@main.gmane.org>
	<20030809123926.T83158@onyx.ispol.com>
Message-ID: <bh4ebb$qlq$1@sea.gmane.org>

Gregory (Grisha) Trubetskoy wrote:
> Russel -
>
> Since mod_python isn't a CGI environment (and doesn't care to be one
> either), the definition of SCRIPT_NAME is rather blurry.

It might be blurry when a directory handler is used, but it's not at all
blurry in
this case, where mod_python is acting as a handler for requests for
.py files. SCRIPT_NAME should simply point to the .py file that has
been requested.

> In CGI it is meant to refer to the script which is executed as a
> separate process - in mod_python there is no separate process, and
> the file containing the code isn't located by the web server, but
> rather follows the Python sys.path search rules.

The CGI specification may define SCRIPT_NAME in terms of processes and
script files, but the SCRIPT_NAME is not just used for CGI. It's used in PHP
and ASP and other web interfaces, and is also useful in mod_python when
mod_python doesn't mangle it.

> I don't think it would be right to tinker with what req.subprocess_env
> contains - it should return whatever apache put there, uncensored, so
> to that degree it's not a bug as far as I am concerned.

But, AFAICT, it is tinkering with the value. Under the apache CGI
environment, the SCRIPT_NAME value is just the portion of the URL pointing
at the script being handled, but in mod_python when the request ends in a
slash, the value has extra stuff appended. So mod_python must be doing
something that mod_cgi is not.

> P.S. If you look at build_cgi_env() in apache.py, it seems to adress
> this issue.

That code does sort of address this issue, but in an indirect way. Instead
of using the mangled SCRIPT_NAME value in subprocess_env, it recomputes it
using req.uri and req.path_info. This is similar to the workaround I used in
my last posting, and it also will fail in the presence of double slashes in
PATH_INFO. It would be better to fix this bug instead of using these
unreliable workarounds.

- Russ


From greenbeard400 at yahoo.com  Sun Aug 10 12:40:33 2003
From: greenbeard400 at yahoo.com (Greenbeard)
Date: Fri Jan  9 21:47:37 2004
Subject: [mod_python] publisher handler  and form data 
Message-ID: <20030810194033.35760.qmail@web21301.mail.yahoo.com>

I am having trouble getting some info from the
req.form variable. 

I have a form with <input> tags like
<input type="text" name="ID" value="" size="40"
maxlength="255">


now I can get the field name and the value easily 
using something like :

    for field in form.keys():    
            value = form.__getitem__(field)

etc
   

but I can not seem to get the type or size or any
other input tag variables. To me it looks like this is
not supported by mod_python or am I just not going
about it correctly?  



Thanks,

gb400


__________________________________
Do you Yahoo!?
Yahoo! SiteBuilder - Free, easy-to-use web site design software
http://sitebuilder.yahoo.com
From rey4 at columbia.edu  Sun Aug 10 19:02:13 2003
From: rey4 at columbia.edu (Russell Yanofsky)
Date: Fri Jan  9 21:47:37 2004
Subject: [mod_python] Re: publisher handler  and form data
References: <20030810194033.35760.qmail@web21301.mail.yahoo.com>
Message-ID: <bh6itj$co6$1@sea.gmane.org>

Greenbeard wrote:
> I am having trouble getting some info from the
> req.form variable.
>
> I have a form with <input> tags like
> <input type="text" name="ID" value="" size="40"
> maxlength="255">
>
>
> now I can get the field name and the value easily
> using something like :
>
>     for field in form.keys():
>             value = form.__getitem__(field)
>
> etc
>
>
> but I can not seem to get the type or size or any
> other input tag variables. To me it looks like this is
> not supported by mod_python or am I just not going
> about it correctly?

You can't read those values with mod_python (or anything else that runs at
the server) because the browser does not send them. The only thing the
browser sends to the server is a list of (name, value) pairs

- Russ


From rey4 at columbia.edu  Sun Aug 10 19:07:10 2003
From: rey4 at columbia.edu (Russell Yanofsky)
Date: Fri Jan  9 21:47:37 2004
Subject: [mod_python] 
	Re: Cannot run test script: (Re)importing module 'mptest'
References: <1060484731.2960.94.camel@damon.asianreflection.com>
Message-ID: <bh6j6s$d1t$1@sea.gmane.org>

Damon Lynch wrote:
> Hi,
> 
> There is an example test script in:
> 
> http://www.modpython.org/live/current/doc-html/inst-testing.html
> 
> I cannot get the example test script to run
> ...
> the URL I'm using is:
> http://myserver/test/mptest
> 

Should that be http://myserver/test/mptest.py ?

- Russ

From rey4 at columbia.edu  Sun Aug 10 19:10:31 2003
From: rey4 at columbia.edu (Russell Yanofsky)
Date: Fri Jan  9 21:47:37 2004
Subject: [mod_python] Re: Help with mod_python install
References: <768D32B675BED311968F009027DE9E3001D01043@rocky.itc.nrcs.usda.gov>
Message-ID: <bh6jd5$dc8$1@sea.gmane.org>

Geter, Frank wrote:
> I am having trouble getting python scripts to run after installing
> mod_python from a Mandrake 9.1 rpm.

So what happens when you try to run them? Is there an error sent to the
browser or the apache error log?

- Russ


From grisha at modpython.org  Sun Aug 10 20:21:59 2003
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 21:47:38 2004
Subject: [mod_python] Re: script_name bug?
In-Reply-To: <bh4ebb$qlq$1@sea.gmane.org>
References: <bh32ej$m9l$1@main.gmane.org>
	<20030809123926.T83158@onyx.ispol.com> <bh4ebb$qlq$1@sea.gmane.org>
Message-ID: <20030810200027.R92644@onyx.ispol.com>


On Sat, 9 Aug 2003, Russell Yanofsky wrote:

> Gregory (Grisha) Trubetskoy wrote:
> > Russel -
> >
> > Since mod_python isn't a CGI environment (and doesn't care to be one
> > either), the definition of SCRIPT_NAME is rather blurry.
>
> It might be blurry when a directory handler is used, but it's not at all
> blurry in this case, where mod_python is acting as a handler for
> requests for .py files. SCRIPT_NAME should simply point to the .py file
> that has been requested.

Well, the file requested doesn't have anything to do with what
PythonHandler specifies, e.g. in your example it will respond just the
same with requested url of "/mptest/blahblah.py/abc/123" instead of
"/mptest/mptest.py/abc/123". The question then becomes should SCRIPT_NAME
be "/mptest/mptest.py" or "/mptest/blahblah.py"?

> > I don't think it would be right to tinker with what req.subprocess_env
> > contains - it should return whatever apache put there, uncensored, so
> > to that degree it's not a bug as far as I am concerned.
>
> But, AFAICT, it is tinkering with the value.

It sort of does. There is a place in requestobject.c where it removes the
trailing slash for something, then puts it back, and now I don't remember
why it does it, but it was some rather esoteric condition that caused
apache to infinite-recursively call some function... Since I don't
remember what the reason was, I was always hesitant to remove that bit of
code. It was put in years ago back in the apache 1.2 days, so it might be
safe to remove in 2.0... I guess we can try it at least.

Grisha
From damon at asianreflection.com  Mon Aug 11 19:03:21 2003
From: damon at asianreflection.com (Damon Lynch)
Date: Fri Jan  9 21:47:38 2004
Subject: [mod_python]  Re: Cannot run test script: (Re)importing module
	'mptest'
In-Reply-To: <bh6j6s$d1t$1@sea.gmane.org>
References: <1060484731.2960.94.camel@damon.asianreflection.com>
	 <bh6j6s$d1t$1@sea.gmane.org>
Message-ID: <1060585401.8445.5.camel@damon.asianreflection.com>

On Mon, 2003-08-11 at 11:07, Russell Yanofsky wrote:
> Damon Lynch wrote:
> > Hi,
> > 
> > There is an example test script in:
> > 
> > http://www.modpython.org/live/current/doc-html/inst-testing.html
> > 
> > I cannot get the example test script to run
> > ...
> > the URL I'm using is:
> > http://myserver/test/mptest
> > 
> 
> Should that be http://myserver/test/mptest.py ?
> 

Hi Russ,

That appears to make no difference.  When I inspect the headers I'm
getting the output as application/x-python instead of text/html:

HTTP/1.1 200 OKCRLF
Date: Mon, 11 Aug 2003 06:56:49 GMTCRLF
Server: Apache-AdvancedExtranetServer/2.0.47 (Mandrake Linux/1.1mdk) mod_python/3.0.3 Python/2.2.2 mod_ssl/2.0.47 OpenSSL/0.9.7aCRLF
Content-Location: mptest.pyCRLF
Vary: negotiate,acceptCRLF
TCN: choiceCRLF
Set-Cookie: Apache=207.200.81.211.1060585009151968; path=/; max-age=1209600CRLF
Connection: closeCRLF
Content-Type: application/x-pythonCRLF
Expires: Mon, 11 Aug 2003 06:56:49 GMTCRLF
CRLF
Hello World!


I'm bamboozled at this point!

Damon

From davidf at sjsoft.com  Mon Aug 11 09:23:51 2003
From: davidf at sjsoft.com (David Fraser)
Date: Fri Jan  9 21:47:38 2004
Subject: [mod_python]  Re: Cannot run test script: (Re)importing module
 'mptest'
In-Reply-To: <1060585401.8445.5.camel@damon.asianreflection.com>
References: <1060484731.2960.94.camel@damon.asianreflection.com>
	<bh6j6s$d1t$1@sea.gmane.org>
	<1060585401.8445.5.camel@damon.asianreflection.com>
Message-ID: <3F374487.7050906@sjsoft.com>

Damon Lynch wrote:

>On Mon, 2003-08-11 at 11:07, Russell Yanofsky wrote:
>  
>
>>Damon Lynch wrote:
>>    
>>
>>>Hi,
>>>
>>>There is an example test script in:
>>>
>>>http://www.modpython.org/live/current/doc-html/inst-testing.html
>>>
>>>I cannot get the example test script to run
>>>...
>>>the URL I'm using is:
>>>http://myserver/test/mptest
>>>
>>>      
>>>
>>Should that be http://myserver/test/mptest.py ?
>>
>>    
>>
>
>Hi Russ,
>
>That appears to make no difference.  When I inspect the headers I'm
>getting the output as application/x-python instead of text/html:
>
>HTTP/1.1 200 OKCRLF
>Date: Mon, 11 Aug 2003 06:56:49 GMTCRLF
>Server: Apache-AdvancedExtranetServer/2.0.47 (Mandrake Linux/1.1mdk) mod_python/3.0.3 Python/2.2.2 mod_ssl/2.0.47 OpenSSL/0.9.7aCRLF
>Content-Location: mptest.pyCRLF
>Vary: negotiate,acceptCRLF
>TCN: choiceCRLF
>Set-Cookie: Apache=207.200.81.211.1060585009151968; path=/; max-age=1209600CRLF
>Connection: closeCRLF
>Content-Type: application/x-pythonCRLF
>Expires: Mon, 11 Aug 2003 06:56:49 GMTCRLF
>CRLF
>Hello World!
>
>
>I'm bamboozled at this point!
>
>Damon
>  
>
So the content type is being set to application/x-python ... it seems 
likely to me that somewhere in your Apache configuration (mime.types?) 
you've got it set to return this mime type ... do a search for 
application/x-python in your Apache conf directory files and see what 
you find...

David

From rey4 at columbia.edu  Mon Aug 11 14:05:22 2003
From: rey4 at columbia.edu (Russell Yanofsky)
Date: Fri Jan  9 21:47:38 2004
Subject: [mod_python] Re: Re: script_name bug?
References: 
	<bh32ej$m9l$1@main.gmane.org><20030809123926.T83158@onyx.ispol.com>
	<bh4ebb$qlq$1@sea.gmane.org> <20030810200027.R92644@onyx.ispol.com>
Message-ID: <bh8lt0$hkm$1@sea.gmane.org>

Gregory (Grisha) Trubetskoy wrote:
> On Sat, 9 Aug 2003, Russell Yanofsky wrote:
>
>> Gregory (Grisha) Trubetskoy wrote:
>>> Russel -
>>>
>>> Since mod_python isn't a CGI environment (and doesn't care to be one
>>> either), the definition of SCRIPT_NAME is rather blurry.
>>
>> It might be blurry when a directory handler is used, but it's not at
>> all blurry in this case, where mod_python is acting as a handler for
>> requests for .py files. SCRIPT_NAME should simply point to the .py
>> file that has been requested.
>
> Well, the file requested doesn't have anything to do with what
> PythonHandler specifies, e.g. in your example it will respond just the
> same with requested url of "/mptest/blahblah.py/abc/123" instead of
> "/mptest/mptest.py/abc/123". The question then becomes should
> SCRIPT_NAME be "/mptest/mptest.py" or "/mptest/blahblah.py"?

It should be /mptest/blahblah.py, because that's the .py file that the
client requested. In general, it makes sense for SCRIPT_NAME to be a URL
to the file being handled, not the to the handler. Returning a URL to the
the python handler file would be equivalent to returning a url to mod_cgi.c
in a CGI request. This doesn't make sense and wouldn't be useful.

>>> I don't think it would be right to tinker with what
>>> req.subprocess_env contains - it should return whatever apache put
>>> there, uncensored, so to that degree it's not a bug as far as I am
>>> concerned.
>>
>> But, AFAICT, it is tinkering with the value.
>
> It sort of does. There is a place in requestobject.c where it removes
> the trailing slash for something, then puts it back, and now I don't
> remember why it does it, but it was some rather esoteric condition
> that caused apache to infinite-recursively call some function...
> Since I don't remember what the reason was, I was always hesitant to
> remove that bit of code. It was put in years ago back in the apache
> 1.2 days, so it might be safe to remove in 2.0... I guess we can try
> it at least.

I found the code you're talking about in get_request_object() in
src/mod_python.c. I removed the special case for the trailing slash, and
everything now seems to work correctly. Patches are attached for mod_python
2.7.8 and mod_python 3.0.3. I've tested them with apache 1.3.28 and apache
2.0.47 using the SetHandler directive and AddHandler directives, and didn't
encounter any errors, infinite loops, or other unexpected behavior.

- Russ
-------------- next part --------------
A non-text attachment was scrubbed...
Name: mod_python-2.7.8.diff
Type: application/octet-stream
Size: 1229 bytes
Desc: not available
Url : http://mailman.modpython.org/pipermail/mod_python/attachments/20030811/8718dca2/mod_python-2.7.8.obj
-------------- next part --------------
A non-text attachment was scrubbed...
Name: mod_python-3.0.3.diff
Type: application/octet-stream
Size: 1544 bytes
Desc: not available
Url : http://mailman.modpython.org/pipermail/mod_python/attachments/20030811/8718dca2/mod_python-3.0.3.obj
From grisha at modpython.org  Mon Aug 11 22:12:01 2003
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 21:47:38 2004
Subject: [mod_python] Re: Re: script_name bug?
In-Reply-To: <bh8lt0$hkm$1@sea.gmane.org>
References: <bh32ej$m9l$1@main.gmane.org><20030809123926.T83158@onyx.ispol.com>
	<bh4ebb$qlq$1@sea.gmane.org> <20030810200027.R92644@onyx.ispol.com>
	<bh8lt0$hkm$1@sea.gmane.org>
Message-ID: <20030811221051.B19156@onyx.ispol.com>


> Patches are attached for mod_python 2.7.8 and mod_python 3.0.3.

Thanks, patches are always welcome!

Grisha
From damon at asianreflection.com  Tue Aug 12 21:46:34 2003
From: damon at asianreflection.com (Damon Lynch)
Date: Fri Jan  9 21:47:38 2004
Subject: [mod_python]  Re: Cannot run test script: (Re)importing module
	'mptest'
In-Reply-To: <3F374487.7050906@sjsoft.com>
References: <1060484731.2960.94.camel@damon.asianreflection.com>
	 <bh6j6s$d1t$1@sea.gmane.org>
	 <1060585401.8445.5.camel@damon.asianreflection.com>
	 <3F374487.7050906@sjsoft.com>
Message-ID: <1060681593.12636.18.camel@damon.asianreflection.com>

On Mon, 2003-08-11 at 19:23, David Fraser wrote:
> >
> So the content type is being set to application/x-python ... it seems 
> likely to me that somewhere in your Apache configuration (mime.types?) 
> you've got it set to return this mime type ... do a search for 
> application/x-python in your Apache conf directory files and see what 
> you find...
> 

Thanks David.  That did the trick.  It seems to me that someone may like
to review putting the above advice on this page:

http://www.modpython.org/live/current/doc-html/inst-apacheconfig.html

Since Mandrake comes by default with:

application/x-python                      py
application/x-python-bytecode             pyc

It would certainly help people like me, who know a lot more about python
than they do about apache!! ;-)

Damon

From donegal at myrealbox.com  Thu Aug 14 00:39:43 2003
From: donegal at myrealbox.com (William J. Fellows)
Date: Fri Jan  9 21:47:38 2004
Subject: [mod_python] YAQA mod_python and the missing _apache module
Message-ID: <1634432327.20030814003943@myrealbox.com>

I'm sorry to trouble the list but I have not been able to get it
mod_python to work.  My setup is Python 2.2.2, Apache 2.0.47,
mod_python 3.0.3  Python root directory is e:\Python22  Apache's root
is E:\Program Files\Apache Group\Apache2  Windows 2k Professional

I have a sample python script sitting out in cgi-bin and it works just
fine.  The mptest file though, horks everytime.  Feel free to beat on
my server. 
http://65.26.28.214/cgi-bin/sample.py
http://65.26.28.214/cgi-bin/mptest.py


The error message is:
Premature end of script headers: mptest.py
Traceback (most recent call last):
  File "E:\Program Files\Apache Group\Apache2\cgi-bin\mptest.py", line 1, in ?
    from mod_python import apache
  File "E:\Python22\Lib\site-packages\mod_python\apache.py", line 67, in ?
    import _apache
ImportError: No module named _apache


Been here,
http://www.modpython.org/FAQ/faqw.py?req=show&file=faq02.001.htp
and I've been there
http://www.modpython.org/FAQ/faqw.py?req=show&file=faq02.002.htp

I believe I understand what that says and everything I could find about
it from the archived email messages but unless Apache is invoking the
python enviroment outside of apache, I have no clue what's going
wrong.  And if it is doing it outside, I have no idea how it got that
way.

Saw both pythonhome and pythonpath referenced so I've touched both of
them.

PYTHONHOME=e:\python22
PYTHONPATH=e:\python22;e:\python22\lib;E:\Python22\Lib\site-packages\mod_python;E:\Python22\Lib\site-packages

I'm at my wits end.  I know I can get Python running under IIS but as
I don't feel like patching daily, I thought I'd give Apache a whirl.
I've dutifully scoured the archives and applied what I saw there but
no go so anyone with some insight to offer would be worshiped from
afar.

/bill

p.s.

The link for full archives does not work.
http://www.modpython.org/pipermail/mod_python.mbox/mod_python.mbox
Fortunately, wget -R -a.gz worked just fine.




The relevant parts of my conf file look like

=-=-=-=-=-=-=-=-BEGIN httpd.conf=-=-====-=-=-=-=-=-=--=-
LoadModule python_module modules/mod_python.so
ScriptInterpreterSource Registry

<Directory "E:/Program Files/Apache Group/Apache2/htdocs">
    AddHandler python-program .py
#   I tried combinations of the next two lines but to no avail
#    AddHandler cgi-script .py
#    PythonHandler mptest

    PythonHandler mod_python.publisher
    PythonDebug On

    Options Indexes FollowSymLinks
    AllowOverride None
    Order allow,deny
    Allow from all

</Directory>
=-=-=-=-=-=-=-=-END httpd.conf=-=-====-=-=-=-=-=-=--=-


=-=-=-=-=-=-=-=-BEGIN sample.py=-=-====-=-=-=-=-=-=--=-
print "Content-type: text/html"
print
print "<pre>"
import os, sys
print "<strong>Python %s</strong>" % sys.version
for (x,y) in os.environ.items():
   print "%s\t%s" % (x, y)

print "\nsys.path"
for p in sys.path:
   print p
print "</pre>"

=-=-=-=-=-=-=-=-END sample.py=-=-====-=-=-=-=-=-=--=-


=-=-=-=-=-=-=-=-BEGIN mptest.py=-=-====-=-=-=-=-=-=--=-
from mod_python import apache

def handler(req):
    req.write("Hello World!")
    return apache.OK

=-=-=-=-=-=-=-=-END mptest.py=-=-====-=-=-=-=-=-=--=-

From davidf at sjsoft.com  Thu Aug 14 09:25:36 2003
From: davidf at sjsoft.com (David Fraser)
Date: Fri Jan  9 21:47:38 2004
Subject: [mod_python] YAQA mod_python and the missing _apache module
In-Reply-To: <1634432327.20030814003943@myrealbox.com>
References: <1634432327.20030814003943@myrealbox.com>
Message-ID: <3F3B3970.40300@sjsoft.com>

William J. Fellows wrote:

>The error message is:
>Premature end of script headers: mptest.py
>Traceback (most recent call last):
>  File "E:\Program Files\Apache Group\Apache2\cgi-bin\mptest.py", line 1, in ?
>    from mod_python import apache
>  File "E:\Python22\Lib\site-packages\mod_python\apache.py", line 67, in ?
>    import _apache
>ImportError: No module named _apache
>
>  
>
 From this error, it means you are putting mptest.py in your cgi-bin 
directory. If it is in there it is probably being run as an external 
Python script, which is not what you want as you won't have access to 
the mod_python internals.
Try moving it to a standard directory, then in an .htaccess or 
<Directory> section for that directory, make sure you have
  AddHandler python-program .py
  PythonHandler mptest.py
  PythonDebug On
(that's the correct combination out of what you quoted below).
Then feed back if that doesn't work.

>Been here,
>http://www.modpython.org/FAQ/faqw.py?req=show&file=faq02.001.htp
>and I've been there
>http://www.modpython.org/FAQ/faqw.py?req=show&file=faq02.002.htp
>
>I believe I understand what that says and everything I could find about
>it from the archived email messages but unless Apache is invoking the
>python enviroment outside of apache, I have no clue what's going
>wrong.  And if it is doing it outside, I have no idea how it got that
>way.
>
>Saw both pythonhome and pythonpath referenced so I've touched both of
>them.
>
>PYTHONHOME=e:\python22
>PYTHONPATH=e:\python22;e:\python22\lib;E:\Python22\Lib\site-packages\mod_python;E:\Python22\Lib\site-packages
>  
>
It looks from your log above like the path is fine, as you are importing 
mod_python.apache OK.
You will only be able to import _apache if you are really running inside 
mod_python.
If you want to test the path, comment out the import of apache (you can 
return 200 instead of apache.OK) and import sys ; in the handler do 
req.write("Path: %r\n" % sys.path) and you will get the actual value 
printed out.

Hope that helps
David


From davidf at sjsoft.com  Thu Aug 14 15:54:39 2003
From: davidf at sjsoft.com (David Fraser)
Date: Fri Jan  9 21:47:38 2004
Subject: [mod_python] Cookies and redirect...
Message-ID: <3F3B949F.8030806@sjsoft.com>

Hi

I came across the following problem and wondered if there was a workaround.
Basically I want to set a cookie in a certain directory, and at the same 
time issue a Redirect to another place.
So I wanted to do:
  req.headers_out.add('Set-Cookie', morsel.OutputString())
  req.headers_out.add('Location:', location)
  return apache.HTTP_MOVED_TEMPORARILY

However, I found that as soon as I return the HTTP_MOVED_TEMPORARILY, 
the Set-Cookie string seems to be removed from the headers going to the 
client (this was tested by using the livehttpheaders extension to Firebird).
I couldn't work out where in the code that was happening but suspect 
that it is standard Apache behaviour.
Is this because I'm not supposed to be allowed to do this, or is it odd?

(I have a workaround of having a page with a meta http-equiv="refresh", 
but wondered if there is a way to get it working as would like...)

Thanks
David


From grisha at modpython.org  Thu Aug 14 10:17:14 2003
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 21:47:38 2004
Subject: [mod_python] Cookies and redirect...
In-Reply-To: <3F3B949F.8030806@sjsoft.com>
References: <3F3B949F.8030806@sjsoft.com>
Message-ID: <20030814100919.U55932@onyx.ispol.com>


This is a feature of Apache. When it sees an error response (all 204 (no
content), 3xx (redirect), 4xx (client error) and 5xx (server error)),
which includes HTTP_MOVED_TEMPORARILY (even though it's not an error
technically), it sends out only req.err_headers_out. It does make a
special provision for the Location header and copy it into err_headers_out
if it's not already there, which is why it makes it through.

You can send both headers by either:

   req.err_headers_out.add('Set-Cookie', morsel.OutputString())
   req.err_headers_out.add('Location:', location)
   return apache.HTTP_MOVED_TEMPORARILY

or

   req.headers_out.add('Set-Cookie', morsel.OutputString())
   req.status = apache.HTTP_MOVED_TEMPORARILY
   return apache.OK

Grisha


On Thu, 14 Aug 2003, David Fraser wrote:

> Hi
>
> I came across the following problem and wondered if there was a workaround.
> Basically I want to set a cookie in a certain directory, and at the same
> time issue a Redirect to another place.
> So I wanted to do:
>   req.headers_out.add('Set-Cookie', morsel.OutputString())
>   req.headers_out.add('Location:', location)
>   return apache.HTTP_MOVED_TEMPORARILY
>
> However, I found that as soon as I return the HTTP_MOVED_TEMPORARILY,
> the Set-Cookie string seems to be removed from the headers going to the
> client (this was tested by using the livehttpheaders extension to Firebird).
> I couldn't work out where in the code that was happening but suspect
> that it is standard Apache behaviour.
> Is this because I'm not supposed to be allowed to do this, or is it odd?
>
> (I have a workaround of having a page with a meta http-equiv="refresh",
> but wondered if there is a way to get it working as would like...)
>
> Thanks
> David
>
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>
From davidf at sjsoft.com  Thu Aug 14 17:19:43 2003
From: davidf at sjsoft.com (David Fraser)
Date: Fri Jan  9 21:47:38 2004
Subject: [mod_python] Cookies and redirect...
In-Reply-To: <20030814100919.U55932@onyx.ispol.com>
References: <3F3B949F.8030806@sjsoft.com>
	<20030814100919.U55932@onyx.ispol.com>
Message-ID: <3F3BA88F.7050202@sjsoft.com>

Thanks for the quick response!
This is working nicely now...

David

Gregory (Grisha) Trubetskoy wrote:

>This is a feature of Apache. When it sees an error response (all 204 (no
>content), 3xx (redirect), 4xx (client error) and 5xx (server error)),
>which includes HTTP_MOVED_TEMPORARILY (even though it's not an error
>technically), it sends out only req.err_headers_out. It does make a
>special provision for the Location header and copy it into err_headers_out
>if it's not already there, which is why it makes it through.
>
>You can send both headers by either:
>
>   req.err_headers_out.add('Set-Cookie', morsel.OutputString())
>   req.err_headers_out.add('Location:', location)
>   return apache.HTTP_MOVED_TEMPORARILY
>
>or
>
>   req.headers_out.add('Set-Cookie', morsel.OutputString())
>   req.status = apache.HTTP_MOVED_TEMPORARILY
>   return apache.OK
>
>Grisha
>
>
>On Thu, 14 Aug 2003, David Fraser wrote:
>
>  
>
>>Hi
>>
>>I came across the following problem and wondered if there was a workaround.
>>Basically I want to set a cookie in a certain directory, and at the same
>>time issue a Redirect to another place.
>>So I wanted to do:
>>  req.headers_out.add('Set-Cookie', morsel.OutputString())
>>  req.headers_out.add('Location:', location)
>>  return apache.HTTP_MOVED_TEMPORARILY
>>
>>However, I found that as soon as I return the HTTP_MOVED_TEMPORARILY,
>>the Set-Cookie string seems to be removed from the headers going to the
>>client (this was tested by using the livehttpheaders extension to Firebird).
>>I couldn't work out where in the code that was happening but suspect
>>that it is standard Apache behaviour.
>>Is this because I'm not supposed to be allowed to do this, or is it odd?
>>
>>(I have a workaround of having a page with a meta http-equiv="refresh",
>>but wondered if there is a way to get it working as would like...)
>>
>>Thanks
>>David
>>
>>
>>_______________________________________________
>>Mod_python mailing list
>>Mod_python@modpython.org
>>http://mailman.modpython.org/mailman/listinfo/mod_python
>>
>>    
>>
>
>  
>



From rey4 at columbia.edu  Sat Aug 16 15:35:11 2003
From: rey4 at columbia.edu (Russell Yanofsky)
Date: Fri Jan  9 21:47:38 2004
Subject: [mod_python] Re: Re: Re: script_name bug?
References: 
	<bh32ej$m9l$1@main.gmane.org><20030809123926.T83158@onyx.ispol.com><bh4ebb$qlq$1@sea.gmane.org>
	<20030810200027.R92644@onyx.ispol.com><bh8lt0$hkm$1@sea.gmane.org>
	<20030811221051.B19156@onyx.ispol.com>
Message-ID: <bhm118$fr8$1@sea.gmane.org>

Gregory (Grisha) Trubetskoy wrote:
>> Patches are attached for mod_python 2.7.8 and mod_python 3.0.3.
>
> Thanks, patches are always welcome!

I should hope so. Will these changes be incorporated in future releases of
mod_python?

- Russ


From neel at mediapulse.com  Wed Aug 20 17:51:47 2003
From: neel at mediapulse.com (Michael C. Neel)
Date: Fri Jan  9 21:47:38 2004
Subject: [mod_python] pysco + mod_python?
Message-ID: <C0FC22C08B82074A88B50061764157776B9618@johnson.mediapulse.net>

Has anyone tried to use pysco (http://psyco.sourceforge.net/) with
mod_python to speed up programs?  Is this something to try, or is it not
safe to use under mod_python?

Mike

From davidf at sjsoft.com  Thu Aug 21 07:34:55 2003
From: davidf at sjsoft.com (David Fraser)
Date: Fri Jan  9 21:47:38 2004
Subject: [mod_python] psyco + mod_python?
In-Reply-To: <C0FC22C08B82074A88B50061764157776B9618@johnson.mediapulse.net>
References: <C0FC22C08B82074A88B50061764157776B9618@johnson.mediapulse.net>
Message-ID: <3F4459FF.5070606@sjsoft.com>

Michael C. Neel wrote:

>Has anyone tried to use pysco (http://psyco.sourceforge.net/) with
>mod_python to speed up programs?  Is this something to try, or is it not
>safe to use under mod_python?
>
>Mike
>
>  
>
Hi

I have tried it and it seemed to work without problems, but I did not 
have a chance to profile it or verify that it was actually optimising 
stuff properly.
I can imagine that it would be great particularly for optimising short 
handlers and the modpython code itself.
It would be worth reporting your findings here if you do get it working 
as I am sure others are interested.

David

PS For those who don't know psyco, it is definitely worth checking out, 
does very intelligent JIT Python->assembly compilation based on type 
analysis.
Look at the web page mentioned above for more info

From mateusz at ant.gliwice.pl  Thu Aug 21 09:05:01 2003
From: mateusz at ant.gliwice.pl (Mateusz Korniak)
Date: Fri Jan  9 21:47:38 2004
Subject: [mod_python] pysco + mod_python?
In-Reply-To: <C0FC22C08B82074A88B50061764157776B9618@johnson.mediapulse.net>
References: <C0FC22C08B82074A88B50061764157776B9618@johnson.mediapulse.net>
Message-ID: <200308210905.02501.mateusz@ant.gliwice.pl>

On Wednesday 20 August 2003 23:51, Michael C. Neel wrote:
> Has anyone tried to use pysco (http://psyco.sourceforge.net/) with
> mod_python to speed up programs?  Is this something to try, or is it not
> safe to use under mod_python?

I tried but did not notice any speed up (psyco 1.0 and 1.1,mod_python 2.7.8). 
In fact, I didn't notice any problems either. Code was just 10% slower. :(. 
Perhaps It was case I just did dumb psyco.full() ...

-- 
Mateusz Korniak


From davidf at sjsoft.com  Thu Aug 21 09:23:03 2003
From: davidf at sjsoft.com (David Fraser)
Date: Fri Jan  9 21:47:38 2004
Subject: [mod_python] pysco + mod_python?
In-Reply-To: <200308210905.02501.mateusz@ant.gliwice.pl>
References: <C0FC22C08B82074A88B50061764157776B9618@johnson.mediapulse.net>
	<200308210905.02501.mateusz@ant.gliwice.pl>
Message-ID: <3F447357.3080102@sjsoft.com>

Mateusz Korniak wrote:

>On Wednesday 20 August 2003 23:51, Michael C. Neel wrote:
>  
>
>>Has anyone tried to use pysco (http://psyco.sourceforge.net/) with
>>mod_python to speed up programs?  Is this something to try, or is it not
>>safe to use under mod_python?
>>    
>>
>
>I tried but did not notice any speed up (psyco 1.0 and 1.1,mod_python 2.7.8). 
>In fact, I didn't notice any problems either. Code was just 10% slower. :(. 
>Perhaps It was case I just did dumb psyco.full() ...
>
>  
>
Sounds similar to my experience. Maybe we try out different profiling 
options and put together a guide on using psyco with mod_python...

David

From mike.looijmans at asml.com  Thu Aug 21 11:06:09 2003
From: mike.looijmans at asml.com (Mike Looijmans)
Date: Fri Jan  9 21:47:38 2004
Subject: [mod_python] Making an absolute URL
Message-ID: <01c367c3$75d9d680$926a1e6e@wsasd464>

As usual, there are many ways that lead to the same point.

I'm sending a 302 or 303 response to some queries to quickly redirect the
client to the 'next' page (for example after logging in is successful it
immediately proceeds to the 'calling' page by sending a "303 See Other").

I did this previously with a Refresh header, but that doesn't work in Lynx
for example, it "flashes" the screen, and the 303 was specifically meant for
this purpose.

Only trouble now is that the "Location" header in a 30x response must be an
absolute URL instead of a relative one. If I just supply a relative URL, the
browsers grudgingly accept it, but it's just not right. So if the user
request http://myhost:8080/foo/ i send a redirection to
http://myhost:8080/foo/bar by returning 302 (moved permanently) and add a
header "Location: bar". But accoring to HTTP spec (RFC2068), the location
header should be "Location: http://myhost:8080/foo/bar" instead.

It should be easy to turn the URL into an absolute one. However, there are
many ways to do this, and I wonder what is the one that will work for all
client and server configurations.

For example, i want the URL to remain as the user typed it, so that there's
a difference between using http://localhost/foo/bar or
http://localhost:80/foo/bar, between http://myhost.mydomain.com/ and
http://myhost/ etc, etc.

Probably, the "Host" header from the client is a good thing for this, but it
is only mandatory for HTTP/1.1 and not for 1.0 which many browsers still
use.

Mike.





-- 
The information contained in this communication and any attachments is confidential and may be privileged, and is for the sole use of the intended recipient(s). Any unauthorized review, use, disclosure or distribution is prohibited. If you are not the intended recipient, please notify the sender immediately by replying to this message and destroy all copies of this message and any attachments. ASML is neither liable for the proper and complete transmission of the information contained in this communication, nor for any delay in its receipt.


From greg at amstlc.com  Thu Aug 21 13:57:50 2003
From: greg at amstlc.com (Greg Unrein)
Date: Fri Jan  9 21:47:38 2004
Subject: [mod_python] Python 2.3/ modpython 3.0.3 problem
Message-ID: <3F45324E.4010402@amstlc.com>

I recently started working in Python 2.3 from 2.2.2 and after installing 
modpython 3.0.3 for the new Python 2.3 installation it seems that 
modpython is still using Python 2.2.2. This is under windows 2000 and 
I've removed the modpython install for python 2.2.2, so apache 
complains. Any help would be appreciated greatly!

Thanks,
Greg

From grisha at modpython.org  Thu Aug 21 19:31:50 2003
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 21:47:38 2004
Subject: [mod_python] Python 2.3/ modpython 3.0.3 problem
In-Reply-To: <3F45324E.4010402@amstlc.com>
References: <3F45324E.4010402@amstlc.com>
Message-ID: <20030821192853.L68478@onyx.ispol.com>


I don't recommend using mod_python 3.0.3 with Python 2.3, there are some
things that changed in 2.3 where it may not work.

Grisha

On Thu, 21 Aug 2003, Greg Unrein wrote:

> I recently started working in Python 2.3 from 2.2.2 and after installing
> modpython 3.0.3 for the new Python 2.3 installation it seems that
> modpython is still using Python 2.2.2. This is under windows 2000 and
> I've removed the modpython install for python 2.2.2, so apache
> complains. Any help would be appreciated greatly!
>
> Thanks,
> Greg
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>
From gnb at itga.com.au  Fri Aug 22 09:39:34 2003
From: gnb at itga.com.au (Gregory Bond)
Date: Fri Jan  9 21:47:38 2004
Subject: [mod_python] Making an absolute URL 
In-Reply-To: Your message of Thu, 21 Aug 2003 11:06:09 +0200.
Message-ID: <200308212339.JAA07072@lightning.itga.com.au>


mike.looijmans@asml.com said:
> Probably, the "Host" header from the client is a good thing for this,
> but it is only mandatory for HTTP/1.1 and not for 1.0 which many
> browsers still use. 

Most browsers still only claim HTTP/1.0, but nearly all of them use Host:
header. Most virtual hosting won't work without the Host header, so you'd have 
to go back to browsers from the IE/NS 3 era to find a problem. 

(IP addresses are getting scarce, so unless you use SSL and need IP-based 
vhosting, most web hosts only offer name-based vhosting.)



From sanctuary at terra.es  Sat Aug 23 20:13:31 2003
From: sanctuary at terra.es (Rix Sanctuary)
Date: Fri Jan  9 21:47:38 2004
Subject: [mod_python] 
	help!: modpython, howto pass results to a running php script?
Message-ID: <!~!UENERkVCMDkAAQACAAAAAAAAAAAAAAAAABgAAAAAAAAAUuS0GoPudku6WIdlnSUuwcKAAAAQAAAAtpwvdzFLvE++3Ot7HeNxvAEAAAAA@terra.es>

 
-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1


Hi there!

Have a python calculation module and I would like to include/work with the results in a seperate php script.
My code runs in a box with Apache/2.0.47(win32) mod_python/3.0.3 Python 2.2.3 Php/4.3.2

My python module is called from a php script like this:
    <?php require 'http://localhost/xxx/calc.py/'; ?>

   PHP   <----   CALC.PY    <----  BIGCALC.PY
			  |
			  |
	from mod_python import apache
 	import bigcalc

Is there an easy way to use the results yield by my python module in my php script as local variables?

Thanks in advance
rix

-----BEGIN PGP SIGNATURE-----
Version: PGP 8.0

iQA/AwUBP0euyhvgnt8VShhuEQLFngCaAoRawlJ9dMWyt3K9lNLge50QZa8AoMFc
QDO/ZjGHWV1PG889q/+ItxvJ
=erGk
-----END PGP SIGNATURE-----



From grisha at modpython.org  Sun Aug 24 13:05:02 2003
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 21:47:38 2004
Subject: [mod_python]  help!: modpython, howto pass results to a running
 php script?
In-Reply-To: <!~!UENERkVCMDkAAQACAAAAAAAAAAAAAAAAABgAAAAAAAAAUuS0GoPudku6WIdlnSUuwcKAAAAQAAAAtpwvdzFLvE++3Ot7HeNxvAEAAAAA@terra.es>
References: <!~!UENERkVCMDkAAQACAAAAAAAAAAAAAAAAABgAAAAAAAAAUuS0GoPudku6WIdlnSUuwcKAAAAQAAAAtpwvdzFLvE++3Ot7HeNxvAEAAAAA@terra.es>
Message-ID: <20030824130257.E16162@onyx.ispol.com>


I don't know first thing about PHP, but if it has a way of making a
sub-request and then capturing its output, that would be one way. Or if
PHP has access to request notes (req.notes in mod_python), there is
probably some way to use them as a way to pass information.

Grishas

On Sat, 23 Aug 2003, Rix Sanctuary wrote:

>
> -----BEGIN PGP SIGNED MESSAGE-----
> Hash: SHA1
>
>
> Hi there!
>
> Have a python calculation module and I would like to include/work with the results in a seperate php script.
> My code runs in a box with Apache/2.0.47(win32) mod_python/3.0.3 Python 2.2.3 Php/4.3.2
>
> My python module is called from a php script like this:
>     <?php require 'http://localhost/xxx/calc.py/'; ?>
>
>    PHP   <----   CALC.PY    <----  BIGCALC.PY
> 			  |
> 			  |
> 	from mod_python import apache
>  	import bigcalc
>
> Is there an easy way to use the results yield by my python module in my php script as local variables?
>
> Thanks in advance
> rix
>
> -----BEGIN PGP SIGNATURE-----
> Version: PGP 8.0
>
> iQA/AwUBP0euyhvgnt8VShhuEQLFngCaAoRawlJ9dMWyt3K9lNLge50QZa8AoMFc
> QDO/ZjGHWV1PG889q/+ItxvJ
> =erGk
> -----END PGP SIGNATURE-----
>
>
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>
From nelson at crynwr.com  Mon Aug 25 16:54:28 2003
From: nelson at crynwr.com (Russell Nelson)
Date: Fri Jan  9 21:47:38 2004
Subject: [mod_python] How do I serve up .html files?
Message-ID: <16202.30596.238589.112878@desk.crynwr.com>

Maybe this is really an Apache question, but it seems to me like it
ought to come up in a mod_python context as well.  Can't find it in
the documentation, the FAQ, or the mailing list archives
(Aug/Jul/Jun).

How do I cause my python script to be run when a .html file is accessed?
    http://angry-economics.russnelson.com/index.html

How do I cause my python script to be run when any old file is accessed?
    http://angry-economics.russnelson.com/

In other words, I want a handler which gets run no matter what the
rest of the URL is.  You'd think this would be in the documentation,
enabling people to make fully scripted sites, but it seems not to be.

I can't insert a /foo.py/ in there because I have to preserve all the
old URLs.

-- 
--My blog is at angry-economist.russnelson.com  | Free markets express in the
Crynwr sells support for free software  | PGPok | practical world our belief
521 Pleasant Valley Rd. | +1 315 268 1925 voice | that there is that of God
Potsdam, NY 13676-3213  | +1 315 268 9201 FAX   | in all people. -Chris V.
From synec at viscous.org  Mon Aug 25 14:36:41 2003
From: synec at viscous.org (john spurling)
Date: Fri Jan  9 21:47:38 2004
Subject: [mod_python] How do I serve up .html files?
In-Reply-To: <16202.30596.238589.112878@desk.crynwr.com>
References: <16202.30596.238589.112878@desk.crynwr.com>
Message-ID: <20030825213641.GR19969@c7c8.colobox.com>

On Mon, Aug 25, 2003 at 04:54:28PM -0400, Russell Nelson wrote:
> Maybe this is really an Apache question, but it seems to me like it
> ought to come up in a mod_python context as well.  Can't find it in
> the documentation, the FAQ, or the mailing list archives
> (Aug/Jul/Jun).
> 
> How do I cause my python script to be run when a .html file is accessed?
>     http://angry-economics.russnelson.com/index.html
> 
> How do I cause my python script to be run when any old file is accessed?
>     http://angry-economics.russnelson.com/
> 
> In other words, I want a handler which gets run no matter what the
> rest of the URL is.  You'd think this would be in the documentation,
> enabling people to make fully scripted sites, but it seems not to be.
> 
> I can't insert a /foo.py/ in there because I have to preserve all the
> old URLs.

i think you can do it using the "SetHandler" directive in httpd.conf,
like this:

<Directory "/path/to/document/root">
SetHandler python-program
PythonHandler mymodule
</Directory>

from there, mymodule.py (located in the document root) will handle all
requests. here's a sample to put in mymodule.py:

from mod_python import apache
def handler(req):
    req.content_type = 'text/plain'
    req.write("uri: %s" % req.uri)
    return apache.OK

voila. that'll print out whatever uri gets typed in.

-john

-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
Url : http://mailman.modpython.org/pipermail/mod_python/attachments/20030825/32b77b5c/attachment.bin
From conrad at hep.caltech.edu  Mon Aug 25 14:42:04 2003
From: conrad at hep.caltech.edu (Conrad Steenberg)
Date: Fri Jan  9 21:47:38 2004
Subject: [mod_python] How do I serve up .html files?
In-Reply-To: <16202.30596.238589.112878@desk.crynwr.com>
References: <16202.30596.238589.112878@desk.crynwr.com>
Message-ID: <1061847724.32518.23.camel@heppc22>

Hi Russel

The way I do it is to have a handler that reposonds to GET requests. 
E.g. if you have a documentroot of /var/www/html:

<Directory /var/www/html>
       SetHandler python-program
       AddHandler python-program .py
       PythonDebug On
       PythonHandler my_handler
       DirectoryIndex myhandler.py
</Directory>

I.e. myhandler.py is the directory index. Then inside the handler
function in myhandler.py:

def handler(req):
  if req.method=='GET':
     # Get the name of the file requested
     inputname=reduce(lambda x,y:x+'/'+y,string.split(req.uri, '/')[1:])

     # Construct an outputname
     outputname='/var/www/html'+inputname
     
     # Send the file to the client
     send_file(req,outputname,0,-1) # Or your own function doing lots of req.write()'s
     return apache.OK


This is pseudo-code taken from another implmentation, so play around
with the inputname statement to get it right. But the idea is to get the
filename from req.uri, and then construct a real filesystem filename,
the contents of which can be sent to the client.

An implementation of the send_file() function above is attached, making
use of the req.write_file() function if available (I think it is in the
CVS version), or a slower version based on req.write()

HTH

Conrad


On Mon, 2003-08-25 at 13:54, Russell Nelson wrote:
> Maybe this is really an Apache question, but it seems to me like it
> ought to come up in a mod_python context as well.  Can't find it in
> the documentation, the FAQ, or the mailing list archives
> (Aug/Jul/Jun).
> 
> How do I cause my python script to be run when a .html file is accessed?
>     http://angry-economics.russnelson.com/index.html
> 
> How do I cause my python script to be run when any old file is accessed?
>     http://angry-economics.russnelson.com/
> 
> In other words, I want a handler which gets run no matter what the
> rest of the URL is.  You'd think this would be in the documentation,
> enabling people to make fully scripted sites, but it seems not to be.
> 
> I can't insert a /foo.py/ in there because I have to preserve all the
> old URLs.
-- 
Conrad Steenberg <conrad@hep.caltech.edu>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: clarens_file.py
Type: text/x-python
Size: 3547 bytes
Desc: not available
Url : http://mailman.modpython.org/pipermail/mod_python/attachments/20030825/886b9e84/clarens_file.py
From neel at mediapulse.com  Mon Aug 25 18:40:48 2003
From: neel at mediapulse.com (Michael C. Neel)
Date: Fri Jan  9 21:47:38 2004
Subject: [mod_python] How do I serve up .html files?
Message-ID: <C0FC22C08B82074A88B50061764157776B962F@johnson.mediapulse.net>

> <Directory "/path/to/document/root">
> SetHandler python-program
> PythonHandler mymodule
> </Directory>
> 
> from there, mymodule.py (located in the document root) will handle all
> requests. here's a sample to put in mymodule.py:
> 
> from mod_python import apache
> def handler(req):
>     req.content_type = 'text/plain'
>     req.write("uri: %s" % req.uri)
>     return apache.OK
> 

This will answer for all files in that directory, including images so
make sure to check the req.uri for ".html" and return an apache.DECLINED
if it's not.  Otherwise your python module will have to serve up the
images too.

Another option would be the <Files>/<FilesMatch> directives in apache,
and set it to files ending in .html.

Mike

From grisha at modpython.org  Mon Aug 25 21:53:22 2003
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 21:47:38 2004
Subject: [mod_python] How do I serve up .html files?
In-Reply-To: <16202.30596.238589.112878@desk.crynwr.com>
References: <16202.30596.238589.112878@desk.crynwr.com>
Message-ID: <20030825213605.O1138@onyx.ispol.com>


On Mon, 25 Aug 2003, Russell Nelson wrote:

> Maybe this is really an Apache question, but it seems to me like it
> ought to come up in a mod_python context as well.  Can't find it in
> the documentation, the FAQ, or the mailing list archives
> (Aug/Jul/Jun).
>
> How do I cause my python script to be run when a .html file is accessed?
>     http://angry-economics.russnelson.com/index.html

Russell -

It is pretty much an apache question.

  AddHandler python-program .html
  PythonHandler myhandler
  PythonDebug On

should do it (AddHandler is key, the other two are shown for completness).

>
> How do I cause my python script to be run when any old file is accessed?
>     http://angry-economics.russnelson.com/

  SetHandler python-program
  PythonHandler myhandler
  PythonDebug On

would make every request be handled by mod_python, regardless of
extension.

Of course the consequence of either of the above is that the mod_python
handler would either need to actually do the work of delivering the HTML
itself (the next version will have req.sendfile() to make it a bit more
efficient), or return apache.DECLINED to let Apache handle it after mp
handler did its thing (in which case the mp handler shouldn't write
anything).

> In other words, I want a handler which gets run no matter what the
> rest of the URL is.  You'd think this would be in the documentation,
> enabling people to make fully scripted sites, but it seems not to be.

Here is one place where it's mentioned:

http://www.modpython.org/live/current/doc-html/tut-what-it-do.html

...but I admit, the docs are written in a way as to not overlap Apache
docs, which makes it difficult.

> I can't insert a /foo.py/ in there because I have to preserve all the
> old URLs.

P.S. Glad to see you using mod_python!

Grisha
From idiot1 at netzero.net  Mon Aug 25 22:42:06 2003
From: idiot1 at netzero.net (Kirk Bailey)
Date: Fri Jan  9 21:47:38 2004
Subject: [mod_python] How do I serve up .html files?
In-Reply-To: <20030825213605.O1138@onyx.ispol.com>
References: <16202.30596.238589.112878@desk.crynwr.com>
	<20030825213605.O1138@onyx.ispol.com>
Message-ID: <3F4AC8FE.4070405@netzero.net>

When a browser accesses a html page, one includes a SSI exec tag. That means 
Server Side Include, exec(ute).

It looks like a comment, and if it made it to the browser, it would be treated 
as such and therefore invisible. But if all is done right, it is EATEN by the 
webserver and replaced with the output of the script.

<!--#exec cgi="./cgi-bin/counter.py" -->

Is probably the most common example of a ssi tag in a webpage. If you never use 
any other ssi, you will use that one. The example above would run some sort of a 
counter program (such as my 'counter.py'), returning a string of text. This is a 
string of characters, such as numbers:
32204
which is the output of a text counter program.

I am not going to describe how to enable cgi on apache, or any other webserver- 
that's a booklet worth, not a letter's. BUT my website has articles on cgi on 
it, and links to entire SITES about it, including apache.org's pages about ssi 
and apache. The ssi stuff is at the bottom of the homepage.

	http://www.tinylist.org/

hope this helps.


Gregory (Grisha) Trubetskoy wrote:

> On Mon, 25 Aug 2003, Russell Nelson wrote:
> 
> 
>>Maybe this is really an Apache question, but it seems to me like it
>>ought to come up in a mod_python context as well.  Can't find it in
>>the documentation, the FAQ, or the mailing list archives
>>(Aug/Jul/Jun).
>>
>>How do I cause my python script to be run when a .html file is accessed?
>>    http://angry-economics.russnelson.com/index.html
> 
> 
> Russell -
> 
> It is pretty much an apache question.
> 
>   AddHandler python-program .html
>   PythonHandler myhandler
>   PythonDebug On
> 
> should do it (AddHandler is key, the other two are shown for completness).
> 
> 
>>How do I cause my python script to be run when any old file is accessed?
>>    http://angry-economics.russnelson.com/
> 
> 
>   SetHandler python-program
>   PythonHandler myhandler
>   PythonDebug On
> 
> would make every request be handled by mod_python, regardless of
> extension.
> 
> Of course the consequence of either of the above is that the mod_python
> handler would either need to actually do the work of delivering the HTML
> itself (the next version will have req.sendfile() to make it a bit more
> efficient), or return apache.DECLINED to let Apache handle it after mp
> handler did its thing (in which case the mp handler shouldn't write
> anything).
> 
> 
>>In other words, I want a handler which gets run no matter what the
>>rest of the URL is.  You'd think this would be in the documentation,
>>enabling people to make fully scripted sites, but it seems not to be.
> 
> 
> Here is one place where it's mentioned:
> 
> http://www.modpython.org/live/current/doc-html/tut-what-it-do.html
> 
> ...but I admit, the docs are written in a way as to not overlap Apache
> docs, which makes it difficult.
> 
> 
>>I can't insert a /foo.py/ in there because I have to preserve all the
>>old URLs.
> 
> 
> P.S. Glad to see you using mod_python!
> 
> Grisha
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
> 
> 

-- 

-- 

end

Cheers!
         Kirk D Bailey

  +                              think                                +
   http://www.howlermonkey.net  +-----+        http://www.tinylist.org
   http://www.listville.net     | BOX |  http://www.sacredelectron.org
   Thou art free"-ERIS          +-----+     'Got a light?'-Promethieus
  +                              think                                +

Fnord.

From smejmoon at yahoo.com  Tue Aug 26 12:29:11 2003
From: smejmoon at yahoo.com (=?iso-8859-1?q?Girts=20Kalninsh?=)
Date: Fri Jan  9 21:47:39 2004
Subject: [mod_python] mod_python + pso
In-Reply-To: <3F4AC8FE.4070405@netzero.net>
Message-ID: <20030826112911.98215.qmail@web10703.mail.yahoo.com>


I'm interested in sessions, redirections, form validation, e.t.c. still
want to keep the system Simple and Robust.

I liked the PSO (http://sourceforge.net/projects/pso), but the version
on sourceforge still have many bugs unsolved
(http://sourceforge.net/tracker/?group_id=49265&atid=455630).

Do you know of working version and some example code?

Right now I'm using hosting with apache + mod_python + mysql. CGI is
forbidden and installing of some server moduled might be troublesome.

G'irts


________________________________________________________________________
Want to chat instantly with your online friends?  Get the FREE Yahoo!
Messenger http://uk.messenger.yahoo.com/
From joshg at myrealbox.com  Tue Aug 26 05:29:09 2003
From: joshg at myrealbox.com (Joshua Adam Ginsberg)
Date: Fri Jan  9 21:47:39 2004
Subject: [mod_python] IPC, db conn sharing, and other fine things
Message-ID: <1061897348.1677.12.camel@gateway.localnet>

Hello -

You will have to forgive me if this is often covered... I perused the
last six months of postings for answers to these questions, and still
have not yet found exactly what I'm looking for...

Additionally, please understand that my serious web development
experience comes from AOLServer and it's unique brand of TCL... if
you're unaware of the project, AOLServer was the original (and in many
opinions still the best) multi-threaded, thread-safe, database
connection pooling, strong API'ed webserver...

AOLServer had many features that I came to know, love, and depend on...
examples:

- nsv buckets --- nsv == NaviServer (AOLServer's original name) shared
variables... they were effectively arrays that stored information
accessible and modifiable by any running thread... perfect for caching
database information for faster generation of dynamic pages...

- database connection pooling --- provided easy, standardized, and
scalable access to existing database connections

I spent about six or seven months developing an enterprise caliber web
applications toolkit using AOLServer, and honestly, I cannot envision
having anything "enterprise caliber" without some sort of interprocess
communication and some sort of connection pooling...

I've used Apache now for a total of two weeks... I've read documentation
detailing the prefork versus the threading mpm models... I've read the
mod_python documentation available... but I still can't find a decent
way to replicate the services that AOLServer provided natively...

And unfortunately the reason I switched to Apache is that many of my
clients want to have their sites hosted by some mass hosting provider
that only uses Apache... I can find ones that are willing to use
mod_python, but I can't find ones that are willing to install
AOLServer... and any sort of IPC or db-pooling services I write can't
depend on external daemons... obviously I could write some sort of
caching daemon in Python that used UNIX sockets and some simple
key/value pair protocol to do db data caching... or I could write some
sort of db-pooling daemon... but good luck trying to get a mass-hosting
provider to run some homemade daemon on their servers...

So I suppose what I'm asking is that is there any way natively in
mod_python to support these enterprise critical features? And if not,
how the hell do you guys who use mod_python manage to have massive
hit-per-second sites without data caching?

Thank you for any guidance you could provide.

-jag

From barry at python.org  Tue Aug 26 14:29:31 2003
From: barry at python.org (Barry Warsaw)
Date: Fri Jan  9 21:47:39 2004
Subject: [mod_python] Problems with PythonPath directive
Message-ID: <1061922571.23837.89.camel@yyz>

FTR: Apache 2.0.47, mod_python 3.0.3, Python 2.3+LONG_LONG patch
(although I've also tried Python 2.2.3).

I'm having trouble with the PythonPath directive.  Mostly likely I don't
understand how it's supposed to work.  Here are my Apache directives:

LoadModule python_module /usr/local/apache/modules/mod_python.so
                                                                                
<Directory /path/to/project/xxx/xxx_apps>
    AddHandler python-program .py
    #PythonPath "sys.path + ['/path/to/project/zope2/lib/python']"
    PythonHandler regserver.driver
    PythonDebug On
</Directory>

ScriptAlias /regserver/ "/path/to/project/xxx/xxx_apps/"

When I hit http://localhost/regserver/driver.py with the PythonPath
directive commented out, everything works fine.  But when I uncomment
the PythonPath directive, I get an import error:

Mod_python error: "PythonHandler regserver.driver"

Traceback (most recent call last):

  File "/usr/local/lib/python2.3/site-packages/mod_python/apache.py", line 320, in HandlerDispatch
    module = import_module(module_name, config)

  File "/usr/local/lib/python2.3/site-packages/mod_python/apache.py", line 496, in import_module
    f, p, d = imp.find_module(parts[i], path)

ImportError: No module named regserver

I thought that the way I'm specifying PythonPath above should have added
to sys.path, not overwritten it.  What am I missing?

Thanks,
-Barry

P.S. there is a buglet in the online manual.  It says that --with-apxs
searches /usr/local/apache/bin but it really appears to search only
/usr/local/apache/sbin.  While my apxs lives in the former, I had to use
the --with-apxs configure option for it to find it.


From grisha at modpython.org  Tue Aug 26 15:01:02 2003
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 21:47:39 2004
Subject: [mod_python] Problems with PythonPath directive
In-Reply-To: <1061922571.23837.89.camel@yyz>
References: <1061922571.23837.89.camel@yyz>
Message-ID: <20030826145636.A7493@onyx.ispol.com>


Hi Barry -

Try

PythonPath "sys.path + ['/path/to/project/zope2/lib/python',
                        '/path/to/project/xxx/xxx_apps']"

(the above should be on one line)

IIRC, mod_python will prepend the path in <Directory> to sys.path, unless
PythonPath is specified, in which case PythonPath overrules everything.

Grisha


On Tue, 26 Aug 2003, Barry Warsaw wrote:

> FTR: Apache 2.0.47, mod_python 3.0.3, Python 2.3+LONG_LONG patch
> (although I've also tried Python 2.2.3).
>
> I'm having trouble with the PythonPath directive.  Mostly likely I don't
> understand how it's supposed to work.  Here are my Apache directives:
>
> LoadModule python_module /usr/local/apache/modules/mod_python.so
>
> <Directory /path/to/project/xxx/xxx_apps>
>     AddHandler python-program .py
>     #PythonPath "sys.path + ['/path/to/project/zope2/lib/python']"
>     PythonHandler regserver.driver
>     PythonDebug On
> </Directory>
>
> ScriptAlias /regserver/ "/path/to/project/xxx/xxx_apps/"
>
> When I hit http://localhost/regserver/driver.py with the PythonPath
> directive commented out, everything works fine.  But when I uncomment
> the PythonPath directive, I get an import error:
>
> Mod_python error: "PythonHandler regserver.driver"
>
> Traceback (most recent call last):
>
>   File "/usr/local/lib/python2.3/site-packages/mod_python/apache.py", line 320, in HandlerDispatch
>     module = import_module(module_name, config)
>
>   File "/usr/local/lib/python2.3/site-packages/mod_python/apache.py", line 496, in import_module
>     f, p, d = imp.find_module(parts[i], path)
>
> ImportError: No module named regserver
>
> I thought that the way I'm specifying PythonPath above should have added
> to sys.path, not overwritten it.  What am I missing?
>
> Thanks,
> -Barry
>
> P.S. there is a buglet in the online manual.  It says that --with-apxs
> searches /usr/local/apache/bin but it really appears to search only
> /usr/local/apache/sbin.  While my apxs lives in the former, I had to use
> the --with-apxs configure option for it to find it.
>
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>
From barry at python.org  Tue Aug 26 15:41:15 2003
From: barry at python.org (Barry Warsaw)
Date: Fri Jan  9 21:47:39 2004
Subject: [mod_python] Problems with PythonPath directive
In-Reply-To: <20030826145636.A7493@onyx.ispol.com>
References: <1061922571.23837.89.camel@yyz>
	 <20030826145636.A7493@onyx.ispol.com>
Message-ID: <1061926875.23837.100.camel@yyz>

On Tue, 2003-08-26 at 15:01, Gregory (Grisha) Trubetskoy wrote:
> Hi Barry -
> 
> Try
> 
> PythonPath "sys.path + ['/path/to/project/zope2/lib/python',
>                         '/path/to/project/xxx/xxx_apps']"
> 
> (the above should be on one line)
> 
> IIRC, mod_python will prepend the path in <Directory> to sys.path, unless
> PythonPath is specified, in which case PythonPath overrules everything.

Indeed, that worked!  Thanks so much Grisha.

-Barry


From neel at mediapulse.com  Tue Aug 26 16:36:19 2003
From: neel at mediapulse.com (Michael C. Neel)
Date: Fri Jan  9 21:47:39 2004
Subject: [mod_python] PythonDebug and Traceback
Message-ID: <C0FC22C08B82074A88B50061764157775CBB@johnson.mediapulse.net>

Is there some way that you can have PythonDebug set to Off and still get
a traceback (I'm using 2.7.8 mod_python against python 2.2.2)?  The
reason I ask is I have a site where in the conf PythonDebug is
explicitly set to off, and when our database server decided to block the
web server, a client got a traceback error and then got the server 500
error page (as I expect).

The error raised was:

OperationalError: (1129, "Host 'xxx.xxx.com' is blocked because of many
connection errors.  Unblock with 'mysqladmin flush-hosts'")

I've messed around with some test sites to try and get a traceback error
with PythonDebug Off, and haven't been able to get it - although I
haven't caused an OperationalError.  Needless to say people getting to
see traceback on a live site is unsettling, so if anyone has an idea how
this happened and what I can do to fix it let me know ;)

Mike

From idiot1 at netzero.net  Tue Aug 26 20:12:29 2003
From: idiot1 at netzero.net (Kirk Bailey)
Date: Fri Jan  9 21:47:39 2004
Subject: [mod_python] How do I serve up .html files?
In-Reply-To: <20030826043323.GL12023@itea.ntnu.no>
References: <16202.30596.238589.112878@desk.crynwr.com>
	<20030825213605.O1138@onyx.ispol.com> <3F4AC8FE.4070405@netzero.net>
	<20030826043323.GL12023@itea.ntnu.no>
Message-ID: <3F4BF76D.5090300@netzero.net>



Stian S?iland wrote:

> On 2003-08-26 04:42:06, Kirk Bailey wrote:
> 
> 
>>When a browser accesses a html page, one includes a SSI exec tag. That 
>>means Server Side Include, exec(ute).
> 
> 
> What did you drink that night? This is the mod_python list, discussing
> mod_Python, not SSI =)
>

Stian, I sugggest you be nice, and not go trolling. He asked a basic question 
about how to get a html page to access a cgi program; Go back and read the 
letter he wrote. I was discussing exactly that. One gets a page to access a 
script with a ssi tag. He did NOT ask how to configure apache, or how mod_python 
works. He asked how to get a page when requested to acess a cgi program. I was 
addressing exactly that point, at a basic level. Granted, his letter was a tad 
off topic, and even a little below the general level of technical skill 
devlopment this list usually displays, but he asked, I replied, being a 
generally helpful person.

As for you rather personal question about my personal behavior last night, not 
that it is any of your business, the answer is: NOTHING. I'm stone cold sober, 
and was last night. Your assumption was and is dead wrong.

Your behavior in this matter is rather unprofessional sir, and uncharitible to 
those around us of lesser technical skill- and disrespectful to those more 
nearly your peer. This cannot but hamper your ongoing career in Information 
Technology.

I suggest you consider the many people who mentored you in your early days, and 
how they suffer your novice level questions gladly, and helped you along your 
way. There is a word: payforward, where we pay 'back' the tutilage and gentle 
patience given to us in the past, by helping others later on when we can. I 
encourage you to adopt such a charitible attitude.




-- 

end

Respectfully,
              Kirk D Bailey

  +                              think                                +
   http://www.howlermonkey.net  +-----+        http://www.tinylist.org
   http://www.listville.net     | BOX |  http://www.sacredelectron.org
   Thou art free"-ERIS          +-----+     'Got a light?'-Promethieus
  +                              think                                +

Fnord.

From idiot1 at netzero.net  Tue Aug 26 20:16:12 2003
From: idiot1 at netzero.net (Kirk Bailey)
Date: Fri Jan  9 21:47:39 2004
Subject: [mod_python] How do I serve up .html files?
In-Reply-To: <20030826043323.GL12023@itea.ntnu.no>
References: <16202.30596.238589.112878@desk.crynwr.com>
	<20030825213605.O1138@onyx.ispol.com> <3F4AC8FE.4070405@netzero.net>
	<20030826043323.GL12023@itea.ntnu.no>
Message-ID: <3F4BF84C.7060200@netzero.net>



Stian S?iland wrote:

> On 2003-08-26 04:42:06, Kirk Bailey wrote:
> 
> 
>>When a browser accesses a html page, one includes a SSI exec tag. That 
>>means Server Side Include, exec(ute).
> 
> 
> What did you drink that night? This is the mod_python list, discussing
> mod_Python, not SSI =)
>

Stian, I sugggest you be nice, and not go trolling. He asked a basic question 
about how to get a html page to access a cgi program; Go back and read the 
letter he wrote. I was discussing exactly that. One gets a page to access a 
script with a ssi tag. He did NOT ask how to configure apache, or how mod_python 
works. He asked how to get a page when requested to acess a cgi program. I was 
addressing exactly that point, at a basic level. Granted, his letter was a tad 
off topic, and even a little below the general level of technical skill 
devlopment this list usually displays, but he asked, I replied, being a 
generally helpful person.

As for you rather personal question about my personal behavior last night, not 
that it is any of your business, the answer is: NOTHING. I'm stone cold sober, 
and was last night. Your assumption was and is dead wrong.

Your behavior in this matter is rather unprofessional sir, and uncharitible to 
those around us of lesser technical skill- and disrespectful to those more 
nearly your peer. This cannot but hamper your ongoing career in Information 
Technology.

I suggest you consider the many people who mentored you in your early days, and 
how they suffer your novice level questions gladly, and helped you along your 
way. There is a word: payforward, where we pay 'back' the tutilage and gentle 
patience given to us in the past, by helping others later on when we can. I 
encourage you to adopt such a charitible attitude.




-- 

end

Respectfully,
              Kirk D Bailey

  +                              think                                +
   http://www.howlermonkey.net  +-----+        http://www.tinylist.org
   http://www.listville.net     | BOX |  http://www.sacredelectron.org
   Thou art free"-ERIS          +-----+     'Got a light?'-Promethieus
  +                              think                                +

Fnord.


From idiot1 at netzero.net  Tue Aug 26 20:15:28 2003
From: idiot1 at netzero.net (Kirk Bailey)
Date: Fri Jan  9 21:47:39 2004
Subject: [mod_python] How do I serve up .html files?
In-Reply-To: <20030826043323.GL12023@itea.ntnu.no>
References: <16202.30596.238589.112878@desk.crynwr.com>
	<20030825213605.O1138@onyx.ispol.com> <3F4AC8FE.4070405@netzero.net>
	<20030826043323.GL12023@itea.ntnu.no>
Message-ID: <3F4BF820.3040501@netzero.net>



Stian S?iland wrote:

> On 2003-08-26 04:42:06, Kirk Bailey wrote:
> 
> 
>>When a browser accesses a html page, one includes a SSI exec tag. That 
>>means Server Side Include, exec(ute).
> 
> 
> What did you drink that night? This is the mod_python list, discussing
> mod_Python, not SSI =)
>

Stian, I sugggest you be nice, and not go trolling. He asked a basic question 
about how to get a html page to access a cgi program; Go back and read the 
letter he wrote. I was discussing exactly that. One gets a page to access a 
script with a ssi tag. He did NOT ask how to configure apache, or how mod_python 
works. He asked how to get a page when requested to acess a cgi program. I was 
addressing exactly that point, at a basic level. Granted, his letter was a tad 
off topic, and even a little below the general level of technical skill 
devlopment this list usually displays, but he asked, I replied, being a 
generally helpful person.

As for you rather personal question about my personal behavior last night, not 
that it is any of your business, the answer is: NOTHING. I'm stone cold sober, 
and was last night. Your assumption was and is dead wrong.

Your behavior in this matter is rather unprofessional sir, and uncharitible to 
those around us of lesser technical skill- and disrespectful to those more 
nearly your peer. This cannot but hamper your ongoing career in Information 
Technology.

I suggest you consider the many people who mentored you in your early days, and 
how they suffer your novice level questions gladly, and helped you along your 
way. There is a word: payforward, where we pay 'back' the tutilage and gentle 
patience given to us in the past, by helping others later on when we can. I 
encourage you to adopt such a charitible attitude.




-- 

end

Respectfully,
              Kirk D Bailey

  +                              think                                +
   http://www.howlermonkey.net  +-----+        http://www.tinylist.org
   http://www.listville.net     | BOX |  http://www.sacredelectron.org
   Thou art free"-ERIS          +-----+     'Got a light?'-Promethieus
  +                              think                                +

Fnord.

From mike.looijmans at asml.com  Wed Aug 27 07:21:05 2003
From: mike.looijmans at asml.com (Mike Looijmans)
Date: Fri Jan  9 21:47:39 2004
Subject: [mod_python] PythonDebug and Traceback
Message-ID: <01c36c5b$03517680$926a1e6e@wsasd464>

>Is there some way that you can have PythonDebug set to Off and still get
>a traceback (I'm using 2.7.8 mod_python against python 2.2.2)?

Sure, but you'll have to display it yourself. My script usually look like
this:

req.content_type="text/html"
writeheader(req, mytitle . . .)
try:
   # do some stuff (like connecting to the DB)
except:
   printexception(req)
printfooter(req, . . .)


--
The printexception() routine is defined as:
--

def formatexception():
   info = sys.exc_info()
    result = "\n<HR>\n<P><B>%s:</B> %s</P>\n" % info[:2]
    if verbose:
        import traceback
        result += '<PRE>' + "\n".join(traceback.format_tb(info[2])) +
'</PRE>\n'
    return result

def printexception(req=sys.stdout):
    req.write(formatexception())

--
The 'verbose' global variable can be turned off and on by sending a request
to the server.



-- 
The information contained in this communication and any attachments is confidential and may be privileged, and is for the sole use of the intended recipient(s). Any unauthorized review, use, disclosure or distribution is prohibited. If you are not the intended recipient, please notify the sender immediately by replying to this message and destroy all copies of this message and any attachments. ASML is neither liable for the proper and complete transmission of the information contained in this communication, nor for any delay in its receipt.


From mike.looijmans at asml.com  Wed Aug 27 07:38:01 2003
From: mike.looijmans at asml.com (Mike Looijmans)
Date: Fri Jan  9 21:47:39 2004
Subject: [mod_python] IPC, db conn sharing, and other fine things
Message-ID: <01c36c5d$60e6c280$926a1e6e@wsasd464>

>- nsv buckets --- nsv == NaviServer (AOLServer's original name) shared
>variables... they were effectively arrays that stored information
>accessible and modifiable by any running thread... perfect for caching
>database information for faster generation of dynamic pages...


In mod_python, just use global variables in modules. Use dictionary objects
as fast storage mechanism.


>- database connection pooling --- provided easy, standardized, and
>scalable access to existing database connections


Same as above: Use global variables.

>... obviously I could write some sort of
>caching daemon in Python that used UNIX sockets and some simple
>key/value pair protocol to do db data caching... or I could write some
>sort of db-pooling daemon...

Why not integrate it into one of your modules?
Once loaded, the module remains in memory. So you can have it start a daemon
thread and use that as your IPC server. I always design the pages such that
no IPC is needed, each page gets its data exclusively from the request and
the database. The database is a great way to exchange data anyway, performs
excellent and survives even a power-down.

>So I suppose what I'm asking is that is there any way natively in
>mod_python to support these enterprise critical features? And if not,
>how the hell do you guys who use mod_python manage to have massive
>hit-per-second sites without data caching?

Python is so powerful a language, that creating these "enterprise critical
features" in raw code is just something you do on the side. I don't put
these in a library because there's more work in maintaining that library
than just entering the code. A threadsafe DB pooling system takes about 5
lines of Python code to program, and you need only one for the whole
project.

I do a little caching for 'static' tables, something like:

cache = {}
...
try:
    data = cache[key]
except KeyError:
    c = db.cursor()
    c.execute(somequery % key)
    data = c.fetchall()[0][0]
    cache[key] = data
return data


Also, I did some experiments with our  MySQL database, and found that the
overhead in a DB connection creation is very, very low when the DBMS is on
the same host. I was unable to measure any difference in performance,
compared to running an SQL statement, connecting to the socket just didn't
take any time. I implemented DB connection pooling anyway.

When tuning performance, I tend to optimize the design, SQL and index trees,
that helps performance a lot more than fiddling with fancy features.
Database pooling helped about 1%, changing a primary key from a,b to b,a
increased performance by 300%.

Mike.



-- 
The information contained in this communication and any attachments is confidential and may be privileged, and is for the sole use of the intended recipient(s). Any unauthorized review, use, disclosure or distribution is prohibited. If you are not the intended recipient, please notify the sender immediately by replying to this message and destroy all copies of this message and any attachments. ASML is neither liable for the proper and complete transmission of the information contained in this communication, nor for any delay in its receipt.


From neel at mediapulse.com  Wed Aug 27 10:22:28 2003
From: neel at mediapulse.com (Michael C. Neel)
Date: Fri Jan  9 21:47:39 2004
Subject: [mod_python] PythonDebug and Traceback
Message-ID: <C0FC22C08B82074A88B50061764157776B9639@johnson.mediapulse.net>

> Sure, but you'll have to display it yourself. My script 
> usually look like
> this:

But that's the issue, I didn't display it myself and had PythonDebug Off
set and it still dissplayed a traceback :/  This isn't something I want
to do, it something I want to stop =)

Mike

From stian at soiland.no  Wed Aug 27 20:18:45 2003
From: stian at soiland.no (Stian =?iso-8859-1?Q?S=F8iland?=)
Date: Fri Jan  9 21:47:39 2004
Subject: [mod_python] How do I serve up .html files?
In-Reply-To: <3F4BF84C.7060200@netzero.net>
References: <16202.30596.238589.112878@desk.crynwr.com>
	<20030825213605.O1138@onyx.ispol.com> <3F4AC8FE.4070405@netzero.net>
	<20030826043323.GL12023@itea.ntnu.no> <3F4BF84C.7060200@netzero.net>
Message-ID: <20030827181845.GY28932@itea.ntnu.no>

On 2003-08-27 02:16:12, Kirk Bailey wrote:

> As for you rather personal question about my personal behavior last night, 
> not that it is any of your business, the answer is: NOTHING. I'm stone cold 
> sober, and was last night. Your assumption was and is dead wrong.

As my original email was sent to you in private, not to the list, it was
ment as a funny remark person-to-person. 

If you don't like getting personal emails, I'm sorry. I don't know you
for real and don't know for sure how you're going to interpet a stupid
try for a 'funny' comment. This is one of the problems communicating
electronically. I meant you no harm.

> Your behavior in this matter is rather unprofessional sir, and uncharitible 
> to those around us of lesser technical skill- and disrespectful to those 
> more nearly your peer. This cannot but hamper your ongoing career in 
> Information Technology.

I can't see the relevance of a personal side-comment to my
not-so-very-fast career in Information Technology =)

-- 
Stian S?iland               Work toward win-win situation. Win-lose
Trondheim, Norway           is where you win and the other lose.
http://www.soiland.no/      Lose-lose and lose-win are left as an
                            exercise to the reader.  [Limoncelli/Hogan]

From stian at soiland.no  Wed Aug 27 20:38:45 2003
From: stian at soiland.no (Stian =?iso-8859-1?Q?S=F8iland?=)
Date: Fri Jan  9 21:47:39 2004
Subject: [mod_python] How do I serve up .html files?
In-Reply-To: <3F4BF76D.5090300@netzero.net>
References: <16202.30596.238589.112878@desk.crynwr.com>
	<20030825213605.O1138@onyx.ispol.com> <3F4AC8FE.4070405@netzero.net>
	<20030826043323.GL12023@itea.ntnu.no> <3F4BF76D.5090300@netzero.net>
Message-ID: <20030827183845.GA28932@itea.ntnu.no>

On 2003-08-27 02:12:29, Kirk Bailey wrote:

(this is the non-personal answer about the TECHNICAL things, not
including my previous private answers.. =) )

> Stian, I sugggest you be nice, and not go trolling. He asked a basic 
> question about how to get a html page to access a cgi program; Go back and 
> read the letter he wrote. I was discussing exactly that. One gets a page to 
> access a script with a ssi tag. He did NOT ask how to configure apache, or 
> how mod_python works. He asked how to get a page when requested to acess a 
> cgi program. I was addressing exactly that point, at a basic level. 
> Granted, his letter was a tad off topic, and even a little below the 
> general level of technical skill devlopment this list usually displays, but 
> he asked, I replied, being a generally helpful person.

About the technical issue, CGI was never asked about, mod_python is
normally used INSTEAD of cgi. 

The question was really how to run a python handler for every possible
URL, not to include cgi-output withing HTML.

(in which case I would have solved it anyway by using the mod_python
solution presented in this thread)


A quick note about the SetHandler trick (I use it to get virtual URLs -
what I would like to see is some functionallity from Publisher (argument
parsing, return content-type-magic) - used together with virtual URLs.
Ie allowing /browse/some-switch.domain.com/switchports without actually
having the object "some-switch.domain.com" - the quick solution probably
being some __getattr__-magic) 


Remember that even though you SetHandler to something, 
you'll also need to set DirectoryIndex to some EXISTING FILE. I did this
error as I included all python code in the pythonpath and had no files
in the actual path. I used SetHandler nav.web.devBrowser.dispatcher
in .htaccess for a blank directory.

Now, DirectoryIndex could not simply be index.html, as there were no
file index.html. I created a file "index" in the otherwise blank
directory, set DirectoryIndex to "index", and everything worked.

If the file is removed, the blank directory listing is presented, but
other urls within the directory works.

(the handler receives the request as being to /index, and the file is
never actually read from disk due to SetHandler intercepting)

Now, some gurus might have a suggestion about getting rid of that empty
file. If so, please let me know! =)


Why not have the files inside the directory? Well, we've encountered
*some* problems with developers each making "index.py" (they 
previously programmed PHP!) - within the same namespace (ie.
Subinterpreter). This caused problems like getting some modules from
each of the users public_html directory. Funny!

We've used PythonInterpPerDirectory while developing, but needs to get
rid of that before merging code, as this eats database connections as a
horse. (remember, one connection pr database pr. interpreter pr.
apache.. scales up!)


-- 
Stian S?iland               Work toward win-win situation. Win-lose
Trondheim, Norway           is where you win and the other lose.
http://www.soiland.no/      Lose-lose and lose-win are left as an
                            exercise to the reader.  [Limoncelli/Hogan]

From neel at mediapulse.com  Wed Aug 27 15:25:52 2003
From: neel at mediapulse.com (Michael C. Neel)
Date: Fri Jan  9 21:47:39 2004
Subject: /index.html wierdness was: RE: [mod_python] How do I serve up .html
	files?
Message-ID: <C0FC22C08B82074A88B50061764157776B9644@johnson.mediapulse.net>

I've noticed this /index.html wierdness as well.  It seems (in 2.7.8 at
least) that unless there is a file in the document root called
index.html, mod_python is not called not matter if it's set in a
Location or Directory section.  I tested this with a simple:

def handler(req):
	assert 0, req.uri

With the conf of:

<Location />
        SetHandler python-program
        PythonHandler www
</Location>

and later with

<Directory /home/httpd/webroot>
        SetHandler python-program
        PythonHandler www
</Directory>

And would always get a directory listing (or an error lising not allowed
page) for site.com/, but every other url tried would throw the assert
execption.  If I create an empty index.html file in the document root,
apache does its internal redirect and my assert get's picked up on the
redirect.  This is only needed for the root though, I do not need to
create the sub dirs or index.html pages in them.

Mike

> -----Original Message-----
> From: Stian S?iland [mailto:stian@soiland.no] 
> Sent: Wednesday, August 27, 2003 2:39 PM
> To: mod_python@modpython.org
> Subject: Re: [mod_python] How do I serve up .html files?
> 
> Remember that even though you SetHandler to something, 
> you'll also need to set DirectoryIndex to some EXISTING FILE. 
> I did this
> error as I included all python code in the pythonpath and had no files
> in the actual path. I used SetHandler nav.web.devBrowser.dispatcher
> in .htaccess for a blank directory.
> 
> Now, DirectoryIndex could not simply be index.html, as there were no
> file index.html. I created a file "index" in the otherwise blank
> directory, set DirectoryIndex to "index", and everything worked.
> 
> If the file is removed, the blank directory listing is presented, but
> other urls within the directory works.
> 
> (the handler receives the request as being to /index, and the file is
> never actually read from disk due to SetHandler intercepting)
> 
> Now, some gurus might have a suggestion about getting rid of 
> that empty
> file. If so, please let me know! =)
> 
> 

From joshg at myrealbox.com  Wed Aug 27 14:58:27 2003
From: joshg at myrealbox.com (Joshua Adam Ginsberg)
Date: Fri Jan  9 21:47:39 2004
Subject: [mod_python] IPC, db conn sharing, and other fine things
Message-ID: <1062017906.5364.14.camel@gateway.localnet>

Hello Mike -

Thanks for taking the time to respond...

My data applications require that multiple clients be able to access
them. These clients include web clients and desktop clients on different
machines across the internet. Thus I build XML-RPC as the middle
language into everything I do. The web client never actually touches the
database. And thus on the server where a "front end" web server resides,
I rarely actually install a database.

Additionally, despite ever increasing horsepower in hardware and ever
increasing efficiency in databases, they sacrifice a lot of efficiency
for durability of data. For a caching system, persistence beyond a crash
isn't really necessary. For a component registering system, it gets
rebuilt every time the server is restarted.

Furthermore the users of my software generally need database features
not offered in MySQL, so I don't really use it very often. PostgreSQL is
probably the most common RDBMS I use.

As far as the global dictionaries suggestion, that will work within any
individual process, but each process will have to maintain their own
disparate cache and registry. I'd thought about it, and I'll probably
give it a shot just to see what the performance hit would be in running
them in each process.

For right now I've hacked together a flat file-based caching/registry
system using libxml2 and fcntl locking. It's performance will work,
though I really miss the speed of an all-in-memory caching/registry
system. *sigh* You make do with what you can.

Thanks again.

-jag

From cs1spw at bath.ac.uk  Wed Aug 27 19:55:15 2003
From: cs1spw at bath.ac.uk (Simon Willison)
Date: Fri Jan  9 21:47:39 2004
Subject: [mod_python] 
 Newbie question: setting all calls to a certain directory to beprocessed
 by a script
Message-ID: <3F4D52F3.1090405@bath.ac.uk>

Hi all,

I'm new to mod_python, and I'm just beginning to get my feet wet. I'm 
currently setting directives in .htaccess files because I don't want to 
mess around too much with my httpd.conf file. I want to set it up so 
that ALL calls to a certain directory are handled by a handle() function 
in a specific file.

The mod_python documentation shows how to do this for any files ending 
in .py:

AddHandler python-program .py
PythonHandler myscript

I understand that the above passes all requests for URLs in the 
directory ending with .py to the handle() function I've defined in 
myscript.py in that directory. I'm a big fan of "tidy" URLs, and try to 
avoid having any file extension on URLs at all. Ideally, I would like to 
set up a rule so that any requests for files that do NOT end in .jpg, 
.js, .gif or .css are handed off to the handle() function in the file of 
my choice. If that isn't possible, I'd like to set it up so that all 
requests within the directory in which my .htaccess file lives are 
handled by the one handle() function.

Thanks,

Simon Willison


From cs1spw at bath.ac.uk  Wed Aug 27 20:17:13 2003
From: cs1spw at bath.ac.uk (Simon Willison)
Date: Fri Jan  9 21:47:39 2004
Subject: [mod_python]  Newbie question: setting all calls to a certain
 directory to beprocessed by a script
In-Reply-To: <3F4D52F3.1090405@bath.ac.uk>
References: <3F4D52F3.1090405@bath.ac.uk>
Message-ID: <3F4D5819.70200@bath.ac.uk>

Simon Willison wrote:
> Ideally, I would like to 
> set up a rule so that any requests for files that do NOT end in .jpg, 
> .js, .gif or .css are handed off to the handle() function in the file of 
> my choice. If that isn't possible, I'd like to set it up so that all 
> requests within the directory in which my .htaccess file lives are 
> handled by the one handle() function.

Well, I've worked out the second option. My .htaccess file now looks 
like this:

SetHandler python-program
PythonHandler handler
PythonDebug On

This sends ALL requests to stuff within that directory to handler.py's 
handler() function. I've drawn a blank on getting it not to do this with 
images. I tried the following:

AddHandler default-handler .html .jpeg .jpg .gif .css .js
SetHandler python-program
PythonHandler handler
PythonDebug On

But this didn't work - presumably because the SetHandler over-rides the 
AddHandler directive. I tried changing their order but didn't have any 
luck there either.

Any help on this would be greatly appreciated :)

Thanks,

Simon


From synec at viscous.org  Wed Aug 27 18:31:58 2003
From: synec at viscous.org (john spurling)
Date: Fri Jan  9 21:47:39 2004
Subject: [mod_python]  Newbie question: setting all calls to a certain
	directory to beprocessed by a script
In-Reply-To: <3F4D5819.70200@bath.ac.uk>
References: <3F4D52F3.1090405@bath.ac.uk> <3F4D5819.70200@bath.ac.uk>
Message-ID: <20030828013158.GD21916@c7c8.colobox.com>

On Wed, Aug 27, 2003 at 08:17:13PM -0500, Simon Willison wrote:
> Simon Willison wrote:
> >Ideally, I would like to 
> >set up a rule so that any requests for files that do NOT end in .jpg, 
> >.js, .gif or .css are handed off to the handle() function in the file of 
> >my choice. If that isn't possible, I'd like to set it up so that all 
> >requests within the directory in which my .htaccess file lives are 
> >handled by the one handle() function.
> 
> Well, I've worked out the second option. My .htaccess file now looks 
> like this:
> 
> SetHandler python-program
> PythonHandler handler
> PythonDebug On

good show. using this setting, try this handler:

from mod_python import apache
_types_to_skip = ['jpg', 'gif', 'png']
def handler(req):
    try:
    file_extention = req.uri.split('.')[-1].lower()
    if file_extention in _types_to_skip:
        return apache.DECLINED
    except:
        pass

this will tell apache to go on to another handler for requests ending
in any of the above extensions.

let us know if you have further questions.

-john

-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
Url : http://mailman.modpython.org/pipermail/mod_python/attachments/20030827/62e64362/attachment.bin
From cs1spw at bath.ac.uk  Wed Aug 27 21:15:27 2003
From: cs1spw at bath.ac.uk (Simon Willison)
Date: Fri Jan  9 21:47:39 2004
Subject: [mod_python]  Newbie question: setting all calls to a certain
 directory to beprocessed by a script
In-Reply-To: <20030828013158.GD21916@c7c8.colobox.com>
References: <3F4D52F3.1090405@bath.ac.uk> <3F4D5819.70200@bath.ac.uk>
	<20030828013158.GD21916@c7c8.colobox.com>
Message-ID: <3F4D65BF.9080901@bath.ac.uk>

john spurling wrote:
> good show. using this setting, try this handler:
> 
> from mod_python import apache
> _types_to_skip = ['jpg', 'gif', 'png']
> def handler(req):
>     try:
>     file_extention = req.uri.split('.')[-1].lower()
>     if file_extention in _types_to_skip:
>         return apache.DECLINED
>     except:
>         pass

Fantastic. The apache.DECLINED bit is what I was missing. It even does a 
proper 404 error now if the requested image file isn't found.

Thanks for the prompt reply!

Simon Willison
http://simon.incutio.com/


From nelson at crynwr.com  Wed Aug 27 22:23:27 2003
From: nelson at crynwr.com (Russell Nelson)
Date: Fri Jan  9 21:47:39 2004
Subject: [mod_python] 
 Newbie question: setting all calls to a certain directory to beprocessed
 by a script
In-Reply-To: <3F4D52F3.1090405@bath.ac.uk>
References: <3F4D52F3.1090405@bath.ac.uk>
Message-ID: <16205.26527.695930.55664@desk.crynwr.com>

Simon Willison writes:
 > my choice. If that isn't possible, I'd like to set it up so that all 
 > requests within the directory in which my .htaccess file lives are 
 > handled by the one handle() function.

Simon, Simon, Simon, where were you last week?  I could have read the
answer to your question, and avoided having to post my question
earlier this week.  It's pretty easy.  Do it like this:

<Directory "/var/www/ae.russnelson.com">
SetHandler python-program
PythonHandler publish
</Directory>

The SetHandler says that everything should be handled by the
python-program.  The PythonHandler says that the name of the script is
publish.py.  Here's a simple publish.py.  I'll be publishing a more
complicated example later once I finish porting my blogging code over
to mod_python.  It's currently stand-alone code that writes static
HTML pages.  The astute observer will notice the constant "if 1" whose
unreachable clause calls page().  That code returns an HTML document
given the pathname that the user handed in.  Note that you'll never
get the null string, but instead 'index.html' or as configured
elsewhere.

#!/usr/bin/env python

from mod_python import apache
import sys, os, re, string

homedir = "/var/www/ae.russnelson.com/"

def handler(req):
    if 1:
        req.content_type = "text/plain"
        req.send_http_header()
        req.write("Hello World!\n")
        req.write('uri:'+req.uri+'\n')
        req.write('filename:'+req.filename+'\n')
        req.write('path_info:'+req.path_info+'\n')
        if req.args: req.write('args:'+req.args+'\n')
    else:
        req.content_type = "text/html"
        req.send_http_header()
        req.write(page(req.filename[len(homedir):]))
    return apache.OK


-- 
--My blog is at angry-economist.russnelson.com  | Free markets express in the
Crynwr sells support for free software  | PGPok | practical world our belief
521 Pleasant Valley Rd. | +1 315 268 1925 voice | that there is that of God
Potsdam, NY 13676-3213  | +1 315 268 9201 FAX   | in all people. -Chris V.
From grisha at modpython.org  Wed Aug 27 22:35:42 2003
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 21:47:39 2004
Subject: [mod_python]  Newbie question: setting all calls to a certain
 directory to beprocessed by a script
In-Reply-To: <3F4D5819.70200@bath.ac.uk>
References: <3F4D52F3.1090405@bath.ac.uk> <3F4D5819.70200@bath.ac.uk>
Message-ID: <20030827223418.L24141@onyx.ispol.com>



On Wed, 27 Aug 2003, Simon Willison wrote:
> AddHandler default-handler .html .jpeg .jpg .gif .css .js
> SetHandler python-program
> PythonHandler handler
> PythonDebug On


How about

SetHandler python-program
PythonHandler handler | .html .jpeg .jpg .gif .css .js
PythonDebug On


Grisha
From rey4 at columbia.edu  Wed Aug 27 19:31:54 2003
From: rey4 at columbia.edu (Russell Yanofsky)
Date: Fri Jan  9 21:47:39 2004
Subject: [mod_python] Re: IPC, db conn sharing, and other fine things
References: <1062017906.5364.14.camel@gateway.localnet>
Message-ID: <bijqkm$9br$1@sea.gmane.org>

Joshua Adam Ginsberg wrote:
> For right now I've hacked together a flat file-based caching/registry
> system using libxml2 and fcntl locking. It's performance will work,
> though I really miss the speed of an all-in-memory caching/registry
> system. *sigh* You make do with what you can.

What is preventing you from caching the file contents in memory? Mod_python
lets you store persistent data in global variables.

- Russ


From grisha at modpython.org  Wed Aug 27 22:51:46 2003
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 21:47:39 2004
Subject: [mod_python]  Newbie question: setting all calls to a certain
 directory to beprocessed by a script
In-Reply-To: <16205.26527.695930.55664@desk.crynwr.com>
References: <3F4D52F3.1090405@bath.ac.uk>
	<16205.26527.695930.55664@desk.crynwr.com>
Message-ID: <20030827224827.K24141@onyx.ispol.com>


Call me stupid, but I don't get it :-)

What's the point of the else clause if it's never reached?

Grisha

On Wed, 27 Aug 2003, Russell Nelson wrote:

> The astute observer will notice the constant "if 1" whose unreachable
> clause calls page().  That code returns an HTML document given the
> pathname that the user handed in.  Note that you'll never get the null
> string, but instead 'index.html' or as configured elsewhere.
>
> #!/usr/bin/env python
>
> from mod_python import apache
> import sys, os, re, string
>
> homedir = "/var/www/ae.russnelson.com/"
>
> def handler(req):
>     if 1:
>         req.content_type = "text/plain"
>         req.send_http_header()
>         req.write("Hello World!\n")
>         req.write('uri:'+req.uri+'\n')
>         req.write('filename:'+req.filename+'\n')
>         req.write('path_info:'+req.path_info+'\n')
>         if req.args: req.write('args:'+req.args+'\n')
>     else:
>         req.content_type = "text/html"
>         req.send_http_header()
>         req.write(page(req.filename[len(homedir):]))
>     return apache.OK
>
From nelson at crynwr.com  Wed Aug 27 23:09:09 2003
From: nelson at crynwr.com (Russell Nelson)
Date: Fri Jan  9 21:47:39 2004
Subject: [mod_python]  Newbie question: setting all calls to a certain
 directory to beprocessed by a script
In-Reply-To: <20030827224827.K24141@onyx.ispol.com>
References: <3F4D52F3.1090405@bath.ac.uk>
	<16205.26527.695930.55664@desk.crynwr.com>
	<20030827224827.K24141@onyx.ispol.com>
Message-ID: <16205.29269.480823.763670@desk.crynwr.com>

Gregory (Grisha) Trubetskoy writes:
 > 
 > What's the point of the else clause if it's never reached?

It's ... oversimple example code.  Ordinarily it reads "if 0".

-- 
--My blog is at angry-economist.russnelson.com  | Free markets express in the
Crynwr sells support for free software  | PGPok | practical world our belief
521 Pleasant Valley Rd. | +1 315 268 1925 voice | that there is that of God
Potsdam, NY 13676-3213  | +1 315 268 9201 FAX   | in all people. -Chris V.
From cs1spw at bath.ac.uk  Wed Aug 27 22:51:32 2003
From: cs1spw at bath.ac.uk (Simon Willison)
Date: Fri Jan  9 21:47:39 2004
Subject: [mod_python] Strange caching problem
Message-ID: <3F4D7C44.2020504@bath.ac.uk>

I'm experimenting with the idea that mod_python stays resident in 
memory. Here's the handler script I'm using:

from mod_python import apache

counter = 0

def handler(req):
     req.content_type = 'text/html'
     req.send_http_header()
     global counter
     counter = counter + 1
     req.write("Counter: %d" % counter)
     return apache.OK

If I load it up in a browser and continuously hit refresh, the number 
only increments every 4 or 5 page loads. I was expecting it to increment 
each time. Don't worry - this isn't how I intend to implement a page 
counter, it's just an experiment I'm using to try and gain a better 
understanding of this capability.

The above problem is unsevere, but I've also been having issues with the 
following script:

from mod_python import apache

def handler(req):
     req.content_type = 'text/html'
     req.send_http_header()
     req.write('unparsed_uri: %s' % req.unparsed_uri)
     return apache.OK

When I visit the following URL:

http://myserver/~simon/1

It displays this, as expected:

unparsed_uri: /~simon/1

If I then visit the following:

http://myserver/~simon/2

It continues to show the same string. I have to hit enter in my 
browser's location bar several times before it will notice that I've 
entered a different URL.

This is a major problem, as my aim is to serve up different content 
depending on the URL. If the system isn't noticing the different URLs 
for some reason it becomes unusable!

Thanks,

Simon




From synec at viscous.org  Wed Aug 27 21:07:18 2003
From: synec at viscous.org (john spurling)
Date: Fri Jan  9 21:47:39 2004
Subject: [mod_python] Strange caching problem
In-Reply-To: <3F4D7C44.2020504@bath.ac.uk>
References: <3F4D7C44.2020504@bath.ac.uk>
Message-ID: <20030828040717.GE21916@c7c8.colobox.com>

On Wed, Aug 27, 2003 at 10:51:32PM -0500, Simon Willison wrote:
> I'm experimenting with the idea that mod_python stays resident in 
> memory. Here's the handler script I'm using:
> 
> from mod_python import apache
> 
> counter = 0
> 
> def handler(req):
>     req.content_type = 'text/html'
>     req.send_http_header()
>     global counter
>     counter = counter + 1
>     req.write("Counter: %d" % counter)
>     return apache.OK
> 
> If I load it up in a browser and continuously hit refresh, the number 
> only increments every 4 or 5 page loads. I was expecting it to increment 
> each time. Don't worry - this isn't how I intend to implement a page 
> counter, it's just an experiment I'm using to try and gain a better 
> understanding of this capability.

grep for "StartServers" in your httpd.conf. i'm guessing it's about 4
or 5. 

i had this same problem when implementing sessions. each httpd
instance has its own individual python interpreter. you might just
want to set StartServers to 1 while playing around, but then don't
forget to increase it before "shipping" any code so you don't
inadvertantly write a bug like you have in the above example
code. it's easy to do.

cheers,
john



-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
Url : http://mailman.modpython.org/pipermail/mod_python/attachments/20030827/f318d6e2/attachment.bin
From cs1spw at bath.ac.uk  Wed Aug 27 23:19:00 2003
From: cs1spw at bath.ac.uk (Simon Willison)
Date: Fri Jan  9 21:47:39 2004
Subject: [mod_python] Strange caching problem
In-Reply-To: <20030828040717.GE21916@c7c8.colobox.com>
References: <3F4D7C44.2020504@bath.ac.uk>
	<20030828040717.GE21916@c7c8.colobox.com>
Message-ID: <3F4D82B4.4060003@bath.ac.uk>

john spurling wrote:
>>If I load it up in a browser and continuously hit refresh, the number 
>>only increments every 4 or 5 page loads. I was expecting it to increment 
>>each time. Don't worry - this isn't how I intend to implement a page 
>>counter, it's just an experiment I'm using to try and gain a better 
>>understanding of this capability.
> 
> grep for "StartServers" in your httpd.conf. i'm guessing it's about 4
> or 5. 

The lights just came on. This has a pretty big impact on application 
design. Presumably it means that the "shared memory" ability of 
mod_python (where global variables in a module are accessible to 
multiple requests) is only really useful as a performance enhancement - 
data loaded from the filesystem or database that is unlikely to change 
can be held in memory, but it's a bad idea to change that data as it 
won't be there for all 4 or 5 Apache processes.

Thanks again,

Simon


From ktimm at var-log.com  Wed Aug 27 23:19:45 2003
From: ktimm at var-log.com (ktimm)
Date: Fri Jan  9 21:47:39 2004
Subject: [mod_python] Mod python sys.stdin 
Message-ID: <004701c36d1b$9d497f10$0a01a8c0@toshibauser>

How do I get at sys.stdin with mod_python publisher. I know it's probably something simple but I'm trying to convert an xml parser that was getting though a cgi on sys.stdin and it keeps returning that there is no data to parse. 

Thanks 
Kevin 
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mailman.modpython.org/pipermail/mod_python/attachments/20030827/72e29dac/attachment.htm
From davidf at sjsoft.com  Thu Aug 28 07:40:55 2003
From: davidf at sjsoft.com (David Fraser)
Date: Fri Jan  9 21:47:40 2004
Subject: [mod_python] Strange caching problem
In-Reply-To: <3F4D82B4.4060003@bath.ac.uk>
References: <3F4D7C44.2020504@bath.ac.uk>
	<20030828040717.GE21916@c7c8.colobox.com> <3F4D82B4.4060003@bath.ac.uk>
Message-ID: <3F4D95E7.6080602@sjsoft.com>

Simon Willison wrote:

> john spurling wrote:
>
>>> If I load it up in a browser and continuously hit refresh, the 
>>> number only increments every 4 or 5 page loads. I was expecting it 
>>> to increment each time. Don't worry - this isn't how I intend to 
>>> implement a page counter, it's just an experiment I'm using to try 
>>> and gain a better understanding of this capability.
>>
>>
>> grep for "StartServers" in your httpd.conf. i'm guessing it's about 4
>> or 5. 
>
>
> The lights just came on. This has a pretty big impact on application 
> design. Presumably it means that the "shared memory" ability of 
> mod_python (where global variables in a module are accessible to 
> multiple requests) is only really useful as a performance enhancement 
> - data loaded from the filesystem or database that is unlikely to 
> change can be held in memory, but it's a bad idea to change that data 
> as it won't be there for all 4 or 5 Apache processes.
>
> Thanks again,
>
> Simon

mod_python 3.1alpha which is soon to be released has support for real 
shared memory that can be accessed by all the interpreters

David

From mike.looijmans at asml.com  Thu Aug 28 08:29:58 2003
From: mike.looijmans at asml.com (Mike Looijmans)
Date: Fri Jan  9 21:47:40 2004
Subject: [mod_python] IPC, db conn sharing, and other fine things
Message-ID: <01c36d2d$cd30f700$926a1e6e@wsasd464>

>As far as the global dictionaries suggestion, that will work within any
>individual process, but each process will have to maintain their own
>disparate cache and registry. I'd thought about it, and I'll probably
>give it a shot just to see what the performance hit would be in running
>them in each process.


One simple way to solve this is to force Apache into threading. I'm using
the MPM worker here (Solaris), so that over 20 connections share the same
process (but different threads). This works well for publisher and common
handlers, but this will NOT work for the cgihandler (which only allows one
active thread). A big advantage of the (worker) threading mpm is that you
only need one Python interpreter 'in the air', saving a few megabytes for
each child.

Simple multi-read-single-write strategy:

cachelock = threading.Lock()
#...

try:
    result = cache[key]
except KeyError:
    cachelock.aquire()
    try:
        # Read again, since some other thread may have done
        # the same now
        try:
            result = cache[key]
        except KeyError:
            result = someFetchingFunction(key)
            cache[key] = result
    finally:
        cachelock.release()
return result

With multiple processes, each process will gather the neccesary cache data
as it goes, so initially the system will be a bit slower but ramps up rather
quick as more data is cached. However, this does eat quite some memory, all
cache data is duplicated for each process.

>For right now I've hacked together a flat file-based caching/registry
>system using libxml2 and fcntl locking. It's performance will work,
>though I really miss the speed of an all-in-memory caching/registry
>system. *sigh* You make do with what you can.

I think there are some Python shared memory (across processes) libraries,
they might be worth looking into. You could also write some caching code
based on shared memory in C and package it into a .so library and load it
into Python.

The filesystem is not so bad, most of it is cached in memory anyway. Some
OSses support in-memory files, that might be a nice one too.

Mike.



-- 
The information contained in this communication and any attachments is confidential and may be privileged, and is for the sole use of the intended recipient(s). Any unauthorized review, use, disclosure or distribution is prohibited. If you are not the intended recipient, please notify the sender immediately by replying to this message and destroy all copies of this message and any attachments. ASML is neither liable for the proper and complete transmission of the information contained in this communication, nor for any delay in its receipt.


From davidf at sjsoft.com  Thu Aug 28 09:49:37 2003
From: davidf at sjsoft.com (David Fraser)
Date: Fri Jan  9 21:47:40 2004
Subject: [mod_python] IPC, db conn sharing, and other fine things
In-Reply-To: <01c36d2d$cd30f700$926a1e6e@wsasd464>
References: <01c36d2d$cd30f700$926a1e6e@wsasd464>
Message-ID: <3F4DB411.7070109@sjsoft.com>

Mike Looijmans wrote:

>>For right now I've hacked together a flat file-based caching/registry
>>system using libxml2 and fcntl locking. It's performance will work,
>>though I really miss the speed of an all-in-memory caching/registry
>>system. *sigh* You make do with what you can.
>>    
>>
>
>I think there are some Python shared memory (across processes) libraries,
>they might be worth looking into. You could also write some caching code
>based on shared memory in C and package it into a .so library and load it
>into Python.
>
>The filesystem is not so bad, most of it is cached in memory anyway. Some
>OSses support in-memory files, that might be a nice one too.
>
>Mike.
>
>
>  
>
See the soon-to-be released mod_python 3.1 alpha for mod_python support 
for shared memory.
That's a much easier route than trying to sort it all out yourself...

David

From azaroth at liverpool.ac.uk  Thu Aug 28 11:47:39 2003
From: azaroth at liverpool.ac.uk (Robert Sanderson)
Date: Fri Jan  9 21:47:40 2004
Subject: [mod_python] IPC, db conn sharing, and other fine things
In-Reply-To: <3F4DB411.7070109@sjsoft.com>
Message-ID: <Pine.LNX.4.44.0308281146590.1331-100000@gondolin.hist.liv.ac.uk>

On Thu, 28 Aug 2003, David Fraser wrote:
> Mike Looijmans wrote:

> >I think there are some Python shared memory (across processes) libraries,
> >they might be worth looking into. You could also write some caching code
> >based on shared memory in C and package it into a .so library and load it
> >into Python.

> See the soon-to-be released mod_python 3.1 alpha for mod_python support 
> for shared memory.
> That's a much easier route than trying to sort it all out yourself...

That's awesome news, David.  Any ideas when the code is likely to touch 
down?

Rob

-- 
      ,'/:.          Dr Robert Sanderson (azaroth@liverpool.ac.uk)
    ,'-/::::.        http://www.o-r-g.org/~azaroth/
  ,'--/::(@)::.      Special Collections and Archives, extension 3142
,'---/::::::::::.    Nebmedes:  telnet: nebmedes.o-r-g.org 7777
____/:::::::::::::.                WWW: http://nebmedes.o-r-g.org:8000/
I L L U M I N A T I

From davidf at sjsoft.com  Thu Aug 28 14:22:59 2003
From: davidf at sjsoft.com (David Fraser)
Date: Fri Jan  9 21:47:40 2004
Subject: [mod_python] IPC, db conn sharing, and other fine things
In-Reply-To: <Pine.LNX.4.44.0308281146590.1331-100000@gondolin.hist.liv.ac.uk>
References: <Pine.LNX.4.44.0308281146590.1331-100000@gondolin.hist.liv.ac.uk>
Message-ID: <3F4DF423.9010801@sjsoft.com>

Robert Sanderson wrote:

>On Thu, 28 Aug 2003, David Fraser wrote:
>  
>
>>Mike Looijmans wrote:
>>    
>>
>
>  
>
>>>I think there are some Python shared memory (across processes) libraries,
>>>they might be worth looking into. You could also write some caching code
>>>based on shared memory in C and package it into a .so library and load it
>>>into Python.
>>>      
>>>
>
>  
>
>>See the soon-to-be released mod_python 3.1 alpha for mod_python support 
>>for shared memory.
>>That's a much easier route than trying to sort it all out yourself...
>>    
>>
>
>That's awesome news, David.  Any ideas when the code is likely to touch 
>down?
>
>Rob
>
>  
>
Guido is busy preparing it for release now, but remember that this will 
be an alpha version, I don't know how long it will take to stabilize...
Still if you're planning on doing shared memory stuff it would make more 
sense to help get 3.1 to a stable state than to write your own.
If you're interested in helping develop, join the 
python-dev@httpd.apache.org mailing list.

David


From grisha at modpython.org  Thu Aug 28 09:19:50 2003
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 21:47:40 2004
Subject: [mod_python] IPC, db conn sharing, and other fine things
In-Reply-To: <3F4DF423.9010801@sjsoft.com>
References: <Pine.LNX.4.44.0308281146590.1331-100000@gondolin.hist.liv.ac.uk>
 <3F4DF423.9010801@sjsoft.com>
Message-ID: <20030828091445.B37161@onyx.ispol.com>



On Thu, 28 Aug 2003, David Fraser wrote:

> Guido is busy preparing it for release now,

ROTFL! (It'd be nice if he was thought)

One small correction - 3.1 doesn't do anything with shared memory, it uses
dbm to store data across processes. It can also store session data in real
memory, but for that you have to be on a single-process multithreaded MPM,
such as winnt, or worker if it is configured to run with only one process.

Grisha
From grisha at apache.org  Thu Aug 28 21:12:50 2003
From: grisha at apache.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 21:47:40 2004
Subject: [mod_python] ANNOUNCE: Mod_python 3.1.0 Alpha
Message-ID: <20030828210644.C43921@onyx.ispol.com>


The Apache Software Foundation and The Apache HTTP Server Project are
pleased to announce the 3.1.0 ALPHA release mod_python.

Some feature highlights:

* Server-side sessions with memory or dbm-based storage and session
locking support.

* PSP - a fast flex-based scanner which allows embedding Python code
within HTML.

* Native cookie support, including support for automatic cryptographic
cookie signing and marshalling.

* Compatibility with Python 2.3, as well as many other enhancements.

Alpha releases are NOT considered stable and do contain bugs. Some
functionality may change before the first beta release.

This release is intended to solicit widespread testing of the code. We
strongly recommend that you try out your existing applications and
experiment with new features in a non-production environment using this
version and report any problems you may encounter so that they can be
addressed before the final release.

Mod_python 3.1.0a is available for download from:

http://httpd.apache.org/modules/python-download.cgi

Preferred method of providing feedback is the mod_python user list
mod_python@modpython.org (due to spam, you must subscribe to post).

For more information about mod_python visit
http://www.modpython.org/

Thank You,

Grisha Trubetskoy

From nelson at crynwr.com  Thu Aug 28 21:30:36 2003
From: nelson at crynwr.com (Russell Nelson)
Date: Fri Jan  9 21:47:40 2004
Subject: [mod_python] ANNOUNCE: Mod_python 3.1.0 Alpha
In-Reply-To: <20030828210644.C43921@onyx.ispol.com>
References: <20030828210644.C43921@onyx.ispol.com>
Message-ID: <16206.44220.488158.417635@desk.crynwr.com>

Gregory (Grisha) Trubetskoy writes:
 > 
 > The Apache Software Foundation and The Apache HTTP Server Project are
 > pleased to announce the 3.1.0 ALPHA release mod_python.

Hrm.  When is there going to be an i386 release?

-- 
:-)My blog is at angry-economist.russnelson.com  | Free markets express in the
Crynwr sells support for free software  | PGPok | practical world our belief
521 Pleasant Valley Rd. | +1 315 268 1925 voice | that there is that of God
Potsdam, NY 13676-3213  | +1 315 268 9201 FAX   | in all people. -Chris V.
From mike.looijmans at asml.com  Fri Aug 29 08:56:31 2003
From: mike.looijmans at asml.com (Mike Looijmans)
Date: Fri Jan  9 21:47:40 2004
Subject: [mod_python] Mod python sys.stdin 
Message-ID: <01c36dfa$ad1b3980$926a1e6e@wsasd464>

Don't use publisher if you want to read the request (e.g. from a POST)
directly. Publisher will have eaten the whole request before calling your
function.

Use a standard "handler", e.g. this (untested) one lets anyone POST a file
to the system in a cetain path, and report back how large it was and where
it was placed:

BUFSIZE=10240
SOMEBASEPATH = '/usr/local/uploads'

def handler(req):
    req.content_type = 'text/plain'
    destfilename = SOMEBASEPATH + req.path_info
    req.write('Writing: %s\n' % destfilename)
    dstfile = open(destfilename, 'wb')
    srcfile = req
    data = srcfile.read(BUFSIZE)
    c = 0
    while data:
        dstfile.write(data)
        c += len(data)
        data = srcfile.read(BUFSIZE)
    req.write('Wrote: %s bytes\n' % c)
    return apache.OK



-----Original Message-----
From: ktimm <ktimm@var-log.com>
To: mod_python@modpython.org <mod_python@modpython.org>
Date: Thursday, August 28, 2003 6:23 AM
Subject: [mod_python] Mod python sys.stdin


How do I get at sys.stdin with mod_python publisher. I know it's probably
something simple but I'm trying to convert an xml parser that was getting
though a cgi on sys.stdin and it keeps returning that there is no data to
parse.

Thanks
Kevin



-- 
The information contained in this communication and any attachments is confidential and may be privileged, and is for the sole use of the intended recipient(s). Any unauthorized review, use, disclosure or distribution is prohibited. If you are not the intended recipient, please notify the sender immediately by replying to this message and destroy all copies of this message and any attachments. ASML is neither liable for the proper and complete transmission of the information contained in this communication, nor for any delay in its receipt.


From wart at softhome.net  Fri Aug 29 11:34:14 2003
From: wart at softhome.net (Wartan Hachaturow)
Date: Fri Jan  9 21:47:40 2004
Subject: [mod_python] ANNOUNCE: Mod_python 3.1.0 Alpha
In-Reply-To: <16206.44220.488158.417635@desk.crynwr.com>
References: <20030828210644.C43921@onyx.ispol.com>
	<16206.44220.488158.417635@desk.crynwr.com>
Message-ID: <20030829073413.GA65122@daemon.tepkom.ru>

On Thu, Aug 28, 2003 at 09:30:36PM -0400, Russell Nelson wrote:

>  > pleased to announce the 3.1.0 ALPHA release mod_python.
> 
> Hrm.  When is there going to be an i386 release?

Don't forget that it's also available in the source form -- you're
free to port ;))

-- 
Regards, Wartan.
From gstein at lyra.org  Fri Aug 29 03:43:00 2003
From: gstein at lyra.org (Greg Stein)
Date: Fri Jan  9 21:47:40 2004
Subject: [mod_python] ANNOUNCE: Mod_python 3.1.0 Alpha
In-Reply-To: <20030829073413.GA65122@daemon.tepkom.ru>;
	from wart@softhome.net on Fri, Aug 29, 2003 at 11:34:14AM +0400
References: <20030828210644.C43921@onyx.ispol.com>
	<16206.44220.488158.417635@desk.crynwr.com>
	<20030829073413.GA65122@daemon.tepkom.ru>
Message-ID: <20030829034300.C12609@lyra.org>

> On Thu, Aug 28, 2003 at 09:30:36PM -0400, Russell Nelson wrote:
> 
> >  > pleased to announce the 3.1.0 ALPHA release mod_python.
> > 
> > Hrm.  When is there going to be an i386 release?

There wasn't a smiley here, so just to be sure: it's an alpha quality
release, not an Alpha architecture binary or something like that.

(knowing Russell's been around the industry for a _long_ time, I gotta
 believe he knew that, but that missing smiley... :-)

Cheers,
-g

-- 
Greg Stein, http://www.lyra.org/
From lairdshaw at yahoo.com.au  Fri Aug 29 20:44:41 2003
From: lairdshaw at yahoo.com.au (Laird Shaw)
Date: Fri Jan  9 21:47:40 2004
Subject: [mod_python] 
	Apache startup error using mod_python under Windows 2000 (have
	msvcr70.dll)
Message-ID: <001901c36e1a$95954a60$0a00a8c0@laird>

Hi all,

Apologies if I've missed the answer to this question somewhere, but I've
searched to no avail.

Whilst attempting to start, Apache fails with:

Syntax error on line 175 of C:/Program Files/Apache
Group/Apache2/conf/httpd.conf:
Cannot load C:/Program Files/Apache Group/Apache2/modules/mod_python.so into
server: The specified module could not be found.

I've checked that I've specified the correct path to mod_python.so.

I saw in another post that msvcr70.dll is required, and duly downloaded and
copied it into winnt\system32, believing I had solved the problem.  Alas, no
such luck.  Same error.

OS = Windows 2000 5.00.2195, Service pack 4
Python = 2.3
Apache = 2.0.47
msvcr70.dll = 7.00.9064.0

This is the relevent part of httpd.conf:

LoadModule python_module modules/mod_python.so

<Directory C:/data/webroot/htdocs>
  AddHandler python-program .py
  PythonHandler mptest
  PythonDebug On
</Directory>

As an aside, I am also running mod_perl and php4apache2 - but I don't
imagine they would affect anything.

I'm new to python - haven't even written a single line of code yet, however
I have run the interpreter to verify that it installed properly.

I have added C:\python23 to my path but haven't set any other environment
variables.

Thanks in advance,

Laird

From davidf at sjsoft.com  Fri Aug 29 13:20:33 2003
From: davidf at sjsoft.com (David Fraser)
Date: Fri Jan  9 21:47:40 2004
Subject: [mod_python] 	Apache startup error using mod_python under Windows
	2000 (have	msvcr70.dll)
In-Reply-To: <001901c36e1a$95954a60$0a00a8c0@laird>
References: <001901c36e1a$95954a60$0a00a8c0@laird>
Message-ID: <3F4F3701.3000401@sjsoft.com>

Laird Shaw wrote:

>Hi all,
>
>Apologies if I've missed the answer to this question somewhere, but I've
>searched to no avail.
>
>Whilst attempting to start, Apache fails with:
>
>Syntax error on line 175 of C:/Program Files/Apache
>Group/Apache2/conf/httpd.conf:
>Cannot load C:/Program Files/Apache Group/Apache2/modules/mod_python.so into
>server: The specified module could not be found.
>
>I've checked that I've specified the correct path to mod_python.so.
>
>I saw in another post that msvcr70.dll is required, and duly downloaded and
>copied it into winnt\system32, believing I had solved the problem.  Alas, no
>such luck.  Same error.
>
>OS = Windows 2000 5.00.2195, Service pack 4
>Python = 2.3
>Apache = 2.0.47
>msvcr70.dll = 7.00.9064.0
>  
>
I've had exactly the same problem, with a new Win2000 virtual machine, 
same versions of Python and Apache.
Didn't try add the dll though.

David


From grisha at modpython.org  Fri Aug 29 09:53:10 2003
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 21:47:40 2004
Subject: [mod_python] Apache startup error using mod_python under Windows
 2000 (have msvcr70.dll)
In-Reply-To: <3F4F3701.3000401@sjsoft.com>
References: <001901c36e1a$95954a60$0a00a8c0@laird>
	<3F4F3701.3000401@sjsoft.com>
Message-ID: <20030829095118.J43921@onyx.ispol.com>


It's not impossible that the distribution file is missing something,
though it seemed to have worked for me...

It shouldn't need msvcr70.dll anymore, something else is the problem.

Grisha

On Fri, 29 Aug 2003, David Fraser wrote:

> Laird Shaw wrote:
>
> >Hi all,
> >
> >Apologies if I've missed the answer to this question somewhere, but I've
> >searched to no avail.
> >
> >Whilst attempting to start, Apache fails with:
> >
> >Syntax error on line 175 of C:/Program Files/Apache
> >Group/Apache2/conf/httpd.conf:
> >Cannot load C:/Program Files/Apache Group/Apache2/modules/mod_python.so into
> >server: The specified module could not be found.
> >
> >I've checked that I've specified the correct path to mod_python.so.
> >
> >I saw in another post that msvcr70.dll is required, and duly downloaded and
> >copied it into winnt\system32, believing I had solved the problem.  Alas, no
> >such luck.  Same error.
> >
> >OS = Windows 2000 5.00.2195, Service pack 4
> >Python = 2.3
> >Apache = 2.0.47
> >msvcr70.dll = 7.00.9064.0
> >
> >
> I've had exactly the same problem, with a new Win2000 virtual machine,
> same versions of Python and Apache.
> Didn't try add the dll though.
>
> David
>
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>
From davidf at sjsoft.com  Fri Aug 29 16:26:41 2003
From: davidf at sjsoft.com (David Fraser)
Date: Fri Jan  9 21:47:40 2004
Subject: [mod_python] Apache startup error using mod_python under Windows
 2000 (have msvcr70.dll)
In-Reply-To: <20030829095118.J43921@onyx.ispol.com>
References: <001901c36e1a$95954a60$0a00a8c0@laird>
	<3F4F3701.3000401@sjsoft.com> <20030829095118.J43921@onyx.ispol.com>
Message-ID: <3F4F62A1.5030807@sjsoft.com>

Gregory (Grisha) Trubetskoy wrote:

>It's not impossible that the distribution file is missing something,
>though it seemed to have worked for me...
>
>It shouldn't need msvcr70.dll anymore, something else is the problem.
>
>Grisha
>  
>
Hmmm ... yes, the Dependency Walker with Visual Studio 6.0 shows exactly 
the same dependencies as for 3.0.3

David

From perry.tew at cibavision.novartis.com  Fri Aug 29 10:37:55 2003
From: perry.tew at cibavision.novartis.com (perry.tew@cibavision.novartis.com)
Date: Fri Jan  9 21:47:40 2004
Subject: [mod_python] 	Apache startup error using mod_python under Windows
	2000 (have	msvcr70.dll)
Message-ID: <OF369D809A.F682347B-ON85256D91.004FD7CA-85256D91.0050607E@EU.novartis.net>

Laird,
    I'm a newbie to mod_python, and I had the same problem  a few days 
back
when I tried to install and run mod_python under windows xp with python 
2.3. 
When I backed up to python 2.2, mod_python worked fine. 

I just installed the 3.1 alpha against python 2.3 and it works well.

My advice is to either back up to python 2.2 or go forward to mod_python 
3.1 alpha.

Hope this helps,
Perry







Laird Shaw wrote:

>Hi all,
>
>Apologies if I've missed the answer to this question somewhere, but I've
>searched to no avail.
>
>Whilst attempting to start, Apache fails with:
>
>Syntax error on line 175 of C:/Program Files/Apache
>Group/Apache2/conf/httpd.conf:
>Cannot load C:/Program Files/Apache Group/Apache2/modules/mod_python.so 
into
>server: The specified module could not be found.
>
>I've checked that I've specified the correct path to mod_python.so.
>
>I saw in another post that msvcr70.dll is required, and duly downloaded 
and
>copied it into winnt\system32, believing I had solved the problem.  Alas, 
no
>such luck.  Same error.
>
>OS = Windows 2000 5.00.2195, Service pack 4
>Python = 2.3
>Apache = 2.0.47
>msvcr70.dll = 7.00.9064.0
> 
>
I've had exactly the same problem, with a new Win2000 virtual machine, 
same versions of Python and Apache.
Didn't try add the dll though.

David


_______________________________________________
Mod_python mailing list
Mod_python@modpython.org
http://mailman.modpython.org/mailman/listinfo/mod_python


-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mailman.modpython.org/pipermail/mod_python/attachments/20030829/f740aa4f/attachment.htm
From lairdshaw at yahoo.com.au  Sat Aug 30 00:48:18 2003
From: lairdshaw at yahoo.com.au (Laird Shaw)
Date: Fri Jan  9 21:47:40 2004
Subject: [mod_python] Apache startup error using mod_python under Windows
	2000 (have msvcr70.dll)
References: 
	<001901c36e1a$95954a60$0a00a8c0@laird><3F4F3701.3000401@sjsoft.com>
	<20030829095118.J43921@onyx.ispol.com> <3F4F62A1.5030807@sjsoft.com>
Message-ID: <004e01c36e3c$9d177840$0a00a8c0@laird>

This problem occurs with both 3.03 and 3.1.0a on my machine - David are you
able to run 3.0.3?  Are there other versions I could try?

----- Original Message ----- 
From: "David Fraser" <davidf@sjsoft.com>
To: "Gregory (Grisha) Trubetskoy" <grisha@modpython.org>
Cc: <mod_python@modpython.org>
Sent: Saturday, August 30, 2003 12:26 AM
Subject: Re: [mod_python] Apache startup error using mod_python under
Windows 2000 (have msvcr70.dll)


> Gregory (Grisha) Trubetskoy wrote:
>
> >It's not impossible that the distribution file is missing something,
> >though it seemed to have worked for me...
> >
> >It shouldn't need msvcr70.dll anymore, something else is the problem.
> >
> >Grisha
> >
> >
> Hmmm ... yes, the Dependency Walker with Visual Studio 6.0 shows exactly
> the same dependencies as for 3.0.3
>
> David
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python

From grisha at modpython.org  Fri Aug 29 11:06:42 2003
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 21:47:40 2004
Subject: [mod_python] Apache startup error using mod_python under Windows
 2000 (have msvcr70.dll)
In-Reply-To: <OF369D809A.F682347B-ON85256D91.004FD7CA-85256D91.0050607E@EU.novartis.net>
References: <OF369D809A.F682347B-ON85256D91.004FD7CA-85256D91.0050607E@EU.novartis.net>
Message-ID: <20030829110249.R53150@onyx.ispol.com>


Are you using stock Python, Win32 Python, Active or self-compiled?

Grisha

On Fri, 29 Aug 2003 perry.tew@cibavision.novartis.com wrote:

> Laird,
>     I'm a newbie to mod_python, and I had the same problem  a few days
> back
> when I tried to install and run mod_python under windows xp with python
> 2.3.
> When I backed up to python 2.2, mod_python worked fine.
>
> I just installed the 3.1 alpha against python 2.3 and it works well.
>
> My advice is to either back up to python 2.2 or go forward to mod_python
> 3.1 alpha.
>
> Hope this helps,
> Perry
>
>
>
>
>
>
>
> Laird Shaw wrote:
>
> >Hi all,
> >
> >Apologies if I've missed the answer to this question somewhere, but I've
> >searched to no avail.
> >
> >Whilst attempting to start, Apache fails with:
> >
> >Syntax error on line 175 of C:/Program Files/Apache
> >Group/Apache2/conf/httpd.conf:
> >Cannot load C:/Program Files/Apache Group/Apache2/modules/mod_python.so
> into
> >server: The specified module could not be found.
> >
> >I've checked that I've specified the correct path to mod_python.so.
> >
> >I saw in another post that msvcr70.dll is required, and duly downloaded
> and
> >copied it into winnt\system32, believing I had solved the problem.  Alas,
> no
> >such luck.  Same error.
> >
> >OS = Windows 2000 5.00.2195, Service pack 4
> >Python = 2.3
> >Apache = 2.0.47
> >msvcr70.dll = 7.00.9064.0
> >
> >
> I've had exactly the same problem, with a new Win2000 virtual machine,
> same versions of Python and Apache.
> Didn't try add the dll though.
>
> David
>
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>
>
>
From davidf at sjsoft.com  Fri Aug 29 17:39:06 2003
From: davidf at sjsoft.com (David Fraser)
Date: Fri Jan  9 21:47:40 2004
Subject: [mod_python] Apache startup error using mod_python under Windows
 2000 (have msvcr70.dll)
In-Reply-To: <004e01c36e3c$9d177840$0a00a8c0@laird>
References: 
	<001901c36e1a$95954a60$0a00a8c0@laird><3F4F3701.3000401@sjsoft.com>
	<20030829095118.J43921@onyx.ispol.com> <3F4F62A1.5030807@sjsoft.com>
	<004e01c36e3c$9d177840$0a00a8c0@laird>
Message-ID: <3F4F739A.1030804@sjsoft.com>

Laird Shaw wrote:

>This problem occurs with both 3.03 and 3.1.0a on my machine - David are you
>able to run 3.0.3?  Are there other versions I could try?
>  
>
I have successfully run 3.0.3 and apache 2 and Python 2 on another 
Windows 2000 machine.
It didn't occur to me that the problem may not be with 3.1.0a but with 
my virtual machine.
I haven't tested 3.0.3 on my Virtual Machine, I'll look at doing that 
but it'll have to be on Monday I'm afraid...
What might be helpful to know, is is there a generic way of debugging 
why the module is not loading?
David

>----- Original Message ----- 
>From: "David Fraser" <davidf@sjsoft.com>
>To: "Gregory (Grisha) Trubetskoy" <grisha@modpython.org>
>Cc: <mod_python@modpython.org>
>Sent: Saturday, August 30, 2003 12:26 AM
>Subject: Re: [mod_python] Apache startup error using mod_python under
>Windows 2000 (have msvcr70.dll)
>
>
>  
>
>>Gregory (Grisha) Trubetskoy wrote:
>>
>>    
>>
>>>It's not impossible that the distribution file is missing something,
>>>though it seemed to have worked for me...
>>>
>>>It shouldn't need msvcr70.dll anymore, something else is the problem.
>>>
>>>Grisha
>>>
>>>
>>>      
>>>
>>Hmmm ... yes, the Dependency Walker with Visual Studio 6.0 shows exactly
>>the same dependencies as for 3.0.3
>>
>>David
>>
>>_______________________________________________
>>Mod_python mailing list
>>Mod_python@modpython.org
>>http://mailman.modpython.org/mailman/listinfo/mod_python
>>    
>>
>
>  
>


From perry.tew at cibavision.novartis.com  Fri Aug 29 11:48:42 2003
From: perry.tew at cibavision.novartis.com (perry.tew@cibavision.novartis.com)
Date: Fri Jan  9 21:47:40 2004
Subject: [mod_python] Apache startup error using mod_python under Windows
	2000 (have msvcr70.dll)
Message-ID: <OF042EC003.33482BFF-ON85256D91.00560B6F-85256D91.0056DB3A@EU.novartis.net>

Grisha,
    I started with Python 2.3 from python.org (installed via .exe). 
Using mod_python 3.03, in order to make the "module not found" error 
disappear
I had to install Python 2.2.  I used ActiveState 2.2 for this install.  I 
then reinstalled 
3.03 and it installed in the 2.2 tree.  The apache error then disappeared. 
 

This morning I tried out 3.1 alpha against stock Python 2.3 from 
python.org and it worked without 
error. 

I hope I'm not muddying the water relating my experience, but as the 
newbie, running standard exe installs that's
what I encountered.

I could try to replicate the error if you'd like.  I think I can find a 
virgin xp box laying around to test
if it was something I did or something with the layout of the system.

On a side note:
I've really enjoyed mod_python.  Thank you for your time and effort. Also, 
thank you for the
excellent install program. 

Perry Tew



Are you using stock Python, Win32 Python, Active or self-compiled?

Grisha

On Fri, 29 Aug 2003 perry.tew@cibavision.novartis.com wrote:

> Laird,
>     I'm a newbie to mod_python, and I had the same problem  a few days
> back
> when I tried to install and run mod_python under windows xp with python
> 2.3.
> When I backed up to python 2.2, mod_python worked fine.
>
> I just installed the 3.1 alpha against python 2.3 and it works well.
>
> My advice is to either back up to python 2.2 or go forward to mod_python
> 3.1 alpha.
>
> Hope this helps,
> Perry
>
>
>
>
>
>
>
> Laird Shaw wrote:
>
> >Hi all,
> >
> >Apologies if I've missed the answer to this question somewhere, but 
I've
> >searched to no avail.
> >
> >Whilst attempting to start, Apache fails with:
> >
> >Syntax error on line 175 of C:/Program Files/Apache
> >Group/Apache2/conf/httpd.conf:
> >Cannot load C:/Program Files/Apache Group/Apache2/modules/mod_python.so
> into
> >server: The specified module could not be found.
> >
> >I've checked that I've specified the correct path to mod_python.so.
> >
> >I saw in another post that msvcr70.dll is required, and duly downloaded
> and
> >copied it into winnt\system32, believing I had solved the problem. 
Alas,
> no
> >such luck.  Same error.
> >
> >OS = Windows 2000 5.00.2195, Service pack 4
> >Python = 2.3
> >Apache = 2.0.47
> >msvcr70.dll = 7.00.9064.0
> >
> >
> I've had exactly the same problem, with a new Win2000 virtual machine,
> same versions of Python and Apache.
> Didn't try add the dll though.
>
> David
>
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>
>
>


-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mailman.modpython.org/pipermail/mod_python/attachments/20030829/605d7087/attachment.htm
From lairdshaw at yahoo.com.au  Sat Aug 30 01:56:18 2003
From: lairdshaw at yahoo.com.au (Laird Shaw)
Date: Fri Jan  9 21:47:40 2004
Subject: [mod_python] Apache startup error using mod_python under Windows
	2000 (have msvcr70.dll)
References: 
	<OF369D809A.F682347B-ON85256D91.004FD7CA-85256D91.0050607E@EU.novartis.net>
	<20030829110249.R53150@onyx.ispol.com>
Message-ID: <001201c36e46$1f72d010$0a00a8c0@laird>

Your advice solved my problem, Perry.  I uninstalled Python 2.3 and
mod_python, then downloaded and installed Python 2.2.  Then I installed
mod_python 3.0.3, started up Apache and navigated to the test page: worked
fine.  I can reattest that neither mod_python 3.0.3 nor mod_python 3.1.0a
worked with my setup using Python 2.3 - which is a pity as it's nice to use
the latest and greatest version of languages.

Grisha, I don't know whether your question was for Perry or me, but I'll
answer anyway: I installed Python from this windows installer:
http://www.python.org/ftp/python/2.2.3/Python-2.2.3.exe.

Much appreciated,
Laird

----- Original Message ----- 
From: "Gregory (Grisha) Trubetskoy" <grisha@modpython.org>
To: <perry.tew@cibavision.novartis.com>
Cc: <Mod_python@modpython.org>
Sent: Saturday, August 30, 2003 1:06 AM
Subject: Re: [mod_python] Apache startup error using mod_python under
Windows 2000 (have msvcr70.dll)


>
> Are you using stock Python, Win32 Python, Active or self-compiled?
>
> Grisha
>
> On Fri, 29 Aug 2003 perry.tew@cibavision.novartis.com wrote:
>
> > Laird,
> >     I'm a newbie to mod_python, and I had the same problem  a few days
> > back
> > when I tried to install and run mod_python under windows xp with python
> > 2.3.
> > When I backed up to python 2.2, mod_python worked fine.
> >
> > I just installed the 3.1 alpha against python 2.3 and it works well.
> >
> > My advice is to either back up to python 2.2 or go forward to mod_python
> > 3.1 alpha.
> >
> > Hope this helps,
> > Perry
> >
> >
> >
> >
> >
> >
> >
> > Laird Shaw wrote:
> >
> > >Hi all,
> > >
> > >Apologies if I've missed the answer to this question somewhere, but
I've
> > >searched to no avail.
> > >
> > >Whilst attempting to start, Apache fails with:
> > >
> > >Syntax error on line 175 of C:/Program Files/Apache
> > >Group/Apache2/conf/httpd.conf:
> > >Cannot load C:/Program Files/Apache Group/Apache2/modules/mod_python.so
> > into
> > >server: The specified module could not be found.
> > >
> > >I've checked that I've specified the correct path to mod_python.so.
> > >
> > >I saw in another post that msvcr70.dll is required, and duly downloaded
> > and
> > >copied it into winnt\system32, believing I had solved the problem.
Alas,
> > no
> > >such luck.  Same error.
> > >
> > >OS = Windows 2000 5.00.2195, Service pack 4
> > >Python = 2.3
> > >Apache = 2.0.47
> > >msvcr70.dll = 7.00.9064.0
> > >
> > >
> > I've had exactly the same problem, with a new Win2000 virtual machine,
> > same versions of Python and Apache.
> > Didn't try add the dll though.
> >
> > David
> >
> >
> > _______________________________________________
> > Mod_python mailing list
> > Mod_python@modpython.org
> > http://mailman.modpython.org/mailman/listinfo/mod_python
> >
> >
> >
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python

From lairdshaw at yahoo.com.au  Sat Aug 30 01:58:52 2003
From: lairdshaw at yahoo.com.au (Laird Shaw)
Date: Fri Jan  9 21:47:40 2004
Subject: [mod_python] Apache startup error using mod_python under Windows
	2000 (have msvcr70.dll)
References: 
	<001901c36e1a$95954a60$0a00a8c0@laird><3F4F3701.3000401@sjsoft.com>
	<20030829095118.J43921@onyx.ispol.com> <3F4F62A1.5030807@sjsoft.com>
	<004e01c36e3c$9d177840$0a00a8c0@laird> <3F4F739A.1030804@sjsoft.com>
Message-ID: <001f01c36e46$7ab404d0$0a00a8c0@laird>

Slightly off-topic so feel free to reply privately but you piqued my
curiosity - Windows 2000 virtual machine?  What is the 'actual machine' on
which it is running?

----- Original Message ----- 
From: "David Fraser" <davidf@sjsoft.com>
To: "Laird Shaw" <lairdshaw@yahoo.com.au>
Cc: "Gregory (Grisha) Trubetskoy" <grisha@modpython.org>;
<mod_python@modpython.org>
Sent: Saturday, August 30, 2003 1:39 AM
Subject: Re: [mod_python] Apache startup error using mod_python under
Windows 2000 (have msvcr70.dll)


> Laird Shaw wrote:
>
> >This problem occurs with both 3.03 and 3.1.0a on my machine - David are
you
> >able to run 3.0.3?  Are there other versions I could try?
> >
> >
> I have successfully run 3.0.3 and apache 2 and Python 2 on another
> Windows 2000 machine.
> It didn't occur to me that the problem may not be with 3.1.0a but with
> my virtual machine.
> I haven't tested 3.0.3 on my Virtual Machine, I'll look at doing that
> but it'll have to be on Monday I'm afraid...
> What might be helpful to know, is is there a generic way of debugging
> why the module is not loading?
> David
>
> >----- Original Message ----- 
> >From: "David Fraser" <davidf@sjsoft.com>
> >To: "Gregory (Grisha) Trubetskoy" <grisha@modpython.org>
> >Cc: <mod_python@modpython.org>
> >Sent: Saturday, August 30, 2003 12:26 AM
> >Subject: Re: [mod_python] Apache startup error using mod_python under
> >Windows 2000 (have msvcr70.dll)
> >
> >
> >
> >
> >>Gregory (Grisha) Trubetskoy wrote:
> >>
> >>
> >>
> >>>It's not impossible that the distribution file is missing something,
> >>>though it seemed to have worked for me...
> >>>
> >>>It shouldn't need msvcr70.dll anymore, something else is the problem.
> >>>
> >>>Grisha
> >>>
> >>>
> >>>
> >>>
> >>Hmmm ... yes, the Dependency Walker with Visual Studio 6.0 shows exactly
> >>the same dependencies as for 3.0.3
> >>
> >>David
> >>
> >>_______________________________________________
> >>Mod_python mailing list
> >>Mod_python@modpython.org
> >>http://mailman.modpython.org/mailman/listinfo/mod_python
> >>
> >>
> >
> >
> >
>

From davidf at sjsoft.com  Fri Aug 29 18:05:45 2003
From: davidf at sjsoft.com (David Fraser)
Date: Fri Jan  9 21:47:40 2004
Subject: [mod_python] Apache startup error using mod_python under Windows
 2000 (have msvcr70.dll)
In-Reply-To: <001f01c36e46$7ab404d0$0a00a8c0@laird>
References: 
	<001901c36e1a$95954a60$0a00a8c0@laird><3F4F3701.3000401@sjsoft.com>
	<20030829095118.J43921@onyx.ispol.com> <3F4F62A1.5030807@sjsoft.com>
	<004e01c36e3c$9d177840$0a00a8c0@laird> <3F4F739A.1030804@sjsoft.com>
	<001f01c36e46$7ab404d0$0a00a8c0@laird>
Message-ID: <3F4F79D9.7070007@sjsoft.com>

Laird Shaw wrote:

>Slightly off-topic so feel free to reply privately but you piqued my
>curiosity - Windows 2000 virtual machine?  What is the 'actual machine' on
>which it is running?
>
>  
>
I'm running it on a RedHat Linux 7.3 box with VMWare.
David

From davidf at sjsoft.com  Fri Aug 29 18:14:42 2003
From: davidf at sjsoft.com (David Fraser)
Date: Fri Jan  9 21:47:40 2004
Subject: [mod_python] Apache startup error using mod_python under Windows
 2000 (have msvcr70.dll)
In-Reply-To: <001201c36e46$1f72d010$0a00a8c0@laird>
References: 
	<OF369D809A.F682347B-ON85256D91.004FD7CA-85256D91.0050607E@EU.novartis.net>
	<20030829110249.R53150@onyx.ispol.com> <001201c36e46$1f72d010$0a00a8c0@laird>
Message-ID: <3F4F7BF2.2090106@sjsoft.com>

Laird Shaw wrote:

>Your advice solved my problem, Perry.  I uninstalled Python 2.3 and
>mod_python, then downloaded and installed Python 2.2.  Then I installed
>mod_python 3.0.3, started up Apache and navigated to the test page: worked
>fine.  I can reattest that neither mod_python 3.0.3 nor mod_python 3.1.0a
>worked with my setup using Python 2.3 - which is a pity as it's nice to use
>the latest and greatest version of languages.
>
>Grisha, I don't know whether your question was for Perry or me, but I'll
>answer anyway: I installed Python from this windows installer:
>http://www.python.org/ftp/python/2.2.3/Python-2.2.3.exe.
>
>Much appreciated,
>Laird
>  
>
mod_python 3.0.3 won't work with Python 2.3 as it's compiled for Python 
2.2 - and in addition,
the "compatibility fixes" that are listed in the mod_python 3.1a for 
Python 2.3 presumably are neccessary...
However it would be helpful to determine if the problem is related to 
Python 2.3, and the easiest way to do that...
would be to have an installer for mod_python 3.1a for Python 2.2! Grisha?

David

>----- Original Message ----- 
>From: "Gregory (Grisha) Trubetskoy" <grisha@modpython.org>
>To: <perry.tew@cibavision.novartis.com>
>Cc: <Mod_python@modpython.org>
>Sent: Saturday, August 30, 2003 1:06 AM
>Subject: Re: [mod_python] Apache startup error using mod_python under
>Windows 2000 (have msvcr70.dll)
>
>
>  
>
>>Are you using stock Python, Win32 Python, Active or self-compiled?
>>
>>Grisha
>>
>>On Fri, 29 Aug 2003 perry.tew@cibavision.novartis.com wrote:
>>
>>    
>>
>>>Laird,
>>>    I'm a newbie to mod_python, and I had the same problem  a few days
>>>back
>>>when I tried to install and run mod_python under windows xp with python
>>>2.3.
>>>When I backed up to python 2.2, mod_python worked fine.
>>>
>>>I just installed the 3.1 alpha against python 2.3 and it works well.
>>>
>>>My advice is to either back up to python 2.2 or go forward to mod_python
>>>3.1 alpha.
>>>
>>>Hope this helps,
>>>Perry
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>Laird Shaw wrote:
>>>
>>>      
>>>
>>>>Hi all,
>>>>
>>>>Apologies if I've missed the answer to this question somewhere, but
>>>>        
>>>>
>I've
>  
>
>>>>searched to no avail.
>>>>
>>>>Whilst attempting to start, Apache fails with:
>>>>
>>>>Syntax error on line 175 of C:/Program Files/Apache
>>>>Group/Apache2/conf/httpd.conf:
>>>>Cannot load C:/Program Files/Apache Group/Apache2/modules/mod_python.so
>>>>        
>>>>
>>>into
>>>      
>>>
>>>>server: The specified module could not be found.
>>>>
>>>>I've checked that I've specified the correct path to mod_python.so.
>>>>
>>>>I saw in another post that msvcr70.dll is required, and duly downloaded
>>>>        
>>>>
>>>and
>>>      
>>>
>>>>copied it into winnt\system32, believing I had solved the problem.
>>>>        
>>>>
>Alas,
>  
>
>>>no
>>>      
>>>
>>>>such luck.  Same error.
>>>>
>>>>OS = Windows 2000 5.00.2195, Service pack 4
>>>>Python = 2.3
>>>>Apache = 2.0.47
>>>>msvcr70.dll = 7.00.9064.0
>>>>
>>>>
>>>>        
>>>>
>>>I've had exactly the same problem, with a new Win2000 virtual machine,
>>>same versions of Python and Apache.
>>>Didn't try add the dll though.
>>>
>>>David
>>>
>>>
>>>_______________________________________________
>>>Mod_python mailing list
>>>Mod_python@modpython.org
>>>http://mailman.modpython.org/mailman/listinfo/mod_python
>>>
>>>
>>>
>>>      
>>>
>>_______________________________________________
>>Mod_python mailing list
>>Mod_python@modpython.org
>>http://mailman.modpython.org/mailman/listinfo/mod_python
>>    
>>
>
>_______________________________________________
>Mod_python mailing list
>Mod_python@modpython.org
>http://mailman.modpython.org/mailman/listinfo/mod_python
>
>  
>


From grisha at modpython.org  Fri Aug 29 12:32:33 2003
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 21:47:40 2004
Subject: [mod_python] Apache startup error using mod_python under Windows
 2000 (have msvcr70.dll)
In-Reply-To: <3F4F7BF2.2090106@sjsoft.com>
References: <OF369D809A.F682347B-ON85256D91.004FD7CA-85256D91.0050607E@EU.novartis.net>
	<001201c36e46$1f72d010$0a00a8c0@laird> <3F4F7BF2.2090106@sjsoft.com>
Message-ID: <20030829121653.W53150@onyx.ispol.com>



On Fri, 29 Aug 2003, David Fraser wrote:

> Python 2.3, and the easiest way to do that...
> would be to have an installer for mod_python 3.1a for Python 2.2! Grisha?

Getting a version for Python 2.2 is tricky because the production
of the installer requires 2.3, so what I had to do in the past is compile
for 2.2, but then use 2.3 for the installer, so it's a bit of a pain.

What we really need to do is figure out what is different between our
systems.

Just to summarise, is this correct? (I am only concerned with 3.1.0a here,
NOT 3.0.3).

"stock" means the binary from www.python.org, as opposed to Win32, Active
or compiled. All Apache is the binary from www.apache.org.

       |  mod_py  | Python    | Apache | Win. |
-------------------------------------------------------
Perry  |  3.1.0a  | stock 2.3 | 2.0.47 | ?    | OK
Grisha |  3.1.0a  | stock 2.3 | 2.0.47 | 2000 | OK
David  |  3.1.0a  | stock 2.3 | 2.0.47 | 2000 | NOT OK
Laird  |  3.1.0a  | stock 2.3 | 2.0.47 | 2000 | NOT OK

Grisha
From lairdshaw at yahoo.com.au  Sat Aug 30 02:37:56 2003
From: lairdshaw at yahoo.com.au (Laird Shaw)
Date: Fri Jan  9 21:47:40 2004
Subject: [mod_python] Apache startup error using mod_python under Windows
	2000 (have msvcr70.dll)
References: 
	<OF369D809A.F682347B-ON85256D91.004FD7CA-85256D91.0050607E@EU.novartis.net>
	<20030829110249.R53150@onyx.ispol.com> <001201c36e46$1f72d010$0a00a8c0@laird>
	<3F4F7BF2.2090106@sjsoft.com> <20030829121653.W53150@onyx.ispol.com>
Message-ID: <004501c36e4b$f9ee1c40$0a00a8c0@laird>

Yes that's right for me.

----- Original Message ----- 
From: "Gregory (Grisha) Trubetskoy" <grisha@modpython.org>
To: "David Fraser" <davidf@sjsoft.com>
Cc: "Laird Shaw" <lairdshaw@yahoo.com.au>; "Gregory (Grisha) Trubetskoy"
<grisha@modpython.org>; <perry.tew@cibavision.novartis.com>;
<Mod_python@modpython.org>
Sent: Saturday, August 30, 2003 2:32 AM
Subject: Re: [mod_python] Apache startup error using mod_python under
Windows 2000 (have msvcr70.dll)


>
>
> On Fri, 29 Aug 2003, David Fraser wrote:
>
> > Python 2.3, and the easiest way to do that...
> > would be to have an installer for mod_python 3.1a for Python 2.2!
Grisha?
>
> Getting a version for Python 2.2 is tricky because the production
> of the installer requires 2.3, so what I had to do in the past is compile
> for 2.2, but then use 2.3 for the installer, so it's a bit of a pain.
>
> What we really need to do is figure out what is different between our
> systems.
>
> Just to summarise, is this correct? (I am only concerned with 3.1.0a here,
> NOT 3.0.3).
>
> "stock" means the binary from www.python.org, as opposed to Win32, Active
> or compiled. All Apache is the binary from www.apache.org.
>
>        |  mod_py  | Python    | Apache | Win. |
> -------------------------------------------------------
> Perry  |  3.1.0a  | stock 2.3 | 2.0.47 | ?    | OK
> Grisha |  3.1.0a  | stock 2.3 | 2.0.47 | 2000 | OK
> David  |  3.1.0a  | stock 2.3 | 2.0.47 | 2000 | NOT OK
> Laird  |  3.1.0a  | stock 2.3 | 2.0.47 | 2000 | NOT OK
>
> Grisha

From perry.tew at cibavision.novartis.com  Fri Aug 29 13:09:13 2003
From: perry.tew at cibavision.novartis.com (perry.tew@cibavision.novartis.com)
Date: Fri Jan  9 21:47:41 2004
Subject: [mod_python] Apache startup error using mod_python under Windows
	2000 (have msvcr70.dll)
Message-ID: <OF945AE48D.A46949C9-ON85256D91.005DC170-85256D91.005E3A5E@EU.novartis.net>

Grisha, 
   My version of windows is Windows XP Version 2002.

FYI, I don't know what testing hardware you have, but we have XP and 
Solaris 8 in house. 
We'll also have some Solaris 9 shortly.  Additionally, I can set up some 
HPUX 11i  boxes if needed.
I say this not to brag, but only to offer help if you need additional 
platforms to run tests on for your 
new alpha version.

Thanks,
Perry







On Fri, 29 Aug 2003, David Fraser wrote:

> Python 2.3, and the easiest way to do that...
> would be to have an installer for mod_python 3.1a for Python 2.2! 
Grisha?

Getting a version for Python 2.2 is tricky because the production
of the installer requires 2.3, so what I had to do in the past is compile
for 2.2, but then use 2.3 for the installer, so it's a bit of a pain.

What we really need to do is figure out what is different between our
systems.

Just to summarise, is this correct? (I am only concerned with 3.1.0a here,
NOT 3.0.3).

"stock" means the binary from www.python.org, as opposed to Win32, Active
or compiled. All Apache is the binary from www.apache.org.

       |  mod_py  | Python    | Apache | Win. |
-------------------------------------------------------
Perry  |  3.1.0a  | stock 2.3 | 2.0.47 | ?    | OK
Grisha |  3.1.0a  | stock 2.3 | 2.0.47 | 2000 | OK
David  |  3.1.0a  | stock 2.3 | 2.0.47 | 2000 | NOT OK
Laird  |  3.1.0a  | stock 2.3 | 2.0.47 | 2000 | NOT OK

Grisha


-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mailman.modpython.org/pipermail/mod_python/attachments/20030829/43917b96/attachment.htm
From barry at python.org  Fri Aug 29 15:57:44 2003
From: barry at python.org (Barry Warsaw)
Date: Fri Jan  9 21:47:41 2004
Subject: [mod_python] Child shutdowns?
Message-ID: <1062187064.4895.7.camel@yyz>

I'm very likely missing it, but is there some way to run a callable when
the child processes are terminated (i.e. through apachectl stop)?

Seems like the server object's register_cleanup() ought to do it, except
that I have some startup code that gets run when my main module is
imported and at that point I don't have a request object to use as the
first argument to register_cleanup().

Any hints (or examples!)?

Thanks,
-Barry


From conrad at hep.caltech.edu  Fri Aug 29 13:29:41 2003
From: conrad at hep.caltech.edu (Conrad Steenberg)
Date: Fri Jan  9 21:47:41 2004
Subject: [mod_python] ANNOUNCE: Mod_python 3.1.0 Alpha
In-Reply-To: <20030828210644.C43921@onyx.ispol.com>
References: <20030828210644.C43921@onyx.ispol.com>
Message-ID: <1062188981.14514.296.camel@heppc22>

Hi

Tested here to be working under an OpenPKG-1.3 (ish) environment.

Any pointers to higher level tools that works with the included version
of PSP (such as for constructing a news or blogging site)? There seems
to be at least two other projects also calling themselves PSP ;-)

Cheers

Conrad

On Thu, 2003-08-28 at 18:12, Gregory (Grisha) Trubetskoy wrote:
> The Apache Software Foundation and The Apache HTTP Server Project are
> pleased to announce the 3.1.0 ALPHA release mod_python.
> 
> Some feature highlights:
> 
> * Server-side sessions with memory or dbm-based storage and session
> locking support.
> 
> * PSP - a fast flex-based scanner which allows embedding Python code
> within HTML.
> 
> * Native cookie support, including support for automatic cryptographic
> cookie signing and marshalling.
> 
> * Compatibility with Python 2.3, as well as many other enhancements.
> 
> Alpha releases are NOT considered stable and do contain bugs. Some
> functionality may change before the first beta release.
> 
> This release is intended to solicit widespread testing of the code. We
> strongly recommend that you try out your existing applications and
> experiment with new features in a non-production environment using this
> version and report any problems you may encounter so that they can be
> addressed before the final release.
> 
> Mod_python 3.1.0a is available for download from:
> 
> http://httpd.apache.org/modules/python-download.cgi
> 
> Preferred method of providing feedback is the mod_python user list
> mod_python@modpython.org (due to spam, you must subscribe to post).
> 
> For more information about mod_python visit
> http://www.modpython.org/
> 
> Thank You,
> 
> Grisha Trubetskoy
> 
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
-- 
Conrad Steenberg <conrad@hep.caltech.edu>

From grisha at modpython.org  Fri Aug 29 17:11:28 2003
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 21:47:41 2004
Subject: [mod_python] Child shutdowns?
In-Reply-To: <1062187064.4895.7.camel@yyz>
References: <1062187064.4895.7.camel@yyz>
Message-ID: <20030829164056.W56156@onyx.ispol.com>


Barry

If I remember this correctly, from the viewpoint of Apache, to create a
server object (or server_rec structure) you need to have a request,
because a server is created based on what the "Host:" header says (if it
is there at all) and by then going throught the config to see if there is
anything relevant. Once a server is created, it is cached and reused, but
it is not created at Apache startup (as an extreme example, mod_vhost
allows you to create an unlimited number of virtual servers without
specifying them in the config at all - so there is no way to know what the
server name is until a request for it comes in).

I don't know if Apache provides a way to do something at server creation
time, I'll check it out, but it's unlikely. For right now, the only way to
register a server cleanup is from within a request :-(

Grisha

On Fri, 29 Aug 2003, Barry Warsaw wrote:

> I'm very likely missing it, but is there some way to run a callable when
> the child processes are terminated (i.e. through apachectl stop)?
>
> Seems like the server object's register_cleanup() ought to do it, except
> that I have some startup code that gets run when my main module is
> imported and at that point I don't have a request object to use as the
> first argument to register_cleanup().
>
> Any hints (or examples!)?
>
> Thanks,
> -Barry
>
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>
From grisha at apache.org  Fri Aug 29 17:21:57 2003
From: grisha at apache.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 21:47:41 2004
Subject: [mod_python] ANNOUNCE: Mod_python 3.1.0 Alpha
In-Reply-To: <1062188981.14514.296.camel@heppc22>
References: <20030828210644.C43921@onyx.ispol.com>
	<1062188981.14514.296.camel@heppc22>
Message-ID: <20030829171157.O56156@onyx.ispol.com>

On Fri, 29 Aug 2003, Conrad Steenberg wrote:

> Hi
>
> Tested here to be working under an OpenPKG-1.3 (ish) environment.
>
> Any pointers to higher level tools that works with the included version
> of PSP (such as for constructing a news or blogging site)? There seems
> to be at least two other projects also calling themselves PSP ;-)

There is even one called Perl Server Pages :-)

I doubt there are any tools, since our PSP is brand new. B

But it's rather simplistic. For everyone's info:

This describes the syntax:

http://www.modpython.org/live/mod_python-3.1.0a/doc-html/pyapi-psp.html

And this describes the psp handler (things like sessions, etc):

http://www.modpython.org/live/mod_python-3.1.0a/doc-html/pyapi-psp.html

Also, if you have any JSP experience, there was an e-mail on the dev list
regarding how it corresponds to PSP, which I'll forward to this list
(because I forgot where the dev list archives are).

Grisha

From grisha at apache.org  Fri Aug 29 17:23:24 2003
From: grisha at apache.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 21:47:41 2004
Subject: [mod_python] PSP Notes (fwd)
Message-ID: <20030829172210.D56156@onyx.ispol.com>


---------- Forwarded message ----------
Date: Wed, 13 Aug 2003 14:34:14 -0400 (EDT)
From: "Gregory (Grisha) Trubetskoy" <grisha@apache.org>
To: python-dev@httpd.apache.org
Subject: PSP Notes


As an excercise in PSP usability, I've been going through JSP examples
from Tomcat and rewriting them using PSP, here are random notes on the
subject.


* JSP has a notion of an application (e.g. "/apps/mywebapp") with a
document root (e.g. /home/www/blah). Some stuff (e.g. location of classes)
then becomes relative to those paths. In PSP there isn't really a clear
concept of an application, but the closest thing to that is the directory
in which the PythonHandler directive is specified. This is nothing new,
btw, it's always how mod_python worked. So if you have:

<Directory /home/www/psp>
  AddHandler mod_python .psp   <--note the new clever handler name
  PythonHandler mod_python.psp
</Directory>

...then /home/www/psp will be prepended to sys.path, therefore if you
create a directory /home/www/psp/pylib, you could import a module from a
psp file like this:

<%
from pylib import mymodule
%>

This way you have your entire application under /home/www/psp, you can
use, say, /home/www/psp/html for psp/html and all your Python modules are
in /home/www/pylib, giving you a clear separation of logic and interface.


* Next thing that I ran into is having to reload mymodule if it changes.
There is now a new recommended way of doing this:

mymodule = apache.import_module("pylib.mymodule")

This is the same function that mod_python uses internally for autorelad
and takes care of all your reload needs. It does stat the file every time,
so when you're sure you won't need to reload the page, just change it to:

mymodule = apache.import_module("pylib.mymodule", autoreload=0)


* JSP page import directive

JSP:

<%@ page import = "num.NumberGuessBean" %>

PSP:

<%
num = apache.import_module("pylib.num")
%>
... now you've got num.NumberGuessBean, you get the idea


* JSP useBean action

JSP:

<jsp:useBean id="numguess" class="num.NumberGuessBean" scope="session"/>

This means that numguess is an instance of num.NumberGuessBean and it will
persist for as long as the session exists.

PSP (again, no need for special syntax):

<%
numguess = session.setdefault("numguess", num.NumberGuessBean())
%>


* JSP setProperty

This will match up form elements and set them in a Java object. So if the
object defines setColor() and the form contains a field "Color", JSP will
call setColor passing value of color as the argument.

JSP:

<jsp:setProperty name="numguess" property="*"/>

PSP:

Well, there isn't exactly this functionality, but there is something
different. You can use the same functionality that the publisher handler
uses to match up form elements with a function:

class Car:

    def __init__(self, color):

         # do something

Then a psp page called as result of a form submition can do this:

<%
car = psp.apply_data(Car)
%>

This will call the callable object Car (classes are callable), passing it
the value of "color", and resulting in an instance of Car which is
assigned to car.


* <%@ page session="false"%>

In JSP this means don't create a session for this page. This is really
easy in PSP - just don't mention the "session" variable in your page. The
psp handler examines the code for mentions of "session" and generates (and
locks) one if it encounters such mentions.


* page errorPage

JSP allows you to specify a special error page to be displayed when an
exception is thrown.

JSP:
<%@ page errorPage="errorpge.jsp" %>

PSP:
<%
psp.set_error_page("errorpge.psp")
%>

When (if) errorpge.psp is invoked, it will have a global "exception"
variable which will contain same info as returned by sys.exc_info().

* include

Of course, PSP supports <%@ include file="blah.html"%>



Grisha
From barry at python.org  Fri Aug 29 17:47:20 2003
From: barry at python.org (Barry Warsaw)
Date: Fri Jan  9 21:47:41 2004
Subject: [mod_python] Child shutdowns?
In-Reply-To: <20030829164056.W56156@onyx.ispol.com>
References: <1062187064.4895.7.camel@yyz>
	 <20030829164056.W56156@onyx.ispol.com>
Message-ID: <1062193640.4895.13.camel@yyz>

On Fri, 2003-08-29 at 17:11, Gregory (Grisha) Trubetskoy wrote:
> Barry
> 
> If I remember this correctly, from the viewpoint of Apache, to create a
> server object (or server_rec structure) you need to have a request,
> because a server is created based on what the "Host:" header says (if it
> is there at all) and by then going throught the config to see if there is
> anything relevant. Once a server is created, it is cached and reused, but
> it is not created at Apache startup (as an extreme example, mod_vhost
> allows you to create an unlimited number of virtual servers without
> specifying them in the config at all - so there is no way to know what the
> server name is until a request for it comes in).
> 
> I don't know if Apache provides a way to do something at server creation
> time, I'll check it out, but it's unlikely. For right now, the only way to
> register a server cleanup is from within a request :-(

Thanks Grisha, both for the info and the offer to poke around.  I'll try
pushing my startup code into my request handler, and see if registering
my cleanup code at that time will work.

Cheers,
-Barry


From gstein at lyra.org  Fri Aug 29 14:56:55 2003
From: gstein at lyra.org (Greg Stein)
Date: Fri Jan  9 21:47:41 2004
Subject: [mod_python] Child shutdowns?
In-Reply-To: <20030829164056.W56156@onyx.ispol.com>;
	from grisha@modpython.org on Fri, Aug 29, 2003 at 05:11:28PM -0400
References: <1062187064.4895.7.camel@yyz>
	<20030829164056.W56156@onyx.ispol.com>
Message-ID: <20030829145655.D14389@lyra.org>

On Fri, Aug 29, 2003 at 05:11:28PM -0400, Gregory (Grisha) Trubetskoy wrote:
> 
> Barry
> 
> If I remember this correctly, from the viewpoint of Apache, to create a
> server object (or server_rec structure) you need to have a request,
> because a server is created based on what the "Host:" header says (if it

Nope, sorry.

The server_rec structures are created at server-startup time when we parse
the configuration file. There is a server_rec per virtual host, plus one
for the default server.

At request time, the appropriate server_rec is looked up and passed along
as part of the request processing.

> is there at all) and by then going throught the config to see if there is
> anything relevant. Once a server is created, it is cached and reused, but
> it is not created at Apache startup (as an extreme example, mod_vhost
> allows you to create an unlimited number of virtual servers without
> specifying them in the config at all - so there is no way to know what the
> server name is until a request for it comes in).

Dunno how mod_vhost does it. The typical scenario is the construction at
startup time.

> I don't know if Apache provides a way to do something at server creation
> time, I'll check it out, but it's unlikely. For right now, the only way to
> register a server cleanup is from within a request :-(

The post_config hook is possibly one place to do this. It gets a pool
associated with the process.

There is also a child_init hook, which I believe is called whenever a new
child is spun up. That is probably a more appropriate place. It gets a
pool associated with the child.

If you can get a function registered as a cleanup on that pool, then
you'll be all set.

Cheers,
-g

> 
> Grisha
> 
> On Fri, 29 Aug 2003, Barry Warsaw wrote:
> 
> > I'm very likely missing it, but is there some way to run a callable when
> > the child processes are terminated (i.e. through apachectl stop)?
> >
> > Seems like the server object's register_cleanup() ought to do it, except
> > that I have some startup code that gets run when my main module is
> > imported and at that point I don't have a request object to use as the
> > first argument to register_cleanup().
> >
> > Any hints (or examples!)?
> >
> > Thanks,
> > -Barry
> >
> >
> > _______________________________________________
> > Mod_python mailing list
> > Mod_python@modpython.org
> > http://mailman.modpython.org/mailman/listinfo/mod_python
> >
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python

-- 
Greg Stein, http://www.lyra.org/
From barry at python.org  Fri Aug 29 18:05:31 2003
From: barry at python.org (Barry Warsaw)
Date: Fri Jan  9 21:47:41 2004
Subject: [mod_python] Child shutdowns?
In-Reply-To: <1062193640.4895.13.camel@yyz>
References: <1062187064.4895.7.camel@yyz>
	<1062193640.4895.13.camel@yyz>
Message-ID: <1062194731.4895.17.camel@yyz>

On Fri, 2003-08-29 at 17:47, Barry Warsaw wrote:

> Thanks Grisha, both for the info and the offer to poke around.  I'll try
> pushing my startup code into my request handler, and see if registering
> my cleanup code at that time will work.

Very quick testing reveals that something like this stanza does the
trick:

def handler(req):
    global _started
    if not _started:
        startup()
        req.server.register_cleanup(req, shutdown)
        _started = True

A bit gnarly perhaps, but palatable.

-Barry


From gstein at lyra.org  Fri Aug 29 15:23:28 2003
From: gstein at lyra.org (Greg Stein)
Date: Fri Jan  9 21:47:41 2004
Subject: [mod_python] Child shutdowns?
In-Reply-To: <1062194731.4895.17.camel@yyz>;
	from barry@python.org on Fri, Aug 29, 2003 at 06:05:31PM -0400
References: <1062187064.4895.7.camel@yyz> <1062193640.4895.13.camel@yyz>
	<1062194731.4895.17.camel@yyz>
Message-ID: <20030829152328.E14389@lyra.org>

On Fri, Aug 29, 2003 at 06:05:31PM -0400, Barry Warsaw wrote:
> On Fri, 2003-08-29 at 17:47, Barry Warsaw wrote:
> 
> > Thanks Grisha, both for the info and the offer to poke around.  I'll try
> > pushing my startup code into my request handler, and see if registering
> > my cleanup code at that time will work.
> 
> Very quick testing reveals that something like this stanza does the
> trick:
> 
> def handler(req):
>     global _started
>     if not _started:
>         startup()
>         req.server.register_cleanup(req, shutdown)
>         _started = True
> 
> A bit gnarly perhaps, but palatable.

Ouch! The interface is very non-intuitive. That is not a cleanup
associated with the server, but actually with the pchild pool that was
passed to the child_init hook.

Looking at the code, mod_python hooks into child_init and saves the pool
off into a global variable. The server_register_cleanup() function then
attaches the cleanup to *that* pool.

So it does what you want, but yah... a bit ugly. And it really doesn't
look thread-safe either. You could easily have two threads end up inside
the 'if' block, registering a cleanup.

Cheers,
-g

-- 
Greg Stein, http://www.lyra.org/
From barry at python.org  Fri Aug 29 18:40:46 2003
From: barry at python.org (Barry Warsaw)
Date: Fri Jan  9 21:47:41 2004
Subject: [mod_python] Child shutdowns?
In-Reply-To: <20030829152328.E14389@lyra.org>
References: <1062187064.4895.7.camel@yyz> <1062193640.4895.13.camel@yyz>
	 <1062194731.4895.17.camel@yyz>  <20030829152328.E14389@lyra.org>
Message-ID: <1062196846.4895.43.camel@yyz>

On Fri, 2003-08-29 at 18:23, Greg Stein wrote:

> So it does what you want, but yah... a bit ugly. And it really doesn't
> look thread-safe either. You could easily have two threads end up inside
> the 'if' block, registering a cleanup.

Yep, but right now I'm using a prefork MPM, which I'll probably stick
with for reasons like this.  IIUC, each child process is single
threaded, right?

-Barry


From gstein at lyra.org  Fri Aug 29 16:06:11 2003
From: gstein at lyra.org (Greg Stein)
Date: Fri Jan  9 21:47:41 2004
Subject: [mod_python] Child shutdowns?
In-Reply-To: <1062196846.4895.43.camel@yyz>;
	from barry@python.org on Fri, Aug 29, 2003 at 06:40:46PM -0400
References: <1062187064.4895.7.camel@yyz> <1062193640.4895.13.camel@yyz>
	<1062194731.4895.17.camel@yyz> <20030829152328.E14389@lyra.org>
	<1062196846.4895.43.camel@yyz>
Message-ID: <20030829160611.F14389@lyra.org>

On Fri, Aug 29, 2003 at 06:40:46PM -0400, Barry Warsaw wrote:
> On Fri, 2003-08-29 at 18:23, Greg Stein wrote:
> 
> > So it does what you want, but yah... a bit ugly. And it really doesn't
> > look thread-safe either. You could easily have two threads end up inside
> > the 'if' block, registering a cleanup.
> 
> Yep, but right now I'm using a prefork MPM, which I'll probably stick
> with for reasons like this.  IIUC, each child process is single
> threaded, right?

Yup, it sure is.

If you want to be a Real Man, then you can use _apache.mpm_query to verify
that you're running single-threaded :-)

btw, if you're going to rely on prefork, then why don't you just use the
exit handlers for the process rather than worrying about Apache's pool
cleanup handling? If you're doing the latter to work within the Apache
framework, then you really ought to keep threads in mind :-)

Cheers,
-g

-- 
Greg Stein, http://www.lyra.org/
From barry at python.org  Fri Aug 29 19:14:00 2003
From: barry at python.org (Barry Warsaw)
Date: Fri Jan  9 21:47:41 2004
Subject: [mod_python] Child shutdowns?
In-Reply-To: <20030829160611.F14389@lyra.org>
References: <1062187064.4895.7.camel@yyz> <1062193640.4895.13.camel@yyz>
	 <1062194731.4895.17.camel@yyz> <20030829152328.E14389@lyra.org>
	 <1062196846.4895.43.camel@yyz>  <20030829160611.F14389@lyra.org>
Message-ID: <1062198840.4895.74.camel@yyz>

On Fri, 2003-08-29 at 19:06, Greg Stein wrote:

> If you want to be a Real Man, then you can use _apache.mpm_query to verify
> that you're running single-threaded :-)

Ooh, ooh, the "hidden goodies"!  So far I've only dug into the
documented API ('course I could be missing this one).

> btw, if you're going to rely on prefork, then why don't you just use the
> exit handlers for the process rather than worrying about Apache's pool
> cleanup handling? If you're doing the latter to work within the Apache
> framework, then you really ought to keep threads in mind :-)

I tried setting sys.exitfunc but it wasn't called when I apachectl
stop'd, probably because that kills the process via SIGTERM, and I don't
think exit handlers are run in that case.  (I probably should have used
the atexit module, but that has the same semantics.)

I hear ya about threading issues.  Right now, I'm trying to get the
simplest possible thing that can work. <wink>

-Barry


From conrad at hep.caltech.edu  Fri Aug 29 17:05:23 2003
From: conrad at hep.caltech.edu (Conrad Steenberg)
Date: Fri Jan  9 21:47:41 2004
Subject: [mod_python] ANNOUNCE: Mod_python 3.1.0 Alpha
In-Reply-To: <20030829171157.O56156@onyx.ispol.com>
References: <20030828210644.C43921@onyx.ispol.com>
	<20030829171157.O56156@onyx.ispol.com>
Message-ID: <1062201922.2857.5.camel@Presario>

On Fri, 2003-08-29 at 14:21, Gregory (Grisha) Trubetskoy wrote:
> On Fri, 29 Aug 2003, Conrad Steenberg wrote:
> 
> > Hi
> >
> > Tested here to be working under an OpenPKG-1.3 (ish) environment.
> >
> > Any pointers to higher level tools that works with the included version
> > of PSP (such as for constructing a news or blogging site)? There seems
> > to be at least two other projects also calling themselves PSP ;-)
> 
> There is even one called Perl Server Pages :-)
> 
> I doubt there are any tools, since our PSP is brand new. B
> 
> But it's rather simplistic. For everyone's info:

Thanks for the clarification, I was under the horribly mistaken
impression that the mod_python PSP was taken from some other bigger
project ;-)

And simplistic is good, IMHO.

Thanks for the docs, too.

Conrad

> 
> This describes the syntax:
> 
> http://www.modpython.org/live/mod_python-3.1.0a/doc-html/pyapi-psp.html
> 
> And this describes the psp handler (things like sessions, etc):
> 
> http://www.modpython.org/live/mod_python-3.1.0a/doc-html/pyapi-psp.html
> 
> Also, if you have any JSP experience, there was an e-mail on the dev list
> regarding how it corresponds to PSP, which I'll forward to this list
> (because I forgot where the dev list archives are).
> 
> Grisha


-- 
Conrad Steenberg <conrad@hep.caltech.edu>
From grisha at modpython.org  Fri Aug 29 20:26:00 2003
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 21:47:41 2004
Subject: [mod_python] Child shutdowns?
In-Reply-To: <1062198840.4895.74.camel@yyz>
References: <1062187064.4895.7.camel@yyz> <1062193640.4895.13.camel@yyz>
 <1062194731.4895.17.camel@yyz> <20030829152328.E14389@lyra.org>
 <1062196846.4895.43.camel@yyz>  <20030829160611.F14389@lyra.org>
 <1062198840.4895.74.camel@yyz>
Message-ID: <20030829200546.C59355@onyx.ispol.com>


On Fri, 29 Aug 2003, Barry Warsaw wrote:

> On Fri, 2003-08-29 at 19:06, Greg Stein wrote:
>
> > If you want to be a Real Man, then you can use _apache.mpm_query to verify
> > that you're running single-threaded :-)
>
> Ooh, ooh, the "hidden goodies"!  So far I've only dug into the
> documented API ('course I could be missing this one).

It's documented, but it's a mod_python 3.1 thing. It's actually
apache.mpm_query:

http://www.modpython.org/live/mod_python-3.1.0a/doc-html/pyapi-apmeth.html

BTW, if you're not going to be using sessions or PSP (which are new), you
might as well use 3.1.0a - the stuff carried over from 3.0.3 is probably
stabler and faster, and it fixes some things that wouldn't work at all in
Python 2.3, e.g. get rid of stupid ancient things like

if str(type(object)) == "<type 'class'>"

Grisha
From pradix at gmx.de  Sat Aug 30 02:35:52 2003
From: pradix at gmx.de (=?ISO-8859-1?Q?Lorenz_K=F6hl?=)
Date: Fri Jan  9 21:47:41 2004
Subject: [mod_python] modpython compile error
Message-ID: <3F4FF168.9050505@gmx.de>

I want to install modpython 3.0.3 on my Suse 8.2 but during compilation 
an error occurs saying

----------------
/usr/include/features.h:131:1: warning: this is the location of the 
previous definition
requestobject.c: In function `getreq_recmbr_off':
requestobject.c:1055: error: `LONG_LONG' undeclared (first use in this 
function)
requestobject.c:1055: error: (Each undeclared identifier is reported 
only once
requestobject.c:1055: error: for each function it appears in.)
requestobject.c:1056: error: parse error before "l"
requestobject.c:1057: error: `l' undeclared (first use in this function)
requestobject.c: At top level:
requestobject.c:1270: warning: initialization from incompatible pointer type
apxs:Error: Command failed with rc=65536
.
make[1]: *** [mod_python.so] Error 1
make[1]: Leaving directory 
`/home/software/network/apache/mod_python-3.0.3/src'
make: *** [do_dso] Error 2
-----------------

I've apache 2.0.47 and python 2.3 installed. The configure of modpython 
was fine and of course I
compiled apache with --enable-so.

in requestobject.c there's someting in the comments about apr. but apr 
from apr.apache.org is installed
build into apache.

any ideas?  (any parsing-lib missing?)

From barry at python.org  Sat Aug 30 12:28:49 2003
From: barry at python.org (Barry Warsaw)
Date: Fri Jan  9 21:47:41 2004
Subject: [mod_python] Child shutdowns?
In-Reply-To: <20030829200546.C59355@onyx.ispol.com>
References: <1062187064.4895.7.camel@yyz> <1062193640.4895.13.camel@yyz>
	<1062194731.4895.17.camel@yyz> <20030829152328.E14389@lyra.org>
	<1062196846.4895.43.camel@yyz>  <20030829160611.F14389@lyra.org>
	<20030829200546.C59355@onyx.ispol.com>
Message-ID: <1062260929.30124.0.camel@anthem>

On Fri, 2003-08-29 at 20:26, Gregory (Grisha) Trubetskoy wrote:

> BTW, if you're not going to be using sessions or PSP (which are new), you
> might as well use 3.1.0a - the stuff carried over from 3.0.3 is probably
> stabler and faster, and it fixes some things that wouldn't work at all in
> Python 2.3, e.g. get rid of stupid ancient things like
> 
> if str(type(object)) == "<type 'class'>"

Cool, thanks for the tip.

-Barry


From stephen at vermeulen.ca  Sat Aug 30 12:56:17 2003
From: stephen at vermeulen.ca (Stephen Vermeulen)
Date: Fri Jan  9 21:47:41 2004
Subject: [mod_python] Problems getting mod_python to work on Windows NT4.0
Message-ID: <3F50F351.8020306@vermeulen.ca>

This morning I took my first attempt at getting mod_python to work on 
Windows NT4.0
under Apache 2.0.47 and Python 2.3. I could not get the simple test from:

http://www.modpython.org/live/current/doc-html/inst-testing.html

to work.  All I got was the following error:

[Sat Aug 30 12:23:09 2003] [error] make_obcallback: could not import 
mod_python.apache.

I tried both

   mod_python-3.0.3.win32.exe

and
 
   mod_python-3.1.0a.win32-py2.3.exe

and both gave the same errors.

In the end I noticed in the mailing list archives that some people had 
success after reverting to
Python 2.2.  So I installed a copy of Python 2.2.2 on my system (I did 
not remove my Python 2.3)
and reinstalled mod_python 3.0.3.

Without changing anything else it started to work.

Regards,

Stephen



From azaroth at liverpool.ac.uk  Fri Aug  1 19:41:27 2003
From: azaroth at liverpool.ac.uk (Robert Sanderson)
Date: Fri Jan  9 21:53:44 2004
Subject: [mod_python] MacOS X Install
Message-ID: <Pine.LNX.4.44.0308011937060.16855-100000@gondolin.hist.liv.ac.uk>


Okay, has anyone gotten mod_python working under MacOS X recently?  In 
particular, using 2.3 (to avoid the issue with python thinking it's 
running in restricted mode)

I've patched libtool as per the readme.
Installed Apache 2.0.47, configured with --enable-so
Installed Jack Jensen's build of Python2.3
Fixed LONG_LONG to PY_LONG_LONG in the mod_python source
Compiled mod_python, installed it.

When I try to run apache from the command line, with 
DYLD_FORCE_FLAT_NAMESPACE defined or without, I get:

Cannot load /usr/local/apache2/modules/mod_python.so into server: dyld: 
/usr/sbin/httpd Undefined symbols:
_PyExc_AttributeError
_PyExc_IOError
_PyExc_IndexError
_PyExc_KeyError

Previously I tried the same thing without patching libtool and got:

Undefined symbols:
_PyInt_Type
_Py_OptimizeFlag
Trace/(something)

Rob

-- 
      ,'/:.          Dr Robert Sanderson (azaroth@liverpool.ac.uk)
    ,'-/::::.        http://www.o-r-g.org/~azaroth/
  ,'--/::(@)::.      Special Collections and Archives, extension 3142
,'---/::::::::::.    Nebmedes:  telnet: nebmedes.o-r-g.org 7777
____/:::::::::::::.                WWW: http://nebmedes.o-r-g.org:8000/
I L L U M I N A T I

From ron at rwsoft.ca  Fri Aug  1 15:13:56 2003
From: ron at rwsoft.ca (Ron Wills)
Date: Fri Jan  9 21:53:44 2004
Subject: [mod_python] File Upload Problem
Message-ID: <1059772435.4143.63.camel@ron.gw.rwsoft.ca>

  I've seem to have found an oddity will binary file uploads with
modpython on windows 2K. I've created a file upload form in which a zip
can be upload to restore a mysql db. I use the util.FieldStorage class
to parse the request and it seems to convert all \n characters in the
binary file to \r\n.
  It doesn't seem to be the browsers (Tested with Mozilla 1.3 1.4, EI 6
and Opera) and I can't see it being Apache (Never run into this problem
using PHP). Is there a way to tell modpython it's binary and not to do
any conversions on the upload?

Using:
	Win2K
	Apache 2.0.46
	modpython 3.0.3

  Thanks for any help.

-- 
Ron Wills
RW Software
http://www.rwsoft.ca
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: This is a digitally signed message part
Url : http://mailman.modpython.org/pipermail/mod_python/attachments/20030801/29e64401/attachment-0001.bin
From grisha at modpython.org  Mon Aug  4 11:44:15 2003
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 21:53:44 2004
Subject: [mod_python] File Upload Problem
In-Reply-To: <1059772435.4143.63.camel@ron.gw.rwsoft.ca>
References: <1059772435.4143.63.camel@ron.gw.rwsoft.ca>
Message-ID: <20030804114304.L88668@onyx.ispol.com>


As far as I can tell mod_python trats everything as binary.

Could you provide the HTML for the form, and also the code you use to get
the data from the file on the server - I suspect there may be something
there.

Grisha

On Fri, 1 Aug 2003, Ron Wills wrote:

>   I've seem to have found an oddity will binary file uploads with
> modpython on windows 2K. I've created a file upload form in which a zip
> can be upload to restore a mysql db. I use the util.FieldStorage class
> to parse the request and it seems to convert all \n characters in the
> binary file to \r\n.
>   It doesn't seem to be the browsers (Tested with Mozilla 1.3 1.4, EI 6
> and Opera) and I can't see it being Apache (Never run into this problem
> using PHP). Is there a way to tell modpython it's binary and not to do
> any conversions on the upload?
>
> Using:
> 	Win2K
> 	Apache 2.0.46
> 	modpython 3.0.3
>
>   Thanks for any help.
>
> --
> Ron Wills
> RW Software
> http://www.rwsoft.ca
>
From leader730 at hotmail.com  Tue Aug  5 00:57:38 2003
From: leader730 at hotmail.com (Jer icho)
Date: Fri Jan  9 21:53:44 2004
Subject: [mod_python] 
	server returning "500 Internal Server Error" with mod_python files
Message-ID: <Law14-F46G4YdlbEwPI0000b2f5@hotmail.com>

An HTML attachment was scrubbed...
URL: http://mailman.modpython.org/pipermail/mod_python/attachments/20030805/906d125f/attachment-0001.htm
From gnb at itga.com.au  Tue Aug  5 15:47:30 2003
From: gnb at itga.com.au (Gregory Bond)
Date: Fri Jan  9 21:53:44 2004
Subject: [mod_python] server returning "500 Internal Server Error" with
	mod_python files 
In-Reply-To: Your message of Tue, 05 Aug 2003 00:57:38 -0400.
Message-ID: <200308050547.PAA08734@lightning.itga.com.au>

> <DIV>[error] make_obcallback: could not import mod_python.apache.</DIV>

See the very first quesiton in the FAQ:

http://www.modpython.org/FAQ/faqw.py?req=show&file=faq02.001.htp

From post at nlhas.no  Tue Aug  5 11:50:02 2003
From: post at nlhas.no (post@nlhas.no)
Date: Fri Jan  9 21:53:44 2004
Subject: [mod_python] Compiling with Python2.3
Message-ID: <20030805095002.CFF9E1506A@nlhhost>

I can't get mod_python to compile with Python2.3 (Apache 2.0.47, RedHat 7.0) :

]# make
make[1]: Entering directory `/home/public/transfer/mod_python-3.0.3/src'
Compiling for DSO.
.....snip.....
requestobject.c: At top level:
requestobject.c:1270: warning: initialization from incompatible pointer type
apxs:Error: Command failed with rc=65536
.
make[1]: *** [mod_python.so] Error 1
make[1]: Leaving directory `/home/public/transfer/mod_python-3.0.3/src'
make: *** [do_dso] Error 2

Same setup configured with Python2.2 compiles perfectly, so I presume this is a problem mod_python<>Python2.3.

Any suggestions?

pm

From grisha at modpython.org  Tue Aug  5 09:26:40 2003
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 21:53:44 2004
Subject: [mod_python] Compiling with Python2.3
In-Reply-To: <20030805095002.CFF9E1506A@nlhhost>
References: <20030805095002.CFF9E1506A@nlhhost>
Message-ID: <20030805092556.Q95995@onyx.ispol.com>


I added a FAQ entry for this:

http://www.modpython.org/FAQ/faqw.py?req=show&file=faq04.002.htp

Grisha

On Tue, 5 Aug 2003 post@nlhas.no wrote:

> I can't get mod_python to compile with Python2.3 (Apache 2.0.47, RedHat 7.0) :
>
> ]# make
> make[1]: Entering directory `/home/public/transfer/mod_python-3.0.3/src'
> Compiling for DSO.
> .....snip.....
> requestobject.c: At top level:
> requestobject.c:1270: warning: initialization from incompatible pointer type
> apxs:Error: Command failed with rc=65536
> .
> make[1]: *** [mod_python.so] Error 1
> make[1]: Leaving directory `/home/public/transfer/mod_python-3.0.3/src'
> make: *** [do_dso] Error 2
>
> Same setup configured with Python2.2 compiles perfectly, so I presume this is a problem mod_python<>Python2.3.
>
> Any suggestions?
>
> pm
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>
From dlrubin at yahoo.com  Wed Aug  6 09:12:10 2003
From: dlrubin at yahoo.com (Daniel Rubin)
Date: Fri Jan  9 21:53:44 2004
Subject: [mod_python] build error on solais
Message-ID: <20030806161210.74520.qmail@web13904.mail.yahoo.com>

Trying to build mod_python 3.0.3 on solaris 2.8. My
configure command is: ./configure
--with-apxs=/home/rubin/opt/apache/bin/apxs
--prefix=/home/rubin
and that runs fine. Then when I make, I get this error
during the build:

/home/rubin/opt/apache/build/libtool --silent
--mode=compile gcc -prefer-pic 
-DAP_HAVE_DESIGNATED_INITIALIZER -DSOLARIS2=8
-D_POSIX_PTHREAD_SEMANTICS -D_REENTRANT -g -O2
-pthreads -I/home/rubin/opt/apache/include 
-I/home/rubin/opt/apache/include  
-I/home/rubin/opt/apache/include 
-I/home/rubin/src/mod_python-3.0.3/src/include
-I/home/rubin/opt/apache/include
-I/home/rubin/include/python2.3  -c -o
requestobject.lo requestobject.c && touch
requestobject.slo
In file included from
/home/rubin/include/python2.3/Python.h:8,
                 from
/home/rubin/src/mod_python-3.0.3/src/include/mod_python.h:92,
                 from requestobject.c:64:
/home/rubin/include/python2.3/pyconfig.h:822:1:
warning: "_FILE_OFFSET_BITS" redefined
In file included from
/home/rubin/lib/gcc-lib/sparc-sun-solaris2.8/3.2.2/include/sys/types.h:28,
                 from
/home/rubin/opt/apache/include/apr.h:149,
                 from
/home/rubin/opt/apache/include/ap_config.h:58,
                 from
/home/rubin/opt/apache/include/httpd.h:72,
                 from
/home/rubin/src/mod_python-3.0.3/src/include/mod_python.h:71,
                 from requestobject.c:64:
/usr/include/sys/feature_tests.h:96:1: warning: this
is the location of the previous definition
requestobject.c: In function `getreq_recmbr_off':
requestobject.c:1055: `LONG_LONG' undeclared (first
use in this function)
requestobject.c:1055: (Each undeclared identifier is
reported only once
requestobject.c:1055: for each function it appears
in.)
requestobject.c:1056: parse error before "l"
requestobject.c:1057: `l' undeclared (first use in
this function)
requestobject.c: At top level:
requestobject.c:1270: warning: initialization from
incompatible pointer type
apxs:Error: Command failed with rc=65536
.
make[1]: *** [mod_python.so] Error 1
make[1]: Leaving directory
`/home/rubin/src/mod_python-3.0.3/src'
make: *** [do_dso] Error 2


__________________________________
Do you Yahoo!?
Yahoo! SiteBuilder - Free, easy-to-use web site design software
http://sitebuilder.yahoo.com
From grisha at modpython.org  Wed Aug  6 12:47:44 2003
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 21:53:44 2004
Subject: [mod_python] build error on solais
In-Reply-To: <20030806161210.74520.qmail@web13904.mail.yahoo.com>
References: <20030806161210.74520.qmail@web13904.mail.yahoo.com>
Message-ID: <20030806124705.P15215@onyx.ispol.com>



http://www.modpython.org/FAQ/faqw.py?req=show&file=faq04.002.htp

HTH,

Grisha

On Wed, 6 Aug 2003, Daniel Rubin wrote:

> Trying to build mod_python 3.0.3 on solaris 2.8. My
> configure command is: ./configure
> --with-apxs=/home/rubin/opt/apache/bin/apxs
> --prefix=/home/rubin
> and that runs fine. Then when I make, I get this error
> during the build:
>
> /home/rubin/opt/apache/build/libtool --silent
> --mode=compile gcc -prefer-pic
> -DAP_HAVE_DESIGNATED_INITIALIZER -DSOLARIS2=8
> -D_POSIX_PTHREAD_SEMANTICS -D_REENTRANT -g -O2
> -pthreads -I/home/rubin/opt/apache/include
> -I/home/rubin/opt/apache/include
> -I/home/rubin/opt/apache/include
> -I/home/rubin/src/mod_python-3.0.3/src/include
> -I/home/rubin/opt/apache/include
> -I/home/rubin/include/python2.3  -c -o
> requestobject.lo requestobject.c && touch
> requestobject.slo
> In file included from
> /home/rubin/include/python2.3/Python.h:8,
>                  from
> /home/rubin/src/mod_python-3.0.3/src/include/mod_python.h:92,
>                  from requestobject.c:64:
> /home/rubin/include/python2.3/pyconfig.h:822:1:
> warning: "_FILE_OFFSET_BITS" redefined
> In file included from
> /home/rubin/lib/gcc-lib/sparc-sun-solaris2.8/3.2.2/include/sys/types.h:28,
>                  from
> /home/rubin/opt/apache/include/apr.h:149,
>                  from
> /home/rubin/opt/apache/include/ap_config.h:58,
>                  from
> /home/rubin/opt/apache/include/httpd.h:72,
>                  from
> /home/rubin/src/mod_python-3.0.3/src/include/mod_python.h:71,
>                  from requestobject.c:64:
> /usr/include/sys/feature_tests.h:96:1: warning: this
> is the location of the previous definition
> requestobject.c: In function `getreq_recmbr_off':
> requestobject.c:1055: `LONG_LONG' undeclared (first
> use in this function)
> requestobject.c:1055: (Each undeclared identifier is
> reported only once
> requestobject.c:1055: for each function it appears
> in.)
> requestobject.c:1056: parse error before "l"
> requestobject.c:1057: `l' undeclared (first use in
> this function)
> requestobject.c: At top level:
> requestobject.c:1270: warning: initialization from
> incompatible pointer type
> apxs:Error: Command failed with rc=65536
> .
> make[1]: *** [mod_python.so] Error 1
> make[1]: Leaving directory
> `/home/rubin/src/mod_python-3.0.3/src'
> make: *** [do_dso] Error 2
>
>
> __________________________________
> Do you Yahoo!?
> Yahoo! SiteBuilder - Free, easy-to-use web site design software
> http://sitebuilder.yahoo.com
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>
From conrad at hep.caltech.edu  Wed Aug  6 22:25:56 2003
From: conrad at hep.caltech.edu (Conrad Steenberg)
Date: Fri Jan  9 21:53:44 2004
Subject: [mod_python] Authentication behaviour
Message-ID: <1060233956.2639.13.camel@192_168_0_100>

Hi

I have an authenhandler that basically ignores authentication headers
for GET requests, but requires them to be present for POST requests.

With Apache 2.0.46 this worked fine with a setup like e.g.
<Directory /opt/midir/>
       SetHandler python-program
       AddHandler python-program .py
       PythonHandler my_handler
       PythonAuthenHandler my_handler
       AuthType Basic
       AuthName "Restricted Area"
</Directory>

In 2.0.47 the authenhandler doesn't get called unless I add
      require valid-user
to the above. But this makes browsers pop up a password dialog for
requests without authentication headers (GET requests in this case).

Is there any way to make the browser not pop up the password dialog, but
still have the authenhandler called? I.e. where does the response get
generated that returns a "authentication required" value to the browser,
if not in the authenhandler?

Any help appreciated!

Conrad

-- 
Conrad Steenberg <conrad@hep.caltech.edu>
-- 

From mike.looijmans at asml.com  Thu Aug  7 07:47:14 2003
From: mike.looijmans at asml.com (Mike Looijmans)
Date: Fri Jan  9 21:53:44 2004
Subject: [mod_python] Authentication behaviour
Message-ID: <01c35ca7$5ad97380$926a1e6e@wsasd464>

I think in this case, you may want to consider the alternative, which is to
just provide a 'regular' request handler, and when authentication is
required but not given, just return a "401 Unauthorized" response with a
WWW-Authenticate header specifying the realm.

That will give the user a password popup and the browser will then retry the
same request. Note that for large POST request, this is wasting a lot of
bandwidth, as the first (and therefore unauthorized) POST request will be
completely rejected! It may be better to direct the user to a GET page first
to authenticate, and only after that page start doing the POST things.

Note that (unless the "Digest" authentication algorithm is used) the "Basic"
HTTP authentication is highly insecure and therefore you should never ever
use unix account data for this. Digest is only supported by IE and probably
the newer Mozilla's (haven't tried those, NS 6 did not support it).

I prefer using session cookies for authentication, since that is (if
implemented properly) more secure and allows the user to log out.

Mike.

-----Original Message-----
From: Conrad Steenberg <conrad@hep.caltech.edu>
To: ModPython mail list <mod_python@modpython.org>
Date: Thursday, August 07, 2003 7:31 AM
Subject: [mod_python] Authentication behaviour


>Hi
>
>I have an authenhandler that basically ignores authentication headers
>for GET requests, but requires them to be present for POST requests.
>
>With Apache 2.0.46 this worked fine with a setup like e.g.
><Directory /opt/midir/>
>       SetHandler python-program
>       AddHandler python-program .py
>       PythonHandler my_handler
>       PythonAuthenHandler my_handler
>       AuthType Basic
>       AuthName "Restricted Area"
></Directory>
>
>In 2.0.47 the authenhandler doesn't get called unless I add
>      require valid-user
>to the above. But this makes browsers pop up a password dialog for
>requests without authentication headers (GET requests in this case).
>
>Is there any way to make the browser not pop up the password dialog, but
>still have the authenhandler called? I.e. where does the response get
>generated that returns a "authentication required" value to the browser,
>if not in the authenhandler?
>
>Any help appreciated!
>
>Conrad
>
>--
>Conrad Steenberg <conrad@hep.caltech.edu>
>--
>
>_______________________________________________
>Mod_python mailing list
>Mod_python@modpython.org
>http://mailman.modpython.org/mailman/listinfo/mod_python
>
>
>
>

From davidf at sjsoft.com  Thu Aug  7 08:21:48 2003
From: davidf at sjsoft.com (David Fraser)
Date: Fri Jan  9 21:53:44 2004
Subject: [mod_python] Authentication behaviour
In-Reply-To: <01c35ca7$5ad97380$926a1e6e@wsasd464>
References: <01c35ca7$5ad97380$926a1e6e@wsasd464>
Message-ID: <3F31EFFC.7090603@sjsoft.com>

Mike Looijmans wrote:

>Note that (unless the "Digest" authentication algorithm is used) the "Basic"
>HTTP authentication is highly insecure and therefore you should never ever
>use unix account data for this. Digest is only supported by IE and probably
>the newer Mozilla's (haven't tried those, NS 6 did not support it).
>  
>
Mozilla supported Digest authentication since December 2001 (see 
http://bugzilla.mozilla.org/show_bug.cgi?id=15860)
Netscape 6 was released in December 2000 so doesn't include it; Mozilla 
0.9.7 or higher and Netscape 7.0 or higher should include it.
However, note this article about incompatibilities with at least some 
versions of IE and Apache:
http://www.eweek.com/print_article/0,3668,a%3D24177,00.asp
I think I've seen problems from this, so I would concur with the advice 
about using session cookies if possible.
David

>I prefer using session cookies for authentication, since that is (if
>implemented properly) more secure and allows the user to log out.
>
>Mike.
>  
>


From etienne at cs.vu.nl  Thu Aug  7 09:44:54 2003
From: etienne at cs.vu.nl (Etienne Posthumus)
Date: Fri Jan  9 21:53:44 2004
Subject: [mod_python] Authentication behaviour
In-Reply-To: <3F31EFFC.7090603@sjsoft.com>
References: <01c35ca7$5ad97380$926a1e6e@wsasd464>
	<3F31EFFC.7090603@sjsoft.com>
Message-ID: <Pine.GSO.4.53.0308070939460.10965@flits.cs.vu.nl>

On Thu, 7 Aug 2003, David Fraser wrote:
> However, note this article about incompatibilities with at least some
> versions of IE and Apache:
> http://www.eweek.com/print_article/0,3668,a%3D24177,00.asp
> I think I've seen problems from this, so I would concur with the advice
> about using session cookies if possible.

It is IMHO a pity that the 'proper' authentication methods for HTTP don't
really work broadly enough. In my experience Digest works OK'ish for
simple URIs, but as soon as you start using parameters in your URI MS IE
(and Mac OS X Safari) fails as it passes throught the realms differently
to what Apache expects.

Bugger. :-( So at the moment I use SSL + Basic with a self-signed
certificate. Not ideal but the only pragmatic choice.

Etienne Posthumus
Programmer, IIDS - Intelligent Interactive Distributed Systems
http://www.iids.org/
Vrije Universiteit Amsterdam
----------------------------
From vlindberg at verio.net  Thu Aug  7 09:04:51 2003
From: vlindberg at verio.net (VanL)
Date: Fri Jan  9 21:53:44 2004
Subject: [mod_python] Persistent db connections
Message-ID: <3F326A93.5060505@verio.net>

Hello,

I am using quixote+mod_python as a front-end for a database app.  Based 
on the example in the faq, it looks like I could just make the 
connection in a separate module and mod_python would automatically make 
the database connections persist. 

For example,

if I have code that is run by mod_python

=== persistdb.py ==================
import psycopg as db
def connect():
    global connection
    try:
        conn = connection
        return conn
    except NameError:
        connection = db.connect(connection_string)
    return connection

=== application.py ==================
import persistdb
conn = persistdb.connect()
# Use conn here

 From the FAQ, it appears that the db connection "connection" would 
persist transparently.  Is this a correct understanding?
If that is true, would there be any benefit to using dbpool, as opposed 
to the code posted above?

Thanks,

VanL


From conrad at hep.caltech.edu  Thu Aug  7 08:30:12 2003
From: conrad at hep.caltech.edu (Conrad Steenberg)
Date: Fri Jan  9 21:53:44 2004
Subject: [mod_python] Authentication behaviour
In-Reply-To: <01c35ca7$5ad97380$926a1e6e@wsasd464>
References: <01c35ca7$5ad97380$926a1e6e@wsasd464>
Message-ID: <1060270212.3569.21.camel@192_168_0_100>

On Wed, 2003-08-06 at 22:47, Mike Looijmans wrote:
> I think in this case, you may want to consider the alternative, which is to
> just provide a 'regular' request handler, and when authentication is
> required but not given, just return a "401 Unauthorized" response with a
> WWW-Authenticate header specifying the realm.

> That will give the user a password popup and the browser will then retry the
> same request. Note that for large POST request, this is wasting a lot of
> bandwidth, as the first (and therefore unauthorized) POST request will be
> completely rejected! It may be better to direct the user to a GET page first
> to authenticate, and only after that page start doing the POST things.

Yes, eliminating this roundtrip is exactly what I'm trying to do. The
problem is that Apache itself sends the 401 reply at some stage without
bothering to consult my authenhandler ;-)

Thanks for your reply!
Conrad
-- 

From conrad at hep.caltech.edu  Thu Aug  7 08:36:30 2003
From: conrad at hep.caltech.edu (Conrad Steenberg)
Date: Fri Jan  9 21:53:44 2004
Subject: [mod_python] Persistent db connections
In-Reply-To: <3F326A93.5060505@verio.net>
References: <3F326A93.5060505@verio.net>
Message-ID: <1060270589.3569.28.camel@192_168_0_100>

Hi Van

Doing it the way you describe would work, but depending on the DB and
Apache settings, you might have more Apache processes spawned than the
number of connections your DB can handle.

Using dbpool would make your web app fail more gracefully, i.e. get
slower with more connections, instead of giving some users an error that
it was unable to connect to the DB, as you often see on overloaded
discussion sites.

Cheers

Conrad

On Thu, 2003-08-07 at 08:04, VanL wrote:
> Hello,
> 
> I am using quixote+mod_python as a front-end for a database app.  Based 
> on the example in the faq, it looks like I could just make the 
> connection in a separate module and mod_python would automatically make 
> the database connections persist. 
> 
> For example,
> 
> if I have code that is run by mod_python
> 
> === persistdb.py ==================
> import psycopg as db
> def connect():
>     global connection
>     try:
>         conn = connection
>         return conn
>     except NameError:
>         connection = db.connect(connection_string)
>     return connection
> 
> === application.py ==================
> import persistdb
> conn = persistdb.connect()
> # Use conn here
> 
>  From the FAQ, it appears that the db connection "connection" would 
> persist transparently.  Is this a correct understanding?
> If that is true, would there be any benefit to using dbpool, as opposed 
> to the code posted above?
> 
> Thanks,
> 
> VanL
> 
> 
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
-- 

From vlindberg at verio.net  Thu Aug  7 11:17:25 2003
From: vlindberg at verio.net (VanL)
Date: Fri Jan  9 21:53:44 2004
Subject: [mod_python] Persistent db connections
In-Reply-To: <1060270589.3569.28.camel@192_168_0_100>
References: <3F326A93.5060505@verio.net>
	<1060270589.3569.28.camel@192_168_0_100>
Message-ID: <3F3289A5.8090604@verio.net>

Conrad Steenberg wrote:

>Using dbpool would make your web app fail more gracefully, i.e. get
>slower with more connections, instead of giving some users an error that
>it was unable to connect to the DB, as you often see on overloaded
>discussion sites.
>
Is this correct?  I thought that even dbpool would not pool resources 
between different apache processes.  Thus having a 
one-connection-per-process (or two, or three, but some fixed number) 
rule along with an apache maxclients setting would tend to keep the 
database connections within an acceptable range.

If the max number of clients could be known, regardless of the number of 
apache child processes, that would be great.  However, that doesn't 
match my understanding of how it works.

VanL

From conrad at hep.caltech.edu  Thu Aug  7 10:51:01 2003
From: conrad at hep.caltech.edu (Conrad Steenberg)
Date: Fri Jan  9 21:53:44 2004
Subject: [mod_python] Persistent db connections
In-Reply-To: <3F3289A5.8090604@verio.net>
References: <3F326A93.5060505@verio.net><3F3289A5.8090604@verio.net>
Message-ID: <1060278661.5313.28.camel@heppc22>

Hi Van

You're right, I confused dbpool (python) with dbpool (java) which does
what I described.

If you can provide a DB connection limit >= the Apache connection limit
you should probably be fine. 

>From python the SqlRelay also does what I described (allow many more
connections to the DB than the DB connection limit). See
http://sqlrelay.sourceforge.net/ and esp.
http://sqlrelay.sourceforge.net/sqlrelay/faq.html#howwork

Cheers

Conrad

On Thu, 2003-08-07 at 10:17, VanL wrote:
> Conrad Steenberg wrote:
> 
> >Using dbpool would make your web app fail more gracefully, i.e. get
> >slower with more connections, instead of giving some users an error that
> >it was unable to connect to the DB, as you often see on overloaded
> >discussion sites.
> >
> Is this correct?  I thought that even dbpool would not pool resources 
> between different apache processes.  Thus having a 
> one-connection-per-process (or two, or three, but some fixed number) 
> rule along with an apache maxclients setting would tend to keep the 
> database connections within an acceptable range.
> 
> If the max number of clients could be known, regardless of the number of 
> apache child processes, that would be great.  However, that doesn't 
> match my understanding of how it works.
> 
> VanL
-- 
Conrad Steenberg <conrad@hep.caltech.edu>

From fgeter at itc.nrcs.usda.gov  Thu Aug  7 16:30:17 2003
From: fgeter at itc.nrcs.usda.gov (Geter, Frank)
Date: Fri Jan  9 21:53:45 2004
Subject: [mod_python] Help with mod_python install
Message-ID: <768D32B675BED311968F009027DE9E3001D01043@rocky.itc.nrcs.usda.gov>

I am having trouble getting python scripts to run after installing
mod_python from a Mandrake 9.1 rpm.

I am running:
Mandrake 9.1
Apache 2.044 
mod_python 3.0.1 installed from
apache2-mod_python-2.0.44_3.0.1-1mdk.i586.rpm

I no NOTHING about apache and that is probably my problem.  I have edited
httpd2.conf file to include the Directory tag as per instructions.  I have
made the python script executable (755) mode.  Apache is running OK.

Need help!

Frank Geter
2150 Centre Avenue, Bldg. A
Fort Collins, CO 80526-1891
Ph# (970) 295-5536
Fax# (970) 295-5414


From mike.looijmans at asml.com  Fri Aug  8 07:25:15 2003
From: mike.looijmans at asml.com (Mike Looijmans)
Date: Fri Jan  9 21:53:45 2004
Subject: [mod_python] Persistent db connections
Message-ID: <01c35d6d$727b2f80$926a1e6e@wsasd464>

More importantly, make sure that your DB engine supports multiple threads
over a single connection.

If you're using a threading MPM, there will be multiple clients sharing the
same connection.

For MySQL for example this will fail if you also use scrolling cursors,
since you can have only one such cursor per connection.

What I did was to use a threading-only MPM and have each request grab a DB
connection from a pool (and remove it), and when done, it returns the DB
object to the pool. If the pool is empty, a new connection object is created
(so the pool grows automatically to meet demand).
This allows many threads to use the same connection objects, but no threads
will ever share the same object.

If the number of connections is limited, you could create a fixed number of
objects and do a lock-and-wait until one is available when the pool is
drained.

Mike.

-----Original Message-----
From: VanL <vlindberg@verio.net>
To: Conrad Steenberg <conrad@hep.caltech.edu>
Cc: ModPython mail list <mod_python@modpython.org>
Date: Thursday, August 07, 2003 7:22 PM
Subject: Re: [mod_python] Persistent db connections


>Conrad Steenberg wrote:
>
>>Using dbpool would make your web app fail more gracefully, i.e. get
>>slower with more connections, instead of giving some users an error that
>>it was unable to connect to the DB, as you often see on overloaded
>>discussion sites.
>>
>Is this correct?  I thought that even dbpool would not pool resources
>between different apache processes.  Thus having a
>one-connection-per-process (or two, or three, but some fixed number)
>rule along with an apache maxclients setting would tend to keep the
>database connections within an acceptable range.
>
>If the max number of clients could be known, regardless of the number of
>apache child processes, that would be great.  However, that doesn't
>match my understanding of how it works.


From DFarrell at ScholasticLibrary.com  Fri Aug  8 10:21:23 2003
From: DFarrell at ScholasticLibrary.com (Farrell, Doug)
Date: Fri Jan  9 21:53:45 2004
Subject: [mod_python] Problem understanding PythonAccessHandler
Message-ID: <582005C4B6AE4B4CAD684A93D283A16F01FFBE12@corpex01.corp.scholasticinc.local>

Hi all,

I'm trying to make use of mod_python to build a content server. This server
gets it's content from one of our product servers and strips out irrelevant
stuff and delivers that. The product server is authenticated and we use a
mod_perl script to do that part. I'm not at all familiar with mod_perl or
Perl for that matter, but would like to do the authentication/access using
mod_python. However, I'm having problems setting up httpd.conf to do the
right thing. Here is a section of http.conf from the product server that
uses mod_perl:

	#authenticate the whole product
	<Location /gme-ol/*.html>
       		PerlAccessHandler Apache::grolier::grolier_auth
	</Location>

	#authenticate the applications and log them as well.
	<Location /cgi-bin>
       		PerlAccessHandler Apache::grolier::grolier_auth
	</Location>

Here is a section of my content server http.conf:

	ScriptAlias /cs /data/cs/handlers

	<Location /cs>
		SetHandler python-program
		PythonHandler mod_python.publisher
		PythonDebug On
	</Location>

	<Directory /cs/gme/handler>
		AddHandler python-program .py
		PythonAccessHandler gme_auth
	</Directory>

My script, gme_auth.py just returns apache.OK for now till I figure out how
to authenticate. But it looks like it's never being called. 

Can anyone give me some help about how to set this up correctly?

Thanks in advance for your help,
Doug Farrell
From rey4 at columbia.edu  Sat Aug  9 11:01:21 2003
From: rey4 at columbia.edu (Russell Yanofsky)
Date: Fri Jan  9 21:53:45 2004
Subject: [mod_python] script_name bug?
Message-ID: <bh32ej$m9l$1@main.gmane.org>

I've noticed that req.subprocess_env['SCRIPT_NAME'] seems to have the wrong
value whenever the requested URL ends in a forward slash. This happens with
mod_python 3.0.3 and apache 2.0.47. Here are some examples:

  Requested URL: /mptest/mptest.py/
    Actual SCRIPT_NAME = /mptest/mptest.py/
    Expected SCRIPT_NAME = /mptest/mptest.py
    PATH_INFO = /

  Requested URL: /mptest/mptest.py/abc/
    Actual SCRIPT_NAME = /mptest/mptest.py/abc
    Expected SCRIPT_NAME = /mptest/mptest.py
    PATH_INFO = /abc/

  Requested URL: /mptest/mptest.py/abc/123/
    Actual SCRIPT_NAME = /mptest/mptest.py/abc/123
    Expected SCRIPT_NAME = /mptest/mptest.py
    PATH_INFO = /abc/123/

When the request doesn't end with a forward slash there's no problem:

  Requested URL: /mptest/mptest.py
    Actual SCRIPT_NAME = /mptest/mptest.py
    Expected SCRIPT_NAME = /mptest/mptest.py
    PATH_INFO =

  Requested URL: /mptest/mptest.py/abc
    Actual SCRIPT_NAME = /mptest/mptest.py
    Expected SCRIPT_NAME = /mptest/mptest.py
    PATH_INFO = /abc

  Requested URL: /mptest/mptest.py/abc/123
    Actual SCRIPT_NAME = /mptest/mptest.py
    Expected SCRIPT_NAME = /mptest/mptest.py
    PATH_INFO = /abc/123

Here's the code I used to produce the above output:

-- begin .htaccess listing --
AddHandler python-program .py
PythonHandler mptest
PythonDebug On
-- end .htaccess listing -- 

-- begin mptest.py listing --
from mod_python import apache

def handler(req):
  req.content_type = 'text/plain'
  env = req.subprocess_env
  req.write('Requested URL: %s\n' % env['REQUEST_URI'])
  req.write('  Actual SCRIPT_NAME = %s\n' % env['SCRIPT_NAME'])
  fixenv(env)
  req.write('  Expected SCRIPT_NAME = %s\n' % env['SCRIPT_NAME'])
  req.write('  PATH_INFO = %s\n' % env.get('PATH_INFO', ''))
  return apache.OK

# This is only a partial fix, does not work in the presence
# of double slashes in the PATH_INFO segment
def fixenv(env):
  path_info = env.get('PATH_INFO', '')
  if path_info and path_info[-1] == '/':
    script_name = env['SCRIPT_NAME']
    path_len = len(path_info) - 1
    if path_len:
      assert script_name[-path_len:] == path_info[:-1]
      env['SCRIPT_NAME'] = script_name[:-path_len]
    else:
      assert script_name[-1] == '/'
      env['SCRIPT_NAME'] = script_name[:-1]
-- end mptest.py listing --

This behavior only seems to occur in mod_python. SCRIPT_NAME does seem to
have the right value in CGI scripts.

- Russ


From rey4 at columbia.edu  Sat Aug  9 11:16:48 2003
From: rey4 at columbia.edu (Russell Yanofsky)
Date: Fri Jan  9 21:53:45 2004
Subject: [mod_python] script_name bug?
Message-ID: <00b001c35e89$411dd330$daf627a0@turtle>

I've noticed that req.subprocess_env['SCRIPT_NAME'] seems to have the wrong
value whenever the requested URL ends in a forward slash. This happens with
mod_python 3.0.3 and apache 2.0.47. Here are some examples:

  Requested URL: /mptest/mptest.py/
    Actual SCRIPT_NAME = /mptest/mptest.py/
    Expected SCRIPT_NAME = /mptest/mptest.py
    PATH_INFO = /

  Requested URL: /mptest/mptest.py/abc/
    Actual SCRIPT_NAME = /mptest/mptest.py/abc
    Expected SCRIPT_NAME = /mptest/mptest.py
    PATH_INFO = /abc/

  Requested URL: /mptest/mptest.py/abc/123/
    Actual SCRIPT_NAME = /mptest/mptest.py/abc/123
    Expected SCRIPT_NAME = /mptest/mptest.py
    PATH_INFO = /abc/123/

When the request doesn't end with a forward slash there's no problem:

  Requested URL: /mptest/mptest.py
    Actual SCRIPT_NAME = /mptest/mptest.py
    Expected SCRIPT_NAME = /mptest/mptest.py
    PATH_INFO =

  Requested URL: /mptest/mptest.py/abc
    Actual SCRIPT_NAME = /mptest/mptest.py
    Expected SCRIPT_NAME = /mptest/mptest.py
    PATH_INFO = /abc

  Requested URL: /mptest/mptest.py/abc/123
    Actual SCRIPT_NAME = /mptest/mptest.py
    Expected SCRIPT_NAME = /mptest/mptest.py
    PATH_INFO = /abc/123

Here's the code I used to produce the above output:

-- begin .htaccess listing --
AddHandler python-program .py
PythonHandler mptest
PythonDebug On
-- end .htaccess listing -- 

-- begin mptest.py listing --
from mod_python import apache

def handler(req):
  req.content_type = 'text/plain'
  env = req.subprocess_env
  req.write('Requested URL: %s\n' % env['REQUEST_URI'])
  req.write('  Actual SCRIPT_NAME = %s\n' % env['SCRIPT_NAME'])
  fixenv(env)
  req.write('  Expected SCRIPT_NAME = %s\n' % env['SCRIPT_NAME'])
  req.write('  PATH_INFO = %s\n' % env.get('PATH_INFO', ''))
  return apache.OK

# This is only a partial fix, does not work in the presence
# of double slashes in the PATH_INFO segment
def fixenv(env):
  path_info = env.get('PATH_INFO', '')
  if path_info and path_info[-1] == '/':
    script_name = env['SCRIPT_NAME']
    path_len = len(path_info) - 1
    if path_len:
      assert script_name[-path_len:] == path_info[:-1]
      env['SCRIPT_NAME'] = script_name[:-path_len]
    else:
      assert script_name[-1] == '/'
      env['SCRIPT_NAME'] = script_name[:-1]
-- end mptest.py listing --

This behavior only seems to occur in mod_python. SCRIPT_NAME does seem to
have the right value in CGI scripts.

- Russ

From grisha at modpython.org  Sat Aug  9 13:13:09 2003
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 21:53:45 2004
Subject: [mod_python] script_name bug?
In-Reply-To: <bh32ej$m9l$1@main.gmane.org>
References: <bh32ej$m9l$1@main.gmane.org>
Message-ID: <20030809123926.T83158@onyx.ispol.com>


Russel -

Since mod_python isn't a CGI environment (and doesn't care to be one
either), the definition of SCRIPT_NAME is rather blurry.

In CGI it is meant to refer to the script which is executed as a separate
process - in mod_python there is no separate process, and the file
containing the code isn't located by the web server, but rather follows
the Python sys.path search rules.

I don't think it would be right to tinker with what req.subprocess_env
contains - it should return whatever apache put there, uncensored, so to
that degree it's not a bug as far as I am concerned.

P.S. If you look at build_cgi_env() in apache.py, it seems to adress this
issue.

Grisha

On Sat, 9 Aug 2003, Russell Yanofsky wrote:

> I've noticed that req.subprocess_env['SCRIPT_NAME'] seems to have the wrong
> value whenever the requested URL ends in a forward slash. This happens with
> mod_python 3.0.3 and apache 2.0.47. Here are some examples:
>
>   Requested URL: /mptest/mptest.py/
>     Actual SCRIPT_NAME = /mptest/mptest.py/
>     Expected SCRIPT_NAME = /mptest/mptest.py
>     PATH_INFO = /
>
>   Requested URL: /mptest/mptest.py/abc/
>     Actual SCRIPT_NAME = /mptest/mptest.py/abc
>     Expected SCRIPT_NAME = /mptest/mptest.py
>     PATH_INFO = /abc/
>
>   Requested URL: /mptest/mptest.py/abc/123/
>     Actual SCRIPT_NAME = /mptest/mptest.py/abc/123
>     Expected SCRIPT_NAME = /mptest/mptest.py
>     PATH_INFO = /abc/123/
>
> When the request doesn't end with a forward slash there's no problem:
>
>   Requested URL: /mptest/mptest.py
>     Actual SCRIPT_NAME = /mptest/mptest.py
>     Expected SCRIPT_NAME = /mptest/mptest.py
>     PATH_INFO =
>
>   Requested URL: /mptest/mptest.py/abc
>     Actual SCRIPT_NAME = /mptest/mptest.py
>     Expected SCRIPT_NAME = /mptest/mptest.py
>     PATH_INFO = /abc
>
>   Requested URL: /mptest/mptest.py/abc/123
>     Actual SCRIPT_NAME = /mptest/mptest.py
>     Expected SCRIPT_NAME = /mptest/mptest.py
>     PATH_INFO = /abc/123
>
> Here's the code I used to produce the above output:
>
> -- begin .htaccess listing --
> AddHandler python-program .py
> PythonHandler mptest
> PythonDebug On
> -- end .htaccess listing --
>
> -- begin mptest.py listing --
> from mod_python import apache
>
> def handler(req):
>   req.content_type = 'text/plain'
>   env = req.subprocess_env
>   req.write('Requested URL: %s\n' % env['REQUEST_URI'])
>   req.write('  Actual SCRIPT_NAME = %s\n' % env['SCRIPT_NAME'])
>   fixenv(env)
>   req.write('  Expected SCRIPT_NAME = %s\n' % env['SCRIPT_NAME'])
>   req.write('  PATH_INFO = %s\n' % env.get('PATH_INFO', ''))
>   return apache.OK
>
> # This is only a partial fix, does not work in the presence
> # of double slashes in the PATH_INFO segment
> def fixenv(env):
>   path_info = env.get('PATH_INFO', '')
>   if path_info and path_info[-1] == '/':
>     script_name = env['SCRIPT_NAME']
>     path_len = len(path_info) - 1
>     if path_len:
>       assert script_name[-path_len:] == path_info[:-1]
>       env['SCRIPT_NAME'] = script_name[:-path_len]
>     else:
>       assert script_name[-1] == '/'
>       env['SCRIPT_NAME'] = script_name[:-1]
> -- end mptest.py listing --
>
> This behavior only seems to occur in mod_python. SCRIPT_NAME does seem to
> have the right value in CGI scripts.
>
> - Russ
>
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>
From damon at asianreflection.com  Sun Aug 10 15:05:31 2003
From: damon at asianreflection.com (Damon Lynch)
Date: Fri Jan  9 21:53:45 2004
Subject: [mod_python] Cannot run test script: (Re)importing module 'mptest'
Message-ID: <1060484731.2960.94.camel@damon.asianreflection.com>

Hi,

There is an example test script in:

http://www.modpython.org/live/current/doc-html/inst-testing.html

I cannot get the example test script to run: the "Hello World" is being
dumped to the browser incorrectly - the browser prompts to save it,
instead of displaying it.  I've checked and rechecked (and rechecked
again!!) and I believe I've followed the instructions as best I can.

I'm running (on Mandrake 9.1):

apache2-2.0.47-1.1mdk
apache2-mod_python-2.0.47_3.0.3-4mdk
python-2.2.2-6mdk

httpd2.conf contains:

LoadModule python_module                 extramodules/mod_python.so

commonhttpd.conf contains:

<Directory "/var/www/html/test/">
  AddHandler python-program .py
  PythonHandler mptest
  PythonDebug On
</Directory>

the apache error log shows:

[notice] mod_python: (Re)importing module 'mptest'

the URL I'm using is:
http://myserver/test/mptest

Any help is much appreciated!

Thanks
Damon

From rey4 at columbia.edu  Sat Aug  9 23:31:56 2003
From: rey4 at columbia.edu (Russell Yanofsky)
Date: Fri Jan  9 21:53:45 2004
Subject: [mod_python] Re: script_name bug?
References: <bh32ej$m9l$1@main.gmane.org>
	<20030809123926.T83158@onyx.ispol.com>
Message-ID: <bh4ebb$qlq$1@sea.gmane.org>

Gregory (Grisha) Trubetskoy wrote:
> Russel -
>
> Since mod_python isn't a CGI environment (and doesn't care to be one
> either), the definition of SCRIPT_NAME is rather blurry.

It might be blurry when a directory handler is used, but it's not at all
blurry in
this case, where mod_python is acting as a handler for requests for
.py files. SCRIPT_NAME should simply point to the .py file that has
been requested.

> In CGI it is meant to refer to the script which is executed as a
> separate process - in mod_python there is no separate process, and
> the file containing the code isn't located by the web server, but
> rather follows the Python sys.path search rules.

The CGI specification may define SCRIPT_NAME in terms of processes and
script files, but the SCRIPT_NAME is not just used for CGI. It's used in PHP
and ASP and other web interfaces, and is also useful in mod_python when
mod_python doesn't mangle it.

> I don't think it would be right to tinker with what req.subprocess_env
> contains - it should return whatever apache put there, uncensored, so
> to that degree it's not a bug as far as I am concerned.

But, AFAICT, it is tinkering with the value. Under the apache CGI
environment, the SCRIPT_NAME value is just the portion of the URL pointing
at the script being handled, but in mod_python when the request ends in a
slash, the value has extra stuff appended. So mod_python must be doing
something that mod_cgi is not.

> P.S. If you look at build_cgi_env() in apache.py, it seems to adress
> this issue.

That code does sort of address this issue, but in an indirect way. Instead
of using the mangled SCRIPT_NAME value in subprocess_env, it recomputes it
using req.uri and req.path_info. This is similar to the workaround I used in
my last posting, and it also will fail in the presence of double slashes in
PATH_INFO. It would be better to fix this bug instead of using these
unreliable workarounds.

- Russ


From greenbeard400 at yahoo.com  Sun Aug 10 12:40:33 2003
From: greenbeard400 at yahoo.com (Greenbeard)
Date: Fri Jan  9 21:53:45 2004
Subject: [mod_python] publisher handler  and form data 
Message-ID: <20030810194033.35760.qmail@web21301.mail.yahoo.com>

I am having trouble getting some info from the
req.form variable. 

I have a form with <input> tags like
<input type="text" name="ID" value="" size="40"
maxlength="255">


now I can get the field name and the value easily 
using something like :

    for field in form.keys():    
            value = form.__getitem__(field)

etc
   

but I can not seem to get the type or size or any
other input tag variables. To me it looks like this is
not supported by mod_python or am I just not going
about it correctly?  



Thanks,

gb400


__________________________________
Do you Yahoo!?
Yahoo! SiteBuilder - Free, easy-to-use web site design software
http://sitebuilder.yahoo.com
From rey4 at columbia.edu  Sun Aug 10 19:02:13 2003
From: rey4 at columbia.edu (Russell Yanofsky)
Date: Fri Jan  9 21:53:45 2004
Subject: [mod_python] Re: publisher handler  and form data
References: <20030810194033.35760.qmail@web21301.mail.yahoo.com>
Message-ID: <bh6itj$co6$1@sea.gmane.org>

Greenbeard wrote:
> I am having trouble getting some info from the
> req.form variable.
>
> I have a form with <input> tags like
> <input type="text" name="ID" value="" size="40"
> maxlength="255">
>
>
> now I can get the field name and the value easily
> using something like :
>
>     for field in form.keys():
>             value = form.__getitem__(field)
>
> etc
>
>
> but I can not seem to get the type or size or any
> other input tag variables. To me it looks like this is
> not supported by mod_python or am I just not going
> about it correctly?

You can't read those values with mod_python (or anything else that runs at
the server) because the browser does not send them. The only thing the
browser sends to the server is a list of (name, value) pairs

- Russ


From rey4 at columbia.edu  Sun Aug 10 19:07:10 2003
From: rey4 at columbia.edu (Russell Yanofsky)
Date: Fri Jan  9 21:53:45 2004
Subject: [mod_python] 
	Re: Cannot run test script: (Re)importing module 'mptest'
References: <1060484731.2960.94.camel@damon.asianreflection.com>
Message-ID: <bh6j6s$d1t$1@sea.gmane.org>

Damon Lynch wrote:
> Hi,
> 
> There is an example test script in:
> 
> http://www.modpython.org/live/current/doc-html/inst-testing.html
> 
> I cannot get the example test script to run
> ...
> the URL I'm using is:
> http://myserver/test/mptest
> 

Should that be http://myserver/test/mptest.py ?

- Russ

From rey4 at columbia.edu  Sun Aug 10 19:10:31 2003
From: rey4 at columbia.edu (Russell Yanofsky)
Date: Fri Jan  9 21:53:45 2004
Subject: [mod_python] Re: Help with mod_python install
References: <768D32B675BED311968F009027DE9E3001D01043@rocky.itc.nrcs.usda.gov>
Message-ID: <bh6jd5$dc8$1@sea.gmane.org>

Geter, Frank wrote:
> I am having trouble getting python scripts to run after installing
> mod_python from a Mandrake 9.1 rpm.

So what happens when you try to run them? Is there an error sent to the
browser or the apache error log?

- Russ


From grisha at modpython.org  Sun Aug 10 20:21:59 2003
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 21:53:45 2004
Subject: [mod_python] Re: script_name bug?
In-Reply-To: <bh4ebb$qlq$1@sea.gmane.org>
References: <bh32ej$m9l$1@main.gmane.org>
	<20030809123926.T83158@onyx.ispol.com> <bh4ebb$qlq$1@sea.gmane.org>
Message-ID: <20030810200027.R92644@onyx.ispol.com>


On Sat, 9 Aug 2003, Russell Yanofsky wrote:

> Gregory (Grisha) Trubetskoy wrote:
> > Russel -
> >
> > Since mod_python isn't a CGI environment (and doesn't care to be one
> > either), the definition of SCRIPT_NAME is rather blurry.
>
> It might be blurry when a directory handler is used, but it's not at all
> blurry in this case, where mod_python is acting as a handler for
> requests for .py files. SCRIPT_NAME should simply point to the .py file
> that has been requested.

Well, the file requested doesn't have anything to do with what
PythonHandler specifies, e.g. in your example it will respond just the
same with requested url of "/mptest/blahblah.py/abc/123" instead of
"/mptest/mptest.py/abc/123". The question then becomes should SCRIPT_NAME
be "/mptest/mptest.py" or "/mptest/blahblah.py"?

> > I don't think it would be right to tinker with what req.subprocess_env
> > contains - it should return whatever apache put there, uncensored, so
> > to that degree it's not a bug as far as I am concerned.
>
> But, AFAICT, it is tinkering with the value.

It sort of does. There is a place in requestobject.c where it removes the
trailing slash for something, then puts it back, and now I don't remember
why it does it, but it was some rather esoteric condition that caused
apache to infinite-recursively call some function... Since I don't
remember what the reason was, I was always hesitant to remove that bit of
code. It was put in years ago back in the apache 1.2 days, so it might be
safe to remove in 2.0... I guess we can try it at least.

Grisha
From damon at asianreflection.com  Mon Aug 11 19:03:21 2003
From: damon at asianreflection.com (Damon Lynch)
Date: Fri Jan  9 21:53:45 2004
Subject: [mod_python]  Re: Cannot run test script: (Re)importing module
	'mptest'
In-Reply-To: <bh6j6s$d1t$1@sea.gmane.org>
References: <1060484731.2960.94.camel@damon.asianreflection.com>
	 <bh6j6s$d1t$1@sea.gmane.org>
Message-ID: <1060585401.8445.5.camel@damon.asianreflection.com>

On Mon, 2003-08-11 at 11:07, Russell Yanofsky wrote:
> Damon Lynch wrote:
> > Hi,
> > 
> > There is an example test script in:
> > 
> > http://www.modpython.org/live/current/doc-html/inst-testing.html
> > 
> > I cannot get the example test script to run
> > ...
> > the URL I'm using is:
> > http://myserver/test/mptest
> > 
> 
> Should that be http://myserver/test/mptest.py ?
> 

Hi Russ,

That appears to make no difference.  When I inspect the headers I'm
getting the output as application/x-python instead of text/html:

HTTP/1.1 200 OKCRLF
Date: Mon, 11 Aug 2003 06:56:49 GMTCRLF
Server: Apache-AdvancedExtranetServer/2.0.47 (Mandrake Linux/1.1mdk) mod_python/3.0.3 Python/2.2.2 mod_ssl/2.0.47 OpenSSL/0.9.7aCRLF
Content-Location: mptest.pyCRLF
Vary: negotiate,acceptCRLF
TCN: choiceCRLF
Set-Cookie: Apache=207.200.81.211.1060585009151968; path=/; max-age=1209600CRLF
Connection: closeCRLF
Content-Type: application/x-pythonCRLF
Expires: Mon, 11 Aug 2003 06:56:49 GMTCRLF
CRLF
Hello World!


I'm bamboozled at this point!

Damon

From davidf at sjsoft.com  Mon Aug 11 09:23:51 2003
From: davidf at sjsoft.com (David Fraser)
Date: Fri Jan  9 21:53:45 2004
Subject: [mod_python]  Re: Cannot run test script: (Re)importing module
 'mptest'
In-Reply-To: <1060585401.8445.5.camel@damon.asianreflection.com>
References: <1060484731.2960.94.camel@damon.asianreflection.com>
	<bh6j6s$d1t$1@sea.gmane.org>
	<1060585401.8445.5.camel@damon.asianreflection.com>
Message-ID: <3F374487.7050906@sjsoft.com>

Damon Lynch wrote:

>On Mon, 2003-08-11 at 11:07, Russell Yanofsky wrote:
>  
>
>>Damon Lynch wrote:
>>    
>>
>>>Hi,
>>>
>>>There is an example test script in:
>>>
>>>http://www.modpython.org/live/current/doc-html/inst-testing.html
>>>
>>>I cannot get the example test script to run
>>>...
>>>the URL I'm using is:
>>>http://myserver/test/mptest
>>>
>>>      
>>>
>>Should that be http://myserver/test/mptest.py ?
>>
>>    
>>
>
>Hi Russ,
>
>That appears to make no difference.  When I inspect the headers I'm
>getting the output as application/x-python instead of text/html:
>
>HTTP/1.1 200 OKCRLF
>Date: Mon, 11 Aug 2003 06:56:49 GMTCRLF
>Server: Apache-AdvancedExtranetServer/2.0.47 (Mandrake Linux/1.1mdk) mod_python/3.0.3 Python/2.2.2 mod_ssl/2.0.47 OpenSSL/0.9.7aCRLF
>Content-Location: mptest.pyCRLF
>Vary: negotiate,acceptCRLF
>TCN: choiceCRLF
>Set-Cookie: Apache=207.200.81.211.1060585009151968; path=/; max-age=1209600CRLF
>Connection: closeCRLF
>Content-Type: application/x-pythonCRLF
>Expires: Mon, 11 Aug 2003 06:56:49 GMTCRLF
>CRLF
>Hello World!
>
>
>I'm bamboozled at this point!
>
>Damon
>  
>
So the content type is being set to application/x-python ... it seems 
likely to me that somewhere in your Apache configuration (mime.types?) 
you've got it set to return this mime type ... do a search for 
application/x-python in your Apache conf directory files and see what 
you find...

David

From rey4 at columbia.edu  Mon Aug 11 14:05:22 2003
From: rey4 at columbia.edu (Russell Yanofsky)
Date: Fri Jan  9 21:53:45 2004
Subject: [mod_python] Re: Re: script_name bug?
References: 
	<bh32ej$m9l$1@main.gmane.org><20030809123926.T83158@onyx.ispol.com>
	<bh4ebb$qlq$1@sea.gmane.org> <20030810200027.R92644@onyx.ispol.com>
Message-ID: <bh8lt0$hkm$1@sea.gmane.org>

Gregory (Grisha) Trubetskoy wrote:
> On Sat, 9 Aug 2003, Russell Yanofsky wrote:
>
>> Gregory (Grisha) Trubetskoy wrote:
>>> Russel -
>>>
>>> Since mod_python isn't a CGI environment (and doesn't care to be one
>>> either), the definition of SCRIPT_NAME is rather blurry.
>>
>> It might be blurry when a directory handler is used, but it's not at
>> all blurry in this case, where mod_python is acting as a handler for
>> requests for .py files. SCRIPT_NAME should simply point to the .py
>> file that has been requested.
>
> Well, the file requested doesn't have anything to do with what
> PythonHandler specifies, e.g. in your example it will respond just the
> same with requested url of "/mptest/blahblah.py/abc/123" instead of
> "/mptest/mptest.py/abc/123". The question then becomes should
> SCRIPT_NAME be "/mptest/mptest.py" or "/mptest/blahblah.py"?

It should be /mptest/blahblah.py, because that's the .py file that the
client requested. In general, it makes sense for SCRIPT_NAME to be a URL
to the file being handled, not the to the handler. Returning a URL to the
the python handler file would be equivalent to returning a url to mod_cgi.c
in a CGI request. This doesn't make sense and wouldn't be useful.

>>> I don't think it would be right to tinker with what
>>> req.subprocess_env contains - it should return whatever apache put
>>> there, uncensored, so to that degree it's not a bug as far as I am
>>> concerned.
>>
>> But, AFAICT, it is tinkering with the value.
>
> It sort of does. There is a place in requestobject.c where it removes
> the trailing slash for something, then puts it back, and now I don't
> remember why it does it, but it was some rather esoteric condition
> that caused apache to infinite-recursively call some function...
> Since I don't remember what the reason was, I was always hesitant to
> remove that bit of code. It was put in years ago back in the apache
> 1.2 days, so it might be safe to remove in 2.0... I guess we can try
> it at least.

I found the code you're talking about in get_request_object() in
src/mod_python.c. I removed the special case for the trailing slash, and
everything now seems to work correctly. Patches are attached for mod_python
2.7.8 and mod_python 3.0.3. I've tested them with apache 1.3.28 and apache
2.0.47 using the SetHandler directive and AddHandler directives, and didn't
encounter any errors, infinite loops, or other unexpected behavior.

- Russ
-------------- next part --------------
A non-text attachment was scrubbed...
Name: mod_python-2.7.8.diff
Type: application/octet-stream
Size: 1229 bytes
Desc: not available
Url : http://mailman.modpython.org/pipermail/mod_python/attachments/20030811/8718dca2/mod_python-2.7.8-0001.obj
-------------- next part --------------
A non-text attachment was scrubbed...
Name: mod_python-3.0.3.diff
Type: application/octet-stream
Size: 1544 bytes
Desc: not available
Url : http://mailman.modpython.org/pipermail/mod_python/attachments/20030811/8718dca2/mod_python-3.0.3-0001.obj
From grisha at modpython.org  Mon Aug 11 22:12:01 2003
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 21:53:45 2004
Subject: [mod_python] Re: Re: script_name bug?
In-Reply-To: <bh8lt0$hkm$1@sea.gmane.org>
References: <bh32ej$m9l$1@main.gmane.org><20030809123926.T83158@onyx.ispol.com>
	<bh4ebb$qlq$1@sea.gmane.org> <20030810200027.R92644@onyx.ispol.com>
	<bh8lt0$hkm$1@sea.gmane.org>
Message-ID: <20030811221051.B19156@onyx.ispol.com>


> Patches are attached for mod_python 2.7.8 and mod_python 3.0.3.

Thanks, patches are always welcome!

Grisha
From damon at asianreflection.com  Tue Aug 12 21:46:34 2003
From: damon at asianreflection.com (Damon Lynch)
Date: Fri Jan  9 21:53:45 2004
Subject: [mod_python]  Re: Cannot run test script: (Re)importing module
	'mptest'
In-Reply-To: <3F374487.7050906@sjsoft.com>
References: <1060484731.2960.94.camel@damon.asianreflection.com>
	 <bh6j6s$d1t$1@sea.gmane.org>
	 <1060585401.8445.5.camel@damon.asianreflection.com>
	 <3F374487.7050906@sjsoft.com>
Message-ID: <1060681593.12636.18.camel@damon.asianreflection.com>

On Mon, 2003-08-11 at 19:23, David Fraser wrote:
> >
> So the content type is being set to application/x-python ... it seems 
> likely to me that somewhere in your Apache configuration (mime.types?) 
> you've got it set to return this mime type ... do a search for 
> application/x-python in your Apache conf directory files and see what 
> you find...
> 

Thanks David.  That did the trick.  It seems to me that someone may like
to review putting the above advice on this page:

http://www.modpython.org/live/current/doc-html/inst-apacheconfig.html

Since Mandrake comes by default with:

application/x-python                      py
application/x-python-bytecode             pyc

It would certainly help people like me, who know a lot more about python
than they do about apache!! ;-)

Damon

From donegal at myrealbox.com  Thu Aug 14 00:39:43 2003
From: donegal at myrealbox.com (William J. Fellows)
Date: Fri Jan  9 21:53:45 2004
Subject: [mod_python] YAQA mod_python and the missing _apache module
Message-ID: <1634432327.20030814003943@myrealbox.com>

I'm sorry to trouble the list but I have not been able to get it
mod_python to work.  My setup is Python 2.2.2, Apache 2.0.47,
mod_python 3.0.3  Python root directory is e:\Python22  Apache's root
is E:\Program Files\Apache Group\Apache2  Windows 2k Professional

I have a sample python script sitting out in cgi-bin and it works just
fine.  The mptest file though, horks everytime.  Feel free to beat on
my server. 
http://65.26.28.214/cgi-bin/sample.py
http://65.26.28.214/cgi-bin/mptest.py


The error message is:
Premature end of script headers: mptest.py
Traceback (most recent call last):
  File "E:\Program Files\Apache Group\Apache2\cgi-bin\mptest.py", line 1, in ?
    from mod_python import apache
  File "E:\Python22\Lib\site-packages\mod_python\apache.py", line 67, in ?
    import _apache
ImportError: No module named _apache


Been here,
http://www.modpython.org/FAQ/faqw.py?req=show&file=faq02.001.htp
and I've been there
http://www.modpython.org/FAQ/faqw.py?req=show&file=faq02.002.htp

I believe I understand what that says and everything I could find about
it from the archived email messages but unless Apache is invoking the
python enviroment outside of apache, I have no clue what's going
wrong.  And if it is doing it outside, I have no idea how it got that
way.

Saw both pythonhome and pythonpath referenced so I've touched both of
them.

PYTHONHOME=e:\python22
PYTHONPATH=e:\python22;e:\python22\lib;E:\Python22\Lib\site-packages\mod_python;E:\Python22\Lib\site-packages

I'm at my wits end.  I know I can get Python running under IIS but as
I don't feel like patching daily, I thought I'd give Apache a whirl.
I've dutifully scoured the archives and applied what I saw there but
no go so anyone with some insight to offer would be worshiped from
afar.

/bill

p.s.

The link for full archives does not work.
http://www.modpython.org/pipermail/mod_python.mbox/mod_python.mbox
Fortunately, wget -R -a.gz worked just fine.




The relevant parts of my conf file look like

=-=-=-=-=-=-=-=-BEGIN httpd.conf=-=-====-=-=-=-=-=-=--=-
LoadModule python_module modules/mod_python.so
ScriptInterpreterSource Registry

<Directory "E:/Program Files/Apache Group/Apache2/htdocs">
    AddHandler python-program .py
#   I tried combinations of the next two lines but to no avail
#    AddHandler cgi-script .py
#    PythonHandler mptest

    PythonHandler mod_python.publisher
    PythonDebug On

    Options Indexes FollowSymLinks
    AllowOverride None
    Order allow,deny
    Allow from all

</Directory>
=-=-=-=-=-=-=-=-END httpd.conf=-=-====-=-=-=-=-=-=--=-


=-=-=-=-=-=-=-=-BEGIN sample.py=-=-====-=-=-=-=-=-=--=-
print "Content-type: text/html"
print
print "<pre>"
import os, sys
print "<strong>Python %s</strong>" % sys.version
for (x,y) in os.environ.items():
   print "%s\t%s" % (x, y)

print "\nsys.path"
for p in sys.path:
   print p
print "</pre>"

=-=-=-=-=-=-=-=-END sample.py=-=-====-=-=-=-=-=-=--=-


=-=-=-=-=-=-=-=-BEGIN mptest.py=-=-====-=-=-=-=-=-=--=-
from mod_python import apache

def handler(req):
    req.write("Hello World!")
    return apache.OK

=-=-=-=-=-=-=-=-END mptest.py=-=-====-=-=-=-=-=-=--=-

From davidf at sjsoft.com  Thu Aug 14 09:25:36 2003
From: davidf at sjsoft.com (David Fraser)
Date: Fri Jan  9 21:53:45 2004
Subject: [mod_python] YAQA mod_python and the missing _apache module
In-Reply-To: <1634432327.20030814003943@myrealbox.com>
References: <1634432327.20030814003943@myrealbox.com>
Message-ID: <3F3B3970.40300@sjsoft.com>

William J. Fellows wrote:

>The error message is:
>Premature end of script headers: mptest.py
>Traceback (most recent call last):
>  File "E:\Program Files\Apache Group\Apache2\cgi-bin\mptest.py", line 1, in ?
>    from mod_python import apache
>  File "E:\Python22\Lib\site-packages\mod_python\apache.py", line 67, in ?
>    import _apache
>ImportError: No module named _apache
>
>  
>
 From this error, it means you are putting mptest.py in your cgi-bin 
directory. If it is in there it is probably being run as an external 
Python script, which is not what you want as you won't have access to 
the mod_python internals.
Try moving it to a standard directory, then in an .htaccess or 
<Directory> section for that directory, make sure you have
  AddHandler python-program .py
  PythonHandler mptest.py
  PythonDebug On
(that's the correct combination out of what you quoted below).
Then feed back if that doesn't work.

>Been here,
>http://www.modpython.org/FAQ/faqw.py?req=show&file=faq02.001.htp
>and I've been there
>http://www.modpython.org/FAQ/faqw.py?req=show&file=faq02.002.htp
>
>I believe I understand what that says and everything I could find about
>it from the archived email messages but unless Apache is invoking the
>python enviroment outside of apache, I have no clue what's going
>wrong.  And if it is doing it outside, I have no idea how it got that
>way.
>
>Saw both pythonhome and pythonpath referenced so I've touched both of
>them.
>
>PYTHONHOME=e:\python22
>PYTHONPATH=e:\python22;e:\python22\lib;E:\Python22\Lib\site-packages\mod_python;E:\Python22\Lib\site-packages
>  
>
It looks from your log above like the path is fine, as you are importing 
mod_python.apache OK.
You will only be able to import _apache if you are really running inside 
mod_python.
If you want to test the path, comment out the import of apache (you can 
return 200 instead of apache.OK) and import sys ; in the handler do 
req.write("Path: %r\n" % sys.path) and you will get the actual value 
printed out.

Hope that helps
David


From davidf at sjsoft.com  Thu Aug 14 15:54:39 2003
From: davidf at sjsoft.com (David Fraser)
Date: Fri Jan  9 21:53:45 2004
Subject: [mod_python] Cookies and redirect...
Message-ID: <3F3B949F.8030806@sjsoft.com>

Hi

I came across the following problem and wondered if there was a workaround.
Basically I want to set a cookie in a certain directory, and at the same 
time issue a Redirect to another place.
So I wanted to do:
  req.headers_out.add('Set-Cookie', morsel.OutputString())
  req.headers_out.add('Location:', location)
  return apache.HTTP_MOVED_TEMPORARILY

However, I found that as soon as I return the HTTP_MOVED_TEMPORARILY, 
the Set-Cookie string seems to be removed from the headers going to the 
client (this was tested by using the livehttpheaders extension to Firebird).
I couldn't work out where in the code that was happening but suspect 
that it is standard Apache behaviour.
Is this because I'm not supposed to be allowed to do this, or is it odd?

(I have a workaround of having a page with a meta http-equiv="refresh", 
but wondered if there is a way to get it working as would like...)

Thanks
David


From grisha at modpython.org  Thu Aug 14 10:17:14 2003
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 21:53:45 2004
Subject: [mod_python] Cookies and redirect...
In-Reply-To: <3F3B949F.8030806@sjsoft.com>
References: <3F3B949F.8030806@sjsoft.com>
Message-ID: <20030814100919.U55932@onyx.ispol.com>


This is a feature of Apache. When it sees an error response (all 204 (no
content), 3xx (redirect), 4xx (client error) and 5xx (server error)),
which includes HTTP_MOVED_TEMPORARILY (even though it's not an error
technically), it sends out only req.err_headers_out. It does make a
special provision for the Location header and copy it into err_headers_out
if it's not already there, which is why it makes it through.

You can send both headers by either:

   req.err_headers_out.add('Set-Cookie', morsel.OutputString())
   req.err_headers_out.add('Location:', location)
   return apache.HTTP_MOVED_TEMPORARILY

or

   req.headers_out.add('Set-Cookie', morsel.OutputString())
   req.status = apache.HTTP_MOVED_TEMPORARILY
   return apache.OK

Grisha


On Thu, 14 Aug 2003, David Fraser wrote:

> Hi
>
> I came across the following problem and wondered if there was a workaround.
> Basically I want to set a cookie in a certain directory, and at the same
> time issue a Redirect to another place.
> So I wanted to do:
>   req.headers_out.add('Set-Cookie', morsel.OutputString())
>   req.headers_out.add('Location:', location)
>   return apache.HTTP_MOVED_TEMPORARILY
>
> However, I found that as soon as I return the HTTP_MOVED_TEMPORARILY,
> the Set-Cookie string seems to be removed from the headers going to the
> client (this was tested by using the livehttpheaders extension to Firebird).
> I couldn't work out where in the code that was happening but suspect
> that it is standard Apache behaviour.
> Is this because I'm not supposed to be allowed to do this, or is it odd?
>
> (I have a workaround of having a page with a meta http-equiv="refresh",
> but wondered if there is a way to get it working as would like...)
>
> Thanks
> David
>
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>
From davidf at sjsoft.com  Thu Aug 14 17:19:43 2003
From: davidf at sjsoft.com (David Fraser)
Date: Fri Jan  9 21:53:45 2004
Subject: [mod_python] Cookies and redirect...
In-Reply-To: <20030814100919.U55932@onyx.ispol.com>
References: <3F3B949F.8030806@sjsoft.com>
	<20030814100919.U55932@onyx.ispol.com>
Message-ID: <3F3BA88F.7050202@sjsoft.com>

Thanks for the quick response!
This is working nicely now...

David

Gregory (Grisha) Trubetskoy wrote:

>This is a feature of Apache. When it sees an error response (all 204 (no
>content), 3xx (redirect), 4xx (client error) and 5xx (server error)),
>which includes HTTP_MOVED_TEMPORARILY (even though it's not an error
>technically), it sends out only req.err_headers_out. It does make a
>special provision for the Location header and copy it into err_headers_out
>if it's not already there, which is why it makes it through.
>
>You can send both headers by either:
>
>   req.err_headers_out.add('Set-Cookie', morsel.OutputString())
>   req.err_headers_out.add('Location:', location)
>   return apache.HTTP_MOVED_TEMPORARILY
>
>or
>
>   req.headers_out.add('Set-Cookie', morsel.OutputString())
>   req.status = apache.HTTP_MOVED_TEMPORARILY
>   return apache.OK
>
>Grisha
>
>
>On Thu, 14 Aug 2003, David Fraser wrote:
>
>  
>
>>Hi
>>
>>I came across the following problem and wondered if there was a workaround.
>>Basically I want to set a cookie in a certain directory, and at the same
>>time issue a Redirect to another place.
>>So I wanted to do:
>>  req.headers_out.add('Set-Cookie', morsel.OutputString())
>>  req.headers_out.add('Location:', location)
>>  return apache.HTTP_MOVED_TEMPORARILY
>>
>>However, I found that as soon as I return the HTTP_MOVED_TEMPORARILY,
>>the Set-Cookie string seems to be removed from the headers going to the
>>client (this was tested by using the livehttpheaders extension to Firebird).
>>I couldn't work out where in the code that was happening but suspect
>>that it is standard Apache behaviour.
>>Is this because I'm not supposed to be allowed to do this, or is it odd?
>>
>>(I have a workaround of having a page with a meta http-equiv="refresh",
>>but wondered if there is a way to get it working as would like...)
>>
>>Thanks
>>David
>>
>>
>>_______________________________________________
>>Mod_python mailing list
>>Mod_python@modpython.org
>>http://mailman.modpython.org/mailman/listinfo/mod_python
>>
>>    
>>
>
>  
>



From rey4 at columbia.edu  Sat Aug 16 15:35:11 2003
From: rey4 at columbia.edu (Russell Yanofsky)
Date: Fri Jan  9 21:53:45 2004
Subject: [mod_python] Re: Re: Re: script_name bug?
References: 
	<bh32ej$m9l$1@main.gmane.org><20030809123926.T83158@onyx.ispol.com><bh4ebb$qlq$1@sea.gmane.org>
	<20030810200027.R92644@onyx.ispol.com><bh8lt0$hkm$1@sea.gmane.org>
	<20030811221051.B19156@onyx.ispol.com>
Message-ID: <bhm118$fr8$1@sea.gmane.org>

Gregory (Grisha) Trubetskoy wrote:
>> Patches are attached for mod_python 2.7.8 and mod_python 3.0.3.
>
> Thanks, patches are always welcome!

I should hope so. Will these changes be incorporated in future releases of
mod_python?

- Russ


From neel at mediapulse.com  Wed Aug 20 17:51:47 2003
From: neel at mediapulse.com (Michael C. Neel)
Date: Fri Jan  9 21:53:45 2004
Subject: [mod_python] pysco + mod_python?
Message-ID: <C0FC22C08B82074A88B50061764157776B9618@johnson.mediapulse.net>

Has anyone tried to use pysco (http://psyco.sourceforge.net/) with
mod_python to speed up programs?  Is this something to try, or is it not
safe to use under mod_python?

Mike

From davidf at sjsoft.com  Thu Aug 21 07:34:55 2003
From: davidf at sjsoft.com (David Fraser)
Date: Fri Jan  9 21:53:45 2004
Subject: [mod_python] psyco + mod_python?
In-Reply-To: <C0FC22C08B82074A88B50061764157776B9618@johnson.mediapulse.net>
References: <C0FC22C08B82074A88B50061764157776B9618@johnson.mediapulse.net>
Message-ID: <3F4459FF.5070606@sjsoft.com>

Michael C. Neel wrote:

>Has anyone tried to use pysco (http://psyco.sourceforge.net/) with
>mod_python to speed up programs?  Is this something to try, or is it not
>safe to use under mod_python?
>
>Mike
>
>  
>
Hi

I have tried it and it seemed to work without problems, but I did not 
have a chance to profile it or verify that it was actually optimising 
stuff properly.
I can imagine that it would be great particularly for optimising short 
handlers and the modpython code itself.
It would be worth reporting your findings here if you do get it working 
as I am sure others are interested.

David

PS For those who don't know psyco, it is definitely worth checking out, 
does very intelligent JIT Python->assembly compilation based on type 
analysis.
Look at the web page mentioned above for more info

From mateusz at ant.gliwice.pl  Thu Aug 21 09:05:01 2003
From: mateusz at ant.gliwice.pl (Mateusz Korniak)
Date: Fri Jan  9 21:53:45 2004
Subject: [mod_python] pysco + mod_python?
In-Reply-To: <C0FC22C08B82074A88B50061764157776B9618@johnson.mediapulse.net>
References: <C0FC22C08B82074A88B50061764157776B9618@johnson.mediapulse.net>
Message-ID: <200308210905.02501.mateusz@ant.gliwice.pl>

On Wednesday 20 August 2003 23:51, Michael C. Neel wrote:
> Has anyone tried to use pysco (http://psyco.sourceforge.net/) with
> mod_python to speed up programs?  Is this something to try, or is it not
> safe to use under mod_python?

I tried but did not notice any speed up (psyco 1.0 and 1.1,mod_python 2.7.8). 
In fact, I didn't notice any problems either. Code was just 10% slower. :(. 
Perhaps It was case I just did dumb psyco.full() ...

-- 
Mateusz Korniak


From davidf at sjsoft.com  Thu Aug 21 09:23:03 2003
From: davidf at sjsoft.com (David Fraser)
Date: Fri Jan  9 21:53:45 2004
Subject: [mod_python] pysco + mod_python?
In-Reply-To: <200308210905.02501.mateusz@ant.gliwice.pl>
References: <C0FC22C08B82074A88B50061764157776B9618@johnson.mediapulse.net>
	<200308210905.02501.mateusz@ant.gliwice.pl>
Message-ID: <3F447357.3080102@sjsoft.com>

Mateusz Korniak wrote:

>On Wednesday 20 August 2003 23:51, Michael C. Neel wrote:
>  
>
>>Has anyone tried to use pysco (http://psyco.sourceforge.net/) with
>>mod_python to speed up programs?  Is this something to try, or is it not
>>safe to use under mod_python?
>>    
>>
>
>I tried but did not notice any speed up (psyco 1.0 and 1.1,mod_python 2.7.8). 
>In fact, I didn't notice any problems either. Code was just 10% slower. :(. 
>Perhaps It was case I just did dumb psyco.full() ...
>
>  
>
Sounds similar to my experience. Maybe we try out different profiling 
options and put together a guide on using psyco with mod_python...

David

From mike.looijmans at asml.com  Thu Aug 21 11:06:09 2003
From: mike.looijmans at asml.com (Mike Looijmans)
Date: Fri Jan  9 21:53:45 2004
Subject: [mod_python] Making an absolute URL
Message-ID: <01c367c3$75d9d680$926a1e6e@wsasd464>

As usual, there are many ways that lead to the same point.

I'm sending a 302 or 303 response to some queries to quickly redirect the
client to the 'next' page (for example after logging in is successful it
immediately proceeds to the 'calling' page by sending a "303 See Other").

I did this previously with a Refresh header, but that doesn't work in Lynx
for example, it "flashes" the screen, and the 303 was specifically meant for
this purpose.

Only trouble now is that the "Location" header in a 30x response must be an
absolute URL instead of a relative one. If I just supply a relative URL, the
browsers grudgingly accept it, but it's just not right. So if the user
request http://myhost:8080/foo/ i send a redirection to
http://myhost:8080/foo/bar by returning 302 (moved permanently) and add a
header "Location: bar". But accoring to HTTP spec (RFC2068), the location
header should be "Location: http://myhost:8080/foo/bar" instead.

It should be easy to turn the URL into an absolute one. However, there are
many ways to do this, and I wonder what is the one that will work for all
client and server configurations.

For example, i want the URL to remain as the user typed it, so that there's
a difference between using http://localhost/foo/bar or
http://localhost:80/foo/bar, between http://myhost.mydomain.com/ and
http://myhost/ etc, etc.

Probably, the "Host" header from the client is a good thing for this, but it
is only mandatory for HTTP/1.1 and not for 1.0 which many browsers still
use.

Mike.





-- 
The information contained in this communication and any attachments is confidential and may be privileged, and is for the sole use of the intended recipient(s). Any unauthorized review, use, disclosure or distribution is prohibited. If you are not the intended recipient, please notify the sender immediately by replying to this message and destroy all copies of this message and any attachments. ASML is neither liable for the proper and complete transmission of the information contained in this communication, nor for any delay in its receipt.


From greg at amstlc.com  Thu Aug 21 13:57:50 2003
From: greg at amstlc.com (Greg Unrein)
Date: Fri Jan  9 21:53:46 2004
Subject: [mod_python] Python 2.3/ modpython 3.0.3 problem
Message-ID: <3F45324E.4010402@amstlc.com>

I recently started working in Python 2.3 from 2.2.2 and after installing 
modpython 3.0.3 for the new Python 2.3 installation it seems that 
modpython is still using Python 2.2.2. This is under windows 2000 and 
I've removed the modpython install for python 2.2.2, so apache 
complains. Any help would be appreciated greatly!

Thanks,
Greg

From grisha at modpython.org  Thu Aug 21 19:31:50 2003
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 21:53:46 2004
Subject: [mod_python] Python 2.3/ modpython 3.0.3 problem
In-Reply-To: <3F45324E.4010402@amstlc.com>
References: <3F45324E.4010402@amstlc.com>
Message-ID: <20030821192853.L68478@onyx.ispol.com>


I don't recommend using mod_python 3.0.3 with Python 2.3, there are some
things that changed in 2.3 where it may not work.

Grisha

On Thu, 21 Aug 2003, Greg Unrein wrote:

> I recently started working in Python 2.3 from 2.2.2 and after installing
> modpython 3.0.3 for the new Python 2.3 installation it seems that
> modpython is still using Python 2.2.2. This is under windows 2000 and
> I've removed the modpython install for python 2.2.2, so apache
> complains. Any help would be appreciated greatly!
>
> Thanks,
> Greg
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>
From gnb at itga.com.au  Fri Aug 22 09:39:34 2003
From: gnb at itga.com.au (Gregory Bond)
Date: Fri Jan  9 21:53:46 2004
Subject: [mod_python] Making an absolute URL 
In-Reply-To: Your message of Thu, 21 Aug 2003 11:06:09 +0200.
Message-ID: <200308212339.JAA07072@lightning.itga.com.au>


mike.looijmans@asml.com said:
> Probably, the "Host" header from the client is a good thing for this,
> but it is only mandatory for HTTP/1.1 and not for 1.0 which many
> browsers still use. 

Most browsers still only claim HTTP/1.0, but nearly all of them use Host:
header. Most virtual hosting won't work without the Host header, so you'd have 
to go back to browsers from the IE/NS 3 era to find a problem. 

(IP addresses are getting scarce, so unless you use SSL and need IP-based 
vhosting, most web hosts only offer name-based vhosting.)



From sanctuary at terra.es  Sat Aug 23 20:13:31 2003
From: sanctuary at terra.es (Rix Sanctuary)
Date: Fri Jan  9 21:53:46 2004
Subject: [mod_python] 
	help!: modpython, howto pass results to a running php script?
Message-ID: <!~!UENERkVCMDkAAQACAAAAAAAAAAAAAAAAABgAAAAAAAAAUuS0GoPudku6WIdlnSUuwcKAAAAQAAAAtpwvdzFLvE++3Ot7HeNxvAEAAAAA@terra.es>

 
-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1


Hi there!

Have a python calculation module and I would like to include/work with the results in a seperate php script.
My code runs in a box with Apache/2.0.47(win32) mod_python/3.0.3 Python 2.2.3 Php/4.3.2

My python module is called from a php script like this:
    <?php require 'http://localhost/xxx/calc.py/'; ?>

   PHP   <----   CALC.PY    <----  BIGCALC.PY
			  |
			  |
	from mod_python import apache
 	import bigcalc

Is there an easy way to use the results yield by my python module in my php script as local variables?

Thanks in advance
rix

-----BEGIN PGP SIGNATURE-----
Version: PGP 8.0

iQA/AwUBP0euyhvgnt8VShhuEQLFngCaAoRawlJ9dMWyt3K9lNLge50QZa8AoMFc
QDO/ZjGHWV1PG889q/+ItxvJ
=erGk
-----END PGP SIGNATURE-----



From grisha at modpython.org  Sun Aug 24 13:05:02 2003
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 21:53:46 2004
Subject: [mod_python]  help!: modpython, howto pass results to a running
 php script?
In-Reply-To: <!~!UENERkVCMDkAAQACAAAAAAAAAAAAAAAAABgAAAAAAAAAUuS0GoPudku6WIdlnSUuwcKAAAAQAAAAtpwvdzFLvE++3Ot7HeNxvAEAAAAA@terra.es>
References: <!~!UENERkVCMDkAAQACAAAAAAAAAAAAAAAAABgAAAAAAAAAUuS0GoPudku6WIdlnSUuwcKAAAAQAAAAtpwvdzFLvE++3Ot7HeNxvAEAAAAA@terra.es>
Message-ID: <20030824130257.E16162@onyx.ispol.com>


I don't know first thing about PHP, but if it has a way of making a
sub-request and then capturing its output, that would be one way. Or if
PHP has access to request notes (req.notes in mod_python), there is
probably some way to use them as a way to pass information.

Grishas

On Sat, 23 Aug 2003, Rix Sanctuary wrote:

>
> -----BEGIN PGP SIGNED MESSAGE-----
> Hash: SHA1
>
>
> Hi there!
>
> Have a python calculation module and I would like to include/work with the results in a seperate php script.
> My code runs in a box with Apache/2.0.47(win32) mod_python/3.0.3 Python 2.2.3 Php/4.3.2
>
> My python module is called from a php script like this:
>     <?php require 'http://localhost/xxx/calc.py/'; ?>
>
>    PHP   <----   CALC.PY    <----  BIGCALC.PY
> 			  |
> 			  |
> 	from mod_python import apache
>  	import bigcalc
>
> Is there an easy way to use the results yield by my python module in my php script as local variables?
>
> Thanks in advance
> rix
>
> -----BEGIN PGP SIGNATURE-----
> Version: PGP 8.0
>
> iQA/AwUBP0euyhvgnt8VShhuEQLFngCaAoRawlJ9dMWyt3K9lNLge50QZa8AoMFc
> QDO/ZjGHWV1PG889q/+ItxvJ
> =erGk
> -----END PGP SIGNATURE-----
>
>
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>
From nelson at crynwr.com  Mon Aug 25 16:54:28 2003
From: nelson at crynwr.com (Russell Nelson)
Date: Fri Jan  9 21:53:46 2004
Subject: [mod_python] How do I serve up .html files?
Message-ID: <16202.30596.238589.112878@desk.crynwr.com>

Maybe this is really an Apache question, but it seems to me like it
ought to come up in a mod_python context as well.  Can't find it in
the documentation, the FAQ, or the mailing list archives
(Aug/Jul/Jun).

How do I cause my python script to be run when a .html file is accessed?
    http://angry-economics.russnelson.com/index.html

How do I cause my python script to be run when any old file is accessed?
    http://angry-economics.russnelson.com/

In other words, I want a handler which gets run no matter what the
rest of the URL is.  You'd think this would be in the documentation,
enabling people to make fully scripted sites, but it seems not to be.

I can't insert a /foo.py/ in there because I have to preserve all the
old URLs.

-- 
--My blog is at angry-economist.russnelson.com  | Free markets express in the
Crynwr sells support for free software  | PGPok | practical world our belief
521 Pleasant Valley Rd. | +1 315 268 1925 voice | that there is that of God
Potsdam, NY 13676-3213  | +1 315 268 9201 FAX   | in all people. -Chris V.
From synec at viscous.org  Mon Aug 25 14:36:41 2003
From: synec at viscous.org (john spurling)
Date: Fri Jan  9 21:53:46 2004
Subject: [mod_python] How do I serve up .html files?
In-Reply-To: <16202.30596.238589.112878@desk.crynwr.com>
References: <16202.30596.238589.112878@desk.crynwr.com>
Message-ID: <20030825213641.GR19969@c7c8.colobox.com>

On Mon, Aug 25, 2003 at 04:54:28PM -0400, Russell Nelson wrote:
> Maybe this is really an Apache question, but it seems to me like it
> ought to come up in a mod_python context as well.  Can't find it in
> the documentation, the FAQ, or the mailing list archives
> (Aug/Jul/Jun).
> 
> How do I cause my python script to be run when a .html file is accessed?
>     http://angry-economics.russnelson.com/index.html
> 
> How do I cause my python script to be run when any old file is accessed?
>     http://angry-economics.russnelson.com/
> 
> In other words, I want a handler which gets run no matter what the
> rest of the URL is.  You'd think this would be in the documentation,
> enabling people to make fully scripted sites, but it seems not to be.
> 
> I can't insert a /foo.py/ in there because I have to preserve all the
> old URLs.

i think you can do it using the "SetHandler" directive in httpd.conf,
like this:

<Directory "/path/to/document/root">
SetHandler python-program
PythonHandler mymodule
</Directory>

from there, mymodule.py (located in the document root) will handle all
requests. here's a sample to put in mymodule.py:

from mod_python import apache
def handler(req):
    req.content_type = 'text/plain'
    req.write("uri: %s" % req.uri)
    return apache.OK

voila. that'll print out whatever uri gets typed in.

-john

-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
Url : http://mailman.modpython.org/pipermail/mod_python/attachments/20030825/32b77b5c/attachment-0001.bin
From conrad at hep.caltech.edu  Mon Aug 25 14:42:04 2003
From: conrad at hep.caltech.edu (Conrad Steenberg)
Date: Fri Jan  9 21:53:46 2004
Subject: [mod_python] How do I serve up .html files?
In-Reply-To: <16202.30596.238589.112878@desk.crynwr.com>
References: <16202.30596.238589.112878@desk.crynwr.com>
Message-ID: <1061847724.32518.23.camel@heppc22>

Hi Russel

The way I do it is to have a handler that reposonds to GET requests. 
E.g. if you have a documentroot of /var/www/html:

<Directory /var/www/html>
       SetHandler python-program
       AddHandler python-program .py
       PythonDebug On
       PythonHandler my_handler
       DirectoryIndex myhandler.py
</Directory>

I.e. myhandler.py is the directory index. Then inside the handler
function in myhandler.py:

def handler(req):
  if req.method=='GET':
     # Get the name of the file requested
     inputname=reduce(lambda x,y:x+'/'+y,string.split(req.uri, '/')[1:])

     # Construct an outputname
     outputname='/var/www/html'+inputname
     
     # Send the file to the client
     send_file(req,outputname,0,-1) # Or your own function doing lots of req.write()'s
     return apache.OK


This is pseudo-code taken from another implmentation, so play around
with the inputname statement to get it right. But the idea is to get the
filename from req.uri, and then construct a real filesystem filename,
the contents of which can be sent to the client.

An implementation of the send_file() function above is attached, making
use of the req.write_file() function if available (I think it is in the
CVS version), or a slower version based on req.write()

HTH

Conrad


On Mon, 2003-08-25 at 13:54, Russell Nelson wrote:
> Maybe this is really an Apache question, but it seems to me like it
> ought to come up in a mod_python context as well.  Can't find it in
> the documentation, the FAQ, or the mailing list archives
> (Aug/Jul/Jun).
> 
> How do I cause my python script to be run when a .html file is accessed?
>     http://angry-economics.russnelson.com/index.html
> 
> How do I cause my python script to be run when any old file is accessed?
>     http://angry-economics.russnelson.com/
> 
> In other words, I want a handler which gets run no matter what the
> rest of the URL is.  You'd think this would be in the documentation,
> enabling people to make fully scripted sites, but it seems not to be.
> 
> I can't insert a /foo.py/ in there because I have to preserve all the
> old URLs.
-- 
Conrad Steenberg <conrad@hep.caltech.edu>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: clarens_file.py
Type: text/x-python
Size: 3547 bytes
Desc: not available
Url : http://mailman.modpython.org/pipermail/mod_python/attachments/20030825/886b9e84/clarens_file-0001.py
From neel at mediapulse.com  Mon Aug 25 18:40:48 2003
From: neel at mediapulse.com (Michael C. Neel)
Date: Fri Jan  9 21:53:46 2004
Subject: [mod_python] How do I serve up .html files?
Message-ID: <C0FC22C08B82074A88B50061764157776B962F@johnson.mediapulse.net>

> <Directory "/path/to/document/root">
> SetHandler python-program
> PythonHandler mymodule
> </Directory>
> 
> from there, mymodule.py (located in the document root) will handle all
> requests. here's a sample to put in mymodule.py:
> 
> from mod_python import apache
> def handler(req):
>     req.content_type = 'text/plain'
>     req.write("uri: %s" % req.uri)
>     return apache.OK
> 

This will answer for all files in that directory, including images so
make sure to check the req.uri for ".html" and return an apache.DECLINED
if it's not.  Otherwise your python module will have to serve up the
images too.

Another option would be the <Files>/<FilesMatch> directives in apache,
and set it to files ending in .html.

Mike

From grisha at modpython.org  Mon Aug 25 21:53:22 2003
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 21:53:46 2004
Subject: [mod_python] How do I serve up .html files?
In-Reply-To: <16202.30596.238589.112878@desk.crynwr.com>
References: <16202.30596.238589.112878@desk.crynwr.com>
Message-ID: <20030825213605.O1138@onyx.ispol.com>


On Mon, 25 Aug 2003, Russell Nelson wrote:

> Maybe this is really an Apache question, but it seems to me like it
> ought to come up in a mod_python context as well.  Can't find it in
> the documentation, the FAQ, or the mailing list archives
> (Aug/Jul/Jun).
>
> How do I cause my python script to be run when a .html file is accessed?
>     http://angry-economics.russnelson.com/index.html

Russell -

It is pretty much an apache question.

  AddHandler python-program .html
  PythonHandler myhandler
  PythonDebug On

should do it (AddHandler is key, the other two are shown for completness).

>
> How do I cause my python script to be run when any old file is accessed?
>     http://angry-economics.russnelson.com/

  SetHandler python-program
  PythonHandler myhandler
  PythonDebug On

would make every request be handled by mod_python, regardless of
extension.

Of course the consequence of either of the above is that the mod_python
handler would either need to actually do the work of delivering the HTML
itself (the next version will have req.sendfile() to make it a bit more
efficient), or return apache.DECLINED to let Apache handle it after mp
handler did its thing (in which case the mp handler shouldn't write
anything).

> In other words, I want a handler which gets run no matter what the
> rest of the URL is.  You'd think this would be in the documentation,
> enabling people to make fully scripted sites, but it seems not to be.

Here is one place where it's mentioned:

http://www.modpython.org/live/current/doc-html/tut-what-it-do.html

...but I admit, the docs are written in a way as to not overlap Apache
docs, which makes it difficult.

> I can't insert a /foo.py/ in there because I have to preserve all the
> old URLs.

P.S. Glad to see you using mod_python!

Grisha
From idiot1 at netzero.net  Mon Aug 25 22:42:06 2003
From: idiot1 at netzero.net (Kirk Bailey)
Date: Fri Jan  9 21:53:46 2004
Subject: [mod_python] How do I serve up .html files?
In-Reply-To: <20030825213605.O1138@onyx.ispol.com>
References: <16202.30596.238589.112878@desk.crynwr.com>
	<20030825213605.O1138@onyx.ispol.com>
Message-ID: <3F4AC8FE.4070405@netzero.net>

When a browser accesses a html page, one includes a SSI exec tag. That means 
Server Side Include, exec(ute).

It looks like a comment, and if it made it to the browser, it would be treated 
as such and therefore invisible. But if all is done right, it is EATEN by the 
webserver and replaced with the output of the script.

<!--#exec cgi="./cgi-bin/counter.py" -->

Is probably the most common example of a ssi tag in a webpage. If you never use 
any other ssi, you will use that one. The example above would run some sort of a 
counter program (such as my 'counter.py'), returning a string of text. This is a 
string of characters, such as numbers:
32204
which is the output of a text counter program.

I am not going to describe how to enable cgi on apache, or any other webserver- 
that's a booklet worth, not a letter's. BUT my website has articles on cgi on 
it, and links to entire SITES about it, including apache.org's pages about ssi 
and apache. The ssi stuff is at the bottom of the homepage.

	http://www.tinylist.org/

hope this helps.


Gregory (Grisha) Trubetskoy wrote:

> On Mon, 25 Aug 2003, Russell Nelson wrote:
> 
> 
>>Maybe this is really an Apache question, but it seems to me like it
>>ought to come up in a mod_python context as well.  Can't find it in
>>the documentation, the FAQ, or the mailing list archives
>>(Aug/Jul/Jun).
>>
>>How do I cause my python script to be run when a .html file is accessed?
>>    http://angry-economics.russnelson.com/index.html
> 
> 
> Russell -
> 
> It is pretty much an apache question.
> 
>   AddHandler python-program .html
>   PythonHandler myhandler
>   PythonDebug On
> 
> should do it (AddHandler is key, the other two are shown for completness).
> 
> 
>>How do I cause my python script to be run when any old file is accessed?
>>    http://angry-economics.russnelson.com/
> 
> 
>   SetHandler python-program
>   PythonHandler myhandler
>   PythonDebug On
> 
> would make every request be handled by mod_python, regardless of
> extension.
> 
> Of course the consequence of either of the above is that the mod_python
> handler would either need to actually do the work of delivering the HTML
> itself (the next version will have req.sendfile() to make it a bit more
> efficient), or return apache.DECLINED to let Apache handle it after mp
> handler did its thing (in which case the mp handler shouldn't write
> anything).
> 
> 
>>In other words, I want a handler which gets run no matter what the
>>rest of the URL is.  You'd think this would be in the documentation,
>>enabling people to make fully scripted sites, but it seems not to be.
> 
> 
> Here is one place where it's mentioned:
> 
> http://www.modpython.org/live/current/doc-html/tut-what-it-do.html
> 
> ...but I admit, the docs are written in a way as to not overlap Apache
> docs, which makes it difficult.
> 
> 
>>I can't insert a /foo.py/ in there because I have to preserve all the
>>old URLs.
> 
> 
> P.S. Glad to see you using mod_python!
> 
> Grisha
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
> 
> 

-- 

-- 

end

Cheers!
         Kirk D Bailey

  +                              think                                +
   http://www.howlermonkey.net  +-----+        http://www.tinylist.org
   http://www.listville.net     | BOX |  http://www.sacredelectron.org
   Thou art free"-ERIS          +-----+     'Got a light?'-Promethieus
  +                              think                                +

Fnord.

From smejmoon at yahoo.com  Tue Aug 26 12:29:11 2003
From: smejmoon at yahoo.com (=?iso-8859-1?q?Girts=20Kalninsh?=)
Date: Fri Jan  9 21:53:46 2004
Subject: [mod_python] mod_python + pso
In-Reply-To: <3F4AC8FE.4070405@netzero.net>
Message-ID: <20030826112911.98215.qmail@web10703.mail.yahoo.com>


I'm interested in sessions, redirections, form validation, e.t.c. still
want to keep the system Simple and Robust.

I liked the PSO (http://sourceforge.net/projects/pso), but the version
on sourceforge still have many bugs unsolved
(http://sourceforge.net/tracker/?group_id=49265&atid=455630).

Do you know of working version and some example code?

Right now I'm using hosting with apache + mod_python + mysql. CGI is
forbidden and installing of some server moduled might be troublesome.

G'irts


________________________________________________________________________
Want to chat instantly with your online friends?  Get the FREE Yahoo!
Messenger http://uk.messenger.yahoo.com/
From joshg at myrealbox.com  Tue Aug 26 05:29:09 2003
From: joshg at myrealbox.com (Joshua Adam Ginsberg)
Date: Fri Jan  9 21:53:46 2004
Subject: [mod_python] IPC, db conn sharing, and other fine things
Message-ID: <1061897348.1677.12.camel@gateway.localnet>

Hello -

You will have to forgive me if this is often covered... I perused the
last six months of postings for answers to these questions, and still
have not yet found exactly what I'm looking for...

Additionally, please understand that my serious web development
experience comes from AOLServer and it's unique brand of TCL... if
you're unaware of the project, AOLServer was the original (and in many
opinions still the best) multi-threaded, thread-safe, database
connection pooling, strong API'ed webserver...

AOLServer had many features that I came to know, love, and depend on...
examples:

- nsv buckets --- nsv == NaviServer (AOLServer's original name) shared
variables... they were effectively arrays that stored information
accessible and modifiable by any running thread... perfect for caching
database information for faster generation of dynamic pages...

- database connection pooling --- provided easy, standardized, and
scalable access to existing database connections

I spent about six or seven months developing an enterprise caliber web
applications toolkit using AOLServer, and honestly, I cannot envision
having anything "enterprise caliber" without some sort of interprocess
communication and some sort of connection pooling...

I've used Apache now for a total of two weeks... I've read documentation
detailing the prefork versus the threading mpm models... I've read the
mod_python documentation available... but I still can't find a decent
way to replicate the services that AOLServer provided natively...

And unfortunately the reason I switched to Apache is that many of my
clients want to have their sites hosted by some mass hosting provider
that only uses Apache... I can find ones that are willing to use
mod_python, but I can't find ones that are willing to install
AOLServer... and any sort of IPC or db-pooling services I write can't
depend on external daemons... obviously I could write some sort of
caching daemon in Python that used UNIX sockets and some simple
key/value pair protocol to do db data caching... or I could write some
sort of db-pooling daemon... but good luck trying to get a mass-hosting
provider to run some homemade daemon on their servers...

So I suppose what I'm asking is that is there any way natively in
mod_python to support these enterprise critical features? And if not,
how the hell do you guys who use mod_python manage to have massive
hit-per-second sites without data caching?

Thank you for any guidance you could provide.

-jag

From barry at python.org  Tue Aug 26 14:29:31 2003
From: barry at python.org (Barry Warsaw)
Date: Fri Jan  9 21:53:46 2004
Subject: [mod_python] Problems with PythonPath directive
Message-ID: <1061922571.23837.89.camel@yyz>

FTR: Apache 2.0.47, mod_python 3.0.3, Python 2.3+LONG_LONG patch
(although I've also tried Python 2.2.3).

I'm having trouble with the PythonPath directive.  Mostly likely I don't
understand how it's supposed to work.  Here are my Apache directives:

LoadModule python_module /usr/local/apache/modules/mod_python.so
                                                                                
<Directory /path/to/project/xxx/xxx_apps>
    AddHandler python-program .py
    #PythonPath "sys.path + ['/path/to/project/zope2/lib/python']"
    PythonHandler regserver.driver
    PythonDebug On
</Directory>

ScriptAlias /regserver/ "/path/to/project/xxx/xxx_apps/"

When I hit http://localhost/regserver/driver.py with the PythonPath
directive commented out, everything works fine.  But when I uncomment
the PythonPath directive, I get an import error:

Mod_python error: "PythonHandler regserver.driver"

Traceback (most recent call last):

  File "/usr/local/lib/python2.3/site-packages/mod_python/apache.py", line 320, in HandlerDispatch
    module = import_module(module_name, config)

  File "/usr/local/lib/python2.3/site-packages/mod_python/apache.py", line 496, in import_module
    f, p, d = imp.find_module(parts[i], path)

ImportError: No module named regserver

I thought that the way I'm specifying PythonPath above should have added
to sys.path, not overwritten it.  What am I missing?

Thanks,
-Barry

P.S. there is a buglet in the online manual.  It says that --with-apxs
searches /usr/local/apache/bin but it really appears to search only
/usr/local/apache/sbin.  While my apxs lives in the former, I had to use
the --with-apxs configure option for it to find it.


From grisha at modpython.org  Tue Aug 26 15:01:02 2003
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 21:53:46 2004
Subject: [mod_python] Problems with PythonPath directive
In-Reply-To: <1061922571.23837.89.camel@yyz>
References: <1061922571.23837.89.camel@yyz>
Message-ID: <20030826145636.A7493@onyx.ispol.com>


Hi Barry -

Try

PythonPath "sys.path + ['/path/to/project/zope2/lib/python',
                        '/path/to/project/xxx/xxx_apps']"

(the above should be on one line)

IIRC, mod_python will prepend the path in <Directory> to sys.path, unless
PythonPath is specified, in which case PythonPath overrules everything.

Grisha


On Tue, 26 Aug 2003, Barry Warsaw wrote:

> FTR: Apache 2.0.47, mod_python 3.0.3, Python 2.3+LONG_LONG patch
> (although I've also tried Python 2.2.3).
>
> I'm having trouble with the PythonPath directive.  Mostly likely I don't
> understand how it's supposed to work.  Here are my Apache directives:
>
> LoadModule python_module /usr/local/apache/modules/mod_python.so
>
> <Directory /path/to/project/xxx/xxx_apps>
>     AddHandler python-program .py
>     #PythonPath "sys.path + ['/path/to/project/zope2/lib/python']"
>     PythonHandler regserver.driver
>     PythonDebug On
> </Directory>
>
> ScriptAlias /regserver/ "/path/to/project/xxx/xxx_apps/"
>
> When I hit http://localhost/regserver/driver.py with the PythonPath
> directive commented out, everything works fine.  But when I uncomment
> the PythonPath directive, I get an import error:
>
> Mod_python error: "PythonHandler regserver.driver"
>
> Traceback (most recent call last):
>
>   File "/usr/local/lib/python2.3/site-packages/mod_python/apache.py", line 320, in HandlerDispatch
>     module = import_module(module_name, config)
>
>   File "/usr/local/lib/python2.3/site-packages/mod_python/apache.py", line 496, in import_module
>     f, p, d = imp.find_module(parts[i], path)
>
> ImportError: No module named regserver
>
> I thought that the way I'm specifying PythonPath above should have added
> to sys.path, not overwritten it.  What am I missing?
>
> Thanks,
> -Barry
>
> P.S. there is a buglet in the online manual.  It says that --with-apxs
> searches /usr/local/apache/bin but it really appears to search only
> /usr/local/apache/sbin.  While my apxs lives in the former, I had to use
> the --with-apxs configure option for it to find it.
>
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>
From barry at python.org  Tue Aug 26 15:41:15 2003
From: barry at python.org (Barry Warsaw)
Date: Fri Jan  9 21:53:46 2004
Subject: [mod_python] Problems with PythonPath directive
In-Reply-To: <20030826145636.A7493@onyx.ispol.com>
References: <1061922571.23837.89.camel@yyz>
	 <20030826145636.A7493@onyx.ispol.com>
Message-ID: <1061926875.23837.100.camel@yyz>

On Tue, 2003-08-26 at 15:01, Gregory (Grisha) Trubetskoy wrote:
> Hi Barry -
> 
> Try
> 
> PythonPath "sys.path + ['/path/to/project/zope2/lib/python',
>                         '/path/to/project/xxx/xxx_apps']"
> 
> (the above should be on one line)
> 
> IIRC, mod_python will prepend the path in <Directory> to sys.path, unless
> PythonPath is specified, in which case PythonPath overrules everything.

Indeed, that worked!  Thanks so much Grisha.

-Barry


From neel at mediapulse.com  Tue Aug 26 16:36:19 2003
From: neel at mediapulse.com (Michael C. Neel)
Date: Fri Jan  9 21:53:46 2004
Subject: [mod_python] PythonDebug and Traceback
Message-ID: <C0FC22C08B82074A88B50061764157775CBB@johnson.mediapulse.net>

Is there some way that you can have PythonDebug set to Off and still get
a traceback (I'm using 2.7.8 mod_python against python 2.2.2)?  The
reason I ask is I have a site where in the conf PythonDebug is
explicitly set to off, and when our database server decided to block the
web server, a client got a traceback error and then got the server 500
error page (as I expect).

The error raised was:

OperationalError: (1129, "Host 'xxx.xxx.com' is blocked because of many
connection errors.  Unblock with 'mysqladmin flush-hosts'")

I've messed around with some test sites to try and get a traceback error
with PythonDebug Off, and haven't been able to get it - although I
haven't caused an OperationalError.  Needless to say people getting to
see traceback on a live site is unsettling, so if anyone has an idea how
this happened and what I can do to fix it let me know ;)

Mike

From idiot1 at netzero.net  Tue Aug 26 20:12:29 2003
From: idiot1 at netzero.net (Kirk Bailey)
Date: Fri Jan  9 21:53:46 2004
Subject: [mod_python] How do I serve up .html files?
In-Reply-To: <20030826043323.GL12023@itea.ntnu.no>
References: <16202.30596.238589.112878@desk.crynwr.com>
	<20030825213605.O1138@onyx.ispol.com> <3F4AC8FE.4070405@netzero.net>
	<20030826043323.GL12023@itea.ntnu.no>
Message-ID: <3F4BF76D.5090300@netzero.net>



Stian S?iland wrote:

> On 2003-08-26 04:42:06, Kirk Bailey wrote:
> 
> 
>>When a browser accesses a html page, one includes a SSI exec tag. That 
>>means Server Side Include, exec(ute).
> 
> 
> What did you drink that night? This is the mod_python list, discussing
> mod_Python, not SSI =)
>

Stian, I sugggest you be nice, and not go trolling. He asked a basic question 
about how to get a html page to access a cgi program; Go back and read the 
letter he wrote. I was discussing exactly that. One gets a page to access a 
script with a ssi tag. He did NOT ask how to configure apache, or how mod_python 
works. He asked how to get a page when requested to acess a cgi program. I was 
addressing exactly that point, at a basic level. Granted, his letter was a tad 
off topic, and even a little below the general level of technical skill 
devlopment this list usually displays, but he asked, I replied, being a 
generally helpful person.

As for you rather personal question about my personal behavior last night, not 
that it is any of your business, the answer is: NOTHING. I'm stone cold sober, 
and was last night. Your assumption was and is dead wrong.

Your behavior in this matter is rather unprofessional sir, and uncharitible to 
those around us of lesser technical skill- and disrespectful to those more 
nearly your peer. This cannot but hamper your ongoing career in Information 
Technology.

I suggest you consider the many people who mentored you in your early days, and 
how they suffer your novice level questions gladly, and helped you along your 
way. There is a word: payforward, where we pay 'back' the tutilage and gentle 
patience given to us in the past, by helping others later on when we can. I 
encourage you to adopt such a charitible attitude.




-- 

end

Respectfully,
              Kirk D Bailey

  +                              think                                +
   http://www.howlermonkey.net  +-----+        http://www.tinylist.org
   http://www.listville.net     | BOX |  http://www.sacredelectron.org
   Thou art free"-ERIS          +-----+     'Got a light?'-Promethieus
  +                              think                                +

Fnord.

From idiot1 at netzero.net  Tue Aug 26 20:16:12 2003
From: idiot1 at netzero.net (Kirk Bailey)
Date: Fri Jan  9 21:53:46 2004
Subject: [mod_python] How do I serve up .html files?
In-Reply-To: <20030826043323.GL12023@itea.ntnu.no>
References: <16202.30596.238589.112878@desk.crynwr.com>
	<20030825213605.O1138@onyx.ispol.com> <3F4AC8FE.4070405@netzero.net>
	<20030826043323.GL12023@itea.ntnu.no>
Message-ID: <3F4BF84C.7060200@netzero.net>



Stian S?iland wrote:

> On 2003-08-26 04:42:06, Kirk Bailey wrote:
> 
> 
>>When a browser accesses a html page, one includes a SSI exec tag. That 
>>means Server Side Include, exec(ute).
> 
> 
> What did you drink that night? This is the mod_python list, discussing
> mod_Python, not SSI =)
>

Stian, I sugggest you be nice, and not go trolling. He asked a basic question 
about how to get a html page to access a cgi program; Go back and read the 
letter he wrote. I was discussing exactly that. One gets a page to access a 
script with a ssi tag. He did NOT ask how to configure apache, or how mod_python 
works. He asked how to get a page when requested to acess a cgi program. I was 
addressing exactly that point, at a basic level. Granted, his letter was a tad 
off topic, and even a little below the general level of technical skill 
devlopment this list usually displays, but he asked, I replied, being a 
generally helpful person.

As for you rather personal question about my personal behavior last night, not 
that it is any of your business, the answer is: NOTHING. I'm stone cold sober, 
and was last night. Your assumption was and is dead wrong.

Your behavior in this matter is rather unprofessional sir, and uncharitible to 
those around us of lesser technical skill- and disrespectful to those more 
nearly your peer. This cannot but hamper your ongoing career in Information 
Technology.

I suggest you consider the many people who mentored you in your early days, and 
how they suffer your novice level questions gladly, and helped you along your 
way. There is a word: payforward, where we pay 'back' the tutilage and gentle 
patience given to us in the past, by helping others later on when we can. I 
encourage you to adopt such a charitible attitude.




-- 

end

Respectfully,
              Kirk D Bailey

  +                              think                                +
   http://www.howlermonkey.net  +-----+        http://www.tinylist.org
   http://www.listville.net     | BOX |  http://www.sacredelectron.org
   Thou art free"-ERIS          +-----+     'Got a light?'-Promethieus
  +                              think                                +

Fnord.


From idiot1 at netzero.net  Tue Aug 26 20:15:28 2003
From: idiot1 at netzero.net (Kirk Bailey)
Date: Fri Jan  9 21:53:46 2004
Subject: [mod_python] How do I serve up .html files?
In-Reply-To: <20030826043323.GL12023@itea.ntnu.no>
References: <16202.30596.238589.112878@desk.crynwr.com>
	<20030825213605.O1138@onyx.ispol.com> <3F4AC8FE.4070405@netzero.net>
	<20030826043323.GL12023@itea.ntnu.no>
Message-ID: <3F4BF820.3040501@netzero.net>



Stian S?iland wrote:

> On 2003-08-26 04:42:06, Kirk Bailey wrote:
> 
> 
>>When a browser accesses a html page, one includes a SSI exec tag. That 
>>means Server Side Include, exec(ute).
> 
> 
> What did you drink that night? This is the mod_python list, discussing
> mod_Python, not SSI =)
>

Stian, I sugggest you be nice, and not go trolling. He asked a basic question 
about how to get a html page to access a cgi program; Go back and read the 
letter he wrote. I was discussing exactly that. One gets a page to access a 
script with a ssi tag. He did NOT ask how to configure apache, or how mod_python 
works. He asked how to get a page when requested to acess a cgi program. I was 
addressing exactly that point, at a basic level. Granted, his letter was a tad 
off topic, and even a little below the general level of technical skill 
devlopment this list usually displays, but he asked, I replied, being a 
generally helpful person.

As for you rather personal question about my personal behavior last night, not 
that it is any of your business, the answer is: NOTHING. I'm stone cold sober, 
and was last night. Your assumption was and is dead wrong.

Your behavior in this matter is rather unprofessional sir, and uncharitible to 
those around us of lesser technical skill- and disrespectful to those more 
nearly your peer. This cannot but hamper your ongoing career in Information 
Technology.

I suggest you consider the many people who mentored you in your early days, and 
how they suffer your novice level questions gladly, and helped you along your 
way. There is a word: payforward, where we pay 'back' the tutilage and gentle 
patience given to us in the past, by helping others later on when we can. I 
encourage you to adopt such a charitible attitude.




-- 

end

Respectfully,
              Kirk D Bailey

  +                              think                                +
   http://www.howlermonkey.net  +-----+        http://www.tinylist.org
   http://www.listville.net     | BOX |  http://www.sacredelectron.org
   Thou art free"-ERIS          +-----+     'Got a light?'-Promethieus
  +                              think                                +

Fnord.

From mike.looijmans at asml.com  Wed Aug 27 07:21:05 2003
From: mike.looijmans at asml.com (Mike Looijmans)
Date: Fri Jan  9 21:53:46 2004
Subject: [mod_python] PythonDebug and Traceback
Message-ID: <01c36c5b$03517680$926a1e6e@wsasd464>

>Is there some way that you can have PythonDebug set to Off and still get
>a traceback (I'm using 2.7.8 mod_python against python 2.2.2)?

Sure, but you'll have to display it yourself. My script usually look like
this:

req.content_type="text/html"
writeheader(req, mytitle . . .)
try:
   # do some stuff (like connecting to the DB)
except:
   printexception(req)
printfooter(req, . . .)


--
The printexception() routine is defined as:
--

def formatexception():
   info = sys.exc_info()
    result = "\n<HR>\n<P><B>%s:</B> %s</P>\n" % info[:2]
    if verbose:
        import traceback
        result += '<PRE>' + "\n".join(traceback.format_tb(info[2])) +
'</PRE>\n'
    return result

def printexception(req=sys.stdout):
    req.write(formatexception())

--
The 'verbose' global variable can be turned off and on by sending a request
to the server.



-- 
The information contained in this communication and any attachments is confidential and may be privileged, and is for the sole use of the intended recipient(s). Any unauthorized review, use, disclosure or distribution is prohibited. If you are not the intended recipient, please notify the sender immediately by replying to this message and destroy all copies of this message and any attachments. ASML is neither liable for the proper and complete transmission of the information contained in this communication, nor for any delay in its receipt.


From mike.looijmans at asml.com  Wed Aug 27 07:38:01 2003
From: mike.looijmans at asml.com (Mike Looijmans)
Date: Fri Jan  9 21:53:46 2004
Subject: [mod_python] IPC, db conn sharing, and other fine things
Message-ID: <01c36c5d$60e6c280$926a1e6e@wsasd464>

>- nsv buckets --- nsv == NaviServer (AOLServer's original name) shared
>variables... they were effectively arrays that stored information
>accessible and modifiable by any running thread... perfect for caching
>database information for faster generation of dynamic pages...


In mod_python, just use global variables in modules. Use dictionary objects
as fast storage mechanism.


>- database connection pooling --- provided easy, standardized, and
>scalable access to existing database connections


Same as above: Use global variables.

>... obviously I could write some sort of
>caching daemon in Python that used UNIX sockets and some simple
>key/value pair protocol to do db data caching... or I could write some
>sort of db-pooling daemon...

Why not integrate it into one of your modules?
Once loaded, the module remains in memory. So you can have it start a daemon
thread and use that as your IPC server. I always design the pages such that
no IPC is needed, each page gets its data exclusively from the request and
the database. The database is a great way to exchange data anyway, performs
excellent and survives even a power-down.

>So I suppose what I'm asking is that is there any way natively in
>mod_python to support these enterprise critical features? And if not,
>how the hell do you guys who use mod_python manage to have massive
>hit-per-second sites without data caching?

Python is so powerful a language, that creating these "enterprise critical
features" in raw code is just something you do on the side. I don't put
these in a library because there's more work in maintaining that library
than just entering the code. A threadsafe DB pooling system takes about 5
lines of Python code to program, and you need only one for the whole
project.

I do a little caching for 'static' tables, something like:

cache = {}
...
try:
    data = cache[key]
except KeyError:
    c = db.cursor()
    c.execute(somequery % key)
    data = c.fetchall()[0][0]
    cache[key] = data
return data


Also, I did some experiments with our  MySQL database, and found that the
overhead in a DB connection creation is very, very low when the DBMS is on
the same host. I was unable to measure any difference in performance,
compared to running an SQL statement, connecting to the socket just didn't
take any time. I implemented DB connection pooling anyway.

When tuning performance, I tend to optimize the design, SQL and index trees,
that helps performance a lot more than fiddling with fancy features.
Database pooling helped about 1%, changing a primary key from a,b to b,a
increased performance by 300%.

Mike.



-- 
The information contained in this communication and any attachments is confidential and may be privileged, and is for the sole use of the intended recipient(s). Any unauthorized review, use, disclosure or distribution is prohibited. If you are not the intended recipient, please notify the sender immediately by replying to this message and destroy all copies of this message and any attachments. ASML is neither liable for the proper and complete transmission of the information contained in this communication, nor for any delay in its receipt.


From neel at mediapulse.com  Wed Aug 27 10:22:28 2003
From: neel at mediapulse.com (Michael C. Neel)
Date: Fri Jan  9 21:53:46 2004
Subject: [mod_python] PythonDebug and Traceback
Message-ID: <C0FC22C08B82074A88B50061764157776B9639@johnson.mediapulse.net>

> Sure, but you'll have to display it yourself. My script 
> usually look like
> this:

But that's the issue, I didn't display it myself and had PythonDebug Off
set and it still dissplayed a traceback :/  This isn't something I want
to do, it something I want to stop =)

Mike

From stian at soiland.no  Wed Aug 27 20:18:45 2003
From: stian at soiland.no (Stian =?iso-8859-1?Q?S=F8iland?=)
Date: Fri Jan  9 21:53:46 2004
Subject: [mod_python] How do I serve up .html files?
In-Reply-To: <3F4BF84C.7060200@netzero.net>
References: <16202.30596.238589.112878@desk.crynwr.com>
	<20030825213605.O1138@onyx.ispol.com> <3F4AC8FE.4070405@netzero.net>
	<20030826043323.GL12023@itea.ntnu.no> <3F4BF84C.7060200@netzero.net>
Message-ID: <20030827181845.GY28932@itea.ntnu.no>

On 2003-08-27 02:16:12, Kirk Bailey wrote:

> As for you rather personal question about my personal behavior last night, 
> not that it is any of your business, the answer is: NOTHING. I'm stone cold 
> sober, and was last night. Your assumption was and is dead wrong.

As my original email was sent to you in private, not to the list, it was
ment as a funny remark person-to-person. 

If you don't like getting personal emails, I'm sorry. I don't know you
for real and don't know for sure how you're going to interpet a stupid
try for a 'funny' comment. This is one of the problems communicating
electronically. I meant you no harm.

> Your behavior in this matter is rather unprofessional sir, and uncharitible 
> to those around us of lesser technical skill- and disrespectful to those 
> more nearly your peer. This cannot but hamper your ongoing career in 
> Information Technology.

I can't see the relevance of a personal side-comment to my
not-so-very-fast career in Information Technology =)

-- 
Stian S?iland               Work toward win-win situation. Win-lose
Trondheim, Norway           is where you win and the other lose.
http://www.soiland.no/      Lose-lose and lose-win are left as an
                            exercise to the reader.  [Limoncelli/Hogan]

From stian at soiland.no  Wed Aug 27 20:38:45 2003
From: stian at soiland.no (Stian =?iso-8859-1?Q?S=F8iland?=)
Date: Fri Jan  9 21:53:46 2004
Subject: [mod_python] How do I serve up .html files?
In-Reply-To: <3F4BF76D.5090300@netzero.net>
References: <16202.30596.238589.112878@desk.crynwr.com>
	<20030825213605.O1138@onyx.ispol.com> <3F4AC8FE.4070405@netzero.net>
	<20030826043323.GL12023@itea.ntnu.no> <3F4BF76D.5090300@netzero.net>
Message-ID: <20030827183845.GA28932@itea.ntnu.no>

On 2003-08-27 02:12:29, Kirk Bailey wrote:

(this is the non-personal answer about the TECHNICAL things, not
including my previous private answers.. =) )

> Stian, I sugggest you be nice, and not go trolling. He asked a basic 
> question about how to get a html page to access a cgi program; Go back and 
> read the letter he wrote. I was discussing exactly that. One gets a page to 
> access a script with a ssi tag. He did NOT ask how to configure apache, or 
> how mod_python works. He asked how to get a page when requested to acess a 
> cgi program. I was addressing exactly that point, at a basic level. 
> Granted, his letter was a tad off topic, and even a little below the 
> general level of technical skill devlopment this list usually displays, but 
> he asked, I replied, being a generally helpful person.

About the technical issue, CGI was never asked about, mod_python is
normally used INSTEAD of cgi. 

The question was really how to run a python handler for every possible
URL, not to include cgi-output withing HTML.

(in which case I would have solved it anyway by using the mod_python
solution presented in this thread)


A quick note about the SetHandler trick (I use it to get virtual URLs -
what I would like to see is some functionallity from Publisher (argument
parsing, return content-type-magic) - used together with virtual URLs.
Ie allowing /browse/some-switch.domain.com/switchports without actually
having the object "some-switch.domain.com" - the quick solution probably
being some __getattr__-magic) 


Remember that even though you SetHandler to something, 
you'll also need to set DirectoryIndex to some EXISTING FILE. I did this
error as I included all python code in the pythonpath and had no files
in the actual path. I used SetHandler nav.web.devBrowser.dispatcher
in .htaccess for a blank directory.

Now, DirectoryIndex could not simply be index.html, as there were no
file index.html. I created a file "index" in the otherwise blank
directory, set DirectoryIndex to "index", and everything worked.

If the file is removed, the blank directory listing is presented, but
other urls within the directory works.

(the handler receives the request as being to /index, and the file is
never actually read from disk due to SetHandler intercepting)

Now, some gurus might have a suggestion about getting rid of that empty
file. If so, please let me know! =)


Why not have the files inside the directory? Well, we've encountered
*some* problems with developers each making "index.py" (they 
previously programmed PHP!) - within the same namespace (ie.
Subinterpreter). This caused problems like getting some modules from
each of the users public_html directory. Funny!

We've used PythonInterpPerDirectory while developing, but needs to get
rid of that before merging code, as this eats database connections as a
horse. (remember, one connection pr database pr. interpreter pr.
apache.. scales up!)


-- 
Stian S?iland               Work toward win-win situation. Win-lose
Trondheim, Norway           is where you win and the other lose.
http://www.soiland.no/      Lose-lose and lose-win are left as an
                            exercise to the reader.  [Limoncelli/Hogan]

From neel at mediapulse.com  Wed Aug 27 15:25:52 2003
From: neel at mediapulse.com (Michael C. Neel)
Date: Fri Jan  9 21:53:46 2004
Subject: /index.html wierdness was: RE: [mod_python] How do I serve up .html
	files?
Message-ID: <C0FC22C08B82074A88B50061764157776B9644@johnson.mediapulse.net>

I've noticed this /index.html wierdness as well.  It seems (in 2.7.8 at
least) that unless there is a file in the document root called
index.html, mod_python is not called not matter if it's set in a
Location or Directory section.  I tested this with a simple:

def handler(req):
	assert 0, req.uri

With the conf of:

<Location />
        SetHandler python-program
        PythonHandler www
</Location>

and later with

<Directory /home/httpd/webroot>
        SetHandler python-program
        PythonHandler www
</Directory>

And would always get a directory listing (or an error lising not allowed
page) for site.com/, but every other url tried would throw the assert
execption.  If I create an empty index.html file in the document root,
apache does its internal redirect and my assert get's picked up on the
redirect.  This is only needed for the root though, I do not need to
create the sub dirs or index.html pages in them.

Mike

> -----Original Message-----
> From: Stian S?iland [mailto:stian@soiland.no] 
> Sent: Wednesday, August 27, 2003 2:39 PM
> To: mod_python@modpython.org
> Subject: Re: [mod_python] How do I serve up .html files?
> 
> Remember that even though you SetHandler to something, 
> you'll also need to set DirectoryIndex to some EXISTING FILE. 
> I did this
> error as I included all python code in the pythonpath and had no files
> in the actual path. I used SetHandler nav.web.devBrowser.dispatcher
> in .htaccess for a blank directory.
> 
> Now, DirectoryIndex could not simply be index.html, as there were no
> file index.html. I created a file "index" in the otherwise blank
> directory, set DirectoryIndex to "index", and everything worked.
> 
> If the file is removed, the blank directory listing is presented, but
> other urls within the directory works.
> 
> (the handler receives the request as being to /index, and the file is
> never actually read from disk due to SetHandler intercepting)
> 
> Now, some gurus might have a suggestion about getting rid of 
> that empty
> file. If so, please let me know! =)
> 
> 

From joshg at myrealbox.com  Wed Aug 27 14:58:27 2003
From: joshg at myrealbox.com (Joshua Adam Ginsberg)
Date: Fri Jan  9 21:53:46 2004
Subject: [mod_python] IPC, db conn sharing, and other fine things
Message-ID: <1062017906.5364.14.camel@gateway.localnet>

Hello Mike -

Thanks for taking the time to respond...

My data applications require that multiple clients be able to access
them. These clients include web clients and desktop clients on different
machines across the internet. Thus I build XML-RPC as the middle
language into everything I do. The web client never actually touches the
database. And thus on the server where a "front end" web server resides,
I rarely actually install a database.

Additionally, despite ever increasing horsepower in hardware and ever
increasing efficiency in databases, they sacrifice a lot of efficiency
for durability of data. For a caching system, persistence beyond a crash
isn't really necessary. For a component registering system, it gets
rebuilt every time the server is restarted.

Furthermore the users of my software generally need database features
not offered in MySQL, so I don't really use it very often. PostgreSQL is
probably the most common RDBMS I use.

As far as the global dictionaries suggestion, that will work within any
individual process, but each process will have to maintain their own
disparate cache and registry. I'd thought about it, and I'll probably
give it a shot just to see what the performance hit would be in running
them in each process.

For right now I've hacked together a flat file-based caching/registry
system using libxml2 and fcntl locking. It's performance will work,
though I really miss the speed of an all-in-memory caching/registry
system. *sigh* You make do with what you can.

Thanks again.

-jag

From cs1spw at bath.ac.uk  Wed Aug 27 19:55:15 2003
From: cs1spw at bath.ac.uk (Simon Willison)
Date: Fri Jan  9 21:53:46 2004
Subject: [mod_python] 
 Newbie question: setting all calls to a certain directory to beprocessed
 by a script
Message-ID: <3F4D52F3.1090405@bath.ac.uk>

Hi all,

I'm new to mod_python, and I'm just beginning to get my feet wet. I'm 
currently setting directives in .htaccess files because I don't want to 
mess around too much with my httpd.conf file. I want to set it up so 
that ALL calls to a certain directory are handled by a handle() function 
in a specific file.

The mod_python documentation shows how to do this for any files ending 
in .py:

AddHandler python-program .py
PythonHandler myscript

I understand that the above passes all requests for URLs in the 
directory ending with .py to the handle() function I've defined in 
myscript.py in that directory. I'm a big fan of "tidy" URLs, and try to 
avoid having any file extension on URLs at all. Ideally, I would like to 
set up a rule so that any requests for files that do NOT end in .jpg, 
.js, .gif or .css are handed off to the handle() function in the file of 
my choice. If that isn't possible, I'd like to set it up so that all 
requests within the directory in which my .htaccess file lives are 
handled by the one handle() function.

Thanks,

Simon Willison


From cs1spw at bath.ac.uk  Wed Aug 27 20:17:13 2003
From: cs1spw at bath.ac.uk (Simon Willison)
Date: Fri Jan  9 21:53:46 2004
Subject: [mod_python]  Newbie question: setting all calls to a certain
 directory to beprocessed by a script
In-Reply-To: <3F4D52F3.1090405@bath.ac.uk>
References: <3F4D52F3.1090405@bath.ac.uk>
Message-ID: <3F4D5819.70200@bath.ac.uk>

Simon Willison wrote:
> Ideally, I would like to 
> set up a rule so that any requests for files that do NOT end in .jpg, 
> .js, .gif or .css are handed off to the handle() function in the file of 
> my choice. If that isn't possible, I'd like to set it up so that all 
> requests within the directory in which my .htaccess file lives are 
> handled by the one handle() function.

Well, I've worked out the second option. My .htaccess file now looks 
like this:

SetHandler python-program
PythonHandler handler
PythonDebug On

This sends ALL requests to stuff within that directory to handler.py's 
handler() function. I've drawn a blank on getting it not to do this with 
images. I tried the following:

AddHandler default-handler .html .jpeg .jpg .gif .css .js
SetHandler python-program
PythonHandler handler
PythonDebug On

But this didn't work - presumably because the SetHandler over-rides the 
AddHandler directive. I tried changing their order but didn't have any 
luck there either.

Any help on this would be greatly appreciated :)

Thanks,

Simon


From synec at viscous.org  Wed Aug 27 18:31:58 2003
From: synec at viscous.org (john spurling)
Date: Fri Jan  9 21:53:47 2004
Subject: [mod_python]  Newbie question: setting all calls to a certain
	directory to beprocessed by a script
In-Reply-To: <3F4D5819.70200@bath.ac.uk>
References: <3F4D52F3.1090405@bath.ac.uk> <3F4D5819.70200@bath.ac.uk>
Message-ID: <20030828013158.GD21916@c7c8.colobox.com>

On Wed, Aug 27, 2003 at 08:17:13PM -0500, Simon Willison wrote:
> Simon Willison wrote:
> >Ideally, I would like to 
> >set up a rule so that any requests for files that do NOT end in .jpg, 
> >.js, .gif or .css are handed off to the handle() function in the file of 
> >my choice. If that isn't possible, I'd like to set it up so that all 
> >requests within the directory in which my .htaccess file lives are 
> >handled by the one handle() function.
> 
> Well, I've worked out the second option. My .htaccess file now looks 
> like this:
> 
> SetHandler python-program
> PythonHandler handler
> PythonDebug On

good show. using this setting, try this handler:

from mod_python import apache
_types_to_skip = ['jpg', 'gif', 'png']
def handler(req):
    try:
    file_extention = req.uri.split('.')[-1].lower()
    if file_extention in _types_to_skip:
        return apache.DECLINED
    except:
        pass

this will tell apache to go on to another handler for requests ending
in any of the above extensions.

let us know if you have further questions.

-john

-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
Url : http://mailman.modpython.org/pipermail/mod_python/attachments/20030827/62e64362/attachment-0001.bin
From cs1spw at bath.ac.uk  Wed Aug 27 21:15:27 2003
From: cs1spw at bath.ac.uk (Simon Willison)
Date: Fri Jan  9 21:53:47 2004
Subject: [mod_python]  Newbie question: setting all calls to a certain
 directory to beprocessed by a script
In-Reply-To: <20030828013158.GD21916@c7c8.colobox.com>
References: <3F4D52F3.1090405@bath.ac.uk> <3F4D5819.70200@bath.ac.uk>
	<20030828013158.GD21916@c7c8.colobox.com>
Message-ID: <3F4D65BF.9080901@bath.ac.uk>

john spurling wrote:
> good show. using this setting, try this handler:
> 
> from mod_python import apache
> _types_to_skip = ['jpg', 'gif', 'png']
> def handler(req):
>     try:
>     file_extention = req.uri.split('.')[-1].lower()
>     if file_extention in _types_to_skip:
>         return apache.DECLINED
>     except:
>         pass

Fantastic. The apache.DECLINED bit is what I was missing. It even does a 
proper 404 error now if the requested image file isn't found.

Thanks for the prompt reply!

Simon Willison
http://simon.incutio.com/


From nelson at crynwr.com  Wed Aug 27 22:23:27 2003
From: nelson at crynwr.com (Russell Nelson)
Date: Fri Jan  9 21:53:47 2004
Subject: [mod_python] 
 Newbie question: setting all calls to a certain directory to beprocessed
 by a script
In-Reply-To: <3F4D52F3.1090405@bath.ac.uk>
References: <3F4D52F3.1090405@bath.ac.uk>
Message-ID: <16205.26527.695930.55664@desk.crynwr.com>

Simon Willison writes:
 > my choice. If that isn't possible, I'd like to set it up so that all 
 > requests within the directory in which my .htaccess file lives are 
 > handled by the one handle() function.

Simon, Simon, Simon, where were you last week?  I could have read the
answer to your question, and avoided having to post my question
earlier this week.  It's pretty easy.  Do it like this:

<Directory "/var/www/ae.russnelson.com">
SetHandler python-program
PythonHandler publish
</Directory>

The SetHandler says that everything should be handled by the
python-program.  The PythonHandler says that the name of the script is
publish.py.  Here's a simple publish.py.  I'll be publishing a more
complicated example later once I finish porting my blogging code over
to mod_python.  It's currently stand-alone code that writes static
HTML pages.  The astute observer will notice the constant "if 1" whose
unreachable clause calls page().  That code returns an HTML document
given the pathname that the user handed in.  Note that you'll never
get the null string, but instead 'index.html' or as configured
elsewhere.

#!/usr/bin/env python

from mod_python import apache
import sys, os, re, string

homedir = "/var/www/ae.russnelson.com/"

def handler(req):
    if 1:
        req.content_type = "text/plain"
        req.send_http_header()
        req.write("Hello World!\n")
        req.write('uri:'+req.uri+'\n')
        req.write('filename:'+req.filename+'\n')
        req.write('path_info:'+req.path_info+'\n')
        if req.args: req.write('args:'+req.args+'\n')
    else:
        req.content_type = "text/html"
        req.send_http_header()
        req.write(page(req.filename[len(homedir):]))
    return apache.OK


-- 
--My blog is at angry-economist.russnelson.com  | Free markets express in the
Crynwr sells support for free software  | PGPok | practical world our belief
521 Pleasant Valley Rd. | +1 315 268 1925 voice | that there is that of God
Potsdam, NY 13676-3213  | +1 315 268 9201 FAX   | in all people. -Chris V.
From grisha at modpython.org  Wed Aug 27 22:35:42 2003
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 21:53:47 2004
Subject: [mod_python]  Newbie question: setting all calls to a certain
 directory to beprocessed by a script
In-Reply-To: <3F4D5819.70200@bath.ac.uk>
References: <3F4D52F3.1090405@bath.ac.uk> <3F4D5819.70200@bath.ac.uk>
Message-ID: <20030827223418.L24141@onyx.ispol.com>



On Wed, 27 Aug 2003, Simon Willison wrote:
> AddHandler default-handler .html .jpeg .jpg .gif .css .js
> SetHandler python-program
> PythonHandler handler
> PythonDebug On


How about

SetHandler python-program
PythonHandler handler | .html .jpeg .jpg .gif .css .js
PythonDebug On


Grisha
From rey4 at columbia.edu  Wed Aug 27 19:31:54 2003
From: rey4 at columbia.edu (Russell Yanofsky)
Date: Fri Jan  9 21:53:47 2004
Subject: [mod_python] Re: IPC, db conn sharing, and other fine things
References: <1062017906.5364.14.camel@gateway.localnet>
Message-ID: <bijqkm$9br$1@sea.gmane.org>

Joshua Adam Ginsberg wrote:
> For right now I've hacked together a flat file-based caching/registry
> system using libxml2 and fcntl locking. It's performance will work,
> though I really miss the speed of an all-in-memory caching/registry
> system. *sigh* You make do with what you can.

What is preventing you from caching the file contents in memory? Mod_python
lets you store persistent data in global variables.

- Russ


From grisha at modpython.org  Wed Aug 27 22:51:46 2003
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 21:53:47 2004
Subject: [mod_python]  Newbie question: setting all calls to a certain
 directory to beprocessed by a script
In-Reply-To: <16205.26527.695930.55664@desk.crynwr.com>
References: <3F4D52F3.1090405@bath.ac.uk>
	<16205.26527.695930.55664@desk.crynwr.com>
Message-ID: <20030827224827.K24141@onyx.ispol.com>


Call me stupid, but I don't get it :-)

What's the point of the else clause if it's never reached?

Grisha

On Wed, 27 Aug 2003, Russell Nelson wrote:

> The astute observer will notice the constant "if 1" whose unreachable
> clause calls page().  That code returns an HTML document given the
> pathname that the user handed in.  Note that you'll never get the null
> string, but instead 'index.html' or as configured elsewhere.
>
> #!/usr/bin/env python
>
> from mod_python import apache
> import sys, os, re, string
>
> homedir = "/var/www/ae.russnelson.com/"
>
> def handler(req):
>     if 1:
>         req.content_type = "text/plain"
>         req.send_http_header()
>         req.write("Hello World!\n")
>         req.write('uri:'+req.uri+'\n')
>         req.write('filename:'+req.filename+'\n')
>         req.write('path_info:'+req.path_info+'\n')
>         if req.args: req.write('args:'+req.args+'\n')
>     else:
>         req.content_type = "text/html"
>         req.send_http_header()
>         req.write(page(req.filename[len(homedir):]))
>     return apache.OK
>
From nelson at crynwr.com  Wed Aug 27 23:09:09 2003
From: nelson at crynwr.com (Russell Nelson)
Date: Fri Jan  9 21:53:47 2004
Subject: [mod_python]  Newbie question: setting all calls to a certain
 directory to beprocessed by a script
In-Reply-To: <20030827224827.K24141@onyx.ispol.com>
References: <3F4D52F3.1090405@bath.ac.uk>
	<16205.26527.695930.55664@desk.crynwr.com>
	<20030827224827.K24141@onyx.ispol.com>
Message-ID: <16205.29269.480823.763670@desk.crynwr.com>

Gregory (Grisha) Trubetskoy writes:
 > 
 > What's the point of the else clause if it's never reached?

It's ... oversimple example code.  Ordinarily it reads "if 0".

-- 
--My blog is at angry-economist.russnelson.com  | Free markets express in the
Crynwr sells support for free software  | PGPok | practical world our belief
521 Pleasant Valley Rd. | +1 315 268 1925 voice | that there is that of God
Potsdam, NY 13676-3213  | +1 315 268 9201 FAX   | in all people. -Chris V.
From cs1spw at bath.ac.uk  Wed Aug 27 22:51:32 2003
From: cs1spw at bath.ac.uk (Simon Willison)
Date: Fri Jan  9 21:53:47 2004
Subject: [mod_python] Strange caching problem
Message-ID: <3F4D7C44.2020504@bath.ac.uk>

I'm experimenting with the idea that mod_python stays resident in 
memory. Here's the handler script I'm using:

from mod_python import apache

counter = 0

def handler(req):
     req.content_type = 'text/html'
     req.send_http_header()
     global counter
     counter = counter + 1
     req.write("Counter: %d" % counter)
     return apache.OK

If I load it up in a browser and continuously hit refresh, the number 
only increments every 4 or 5 page loads. I was expecting it to increment 
each time. Don't worry - this isn't how I intend to implement a page 
counter, it's just an experiment I'm using to try and gain a better 
understanding of this capability.

The above problem is unsevere, but I've also been having issues with the 
following script:

from mod_python import apache

def handler(req):
     req.content_type = 'text/html'
     req.send_http_header()
     req.write('unparsed_uri: %s' % req.unparsed_uri)
     return apache.OK

When I visit the following URL:

http://myserver/~simon/1

It displays this, as expected:

unparsed_uri: /~simon/1

If I then visit the following:

http://myserver/~simon/2

It continues to show the same string. I have to hit enter in my 
browser's location bar several times before it will notice that I've 
entered a different URL.

This is a major problem, as my aim is to serve up different content 
depending on the URL. If the system isn't noticing the different URLs 
for some reason it becomes unusable!

Thanks,

Simon




From synec at viscous.org  Wed Aug 27 21:07:18 2003
From: synec at viscous.org (john spurling)
Date: Fri Jan  9 21:53:47 2004
Subject: [mod_python] Strange caching problem
In-Reply-To: <3F4D7C44.2020504@bath.ac.uk>
References: <3F4D7C44.2020504@bath.ac.uk>
Message-ID: <20030828040717.GE21916@c7c8.colobox.com>

On Wed, Aug 27, 2003 at 10:51:32PM -0500, Simon Willison wrote:
> I'm experimenting with the idea that mod_python stays resident in 
> memory. Here's the handler script I'm using:
> 
> from mod_python import apache
> 
> counter = 0
> 
> def handler(req):
>     req.content_type = 'text/html'
>     req.send_http_header()
>     global counter
>     counter = counter + 1
>     req.write("Counter: %d" % counter)
>     return apache.OK
> 
> If I load it up in a browser and continuously hit refresh, the number 
> only increments every 4 or 5 page loads. I was expecting it to increment 
> each time. Don't worry - this isn't how I intend to implement a page 
> counter, it's just an experiment I'm using to try and gain a better 
> understanding of this capability.

grep for "StartServers" in your httpd.conf. i'm guessing it's about 4
or 5. 

i had this same problem when implementing sessions. each httpd
instance has its own individual python interpreter. you might just
want to set StartServers to 1 while playing around, but then don't
forget to increase it before "shipping" any code so you don't
inadvertantly write a bug like you have in the above example
code. it's easy to do.

cheers,
john



-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
Url : http://mailman.modpython.org/pipermail/mod_python/attachments/20030827/f318d6e2/attachment-0001.bin
From cs1spw at bath.ac.uk  Wed Aug 27 23:19:00 2003
From: cs1spw at bath.ac.uk (Simon Willison)
Date: Fri Jan  9 21:53:47 2004
Subject: [mod_python] Strange caching problem
In-Reply-To: <20030828040717.GE21916@c7c8.colobox.com>
References: <3F4D7C44.2020504@bath.ac.uk>
	<20030828040717.GE21916@c7c8.colobox.com>
Message-ID: <3F4D82B4.4060003@bath.ac.uk>

john spurling wrote:
>>If I load it up in a browser and continuously hit refresh, the number 
>>only increments every 4 or 5 page loads. I was expecting it to increment 
>>each time. Don't worry - this isn't how I intend to implement a page 
>>counter, it's just an experiment I'm using to try and gain a better 
>>understanding of this capability.
> 
> grep for "StartServers" in your httpd.conf. i'm guessing it's about 4
> or 5. 

The lights just came on. This has a pretty big impact on application 
design. Presumably it means that the "shared memory" ability of 
mod_python (where global variables in a module are accessible to 
multiple requests) is only really useful as a performance enhancement - 
data loaded from the filesystem or database that is unlikely to change 
can be held in memory, but it's a bad idea to change that data as it 
won't be there for all 4 or 5 Apache processes.

Thanks again,

Simon


From ktimm at var-log.com  Wed Aug 27 23:19:45 2003
From: ktimm at var-log.com (ktimm)
Date: Fri Jan  9 21:53:47 2004
Subject: [mod_python] Mod python sys.stdin 
Message-ID: <004701c36d1b$9d497f10$0a01a8c0@toshibauser>

How do I get at sys.stdin with mod_python publisher. I know it's probably something simple but I'm trying to convert an xml parser that was getting though a cgi on sys.stdin and it keeps returning that there is no data to parse. 

Thanks 
Kevin 
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mailman.modpython.org/pipermail/mod_python/attachments/20030827/72e29dac/attachment-0001.htm
From davidf at sjsoft.com  Thu Aug 28 07:40:55 2003
From: davidf at sjsoft.com (David Fraser)
Date: Fri Jan  9 21:53:47 2004
Subject: [mod_python] Strange caching problem
In-Reply-To: <3F4D82B4.4060003@bath.ac.uk>
References: <3F4D7C44.2020504@bath.ac.uk>
	<20030828040717.GE21916@c7c8.colobox.com> <3F4D82B4.4060003@bath.ac.uk>
Message-ID: <3F4D95E7.6080602@sjsoft.com>

Simon Willison wrote:

> john spurling wrote:
>
>>> If I load it up in a browser and continuously hit refresh, the 
>>> number only increments every 4 or 5 page loads. I was expecting it 
>>> to increment each time. Don't worry - this isn't how I intend to 
>>> implement a page counter, it's just an experiment I'm using to try 
>>> and gain a better understanding of this capability.
>>
>>
>> grep for "StartServers" in your httpd.conf. i'm guessing it's about 4
>> or 5. 
>
>
> The lights just came on. This has a pretty big impact on application 
> design. Presumably it means that the "shared memory" ability of 
> mod_python (where global variables in a module are accessible to 
> multiple requests) is only really useful as a performance enhancement 
> - data loaded from the filesystem or database that is unlikely to 
> change can be held in memory, but it's a bad idea to change that data 
> as it won't be there for all 4 or 5 Apache processes.
>
> Thanks again,
>
> Simon

mod_python 3.1alpha which is soon to be released has support for real 
shared memory that can be accessed by all the interpreters

David

From mike.looijmans at asml.com  Thu Aug 28 08:29:58 2003
From: mike.looijmans at asml.com (Mike Looijmans)
Date: Fri Jan  9 21:53:47 2004
Subject: [mod_python] IPC, db conn sharing, and other fine things
Message-ID: <01c36d2d$cd30f700$926a1e6e@wsasd464>

>As far as the global dictionaries suggestion, that will work within any
>individual process, but each process will have to maintain their own
>disparate cache and registry. I'd thought about it, and I'll probably
>give it a shot just to see what the performance hit would be in running
>them in each process.


One simple way to solve this is to force Apache into threading. I'm using
the MPM worker here (Solaris), so that over 20 connections share the same
process (but different threads). This works well for publisher and common
handlers, but this will NOT work for the cgihandler (which only allows one
active thread). A big advantage of the (worker) threading mpm is that you
only need one Python interpreter 'in the air', saving a few megabytes for
each child.

Simple multi-read-single-write strategy:

cachelock = threading.Lock()
#...

try:
    result = cache[key]
except KeyError:
    cachelock.aquire()
    try:
        # Read again, since some other thread may have done
        # the same now
        try:
            result = cache[key]
        except KeyError:
            result = someFetchingFunction(key)
            cache[key] = result
    finally:
        cachelock.release()
return result

With multiple processes, each process will gather the neccesary cache data
as it goes, so initially the system will be a bit slower but ramps up rather
quick as more data is cached. However, this does eat quite some memory, all
cache data is duplicated for each process.

>For right now I've hacked together a flat file-based caching/registry
>system using libxml2 and fcntl locking. It's performance will work,
>though I really miss the speed of an all-in-memory caching/registry
>system. *sigh* You make do with what you can.

I think there are some Python shared memory (across processes) libraries,
they might be worth looking into. You could also write some caching code
based on shared memory in C and package it into a .so library and load it
into Python.

The filesystem is not so bad, most of it is cached in memory anyway. Some
OSses support in-memory files, that might be a nice one too.

Mike.



-- 
The information contained in this communication and any attachments is confidential and may be privileged, and is for the sole use of the intended recipient(s). Any unauthorized review, use, disclosure or distribution is prohibited. If you are not the intended recipient, please notify the sender immediately by replying to this message and destroy all copies of this message and any attachments. ASML is neither liable for the proper and complete transmission of the information contained in this communication, nor for any delay in its receipt.


From davidf at sjsoft.com  Thu Aug 28 09:49:37 2003
From: davidf at sjsoft.com (David Fraser)
Date: Fri Jan  9 21:53:47 2004
Subject: [mod_python] IPC, db conn sharing, and other fine things
In-Reply-To: <01c36d2d$cd30f700$926a1e6e@wsasd464>
References: <01c36d2d$cd30f700$926a1e6e@wsasd464>
Message-ID: <3F4DB411.7070109@sjsoft.com>

Mike Looijmans wrote:

>>For right now I've hacked together a flat file-based caching/registry
>>system using libxml2 and fcntl locking. It's performance will work,
>>though I really miss the speed of an all-in-memory caching/registry
>>system. *sigh* You make do with what you can.
>>    
>>
>
>I think there are some Python shared memory (across processes) libraries,
>they might be worth looking into. You could also write some caching code
>based on shared memory in C and package it into a .so library and load it
>into Python.
>
>The filesystem is not so bad, most of it is cached in memory anyway. Some
>OSses support in-memory files, that might be a nice one too.
>
>Mike.
>
>
>  
>
See the soon-to-be released mod_python 3.1 alpha for mod_python support 
for shared memory.
That's a much easier route than trying to sort it all out yourself...

David

From azaroth at liverpool.ac.uk  Thu Aug 28 11:47:39 2003
From: azaroth at liverpool.ac.uk (Robert Sanderson)
Date: Fri Jan  9 21:53:47 2004
Subject: [mod_python] IPC, db conn sharing, and other fine things
In-Reply-To: <3F4DB411.7070109@sjsoft.com>
Message-ID: <Pine.LNX.4.44.0308281146590.1331-100000@gondolin.hist.liv.ac.uk>

On Thu, 28 Aug 2003, David Fraser wrote:
> Mike Looijmans wrote:

> >I think there are some Python shared memory (across processes) libraries,
> >they might be worth looking into. You could also write some caching code
> >based on shared memory in C and package it into a .so library and load it
> >into Python.

> See the soon-to-be released mod_python 3.1 alpha for mod_python support 
> for shared memory.
> That's a much easier route than trying to sort it all out yourself...

That's awesome news, David.  Any ideas when the code is likely to touch 
down?

Rob

-- 
      ,'/:.          Dr Robert Sanderson (azaroth@liverpool.ac.uk)
    ,'-/::::.        http://www.o-r-g.org/~azaroth/
  ,'--/::(@)::.      Special Collections and Archives, extension 3142
,'---/::::::::::.    Nebmedes:  telnet: nebmedes.o-r-g.org 7777
____/:::::::::::::.                WWW: http://nebmedes.o-r-g.org:8000/
I L L U M I N A T I

From davidf at sjsoft.com  Thu Aug 28 14:22:59 2003
From: davidf at sjsoft.com (David Fraser)
Date: Fri Jan  9 21:53:47 2004
Subject: [mod_python] IPC, db conn sharing, and other fine things
In-Reply-To: <Pine.LNX.4.44.0308281146590.1331-100000@gondolin.hist.liv.ac.uk>
References: <Pine.LNX.4.44.0308281146590.1331-100000@gondolin.hist.liv.ac.uk>
Message-ID: <3F4DF423.9010801@sjsoft.com>

Robert Sanderson wrote:

>On Thu, 28 Aug 2003, David Fraser wrote:
>  
>
>>Mike Looijmans wrote:
>>    
>>
>
>  
>
>>>I think there are some Python shared memory (across processes) libraries,
>>>they might be worth looking into. You could also write some caching code
>>>based on shared memory in C and package it into a .so library and load it
>>>into Python.
>>>      
>>>
>
>  
>
>>See the soon-to-be released mod_python 3.1 alpha for mod_python support 
>>for shared memory.
>>That's a much easier route than trying to sort it all out yourself...
>>    
>>
>
>That's awesome news, David.  Any ideas when the code is likely to touch 
>down?
>
>Rob
>
>  
>
Guido is busy preparing it for release now, but remember that this will 
be an alpha version, I don't know how long it will take to stabilize...
Still if you're planning on doing shared memory stuff it would make more 
sense to help get 3.1 to a stable state than to write your own.
If you're interested in helping develop, join the 
python-dev@httpd.apache.org mailing list.

David


From grisha at modpython.org  Thu Aug 28 09:19:50 2003
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 21:53:47 2004
Subject: [mod_python] IPC, db conn sharing, and other fine things
In-Reply-To: <3F4DF423.9010801@sjsoft.com>
References: <Pine.LNX.4.44.0308281146590.1331-100000@gondolin.hist.liv.ac.uk>
 <3F4DF423.9010801@sjsoft.com>
Message-ID: <20030828091445.B37161@onyx.ispol.com>



On Thu, 28 Aug 2003, David Fraser wrote:

> Guido is busy preparing it for release now,

ROTFL! (It'd be nice if he was thought)

One small correction - 3.1 doesn't do anything with shared memory, it uses
dbm to store data across processes. It can also store session data in real
memory, but for that you have to be on a single-process multithreaded MPM,
such as winnt, or worker if it is configured to run with only one process.

Grisha
From grisha at apache.org  Thu Aug 28 21:12:50 2003
From: grisha at apache.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 21:53:47 2004
Subject: [mod_python] ANNOUNCE: Mod_python 3.1.0 Alpha
Message-ID: <20030828210644.C43921@onyx.ispol.com>


The Apache Software Foundation and The Apache HTTP Server Project are
pleased to announce the 3.1.0 ALPHA release mod_python.

Some feature highlights:

* Server-side sessions with memory or dbm-based storage and session
locking support.

* PSP - a fast flex-based scanner which allows embedding Python code
within HTML.

* Native cookie support, including support for automatic cryptographic
cookie signing and marshalling.

* Compatibility with Python 2.3, as well as many other enhancements.

Alpha releases are NOT considered stable and do contain bugs. Some
functionality may change before the first beta release.

This release is intended to solicit widespread testing of the code. We
strongly recommend that you try out your existing applications and
experiment with new features in a non-production environment using this
version and report any problems you may encounter so that they can be
addressed before the final release.

Mod_python 3.1.0a is available for download from:

http://httpd.apache.org/modules/python-download.cgi

Preferred method of providing feedback is the mod_python user list
mod_python@modpython.org (due to spam, you must subscribe to post).

For more information about mod_python visit
http://www.modpython.org/

Thank You,

Grisha Trubetskoy

From nelson at crynwr.com  Thu Aug 28 21:30:36 2003
From: nelson at crynwr.com (Russell Nelson)
Date: Fri Jan  9 21:53:47 2004
Subject: [mod_python] ANNOUNCE: Mod_python 3.1.0 Alpha
In-Reply-To: <20030828210644.C43921@onyx.ispol.com>
References: <20030828210644.C43921@onyx.ispol.com>
Message-ID: <16206.44220.488158.417635@desk.crynwr.com>

Gregory (Grisha) Trubetskoy writes:
 > 
 > The Apache Software Foundation and The Apache HTTP Server Project are
 > pleased to announce the 3.1.0 ALPHA release mod_python.

Hrm.  When is there going to be an i386 release?

-- 
:-)My blog is at angry-economist.russnelson.com  | Free markets express in the
Crynwr sells support for free software  | PGPok | practical world our belief
521 Pleasant Valley Rd. | +1 315 268 1925 voice | that there is that of God
Potsdam, NY 13676-3213  | +1 315 268 9201 FAX   | in all people. -Chris V.
From mike.looijmans at asml.com  Fri Aug 29 08:56:31 2003
From: mike.looijmans at asml.com (Mike Looijmans)
Date: Fri Jan  9 21:53:47 2004
Subject: [mod_python] Mod python sys.stdin 
Message-ID: <01c36dfa$ad1b3980$926a1e6e@wsasd464>

Don't use publisher if you want to read the request (e.g. from a POST)
directly. Publisher will have eaten the whole request before calling your
function.

Use a standard "handler", e.g. this (untested) one lets anyone POST a file
to the system in a cetain path, and report back how large it was and where
it was placed:

BUFSIZE=10240
SOMEBASEPATH = '/usr/local/uploads'

def handler(req):
    req.content_type = 'text/plain'
    destfilename = SOMEBASEPATH + req.path_info
    req.write('Writing: %s\n' % destfilename)
    dstfile = open(destfilename, 'wb')
    srcfile = req
    data = srcfile.read(BUFSIZE)
    c = 0
    while data:
        dstfile.write(data)
        c += len(data)
        data = srcfile.read(BUFSIZE)
    req.write('Wrote: %s bytes\n' % c)
    return apache.OK



-----Original Message-----
From: ktimm <ktimm@var-log.com>
To: mod_python@modpython.org <mod_python@modpython.org>
Date: Thursday, August 28, 2003 6:23 AM
Subject: [mod_python] Mod python sys.stdin


How do I get at sys.stdin with mod_python publisher. I know it's probably
something simple but I'm trying to convert an xml parser that was getting
though a cgi on sys.stdin and it keeps returning that there is no data to
parse.

Thanks
Kevin



-- 
The information contained in this communication and any attachments is confidential and may be privileged, and is for the sole use of the intended recipient(s). Any unauthorized review, use, disclosure or distribution is prohibited. If you are not the intended recipient, please notify the sender immediately by replying to this message and destroy all copies of this message and any attachments. ASML is neither liable for the proper and complete transmission of the information contained in this communication, nor for any delay in its receipt.


From wart at softhome.net  Fri Aug 29 11:34:14 2003
From: wart at softhome.net (Wartan Hachaturow)
Date: Fri Jan  9 21:53:47 2004
Subject: [mod_python] ANNOUNCE: Mod_python 3.1.0 Alpha
In-Reply-To: <16206.44220.488158.417635@desk.crynwr.com>
References: <20030828210644.C43921@onyx.ispol.com>
	<16206.44220.488158.417635@desk.crynwr.com>
Message-ID: <20030829073413.GA65122@daemon.tepkom.ru>

On Thu, Aug 28, 2003 at 09:30:36PM -0400, Russell Nelson wrote:

>  > pleased to announce the 3.1.0 ALPHA release mod_python.
> 
> Hrm.  When is there going to be an i386 release?

Don't forget that it's also available in the source form -- you're
free to port ;))

-- 
Regards, Wartan.
From gstein at lyra.org  Fri Aug 29 03:43:00 2003
From: gstein at lyra.org (Greg Stein)
Date: Fri Jan  9 21:53:47 2004
Subject: [mod_python] ANNOUNCE: Mod_python 3.1.0 Alpha
In-Reply-To: <20030829073413.GA65122@daemon.tepkom.ru>;
	from wart@softhome.net on Fri, Aug 29, 2003 at 11:34:14AM +0400
References: <20030828210644.C43921@onyx.ispol.com>
	<16206.44220.488158.417635@desk.crynwr.com>
	<20030829073413.GA65122@daemon.tepkom.ru>
Message-ID: <20030829034300.C12609@lyra.org>

> On Thu, Aug 28, 2003 at 09:30:36PM -0400, Russell Nelson wrote:
> 
> >  > pleased to announce the 3.1.0 ALPHA release mod_python.
> > 
> > Hrm.  When is there going to be an i386 release?

There wasn't a smiley here, so just to be sure: it's an alpha quality
release, not an Alpha architecture binary or something like that.

(knowing Russell's been around the industry for a _long_ time, I gotta
 believe he knew that, but that missing smiley... :-)

Cheers,
-g

-- 
Greg Stein, http://www.lyra.org/
From lairdshaw at yahoo.com.au  Fri Aug 29 20:44:41 2003
From: lairdshaw at yahoo.com.au (Laird Shaw)
Date: Fri Jan  9 21:53:47 2004
Subject: [mod_python] 
	Apache startup error using mod_python under Windows 2000 (have
	msvcr70.dll)
Message-ID: <001901c36e1a$95954a60$0a00a8c0@laird>

Hi all,

Apologies if I've missed the answer to this question somewhere, but I've
searched to no avail.

Whilst attempting to start, Apache fails with:

Syntax error on line 175 of C:/Program Files/Apache
Group/Apache2/conf/httpd.conf:
Cannot load C:/Program Files/Apache Group/Apache2/modules/mod_python.so into
server: The specified module could not be found.

I've checked that I've specified the correct path to mod_python.so.

I saw in another post that msvcr70.dll is required, and duly downloaded and
copied it into winnt\system32, believing I had solved the problem.  Alas, no
such luck.  Same error.

OS = Windows 2000 5.00.2195, Service pack 4
Python = 2.3
Apache = 2.0.47
msvcr70.dll = 7.00.9064.0

This is the relevent part of httpd.conf:

LoadModule python_module modules/mod_python.so

<Directory C:/data/webroot/htdocs>
  AddHandler python-program .py
  PythonHandler mptest
  PythonDebug On
</Directory>

As an aside, I am also running mod_perl and php4apache2 - but I don't
imagine they would affect anything.

I'm new to python - haven't even written a single line of code yet, however
I have run the interpreter to verify that it installed properly.

I have added C:\python23 to my path but haven't set any other environment
variables.

Thanks in advance,

Laird

From davidf at sjsoft.com  Fri Aug 29 13:20:33 2003
From: davidf at sjsoft.com (David Fraser)
Date: Fri Jan  9 21:53:47 2004
Subject: [mod_python] 	Apache startup error using mod_python under Windows
	2000 (have	msvcr70.dll)
In-Reply-To: <001901c36e1a$95954a60$0a00a8c0@laird>
References: <001901c36e1a$95954a60$0a00a8c0@laird>
Message-ID: <3F4F3701.3000401@sjsoft.com>

Laird Shaw wrote:

>Hi all,
>
>Apologies if I've missed the answer to this question somewhere, but I've
>searched to no avail.
>
>Whilst attempting to start, Apache fails with:
>
>Syntax error on line 175 of C:/Program Files/Apache
>Group/Apache2/conf/httpd.conf:
>Cannot load C:/Program Files/Apache Group/Apache2/modules/mod_python.so into
>server: The specified module could not be found.
>
>I've checked that I've specified the correct path to mod_python.so.
>
>I saw in another post that msvcr70.dll is required, and duly downloaded and
>copied it into winnt\system32, believing I had solved the problem.  Alas, no
>such luck.  Same error.
>
>OS = Windows 2000 5.00.2195, Service pack 4
>Python = 2.3
>Apache = 2.0.47
>msvcr70.dll = 7.00.9064.0
>  
>
I've had exactly the same problem, with a new Win2000 virtual machine, 
same versions of Python and Apache.
Didn't try add the dll though.

David


From grisha at modpython.org  Fri Aug 29 09:53:10 2003
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 21:53:47 2004
Subject: [mod_python] Apache startup error using mod_python under Windows
 2000 (have msvcr70.dll)
In-Reply-To: <3F4F3701.3000401@sjsoft.com>
References: <001901c36e1a$95954a60$0a00a8c0@laird>
	<3F4F3701.3000401@sjsoft.com>
Message-ID: <20030829095118.J43921@onyx.ispol.com>


It's not impossible that the distribution file is missing something,
though it seemed to have worked for me...

It shouldn't need msvcr70.dll anymore, something else is the problem.

Grisha

On Fri, 29 Aug 2003, David Fraser wrote:

> Laird Shaw wrote:
>
> >Hi all,
> >
> >Apologies if I've missed the answer to this question somewhere, but I've
> >searched to no avail.
> >
> >Whilst attempting to start, Apache fails with:
> >
> >Syntax error on line 175 of C:/Program Files/Apache
> >Group/Apache2/conf/httpd.conf:
> >Cannot load C:/Program Files/Apache Group/Apache2/modules/mod_python.so into
> >server: The specified module could not be found.
> >
> >I've checked that I've specified the correct path to mod_python.so.
> >
> >I saw in another post that msvcr70.dll is required, and duly downloaded and
> >copied it into winnt\system32, believing I had solved the problem.  Alas, no
> >such luck.  Same error.
> >
> >OS = Windows 2000 5.00.2195, Service pack 4
> >Python = 2.3
> >Apache = 2.0.47
> >msvcr70.dll = 7.00.9064.0
> >
> >
> I've had exactly the same problem, with a new Win2000 virtual machine,
> same versions of Python and Apache.
> Didn't try add the dll though.
>
> David
>
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>
From davidf at sjsoft.com  Fri Aug 29 16:26:41 2003
From: davidf at sjsoft.com (David Fraser)
Date: Fri Jan  9 21:53:47 2004
Subject: [mod_python] Apache startup error using mod_python under Windows
 2000 (have msvcr70.dll)
In-Reply-To: <20030829095118.J43921@onyx.ispol.com>
References: <001901c36e1a$95954a60$0a00a8c0@laird>
	<3F4F3701.3000401@sjsoft.com> <20030829095118.J43921@onyx.ispol.com>
Message-ID: <3F4F62A1.5030807@sjsoft.com>

Gregory (Grisha) Trubetskoy wrote:

>It's not impossible that the distribution file is missing something,
>though it seemed to have worked for me...
>
>It shouldn't need msvcr70.dll anymore, something else is the problem.
>
>Grisha
>  
>
Hmmm ... yes, the Dependency Walker with Visual Studio 6.0 shows exactly 
the same dependencies as for 3.0.3

David

From perry.tew at cibavision.novartis.com  Fri Aug 29 10:37:55 2003
From: perry.tew at cibavision.novartis.com (perry.tew@cibavision.novartis.com)
Date: Fri Jan  9 21:53:47 2004
Subject: [mod_python] 	Apache startup error using mod_python under Windows
	2000 (have	msvcr70.dll)
Message-ID: <OF369D809A.F682347B-ON85256D91.004FD7CA-85256D91.0050607E@EU.novartis.net>

Laird,
    I'm a newbie to mod_python, and I had the same problem  a few days 
back
when I tried to install and run mod_python under windows xp with python 
2.3. 
When I backed up to python 2.2, mod_python worked fine. 

I just installed the 3.1 alpha against python 2.3 and it works well.

My advice is to either back up to python 2.2 or go forward to mod_python 
3.1 alpha.

Hope this helps,
Perry







Laird Shaw wrote:

>Hi all,
>
>Apologies if I've missed the answer to this question somewhere, but I've
>searched to no avail.
>
>Whilst attempting to start, Apache fails with:
>
>Syntax error on line 175 of C:/Program Files/Apache
>Group/Apache2/conf/httpd.conf:
>Cannot load C:/Program Files/Apache Group/Apache2/modules/mod_python.so 
into
>server: The specified module could not be found.
>
>I've checked that I've specified the correct path to mod_python.so.
>
>I saw in another post that msvcr70.dll is required, and duly downloaded 
and
>copied it into winnt\system32, believing I had solved the problem.  Alas, 
no
>such luck.  Same error.
>
>OS = Windows 2000 5.00.2195, Service pack 4
>Python = 2.3
>Apache = 2.0.47
>msvcr70.dll = 7.00.9064.0
> 
>
I've had exactly the same problem, with a new Win2000 virtual machine, 
same versions of Python and Apache.
Didn't try add the dll though.

David


_______________________________________________
Mod_python mailing list
Mod_python@modpython.org
http://mailman.modpython.org/mailman/listinfo/mod_python


-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mailman.modpython.org/pipermail/mod_python/attachments/20030829/f740aa4f/attachment-0001.htm
From lairdshaw at yahoo.com.au  Sat Aug 30 00:48:18 2003
From: lairdshaw at yahoo.com.au (Laird Shaw)
Date: Fri Jan  9 21:53:47 2004
Subject: [mod_python] Apache startup error using mod_python under Windows
	2000 (have msvcr70.dll)
References: 
	<001901c36e1a$95954a60$0a00a8c0@laird><3F4F3701.3000401@sjsoft.com>
	<20030829095118.J43921@onyx.ispol.com> <3F4F62A1.5030807@sjsoft.com>
Message-ID: <004e01c36e3c$9d177840$0a00a8c0@laird>

This problem occurs with both 3.03 and 3.1.0a on my machine - David are you
able to run 3.0.3?  Are there other versions I could try?

----- Original Message ----- 
From: "David Fraser" <davidf@sjsoft.com>
To: "Gregory (Grisha) Trubetskoy" <grisha@modpython.org>
Cc: <mod_python@modpython.org>
Sent: Saturday, August 30, 2003 12:26 AM
Subject: Re: [mod_python] Apache startup error using mod_python under
Windows 2000 (have msvcr70.dll)


> Gregory (Grisha) Trubetskoy wrote:
>
> >It's not impossible that the distribution file is missing something,
> >though it seemed to have worked for me...
> >
> >It shouldn't need msvcr70.dll anymore, something else is the problem.
> >
> >Grisha
> >
> >
> Hmmm ... yes, the Dependency Walker with Visual Studio 6.0 shows exactly
> the same dependencies as for 3.0.3
>
> David
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python

From grisha at modpython.org  Fri Aug 29 11:06:42 2003
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 21:53:47 2004
Subject: [mod_python] Apache startup error using mod_python under Windows
 2000 (have msvcr70.dll)
In-Reply-To: <OF369D809A.F682347B-ON85256D91.004FD7CA-85256D91.0050607E@EU.novartis.net>
References: <OF369D809A.F682347B-ON85256D91.004FD7CA-85256D91.0050607E@EU.novartis.net>
Message-ID: <20030829110249.R53150@onyx.ispol.com>


Are you using stock Python, Win32 Python, Active or self-compiled?

Grisha

On Fri, 29 Aug 2003 perry.tew@cibavision.novartis.com wrote:

> Laird,
>     I'm a newbie to mod_python, and I had the same problem  a few days
> back
> when I tried to install and run mod_python under windows xp with python
> 2.3.
> When I backed up to python 2.2, mod_python worked fine.
>
> I just installed the 3.1 alpha against python 2.3 and it works well.
>
> My advice is to either back up to python 2.2 or go forward to mod_python
> 3.1 alpha.
>
> Hope this helps,
> Perry
>
>
>
>
>
>
>
> Laird Shaw wrote:
>
> >Hi all,
> >
> >Apologies if I've missed the answer to this question somewhere, but I've
> >searched to no avail.
> >
> >Whilst attempting to start, Apache fails with:
> >
> >Syntax error on line 175 of C:/Program Files/Apache
> >Group/Apache2/conf/httpd.conf:
> >Cannot load C:/Program Files/Apache Group/Apache2/modules/mod_python.so
> into
> >server: The specified module could not be found.
> >
> >I've checked that I've specified the correct path to mod_python.so.
> >
> >I saw in another post that msvcr70.dll is required, and duly downloaded
> and
> >copied it into winnt\system32, believing I had solved the problem.  Alas,
> no
> >such luck.  Same error.
> >
> >OS = Windows 2000 5.00.2195, Service pack 4
> >Python = 2.3
> >Apache = 2.0.47
> >msvcr70.dll = 7.00.9064.0
> >
> >
> I've had exactly the same problem, with a new Win2000 virtual machine,
> same versions of Python and Apache.
> Didn't try add the dll though.
>
> David
>
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>
>
>
From davidf at sjsoft.com  Fri Aug 29 17:39:06 2003
From: davidf at sjsoft.com (David Fraser)
Date: Fri Jan  9 21:53:48 2004
Subject: [mod_python] Apache startup error using mod_python under Windows
 2000 (have msvcr70.dll)
In-Reply-To: <004e01c36e3c$9d177840$0a00a8c0@laird>
References: 
	<001901c36e1a$95954a60$0a00a8c0@laird><3F4F3701.3000401@sjsoft.com>
	<20030829095118.J43921@onyx.ispol.com> <3F4F62A1.5030807@sjsoft.com>
	<004e01c36e3c$9d177840$0a00a8c0@laird>
Message-ID: <3F4F739A.1030804@sjsoft.com>

Laird Shaw wrote:

>This problem occurs with both 3.03 and 3.1.0a on my machine - David are you
>able to run 3.0.3?  Are there other versions I could try?
>  
>
I have successfully run 3.0.3 and apache 2 and Python 2 on another 
Windows 2000 machine.
It didn't occur to me that the problem may not be with 3.1.0a but with 
my virtual machine.
I haven't tested 3.0.3 on my Virtual Machine, I'll look at doing that 
but it'll have to be on Monday I'm afraid...
What might be helpful to know, is is there a generic way of debugging 
why the module is not loading?
David

>----- Original Message ----- 
>From: "David Fraser" <davidf@sjsoft.com>
>To: "Gregory (Grisha) Trubetskoy" <grisha@modpython.org>
>Cc: <mod_python@modpython.org>
>Sent: Saturday, August 30, 2003 12:26 AM
>Subject: Re: [mod_python] Apache startup error using mod_python under
>Windows 2000 (have msvcr70.dll)
>
>
>  
>
>>Gregory (Grisha) Trubetskoy wrote:
>>
>>    
>>
>>>It's not impossible that the distribution file is missing something,
>>>though it seemed to have worked for me...
>>>
>>>It shouldn't need msvcr70.dll anymore, something else is the problem.
>>>
>>>Grisha
>>>
>>>
>>>      
>>>
>>Hmmm ... yes, the Dependency Walker with Visual Studio 6.0 shows exactly
>>the same dependencies as for 3.0.3
>>
>>David
>>
>>_______________________________________________
>>Mod_python mailing list
>>Mod_python@modpython.org
>>http://mailman.modpython.org/mailman/listinfo/mod_python
>>    
>>
>
>  
>


From perry.tew at cibavision.novartis.com  Fri Aug 29 11:48:42 2003
From: perry.tew at cibavision.novartis.com (perry.tew@cibavision.novartis.com)
Date: Fri Jan  9 21:53:48 2004
Subject: [mod_python] Apache startup error using mod_python under Windows
	2000 (have msvcr70.dll)
Message-ID: <OF042EC003.33482BFF-ON85256D91.00560B6F-85256D91.0056DB3A@EU.novartis.net>

Grisha,
    I started with Python 2.3 from python.org (installed via .exe). 
Using mod_python 3.03, in order to make the "module not found" error 
disappear
I had to install Python 2.2.  I used ActiveState 2.2 for this install.  I 
then reinstalled 
3.03 and it installed in the 2.2 tree.  The apache error then disappeared. 
 

This morning I tried out 3.1 alpha against stock Python 2.3 from 
python.org and it worked without 
error. 

I hope I'm not muddying the water relating my experience, but as the 
newbie, running standard exe installs that's
what I encountered.

I could try to replicate the error if you'd like.  I think I can find a 
virgin xp box laying around to test
if it was something I did or something with the layout of the system.

On a side note:
I've really enjoyed mod_python.  Thank you for your time and effort. Also, 
thank you for the
excellent install program. 

Perry Tew



Are you using stock Python, Win32 Python, Active or self-compiled?

Grisha

On Fri, 29 Aug 2003 perry.tew@cibavision.novartis.com wrote:

> Laird,
>     I'm a newbie to mod_python, and I had the same problem  a few days
> back
> when I tried to install and run mod_python under windows xp with python
> 2.3.
> When I backed up to python 2.2, mod_python worked fine.
>
> I just installed the 3.1 alpha against python 2.3 and it works well.
>
> My advice is to either back up to python 2.2 or go forward to mod_python
> 3.1 alpha.
>
> Hope this helps,
> Perry
>
>
>
>
>
>
>
> Laird Shaw wrote:
>
> >Hi all,
> >
> >Apologies if I've missed the answer to this question somewhere, but 
I've
> >searched to no avail.
> >
> >Whilst attempting to start, Apache fails with:
> >
> >Syntax error on line 175 of C:/Program Files/Apache
> >Group/Apache2/conf/httpd.conf:
> >Cannot load C:/Program Files/Apache Group/Apache2/modules/mod_python.so
> into
> >server: The specified module could not be found.
> >
> >I've checked that I've specified the correct path to mod_python.so.
> >
> >I saw in another post that msvcr70.dll is required, and duly downloaded
> and
> >copied it into winnt\system32, believing I had solved the problem. 
Alas,
> no
> >such luck.  Same error.
> >
> >OS = Windows 2000 5.00.2195, Service pack 4
> >Python = 2.3
> >Apache = 2.0.47
> >msvcr70.dll = 7.00.9064.0
> >
> >
> I've had exactly the same problem, with a new Win2000 virtual machine,
> same versions of Python and Apache.
> Didn't try add the dll though.
>
> David
>
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>
>
>


-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mailman.modpython.org/pipermail/mod_python/attachments/20030829/605d7087/attachment-0001.htm
From lairdshaw at yahoo.com.au  Sat Aug 30 01:56:18 2003
From: lairdshaw at yahoo.com.au (Laird Shaw)
Date: Fri Jan  9 21:53:48 2004
Subject: [mod_python] Apache startup error using mod_python under Windows
	2000 (have msvcr70.dll)
References: 
	<OF369D809A.F682347B-ON85256D91.004FD7CA-85256D91.0050607E@EU.novartis.net>
	<20030829110249.R53150@onyx.ispol.com>
Message-ID: <001201c36e46$1f72d010$0a00a8c0@laird>

Your advice solved my problem, Perry.  I uninstalled Python 2.3 and
mod_python, then downloaded and installed Python 2.2.  Then I installed
mod_python 3.0.3, started up Apache and navigated to the test page: worked
fine.  I can reattest that neither mod_python 3.0.3 nor mod_python 3.1.0a
worked with my setup using Python 2.3 - which is a pity as it's nice to use
the latest and greatest version of languages.

Grisha, I don't know whether your question was for Perry or me, but I'll
answer anyway: I installed Python from this windows installer:
http://www.python.org/ftp/python/2.2.3/Python-2.2.3.exe.

Much appreciated,
Laird

----- Original Message ----- 
From: "Gregory (Grisha) Trubetskoy" <grisha@modpython.org>
To: <perry.tew@cibavision.novartis.com>
Cc: <Mod_python@modpython.org>
Sent: Saturday, August 30, 2003 1:06 AM
Subject: Re: [mod_python] Apache startup error using mod_python under
Windows 2000 (have msvcr70.dll)


>
> Are you using stock Python, Win32 Python, Active or self-compiled?
>
> Grisha
>
> On Fri, 29 Aug 2003 perry.tew@cibavision.novartis.com wrote:
>
> > Laird,
> >     I'm a newbie to mod_python, and I had the same problem  a few days
> > back
> > when I tried to install and run mod_python under windows xp with python
> > 2.3.
> > When I backed up to python 2.2, mod_python worked fine.
> >
> > I just installed the 3.1 alpha against python 2.3 and it works well.
> >
> > My advice is to either back up to python 2.2 or go forward to mod_python
> > 3.1 alpha.
> >
> > Hope this helps,
> > Perry
> >
> >
> >
> >
> >
> >
> >
> > Laird Shaw wrote:
> >
> > >Hi all,
> > >
> > >Apologies if I've missed the answer to this question somewhere, but
I've
> > >searched to no avail.
> > >
> > >Whilst attempting to start, Apache fails with:
> > >
> > >Syntax error on line 175 of C:/Program Files/Apache
> > >Group/Apache2/conf/httpd.conf:
> > >Cannot load C:/Program Files/Apache Group/Apache2/modules/mod_python.so
> > into
> > >server: The specified module could not be found.
> > >
> > >I've checked that I've specified the correct path to mod_python.so.
> > >
> > >I saw in another post that msvcr70.dll is required, and duly downloaded
> > and
> > >copied it into winnt\system32, believing I had solved the problem.
Alas,
> > no
> > >such luck.  Same error.
> > >
> > >OS = Windows 2000 5.00.2195, Service pack 4
> > >Python = 2.3
> > >Apache = 2.0.47
> > >msvcr70.dll = 7.00.9064.0
> > >
> > >
> > I've had exactly the same problem, with a new Win2000 virtual machine,
> > same versions of Python and Apache.
> > Didn't try add the dll though.
> >
> > David
> >
> >
> > _______________________________________________
> > Mod_python mailing list
> > Mod_python@modpython.org
> > http://mailman.modpython.org/mailman/listinfo/mod_python
> >
> >
> >
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python

From lairdshaw at yahoo.com.au  Sat Aug 30 01:58:52 2003
From: lairdshaw at yahoo.com.au (Laird Shaw)
Date: Fri Jan  9 21:53:48 2004
Subject: [mod_python] Apache startup error using mod_python under Windows
	2000 (have msvcr70.dll)
References: 
	<001901c36e1a$95954a60$0a00a8c0@laird><3F4F3701.3000401@sjsoft.com>
	<20030829095118.J43921@onyx.ispol.com> <3F4F62A1.5030807@sjsoft.com>
	<004e01c36e3c$9d177840$0a00a8c0@laird> <3F4F739A.1030804@sjsoft.com>
Message-ID: <001f01c36e46$7ab404d0$0a00a8c0@laird>

Slightly off-topic so feel free to reply privately but you piqued my
curiosity - Windows 2000 virtual machine?  What is the 'actual machine' on
which it is running?

----- Original Message ----- 
From: "David Fraser" <davidf@sjsoft.com>
To: "Laird Shaw" <lairdshaw@yahoo.com.au>
Cc: "Gregory (Grisha) Trubetskoy" <grisha@modpython.org>;
<mod_python@modpython.org>
Sent: Saturday, August 30, 2003 1:39 AM
Subject: Re: [mod_python] Apache startup error using mod_python under
Windows 2000 (have msvcr70.dll)


> Laird Shaw wrote:
>
> >This problem occurs with both 3.03 and 3.1.0a on my machine - David are
you
> >able to run 3.0.3?  Are there other versions I could try?
> >
> >
> I have successfully run 3.0.3 and apache 2 and Python 2 on another
> Windows 2000 machine.
> It didn't occur to me that the problem may not be with 3.1.0a but with
> my virtual machine.
> I haven't tested 3.0.3 on my Virtual Machine, I'll look at doing that
> but it'll have to be on Monday I'm afraid...
> What might be helpful to know, is is there a generic way of debugging
> why the module is not loading?
> David
>
> >----- Original Message ----- 
> >From: "David Fraser" <davidf@sjsoft.com>
> >To: "Gregory (Grisha) Trubetskoy" <grisha@modpython.org>
> >Cc: <mod_python@modpython.org>
> >Sent: Saturday, August 30, 2003 12:26 AM
> >Subject: Re: [mod_python] Apache startup error using mod_python under
> >Windows 2000 (have msvcr70.dll)
> >
> >
> >
> >
> >>Gregory (Grisha) Trubetskoy wrote:
> >>
> >>
> >>
> >>>It's not impossible that the distribution file is missing something,
> >>>though it seemed to have worked for me...
> >>>
> >>>It shouldn't need msvcr70.dll anymore, something else is the problem.
> >>>
> >>>Grisha
> >>>
> >>>
> >>>
> >>>
> >>Hmmm ... yes, the Dependency Walker with Visual Studio 6.0 shows exactly
> >>the same dependencies as for 3.0.3
> >>
> >>David
> >>
> >>_______________________________________________
> >>Mod_python mailing list
> >>Mod_python@modpython.org
> >>http://mailman.modpython.org/mailman/listinfo/mod_python
> >>
> >>
> >
> >
> >
>

From davidf at sjsoft.com  Fri Aug 29 18:05:45 2003
From: davidf at sjsoft.com (David Fraser)
Date: Fri Jan  9 21:53:48 2004
Subject: [mod_python] Apache startup error using mod_python under Windows
 2000 (have msvcr70.dll)
In-Reply-To: <001f01c36e46$7ab404d0$0a00a8c0@laird>
References: 
	<001901c36e1a$95954a60$0a00a8c0@laird><3F4F3701.3000401@sjsoft.com>
	<20030829095118.J43921@onyx.ispol.com> <3F4F62A1.5030807@sjsoft.com>
	<004e01c36e3c$9d177840$0a00a8c0@laird> <3F4F739A.1030804@sjsoft.com>
	<001f01c36e46$7ab404d0$0a00a8c0@laird>
Message-ID: <3F4F79D9.7070007@sjsoft.com>

Laird Shaw wrote:

>Slightly off-topic so feel free to reply privately but you piqued my
>curiosity - Windows 2000 virtual machine?  What is the 'actual machine' on
>which it is running?
>
>  
>
I'm running it on a RedHat Linux 7.3 box with VMWare.
David

From davidf at sjsoft.com  Fri Aug 29 18:14:42 2003
From: davidf at sjsoft.com (David Fraser)
Date: Fri Jan  9 21:53:48 2004
Subject: [mod_python] Apache startup error using mod_python under Windows
 2000 (have msvcr70.dll)
In-Reply-To: <001201c36e46$1f72d010$0a00a8c0@laird>
References: 
	<OF369D809A.F682347B-ON85256D91.004FD7CA-85256D91.0050607E@EU.novartis.net>
	<20030829110249.R53150@onyx.ispol.com> <001201c36e46$1f72d010$0a00a8c0@laird>
Message-ID: <3F4F7BF2.2090106@sjsoft.com>

Laird Shaw wrote:

>Your advice solved my problem, Perry.  I uninstalled Python 2.3 and
>mod_python, then downloaded and installed Python 2.2.  Then I installed
>mod_python 3.0.3, started up Apache and navigated to the test page: worked
>fine.  I can reattest that neither mod_python 3.0.3 nor mod_python 3.1.0a
>worked with my setup using Python 2.3 - which is a pity as it's nice to use
>the latest and greatest version of languages.
>
>Grisha, I don't know whether your question was for Perry or me, but I'll
>answer anyway: I installed Python from this windows installer:
>http://www.python.org/ftp/python/2.2.3/Python-2.2.3.exe.
>
>Much appreciated,
>Laird
>  
>
mod_python 3.0.3 won't work with Python 2.3 as it's compiled for Python 
2.2 - and in addition,
the "compatibility fixes" that are listed in the mod_python 3.1a for 
Python 2.3 presumably are neccessary...
However it would be helpful to determine if the problem is related to 
Python 2.3, and the easiest way to do that...
would be to have an installer for mod_python 3.1a for Python 2.2! Grisha?

David

>----- Original Message ----- 
>From: "Gregory (Grisha) Trubetskoy" <grisha@modpython.org>
>To: <perry.tew@cibavision.novartis.com>
>Cc: <Mod_python@modpython.org>
>Sent: Saturday, August 30, 2003 1:06 AM
>Subject: Re: [mod_python] Apache startup error using mod_python under
>Windows 2000 (have msvcr70.dll)
>
>
>  
>
>>Are you using stock Python, Win32 Python, Active or self-compiled?
>>
>>Grisha
>>
>>On Fri, 29 Aug 2003 perry.tew@cibavision.novartis.com wrote:
>>
>>    
>>
>>>Laird,
>>>    I'm a newbie to mod_python, and I had the same problem  a few days
>>>back
>>>when I tried to install and run mod_python under windows xp with python
>>>2.3.
>>>When I backed up to python 2.2, mod_python worked fine.
>>>
>>>I just installed the 3.1 alpha against python 2.3 and it works well.
>>>
>>>My advice is to either back up to python 2.2 or go forward to mod_python
>>>3.1 alpha.
>>>
>>>Hope this helps,
>>>Perry
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>Laird Shaw wrote:
>>>
>>>      
>>>
>>>>Hi all,
>>>>
>>>>Apologies if I've missed the answer to this question somewhere, but
>>>>        
>>>>
>I've
>  
>
>>>>searched to no avail.
>>>>
>>>>Whilst attempting to start, Apache fails with:
>>>>
>>>>Syntax error on line 175 of C:/Program Files/Apache
>>>>Group/Apache2/conf/httpd.conf:
>>>>Cannot load C:/Program Files/Apache Group/Apache2/modules/mod_python.so
>>>>        
>>>>
>>>into
>>>      
>>>
>>>>server: The specified module could not be found.
>>>>
>>>>I've checked that I've specified the correct path to mod_python.so.
>>>>
>>>>I saw in another post that msvcr70.dll is required, and duly downloaded
>>>>        
>>>>
>>>and
>>>      
>>>
>>>>copied it into winnt\system32, believing I had solved the problem.
>>>>        
>>>>
>Alas,
>  
>
>>>no
>>>      
>>>
>>>>such luck.  Same error.
>>>>
>>>>OS = Windows 2000 5.00.2195, Service pack 4
>>>>Python = 2.3
>>>>Apache = 2.0.47
>>>>msvcr70.dll = 7.00.9064.0
>>>>
>>>>
>>>>        
>>>>
>>>I've had exactly the same problem, with a new Win2000 virtual machine,
>>>same versions of Python and Apache.
>>>Didn't try add the dll though.
>>>
>>>David
>>>
>>>
>>>_______________________________________________
>>>Mod_python mailing list
>>>Mod_python@modpython.org
>>>http://mailman.modpython.org/mailman/listinfo/mod_python
>>>
>>>
>>>
>>>      
>>>
>>_______________________________________________
>>Mod_python mailing list
>>Mod_python@modpython.org
>>http://mailman.modpython.org/mailman/listinfo/mod_python
>>    
>>
>
>_______________________________________________
>Mod_python mailing list
>Mod_python@modpython.org
>http://mailman.modpython.org/mailman/listinfo/mod_python
>
>  
>


From grisha at modpython.org  Fri Aug 29 12:32:33 2003
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 21:53:48 2004
Subject: [mod_python] Apache startup error using mod_python under Windows
 2000 (have msvcr70.dll)
In-Reply-To: <3F4F7BF2.2090106@sjsoft.com>
References: <OF369D809A.F682347B-ON85256D91.004FD7CA-85256D91.0050607E@EU.novartis.net>
	<001201c36e46$1f72d010$0a00a8c0@laird> <3F4F7BF2.2090106@sjsoft.com>
Message-ID: <20030829121653.W53150@onyx.ispol.com>



On Fri, 29 Aug 2003, David Fraser wrote:

> Python 2.3, and the easiest way to do that...
> would be to have an installer for mod_python 3.1a for Python 2.2! Grisha?

Getting a version for Python 2.2 is tricky because the production
of the installer requires 2.3, so what I had to do in the past is compile
for 2.2, but then use 2.3 for the installer, so it's a bit of a pain.

What we really need to do is figure out what is different between our
systems.

Just to summarise, is this correct? (I am only concerned with 3.1.0a here,
NOT 3.0.3).

"stock" means the binary from www.python.org, as opposed to Win32, Active
or compiled. All Apache is the binary from www.apache.org.

       |  mod_py  | Python    | Apache | Win. |
-------------------------------------------------------
Perry  |  3.1.0a  | stock 2.3 | 2.0.47 | ?    | OK
Grisha |  3.1.0a  | stock 2.3 | 2.0.47 | 2000 | OK
David  |  3.1.0a  | stock 2.3 | 2.0.47 | 2000 | NOT OK
Laird  |  3.1.0a  | stock 2.3 | 2.0.47 | 2000 | NOT OK

Grisha
From lairdshaw at yahoo.com.au  Sat Aug 30 02:37:56 2003
From: lairdshaw at yahoo.com.au (Laird Shaw)
Date: Fri Jan  9 21:53:48 2004
Subject: [mod_python] Apache startup error using mod_python under Windows
	2000 (have msvcr70.dll)
References: 
	<OF369D809A.F682347B-ON85256D91.004FD7CA-85256D91.0050607E@EU.novartis.net>
	<20030829110249.R53150@onyx.ispol.com> <001201c36e46$1f72d010$0a00a8c0@laird>
	<3F4F7BF2.2090106@sjsoft.com> <20030829121653.W53150@onyx.ispol.com>
Message-ID: <004501c36e4b$f9ee1c40$0a00a8c0@laird>

Yes that's right for me.

----- Original Message ----- 
From: "Gregory (Grisha) Trubetskoy" <grisha@modpython.org>
To: "David Fraser" <davidf@sjsoft.com>
Cc: "Laird Shaw" <lairdshaw@yahoo.com.au>; "Gregory (Grisha) Trubetskoy"
<grisha@modpython.org>; <perry.tew@cibavision.novartis.com>;
<Mod_python@modpython.org>
Sent: Saturday, August 30, 2003 2:32 AM
Subject: Re: [mod_python] Apache startup error using mod_python under
Windows 2000 (have msvcr70.dll)


>
>
> On Fri, 29 Aug 2003, David Fraser wrote:
>
> > Python 2.3, and the easiest way to do that...
> > would be to have an installer for mod_python 3.1a for Python 2.2!
Grisha?
>
> Getting a version for Python 2.2 is tricky because the production
> of the installer requires 2.3, so what I had to do in the past is compile
> for 2.2, but then use 2.3 for the installer, so it's a bit of a pain.
>
> What we really need to do is figure out what is different between our
> systems.
>
> Just to summarise, is this correct? (I am only concerned with 3.1.0a here,
> NOT 3.0.3).
>
> "stock" means the binary from www.python.org, as opposed to Win32, Active
> or compiled. All Apache is the binary from www.apache.org.
>
>        |  mod_py  | Python    | Apache | Win. |
> -------------------------------------------------------
> Perry  |  3.1.0a  | stock 2.3 | 2.0.47 | ?    | OK
> Grisha |  3.1.0a  | stock 2.3 | 2.0.47 | 2000 | OK
> David  |  3.1.0a  | stock 2.3 | 2.0.47 | 2000 | NOT OK
> Laird  |  3.1.0a  | stock 2.3 | 2.0.47 | 2000 | NOT OK
>
> Grisha

From perry.tew at cibavision.novartis.com  Fri Aug 29 13:09:13 2003
From: perry.tew at cibavision.novartis.com (perry.tew@cibavision.novartis.com)
Date: Fri Jan  9 21:53:48 2004
Subject: [mod_python] Apache startup error using mod_python under Windows
	2000 (have msvcr70.dll)
Message-ID: <OF945AE48D.A46949C9-ON85256D91.005DC170-85256D91.005E3A5E@EU.novartis.net>

Grisha, 
   My version of windows is Windows XP Version 2002.

FYI, I don't know what testing hardware you have, but we have XP and 
Solaris 8 in house. 
We'll also have some Solaris 9 shortly.  Additionally, I can set up some 
HPUX 11i  boxes if needed.
I say this not to brag, but only to offer help if you need additional 
platforms to run tests on for your 
new alpha version.

Thanks,
Perry







On Fri, 29 Aug 2003, David Fraser wrote:

> Python 2.3, and the easiest way to do that...
> would be to have an installer for mod_python 3.1a for Python 2.2! 
Grisha?

Getting a version for Python 2.2 is tricky because the production
of the installer requires 2.3, so what I had to do in the past is compile
for 2.2, but then use 2.3 for the installer, so it's a bit of a pain.

What we really need to do is figure out what is different between our
systems.

Just to summarise, is this correct? (I am only concerned with 3.1.0a here,
NOT 3.0.3).

"stock" means the binary from www.python.org, as opposed to Win32, Active
or compiled. All Apache is the binary from www.apache.org.

       |  mod_py  | Python    | Apache | Win. |
-------------------------------------------------------
Perry  |  3.1.0a  | stock 2.3 | 2.0.47 | ?    | OK
Grisha |  3.1.0a  | stock 2.3 | 2.0.47 | 2000 | OK
David  |  3.1.0a  | stock 2.3 | 2.0.47 | 2000 | NOT OK
Laird  |  3.1.0a  | stock 2.3 | 2.0.47 | 2000 | NOT OK

Grisha


-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mailman.modpython.org/pipermail/mod_python/attachments/20030829/43917b96/attachment-0001.htm
From barry at python.org  Fri Aug 29 15:57:44 2003
From: barry at python.org (Barry Warsaw)
Date: Fri Jan  9 21:53:48 2004
Subject: [mod_python] Child shutdowns?
Message-ID: <1062187064.4895.7.camel@yyz>

I'm very likely missing it, but is there some way to run a callable when
the child processes are terminated (i.e. through apachectl stop)?

Seems like the server object's register_cleanup() ought to do it, except
that I have some startup code that gets run when my main module is
imported and at that point I don't have a request object to use as the
first argument to register_cleanup().

Any hints (or examples!)?

Thanks,
-Barry


From conrad at hep.caltech.edu  Fri Aug 29 13:29:41 2003
From: conrad at hep.caltech.edu (Conrad Steenberg)
Date: Fri Jan  9 21:53:48 2004
Subject: [mod_python] ANNOUNCE: Mod_python 3.1.0 Alpha
In-Reply-To: <20030828210644.C43921@onyx.ispol.com>
References: <20030828210644.C43921@onyx.ispol.com>
Message-ID: <1062188981.14514.296.camel@heppc22>

Hi

Tested here to be working under an OpenPKG-1.3 (ish) environment.

Any pointers to higher level tools that works with the included version
of PSP (such as for constructing a news or blogging site)? There seems
to be at least two other projects also calling themselves PSP ;-)

Cheers

Conrad

On Thu, 2003-08-28 at 18:12, Gregory (Grisha) Trubetskoy wrote:
> The Apache Software Foundation and The Apache HTTP Server Project are
> pleased to announce the 3.1.0 ALPHA release mod_python.
> 
> Some feature highlights:
> 
> * Server-side sessions with memory or dbm-based storage and session
> locking support.
> 
> * PSP - a fast flex-based scanner which allows embedding Python code
> within HTML.
> 
> * Native cookie support, including support for automatic cryptographic
> cookie signing and marshalling.
> 
> * Compatibility with Python 2.3, as well as many other enhancements.
> 
> Alpha releases are NOT considered stable and do contain bugs. Some
> functionality may change before the first beta release.
> 
> This release is intended to solicit widespread testing of the code. We
> strongly recommend that you try out your existing applications and
> experiment with new features in a non-production environment using this
> version and report any problems you may encounter so that they can be
> addressed before the final release.
> 
> Mod_python 3.1.0a is available for download from:
> 
> http://httpd.apache.org/modules/python-download.cgi
> 
> Preferred method of providing feedback is the mod_python user list
> mod_python@modpython.org (due to spam, you must subscribe to post).
> 
> For more information about mod_python visit
> http://www.modpython.org/
> 
> Thank You,
> 
> Grisha Trubetskoy
> 
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
-- 
Conrad Steenberg <conrad@hep.caltech.edu>

From grisha at modpython.org  Fri Aug 29 17:11:28 2003
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 21:53:48 2004
Subject: [mod_python] Child shutdowns?
In-Reply-To: <1062187064.4895.7.camel@yyz>
References: <1062187064.4895.7.camel@yyz>
Message-ID: <20030829164056.W56156@onyx.ispol.com>


Barry

If I remember this correctly, from the viewpoint of Apache, to create a
server object (or server_rec structure) you need to have a request,
because a server is created based on what the "Host:" header says (if it
is there at all) and by then going throught the config to see if there is
anything relevant. Once a server is created, it is cached and reused, but
it is not created at Apache startup (as an extreme example, mod_vhost
allows you to create an unlimited number of virtual servers without
specifying them in the config at all - so there is no way to know what the
server name is until a request for it comes in).

I don't know if Apache provides a way to do something at server creation
time, I'll check it out, but it's unlikely. For right now, the only way to
register a server cleanup is from within a request :-(

Grisha

On Fri, 29 Aug 2003, Barry Warsaw wrote:

> I'm very likely missing it, but is there some way to run a callable when
> the child processes are terminated (i.e. through apachectl stop)?
>
> Seems like the server object's register_cleanup() ought to do it, except
> that I have some startup code that gets run when my main module is
> imported and at that point I don't have a request object to use as the
> first argument to register_cleanup().
>
> Any hints (or examples!)?
>
> Thanks,
> -Barry
>
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>
From grisha at apache.org  Fri Aug 29 17:21:57 2003
From: grisha at apache.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 21:53:48 2004
Subject: [mod_python] ANNOUNCE: Mod_python 3.1.0 Alpha
In-Reply-To: <1062188981.14514.296.camel@heppc22>
References: <20030828210644.C43921@onyx.ispol.com>
	<1062188981.14514.296.camel@heppc22>
Message-ID: <20030829171157.O56156@onyx.ispol.com>

On Fri, 29 Aug 2003, Conrad Steenberg wrote:

> Hi
>
> Tested here to be working under an OpenPKG-1.3 (ish) environment.
>
> Any pointers to higher level tools that works with the included version
> of PSP (such as for constructing a news or blogging site)? There seems
> to be at least two other projects also calling themselves PSP ;-)

There is even one called Perl Server Pages :-)

I doubt there are any tools, since our PSP is brand new. B

But it's rather simplistic. For everyone's info:

This describes the syntax:

http://www.modpython.org/live/mod_python-3.1.0a/doc-html/pyapi-psp.html

And this describes the psp handler (things like sessions, etc):

http://www.modpython.org/live/mod_python-3.1.0a/doc-html/pyapi-psp.html

Also, if you have any JSP experience, there was an e-mail on the dev list
regarding how it corresponds to PSP, which I'll forward to this list
(because I forgot where the dev list archives are).

Grisha

From grisha at apache.org  Fri Aug 29 17:23:24 2003
From: grisha at apache.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 21:53:48 2004
Subject: [mod_python] PSP Notes (fwd)
Message-ID: <20030829172210.D56156@onyx.ispol.com>


---------- Forwarded message ----------
Date: Wed, 13 Aug 2003 14:34:14 -0400 (EDT)
From: "Gregory (Grisha) Trubetskoy" <grisha@apache.org>
To: python-dev@httpd.apache.org
Subject: PSP Notes


As an excercise in PSP usability, I've been going through JSP examples
from Tomcat and rewriting them using PSP, here are random notes on the
subject.


* JSP has a notion of an application (e.g. "/apps/mywebapp") with a
document root (e.g. /home/www/blah). Some stuff (e.g. location of classes)
then becomes relative to those paths. In PSP there isn't really a clear
concept of an application, but the closest thing to that is the directory
in which the PythonHandler directive is specified. This is nothing new,
btw, it's always how mod_python worked. So if you have:

<Directory /home/www/psp>
  AddHandler mod_python .psp   <--note the new clever handler name
  PythonHandler mod_python.psp
</Directory>

...then /home/www/psp will be prepended to sys.path, therefore if you
create a directory /home/www/psp/pylib, you could import a module from a
psp file like this:

<%
from pylib import mymodule
%>

This way you have your entire application under /home/www/psp, you can
use, say, /home/www/psp/html for psp/html and all your Python modules are
in /home/www/pylib, giving you a clear separation of logic and interface.


* Next thing that I ran into is having to reload mymodule if it changes.
There is now a new recommended way of doing this:

mymodule = apache.import_module("pylib.mymodule")

This is the same function that mod_python uses internally for autorelad
and takes care of all your reload needs. It does stat the file every time,
so when you're sure you won't need to reload the page, just change it to:

mymodule = apache.import_module("pylib.mymodule", autoreload=0)


* JSP page import directive

JSP:

<%@ page import = "num.NumberGuessBean" %>

PSP:

<%
num = apache.import_module("pylib.num")
%>
... now you've got num.NumberGuessBean, you get the idea


* JSP useBean action

JSP:

<jsp:useBean id="numguess" class="num.NumberGuessBean" scope="session"/>

This means that numguess is an instance of num.NumberGuessBean and it will
persist for as long as the session exists.

PSP (again, no need for special syntax):

<%
numguess = session.setdefault("numguess", num.NumberGuessBean())
%>


* JSP setProperty

This will match up form elements and set them in a Java object. So if the
object defines setColor() and the form contains a field "Color", JSP will
call setColor passing value of color as the argument.

JSP:

<jsp:setProperty name="numguess" property="*"/>

PSP:

Well, there isn't exactly this functionality, but there is something
different. You can use the same functionality that the publisher handler
uses to match up form elements with a function:

class Car:

    def __init__(self, color):

         # do something

Then a psp page called as result of a form submition can do this:

<%
car = psp.apply_data(Car)
%>

This will call the callable object Car (classes are callable), passing it
the value of "color", and resulting in an instance of Car which is
assigned to car.


* <%@ page session="false"%>

In JSP this means don't create a session for this page. This is really
easy in PSP - just don't mention the "session" variable in your page. The
psp handler examines the code for mentions of "session" and generates (and
locks) one if it encounters such mentions.


* page errorPage

JSP allows you to specify a special error page to be displayed when an
exception is thrown.

JSP:
<%@ page errorPage="errorpge.jsp" %>

PSP:
<%
psp.set_error_page("errorpge.psp")
%>

When (if) errorpge.psp is invoked, it will have a global "exception"
variable which will contain same info as returned by sys.exc_info().

* include

Of course, PSP supports <%@ include file="blah.html"%>



Grisha
From barry at python.org  Fri Aug 29 17:47:20 2003
From: barry at python.org (Barry Warsaw)
Date: Fri Jan  9 21:53:48 2004
Subject: [mod_python] Child shutdowns?
In-Reply-To: <20030829164056.W56156@onyx.ispol.com>
References: <1062187064.4895.7.camel@yyz>
	 <20030829164056.W56156@onyx.ispol.com>
Message-ID: <1062193640.4895.13.camel@yyz>

On Fri, 2003-08-29 at 17:11, Gregory (Grisha) Trubetskoy wrote:
> Barry
> 
> If I remember this correctly, from the viewpoint of Apache, to create a
> server object (or server_rec structure) you need to have a request,
> because a server is created based on what the "Host:" header says (if it
> is there at all) and by then going throught the config to see if there is
> anything relevant. Once a server is created, it is cached and reused, but
> it is not created at Apache startup (as an extreme example, mod_vhost
> allows you to create an unlimited number of virtual servers without
> specifying them in the config at all - so there is no way to know what the
> server name is until a request for it comes in).
> 
> I don't know if Apache provides a way to do something at server creation
> time, I'll check it out, but it's unlikely. For right now, the only way to
> register a server cleanup is from within a request :-(

Thanks Grisha, both for the info and the offer to poke around.  I'll try
pushing my startup code into my request handler, and see if registering
my cleanup code at that time will work.

Cheers,
-Barry


From gstein at lyra.org  Fri Aug 29 14:56:55 2003
From: gstein at lyra.org (Greg Stein)
Date: Fri Jan  9 21:53:48 2004
Subject: [mod_python] Child shutdowns?
In-Reply-To: <20030829164056.W56156@onyx.ispol.com>;
	from grisha@modpython.org on Fri, Aug 29, 2003 at 05:11:28PM -0400
References: <1062187064.4895.7.camel@yyz>
	<20030829164056.W56156@onyx.ispol.com>
Message-ID: <20030829145655.D14389@lyra.org>

On Fri, Aug 29, 2003 at 05:11:28PM -0400, Gregory (Grisha) Trubetskoy wrote:
> 
> Barry
> 
> If I remember this correctly, from the viewpoint of Apache, to create a
> server object (or server_rec structure) you need to have a request,
> because a server is created based on what the "Host:" header says (if it

Nope, sorry.

The server_rec structures are created at server-startup time when we parse
the configuration file. There is a server_rec per virtual host, plus one
for the default server.

At request time, the appropriate server_rec is looked up and passed along
as part of the request processing.

> is there at all) and by then going throught the config to see if there is
> anything relevant. Once a server is created, it is cached and reused, but
> it is not created at Apache startup (as an extreme example, mod_vhost
> allows you to create an unlimited number of virtual servers without
> specifying them in the config at all - so there is no way to know what the
> server name is until a request for it comes in).

Dunno how mod_vhost does it. The typical scenario is the construction at
startup time.

> I don't know if Apache provides a way to do something at server creation
> time, I'll check it out, but it's unlikely. For right now, the only way to
> register a server cleanup is from within a request :-(

The post_config hook is possibly one place to do this. It gets a pool
associated with the process.

There is also a child_init hook, which I believe is called whenever a new
child is spun up. That is probably a more appropriate place. It gets a
pool associated with the child.

If you can get a function registered as a cleanup on that pool, then
you'll be all set.

Cheers,
-g

> 
> Grisha
> 
> On Fri, 29 Aug 2003, Barry Warsaw wrote:
> 
> > I'm very likely missing it, but is there some way to run a callable when
> > the child processes are terminated (i.e. through apachectl stop)?
> >
> > Seems like the server object's register_cleanup() ought to do it, except
> > that I have some startup code that gets run when my main module is
> > imported and at that point I don't have a request object to use as the
> > first argument to register_cleanup().
> >
> > Any hints (or examples!)?
> >
> > Thanks,
> > -Barry
> >
> >
> > _______________________________________________
> > Mod_python mailing list
> > Mod_python@modpython.org
> > http://mailman.modpython.org/mailman/listinfo/mod_python
> >
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python

-- 
Greg Stein, http://www.lyra.org/
From barry at python.org  Fri Aug 29 18:05:31 2003
From: barry at python.org (Barry Warsaw)
Date: Fri Jan  9 21:53:48 2004
Subject: [mod_python] Child shutdowns?
In-Reply-To: <1062193640.4895.13.camel@yyz>
References: <1062187064.4895.7.camel@yyz>
	<1062193640.4895.13.camel@yyz>
Message-ID: <1062194731.4895.17.camel@yyz>

On Fri, 2003-08-29 at 17:47, Barry Warsaw wrote:

> Thanks Grisha, both for the info and the offer to poke around.  I'll try
> pushing my startup code into my request handler, and see if registering
> my cleanup code at that time will work.

Very quick testing reveals that something like this stanza does the
trick:

def handler(req):
    global _started
    if not _started:
        startup()
        req.server.register_cleanup(req, shutdown)
        _started = True

A bit gnarly perhaps, but palatable.

-Barry


From gstein at lyra.org  Fri Aug 29 15:23:28 2003
From: gstein at lyra.org (Greg Stein)
Date: Fri Jan  9 21:53:48 2004
Subject: [mod_python] Child shutdowns?
In-Reply-To: <1062194731.4895.17.camel@yyz>;
	from barry@python.org on Fri, Aug 29, 2003 at 06:05:31PM -0400
References: <1062187064.4895.7.camel@yyz> <1062193640.4895.13.camel@yyz>
	<1062194731.4895.17.camel@yyz>
Message-ID: <20030829152328.E14389@lyra.org>

On Fri, Aug 29, 2003 at 06:05:31PM -0400, Barry Warsaw wrote:
> On Fri, 2003-08-29 at 17:47, Barry Warsaw wrote:
> 
> > Thanks Grisha, both for the info and the offer to poke around.  I'll try
> > pushing my startup code into my request handler, and see if registering
> > my cleanup code at that time will work.
> 
> Very quick testing reveals that something like this stanza does the
> trick:
> 
> def handler(req):
>     global _started
>     if not _started:
>         startup()
>         req.server.register_cleanup(req, shutdown)
>         _started = True
> 
> A bit gnarly perhaps, but palatable.

Ouch! The interface is very non-intuitive. That is not a cleanup
associated with the server, but actually with the pchild pool that was
passed to the child_init hook.

Looking at the code, mod_python hooks into child_init and saves the pool
off into a global variable. The server_register_cleanup() function then
attaches the cleanup to *that* pool.

So it does what you want, but yah... a bit ugly. And it really doesn't
look thread-safe either. You could easily have two threads end up inside
the 'if' block, registering a cleanup.

Cheers,
-g

-- 
Greg Stein, http://www.lyra.org/
From barry at python.org  Fri Aug 29 18:40:46 2003
From: barry at python.org (Barry Warsaw)
Date: Fri Jan  9 21:53:48 2004
Subject: [mod_python] Child shutdowns?
In-Reply-To: <20030829152328.E14389@lyra.org>
References: <1062187064.4895.7.camel@yyz> <1062193640.4895.13.camel@yyz>
	 <1062194731.4895.17.camel@yyz>  <20030829152328.E14389@lyra.org>
Message-ID: <1062196846.4895.43.camel@yyz>

On Fri, 2003-08-29 at 18:23, Greg Stein wrote:

> So it does what you want, but yah... a bit ugly. And it really doesn't
> look thread-safe either. You could easily have two threads end up inside
> the 'if' block, registering a cleanup.

Yep, but right now I'm using a prefork MPM, which I'll probably stick
with for reasons like this.  IIUC, each child process is single
threaded, right?

-Barry


From gstein at lyra.org  Fri Aug 29 16:06:11 2003
From: gstein at lyra.org (Greg Stein)
Date: Fri Jan  9 21:53:48 2004
Subject: [mod_python] Child shutdowns?
In-Reply-To: <1062196846.4895.43.camel@yyz>;
	from barry@python.org on Fri, Aug 29, 2003 at 06:40:46PM -0400
References: <1062187064.4895.7.camel@yyz> <1062193640.4895.13.camel@yyz>
	<1062194731.4895.17.camel@yyz> <20030829152328.E14389@lyra.org>
	<1062196846.4895.43.camel@yyz>
Message-ID: <20030829160611.F14389@lyra.org>

On Fri, Aug 29, 2003 at 06:40:46PM -0400, Barry Warsaw wrote:
> On Fri, 2003-08-29 at 18:23, Greg Stein wrote:
> 
> > So it does what you want, but yah... a bit ugly. And it really doesn't
> > look thread-safe either. You could easily have two threads end up inside
> > the 'if' block, registering a cleanup.
> 
> Yep, but right now I'm using a prefork MPM, which I'll probably stick
> with for reasons like this.  IIUC, each child process is single
> threaded, right?

Yup, it sure is.

If you want to be a Real Man, then you can use _apache.mpm_query to verify
that you're running single-threaded :-)

btw, if you're going to rely on prefork, then why don't you just use the
exit handlers for the process rather than worrying about Apache's pool
cleanup handling? If you're doing the latter to work within the Apache
framework, then you really ought to keep threads in mind :-)

Cheers,
-g

-- 
Greg Stein, http://www.lyra.org/
From barry at python.org  Fri Aug 29 19:14:00 2003
From: barry at python.org (Barry Warsaw)
Date: Fri Jan  9 21:53:48 2004
Subject: [mod_python] Child shutdowns?
In-Reply-To: <20030829160611.F14389@lyra.org>
References: <1062187064.4895.7.camel@yyz> <1062193640.4895.13.camel@yyz>
	 <1062194731.4895.17.camel@yyz> <20030829152328.E14389@lyra.org>
	 <1062196846.4895.43.camel@yyz>  <20030829160611.F14389@lyra.org>
Message-ID: <1062198840.4895.74.camel@yyz>

On Fri, 2003-08-29 at 19:06, Greg Stein wrote:

> If you want to be a Real Man, then you can use _apache.mpm_query to verify
> that you're running single-threaded :-)

Ooh, ooh, the "hidden goodies"!  So far I've only dug into the
documented API ('course I could be missing this one).

> btw, if you're going to rely on prefork, then why don't you just use the
> exit handlers for the process rather than worrying about Apache's pool
> cleanup handling? If you're doing the latter to work within the Apache
> framework, then you really ought to keep threads in mind :-)

I tried setting sys.exitfunc but it wasn't called when I apachectl
stop'd, probably because that kills the process via SIGTERM, and I don't
think exit handlers are run in that case.  (I probably should have used
the atexit module, but that has the same semantics.)

I hear ya about threading issues.  Right now, I'm trying to get the
simplest possible thing that can work. <wink>

-Barry


From conrad at hep.caltech.edu  Fri Aug 29 17:05:23 2003
From: conrad at hep.caltech.edu (Conrad Steenberg)
Date: Fri Jan  9 21:53:48 2004
Subject: [mod_python] ANNOUNCE: Mod_python 3.1.0 Alpha
In-Reply-To: <20030829171157.O56156@onyx.ispol.com>
References: <20030828210644.C43921@onyx.ispol.com>
	<20030829171157.O56156@onyx.ispol.com>
Message-ID: <1062201922.2857.5.camel@Presario>

On Fri, 2003-08-29 at 14:21, Gregory (Grisha) Trubetskoy wrote:
> On Fri, 29 Aug 2003, Conrad Steenberg wrote:
> 
> > Hi
> >
> > Tested here to be working under an OpenPKG-1.3 (ish) environment.
> >
> > Any pointers to higher level tools that works with the included version
> > of PSP (such as for constructing a news or blogging site)? There seems
> > to be at least two other projects also calling themselves PSP ;-)
> 
> There is even one called Perl Server Pages :-)
> 
> I doubt there are any tools, since our PSP is brand new. B
> 
> But it's rather simplistic. For everyone's info:

Thanks for the clarification, I was under the horribly mistaken
impression that the mod_python PSP was taken from some other bigger
project ;-)

And simplistic is good, IMHO.

Thanks for the docs, too.

Conrad

> 
> This describes the syntax:
> 
> http://www.modpython.org/live/mod_python-3.1.0a/doc-html/pyapi-psp.html
> 
> And this describes the psp handler (things like sessions, etc):
> 
> http://www.modpython.org/live/mod_python-3.1.0a/doc-html/pyapi-psp.html
> 
> Also, if you have any JSP experience, there was an e-mail on the dev list
> regarding how it corresponds to PSP, which I'll forward to this list
> (because I forgot where the dev list archives are).
> 
> Grisha


-- 
Conrad Steenberg <conrad@hep.caltech.edu>
From grisha at modpython.org  Fri Aug 29 20:26:00 2003
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 21:53:48 2004
Subject: [mod_python] Child shutdowns?
In-Reply-To: <1062198840.4895.74.camel@yyz>
References: <1062187064.4895.7.camel@yyz> <1062193640.4895.13.camel@yyz>
 <1062194731.4895.17.camel@yyz> <20030829152328.E14389@lyra.org>
 <1062196846.4895.43.camel@yyz>  <20030829160611.F14389@lyra.org>
 <1062198840.4895.74.camel@yyz>
Message-ID: <20030829200546.C59355@onyx.ispol.com>


On Fri, 29 Aug 2003, Barry Warsaw wrote:

> On Fri, 2003-08-29 at 19:06, Greg Stein wrote:
>
> > If you want to be a Real Man, then you can use _apache.mpm_query to verify
> > that you're running single-threaded :-)
>
> Ooh, ooh, the "hidden goodies"!  So far I've only dug into the
> documented API ('course I could be missing this one).

It's documented, but it's a mod_python 3.1 thing. It's actually
apache.mpm_query:

http://www.modpython.org/live/mod_python-3.1.0a/doc-html/pyapi-apmeth.html

BTW, if you're not going to be using sessions or PSP (which are new), you
might as well use 3.1.0a - the stuff carried over from 3.0.3 is probably
stabler and faster, and it fixes some things that wouldn't work at all in
Python 2.3, e.g. get rid of stupid ancient things like

if str(type(object)) == "<type 'class'>"

Grisha
From pradix at gmx.de  Sat Aug 30 02:35:52 2003
From: pradix at gmx.de (=?ISO-8859-1?Q?Lorenz_K=F6hl?=)
Date: Fri Jan  9 21:53:48 2004
Subject: [mod_python] modpython compile error
Message-ID: <3F4FF168.9050505@gmx.de>

I want to install modpython 3.0.3 on my Suse 8.2 but during compilation 
an error occurs saying

----------------
/usr/include/features.h:131:1: warning: this is the location of the 
previous definition
requestobject.c: In function `getreq_recmbr_off':
requestobject.c:1055: error: `LONG_LONG' undeclared (first use in this 
function)
requestobject.c:1055: error: (Each undeclared identifier is reported 
only once
requestobject.c:1055: error: for each function it appears in.)
requestobject.c:1056: error: parse error before "l"
requestobject.c:1057: error: `l' undeclared (first use in this function)
requestobject.c: At top level:
requestobject.c:1270: warning: initialization from incompatible pointer type
apxs:Error: Command failed with rc=65536
.
make[1]: *** [mod_python.so] Error 1
make[1]: Leaving directory 
`/home/software/network/apache/mod_python-3.0.3/src'
make: *** [do_dso] Error 2
-----------------

I've apache 2.0.47 and python 2.3 installed. The configure of modpython 
was fine and of course I
compiled apache with --enable-so.

in requestobject.c there's someting in the comments about apr. but apr 
from apr.apache.org is installed
build into apache.

any ideas?  (any parsing-lib missing?)

From barry at python.org  Sat Aug 30 12:28:49 2003
From: barry at python.org (Barry Warsaw)
Date: Fri Jan  9 21:53:48 2004
Subject: [mod_python] Child shutdowns?
In-Reply-To: <20030829200546.C59355@onyx.ispol.com>
References: <1062187064.4895.7.camel@yyz> <1062193640.4895.13.camel@yyz>
	<1062194731.4895.17.camel@yyz> <20030829152328.E14389@lyra.org>
	<1062196846.4895.43.camel@yyz>  <20030829160611.F14389@lyra.org>
	<20030829200546.C59355@onyx.ispol.com>
Message-ID: <1062260929.30124.0.camel@anthem>

On Fri, 2003-08-29 at 20:26, Gregory (Grisha) Trubetskoy wrote:

> BTW, if you're not going to be using sessions or PSP (which are new), you
> might as well use 3.1.0a - the stuff carried over from 3.0.3 is probably
> stabler and faster, and it fixes some things that wouldn't work at all in
> Python 2.3, e.g. get rid of stupid ancient things like
> 
> if str(type(object)) == "<type 'class'>"

Cool, thanks for the tip.

-Barry


From stephen at vermeulen.ca  Sat Aug 30 12:56:17 2003
From: stephen at vermeulen.ca (Stephen Vermeulen)
Date: Fri Jan  9 21:53:48 2004
Subject: [mod_python] Problems getting mod_python to work on Windows NT4.0
Message-ID: <3F50F351.8020306@vermeulen.ca>

This morning I took my first attempt at getting mod_python to work on 
Windows NT4.0
under Apache 2.0.47 and Python 2.3. I could not get the simple test from:

http://www.modpython.org/live/current/doc-html/inst-testing.html

to work.  All I got was the following error:

[Sat Aug 30 12:23:09 2003] [error] make_obcallback: could not import 
mod_python.apache.

I tried both

   mod_python-3.0.3.win32.exe

and
 
   mod_python-3.1.0a.win32-py2.3.exe

and both gave the same errors.

In the end I noticed in the mailing list archives that some people had 
success after reverting to
Python 2.2.  So I installed a copy of Python 2.2.2 on my system (I did 
not remove my Python 2.3)
and reinstalled mod_python 3.0.3.

Without changing anything else it started to work.

Regards,

Stephen



From azaroth at liverpool.ac.uk  Fri Aug  1 19:41:27 2003
From: azaroth at liverpool.ac.uk (Robert Sanderson)
Date: Fri Jan  9 22:00:15 2004
Subject: [mod_python] MacOS X Install
Message-ID: <Pine.LNX.4.44.0308011937060.16855-100000@gondolin.hist.liv.ac.uk>


Okay, has anyone gotten mod_python working under MacOS X recently?  In 
particular, using 2.3 (to avoid the issue with python thinking it's 
running in restricted mode)

I've patched libtool as per the readme.
Installed Apache 2.0.47, configured with --enable-so
Installed Jack Jensen's build of Python2.3
Fixed LONG_LONG to PY_LONG_LONG in the mod_python source
Compiled mod_python, installed it.

When I try to run apache from the command line, with 
DYLD_FORCE_FLAT_NAMESPACE defined or without, I get:

Cannot load /usr/local/apache2/modules/mod_python.so into server: dyld: 
/usr/sbin/httpd Undefined symbols:
_PyExc_AttributeError
_PyExc_IOError
_PyExc_IndexError
_PyExc_KeyError

Previously I tried the same thing without patching libtool and got:

Undefined symbols:
_PyInt_Type
_Py_OptimizeFlag
Trace/(something)

Rob

-- 
      ,'/:.          Dr Robert Sanderson (azaroth@liverpool.ac.uk)
    ,'-/::::.        http://www.o-r-g.org/~azaroth/
  ,'--/::(@)::.      Special Collections and Archives, extension 3142
,'---/::::::::::.    Nebmedes:  telnet: nebmedes.o-r-g.org 7777
____/:::::::::::::.                WWW: http://nebmedes.o-r-g.org:8000/
I L L U M I N A T I

From ron at rwsoft.ca  Fri Aug  1 15:13:56 2003
From: ron at rwsoft.ca (Ron Wills)
Date: Fri Jan  9 22:00:15 2004
Subject: [mod_python] File Upload Problem
Message-ID: <1059772435.4143.63.camel@ron.gw.rwsoft.ca>

  I've seem to have found an oddity will binary file uploads with
modpython on windows 2K. I've created a file upload form in which a zip
can be upload to restore a mysql db. I use the util.FieldStorage class
to parse the request and it seems to convert all \n characters in the
binary file to \r\n.
  It doesn't seem to be the browsers (Tested with Mozilla 1.3 1.4, EI 6
and Opera) and I can't see it being Apache (Never run into this problem
using PHP). Is there a way to tell modpython it's binary and not to do
any conversions on the upload?

Using:
	Win2K
	Apache 2.0.46
	modpython 3.0.3

  Thanks for any help.

-- 
Ron Wills
RW Software
http://www.rwsoft.ca
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: This is a digitally signed message part
Url : http://mailman.modpython.org/pipermail/mod_python/attachments/20030801/29e64401/attachment-0002.bin
From grisha at modpython.org  Mon Aug  4 11:44:15 2003
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 22:00:15 2004
Subject: [mod_python] File Upload Problem
In-Reply-To: <1059772435.4143.63.camel@ron.gw.rwsoft.ca>
References: <1059772435.4143.63.camel@ron.gw.rwsoft.ca>
Message-ID: <20030804114304.L88668@onyx.ispol.com>


As far as I can tell mod_python trats everything as binary.

Could you provide the HTML for the form, and also the code you use to get
the data from the file on the server - I suspect there may be something
there.

Grisha

On Fri, 1 Aug 2003, Ron Wills wrote:

>   I've seem to have found an oddity will binary file uploads with
> modpython on windows 2K. I've created a file upload form in which a zip
> can be upload to restore a mysql db. I use the util.FieldStorage class
> to parse the request and it seems to convert all \n characters in the
> binary file to \r\n.
>   It doesn't seem to be the browsers (Tested with Mozilla 1.3 1.4, EI 6
> and Opera) and I can't see it being Apache (Never run into this problem
> using PHP). Is there a way to tell modpython it's binary and not to do
> any conversions on the upload?
>
> Using:
> 	Win2K
> 	Apache 2.0.46
> 	modpython 3.0.3
>
>   Thanks for any help.
>
> --
> Ron Wills
> RW Software
> http://www.rwsoft.ca
>
From leader730 at hotmail.com  Tue Aug  5 00:57:38 2003
From: leader730 at hotmail.com (Jer icho)
Date: Fri Jan  9 22:00:15 2004
Subject: [mod_python] 
	server returning "500 Internal Server Error" with mod_python files
Message-ID: <Law14-F46G4YdlbEwPI0000b2f5@hotmail.com>

An HTML attachment was scrubbed...
URL: http://mailman.modpython.org/pipermail/mod_python/attachments/20030805/906d125f/attachment-0002.htm
From gnb at itga.com.au  Tue Aug  5 15:47:30 2003
From: gnb at itga.com.au (Gregory Bond)
Date: Fri Jan  9 22:00:15 2004
Subject: [mod_python] server returning "500 Internal Server Error" with
	mod_python files 
In-Reply-To: Your message of Tue, 05 Aug 2003 00:57:38 -0400.
Message-ID: <200308050547.PAA08734@lightning.itga.com.au>

> <DIV>[error] make_obcallback: could not import mod_python.apache.</DIV>

See the very first quesiton in the FAQ:

http://www.modpython.org/FAQ/faqw.py?req=show&file=faq02.001.htp

From post at nlhas.no  Tue Aug  5 11:50:02 2003
From: post at nlhas.no (post@nlhas.no)
Date: Fri Jan  9 22:00:15 2004
Subject: [mod_python] Compiling with Python2.3
Message-ID: <20030805095002.CFF9E1506A@nlhhost>

I can't get mod_python to compile with Python2.3 (Apache 2.0.47, RedHat 7.0) :

]# make
make[1]: Entering directory `/home/public/transfer/mod_python-3.0.3/src'
Compiling for DSO.
.....snip.....
requestobject.c: At top level:
requestobject.c:1270: warning: initialization from incompatible pointer type
apxs:Error: Command failed with rc=65536
.
make[1]: *** [mod_python.so] Error 1
make[1]: Leaving directory `/home/public/transfer/mod_python-3.0.3/src'
make: *** [do_dso] Error 2

Same setup configured with Python2.2 compiles perfectly, so I presume this is a problem mod_python<>Python2.3.

Any suggestions?

pm

From grisha at modpython.org  Tue Aug  5 09:26:40 2003
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 22:00:15 2004
Subject: [mod_python] Compiling with Python2.3
In-Reply-To: <20030805095002.CFF9E1506A@nlhhost>
References: <20030805095002.CFF9E1506A@nlhhost>
Message-ID: <20030805092556.Q95995@onyx.ispol.com>


I added a FAQ entry for this:

http://www.modpython.org/FAQ/faqw.py?req=show&file=faq04.002.htp

Grisha

On Tue, 5 Aug 2003 post@nlhas.no wrote:

> I can't get mod_python to compile with Python2.3 (Apache 2.0.47, RedHat 7.0) :
>
> ]# make
> make[1]: Entering directory `/home/public/transfer/mod_python-3.0.3/src'
> Compiling for DSO.
> .....snip.....
> requestobject.c: At top level:
> requestobject.c:1270: warning: initialization from incompatible pointer type
> apxs:Error: Command failed with rc=65536
> .
> make[1]: *** [mod_python.so] Error 1
> make[1]: Leaving directory `/home/public/transfer/mod_python-3.0.3/src'
> make: *** [do_dso] Error 2
>
> Same setup configured with Python2.2 compiles perfectly, so I presume this is a problem mod_python<>Python2.3.
>
> Any suggestions?
>
> pm
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>
From dlrubin at yahoo.com  Wed Aug  6 09:12:10 2003
From: dlrubin at yahoo.com (Daniel Rubin)
Date: Fri Jan  9 22:00:15 2004
Subject: [mod_python] build error on solais
Message-ID: <20030806161210.74520.qmail@web13904.mail.yahoo.com>

Trying to build mod_python 3.0.3 on solaris 2.8. My
configure command is: ./configure
--with-apxs=/home/rubin/opt/apache/bin/apxs
--prefix=/home/rubin
and that runs fine. Then when I make, I get this error
during the build:

/home/rubin/opt/apache/build/libtool --silent
--mode=compile gcc -prefer-pic 
-DAP_HAVE_DESIGNATED_INITIALIZER -DSOLARIS2=8
-D_POSIX_PTHREAD_SEMANTICS -D_REENTRANT -g -O2
-pthreads -I/home/rubin/opt/apache/include 
-I/home/rubin/opt/apache/include  
-I/home/rubin/opt/apache/include 
-I/home/rubin/src/mod_python-3.0.3/src/include
-I/home/rubin/opt/apache/include
-I/home/rubin/include/python2.3  -c -o
requestobject.lo requestobject.c && touch
requestobject.slo
In file included from
/home/rubin/include/python2.3/Python.h:8,
                 from
/home/rubin/src/mod_python-3.0.3/src/include/mod_python.h:92,
                 from requestobject.c:64:
/home/rubin/include/python2.3/pyconfig.h:822:1:
warning: "_FILE_OFFSET_BITS" redefined
In file included from
/home/rubin/lib/gcc-lib/sparc-sun-solaris2.8/3.2.2/include/sys/types.h:28,
                 from
/home/rubin/opt/apache/include/apr.h:149,
                 from
/home/rubin/opt/apache/include/ap_config.h:58,
                 from
/home/rubin/opt/apache/include/httpd.h:72,
                 from
/home/rubin/src/mod_python-3.0.3/src/include/mod_python.h:71,
                 from requestobject.c:64:
/usr/include/sys/feature_tests.h:96:1: warning: this
is the location of the previous definition
requestobject.c: In function `getreq_recmbr_off':
requestobject.c:1055: `LONG_LONG' undeclared (first
use in this function)
requestobject.c:1055: (Each undeclared identifier is
reported only once
requestobject.c:1055: for each function it appears
in.)
requestobject.c:1056: parse error before "l"
requestobject.c:1057: `l' undeclared (first use in
this function)
requestobject.c: At top level:
requestobject.c:1270: warning: initialization from
incompatible pointer type
apxs:Error: Command failed with rc=65536
.
make[1]: *** [mod_python.so] Error 1
make[1]: Leaving directory
`/home/rubin/src/mod_python-3.0.3/src'
make: *** [do_dso] Error 2


__________________________________
Do you Yahoo!?
Yahoo! SiteBuilder - Free, easy-to-use web site design software
http://sitebuilder.yahoo.com
From grisha at modpython.org  Wed Aug  6 12:47:44 2003
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 22:00:15 2004
Subject: [mod_python] build error on solais
In-Reply-To: <20030806161210.74520.qmail@web13904.mail.yahoo.com>
References: <20030806161210.74520.qmail@web13904.mail.yahoo.com>
Message-ID: <20030806124705.P15215@onyx.ispol.com>



http://www.modpython.org/FAQ/faqw.py?req=show&file=faq04.002.htp

HTH,

Grisha

On Wed, 6 Aug 2003, Daniel Rubin wrote:

> Trying to build mod_python 3.0.3 on solaris 2.8. My
> configure command is: ./configure
> --with-apxs=/home/rubin/opt/apache/bin/apxs
> --prefix=/home/rubin
> and that runs fine. Then when I make, I get this error
> during the build:
>
> /home/rubin/opt/apache/build/libtool --silent
> --mode=compile gcc -prefer-pic
> -DAP_HAVE_DESIGNATED_INITIALIZER -DSOLARIS2=8
> -D_POSIX_PTHREAD_SEMANTICS -D_REENTRANT -g -O2
> -pthreads -I/home/rubin/opt/apache/include
> -I/home/rubin/opt/apache/include
> -I/home/rubin/opt/apache/include
> -I/home/rubin/src/mod_python-3.0.3/src/include
> -I/home/rubin/opt/apache/include
> -I/home/rubin/include/python2.3  -c -o
> requestobject.lo requestobject.c && touch
> requestobject.slo
> In file included from
> /home/rubin/include/python2.3/Python.h:8,
>                  from
> /home/rubin/src/mod_python-3.0.3/src/include/mod_python.h:92,
>                  from requestobject.c:64:
> /home/rubin/include/python2.3/pyconfig.h:822:1:
> warning: "_FILE_OFFSET_BITS" redefined
> In file included from
> /home/rubin/lib/gcc-lib/sparc-sun-solaris2.8/3.2.2/include/sys/types.h:28,
>                  from
> /home/rubin/opt/apache/include/apr.h:149,
>                  from
> /home/rubin/opt/apache/include/ap_config.h:58,
>                  from
> /home/rubin/opt/apache/include/httpd.h:72,
>                  from
> /home/rubin/src/mod_python-3.0.3/src/include/mod_python.h:71,
>                  from requestobject.c:64:
> /usr/include/sys/feature_tests.h:96:1: warning: this
> is the location of the previous definition
> requestobject.c: In function `getreq_recmbr_off':
> requestobject.c:1055: `LONG_LONG' undeclared (first
> use in this function)
> requestobject.c:1055: (Each undeclared identifier is
> reported only once
> requestobject.c:1055: for each function it appears
> in.)
> requestobject.c:1056: parse error before "l"
> requestobject.c:1057: `l' undeclared (first use in
> this function)
> requestobject.c: At top level:
> requestobject.c:1270: warning: initialization from
> incompatible pointer type
> apxs:Error: Command failed with rc=65536
> .
> make[1]: *** [mod_python.so] Error 1
> make[1]: Leaving directory
> `/home/rubin/src/mod_python-3.0.3/src'
> make: *** [do_dso] Error 2
>
>
> __________________________________
> Do you Yahoo!?
> Yahoo! SiteBuilder - Free, easy-to-use web site design software
> http://sitebuilder.yahoo.com
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>
From conrad at hep.caltech.edu  Wed Aug  6 22:25:56 2003
From: conrad at hep.caltech.edu (Conrad Steenberg)
Date: Fri Jan  9 22:00:15 2004
Subject: [mod_python] Authentication behaviour
Message-ID: <1060233956.2639.13.camel@192_168_0_100>

Hi

I have an authenhandler that basically ignores authentication headers
for GET requests, but requires them to be present for POST requests.

With Apache 2.0.46 this worked fine with a setup like e.g.
<Directory /opt/midir/>
       SetHandler python-program
       AddHandler python-program .py
       PythonHandler my_handler
       PythonAuthenHandler my_handler
       AuthType Basic
       AuthName "Restricted Area"
</Directory>

In 2.0.47 the authenhandler doesn't get called unless I add
      require valid-user
to the above. But this makes browsers pop up a password dialog for
requests without authentication headers (GET requests in this case).

Is there any way to make the browser not pop up the password dialog, but
still have the authenhandler called? I.e. where does the response get
generated that returns a "authentication required" value to the browser,
if not in the authenhandler?

Any help appreciated!

Conrad

-- 
Conrad Steenberg <conrad@hep.caltech.edu>
-- 

From mike.looijmans at asml.com  Thu Aug  7 07:47:14 2003
From: mike.looijmans at asml.com (Mike Looijmans)
Date: Fri Jan  9 22:00:16 2004
Subject: [mod_python] Authentication behaviour
Message-ID: <01c35ca7$5ad97380$926a1e6e@wsasd464>

I think in this case, you may want to consider the alternative, which is to
just provide a 'regular' request handler, and when authentication is
required but not given, just return a "401 Unauthorized" response with a
WWW-Authenticate header specifying the realm.

That will give the user a password popup and the browser will then retry the
same request. Note that for large POST request, this is wasting a lot of
bandwidth, as the first (and therefore unauthorized) POST request will be
completely rejected! It may be better to direct the user to a GET page first
to authenticate, and only after that page start doing the POST things.

Note that (unless the "Digest" authentication algorithm is used) the "Basic"
HTTP authentication is highly insecure and therefore you should never ever
use unix account data for this. Digest is only supported by IE and probably
the newer Mozilla's (haven't tried those, NS 6 did not support it).

I prefer using session cookies for authentication, since that is (if
implemented properly) more secure and allows the user to log out.

Mike.

-----Original Message-----
From: Conrad Steenberg <conrad@hep.caltech.edu>
To: ModPython mail list <mod_python@modpython.org>
Date: Thursday, August 07, 2003 7:31 AM
Subject: [mod_python] Authentication behaviour


>Hi
>
>I have an authenhandler that basically ignores authentication headers
>for GET requests, but requires them to be present for POST requests.
>
>With Apache 2.0.46 this worked fine with a setup like e.g.
><Directory /opt/midir/>
>       SetHandler python-program
>       AddHandler python-program .py
>       PythonHandler my_handler
>       PythonAuthenHandler my_handler
>       AuthType Basic
>       AuthName "Restricted Area"
></Directory>
>
>In 2.0.47 the authenhandler doesn't get called unless I add
>      require valid-user
>to the above. But this makes browsers pop up a password dialog for
>requests without authentication headers (GET requests in this case).
>
>Is there any way to make the browser not pop up the password dialog, but
>still have the authenhandler called? I.e. where does the response get
>generated that returns a "authentication required" value to the browser,
>if not in the authenhandler?
>
>Any help appreciated!
>
>Conrad
>
>--
>Conrad Steenberg <conrad@hep.caltech.edu>
>--
>
>_______________________________________________
>Mod_python mailing list
>Mod_python@modpython.org
>http://mailman.modpython.org/mailman/listinfo/mod_python
>
>
>
>

From davidf at sjsoft.com  Thu Aug  7 08:21:48 2003
From: davidf at sjsoft.com (David Fraser)
Date: Fri Jan  9 22:00:16 2004
Subject: [mod_python] Authentication behaviour
In-Reply-To: <01c35ca7$5ad97380$926a1e6e@wsasd464>
References: <01c35ca7$5ad97380$926a1e6e@wsasd464>
Message-ID: <3F31EFFC.7090603@sjsoft.com>

Mike Looijmans wrote:

>Note that (unless the "Digest" authentication algorithm is used) the "Basic"
>HTTP authentication is highly insecure and therefore you should never ever
>use unix account data for this. Digest is only supported by IE and probably
>the newer Mozilla's (haven't tried those, NS 6 did not support it).
>  
>
Mozilla supported Digest authentication since December 2001 (see 
http://bugzilla.mozilla.org/show_bug.cgi?id=15860)
Netscape 6 was released in December 2000 so doesn't include it; Mozilla 
0.9.7 or higher and Netscape 7.0 or higher should include it.
However, note this article about incompatibilities with at least some 
versions of IE and Apache:
http://www.eweek.com/print_article/0,3668,a%3D24177,00.asp
I think I've seen problems from this, so I would concur with the advice 
about using session cookies if possible.
David

>I prefer using session cookies for authentication, since that is (if
>implemented properly) more secure and allows the user to log out.
>
>Mike.
>  
>


From etienne at cs.vu.nl  Thu Aug  7 09:44:54 2003
From: etienne at cs.vu.nl (Etienne Posthumus)
Date: Fri Jan  9 22:00:16 2004
Subject: [mod_python] Authentication behaviour
In-Reply-To: <3F31EFFC.7090603@sjsoft.com>
References: <01c35ca7$5ad97380$926a1e6e@wsasd464>
	<3F31EFFC.7090603@sjsoft.com>
Message-ID: <Pine.GSO.4.53.0308070939460.10965@flits.cs.vu.nl>

On Thu, 7 Aug 2003, David Fraser wrote:
> However, note this article about incompatibilities with at least some
> versions of IE and Apache:
> http://www.eweek.com/print_article/0,3668,a%3D24177,00.asp
> I think I've seen problems from this, so I would concur with the advice
> about using session cookies if possible.

It is IMHO a pity that the 'proper' authentication methods for HTTP don't
really work broadly enough. In my experience Digest works OK'ish for
simple URIs, but as soon as you start using parameters in your URI MS IE
(and Mac OS X Safari) fails as it passes throught the realms differently
to what Apache expects.

Bugger. :-( So at the moment I use SSL + Basic with a self-signed
certificate. Not ideal but the only pragmatic choice.

Etienne Posthumus
Programmer, IIDS - Intelligent Interactive Distributed Systems
http://www.iids.org/
Vrije Universiteit Amsterdam
----------------------------
From vlindberg at verio.net  Thu Aug  7 09:04:51 2003
From: vlindberg at verio.net (VanL)
Date: Fri Jan  9 22:00:16 2004
Subject: [mod_python] Persistent db connections
Message-ID: <3F326A93.5060505@verio.net>

Hello,

I am using quixote+mod_python as a front-end for a database app.  Based 
on the example in the faq, it looks like I could just make the 
connection in a separate module and mod_python would automatically make 
the database connections persist. 

For example,

if I have code that is run by mod_python

=== persistdb.py ==================
import psycopg as db
def connect():
    global connection
    try:
        conn = connection
        return conn
    except NameError:
        connection = db.connect(connection_string)
    return connection

=== application.py ==================
import persistdb
conn = persistdb.connect()
# Use conn here

 From the FAQ, it appears that the db connection "connection" would 
persist transparently.  Is this a correct understanding?
If that is true, would there be any benefit to using dbpool, as opposed 
to the code posted above?

Thanks,

VanL


From conrad at hep.caltech.edu  Thu Aug  7 08:30:12 2003
From: conrad at hep.caltech.edu (Conrad Steenberg)
Date: Fri Jan  9 22:00:16 2004
Subject: [mod_python] Authentication behaviour
In-Reply-To: <01c35ca7$5ad97380$926a1e6e@wsasd464>
References: <01c35ca7$5ad97380$926a1e6e@wsasd464>
Message-ID: <1060270212.3569.21.camel@192_168_0_100>

On Wed, 2003-08-06 at 22:47, Mike Looijmans wrote:
> I think in this case, you may want to consider the alternative, which is to
> just provide a 'regular' request handler, and when authentication is
> required but not given, just return a "401 Unauthorized" response with a
> WWW-Authenticate header specifying the realm.

> That will give the user a password popup and the browser will then retry the
> same request. Note that for large POST request, this is wasting a lot of
> bandwidth, as the first (and therefore unauthorized) POST request will be
> completely rejected! It may be better to direct the user to a GET page first
> to authenticate, and only after that page start doing the POST things.

Yes, eliminating this roundtrip is exactly what I'm trying to do. The
problem is that Apache itself sends the 401 reply at some stage without
bothering to consult my authenhandler ;-)

Thanks for your reply!
Conrad
-- 

From conrad at hep.caltech.edu  Thu Aug  7 08:36:30 2003
From: conrad at hep.caltech.edu (Conrad Steenberg)
Date: Fri Jan  9 22:00:16 2004
Subject: [mod_python] Persistent db connections
In-Reply-To: <3F326A93.5060505@verio.net>
References: <3F326A93.5060505@verio.net>
Message-ID: <1060270589.3569.28.camel@192_168_0_100>

Hi Van

Doing it the way you describe would work, but depending on the DB and
Apache settings, you might have more Apache processes spawned than the
number of connections your DB can handle.

Using dbpool would make your web app fail more gracefully, i.e. get
slower with more connections, instead of giving some users an error that
it was unable to connect to the DB, as you often see on overloaded
discussion sites.

Cheers

Conrad

On Thu, 2003-08-07 at 08:04, VanL wrote:
> Hello,
> 
> I am using quixote+mod_python as a front-end for a database app.  Based 
> on the example in the faq, it looks like I could just make the 
> connection in a separate module and mod_python would automatically make 
> the database connections persist. 
> 
> For example,
> 
> if I have code that is run by mod_python
> 
> === persistdb.py ==================
> import psycopg as db
> def connect():
>     global connection
>     try:
>         conn = connection
>         return conn
>     except NameError:
>         connection = db.connect(connection_string)
>     return connection
> 
> === application.py ==================
> import persistdb
> conn = persistdb.connect()
> # Use conn here
> 
>  From the FAQ, it appears that the db connection "connection" would 
> persist transparently.  Is this a correct understanding?
> If that is true, would there be any benefit to using dbpool, as opposed 
> to the code posted above?
> 
> Thanks,
> 
> VanL
> 
> 
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
-- 

From vlindberg at verio.net  Thu Aug  7 11:17:25 2003
From: vlindberg at verio.net (VanL)
Date: Fri Jan  9 22:00:16 2004
Subject: [mod_python] Persistent db connections
In-Reply-To: <1060270589.3569.28.camel@192_168_0_100>
References: <3F326A93.5060505@verio.net>
	<1060270589.3569.28.camel@192_168_0_100>
Message-ID: <3F3289A5.8090604@verio.net>

Conrad Steenberg wrote:

>Using dbpool would make your web app fail more gracefully, i.e. get
>slower with more connections, instead of giving some users an error that
>it was unable to connect to the DB, as you often see on overloaded
>discussion sites.
>
Is this correct?  I thought that even dbpool would not pool resources 
between different apache processes.  Thus having a 
one-connection-per-process (or two, or three, but some fixed number) 
rule along with an apache maxclients setting would tend to keep the 
database connections within an acceptable range.

If the max number of clients could be known, regardless of the number of 
apache child processes, that would be great.  However, that doesn't 
match my understanding of how it works.

VanL

From conrad at hep.caltech.edu  Thu Aug  7 10:51:01 2003
From: conrad at hep.caltech.edu (Conrad Steenberg)
Date: Fri Jan  9 22:00:16 2004
Subject: [mod_python] Persistent db connections
In-Reply-To: <3F3289A5.8090604@verio.net>
References: <3F326A93.5060505@verio.net><3F3289A5.8090604@verio.net>
Message-ID: <1060278661.5313.28.camel@heppc22>

Hi Van

You're right, I confused dbpool (python) with dbpool (java) which does
what I described.

If you can provide a DB connection limit >= the Apache connection limit
you should probably be fine. 

>From python the SqlRelay also does what I described (allow many more
connections to the DB than the DB connection limit). See
http://sqlrelay.sourceforge.net/ and esp.
http://sqlrelay.sourceforge.net/sqlrelay/faq.html#howwork

Cheers

Conrad

On Thu, 2003-08-07 at 10:17, VanL wrote:
> Conrad Steenberg wrote:
> 
> >Using dbpool would make your web app fail more gracefully, i.e. get
> >slower with more connections, instead of giving some users an error that
> >it was unable to connect to the DB, as you often see on overloaded
> >discussion sites.
> >
> Is this correct?  I thought that even dbpool would not pool resources 
> between different apache processes.  Thus having a 
> one-connection-per-process (or two, or three, but some fixed number) 
> rule along with an apache maxclients setting would tend to keep the 
> database connections within an acceptable range.
> 
> If the max number of clients could be known, regardless of the number of 
> apache child processes, that would be great.  However, that doesn't 
> match my understanding of how it works.
> 
> VanL
-- 
Conrad Steenberg <conrad@hep.caltech.edu>

From fgeter at itc.nrcs.usda.gov  Thu Aug  7 16:30:17 2003
From: fgeter at itc.nrcs.usda.gov (Geter, Frank)
Date: Fri Jan  9 22:00:16 2004
Subject: [mod_python] Help with mod_python install
Message-ID: <768D32B675BED311968F009027DE9E3001D01043@rocky.itc.nrcs.usda.gov>

I am having trouble getting python scripts to run after installing
mod_python from a Mandrake 9.1 rpm.

I am running:
Mandrake 9.1
Apache 2.044 
mod_python 3.0.1 installed from
apache2-mod_python-2.0.44_3.0.1-1mdk.i586.rpm

I no NOTHING about apache and that is probably my problem.  I have edited
httpd2.conf file to include the Directory tag as per instructions.  I have
made the python script executable (755) mode.  Apache is running OK.

Need help!

Frank Geter
2150 Centre Avenue, Bldg. A
Fort Collins, CO 80526-1891
Ph# (970) 295-5536
Fax# (970) 295-5414


From mike.looijmans at asml.com  Fri Aug  8 07:25:15 2003
From: mike.looijmans at asml.com (Mike Looijmans)
Date: Fri Jan  9 22:00:16 2004
Subject: [mod_python] Persistent db connections
Message-ID: <01c35d6d$727b2f80$926a1e6e@wsasd464>

More importantly, make sure that your DB engine supports multiple threads
over a single connection.

If you're using a threading MPM, there will be multiple clients sharing the
same connection.

For MySQL for example this will fail if you also use scrolling cursors,
since you can have only one such cursor per connection.

What I did was to use a threading-only MPM and have each request grab a DB
connection from a pool (and remove it), and when done, it returns the DB
object to the pool. If the pool is empty, a new connection object is created
(so the pool grows automatically to meet demand).
This allows many threads to use the same connection objects, but no threads
will ever share the same object.

If the number of connections is limited, you could create a fixed number of
objects and do a lock-and-wait until one is available when the pool is
drained.

Mike.

-----Original Message-----
From: VanL <vlindberg@verio.net>
To: Conrad Steenberg <conrad@hep.caltech.edu>
Cc: ModPython mail list <mod_python@modpython.org>
Date: Thursday, August 07, 2003 7:22 PM
Subject: Re: [mod_python] Persistent db connections


>Conrad Steenberg wrote:
>
>>Using dbpool would make your web app fail more gracefully, i.e. get
>>slower with more connections, instead of giving some users an error that
>>it was unable to connect to the DB, as you often see on overloaded
>>discussion sites.
>>
>Is this correct?  I thought that even dbpool would not pool resources
>between different apache processes.  Thus having a
>one-connection-per-process (or two, or three, but some fixed number)
>rule along with an apache maxclients setting would tend to keep the
>database connections within an acceptable range.
>
>If the max number of clients could be known, regardless of the number of
>apache child processes, that would be great.  However, that doesn't
>match my understanding of how it works.


From DFarrell at ScholasticLibrary.com  Fri Aug  8 10:21:23 2003
From: DFarrell at ScholasticLibrary.com (Farrell, Doug)
Date: Fri Jan  9 22:00:16 2004
Subject: [mod_python] Problem understanding PythonAccessHandler
Message-ID: <582005C4B6AE4B4CAD684A93D283A16F01FFBE12@corpex01.corp.scholasticinc.local>

Hi all,

I'm trying to make use of mod_python to build a content server. This server
gets it's content from one of our product servers and strips out irrelevant
stuff and delivers that. The product server is authenticated and we use a
mod_perl script to do that part. I'm not at all familiar with mod_perl or
Perl for that matter, but would like to do the authentication/access using
mod_python. However, I'm having problems setting up httpd.conf to do the
right thing. Here is a section of http.conf from the product server that
uses mod_perl:

	#authenticate the whole product
	<Location /gme-ol/*.html>
       		PerlAccessHandler Apache::grolier::grolier_auth
	</Location>

	#authenticate the applications and log them as well.
	<Location /cgi-bin>
       		PerlAccessHandler Apache::grolier::grolier_auth
	</Location>

Here is a section of my content server http.conf:

	ScriptAlias /cs /data/cs/handlers

	<Location /cs>
		SetHandler python-program
		PythonHandler mod_python.publisher
		PythonDebug On
	</Location>

	<Directory /cs/gme/handler>
		AddHandler python-program .py
		PythonAccessHandler gme_auth
	</Directory>

My script, gme_auth.py just returns apache.OK for now till I figure out how
to authenticate. But it looks like it's never being called. 

Can anyone give me some help about how to set this up correctly?

Thanks in advance for your help,
Doug Farrell
From rey4 at columbia.edu  Sat Aug  9 11:01:21 2003
From: rey4 at columbia.edu (Russell Yanofsky)
Date: Fri Jan  9 22:00:16 2004
Subject: [mod_python] script_name bug?
Message-ID: <bh32ej$m9l$1@main.gmane.org>

I've noticed that req.subprocess_env['SCRIPT_NAME'] seems to have the wrong
value whenever the requested URL ends in a forward slash. This happens with
mod_python 3.0.3 and apache 2.0.47. Here are some examples:

  Requested URL: /mptest/mptest.py/
    Actual SCRIPT_NAME = /mptest/mptest.py/
    Expected SCRIPT_NAME = /mptest/mptest.py
    PATH_INFO = /

  Requested URL: /mptest/mptest.py/abc/
    Actual SCRIPT_NAME = /mptest/mptest.py/abc
    Expected SCRIPT_NAME = /mptest/mptest.py
    PATH_INFO = /abc/

  Requested URL: /mptest/mptest.py/abc/123/
    Actual SCRIPT_NAME = /mptest/mptest.py/abc/123
    Expected SCRIPT_NAME = /mptest/mptest.py
    PATH_INFO = /abc/123/

When the request doesn't end with a forward slash there's no problem:

  Requested URL: /mptest/mptest.py
    Actual SCRIPT_NAME = /mptest/mptest.py
    Expected SCRIPT_NAME = /mptest/mptest.py
    PATH_INFO =

  Requested URL: /mptest/mptest.py/abc
    Actual SCRIPT_NAME = /mptest/mptest.py
    Expected SCRIPT_NAME = /mptest/mptest.py
    PATH_INFO = /abc

  Requested URL: /mptest/mptest.py/abc/123
    Actual SCRIPT_NAME = /mptest/mptest.py
    Expected SCRIPT_NAME = /mptest/mptest.py
    PATH_INFO = /abc/123

Here's the code I used to produce the above output:

-- begin .htaccess listing --
AddHandler python-program .py
PythonHandler mptest
PythonDebug On
-- end .htaccess listing -- 

-- begin mptest.py listing --
from mod_python import apache

def handler(req):
  req.content_type = 'text/plain'
  env = req.subprocess_env
  req.write('Requested URL: %s\n' % env['REQUEST_URI'])
  req.write('  Actual SCRIPT_NAME = %s\n' % env['SCRIPT_NAME'])
  fixenv(env)
  req.write('  Expected SCRIPT_NAME = %s\n' % env['SCRIPT_NAME'])
  req.write('  PATH_INFO = %s\n' % env.get('PATH_INFO', ''))
  return apache.OK

# This is only a partial fix, does not work in the presence
# of double slashes in the PATH_INFO segment
def fixenv(env):
  path_info = env.get('PATH_INFO', '')
  if path_info and path_info[-1] == '/':
    script_name = env['SCRIPT_NAME']
    path_len = len(path_info) - 1
    if path_len:
      assert script_name[-path_len:] == path_info[:-1]
      env['SCRIPT_NAME'] = script_name[:-path_len]
    else:
      assert script_name[-1] == '/'
      env['SCRIPT_NAME'] = script_name[:-1]
-- end mptest.py listing --

This behavior only seems to occur in mod_python. SCRIPT_NAME does seem to
have the right value in CGI scripts.

- Russ


From rey4 at columbia.edu  Sat Aug  9 11:16:48 2003
From: rey4 at columbia.edu (Russell Yanofsky)
Date: Fri Jan  9 22:00:16 2004
Subject: [mod_python] script_name bug?
Message-ID: <00b001c35e89$411dd330$daf627a0@turtle>

I've noticed that req.subprocess_env['SCRIPT_NAME'] seems to have the wrong
value whenever the requested URL ends in a forward slash. This happens with
mod_python 3.0.3 and apache 2.0.47. Here are some examples:

  Requested URL: /mptest/mptest.py/
    Actual SCRIPT_NAME = /mptest/mptest.py/
    Expected SCRIPT_NAME = /mptest/mptest.py
    PATH_INFO = /

  Requested URL: /mptest/mptest.py/abc/
    Actual SCRIPT_NAME = /mptest/mptest.py/abc
    Expected SCRIPT_NAME = /mptest/mptest.py
    PATH_INFO = /abc/

  Requested URL: /mptest/mptest.py/abc/123/
    Actual SCRIPT_NAME = /mptest/mptest.py/abc/123
    Expected SCRIPT_NAME = /mptest/mptest.py
    PATH_INFO = /abc/123/

When the request doesn't end with a forward slash there's no problem:

  Requested URL: /mptest/mptest.py
    Actual SCRIPT_NAME = /mptest/mptest.py
    Expected SCRIPT_NAME = /mptest/mptest.py
    PATH_INFO =

  Requested URL: /mptest/mptest.py/abc
    Actual SCRIPT_NAME = /mptest/mptest.py
    Expected SCRIPT_NAME = /mptest/mptest.py
    PATH_INFO = /abc

  Requested URL: /mptest/mptest.py/abc/123
    Actual SCRIPT_NAME = /mptest/mptest.py
    Expected SCRIPT_NAME = /mptest/mptest.py
    PATH_INFO = /abc/123

Here's the code I used to produce the above output:

-- begin .htaccess listing --
AddHandler python-program .py
PythonHandler mptest
PythonDebug On
-- end .htaccess listing -- 

-- begin mptest.py listing --
from mod_python import apache

def handler(req):
  req.content_type = 'text/plain'
  env = req.subprocess_env
  req.write('Requested URL: %s\n' % env['REQUEST_URI'])
  req.write('  Actual SCRIPT_NAME = %s\n' % env['SCRIPT_NAME'])
  fixenv(env)
  req.write('  Expected SCRIPT_NAME = %s\n' % env['SCRIPT_NAME'])
  req.write('  PATH_INFO = %s\n' % env.get('PATH_INFO', ''))
  return apache.OK

# This is only a partial fix, does not work in the presence
# of double slashes in the PATH_INFO segment
def fixenv(env):
  path_info = env.get('PATH_INFO', '')
  if path_info and path_info[-1] == '/':
    script_name = env['SCRIPT_NAME']
    path_len = len(path_info) - 1
    if path_len:
      assert script_name[-path_len:] == path_info[:-1]
      env['SCRIPT_NAME'] = script_name[:-path_len]
    else:
      assert script_name[-1] == '/'
      env['SCRIPT_NAME'] = script_name[:-1]
-- end mptest.py listing --

This behavior only seems to occur in mod_python. SCRIPT_NAME does seem to
have the right value in CGI scripts.

- Russ

From grisha at modpython.org  Sat Aug  9 13:13:09 2003
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 22:00:16 2004
Subject: [mod_python] script_name bug?
In-Reply-To: <bh32ej$m9l$1@main.gmane.org>
References: <bh32ej$m9l$1@main.gmane.org>
Message-ID: <20030809123926.T83158@onyx.ispol.com>


Russel -

Since mod_python isn't a CGI environment (and doesn't care to be one
either), the definition of SCRIPT_NAME is rather blurry.

In CGI it is meant to refer to the script which is executed as a separate
process - in mod_python there is no separate process, and the file
containing the code isn't located by the web server, but rather follows
the Python sys.path search rules.

I don't think it would be right to tinker with what req.subprocess_env
contains - it should return whatever apache put there, uncensored, so to
that degree it's not a bug as far as I am concerned.

P.S. If you look at build_cgi_env() in apache.py, it seems to adress this
issue.

Grisha

On Sat, 9 Aug 2003, Russell Yanofsky wrote:

> I've noticed that req.subprocess_env['SCRIPT_NAME'] seems to have the wrong
> value whenever the requested URL ends in a forward slash. This happens with
> mod_python 3.0.3 and apache 2.0.47. Here are some examples:
>
>   Requested URL: /mptest/mptest.py/
>     Actual SCRIPT_NAME = /mptest/mptest.py/
>     Expected SCRIPT_NAME = /mptest/mptest.py
>     PATH_INFO = /
>
>   Requested URL: /mptest/mptest.py/abc/
>     Actual SCRIPT_NAME = /mptest/mptest.py/abc
>     Expected SCRIPT_NAME = /mptest/mptest.py
>     PATH_INFO = /abc/
>
>   Requested URL: /mptest/mptest.py/abc/123/
>     Actual SCRIPT_NAME = /mptest/mptest.py/abc/123
>     Expected SCRIPT_NAME = /mptest/mptest.py
>     PATH_INFO = /abc/123/
>
> When the request doesn't end with a forward slash there's no problem:
>
>   Requested URL: /mptest/mptest.py
>     Actual SCRIPT_NAME = /mptest/mptest.py
>     Expected SCRIPT_NAME = /mptest/mptest.py
>     PATH_INFO =
>
>   Requested URL: /mptest/mptest.py/abc
>     Actual SCRIPT_NAME = /mptest/mptest.py
>     Expected SCRIPT_NAME = /mptest/mptest.py
>     PATH_INFO = /abc
>
>   Requested URL: /mptest/mptest.py/abc/123
>     Actual SCRIPT_NAME = /mptest/mptest.py
>     Expected SCRIPT_NAME = /mptest/mptest.py
>     PATH_INFO = /abc/123
>
> Here's the code I used to produce the above output:
>
> -- begin .htaccess listing --
> AddHandler python-program .py
> PythonHandler mptest
> PythonDebug On
> -- end .htaccess listing --
>
> -- begin mptest.py listing --
> from mod_python import apache
>
> def handler(req):
>   req.content_type = 'text/plain'
>   env = req.subprocess_env
>   req.write('Requested URL: %s\n' % env['REQUEST_URI'])
>   req.write('  Actual SCRIPT_NAME = %s\n' % env['SCRIPT_NAME'])
>   fixenv(env)
>   req.write('  Expected SCRIPT_NAME = %s\n' % env['SCRIPT_NAME'])
>   req.write('  PATH_INFO = %s\n' % env.get('PATH_INFO', ''))
>   return apache.OK
>
> # This is only a partial fix, does not work in the presence
> # of double slashes in the PATH_INFO segment
> def fixenv(env):
>   path_info = env.get('PATH_INFO', '')
>   if path_info and path_info[-1] == '/':
>     script_name = env['SCRIPT_NAME']
>     path_len = len(path_info) - 1
>     if path_len:
>       assert script_name[-path_len:] == path_info[:-1]
>       env['SCRIPT_NAME'] = script_name[:-path_len]
>     else:
>       assert script_name[-1] == '/'
>       env['SCRIPT_NAME'] = script_name[:-1]
> -- end mptest.py listing --
>
> This behavior only seems to occur in mod_python. SCRIPT_NAME does seem to
> have the right value in CGI scripts.
>
> - Russ
>
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>
From damon at asianreflection.com  Sun Aug 10 15:05:31 2003
From: damon at asianreflection.com (Damon Lynch)
Date: Fri Jan  9 22:00:16 2004
Subject: [mod_python] Cannot run test script: (Re)importing module 'mptest'
Message-ID: <1060484731.2960.94.camel@damon.asianreflection.com>

Hi,

There is an example test script in:

http://www.modpython.org/live/current/doc-html/inst-testing.html

I cannot get the example test script to run: the "Hello World" is being
dumped to the browser incorrectly - the browser prompts to save it,
instead of displaying it.  I've checked and rechecked (and rechecked
again!!) and I believe I've followed the instructions as best I can.

I'm running (on Mandrake 9.1):

apache2-2.0.47-1.1mdk
apache2-mod_python-2.0.47_3.0.3-4mdk
python-2.2.2-6mdk

httpd2.conf contains:

LoadModule python_module                 extramodules/mod_python.so

commonhttpd.conf contains:

<Directory "/var/www/html/test/">
  AddHandler python-program .py
  PythonHandler mptest
  PythonDebug On
</Directory>

the apache error log shows:

[notice] mod_python: (Re)importing module 'mptest'

the URL I'm using is:
http://myserver/test/mptest

Any help is much appreciated!

Thanks
Damon

From rey4 at columbia.edu  Sat Aug  9 23:31:56 2003
From: rey4 at columbia.edu (Russell Yanofsky)
Date: Fri Jan  9 22:00:16 2004
Subject: [mod_python] Re: script_name bug?
References: <bh32ej$m9l$1@main.gmane.org>
	<20030809123926.T83158@onyx.ispol.com>
Message-ID: <bh4ebb$qlq$1@sea.gmane.org>

Gregory (Grisha) Trubetskoy wrote:
> Russel -
>
> Since mod_python isn't a CGI environment (and doesn't care to be one
> either), the definition of SCRIPT_NAME is rather blurry.

It might be blurry when a directory handler is used, but it's not at all
blurry in
this case, where mod_python is acting as a handler for requests for
.py files. SCRIPT_NAME should simply point to the .py file that has
been requested.

> In CGI it is meant to refer to the script which is executed as a
> separate process - in mod_python there is no separate process, and
> the file containing the code isn't located by the web server, but
> rather follows the Python sys.path search rules.

The CGI specification may define SCRIPT_NAME in terms of processes and
script files, but the SCRIPT_NAME is not just used for CGI. It's used in PHP
and ASP and other web interfaces, and is also useful in mod_python when
mod_python doesn't mangle it.

> I don't think it would be right to tinker with what req.subprocess_env
> contains - it should return whatever apache put there, uncensored, so
> to that degree it's not a bug as far as I am concerned.

But, AFAICT, it is tinkering with the value. Under the apache CGI
environment, the SCRIPT_NAME value is just the portion of the URL pointing
at the script being handled, but in mod_python when the request ends in a
slash, the value has extra stuff appended. So mod_python must be doing
something that mod_cgi is not.

> P.S. If you look at build_cgi_env() in apache.py, it seems to adress
> this issue.

That code does sort of address this issue, but in an indirect way. Instead
of using the mangled SCRIPT_NAME value in subprocess_env, it recomputes it
using req.uri and req.path_info. This is similar to the workaround I used in
my last posting, and it also will fail in the presence of double slashes in
PATH_INFO. It would be better to fix this bug instead of using these
unreliable workarounds.

- Russ


From greenbeard400 at yahoo.com  Sun Aug 10 12:40:33 2003
From: greenbeard400 at yahoo.com (Greenbeard)
Date: Fri Jan  9 22:00:16 2004
Subject: [mod_python] publisher handler  and form data 
Message-ID: <20030810194033.35760.qmail@web21301.mail.yahoo.com>

I am having trouble getting some info from the
req.form variable. 

I have a form with <input> tags like
<input type="text" name="ID" value="" size="40"
maxlength="255">


now I can get the field name and the value easily 
using something like :

    for field in form.keys():    
            value = form.__getitem__(field)

etc
   

but I can not seem to get the type or size or any
other input tag variables. To me it looks like this is
not supported by mod_python or am I just not going
about it correctly?  



Thanks,

gb400


__________________________________
Do you Yahoo!?
Yahoo! SiteBuilder - Free, easy-to-use web site design software
http://sitebuilder.yahoo.com
From rey4 at columbia.edu  Sun Aug 10 19:02:13 2003
From: rey4 at columbia.edu (Russell Yanofsky)
Date: Fri Jan  9 22:00:16 2004
Subject: [mod_python] Re: publisher handler  and form data
References: <20030810194033.35760.qmail@web21301.mail.yahoo.com>
Message-ID: <bh6itj$co6$1@sea.gmane.org>

Greenbeard wrote:
> I am having trouble getting some info from the
> req.form variable.
>
> I have a form with <input> tags like
> <input type="text" name="ID" value="" size="40"
> maxlength="255">
>
>
> now I can get the field name and the value easily
> using something like :
>
>     for field in form.keys():
>             value = form.__getitem__(field)
>
> etc
>
>
> but I can not seem to get the type or size or any
> other input tag variables. To me it looks like this is
> not supported by mod_python or am I just not going
> about it correctly?

You can't read those values with mod_python (or anything else that runs at
the server) because the browser does not send them. The only thing the
browser sends to the server is a list of (name, value) pairs

- Russ


From rey4 at columbia.edu  Sun Aug 10 19:07:10 2003
From: rey4 at columbia.edu (Russell Yanofsky)
Date: Fri Jan  9 22:00:16 2004
Subject: [mod_python] 
	Re: Cannot run test script: (Re)importing module 'mptest'
References: <1060484731.2960.94.camel@damon.asianreflection.com>
Message-ID: <bh6j6s$d1t$1@sea.gmane.org>

Damon Lynch wrote:
> Hi,
> 
> There is an example test script in:
> 
> http://www.modpython.org/live/current/doc-html/inst-testing.html
> 
> I cannot get the example test script to run
> ...
> the URL I'm using is:
> http://myserver/test/mptest
> 

Should that be http://myserver/test/mptest.py ?

- Russ

From rey4 at columbia.edu  Sun Aug 10 19:10:31 2003
From: rey4 at columbia.edu (Russell Yanofsky)
Date: Fri Jan  9 22:00:16 2004
Subject: [mod_python] Re: Help with mod_python install
References: <768D32B675BED311968F009027DE9E3001D01043@rocky.itc.nrcs.usda.gov>
Message-ID: <bh6jd5$dc8$1@sea.gmane.org>

Geter, Frank wrote:
> I am having trouble getting python scripts to run after installing
> mod_python from a Mandrake 9.1 rpm.

So what happens when you try to run them? Is there an error sent to the
browser or the apache error log?

- Russ


From grisha at modpython.org  Sun Aug 10 20:21:59 2003
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 22:00:16 2004
Subject: [mod_python] Re: script_name bug?
In-Reply-To: <bh4ebb$qlq$1@sea.gmane.org>
References: <bh32ej$m9l$1@main.gmane.org>
	<20030809123926.T83158@onyx.ispol.com> <bh4ebb$qlq$1@sea.gmane.org>
Message-ID: <20030810200027.R92644@onyx.ispol.com>


On Sat, 9 Aug 2003, Russell Yanofsky wrote:

> Gregory (Grisha) Trubetskoy wrote:
> > Russel -
> >
> > Since mod_python isn't a CGI environment (and doesn't care to be one
> > either), the definition of SCRIPT_NAME is rather blurry.
>
> It might be blurry when a directory handler is used, but it's not at all
> blurry in this case, where mod_python is acting as a handler for
> requests for .py files. SCRIPT_NAME should simply point to the .py file
> that has been requested.

Well, the file requested doesn't have anything to do with what
PythonHandler specifies, e.g. in your example it will respond just the
same with requested url of "/mptest/blahblah.py/abc/123" instead of
"/mptest/mptest.py/abc/123". The question then becomes should SCRIPT_NAME
be "/mptest/mptest.py" or "/mptest/blahblah.py"?

> > I don't think it would be right to tinker with what req.subprocess_env
> > contains - it should return whatever apache put there, uncensored, so
> > to that degree it's not a bug as far as I am concerned.
>
> But, AFAICT, it is tinkering with the value.

It sort of does. There is a place in requestobject.c where it removes the
trailing slash for something, then puts it back, and now I don't remember
why it does it, but it was some rather esoteric condition that caused
apache to infinite-recursively call some function... Since I don't
remember what the reason was, I was always hesitant to remove that bit of
code. It was put in years ago back in the apache 1.2 days, so it might be
safe to remove in 2.0... I guess we can try it at least.

Grisha
From damon at asianreflection.com  Mon Aug 11 19:03:21 2003
From: damon at asianreflection.com (Damon Lynch)
Date: Fri Jan  9 22:00:16 2004
Subject: [mod_python]  Re: Cannot run test script: (Re)importing module
	'mptest'
In-Reply-To: <bh6j6s$d1t$1@sea.gmane.org>
References: <1060484731.2960.94.camel@damon.asianreflection.com>
	 <bh6j6s$d1t$1@sea.gmane.org>
Message-ID: <1060585401.8445.5.camel@damon.asianreflection.com>

On Mon, 2003-08-11 at 11:07, Russell Yanofsky wrote:
> Damon Lynch wrote:
> > Hi,
> > 
> > There is an example test script in:
> > 
> > http://www.modpython.org/live/current/doc-html/inst-testing.html
> > 
> > I cannot get the example test script to run
> > ...
> > the URL I'm using is:
> > http://myserver/test/mptest
> > 
> 
> Should that be http://myserver/test/mptest.py ?
> 

Hi Russ,

That appears to make no difference.  When I inspect the headers I'm
getting the output as application/x-python instead of text/html:

HTTP/1.1 200 OKCRLF
Date: Mon, 11 Aug 2003 06:56:49 GMTCRLF
Server: Apache-AdvancedExtranetServer/2.0.47 (Mandrake Linux/1.1mdk) mod_python/3.0.3 Python/2.2.2 mod_ssl/2.0.47 OpenSSL/0.9.7aCRLF
Content-Location: mptest.pyCRLF
Vary: negotiate,acceptCRLF
TCN: choiceCRLF
Set-Cookie: Apache=207.200.81.211.1060585009151968; path=/; max-age=1209600CRLF
Connection: closeCRLF
Content-Type: application/x-pythonCRLF
Expires: Mon, 11 Aug 2003 06:56:49 GMTCRLF
CRLF
Hello World!


I'm bamboozled at this point!

Damon

From davidf at sjsoft.com  Mon Aug 11 09:23:51 2003
From: davidf at sjsoft.com (David Fraser)
Date: Fri Jan  9 22:00:16 2004
Subject: [mod_python]  Re: Cannot run test script: (Re)importing module
 'mptest'
In-Reply-To: <1060585401.8445.5.camel@damon.asianreflection.com>
References: <1060484731.2960.94.camel@damon.asianreflection.com>
	<bh6j6s$d1t$1@sea.gmane.org>
	<1060585401.8445.5.camel@damon.asianreflection.com>
Message-ID: <3F374487.7050906@sjsoft.com>

Damon Lynch wrote:

>On Mon, 2003-08-11 at 11:07, Russell Yanofsky wrote:
>  
>
>>Damon Lynch wrote:
>>    
>>
>>>Hi,
>>>
>>>There is an example test script in:
>>>
>>>http://www.modpython.org/live/current/doc-html/inst-testing.html
>>>
>>>I cannot get the example test script to run
>>>...
>>>the URL I'm using is:
>>>http://myserver/test/mptest
>>>
>>>      
>>>
>>Should that be http://myserver/test/mptest.py ?
>>
>>    
>>
>
>Hi Russ,
>
>That appears to make no difference.  When I inspect the headers I'm
>getting the output as application/x-python instead of text/html:
>
>HTTP/1.1 200 OKCRLF
>Date: Mon, 11 Aug 2003 06:56:49 GMTCRLF
>Server: Apache-AdvancedExtranetServer/2.0.47 (Mandrake Linux/1.1mdk) mod_python/3.0.3 Python/2.2.2 mod_ssl/2.0.47 OpenSSL/0.9.7aCRLF
>Content-Location: mptest.pyCRLF
>Vary: negotiate,acceptCRLF
>TCN: choiceCRLF
>Set-Cookie: Apache=207.200.81.211.1060585009151968; path=/; max-age=1209600CRLF
>Connection: closeCRLF
>Content-Type: application/x-pythonCRLF
>Expires: Mon, 11 Aug 2003 06:56:49 GMTCRLF
>CRLF
>Hello World!
>
>
>I'm bamboozled at this point!
>
>Damon
>  
>
So the content type is being set to application/x-python ... it seems 
likely to me that somewhere in your Apache configuration (mime.types?) 
you've got it set to return this mime type ... do a search for 
application/x-python in your Apache conf directory files and see what 
you find...

David

From rey4 at columbia.edu  Mon Aug 11 14:05:22 2003
From: rey4 at columbia.edu (Russell Yanofsky)
Date: Fri Jan  9 22:00:16 2004
Subject: [mod_python] Re: Re: script_name bug?
References: 
	<bh32ej$m9l$1@main.gmane.org><20030809123926.T83158@onyx.ispol.com>
	<bh4ebb$qlq$1@sea.gmane.org> <20030810200027.R92644@onyx.ispol.com>
Message-ID: <bh8lt0$hkm$1@sea.gmane.org>

Gregory (Grisha) Trubetskoy wrote:
> On Sat, 9 Aug 2003, Russell Yanofsky wrote:
>
>> Gregory (Grisha) Trubetskoy wrote:
>>> Russel -
>>>
>>> Since mod_python isn't a CGI environment (and doesn't care to be one
>>> either), the definition of SCRIPT_NAME is rather blurry.
>>
>> It might be blurry when a directory handler is used, but it's not at
>> all blurry in this case, where mod_python is acting as a handler for
>> requests for .py files. SCRIPT_NAME should simply point to the .py
>> file that has been requested.
>
> Well, the file requested doesn't have anything to do with what
> PythonHandler specifies, e.g. in your example it will respond just the
> same with requested url of "/mptest/blahblah.py/abc/123" instead of
> "/mptest/mptest.py/abc/123". The question then becomes should
> SCRIPT_NAME be "/mptest/mptest.py" or "/mptest/blahblah.py"?

It should be /mptest/blahblah.py, because that's the .py file that the
client requested. In general, it makes sense for SCRIPT_NAME to be a URL
to the file being handled, not the to the handler. Returning a URL to the
the python handler file would be equivalent to returning a url to mod_cgi.c
in a CGI request. This doesn't make sense and wouldn't be useful.

>>> I don't think it would be right to tinker with what
>>> req.subprocess_env contains - it should return whatever apache put
>>> there, uncensored, so to that degree it's not a bug as far as I am
>>> concerned.
>>
>> But, AFAICT, it is tinkering with the value.
>
> It sort of does. There is a place in requestobject.c where it removes
> the trailing slash for something, then puts it back, and now I don't
> remember why it does it, but it was some rather esoteric condition
> that caused apache to infinite-recursively call some function...
> Since I don't remember what the reason was, I was always hesitant to
> remove that bit of code. It was put in years ago back in the apache
> 1.2 days, so it might be safe to remove in 2.0... I guess we can try
> it at least.

I found the code you're talking about in get_request_object() in
src/mod_python.c. I removed the special case for the trailing slash, and
everything now seems to work correctly. Patches are attached for mod_python
2.7.8 and mod_python 3.0.3. I've tested them with apache 1.3.28 and apache
2.0.47 using the SetHandler directive and AddHandler directives, and didn't
encounter any errors, infinite loops, or other unexpected behavior.

- Russ
-------------- next part --------------
A non-text attachment was scrubbed...
Name: mod_python-2.7.8.diff
Type: application/octet-stream
Size: 1229 bytes
Desc: not available
Url : http://mailman.modpython.org/pipermail/mod_python/attachments/20030811/8718dca2/mod_python-2.7.8-0002.obj
-------------- next part --------------
A non-text attachment was scrubbed...
Name: mod_python-3.0.3.diff
Type: application/octet-stream
Size: 1544 bytes
Desc: not available
Url : http://mailman.modpython.org/pipermail/mod_python/attachments/20030811/8718dca2/mod_python-3.0.3-0002.obj
From grisha at modpython.org  Mon Aug 11 22:12:01 2003
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 22:00:16 2004
Subject: [mod_python] Re: Re: script_name bug?
In-Reply-To: <bh8lt0$hkm$1@sea.gmane.org>
References: <bh32ej$m9l$1@main.gmane.org><20030809123926.T83158@onyx.ispol.com>
	<bh4ebb$qlq$1@sea.gmane.org> <20030810200027.R92644@onyx.ispol.com>
	<bh8lt0$hkm$1@sea.gmane.org>
Message-ID: <20030811221051.B19156@onyx.ispol.com>


> Patches are attached for mod_python 2.7.8 and mod_python 3.0.3.

Thanks, patches are always welcome!

Grisha
From damon at asianreflection.com  Tue Aug 12 21:46:34 2003
From: damon at asianreflection.com (Damon Lynch)
Date: Fri Jan  9 22:00:16 2004
Subject: [mod_python]  Re: Cannot run test script: (Re)importing module
	'mptest'
In-Reply-To: <3F374487.7050906@sjsoft.com>
References: <1060484731.2960.94.camel@damon.asianreflection.com>
	 <bh6j6s$d1t$1@sea.gmane.org>
	 <1060585401.8445.5.camel@damon.asianreflection.com>
	 <3F374487.7050906@sjsoft.com>
Message-ID: <1060681593.12636.18.camel@damon.asianreflection.com>

On Mon, 2003-08-11 at 19:23, David Fraser wrote:
> >
> So the content type is being set to application/x-python ... it seems 
> likely to me that somewhere in your Apache configuration (mime.types?) 
> you've got it set to return this mime type ... do a search for 
> application/x-python in your Apache conf directory files and see what 
> you find...
> 

Thanks David.  That did the trick.  It seems to me that someone may like
to review putting the above advice on this page:

http://www.modpython.org/live/current/doc-html/inst-apacheconfig.html

Since Mandrake comes by default with:

application/x-python                      py
application/x-python-bytecode             pyc

It would certainly help people like me, who know a lot more about python
than they do about apache!! ;-)

Damon

From donegal at myrealbox.com  Thu Aug 14 00:39:43 2003
From: donegal at myrealbox.com (William J. Fellows)
Date: Fri Jan  9 22:00:16 2004
Subject: [mod_python] YAQA mod_python and the missing _apache module
Message-ID: <1634432327.20030814003943@myrealbox.com>

I'm sorry to trouble the list but I have not been able to get it
mod_python to work.  My setup is Python 2.2.2, Apache 2.0.47,
mod_python 3.0.3  Python root directory is e:\Python22  Apache's root
is E:\Program Files\Apache Group\Apache2  Windows 2k Professional

I have a sample python script sitting out in cgi-bin and it works just
fine.  The mptest file though, horks everytime.  Feel free to beat on
my server. 
http://65.26.28.214/cgi-bin/sample.py
http://65.26.28.214/cgi-bin/mptest.py


The error message is:
Premature end of script headers: mptest.py
Traceback (most recent call last):
  File "E:\Program Files\Apache Group\Apache2\cgi-bin\mptest.py", line 1, in ?
    from mod_python import apache
  File "E:\Python22\Lib\site-packages\mod_python\apache.py", line 67, in ?
    import _apache
ImportError: No module named _apache


Been here,
http://www.modpython.org/FAQ/faqw.py?req=show&file=faq02.001.htp
and I've been there
http://www.modpython.org/FAQ/faqw.py?req=show&file=faq02.002.htp

I believe I understand what that says and everything I could find about
it from the archived email messages but unless Apache is invoking the
python enviroment outside of apache, I have no clue what's going
wrong.  And if it is doing it outside, I have no idea how it got that
way.

Saw both pythonhome and pythonpath referenced so I've touched both of
them.

PYTHONHOME=e:\python22
PYTHONPATH=e:\python22;e:\python22\lib;E:\Python22\Lib\site-packages\mod_python;E:\Python22\Lib\site-packages

I'm at my wits end.  I know I can get Python running under IIS but as
I don't feel like patching daily, I thought I'd give Apache a whirl.
I've dutifully scoured the archives and applied what I saw there but
no go so anyone with some insight to offer would be worshiped from
afar.

/bill

p.s.

The link for full archives does not work.
http://www.modpython.org/pipermail/mod_python.mbox/mod_python.mbox
Fortunately, wget -R -a.gz worked just fine.




The relevant parts of my conf file look like

=-=-=-=-=-=-=-=-BEGIN httpd.conf=-=-====-=-=-=-=-=-=--=-
LoadModule python_module modules/mod_python.so
ScriptInterpreterSource Registry

<Directory "E:/Program Files/Apache Group/Apache2/htdocs">
    AddHandler python-program .py
#   I tried combinations of the next two lines but to no avail
#    AddHandler cgi-script .py
#    PythonHandler mptest

    PythonHandler mod_python.publisher
    PythonDebug On

    Options Indexes FollowSymLinks
    AllowOverride None
    Order allow,deny
    Allow from all

</Directory>
=-=-=-=-=-=-=-=-END httpd.conf=-=-====-=-=-=-=-=-=--=-


=-=-=-=-=-=-=-=-BEGIN sample.py=-=-====-=-=-=-=-=-=--=-
print "Content-type: text/html"
print
print "<pre>"
import os, sys
print "<strong>Python %s</strong>" % sys.version
for (x,y) in os.environ.items():
   print "%s\t%s" % (x, y)

print "\nsys.path"
for p in sys.path:
   print p
print "</pre>"

=-=-=-=-=-=-=-=-END sample.py=-=-====-=-=-=-=-=-=--=-


=-=-=-=-=-=-=-=-BEGIN mptest.py=-=-====-=-=-=-=-=-=--=-
from mod_python import apache

def handler(req):
    req.write("Hello World!")
    return apache.OK

=-=-=-=-=-=-=-=-END mptest.py=-=-====-=-=-=-=-=-=--=-

From davidf at sjsoft.com  Thu Aug 14 09:25:36 2003
From: davidf at sjsoft.com (David Fraser)
Date: Fri Jan  9 22:00:16 2004
Subject: [mod_python] YAQA mod_python and the missing _apache module
In-Reply-To: <1634432327.20030814003943@myrealbox.com>
References: <1634432327.20030814003943@myrealbox.com>
Message-ID: <3F3B3970.40300@sjsoft.com>

William J. Fellows wrote:

>The error message is:
>Premature end of script headers: mptest.py
>Traceback (most recent call last):
>  File "E:\Program Files\Apache Group\Apache2\cgi-bin\mptest.py", line 1, in ?
>    from mod_python import apache
>  File "E:\Python22\Lib\site-packages\mod_python\apache.py", line 67, in ?
>    import _apache
>ImportError: No module named _apache
>
>  
>
 From this error, it means you are putting mptest.py in your cgi-bin 
directory. If it is in there it is probably being run as an external 
Python script, which is not what you want as you won't have access to 
the mod_python internals.
Try moving it to a standard directory, then in an .htaccess or 
<Directory> section for that directory, make sure you have
  AddHandler python-program .py
  PythonHandler mptest.py
  PythonDebug On
(that's the correct combination out of what you quoted below).
Then feed back if that doesn't work.

>Been here,
>http://www.modpython.org/FAQ/faqw.py?req=show&file=faq02.001.htp
>and I've been there
>http://www.modpython.org/FAQ/faqw.py?req=show&file=faq02.002.htp
>
>I believe I understand what that says and everything I could find about
>it from the archived email messages but unless Apache is invoking the
>python enviroment outside of apache, I have no clue what's going
>wrong.  And if it is doing it outside, I have no idea how it got that
>way.
>
>Saw both pythonhome and pythonpath referenced so I've touched both of
>them.
>
>PYTHONHOME=e:\python22
>PYTHONPATH=e:\python22;e:\python22\lib;E:\Python22\Lib\site-packages\mod_python;E:\Python22\Lib\site-packages
>  
>
It looks from your log above like the path is fine, as you are importing 
mod_python.apache OK.
You will only be able to import _apache if you are really running inside 
mod_python.
If you want to test the path, comment out the import of apache (you can 
return 200 instead of apache.OK) and import sys ; in the handler do 
req.write("Path: %r\n" % sys.path) and you will get the actual value 
printed out.

Hope that helps
David


From davidf at sjsoft.com  Thu Aug 14 15:54:39 2003
From: davidf at sjsoft.com (David Fraser)
Date: Fri Jan  9 22:00:16 2004
Subject: [mod_python] Cookies and redirect...
Message-ID: <3F3B949F.8030806@sjsoft.com>

Hi

I came across the following problem and wondered if there was a workaround.
Basically I want to set a cookie in a certain directory, and at the same 
time issue a Redirect to another place.
So I wanted to do:
  req.headers_out.add('Set-Cookie', morsel.OutputString())
  req.headers_out.add('Location:', location)
  return apache.HTTP_MOVED_TEMPORARILY

However, I found that as soon as I return the HTTP_MOVED_TEMPORARILY, 
the Set-Cookie string seems to be removed from the headers going to the 
client (this was tested by using the livehttpheaders extension to Firebird).
I couldn't work out where in the code that was happening but suspect 
that it is standard Apache behaviour.
Is this because I'm not supposed to be allowed to do this, or is it odd?

(I have a workaround of having a page with a meta http-equiv="refresh", 
but wondered if there is a way to get it working as would like...)

Thanks
David


From grisha at modpython.org  Thu Aug 14 10:17:14 2003
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 22:00:17 2004
Subject: [mod_python] Cookies and redirect...
In-Reply-To: <3F3B949F.8030806@sjsoft.com>
References: <3F3B949F.8030806@sjsoft.com>
Message-ID: <20030814100919.U55932@onyx.ispol.com>


This is a feature of Apache. When it sees an error response (all 204 (no
content), 3xx (redirect), 4xx (client error) and 5xx (server error)),
which includes HTTP_MOVED_TEMPORARILY (even though it's not an error
technically), it sends out only req.err_headers_out. It does make a
special provision for the Location header and copy it into err_headers_out
if it's not already there, which is why it makes it through.

You can send both headers by either:

   req.err_headers_out.add('Set-Cookie', morsel.OutputString())
   req.err_headers_out.add('Location:', location)
   return apache.HTTP_MOVED_TEMPORARILY

or

   req.headers_out.add('Set-Cookie', morsel.OutputString())
   req.status = apache.HTTP_MOVED_TEMPORARILY
   return apache.OK

Grisha


On Thu, 14 Aug 2003, David Fraser wrote:

> Hi
>
> I came across the following problem and wondered if there was a workaround.
> Basically I want to set a cookie in a certain directory, and at the same
> time issue a Redirect to another place.
> So I wanted to do:
>   req.headers_out.add('Set-Cookie', morsel.OutputString())
>   req.headers_out.add('Location:', location)
>   return apache.HTTP_MOVED_TEMPORARILY
>
> However, I found that as soon as I return the HTTP_MOVED_TEMPORARILY,
> the Set-Cookie string seems to be removed from the headers going to the
> client (this was tested by using the livehttpheaders extension to Firebird).
> I couldn't work out where in the code that was happening but suspect
> that it is standard Apache behaviour.
> Is this because I'm not supposed to be allowed to do this, or is it odd?
>
> (I have a workaround of having a page with a meta http-equiv="refresh",
> but wondered if there is a way to get it working as would like...)
>
> Thanks
> David
>
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>
From davidf at sjsoft.com  Thu Aug 14 17:19:43 2003
From: davidf at sjsoft.com (David Fraser)
Date: Fri Jan  9 22:00:17 2004
Subject: [mod_python] Cookies and redirect...
In-Reply-To: <20030814100919.U55932@onyx.ispol.com>
References: <3F3B949F.8030806@sjsoft.com>
	<20030814100919.U55932@onyx.ispol.com>
Message-ID: <3F3BA88F.7050202@sjsoft.com>

Thanks for the quick response!
This is working nicely now...

David

Gregory (Grisha) Trubetskoy wrote:

>This is a feature of Apache. When it sees an error response (all 204 (no
>content), 3xx (redirect), 4xx (client error) and 5xx (server error)),
>which includes HTTP_MOVED_TEMPORARILY (even though it's not an error
>technically), it sends out only req.err_headers_out. It does make a
>special provision for the Location header and copy it into err_headers_out
>if it's not already there, which is why it makes it through.
>
>You can send both headers by either:
>
>   req.err_headers_out.add('Set-Cookie', morsel.OutputString())
>   req.err_headers_out.add('Location:', location)
>   return apache.HTTP_MOVED_TEMPORARILY
>
>or
>
>   req.headers_out.add('Set-Cookie', morsel.OutputString())
>   req.status = apache.HTTP_MOVED_TEMPORARILY
>   return apache.OK
>
>Grisha
>
>
>On Thu, 14 Aug 2003, David Fraser wrote:
>
>  
>
>>Hi
>>
>>I came across the following problem and wondered if there was a workaround.
>>Basically I want to set a cookie in a certain directory, and at the same
>>time issue a Redirect to another place.
>>So I wanted to do:
>>  req.headers_out.add('Set-Cookie', morsel.OutputString())
>>  req.headers_out.add('Location:', location)
>>  return apache.HTTP_MOVED_TEMPORARILY
>>
>>However, I found that as soon as I return the HTTP_MOVED_TEMPORARILY,
>>the Set-Cookie string seems to be removed from the headers going to the
>>client (this was tested by using the livehttpheaders extension to Firebird).
>>I couldn't work out where in the code that was happening but suspect
>>that it is standard Apache behaviour.
>>Is this because I'm not supposed to be allowed to do this, or is it odd?
>>
>>(I have a workaround of having a page with a meta http-equiv="refresh",
>>but wondered if there is a way to get it working as would like...)
>>
>>Thanks
>>David
>>
>>
>>_______________________________________________
>>Mod_python mailing list
>>Mod_python@modpython.org
>>http://mailman.modpython.org/mailman/listinfo/mod_python
>>
>>    
>>
>
>  
>



From rey4 at columbia.edu  Sat Aug 16 15:35:11 2003
From: rey4 at columbia.edu (Russell Yanofsky)
Date: Fri Jan  9 22:00:17 2004
Subject: [mod_python] Re: Re: Re: script_name bug?
References: 
	<bh32ej$m9l$1@main.gmane.org><20030809123926.T83158@onyx.ispol.com><bh4ebb$qlq$1@sea.gmane.org>
	<20030810200027.R92644@onyx.ispol.com><bh8lt0$hkm$1@sea.gmane.org>
	<20030811221051.B19156@onyx.ispol.com>
Message-ID: <bhm118$fr8$1@sea.gmane.org>

Gregory (Grisha) Trubetskoy wrote:
>> Patches are attached for mod_python 2.7.8 and mod_python 3.0.3.
>
> Thanks, patches are always welcome!

I should hope so. Will these changes be incorporated in future releases of
mod_python?

- Russ


From neel at mediapulse.com  Wed Aug 20 17:51:47 2003
From: neel at mediapulse.com (Michael C. Neel)
Date: Fri Jan  9 22:00:17 2004
Subject: [mod_python] pysco + mod_python?
Message-ID: <C0FC22C08B82074A88B50061764157776B9618@johnson.mediapulse.net>

Has anyone tried to use pysco (http://psyco.sourceforge.net/) with
mod_python to speed up programs?  Is this something to try, or is it not
safe to use under mod_python?

Mike

From davidf at sjsoft.com  Thu Aug 21 07:34:55 2003
From: davidf at sjsoft.com (David Fraser)
Date: Fri Jan  9 22:00:17 2004
Subject: [mod_python] psyco + mod_python?
In-Reply-To: <C0FC22C08B82074A88B50061764157776B9618@johnson.mediapulse.net>
References: <C0FC22C08B82074A88B50061764157776B9618@johnson.mediapulse.net>
Message-ID: <3F4459FF.5070606@sjsoft.com>

Michael C. Neel wrote:

>Has anyone tried to use pysco (http://psyco.sourceforge.net/) with
>mod_python to speed up programs?  Is this something to try, or is it not
>safe to use under mod_python?
>
>Mike
>
>  
>
Hi

I have tried it and it seemed to work without problems, but I did not 
have a chance to profile it or verify that it was actually optimising 
stuff properly.
I can imagine that it would be great particularly for optimising short 
handlers and the modpython code itself.
It would be worth reporting your findings here if you do get it working 
as I am sure others are interested.

David

PS For those who don't know psyco, it is definitely worth checking out, 
does very intelligent JIT Python->assembly compilation based on type 
analysis.
Look at the web page mentioned above for more info

From mateusz at ant.gliwice.pl  Thu Aug 21 09:05:01 2003
From: mateusz at ant.gliwice.pl (Mateusz Korniak)
Date: Fri Jan  9 22:00:17 2004
Subject: [mod_python] pysco + mod_python?
In-Reply-To: <C0FC22C08B82074A88B50061764157776B9618@johnson.mediapulse.net>
References: <C0FC22C08B82074A88B50061764157776B9618@johnson.mediapulse.net>
Message-ID: <200308210905.02501.mateusz@ant.gliwice.pl>

On Wednesday 20 August 2003 23:51, Michael C. Neel wrote:
> Has anyone tried to use pysco (http://psyco.sourceforge.net/) with
> mod_python to speed up programs?  Is this something to try, or is it not
> safe to use under mod_python?

I tried but did not notice any speed up (psyco 1.0 and 1.1,mod_python 2.7.8). 
In fact, I didn't notice any problems either. Code was just 10% slower. :(. 
Perhaps It was case I just did dumb psyco.full() ...

-- 
Mateusz Korniak


From davidf at sjsoft.com  Thu Aug 21 09:23:03 2003
From: davidf at sjsoft.com (David Fraser)
Date: Fri Jan  9 22:00:17 2004
Subject: [mod_python] pysco + mod_python?
In-Reply-To: <200308210905.02501.mateusz@ant.gliwice.pl>
References: <C0FC22C08B82074A88B50061764157776B9618@johnson.mediapulse.net>
	<200308210905.02501.mateusz@ant.gliwice.pl>
Message-ID: <3F447357.3080102@sjsoft.com>

Mateusz Korniak wrote:

>On Wednesday 20 August 2003 23:51, Michael C. Neel wrote:
>  
>
>>Has anyone tried to use pysco (http://psyco.sourceforge.net/) with
>>mod_python to speed up programs?  Is this something to try, or is it not
>>safe to use under mod_python?
>>    
>>
>
>I tried but did not notice any speed up (psyco 1.0 and 1.1,mod_python 2.7.8). 
>In fact, I didn't notice any problems either. Code was just 10% slower. :(. 
>Perhaps It was case I just did dumb psyco.full() ...
>
>  
>
Sounds similar to my experience. Maybe we try out different profiling 
options and put together a guide on using psyco with mod_python...

David

From mike.looijmans at asml.com  Thu Aug 21 11:06:09 2003
From: mike.looijmans at asml.com (Mike Looijmans)
Date: Fri Jan  9 22:00:17 2004
Subject: [mod_python] Making an absolute URL
Message-ID: <01c367c3$75d9d680$926a1e6e@wsasd464>

As usual, there are many ways that lead to the same point.

I'm sending a 302 or 303 response to some queries to quickly redirect the
client to the 'next' page (for example after logging in is successful it
immediately proceeds to the 'calling' page by sending a "303 See Other").

I did this previously with a Refresh header, but that doesn't work in Lynx
for example, it "flashes" the screen, and the 303 was specifically meant for
this purpose.

Only trouble now is that the "Location" header in a 30x response must be an
absolute URL instead of a relative one. If I just supply a relative URL, the
browsers grudgingly accept it, but it's just not right. So if the user
request http://myhost:8080/foo/ i send a redirection to
http://myhost:8080/foo/bar by returning 302 (moved permanently) and add a
header "Location: bar". But accoring to HTTP spec (RFC2068), the location
header should be "Location: http://myhost:8080/foo/bar" instead.

It should be easy to turn the URL into an absolute one. However, there are
many ways to do this, and I wonder what is the one that will work for all
client and server configurations.

For example, i want the URL to remain as the user typed it, so that there's
a difference between using http://localhost/foo/bar or
http://localhost:80/foo/bar, between http://myhost.mydomain.com/ and
http://myhost/ etc, etc.

Probably, the "Host" header from the client is a good thing for this, but it
is only mandatory for HTTP/1.1 and not for 1.0 which many browsers still
use.

Mike.





-- 
The information contained in this communication and any attachments is confidential and may be privileged, and is for the sole use of the intended recipient(s). Any unauthorized review, use, disclosure or distribution is prohibited. If you are not the intended recipient, please notify the sender immediately by replying to this message and destroy all copies of this message and any attachments. ASML is neither liable for the proper and complete transmission of the information contained in this communication, nor for any delay in its receipt.


From greg at amstlc.com  Thu Aug 21 13:57:50 2003
From: greg at amstlc.com (Greg Unrein)
Date: Fri Jan  9 22:00:17 2004
Subject: [mod_python] Python 2.3/ modpython 3.0.3 problem
Message-ID: <3F45324E.4010402@amstlc.com>

I recently started working in Python 2.3 from 2.2.2 and after installing 
modpython 3.0.3 for the new Python 2.3 installation it seems that 
modpython is still using Python 2.2.2. This is under windows 2000 and 
I've removed the modpython install for python 2.2.2, so apache 
complains. Any help would be appreciated greatly!

Thanks,
Greg

From grisha at modpython.org  Thu Aug 21 19:31:50 2003
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 22:00:17 2004
Subject: [mod_python] Python 2.3/ modpython 3.0.3 problem
In-Reply-To: <3F45324E.4010402@amstlc.com>
References: <3F45324E.4010402@amstlc.com>
Message-ID: <20030821192853.L68478@onyx.ispol.com>


I don't recommend using mod_python 3.0.3 with Python 2.3, there are some
things that changed in 2.3 where it may not work.

Grisha

On Thu, 21 Aug 2003, Greg Unrein wrote:

> I recently started working in Python 2.3 from 2.2.2 and after installing
> modpython 3.0.3 for the new Python 2.3 installation it seems that
> modpython is still using Python 2.2.2. This is under windows 2000 and
> I've removed the modpython install for python 2.2.2, so apache
> complains. Any help would be appreciated greatly!
>
> Thanks,
> Greg
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>
From gnb at itga.com.au  Fri Aug 22 09:39:34 2003
From: gnb at itga.com.au (Gregory Bond)
Date: Fri Jan  9 22:00:17 2004
Subject: [mod_python] Making an absolute URL 
In-Reply-To: Your message of Thu, 21 Aug 2003 11:06:09 +0200.
Message-ID: <200308212339.JAA07072@lightning.itga.com.au>


mike.looijmans@asml.com said:
> Probably, the "Host" header from the client is a good thing for this,
> but it is only mandatory for HTTP/1.1 and not for 1.0 which many
> browsers still use. 

Most browsers still only claim HTTP/1.0, but nearly all of them use Host:
header. Most virtual hosting won't work without the Host header, so you'd have 
to go back to browsers from the IE/NS 3 era to find a problem. 

(IP addresses are getting scarce, so unless you use SSL and need IP-based 
vhosting, most web hosts only offer name-based vhosting.)



From sanctuary at terra.es  Sat Aug 23 20:13:31 2003
From: sanctuary at terra.es (Rix Sanctuary)
Date: Fri Jan  9 22:00:17 2004
Subject: [mod_python] 
	help!: modpython, howto pass results to a running php script?
Message-ID: <!~!UENERkVCMDkAAQACAAAAAAAAAAAAAAAAABgAAAAAAAAAUuS0GoPudku6WIdlnSUuwcKAAAAQAAAAtpwvdzFLvE++3Ot7HeNxvAEAAAAA@terra.es>

 
-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1


Hi there!

Have a python calculation module and I would like to include/work with the results in a seperate php script.
My code runs in a box with Apache/2.0.47(win32) mod_python/3.0.3 Python 2.2.3 Php/4.3.2

My python module is called from a php script like this:
    <?php require 'http://localhost/xxx/calc.py/'; ?>

   PHP   <----   CALC.PY    <----  BIGCALC.PY
			  |
			  |
	from mod_python import apache
 	import bigcalc

Is there an easy way to use the results yield by my python module in my php script as local variables?

Thanks in advance
rix

-----BEGIN PGP SIGNATURE-----
Version: PGP 8.0

iQA/AwUBP0euyhvgnt8VShhuEQLFngCaAoRawlJ9dMWyt3K9lNLge50QZa8AoMFc
QDO/ZjGHWV1PG889q/+ItxvJ
=erGk
-----END PGP SIGNATURE-----



From grisha at modpython.org  Sun Aug 24 13:05:02 2003
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 22:00:17 2004
Subject: [mod_python]  help!: modpython, howto pass results to a running
 php script?
In-Reply-To: <!~!UENERkVCMDkAAQACAAAAAAAAAAAAAAAAABgAAAAAAAAAUuS0GoPudku6WIdlnSUuwcKAAAAQAAAAtpwvdzFLvE++3Ot7HeNxvAEAAAAA@terra.es>
References: <!~!UENERkVCMDkAAQACAAAAAAAAAAAAAAAAABgAAAAAAAAAUuS0GoPudku6WIdlnSUuwcKAAAAQAAAAtpwvdzFLvE++3Ot7HeNxvAEAAAAA@terra.es>
Message-ID: <20030824130257.E16162@onyx.ispol.com>


I don't know first thing about PHP, but if it has a way of making a
sub-request and then capturing its output, that would be one way. Or if
PHP has access to request notes (req.notes in mod_python), there is
probably some way to use them as a way to pass information.

Grishas

On Sat, 23 Aug 2003, Rix Sanctuary wrote:

>
> -----BEGIN PGP SIGNED MESSAGE-----
> Hash: SHA1
>
>
> Hi there!
>
> Have a python calculation module and I would like to include/work with the results in a seperate php script.
> My code runs in a box with Apache/2.0.47(win32) mod_python/3.0.3 Python 2.2.3 Php/4.3.2
>
> My python module is called from a php script like this:
>     <?php require 'http://localhost/xxx/calc.py/'; ?>
>
>    PHP   <----   CALC.PY    <----  BIGCALC.PY
> 			  |
> 			  |
> 	from mod_python import apache
>  	import bigcalc
>
> Is there an easy way to use the results yield by my python module in my php script as local variables?
>
> Thanks in advance
> rix
>
> -----BEGIN PGP SIGNATURE-----
> Version: PGP 8.0
>
> iQA/AwUBP0euyhvgnt8VShhuEQLFngCaAoRawlJ9dMWyt3K9lNLge50QZa8AoMFc
> QDO/ZjGHWV1PG889q/+ItxvJ
> =erGk
> -----END PGP SIGNATURE-----
>
>
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>
From nelson at crynwr.com  Mon Aug 25 16:54:28 2003
From: nelson at crynwr.com (Russell Nelson)
Date: Fri Jan  9 22:00:17 2004
Subject: [mod_python] How do I serve up .html files?
Message-ID: <16202.30596.238589.112878@desk.crynwr.com>

Maybe this is really an Apache question, but it seems to me like it
ought to come up in a mod_python context as well.  Can't find it in
the documentation, the FAQ, or the mailing list archives
(Aug/Jul/Jun).

How do I cause my python script to be run when a .html file is accessed?
    http://angry-economics.russnelson.com/index.html

How do I cause my python script to be run when any old file is accessed?
    http://angry-economics.russnelson.com/

In other words, I want a handler which gets run no matter what the
rest of the URL is.  You'd think this would be in the documentation,
enabling people to make fully scripted sites, but it seems not to be.

I can't insert a /foo.py/ in there because I have to preserve all the
old URLs.

-- 
--My blog is at angry-economist.russnelson.com  | Free markets express in the
Crynwr sells support for free software  | PGPok | practical world our belief
521 Pleasant Valley Rd. | +1 315 268 1925 voice | that there is that of God
Potsdam, NY 13676-3213  | +1 315 268 9201 FAX   | in all people. -Chris V.
From synec at viscous.org  Mon Aug 25 14:36:41 2003
From: synec at viscous.org (john spurling)
Date: Fri Jan  9 22:00:17 2004
Subject: [mod_python] How do I serve up .html files?
In-Reply-To: <16202.30596.238589.112878@desk.crynwr.com>
References: <16202.30596.238589.112878@desk.crynwr.com>
Message-ID: <20030825213641.GR19969@c7c8.colobox.com>

On Mon, Aug 25, 2003 at 04:54:28PM -0400, Russell Nelson wrote:
> Maybe this is really an Apache question, but it seems to me like it
> ought to come up in a mod_python context as well.  Can't find it in
> the documentation, the FAQ, or the mailing list archives
> (Aug/Jul/Jun).
> 
> How do I cause my python script to be run when a .html file is accessed?
>     http://angry-economics.russnelson.com/index.html
> 
> How do I cause my python script to be run when any old file is accessed?
>     http://angry-economics.russnelson.com/
> 
> In other words, I want a handler which gets run no matter what the
> rest of the URL is.  You'd think this would be in the documentation,
> enabling people to make fully scripted sites, but it seems not to be.
> 
> I can't insert a /foo.py/ in there because I have to preserve all the
> old URLs.

i think you can do it using the "SetHandler" directive in httpd.conf,
like this:

<Directory "/path/to/document/root">
SetHandler python-program
PythonHandler mymodule
</Directory>

from there, mymodule.py (located in the document root) will handle all
requests. here's a sample to put in mymodule.py:

from mod_python import apache
def handler(req):
    req.content_type = 'text/plain'
    req.write("uri: %s" % req.uri)
    return apache.OK

voila. that'll print out whatever uri gets typed in.

-john

-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
Url : http://mailman.modpython.org/pipermail/mod_python/attachments/20030825/32b77b5c/attachment-0002.bin
From conrad at hep.caltech.edu  Mon Aug 25 14:42:04 2003
From: conrad at hep.caltech.edu (Conrad Steenberg)
Date: Fri Jan  9 22:00:17 2004
Subject: [mod_python] How do I serve up .html files?
In-Reply-To: <16202.30596.238589.112878@desk.crynwr.com>
References: <16202.30596.238589.112878@desk.crynwr.com>
Message-ID: <1061847724.32518.23.camel@heppc22>

Hi Russel

The way I do it is to have a handler that reposonds to GET requests. 
E.g. if you have a documentroot of /var/www/html:

<Directory /var/www/html>
       SetHandler python-program
       AddHandler python-program .py
       PythonDebug On
       PythonHandler my_handler
       DirectoryIndex myhandler.py
</Directory>

I.e. myhandler.py is the directory index. Then inside the handler
function in myhandler.py:

def handler(req):
  if req.method=='GET':
     # Get the name of the file requested
     inputname=reduce(lambda x,y:x+'/'+y,string.split(req.uri, '/')[1:])

     # Construct an outputname
     outputname='/var/www/html'+inputname
     
     # Send the file to the client
     send_file(req,outputname,0,-1) # Or your own function doing lots of req.write()'s
     return apache.OK


This is pseudo-code taken from another implmentation, so play around
with the inputname statement to get it right. But the idea is to get the
filename from req.uri, and then construct a real filesystem filename,
the contents of which can be sent to the client.

An implementation of the send_file() function above is attached, making
use of the req.write_file() function if available (I think it is in the
CVS version), or a slower version based on req.write()

HTH

Conrad


On Mon, 2003-08-25 at 13:54, Russell Nelson wrote:
> Maybe this is really an Apache question, but it seems to me like it
> ought to come up in a mod_python context as well.  Can't find it in
> the documentation, the FAQ, or the mailing list archives
> (Aug/Jul/Jun).
> 
> How do I cause my python script to be run when a .html file is accessed?
>     http://angry-economics.russnelson.com/index.html
> 
> How do I cause my python script to be run when any old file is accessed?
>     http://angry-economics.russnelson.com/
> 
> In other words, I want a handler which gets run no matter what the
> rest of the URL is.  You'd think this would be in the documentation,
> enabling people to make fully scripted sites, but it seems not to be.
> 
> I can't insert a /foo.py/ in there because I have to preserve all the
> old URLs.
-- 
Conrad Steenberg <conrad@hep.caltech.edu>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: clarens_file.py
Type: text/x-python
Size: 3547 bytes
Desc: not available
Url : http://mailman.modpython.org/pipermail/mod_python/attachments/20030825/886b9e84/clarens_file-0002.py
From neel at mediapulse.com  Mon Aug 25 18:40:48 2003
From: neel at mediapulse.com (Michael C. Neel)
Date: Fri Jan  9 22:00:17 2004
Subject: [mod_python] How do I serve up .html files?
Message-ID: <C0FC22C08B82074A88B50061764157776B962F@johnson.mediapulse.net>

> <Directory "/path/to/document/root">
> SetHandler python-program
> PythonHandler mymodule
> </Directory>
> 
> from there, mymodule.py (located in the document root) will handle all
> requests. here's a sample to put in mymodule.py:
> 
> from mod_python import apache
> def handler(req):
>     req.content_type = 'text/plain'
>     req.write("uri: %s" % req.uri)
>     return apache.OK
> 

This will answer for all files in that directory, including images so
make sure to check the req.uri for ".html" and return an apache.DECLINED
if it's not.  Otherwise your python module will have to serve up the
images too.

Another option would be the <Files>/<FilesMatch> directives in apache,
and set it to files ending in .html.

Mike

From grisha at modpython.org  Mon Aug 25 21:53:22 2003
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 22:00:17 2004
Subject: [mod_python] How do I serve up .html files?
In-Reply-To: <16202.30596.238589.112878@desk.crynwr.com>
References: <16202.30596.238589.112878@desk.crynwr.com>
Message-ID: <20030825213605.O1138@onyx.ispol.com>


On Mon, 25 Aug 2003, Russell Nelson wrote:

> Maybe this is really an Apache question, but it seems to me like it
> ought to come up in a mod_python context as well.  Can't find it in
> the documentation, the FAQ, or the mailing list archives
> (Aug/Jul/Jun).
>
> How do I cause my python script to be run when a .html file is accessed?
>     http://angry-economics.russnelson.com/index.html

Russell -

It is pretty much an apache question.

  AddHandler python-program .html
  PythonHandler myhandler
  PythonDebug On

should do it (AddHandler is key, the other two are shown for completness).

>
> How do I cause my python script to be run when any old file is accessed?
>     http://angry-economics.russnelson.com/

  SetHandler python-program
  PythonHandler myhandler
  PythonDebug On

would make every request be handled by mod_python, regardless of
extension.

Of course the consequence of either of the above is that the mod_python
handler would either need to actually do the work of delivering the HTML
itself (the next version will have req.sendfile() to make it a bit more
efficient), or return apache.DECLINED to let Apache handle it after mp
handler did its thing (in which case the mp handler shouldn't write
anything).

> In other words, I want a handler which gets run no matter what the
> rest of the URL is.  You'd think this would be in the documentation,
> enabling people to make fully scripted sites, but it seems not to be.

Here is one place where it's mentioned:

http://www.modpython.org/live/current/doc-html/tut-what-it-do.html

...but I admit, the docs are written in a way as to not overlap Apache
docs, which makes it difficult.

> I can't insert a /foo.py/ in there because I have to preserve all the
> old URLs.

P.S. Glad to see you using mod_python!

Grisha
From idiot1 at netzero.net  Mon Aug 25 22:42:06 2003
From: idiot1 at netzero.net (Kirk Bailey)
Date: Fri Jan  9 22:00:17 2004
Subject: [mod_python] How do I serve up .html files?
In-Reply-To: <20030825213605.O1138@onyx.ispol.com>
References: <16202.30596.238589.112878@desk.crynwr.com>
	<20030825213605.O1138@onyx.ispol.com>
Message-ID: <3F4AC8FE.4070405@netzero.net>

When a browser accesses a html page, one includes a SSI exec tag. That means 
Server Side Include, exec(ute).

It looks like a comment, and if it made it to the browser, it would be treated 
as such and therefore invisible. But if all is done right, it is EATEN by the 
webserver and replaced with the output of the script.

<!--#exec cgi="./cgi-bin/counter.py" -->

Is probably the most common example of a ssi tag in a webpage. If you never use 
any other ssi, you will use that one. The example above would run some sort of a 
counter program (such as my 'counter.py'), returning a string of text. This is a 
string of characters, such as numbers:
32204
which is the output of a text counter program.

I am not going to describe how to enable cgi on apache, or any other webserver- 
that's a booklet worth, not a letter's. BUT my website has articles on cgi on 
it, and links to entire SITES about it, including apache.org's pages about ssi 
and apache. The ssi stuff is at the bottom of the homepage.

	http://www.tinylist.org/

hope this helps.


Gregory (Grisha) Trubetskoy wrote:

> On Mon, 25 Aug 2003, Russell Nelson wrote:
> 
> 
>>Maybe this is really an Apache question, but it seems to me like it
>>ought to come up in a mod_python context as well.  Can't find it in
>>the documentation, the FAQ, or the mailing list archives
>>(Aug/Jul/Jun).
>>
>>How do I cause my python script to be run when a .html file is accessed?
>>    http://angry-economics.russnelson.com/index.html
> 
> 
> Russell -
> 
> It is pretty much an apache question.
> 
>   AddHandler python-program .html
>   PythonHandler myhandler
>   PythonDebug On
> 
> should do it (AddHandler is key, the other two are shown for completness).
> 
> 
>>How do I cause my python script to be run when any old file is accessed?
>>    http://angry-economics.russnelson.com/
> 
> 
>   SetHandler python-program
>   PythonHandler myhandler
>   PythonDebug On
> 
> would make every request be handled by mod_python, regardless of
> extension.
> 
> Of course the consequence of either of the above is that the mod_python
> handler would either need to actually do the work of delivering the HTML
> itself (the next version will have req.sendfile() to make it a bit more
> efficient), or return apache.DECLINED to let Apache handle it after mp
> handler did its thing (in which case the mp handler shouldn't write
> anything).
> 
> 
>>In other words, I want a handler which gets run no matter what the
>>rest of the URL is.  You'd think this would be in the documentation,
>>enabling people to make fully scripted sites, but it seems not to be.
> 
> 
> Here is one place where it's mentioned:
> 
> http://www.modpython.org/live/current/doc-html/tut-what-it-do.html
> 
> ...but I admit, the docs are written in a way as to not overlap Apache
> docs, which makes it difficult.
> 
> 
>>I can't insert a /foo.py/ in there because I have to preserve all the
>>old URLs.
> 
> 
> P.S. Glad to see you using mod_python!
> 
> Grisha
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
> 
> 

-- 

-- 

end

Cheers!
         Kirk D Bailey

  +                              think                                +
   http://www.howlermonkey.net  +-----+        http://www.tinylist.org
   http://www.listville.net     | BOX |  http://www.sacredelectron.org
   Thou art free"-ERIS          +-----+     'Got a light?'-Promethieus
  +                              think                                +

Fnord.

From smejmoon at yahoo.com  Tue Aug 26 12:29:11 2003
From: smejmoon at yahoo.com (=?iso-8859-1?q?Girts=20Kalninsh?=)
Date: Fri Jan  9 22:00:17 2004
Subject: [mod_python] mod_python + pso
In-Reply-To: <3F4AC8FE.4070405@netzero.net>
Message-ID: <20030826112911.98215.qmail@web10703.mail.yahoo.com>


I'm interested in sessions, redirections, form validation, e.t.c. still
want to keep the system Simple and Robust.

I liked the PSO (http://sourceforge.net/projects/pso), but the version
on sourceforge still have many bugs unsolved
(http://sourceforge.net/tracker/?group_id=49265&atid=455630).

Do you know of working version and some example code?

Right now I'm using hosting with apache + mod_python + mysql. CGI is
forbidden and installing of some server moduled might be troublesome.

G'irts


________________________________________________________________________
Want to chat instantly with your online friends?  Get the FREE Yahoo!
Messenger http://uk.messenger.yahoo.com/
From joshg at myrealbox.com  Tue Aug 26 05:29:09 2003
From: joshg at myrealbox.com (Joshua Adam Ginsberg)
Date: Fri Jan  9 22:00:17 2004
Subject: [mod_python] IPC, db conn sharing, and other fine things
Message-ID: <1061897348.1677.12.camel@gateway.localnet>

Hello -

You will have to forgive me if this is often covered... I perused the
last six months of postings for answers to these questions, and still
have not yet found exactly what I'm looking for...

Additionally, please understand that my serious web development
experience comes from AOLServer and it's unique brand of TCL... if
you're unaware of the project, AOLServer was the original (and in many
opinions still the best) multi-threaded, thread-safe, database
connection pooling, strong API'ed webserver...

AOLServer had many features that I came to know, love, and depend on...
examples:

- nsv buckets --- nsv == NaviServer (AOLServer's original name) shared
variables... they were effectively arrays that stored information
accessible and modifiable by any running thread... perfect for caching
database information for faster generation of dynamic pages...

- database connection pooling --- provided easy, standardized, and
scalable access to existing database connections

I spent about six or seven months developing an enterprise caliber web
applications toolkit using AOLServer, and honestly, I cannot envision
having anything "enterprise caliber" without some sort of interprocess
communication and some sort of connection pooling...

I've used Apache now for a total of two weeks... I've read documentation
detailing the prefork versus the threading mpm models... I've read the
mod_python documentation available... but I still can't find a decent
way to replicate the services that AOLServer provided natively...

And unfortunately the reason I switched to Apache is that many of my
clients want to have their sites hosted by some mass hosting provider
that only uses Apache... I can find ones that are willing to use
mod_python, but I can't find ones that are willing to install
AOLServer... and any sort of IPC or db-pooling services I write can't
depend on external daemons... obviously I could write some sort of
caching daemon in Python that used UNIX sockets and some simple
key/value pair protocol to do db data caching... or I could write some
sort of db-pooling daemon... but good luck trying to get a mass-hosting
provider to run some homemade daemon on their servers...

So I suppose what I'm asking is that is there any way natively in
mod_python to support these enterprise critical features? And if not,
how the hell do you guys who use mod_python manage to have massive
hit-per-second sites without data caching?

Thank you for any guidance you could provide.

-jag

From barry at python.org  Tue Aug 26 14:29:31 2003
From: barry at python.org (Barry Warsaw)
Date: Fri Jan  9 22:00:17 2004
Subject: [mod_python] Problems with PythonPath directive
Message-ID: <1061922571.23837.89.camel@yyz>

FTR: Apache 2.0.47, mod_python 3.0.3, Python 2.3+LONG_LONG patch
(although I've also tried Python 2.2.3).

I'm having trouble with the PythonPath directive.  Mostly likely I don't
understand how it's supposed to work.  Here are my Apache directives:

LoadModule python_module /usr/local/apache/modules/mod_python.so
                                                                                
<Directory /path/to/project/xxx/xxx_apps>
    AddHandler python-program .py
    #PythonPath "sys.path + ['/path/to/project/zope2/lib/python']"
    PythonHandler regserver.driver
    PythonDebug On
</Directory>

ScriptAlias /regserver/ "/path/to/project/xxx/xxx_apps/"

When I hit http://localhost/regserver/driver.py with the PythonPath
directive commented out, everything works fine.  But when I uncomment
the PythonPath directive, I get an import error:

Mod_python error: "PythonHandler regserver.driver"

Traceback (most recent call last):

  File "/usr/local/lib/python2.3/site-packages/mod_python/apache.py", line 320, in HandlerDispatch
    module = import_module(module_name, config)

  File "/usr/local/lib/python2.3/site-packages/mod_python/apache.py", line 496, in import_module
    f, p, d = imp.find_module(parts[i], path)

ImportError: No module named regserver

I thought that the way I'm specifying PythonPath above should have added
to sys.path, not overwritten it.  What am I missing?

Thanks,
-Barry

P.S. there is a buglet in the online manual.  It says that --with-apxs
searches /usr/local/apache/bin but it really appears to search only
/usr/local/apache/sbin.  While my apxs lives in the former, I had to use
the --with-apxs configure option for it to find it.


From grisha at modpython.org  Tue Aug 26 15:01:02 2003
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 22:00:17 2004
Subject: [mod_python] Problems with PythonPath directive
In-Reply-To: <1061922571.23837.89.camel@yyz>
References: <1061922571.23837.89.camel@yyz>
Message-ID: <20030826145636.A7493@onyx.ispol.com>


Hi Barry -

Try

PythonPath "sys.path + ['/path/to/project/zope2/lib/python',
                        '/path/to/project/xxx/xxx_apps']"

(the above should be on one line)

IIRC, mod_python will prepend the path in <Directory> to sys.path, unless
PythonPath is specified, in which case PythonPath overrules everything.

Grisha


On Tue, 26 Aug 2003, Barry Warsaw wrote:

> FTR: Apache 2.0.47, mod_python 3.0.3, Python 2.3+LONG_LONG patch
> (although I've also tried Python 2.2.3).
>
> I'm having trouble with the PythonPath directive.  Mostly likely I don't
> understand how it's supposed to work.  Here are my Apache directives:
>
> LoadModule python_module /usr/local/apache/modules/mod_python.so
>
> <Directory /path/to/project/xxx/xxx_apps>
>     AddHandler python-program .py
>     #PythonPath "sys.path + ['/path/to/project/zope2/lib/python']"
>     PythonHandler regserver.driver
>     PythonDebug On
> </Directory>
>
> ScriptAlias /regserver/ "/path/to/project/xxx/xxx_apps/"
>
> When I hit http://localhost/regserver/driver.py with the PythonPath
> directive commented out, everything works fine.  But when I uncomment
> the PythonPath directive, I get an import error:
>
> Mod_python error: "PythonHandler regserver.driver"
>
> Traceback (most recent call last):
>
>   File "/usr/local/lib/python2.3/site-packages/mod_python/apache.py", line 320, in HandlerDispatch
>     module = import_module(module_name, config)
>
>   File "/usr/local/lib/python2.3/site-packages/mod_python/apache.py", line 496, in import_module
>     f, p, d = imp.find_module(parts[i], path)
>
> ImportError: No module named regserver
>
> I thought that the way I'm specifying PythonPath above should have added
> to sys.path, not overwritten it.  What am I missing?
>
> Thanks,
> -Barry
>
> P.S. there is a buglet in the online manual.  It says that --with-apxs
> searches /usr/local/apache/bin but it really appears to search only
> /usr/local/apache/sbin.  While my apxs lives in the former, I had to use
> the --with-apxs configure option for it to find it.
>
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>
From barry at python.org  Tue Aug 26 15:41:15 2003
From: barry at python.org (Barry Warsaw)
Date: Fri Jan  9 22:00:17 2004
Subject: [mod_python] Problems with PythonPath directive
In-Reply-To: <20030826145636.A7493@onyx.ispol.com>
References: <1061922571.23837.89.camel@yyz>
	 <20030826145636.A7493@onyx.ispol.com>
Message-ID: <1061926875.23837.100.camel@yyz>

On Tue, 2003-08-26 at 15:01, Gregory (Grisha) Trubetskoy wrote:
> Hi Barry -
> 
> Try
> 
> PythonPath "sys.path + ['/path/to/project/zope2/lib/python',
>                         '/path/to/project/xxx/xxx_apps']"
> 
> (the above should be on one line)
> 
> IIRC, mod_python will prepend the path in <Directory> to sys.path, unless
> PythonPath is specified, in which case PythonPath overrules everything.

Indeed, that worked!  Thanks so much Grisha.

-Barry


From neel at mediapulse.com  Tue Aug 26 16:36:19 2003
From: neel at mediapulse.com (Michael C. Neel)
Date: Fri Jan  9 22:00:17 2004
Subject: [mod_python] PythonDebug and Traceback
Message-ID: <C0FC22C08B82074A88B50061764157775CBB@johnson.mediapulse.net>

Is there some way that you can have PythonDebug set to Off and still get
a traceback (I'm using 2.7.8 mod_python against python 2.2.2)?  The
reason I ask is I have a site where in the conf PythonDebug is
explicitly set to off, and when our database server decided to block the
web server, a client got a traceback error and then got the server 500
error page (as I expect).

The error raised was:

OperationalError: (1129, "Host 'xxx.xxx.com' is blocked because of many
connection errors.  Unblock with 'mysqladmin flush-hosts'")

I've messed around with some test sites to try and get a traceback error
with PythonDebug Off, and haven't been able to get it - although I
haven't caused an OperationalError.  Needless to say people getting to
see traceback on a live site is unsettling, so if anyone has an idea how
this happened and what I can do to fix it let me know ;)

Mike

From idiot1 at netzero.net  Tue Aug 26 20:12:29 2003
From: idiot1 at netzero.net (Kirk Bailey)
Date: Fri Jan  9 22:00:17 2004
Subject: [mod_python] How do I serve up .html files?
In-Reply-To: <20030826043323.GL12023@itea.ntnu.no>
References: <16202.30596.238589.112878@desk.crynwr.com>
	<20030825213605.O1138@onyx.ispol.com> <3F4AC8FE.4070405@netzero.net>
	<20030826043323.GL12023@itea.ntnu.no>
Message-ID: <3F4BF76D.5090300@netzero.net>



Stian S?iland wrote:

> On 2003-08-26 04:42:06, Kirk Bailey wrote:
> 
> 
>>When a browser accesses a html page, one includes a SSI exec tag. That 
>>means Server Side Include, exec(ute).
> 
> 
> What did you drink that night? This is the mod_python list, discussing
> mod_Python, not SSI =)
>

Stian, I sugggest you be nice, and not go trolling. He asked a basic question 
about how to get a html page to access a cgi program; Go back and read the 
letter he wrote. I was discussing exactly that. One gets a page to access a 
script with a ssi tag. He did NOT ask how to configure apache, or how mod_python 
works. He asked how to get a page when requested to acess a cgi program. I was 
addressing exactly that point, at a basic level. Granted, his letter was a tad 
off topic, and even a little below the general level of technical skill 
devlopment this list usually displays, but he asked, I replied, being a 
generally helpful person.

As for you rather personal question about my personal behavior last night, not 
that it is any of your business, the answer is: NOTHING. I'm stone cold sober, 
and was last night. Your assumption was and is dead wrong.

Your behavior in this matter is rather unprofessional sir, and uncharitible to 
those around us of lesser technical skill- and disrespectful to those more 
nearly your peer. This cannot but hamper your ongoing career in Information 
Technology.

I suggest you consider the many people who mentored you in your early days, and 
how they suffer your novice level questions gladly, and helped you along your 
way. There is a word: payforward, where we pay 'back' the tutilage and gentle 
patience given to us in the past, by helping others later on when we can. I 
encourage you to adopt such a charitible attitude.




-- 

end

Respectfully,
              Kirk D Bailey

  +                              think                                +
   http://www.howlermonkey.net  +-----+        http://www.tinylist.org
   http://www.listville.net     | BOX |  http://www.sacredelectron.org
   Thou art free"-ERIS          +-----+     'Got a light?'-Promethieus
  +                              think                                +

Fnord.

From idiot1 at netzero.net  Tue Aug 26 20:16:12 2003
From: idiot1 at netzero.net (Kirk Bailey)
Date: Fri Jan  9 22:00:17 2004
Subject: [mod_python] How do I serve up .html files?
In-Reply-To: <20030826043323.GL12023@itea.ntnu.no>
References: <16202.30596.238589.112878@desk.crynwr.com>
	<20030825213605.O1138@onyx.ispol.com> <3F4AC8FE.4070405@netzero.net>
	<20030826043323.GL12023@itea.ntnu.no>
Message-ID: <3F4BF84C.7060200@netzero.net>



Stian S?iland wrote:

> On 2003-08-26 04:42:06, Kirk Bailey wrote:
> 
> 
>>When a browser accesses a html page, one includes a SSI exec tag. That 
>>means Server Side Include, exec(ute).
> 
> 
> What did you drink that night? This is the mod_python list, discussing
> mod_Python, not SSI =)
>

Stian, I sugggest you be nice, and not go trolling. He asked a basic question 
about how to get a html page to access a cgi program; Go back and read the 
letter he wrote. I was discussing exactly that. One gets a page to access a 
script with a ssi tag. He did NOT ask how to configure apache, or how mod_python 
works. He asked how to get a page when requested to acess a cgi program. I was 
addressing exactly that point, at a basic level. Granted, his letter was a tad 
off topic, and even a little below the general level of technical skill 
devlopment this list usually displays, but he asked, I replied, being a 
generally helpful person.

As for you rather personal question about my personal behavior last night, not 
that it is any of your business, the answer is: NOTHING. I'm stone cold sober, 
and was last night. Your assumption was and is dead wrong.

Your behavior in this matter is rather unprofessional sir, and uncharitible to 
those around us of lesser technical skill- and disrespectful to those more 
nearly your peer. This cannot but hamper your ongoing career in Information 
Technology.

I suggest you consider the many people who mentored you in your early days, and 
how they suffer your novice level questions gladly, and helped you along your 
way. There is a word: payforward, where we pay 'back' the tutilage and gentle 
patience given to us in the past, by helping others later on when we can. I 
encourage you to adopt such a charitible attitude.




-- 

end

Respectfully,
              Kirk D Bailey

  +                              think                                +
   http://www.howlermonkey.net  +-----+        http://www.tinylist.org
   http://www.listville.net     | BOX |  http://www.sacredelectron.org
   Thou art free"-ERIS          +-----+     'Got a light?'-Promethieus
  +                              think                                +

Fnord.


From idiot1 at netzero.net  Tue Aug 26 20:15:28 2003
From: idiot1 at netzero.net (Kirk Bailey)
Date: Fri Jan  9 22:00:17 2004
Subject: [mod_python] How do I serve up .html files?
In-Reply-To: <20030826043323.GL12023@itea.ntnu.no>
References: <16202.30596.238589.112878@desk.crynwr.com>
	<20030825213605.O1138@onyx.ispol.com> <3F4AC8FE.4070405@netzero.net>
	<20030826043323.GL12023@itea.ntnu.no>
Message-ID: <3F4BF820.3040501@netzero.net>



Stian S?iland wrote:

> On 2003-08-26 04:42:06, Kirk Bailey wrote:
> 
> 
>>When a browser accesses a html page, one includes a SSI exec tag. That 
>>means Server Side Include, exec(ute).
> 
> 
> What did you drink that night? This is the mod_python list, discussing
> mod_Python, not SSI =)
>

Stian, I sugggest you be nice, and not go trolling. He asked a basic question 
about how to get a html page to access a cgi program; Go back and read the 
letter he wrote. I was discussing exactly that. One gets a page to access a 
script with a ssi tag. He did NOT ask how to configure apache, or how mod_python 
works. He asked how to get a page when requested to acess a cgi program. I was 
addressing exactly that point, at a basic level. Granted, his letter was a tad 
off topic, and even a little below the general level of technical skill 
devlopment this list usually displays, but he asked, I replied, being a 
generally helpful person.

As for you rather personal question about my personal behavior last night, not 
that it is any of your business, the answer is: NOTHING. I'm stone cold sober, 
and was last night. Your assumption was and is dead wrong.

Your behavior in this matter is rather unprofessional sir, and uncharitible to 
those around us of lesser technical skill- and disrespectful to those more 
nearly your peer. This cannot but hamper your ongoing career in Information 
Technology.

I suggest you consider the many people who mentored you in your early days, and 
how they suffer your novice level questions gladly, and helped you along your 
way. There is a word: payforward, where we pay 'back' the tutilage and gentle 
patience given to us in the past, by helping others later on when we can. I 
encourage you to adopt such a charitible attitude.




-- 

end

Respectfully,
              Kirk D Bailey

  +                              think                                +
   http://www.howlermonkey.net  +-----+        http://www.tinylist.org
   http://www.listville.net     | BOX |  http://www.sacredelectron.org
   Thou art free"-ERIS          +-----+     'Got a light?'-Promethieus
  +                              think                                +

Fnord.

From mike.looijmans at asml.com  Wed Aug 27 07:21:05 2003
From: mike.looijmans at asml.com (Mike Looijmans)
Date: Fri Jan  9 22:00:17 2004
Subject: [mod_python] PythonDebug and Traceback
Message-ID: <01c36c5b$03517680$926a1e6e@wsasd464>

>Is there some way that you can have PythonDebug set to Off and still get
>a traceback (I'm using 2.7.8 mod_python against python 2.2.2)?

Sure, but you'll have to display it yourself. My script usually look like
this:

req.content_type="text/html"
writeheader(req, mytitle . . .)
try:
   # do some stuff (like connecting to the DB)
except:
   printexception(req)
printfooter(req, . . .)


--
The printexception() routine is defined as:
--

def formatexception():
   info = sys.exc_info()
    result = "\n<HR>\n<P><B>%s:</B> %s</P>\n" % info[:2]
    if verbose:
        import traceback
        result += '<PRE>' + "\n".join(traceback.format_tb(info[2])) +
'</PRE>\n'
    return result

def printexception(req=sys.stdout):
    req.write(formatexception())

--
The 'verbose' global variable can be turned off and on by sending a request
to the server.



-- 
The information contained in this communication and any attachments is confidential and may be privileged, and is for the sole use of the intended recipient(s). Any unauthorized review, use, disclosure or distribution is prohibited. If you are not the intended recipient, please notify the sender immediately by replying to this message and destroy all copies of this message and any attachments. ASML is neither liable for the proper and complete transmission of the information contained in this communication, nor for any delay in its receipt.


From mike.looijmans at asml.com  Wed Aug 27 07:38:01 2003
From: mike.looijmans at asml.com (Mike Looijmans)
Date: Fri Jan  9 22:00:17 2004
Subject: [mod_python] IPC, db conn sharing, and other fine things
Message-ID: <01c36c5d$60e6c280$926a1e6e@wsasd464>

>- nsv buckets --- nsv == NaviServer (AOLServer's original name) shared
>variables... they were effectively arrays that stored information
>accessible and modifiable by any running thread... perfect for caching
>database information for faster generation of dynamic pages...


In mod_python, just use global variables in modules. Use dictionary objects
as fast storage mechanism.


>- database connection pooling --- provided easy, standardized, and
>scalable access to existing database connections


Same as above: Use global variables.

>... obviously I could write some sort of
>caching daemon in Python that used UNIX sockets and some simple
>key/value pair protocol to do db data caching... or I could write some
>sort of db-pooling daemon...

Why not integrate it into one of your modules?
Once loaded, the module remains in memory. So you can have it start a daemon
thread and use that as your IPC server. I always design the pages such that
no IPC is needed, each page gets its data exclusively from the request and
the database. The database is a great way to exchange data anyway, performs
excellent and survives even a power-down.

>So I suppose what I'm asking is that is there any way natively in
>mod_python to support these enterprise critical features? And if not,
>how the hell do you guys who use mod_python manage to have massive
>hit-per-second sites without data caching?

Python is so powerful a language, that creating these "enterprise critical
features" in raw code is just something you do on the side. I don't put
these in a library because there's more work in maintaining that library
than just entering the code. A threadsafe DB pooling system takes about 5
lines of Python code to program, and you need only one for the whole
project.

I do a little caching for 'static' tables, something like:

cache = {}
...
try:
    data = cache[key]
except KeyError:
    c = db.cursor()
    c.execute(somequery % key)
    data = c.fetchall()[0][0]
    cache[key] = data
return data


Also, I did some experiments with our  MySQL database, and found that the
overhead in a DB connection creation is very, very low when the DBMS is on
the same host. I was unable to measure any difference in performance,
compared to running an SQL statement, connecting to the socket just didn't
take any time. I implemented DB connection pooling anyway.

When tuning performance, I tend to optimize the design, SQL and index trees,
that helps performance a lot more than fiddling with fancy features.
Database pooling helped about 1%, changing a primary key from a,b to b,a
increased performance by 300%.

Mike.



-- 
The information contained in this communication and any attachments is confidential and may be privileged, and is for the sole use of the intended recipient(s). Any unauthorized review, use, disclosure or distribution is prohibited. If you are not the intended recipient, please notify the sender immediately by replying to this message and destroy all copies of this message and any attachments. ASML is neither liable for the proper and complete transmission of the information contained in this communication, nor for any delay in its receipt.


From neel at mediapulse.com  Wed Aug 27 10:22:28 2003
From: neel at mediapulse.com (Michael C. Neel)
Date: Fri Jan  9 22:00:17 2004
Subject: [mod_python] PythonDebug and Traceback
Message-ID: <C0FC22C08B82074A88B50061764157776B9639@johnson.mediapulse.net>

> Sure, but you'll have to display it yourself. My script 
> usually look like
> this:

But that's the issue, I didn't display it myself and had PythonDebug Off
set and it still dissplayed a traceback :/  This isn't something I want
to do, it something I want to stop =)

Mike

From stian at soiland.no  Wed Aug 27 20:18:45 2003
From: stian at soiland.no (Stian =?iso-8859-1?Q?S=F8iland?=)
Date: Fri Jan  9 22:00:18 2004
Subject: [mod_python] How do I serve up .html files?
In-Reply-To: <3F4BF84C.7060200@netzero.net>
References: <16202.30596.238589.112878@desk.crynwr.com>
	<20030825213605.O1138@onyx.ispol.com> <3F4AC8FE.4070405@netzero.net>
	<20030826043323.GL12023@itea.ntnu.no> <3F4BF84C.7060200@netzero.net>
Message-ID: <20030827181845.GY28932@itea.ntnu.no>

On 2003-08-27 02:16:12, Kirk Bailey wrote:

> As for you rather personal question about my personal behavior last night, 
> not that it is any of your business, the answer is: NOTHING. I'm stone cold 
> sober, and was last night. Your assumption was and is dead wrong.

As my original email was sent to you in private, not to the list, it was
ment as a funny remark person-to-person. 

If you don't like getting personal emails, I'm sorry. I don't know you
for real and don't know for sure how you're going to interpet a stupid
try for a 'funny' comment. This is one of the problems communicating
electronically. I meant you no harm.

> Your behavior in this matter is rather unprofessional sir, and uncharitible 
> to those around us of lesser technical skill- and disrespectful to those 
> more nearly your peer. This cannot but hamper your ongoing career in 
> Information Technology.

I can't see the relevance of a personal side-comment to my
not-so-very-fast career in Information Technology =)

-- 
Stian S?iland               Work toward win-win situation. Win-lose
Trondheim, Norway           is where you win and the other lose.
http://www.soiland.no/      Lose-lose and lose-win are left as an
                            exercise to the reader.  [Limoncelli/Hogan]

From stian at soiland.no  Wed Aug 27 20:38:45 2003
From: stian at soiland.no (Stian =?iso-8859-1?Q?S=F8iland?=)
Date: Fri Jan  9 22:00:18 2004
Subject: [mod_python] How do I serve up .html files?
In-Reply-To: <3F4BF76D.5090300@netzero.net>
References: <16202.30596.238589.112878@desk.crynwr.com>
	<20030825213605.O1138@onyx.ispol.com> <3F4AC8FE.4070405@netzero.net>
	<20030826043323.GL12023@itea.ntnu.no> <3F4BF76D.5090300@netzero.net>
Message-ID: <20030827183845.GA28932@itea.ntnu.no>

On 2003-08-27 02:12:29, Kirk Bailey wrote:

(this is the non-personal answer about the TECHNICAL things, not
including my previous private answers.. =) )

> Stian, I sugggest you be nice, and not go trolling. He asked a basic 
> question about how to get a html page to access a cgi program; Go back and 
> read the letter he wrote. I was discussing exactly that. One gets a page to 
> access a script with a ssi tag. He did NOT ask how to configure apache, or 
> how mod_python works. He asked how to get a page when requested to acess a 
> cgi program. I was addressing exactly that point, at a basic level. 
> Granted, his letter was a tad off topic, and even a little below the 
> general level of technical skill devlopment this list usually displays, but 
> he asked, I replied, being a generally helpful person.

About the technical issue, CGI was never asked about, mod_python is
normally used INSTEAD of cgi. 

The question was really how to run a python handler for every possible
URL, not to include cgi-output withing HTML.

(in which case I would have solved it anyway by using the mod_python
solution presented in this thread)


A quick note about the SetHandler trick (I use it to get virtual URLs -
what I would like to see is some functionallity from Publisher (argument
parsing, return content-type-magic) - used together with virtual URLs.
Ie allowing /browse/some-switch.domain.com/switchports without actually
having the object "some-switch.domain.com" - the quick solution probably
being some __getattr__-magic) 


Remember that even though you SetHandler to something, 
you'll also need to set DirectoryIndex to some EXISTING FILE. I did this
error as I included all python code in the pythonpath and had no files
in the actual path. I used SetHandler nav.web.devBrowser.dispatcher
in .htaccess for a blank directory.

Now, DirectoryIndex could not simply be index.html, as there were no
file index.html. I created a file "index" in the otherwise blank
directory, set DirectoryIndex to "index", and everything worked.

If the file is removed, the blank directory listing is presented, but
other urls within the directory works.

(the handler receives the request as being to /index, and the file is
never actually read from disk due to SetHandler intercepting)

Now, some gurus might have a suggestion about getting rid of that empty
file. If so, please let me know! =)


Why not have the files inside the directory? Well, we've encountered
*some* problems with developers each making "index.py" (they 
previously programmed PHP!) - within the same namespace (ie.
Subinterpreter). This caused problems like getting some modules from
each of the users public_html directory. Funny!

We've used PythonInterpPerDirectory while developing, but needs to get
rid of that before merging code, as this eats database connections as a
horse. (remember, one connection pr database pr. interpreter pr.
apache.. scales up!)


-- 
Stian S?iland               Work toward win-win situation. Win-lose
Trondheim, Norway           is where you win and the other lose.
http://www.soiland.no/      Lose-lose and lose-win are left as an
                            exercise to the reader.  [Limoncelli/Hogan]

From neel at mediapulse.com  Wed Aug 27 15:25:52 2003
From: neel at mediapulse.com (Michael C. Neel)
Date: Fri Jan  9 22:00:18 2004
Subject: /index.html wierdness was: RE: [mod_python] How do I serve up .html
	files?
Message-ID: <C0FC22C08B82074A88B50061764157776B9644@johnson.mediapulse.net>

I've noticed this /index.html wierdness as well.  It seems (in 2.7.8 at
least) that unless there is a file in the document root called
index.html, mod_python is not called not matter if it's set in a
Location or Directory section.  I tested this with a simple:

def handler(req):
	assert 0, req.uri

With the conf of:

<Location />
        SetHandler python-program
        PythonHandler www
</Location>

and later with

<Directory /home/httpd/webroot>
        SetHandler python-program
        PythonHandler www
</Directory>

And would always get a directory listing (or an error lising not allowed
page) for site.com/, but every other url tried would throw the assert
execption.  If I create an empty index.html file in the document root,
apache does its internal redirect and my assert get's picked up on the
redirect.  This is only needed for the root though, I do not need to
create the sub dirs or index.html pages in them.

Mike

> -----Original Message-----
> From: Stian S?iland [mailto:stian@soiland.no] 
> Sent: Wednesday, August 27, 2003 2:39 PM
> To: mod_python@modpython.org
> Subject: Re: [mod_python] How do I serve up .html files?
> 
> Remember that even though you SetHandler to something, 
> you'll also need to set DirectoryIndex to some EXISTING FILE. 
> I did this
> error as I included all python code in the pythonpath and had no files
> in the actual path. I used SetHandler nav.web.devBrowser.dispatcher
> in .htaccess for a blank directory.
> 
> Now, DirectoryIndex could not simply be index.html, as there were no
> file index.html. I created a file "index" in the otherwise blank
> directory, set DirectoryIndex to "index", and everything worked.
> 
> If the file is removed, the blank directory listing is presented, but
> other urls within the directory works.
> 
> (the handler receives the request as being to /index, and the file is
> never actually read from disk due to SetHandler intercepting)
> 
> Now, some gurus might have a suggestion about getting rid of 
> that empty
> file. If so, please let me know! =)
> 
> 

From joshg at myrealbox.com  Wed Aug 27 14:58:27 2003
From: joshg at myrealbox.com (Joshua Adam Ginsberg)
Date: Fri Jan  9 22:00:18 2004
Subject: [mod_python] IPC, db conn sharing, and other fine things
Message-ID: <1062017906.5364.14.camel@gateway.localnet>

Hello Mike -

Thanks for taking the time to respond...

My data applications require that multiple clients be able to access
them. These clients include web clients and desktop clients on different
machines across the internet. Thus I build XML-RPC as the middle
language into everything I do. The web client never actually touches the
database. And thus on the server where a "front end" web server resides,
I rarely actually install a database.

Additionally, despite ever increasing horsepower in hardware and ever
increasing efficiency in databases, they sacrifice a lot of efficiency
for durability of data. For a caching system, persistence beyond a crash
isn't really necessary. For a component registering system, it gets
rebuilt every time the server is restarted.

Furthermore the users of my software generally need database features
not offered in MySQL, so I don't really use it very often. PostgreSQL is
probably the most common RDBMS I use.

As far as the global dictionaries suggestion, that will work within any
individual process, but each process will have to maintain their own
disparate cache and registry. I'd thought about it, and I'll probably
give it a shot just to see what the performance hit would be in running
them in each process.

For right now I've hacked together a flat file-based caching/registry
system using libxml2 and fcntl locking. It's performance will work,
though I really miss the speed of an all-in-memory caching/registry
system. *sigh* You make do with what you can.

Thanks again.

-jag

From cs1spw at bath.ac.uk  Wed Aug 27 19:55:15 2003
From: cs1spw at bath.ac.uk (Simon Willison)
Date: Fri Jan  9 22:00:18 2004
Subject: [mod_python] 
 Newbie question: setting all calls to a certain directory to beprocessed
 by a script
Message-ID: <3F4D52F3.1090405@bath.ac.uk>

Hi all,

I'm new to mod_python, and I'm just beginning to get my feet wet. I'm 
currently setting directives in .htaccess files because I don't want to 
mess around too much with my httpd.conf file. I want to set it up so 
that ALL calls to a certain directory are handled by a handle() function 
in a specific file.

The mod_python documentation shows how to do this for any files ending 
in .py:

AddHandler python-program .py
PythonHandler myscript

I understand that the above passes all requests for URLs in the 
directory ending with .py to the handle() function I've defined in 
myscript.py in that directory. I'm a big fan of "tidy" URLs, and try to 
avoid having any file extension on URLs at all. Ideally, I would like to 
set up a rule so that any requests for files that do NOT end in .jpg, 
.js, .gif or .css are handed off to the handle() function in the file of 
my choice. If that isn't possible, I'd like to set it up so that all 
requests within the directory in which my .htaccess file lives are 
handled by the one handle() function.

Thanks,

Simon Willison


From cs1spw at bath.ac.uk  Wed Aug 27 20:17:13 2003
From: cs1spw at bath.ac.uk (Simon Willison)
Date: Fri Jan  9 22:00:18 2004
Subject: [mod_python]  Newbie question: setting all calls to a certain
 directory to beprocessed by a script
In-Reply-To: <3F4D52F3.1090405@bath.ac.uk>
References: <3F4D52F3.1090405@bath.ac.uk>
Message-ID: <3F4D5819.70200@bath.ac.uk>

Simon Willison wrote:
> Ideally, I would like to 
> set up a rule so that any requests for files that do NOT end in .jpg, 
> .js, .gif or .css are handed off to the handle() function in the file of 
> my choice. If that isn't possible, I'd like to set it up so that all 
> requests within the directory in which my .htaccess file lives are 
> handled by the one handle() function.

Well, I've worked out the second option. My .htaccess file now looks 
like this:

SetHandler python-program
PythonHandler handler
PythonDebug On

This sends ALL requests to stuff within that directory to handler.py's 
handler() function. I've drawn a blank on getting it not to do this with 
images. I tried the following:

AddHandler default-handler .html .jpeg .jpg .gif .css .js
SetHandler python-program
PythonHandler handler
PythonDebug On

But this didn't work - presumably because the SetHandler over-rides the 
AddHandler directive. I tried changing their order but didn't have any 
luck there either.

Any help on this would be greatly appreciated :)

Thanks,

Simon


From synec at viscous.org  Wed Aug 27 18:31:58 2003
From: synec at viscous.org (john spurling)
Date: Fri Jan  9 22:00:18 2004
Subject: [mod_python]  Newbie question: setting all calls to a certain
	directory to beprocessed by a script
In-Reply-To: <3F4D5819.70200@bath.ac.uk>
References: <3F4D52F3.1090405@bath.ac.uk> <3F4D5819.70200@bath.ac.uk>
Message-ID: <20030828013158.GD21916@c7c8.colobox.com>

On Wed, Aug 27, 2003 at 08:17:13PM -0500, Simon Willison wrote:
> Simon Willison wrote:
> >Ideally, I would like to 
> >set up a rule so that any requests for files that do NOT end in .jpg, 
> >.js, .gif or .css are handed off to the handle() function in the file of 
> >my choice. If that isn't possible, I'd like to set it up so that all 
> >requests within the directory in which my .htaccess file lives are 
> >handled by the one handle() function.
> 
> Well, I've worked out the second option. My .htaccess file now looks 
> like this:
> 
> SetHandler python-program
> PythonHandler handler
> PythonDebug On

good show. using this setting, try this handler:

from mod_python import apache
_types_to_skip = ['jpg', 'gif', 'png']
def handler(req):
    try:
    file_extention = req.uri.split('.')[-1].lower()
    if file_extention in _types_to_skip:
        return apache.DECLINED
    except:
        pass

this will tell apache to go on to another handler for requests ending
in any of the above extensions.

let us know if you have further questions.

-john

-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
Url : http://mailman.modpython.org/pipermail/mod_python/attachments/20030827/62e64362/attachment-0002.bin
From cs1spw at bath.ac.uk  Wed Aug 27 21:15:27 2003
From: cs1spw at bath.ac.uk (Simon Willison)
Date: Fri Jan  9 22:00:18 2004
Subject: [mod_python]  Newbie question: setting all calls to a certain
 directory to beprocessed by a script
In-Reply-To: <20030828013158.GD21916@c7c8.colobox.com>
References: <3F4D52F3.1090405@bath.ac.uk> <3F4D5819.70200@bath.ac.uk>
	<20030828013158.GD21916@c7c8.colobox.com>
Message-ID: <3F4D65BF.9080901@bath.ac.uk>

john spurling wrote:
> good show. using this setting, try this handler:
> 
> from mod_python import apache
> _types_to_skip = ['jpg', 'gif', 'png']
> def handler(req):
>     try:
>     file_extention = req.uri.split('.')[-1].lower()
>     if file_extention in _types_to_skip:
>         return apache.DECLINED
>     except:
>         pass

Fantastic. The apache.DECLINED bit is what I was missing. It even does a 
proper 404 error now if the requested image file isn't found.

Thanks for the prompt reply!

Simon Willison
http://simon.incutio.com/


From nelson at crynwr.com  Wed Aug 27 22:23:27 2003
From: nelson at crynwr.com (Russell Nelson)
Date: Fri Jan  9 22:00:18 2004
Subject: [mod_python] 
 Newbie question: setting all calls to a certain directory to beprocessed
 by a script
In-Reply-To: <3F4D52F3.1090405@bath.ac.uk>
References: <3F4D52F3.1090405@bath.ac.uk>
Message-ID: <16205.26527.695930.55664@desk.crynwr.com>

Simon Willison writes:
 > my choice. If that isn't possible, I'd like to set it up so that all 
 > requests within the directory in which my .htaccess file lives are 
 > handled by the one handle() function.

Simon, Simon, Simon, where were you last week?  I could have read the
answer to your question, and avoided having to post my question
earlier this week.  It's pretty easy.  Do it like this:

<Directory "/var/www/ae.russnelson.com">
SetHandler python-program
PythonHandler publish
</Directory>

The SetHandler says that everything should be handled by the
python-program.  The PythonHandler says that the name of the script is
publish.py.  Here's a simple publish.py.  I'll be publishing a more
complicated example later once I finish porting my blogging code over
to mod_python.  It's currently stand-alone code that writes static
HTML pages.  The astute observer will notice the constant "if 1" whose
unreachable clause calls page().  That code returns an HTML document
given the pathname that the user handed in.  Note that you'll never
get the null string, but instead 'index.html' or as configured
elsewhere.

#!/usr/bin/env python

from mod_python import apache
import sys, os, re, string

homedir = "/var/www/ae.russnelson.com/"

def handler(req):
    if 1:
        req.content_type = "text/plain"
        req.send_http_header()
        req.write("Hello World!\n")
        req.write('uri:'+req.uri+'\n')
        req.write('filename:'+req.filename+'\n')
        req.write('path_info:'+req.path_info+'\n')
        if req.args: req.write('args:'+req.args+'\n')
    else:
        req.content_type = "text/html"
        req.send_http_header()
        req.write(page(req.filename[len(homedir):]))
    return apache.OK


-- 
--My blog is at angry-economist.russnelson.com  | Free markets express in the
Crynwr sells support for free software  | PGPok | practical world our belief
521 Pleasant Valley Rd. | +1 315 268 1925 voice | that there is that of God
Potsdam, NY 13676-3213  | +1 315 268 9201 FAX   | in all people. -Chris V.
From grisha at modpython.org  Wed Aug 27 22:35:42 2003
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 22:00:18 2004
Subject: [mod_python]  Newbie question: setting all calls to a certain
 directory to beprocessed by a script
In-Reply-To: <3F4D5819.70200@bath.ac.uk>
References: <3F4D52F3.1090405@bath.ac.uk> <3F4D5819.70200@bath.ac.uk>
Message-ID: <20030827223418.L24141@onyx.ispol.com>



On Wed, 27 Aug 2003, Simon Willison wrote:
> AddHandler default-handler .html .jpeg .jpg .gif .css .js
> SetHandler python-program
> PythonHandler handler
> PythonDebug On


How about

SetHandler python-program
PythonHandler handler | .html .jpeg .jpg .gif .css .js
PythonDebug On


Grisha
From rey4 at columbia.edu  Wed Aug 27 19:31:54 2003
From: rey4 at columbia.edu (Russell Yanofsky)
Date: Fri Jan  9 22:00:18 2004
Subject: [mod_python] Re: IPC, db conn sharing, and other fine things
References: <1062017906.5364.14.camel@gateway.localnet>
Message-ID: <bijqkm$9br$1@sea.gmane.org>

Joshua Adam Ginsberg wrote:
> For right now I've hacked together a flat file-based caching/registry
> system using libxml2 and fcntl locking. It's performance will work,
> though I really miss the speed of an all-in-memory caching/registry
> system. *sigh* You make do with what you can.

What is preventing you from caching the file contents in memory? Mod_python
lets you store persistent data in global variables.

- Russ


From grisha at modpython.org  Wed Aug 27 22:51:46 2003
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 22:00:18 2004
Subject: [mod_python]  Newbie question: setting all calls to a certain
 directory to beprocessed by a script
In-Reply-To: <16205.26527.695930.55664@desk.crynwr.com>
References: <3F4D52F3.1090405@bath.ac.uk>
	<16205.26527.695930.55664@desk.crynwr.com>
Message-ID: <20030827224827.K24141@onyx.ispol.com>


Call me stupid, but I don't get it :-)

What's the point of the else clause if it's never reached?

Grisha

On Wed, 27 Aug 2003, Russell Nelson wrote:

> The astute observer will notice the constant "if 1" whose unreachable
> clause calls page().  That code returns an HTML document given the
> pathname that the user handed in.  Note that you'll never get the null
> string, but instead 'index.html' or as configured elsewhere.
>
> #!/usr/bin/env python
>
> from mod_python import apache
> import sys, os, re, string
>
> homedir = "/var/www/ae.russnelson.com/"
>
> def handler(req):
>     if 1:
>         req.content_type = "text/plain"
>         req.send_http_header()
>         req.write("Hello World!\n")
>         req.write('uri:'+req.uri+'\n')
>         req.write('filename:'+req.filename+'\n')
>         req.write('path_info:'+req.path_info+'\n')
>         if req.args: req.write('args:'+req.args+'\n')
>     else:
>         req.content_type = "text/html"
>         req.send_http_header()
>         req.write(page(req.filename[len(homedir):]))
>     return apache.OK
>
From nelson at crynwr.com  Wed Aug 27 23:09:09 2003
From: nelson at crynwr.com (Russell Nelson)
Date: Fri Jan  9 22:00:18 2004
Subject: [mod_python]  Newbie question: setting all calls to a certain
 directory to beprocessed by a script
In-Reply-To: <20030827224827.K24141@onyx.ispol.com>
References: <3F4D52F3.1090405@bath.ac.uk>
	<16205.26527.695930.55664@desk.crynwr.com>
	<20030827224827.K24141@onyx.ispol.com>
Message-ID: <16205.29269.480823.763670@desk.crynwr.com>

Gregory (Grisha) Trubetskoy writes:
 > 
 > What's the point of the else clause if it's never reached?

It's ... oversimple example code.  Ordinarily it reads "if 0".

-- 
--My blog is at angry-economist.russnelson.com  | Free markets express in the
Crynwr sells support for free software  | PGPok | practical world our belief
521 Pleasant Valley Rd. | +1 315 268 1925 voice | that there is that of God
Potsdam, NY 13676-3213  | +1 315 268 9201 FAX   | in all people. -Chris V.
From cs1spw at bath.ac.uk  Wed Aug 27 22:51:32 2003
From: cs1spw at bath.ac.uk (Simon Willison)
Date: Fri Jan  9 22:00:18 2004
Subject: [mod_python] Strange caching problem
Message-ID: <3F4D7C44.2020504@bath.ac.uk>

I'm experimenting with the idea that mod_python stays resident in 
memory. Here's the handler script I'm using:

from mod_python import apache

counter = 0

def handler(req):
     req.content_type = 'text/html'
     req.send_http_header()
     global counter
     counter = counter + 1
     req.write("Counter: %d" % counter)
     return apache.OK

If I load it up in a browser and continuously hit refresh, the number 
only increments every 4 or 5 page loads. I was expecting it to increment 
each time. Don't worry - this isn't how I intend to implement a page 
counter, it's just an experiment I'm using to try and gain a better 
understanding of this capability.

The above problem is unsevere, but I've also been having issues with the 
following script:

from mod_python import apache

def handler(req):
     req.content_type = 'text/html'
     req.send_http_header()
     req.write('unparsed_uri: %s' % req.unparsed_uri)
     return apache.OK

When I visit the following URL:

http://myserver/~simon/1

It displays this, as expected:

unparsed_uri: /~simon/1

If I then visit the following:

http://myserver/~simon/2

It continues to show the same string. I have to hit enter in my 
browser's location bar several times before it will notice that I've 
entered a different URL.

This is a major problem, as my aim is to serve up different content 
depending on the URL. If the system isn't noticing the different URLs 
for some reason it becomes unusable!

Thanks,

Simon




From synec at viscous.org  Wed Aug 27 21:07:18 2003
From: synec at viscous.org (john spurling)
Date: Fri Jan  9 22:00:18 2004
Subject: [mod_python] Strange caching problem
In-Reply-To: <3F4D7C44.2020504@bath.ac.uk>
References: <3F4D7C44.2020504@bath.ac.uk>
Message-ID: <20030828040717.GE21916@c7c8.colobox.com>

On Wed, Aug 27, 2003 at 10:51:32PM -0500, Simon Willison wrote:
> I'm experimenting with the idea that mod_python stays resident in 
> memory. Here's the handler script I'm using:
> 
> from mod_python import apache
> 
> counter = 0
> 
> def handler(req):
>     req.content_type = 'text/html'
>     req.send_http_header()
>     global counter
>     counter = counter + 1
>     req.write("Counter: %d" % counter)
>     return apache.OK
> 
> If I load it up in a browser and continuously hit refresh, the number 
> only increments every 4 or 5 page loads. I was expecting it to increment 
> each time. Don't worry - this isn't how I intend to implement a page 
> counter, it's just an experiment I'm using to try and gain a better 
> understanding of this capability.

grep for "StartServers" in your httpd.conf. i'm guessing it's about 4
or 5. 

i had this same problem when implementing sessions. each httpd
instance has its own individual python interpreter. you might just
want to set StartServers to 1 while playing around, but then don't
forget to increase it before "shipping" any code so you don't
inadvertantly write a bug like you have in the above example
code. it's easy to do.

cheers,
john



-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
Url : http://mailman.modpython.org/pipermail/mod_python/attachments/20030827/f318d6e2/attachment-0002.bin
From cs1spw at bath.ac.uk  Wed Aug 27 23:19:00 2003
From: cs1spw at bath.ac.uk (Simon Willison)
Date: Fri Jan  9 22:00:18 2004
Subject: [mod_python] Strange caching problem
In-Reply-To: <20030828040717.GE21916@c7c8.colobox.com>
References: <3F4D7C44.2020504@bath.ac.uk>
	<20030828040717.GE21916@c7c8.colobox.com>
Message-ID: <3F4D82B4.4060003@bath.ac.uk>

john spurling wrote:
>>If I load it up in a browser and continuously hit refresh, the number 
>>only increments every 4 or 5 page loads. I was expecting it to increment 
>>each time. Don't worry - this isn't how I intend to implement a page 
>>counter, it's just an experiment I'm using to try and gain a better 
>>understanding of this capability.
> 
> grep for "StartServers" in your httpd.conf. i'm guessing it's about 4
> or 5. 

The lights just came on. This has a pretty big impact on application 
design. Presumably it means that the "shared memory" ability of 
mod_python (where global variables in a module are accessible to 
multiple requests) is only really useful as a performance enhancement - 
data loaded from the filesystem or database that is unlikely to change 
can be held in memory, but it's a bad idea to change that data as it 
won't be there for all 4 or 5 Apache processes.

Thanks again,

Simon


From ktimm at var-log.com  Wed Aug 27 23:19:45 2003
From: ktimm at var-log.com (ktimm)
Date: Fri Jan  9 22:00:18 2004
Subject: [mod_python] Mod python sys.stdin 
Message-ID: <004701c36d1b$9d497f10$0a01a8c0@toshibauser>

How do I get at sys.stdin with mod_python publisher. I know it's probably something simple but I'm trying to convert an xml parser that was getting though a cgi on sys.stdin and it keeps returning that there is no data to parse. 

Thanks 
Kevin 
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mailman.modpython.org/pipermail/mod_python/attachments/20030827/72e29dac/attachment-0002.htm
From davidf at sjsoft.com  Thu Aug 28 07:40:55 2003
From: davidf at sjsoft.com (David Fraser)
Date: Fri Jan  9 22:00:18 2004
Subject: [mod_python] Strange caching problem
In-Reply-To: <3F4D82B4.4060003@bath.ac.uk>
References: <3F4D7C44.2020504@bath.ac.uk>
	<20030828040717.GE21916@c7c8.colobox.com> <3F4D82B4.4060003@bath.ac.uk>
Message-ID: <3F4D95E7.6080602@sjsoft.com>

Simon Willison wrote:

> john spurling wrote:
>
>>> If I load it up in a browser and continuously hit refresh, the 
>>> number only increments every 4 or 5 page loads. I was expecting it 
>>> to increment each time. Don't worry - this isn't how I intend to 
>>> implement a page counter, it's just an experiment I'm using to try 
>>> and gain a better understanding of this capability.
>>
>>
>> grep for "StartServers" in your httpd.conf. i'm guessing it's about 4
>> or 5. 
>
>
> The lights just came on. This has a pretty big impact on application 
> design. Presumably it means that the "shared memory" ability of 
> mod_python (where global variables in a module are accessible to 
> multiple requests) is only really useful as a performance enhancement 
> - data loaded from the filesystem or database that is unlikely to 
> change can be held in memory, but it's a bad idea to change that data 
> as it won't be there for all 4 or 5 Apache processes.
>
> Thanks again,
>
> Simon

mod_python 3.1alpha which is soon to be released has support for real 
shared memory that can be accessed by all the interpreters

David

From mike.looijmans at asml.com  Thu Aug 28 08:29:58 2003
From: mike.looijmans at asml.com (Mike Looijmans)
Date: Fri Jan  9 22:00:18 2004
Subject: [mod_python] IPC, db conn sharing, and other fine things
Message-ID: <01c36d2d$cd30f700$926a1e6e@wsasd464>

>As far as the global dictionaries suggestion, that will work within any
>individual process, but each process will have to maintain their own
>disparate cache and registry. I'd thought about it, and I'll probably
>give it a shot just to see what the performance hit would be in running
>them in each process.


One simple way to solve this is to force Apache into threading. I'm using
the MPM worker here (Solaris), so that over 20 connections share the same
process (but different threads). This works well for publisher and common
handlers, but this will NOT work for the cgihandler (which only allows one
active thread). A big advantage of the (worker) threading mpm is that you
only need one Python interpreter 'in the air', saving a few megabytes for
each child.

Simple multi-read-single-write strategy:

cachelock = threading.Lock()
#...

try:
    result = cache[key]
except KeyError:
    cachelock.aquire()
    try:
        # Read again, since some other thread may have done
        # the same now
        try:
            result = cache[key]
        except KeyError:
            result = someFetchingFunction(key)
            cache[key] = result
    finally:
        cachelock.release()
return result

With multiple processes, each process will gather the neccesary cache data
as it goes, so initially the system will be a bit slower but ramps up rather
quick as more data is cached. However, this does eat quite some memory, all
cache data is duplicated for each process.

>For right now I've hacked together a flat file-based caching/registry
>system using libxml2 and fcntl locking. It's performance will work,
>though I really miss the speed of an all-in-memory caching/registry
>system. *sigh* You make do with what you can.

I think there are some Python shared memory (across processes) libraries,
they might be worth looking into. You could also write some caching code
based on shared memory in C and package it into a .so library and load it
into Python.

The filesystem is not so bad, most of it is cached in memory anyway. Some
OSses support in-memory files, that might be a nice one too.

Mike.



-- 
The information contained in this communication and any attachments is confidential and may be privileged, and is for the sole use of the intended recipient(s). Any unauthorized review, use, disclosure or distribution is prohibited. If you are not the intended recipient, please notify the sender immediately by replying to this message and destroy all copies of this message and any attachments. ASML is neither liable for the proper and complete transmission of the information contained in this communication, nor for any delay in its receipt.


From davidf at sjsoft.com  Thu Aug 28 09:49:37 2003
From: davidf at sjsoft.com (David Fraser)
Date: Fri Jan  9 22:00:18 2004
Subject: [mod_python] IPC, db conn sharing, and other fine things
In-Reply-To: <01c36d2d$cd30f700$926a1e6e@wsasd464>
References: <01c36d2d$cd30f700$926a1e6e@wsasd464>
Message-ID: <3F4DB411.7070109@sjsoft.com>

Mike Looijmans wrote:

>>For right now I've hacked together a flat file-based caching/registry
>>system using libxml2 and fcntl locking. It's performance will work,
>>though I really miss the speed of an all-in-memory caching/registry
>>system. *sigh* You make do with what you can.
>>    
>>
>
>I think there are some Python shared memory (across processes) libraries,
>they might be worth looking into. You could also write some caching code
>based on shared memory in C and package it into a .so library and load it
>into Python.
>
>The filesystem is not so bad, most of it is cached in memory anyway. Some
>OSses support in-memory files, that might be a nice one too.
>
>Mike.
>
>
>  
>
See the soon-to-be released mod_python 3.1 alpha for mod_python support 
for shared memory.
That's a much easier route than trying to sort it all out yourself...

David

From azaroth at liverpool.ac.uk  Thu Aug 28 11:47:39 2003
From: azaroth at liverpool.ac.uk (Robert Sanderson)
Date: Fri Jan  9 22:00:18 2004
Subject: [mod_python] IPC, db conn sharing, and other fine things
In-Reply-To: <3F4DB411.7070109@sjsoft.com>
Message-ID: <Pine.LNX.4.44.0308281146590.1331-100000@gondolin.hist.liv.ac.uk>

On Thu, 28 Aug 2003, David Fraser wrote:
> Mike Looijmans wrote:

> >I think there are some Python shared memory (across processes) libraries,
> >they might be worth looking into. You could also write some caching code
> >based on shared memory in C and package it into a .so library and load it
> >into Python.

> See the soon-to-be released mod_python 3.1 alpha for mod_python support 
> for shared memory.
> That's a much easier route than trying to sort it all out yourself...

That's awesome news, David.  Any ideas when the code is likely to touch 
down?

Rob

-- 
      ,'/:.          Dr Robert Sanderson (azaroth@liverpool.ac.uk)
    ,'-/::::.        http://www.o-r-g.org/~azaroth/
  ,'--/::(@)::.      Special Collections and Archives, extension 3142
,'---/::::::::::.    Nebmedes:  telnet: nebmedes.o-r-g.org 7777
____/:::::::::::::.                WWW: http://nebmedes.o-r-g.org:8000/
I L L U M I N A T I

From davidf at sjsoft.com  Thu Aug 28 14:22:59 2003
From: davidf at sjsoft.com (David Fraser)
Date: Fri Jan  9 22:00:18 2004
Subject: [mod_python] IPC, db conn sharing, and other fine things
In-Reply-To: <Pine.LNX.4.44.0308281146590.1331-100000@gondolin.hist.liv.ac.uk>
References: <Pine.LNX.4.44.0308281146590.1331-100000@gondolin.hist.liv.ac.uk>
Message-ID: <3F4DF423.9010801@sjsoft.com>

Robert Sanderson wrote:

>On Thu, 28 Aug 2003, David Fraser wrote:
>  
>
>>Mike Looijmans wrote:
>>    
>>
>
>  
>
>>>I think there are some Python shared memory (across processes) libraries,
>>>they might be worth looking into. You could also write some caching code
>>>based on shared memory in C and package it into a .so library and load it
>>>into Python.
>>>      
>>>
>
>  
>
>>See the soon-to-be released mod_python 3.1 alpha for mod_python support 
>>for shared memory.
>>That's a much easier route than trying to sort it all out yourself...
>>    
>>
>
>That's awesome news, David.  Any ideas when the code is likely to touch 
>down?
>
>Rob
>
>  
>
Guido is busy preparing it for release now, but remember that this will 
be an alpha version, I don't know how long it will take to stabilize...
Still if you're planning on doing shared memory stuff it would make more 
sense to help get 3.1 to a stable state than to write your own.
If you're interested in helping develop, join the 
python-dev@httpd.apache.org mailing list.

David


From grisha at modpython.org  Thu Aug 28 09:19:50 2003
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 22:00:18 2004
Subject: [mod_python] IPC, db conn sharing, and other fine things
In-Reply-To: <3F4DF423.9010801@sjsoft.com>
References: <Pine.LNX.4.44.0308281146590.1331-100000@gondolin.hist.liv.ac.uk>
 <3F4DF423.9010801@sjsoft.com>
Message-ID: <20030828091445.B37161@onyx.ispol.com>



On Thu, 28 Aug 2003, David Fraser wrote:

> Guido is busy preparing it for release now,

ROTFL! (It'd be nice if he was thought)

One small correction - 3.1 doesn't do anything with shared memory, it uses
dbm to store data across processes. It can also store session data in real
memory, but for that you have to be on a single-process multithreaded MPM,
such as winnt, or worker if it is configured to run with only one process.

Grisha
From grisha at apache.org  Thu Aug 28 21:12:50 2003
From: grisha at apache.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 22:00:18 2004
Subject: [mod_python] ANNOUNCE: Mod_python 3.1.0 Alpha
Message-ID: <20030828210644.C43921@onyx.ispol.com>


The Apache Software Foundation and The Apache HTTP Server Project are
pleased to announce the 3.1.0 ALPHA release mod_python.

Some feature highlights:

* Server-side sessions with memory or dbm-based storage and session
locking support.

* PSP - a fast flex-based scanner which allows embedding Python code
within HTML.

* Native cookie support, including support for automatic cryptographic
cookie signing and marshalling.

* Compatibility with Python 2.3, as well as many other enhancements.

Alpha releases are NOT considered stable and do contain bugs. Some
functionality may change before the first beta release.

This release is intended to solicit widespread testing of the code. We
strongly recommend that you try out your existing applications and
experiment with new features in a non-production environment using this
version and report any problems you may encounter so that they can be
addressed before the final release.

Mod_python 3.1.0a is available for download from:

http://httpd.apache.org/modules/python-download.cgi

Preferred method of providing feedback is the mod_python user list
mod_python@modpython.org (due to spam, you must subscribe to post).

For more information about mod_python visit
http://www.modpython.org/

Thank You,

Grisha Trubetskoy

From nelson at crynwr.com  Thu Aug 28 21:30:36 2003
From: nelson at crynwr.com (Russell Nelson)
Date: Fri Jan  9 22:00:18 2004
Subject: [mod_python] ANNOUNCE: Mod_python 3.1.0 Alpha
In-Reply-To: <20030828210644.C43921@onyx.ispol.com>
References: <20030828210644.C43921@onyx.ispol.com>
Message-ID: <16206.44220.488158.417635@desk.crynwr.com>

Gregory (Grisha) Trubetskoy writes:
 > 
 > The Apache Software Foundation and The Apache HTTP Server Project are
 > pleased to announce the 3.1.0 ALPHA release mod_python.

Hrm.  When is there going to be an i386 release?

-- 
:-)My blog is at angry-economist.russnelson.com  | Free markets express in the
Crynwr sells support for free software  | PGPok | practical world our belief
521 Pleasant Valley Rd. | +1 315 268 1925 voice | that there is that of God
Potsdam, NY 13676-3213  | +1 315 268 9201 FAX   | in all people. -Chris V.
From mike.looijmans at asml.com  Fri Aug 29 08:56:31 2003
From: mike.looijmans at asml.com (Mike Looijmans)
Date: Fri Jan  9 22:00:18 2004
Subject: [mod_python] Mod python sys.stdin 
Message-ID: <01c36dfa$ad1b3980$926a1e6e@wsasd464>

Don't use publisher if you want to read the request (e.g. from a POST)
directly. Publisher will have eaten the whole request before calling your
function.

Use a standard "handler", e.g. this (untested) one lets anyone POST a file
to the system in a cetain path, and report back how large it was and where
it was placed:

BUFSIZE=10240
SOMEBASEPATH = '/usr/local/uploads'

def handler(req):
    req.content_type = 'text/plain'
    destfilename = SOMEBASEPATH + req.path_info
    req.write('Writing: %s\n' % destfilename)
    dstfile = open(destfilename, 'wb')
    srcfile = req
    data = srcfile.read(BUFSIZE)
    c = 0
    while data:
        dstfile.write(data)
        c += len(data)
        data = srcfile.read(BUFSIZE)
    req.write('Wrote: %s bytes\n' % c)
    return apache.OK



-----Original Message-----
From: ktimm <ktimm@var-log.com>
To: mod_python@modpython.org <mod_python@modpython.org>
Date: Thursday, August 28, 2003 6:23 AM
Subject: [mod_python] Mod python sys.stdin


How do I get at sys.stdin with mod_python publisher. I know it's probably
something simple but I'm trying to convert an xml parser that was getting
though a cgi on sys.stdin and it keeps returning that there is no data to
parse.

Thanks
Kevin



-- 
The information contained in this communication and any attachments is confidential and may be privileged, and is for the sole use of the intended recipient(s). Any unauthorized review, use, disclosure or distribution is prohibited. If you are not the intended recipient, please notify the sender immediately by replying to this message and destroy all copies of this message and any attachments. ASML is neither liable for the proper and complete transmission of the information contained in this communication, nor for any delay in its receipt.


From wart at softhome.net  Fri Aug 29 11:34:14 2003
From: wart at softhome.net (Wartan Hachaturow)
Date: Fri Jan  9 22:00:18 2004
Subject: [mod_python] ANNOUNCE: Mod_python 3.1.0 Alpha
In-Reply-To: <16206.44220.488158.417635@desk.crynwr.com>
References: <20030828210644.C43921@onyx.ispol.com>
	<16206.44220.488158.417635@desk.crynwr.com>
Message-ID: <20030829073413.GA65122@daemon.tepkom.ru>

On Thu, Aug 28, 2003 at 09:30:36PM -0400, Russell Nelson wrote:

>  > pleased to announce the 3.1.0 ALPHA release mod_python.
> 
> Hrm.  When is there going to be an i386 release?

Don't forget that it's also available in the source form -- you're
free to port ;))

-- 
Regards, Wartan.
From gstein at lyra.org  Fri Aug 29 03:43:00 2003
From: gstein at lyra.org (Greg Stein)
Date: Fri Jan  9 22:00:18 2004
Subject: [mod_python] ANNOUNCE: Mod_python 3.1.0 Alpha
In-Reply-To: <20030829073413.GA65122@daemon.tepkom.ru>;
	from wart@softhome.net on Fri, Aug 29, 2003 at 11:34:14AM +0400
References: <20030828210644.C43921@onyx.ispol.com>
	<16206.44220.488158.417635@desk.crynwr.com>
	<20030829073413.GA65122@daemon.tepkom.ru>
Message-ID: <20030829034300.C12609@lyra.org>

> On Thu, Aug 28, 2003 at 09:30:36PM -0400, Russell Nelson wrote:
> 
> >  > pleased to announce the 3.1.0 ALPHA release mod_python.
> > 
> > Hrm.  When is there going to be an i386 release?

There wasn't a smiley here, so just to be sure: it's an alpha quality
release, not an Alpha architecture binary or something like that.

(knowing Russell's been around the industry for a _long_ time, I gotta
 believe he knew that, but that missing smiley... :-)

Cheers,
-g

-- 
Greg Stein, http://www.lyra.org/
From lairdshaw at yahoo.com.au  Fri Aug 29 20:44:41 2003
From: lairdshaw at yahoo.com.au (Laird Shaw)
Date: Fri Jan  9 22:00:18 2004
Subject: [mod_python] 
	Apache startup error using mod_python under Windows 2000 (have
	msvcr70.dll)
Message-ID: <001901c36e1a$95954a60$0a00a8c0@laird>

Hi all,

Apologies if I've missed the answer to this question somewhere, but I've
searched to no avail.

Whilst attempting to start, Apache fails with:

Syntax error on line 175 of C:/Program Files/Apache
Group/Apache2/conf/httpd.conf:
Cannot load C:/Program Files/Apache Group/Apache2/modules/mod_python.so into
server: The specified module could not be found.

I've checked that I've specified the correct path to mod_python.so.

I saw in another post that msvcr70.dll is required, and duly downloaded and
copied it into winnt\system32, believing I had solved the problem.  Alas, no
such luck.  Same error.

OS = Windows 2000 5.00.2195, Service pack 4
Python = 2.3
Apache = 2.0.47
msvcr70.dll = 7.00.9064.0

This is the relevent part of httpd.conf:

LoadModule python_module modules/mod_python.so

<Directory C:/data/webroot/htdocs>
  AddHandler python-program .py
  PythonHandler mptest
  PythonDebug On
</Directory>

As an aside, I am also running mod_perl and php4apache2 - but I don't
imagine they would affect anything.

I'm new to python - haven't even written a single line of code yet, however
I have run the interpreter to verify that it installed properly.

I have added C:\python23 to my path but haven't set any other environment
variables.

Thanks in advance,

Laird

From davidf at sjsoft.com  Fri Aug 29 13:20:33 2003
From: davidf at sjsoft.com (David Fraser)
Date: Fri Jan  9 22:00:18 2004
Subject: [mod_python] 	Apache startup error using mod_python under Windows
	2000 (have	msvcr70.dll)
In-Reply-To: <001901c36e1a$95954a60$0a00a8c0@laird>
References: <001901c36e1a$95954a60$0a00a8c0@laird>
Message-ID: <3F4F3701.3000401@sjsoft.com>

Laird Shaw wrote:

>Hi all,
>
>Apologies if I've missed the answer to this question somewhere, but I've
>searched to no avail.
>
>Whilst attempting to start, Apache fails with:
>
>Syntax error on line 175 of C:/Program Files/Apache
>Group/Apache2/conf/httpd.conf:
>Cannot load C:/Program Files/Apache Group/Apache2/modules/mod_python.so into
>server: The specified module could not be found.
>
>I've checked that I've specified the correct path to mod_python.so.
>
>I saw in another post that msvcr70.dll is required, and duly downloaded and
>copied it into winnt\system32, believing I had solved the problem.  Alas, no
>such luck.  Same error.
>
>OS = Windows 2000 5.00.2195, Service pack 4
>Python = 2.3
>Apache = 2.0.47
>msvcr70.dll = 7.00.9064.0
>  
>
I've had exactly the same problem, with a new Win2000 virtual machine, 
same versions of Python and Apache.
Didn't try add the dll though.

David


From grisha at modpython.org  Fri Aug 29 09:53:10 2003
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 22:00:19 2004
Subject: [mod_python] Apache startup error using mod_python under Windows
 2000 (have msvcr70.dll)
In-Reply-To: <3F4F3701.3000401@sjsoft.com>
References: <001901c36e1a$95954a60$0a00a8c0@laird>
	<3F4F3701.3000401@sjsoft.com>
Message-ID: <20030829095118.J43921@onyx.ispol.com>


It's not impossible that the distribution file is missing something,
though it seemed to have worked for me...

It shouldn't need msvcr70.dll anymore, something else is the problem.

Grisha

On Fri, 29 Aug 2003, David Fraser wrote:

> Laird Shaw wrote:
>
> >Hi all,
> >
> >Apologies if I've missed the answer to this question somewhere, but I've
> >searched to no avail.
> >
> >Whilst attempting to start, Apache fails with:
> >
> >Syntax error on line 175 of C:/Program Files/Apache
> >Group/Apache2/conf/httpd.conf:
> >Cannot load C:/Program Files/Apache Group/Apache2/modules/mod_python.so into
> >server: The specified module could not be found.
> >
> >I've checked that I've specified the correct path to mod_python.so.
> >
> >I saw in another post that msvcr70.dll is required, and duly downloaded and
> >copied it into winnt\system32, believing I had solved the problem.  Alas, no
> >such luck.  Same error.
> >
> >OS = Windows 2000 5.00.2195, Service pack 4
> >Python = 2.3
> >Apache = 2.0.47
> >msvcr70.dll = 7.00.9064.0
> >
> >
> I've had exactly the same problem, with a new Win2000 virtual machine,
> same versions of Python and Apache.
> Didn't try add the dll though.
>
> David
>
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>
From davidf at sjsoft.com  Fri Aug 29 16:26:41 2003
From: davidf at sjsoft.com (David Fraser)
Date: Fri Jan  9 22:00:19 2004
Subject: [mod_python] Apache startup error using mod_python under Windows
 2000 (have msvcr70.dll)
In-Reply-To: <20030829095118.J43921@onyx.ispol.com>
References: <001901c36e1a$95954a60$0a00a8c0@laird>
	<3F4F3701.3000401@sjsoft.com> <20030829095118.J43921@onyx.ispol.com>
Message-ID: <3F4F62A1.5030807@sjsoft.com>

Gregory (Grisha) Trubetskoy wrote:

>It's not impossible that the distribution file is missing something,
>though it seemed to have worked for me...
>
>It shouldn't need msvcr70.dll anymore, something else is the problem.
>
>Grisha
>  
>
Hmmm ... yes, the Dependency Walker with Visual Studio 6.0 shows exactly 
the same dependencies as for 3.0.3

David

From perry.tew at cibavision.novartis.com  Fri Aug 29 10:37:55 2003
From: perry.tew at cibavision.novartis.com (perry.tew@cibavision.novartis.com)
Date: Fri Jan  9 22:00:19 2004
Subject: [mod_python] 	Apache startup error using mod_python under Windows
	2000 (have	msvcr70.dll)
Message-ID: <OF369D809A.F682347B-ON85256D91.004FD7CA-85256D91.0050607E@EU.novartis.net>

Laird,
    I'm a newbie to mod_python, and I had the same problem  a few days 
back
when I tried to install and run mod_python under windows xp with python 
2.3. 
When I backed up to python 2.2, mod_python worked fine. 

I just installed the 3.1 alpha against python 2.3 and it works well.

My advice is to either back up to python 2.2 or go forward to mod_python 
3.1 alpha.

Hope this helps,
Perry







Laird Shaw wrote:

>Hi all,
>
>Apologies if I've missed the answer to this question somewhere, but I've
>searched to no avail.
>
>Whilst attempting to start, Apache fails with:
>
>Syntax error on line 175 of C:/Program Files/Apache
>Group/Apache2/conf/httpd.conf:
>Cannot load C:/Program Files/Apache Group/Apache2/modules/mod_python.so 
into
>server: The specified module could not be found.
>
>I've checked that I've specified the correct path to mod_python.so.
>
>I saw in another post that msvcr70.dll is required, and duly downloaded 
and
>copied it into winnt\system32, believing I had solved the problem.  Alas, 
no
>such luck.  Same error.
>
>OS = Windows 2000 5.00.2195, Service pack 4
>Python = 2.3
>Apache = 2.0.47
>msvcr70.dll = 7.00.9064.0
> 
>
I've had exactly the same problem, with a new Win2000 virtual machine, 
same versions of Python and Apache.
Didn't try add the dll though.

David


_______________________________________________
Mod_python mailing list
Mod_python@modpython.org
http://mailman.modpython.org/mailman/listinfo/mod_python


-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mailman.modpython.org/pipermail/mod_python/attachments/20030829/f740aa4f/attachment-0002.htm
From lairdshaw at yahoo.com.au  Sat Aug 30 00:48:18 2003
From: lairdshaw at yahoo.com.au (Laird Shaw)
Date: Fri Jan  9 22:00:19 2004
Subject: [mod_python] Apache startup error using mod_python under Windows
	2000 (have msvcr70.dll)
References: 
	<001901c36e1a$95954a60$0a00a8c0@laird><3F4F3701.3000401@sjsoft.com>
	<20030829095118.J43921@onyx.ispol.com> <3F4F62A1.5030807@sjsoft.com>
Message-ID: <004e01c36e3c$9d177840$0a00a8c0@laird>

This problem occurs with both 3.03 and 3.1.0a on my machine - David are you
able to run 3.0.3?  Are there other versions I could try?

----- Original Message ----- 
From: "David Fraser" <davidf@sjsoft.com>
To: "Gregory (Grisha) Trubetskoy" <grisha@modpython.org>
Cc: <mod_python@modpython.org>
Sent: Saturday, August 30, 2003 12:26 AM
Subject: Re: [mod_python] Apache startup error using mod_python under
Windows 2000 (have msvcr70.dll)


> Gregory (Grisha) Trubetskoy wrote:
>
> >It's not impossible that the distribution file is missing something,
> >though it seemed to have worked for me...
> >
> >It shouldn't need msvcr70.dll anymore, something else is the problem.
> >
> >Grisha
> >
> >
> Hmmm ... yes, the Dependency Walker with Visual Studio 6.0 shows exactly
> the same dependencies as for 3.0.3
>
> David
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python

From grisha at modpython.org  Fri Aug 29 11:06:42 2003
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 22:00:19 2004
Subject: [mod_python] Apache startup error using mod_python under Windows
 2000 (have msvcr70.dll)
In-Reply-To: <OF369D809A.F682347B-ON85256D91.004FD7CA-85256D91.0050607E@EU.novartis.net>
References: <OF369D809A.F682347B-ON85256D91.004FD7CA-85256D91.0050607E@EU.novartis.net>
Message-ID: <20030829110249.R53150@onyx.ispol.com>


Are you using stock Python, Win32 Python, Active or self-compiled?

Grisha

On Fri, 29 Aug 2003 perry.tew@cibavision.novartis.com wrote:

> Laird,
>     I'm a newbie to mod_python, and I had the same problem  a few days
> back
> when I tried to install and run mod_python under windows xp with python
> 2.3.
> When I backed up to python 2.2, mod_python worked fine.
>
> I just installed the 3.1 alpha against python 2.3 and it works well.
>
> My advice is to either back up to python 2.2 or go forward to mod_python
> 3.1 alpha.
>
> Hope this helps,
> Perry
>
>
>
>
>
>
>
> Laird Shaw wrote:
>
> >Hi all,
> >
> >Apologies if I've missed the answer to this question somewhere, but I've
> >searched to no avail.
> >
> >Whilst attempting to start, Apache fails with:
> >
> >Syntax error on line 175 of C:/Program Files/Apache
> >Group/Apache2/conf/httpd.conf:
> >Cannot load C:/Program Files/Apache Group/Apache2/modules/mod_python.so
> into
> >server: The specified module could not be found.
> >
> >I've checked that I've specified the correct path to mod_python.so.
> >
> >I saw in another post that msvcr70.dll is required, and duly downloaded
> and
> >copied it into winnt\system32, believing I had solved the problem.  Alas,
> no
> >such luck.  Same error.
> >
> >OS = Windows 2000 5.00.2195, Service pack 4
> >Python = 2.3
> >Apache = 2.0.47
> >msvcr70.dll = 7.00.9064.0
> >
> >
> I've had exactly the same problem, with a new Win2000 virtual machine,
> same versions of Python and Apache.
> Didn't try add the dll though.
>
> David
>
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>
>
>
From davidf at sjsoft.com  Fri Aug 29 17:39:06 2003
From: davidf at sjsoft.com (David Fraser)
Date: Fri Jan  9 22:00:19 2004
Subject: [mod_python] Apache startup error using mod_python under Windows
 2000 (have msvcr70.dll)
In-Reply-To: <004e01c36e3c$9d177840$0a00a8c0@laird>
References: 
	<001901c36e1a$95954a60$0a00a8c0@laird><3F4F3701.3000401@sjsoft.com>
	<20030829095118.J43921@onyx.ispol.com> <3F4F62A1.5030807@sjsoft.com>
	<004e01c36e3c$9d177840$0a00a8c0@laird>
Message-ID: <3F4F739A.1030804@sjsoft.com>

Laird Shaw wrote:

>This problem occurs with both 3.03 and 3.1.0a on my machine - David are you
>able to run 3.0.3?  Are there other versions I could try?
>  
>
I have successfully run 3.0.3 and apache 2 and Python 2 on another 
Windows 2000 machine.
It didn't occur to me that the problem may not be with 3.1.0a but with 
my virtual machine.
I haven't tested 3.0.3 on my Virtual Machine, I'll look at doing that 
but it'll have to be on Monday I'm afraid...
What might be helpful to know, is is there a generic way of debugging 
why the module is not loading?
David

>----- Original Message ----- 
>From: "David Fraser" <davidf@sjsoft.com>
>To: "Gregory (Grisha) Trubetskoy" <grisha@modpython.org>
>Cc: <mod_python@modpython.org>
>Sent: Saturday, August 30, 2003 12:26 AM
>Subject: Re: [mod_python] Apache startup error using mod_python under
>Windows 2000 (have msvcr70.dll)
>
>
>  
>
>>Gregory (Grisha) Trubetskoy wrote:
>>
>>    
>>
>>>It's not impossible that the distribution file is missing something,
>>>though it seemed to have worked for me...
>>>
>>>It shouldn't need msvcr70.dll anymore, something else is the problem.
>>>
>>>Grisha
>>>
>>>
>>>      
>>>
>>Hmmm ... yes, the Dependency Walker with Visual Studio 6.0 shows exactly
>>the same dependencies as for 3.0.3
>>
>>David
>>
>>_______________________________________________
>>Mod_python mailing list
>>Mod_python@modpython.org
>>http://mailman.modpython.org/mailman/listinfo/mod_python
>>    
>>
>
>  
>


From perry.tew at cibavision.novartis.com  Fri Aug 29 11:48:42 2003
From: perry.tew at cibavision.novartis.com (perry.tew@cibavision.novartis.com)
Date: Fri Jan  9 22:00:19 2004
Subject: [mod_python] Apache startup error using mod_python under Windows
	2000 (have msvcr70.dll)
Message-ID: <OF042EC003.33482BFF-ON85256D91.00560B6F-85256D91.0056DB3A@EU.novartis.net>

Grisha,
    I started with Python 2.3 from python.org (installed via .exe). 
Using mod_python 3.03, in order to make the "module not found" error 
disappear
I had to install Python 2.2.  I used ActiveState 2.2 for this install.  I 
then reinstalled 
3.03 and it installed in the 2.2 tree.  The apache error then disappeared. 
 

This morning I tried out 3.1 alpha against stock Python 2.3 from 
python.org and it worked without 
error. 

I hope I'm not muddying the water relating my experience, but as the 
newbie, running standard exe installs that's
what I encountered.

I could try to replicate the error if you'd like.  I think I can find a 
virgin xp box laying around to test
if it was something I did or something with the layout of the system.

On a side note:
I've really enjoyed mod_python.  Thank you for your time and effort. Also, 
thank you for the
excellent install program. 

Perry Tew



Are you using stock Python, Win32 Python, Active or self-compiled?

Grisha

On Fri, 29 Aug 2003 perry.tew@cibavision.novartis.com wrote:

> Laird,
>     I'm a newbie to mod_python, and I had the same problem  a few days
> back
> when I tried to install and run mod_python under windows xp with python
> 2.3.
> When I backed up to python 2.2, mod_python worked fine.
>
> I just installed the 3.1 alpha against python 2.3 and it works well.
>
> My advice is to either back up to python 2.2 or go forward to mod_python
> 3.1 alpha.
>
> Hope this helps,
> Perry
>
>
>
>
>
>
>
> Laird Shaw wrote:
>
> >Hi all,
> >
> >Apologies if I've missed the answer to this question somewhere, but 
I've
> >searched to no avail.
> >
> >Whilst attempting to start, Apache fails with:
> >
> >Syntax error on line 175 of C:/Program Files/Apache
> >Group/Apache2/conf/httpd.conf:
> >Cannot load C:/Program Files/Apache Group/Apache2/modules/mod_python.so
> into
> >server: The specified module could not be found.
> >
> >I've checked that I've specified the correct path to mod_python.so.
> >
> >I saw in another post that msvcr70.dll is required, and duly downloaded
> and
> >copied it into winnt\system32, believing I had solved the problem. 
Alas,
> no
> >such luck.  Same error.
> >
> >OS = Windows 2000 5.00.2195, Service pack 4
> >Python = 2.3
> >Apache = 2.0.47
> >msvcr70.dll = 7.00.9064.0
> >
> >
> I've had exactly the same problem, with a new Win2000 virtual machine,
> same versions of Python and Apache.
> Didn't try add the dll though.
>
> David
>
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>
>
>


-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mailman.modpython.org/pipermail/mod_python/attachments/20030829/605d7087/attachment-0002.htm
From lairdshaw at yahoo.com.au  Sat Aug 30 01:56:18 2003
From: lairdshaw at yahoo.com.au (Laird Shaw)
Date: Fri Jan  9 22:00:19 2004
Subject: [mod_python] Apache startup error using mod_python under Windows
	2000 (have msvcr70.dll)
References: 
	<OF369D809A.F682347B-ON85256D91.004FD7CA-85256D91.0050607E@EU.novartis.net>
	<20030829110249.R53150@onyx.ispol.com>
Message-ID: <001201c36e46$1f72d010$0a00a8c0@laird>

Your advice solved my problem, Perry.  I uninstalled Python 2.3 and
mod_python, then downloaded and installed Python 2.2.  Then I installed
mod_python 3.0.3, started up Apache and navigated to the test page: worked
fine.  I can reattest that neither mod_python 3.0.3 nor mod_python 3.1.0a
worked with my setup using Python 2.3 - which is a pity as it's nice to use
the latest and greatest version of languages.

Grisha, I don't know whether your question was for Perry or me, but I'll
answer anyway: I installed Python from this windows installer:
http://www.python.org/ftp/python/2.2.3/Python-2.2.3.exe.

Much appreciated,
Laird

----- Original Message ----- 
From: "Gregory (Grisha) Trubetskoy" <grisha@modpython.org>
To: <perry.tew@cibavision.novartis.com>
Cc: <Mod_python@modpython.org>
Sent: Saturday, August 30, 2003 1:06 AM
Subject: Re: [mod_python] Apache startup error using mod_python under
Windows 2000 (have msvcr70.dll)


>
> Are you using stock Python, Win32 Python, Active or self-compiled?
>
> Grisha
>
> On Fri, 29 Aug 2003 perry.tew@cibavision.novartis.com wrote:
>
> > Laird,
> >     I'm a newbie to mod_python, and I had the same problem  a few days
> > back
> > when I tried to install and run mod_python under windows xp with python
> > 2.3.
> > When I backed up to python 2.2, mod_python worked fine.
> >
> > I just installed the 3.1 alpha against python 2.3 and it works well.
> >
> > My advice is to either back up to python 2.2 or go forward to mod_python
> > 3.1 alpha.
> >
> > Hope this helps,
> > Perry
> >
> >
> >
> >
> >
> >
> >
> > Laird Shaw wrote:
> >
> > >Hi all,
> > >
> > >Apologies if I've missed the answer to this question somewhere, but
I've
> > >searched to no avail.
> > >
> > >Whilst attempting to start, Apache fails with:
> > >
> > >Syntax error on line 175 of C:/Program Files/Apache
> > >Group/Apache2/conf/httpd.conf:
> > >Cannot load C:/Program Files/Apache Group/Apache2/modules/mod_python.so
> > into
> > >server: The specified module could not be found.
> > >
> > >I've checked that I've specified the correct path to mod_python.so.
> > >
> > >I saw in another post that msvcr70.dll is required, and duly downloaded
> > and
> > >copied it into winnt\system32, believing I had solved the problem.
Alas,
> > no
> > >such luck.  Same error.
> > >
> > >OS = Windows 2000 5.00.2195, Service pack 4
> > >Python = 2.3
> > >Apache = 2.0.47
> > >msvcr70.dll = 7.00.9064.0
> > >
> > >
> > I've had exactly the same problem, with a new Win2000 virtual machine,
> > same versions of Python and Apache.
> > Didn't try add the dll though.
> >
> > David
> >
> >
> > _______________________________________________
> > Mod_python mailing list
> > Mod_python@modpython.org
> > http://mailman.modpython.org/mailman/listinfo/mod_python
> >
> >
> >
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python

From lairdshaw at yahoo.com.au  Sat Aug 30 01:58:52 2003
From: lairdshaw at yahoo.com.au (Laird Shaw)
Date: Fri Jan  9 22:00:19 2004
Subject: [mod_python] Apache startup error using mod_python under Windows
	2000 (have msvcr70.dll)
References: 
	<001901c36e1a$95954a60$0a00a8c0@laird><3F4F3701.3000401@sjsoft.com>
	<20030829095118.J43921@onyx.ispol.com> <3F4F62A1.5030807@sjsoft.com>
	<004e01c36e3c$9d177840$0a00a8c0@laird> <3F4F739A.1030804@sjsoft.com>
Message-ID: <001f01c36e46$7ab404d0$0a00a8c0@laird>

Slightly off-topic so feel free to reply privately but you piqued my
curiosity - Windows 2000 virtual machine?  What is the 'actual machine' on
which it is running?

----- Original Message ----- 
From: "David Fraser" <davidf@sjsoft.com>
To: "Laird Shaw" <lairdshaw@yahoo.com.au>
Cc: "Gregory (Grisha) Trubetskoy" <grisha@modpython.org>;
<mod_python@modpython.org>
Sent: Saturday, August 30, 2003 1:39 AM
Subject: Re: [mod_python] Apache startup error using mod_python under
Windows 2000 (have msvcr70.dll)


> Laird Shaw wrote:
>
> >This problem occurs with both 3.03 and 3.1.0a on my machine - David are
you
> >able to run 3.0.3?  Are there other versions I could try?
> >
> >
> I have successfully run 3.0.3 and apache 2 and Python 2 on another
> Windows 2000 machine.
> It didn't occur to me that the problem may not be with 3.1.0a but with
> my virtual machine.
> I haven't tested 3.0.3 on my Virtual Machine, I'll look at doing that
> but it'll have to be on Monday I'm afraid...
> What might be helpful to know, is is there a generic way of debugging
> why the module is not loading?
> David
>
> >----- Original Message ----- 
> >From: "David Fraser" <davidf@sjsoft.com>
> >To: "Gregory (Grisha) Trubetskoy" <grisha@modpython.org>
> >Cc: <mod_python@modpython.org>
> >Sent: Saturday, August 30, 2003 12:26 AM
> >Subject: Re: [mod_python] Apache startup error using mod_python under
> >Windows 2000 (have msvcr70.dll)
> >
> >
> >
> >
> >>Gregory (Grisha) Trubetskoy wrote:
> >>
> >>
> >>
> >>>It's not impossible that the distribution file is missing something,
> >>>though it seemed to have worked for me...
> >>>
> >>>It shouldn't need msvcr70.dll anymore, something else is the problem.
> >>>
> >>>Grisha
> >>>
> >>>
> >>>
> >>>
> >>Hmmm ... yes, the Dependency Walker with Visual Studio 6.0 shows exactly
> >>the same dependencies as for 3.0.3
> >>
> >>David
> >>
> >>_______________________________________________
> >>Mod_python mailing list
> >>Mod_python@modpython.org
> >>http://mailman.modpython.org/mailman/listinfo/mod_python
> >>
> >>
> >
> >
> >
>

From davidf at sjsoft.com  Fri Aug 29 18:05:45 2003
From: davidf at sjsoft.com (David Fraser)
Date: Fri Jan  9 22:00:19 2004
Subject: [mod_python] Apache startup error using mod_python under Windows
 2000 (have msvcr70.dll)
In-Reply-To: <001f01c36e46$7ab404d0$0a00a8c0@laird>
References: 
	<001901c36e1a$95954a60$0a00a8c0@laird><3F4F3701.3000401@sjsoft.com>
	<20030829095118.J43921@onyx.ispol.com> <3F4F62A1.5030807@sjsoft.com>
	<004e01c36e3c$9d177840$0a00a8c0@laird> <3F4F739A.1030804@sjsoft.com>
	<001f01c36e46$7ab404d0$0a00a8c0@laird>
Message-ID: <3F4F79D9.7070007@sjsoft.com>

Laird Shaw wrote:

>Slightly off-topic so feel free to reply privately but you piqued my
>curiosity - Windows 2000 virtual machine?  What is the 'actual machine' on
>which it is running?
>
>  
>
I'm running it on a RedHat Linux 7.3 box with VMWare.
David

From davidf at sjsoft.com  Fri Aug 29 18:14:42 2003
From: davidf at sjsoft.com (David Fraser)
Date: Fri Jan  9 22:00:19 2004
Subject: [mod_python] Apache startup error using mod_python under Windows
 2000 (have msvcr70.dll)
In-Reply-To: <001201c36e46$1f72d010$0a00a8c0@laird>
References: 
	<OF369D809A.F682347B-ON85256D91.004FD7CA-85256D91.0050607E@EU.novartis.net>
	<20030829110249.R53150@onyx.ispol.com> <001201c36e46$1f72d010$0a00a8c0@laird>
Message-ID: <3F4F7BF2.2090106@sjsoft.com>

Laird Shaw wrote:

>Your advice solved my problem, Perry.  I uninstalled Python 2.3 and
>mod_python, then downloaded and installed Python 2.2.  Then I installed
>mod_python 3.0.3, started up Apache and navigated to the test page: worked
>fine.  I can reattest that neither mod_python 3.0.3 nor mod_python 3.1.0a
>worked with my setup using Python 2.3 - which is a pity as it's nice to use
>the latest and greatest version of languages.
>
>Grisha, I don't know whether your question was for Perry or me, but I'll
>answer anyway: I installed Python from this windows installer:
>http://www.python.org/ftp/python/2.2.3/Python-2.2.3.exe.
>
>Much appreciated,
>Laird
>  
>
mod_python 3.0.3 won't work with Python 2.3 as it's compiled for Python 
2.2 - and in addition,
the "compatibility fixes" that are listed in the mod_python 3.1a for 
Python 2.3 presumably are neccessary...
However it would be helpful to determine if the problem is related to 
Python 2.3, and the easiest way to do that...
would be to have an installer for mod_python 3.1a for Python 2.2! Grisha?

David

>----- Original Message ----- 
>From: "Gregory (Grisha) Trubetskoy" <grisha@modpython.org>
>To: <perry.tew@cibavision.novartis.com>
>Cc: <Mod_python@modpython.org>
>Sent: Saturday, August 30, 2003 1:06 AM
>Subject: Re: [mod_python] Apache startup error using mod_python under
>Windows 2000 (have msvcr70.dll)
>
>
>  
>
>>Are you using stock Python, Win32 Python, Active or self-compiled?
>>
>>Grisha
>>
>>On Fri, 29 Aug 2003 perry.tew@cibavision.novartis.com wrote:
>>
>>    
>>
>>>Laird,
>>>    I'm a newbie to mod_python, and I had the same problem  a few days
>>>back
>>>when I tried to install and run mod_python under windows xp with python
>>>2.3.
>>>When I backed up to python 2.2, mod_python worked fine.
>>>
>>>I just installed the 3.1 alpha against python 2.3 and it works well.
>>>
>>>My advice is to either back up to python 2.2 or go forward to mod_python
>>>3.1 alpha.
>>>
>>>Hope this helps,
>>>Perry
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>Laird Shaw wrote:
>>>
>>>      
>>>
>>>>Hi all,
>>>>
>>>>Apologies if I've missed the answer to this question somewhere, but
>>>>        
>>>>
>I've
>  
>
>>>>searched to no avail.
>>>>
>>>>Whilst attempting to start, Apache fails with:
>>>>
>>>>Syntax error on line 175 of C:/Program Files/Apache
>>>>Group/Apache2/conf/httpd.conf:
>>>>Cannot load C:/Program Files/Apache Group/Apache2/modules/mod_python.so
>>>>        
>>>>
>>>into
>>>      
>>>
>>>>server: The specified module could not be found.
>>>>
>>>>I've checked that I've specified the correct path to mod_python.so.
>>>>
>>>>I saw in another post that msvcr70.dll is required, and duly downloaded
>>>>        
>>>>
>>>and
>>>      
>>>
>>>>copied it into winnt\system32, believing I had solved the problem.
>>>>        
>>>>
>Alas,
>  
>
>>>no
>>>      
>>>
>>>>such luck.  Same error.
>>>>
>>>>OS = Windows 2000 5.00.2195, Service pack 4
>>>>Python = 2.3
>>>>Apache = 2.0.47
>>>>msvcr70.dll = 7.00.9064.0
>>>>
>>>>
>>>>        
>>>>
>>>I've had exactly the same problem, with a new Win2000 virtual machine,
>>>same versions of Python and Apache.
>>>Didn't try add the dll though.
>>>
>>>David
>>>
>>>
>>>_______________________________________________
>>>Mod_python mailing list
>>>Mod_python@modpython.org
>>>http://mailman.modpython.org/mailman/listinfo/mod_python
>>>
>>>
>>>
>>>      
>>>
>>_______________________________________________
>>Mod_python mailing list
>>Mod_python@modpython.org
>>http://mailman.modpython.org/mailman/listinfo/mod_python
>>    
>>
>
>_______________________________________________
>Mod_python mailing list
>Mod_python@modpython.org
>http://mailman.modpython.org/mailman/listinfo/mod_python
>
>  
>


From grisha at modpython.org  Fri Aug 29 12:32:33 2003
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 22:00:19 2004
Subject: [mod_python] Apache startup error using mod_python under Windows
 2000 (have msvcr70.dll)
In-Reply-To: <3F4F7BF2.2090106@sjsoft.com>
References: <OF369D809A.F682347B-ON85256D91.004FD7CA-85256D91.0050607E@EU.novartis.net>
	<001201c36e46$1f72d010$0a00a8c0@laird> <3F4F7BF2.2090106@sjsoft.com>
Message-ID: <20030829121653.W53150@onyx.ispol.com>



On Fri, 29 Aug 2003, David Fraser wrote:

> Python 2.3, and the easiest way to do that...
> would be to have an installer for mod_python 3.1a for Python 2.2! Grisha?

Getting a version for Python 2.2 is tricky because the production
of the installer requires 2.3, so what I had to do in the past is compile
for 2.2, but then use 2.3 for the installer, so it's a bit of a pain.

What we really need to do is figure out what is different between our
systems.

Just to summarise, is this correct? (I am only concerned with 3.1.0a here,
NOT 3.0.3).

"stock" means the binary from www.python.org, as opposed to Win32, Active
or compiled. All Apache is the binary from www.apache.org.

       |  mod_py  | Python    | Apache | Win. |
-------------------------------------------------------
Perry  |  3.1.0a  | stock 2.3 | 2.0.47 | ?    | OK
Grisha |  3.1.0a  | stock 2.3 | 2.0.47 | 2000 | OK
David  |  3.1.0a  | stock 2.3 | 2.0.47 | 2000 | NOT OK
Laird  |  3.1.0a  | stock 2.3 | 2.0.47 | 2000 | NOT OK

Grisha
From lairdshaw at yahoo.com.au  Sat Aug 30 02:37:56 2003
From: lairdshaw at yahoo.com.au (Laird Shaw)
Date: Fri Jan  9 22:00:19 2004
Subject: [mod_python] Apache startup error using mod_python under Windows
	2000 (have msvcr70.dll)
References: 
	<OF369D809A.F682347B-ON85256D91.004FD7CA-85256D91.0050607E@EU.novartis.net>
	<20030829110249.R53150@onyx.ispol.com> <001201c36e46$1f72d010$0a00a8c0@laird>
	<3F4F7BF2.2090106@sjsoft.com> <20030829121653.W53150@onyx.ispol.com>
Message-ID: <004501c36e4b$f9ee1c40$0a00a8c0@laird>

Yes that's right for me.

----- Original Message ----- 
From: "Gregory (Grisha) Trubetskoy" <grisha@modpython.org>
To: "David Fraser" <davidf@sjsoft.com>
Cc: "Laird Shaw" <lairdshaw@yahoo.com.au>; "Gregory (Grisha) Trubetskoy"
<grisha@modpython.org>; <perry.tew@cibavision.novartis.com>;
<Mod_python@modpython.org>
Sent: Saturday, August 30, 2003 2:32 AM
Subject: Re: [mod_python] Apache startup error using mod_python under
Windows 2000 (have msvcr70.dll)


>
>
> On Fri, 29 Aug 2003, David Fraser wrote:
>
> > Python 2.3, and the easiest way to do that...
> > would be to have an installer for mod_python 3.1a for Python 2.2!
Grisha?
>
> Getting a version for Python 2.2 is tricky because the production
> of the installer requires 2.3, so what I had to do in the past is compile
> for 2.2, but then use 2.3 for the installer, so it's a bit of a pain.
>
> What we really need to do is figure out what is different between our
> systems.
>
> Just to summarise, is this correct? (I am only concerned with 3.1.0a here,
> NOT 3.0.3).
>
> "stock" means the binary from www.python.org, as opposed to Win32, Active
> or compiled. All Apache is the binary from www.apache.org.
>
>        |  mod_py  | Python    | Apache | Win. |
> -------------------------------------------------------
> Perry  |  3.1.0a  | stock 2.3 | 2.0.47 | ?    | OK
> Grisha |  3.1.0a  | stock 2.3 | 2.0.47 | 2000 | OK
> David  |  3.1.0a  | stock 2.3 | 2.0.47 | 2000 | NOT OK
> Laird  |  3.1.0a  | stock 2.3 | 2.0.47 | 2000 | NOT OK
>
> Grisha

From perry.tew at cibavision.novartis.com  Fri Aug 29 13:09:13 2003
From: perry.tew at cibavision.novartis.com (perry.tew@cibavision.novartis.com)
Date: Fri Jan  9 22:00:19 2004
Subject: [mod_python] Apache startup error using mod_python under Windows
	2000 (have msvcr70.dll)
Message-ID: <OF945AE48D.A46949C9-ON85256D91.005DC170-85256D91.005E3A5E@EU.novartis.net>

Grisha, 
   My version of windows is Windows XP Version 2002.

FYI, I don't know what testing hardware you have, but we have XP and 
Solaris 8 in house. 
We'll also have some Solaris 9 shortly.  Additionally, I can set up some 
HPUX 11i  boxes if needed.
I say this not to brag, but only to offer help if you need additional 
platforms to run tests on for your 
new alpha version.

Thanks,
Perry







On Fri, 29 Aug 2003, David Fraser wrote:

> Python 2.3, and the easiest way to do that...
> would be to have an installer for mod_python 3.1a for Python 2.2! 
Grisha?

Getting a version for Python 2.2 is tricky because the production
of the installer requires 2.3, so what I had to do in the past is compile
for 2.2, but then use 2.3 for the installer, so it's a bit of a pain.

What we really need to do is figure out what is different between our
systems.

Just to summarise, is this correct? (I am only concerned with 3.1.0a here,
NOT 3.0.3).

"stock" means the binary from www.python.org, as opposed to Win32, Active
or compiled. All Apache is the binary from www.apache.org.

       |  mod_py  | Python    | Apache | Win. |
-------------------------------------------------------
Perry  |  3.1.0a  | stock 2.3 | 2.0.47 | ?    | OK
Grisha |  3.1.0a  | stock 2.3 | 2.0.47 | 2000 | OK
David  |  3.1.0a  | stock 2.3 | 2.0.47 | 2000 | NOT OK
Laird  |  3.1.0a  | stock 2.3 | 2.0.47 | 2000 | NOT OK

Grisha


-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mailman.modpython.org/pipermail/mod_python/attachments/20030829/43917b96/attachment-0002.htm
From barry at python.org  Fri Aug 29 15:57:44 2003
From: barry at python.org (Barry Warsaw)
Date: Fri Jan  9 22:00:19 2004
Subject: [mod_python] Child shutdowns?
Message-ID: <1062187064.4895.7.camel@yyz>

I'm very likely missing it, but is there some way to run a callable when
the child processes are terminated (i.e. through apachectl stop)?

Seems like the server object's register_cleanup() ought to do it, except
that I have some startup code that gets run when my main module is
imported and at that point I don't have a request object to use as the
first argument to register_cleanup().

Any hints (or examples!)?

Thanks,
-Barry


From conrad at hep.caltech.edu  Fri Aug 29 13:29:41 2003
From: conrad at hep.caltech.edu (Conrad Steenberg)
Date: Fri Jan  9 22:00:19 2004
Subject: [mod_python] ANNOUNCE: Mod_python 3.1.0 Alpha
In-Reply-To: <20030828210644.C43921@onyx.ispol.com>
References: <20030828210644.C43921@onyx.ispol.com>
Message-ID: <1062188981.14514.296.camel@heppc22>

Hi

Tested here to be working under an OpenPKG-1.3 (ish) environment.

Any pointers to higher level tools that works with the included version
of PSP (such as for constructing a news or blogging site)? There seems
to be at least two other projects also calling themselves PSP ;-)

Cheers

Conrad

On Thu, 2003-08-28 at 18:12, Gregory (Grisha) Trubetskoy wrote:
> The Apache Software Foundation and The Apache HTTP Server Project are
> pleased to announce the 3.1.0 ALPHA release mod_python.
> 
> Some feature highlights:
> 
> * Server-side sessions with memory or dbm-based storage and session
> locking support.
> 
> * PSP - a fast flex-based scanner which allows embedding Python code
> within HTML.
> 
> * Native cookie support, including support for automatic cryptographic
> cookie signing and marshalling.
> 
> * Compatibility with Python 2.3, as well as many other enhancements.
> 
> Alpha releases are NOT considered stable and do contain bugs. Some
> functionality may change before the first beta release.
> 
> This release is intended to solicit widespread testing of the code. We
> strongly recommend that you try out your existing applications and
> experiment with new features in a non-production environment using this
> version and report any problems you may encounter so that they can be
> addressed before the final release.
> 
> Mod_python 3.1.0a is available for download from:
> 
> http://httpd.apache.org/modules/python-download.cgi
> 
> Preferred method of providing feedback is the mod_python user list
> mod_python@modpython.org (due to spam, you must subscribe to post).
> 
> For more information about mod_python visit
> http://www.modpython.org/
> 
> Thank You,
> 
> Grisha Trubetskoy
> 
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
-- 
Conrad Steenberg <conrad@hep.caltech.edu>

From grisha at modpython.org  Fri Aug 29 17:11:28 2003
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 22:00:19 2004
Subject: [mod_python] Child shutdowns?
In-Reply-To: <1062187064.4895.7.camel@yyz>
References: <1062187064.4895.7.camel@yyz>
Message-ID: <20030829164056.W56156@onyx.ispol.com>


Barry

If I remember this correctly, from the viewpoint of Apache, to create a
server object (or server_rec structure) you need to have a request,
because a server is created based on what the "Host:" header says (if it
is there at all) and by then going throught the config to see if there is
anything relevant. Once a server is created, it is cached and reused, but
it is not created at Apache startup (as an extreme example, mod_vhost
allows you to create an unlimited number of virtual servers without
specifying them in the config at all - so there is no way to know what the
server name is until a request for it comes in).

I don't know if Apache provides a way to do something at server creation
time, I'll check it out, but it's unlikely. For right now, the only way to
register a server cleanup is from within a request :-(

Grisha

On Fri, 29 Aug 2003, Barry Warsaw wrote:

> I'm very likely missing it, but is there some way to run a callable when
> the child processes are terminated (i.e. through apachectl stop)?
>
> Seems like the server object's register_cleanup() ought to do it, except
> that I have some startup code that gets run when my main module is
> imported and at that point I don't have a request object to use as the
> first argument to register_cleanup().
>
> Any hints (or examples!)?
>
> Thanks,
> -Barry
>
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>
From grisha at apache.org  Fri Aug 29 17:21:57 2003
From: grisha at apache.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 22:00:19 2004
Subject: [mod_python] ANNOUNCE: Mod_python 3.1.0 Alpha
In-Reply-To: <1062188981.14514.296.camel@heppc22>
References: <20030828210644.C43921@onyx.ispol.com>
	<1062188981.14514.296.camel@heppc22>
Message-ID: <20030829171157.O56156@onyx.ispol.com>

On Fri, 29 Aug 2003, Conrad Steenberg wrote:

> Hi
>
> Tested here to be working under an OpenPKG-1.3 (ish) environment.
>
> Any pointers to higher level tools that works with the included version
> of PSP (such as for constructing a news or blogging site)? There seems
> to be at least two other projects also calling themselves PSP ;-)

There is even one called Perl Server Pages :-)

I doubt there are any tools, since our PSP is brand new. B

But it's rather simplistic. For everyone's info:

This describes the syntax:

http://www.modpython.org/live/mod_python-3.1.0a/doc-html/pyapi-psp.html

And this describes the psp handler (things like sessions, etc):

http://www.modpython.org/live/mod_python-3.1.0a/doc-html/pyapi-psp.html

Also, if you have any JSP experience, there was an e-mail on the dev list
regarding how it corresponds to PSP, which I'll forward to this list
(because I forgot where the dev list archives are).

Grisha

From grisha at apache.org  Fri Aug 29 17:23:24 2003
From: grisha at apache.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 22:00:19 2004
Subject: [mod_python] PSP Notes (fwd)
Message-ID: <20030829172210.D56156@onyx.ispol.com>


---------- Forwarded message ----------
Date: Wed, 13 Aug 2003 14:34:14 -0400 (EDT)
From: "Gregory (Grisha) Trubetskoy" <grisha@apache.org>
To: python-dev@httpd.apache.org
Subject: PSP Notes


As an excercise in PSP usability, I've been going through JSP examples
from Tomcat and rewriting them using PSP, here are random notes on the
subject.


* JSP has a notion of an application (e.g. "/apps/mywebapp") with a
document root (e.g. /home/www/blah). Some stuff (e.g. location of classes)
then becomes relative to those paths. In PSP there isn't really a clear
concept of an application, but the closest thing to that is the directory
in which the PythonHandler directive is specified. This is nothing new,
btw, it's always how mod_python worked. So if you have:

<Directory /home/www/psp>
  AddHandler mod_python .psp   <--note the new clever handler name
  PythonHandler mod_python.psp
</Directory>

...then /home/www/psp will be prepended to sys.path, therefore if you
create a directory /home/www/psp/pylib, you could import a module from a
psp file like this:

<%
from pylib import mymodule
%>

This way you have your entire application under /home/www/psp, you can
use, say, /home/www/psp/html for psp/html and all your Python modules are
in /home/www/pylib, giving you a clear separation of logic and interface.


* Next thing that I ran into is having to reload mymodule if it changes.
There is now a new recommended way of doing this:

mymodule = apache.import_module("pylib.mymodule")

This is the same function that mod_python uses internally for autorelad
and takes care of all your reload needs. It does stat the file every time,
so when you're sure you won't need to reload the page, just change it to:

mymodule = apache.import_module("pylib.mymodule", autoreload=0)


* JSP page import directive

JSP:

<%@ page import = "num.NumberGuessBean" %>

PSP:

<%
num = apache.import_module("pylib.num")
%>
... now you've got num.NumberGuessBean, you get the idea


* JSP useBean action

JSP:

<jsp:useBean id="numguess" class="num.NumberGuessBean" scope="session"/>

This means that numguess is an instance of num.NumberGuessBean and it will
persist for as long as the session exists.

PSP (again, no need for special syntax):

<%
numguess = session.setdefault("numguess", num.NumberGuessBean())
%>


* JSP setProperty

This will match up form elements and set them in a Java object. So if the
object defines setColor() and the form contains a field "Color", JSP will
call setColor passing value of color as the argument.

JSP:

<jsp:setProperty name="numguess" property="*"/>

PSP:

Well, there isn't exactly this functionality, but there is something
different. You can use the same functionality that the publisher handler
uses to match up form elements with a function:

class Car:

    def __init__(self, color):

         # do something

Then a psp page called as result of a form submition can do this:

<%
car = psp.apply_data(Car)
%>

This will call the callable object Car (classes are callable), passing it
the value of "color", and resulting in an instance of Car which is
assigned to car.


* <%@ page session="false"%>

In JSP this means don't create a session for this page. This is really
easy in PSP - just don't mention the "session" variable in your page. The
psp handler examines the code for mentions of "session" and generates (and
locks) one if it encounters such mentions.


* page errorPage

JSP allows you to specify a special error page to be displayed when an
exception is thrown.

JSP:
<%@ page errorPage="errorpge.jsp" %>

PSP:
<%
psp.set_error_page("errorpge.psp")
%>

When (if) errorpge.psp is invoked, it will have a global "exception"
variable which will contain same info as returned by sys.exc_info().

* include

Of course, PSP supports <%@ include file="blah.html"%>



Grisha
From barry at python.org  Fri Aug 29 17:47:20 2003
From: barry at python.org (Barry Warsaw)
Date: Fri Jan  9 22:00:19 2004
Subject: [mod_python] Child shutdowns?
In-Reply-To: <20030829164056.W56156@onyx.ispol.com>
References: <1062187064.4895.7.camel@yyz>
	 <20030829164056.W56156@onyx.ispol.com>
Message-ID: <1062193640.4895.13.camel@yyz>

On Fri, 2003-08-29 at 17:11, Gregory (Grisha) Trubetskoy wrote:
> Barry
> 
> If I remember this correctly, from the viewpoint of Apache, to create a
> server object (or server_rec structure) you need to have a request,
> because a server is created based on what the "Host:" header says (if it
> is there at all) and by then going throught the config to see if there is
> anything relevant. Once a server is created, it is cached and reused, but
> it is not created at Apache startup (as an extreme example, mod_vhost
> allows you to create an unlimited number of virtual servers without
> specifying them in the config at all - so there is no way to know what the
> server name is until a request for it comes in).
> 
> I don't know if Apache provides a way to do something at server creation
> time, I'll check it out, but it's unlikely. For right now, the only way to
> register a server cleanup is from within a request :-(

Thanks Grisha, both for the info and the offer to poke around.  I'll try
pushing my startup code into my request handler, and see if registering
my cleanup code at that time will work.

Cheers,
-Barry


From gstein at lyra.org  Fri Aug 29 14:56:55 2003
From: gstein at lyra.org (Greg Stein)
Date: Fri Jan  9 22:00:20 2004
Subject: [mod_python] Child shutdowns?
In-Reply-To: <20030829164056.W56156@onyx.ispol.com>;
	from grisha@modpython.org on Fri, Aug 29, 2003 at 05:11:28PM -0400
References: <1062187064.4895.7.camel@yyz>
	<20030829164056.W56156@onyx.ispol.com>
Message-ID: <20030829145655.D14389@lyra.org>

On Fri, Aug 29, 2003 at 05:11:28PM -0400, Gregory (Grisha) Trubetskoy wrote:
> 
> Barry
> 
> If I remember this correctly, from the viewpoint of Apache, to create a
> server object (or server_rec structure) you need to have a request,
> because a server is created based on what the "Host:" header says (if it

Nope, sorry.

The server_rec structures are created at server-startup time when we parse
the configuration file. There is a server_rec per virtual host, plus one
for the default server.

At request time, the appropriate server_rec is looked up and passed along
as part of the request processing.

> is there at all) and by then going throught the config to see if there is
> anything relevant. Once a server is created, it is cached and reused, but
> it is not created at Apache startup (as an extreme example, mod_vhost
> allows you to create an unlimited number of virtual servers without
> specifying them in the config at all - so there is no way to know what the
> server name is until a request for it comes in).

Dunno how mod_vhost does it. The typical scenario is the construction at
startup time.

> I don't know if Apache provides a way to do something at server creation
> time, I'll check it out, but it's unlikely. For right now, the only way to
> register a server cleanup is from within a request :-(

The post_config hook is possibly one place to do this. It gets a pool
associated with the process.

There is also a child_init hook, which I believe is called whenever a new
child is spun up. That is probably a more appropriate place. It gets a
pool associated with the child.

If you can get a function registered as a cleanup on that pool, then
you'll be all set.

Cheers,
-g

> 
> Grisha
> 
> On Fri, 29 Aug 2003, Barry Warsaw wrote:
> 
> > I'm very likely missing it, but is there some way to run a callable when
> > the child processes are terminated (i.e. through apachectl stop)?
> >
> > Seems like the server object's register_cleanup() ought to do it, except
> > that I have some startup code that gets run when my main module is
> > imported and at that point I don't have a request object to use as the
> > first argument to register_cleanup().
> >
> > Any hints (or examples!)?
> >
> > Thanks,
> > -Barry
> >
> >
> > _______________________________________________
> > Mod_python mailing list
> > Mod_python@modpython.org
> > http://mailman.modpython.org/mailman/listinfo/mod_python
> >
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python

-- 
Greg Stein, http://www.lyra.org/
From barry at python.org  Fri Aug 29 18:05:31 2003
From: barry at python.org (Barry Warsaw)
Date: Fri Jan  9 22:00:20 2004
Subject: [mod_python] Child shutdowns?
In-Reply-To: <1062193640.4895.13.camel@yyz>
References: <1062187064.4895.7.camel@yyz>
	<1062193640.4895.13.camel@yyz>
Message-ID: <1062194731.4895.17.camel@yyz>

On Fri, 2003-08-29 at 17:47, Barry Warsaw wrote:

> Thanks Grisha, both for the info and the offer to poke around.  I'll try
> pushing my startup code into my request handler, and see if registering
> my cleanup code at that time will work.

Very quick testing reveals that something like this stanza does the
trick:

def handler(req):
    global _started
    if not _started:
        startup()
        req.server.register_cleanup(req, shutdown)
        _started = True

A bit gnarly perhaps, but palatable.

-Barry


From gstein at lyra.org  Fri Aug 29 15:23:28 2003
From: gstein at lyra.org (Greg Stein)
Date: Fri Jan  9 22:00:20 2004
Subject: [mod_python] Child shutdowns?
In-Reply-To: <1062194731.4895.17.camel@yyz>;
	from barry@python.org on Fri, Aug 29, 2003 at 06:05:31PM -0400
References: <1062187064.4895.7.camel@yyz> <1062193640.4895.13.camel@yyz>
	<1062194731.4895.17.camel@yyz>
Message-ID: <20030829152328.E14389@lyra.org>

On Fri, Aug 29, 2003 at 06:05:31PM -0400, Barry Warsaw wrote:
> On Fri, 2003-08-29 at 17:47, Barry Warsaw wrote:
> 
> > Thanks Grisha, both for the info and the offer to poke around.  I'll try
> > pushing my startup code into my request handler, and see if registering
> > my cleanup code at that time will work.
> 
> Very quick testing reveals that something like this stanza does the
> trick:
> 
> def handler(req):
>     global _started
>     if not _started:
>         startup()
>         req.server.register_cleanup(req, shutdown)
>         _started = True
> 
> A bit gnarly perhaps, but palatable.

Ouch! The interface is very non-intuitive. That is not a cleanup
associated with the server, but actually with the pchild pool that was
passed to the child_init hook.

Looking at the code, mod_python hooks into child_init and saves the pool
off into a global variable. The server_register_cleanup() function then
attaches the cleanup to *that* pool.

So it does what you want, but yah... a bit ugly. And it really doesn't
look thread-safe either. You could easily have two threads end up inside
the 'if' block, registering a cleanup.

Cheers,
-g

-- 
Greg Stein, http://www.lyra.org/
From barry at python.org  Fri Aug 29 18:40:46 2003
From: barry at python.org (Barry Warsaw)
Date: Fri Jan  9 22:00:20 2004
Subject: [mod_python] Child shutdowns?
In-Reply-To: <20030829152328.E14389@lyra.org>
References: <1062187064.4895.7.camel@yyz> <1062193640.4895.13.camel@yyz>
	 <1062194731.4895.17.camel@yyz>  <20030829152328.E14389@lyra.org>
Message-ID: <1062196846.4895.43.camel@yyz>

On Fri, 2003-08-29 at 18:23, Greg Stein wrote:

> So it does what you want, but yah... a bit ugly. And it really doesn't
> look thread-safe either. You could easily have two threads end up inside
> the 'if' block, registering a cleanup.

Yep, but right now I'm using a prefork MPM, which I'll probably stick
with for reasons like this.  IIUC, each child process is single
threaded, right?

-Barry


From gstein at lyra.org  Fri Aug 29 16:06:11 2003
From: gstein at lyra.org (Greg Stein)
Date: Fri Jan  9 22:00:20 2004
Subject: [mod_python] Child shutdowns?
In-Reply-To: <1062196846.4895.43.camel@yyz>;
	from barry@python.org on Fri, Aug 29, 2003 at 06:40:46PM -0400
References: <1062187064.4895.7.camel@yyz> <1062193640.4895.13.camel@yyz>
	<1062194731.4895.17.camel@yyz> <20030829152328.E14389@lyra.org>
	<1062196846.4895.43.camel@yyz>
Message-ID: <20030829160611.F14389@lyra.org>

On Fri, Aug 29, 2003 at 06:40:46PM -0400, Barry Warsaw wrote:
> On Fri, 2003-08-29 at 18:23, Greg Stein wrote:
> 
> > So it does what you want, but yah... a bit ugly. And it really doesn't
> > look thread-safe either. You could easily have two threads end up inside
> > the 'if' block, registering a cleanup.
> 
> Yep, but right now I'm using a prefork MPM, which I'll probably stick
> with for reasons like this.  IIUC, each child process is single
> threaded, right?

Yup, it sure is.

If you want to be a Real Man, then you can use _apache.mpm_query to verify
that you're running single-threaded :-)

btw, if you're going to rely on prefork, then why don't you just use the
exit handlers for the process rather than worrying about Apache's pool
cleanup handling? If you're doing the latter to work within the Apache
framework, then you really ought to keep threads in mind :-)

Cheers,
-g

-- 
Greg Stein, http://www.lyra.org/
From barry at python.org  Fri Aug 29 19:14:00 2003
From: barry at python.org (Barry Warsaw)
Date: Fri Jan  9 22:00:20 2004
Subject: [mod_python] Child shutdowns?
In-Reply-To: <20030829160611.F14389@lyra.org>
References: <1062187064.4895.7.camel@yyz> <1062193640.4895.13.camel@yyz>
	 <1062194731.4895.17.camel@yyz> <20030829152328.E14389@lyra.org>
	 <1062196846.4895.43.camel@yyz>  <20030829160611.F14389@lyra.org>
Message-ID: <1062198840.4895.74.camel@yyz>

On Fri, 2003-08-29 at 19:06, Greg Stein wrote:

> If you want to be a Real Man, then you can use _apache.mpm_query to verify
> that you're running single-threaded :-)

Ooh, ooh, the "hidden goodies"!  So far I've only dug into the
documented API ('course I could be missing this one).

> btw, if you're going to rely on prefork, then why don't you just use the
> exit handlers for the process rather than worrying about Apache's pool
> cleanup handling? If you're doing the latter to work within the Apache
> framework, then you really ought to keep threads in mind :-)

I tried setting sys.exitfunc but it wasn't called when I apachectl
stop'd, probably because that kills the process via SIGTERM, and I don't
think exit handlers are run in that case.  (I probably should have used
the atexit module, but that has the same semantics.)

I hear ya about threading issues.  Right now, I'm trying to get the
simplest possible thing that can work. <wink>

-Barry


From conrad at hep.caltech.edu  Fri Aug 29 17:05:23 2003
From: conrad at hep.caltech.edu (Conrad Steenberg)
Date: Fri Jan  9 22:00:20 2004
Subject: [mod_python] ANNOUNCE: Mod_python 3.1.0 Alpha
In-Reply-To: <20030829171157.O56156@onyx.ispol.com>
References: <20030828210644.C43921@onyx.ispol.com>
	<20030829171157.O56156@onyx.ispol.com>
Message-ID: <1062201922.2857.5.camel@Presario>

On Fri, 2003-08-29 at 14:21, Gregory (Grisha) Trubetskoy wrote:
> On Fri, 29 Aug 2003, Conrad Steenberg wrote:
> 
> > Hi
> >
> > Tested here to be working under an OpenPKG-1.3 (ish) environment.
> >
> > Any pointers to higher level tools that works with the included version
> > of PSP (such as for constructing a news or blogging site)? There seems
> > to be at least two other projects also calling themselves PSP ;-)
> 
> There is even one called Perl Server Pages :-)
> 
> I doubt there are any tools, since our PSP is brand new. B
> 
> But it's rather simplistic. For everyone's info:

Thanks for the clarification, I was under the horribly mistaken
impression that the mod_python PSP was taken from some other bigger
project ;-)

And simplistic is good, IMHO.

Thanks for the docs, too.

Conrad

> 
> This describes the syntax:
> 
> http://www.modpython.org/live/mod_python-3.1.0a/doc-html/pyapi-psp.html
> 
> And this describes the psp handler (things like sessions, etc):
> 
> http://www.modpython.org/live/mod_python-3.1.0a/doc-html/pyapi-psp.html
> 
> Also, if you have any JSP experience, there was an e-mail on the dev list
> regarding how it corresponds to PSP, which I'll forward to this list
> (because I forgot where the dev list archives are).
> 
> Grisha


-- 
Conrad Steenberg <conrad@hep.caltech.edu>
From grisha at modpython.org  Fri Aug 29 20:26:00 2003
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 22:00:20 2004
Subject: [mod_python] Child shutdowns?
In-Reply-To: <1062198840.4895.74.camel@yyz>
References: <1062187064.4895.7.camel@yyz> <1062193640.4895.13.camel@yyz>
 <1062194731.4895.17.camel@yyz> <20030829152328.E14389@lyra.org>
 <1062196846.4895.43.camel@yyz>  <20030829160611.F14389@lyra.org>
 <1062198840.4895.74.camel@yyz>
Message-ID: <20030829200546.C59355@onyx.ispol.com>


On Fri, 29 Aug 2003, Barry Warsaw wrote:

> On Fri, 2003-08-29 at 19:06, Greg Stein wrote:
>
> > If you want to be a Real Man, then you can use _apache.mpm_query to verify
> > that you're running single-threaded :-)
>
> Ooh, ooh, the "hidden goodies"!  So far I've only dug into the
> documented API ('course I could be missing this one).

It's documented, but it's a mod_python 3.1 thing. It's actually
apache.mpm_query:

http://www.modpython.org/live/mod_python-3.1.0a/doc-html/pyapi-apmeth.html

BTW, if you're not going to be using sessions or PSP (which are new), you
might as well use 3.1.0a - the stuff carried over from 3.0.3 is probably
stabler and faster, and it fixes some things that wouldn't work at all in
Python 2.3, e.g. get rid of stupid ancient things like

if str(type(object)) == "<type 'class'>"

Grisha
From pradix at gmx.de  Sat Aug 30 02:35:52 2003
From: pradix at gmx.de (=?ISO-8859-1?Q?Lorenz_K=F6hl?=)
Date: Fri Jan  9 22:00:20 2004
Subject: [mod_python] modpython compile error
Message-ID: <3F4FF168.9050505@gmx.de>

I want to install modpython 3.0.3 on my Suse 8.2 but during compilation 
an error occurs saying

----------------
/usr/include/features.h:131:1: warning: this is the location of the 
previous definition
requestobject.c: In function `getreq_recmbr_off':
requestobject.c:1055: error: `LONG_LONG' undeclared (first use in this 
function)
requestobject.c:1055: error: (Each undeclared identifier is reported 
only once
requestobject.c:1055: error: for each function it appears in.)
requestobject.c:1056: error: parse error before "l"
requestobject.c:1057: error: `l' undeclared (first use in this function)
requestobject.c: At top level:
requestobject.c:1270: warning: initialization from incompatible pointer type
apxs:Error: Command failed with rc=65536
.
make[1]: *** [mod_python.so] Error 1
make[1]: Leaving directory 
`/home/software/network/apache/mod_python-3.0.3/src'
make: *** [do_dso] Error 2
-----------------

I've apache 2.0.47 and python 2.3 installed. The configure of modpython 
was fine and of course I
compiled apache with --enable-so.

in requestobject.c there's someting in the comments about apr. but apr 
from apr.apache.org is installed
build into apache.

any ideas?  (any parsing-lib missing?)

From barry at python.org  Sat Aug 30 12:28:49 2003
From: barry at python.org (Barry Warsaw)
Date: Fri Jan  9 22:00:20 2004
Subject: [mod_python] Child shutdowns?
In-Reply-To: <20030829200546.C59355@onyx.ispol.com>
References: <1062187064.4895.7.camel@yyz> <1062193640.4895.13.camel@yyz>
	<1062194731.4895.17.camel@yyz> <20030829152328.E14389@lyra.org>
	<1062196846.4895.43.camel@yyz>  <20030829160611.F14389@lyra.org>
	<20030829200546.C59355@onyx.ispol.com>
Message-ID: <1062260929.30124.0.camel@anthem>

On Fri, 2003-08-29 at 20:26, Gregory (Grisha) Trubetskoy wrote:

> BTW, if you're not going to be using sessions or PSP (which are new), you
> might as well use 3.1.0a - the stuff carried over from 3.0.3 is probably
> stabler and faster, and it fixes some things that wouldn't work at all in
> Python 2.3, e.g. get rid of stupid ancient things like
> 
> if str(type(object)) == "<type 'class'>"

Cool, thanks for the tip.

-Barry


From stephen at vermeulen.ca  Sat Aug 30 12:56:17 2003
From: stephen at vermeulen.ca (Stephen Vermeulen)
Date: Fri Jan  9 22:00:20 2004
Subject: [mod_python] Problems getting mod_python to work on Windows NT4.0
Message-ID: <3F50F351.8020306@vermeulen.ca>

This morning I took my first attempt at getting mod_python to work on 
Windows NT4.0
under Apache 2.0.47 and Python 2.3. I could not get the simple test from:

http://www.modpython.org/live/current/doc-html/inst-testing.html

to work.  All I got was the following error:

[Sat Aug 30 12:23:09 2003] [error] make_obcallback: could not import 
mod_python.apache.

I tried both

   mod_python-3.0.3.win32.exe

and
 
   mod_python-3.1.0a.win32-py2.3.exe

and both gave the same errors.

In the end I noticed in the mailing list archives that some people had 
success after reverting to
Python 2.2.  So I installed a copy of Python 2.2.2 on my system (I did 
not remove my Python 2.3)
and reinstalled mod_python 3.0.3.

Without changing anything else it started to work.

Regards,

Stephen



From azaroth at liverpool.ac.uk  Fri Aug  1 19:41:27 2003
From: azaroth at liverpool.ac.uk (Robert Sanderson)
Date: Fri Jan  9 22:04:05 2004
Subject: [mod_python] MacOS X Install
Message-ID: <Pine.LNX.4.44.0308011937060.16855-100000@gondolin.hist.liv.ac.uk>


Okay, has anyone gotten mod_python working under MacOS X recently?  In 
particular, using 2.3 (to avoid the issue with python thinking it's 
running in restricted mode)

I've patched libtool as per the readme.
Installed Apache 2.0.47, configured with --enable-so
Installed Jack Jensen's build of Python2.3
Fixed LONG_LONG to PY_LONG_LONG in the mod_python source
Compiled mod_python, installed it.

When I try to run apache from the command line, with 
DYLD_FORCE_FLAT_NAMESPACE defined or without, I get:

Cannot load /usr/local/apache2/modules/mod_python.so into server: dyld: 
/usr/sbin/httpd Undefined symbols:
_PyExc_AttributeError
_PyExc_IOError
_PyExc_IndexError
_PyExc_KeyError

Previously I tried the same thing without patching libtool and got:

Undefined symbols:
_PyInt_Type
_Py_OptimizeFlag
Trace/(something)

Rob

-- 
      ,'/:.          Dr Robert Sanderson (azaroth@liverpool.ac.uk)
    ,'-/::::.        http://www.o-r-g.org/~azaroth/
  ,'--/::(@)::.      Special Collections and Archives, extension 3142
,'---/::::::::::.    Nebmedes:  telnet: nebmedes.o-r-g.org 7777
____/:::::::::::::.                WWW: http://nebmedes.o-r-g.org:8000/
I L L U M I N A T I

From ron at rwsoft.ca  Fri Aug  1 15:13:56 2003
From: ron at rwsoft.ca (Ron Wills)
Date: Fri Jan  9 22:04:05 2004
Subject: [mod_python] File Upload Problem
Message-ID: <1059772435.4143.63.camel@ron.gw.rwsoft.ca>

  I've seem to have found an oddity will binary file uploads with
modpython on windows 2K. I've created a file upload form in which a zip
can be upload to restore a mysql db. I use the util.FieldStorage class
to parse the request and it seems to convert all \n characters in the
binary file to \r\n.
  It doesn't seem to be the browsers (Tested with Mozilla 1.3 1.4, EI 6
and Opera) and I can't see it being Apache (Never run into this problem
using PHP). Is there a way to tell modpython it's binary and not to do
any conversions on the upload?

Using:
	Win2K
	Apache 2.0.46
	modpython 3.0.3

  Thanks for any help.

-- 
Ron Wills
RW Software
http://www.rwsoft.ca
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: This is a digitally signed message part
Url : http://mailman.modpython.org/pipermail/mod_python/attachments/20030801/29e64401/attachment-0003.bin
From grisha at modpython.org  Mon Aug  4 11:44:15 2003
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 22:04:05 2004
Subject: [mod_python] File Upload Problem
In-Reply-To: <1059772435.4143.63.camel@ron.gw.rwsoft.ca>
References: <1059772435.4143.63.camel@ron.gw.rwsoft.ca>
Message-ID: <20030804114304.L88668@onyx.ispol.com>


As far as I can tell mod_python trats everything as binary.

Could you provide the HTML for the form, and also the code you use to get
the data from the file on the server - I suspect there may be something
there.

Grisha

On Fri, 1 Aug 2003, Ron Wills wrote:

>   I've seem to have found an oddity will binary file uploads with
> modpython on windows 2K. I've created a file upload form in which a zip
> can be upload to restore a mysql db. I use the util.FieldStorage class
> to parse the request and it seems to convert all \n characters in the
> binary file to \r\n.
>   It doesn't seem to be the browsers (Tested with Mozilla 1.3 1.4, EI 6
> and Opera) and I can't see it being Apache (Never run into this problem
> using PHP). Is there a way to tell modpython it's binary and not to do
> any conversions on the upload?
>
> Using:
> 	Win2K
> 	Apache 2.0.46
> 	modpython 3.0.3
>
>   Thanks for any help.
>
> --
> Ron Wills
> RW Software
> http://www.rwsoft.ca
>
From leader730 at hotmail.com  Tue Aug  5 00:57:38 2003
From: leader730 at hotmail.com (Jer icho)
Date: Fri Jan  9 22:04:05 2004
Subject: [mod_python] 
	server returning "500 Internal Server Error" with mod_python files
Message-ID: <Law14-F46G4YdlbEwPI0000b2f5@hotmail.com>

An HTML attachment was scrubbed...
URL: http://mailman.modpython.org/pipermail/mod_python/attachments/20030805/906d125f/attachment-0003.htm
From gnb at itga.com.au  Tue Aug  5 15:47:30 2003
From: gnb at itga.com.au (Gregory Bond)
Date: Fri Jan  9 22:04:05 2004
Subject: [mod_python] server returning "500 Internal Server Error" with
	mod_python files 
In-Reply-To: Your message of Tue, 05 Aug 2003 00:57:38 -0400.
Message-ID: <200308050547.PAA08734@lightning.itga.com.au>

> <DIV>[error] make_obcallback: could not import mod_python.apache.</DIV>

See the very first quesiton in the FAQ:

http://www.modpython.org/FAQ/faqw.py?req=show&file=faq02.001.htp

From post at nlhas.no  Tue Aug  5 11:50:02 2003
From: post at nlhas.no (post@nlhas.no)
Date: Fri Jan  9 22:04:05 2004
Subject: [mod_python] Compiling with Python2.3
Message-ID: <20030805095002.CFF9E1506A@nlhhost>

I can't get mod_python to compile with Python2.3 (Apache 2.0.47, RedHat 7.0) :

]# make
make[1]: Entering directory `/home/public/transfer/mod_python-3.0.3/src'
Compiling for DSO.
.....snip.....
requestobject.c: At top level:
requestobject.c:1270: warning: initialization from incompatible pointer type
apxs:Error: Command failed with rc=65536
.
make[1]: *** [mod_python.so] Error 1
make[1]: Leaving directory `/home/public/transfer/mod_python-3.0.3/src'
make: *** [do_dso] Error 2

Same setup configured with Python2.2 compiles perfectly, so I presume this is a problem mod_python<>Python2.3.

Any suggestions?

pm

From grisha at modpython.org  Tue Aug  5 09:26:40 2003
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 22:04:05 2004
Subject: [mod_python] Compiling with Python2.3
In-Reply-To: <20030805095002.CFF9E1506A@nlhhost>
References: <20030805095002.CFF9E1506A@nlhhost>
Message-ID: <20030805092556.Q95995@onyx.ispol.com>


I added a FAQ entry for this:

http://www.modpython.org/FAQ/faqw.py?req=show&file=faq04.002.htp

Grisha

On Tue, 5 Aug 2003 post@nlhas.no wrote:

> I can't get mod_python to compile with Python2.3 (Apache 2.0.47, RedHat 7.0) :
>
> ]# make
> make[1]: Entering directory `/home/public/transfer/mod_python-3.0.3/src'
> Compiling for DSO.
> .....snip.....
> requestobject.c: At top level:
> requestobject.c:1270: warning: initialization from incompatible pointer type
> apxs:Error: Command failed with rc=65536
> .
> make[1]: *** [mod_python.so] Error 1
> make[1]: Leaving directory `/home/public/transfer/mod_python-3.0.3/src'
> make: *** [do_dso] Error 2
>
> Same setup configured with Python2.2 compiles perfectly, so I presume this is a problem mod_python<>Python2.3.
>
> Any suggestions?
>
> pm
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>
From dlrubin at yahoo.com  Wed Aug  6 09:12:10 2003
From: dlrubin at yahoo.com (Daniel Rubin)
Date: Fri Jan  9 22:04:05 2004
Subject: [mod_python] build error on solais
Message-ID: <20030806161210.74520.qmail@web13904.mail.yahoo.com>

Trying to build mod_python 3.0.3 on solaris 2.8. My
configure command is: ./configure
--with-apxs=/home/rubin/opt/apache/bin/apxs
--prefix=/home/rubin
and that runs fine. Then when I make, I get this error
during the build:

/home/rubin/opt/apache/build/libtool --silent
--mode=compile gcc -prefer-pic 
-DAP_HAVE_DESIGNATED_INITIALIZER -DSOLARIS2=8
-D_POSIX_PTHREAD_SEMANTICS -D_REENTRANT -g -O2
-pthreads -I/home/rubin/opt/apache/include 
-I/home/rubin/opt/apache/include  
-I/home/rubin/opt/apache/include 
-I/home/rubin/src/mod_python-3.0.3/src/include
-I/home/rubin/opt/apache/include
-I/home/rubin/include/python2.3  -c -o
requestobject.lo requestobject.c && touch
requestobject.slo
In file included from
/home/rubin/include/python2.3/Python.h:8,
                 from
/home/rubin/src/mod_python-3.0.3/src/include/mod_python.h:92,
                 from requestobject.c:64:
/home/rubin/include/python2.3/pyconfig.h:822:1:
warning: "_FILE_OFFSET_BITS" redefined
In file included from
/home/rubin/lib/gcc-lib/sparc-sun-solaris2.8/3.2.2/include/sys/types.h:28,
                 from
/home/rubin/opt/apache/include/apr.h:149,
                 from
/home/rubin/opt/apache/include/ap_config.h:58,
                 from
/home/rubin/opt/apache/include/httpd.h:72,
                 from
/home/rubin/src/mod_python-3.0.3/src/include/mod_python.h:71,
                 from requestobject.c:64:
/usr/include/sys/feature_tests.h:96:1: warning: this
is the location of the previous definition
requestobject.c: In function `getreq_recmbr_off':
requestobject.c:1055: `LONG_LONG' undeclared (first
use in this function)
requestobject.c:1055: (Each undeclared identifier is
reported only once
requestobject.c:1055: for each function it appears
in.)
requestobject.c:1056: parse error before "l"
requestobject.c:1057: `l' undeclared (first use in
this function)
requestobject.c: At top level:
requestobject.c:1270: warning: initialization from
incompatible pointer type
apxs:Error: Command failed with rc=65536
.
make[1]: *** [mod_python.so] Error 1
make[1]: Leaving directory
`/home/rubin/src/mod_python-3.0.3/src'
make: *** [do_dso] Error 2


__________________________________
Do you Yahoo!?
Yahoo! SiteBuilder - Free, easy-to-use web site design software
http://sitebuilder.yahoo.com
From grisha at modpython.org  Wed Aug  6 12:47:44 2003
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 22:04:05 2004
Subject: [mod_python] build error on solais
In-Reply-To: <20030806161210.74520.qmail@web13904.mail.yahoo.com>
References: <20030806161210.74520.qmail@web13904.mail.yahoo.com>
Message-ID: <20030806124705.P15215@onyx.ispol.com>



http://www.modpython.org/FAQ/faqw.py?req=show&file=faq04.002.htp

HTH,

Grisha

On Wed, 6 Aug 2003, Daniel Rubin wrote:

> Trying to build mod_python 3.0.3 on solaris 2.8. My
> configure command is: ./configure
> --with-apxs=/home/rubin/opt/apache/bin/apxs
> --prefix=/home/rubin
> and that runs fine. Then when I make, I get this error
> during the build:
>
> /home/rubin/opt/apache/build/libtool --silent
> --mode=compile gcc -prefer-pic
> -DAP_HAVE_DESIGNATED_INITIALIZER -DSOLARIS2=8
> -D_POSIX_PTHREAD_SEMANTICS -D_REENTRANT -g -O2
> -pthreads -I/home/rubin/opt/apache/include
> -I/home/rubin/opt/apache/include
> -I/home/rubin/opt/apache/include
> -I/home/rubin/src/mod_python-3.0.3/src/include
> -I/home/rubin/opt/apache/include
> -I/home/rubin/include/python2.3  -c -o
> requestobject.lo requestobject.c && touch
> requestobject.slo
> In file included from
> /home/rubin/include/python2.3/Python.h:8,
>                  from
> /home/rubin/src/mod_python-3.0.3/src/include/mod_python.h:92,
>                  from requestobject.c:64:
> /home/rubin/include/python2.3/pyconfig.h:822:1:
> warning: "_FILE_OFFSET_BITS" redefined
> In file included from
> /home/rubin/lib/gcc-lib/sparc-sun-solaris2.8/3.2.2/include/sys/types.h:28,
>                  from
> /home/rubin/opt/apache/include/apr.h:149,
>                  from
> /home/rubin/opt/apache/include/ap_config.h:58,
>                  from
> /home/rubin/opt/apache/include/httpd.h:72,
>                  from
> /home/rubin/src/mod_python-3.0.3/src/include/mod_python.h:71,
>                  from requestobject.c:64:
> /usr/include/sys/feature_tests.h:96:1: warning: this
> is the location of the previous definition
> requestobject.c: In function `getreq_recmbr_off':
> requestobject.c:1055: `LONG_LONG' undeclared (first
> use in this function)
> requestobject.c:1055: (Each undeclared identifier is
> reported only once
> requestobject.c:1055: for each function it appears
> in.)
> requestobject.c:1056: parse error before "l"
> requestobject.c:1057: `l' undeclared (first use in
> this function)
> requestobject.c: At top level:
> requestobject.c:1270: warning: initialization from
> incompatible pointer type
> apxs:Error: Command failed with rc=65536
> .
> make[1]: *** [mod_python.so] Error 1
> make[1]: Leaving directory
> `/home/rubin/src/mod_python-3.0.3/src'
> make: *** [do_dso] Error 2
>
>
> __________________________________
> Do you Yahoo!?
> Yahoo! SiteBuilder - Free, easy-to-use web site design software
> http://sitebuilder.yahoo.com
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>
From conrad at hep.caltech.edu  Wed Aug  6 22:25:56 2003
From: conrad at hep.caltech.edu (Conrad Steenberg)
Date: Fri Jan  9 22:04:05 2004
Subject: [mod_python] Authentication behaviour
Message-ID: <1060233956.2639.13.camel@192_168_0_100>

Hi

I have an authenhandler that basically ignores authentication headers
for GET requests, but requires them to be present for POST requests.

With Apache 2.0.46 this worked fine with a setup like e.g.
<Directory /opt/midir/>
       SetHandler python-program
       AddHandler python-program .py
       PythonHandler my_handler
       PythonAuthenHandler my_handler
       AuthType Basic
       AuthName "Restricted Area"
</Directory>

In 2.0.47 the authenhandler doesn't get called unless I add
      require valid-user
to the above. But this makes browsers pop up a password dialog for
requests without authentication headers (GET requests in this case).

Is there any way to make the browser not pop up the password dialog, but
still have the authenhandler called? I.e. where does the response get
generated that returns a "authentication required" value to the browser,
if not in the authenhandler?

Any help appreciated!

Conrad

-- 
Conrad Steenberg <conrad@hep.caltech.edu>
-- 

From mike.looijmans at asml.com  Thu Aug  7 07:47:14 2003
From: mike.looijmans at asml.com (Mike Looijmans)
Date: Fri Jan  9 22:04:05 2004
Subject: [mod_python] Authentication behaviour
Message-ID: <01c35ca7$5ad97380$926a1e6e@wsasd464>

I think in this case, you may want to consider the alternative, which is to
just provide a 'regular' request handler, and when authentication is
required but not given, just return a "401 Unauthorized" response with a
WWW-Authenticate header specifying the realm.

That will give the user a password popup and the browser will then retry the
same request. Note that for large POST request, this is wasting a lot of
bandwidth, as the first (and therefore unauthorized) POST request will be
completely rejected! It may be better to direct the user to a GET page first
to authenticate, and only after that page start doing the POST things.

Note that (unless the "Digest" authentication algorithm is used) the "Basic"
HTTP authentication is highly insecure and therefore you should never ever
use unix account data for this. Digest is only supported by IE and probably
the newer Mozilla's (haven't tried those, NS 6 did not support it).

I prefer using session cookies for authentication, since that is (if
implemented properly) more secure and allows the user to log out.

Mike.

-----Original Message-----
From: Conrad Steenberg <conrad@hep.caltech.edu>
To: ModPython mail list <mod_python@modpython.org>
Date: Thursday, August 07, 2003 7:31 AM
Subject: [mod_python] Authentication behaviour


>Hi
>
>I have an authenhandler that basically ignores authentication headers
>for GET requests, but requires them to be present for POST requests.
>
>With Apache 2.0.46 this worked fine with a setup like e.g.
><Directory /opt/midir/>
>       SetHandler python-program
>       AddHandler python-program .py
>       PythonHandler my_handler
>       PythonAuthenHandler my_handler
>       AuthType Basic
>       AuthName "Restricted Area"
></Directory>
>
>In 2.0.47 the authenhandler doesn't get called unless I add
>      require valid-user
>to the above. But this makes browsers pop up a password dialog for
>requests without authentication headers (GET requests in this case).
>
>Is there any way to make the browser not pop up the password dialog, but
>still have the authenhandler called? I.e. where does the response get
>generated that returns a "authentication required" value to the browser,
>if not in the authenhandler?
>
>Any help appreciated!
>
>Conrad
>
>--
>Conrad Steenberg <conrad@hep.caltech.edu>
>--
>
>_______________________________________________
>Mod_python mailing list
>Mod_python@modpython.org
>http://mailman.modpython.org/mailman/listinfo/mod_python
>
>
>
>

From davidf at sjsoft.com  Thu Aug  7 08:21:48 2003
From: davidf at sjsoft.com (David Fraser)
Date: Fri Jan  9 22:04:05 2004
Subject: [mod_python] Authentication behaviour
In-Reply-To: <01c35ca7$5ad97380$926a1e6e@wsasd464>
References: <01c35ca7$5ad97380$926a1e6e@wsasd464>
Message-ID: <3F31EFFC.7090603@sjsoft.com>

Mike Looijmans wrote:

>Note that (unless the "Digest" authentication algorithm is used) the "Basic"
>HTTP authentication is highly insecure and therefore you should never ever
>use unix account data for this. Digest is only supported by IE and probably
>the newer Mozilla's (haven't tried those, NS 6 did not support it).
>  
>
Mozilla supported Digest authentication since December 2001 (see 
http://bugzilla.mozilla.org/show_bug.cgi?id=15860)
Netscape 6 was released in December 2000 so doesn't include it; Mozilla 
0.9.7 or higher and Netscape 7.0 or higher should include it.
However, note this article about incompatibilities with at least some 
versions of IE and Apache:
http://www.eweek.com/print_article/0,3668,a%3D24177,00.asp
I think I've seen problems from this, so I would concur with the advice 
about using session cookies if possible.
David

>I prefer using session cookies for authentication, since that is (if
>implemented properly) more secure and allows the user to log out.
>
>Mike.
>  
>


From etienne at cs.vu.nl  Thu Aug  7 09:44:54 2003
From: etienne at cs.vu.nl (Etienne Posthumus)
Date: Fri Jan  9 22:04:05 2004
Subject: [mod_python] Authentication behaviour
In-Reply-To: <3F31EFFC.7090603@sjsoft.com>
References: <01c35ca7$5ad97380$926a1e6e@wsasd464>
	<3F31EFFC.7090603@sjsoft.com>
Message-ID: <Pine.GSO.4.53.0308070939460.10965@flits.cs.vu.nl>

On Thu, 7 Aug 2003, David Fraser wrote:
> However, note this article about incompatibilities with at least some
> versions of IE and Apache:
> http://www.eweek.com/print_article/0,3668,a%3D24177,00.asp
> I think I've seen problems from this, so I would concur with the advice
> about using session cookies if possible.

It is IMHO a pity that the 'proper' authentication methods for HTTP don't
really work broadly enough. In my experience Digest works OK'ish for
simple URIs, but as soon as you start using parameters in your URI MS IE
(and Mac OS X Safari) fails as it passes throught the realms differently
to what Apache expects.

Bugger. :-( So at the moment I use SSL + Basic with a self-signed
certificate. Not ideal but the only pragmatic choice.

Etienne Posthumus
Programmer, IIDS - Intelligent Interactive Distributed Systems
http://www.iids.org/
Vrije Universiteit Amsterdam
----------------------------
From vlindberg at verio.net  Thu Aug  7 09:04:51 2003
From: vlindberg at verio.net (VanL)
Date: Fri Jan  9 22:04:05 2004
Subject: [mod_python] Persistent db connections
Message-ID: <3F326A93.5060505@verio.net>

Hello,

I am using quixote+mod_python as a front-end for a database app.  Based 
on the example in the faq, it looks like I could just make the 
connection in a separate module and mod_python would automatically make 
the database connections persist. 

For example,

if I have code that is run by mod_python

=== persistdb.py ==================
import psycopg as db
def connect():
    global connection
    try:
        conn = connection
        return conn
    except NameError:
        connection = db.connect(connection_string)
    return connection

=== application.py ==================
import persistdb
conn = persistdb.connect()
# Use conn here

 From the FAQ, it appears that the db connection "connection" would 
persist transparently.  Is this a correct understanding?
If that is true, would there be any benefit to using dbpool, as opposed 
to the code posted above?

Thanks,

VanL


From conrad at hep.caltech.edu  Thu Aug  7 08:30:12 2003
From: conrad at hep.caltech.edu (Conrad Steenberg)
Date: Fri Jan  9 22:04:05 2004
Subject: [mod_python] Authentication behaviour
In-Reply-To: <01c35ca7$5ad97380$926a1e6e@wsasd464>
References: <01c35ca7$5ad97380$926a1e6e@wsasd464>
Message-ID: <1060270212.3569.21.camel@192_168_0_100>

On Wed, 2003-08-06 at 22:47, Mike Looijmans wrote:
> I think in this case, you may want to consider the alternative, which is to
> just provide a 'regular' request handler, and when authentication is
> required but not given, just return a "401 Unauthorized" response with a
> WWW-Authenticate header specifying the realm.

> That will give the user a password popup and the browser will then retry the
> same request. Note that for large POST request, this is wasting a lot of
> bandwidth, as the first (and therefore unauthorized) POST request will be
> completely rejected! It may be better to direct the user to a GET page first
> to authenticate, and only after that page start doing the POST things.

Yes, eliminating this roundtrip is exactly what I'm trying to do. The
problem is that Apache itself sends the 401 reply at some stage without
bothering to consult my authenhandler ;-)

Thanks for your reply!
Conrad
-- 

From conrad at hep.caltech.edu  Thu Aug  7 08:36:30 2003
From: conrad at hep.caltech.edu (Conrad Steenberg)
Date: Fri Jan  9 22:04:05 2004
Subject: [mod_python] Persistent db connections
In-Reply-To: <3F326A93.5060505@verio.net>
References: <3F326A93.5060505@verio.net>
Message-ID: <1060270589.3569.28.camel@192_168_0_100>

Hi Van

Doing it the way you describe would work, but depending on the DB and
Apache settings, you might have more Apache processes spawned than the
number of connections your DB can handle.

Using dbpool would make your web app fail more gracefully, i.e. get
slower with more connections, instead of giving some users an error that
it was unable to connect to the DB, as you often see on overloaded
discussion sites.

Cheers

Conrad

On Thu, 2003-08-07 at 08:04, VanL wrote:
> Hello,
> 
> I am using quixote+mod_python as a front-end for a database app.  Based 
> on the example in the faq, it looks like I could just make the 
> connection in a separate module and mod_python would automatically make 
> the database connections persist. 
> 
> For example,
> 
> if I have code that is run by mod_python
> 
> === persistdb.py ==================
> import psycopg as db
> def connect():
>     global connection
>     try:
>         conn = connection
>         return conn
>     except NameError:
>         connection = db.connect(connection_string)
>     return connection
> 
> === application.py ==================
> import persistdb
> conn = persistdb.connect()
> # Use conn here
> 
>  From the FAQ, it appears that the db connection "connection" would 
> persist transparently.  Is this a correct understanding?
> If that is true, would there be any benefit to using dbpool, as opposed 
> to the code posted above?
> 
> Thanks,
> 
> VanL
> 
> 
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
-- 

From vlindberg at verio.net  Thu Aug  7 11:17:25 2003
From: vlindberg at verio.net (VanL)
Date: Fri Jan  9 22:04:05 2004
Subject: [mod_python] Persistent db connections
In-Reply-To: <1060270589.3569.28.camel@192_168_0_100>
References: <3F326A93.5060505@verio.net>
	<1060270589.3569.28.camel@192_168_0_100>
Message-ID: <3F3289A5.8090604@verio.net>

Conrad Steenberg wrote:

>Using dbpool would make your web app fail more gracefully, i.e. get
>slower with more connections, instead of giving some users an error that
>it was unable to connect to the DB, as you often see on overloaded
>discussion sites.
>
Is this correct?  I thought that even dbpool would not pool resources 
between different apache processes.  Thus having a 
one-connection-per-process (or two, or three, but some fixed number) 
rule along with an apache maxclients setting would tend to keep the 
database connections within an acceptable range.

If the max number of clients could be known, regardless of the number of 
apache child processes, that would be great.  However, that doesn't 
match my understanding of how it works.

VanL

From conrad at hep.caltech.edu  Thu Aug  7 10:51:01 2003
From: conrad at hep.caltech.edu (Conrad Steenberg)
Date: Fri Jan  9 22:04:05 2004
Subject: [mod_python] Persistent db connections
In-Reply-To: <3F3289A5.8090604@verio.net>
References: <3F326A93.5060505@verio.net><3F3289A5.8090604@verio.net>
Message-ID: <1060278661.5313.28.camel@heppc22>

Hi Van

You're right, I confused dbpool (python) with dbpool (java) which does
what I described.

If you can provide a DB connection limit >= the Apache connection limit
you should probably be fine. 

>From python the SqlRelay also does what I described (allow many more
connections to the DB than the DB connection limit). See
http://sqlrelay.sourceforge.net/ and esp.
http://sqlrelay.sourceforge.net/sqlrelay/faq.html#howwork

Cheers

Conrad

On Thu, 2003-08-07 at 10:17, VanL wrote:
> Conrad Steenberg wrote:
> 
> >Using dbpool would make your web app fail more gracefully, i.e. get
> >slower with more connections, instead of giving some users an error that
> >it was unable to connect to the DB, as you often see on overloaded
> >discussion sites.
> >
> Is this correct?  I thought that even dbpool would not pool resources 
> between different apache processes.  Thus having a 
> one-connection-per-process (or two, or three, but some fixed number) 
> rule along with an apache maxclients setting would tend to keep the 
> database connections within an acceptable range.
> 
> If the max number of clients could be known, regardless of the number of 
> apache child processes, that would be great.  However, that doesn't 
> match my understanding of how it works.
> 
> VanL
-- 
Conrad Steenberg <conrad@hep.caltech.edu>

From fgeter at itc.nrcs.usda.gov  Thu Aug  7 16:30:17 2003
From: fgeter at itc.nrcs.usda.gov (Geter, Frank)
Date: Fri Jan  9 22:04:05 2004
Subject: [mod_python] Help with mod_python install
Message-ID: <768D32B675BED311968F009027DE9E3001D01043@rocky.itc.nrcs.usda.gov>

I am having trouble getting python scripts to run after installing
mod_python from a Mandrake 9.1 rpm.

I am running:
Mandrake 9.1
Apache 2.044 
mod_python 3.0.1 installed from
apache2-mod_python-2.0.44_3.0.1-1mdk.i586.rpm

I no NOTHING about apache and that is probably my problem.  I have edited
httpd2.conf file to include the Directory tag as per instructions.  I have
made the python script executable (755) mode.  Apache is running OK.

Need help!

Frank Geter
2150 Centre Avenue, Bldg. A
Fort Collins, CO 80526-1891
Ph# (970) 295-5536
Fax# (970) 295-5414


From mike.looijmans at asml.com  Fri Aug  8 07:25:15 2003
From: mike.looijmans at asml.com (Mike Looijmans)
Date: Fri Jan  9 22:04:05 2004
Subject: [mod_python] Persistent db connections
Message-ID: <01c35d6d$727b2f80$926a1e6e@wsasd464>

More importantly, make sure that your DB engine supports multiple threads
over a single connection.

If you're using a threading MPM, there will be multiple clients sharing the
same connection.

For MySQL for example this will fail if you also use scrolling cursors,
since you can have only one such cursor per connection.

What I did was to use a threading-only MPM and have each request grab a DB
connection from a pool (and remove it), and when done, it returns the DB
object to the pool. If the pool is empty, a new connection object is created
(so the pool grows automatically to meet demand).
This allows many threads to use the same connection objects, but no threads
will ever share the same object.

If the number of connections is limited, you could create a fixed number of
objects and do a lock-and-wait until one is available when the pool is
drained.

Mike.

-----Original Message-----
From: VanL <vlindberg@verio.net>
To: Conrad Steenberg <conrad@hep.caltech.edu>
Cc: ModPython mail list <mod_python@modpython.org>
Date: Thursday, August 07, 2003 7:22 PM
Subject: Re: [mod_python] Persistent db connections


>Conrad Steenberg wrote:
>
>>Using dbpool would make your web app fail more gracefully, i.e. get
>>slower with more connections, instead of giving some users an error that
>>it was unable to connect to the DB, as you often see on overloaded
>>discussion sites.
>>
>Is this correct?  I thought that even dbpool would not pool resources
>between different apache processes.  Thus having a
>one-connection-per-process (or two, or three, but some fixed number)
>rule along with an apache maxclients setting would tend to keep the
>database connections within an acceptable range.
>
>If the max number of clients could be known, regardless of the number of
>apache child processes, that would be great.  However, that doesn't
>match my understanding of how it works.


From DFarrell at ScholasticLibrary.com  Fri Aug  8 10:21:23 2003
From: DFarrell at ScholasticLibrary.com (Farrell, Doug)
Date: Fri Jan  9 22:04:05 2004
Subject: [mod_python] Problem understanding PythonAccessHandler
Message-ID: <582005C4B6AE4B4CAD684A93D283A16F01FFBE12@corpex01.corp.scholasticinc.local>

Hi all,

I'm trying to make use of mod_python to build a content server. This server
gets it's content from one of our product servers and strips out irrelevant
stuff and delivers that. The product server is authenticated and we use a
mod_perl script to do that part. I'm not at all familiar with mod_perl or
Perl for that matter, but would like to do the authentication/access using
mod_python. However, I'm having problems setting up httpd.conf to do the
right thing. Here is a section of http.conf from the product server that
uses mod_perl:

	#authenticate the whole product
	<Location /gme-ol/*.html>
       		PerlAccessHandler Apache::grolier::grolier_auth
	</Location>

	#authenticate the applications and log them as well.
	<Location /cgi-bin>
       		PerlAccessHandler Apache::grolier::grolier_auth
	</Location>

Here is a section of my content server http.conf:

	ScriptAlias /cs /data/cs/handlers

	<Location /cs>
		SetHandler python-program
		PythonHandler mod_python.publisher
		PythonDebug On
	</Location>

	<Directory /cs/gme/handler>
		AddHandler python-program .py
		PythonAccessHandler gme_auth
	</Directory>

My script, gme_auth.py just returns apache.OK for now till I figure out how
to authenticate. But it looks like it's never being called. 

Can anyone give me some help about how to set this up correctly?

Thanks in advance for your help,
Doug Farrell
From rey4 at columbia.edu  Sat Aug  9 11:01:21 2003
From: rey4 at columbia.edu (Russell Yanofsky)
Date: Fri Jan  9 22:04:05 2004
Subject: [mod_python] script_name bug?
Message-ID: <bh32ej$m9l$1@main.gmane.org>

I've noticed that req.subprocess_env['SCRIPT_NAME'] seems to have the wrong
value whenever the requested URL ends in a forward slash. This happens with
mod_python 3.0.3 and apache 2.0.47. Here are some examples:

  Requested URL: /mptest/mptest.py/
    Actual SCRIPT_NAME = /mptest/mptest.py/
    Expected SCRIPT_NAME = /mptest/mptest.py
    PATH_INFO = /

  Requested URL: /mptest/mptest.py/abc/
    Actual SCRIPT_NAME = /mptest/mptest.py/abc
    Expected SCRIPT_NAME = /mptest/mptest.py
    PATH_INFO = /abc/

  Requested URL: /mptest/mptest.py/abc/123/
    Actual SCRIPT_NAME = /mptest/mptest.py/abc/123
    Expected SCRIPT_NAME = /mptest/mptest.py
    PATH_INFO = /abc/123/

When the request doesn't end with a forward slash there's no problem:

  Requested URL: /mptest/mptest.py
    Actual SCRIPT_NAME = /mptest/mptest.py
    Expected SCRIPT_NAME = /mptest/mptest.py
    PATH_INFO =

  Requested URL: /mptest/mptest.py/abc
    Actual SCRIPT_NAME = /mptest/mptest.py
    Expected SCRIPT_NAME = /mptest/mptest.py
    PATH_INFO = /abc

  Requested URL: /mptest/mptest.py/abc/123
    Actual SCRIPT_NAME = /mptest/mptest.py
    Expected SCRIPT_NAME = /mptest/mptest.py
    PATH_INFO = /abc/123

Here's the code I used to produce the above output:

-- begin .htaccess listing --
AddHandler python-program .py
PythonHandler mptest
PythonDebug On
-- end .htaccess listing -- 

-- begin mptest.py listing --
from mod_python import apache

def handler(req):
  req.content_type = 'text/plain'
  env = req.subprocess_env
  req.write('Requested URL: %s\n' % env['REQUEST_URI'])
  req.write('  Actual SCRIPT_NAME = %s\n' % env['SCRIPT_NAME'])
  fixenv(env)
  req.write('  Expected SCRIPT_NAME = %s\n' % env['SCRIPT_NAME'])
  req.write('  PATH_INFO = %s\n' % env.get('PATH_INFO', ''))
  return apache.OK

# This is only a partial fix, does not work in the presence
# of double slashes in the PATH_INFO segment
def fixenv(env):
  path_info = env.get('PATH_INFO', '')
  if path_info and path_info[-1] == '/':
    script_name = env['SCRIPT_NAME']
    path_len = len(path_info) - 1
    if path_len:
      assert script_name[-path_len:] == path_info[:-1]
      env['SCRIPT_NAME'] = script_name[:-path_len]
    else:
      assert script_name[-1] == '/'
      env['SCRIPT_NAME'] = script_name[:-1]
-- end mptest.py listing --

This behavior only seems to occur in mod_python. SCRIPT_NAME does seem to
have the right value in CGI scripts.

- Russ


From rey4 at columbia.edu  Sat Aug  9 11:16:48 2003
From: rey4 at columbia.edu (Russell Yanofsky)
Date: Fri Jan  9 22:04:05 2004
Subject: [mod_python] script_name bug?
Message-ID: <00b001c35e89$411dd330$daf627a0@turtle>

I've noticed that req.subprocess_env['SCRIPT_NAME'] seems to have the wrong
value whenever the requested URL ends in a forward slash. This happens with
mod_python 3.0.3 and apache 2.0.47. Here are some examples:

  Requested URL: /mptest/mptest.py/
    Actual SCRIPT_NAME = /mptest/mptest.py/
    Expected SCRIPT_NAME = /mptest/mptest.py
    PATH_INFO = /

  Requested URL: /mptest/mptest.py/abc/
    Actual SCRIPT_NAME = /mptest/mptest.py/abc
    Expected SCRIPT_NAME = /mptest/mptest.py
    PATH_INFO = /abc/

  Requested URL: /mptest/mptest.py/abc/123/
    Actual SCRIPT_NAME = /mptest/mptest.py/abc/123
    Expected SCRIPT_NAME = /mptest/mptest.py
    PATH_INFO = /abc/123/

When the request doesn't end with a forward slash there's no problem:

  Requested URL: /mptest/mptest.py
    Actual SCRIPT_NAME = /mptest/mptest.py
    Expected SCRIPT_NAME = /mptest/mptest.py
    PATH_INFO =

  Requested URL: /mptest/mptest.py/abc
    Actual SCRIPT_NAME = /mptest/mptest.py
    Expected SCRIPT_NAME = /mptest/mptest.py
    PATH_INFO = /abc

  Requested URL: /mptest/mptest.py/abc/123
    Actual SCRIPT_NAME = /mptest/mptest.py
    Expected SCRIPT_NAME = /mptest/mptest.py
    PATH_INFO = /abc/123

Here's the code I used to produce the above output:

-- begin .htaccess listing --
AddHandler python-program .py
PythonHandler mptest
PythonDebug On
-- end .htaccess listing -- 

-- begin mptest.py listing --
from mod_python import apache

def handler(req):
  req.content_type = 'text/plain'
  env = req.subprocess_env
  req.write('Requested URL: %s\n' % env['REQUEST_URI'])
  req.write('  Actual SCRIPT_NAME = %s\n' % env['SCRIPT_NAME'])
  fixenv(env)
  req.write('  Expected SCRIPT_NAME = %s\n' % env['SCRIPT_NAME'])
  req.write('  PATH_INFO = %s\n' % env.get('PATH_INFO', ''))
  return apache.OK

# This is only a partial fix, does not work in the presence
# of double slashes in the PATH_INFO segment
def fixenv(env):
  path_info = env.get('PATH_INFO', '')
  if path_info and path_info[-1] == '/':
    script_name = env['SCRIPT_NAME']
    path_len = len(path_info) - 1
    if path_len:
      assert script_name[-path_len:] == path_info[:-1]
      env['SCRIPT_NAME'] = script_name[:-path_len]
    else:
      assert script_name[-1] == '/'
      env['SCRIPT_NAME'] = script_name[:-1]
-- end mptest.py listing --

This behavior only seems to occur in mod_python. SCRIPT_NAME does seem to
have the right value in CGI scripts.

- Russ

From grisha at modpython.org  Sat Aug  9 13:13:09 2003
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 22:04:05 2004
Subject: [mod_python] script_name bug?
In-Reply-To: <bh32ej$m9l$1@main.gmane.org>
References: <bh32ej$m9l$1@main.gmane.org>
Message-ID: <20030809123926.T83158@onyx.ispol.com>


Russel -

Since mod_python isn't a CGI environment (and doesn't care to be one
either), the definition of SCRIPT_NAME is rather blurry.

In CGI it is meant to refer to the script which is executed as a separate
process - in mod_python there is no separate process, and the file
containing the code isn't located by the web server, but rather follows
the Python sys.path search rules.

I don't think it would be right to tinker with what req.subprocess_env
contains - it should return whatever apache put there, uncensored, so to
that degree it's not a bug as far as I am concerned.

P.S. If you look at build_cgi_env() in apache.py, it seems to adress this
issue.

Grisha

On Sat, 9 Aug 2003, Russell Yanofsky wrote:

> I've noticed that req.subprocess_env['SCRIPT_NAME'] seems to have the wrong
> value whenever the requested URL ends in a forward slash. This happens with
> mod_python 3.0.3 and apache 2.0.47. Here are some examples:
>
>   Requested URL: /mptest/mptest.py/
>     Actual SCRIPT_NAME = /mptest/mptest.py/
>     Expected SCRIPT_NAME = /mptest/mptest.py
>     PATH_INFO = /
>
>   Requested URL: /mptest/mptest.py/abc/
>     Actual SCRIPT_NAME = /mptest/mptest.py/abc
>     Expected SCRIPT_NAME = /mptest/mptest.py
>     PATH_INFO = /abc/
>
>   Requested URL: /mptest/mptest.py/abc/123/
>     Actual SCRIPT_NAME = /mptest/mptest.py/abc/123
>     Expected SCRIPT_NAME = /mptest/mptest.py
>     PATH_INFO = /abc/123/
>
> When the request doesn't end with a forward slash there's no problem:
>
>   Requested URL: /mptest/mptest.py
>     Actual SCRIPT_NAME = /mptest/mptest.py
>     Expected SCRIPT_NAME = /mptest/mptest.py
>     PATH_INFO =
>
>   Requested URL: /mptest/mptest.py/abc
>     Actual SCRIPT_NAME = /mptest/mptest.py
>     Expected SCRIPT_NAME = /mptest/mptest.py
>     PATH_INFO = /abc
>
>   Requested URL: /mptest/mptest.py/abc/123
>     Actual SCRIPT_NAME = /mptest/mptest.py
>     Expected SCRIPT_NAME = /mptest/mptest.py
>     PATH_INFO = /abc/123
>
> Here's the code I used to produce the above output:
>
> -- begin .htaccess listing --
> AddHandler python-program .py
> PythonHandler mptest
> PythonDebug On
> -- end .htaccess listing --
>
> -- begin mptest.py listing --
> from mod_python import apache
>
> def handler(req):
>   req.content_type = 'text/plain'
>   env = req.subprocess_env
>   req.write('Requested URL: %s\n' % env['REQUEST_URI'])
>   req.write('  Actual SCRIPT_NAME = %s\n' % env['SCRIPT_NAME'])
>   fixenv(env)
>   req.write('  Expected SCRIPT_NAME = %s\n' % env['SCRIPT_NAME'])
>   req.write('  PATH_INFO = %s\n' % env.get('PATH_INFO', ''))
>   return apache.OK
>
> # This is only a partial fix, does not work in the presence
> # of double slashes in the PATH_INFO segment
> def fixenv(env):
>   path_info = env.get('PATH_INFO', '')
>   if path_info and path_info[-1] == '/':
>     script_name = env['SCRIPT_NAME']
>     path_len = len(path_info) - 1
>     if path_len:
>       assert script_name[-path_len:] == path_info[:-1]
>       env['SCRIPT_NAME'] = script_name[:-path_len]
>     else:
>       assert script_name[-1] == '/'
>       env['SCRIPT_NAME'] = script_name[:-1]
> -- end mptest.py listing --
>
> This behavior only seems to occur in mod_python. SCRIPT_NAME does seem to
> have the right value in CGI scripts.
>
> - Russ
>
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>
From damon at asianreflection.com  Sun Aug 10 15:05:31 2003
From: damon at asianreflection.com (Damon Lynch)
Date: Fri Jan  9 22:04:05 2004
Subject: [mod_python] Cannot run test script: (Re)importing module 'mptest'
Message-ID: <1060484731.2960.94.camel@damon.asianreflection.com>

Hi,

There is an example test script in:

http://www.modpython.org/live/current/doc-html/inst-testing.html

I cannot get the example test script to run: the "Hello World" is being
dumped to the browser incorrectly - the browser prompts to save it,
instead of displaying it.  I've checked and rechecked (and rechecked
again!!) and I believe I've followed the instructions as best I can.

I'm running (on Mandrake 9.1):

apache2-2.0.47-1.1mdk
apache2-mod_python-2.0.47_3.0.3-4mdk
python-2.2.2-6mdk

httpd2.conf contains:

LoadModule python_module                 extramodules/mod_python.so

commonhttpd.conf contains:

<Directory "/var/www/html/test/">
  AddHandler python-program .py
  PythonHandler mptest
  PythonDebug On
</Directory>

the apache error log shows:

[notice] mod_python: (Re)importing module 'mptest'

the URL I'm using is:
http://myserver/test/mptest

Any help is much appreciated!

Thanks
Damon

From rey4 at columbia.edu  Sat Aug  9 23:31:56 2003
From: rey4 at columbia.edu (Russell Yanofsky)
Date: Fri Jan  9 22:04:05 2004
Subject: [mod_python] Re: script_name bug?
References: <bh32ej$m9l$1@main.gmane.org>
	<20030809123926.T83158@onyx.ispol.com>
Message-ID: <bh4ebb$qlq$1@sea.gmane.org>

Gregory (Grisha) Trubetskoy wrote:
> Russel -
>
> Since mod_python isn't a CGI environment (and doesn't care to be one
> either), the definition of SCRIPT_NAME is rather blurry.

It might be blurry when a directory handler is used, but it's not at all
blurry in
this case, where mod_python is acting as a handler for requests for
.py files. SCRIPT_NAME should simply point to the .py file that has
been requested.

> In CGI it is meant to refer to the script which is executed as a
> separate process - in mod_python there is no separate process, and
> the file containing the code isn't located by the web server, but
> rather follows the Python sys.path search rules.

The CGI specification may define SCRIPT_NAME in terms of processes and
script files, but the SCRIPT_NAME is not just used for CGI. It's used in PHP
and ASP and other web interfaces, and is also useful in mod_python when
mod_python doesn't mangle it.

> I don't think it would be right to tinker with what req.subprocess_env
> contains - it should return whatever apache put there, uncensored, so
> to that degree it's not a bug as far as I am concerned.

But, AFAICT, it is tinkering with the value. Under the apache CGI
environment, the SCRIPT_NAME value is just the portion of the URL pointing
at the script being handled, but in mod_python when the request ends in a
slash, the value has extra stuff appended. So mod_python must be doing
something that mod_cgi is not.

> P.S. If you look at build_cgi_env() in apache.py, it seems to adress
> this issue.

That code does sort of address this issue, but in an indirect way. Instead
of using the mangled SCRIPT_NAME value in subprocess_env, it recomputes it
using req.uri and req.path_info. This is similar to the workaround I used in
my last posting, and it also will fail in the presence of double slashes in
PATH_INFO. It would be better to fix this bug instead of using these
unreliable workarounds.

- Russ


From greenbeard400 at yahoo.com  Sun Aug 10 12:40:33 2003
From: greenbeard400 at yahoo.com (Greenbeard)
Date: Fri Jan  9 22:04:05 2004
Subject: [mod_python] publisher handler  and form data 
Message-ID: <20030810194033.35760.qmail@web21301.mail.yahoo.com>

I am having trouble getting some info from the
req.form variable. 

I have a form with <input> tags like
<input type="text" name="ID" value="" size="40"
maxlength="255">


now I can get the field name and the value easily 
using something like :

    for field in form.keys():    
            value = form.__getitem__(field)

etc
   

but I can not seem to get the type or size or any
other input tag variables. To me it looks like this is
not supported by mod_python or am I just not going
about it correctly?  



Thanks,

gb400


__________________________________
Do you Yahoo!?
Yahoo! SiteBuilder - Free, easy-to-use web site design software
http://sitebuilder.yahoo.com
From rey4 at columbia.edu  Sun Aug 10 19:02:13 2003
From: rey4 at columbia.edu (Russell Yanofsky)
Date: Fri Jan  9 22:04:05 2004
Subject: [mod_python] Re: publisher handler  and form data
References: <20030810194033.35760.qmail@web21301.mail.yahoo.com>
Message-ID: <bh6itj$co6$1@sea.gmane.org>

Greenbeard wrote:
> I am having trouble getting some info from the
> req.form variable.
>
> I have a form with <input> tags like
> <input type="text" name="ID" value="" size="40"
> maxlength="255">
>
>
> now I can get the field name and the value easily
> using something like :
>
>     for field in form.keys():
>             value = form.__getitem__(field)
>
> etc
>
>
> but I can not seem to get the type or size or any
> other input tag variables. To me it looks like this is
> not supported by mod_python or am I just not going
> about it correctly?

You can't read those values with mod_python (or anything else that runs at
the server) because the browser does not send them. The only thing the
browser sends to the server is a list of (name, value) pairs

- Russ


From rey4 at columbia.edu  Sun Aug 10 19:07:10 2003
From: rey4 at columbia.edu (Russell Yanofsky)
Date: Fri Jan  9 22:04:06 2004
Subject: [mod_python] 
	Re: Cannot run test script: (Re)importing module 'mptest'
References: <1060484731.2960.94.camel@damon.asianreflection.com>
Message-ID: <bh6j6s$d1t$1@sea.gmane.org>

Damon Lynch wrote:
> Hi,
> 
> There is an example test script in:
> 
> http://www.modpython.org/live/current/doc-html/inst-testing.html
> 
> I cannot get the example test script to run
> ...
> the URL I'm using is:
> http://myserver/test/mptest
> 

Should that be http://myserver/test/mptest.py ?

- Russ

From rey4 at columbia.edu  Sun Aug 10 19:10:31 2003
From: rey4 at columbia.edu (Russell Yanofsky)
Date: Fri Jan  9 22:04:06 2004
Subject: [mod_python] Re: Help with mod_python install
References: <768D32B675BED311968F009027DE9E3001D01043@rocky.itc.nrcs.usda.gov>
Message-ID: <bh6jd5$dc8$1@sea.gmane.org>

Geter, Frank wrote:
> I am having trouble getting python scripts to run after installing
> mod_python from a Mandrake 9.1 rpm.

So what happens when you try to run them? Is there an error sent to the
browser or the apache error log?

- Russ


From grisha at modpython.org  Sun Aug 10 20:21:59 2003
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 22:04:06 2004
Subject: [mod_python] Re: script_name bug?
In-Reply-To: <bh4ebb$qlq$1@sea.gmane.org>
References: <bh32ej$m9l$1@main.gmane.org>
	<20030809123926.T83158@onyx.ispol.com> <bh4ebb$qlq$1@sea.gmane.org>
Message-ID: <20030810200027.R92644@onyx.ispol.com>


On Sat, 9 Aug 2003, Russell Yanofsky wrote:

> Gregory (Grisha) Trubetskoy wrote:
> > Russel -
> >
> > Since mod_python isn't a CGI environment (and doesn't care to be one
> > either), the definition of SCRIPT_NAME is rather blurry.
>
> It might be blurry when a directory handler is used, but it's not at all
> blurry in this case, where mod_python is acting as a handler for
> requests for .py files. SCRIPT_NAME should simply point to the .py file
> that has been requested.

Well, the file requested doesn't have anything to do with what
PythonHandler specifies, e.g. in your example it will respond just the
same with requested url of "/mptest/blahblah.py/abc/123" instead of
"/mptest/mptest.py/abc/123". The question then becomes should SCRIPT_NAME
be "/mptest/mptest.py" or "/mptest/blahblah.py"?

> > I don't think it would be right to tinker with what req.subprocess_env
> > contains - it should return whatever apache put there, uncensored, so
> > to that degree it's not a bug as far as I am concerned.
>
> But, AFAICT, it is tinkering with the value.

It sort of does. There is a place in requestobject.c where it removes the
trailing slash for something, then puts it back, and now I don't remember
why it does it, but it was some rather esoteric condition that caused
apache to infinite-recursively call some function... Since I don't
remember what the reason was, I was always hesitant to remove that bit of
code. It was put in years ago back in the apache 1.2 days, so it might be
safe to remove in 2.0... I guess we can try it at least.

Grisha
From damon at asianreflection.com  Mon Aug 11 19:03:21 2003
From: damon at asianreflection.com (Damon Lynch)
Date: Fri Jan  9 22:04:06 2004
Subject: [mod_python]  Re: Cannot run test script: (Re)importing module
	'mptest'
In-Reply-To: <bh6j6s$d1t$1@sea.gmane.org>
References: <1060484731.2960.94.camel@damon.asianreflection.com>
	 <bh6j6s$d1t$1@sea.gmane.org>
Message-ID: <1060585401.8445.5.camel@damon.asianreflection.com>

On Mon, 2003-08-11 at 11:07, Russell Yanofsky wrote:
> Damon Lynch wrote:
> > Hi,
> > 
> > There is an example test script in:
> > 
> > http://www.modpython.org/live/current/doc-html/inst-testing.html
> > 
> > I cannot get the example test script to run
> > ...
> > the URL I'm using is:
> > http://myserver/test/mptest
> > 
> 
> Should that be http://myserver/test/mptest.py ?
> 

Hi Russ,

That appears to make no difference.  When I inspect the headers I'm
getting the output as application/x-python instead of text/html:

HTTP/1.1 200 OKCRLF
Date: Mon, 11 Aug 2003 06:56:49 GMTCRLF
Server: Apache-AdvancedExtranetServer/2.0.47 (Mandrake Linux/1.1mdk) mod_python/3.0.3 Python/2.2.2 mod_ssl/2.0.47 OpenSSL/0.9.7aCRLF
Content-Location: mptest.pyCRLF
Vary: negotiate,acceptCRLF
TCN: choiceCRLF
Set-Cookie: Apache=207.200.81.211.1060585009151968; path=/; max-age=1209600CRLF
Connection: closeCRLF
Content-Type: application/x-pythonCRLF
Expires: Mon, 11 Aug 2003 06:56:49 GMTCRLF
CRLF
Hello World!


I'm bamboozled at this point!

Damon

From davidf at sjsoft.com  Mon Aug 11 09:23:51 2003
From: davidf at sjsoft.com (David Fraser)
Date: Fri Jan  9 22:04:06 2004
Subject: [mod_python]  Re: Cannot run test script: (Re)importing module
 'mptest'
In-Reply-To: <1060585401.8445.5.camel@damon.asianreflection.com>
References: <1060484731.2960.94.camel@damon.asianreflection.com>
	<bh6j6s$d1t$1@sea.gmane.org>
	<1060585401.8445.5.camel@damon.asianreflection.com>
Message-ID: <3F374487.7050906@sjsoft.com>

Damon Lynch wrote:

>On Mon, 2003-08-11 at 11:07, Russell Yanofsky wrote:
>  
>
>>Damon Lynch wrote:
>>    
>>
>>>Hi,
>>>
>>>There is an example test script in:
>>>
>>>http://www.modpython.org/live/current/doc-html/inst-testing.html
>>>
>>>I cannot get the example test script to run
>>>...
>>>the URL I'm using is:
>>>http://myserver/test/mptest
>>>
>>>      
>>>
>>Should that be http://myserver/test/mptest.py ?
>>
>>    
>>
>
>Hi Russ,
>
>That appears to make no difference.  When I inspect the headers I'm
>getting the output as application/x-python instead of text/html:
>
>HTTP/1.1 200 OKCRLF
>Date: Mon, 11 Aug 2003 06:56:49 GMTCRLF
>Server: Apache-AdvancedExtranetServer/2.0.47 (Mandrake Linux/1.1mdk) mod_python/3.0.3 Python/2.2.2 mod_ssl/2.0.47 OpenSSL/0.9.7aCRLF
>Content-Location: mptest.pyCRLF
>Vary: negotiate,acceptCRLF
>TCN: choiceCRLF
>Set-Cookie: Apache=207.200.81.211.1060585009151968; path=/; max-age=1209600CRLF
>Connection: closeCRLF
>Content-Type: application/x-pythonCRLF
>Expires: Mon, 11 Aug 2003 06:56:49 GMTCRLF
>CRLF
>Hello World!
>
>
>I'm bamboozled at this point!
>
>Damon
>  
>
So the content type is being set to application/x-python ... it seems 
likely to me that somewhere in your Apache configuration (mime.types?) 
you've got it set to return this mime type ... do a search for 
application/x-python in your Apache conf directory files and see what 
you find...

David

From rey4 at columbia.edu  Mon Aug 11 14:05:22 2003
From: rey4 at columbia.edu (Russell Yanofsky)
Date: Fri Jan  9 22:04:06 2004
Subject: [mod_python] Re: Re: script_name bug?
References: 
	<bh32ej$m9l$1@main.gmane.org><20030809123926.T83158@onyx.ispol.com>
	<bh4ebb$qlq$1@sea.gmane.org> <20030810200027.R92644@onyx.ispol.com>
Message-ID: <bh8lt0$hkm$1@sea.gmane.org>

Gregory (Grisha) Trubetskoy wrote:
> On Sat, 9 Aug 2003, Russell Yanofsky wrote:
>
>> Gregory (Grisha) Trubetskoy wrote:
>>> Russel -
>>>
>>> Since mod_python isn't a CGI environment (and doesn't care to be one
>>> either), the definition of SCRIPT_NAME is rather blurry.
>>
>> It might be blurry when a directory handler is used, but it's not at
>> all blurry in this case, where mod_python is acting as a handler for
>> requests for .py files. SCRIPT_NAME should simply point to the .py
>> file that has been requested.
>
> Well, the file requested doesn't have anything to do with what
> PythonHandler specifies, e.g. in your example it will respond just the
> same with requested url of "/mptest/blahblah.py/abc/123" instead of
> "/mptest/mptest.py/abc/123". The question then becomes should
> SCRIPT_NAME be "/mptest/mptest.py" or "/mptest/blahblah.py"?

It should be /mptest/blahblah.py, because that's the .py file that the
client requested. In general, it makes sense for SCRIPT_NAME to be a URL
to the file being handled, not the to the handler. Returning a URL to the
the python handler file would be equivalent to returning a url to mod_cgi.c
in a CGI request. This doesn't make sense and wouldn't be useful.

>>> I don't think it would be right to tinker with what
>>> req.subprocess_env contains - it should return whatever apache put
>>> there, uncensored, so to that degree it's not a bug as far as I am
>>> concerned.
>>
>> But, AFAICT, it is tinkering with the value.
>
> It sort of does. There is a place in requestobject.c where it removes
> the trailing slash for something, then puts it back, and now I don't
> remember why it does it, but it was some rather esoteric condition
> that caused apache to infinite-recursively call some function...
> Since I don't remember what the reason was, I was always hesitant to
> remove that bit of code. It was put in years ago back in the apache
> 1.2 days, so it might be safe to remove in 2.0... I guess we can try
> it at least.

I found the code you're talking about in get_request_object() in
src/mod_python.c. I removed the special case for the trailing slash, and
everything now seems to work correctly. Patches are attached for mod_python
2.7.8 and mod_python 3.0.3. I've tested them with apache 1.3.28 and apache
2.0.47 using the SetHandler directive and AddHandler directives, and didn't
encounter any errors, infinite loops, or other unexpected behavior.

- Russ
-------------- next part --------------
A non-text attachment was scrubbed...
Name: mod_python-2.7.8.diff
Type: application/octet-stream
Size: 1229 bytes
Desc: not available
Url : http://mailman.modpython.org/pipermail/mod_python/attachments/20030811/8718dca2/mod_python-2.7.8-0003.obj
-------------- next part --------------
A non-text attachment was scrubbed...
Name: mod_python-3.0.3.diff
Type: application/octet-stream
Size: 1544 bytes
Desc: not available
Url : http://mailman.modpython.org/pipermail/mod_python/attachments/20030811/8718dca2/mod_python-3.0.3-0003.obj
From grisha at modpython.org  Mon Aug 11 22:12:01 2003
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 22:04:06 2004
Subject: [mod_python] Re: Re: script_name bug?
In-Reply-To: <bh8lt0$hkm$1@sea.gmane.org>
References: <bh32ej$m9l$1@main.gmane.org><20030809123926.T83158@onyx.ispol.com>
	<bh4ebb$qlq$1@sea.gmane.org> <20030810200027.R92644@onyx.ispol.com>
	<bh8lt0$hkm$1@sea.gmane.org>
Message-ID: <20030811221051.B19156@onyx.ispol.com>


> Patches are attached for mod_python 2.7.8 and mod_python 3.0.3.

Thanks, patches are always welcome!

Grisha
From damon at asianreflection.com  Tue Aug 12 21:46:34 2003
From: damon at asianreflection.com (Damon Lynch)
Date: Fri Jan  9 22:04:06 2004
Subject: [mod_python]  Re: Cannot run test script: (Re)importing module
	'mptest'
In-Reply-To: <3F374487.7050906@sjsoft.com>
References: <1060484731.2960.94.camel@damon.asianreflection.com>
	 <bh6j6s$d1t$1@sea.gmane.org>
	 <1060585401.8445.5.camel@damon.asianreflection.com>
	 <3F374487.7050906@sjsoft.com>
Message-ID: <1060681593.12636.18.camel@damon.asianreflection.com>

On Mon, 2003-08-11 at 19:23, David Fraser wrote:
> >
> So the content type is being set to application/x-python ... it seems 
> likely to me that somewhere in your Apache configuration (mime.types?) 
> you've got it set to return this mime type ... do a search for 
> application/x-python in your Apache conf directory files and see what 
> you find...
> 

Thanks David.  That did the trick.  It seems to me that someone may like
to review putting the above advice on this page:

http://www.modpython.org/live/current/doc-html/inst-apacheconfig.html

Since Mandrake comes by default with:

application/x-python                      py
application/x-python-bytecode             pyc

It would certainly help people like me, who know a lot more about python
than they do about apache!! ;-)

Damon

From donegal at myrealbox.com  Thu Aug 14 00:39:43 2003
From: donegal at myrealbox.com (William J. Fellows)
Date: Fri Jan  9 22:04:06 2004
Subject: [mod_python] YAQA mod_python and the missing _apache module
Message-ID: <1634432327.20030814003943@myrealbox.com>

I'm sorry to trouble the list but I have not been able to get it
mod_python to work.  My setup is Python 2.2.2, Apache 2.0.47,
mod_python 3.0.3  Python root directory is e:\Python22  Apache's root
is E:\Program Files\Apache Group\Apache2  Windows 2k Professional

I have a sample python script sitting out in cgi-bin and it works just
fine.  The mptest file though, horks everytime.  Feel free to beat on
my server. 
http://65.26.28.214/cgi-bin/sample.py
http://65.26.28.214/cgi-bin/mptest.py


The error message is:
Premature end of script headers: mptest.py
Traceback (most recent call last):
  File "E:\Program Files\Apache Group\Apache2\cgi-bin\mptest.py", line 1, in ?
    from mod_python import apache
  File "E:\Python22\Lib\site-packages\mod_python\apache.py", line 67, in ?
    import _apache
ImportError: No module named _apache


Been here,
http://www.modpython.org/FAQ/faqw.py?req=show&file=faq02.001.htp
and I've been there
http://www.modpython.org/FAQ/faqw.py?req=show&file=faq02.002.htp

I believe I understand what that says and everything I could find about
it from the archived email messages but unless Apache is invoking the
python enviroment outside of apache, I have no clue what's going
wrong.  And if it is doing it outside, I have no idea how it got that
way.

Saw both pythonhome and pythonpath referenced so I've touched both of
them.

PYTHONHOME=e:\python22
PYTHONPATH=e:\python22;e:\python22\lib;E:\Python22\Lib\site-packages\mod_python;E:\Python22\Lib\site-packages

I'm at my wits end.  I know I can get Python running under IIS but as
I don't feel like patching daily, I thought I'd give Apache a whirl.
I've dutifully scoured the archives and applied what I saw there but
no go so anyone with some insight to offer would be worshiped from
afar.

/bill

p.s.

The link for full archives does not work.
http://www.modpython.org/pipermail/mod_python.mbox/mod_python.mbox
Fortunately, wget -R -a.gz worked just fine.




The relevant parts of my conf file look like

=-=-=-=-=-=-=-=-BEGIN httpd.conf=-=-====-=-=-=-=-=-=--=-
LoadModule python_module modules/mod_python.so
ScriptInterpreterSource Registry

<Directory "E:/Program Files/Apache Group/Apache2/htdocs">
    AddHandler python-program .py
#   I tried combinations of the next two lines but to no avail
#    AddHandler cgi-script .py
#    PythonHandler mptest

    PythonHandler mod_python.publisher
    PythonDebug On

    Options Indexes FollowSymLinks
    AllowOverride None
    Order allow,deny
    Allow from all

</Directory>
=-=-=-=-=-=-=-=-END httpd.conf=-=-====-=-=-=-=-=-=--=-


=-=-=-=-=-=-=-=-BEGIN sample.py=-=-====-=-=-=-=-=-=--=-
print "Content-type: text/html"
print
print "<pre>"
import os, sys
print "<strong>Python %s</strong>" % sys.version
for (x,y) in os.environ.items():
   print "%s\t%s" % (x, y)

print "\nsys.path"
for p in sys.path:
   print p
print "</pre>"

=-=-=-=-=-=-=-=-END sample.py=-=-====-=-=-=-=-=-=--=-


=-=-=-=-=-=-=-=-BEGIN mptest.py=-=-====-=-=-=-=-=-=--=-
from mod_python import apache

def handler(req):
    req.write("Hello World!")
    return apache.OK

=-=-=-=-=-=-=-=-END mptest.py=-=-====-=-=-=-=-=-=--=-

From davidf at sjsoft.com  Thu Aug 14 09:25:36 2003
From: davidf at sjsoft.com (David Fraser)
Date: Fri Jan  9 22:04:06 2004
Subject: [mod_python] YAQA mod_python and the missing _apache module
In-Reply-To: <1634432327.20030814003943@myrealbox.com>
References: <1634432327.20030814003943@myrealbox.com>
Message-ID: <3F3B3970.40300@sjsoft.com>

William J. Fellows wrote:

>The error message is:
>Premature end of script headers: mptest.py
>Traceback (most recent call last):
>  File "E:\Program Files\Apache Group\Apache2\cgi-bin\mptest.py", line 1, in ?
>    from mod_python import apache
>  File "E:\Python22\Lib\site-packages\mod_python\apache.py", line 67, in ?
>    import _apache
>ImportError: No module named _apache
>
>  
>
 From this error, it means you are putting mptest.py in your cgi-bin 
directory. If it is in there it is probably being run as an external 
Python script, which is not what you want as you won't have access to 
the mod_python internals.
Try moving it to a standard directory, then in an .htaccess or 
<Directory> section for that directory, make sure you have
  AddHandler python-program .py
  PythonHandler mptest.py
  PythonDebug On
(that's the correct combination out of what you quoted below).
Then feed back if that doesn't work.

>Been here,
>http://www.modpython.org/FAQ/faqw.py?req=show&file=faq02.001.htp
>and I've been there
>http://www.modpython.org/FAQ/faqw.py?req=show&file=faq02.002.htp
>
>I believe I understand what that says and everything I could find about
>it from the archived email messages but unless Apache is invoking the
>python enviroment outside of apache, I have no clue what's going
>wrong.  And if it is doing it outside, I have no idea how it got that
>way.
>
>Saw both pythonhome and pythonpath referenced so I've touched both of
>them.
>
>PYTHONHOME=e:\python22
>PYTHONPATH=e:\python22;e:\python22\lib;E:\Python22\Lib\site-packages\mod_python;E:\Python22\Lib\site-packages
>  
>
It looks from your log above like the path is fine, as you are importing 
mod_python.apache OK.
You will only be able to import _apache if you are really running inside 
mod_python.
If you want to test the path, comment out the import of apache (you can 
return 200 instead of apache.OK) and import sys ; in the handler do 
req.write("Path: %r\n" % sys.path) and you will get the actual value 
printed out.

Hope that helps
David


From davidf at sjsoft.com  Thu Aug 14 15:54:39 2003
From: davidf at sjsoft.com (David Fraser)
Date: Fri Jan  9 22:04:06 2004
Subject: [mod_python] Cookies and redirect...
Message-ID: <3F3B949F.8030806@sjsoft.com>

Hi

I came across the following problem and wondered if there was a workaround.
Basically I want to set a cookie in a certain directory, and at the same 
time issue a Redirect to another place.
So I wanted to do:
  req.headers_out.add('Set-Cookie', morsel.OutputString())
  req.headers_out.add('Location:', location)
  return apache.HTTP_MOVED_TEMPORARILY

However, I found that as soon as I return the HTTP_MOVED_TEMPORARILY, 
the Set-Cookie string seems to be removed from the headers going to the 
client (this was tested by using the livehttpheaders extension to Firebird).
I couldn't work out where in the code that was happening but suspect 
that it is standard Apache behaviour.
Is this because I'm not supposed to be allowed to do this, or is it odd?

(I have a workaround of having a page with a meta http-equiv="refresh", 
but wondered if there is a way to get it working as would like...)

Thanks
David


From grisha at modpython.org  Thu Aug 14 10:17:14 2003
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 22:04:06 2004
Subject: [mod_python] Cookies and redirect...
In-Reply-To: <3F3B949F.8030806@sjsoft.com>
References: <3F3B949F.8030806@sjsoft.com>
Message-ID: <20030814100919.U55932@onyx.ispol.com>


This is a feature of Apache. When it sees an error response (all 204 (no
content), 3xx (redirect), 4xx (client error) and 5xx (server error)),
which includes HTTP_MOVED_TEMPORARILY (even though it's not an error
technically), it sends out only req.err_headers_out. It does make a
special provision for the Location header and copy it into err_headers_out
if it's not already there, which is why it makes it through.

You can send both headers by either:

   req.err_headers_out.add('Set-Cookie', morsel.OutputString())
   req.err_headers_out.add('Location:', location)
   return apache.HTTP_MOVED_TEMPORARILY

or

   req.headers_out.add('Set-Cookie', morsel.OutputString())
   req.status = apache.HTTP_MOVED_TEMPORARILY
   return apache.OK

Grisha


On Thu, 14 Aug 2003, David Fraser wrote:

> Hi
>
> I came across the following problem and wondered if there was a workaround.
> Basically I want to set a cookie in a certain directory, and at the same
> time issue a Redirect to another place.
> So I wanted to do:
>   req.headers_out.add('Set-Cookie', morsel.OutputString())
>   req.headers_out.add('Location:', location)
>   return apache.HTTP_MOVED_TEMPORARILY
>
> However, I found that as soon as I return the HTTP_MOVED_TEMPORARILY,
> the Set-Cookie string seems to be removed from the headers going to the
> client (this was tested by using the livehttpheaders extension to Firebird).
> I couldn't work out where in the code that was happening but suspect
> that it is standard Apache behaviour.
> Is this because I'm not supposed to be allowed to do this, or is it odd?
>
> (I have a workaround of having a page with a meta http-equiv="refresh",
> but wondered if there is a way to get it working as would like...)
>
> Thanks
> David
>
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>
From davidf at sjsoft.com  Thu Aug 14 17:19:43 2003
From: davidf at sjsoft.com (David Fraser)
Date: Fri Jan  9 22:04:06 2004
Subject: [mod_python] Cookies and redirect...
In-Reply-To: <20030814100919.U55932@onyx.ispol.com>
References: <3F3B949F.8030806@sjsoft.com>
	<20030814100919.U55932@onyx.ispol.com>
Message-ID: <3F3BA88F.7050202@sjsoft.com>

Thanks for the quick response!
This is working nicely now...

David

Gregory (Grisha) Trubetskoy wrote:

>This is a feature of Apache. When it sees an error response (all 204 (no
>content), 3xx (redirect), 4xx (client error) and 5xx (server error)),
>which includes HTTP_MOVED_TEMPORARILY (even though it's not an error
>technically), it sends out only req.err_headers_out. It does make a
>special provision for the Location header and copy it into err_headers_out
>if it's not already there, which is why it makes it through.
>
>You can send both headers by either:
>
>   req.err_headers_out.add('Set-Cookie', morsel.OutputString())
>   req.err_headers_out.add('Location:', location)
>   return apache.HTTP_MOVED_TEMPORARILY
>
>or
>
>   req.headers_out.add('Set-Cookie', morsel.OutputString())
>   req.status = apache.HTTP_MOVED_TEMPORARILY
>   return apache.OK
>
>Grisha
>
>
>On Thu, 14 Aug 2003, David Fraser wrote:
>
>  
>
>>Hi
>>
>>I came across the following problem and wondered if there was a workaround.
>>Basically I want to set a cookie in a certain directory, and at the same
>>time issue a Redirect to another place.
>>So I wanted to do:
>>  req.headers_out.add('Set-Cookie', morsel.OutputString())
>>  req.headers_out.add('Location:', location)
>>  return apache.HTTP_MOVED_TEMPORARILY
>>
>>However, I found that as soon as I return the HTTP_MOVED_TEMPORARILY,
>>the Set-Cookie string seems to be removed from the headers going to the
>>client (this was tested by using the livehttpheaders extension to Firebird).
>>I couldn't work out where in the code that was happening but suspect
>>that it is standard Apache behaviour.
>>Is this because I'm not supposed to be allowed to do this, or is it odd?
>>
>>(I have a workaround of having a page with a meta http-equiv="refresh",
>>but wondered if there is a way to get it working as would like...)
>>
>>Thanks
>>David
>>
>>
>>_______________________________________________
>>Mod_python mailing list
>>Mod_python@modpython.org
>>http://mailman.modpython.org/mailman/listinfo/mod_python
>>
>>    
>>
>
>  
>



From rey4 at columbia.edu  Sat Aug 16 15:35:11 2003
From: rey4 at columbia.edu (Russell Yanofsky)
Date: Fri Jan  9 22:04:06 2004
Subject: [mod_python] Re: Re: Re: script_name bug?
References: 
	<bh32ej$m9l$1@main.gmane.org><20030809123926.T83158@onyx.ispol.com><bh4ebb$qlq$1@sea.gmane.org>
	<20030810200027.R92644@onyx.ispol.com><bh8lt0$hkm$1@sea.gmane.org>
	<20030811221051.B19156@onyx.ispol.com>
Message-ID: <bhm118$fr8$1@sea.gmane.org>

Gregory (Grisha) Trubetskoy wrote:
>> Patches are attached for mod_python 2.7.8 and mod_python 3.0.3.
>
> Thanks, patches are always welcome!

I should hope so. Will these changes be incorporated in future releases of
mod_python?

- Russ


From neel at mediapulse.com  Wed Aug 20 17:51:47 2003
From: neel at mediapulse.com (Michael C. Neel)
Date: Fri Jan  9 22:04:06 2004
Subject: [mod_python] pysco + mod_python?
Message-ID: <C0FC22C08B82074A88B50061764157776B9618@johnson.mediapulse.net>

Has anyone tried to use pysco (http://psyco.sourceforge.net/) with
mod_python to speed up programs?  Is this something to try, or is it not
safe to use under mod_python?

Mike

From davidf at sjsoft.com  Thu Aug 21 07:34:55 2003
From: davidf at sjsoft.com (David Fraser)
Date: Fri Jan  9 22:04:06 2004
Subject: [mod_python] psyco + mod_python?
In-Reply-To: <C0FC22C08B82074A88B50061764157776B9618@johnson.mediapulse.net>
References: <C0FC22C08B82074A88B50061764157776B9618@johnson.mediapulse.net>
Message-ID: <3F4459FF.5070606@sjsoft.com>

Michael C. Neel wrote:

>Has anyone tried to use pysco (http://psyco.sourceforge.net/) with
>mod_python to speed up programs?  Is this something to try, or is it not
>safe to use under mod_python?
>
>Mike
>
>  
>
Hi

I have tried it and it seemed to work without problems, but I did not 
have a chance to profile it or verify that it was actually optimising 
stuff properly.
I can imagine that it would be great particularly for optimising short 
handlers and the modpython code itself.
It would be worth reporting your findings here if you do get it working 
as I am sure others are interested.

David

PS For those who don't know psyco, it is definitely worth checking out, 
does very intelligent JIT Python->assembly compilation based on type 
analysis.
Look at the web page mentioned above for more info

From mateusz at ant.gliwice.pl  Thu Aug 21 09:05:01 2003
From: mateusz at ant.gliwice.pl (Mateusz Korniak)
Date: Fri Jan  9 22:04:06 2004
Subject: [mod_python] pysco + mod_python?
In-Reply-To: <C0FC22C08B82074A88B50061764157776B9618@johnson.mediapulse.net>
References: <C0FC22C08B82074A88B50061764157776B9618@johnson.mediapulse.net>
Message-ID: <200308210905.02501.mateusz@ant.gliwice.pl>

On Wednesday 20 August 2003 23:51, Michael C. Neel wrote:
> Has anyone tried to use pysco (http://psyco.sourceforge.net/) with
> mod_python to speed up programs?  Is this something to try, or is it not
> safe to use under mod_python?

I tried but did not notice any speed up (psyco 1.0 and 1.1,mod_python 2.7.8). 
In fact, I didn't notice any problems either. Code was just 10% slower. :(. 
Perhaps It was case I just did dumb psyco.full() ...

-- 
Mateusz Korniak


From davidf at sjsoft.com  Thu Aug 21 09:23:03 2003
From: davidf at sjsoft.com (David Fraser)
Date: Fri Jan  9 22:04:06 2004
Subject: [mod_python] pysco + mod_python?
In-Reply-To: <200308210905.02501.mateusz@ant.gliwice.pl>
References: <C0FC22C08B82074A88B50061764157776B9618@johnson.mediapulse.net>
	<200308210905.02501.mateusz@ant.gliwice.pl>
Message-ID: <3F447357.3080102@sjsoft.com>

Mateusz Korniak wrote:

>On Wednesday 20 August 2003 23:51, Michael C. Neel wrote:
>  
>
>>Has anyone tried to use pysco (http://psyco.sourceforge.net/) with
>>mod_python to speed up programs?  Is this something to try, or is it not
>>safe to use under mod_python?
>>    
>>
>
>I tried but did not notice any speed up (psyco 1.0 and 1.1,mod_python 2.7.8). 
>In fact, I didn't notice any problems either. Code was just 10% slower. :(. 
>Perhaps It was case I just did dumb psyco.full() ...
>
>  
>
Sounds similar to my experience. Maybe we try out different profiling 
options and put together a guide on using psyco with mod_python...

David

From mike.looijmans at asml.com  Thu Aug 21 11:06:09 2003
From: mike.looijmans at asml.com (Mike Looijmans)
Date: Fri Jan  9 22:04:06 2004
Subject: [mod_python] Making an absolute URL
Message-ID: <01c367c3$75d9d680$926a1e6e@wsasd464>

As usual, there are many ways that lead to the same point.

I'm sending a 302 or 303 response to some queries to quickly redirect the
client to the 'next' page (for example after logging in is successful it
immediately proceeds to the 'calling' page by sending a "303 See Other").

I did this previously with a Refresh header, but that doesn't work in Lynx
for example, it "flashes" the screen, and the 303 was specifically meant for
this purpose.

Only trouble now is that the "Location" header in a 30x response must be an
absolute URL instead of a relative one. If I just supply a relative URL, the
browsers grudgingly accept it, but it's just not right. So if the user
request http://myhost:8080/foo/ i send a redirection to
http://myhost:8080/foo/bar by returning 302 (moved permanently) and add a
header "Location: bar". But accoring to HTTP spec (RFC2068), the location
header should be "Location: http://myhost:8080/foo/bar" instead.

It should be easy to turn the URL into an absolute one. However, there are
many ways to do this, and I wonder what is the one that will work for all
client and server configurations.

For example, i want the URL to remain as the user typed it, so that there's
a difference between using http://localhost/foo/bar or
http://localhost:80/foo/bar, between http://myhost.mydomain.com/ and
http://myhost/ etc, etc.

Probably, the "Host" header from the client is a good thing for this, but it
is only mandatory for HTTP/1.1 and not for 1.0 which many browsers still
use.

Mike.





-- 
The information contained in this communication and any attachments is confidential and may be privileged, and is for the sole use of the intended recipient(s). Any unauthorized review, use, disclosure or distribution is prohibited. If you are not the intended recipient, please notify the sender immediately by replying to this message and destroy all copies of this message and any attachments. ASML is neither liable for the proper and complete transmission of the information contained in this communication, nor for any delay in its receipt.


From greg at amstlc.com  Thu Aug 21 13:57:50 2003
From: greg at amstlc.com (Greg Unrein)
Date: Fri Jan  9 22:04:06 2004
Subject: [mod_python] Python 2.3/ modpython 3.0.3 problem
Message-ID: <3F45324E.4010402@amstlc.com>

I recently started working in Python 2.3 from 2.2.2 and after installing 
modpython 3.0.3 for the new Python 2.3 installation it seems that 
modpython is still using Python 2.2.2. This is under windows 2000 and 
I've removed the modpython install for python 2.2.2, so apache 
complains. Any help would be appreciated greatly!

Thanks,
Greg

From grisha at modpython.org  Thu Aug 21 19:31:50 2003
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 22:04:06 2004
Subject: [mod_python] Python 2.3/ modpython 3.0.3 problem
In-Reply-To: <3F45324E.4010402@amstlc.com>
References: <3F45324E.4010402@amstlc.com>
Message-ID: <20030821192853.L68478@onyx.ispol.com>


I don't recommend using mod_python 3.0.3 with Python 2.3, there are some
things that changed in 2.3 where it may not work.

Grisha

On Thu, 21 Aug 2003, Greg Unrein wrote:

> I recently started working in Python 2.3 from 2.2.2 and after installing
> modpython 3.0.3 for the new Python 2.3 installation it seems that
> modpython is still using Python 2.2.2. This is under windows 2000 and
> I've removed the modpython install for python 2.2.2, so apache
> complains. Any help would be appreciated greatly!
>
> Thanks,
> Greg
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>
From gnb at itga.com.au  Fri Aug 22 09:39:34 2003
From: gnb at itga.com.au (Gregory Bond)
Date: Fri Jan  9 22:04:06 2004
Subject: [mod_python] Making an absolute URL 
In-Reply-To: Your message of Thu, 21 Aug 2003 11:06:09 +0200.
Message-ID: <200308212339.JAA07072@lightning.itga.com.au>


mike.looijmans@asml.com said:
> Probably, the "Host" header from the client is a good thing for this,
> but it is only mandatory for HTTP/1.1 and not for 1.0 which many
> browsers still use. 

Most browsers still only claim HTTP/1.0, but nearly all of them use Host:
header. Most virtual hosting won't work without the Host header, so you'd have 
to go back to browsers from the IE/NS 3 era to find a problem. 

(IP addresses are getting scarce, so unless you use SSL and need IP-based 
vhosting, most web hosts only offer name-based vhosting.)



From sanctuary at terra.es  Sat Aug 23 20:13:31 2003
From: sanctuary at terra.es (Rix Sanctuary)
Date: Fri Jan  9 22:04:06 2004
Subject: [mod_python] 
	help!: modpython, howto pass results to a running php script?
Message-ID: <!~!UENERkVCMDkAAQACAAAAAAAAAAAAAAAAABgAAAAAAAAAUuS0GoPudku6WIdlnSUuwcKAAAAQAAAAtpwvdzFLvE++3Ot7HeNxvAEAAAAA@terra.es>

 
-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1


Hi there!

Have a python calculation module and I would like to include/work with the results in a seperate php script.
My code runs in a box with Apache/2.0.47(win32) mod_python/3.0.3 Python 2.2.3 Php/4.3.2

My python module is called from a php script like this:
    <?php require 'http://localhost/xxx/calc.py/'; ?>

   PHP   <----   CALC.PY    <----  BIGCALC.PY
			  |
			  |
	from mod_python import apache
 	import bigcalc

Is there an easy way to use the results yield by my python module in my php script as local variables?

Thanks in advance
rix

-----BEGIN PGP SIGNATURE-----
Version: PGP 8.0

iQA/AwUBP0euyhvgnt8VShhuEQLFngCaAoRawlJ9dMWyt3K9lNLge50QZa8AoMFc
QDO/ZjGHWV1PG889q/+ItxvJ
=erGk
-----END PGP SIGNATURE-----



From grisha at modpython.org  Sun Aug 24 13:05:02 2003
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 22:04:06 2004
Subject: [mod_python]  help!: modpython, howto pass results to a running
 php script?
In-Reply-To: <!~!UENERkVCMDkAAQACAAAAAAAAAAAAAAAAABgAAAAAAAAAUuS0GoPudku6WIdlnSUuwcKAAAAQAAAAtpwvdzFLvE++3Ot7HeNxvAEAAAAA@terra.es>
References: <!~!UENERkVCMDkAAQACAAAAAAAAAAAAAAAAABgAAAAAAAAAUuS0GoPudku6WIdlnSUuwcKAAAAQAAAAtpwvdzFLvE++3Ot7HeNxvAEAAAAA@terra.es>
Message-ID: <20030824130257.E16162@onyx.ispol.com>


I don't know first thing about PHP, but if it has a way of making a
sub-request and then capturing its output, that would be one way. Or if
PHP has access to request notes (req.notes in mod_python), there is
probably some way to use them as a way to pass information.

Grishas

On Sat, 23 Aug 2003, Rix Sanctuary wrote:

>
> -----BEGIN PGP SIGNED MESSAGE-----
> Hash: SHA1
>
>
> Hi there!
>
> Have a python calculation module and I would like to include/work with the results in a seperate php script.
> My code runs in a box with Apache/2.0.47(win32) mod_python/3.0.3 Python 2.2.3 Php/4.3.2
>
> My python module is called from a php script like this:
>     <?php require 'http://localhost/xxx/calc.py/'; ?>
>
>    PHP   <----   CALC.PY    <----  BIGCALC.PY
> 			  |
> 			  |
> 	from mod_python import apache
>  	import bigcalc
>
> Is there an easy way to use the results yield by my python module in my php script as local variables?
>
> Thanks in advance
> rix
>
> -----BEGIN PGP SIGNATURE-----
> Version: PGP 8.0
>
> iQA/AwUBP0euyhvgnt8VShhuEQLFngCaAoRawlJ9dMWyt3K9lNLge50QZa8AoMFc
> QDO/ZjGHWV1PG889q/+ItxvJ
> =erGk
> -----END PGP SIGNATURE-----
>
>
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>
From nelson at crynwr.com  Mon Aug 25 16:54:28 2003
From: nelson at crynwr.com (Russell Nelson)
Date: Fri Jan  9 22:04:06 2004
Subject: [mod_python] How do I serve up .html files?
Message-ID: <16202.30596.238589.112878@desk.crynwr.com>

Maybe this is really an Apache question, but it seems to me like it
ought to come up in a mod_python context as well.  Can't find it in
the documentation, the FAQ, or the mailing list archives
(Aug/Jul/Jun).

How do I cause my python script to be run when a .html file is accessed?
    http://angry-economics.russnelson.com/index.html

How do I cause my python script to be run when any old file is accessed?
    http://angry-economics.russnelson.com/

In other words, I want a handler which gets run no matter what the
rest of the URL is.  You'd think this would be in the documentation,
enabling people to make fully scripted sites, but it seems not to be.

I can't insert a /foo.py/ in there because I have to preserve all the
old URLs.

-- 
--My blog is at angry-economist.russnelson.com  | Free markets express in the
Crynwr sells support for free software  | PGPok | practical world our belief
521 Pleasant Valley Rd. | +1 315 268 1925 voice | that there is that of God
Potsdam, NY 13676-3213  | +1 315 268 9201 FAX   | in all people. -Chris V.
From synec at viscous.org  Mon Aug 25 14:36:41 2003
From: synec at viscous.org (john spurling)
Date: Fri Jan  9 22:04:06 2004
Subject: [mod_python] How do I serve up .html files?
In-Reply-To: <16202.30596.238589.112878@desk.crynwr.com>
References: <16202.30596.238589.112878@desk.crynwr.com>
Message-ID: <20030825213641.GR19969@c7c8.colobox.com>

On Mon, Aug 25, 2003 at 04:54:28PM -0400, Russell Nelson wrote:
> Maybe this is really an Apache question, but it seems to me like it
> ought to come up in a mod_python context as well.  Can't find it in
> the documentation, the FAQ, or the mailing list archives
> (Aug/Jul/Jun).
> 
> How do I cause my python script to be run when a .html file is accessed?
>     http://angry-economics.russnelson.com/index.html
> 
> How do I cause my python script to be run when any old file is accessed?
>     http://angry-economics.russnelson.com/
> 
> In other words, I want a handler which gets run no matter what the
> rest of the URL is.  You'd think this would be in the documentation,
> enabling people to make fully scripted sites, but it seems not to be.
> 
> I can't insert a /foo.py/ in there because I have to preserve all the
> old URLs.

i think you can do it using the "SetHandler" directive in httpd.conf,
like this:

<Directory "/path/to/document/root">
SetHandler python-program
PythonHandler mymodule
</Directory>

from there, mymodule.py (located in the document root) will handle all
requests. here's a sample to put in mymodule.py:

from mod_python import apache
def handler(req):
    req.content_type = 'text/plain'
    req.write("uri: %s" % req.uri)
    return apache.OK

voila. that'll print out whatever uri gets typed in.

-john

-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
Url : http://mailman.modpython.org/pipermail/mod_python/attachments/20030825/32b77b5c/attachment-0003.bin
From conrad at hep.caltech.edu  Mon Aug 25 14:42:04 2003
From: conrad at hep.caltech.edu (Conrad Steenberg)
Date: Fri Jan  9 22:04:06 2004
Subject: [mod_python] How do I serve up .html files?
In-Reply-To: <16202.30596.238589.112878@desk.crynwr.com>
References: <16202.30596.238589.112878@desk.crynwr.com>
Message-ID: <1061847724.32518.23.camel@heppc22>

Hi Russel

The way I do it is to have a handler that reposonds to GET requests. 
E.g. if you have a documentroot of /var/www/html:

<Directory /var/www/html>
       SetHandler python-program
       AddHandler python-program .py
       PythonDebug On
       PythonHandler my_handler
       DirectoryIndex myhandler.py
</Directory>

I.e. myhandler.py is the directory index. Then inside the handler
function in myhandler.py:

def handler(req):
  if req.method=='GET':
     # Get the name of the file requested
     inputname=reduce(lambda x,y:x+'/'+y,string.split(req.uri, '/')[1:])

     # Construct an outputname
     outputname='/var/www/html'+inputname
     
     # Send the file to the client
     send_file(req,outputname,0,-1) # Or your own function doing lots of req.write()'s
     return apache.OK


This is pseudo-code taken from another implmentation, so play around
with the inputname statement to get it right. But the idea is to get the
filename from req.uri, and then construct a real filesystem filename,
the contents of which can be sent to the client.

An implementation of the send_file() function above is attached, making
use of the req.write_file() function if available (I think it is in the
CVS version), or a slower version based on req.write()

HTH

Conrad


On Mon, 2003-08-25 at 13:54, Russell Nelson wrote:
> Maybe this is really an Apache question, but it seems to me like it
> ought to come up in a mod_python context as well.  Can't find it in
> the documentation, the FAQ, or the mailing list archives
> (Aug/Jul/Jun).
> 
> How do I cause my python script to be run when a .html file is accessed?
>     http://angry-economics.russnelson.com/index.html
> 
> How do I cause my python script to be run when any old file is accessed?
>     http://angry-economics.russnelson.com/
> 
> In other words, I want a handler which gets run no matter what the
> rest of the URL is.  You'd think this would be in the documentation,
> enabling people to make fully scripted sites, but it seems not to be.
> 
> I can't insert a /foo.py/ in there because I have to preserve all the
> old URLs.
-- 
Conrad Steenberg <conrad@hep.caltech.edu>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: clarens_file.py
Type: text/x-python
Size: 3547 bytes
Desc: not available
Url : http://mailman.modpython.org/pipermail/mod_python/attachments/20030825/886b9e84/clarens_file-0003.py
From neel at mediapulse.com  Mon Aug 25 18:40:48 2003
From: neel at mediapulse.com (Michael C. Neel)
Date: Fri Jan  9 22:04:06 2004
Subject: [mod_python] How do I serve up .html files?
Message-ID: <C0FC22C08B82074A88B50061764157776B962F@johnson.mediapulse.net>

> <Directory "/path/to/document/root">
> SetHandler python-program
> PythonHandler mymodule
> </Directory>
> 
> from there, mymodule.py (located in the document root) will handle all
> requests. here's a sample to put in mymodule.py:
> 
> from mod_python import apache
> def handler(req):
>     req.content_type = 'text/plain'
>     req.write("uri: %s" % req.uri)
>     return apache.OK
> 

This will answer for all files in that directory, including images so
make sure to check the req.uri for ".html" and return an apache.DECLINED
if it's not.  Otherwise your python module will have to serve up the
images too.

Another option would be the <Files>/<FilesMatch> directives in apache,
and set it to files ending in .html.

Mike

From grisha at modpython.org  Mon Aug 25 21:53:22 2003
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 22:04:06 2004
Subject: [mod_python] How do I serve up .html files?
In-Reply-To: <16202.30596.238589.112878@desk.crynwr.com>
References: <16202.30596.238589.112878@desk.crynwr.com>
Message-ID: <20030825213605.O1138@onyx.ispol.com>


On Mon, 25 Aug 2003, Russell Nelson wrote:

> Maybe this is really an Apache question, but it seems to me like it
> ought to come up in a mod_python context as well.  Can't find it in
> the documentation, the FAQ, or the mailing list archives
> (Aug/Jul/Jun).
>
> How do I cause my python script to be run when a .html file is accessed?
>     http://angry-economics.russnelson.com/index.html

Russell -

It is pretty much an apache question.

  AddHandler python-program .html
  PythonHandler myhandler
  PythonDebug On

should do it (AddHandler is key, the other two are shown for completness).

>
> How do I cause my python script to be run when any old file is accessed?
>     http://angry-economics.russnelson.com/

  SetHandler python-program
  PythonHandler myhandler
  PythonDebug On

would make every request be handled by mod_python, regardless of
extension.

Of course the consequence of either of the above is that the mod_python
handler would either need to actually do the work of delivering the HTML
itself (the next version will have req.sendfile() to make it a bit more
efficient), or return apache.DECLINED to let Apache handle it after mp
handler did its thing (in which case the mp handler shouldn't write
anything).

> In other words, I want a handler which gets run no matter what the
> rest of the URL is.  You'd think this would be in the documentation,
> enabling people to make fully scripted sites, but it seems not to be.

Here is one place where it's mentioned:

http://www.modpython.org/live/current/doc-html/tut-what-it-do.html

...but I admit, the docs are written in a way as to not overlap Apache
docs, which makes it difficult.

> I can't insert a /foo.py/ in there because I have to preserve all the
> old URLs.

P.S. Glad to see you using mod_python!

Grisha
From idiot1 at netzero.net  Mon Aug 25 22:42:06 2003
From: idiot1 at netzero.net (Kirk Bailey)
Date: Fri Jan  9 22:04:07 2004
Subject: [mod_python] How do I serve up .html files?
In-Reply-To: <20030825213605.O1138@onyx.ispol.com>
References: <16202.30596.238589.112878@desk.crynwr.com>
	<20030825213605.O1138@onyx.ispol.com>
Message-ID: <3F4AC8FE.4070405@netzero.net>

When a browser accesses a html page, one includes a SSI exec tag. That means 
Server Side Include, exec(ute).

It looks like a comment, and if it made it to the browser, it would be treated 
as such and therefore invisible. But if all is done right, it is EATEN by the 
webserver and replaced with the output of the script.

<!--#exec cgi="./cgi-bin/counter.py" -->

Is probably the most common example of a ssi tag in a webpage. If you never use 
any other ssi, you will use that one. The example above would run some sort of a 
counter program (such as my 'counter.py'), returning a string of text. This is a 
string of characters, such as numbers:
32204
which is the output of a text counter program.

I am not going to describe how to enable cgi on apache, or any other webserver- 
that's a booklet worth, not a letter's. BUT my website has articles on cgi on 
it, and links to entire SITES about it, including apache.org's pages about ssi 
and apache. The ssi stuff is at the bottom of the homepage.

	http://www.tinylist.org/

hope this helps.


Gregory (Grisha) Trubetskoy wrote:

> On Mon, 25 Aug 2003, Russell Nelson wrote:
> 
> 
>>Maybe this is really an Apache question, but it seems to me like it
>>ought to come up in a mod_python context as well.  Can't find it in
>>the documentation, the FAQ, or the mailing list archives
>>(Aug/Jul/Jun).
>>
>>How do I cause my python script to be run when a .html file is accessed?
>>    http://angry-economics.russnelson.com/index.html
> 
> 
> Russell -
> 
> It is pretty much an apache question.
> 
>   AddHandler python-program .html
>   PythonHandler myhandler
>   PythonDebug On
> 
> should do it (AddHandler is key, the other two are shown for completness).
> 
> 
>>How do I cause my python script to be run when any old file is accessed?
>>    http://angry-economics.russnelson.com/
> 
> 
>   SetHandler python-program
>   PythonHandler myhandler
>   PythonDebug On
> 
> would make every request be handled by mod_python, regardless of
> extension.
> 
> Of course the consequence of either of the above is that the mod_python
> handler would either need to actually do the work of delivering the HTML
> itself (the next version will have req.sendfile() to make it a bit more
> efficient), or return apache.DECLINED to let Apache handle it after mp
> handler did its thing (in which case the mp handler shouldn't write
> anything).
> 
> 
>>In other words, I want a handler which gets run no matter what the
>>rest of the URL is.  You'd think this would be in the documentation,
>>enabling people to make fully scripted sites, but it seems not to be.
> 
> 
> Here is one place where it's mentioned:
> 
> http://www.modpython.org/live/current/doc-html/tut-what-it-do.html
> 
> ...but I admit, the docs are written in a way as to not overlap Apache
> docs, which makes it difficult.
> 
> 
>>I can't insert a /foo.py/ in there because I have to preserve all the
>>old URLs.
> 
> 
> P.S. Glad to see you using mod_python!
> 
> Grisha
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
> 
> 

-- 

-- 

end

Cheers!
         Kirk D Bailey

  +                              think                                +
   http://www.howlermonkey.net  +-----+        http://www.tinylist.org
   http://www.listville.net     | BOX |  http://www.sacredelectron.org
   Thou art free"-ERIS          +-----+     'Got a light?'-Promethieus
  +                              think                                +

Fnord.

From smejmoon at yahoo.com  Tue Aug 26 12:29:11 2003
From: smejmoon at yahoo.com (=?iso-8859-1?q?Girts=20Kalninsh?=)
Date: Fri Jan  9 22:04:07 2004
Subject: [mod_python] mod_python + pso
In-Reply-To: <3F4AC8FE.4070405@netzero.net>
Message-ID: <20030826112911.98215.qmail@web10703.mail.yahoo.com>


I'm interested in sessions, redirections, form validation, e.t.c. still
want to keep the system Simple and Robust.

I liked the PSO (http://sourceforge.net/projects/pso), but the version
on sourceforge still have many bugs unsolved
(http://sourceforge.net/tracker/?group_id=49265&atid=455630).

Do you know of working version and some example code?

Right now I'm using hosting with apache + mod_python + mysql. CGI is
forbidden and installing of some server moduled might be troublesome.

G'irts


________________________________________________________________________
Want to chat instantly with your online friends?  Get the FREE Yahoo!
Messenger http://uk.messenger.yahoo.com/
From joshg at myrealbox.com  Tue Aug 26 05:29:09 2003
From: joshg at myrealbox.com (Joshua Adam Ginsberg)
Date: Fri Jan  9 22:04:07 2004
Subject: [mod_python] IPC, db conn sharing, and other fine things
Message-ID: <1061897348.1677.12.camel@gateway.localnet>

Hello -

You will have to forgive me if this is often covered... I perused the
last six months of postings for answers to these questions, and still
have not yet found exactly what I'm looking for...

Additionally, please understand that my serious web development
experience comes from AOLServer and it's unique brand of TCL... if
you're unaware of the project, AOLServer was the original (and in many
opinions still the best) multi-threaded, thread-safe, database
connection pooling, strong API'ed webserver...

AOLServer had many features that I came to know, love, and depend on...
examples:

- nsv buckets --- nsv == NaviServer (AOLServer's original name) shared
variables... they were effectively arrays that stored information
accessible and modifiable by any running thread... perfect for caching
database information for faster generation of dynamic pages...

- database connection pooling --- provided easy, standardized, and
scalable access to existing database connections

I spent about six or seven months developing an enterprise caliber web
applications toolkit using AOLServer, and honestly, I cannot envision
having anything "enterprise caliber" without some sort of interprocess
communication and some sort of connection pooling...

I've used Apache now for a total of two weeks... I've read documentation
detailing the prefork versus the threading mpm models... I've read the
mod_python documentation available... but I still can't find a decent
way to replicate the services that AOLServer provided natively...

And unfortunately the reason I switched to Apache is that many of my
clients want to have their sites hosted by some mass hosting provider
that only uses Apache... I can find ones that are willing to use
mod_python, but I can't find ones that are willing to install
AOLServer... and any sort of IPC or db-pooling services I write can't
depend on external daemons... obviously I could write some sort of
caching daemon in Python that used UNIX sockets and some simple
key/value pair protocol to do db data caching... or I could write some
sort of db-pooling daemon... but good luck trying to get a mass-hosting
provider to run some homemade daemon on their servers...

So I suppose what I'm asking is that is there any way natively in
mod_python to support these enterprise critical features? And if not,
how the hell do you guys who use mod_python manage to have massive
hit-per-second sites without data caching?

Thank you for any guidance you could provide.

-jag

From barry at python.org  Tue Aug 26 14:29:31 2003
From: barry at python.org (Barry Warsaw)
Date: Fri Jan  9 22:04:07 2004
Subject: [mod_python] Problems with PythonPath directive
Message-ID: <1061922571.23837.89.camel@yyz>

FTR: Apache 2.0.47, mod_python 3.0.3, Python 2.3+LONG_LONG patch
(although I've also tried Python 2.2.3).

I'm having trouble with the PythonPath directive.  Mostly likely I don't
understand how it's supposed to work.  Here are my Apache directives:

LoadModule python_module /usr/local/apache/modules/mod_python.so
                                                                                
<Directory /path/to/project/xxx/xxx_apps>
    AddHandler python-program .py
    #PythonPath "sys.path + ['/path/to/project/zope2/lib/python']"
    PythonHandler regserver.driver
    PythonDebug On
</Directory>

ScriptAlias /regserver/ "/path/to/project/xxx/xxx_apps/"

When I hit http://localhost/regserver/driver.py with the PythonPath
directive commented out, everything works fine.  But when I uncomment
the PythonPath directive, I get an import error:

Mod_python error: "PythonHandler regserver.driver"

Traceback (most recent call last):

  File "/usr/local/lib/python2.3/site-packages/mod_python/apache.py", line 320, in HandlerDispatch
    module = import_module(module_name, config)

  File "/usr/local/lib/python2.3/site-packages/mod_python/apache.py", line 496, in import_module
    f, p, d = imp.find_module(parts[i], path)

ImportError: No module named regserver

I thought that the way I'm specifying PythonPath above should have added
to sys.path, not overwritten it.  What am I missing?

Thanks,
-Barry

P.S. there is a buglet in the online manual.  It says that --with-apxs
searches /usr/local/apache/bin but it really appears to search only
/usr/local/apache/sbin.  While my apxs lives in the former, I had to use
the --with-apxs configure option for it to find it.


From grisha at modpython.org  Tue Aug 26 15:01:02 2003
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 22:04:07 2004
Subject: [mod_python] Problems with PythonPath directive
In-Reply-To: <1061922571.23837.89.camel@yyz>
References: <1061922571.23837.89.camel@yyz>
Message-ID: <20030826145636.A7493@onyx.ispol.com>


Hi Barry -

Try

PythonPath "sys.path + ['/path/to/project/zope2/lib/python',
                        '/path/to/project/xxx/xxx_apps']"

(the above should be on one line)

IIRC, mod_python will prepend the path in <Directory> to sys.path, unless
PythonPath is specified, in which case PythonPath overrules everything.

Grisha


On Tue, 26 Aug 2003, Barry Warsaw wrote:

> FTR: Apache 2.0.47, mod_python 3.0.3, Python 2.3+LONG_LONG patch
> (although I've also tried Python 2.2.3).
>
> I'm having trouble with the PythonPath directive.  Mostly likely I don't
> understand how it's supposed to work.  Here are my Apache directives:
>
> LoadModule python_module /usr/local/apache/modules/mod_python.so
>
> <Directory /path/to/project/xxx/xxx_apps>
>     AddHandler python-program .py
>     #PythonPath "sys.path + ['/path/to/project/zope2/lib/python']"
>     PythonHandler regserver.driver
>     PythonDebug On
> </Directory>
>
> ScriptAlias /regserver/ "/path/to/project/xxx/xxx_apps/"
>
> When I hit http://localhost/regserver/driver.py with the PythonPath
> directive commented out, everything works fine.  But when I uncomment
> the PythonPath directive, I get an import error:
>
> Mod_python error: "PythonHandler regserver.driver"
>
> Traceback (most recent call last):
>
>   File "/usr/local/lib/python2.3/site-packages/mod_python/apache.py", line 320, in HandlerDispatch
>     module = import_module(module_name, config)
>
>   File "/usr/local/lib/python2.3/site-packages/mod_python/apache.py", line 496, in import_module
>     f, p, d = imp.find_module(parts[i], path)
>
> ImportError: No module named regserver
>
> I thought that the way I'm specifying PythonPath above should have added
> to sys.path, not overwritten it.  What am I missing?
>
> Thanks,
> -Barry
>
> P.S. there is a buglet in the online manual.  It says that --with-apxs
> searches /usr/local/apache/bin but it really appears to search only
> /usr/local/apache/sbin.  While my apxs lives in the former, I had to use
> the --with-apxs configure option for it to find it.
>
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>
From barry at python.org  Tue Aug 26 15:41:15 2003
From: barry at python.org (Barry Warsaw)
Date: Fri Jan  9 22:04:07 2004
Subject: [mod_python] Problems with PythonPath directive
In-Reply-To: <20030826145636.A7493@onyx.ispol.com>
References: <1061922571.23837.89.camel@yyz>
	 <20030826145636.A7493@onyx.ispol.com>
Message-ID: <1061926875.23837.100.camel@yyz>

On Tue, 2003-08-26 at 15:01, Gregory (Grisha) Trubetskoy wrote:
> Hi Barry -
> 
> Try
> 
> PythonPath "sys.path + ['/path/to/project/zope2/lib/python',
>                         '/path/to/project/xxx/xxx_apps']"
> 
> (the above should be on one line)
> 
> IIRC, mod_python will prepend the path in <Directory> to sys.path, unless
> PythonPath is specified, in which case PythonPath overrules everything.

Indeed, that worked!  Thanks so much Grisha.

-Barry


From neel at mediapulse.com  Tue Aug 26 16:36:19 2003
From: neel at mediapulse.com (Michael C. Neel)
Date: Fri Jan  9 22:04:07 2004
Subject: [mod_python] PythonDebug and Traceback
Message-ID: <C0FC22C08B82074A88B50061764157775CBB@johnson.mediapulse.net>

Is there some way that you can have PythonDebug set to Off and still get
a traceback (I'm using 2.7.8 mod_python against python 2.2.2)?  The
reason I ask is I have a site where in the conf PythonDebug is
explicitly set to off, and when our database server decided to block the
web server, a client got a traceback error and then got the server 500
error page (as I expect).

The error raised was:

OperationalError: (1129, "Host 'xxx.xxx.com' is blocked because of many
connection errors.  Unblock with 'mysqladmin flush-hosts'")

I've messed around with some test sites to try and get a traceback error
with PythonDebug Off, and haven't been able to get it - although I
haven't caused an OperationalError.  Needless to say people getting to
see traceback on a live site is unsettling, so if anyone has an idea how
this happened and what I can do to fix it let me know ;)

Mike

From idiot1 at netzero.net  Tue Aug 26 20:12:29 2003
From: idiot1 at netzero.net (Kirk Bailey)
Date: Fri Jan  9 22:04:07 2004
Subject: [mod_python] How do I serve up .html files?
In-Reply-To: <20030826043323.GL12023@itea.ntnu.no>
References: <16202.30596.238589.112878@desk.crynwr.com>
	<20030825213605.O1138@onyx.ispol.com> <3F4AC8FE.4070405@netzero.net>
	<20030826043323.GL12023@itea.ntnu.no>
Message-ID: <3F4BF76D.5090300@netzero.net>



Stian S?iland wrote:

> On 2003-08-26 04:42:06, Kirk Bailey wrote:
> 
> 
>>When a browser accesses a html page, one includes a SSI exec tag. That 
>>means Server Side Include, exec(ute).
> 
> 
> What did you drink that night? This is the mod_python list, discussing
> mod_Python, not SSI =)
>

Stian, I sugggest you be nice, and not go trolling. He asked a basic question 
about how to get a html page to access a cgi program; Go back and read the 
letter he wrote. I was discussing exactly that. One gets a page to access a 
script with a ssi tag. He did NOT ask how to configure apache, or how mod_python 
works. He asked how to get a page when requested to acess a cgi program. I was 
addressing exactly that point, at a basic level. Granted, his letter was a tad 
off topic, and even a little below the general level of technical skill 
devlopment this list usually displays, but he asked, I replied, being a 
generally helpful person.

As for you rather personal question about my personal behavior last night, not 
that it is any of your business, the answer is: NOTHING. I'm stone cold sober, 
and was last night. Your assumption was and is dead wrong.

Your behavior in this matter is rather unprofessional sir, and uncharitible to 
those around us of lesser technical skill- and disrespectful to those more 
nearly your peer. This cannot but hamper your ongoing career in Information 
Technology.

I suggest you consider the many people who mentored you in your early days, and 
how they suffer your novice level questions gladly, and helped you along your 
way. There is a word: payforward, where we pay 'back' the tutilage and gentle 
patience given to us in the past, by helping others later on when we can. I 
encourage you to adopt such a charitible attitude.




-- 

end

Respectfully,
              Kirk D Bailey

  +                              think                                +
   http://www.howlermonkey.net  +-----+        http://www.tinylist.org
   http://www.listville.net     | BOX |  http://www.sacredelectron.org
   Thou art free"-ERIS          +-----+     'Got a light?'-Promethieus
  +                              think                                +

Fnord.

From idiot1 at netzero.net  Tue Aug 26 20:16:12 2003
From: idiot1 at netzero.net (Kirk Bailey)
Date: Fri Jan  9 22:04:07 2004
Subject: [mod_python] How do I serve up .html files?
In-Reply-To: <20030826043323.GL12023@itea.ntnu.no>
References: <16202.30596.238589.112878@desk.crynwr.com>
	<20030825213605.O1138@onyx.ispol.com> <3F4AC8FE.4070405@netzero.net>
	<20030826043323.GL12023@itea.ntnu.no>
Message-ID: <3F4BF84C.7060200@netzero.net>



Stian S?iland wrote:

> On 2003-08-26 04:42:06, Kirk Bailey wrote:
> 
> 
>>When a browser accesses a html page, one includes a SSI exec tag. That 
>>means Server Side Include, exec(ute).
> 
> 
> What did you drink that night? This is the mod_python list, discussing
> mod_Python, not SSI =)
>

Stian, I sugggest you be nice, and not go trolling. He asked a basic question 
about how to get a html page to access a cgi program; Go back and read the 
letter he wrote. I was discussing exactly that. One gets a page to access a 
script with a ssi tag. He did NOT ask how to configure apache, or how mod_python 
works. He asked how to get a page when requested to acess a cgi program. I was 
addressing exactly that point, at a basic level. Granted, his letter was a tad 
off topic, and even a little below the general level of technical skill 
devlopment this list usually displays, but he asked, I replied, being a 
generally helpful person.

As for you rather personal question about my personal behavior last night, not 
that it is any of your business, the answer is: NOTHING. I'm stone cold sober, 
and was last night. Your assumption was and is dead wrong.

Your behavior in this matter is rather unprofessional sir, and uncharitible to 
those around us of lesser technical skill- and disrespectful to those more 
nearly your peer. This cannot but hamper your ongoing career in Information 
Technology.

I suggest you consider the many people who mentored you in your early days, and 
how they suffer your novice level questions gladly, and helped you along your 
way. There is a word: payforward, where we pay 'back' the tutilage and gentle 
patience given to us in the past, by helping others later on when we can. I 
encourage you to adopt such a charitible attitude.




-- 

end

Respectfully,
              Kirk D Bailey

  +                              think                                +
   http://www.howlermonkey.net  +-----+        http://www.tinylist.org
   http://www.listville.net     | BOX |  http://www.sacredelectron.org
   Thou art free"-ERIS          +-----+     'Got a light?'-Promethieus
  +                              think                                +

Fnord.


From idiot1 at netzero.net  Tue Aug 26 20:15:28 2003
From: idiot1 at netzero.net (Kirk Bailey)
Date: Fri Jan  9 22:04:07 2004
Subject: [mod_python] How do I serve up .html files?
In-Reply-To: <20030826043323.GL12023@itea.ntnu.no>
References: <16202.30596.238589.112878@desk.crynwr.com>
	<20030825213605.O1138@onyx.ispol.com> <3F4AC8FE.4070405@netzero.net>
	<20030826043323.GL12023@itea.ntnu.no>
Message-ID: <3F4BF820.3040501@netzero.net>



Stian S?iland wrote:

> On 2003-08-26 04:42:06, Kirk Bailey wrote:
> 
> 
>>When a browser accesses a html page, one includes a SSI exec tag. That 
>>means Server Side Include, exec(ute).
> 
> 
> What did you drink that night? This is the mod_python list, discussing
> mod_Python, not SSI =)
>

Stian, I sugggest you be nice, and not go trolling. He asked a basic question 
about how to get a html page to access a cgi program; Go back and read the 
letter he wrote. I was discussing exactly that. One gets a page to access a 
script with a ssi tag. He did NOT ask how to configure apache, or how mod_python 
works. He asked how to get a page when requested to acess a cgi program. I was 
addressing exactly that point, at a basic level. Granted, his letter was a tad 
off topic, and even a little below the general level of technical skill 
devlopment this list usually displays, but he asked, I replied, being a 
generally helpful person.

As for you rather personal question about my personal behavior last night, not 
that it is any of your business, the answer is: NOTHING. I'm stone cold sober, 
and was last night. Your assumption was and is dead wrong.

Your behavior in this matter is rather unprofessional sir, and uncharitible to 
those around us of lesser technical skill- and disrespectful to those more 
nearly your peer. This cannot but hamper your ongoing career in Information 
Technology.

I suggest you consider the many people who mentored you in your early days, and 
how they suffer your novice level questions gladly, and helped you along your 
way. There is a word: payforward, where we pay 'back' the tutilage and gentle 
patience given to us in the past, by helping others later on when we can. I 
encourage you to adopt such a charitible attitude.




-- 

end

Respectfully,
              Kirk D Bailey

  +                              think                                +
   http://www.howlermonkey.net  +-----+        http://www.tinylist.org
   http://www.listville.net     | BOX |  http://www.sacredelectron.org
   Thou art free"-ERIS          +-----+     'Got a light?'-Promethieus
  +                              think                                +

Fnord.

From mike.looijmans at asml.com  Wed Aug 27 07:21:05 2003
From: mike.looijmans at asml.com (Mike Looijmans)
Date: Fri Jan  9 22:04:07 2004
Subject: [mod_python] PythonDebug and Traceback
Message-ID: <01c36c5b$03517680$926a1e6e@wsasd464>

>Is there some way that you can have PythonDebug set to Off and still get
>a traceback (I'm using 2.7.8 mod_python against python 2.2.2)?

Sure, but you'll have to display it yourself. My script usually look like
this:

req.content_type="text/html"
writeheader(req, mytitle . . .)
try:
   # do some stuff (like connecting to the DB)
except:
   printexception(req)
printfooter(req, . . .)


--
The printexception() routine is defined as:
--

def formatexception():
   info = sys.exc_info()
    result = "\n<HR>\n<P><B>%s:</B> %s</P>\n" % info[:2]
    if verbose:
        import traceback
        result += '<PRE>' + "\n".join(traceback.format_tb(info[2])) +
'</PRE>\n'
    return result

def printexception(req=sys.stdout):
    req.write(formatexception())

--
The 'verbose' global variable can be turned off and on by sending a request
to the server.



-- 
The information contained in this communication and any attachments is confidential and may be privileged, and is for the sole use of the intended recipient(s). Any unauthorized review, use, disclosure or distribution is prohibited. If you are not the intended recipient, please notify the sender immediately by replying to this message and destroy all copies of this message and any attachments. ASML is neither liable for the proper and complete transmission of the information contained in this communication, nor for any delay in its receipt.


From mike.looijmans at asml.com  Wed Aug 27 07:38:01 2003
From: mike.looijmans at asml.com (Mike Looijmans)
Date: Fri Jan  9 22:04:07 2004
Subject: [mod_python] IPC, db conn sharing, and other fine things
Message-ID: <01c36c5d$60e6c280$926a1e6e@wsasd464>

>- nsv buckets --- nsv == NaviServer (AOLServer's original name) shared
>variables... they were effectively arrays that stored information
>accessible and modifiable by any running thread... perfect for caching
>database information for faster generation of dynamic pages...


In mod_python, just use global variables in modules. Use dictionary objects
as fast storage mechanism.


>- database connection pooling --- provided easy, standardized, and
>scalable access to existing database connections


Same as above: Use global variables.

>... obviously I could write some sort of
>caching daemon in Python that used UNIX sockets and some simple
>key/value pair protocol to do db data caching... or I could write some
>sort of db-pooling daemon...

Why not integrate it into one of your modules?
Once loaded, the module remains in memory. So you can have it start a daemon
thread and use that as your IPC server. I always design the pages such that
no IPC is needed, each page gets its data exclusively from the request and
the database. The database is a great way to exchange data anyway, performs
excellent and survives even a power-down.

>So I suppose what I'm asking is that is there any way natively in
>mod_python to support these enterprise critical features? And if not,
>how the hell do you guys who use mod_python manage to have massive
>hit-per-second sites without data caching?

Python is so powerful a language, that creating these "enterprise critical
features" in raw code is just something you do on the side. I don't put
these in a library because there's more work in maintaining that library
than just entering the code. A threadsafe DB pooling system takes about 5
lines of Python code to program, and you need only one for the whole
project.

I do a little caching for 'static' tables, something like:

cache = {}
...
try:
    data = cache[key]
except KeyError:
    c = db.cursor()
    c.execute(somequery % key)
    data = c.fetchall()[0][0]
    cache[key] = data
return data


Also, I did some experiments with our  MySQL database, and found that the
overhead in a DB connection creation is very, very low when the DBMS is on
the same host. I was unable to measure any difference in performance,
compared to running an SQL statement, connecting to the socket just didn't
take any time. I implemented DB connection pooling anyway.

When tuning performance, I tend to optimize the design, SQL and index trees,
that helps performance a lot more than fiddling with fancy features.
Database pooling helped about 1%, changing a primary key from a,b to b,a
increased performance by 300%.

Mike.



-- 
The information contained in this communication and any attachments is confidential and may be privileged, and is for the sole use of the intended recipient(s). Any unauthorized review, use, disclosure or distribution is prohibited. If you are not the intended recipient, please notify the sender immediately by replying to this message and destroy all copies of this message and any attachments. ASML is neither liable for the proper and complete transmission of the information contained in this communication, nor for any delay in its receipt.


From neel at mediapulse.com  Wed Aug 27 10:22:28 2003
From: neel at mediapulse.com (Michael C. Neel)
Date: Fri Jan  9 22:04:07 2004
Subject: [mod_python] PythonDebug and Traceback
Message-ID: <C0FC22C08B82074A88B50061764157776B9639@johnson.mediapulse.net>

> Sure, but you'll have to display it yourself. My script 
> usually look like
> this:

But that's the issue, I didn't display it myself and had PythonDebug Off
set and it still dissplayed a traceback :/  This isn't something I want
to do, it something I want to stop =)

Mike

From stian at soiland.no  Wed Aug 27 20:18:45 2003
From: stian at soiland.no (Stian =?iso-8859-1?Q?S=F8iland?=)
Date: Fri Jan  9 22:04:07 2004
Subject: [mod_python] How do I serve up .html files?
In-Reply-To: <3F4BF84C.7060200@netzero.net>
References: <16202.30596.238589.112878@desk.crynwr.com>
	<20030825213605.O1138@onyx.ispol.com> <3F4AC8FE.4070405@netzero.net>
	<20030826043323.GL12023@itea.ntnu.no> <3F4BF84C.7060200@netzero.net>
Message-ID: <20030827181845.GY28932@itea.ntnu.no>

On 2003-08-27 02:16:12, Kirk Bailey wrote:

> As for you rather personal question about my personal behavior last night, 
> not that it is any of your business, the answer is: NOTHING. I'm stone cold 
> sober, and was last night. Your assumption was and is dead wrong.

As my original email was sent to you in private, not to the list, it was
ment as a funny remark person-to-person. 

If you don't like getting personal emails, I'm sorry. I don't know you
for real and don't know for sure how you're going to interpet a stupid
try for a 'funny' comment. This is one of the problems communicating
electronically. I meant you no harm.

> Your behavior in this matter is rather unprofessional sir, and uncharitible 
> to those around us of lesser technical skill- and disrespectful to those 
> more nearly your peer. This cannot but hamper your ongoing career in 
> Information Technology.

I can't see the relevance of a personal side-comment to my
not-so-very-fast career in Information Technology =)

-- 
Stian S?iland               Work toward win-win situation. Win-lose
Trondheim, Norway           is where you win and the other lose.
http://www.soiland.no/      Lose-lose and lose-win are left as an
                            exercise to the reader.  [Limoncelli/Hogan]

From stian at soiland.no  Wed Aug 27 20:38:45 2003
From: stian at soiland.no (Stian =?iso-8859-1?Q?S=F8iland?=)
Date: Fri Jan  9 22:04:07 2004
Subject: [mod_python] How do I serve up .html files?
In-Reply-To: <3F4BF76D.5090300@netzero.net>
References: <16202.30596.238589.112878@desk.crynwr.com>
	<20030825213605.O1138@onyx.ispol.com> <3F4AC8FE.4070405@netzero.net>
	<20030826043323.GL12023@itea.ntnu.no> <3F4BF76D.5090300@netzero.net>
Message-ID: <20030827183845.GA28932@itea.ntnu.no>

On 2003-08-27 02:12:29, Kirk Bailey wrote:

(this is the non-personal answer about the TECHNICAL things, not
including my previous private answers.. =) )

> Stian, I sugggest you be nice, and not go trolling. He asked a basic 
> question about how to get a html page to access a cgi program; Go back and 
> read the letter he wrote. I was discussing exactly that. One gets a page to 
> access a script with a ssi tag. He did NOT ask how to configure apache, or 
> how mod_python works. He asked how to get a page when requested to acess a 
> cgi program. I was addressing exactly that point, at a basic level. 
> Granted, his letter was a tad off topic, and even a little below the 
> general level of technical skill devlopment this list usually displays, but 
> he asked, I replied, being a generally helpful person.

About the technical issue, CGI was never asked about, mod_python is
normally used INSTEAD of cgi. 

The question was really how to run a python handler for every possible
URL, not to include cgi-output withing HTML.

(in which case I would have solved it anyway by using the mod_python
solution presented in this thread)


A quick note about the SetHandler trick (I use it to get virtual URLs -
what I would like to see is some functionallity from Publisher (argument
parsing, return content-type-magic) - used together with virtual URLs.
Ie allowing /browse/some-switch.domain.com/switchports without actually
having the object "some-switch.domain.com" - the quick solution probably
being some __getattr__-magic) 


Remember that even though you SetHandler to something, 
you'll also need to set DirectoryIndex to some EXISTING FILE. I did this
error as I included all python code in the pythonpath and had no files
in the actual path. I used SetHandler nav.web.devBrowser.dispatcher
in .htaccess for a blank directory.

Now, DirectoryIndex could not simply be index.html, as there were no
file index.html. I created a file "index" in the otherwise blank
directory, set DirectoryIndex to "index", and everything worked.

If the file is removed, the blank directory listing is presented, but
other urls within the directory works.

(the handler receives the request as being to /index, and the file is
never actually read from disk due to SetHandler intercepting)

Now, some gurus might have a suggestion about getting rid of that empty
file. If so, please let me know! =)


Why not have the files inside the directory? Well, we've encountered
*some* problems with developers each making "index.py" (they 
previously programmed PHP!) - within the same namespace (ie.
Subinterpreter). This caused problems like getting some modules from
each of the users public_html directory. Funny!

We've used PythonInterpPerDirectory while developing, but needs to get
rid of that before merging code, as this eats database connections as a
horse. (remember, one connection pr database pr. interpreter pr.
apache.. scales up!)


-- 
Stian S?iland               Work toward win-win situation. Win-lose
Trondheim, Norway           is where you win and the other lose.
http://www.soiland.no/      Lose-lose and lose-win are left as an
                            exercise to the reader.  [Limoncelli/Hogan]

From neel at mediapulse.com  Wed Aug 27 15:25:52 2003
From: neel at mediapulse.com (Michael C. Neel)
Date: Fri Jan  9 22:04:07 2004
Subject: /index.html wierdness was: RE: [mod_python] How do I serve up .html
	files?
Message-ID: <C0FC22C08B82074A88B50061764157776B9644@johnson.mediapulse.net>

I've noticed this /index.html wierdness as well.  It seems (in 2.7.8 at
least) that unless there is a file in the document root called
index.html, mod_python is not called not matter if it's set in a
Location or Directory section.  I tested this with a simple:

def handler(req):
	assert 0, req.uri

With the conf of:

<Location />
        SetHandler python-program
        PythonHandler www
</Location>

and later with

<Directory /home/httpd/webroot>
        SetHandler python-program
        PythonHandler www
</Directory>

And would always get a directory listing (or an error lising not allowed
page) for site.com/, but every other url tried would throw the assert
execption.  If I create an empty index.html file in the document root,
apache does its internal redirect and my assert get's picked up on the
redirect.  This is only needed for the root though, I do not need to
create the sub dirs or index.html pages in them.

Mike

> -----Original Message-----
> From: Stian S?iland [mailto:stian@soiland.no] 
> Sent: Wednesday, August 27, 2003 2:39 PM
> To: mod_python@modpython.org
> Subject: Re: [mod_python] How do I serve up .html files?
> 
> Remember that even though you SetHandler to something, 
> you'll also need to set DirectoryIndex to some EXISTING FILE. 
> I did this
> error as I included all python code in the pythonpath and had no files
> in the actual path. I used SetHandler nav.web.devBrowser.dispatcher
> in .htaccess for a blank directory.
> 
> Now, DirectoryIndex could not simply be index.html, as there were no
> file index.html. I created a file "index" in the otherwise blank
> directory, set DirectoryIndex to "index", and everything worked.
> 
> If the file is removed, the blank directory listing is presented, but
> other urls within the directory works.
> 
> (the handler receives the request as being to /index, and the file is
> never actually read from disk due to SetHandler intercepting)
> 
> Now, some gurus might have a suggestion about getting rid of 
> that empty
> file. If so, please let me know! =)
> 
> 

From joshg at myrealbox.com  Wed Aug 27 14:58:27 2003
From: joshg at myrealbox.com (Joshua Adam Ginsberg)
Date: Fri Jan  9 22:04:07 2004
Subject: [mod_python] IPC, db conn sharing, and other fine things
Message-ID: <1062017906.5364.14.camel@gateway.localnet>

Hello Mike -

Thanks for taking the time to respond...

My data applications require that multiple clients be able to access
them. These clients include web clients and desktop clients on different
machines across the internet. Thus I build XML-RPC as the middle
language into everything I do. The web client never actually touches the
database. And thus on the server where a "front end" web server resides,
I rarely actually install a database.

Additionally, despite ever increasing horsepower in hardware and ever
increasing efficiency in databases, they sacrifice a lot of efficiency
for durability of data. For a caching system, persistence beyond a crash
isn't really necessary. For a component registering system, it gets
rebuilt every time the server is restarted.

Furthermore the users of my software generally need database features
not offered in MySQL, so I don't really use it very often. PostgreSQL is
probably the most common RDBMS I use.

As far as the global dictionaries suggestion, that will work within any
individual process, but each process will have to maintain their own
disparate cache and registry. I'd thought about it, and I'll probably
give it a shot just to see what the performance hit would be in running
them in each process.

For right now I've hacked together a flat file-based caching/registry
system using libxml2 and fcntl locking. It's performance will work,
though I really miss the speed of an all-in-memory caching/registry
system. *sigh* You make do with what you can.

Thanks again.

-jag

From cs1spw at bath.ac.uk  Wed Aug 27 19:55:15 2003
From: cs1spw at bath.ac.uk (Simon Willison)
Date: Fri Jan  9 22:04:07 2004
Subject: [mod_python] 
 Newbie question: setting all calls to a certain directory to beprocessed
 by a script
Message-ID: <3F4D52F3.1090405@bath.ac.uk>

Hi all,

I'm new to mod_python, and I'm just beginning to get my feet wet. I'm 
currently setting directives in .htaccess files because I don't want to 
mess around too much with my httpd.conf file. I want to set it up so 
that ALL calls to a certain directory are handled by a handle() function 
in a specific file.

The mod_python documentation shows how to do this for any files ending 
in .py:

AddHandler python-program .py
PythonHandler myscript

I understand that the above passes all requests for URLs in the 
directory ending with .py to the handle() function I've defined in 
myscript.py in that directory. I'm a big fan of "tidy" URLs, and try to 
avoid having any file extension on URLs at all. Ideally, I would like to 
set up a rule so that any requests for files that do NOT end in .jpg, 
.js, .gif or .css are handed off to the handle() function in the file of 
my choice. If that isn't possible, I'd like to set it up so that all 
requests within the directory in which my .htaccess file lives are 
handled by the one handle() function.

Thanks,

Simon Willison


From cs1spw at bath.ac.uk  Wed Aug 27 20:17:13 2003
From: cs1spw at bath.ac.uk (Simon Willison)
Date: Fri Jan  9 22:04:07 2004
Subject: [mod_python]  Newbie question: setting all calls to a certain
 directory to beprocessed by a script
In-Reply-To: <3F4D52F3.1090405@bath.ac.uk>
References: <3F4D52F3.1090405@bath.ac.uk>
Message-ID: <3F4D5819.70200@bath.ac.uk>

Simon Willison wrote:
> Ideally, I would like to 
> set up a rule so that any requests for files that do NOT end in .jpg, 
> .js, .gif or .css are handed off to the handle() function in the file of 
> my choice. If that isn't possible, I'd like to set it up so that all 
> requests within the directory in which my .htaccess file lives are 
> handled by the one handle() function.

Well, I've worked out the second option. My .htaccess file now looks 
like this:

SetHandler python-program
PythonHandler handler
PythonDebug On

This sends ALL requests to stuff within that directory to handler.py's 
handler() function. I've drawn a blank on getting it not to do this with 
images. I tried the following:

AddHandler default-handler .html .jpeg .jpg .gif .css .js
SetHandler python-program
PythonHandler handler
PythonDebug On

But this didn't work - presumably because the SetHandler over-rides the 
AddHandler directive. I tried changing their order but didn't have any 
luck there either.

Any help on this would be greatly appreciated :)

Thanks,

Simon


From synec at viscous.org  Wed Aug 27 18:31:58 2003
From: synec at viscous.org (john spurling)
Date: Fri Jan  9 22:04:07 2004
Subject: [mod_python]  Newbie question: setting all calls to a certain
	directory to beprocessed by a script
In-Reply-To: <3F4D5819.70200@bath.ac.uk>
References: <3F4D52F3.1090405@bath.ac.uk> <3F4D5819.70200@bath.ac.uk>
Message-ID: <20030828013158.GD21916@c7c8.colobox.com>

On Wed, Aug 27, 2003 at 08:17:13PM -0500, Simon Willison wrote:
> Simon Willison wrote:
> >Ideally, I would like to 
> >set up a rule so that any requests for files that do NOT end in .jpg, 
> >.js, .gif or .css are handed off to the handle() function in the file of 
> >my choice. If that isn't possible, I'd like to set it up so that all 
> >requests within the directory in which my .htaccess file lives are 
> >handled by the one handle() function.
> 
> Well, I've worked out the second option. My .htaccess file now looks 
> like this:
> 
> SetHandler python-program
> PythonHandler handler
> PythonDebug On

good show. using this setting, try this handler:

from mod_python import apache
_types_to_skip = ['jpg', 'gif', 'png']
def handler(req):
    try:
    file_extention = req.uri.split('.')[-1].lower()
    if file_extention in _types_to_skip:
        return apache.DECLINED
    except:
        pass

this will tell apache to go on to another handler for requests ending
in any of the above extensions.

let us know if you have further questions.

-john

-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
Url : http://mailman.modpython.org/pipermail/mod_python/attachments/20030827/62e64362/attachment-0003.bin
From cs1spw at bath.ac.uk  Wed Aug 27 21:15:27 2003
From: cs1spw at bath.ac.uk (Simon Willison)
Date: Fri Jan  9 22:04:07 2004
Subject: [mod_python]  Newbie question: setting all calls to a certain
 directory to beprocessed by a script
In-Reply-To: <20030828013158.GD21916@c7c8.colobox.com>
References: <3F4D52F3.1090405@bath.ac.uk> <3F4D5819.70200@bath.ac.uk>
	<20030828013158.GD21916@c7c8.colobox.com>
Message-ID: <3F4D65BF.9080901@bath.ac.uk>

john spurling wrote:
> good show. using this setting, try this handler:
> 
> from mod_python import apache
> _types_to_skip = ['jpg', 'gif', 'png']
> def handler(req):
>     try:
>     file_extention = req.uri.split('.')[-1].lower()
>     if file_extention in _types_to_skip:
>         return apache.DECLINED
>     except:
>         pass

Fantastic. The apache.DECLINED bit is what I was missing. It even does a 
proper 404 error now if the requested image file isn't found.

Thanks for the prompt reply!

Simon Willison
http://simon.incutio.com/


From nelson at crynwr.com  Wed Aug 27 22:23:27 2003
From: nelson at crynwr.com (Russell Nelson)
Date: Fri Jan  9 22:04:07 2004
Subject: [mod_python] 
 Newbie question: setting all calls to a certain directory to beprocessed
 by a script
In-Reply-To: <3F4D52F3.1090405@bath.ac.uk>
References: <3F4D52F3.1090405@bath.ac.uk>
Message-ID: <16205.26527.695930.55664@desk.crynwr.com>

Simon Willison writes:
 > my choice. If that isn't possible, I'd like to set it up so that all 
 > requests within the directory in which my .htaccess file lives are 
 > handled by the one handle() function.

Simon, Simon, Simon, where were you last week?  I could have read the
answer to your question, and avoided having to post my question
earlier this week.  It's pretty easy.  Do it like this:

<Directory "/var/www/ae.russnelson.com">
SetHandler python-program
PythonHandler publish
</Directory>

The SetHandler says that everything should be handled by the
python-program.  The PythonHandler says that the name of the script is
publish.py.  Here's a simple publish.py.  I'll be publishing a more
complicated example later once I finish porting my blogging code over
to mod_python.  It's currently stand-alone code that writes static
HTML pages.  The astute observer will notice the constant "if 1" whose
unreachable clause calls page().  That code returns an HTML document
given the pathname that the user handed in.  Note that you'll never
get the null string, but instead 'index.html' or as configured
elsewhere.

#!/usr/bin/env python

from mod_python import apache
import sys, os, re, string

homedir = "/var/www/ae.russnelson.com/"

def handler(req):
    if 1:
        req.content_type = "text/plain"
        req.send_http_header()
        req.write("Hello World!\n")
        req.write('uri:'+req.uri+'\n')
        req.write('filename:'+req.filename+'\n')
        req.write('path_info:'+req.path_info+'\n')
        if req.args: req.write('args:'+req.args+'\n')
    else:
        req.content_type = "text/html"
        req.send_http_header()
        req.write(page(req.filename[len(homedir):]))
    return apache.OK


-- 
--My blog is at angry-economist.russnelson.com  | Free markets express in the
Crynwr sells support for free software  | PGPok | practical world our belief
521 Pleasant Valley Rd. | +1 315 268 1925 voice | that there is that of God
Potsdam, NY 13676-3213  | +1 315 268 9201 FAX   | in all people. -Chris V.
From grisha at modpython.org  Wed Aug 27 22:35:42 2003
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 22:04:07 2004
Subject: [mod_python]  Newbie question: setting all calls to a certain
 directory to beprocessed by a script
In-Reply-To: <3F4D5819.70200@bath.ac.uk>
References: <3F4D52F3.1090405@bath.ac.uk> <3F4D5819.70200@bath.ac.uk>
Message-ID: <20030827223418.L24141@onyx.ispol.com>



On Wed, 27 Aug 2003, Simon Willison wrote:
> AddHandler default-handler .html .jpeg .jpg .gif .css .js
> SetHandler python-program
> PythonHandler handler
> PythonDebug On


How about

SetHandler python-program
PythonHandler handler | .html .jpeg .jpg .gif .css .js
PythonDebug On


Grisha
From rey4 at columbia.edu  Wed Aug 27 19:31:54 2003
From: rey4 at columbia.edu (Russell Yanofsky)
Date: Fri Jan  9 22:04:07 2004
Subject: [mod_python] Re: IPC, db conn sharing, and other fine things
References: <1062017906.5364.14.camel@gateway.localnet>
Message-ID: <bijqkm$9br$1@sea.gmane.org>

Joshua Adam Ginsberg wrote:
> For right now I've hacked together a flat file-based caching/registry
> system using libxml2 and fcntl locking. It's performance will work,
> though I really miss the speed of an all-in-memory caching/registry
> system. *sigh* You make do with what you can.

What is preventing you from caching the file contents in memory? Mod_python
lets you store persistent data in global variables.

- Russ


From grisha at modpython.org  Wed Aug 27 22:51:46 2003
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 22:04:07 2004
Subject: [mod_python]  Newbie question: setting all calls to a certain
 directory to beprocessed by a script
In-Reply-To: <16205.26527.695930.55664@desk.crynwr.com>
References: <3F4D52F3.1090405@bath.ac.uk>
	<16205.26527.695930.55664@desk.crynwr.com>
Message-ID: <20030827224827.K24141@onyx.ispol.com>


Call me stupid, but I don't get it :-)

What's the point of the else clause if it's never reached?

Grisha

On Wed, 27 Aug 2003, Russell Nelson wrote:

> The astute observer will notice the constant "if 1" whose unreachable
> clause calls page().  That code returns an HTML document given the
> pathname that the user handed in.  Note that you'll never get the null
> string, but instead 'index.html' or as configured elsewhere.
>
> #!/usr/bin/env python
>
> from mod_python import apache
> import sys, os, re, string
>
> homedir = "/var/www/ae.russnelson.com/"
>
> def handler(req):
>     if 1:
>         req.content_type = "text/plain"
>         req.send_http_header()
>         req.write("Hello World!\n")
>         req.write('uri:'+req.uri+'\n')
>         req.write('filename:'+req.filename+'\n')
>         req.write('path_info:'+req.path_info+'\n')
>         if req.args: req.write('args:'+req.args+'\n')
>     else:
>         req.content_type = "text/html"
>         req.send_http_header()
>         req.write(page(req.filename[len(homedir):]))
>     return apache.OK
>
From nelson at crynwr.com  Wed Aug 27 23:09:09 2003
From: nelson at crynwr.com (Russell Nelson)
Date: Fri Jan  9 22:04:07 2004
Subject: [mod_python]  Newbie question: setting all calls to a certain
 directory to beprocessed by a script
In-Reply-To: <20030827224827.K24141@onyx.ispol.com>
References: <3F4D52F3.1090405@bath.ac.uk>
	<16205.26527.695930.55664@desk.crynwr.com>
	<20030827224827.K24141@onyx.ispol.com>
Message-ID: <16205.29269.480823.763670@desk.crynwr.com>

Gregory (Grisha) Trubetskoy writes:
 > 
 > What's the point of the else clause if it's never reached?

It's ... oversimple example code.  Ordinarily it reads "if 0".

-- 
--My blog is at angry-economist.russnelson.com  | Free markets express in the
Crynwr sells support for free software  | PGPok | practical world our belief
521 Pleasant Valley Rd. | +1 315 268 1925 voice | that there is that of God
Potsdam, NY 13676-3213  | +1 315 268 9201 FAX   | in all people. -Chris V.
From cs1spw at bath.ac.uk  Wed Aug 27 22:51:32 2003
From: cs1spw at bath.ac.uk (Simon Willison)
Date: Fri Jan  9 22:04:07 2004
Subject: [mod_python] Strange caching problem
Message-ID: <3F4D7C44.2020504@bath.ac.uk>

I'm experimenting with the idea that mod_python stays resident in 
memory. Here's the handler script I'm using:

from mod_python import apache

counter = 0

def handler(req):
     req.content_type = 'text/html'
     req.send_http_header()
     global counter
     counter = counter + 1
     req.write("Counter: %d" % counter)
     return apache.OK

If I load it up in a browser and continuously hit refresh, the number 
only increments every 4 or 5 page loads. I was expecting it to increment 
each time. Don't worry - this isn't how I intend to implement a page 
counter, it's just an experiment I'm using to try and gain a better 
understanding of this capability.

The above problem is unsevere, but I've also been having issues with the 
following script:

from mod_python import apache

def handler(req):
     req.content_type = 'text/html'
     req.send_http_header()
     req.write('unparsed_uri: %s' % req.unparsed_uri)
     return apache.OK

When I visit the following URL:

http://myserver/~simon/1

It displays this, as expected:

unparsed_uri: /~simon/1

If I then visit the following:

http://myserver/~simon/2

It continues to show the same string. I have to hit enter in my 
browser's location bar several times before it will notice that I've 
entered a different URL.

This is a major problem, as my aim is to serve up different content 
depending on the URL. If the system isn't noticing the different URLs 
for some reason it becomes unusable!

Thanks,

Simon




From synec at viscous.org  Wed Aug 27 21:07:18 2003
From: synec at viscous.org (john spurling)
Date: Fri Jan  9 22:04:07 2004
Subject: [mod_python] Strange caching problem
In-Reply-To: <3F4D7C44.2020504@bath.ac.uk>
References: <3F4D7C44.2020504@bath.ac.uk>
Message-ID: <20030828040717.GE21916@c7c8.colobox.com>

On Wed, Aug 27, 2003 at 10:51:32PM -0500, Simon Willison wrote:
> I'm experimenting with the idea that mod_python stays resident in 
> memory. Here's the handler script I'm using:
> 
> from mod_python import apache
> 
> counter = 0
> 
> def handler(req):
>     req.content_type = 'text/html'
>     req.send_http_header()
>     global counter
>     counter = counter + 1
>     req.write("Counter: %d" % counter)
>     return apache.OK
> 
> If I load it up in a browser and continuously hit refresh, the number 
> only increments every 4 or 5 page loads. I was expecting it to increment 
> each time. Don't worry - this isn't how I intend to implement a page 
> counter, it's just an experiment I'm using to try and gain a better 
> understanding of this capability.

grep for "StartServers" in your httpd.conf. i'm guessing it's about 4
or 5. 

i had this same problem when implementing sessions. each httpd
instance has its own individual python interpreter. you might just
want to set StartServers to 1 while playing around, but then don't
forget to increase it before "shipping" any code so you don't
inadvertantly write a bug like you have in the above example
code. it's easy to do.

cheers,
john



-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
Url : http://mailman.modpython.org/pipermail/mod_python/attachments/20030827/f318d6e2/attachment-0003.bin
From cs1spw at bath.ac.uk  Wed Aug 27 23:19:00 2003
From: cs1spw at bath.ac.uk (Simon Willison)
Date: Fri Jan  9 22:04:07 2004
Subject: [mod_python] Strange caching problem
In-Reply-To: <20030828040717.GE21916@c7c8.colobox.com>
References: <3F4D7C44.2020504@bath.ac.uk>
	<20030828040717.GE21916@c7c8.colobox.com>
Message-ID: <3F4D82B4.4060003@bath.ac.uk>

john spurling wrote:
>>If I load it up in a browser and continuously hit refresh, the number 
>>only increments every 4 or 5 page loads. I was expecting it to increment 
>>each time. Don't worry - this isn't how I intend to implement a page 
>>counter, it's just an experiment I'm using to try and gain a better 
>>understanding of this capability.
> 
> grep for "StartServers" in your httpd.conf. i'm guessing it's about 4
> or 5. 

The lights just came on. This has a pretty big impact on application 
design. Presumably it means that the "shared memory" ability of 
mod_python (where global variables in a module are accessible to 
multiple requests) is only really useful as a performance enhancement - 
data loaded from the filesystem or database that is unlikely to change 
can be held in memory, but it's a bad idea to change that data as it 
won't be there for all 4 or 5 Apache processes.

Thanks again,

Simon


From ktimm at var-log.com  Wed Aug 27 23:19:45 2003
From: ktimm at var-log.com (ktimm)
Date: Fri Jan  9 22:04:07 2004
Subject: [mod_python] Mod python sys.stdin 
Message-ID: <004701c36d1b$9d497f10$0a01a8c0@toshibauser>

How do I get at sys.stdin with mod_python publisher. I know it's probably something simple but I'm trying to convert an xml parser that was getting though a cgi on sys.stdin and it keeps returning that there is no data to parse. 

Thanks 
Kevin 
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mailman.modpython.org/pipermail/mod_python/attachments/20030827/72e29dac/attachment-0003.htm
From davidf at sjsoft.com  Thu Aug 28 07:40:55 2003
From: davidf at sjsoft.com (David Fraser)
Date: Fri Jan  9 22:04:08 2004
Subject: [mod_python] Strange caching problem
In-Reply-To: <3F4D82B4.4060003@bath.ac.uk>
References: <3F4D7C44.2020504@bath.ac.uk>
	<20030828040717.GE21916@c7c8.colobox.com> <3F4D82B4.4060003@bath.ac.uk>
Message-ID: <3F4D95E7.6080602@sjsoft.com>

Simon Willison wrote:

> john spurling wrote:
>
>>> If I load it up in a browser and continuously hit refresh, the 
>>> number only increments every 4 or 5 page loads. I was expecting it 
>>> to increment each time. Don't worry - this isn't how I intend to 
>>> implement a page counter, it's just an experiment I'm using to try 
>>> and gain a better understanding of this capability.
>>
>>
>> grep for "StartServers" in your httpd.conf. i'm guessing it's about 4
>> or 5. 
>
>
> The lights just came on. This has a pretty big impact on application 
> design. Presumably it means that the "shared memory" ability of 
> mod_python (where global variables in a module are accessible to 
> multiple requests) is only really useful as a performance enhancement 
> - data loaded from the filesystem or database that is unlikely to 
> change can be held in memory, but it's a bad idea to change that data 
> as it won't be there for all 4 or 5 Apache processes.
>
> Thanks again,
>
> Simon

mod_python 3.1alpha which is soon to be released has support for real 
shared memory that can be accessed by all the interpreters

David

From mike.looijmans at asml.com  Thu Aug 28 08:29:58 2003
From: mike.looijmans at asml.com (Mike Looijmans)
Date: Fri Jan  9 22:04:08 2004
Subject: [mod_python] IPC, db conn sharing, and other fine things
Message-ID: <01c36d2d$cd30f700$926a1e6e@wsasd464>

>As far as the global dictionaries suggestion, that will work within any
>individual process, but each process will have to maintain their own
>disparate cache and registry. I'd thought about it, and I'll probably
>give it a shot just to see what the performance hit would be in running
>them in each process.


One simple way to solve this is to force Apache into threading. I'm using
the MPM worker here (Solaris), so that over 20 connections share the same
process (but different threads). This works well for publisher and common
handlers, but this will NOT work for the cgihandler (which only allows one
active thread). A big advantage of the (worker) threading mpm is that you
only need one Python interpreter 'in the air', saving a few megabytes for
each child.

Simple multi-read-single-write strategy:

cachelock = threading.Lock()
#...

try:
    result = cache[key]
except KeyError:
    cachelock.aquire()
    try:
        # Read again, since some other thread may have done
        # the same now
        try:
            result = cache[key]
        except KeyError:
            result = someFetchingFunction(key)
            cache[key] = result
    finally:
        cachelock.release()
return result

With multiple processes, each process will gather the neccesary cache data
as it goes, so initially the system will be a bit slower but ramps up rather
quick as more data is cached. However, this does eat quite some memory, all
cache data is duplicated for each process.

>For right now I've hacked together a flat file-based caching/registry
>system using libxml2 and fcntl locking. It's performance will work,
>though I really miss the speed of an all-in-memory caching/registry
>system. *sigh* You make do with what you can.

I think there are some Python shared memory (across processes) libraries,
they might be worth looking into. You could also write some caching code
based on shared memory in C and package it into a .so library and load it
into Python.

The filesystem is not so bad, most of it is cached in memory anyway. Some
OSses support in-memory files, that might be a nice one too.

Mike.



-- 
The information contained in this communication and any attachments is confidential and may be privileged, and is for the sole use of the intended recipient(s). Any unauthorized review, use, disclosure or distribution is prohibited. If you are not the intended recipient, please notify the sender immediately by replying to this message and destroy all copies of this message and any attachments. ASML is neither liable for the proper and complete transmission of the information contained in this communication, nor for any delay in its receipt.


From davidf at sjsoft.com  Thu Aug 28 09:49:37 2003
From: davidf at sjsoft.com (David Fraser)
Date: Fri Jan  9 22:04:08 2004
Subject: [mod_python] IPC, db conn sharing, and other fine things
In-Reply-To: <01c36d2d$cd30f700$926a1e6e@wsasd464>
References: <01c36d2d$cd30f700$926a1e6e@wsasd464>
Message-ID: <3F4DB411.7070109@sjsoft.com>

Mike Looijmans wrote:

>>For right now I've hacked together a flat file-based caching/registry
>>system using libxml2 and fcntl locking. It's performance will work,
>>though I really miss the speed of an all-in-memory caching/registry
>>system. *sigh* You make do with what you can.
>>    
>>
>
>I think there are some Python shared memory (across processes) libraries,
>they might be worth looking into. You could also write some caching code
>based on shared memory in C and package it into a .so library and load it
>into Python.
>
>The filesystem is not so bad, most of it is cached in memory anyway. Some
>OSses support in-memory files, that might be a nice one too.
>
>Mike.
>
>
>  
>
See the soon-to-be released mod_python 3.1 alpha for mod_python support 
for shared memory.
That's a much easier route than trying to sort it all out yourself...

David

From azaroth at liverpool.ac.uk  Thu Aug 28 11:47:39 2003
From: azaroth at liverpool.ac.uk (Robert Sanderson)
Date: Fri Jan  9 22:04:08 2004
Subject: [mod_python] IPC, db conn sharing, and other fine things
In-Reply-To: <3F4DB411.7070109@sjsoft.com>
Message-ID: <Pine.LNX.4.44.0308281146590.1331-100000@gondolin.hist.liv.ac.uk>

On Thu, 28 Aug 2003, David Fraser wrote:
> Mike Looijmans wrote:

> >I think there are some Python shared memory (across processes) libraries,
> >they might be worth looking into. You could also write some caching code
> >based on shared memory in C and package it into a .so library and load it
> >into Python.

> See the soon-to-be released mod_python 3.1 alpha for mod_python support 
> for shared memory.
> That's a much easier route than trying to sort it all out yourself...

That's awesome news, David.  Any ideas when the code is likely to touch 
down?

Rob

-- 
      ,'/:.          Dr Robert Sanderson (azaroth@liverpool.ac.uk)
    ,'-/::::.        http://www.o-r-g.org/~azaroth/
  ,'--/::(@)::.      Special Collections and Archives, extension 3142
,'---/::::::::::.    Nebmedes:  telnet: nebmedes.o-r-g.org 7777
____/:::::::::::::.                WWW: http://nebmedes.o-r-g.org:8000/
I L L U M I N A T I

From davidf at sjsoft.com  Thu Aug 28 14:22:59 2003
From: davidf at sjsoft.com (David Fraser)
Date: Fri Jan  9 22:04:08 2004
Subject: [mod_python] IPC, db conn sharing, and other fine things
In-Reply-To: <Pine.LNX.4.44.0308281146590.1331-100000@gondolin.hist.liv.ac.uk>
References: <Pine.LNX.4.44.0308281146590.1331-100000@gondolin.hist.liv.ac.uk>
Message-ID: <3F4DF423.9010801@sjsoft.com>

Robert Sanderson wrote:

>On Thu, 28 Aug 2003, David Fraser wrote:
>  
>
>>Mike Looijmans wrote:
>>    
>>
>
>  
>
>>>I think there are some Python shared memory (across processes) libraries,
>>>they might be worth looking into. You could also write some caching code
>>>based on shared memory in C and package it into a .so library and load it
>>>into Python.
>>>      
>>>
>
>  
>
>>See the soon-to-be released mod_python 3.1 alpha for mod_python support 
>>for shared memory.
>>That's a much easier route than trying to sort it all out yourself...
>>    
>>
>
>That's awesome news, David.  Any ideas when the code is likely to touch 
>down?
>
>Rob
>
>  
>
Guido is busy preparing it for release now, but remember that this will 
be an alpha version, I don't know how long it will take to stabilize...
Still if you're planning on doing shared memory stuff it would make more 
sense to help get 3.1 to a stable state than to write your own.
If you're interested in helping develop, join the 
python-dev@httpd.apache.org mailing list.

David


From grisha at modpython.org  Thu Aug 28 09:19:50 2003
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 22:04:08 2004
Subject: [mod_python] IPC, db conn sharing, and other fine things
In-Reply-To: <3F4DF423.9010801@sjsoft.com>
References: <Pine.LNX.4.44.0308281146590.1331-100000@gondolin.hist.liv.ac.uk>
 <3F4DF423.9010801@sjsoft.com>
Message-ID: <20030828091445.B37161@onyx.ispol.com>



On Thu, 28 Aug 2003, David Fraser wrote:

> Guido is busy preparing it for release now,

ROTFL! (It'd be nice if he was thought)

One small correction - 3.1 doesn't do anything with shared memory, it uses
dbm to store data across processes. It can also store session data in real
memory, but for that you have to be on a single-process multithreaded MPM,
such as winnt, or worker if it is configured to run with only one process.

Grisha
From grisha at apache.org  Thu Aug 28 21:12:50 2003
From: grisha at apache.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 22:04:08 2004
Subject: [mod_python] ANNOUNCE: Mod_python 3.1.0 Alpha
Message-ID: <20030828210644.C43921@onyx.ispol.com>


The Apache Software Foundation and The Apache HTTP Server Project are
pleased to announce the 3.1.0 ALPHA release mod_python.

Some feature highlights:

* Server-side sessions with memory or dbm-based storage and session
locking support.

* PSP - a fast flex-based scanner which allows embedding Python code
within HTML.

* Native cookie support, including support for automatic cryptographic
cookie signing and marshalling.

* Compatibility with Python 2.3, as well as many other enhancements.

Alpha releases are NOT considered stable and do contain bugs. Some
functionality may change before the first beta release.

This release is intended to solicit widespread testing of the code. We
strongly recommend that you try out your existing applications and
experiment with new features in a non-production environment using this
version and report any problems you may encounter so that they can be
addressed before the final release.

Mod_python 3.1.0a is available for download from:

http://httpd.apache.org/modules/python-download.cgi

Preferred method of providing feedback is the mod_python user list
mod_python@modpython.org (due to spam, you must subscribe to post).

For more information about mod_python visit
http://www.modpython.org/

Thank You,

Grisha Trubetskoy

From nelson at crynwr.com  Thu Aug 28 21:30:36 2003
From: nelson at crynwr.com (Russell Nelson)
Date: Fri Jan  9 22:04:08 2004
Subject: [mod_python] ANNOUNCE: Mod_python 3.1.0 Alpha
In-Reply-To: <20030828210644.C43921@onyx.ispol.com>
References: <20030828210644.C43921@onyx.ispol.com>
Message-ID: <16206.44220.488158.417635@desk.crynwr.com>

Gregory (Grisha) Trubetskoy writes:
 > 
 > The Apache Software Foundation and The Apache HTTP Server Project are
 > pleased to announce the 3.1.0 ALPHA release mod_python.

Hrm.  When is there going to be an i386 release?

-- 
:-)My blog is at angry-economist.russnelson.com  | Free markets express in the
Crynwr sells support for free software  | PGPok | practical world our belief
521 Pleasant Valley Rd. | +1 315 268 1925 voice | that there is that of God
Potsdam, NY 13676-3213  | +1 315 268 9201 FAX   | in all people. -Chris V.
From mike.looijmans at asml.com  Fri Aug 29 08:56:31 2003
From: mike.looijmans at asml.com (Mike Looijmans)
Date: Fri Jan  9 22:04:08 2004
Subject: [mod_python] Mod python sys.stdin 
Message-ID: <01c36dfa$ad1b3980$926a1e6e@wsasd464>

Don't use publisher if you want to read the request (e.g. from a POST)
directly. Publisher will have eaten the whole request before calling your
function.

Use a standard "handler", e.g. this (untested) one lets anyone POST a file
to the system in a cetain path, and report back how large it was and where
it was placed:

BUFSIZE=10240
SOMEBASEPATH = '/usr/local/uploads'

def handler(req):
    req.content_type = 'text/plain'
    destfilename = SOMEBASEPATH + req.path_info
    req.write('Writing: %s\n' % destfilename)
    dstfile = open(destfilename, 'wb')
    srcfile = req
    data = srcfile.read(BUFSIZE)
    c = 0
    while data:
        dstfile.write(data)
        c += len(data)
        data = srcfile.read(BUFSIZE)
    req.write('Wrote: %s bytes\n' % c)
    return apache.OK



-----Original Message-----
From: ktimm <ktimm@var-log.com>
To: mod_python@modpython.org <mod_python@modpython.org>
Date: Thursday, August 28, 2003 6:23 AM
Subject: [mod_python] Mod python sys.stdin


How do I get at sys.stdin with mod_python publisher. I know it's probably
something simple but I'm trying to convert an xml parser that was getting
though a cgi on sys.stdin and it keeps returning that there is no data to
parse.

Thanks
Kevin



-- 
The information contained in this communication and any attachments is confidential and may be privileged, and is for the sole use of the intended recipient(s). Any unauthorized review, use, disclosure or distribution is prohibited. If you are not the intended recipient, please notify the sender immediately by replying to this message and destroy all copies of this message and any attachments. ASML is neither liable for the proper and complete transmission of the information contained in this communication, nor for any delay in its receipt.


From wart at softhome.net  Fri Aug 29 11:34:14 2003
From: wart at softhome.net (Wartan Hachaturow)
Date: Fri Jan  9 22:04:08 2004
Subject: [mod_python] ANNOUNCE: Mod_python 3.1.0 Alpha
In-Reply-To: <16206.44220.488158.417635@desk.crynwr.com>
References: <20030828210644.C43921@onyx.ispol.com>
	<16206.44220.488158.417635@desk.crynwr.com>
Message-ID: <20030829073413.GA65122@daemon.tepkom.ru>

On Thu, Aug 28, 2003 at 09:30:36PM -0400, Russell Nelson wrote:

>  > pleased to announce the 3.1.0 ALPHA release mod_python.
> 
> Hrm.  When is there going to be an i386 release?

Don't forget that it's also available in the source form -- you're
free to port ;))

-- 
Regards, Wartan.
From gstein at lyra.org  Fri Aug 29 03:43:00 2003
From: gstein at lyra.org (Greg Stein)
Date: Fri Jan  9 22:04:08 2004
Subject: [mod_python] ANNOUNCE: Mod_python 3.1.0 Alpha
In-Reply-To: <20030829073413.GA65122@daemon.tepkom.ru>;
	from wart@softhome.net on Fri, Aug 29, 2003 at 11:34:14AM +0400
References: <20030828210644.C43921@onyx.ispol.com>
	<16206.44220.488158.417635@desk.crynwr.com>
	<20030829073413.GA65122@daemon.tepkom.ru>
Message-ID: <20030829034300.C12609@lyra.org>

> On Thu, Aug 28, 2003 at 09:30:36PM -0400, Russell Nelson wrote:
> 
> >  > pleased to announce the 3.1.0 ALPHA release mod_python.
> > 
> > Hrm.  When is there going to be an i386 release?

There wasn't a smiley here, so just to be sure: it's an alpha quality
release, not an Alpha architecture binary or something like that.

(knowing Russell's been around the industry for a _long_ time, I gotta
 believe he knew that, but that missing smiley... :-)

Cheers,
-g

-- 
Greg Stein, http://www.lyra.org/
From lairdshaw at yahoo.com.au  Fri Aug 29 20:44:41 2003
From: lairdshaw at yahoo.com.au (Laird Shaw)
Date: Fri Jan  9 22:04:08 2004
Subject: [mod_python] 
	Apache startup error using mod_python under Windows 2000 (have
	msvcr70.dll)
Message-ID: <001901c36e1a$95954a60$0a00a8c0@laird>

Hi all,

Apologies if I've missed the answer to this question somewhere, but I've
searched to no avail.

Whilst attempting to start, Apache fails with:

Syntax error on line 175 of C:/Program Files/Apache
Group/Apache2/conf/httpd.conf:
Cannot load C:/Program Files/Apache Group/Apache2/modules/mod_python.so into
server: The specified module could not be found.

I've checked that I've specified the correct path to mod_python.so.

I saw in another post that msvcr70.dll is required, and duly downloaded and
copied it into winnt\system32, believing I had solved the problem.  Alas, no
such luck.  Same error.

OS = Windows 2000 5.00.2195, Service pack 4
Python = 2.3
Apache = 2.0.47
msvcr70.dll = 7.00.9064.0

This is the relevent part of httpd.conf:

LoadModule python_module modules/mod_python.so

<Directory C:/data/webroot/htdocs>
  AddHandler python-program .py
  PythonHandler mptest
  PythonDebug On
</Directory>

As an aside, I am also running mod_perl and php4apache2 - but I don't
imagine they would affect anything.

I'm new to python - haven't even written a single line of code yet, however
I have run the interpreter to verify that it installed properly.

I have added C:\python23 to my path but haven't set any other environment
variables.

Thanks in advance,

Laird

From davidf at sjsoft.com  Fri Aug 29 13:20:33 2003
From: davidf at sjsoft.com (David Fraser)
Date: Fri Jan  9 22:04:08 2004
Subject: [mod_python] 	Apache startup error using mod_python under Windows
	2000 (have	msvcr70.dll)
In-Reply-To: <001901c36e1a$95954a60$0a00a8c0@laird>
References: <001901c36e1a$95954a60$0a00a8c0@laird>
Message-ID: <3F4F3701.3000401@sjsoft.com>

Laird Shaw wrote:

>Hi all,
>
>Apologies if I've missed the answer to this question somewhere, but I've
>searched to no avail.
>
>Whilst attempting to start, Apache fails with:
>
>Syntax error on line 175 of C:/Program Files/Apache
>Group/Apache2/conf/httpd.conf:
>Cannot load C:/Program Files/Apache Group/Apache2/modules/mod_python.so into
>server: The specified module could not be found.
>
>I've checked that I've specified the correct path to mod_python.so.
>
>I saw in another post that msvcr70.dll is required, and duly downloaded and
>copied it into winnt\system32, believing I had solved the problem.  Alas, no
>such luck.  Same error.
>
>OS = Windows 2000 5.00.2195, Service pack 4
>Python = 2.3
>Apache = 2.0.47
>msvcr70.dll = 7.00.9064.0
>  
>
I've had exactly the same problem, with a new Win2000 virtual machine, 
same versions of Python and Apache.
Didn't try add the dll though.

David


From grisha at modpython.org  Fri Aug 29 09:53:10 2003
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 22:04:08 2004
Subject: [mod_python] Apache startup error using mod_python under Windows
 2000 (have msvcr70.dll)
In-Reply-To: <3F4F3701.3000401@sjsoft.com>
References: <001901c36e1a$95954a60$0a00a8c0@laird>
	<3F4F3701.3000401@sjsoft.com>
Message-ID: <20030829095118.J43921@onyx.ispol.com>


It's not impossible that the distribution file is missing something,
though it seemed to have worked for me...

It shouldn't need msvcr70.dll anymore, something else is the problem.

Grisha

On Fri, 29 Aug 2003, David Fraser wrote:

> Laird Shaw wrote:
>
> >Hi all,
> >
> >Apologies if I've missed the answer to this question somewhere, but I've
> >searched to no avail.
> >
> >Whilst attempting to start, Apache fails with:
> >
> >Syntax error on line 175 of C:/Program Files/Apache
> >Group/Apache2/conf/httpd.conf:
> >Cannot load C:/Program Files/Apache Group/Apache2/modules/mod_python.so into
> >server: The specified module could not be found.
> >
> >I've checked that I've specified the correct path to mod_python.so.
> >
> >I saw in another post that msvcr70.dll is required, and duly downloaded and
> >copied it into winnt\system32, believing I had solved the problem.  Alas, no
> >such luck.  Same error.
> >
> >OS = Windows 2000 5.00.2195, Service pack 4
> >Python = 2.3
> >Apache = 2.0.47
> >msvcr70.dll = 7.00.9064.0
> >
> >
> I've had exactly the same problem, with a new Win2000 virtual machine,
> same versions of Python and Apache.
> Didn't try add the dll though.
>
> David
>
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>
From davidf at sjsoft.com  Fri Aug 29 16:26:41 2003
From: davidf at sjsoft.com (David Fraser)
Date: Fri Jan  9 22:04:08 2004
Subject: [mod_python] Apache startup error using mod_python under Windows
 2000 (have msvcr70.dll)
In-Reply-To: <20030829095118.J43921@onyx.ispol.com>
References: <001901c36e1a$95954a60$0a00a8c0@laird>
	<3F4F3701.3000401@sjsoft.com> <20030829095118.J43921@onyx.ispol.com>
Message-ID: <3F4F62A1.5030807@sjsoft.com>

Gregory (Grisha) Trubetskoy wrote:

>It's not impossible that the distribution file is missing something,
>though it seemed to have worked for me...
>
>It shouldn't need msvcr70.dll anymore, something else is the problem.
>
>Grisha
>  
>
Hmmm ... yes, the Dependency Walker with Visual Studio 6.0 shows exactly 
the same dependencies as for 3.0.3

David

From perry.tew at cibavision.novartis.com  Fri Aug 29 10:37:55 2003
From: perry.tew at cibavision.novartis.com (perry.tew@cibavision.novartis.com)
Date: Fri Jan  9 22:04:08 2004
Subject: [mod_python] 	Apache startup error using mod_python under Windows
	2000 (have	msvcr70.dll)
Message-ID: <OF369D809A.F682347B-ON85256D91.004FD7CA-85256D91.0050607E@EU.novartis.net>

Laird,
    I'm a newbie to mod_python, and I had the same problem  a few days 
back
when I tried to install and run mod_python under windows xp with python 
2.3. 
When I backed up to python 2.2, mod_python worked fine. 

I just installed the 3.1 alpha against python 2.3 and it works well.

My advice is to either back up to python 2.2 or go forward to mod_python 
3.1 alpha.

Hope this helps,
Perry







Laird Shaw wrote:

>Hi all,
>
>Apologies if I've missed the answer to this question somewhere, but I've
>searched to no avail.
>
>Whilst attempting to start, Apache fails with:
>
>Syntax error on line 175 of C:/Program Files/Apache
>Group/Apache2/conf/httpd.conf:
>Cannot load C:/Program Files/Apache Group/Apache2/modules/mod_python.so 
into
>server: The specified module could not be found.
>
>I've checked that I've specified the correct path to mod_python.so.
>
>I saw in another post that msvcr70.dll is required, and duly downloaded 
and
>copied it into winnt\system32, believing I had solved the problem.  Alas, 
no
>such luck.  Same error.
>
>OS = Windows 2000 5.00.2195, Service pack 4
>Python = 2.3
>Apache = 2.0.47
>msvcr70.dll = 7.00.9064.0
> 
>
I've had exactly the same problem, with a new Win2000 virtual machine, 
same versions of Python and Apache.
Didn't try add the dll though.

David


_______________________________________________
Mod_python mailing list
Mod_python@modpython.org
http://mailman.modpython.org/mailman/listinfo/mod_python


-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mailman.modpython.org/pipermail/mod_python/attachments/20030829/f740aa4f/attachment-0003.htm
From lairdshaw at yahoo.com.au  Sat Aug 30 00:48:18 2003
From: lairdshaw at yahoo.com.au (Laird Shaw)
Date: Fri Jan  9 22:04:08 2004
Subject: [mod_python] Apache startup error using mod_python under Windows
	2000 (have msvcr70.dll)
References: 
	<001901c36e1a$95954a60$0a00a8c0@laird><3F4F3701.3000401@sjsoft.com>
	<20030829095118.J43921@onyx.ispol.com> <3F4F62A1.5030807@sjsoft.com>
Message-ID: <004e01c36e3c$9d177840$0a00a8c0@laird>

This problem occurs with both 3.03 and 3.1.0a on my machine - David are you
able to run 3.0.3?  Are there other versions I could try?

----- Original Message ----- 
From: "David Fraser" <davidf@sjsoft.com>
To: "Gregory (Grisha) Trubetskoy" <grisha@modpython.org>
Cc: <mod_python@modpython.org>
Sent: Saturday, August 30, 2003 12:26 AM
Subject: Re: [mod_python] Apache startup error using mod_python under
Windows 2000 (have msvcr70.dll)


> Gregory (Grisha) Trubetskoy wrote:
>
> >It's not impossible that the distribution file is missing something,
> >though it seemed to have worked for me...
> >
> >It shouldn't need msvcr70.dll anymore, something else is the problem.
> >
> >Grisha
> >
> >
> Hmmm ... yes, the Dependency Walker with Visual Studio 6.0 shows exactly
> the same dependencies as for 3.0.3
>
> David
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python

From grisha at modpython.org  Fri Aug 29 11:06:42 2003
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 22:04:08 2004
Subject: [mod_python] Apache startup error using mod_python under Windows
 2000 (have msvcr70.dll)
In-Reply-To: <OF369D809A.F682347B-ON85256D91.004FD7CA-85256D91.0050607E@EU.novartis.net>
References: <OF369D809A.F682347B-ON85256D91.004FD7CA-85256D91.0050607E@EU.novartis.net>
Message-ID: <20030829110249.R53150@onyx.ispol.com>


Are you using stock Python, Win32 Python, Active or self-compiled?

Grisha

On Fri, 29 Aug 2003 perry.tew@cibavision.novartis.com wrote:

> Laird,
>     I'm a newbie to mod_python, and I had the same problem  a few days
> back
> when I tried to install and run mod_python under windows xp with python
> 2.3.
> When I backed up to python 2.2, mod_python worked fine.
>
> I just installed the 3.1 alpha against python 2.3 and it works well.
>
> My advice is to either back up to python 2.2 or go forward to mod_python
> 3.1 alpha.
>
> Hope this helps,
> Perry
>
>
>
>
>
>
>
> Laird Shaw wrote:
>
> >Hi all,
> >
> >Apologies if I've missed the answer to this question somewhere, but I've
> >searched to no avail.
> >
> >Whilst attempting to start, Apache fails with:
> >
> >Syntax error on line 175 of C:/Program Files/Apache
> >Group/Apache2/conf/httpd.conf:
> >Cannot load C:/Program Files/Apache Group/Apache2/modules/mod_python.so
> into
> >server: The specified module could not be found.
> >
> >I've checked that I've specified the correct path to mod_python.so.
> >
> >I saw in another post that msvcr70.dll is required, and duly downloaded
> and
> >copied it into winnt\system32, believing I had solved the problem.  Alas,
> no
> >such luck.  Same error.
> >
> >OS = Windows 2000 5.00.2195, Service pack 4
> >Python = 2.3
> >Apache = 2.0.47
> >msvcr70.dll = 7.00.9064.0
> >
> >
> I've had exactly the same problem, with a new Win2000 virtual machine,
> same versions of Python and Apache.
> Didn't try add the dll though.
>
> David
>
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>
>
>
From davidf at sjsoft.com  Fri Aug 29 17:39:06 2003
From: davidf at sjsoft.com (David Fraser)
Date: Fri Jan  9 22:04:08 2004
Subject: [mod_python] Apache startup error using mod_python under Windows
 2000 (have msvcr70.dll)
In-Reply-To: <004e01c36e3c$9d177840$0a00a8c0@laird>
References: 
	<001901c36e1a$95954a60$0a00a8c0@laird><3F4F3701.3000401@sjsoft.com>
	<20030829095118.J43921@onyx.ispol.com> <3F4F62A1.5030807@sjsoft.com>
	<004e01c36e3c$9d177840$0a00a8c0@laird>
Message-ID: <3F4F739A.1030804@sjsoft.com>

Laird Shaw wrote:

>This problem occurs with both 3.03 and 3.1.0a on my machine - David are you
>able to run 3.0.3?  Are there other versions I could try?
>  
>
I have successfully run 3.0.3 and apache 2 and Python 2 on another 
Windows 2000 machine.
It didn't occur to me that the problem may not be with 3.1.0a but with 
my virtual machine.
I haven't tested 3.0.3 on my Virtual Machine, I'll look at doing that 
but it'll have to be on Monday I'm afraid...
What might be helpful to know, is is there a generic way of debugging 
why the module is not loading?
David

>----- Original Message ----- 
>From: "David Fraser" <davidf@sjsoft.com>
>To: "Gregory (Grisha) Trubetskoy" <grisha@modpython.org>
>Cc: <mod_python@modpython.org>
>Sent: Saturday, August 30, 2003 12:26 AM
>Subject: Re: [mod_python] Apache startup error using mod_python under
>Windows 2000 (have msvcr70.dll)
>
>
>  
>
>>Gregory (Grisha) Trubetskoy wrote:
>>
>>    
>>
>>>It's not impossible that the distribution file is missing something,
>>>though it seemed to have worked for me...
>>>
>>>It shouldn't need msvcr70.dll anymore, something else is the problem.
>>>
>>>Grisha
>>>
>>>
>>>      
>>>
>>Hmmm ... yes, the Dependency Walker with Visual Studio 6.0 shows exactly
>>the same dependencies as for 3.0.3
>>
>>David
>>
>>_______________________________________________
>>Mod_python mailing list
>>Mod_python@modpython.org
>>http://mailman.modpython.org/mailman/listinfo/mod_python
>>    
>>
>
>  
>


From perry.tew at cibavision.novartis.com  Fri Aug 29 11:48:42 2003
From: perry.tew at cibavision.novartis.com (perry.tew@cibavision.novartis.com)
Date: Fri Jan  9 22:04:08 2004
Subject: [mod_python] Apache startup error using mod_python under Windows
	2000 (have msvcr70.dll)
Message-ID: <OF042EC003.33482BFF-ON85256D91.00560B6F-85256D91.0056DB3A@EU.novartis.net>

Grisha,
    I started with Python 2.3 from python.org (installed via .exe). 
Using mod_python 3.03, in order to make the "module not found" error 
disappear
I had to install Python 2.2.  I used ActiveState 2.2 for this install.  I 
then reinstalled 
3.03 and it installed in the 2.2 tree.  The apache error then disappeared. 
 

This morning I tried out 3.1 alpha against stock Python 2.3 from 
python.org and it worked without 
error. 

I hope I'm not muddying the water relating my experience, but as the 
newbie, running standard exe installs that's
what I encountered.

I could try to replicate the error if you'd like.  I think I can find a 
virgin xp box laying around to test
if it was something I did or something with the layout of the system.

On a side note:
I've really enjoyed mod_python.  Thank you for your time and effort. Also, 
thank you for the
excellent install program. 

Perry Tew



Are you using stock Python, Win32 Python, Active or self-compiled?

Grisha

On Fri, 29 Aug 2003 perry.tew@cibavision.novartis.com wrote:

> Laird,
>     I'm a newbie to mod_python, and I had the same problem  a few days
> back
> when I tried to install and run mod_python under windows xp with python
> 2.3.
> When I backed up to python 2.2, mod_python worked fine.
>
> I just installed the 3.1 alpha against python 2.3 and it works well.
>
> My advice is to either back up to python 2.2 or go forward to mod_python
> 3.1 alpha.
>
> Hope this helps,
> Perry
>
>
>
>
>
>
>
> Laird Shaw wrote:
>
> >Hi all,
> >
> >Apologies if I've missed the answer to this question somewhere, but 
I've
> >searched to no avail.
> >
> >Whilst attempting to start, Apache fails with:
> >
> >Syntax error on line 175 of C:/Program Files/Apache
> >Group/Apache2/conf/httpd.conf:
> >Cannot load C:/Program Files/Apache Group/Apache2/modules/mod_python.so
> into
> >server: The specified module could not be found.
> >
> >I've checked that I've specified the correct path to mod_python.so.
> >
> >I saw in another post that msvcr70.dll is required, and duly downloaded
> and
> >copied it into winnt\system32, believing I had solved the problem. 
Alas,
> no
> >such luck.  Same error.
> >
> >OS = Windows 2000 5.00.2195, Service pack 4
> >Python = 2.3
> >Apache = 2.0.47
> >msvcr70.dll = 7.00.9064.0
> >
> >
> I've had exactly the same problem, with a new Win2000 virtual machine,
> same versions of Python and Apache.
> Didn't try add the dll though.
>
> David
>
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>
>
>


-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mailman.modpython.org/pipermail/mod_python/attachments/20030829/605d7087/attachment-0003.htm
From lairdshaw at yahoo.com.au  Sat Aug 30 01:56:18 2003
From: lairdshaw at yahoo.com.au (Laird Shaw)
Date: Fri Jan  9 22:04:08 2004
Subject: [mod_python] Apache startup error using mod_python under Windows
	2000 (have msvcr70.dll)
References: 
	<OF369D809A.F682347B-ON85256D91.004FD7CA-85256D91.0050607E@EU.novartis.net>
	<20030829110249.R53150@onyx.ispol.com>
Message-ID: <001201c36e46$1f72d010$0a00a8c0@laird>

Your advice solved my problem, Perry.  I uninstalled Python 2.3 and
mod_python, then downloaded and installed Python 2.2.  Then I installed
mod_python 3.0.3, started up Apache and navigated to the test page: worked
fine.  I can reattest that neither mod_python 3.0.3 nor mod_python 3.1.0a
worked with my setup using Python 2.3 - which is a pity as it's nice to use
the latest and greatest version of languages.

Grisha, I don't know whether your question was for Perry or me, but I'll
answer anyway: I installed Python from this windows installer:
http://www.python.org/ftp/python/2.2.3/Python-2.2.3.exe.

Much appreciated,
Laird

----- Original Message ----- 
From: "Gregory (Grisha) Trubetskoy" <grisha@modpython.org>
To: <perry.tew@cibavision.novartis.com>
Cc: <Mod_python@modpython.org>
Sent: Saturday, August 30, 2003 1:06 AM
Subject: Re: [mod_python] Apache startup error using mod_python under
Windows 2000 (have msvcr70.dll)


>
> Are you using stock Python, Win32 Python, Active or self-compiled?
>
> Grisha
>
> On Fri, 29 Aug 2003 perry.tew@cibavision.novartis.com wrote:
>
> > Laird,
> >     I'm a newbie to mod_python, and I had the same problem  a few days
> > back
> > when I tried to install and run mod_python under windows xp with python
> > 2.3.
> > When I backed up to python 2.2, mod_python worked fine.
> >
> > I just installed the 3.1 alpha against python 2.3 and it works well.
> >
> > My advice is to either back up to python 2.2 or go forward to mod_python
> > 3.1 alpha.
> >
> > Hope this helps,
> > Perry
> >
> >
> >
> >
> >
> >
> >
> > Laird Shaw wrote:
> >
> > >Hi all,
> > >
> > >Apologies if I've missed the answer to this question somewhere, but
I've
> > >searched to no avail.
> > >
> > >Whilst attempting to start, Apache fails with:
> > >
> > >Syntax error on line 175 of C:/Program Files/Apache
> > >Group/Apache2/conf/httpd.conf:
> > >Cannot load C:/Program Files/Apache Group/Apache2/modules/mod_python.so
> > into
> > >server: The specified module could not be found.
> > >
> > >I've checked that I've specified the correct path to mod_python.so.
> > >
> > >I saw in another post that msvcr70.dll is required, and duly downloaded
> > and
> > >copied it into winnt\system32, believing I had solved the problem.
Alas,
> > no
> > >such luck.  Same error.
> > >
> > >OS = Windows 2000 5.00.2195, Service pack 4
> > >Python = 2.3
> > >Apache = 2.0.47
> > >msvcr70.dll = 7.00.9064.0
> > >
> > >
> > I've had exactly the same problem, with a new Win2000 virtual machine,
> > same versions of Python and Apache.
> > Didn't try add the dll though.
> >
> > David
> >
> >
> > _______________________________________________
> > Mod_python mailing list
> > Mod_python@modpython.org
> > http://mailman.modpython.org/mailman/listinfo/mod_python
> >
> >
> >
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python

From lairdshaw at yahoo.com.au  Sat Aug 30 01:58:52 2003
From: lairdshaw at yahoo.com.au (Laird Shaw)
Date: Fri Jan  9 22:04:08 2004
Subject: [mod_python] Apache startup error using mod_python under Windows
	2000 (have msvcr70.dll)
References: 
	<001901c36e1a$95954a60$0a00a8c0@laird><3F4F3701.3000401@sjsoft.com>
	<20030829095118.J43921@onyx.ispol.com> <3F4F62A1.5030807@sjsoft.com>
	<004e01c36e3c$9d177840$0a00a8c0@laird> <3F4F739A.1030804@sjsoft.com>
Message-ID: <001f01c36e46$7ab404d0$0a00a8c0@laird>

Slightly off-topic so feel free to reply privately but you piqued my
curiosity - Windows 2000 virtual machine?  What is the 'actual machine' on
which it is running?

----- Original Message ----- 
From: "David Fraser" <davidf@sjsoft.com>
To: "Laird Shaw" <lairdshaw@yahoo.com.au>
Cc: "Gregory (Grisha) Trubetskoy" <grisha@modpython.org>;
<mod_python@modpython.org>
Sent: Saturday, August 30, 2003 1:39 AM
Subject: Re: [mod_python] Apache startup error using mod_python under
Windows 2000 (have msvcr70.dll)


> Laird Shaw wrote:
>
> >This problem occurs with both 3.03 and 3.1.0a on my machine - David are
you
> >able to run 3.0.3?  Are there other versions I could try?
> >
> >
> I have successfully run 3.0.3 and apache 2 and Python 2 on another
> Windows 2000 machine.
> It didn't occur to me that the problem may not be with 3.1.0a but with
> my virtual machine.
> I haven't tested 3.0.3 on my Virtual Machine, I'll look at doing that
> but it'll have to be on Monday I'm afraid...
> What might be helpful to know, is is there a generic way of debugging
> why the module is not loading?
> David
>
> >----- Original Message ----- 
> >From: "David Fraser" <davidf@sjsoft.com>
> >To: "Gregory (Grisha) Trubetskoy" <grisha@modpython.org>
> >Cc: <mod_python@modpython.org>
> >Sent: Saturday, August 30, 2003 12:26 AM
> >Subject: Re: [mod_python] Apache startup error using mod_python under
> >Windows 2000 (have msvcr70.dll)
> >
> >
> >
> >
> >>Gregory (Grisha) Trubetskoy wrote:
> >>
> >>
> >>
> >>>It's not impossible that the distribution file is missing something,
> >>>though it seemed to have worked for me...
> >>>
> >>>It shouldn't need msvcr70.dll anymore, something else is the problem.
> >>>
> >>>Grisha
> >>>
> >>>
> >>>
> >>>
> >>Hmmm ... yes, the Dependency Walker with Visual Studio 6.0 shows exactly
> >>the same dependencies as for 3.0.3
> >>
> >>David
> >>
> >>_______________________________________________
> >>Mod_python mailing list
> >>Mod_python@modpython.org
> >>http://mailman.modpython.org/mailman/listinfo/mod_python
> >>
> >>
> >
> >
> >
>

From davidf at sjsoft.com  Fri Aug 29 18:05:45 2003
From: davidf at sjsoft.com (David Fraser)
Date: Fri Jan  9 22:04:08 2004
Subject: [mod_python] Apache startup error using mod_python under Windows
 2000 (have msvcr70.dll)
In-Reply-To: <001f01c36e46$7ab404d0$0a00a8c0@laird>
References: 
	<001901c36e1a$95954a60$0a00a8c0@laird><3F4F3701.3000401@sjsoft.com>
	<20030829095118.J43921@onyx.ispol.com> <3F4F62A1.5030807@sjsoft.com>
	<004e01c36e3c$9d177840$0a00a8c0@laird> <3F4F739A.1030804@sjsoft.com>
	<001f01c36e46$7ab404d0$0a00a8c0@laird>
Message-ID: <3F4F79D9.7070007@sjsoft.com>

Laird Shaw wrote:

>Slightly off-topic so feel free to reply privately but you piqued my
>curiosity - Windows 2000 virtual machine?  What is the 'actual machine' on
>which it is running?
>
>  
>
I'm running it on a RedHat Linux 7.3 box with VMWare.
David

From davidf at sjsoft.com  Fri Aug 29 18:14:42 2003
From: davidf at sjsoft.com (David Fraser)
Date: Fri Jan  9 22:04:08 2004
Subject: [mod_python] Apache startup error using mod_python under Windows
 2000 (have msvcr70.dll)
In-Reply-To: <001201c36e46$1f72d010$0a00a8c0@laird>
References: 
	<OF369D809A.F682347B-ON85256D91.004FD7CA-85256D91.0050607E@EU.novartis.net>
	<20030829110249.R53150@onyx.ispol.com> <001201c36e46$1f72d010$0a00a8c0@laird>
Message-ID: <3F4F7BF2.2090106@sjsoft.com>

Laird Shaw wrote:

>Your advice solved my problem, Perry.  I uninstalled Python 2.3 and
>mod_python, then downloaded and installed Python 2.2.  Then I installed
>mod_python 3.0.3, started up Apache and navigated to the test page: worked
>fine.  I can reattest that neither mod_python 3.0.3 nor mod_python 3.1.0a
>worked with my setup using Python 2.3 - which is a pity as it's nice to use
>the latest and greatest version of languages.
>
>Grisha, I don't know whether your question was for Perry or me, but I'll
>answer anyway: I installed Python from this windows installer:
>http://www.python.org/ftp/python/2.2.3/Python-2.2.3.exe.
>
>Much appreciated,
>Laird
>  
>
mod_python 3.0.3 won't work with Python 2.3 as it's compiled for Python 
2.2 - and in addition,
the "compatibility fixes" that are listed in the mod_python 3.1a for 
Python 2.3 presumably are neccessary...
However it would be helpful to determine if the problem is related to 
Python 2.3, and the easiest way to do that...
would be to have an installer for mod_python 3.1a for Python 2.2! Grisha?

David

>----- Original Message ----- 
>From: "Gregory (Grisha) Trubetskoy" <grisha@modpython.org>
>To: <perry.tew@cibavision.novartis.com>
>Cc: <Mod_python@modpython.org>
>Sent: Saturday, August 30, 2003 1:06 AM
>Subject: Re: [mod_python] Apache startup error using mod_python under
>Windows 2000 (have msvcr70.dll)
>
>
>  
>
>>Are you using stock Python, Win32 Python, Active or self-compiled?
>>
>>Grisha
>>
>>On Fri, 29 Aug 2003 perry.tew@cibavision.novartis.com wrote:
>>
>>    
>>
>>>Laird,
>>>    I'm a newbie to mod_python, and I had the same problem  a few days
>>>back
>>>when I tried to install and run mod_python under windows xp with python
>>>2.3.
>>>When I backed up to python 2.2, mod_python worked fine.
>>>
>>>I just installed the 3.1 alpha against python 2.3 and it works well.
>>>
>>>My advice is to either back up to python 2.2 or go forward to mod_python
>>>3.1 alpha.
>>>
>>>Hope this helps,
>>>Perry
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>Laird Shaw wrote:
>>>
>>>      
>>>
>>>>Hi all,
>>>>
>>>>Apologies if I've missed the answer to this question somewhere, but
>>>>        
>>>>
>I've
>  
>
>>>>searched to no avail.
>>>>
>>>>Whilst attempting to start, Apache fails with:
>>>>
>>>>Syntax error on line 175 of C:/Program Files/Apache
>>>>Group/Apache2/conf/httpd.conf:
>>>>Cannot load C:/Program Files/Apache Group/Apache2/modules/mod_python.so
>>>>        
>>>>
>>>into
>>>      
>>>
>>>>server: The specified module could not be found.
>>>>
>>>>I've checked that I've specified the correct path to mod_python.so.
>>>>
>>>>I saw in another post that msvcr70.dll is required, and duly downloaded
>>>>        
>>>>
>>>and
>>>      
>>>
>>>>copied it into winnt\system32, believing I had solved the problem.
>>>>        
>>>>
>Alas,
>  
>
>>>no
>>>      
>>>
>>>>such luck.  Same error.
>>>>
>>>>OS = Windows 2000 5.00.2195, Service pack 4
>>>>Python = 2.3
>>>>Apache = 2.0.47
>>>>msvcr70.dll = 7.00.9064.0
>>>>
>>>>
>>>>        
>>>>
>>>I've had exactly the same problem, with a new Win2000 virtual machine,
>>>same versions of Python and Apache.
>>>Didn't try add the dll though.
>>>
>>>David
>>>
>>>
>>>_______________________________________________
>>>Mod_python mailing list
>>>Mod_python@modpython.org
>>>http://mailman.modpython.org/mailman/listinfo/mod_python
>>>
>>>
>>>
>>>      
>>>
>>_______________________________________________
>>Mod_python mailing list
>>Mod_python@modpython.org
>>http://mailman.modpython.org/mailman/listinfo/mod_python
>>    
>>
>
>_______________________________________________
>Mod_python mailing list
>Mod_python@modpython.org
>http://mailman.modpython.org/mailman/listinfo/mod_python
>
>  
>


From grisha at modpython.org  Fri Aug 29 12:32:33 2003
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 22:04:08 2004
Subject: [mod_python] Apache startup error using mod_python under Windows
 2000 (have msvcr70.dll)
In-Reply-To: <3F4F7BF2.2090106@sjsoft.com>
References: <OF369D809A.F682347B-ON85256D91.004FD7CA-85256D91.0050607E@EU.novartis.net>
	<001201c36e46$1f72d010$0a00a8c0@laird> <3F4F7BF2.2090106@sjsoft.com>
Message-ID: <20030829121653.W53150@onyx.ispol.com>



On Fri, 29 Aug 2003, David Fraser wrote:

> Python 2.3, and the easiest way to do that...
> would be to have an installer for mod_python 3.1a for Python 2.2! Grisha?

Getting a version for Python 2.2 is tricky because the production
of the installer requires 2.3, so what I had to do in the past is compile
for 2.2, but then use 2.3 for the installer, so it's a bit of a pain.

What we really need to do is figure out what is different between our
systems.

Just to summarise, is this correct? (I am only concerned with 3.1.0a here,
NOT 3.0.3).

"stock" means the binary from www.python.org, as opposed to Win32, Active
or compiled. All Apache is the binary from www.apache.org.

       |  mod_py  | Python    | Apache | Win. |
-------------------------------------------------------
Perry  |  3.1.0a  | stock 2.3 | 2.0.47 | ?    | OK
Grisha |  3.1.0a  | stock 2.3 | 2.0.47 | 2000 | OK
David  |  3.1.0a  | stock 2.3 | 2.0.47 | 2000 | NOT OK
Laird  |  3.1.0a  | stock 2.3 | 2.0.47 | 2000 | NOT OK

Grisha
From lairdshaw at yahoo.com.au  Sat Aug 30 02:37:56 2003
From: lairdshaw at yahoo.com.au (Laird Shaw)
Date: Fri Jan  9 22:04:08 2004
Subject: [mod_python] Apache startup error using mod_python under Windows
	2000 (have msvcr70.dll)
References: 
	<OF369D809A.F682347B-ON85256D91.004FD7CA-85256D91.0050607E@EU.novartis.net>
	<20030829110249.R53150@onyx.ispol.com> <001201c36e46$1f72d010$0a00a8c0@laird>
	<3F4F7BF2.2090106@sjsoft.com> <20030829121653.W53150@onyx.ispol.com>
Message-ID: <004501c36e4b$f9ee1c40$0a00a8c0@laird>

Yes that's right for me.

----- Original Message ----- 
From: "Gregory (Grisha) Trubetskoy" <grisha@modpython.org>
To: "David Fraser" <davidf@sjsoft.com>
Cc: "Laird Shaw" <lairdshaw@yahoo.com.au>; "Gregory (Grisha) Trubetskoy"
<grisha@modpython.org>; <perry.tew@cibavision.novartis.com>;
<Mod_python@modpython.org>
Sent: Saturday, August 30, 2003 2:32 AM
Subject: Re: [mod_python] Apache startup error using mod_python under
Windows 2000 (have msvcr70.dll)


>
>
> On Fri, 29 Aug 2003, David Fraser wrote:
>
> > Python 2.3, and the easiest way to do that...
> > would be to have an installer for mod_python 3.1a for Python 2.2!
Grisha?
>
> Getting a version for Python 2.2 is tricky because the production
> of the installer requires 2.3, so what I had to do in the past is compile
> for 2.2, but then use 2.3 for the installer, so it's a bit of a pain.
>
> What we really need to do is figure out what is different between our
> systems.
>
> Just to summarise, is this correct? (I am only concerned with 3.1.0a here,
> NOT 3.0.3).
>
> "stock" means the binary from www.python.org, as opposed to Win32, Active
> or compiled. All Apache is the binary from www.apache.org.
>
>        |  mod_py  | Python    | Apache | Win. |
> -------------------------------------------------------
> Perry  |  3.1.0a  | stock 2.3 | 2.0.47 | ?    | OK
> Grisha |  3.1.0a  | stock 2.3 | 2.0.47 | 2000 | OK
> David  |  3.1.0a  | stock 2.3 | 2.0.47 | 2000 | NOT OK
> Laird  |  3.1.0a  | stock 2.3 | 2.0.47 | 2000 | NOT OK
>
> Grisha

From perry.tew at cibavision.novartis.com  Fri Aug 29 13:09:13 2003
From: perry.tew at cibavision.novartis.com (perry.tew@cibavision.novartis.com)
Date: Fri Jan  9 22:04:09 2004
Subject: [mod_python] Apache startup error using mod_python under Windows
	2000 (have msvcr70.dll)
Message-ID: <OF945AE48D.A46949C9-ON85256D91.005DC170-85256D91.005E3A5E@EU.novartis.net>

Grisha, 
   My version of windows is Windows XP Version 2002.

FYI, I don't know what testing hardware you have, but we have XP and 
Solaris 8 in house. 
We'll also have some Solaris 9 shortly.  Additionally, I can set up some 
HPUX 11i  boxes if needed.
I say this not to brag, but only to offer help if you need additional 
platforms to run tests on for your 
new alpha version.

Thanks,
Perry







On Fri, 29 Aug 2003, David Fraser wrote:

> Python 2.3, and the easiest way to do that...
> would be to have an installer for mod_python 3.1a for Python 2.2! 
Grisha?

Getting a version for Python 2.2 is tricky because the production
of the installer requires 2.3, so what I had to do in the past is compile
for 2.2, but then use 2.3 for the installer, so it's a bit of a pain.

What we really need to do is figure out what is different between our
systems.

Just to summarise, is this correct? (I am only concerned with 3.1.0a here,
NOT 3.0.3).

"stock" means the binary from www.python.org, as opposed to Win32, Active
or compiled. All Apache is the binary from www.apache.org.

       |  mod_py  | Python    | Apache | Win. |
-------------------------------------------------------
Perry  |  3.1.0a  | stock 2.3 | 2.0.47 | ?    | OK
Grisha |  3.1.0a  | stock 2.3 | 2.0.47 | 2000 | OK
David  |  3.1.0a  | stock 2.3 | 2.0.47 | 2000 | NOT OK
Laird  |  3.1.0a  | stock 2.3 | 2.0.47 | 2000 | NOT OK

Grisha


-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mailman.modpython.org/pipermail/mod_python/attachments/20030829/43917b96/attachment-0003.htm
From barry at python.org  Fri Aug 29 15:57:44 2003
From: barry at python.org (Barry Warsaw)
Date: Fri Jan  9 22:04:09 2004
Subject: [mod_python] Child shutdowns?
Message-ID: <1062187064.4895.7.camel@yyz>

I'm very likely missing it, but is there some way to run a callable when
the child processes are terminated (i.e. through apachectl stop)?

Seems like the server object's register_cleanup() ought to do it, except
that I have some startup code that gets run when my main module is
imported and at that point I don't have a request object to use as the
first argument to register_cleanup().

Any hints (or examples!)?

Thanks,
-Barry


From conrad at hep.caltech.edu  Fri Aug 29 13:29:41 2003
From: conrad at hep.caltech.edu (Conrad Steenberg)
Date: Fri Jan  9 22:04:09 2004
Subject: [mod_python] ANNOUNCE: Mod_python 3.1.0 Alpha
In-Reply-To: <20030828210644.C43921@onyx.ispol.com>
References: <20030828210644.C43921@onyx.ispol.com>
Message-ID: <1062188981.14514.296.camel@heppc22>

Hi

Tested here to be working under an OpenPKG-1.3 (ish) environment.

Any pointers to higher level tools that works with the included version
of PSP (such as for constructing a news or blogging site)? There seems
to be at least two other projects also calling themselves PSP ;-)

Cheers

Conrad

On Thu, 2003-08-28 at 18:12, Gregory (Grisha) Trubetskoy wrote:
> The Apache Software Foundation and The Apache HTTP Server Project are
> pleased to announce the 3.1.0 ALPHA release mod_python.
> 
> Some feature highlights:
> 
> * Server-side sessions with memory or dbm-based storage and session
> locking support.
> 
> * PSP - a fast flex-based scanner which allows embedding Python code
> within HTML.
> 
> * Native cookie support, including support for automatic cryptographic
> cookie signing and marshalling.
> 
> * Compatibility with Python 2.3, as well as many other enhancements.
> 
> Alpha releases are NOT considered stable and do contain bugs. Some
> functionality may change before the first beta release.
> 
> This release is intended to solicit widespread testing of the code. We
> strongly recommend that you try out your existing applications and
> experiment with new features in a non-production environment using this
> version and report any problems you may encounter so that they can be
> addressed before the final release.
> 
> Mod_python 3.1.0a is available for download from:
> 
> http://httpd.apache.org/modules/python-download.cgi
> 
> Preferred method of providing feedback is the mod_python user list
> mod_python@modpython.org (due to spam, you must subscribe to post).
> 
> For more information about mod_python visit
> http://www.modpython.org/
> 
> Thank You,
> 
> Grisha Trubetskoy
> 
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
-- 
Conrad Steenberg <conrad@hep.caltech.edu>

From grisha at modpython.org  Fri Aug 29 17:11:28 2003
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 22:04:09 2004
Subject: [mod_python] Child shutdowns?
In-Reply-To: <1062187064.4895.7.camel@yyz>
References: <1062187064.4895.7.camel@yyz>
Message-ID: <20030829164056.W56156@onyx.ispol.com>


Barry

If I remember this correctly, from the viewpoint of Apache, to create a
server object (or server_rec structure) you need to have a request,
because a server is created based on what the "Host:" header says (if it
is there at all) and by then going throught the config to see if there is
anything relevant. Once a server is created, it is cached and reused, but
it is not created at Apache startup (as an extreme example, mod_vhost
allows you to create an unlimited number of virtual servers without
specifying them in the config at all - so there is no way to know what the
server name is until a request for it comes in).

I don't know if Apache provides a way to do something at server creation
time, I'll check it out, but it's unlikely. For right now, the only way to
register a server cleanup is from within a request :-(

Grisha

On Fri, 29 Aug 2003, Barry Warsaw wrote:

> I'm very likely missing it, but is there some way to run a callable when
> the child processes are terminated (i.e. through apachectl stop)?
>
> Seems like the server object's register_cleanup() ought to do it, except
> that I have some startup code that gets run when my main module is
> imported and at that point I don't have a request object to use as the
> first argument to register_cleanup().
>
> Any hints (or examples!)?
>
> Thanks,
> -Barry
>
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>
From grisha at apache.org  Fri Aug 29 17:21:57 2003
From: grisha at apache.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 22:04:09 2004
Subject: [mod_python] ANNOUNCE: Mod_python 3.1.0 Alpha
In-Reply-To: <1062188981.14514.296.camel@heppc22>
References: <20030828210644.C43921@onyx.ispol.com>
	<1062188981.14514.296.camel@heppc22>
Message-ID: <20030829171157.O56156@onyx.ispol.com>

On Fri, 29 Aug 2003, Conrad Steenberg wrote:

> Hi
>
> Tested here to be working under an OpenPKG-1.3 (ish) environment.
>
> Any pointers to higher level tools that works with the included version
> of PSP (such as for constructing a news or blogging site)? There seems
> to be at least two other projects also calling themselves PSP ;-)

There is even one called Perl Server Pages :-)

I doubt there are any tools, since our PSP is brand new. B

But it's rather simplistic. For everyone's info:

This describes the syntax:

http://www.modpython.org/live/mod_python-3.1.0a/doc-html/pyapi-psp.html

And this describes the psp handler (things like sessions, etc):

http://www.modpython.org/live/mod_python-3.1.0a/doc-html/pyapi-psp.html

Also, if you have any JSP experience, there was an e-mail on the dev list
regarding how it corresponds to PSP, which I'll forward to this list
(because I forgot where the dev list archives are).

Grisha

From grisha at apache.org  Fri Aug 29 17:23:24 2003
From: grisha at apache.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 22:04:09 2004
Subject: [mod_python] PSP Notes (fwd)
Message-ID: <20030829172210.D56156@onyx.ispol.com>


---------- Forwarded message ----------
Date: Wed, 13 Aug 2003 14:34:14 -0400 (EDT)
From: "Gregory (Grisha) Trubetskoy" <grisha@apache.org>
To: python-dev@httpd.apache.org
Subject: PSP Notes


As an excercise in PSP usability, I've been going through JSP examples
from Tomcat and rewriting them using PSP, here are random notes on the
subject.


* JSP has a notion of an application (e.g. "/apps/mywebapp") with a
document root (e.g. /home/www/blah). Some stuff (e.g. location of classes)
then becomes relative to those paths. In PSP there isn't really a clear
concept of an application, but the closest thing to that is the directory
in which the PythonHandler directive is specified. This is nothing new,
btw, it's always how mod_python worked. So if you have:

<Directory /home/www/psp>
  AddHandler mod_python .psp   <--note the new clever handler name
  PythonHandler mod_python.psp
</Directory>

...then /home/www/psp will be prepended to sys.path, therefore if you
create a directory /home/www/psp/pylib, you could import a module from a
psp file like this:

<%
from pylib import mymodule
%>

This way you have your entire application under /home/www/psp, you can
use, say, /home/www/psp/html for psp/html and all your Python modules are
in /home/www/pylib, giving you a clear separation of logic and interface.


* Next thing that I ran into is having to reload mymodule if it changes.
There is now a new recommended way of doing this:

mymodule = apache.import_module("pylib.mymodule")

This is the same function that mod_python uses internally for autorelad
and takes care of all your reload needs. It does stat the file every time,
so when you're sure you won't need to reload the page, just change it to:

mymodule = apache.import_module("pylib.mymodule", autoreload=0)


* JSP page import directive

JSP:

<%@ page import = "num.NumberGuessBean" %>

PSP:

<%
num = apache.import_module("pylib.num")
%>
... now you've got num.NumberGuessBean, you get the idea


* JSP useBean action

JSP:

<jsp:useBean id="numguess" class="num.NumberGuessBean" scope="session"/>

This means that numguess is an instance of num.NumberGuessBean and it will
persist for as long as the session exists.

PSP (again, no need for special syntax):

<%
numguess = session.setdefault("numguess", num.NumberGuessBean())
%>


* JSP setProperty

This will match up form elements and set them in a Java object. So if the
object defines setColor() and the form contains a field "Color", JSP will
call setColor passing value of color as the argument.

JSP:

<jsp:setProperty name="numguess" property="*"/>

PSP:

Well, there isn't exactly this functionality, but there is something
different. You can use the same functionality that the publisher handler
uses to match up form elements with a function:

class Car:

    def __init__(self, color):

         # do something

Then a psp page called as result of a form submition can do this:

<%
car = psp.apply_data(Car)
%>

This will call the callable object Car (classes are callable), passing it
the value of "color", and resulting in an instance of Car which is
assigned to car.


* <%@ page session="false"%>

In JSP this means don't create a session for this page. This is really
easy in PSP - just don't mention the "session" variable in your page. The
psp handler examines the code for mentions of "session" and generates (and
locks) one if it encounters such mentions.


* page errorPage

JSP allows you to specify a special error page to be displayed when an
exception is thrown.

JSP:
<%@ page errorPage="errorpge.jsp" %>

PSP:
<%
psp.set_error_page("errorpge.psp")
%>

When (if) errorpge.psp is invoked, it will have a global "exception"
variable which will contain same info as returned by sys.exc_info().

* include

Of course, PSP supports <%@ include file="blah.html"%>



Grisha
From barry at python.org  Fri Aug 29 17:47:20 2003
From: barry at python.org (Barry Warsaw)
Date: Fri Jan  9 22:04:09 2004
Subject: [mod_python] Child shutdowns?
In-Reply-To: <20030829164056.W56156@onyx.ispol.com>
References: <1062187064.4895.7.camel@yyz>
	 <20030829164056.W56156@onyx.ispol.com>
Message-ID: <1062193640.4895.13.camel@yyz>

On Fri, 2003-08-29 at 17:11, Gregory (Grisha) Trubetskoy wrote:
> Barry
> 
> If I remember this correctly, from the viewpoint of Apache, to create a
> server object (or server_rec structure) you need to have a request,
> because a server is created based on what the "Host:" header says (if it
> is there at all) and by then going throught the config to see if there is
> anything relevant. Once a server is created, it is cached and reused, but
> it is not created at Apache startup (as an extreme example, mod_vhost
> allows you to create an unlimited number of virtual servers without
> specifying them in the config at all - so there is no way to know what the
> server name is until a request for it comes in).
> 
> I don't know if Apache provides a way to do something at server creation
> time, I'll check it out, but it's unlikely. For right now, the only way to
> register a server cleanup is from within a request :-(

Thanks Grisha, both for the info and the offer to poke around.  I'll try
pushing my startup code into my request handler, and see if registering
my cleanup code at that time will work.

Cheers,
-Barry


From gstein at lyra.org  Fri Aug 29 14:56:55 2003
From: gstein at lyra.org (Greg Stein)
Date: Fri Jan  9 22:04:09 2004
Subject: [mod_python] Child shutdowns?
In-Reply-To: <20030829164056.W56156@onyx.ispol.com>;
	from grisha@modpython.org on Fri, Aug 29, 2003 at 05:11:28PM -0400
References: <1062187064.4895.7.camel@yyz>
	<20030829164056.W56156@onyx.ispol.com>
Message-ID: <20030829145655.D14389@lyra.org>

On Fri, Aug 29, 2003 at 05:11:28PM -0400, Gregory (Grisha) Trubetskoy wrote:
> 
> Barry
> 
> If I remember this correctly, from the viewpoint of Apache, to create a
> server object (or server_rec structure) you need to have a request,
> because a server is created based on what the "Host:" header says (if it

Nope, sorry.

The server_rec structures are created at server-startup time when we parse
the configuration file. There is a server_rec per virtual host, plus one
for the default server.

At request time, the appropriate server_rec is looked up and passed along
as part of the request processing.

> is there at all) and by then going throught the config to see if there is
> anything relevant. Once a server is created, it is cached and reused, but
> it is not created at Apache startup (as an extreme example, mod_vhost
> allows you to create an unlimited number of virtual servers without
> specifying them in the config at all - so there is no way to know what the
> server name is until a request for it comes in).

Dunno how mod_vhost does it. The typical scenario is the construction at
startup time.

> I don't know if Apache provides a way to do something at server creation
> time, I'll check it out, but it's unlikely. For right now, the only way to
> register a server cleanup is from within a request :-(

The post_config hook is possibly one place to do this. It gets a pool
associated with the process.

There is also a child_init hook, which I believe is called whenever a new
child is spun up. That is probably a more appropriate place. It gets a
pool associated with the child.

If you can get a function registered as a cleanup on that pool, then
you'll be all set.

Cheers,
-g

> 
> Grisha
> 
> On Fri, 29 Aug 2003, Barry Warsaw wrote:
> 
> > I'm very likely missing it, but is there some way to run a callable when
> > the child processes are terminated (i.e. through apachectl stop)?
> >
> > Seems like the server object's register_cleanup() ought to do it, except
> > that I have some startup code that gets run when my main module is
> > imported and at that point I don't have a request object to use as the
> > first argument to register_cleanup().
> >
> > Any hints (or examples!)?
> >
> > Thanks,
> > -Barry
> >
> >
> > _______________________________________________
> > Mod_python mailing list
> > Mod_python@modpython.org
> > http://mailman.modpython.org/mailman/listinfo/mod_python
> >
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python

-- 
Greg Stein, http://www.lyra.org/
From barry at python.org  Fri Aug 29 18:05:31 2003
From: barry at python.org (Barry Warsaw)
Date: Fri Jan  9 22:04:09 2004
Subject: [mod_python] Child shutdowns?
In-Reply-To: <1062193640.4895.13.camel@yyz>
References: <1062187064.4895.7.camel@yyz>
	<1062193640.4895.13.camel@yyz>
Message-ID: <1062194731.4895.17.camel@yyz>

On Fri, 2003-08-29 at 17:47, Barry Warsaw wrote:

> Thanks Grisha, both for the info and the offer to poke around.  I'll try
> pushing my startup code into my request handler, and see if registering
> my cleanup code at that time will work.

Very quick testing reveals that something like this stanza does the
trick:

def handler(req):
    global _started
    if not _started:
        startup()
        req.server.register_cleanup(req, shutdown)
        _started = True

A bit gnarly perhaps, but palatable.

-Barry


From gstein at lyra.org  Fri Aug 29 15:23:28 2003
From: gstein at lyra.org (Greg Stein)
Date: Fri Jan  9 22:04:09 2004
Subject: [mod_python] Child shutdowns?
In-Reply-To: <1062194731.4895.17.camel@yyz>;
	from barry@python.org on Fri, Aug 29, 2003 at 06:05:31PM -0400
References: <1062187064.4895.7.camel@yyz> <1062193640.4895.13.camel@yyz>
	<1062194731.4895.17.camel@yyz>
Message-ID: <20030829152328.E14389@lyra.org>

On Fri, Aug 29, 2003 at 06:05:31PM -0400, Barry Warsaw wrote:
> On Fri, 2003-08-29 at 17:47, Barry Warsaw wrote:
> 
> > Thanks Grisha, both for the info and the offer to poke around.  I'll try
> > pushing my startup code into my request handler, and see if registering
> > my cleanup code at that time will work.
> 
> Very quick testing reveals that something like this stanza does the
> trick:
> 
> def handler(req):
>     global _started
>     if not _started:
>         startup()
>         req.server.register_cleanup(req, shutdown)
>         _started = True
> 
> A bit gnarly perhaps, but palatable.

Ouch! The interface is very non-intuitive. That is not a cleanup
associated with the server, but actually with the pchild pool that was
passed to the child_init hook.

Looking at the code, mod_python hooks into child_init and saves the pool
off into a global variable. The server_register_cleanup() function then
attaches the cleanup to *that* pool.

So it does what you want, but yah... a bit ugly. And it really doesn't
look thread-safe either. You could easily have two threads end up inside
the 'if' block, registering a cleanup.

Cheers,
-g

-- 
Greg Stein, http://www.lyra.org/
From barry at python.org  Fri Aug 29 18:40:46 2003
From: barry at python.org (Barry Warsaw)
Date: Fri Jan  9 22:04:09 2004
Subject: [mod_python] Child shutdowns?
In-Reply-To: <20030829152328.E14389@lyra.org>
References: <1062187064.4895.7.camel@yyz> <1062193640.4895.13.camel@yyz>
	 <1062194731.4895.17.camel@yyz>  <20030829152328.E14389@lyra.org>
Message-ID: <1062196846.4895.43.camel@yyz>

On Fri, 2003-08-29 at 18:23, Greg Stein wrote:

> So it does what you want, but yah... a bit ugly. And it really doesn't
> look thread-safe either. You could easily have two threads end up inside
> the 'if' block, registering a cleanup.

Yep, but right now I'm using a prefork MPM, which I'll probably stick
with for reasons like this.  IIUC, each child process is single
threaded, right?

-Barry


From gstein at lyra.org  Fri Aug 29 16:06:11 2003
From: gstein at lyra.org (Greg Stein)
Date: Fri Jan  9 22:04:09 2004
Subject: [mod_python] Child shutdowns?
In-Reply-To: <1062196846.4895.43.camel@yyz>;
	from barry@python.org on Fri, Aug 29, 2003 at 06:40:46PM -0400
References: <1062187064.4895.7.camel@yyz> <1062193640.4895.13.camel@yyz>
	<1062194731.4895.17.camel@yyz> <20030829152328.E14389@lyra.org>
	<1062196846.4895.43.camel@yyz>
Message-ID: <20030829160611.F14389@lyra.org>

On Fri, Aug 29, 2003 at 06:40:46PM -0400, Barry Warsaw wrote:
> On Fri, 2003-08-29 at 18:23, Greg Stein wrote:
> 
> > So it does what you want, but yah... a bit ugly. And it really doesn't
> > look thread-safe either. You could easily have two threads end up inside
> > the 'if' block, registering a cleanup.
> 
> Yep, but right now I'm using a prefork MPM, which I'll probably stick
> with for reasons like this.  IIUC, each child process is single
> threaded, right?

Yup, it sure is.

If you want to be a Real Man, then you can use _apache.mpm_query to verify
that you're running single-threaded :-)

btw, if you're going to rely on prefork, then why don't you just use the
exit handlers for the process rather than worrying about Apache's pool
cleanup handling? If you're doing the latter to work within the Apache
framework, then you really ought to keep threads in mind :-)

Cheers,
-g

-- 
Greg Stein, http://www.lyra.org/
From barry at python.org  Fri Aug 29 19:14:00 2003
From: barry at python.org (Barry Warsaw)
Date: Fri Jan  9 22:04:09 2004
Subject: [mod_python] Child shutdowns?
In-Reply-To: <20030829160611.F14389@lyra.org>
References: <1062187064.4895.7.camel@yyz> <1062193640.4895.13.camel@yyz>
	 <1062194731.4895.17.camel@yyz> <20030829152328.E14389@lyra.org>
	 <1062196846.4895.43.camel@yyz>  <20030829160611.F14389@lyra.org>
Message-ID: <1062198840.4895.74.camel@yyz>

On Fri, 2003-08-29 at 19:06, Greg Stein wrote:

> If you want to be a Real Man, then you can use _apache.mpm_query to verify
> that you're running single-threaded :-)

Ooh, ooh, the "hidden goodies"!  So far I've only dug into the
documented API ('course I could be missing this one).

> btw, if you're going to rely on prefork, then why don't you just use the
> exit handlers for the process rather than worrying about Apache's pool
> cleanup handling? If you're doing the latter to work within the Apache
> framework, then you really ought to keep threads in mind :-)

I tried setting sys.exitfunc but it wasn't called when I apachectl
stop'd, probably because that kills the process via SIGTERM, and I don't
think exit handlers are run in that case.  (I probably should have used
the atexit module, but that has the same semantics.)

I hear ya about threading issues.  Right now, I'm trying to get the
simplest possible thing that can work. <wink>

-Barry


From conrad at hep.caltech.edu  Fri Aug 29 17:05:23 2003
From: conrad at hep.caltech.edu (Conrad Steenberg)
Date: Fri Jan  9 22:04:09 2004
Subject: [mod_python] ANNOUNCE: Mod_python 3.1.0 Alpha
In-Reply-To: <20030829171157.O56156@onyx.ispol.com>
References: <20030828210644.C43921@onyx.ispol.com>
	<20030829171157.O56156@onyx.ispol.com>
Message-ID: <1062201922.2857.5.camel@Presario>

On Fri, 2003-08-29 at 14:21, Gregory (Grisha) Trubetskoy wrote:
> On Fri, 29 Aug 2003, Conrad Steenberg wrote:
> 
> > Hi
> >
> > Tested here to be working under an OpenPKG-1.3 (ish) environment.
> >
> > Any pointers to higher level tools that works with the included version
> > of PSP (such as for constructing a news or blogging site)? There seems
> > to be at least two other projects also calling themselves PSP ;-)
> 
> There is even one called Perl Server Pages :-)
> 
> I doubt there are any tools, since our PSP is brand new. B
> 
> But it's rather simplistic. For everyone's info:

Thanks for the clarification, I was under the horribly mistaken
impression that the mod_python PSP was taken from some other bigger
project ;-)

And simplistic is good, IMHO.

Thanks for the docs, too.

Conrad

> 
> This describes the syntax:
> 
> http://www.modpython.org/live/mod_python-3.1.0a/doc-html/pyapi-psp.html
> 
> And this describes the psp handler (things like sessions, etc):
> 
> http://www.modpython.org/live/mod_python-3.1.0a/doc-html/pyapi-psp.html
> 
> Also, if you have any JSP experience, there was an e-mail on the dev list
> regarding how it corresponds to PSP, which I'll forward to this list
> (because I forgot where the dev list archives are).
> 
> Grisha


-- 
Conrad Steenberg <conrad@hep.caltech.edu>
From grisha at modpython.org  Fri Aug 29 20:26:00 2003
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 22:04:09 2004
Subject: [mod_python] Child shutdowns?
In-Reply-To: <1062198840.4895.74.camel@yyz>
References: <1062187064.4895.7.camel@yyz> <1062193640.4895.13.camel@yyz>
 <1062194731.4895.17.camel@yyz> <20030829152328.E14389@lyra.org>
 <1062196846.4895.43.camel@yyz>  <20030829160611.F14389@lyra.org>
 <1062198840.4895.74.camel@yyz>
Message-ID: <20030829200546.C59355@onyx.ispol.com>


On Fri, 29 Aug 2003, Barry Warsaw wrote:

> On Fri, 2003-08-29 at 19:06, Greg Stein wrote:
>
> > If you want to be a Real Man, then you can use _apache.mpm_query to verify
> > that you're running single-threaded :-)
>
> Ooh, ooh, the "hidden goodies"!  So far I've only dug into the
> documented API ('course I could be missing this one).

It's documented, but it's a mod_python 3.1 thing. It's actually
apache.mpm_query:

http://www.modpython.org/live/mod_python-3.1.0a/doc-html/pyapi-apmeth.html

BTW, if you're not going to be using sessions or PSP (which are new), you
might as well use 3.1.0a - the stuff carried over from 3.0.3 is probably
stabler and faster, and it fixes some things that wouldn't work at all in
Python 2.3, e.g. get rid of stupid ancient things like

if str(type(object)) == "<type 'class'>"

Grisha
From pradix at gmx.de  Sat Aug 30 02:35:52 2003
From: pradix at gmx.de (=?ISO-8859-1?Q?Lorenz_K=F6hl?=)
Date: Fri Jan  9 22:04:09 2004
Subject: [mod_python] modpython compile error
Message-ID: <3F4FF168.9050505@gmx.de>

I want to install modpython 3.0.3 on my Suse 8.2 but during compilation 
an error occurs saying

----------------
/usr/include/features.h:131:1: warning: this is the location of the 
previous definition
requestobject.c: In function `getreq_recmbr_off':
requestobject.c:1055: error: `LONG_LONG' undeclared (first use in this 
function)
requestobject.c:1055: error: (Each undeclared identifier is reported 
only once
requestobject.c:1055: error: for each function it appears in.)
requestobject.c:1056: error: parse error before "l"
requestobject.c:1057: error: `l' undeclared (first use in this function)
requestobject.c: At top level:
requestobject.c:1270: warning: initialization from incompatible pointer type
apxs:Error: Command failed with rc=65536
.
make[1]: *** [mod_python.so] Error 1
make[1]: Leaving directory 
`/home/software/network/apache/mod_python-3.0.3/src'
make: *** [do_dso] Error 2
-----------------

I've apache 2.0.47 and python 2.3 installed. The configure of modpython 
was fine and of course I
compiled apache with --enable-so.

in requestobject.c there's someting in the comments about apr. but apr 
from apr.apache.org is installed
build into apache.

any ideas?  (any parsing-lib missing?)

From barry at python.org  Sat Aug 30 12:28:49 2003
From: barry at python.org (Barry Warsaw)
Date: Fri Jan  9 22:04:09 2004
Subject: [mod_python] Child shutdowns?
In-Reply-To: <20030829200546.C59355@onyx.ispol.com>
References: <1062187064.4895.7.camel@yyz> <1062193640.4895.13.camel@yyz>
	<1062194731.4895.17.camel@yyz> <20030829152328.E14389@lyra.org>
	<1062196846.4895.43.camel@yyz>  <20030829160611.F14389@lyra.org>
	<20030829200546.C59355@onyx.ispol.com>
Message-ID: <1062260929.30124.0.camel@anthem>

On Fri, 2003-08-29 at 20:26, Gregory (Grisha) Trubetskoy wrote:

> BTW, if you're not going to be using sessions or PSP (which are new), you
> might as well use 3.1.0a - the stuff carried over from 3.0.3 is probably
> stabler and faster, and it fixes some things that wouldn't work at all in
> Python 2.3, e.g. get rid of stupid ancient things like
> 
> if str(type(object)) == "<type 'class'>"

Cool, thanks for the tip.

-Barry


From stephen at vermeulen.ca  Sat Aug 30 12:56:17 2003
From: stephen at vermeulen.ca (Stephen Vermeulen)
Date: Fri Jan  9 22:04:09 2004
Subject: [mod_python] Problems getting mod_python to work on Windows NT4.0
Message-ID: <3F50F351.8020306@vermeulen.ca>

This morning I took my first attempt at getting mod_python to work on 
Windows NT4.0
under Apache 2.0.47 and Python 2.3. I could not get the simple test from:

http://www.modpython.org/live/current/doc-html/inst-testing.html

to work.  All I got was the following error:

[Sat Aug 30 12:23:09 2003] [error] make_obcallback: could not import 
mod_python.apache.

I tried both

   mod_python-3.0.3.win32.exe

and
 
   mod_python-3.1.0a.win32-py2.3.exe

and both gave the same errors.

In the end I noticed in the mailing list archives that some people had 
success after reverting to
Python 2.2.  So I installed a copy of Python 2.2.2 on my system (I did 
not remove my Python 2.3)
and reinstalled mod_python 3.0.3.

Without changing anything else it started to work.

Regards,

Stephen



