From neto at visuaw.net  Thu Jul  1 03:48:20 2004
From: neto at visuaw.net (Victor Tortorello Neto)
Date: Thu Jul  1 01:47:36 2004
Subject: [mod_python] Module Import
Message-ID: <001801c45f2f$03d63c90$7400a8c0@vtn>

Hey!

I am trying to quit web site development with PHP, and start the development with to mod_python.
I have some experience with Python, but I can't import a module from the index.py.

I've created a module named 'sitelib' (it's a folder with __init__.py with some stuff) and I want to use "import sitelib", but it don't works.

How can I import this module without put "<Directory /www/...> PythonPath .... </Directory>" in httpd.conf?

Thanks!

Victor Tortorello Neto
neto@visuaw.net

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://modpython.org/pipermail/mod_python/attachments/20040701/3b07907b/attachment.html
From ppercot at free.fr  Thu Jul  1 10:39:42 2004
From: ppercot at free.fr (Patrick Percot)
Date: Thu Jul  1 03:41:48 2004
Subject: [mod_python] Module Import
In-Reply-To: <001801c45f2f$03d63c90$7400a8c0@vtn>
References: <001801c45f2f$03d63c90$7400a8c0@vtn>
Message-ID: <20040701.093942.112422145.ppercot@free.fr>

On Thu, 1 Jul 2004 02:48:20 -0300, "Victor Tortorello Neto" <neto@visuaw.net> wrote

> Hey!
> 
> I  am trying  to quit  web site  development with  PHP, and  start the
> development with to mod_python. 
> I have some  experience with Python, but I can't  import a module from
> the index.py. 
> 
> I've created a module named  'sitelib' (it's a folder with __init__.py
> with some  stuff) and  I want  to use "import  sitelib", but  it don't
> works. 
> 
> How  can  I  import  this  module without  put  "<Directory  /www/...>
> PythonPath .... </Directory>" in httpd.conf? 

You can  put the same  directives in a  .htaccess file in  the directory
that contains your script named index.py

?+
PP
-- 
Groupe Morbihannais d'Utilisateurs de Logiciels Libres http://www.tuxbihan.org
Identifiant Jabber: pp@amessage.de
GPG fingerprint = 1A4F E154 3D2C A20E E4CA  A543 7951 C5C2 E44A A0B5

Patrick Percot.

From nicolas at lehuen.com  Thu Jul  1 13:02:07 2004
From: nicolas at lehuen.com (Nicolas Lehuen)
Date: Thu Jul  1 06:02:11 2004
Subject: [mod_python] Subinterpreters and index.py
In-Reply-To: <001801c45f2f$03d63c90$7400a8c0@vtn>
Message-ID: <200407011002.i61A29IF011124@modpython.org>

Hi,
 
I'm encoutering an unexpected behaviours while using the publisher handlers
and two index.py, one in /app/index.py and one in /app/subdir/index.py.
 
When I first call http://localhost/app/, /app/index.py is called. Then if I
call http://localhost/app/subdir/, /app/subdir/index.py is called allright,
but then if I try again http://localhost/app/, I always get
/app/subdir/index.py !
 
Well, it turns out it's a FAQ, listed here :
 
http://www.modpython.org/FAQ/faqw.py?req=show&file=faq02.016.htp
 
The problem is that if I want to share data between different pages, for
instance a DB connection pool (which is one of the purpose of using
mod_python with one interpreter per application), then I have to make sure
that all those pages have a different name, so I lose the ability to have an
index.py in any subdirectory... Plus, if my app begins to grow, keeping in
mind this limitation is more and more difficult ("damn, did I ever use
'validation.py' as a module name ???"), all the more with the fact that the
bug is quite surprising in its behaviour (no warning message, no error, no
nothing).

At least, this should be written in big bold red prints in the
documentation. This is so unexpected and so big that I think every serious
mod_python user should be aware of this and design his/her applications
AROUND this bug (by having a clever naming scheme, de-modularising the app
etc.).
 
Maybe it would be possible to overcome this limitation if mod_python named
and loaded the page modules according to their path relative to the place
where a PythonInterpreter or PythonHandler (when PythonInterpPerDirective is
On) was last defined. So, if I define "PythonInterpreter myapp" in /app,
/app/index.py would be loaded as the 'index' module and /app/subdir/index.py
would be loaded as the 'subdir.index' module.

Likewise, maybe such an improved behaviour could enable us to do something
which is AFAIK quite difficult right now : importing modules relative to the
current interpreter (maybe by automatically adding the directory where the
interpreter was defined to sys.path). Say I've got a utility module
/app/utils.py, I could use it in /app/index.py and /app/subdir/index.py by
importing 'utils'.

Best regards,

Nicolas Lehuen

From dpopowich at mtrsd.k12.ma.us  Thu Jul  1 12:09:08 2004
From: dpopowich at mtrsd.k12.ma.us (Daniel J. Popowich)
Date: Thu Jul  1 11:10:26 2004
Subject: [mod_python] Subinterpreters and index.py
In-Reply-To: <200407011002.i61A29IF011124@modpython.org>
References: <001801c45f2f$03d63c90$7400a8c0@vtn>
	<200407011002.i61A29IF011124@modpython.org>
Message-ID: <16612.10516.92889.680236@gargle.gargle.HOWL>


> I'm encoutering an unexpected behaviours while using the publisher handlers
> and two index.py, one in /app/index.py and one in /app/subdir/index.py.
>  
> When I first call http://localhost/app/, /app/index.py is called. Then if I
> call http://localhost/app/subdir/, /app/subdir/index.py is called allright,
> but then if I try again http://localhost/app/, I always get
> /app/subdir/index.py !
>  
> Well, it turns out it's a FAQ, listed here :
>  
> http://www.modpython.org/FAQ/faqw.py?req=show&file=faq02.016.htp

This problem does NOT exist for Mod_python Servlets.  The servlet
handler does not use python's import system, instead it compiles each
servlet using execfile and the results stored in a cache, indexed by
servlets' full pathnames.  So, if I have two servlets:

  http://localhost/foo/index.mps 
  http://localhost/foo/bar/index.mps

and my document root is /var/www/html (so, directory /var/www/html/foo
is configured to use mod_python.servlet as a handler), then the cache
would have:

  '/var/www/html/foo/index.mps' : <instance of mod_python.servlet.Servlet>
  '/var/www/html/foo/bar/index.mps' : <instance of mod_python.servlet.Servlet>

Subsequent requests will look in the cache before compiling, so the
correct servlet will be found.

See:

    http://home.comcast.net/~d.popowich/mpservlets/

Cheers,

Daniel (humble author of Mod_python Servlets)

From grisha at modpython.org  Thu Jul  1 12:45:33 2004
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Thu Jul  1 11:45:53 2004
Subject: [mod_python] Subinterpreters and index.py
In-Reply-To: <16612.10516.92889.680236@gargle.gargle.HOWL>
References: <001801c45f2f$03d63c90$7400a8c0@vtn>
	<200407011002.i61A29IF011124@modpython.org>
	<16612.10516.92889.680236@gargle.gargle.HOWL>
Message-ID: <20040701114343.T24155@onyx.ispol.com>



On Thu, 1 Jul 2004, Daniel J. Popowich wrote:

>> Well, it turns out it's a FAQ, listed here :
>>
>> http://www.modpython.org/FAQ/faqw.py?req=show&file=faq02.016.htp
>
> This problem does NOT exist for Mod_python Servlets.

I'd just like to point out that this is not a 'problem'. The 'problem' is 
that some people do not understand how Python and mod_python work, but 
that's about the extent of it :-)

Grisha
From list at joreybump.com  Thu Jul  1 13:23:35 2004
From: list at joreybump.com (Jorey Bump)
Date: Thu Jul  1 12:23:44 2004
Subject: [mod_python] Subinterpreters and index.py
In-Reply-To: <200407011002.i61A29IF011124@modpython.org>
References: <200407011002.i61A29IF011124@modpython.org>
Message-ID: <40E43A87.5010309@joreybump.com>

Nicolas Lehuen wrote:

> Hi,
>  
> I'm encoutering an unexpected behaviours while using the publisher handlers
> and two index.py, one in /app/index.py and one in /app/subdir/index.py.
>  
> When I first call http://localhost/app/, /app/index.py is called. Then if I
> call http://localhost/app/subdir/, /app/subdir/index.py is called allright,
> but then if I try again http://localhost/app/, I always get
> /app/subdir/index.py !

Modules are namespaces, regardless of their physical location. This is 
very important, even within subinterpreters.

> Maybe it would be possible to overcome this limitation if mod_python named
> and loaded the page modules according to their path relative to the place
> where a PythonInterpreter or PythonHandler (when PythonInterpPerDirective is
> On) was last defined. So, if I define "PythonInterpreter myapp" in /app,
> /app/index.py would be loaded as the 'index' module and /app/subdir/index.py
> would be loaded as the 'subdir.index' module.

[snip]

> Likewise, maybe such an improved behaviour could enable us to do something
> which is AFAIK quite difficult right now : importing modules relative to the
> current interpreter (maybe by automatically adding the directory where the
> interpreter was defined to sys.path). Say I've got a utility module
> /app/utils.py, I could use it in /app/index.py and /app/subdir/index.py by
> importing 'utils'.

mod_python already puts the directory at the front of the sys.path. You 
can determine this by creating a module:

app/test.py:

  import sys
  def syspath(req):
     return sys.path

Then access it at:

  http://localhost/app/test.py/syspath

You can test the import by creating two more files:

test1.py:

  import sys
  import test2

  def syspath1(req):
      return sys.path

  def syspath2(req):
      return test2.syspath2(req)

test2.py:

  import sys

  def syspath2(req):
      return sys.path

Access the results at these locations:

  http://localhost/app/test1.py/syspath1
  http://localhost/app/test1.py/syspath2

You can see that the import worked fine. To use subdirectories, you need 
to turn them into packages. This is extremely simple:

Create the subdirectory:

  app/dir1/

Create a package initialization file (it can be empty):

  app/dir1/__init__.py

Create a module in this directory:

app/dir1/test3.py:

  import sys

  def syspath3(req):
      return sys.path

Modify app/test1.py:

  import sys
  import test2
  import dir1.test3

  def syspath1(req):
      return sys.path

  def syspath2(req):
      return test2.syspath2(req)

  def syspath3(req):
      return dir1.test3.syspath3(req)

Try it out:

  http://localhost/app/test1.py/syspath3

This is exactly the behaviour you want, and requires no special 
directives. It's pure python, and it's beautiful.

mod_python embeds a python interpreter, pure and simple. It's best to 
use the basic features of python to overcome problems such as this. 
Forget that mod_python even exists (but be happy that it does!).

From conrad at hep.caltech.edu  Thu Jul  1 10:27:31 2004
From: conrad at hep.caltech.edu (Conrad Steenberg)
Date: Thu Jul  1 12:29:35 2004
Subject: [mod_python] Strange sre module import anomaly
Message-ID: <1088699251.22323.13.camel@heppc22.hep.caltech.edu>

Hi

I'm seeing a strange failure to load the sre module (directly or
indirectly from the re module) in a mod_python handler:

Traceback (most recent call last):
  File "/opt/openpkg/lib/python/mod_python/apache.py", line 299, in HandlerDispatch\n    result = object(req)
  File "/opt/openpkg/share/apache2/clarens/clarens_server.py", line 673, in handler\n    return real_handler(req) 
  File "/opt/openpkg/share/apache2/clarens/system/__init__.py", line 1515, in handler\n    retval=exec_method(req,decoded[0],decoded[1],user,pw)
  File "/opt/openpkg/share/apache2/clarens/system/__init__.py", line 1296, in exec_method\n    return method_object(req,method_name,args)
  File "/opt/openpkg/share/apache2/clarens/echo/__init__.py", line 55, in echo\n newResult = myRe.sub(r"='\\1'", myString)
  File "/opt/openpkg/RPM/TMP/python-2.2.3-root/opt/openpkg/lib/python/sre.py", line 96, in ?\n    import sys
ImportError: No module named sys

I.e. for some reason the sre module can't import the sys module. To
reproduce, simply do 'import sre' _before_ importing sys in a handler

The sre module is in the path, and importing other modules in the same
directory (/opt/openpkg/lib/python) works fine, even ones that import
sys themselves.

A code snippet like
import sys
import re
newval=re.sub('sompat','somerepl' some_string)

will mysteriously fail with the above exception trace. The work-around
is to import and use sre directly and make sure it is imported after the
sys module, e.g.:

import sys
import sre
newval=sre.sub('sompat','somerepl' some_string)

The Python version is 2.3.3 from OpenPKG.

I don't know if this is a bug report, or just a heads-up for others that
may run into the same problem, reply or ignore as appropriate ;-)

Cheers

Conrad



-- 
Conrad Steenberg <conrad@hep.caltech.edu>

From nicolas at lehuen.com  Thu Jul  1 19:40:35 2004
From: nicolas at lehuen.com (Nicolas Lehuen)
Date: Thu Jul  1 12:40:39 2004
Subject: [mod_python] Subinterpreters and index.py
In-Reply-To: <20040701114343.T24155@onyx.ispol.com>
Message-ID: <200407011640.i61GeaIF000644@modpython.org>

Well, I think I understand why mod_python behaves like that (it probably has
to do with the fact that modules are referenced in the sys.modules
dictionary, so you cannot have multiple modules with the same name)...

It's simply that it's not what I expect (and I guess it's the same for other
people too). That's why I was suggesting that modules loaded by the
publisher could be loaded with a unique name depending on something like the
path to the .py file or the URL used to get the page.

The publisher has a nice Zope-like behaviour, unfortunately even Zope does
not exhibit the kind of behaviour mod_python.publisher does with /index.py
and /subdir/index.py.

Anyway, Daniel suggested that I use mod_python Servlets, and I'll have a
look at it (thanks Daniel !).

Regards,

Nicolas


-----Message d'origine-----
De : mod_python-bounces@modpython.org
[mailto:mod_python-bounces@modpython.org] De la part de Gregory (Grisha)
Trubetskoy
Envoy? : jeudi 1 juillet 2004 17:46
? : mod_python user mailing list
Objet : Re: [mod_python] Subinterpreters and index.py



On Thu, 1 Jul 2004, Daniel J. Popowich wrote:

>> Well, it turns out it's a FAQ, listed here :
>>
>> http://www.modpython.org/FAQ/faqw.py?req=show&file=faq02.016.htp
>
> This problem does NOT exist for Mod_python Servlets.

I'd just like to point out that this is not a 'problem'. The 'problem' is
that some people do not understand how Python and mod_python work, but
that's about the extent of it :-)

Grisha
_______________________________________________
Mod_python mailing list
Mod_python@modpython.org
http://mailman.modpython.org/mailman/listinfo/mod_python


From dpopowich at mtrsd.k12.ma.us  Thu Jul  1 13:47:17 2004
From: dpopowich at mtrsd.k12.ma.us (Daniel J. Popowich)
Date: Thu Jul  1 12:48:31 2004
Subject: [mod_python] Subinterpreters and index.py
In-Reply-To: <20040701114343.T24155@onyx.ispol.com>
References: <001801c45f2f$03d63c90$7400a8c0@vtn>
	<200407011002.i61A29IF011124@modpython.org>
	<16612.10516.92889.680236@gargle.gargle.HOWL>
	<20040701114343.T24155@onyx.ispol.com>
Message-ID: <16612.16405.200875.285410@gargle.gargle.HOWL>


Gregory (Grisha) Trubetskoy writes:
> 
> 
> On Thu, 1 Jul 2004, Daniel J. Popowich wrote:
> 
> >> Well, it turns out it's a FAQ, listed here :
> >>
> >> http://www.modpython.org/FAQ/faqw.py?req=show&file=faq02.016.htp
> >
> > This problem does NOT exist for Mod_python Servlets.
> 
> I'd just like to point out that this is not a 'problem'. The 'problem' is 
> that some people do not understand how Python and mod_python work, but 
> that's about the extent of it :-)

True enough.  But how python manages module and package namespaces is
a relatively gnarly issue(*) which is only complicated by running
python inside apache via mod_python.  Mod_python, to the uninitiated,
gives the illusion that whole directory hierarchies are packages and
that sys.path is magically managed to be whatever you intend.
Realities like those posted above are quite startling, at first, and
perceived as "problems" or "known features."  :-)

This is one reason why I coded the servlet handler caching as I did.

Cheers,

Dan

(*) relative to the ease of programming the rest of the language.
I've always found it ironic that for such an intuitive language to
learn, that managing packages and modules is such a pain.  Granted,
package support was added late to the language (1.5), but decent
documentation is still lacking.  The standard documentation discussing
packages has had the following disclaimer for YEARS:

   [XXX Can't be bothered to spell this out right now; see the URL
   http://www.python.org/doc/essays/packages.html for more details,
   also about how the module search works from inside a package.]

And the document it points to is ancient.  This only compounds these
"problems".  Just look at how many posts to this discussion list are
import related.


From nicolas at lehuen.com  Thu Jul  1 19:58:42 2004
From: nicolas at lehuen.com (Nicolas Lehuen)
Date: Thu Jul  1 12:58:44 2004
Subject: [mod_python] Subinterpreters and index.py
In-Reply-To: <40E43A87.5010309@joreybump.com>
Message-ID: <200407011658.i61GwgIF009580@modpython.org>


Jorey Bump wrote:

> Nicolas Lehuen wrote:
> 
> > Hi,
> >  
> > I'm encoutering an unexpected behaviours while using the publisher 
> > handlers and two index.py, one in /app/index.py and one in 
> /app/subdir/index.py.
> >  
> > When I first call http://localhost/app/, /app/index.py is 
> called. Then 
> > if I call http://localhost/app/subdir/, 
> /app/subdir/index.py is called 
> > allright, but then if I try again http://localhost/app/, I 
> always get 
> > /app/subdir/index.py !
> 
> Modules are namespaces, regardless of their physical 
> location. This is very important, even within subinterpreters.

I do understand this, and that's why I think that the module defined in
/app/index.py should not be overwritten by the one defined in
/app/subdir/index.py. Maybe the namespace of the module defined by
/app/subdir/index.py should be created within the namespace of the module
defined by /app/index.py, so that the latter would inherit names from the
former ? It seems that the publisher load each .py file as modules based on
the filename only, hence the name collisions. If directories or URIs could
be taken into account, this collision problem would disappear.

> mod_python already puts the directory at the front of the 
> sys.path. You can determine this by creating a module:

[snip code]

Well, that's the first thing I tried a few month ago, but that's not the
case on my installation (Apache2 + mod_python running on Windows 2000 SP4).
Maybe this is due to the fact that I used the PythonPath directive ? I
defined it like this (in httpd.conf) :

LoadModule python_module python/mod_python.so
AddHandler mod_python .py .psp
PythonPath
"sys.path+['C:/apache/python/Lib','C:/apache/Subversion/python','C:/apache/t
rac']"
PythonHandler mod_python.publisher | .py
PythonHandler mod_python.psp | .psp
PythonDebug On

How can I benefit from the behaviour you describe while also declaring the
libraries I need on the Python path ?

Thanks for your help,

Regards,

Nicolas

From edwardam at interlix.com  Thu Jul  1 14:56:24 2004
From: edwardam at interlix.com (Edward Muller)
Date: Thu Jul  1 14:56:27 2004
Subject: [mod_python] Using mod_python to track bandwidth
Message-ID: <1088708184.6277.65.camel@palin>

I'm trying to figure out a way to use mod_python to track the bandwidth
a site uses. I've figured out how to get the content length of a request
pretty easily, but I'd also like to be able to also get the length of
the incoming request and the outgoing headers. I've played around with a
few different things and can't seem to find any way to get the last two.
I'm probably missing something so any help would be appreciated.

Thanks,
-- 
Edward Muller - http://www.interlix.com - "Open Source Specialists"
Dedicated Zope Hosting - Web Hosting - Open Source Consulting
Network & PC Service & Support - Custom Programming
Phone: 417-862-0573 - Cell: 417-844-2435 - Fax: 417-869-3137
Jabber: edwardam@jabber.interlix.com - AIM: edwardam453 - ICQ: 287033

From synec at viscous.org  Thu Jul  1 15:29:55 2004
From: synec at viscous.org (john spurling)
Date: Thu Jul  1 17:29:58 2004
Subject: [mod_python] file upload
Message-ID: <20040701212955.GJ32314@glider.viscous.org>

Greetings,

I'm trying to do file upload, and whenever I set the form's enctype
attribute to be multipart/form-data, I get the following error from
the publisher, even when the form posts to a function that just
returns "hello":

## begin
Mod_python error: "PythonHandler mod_python.publisher"

Traceback (most recent call last):

  File
"/home/synec/prog/python2.3/lib/python2.3/site-packages/mod_python/apache.py",
line 193, in Dispatch
    result = object(req)

  File
"/home/synec/prog/python2.3/lib/python2.3/site-packages/mod_python/publisher.py",
line 104, in handler
    val = File(field)

  File
"/home/synec/prog/python2.3/lib/python2.3/site-packages/mod_python/publisher.py",
line 308, in __init__
    for m in field.file.__methods__:

AttributeError: 'file' object has no attribute '__methods__'
## end

Any ideas?

Thanks,
john spurling


From edwardam at interlix.com  Thu Jul  1 17:49:58 2004
From: edwardam at interlix.com (Edward Muller)
Date: Thu Jul  1 17:50:00 2004
Subject: [mod_python] Using mod_python to track bandwidth
In-Reply-To: <1088708184.6277.65.camel@palin>
References: <1088708184.6277.65.camel@palin>
Message-ID: <1088718597.6277.68.camel@palin>

On Thu, 2004-07-01 at 13:56, Edward Muller wrote:
> I'm trying to figure out a way to use mod_python to track the bandwidth
> a site uses. I've figured out how to get the content length of a request
> pretty easily, but I'd also like to be able to also get the length of
> the incoming request and the outgoing headers. I've played around with a
> few different things and can't seem to find any way to get the last two.
> I'm probably missing something so any help would be appreciated.
> 
> Thanks,

Another odd thing I've run into with the following code (run as a
PythonLogHandler):

def log(req):
        f = open('/var/www/apache2-default/out.txt','a')
        con = req.connection
        con_data = con.read(-1)

        f.write("""
Log
hn: %s - bs: %s - cl: %s - rl: %s
--- Connection Data -- len(%s) ---
%s
""" % (  req.hostname,
         req.bytes_sent,
         req.clength,
         req.read_length,
         len(con_data),
         con_data))
        f.close()
        return apache.OK

When I hit a site with Firefox/Mozilla con_data contains all the
incoming headers, but when I wget the same data con_data is empty.


-- 
Edward Muller - http://www.interlix.com - "Open Source Specialists"
Dedicated Zope Hosting - Web Hosting - Open Source Consulting
Network & PC Service & Support - Custom Programming
Phone: 417-862-0573 - Cell: 417-844-2435 - Fax: 417-869-3137
Jabber: edwardam@jabber.interlix.com - AIM: edwardam453 - ICQ: 287033

From list at joreybump.com  Thu Jul  1 18:29:27 2004
From: list at joreybump.com (Jorey Bump)
Date: Thu Jul  1 18:09:04 2004
Subject: [mod_python] Subinterpreters and index.py
In-Reply-To: <200407011658.i61GwgIF009580@modpython.org>
References: <200407011658.i61GwgIF009580@modpython.org>
Message-ID: <40E48237.50305@joreybump.com>

Nicolas Lehuen wrote:
> Jorey Bump wrote:
>
>>Modules are namespaces, regardless of their physical 
>>location. This is very important, even within subinterpreters.
> 
> I do understand this, and that's why I think that the module defined in
> /app/index.py should not be overwritten by the one defined in
> /app/subdir/index.py. Maybe the namespace of the module defined by
> /app/subdir/index.py should be created within the namespace of the module
> defined by /app/index.py, so that the latter would inherit names from the
> former ? It seems that the publisher load each .py file as modules based on
> the filename only, hence the name collisions. If directories or URIs could
> be taken into account, this collision problem would disappear.

Modules of the same name cause collisions. It's that simple. To avoid 
collisions, create packages and name them carefully. It's like 
indentation: It imposes a discipline that has enormous benefits that 
aren't immediately apparent.

The file hierarchy is important to the mechanics of creating your 
environment (setting the PYTHONPATH, creating packages, etc.), but plays 
no part in the logic of your application. Just as you can't give two 
files in the same directory the same name, you can't give two modules in 
the top level of your application the same name. If you want to reuse a 
name, you have to distinguish it by placing it within a package. There's 
no need to force mod_python to do this, when you can indicate this 
yourself by placing __init__.py in the directory you want to package. 
Automagic packaging could break a lot more than it fixes (you'd have to 
memorize every module or package in your path before creating directories).

>>mod_python already puts the directory at the front of the 
>>sys.path. You can determine this by creating a module:
> 
> [snip code]
> 
> Well, that's the first thing I tried a few month ago, but that's not the
> case on my installation (Apache2 + mod_python running on Windows 2000 SP4).

I'm currently developing on Debian Gnu/Linux, and it's likely that there 
are important configuration differences in my environment.

> Maybe this is due to the fact that I used the PythonPath directive ? I
> defined it like this (in httpd.conf) :
> 
> LoadModule python_module python/mod_python.so
> AddHandler mod_python .py .psp
> PythonPath
> "sys.path+['C:/apache/python/Lib','C:/apache/Subversion/python','C:/apache/t
> rac']"
> PythonHandler mod_python.publisher | .py
> PythonHandler mod_python.psp | .psp
> PythonDebug On

I use this, and nothing else (apache 1.3.26, mod_python 2.7.8):

<Directory /var/www/site>
   AddHandler python-program .py
   PythonHandler mod_python.publisher
   PythonDebug On
</Directory>

Obviously, this is an older, patched version and there will be 
differences. The main point is that it might be better to start with a 
simple configuration and find a Python-based solution, rather than 
trying to bend mod_python to your will.

> How can I benefit from the behaviour you describe while also declaring the
> libraries I need on the Python path ?

This depends on your environment and your privileges. First, try the 
test I outlined to verify your path under Apache/mod_python (remove your 
PythonPath directive for the test).

One solution is to create packages in your existing path. Anything you 
put in your installation's site-packages directory will be available to 
everyone on the system. In fact, that's why it was created.

If you don't like or have that option, see if the default path suggests 
a place for your packages. If not, you may want to specify a single 
location for convenience and security, and preface your path with it. 
The benefits of this are clearly dependent on your target environment.

Wherever you end up putting your packages and modules, remember that, 
unlike HTML, they don't need to be in your DocumentRoot, just your 
PYTHONPATH. This means that you can create a single interface for each 
application:

  /var/www/app/app1.py
  /var/www/app/app2.py
  ...

This encourages you to create generic packages that can be easily shared 
by all of your applications. Don't worry about index.py, unless you want 
to control *all* of your applications from that single file (just add a 
new function to launch each app). An index.html will serve the purpose 
just as well.

It's great to have power and exercise it, but it's even nicer to be 
waited on hand and foot. Let Python do some of the work for you.




From nicolas at lehuen.com  Fri Jul  2 11:40:24 2004
From: nicolas at lehuen.com (Nicolas Lehuen)
Date: Fri Jul  2 04:40:28 2004
Subject: [mod_python] Subinterpreters and index.py
In-Reply-To: <40E48237.50305@joreybump.com>
Message-ID: <200407020840.i628eQIF024519@modpython.org>

 
Jorey Bump wrote:
> Nicolas Lehuen wrote:
> > Jorey Bump wrote:
> >
> >>Modules are namespaces, regardless of their physical 
> location. This is 
> >>very important, even within subinterpreters.
> > 
> > I do understand this, and that's why I think that the 
> module defined 
> > in /app/index.py should not be overwritten by the one defined in 
> > /app/subdir/index.py. Maybe the namespace of the module defined by 
> > /app/subdir/index.py should be created within the namespace of the 
> > module defined by /app/index.py, so that the latter would inherit 
> > names from the former ? It seems that the publisher load 
> each .py file 
> > as modules based on the filename only, hence the name 
> collisions. If 
> > directories or URIs could be taken into account, this 
> collision problem would disappear.
> 
> Modules of the same name cause collisions. It's that simple. 
> To avoid collisions, create packages and name them carefully. 
> It's like
> indentation: It imposes a discipline that has enormous 
> benefits that aren't immediately apparent.

So why doesn't mod_python.publisher automatically creates packages based on
directories ? Mod_python.publisher imposes its own limitations. It's not the
way Python is supposed to behave. You call it a feature of
mod_python.publisher, all right. But nothing prevents people from having
modules defined in files with the same name in Python, without name
collisions, provided they are defined within different packages.

Before switching to Python 18 months ago, I've been coding in Java for at
least 5 years (well, since Java 1.0 beta). So I quite get the idea of
packages, namespaces and so on. I also do have a whole bunch of Python code
organised in packages that I reuse in different projects. And I love coding
in Python ! But this mod_python behaviour has nothing to do with Python,
it's a limitation. Anyway, mod_python Servlets seems so solve this issue ; I
was thinking of a similar handler which would load .py files the way I want,
but Daniel already wrote it, so here I go.
 
> The file hierarchy is important to the mechanics of creating 
> your environment (setting the PYTHONPATH, creating packages, 
> etc.), but plays no part in the logic of your application. 
> Just as you can't give two files in the same directory the 
> same name, you can't give two modules in the top level of 
> your application the same name. If you want to reuse a name, 
> you have to distinguish it by placing it within a package. 
> There's no need to force mod_python to do this, when you can 
> indicate this yourself by placing __init__.py in the 
> directory you want to package. 
> Automagic packaging could break a lot more than it fixes 
> (you'd have to memorize every module or package in your path 
> before creating directories).

Yeah, Jorey, I do understand that, it's trivial stuff ; my problem is that
mod_python.publisher seems to load all published modules in the top level
namespace. Sorry, I don't want to be too critical since mod_python is really
a nice achievement (very useful, especially when combined with the threaded
Apache2 implementation so that you can share data between threads), but you
don't have to lecture me on what is a namespace when the namespace issues
reside in mod_python.publisher.

This could be fixed in mod_python.publisher if the module_name was built
using the path part, not only the file part (line 67 of publisher.py) and by
loading the module by directly specifying the file to load and not adding
the path of the file to the call to import_module (line 98).
apache.import_module should then be patched to also support the loading of a
specific file, not only a module name which is then passed to
imp.find_module (line 454 of apache.py).
 
But like I've just wrote, we can also keep the best parts of mod_python, put
away mod_python.publisher and use mod_python Servlets instead.

[snip]

> > How can I benefit from the behaviour you describe while 
> also declaring 
> > the libraries I need on the Python path ?
> 
> This depends on your environment and your privileges. First, 
> try the test I outlined to verify your path under 
> Apache/mod_python (remove your PythonPath directive for the test).
> 
> One solution is to create packages in your existing path. 
> Anything you put in your installation's site-packages 
> directory will be available to everyone on the system. In 
> fact, that's why it was created.

That's what I do right now, but I want to host many different applications
on my server (I have it configured in mass virtual hosting mode for that),
and I don't think it's a good practice to have the code for all my
applications available to every other application. That's why I wanted to do
something like this :

$WWW/pythonlib/                  --> code explicitely shared by all
applications
$WWW/hosts/host1/                --> virtual host 1        
$WWW/hosts/host1/pythonlib/      --> code shared by all apps and modules of
host1
$WWW/hosts/host1/index.py        --> redirects to the default application of
host1
$WWW/hosts/host1/app1/           --> first application on host1
$WWW/hosts/host1/app1/pythonlib/ --> code shared by all modules of
host1/app1
$WWW/hosts/host1/app1/index.py   --> default module of host1/app1
...

In fact by reading this, I realise that by defining .htaccess files with
specific PythonInterpreter and PythonPath directives, I can do precisely
that plus get an healthy insulation of interpreters across applications (or
at least across hosts). I'll try this.

[snip]

Regards,

Nicolas Lehuen

From grisha at modpython.org  Fri Jul  2 12:34:55 2004
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jul  2 11:34:59 2004
Subject: [mod_python] Subinterpreters and index.py
In-Reply-To: <200407020840.i628eQIF024519@modpython.org>
References: <200407020840.i628eQIF024519@modpython.org>
Message-ID: <20040702105846.P43763@onyx.ispol.com>



On Fri, 2 Jul 2004, Nicolas Lehuen wrote:

> This could be fixed in mod_python.publisher if the module_name was built
> using the path part, not only the file part (line 67 of publisher.py)

But if someone wanted to use path_info in their application, this wouldn't 
work.

> and by loading the module by directly specifying the file to load and 
> not adding the path of the file to the call to import_module (line 98).

It's not so much how you load the file as the name you give the module. 
Right now it is the file name, I suppose it could be made the full path of 
the file, though there may be some kind of a gotcha with this approach.

Also - have you looked at PythonInterpPerDrectory directive? Could this be 
the solution to what you're looking for?

Grisha
From nicolas at lehuen.com  Fri Jul  2 19:57:29 2004
From: nicolas at lehuen.com (Nicolas Lehuen)
Date: Fri Jul  2 12:57:32 2004
Subject: [mod_python] Subinterpreters and index.py
In-Reply-To: <20040702105846.P43763@onyx.ispol.com>
Message-ID: <200407021657.i62GvUIF028395@modpython.org>

Grisha wrote:
> On Fri, 2 Jul 2004, Nicolas Lehuen wrote:
> 
> > This could be fixed in mod_python.publisher if the module_name was 
> > built using the path part, not only the file part (line 67 of 
> > publisher.py)
> 
> But if someone wanted to use path_info in their application, 
> this wouldn't work.
> 
> > and by loading the module by directly specifying the file 
> to load and 
> > not adding the path of the file to the call to 
> import_module (line 98).
> 
> It's not so much how you load the file as the name you give 
> the module. 
> Right now it is the file name, I suppose it could be made the 
> full path of the file, though there may be some kind of a 
> gotcha with this approach.

Well, you would need to encode the path in a way that the result is a valid
module name, for example by replacing '/' and '\' by '.', spaces by
underscores and so on. The "so on" can be a bit tricky depending on the OS
(for special characters valid in filenames but not in module names like '.'
or maybe '~') and locale (for accentuated characters) but a simple
re.sub(r'[/\\]','.',re.sub(r'[^a-zA-Z0-9\./\\]','_',file)) can help for a
start.

The funny thing is that apache.import_module already gets the filename from
the module by having a look at its __file__ attribute (line 422 of
apache.py), so there IS a relation between physical files and modules.
import_module only need to make sure that the inverse is true, e.g. by
naming modules according to the full filename (including path).

There may be benefits if modules from subdirs where created within the
module corresponding to the subdir itself, i.e. if mod_python could create
packages corresponding to directories as well as modules corresponding to
files. I don't know. But the beauty of Python and mod_python is that nothing
prevents me or anybody else to give it a try (hence mod_python Servlets).
mod_python gives us access to the internal of Apache, and Python inherently
gives us access to its internals. So if we cannot do precisely what we want
with them, when else can we ?

> Also - have you looked at PythonInterpPerDrectory directive? 
> Could this be the solution to what you're looking for?
> Grisha

Yeah I've seen it, but this forces me to have all my scripts in the same
directory in order to share data between them. I cannot use subdirectories
in an application if I want to share data with the rest of the application.
For some of my applications, this is a problem, since I like them neatly
packaged.

I'm truly willing to share data between scripts, because that's why I chose
mod_python in the first place. I'm running it under Apache2 with a threading
model, and I wrote a small DBI connection pool module, so I really share my
database connections. Likewise, I have a few objects that are quite costly
to initialize (ternary search trees built from database for speed and search
flexibility), and there really is a benefit to sharing those objects between
all serving threads.

Regards (and kudos for mod_python !),

Nicolas Lehuen

From jerryfic_21 at hotmail.com  Fri Jul  2 21:02:33 2004
From: jerryfic_21 at hotmail.com (Gerardo Rodriguez Gutierrez)
Date: Fri Jul  2 22:14:30 2004
Subject: [mod_python] trouble instaling mod_python over apache 1.3.31
Message-ID: <BAY12-F32rl26XyrAaD0000a24b@hotmail.com>



#/usr/local/apache/conf> apachectl configtest
Syntax error on line 206 of /usr/local/apache/conf/httpd.conf:
Cannot load /usr/local/apache/libexec/mod_python.so into server: 
/usr/local/apache/libexec/mod_python.so: Undefined symbol "pthread_self"


thanks for your help

_________________________________________________________________
MSN 8 with e-mail virus protection service: 2 months FREE* 
http://join.msn.com/?page=features/virus

From davidf at sjsoft.com  Sat Jul  3 10:41:31 2004
From: davidf at sjsoft.com (David Fraser)
Date: Sat Jul  3 03:40:28 2004
Subject: [mod_python] trouble instaling mod_python over apache 1.3.31
In-Reply-To: <BAY12-F32rl26XyrAaD0000a24b@hotmail.com>
References: <BAY12-F32rl26XyrAaD0000a24b@hotmail.com>
Message-ID: <40E6632B.4070408@sjsoft.com>

Gerardo Rodriguez Gutierrez wrote:

>
>
> #/usr/local/apache/conf> apachectl configtest
> Syntax error on line 206 of /usr/local/apache/conf/httpd.conf:
> Cannot load /usr/local/apache/libexec/mod_python.so into server: 
> /usr/local/apache/libexec/mod_python.so: Undefined symbol "pthread_self"
>
>
> thanks for your help

It would be helpful to give us a lot more details
- what operating system and version you are running
- what version of Apache, Python, and mod_python
- of the above, which did you compile from source / install a binary 
package, where did you get it from

David
From ppercot at free.fr  Sat Jul  3 18:17:39 2004
From: ppercot at free.fr (Patrick Percot)
Date: Sat Jul  3 11:18:39 2004
Subject: [mod_python] trouble instaling mod_python over apache 1.3.31
In-Reply-To: <BAY12-F32rl26XyrAaD0000a24b@hotmail.com>
References: <BAY12-F32rl26XyrAaD0000a24b@hotmail.com>
Message-ID: <20040703.171739.67855168.ppercot@free.fr>

On Fri, 02 Jul 2004 20:02:33 -0600, "Gerardo Rodriguez Gutierrez" <jerryfic_21@hotmail.com> wrote

> 
> 
> #/usr/local/apache/conf> apachectl configtest
> Syntax error on line 206 of /usr/local/apache/conf/httpd.conf:
> Cannot load /usr/local/apache/libexec/mod_python.so into server: 
> /usr/local/apache/libexec/mod_python.so: Undefined symbol "pthread_self"

If you  are under BSD,  you must read  in the list archives  a precedent
thread with an answer dated Wed, 02 Jun 2004

?+
PP
-- 
Groupe Morbihannais d'Utilisateurs de Logiciels Libres http://www.tuxbihan.org
Identifiant Jabber: pp@amessage.de
GPG fingerprint = 1A4F E154 3D2C A20E E4CA  A543 7951 C5C2 E44A A0B5

Patrick Percot.

From jerryfic_21 at hotmail.com  Sat Jul  3 10:51:36 2004
From: jerryfic_21 at hotmail.com (Gerardo Rodriguez Gutierrez)
Date: Sat Jul  3 11:51:39 2004
Subject: [mod_python] trouble instaling mod_python over apache 1.3.31
Message-ID: <BAY12-F27ggqJMpYG1d0000cbe2@hotmail.com>

I am using FreeBSD 4.9 Release

I donwload sources and build Apache/1.3.31 (Unix) PHP/4.3.6 mod_ssl/2.8.17 
with OpenSSL/0.9.7d and this apache modules:
mod_php4, mod_ssl, mod_setenvif, mod_so, mod_auth, mod_access, mod_alias, 
mod_userdir, mod_actions, mod_imap, mod_asis, mod_cgi, mod_dir, 
mod_autoindex, mod_include, mod_status, mod_negotiation, mod_mime, 
mod_log_config, mod_env, http_core

Also I download sources from python and build Python 2.3.4, the mod_python 
version is the 2.7.10


I hope this helps you to help me...

_________________________________________________________________
MSN 8 with e-mail virus protection service: 2 months FREE* 
http://join.msn.com/?page=features/virus

From davidf at sjsoft.com  Sat Jul  3 19:11:17 2004
From: davidf at sjsoft.com (David Fraser)
Date: Sat Jul  3 12:10:15 2004
Subject: [mod_python] trouble instaling mod_python over apache 1.3.31
In-Reply-To: <BAY12-F27ggqJMpYG1d0000cbe2@hotmail.com>
References: <BAY12-F27ggqJMpYG1d0000cbe2@hotmail.com>
Message-ID: <40E6DAA5.6090601@sjsoft.com>

Gerardo Rodriguez Gutierrez wrote:

> I am using FreeBSD 4.9 Release
>
> I donwload sources and build Apache/1.3.31 (Unix) PHP/4.3.6 
> mod_ssl/2.8.17 with OpenSSL/0.9.7d and this apache modules:
> mod_php4, mod_ssl, mod_setenvif, mod_so, mod_auth, mod_access, 
> mod_alias, mod_userdir, mod_actions, mod_imap, mod_asis, mod_cgi, 
> mod_dir, mod_autoindex, mod_include, mod_status, mod_negotiation, 
> mod_mime, mod_log_config, mod_env, http_core
>
> Also I download sources from python and build Python 2.3.4, the 
> mod_python version is the 2.7.10
>
>
> I hope this helps you to help me...
>
The workaround Patrick referred to is quoted below, hope it helps:

> You are so absolutely right Grisha:
>
> I had that implemented in 4.9 but upgraded to 5.2.1 and forgot about it.
> The work around is to add
>
> LD_PRELOAD=/usr/lib/libc_r.so ## or libpthread.so
> export LD_PRELOAD
>
> in /usr/local/sbin/envvars
>
> and restart apache
> This worked in 5.2.1 just now as well.
>
> Reed O'Brien
> 4.6692016090
>
> Gregory (Grisha) Trubetskoy wrote:
>
>> There is also a wrokaround, it is documented in the mod_python FreeBSD
>> port, check out /usr/ports/www/mod_python3/pkg-message
>>
>> Grisha
>>
>> On Wed, 2 Jun 2004, Reed L. O'Brien wrote:
>>
>>
>>> Compile without threads.
>>>
>>> Perica Zivkovic wrote:
>>>
>>>> Hi,
>>>>
>>>> sorry for posting this but I checked all documentation and google and
>>>> didn't find any help...
>>>>
>>>> I installed FreeBSD 4.9 and on that clean install I installed from
>>>> source (not ports) following:
>>>>
>>>> 1. apache 2.0.49
>>>> 2. python 2.3.4
>>>> 3. mod_python 3.1.3 (configured with apxs...)
>>>>
>>>> everithing was smooth and easy but...
>>>>
>>>> I included "LoadModule ..." line provided to me by mod python install
>>>> script and after I attempt to start apache I get this:
>>>>
>>>> ----------------------------
>>>> Syntax error on line 233 of /usr/local/apache2/conf/httpd.conf:
>>>> Cannot load /usr/local/apache2/modules/mod_python.so into server:
>>>> /usr/local/apache2/modules/mod_python.so: Undefined symbol
>>>> "pthread_self"
>>>> ----------------------------
>>>>
>>>> I'm not posting this after first failed attempt... I tried to 
>>>> reinstall
>>>> an do this three times but no luck...
>>>>
>>>> Please help
>>>>
>>>> grt.
>>>>
>>>> Perica
>>>

From list at joreybump.com  Sat Jul  3 13:20:38 2004
From: list at joreybump.com (Jorey Bump)
Date: Sat Jul  3 12:20:45 2004
Subject: [mod_python] Subinterpreters and index.py
In-Reply-To: <200407020840.i628eQIF024519@modpython.org>
References: <200407020840.i628eQIF024519@modpython.org>
Message-ID: <40E6DCD6.1030701@joreybump.com>

Nicolas Lehuen wrote:
>  
> Jorey Bump wrote:
> 
>>Automagic packaging could break a lot more than it fixes 
>>(you'd have to memorize every module or package in your path 
>>before creating directories).
> 
> 
> Yeah, Jorey, I do understand that, it's trivial stuff ; my problem is that
> mod_python.publisher seems to load all published modules in the top level
> namespace. Sorry, I don't want to be too critical since mod_python is really
> a nice achievement (very useful, especially when combined with the threaded
> Apache2 implementation so that you can share data between threads), but you
> don't have to lecture me on what is a namespace when the namespace issues
> reside in mod_python.publisher.

I'm sorry if I sounded pedantic. As your solution below indicates, this 
seems like more of an organizational problem than an indication of any 
deficiency in mod_python.publisher. I feel that mod_python behaves as 
expected when loading multiple applications into a single interpreter. 
The main reason I object to automagic packaging is that it would make it 
nearly impossible to develop large portions of the code outside of the 
Apache/mod_python environment, as I do now. Yes, there are some special 
precautions you have to take to ensure your applications will coexist, 
but your ordinary Python applications can benefit from this, as well.

> But like I've just wrote, we can also keep the best parts of mod_python, put
> away mod_python.publisher and use mod_python Servlets instead.

Absolutely! It's almost impossible to avoid developing your own 
framework when using mod_python. As some of these mature, their authors 
will generously share them. This will only help to serve different 
programming styles.

>>One solution is to create packages in your existing path. 
>>Anything you put in your installation's site-packages 
>>directory will be available to everyone on the system. In 
>>fact, that's why it was created.
> 
> That's what I do right now, but I want to host many different applications
> on my server (I have it configured in mass virtual hosting mode for that),
> and I don't think it's a good practice to have the code for all my
> applications available to every other application. That's why I wanted to do
> something like this :
> 
> $WWW/pythonlib/                  --> code explicitely shared by all
> applications
> $WWW/hosts/host1/                --> virtual host 1        
> $WWW/hosts/host1/pythonlib/      --> code shared by all apps and modules of
> host1
> $WWW/hosts/host1/index.py        --> redirects to the default application of
> host1
> $WWW/hosts/host1/app1/           --> first application on host1
> $WWW/hosts/host1/app1/pythonlib/ --> code shared by all modules of
> host1/app1
> $WWW/hosts/host1/app1/index.py   --> default module of host1/app1
> ...
> 
> In fact by reading this, I realise that by defining .htaccess files with
> specific PythonInterpreter and PythonPath directives, I can do precisely
> that plus get an healthy insulation of interpreters across applications (or
> at least across hosts). I'll try this.
From jerryfic_21 at hotmail.com  Sat Jul  3 11:38:07 2004
From: jerryfic_21 at hotmail.com (Gerardo Rodriguez Gutierrez)
Date: Sat Jul  3 12:38:10 2004
Subject: [mod_python] trouble instaling mod_python over apache 1.3.31
Message-ID: <BAY12-F30NHsJKpP4Uw0000d15d@hotmail.com>

I dont have this files on my FreeBSD server libc_r.so ## or libpthread.so , 
did I compile something wrong?

_________________________________________________________________
STOP MORE SPAM with the new MSN 8 and get 2 months FREE* 
http://join.msn.com/?page=features/junkmail

From reed at intersiege.com  Sat Jul  3 13:47:16 2004
From: reed at intersiege.com (Reed L. O'Brien)
Date: Sat Jul  3 12:47:33 2004
Subject: [mod_python] trouble instaling mod_python over apache 1.3.31
In-Reply-To: <40E6DAA5.6090601@sjsoft.com>
References: <BAY12-F27ggqJMpYG1d0000cbe2@hotmail.com>
	<40E6DAA5.6090601@sjsoft.com>
Message-ID: <40E6E314.4000806@intersiege.com>


Being the guy from the original email here.  I was really embarassed to 
find that an install from ports actually spits this message ou at you.  
Aaannndd I had already had it working in 4.9.  Boy did I feel like-->> 
***really **red** face***<<--.  Maybe I should look at the port and see 
if we can automagically add the lines to envvars....
r

>> You are so absolutely right Grisha:
>>
>> I had that implemented in 4.9 but upgraded to 5.2.1 and forgot about it.
>> The work around is to add
>>
>> LD_PRELOAD=/usr/lib/libc_r.so ## or libpthread.so
>> export LD_PRELOAD
>>
>> in /usr/local/sbin/envvars
>>
>> and restart apache
>> This worked in 5.2.1 just now as well.
>>
>> Reed O'Brien
>> 4.6692016090
>>
>> Gregory (Grisha) Trubetskoy wrote:
>>
>>
>

-- 
4.6692016090
'cmVlZEBpbnRlcnNpZWdlLmNvbQ==\n'.decode('base64')

From reed at intersiege.com  Sat Jul  3 13:55:23 2004
From: reed at intersiege.com (Reed L. O'Brien)
Date: Sat Jul  3 12:55:41 2004
Subject: [mod_python] trouble instaling mod_python over apache 1.3.31
In-Reply-To: <BAY12-F30NHsJKpP4Uw0000d15d@hotmail.com>
References: <BAY12-F30NHsJKpP4Uw0000d15d@hotmail.com>
Message-ID: <40E6E4FB.3070901@intersiege.com>

are you running FreeBSD?  If so this question belongs on their list. 
http://lists.freebsd.org/mailman/listinfo/freebsd-questions
nut to start with an answer.  I think as long as you don't put

NOLIBC_R=      true    # do not build libc_r (re-entrant version of libc)

in /etc/make.conf it builds with

%make -jX buildworld.

reed


Gerardo Rodriguez Gutierrez wrote:

> I dont have this files on my FreeBSD server libc_r.so ## or 
> libpthread.so , did I compile something wrong?
>
> _________________________________________________________________
> STOP MORE SPAM with the new MSN 8 and get 2 months FREE* 
> http://join.msn.com/?page=features/junkmail
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python


-- 
4.6692016090
'cmVlZEBpbnRlcnNpZWdlLmNvbQ==\n'.decode('base64')

From gatesyy at hotmail.com  Mon Jul  5 17:36:57 2004
From: gatesyy at hotmail.com (James Gate)
Date: Mon Jul  5 11:37:01 2004
Subject: [mod_python] Does mod_python have a global dictionary or sorts?
Message-ID: <BAY15-F32ihh7ImfbCe00095a6b@hotmail.com>

Hi,

I've started writing Web Applications using mod_python and was wondering if 
there is some sort of global dictionary that I can register objects in, 
similar in method to that of Java Servlets? What I'm trying to do is create 
a global connection pool for database access, that is accessible by all 
apache threads. I've written and tests a thread safe connection pool, and 
just need somewhere to place an instance of it!

Any help or pointers would be greatly appreciated, thanks in advance,

James Gate.

_________________________________________________________________
Express yourself with cool new emoticons http://www.msn.co.uk/specials/myemo

From python at theorb.net  Mon Jul  5 13:49:50 2004
From: python at theorb.net (mod_python user)
Date: Mon Jul  5 15:49:46 2004
Subject: [mod_python] query_vars and form_vars
Message-ID: <40E9B0DE.5040900@theorb.net>

Hi all,

I'm new to python and consequently mod_python but have discovered the 
servlet" package, and actually have a small templated webapp up and 
running.  Extremely powerful language.

I would like to be able to retrieve both _form_ and _query_ variables, 
even if they share the same name. e.g.

   <form method='post' action='/?name=NAME_ONE'>
     <input type='hidden' name='name' value='NAME_TWO' />
     <input type='submit' />
   </form>

It seems that when both a GET and POST variable share the same name that 
the GET (query) variable always wins.

Does anybody know how this might be accomplished?

Thanks,
Mike Wright
From bje at apnic.net  Tue Jul  6 09:43:36 2004
From: bje at apnic.net (Byron Ellacott)
Date: Mon Jul  5 18:43:36 2004
Subject: [mod_python] Does mod_python have a global dictionary or sorts?
In-Reply-To: <BAY15-F32ihh7ImfbCe00095a6b@hotmail.com>
References: <BAY15-F32ihh7ImfbCe00095a6b@hotmail.com>
Message-ID: <40E9D998.3060501@apnic.net>

James Gate wrote:
> I've started writing Web Applications using mod_python and was wondering 
> if there is some sort of global dictionary that I can register objects 
> in, similar in method to that of Java Servlets? What I'm trying to do is 
> create a global connection pool for database access, that is accessible 
> by all apache threads. I've written and tests a thread safe connection 
> pool, and just need somewhere to place an instance of it!

(As long as you're running a threaded Apache, and not a forking Apache...)

Just stick it in a global variable.  You can make it a singleton 
instance easily enough:

--- snip DBPool.py ---
#!/usr/bin/env python

class DBPool:
    pass

pool = DBPool()
--- snip DBPool.py ---

mod_python reuses Python interpreters, so once your module has been 
loaded, any subsequent imports of it will just be obtaining a reference 
from sys.modules[].  You'll want to watch for how you've told mod_python 
to create interpreters; by default it creates one interpreter per 
process, but you can also tell it to create an interpreter per directory 
or a specifically named interpreter.

-- 
bje
From list at joreybump.com  Mon Jul  5 22:57:05 2004
From: list at joreybump.com (Jorey Bump)
Date: Mon Jul  5 21:57:14 2004
Subject: [mod_python] query_vars and form_vars
In-Reply-To: <40E9B0DE.5040900@theorb.net>
References: <40E9B0DE.5040900@theorb.net>
Message-ID: <40EA06F1.3060401@joreybump.com>

mod_python user wrote:

> Hi all,
> 
> I'm new to python and consequently mod_python but have discovered the 
> servlet" package, and actually have a small templated webapp up and 
> running.  Extremely powerful language.
> 
> I would like to be able to retrieve both _form_ and _query_ variables, 
> even if they share the same name. e.g.
> 
>   <form method='post' action='/?name=NAME_ONE'>
>     <input type='hidden' name='name' value='NAME_TWO' />
>     <input type='submit' />
>   </form>
> 
> It seems that when both a GET and POST variable share the same name that 
> the GET (query) variable always wins.
> 
> Does anybody know how this might be accomplished?

I don't know about servlets, but mod_publisher returns a list:

  ['NAME_ONE', 'NAME_TWO']

I don't know what causes this behaviour. Since only a POST request is 
sent, not a GET, I would expect any arguments in the URL to be ignored 
and only variables in the message body to be recognized.

I'd find out if this follows some kind of standard before relying on the 
order the values appear in a list. It could be arbitrary or undocumented 
(and therefore unpredictable).
From list at joreybump.com  Tue Jul  6 01:56:40 2004
From: list at joreybump.com (Jorey Bump)
Date: Tue Jul  6 00:56:46 2004
Subject: [mod_python] query_vars and form_vars
In-Reply-To: <40EA06F1.3060401@joreybump.com>
References: <40E9B0DE.5040900@theorb.net> <40EA06F1.3060401@joreybump.com>
Message-ID: <40EA3108.8000009@joreybump.com>

Jorey Bump wrote:

> mod_python user wrote:
> 
>> I would like to be able to retrieve both _form_ and _query_ 
>> variables, even if they share the same name. e.g.
>> 
>> <form method='post' action='/?name=NAME_ONE'> <input type='hidden' 
>> name='name' value='NAME_TWO' /> <input type='submit' /> </form>
>> 
>> It seems that when both a GET and POST variable share the same name
>>  that the GET (query) variable always wins.
>> 
>> Does anybody know how this might be accomplished?
> 
> I don't know about servlets, but mod_publisher returns a list:
> 
> ['NAME_ONE', 'NAME_TWO']

Duh. I mean mod_python.publisher. :P

> I don't know what causes this behaviour. Since only a POST request is
> sent, not a GET, I would expect any arguments in the URL to be 
> ignored and only variables in the message body to be recognized.

FWIW, mod_php ignores the URL arguments:

  Array ( [name] => NAME_TWO )

This seems more appropriate. A user shouldn't be allowed to mess with 
POST data so easily.

If this gets fixed (assuming it's a bug), you can still use 
req.unparsed_uri and do your own parsing. For example, use publisher and 
create foo.py with this function:

  def test(req):
      return req.unparsed_uri

Then view the results at:

  http://localhost/foo.py/test?name=something

Extract whatever you want from the resulting string.
From bje at apnic.net  Tue Jul  6 16:43:38 2004
From: bje at apnic.net (Byron Ellacott)
Date: Tue Jul  6 01:43:38 2004
Subject: [mod_python] query_vars and form_vars
In-Reply-To: <40EA06F1.3060401@joreybump.com>
References: <40E9B0DE.5040900@theorb.net> <40EA06F1.3060401@joreybump.com>
Message-ID: <40EA3C0A.4010608@apnic.net>

Jorey Bump wrote:
> I don't know what causes this behaviour. Since only a POST request is 
> sent, not a GET, I would expect any arguments in the URL to be ignored 
> and only variables in the message body to be recognized.

The specification makes a distinction between URL encoded arguments (a 
query fragment) and POST data (just plain old data).  The URL arguments 
form part of the resource request, and should be treated as effectively 
the same as a path fragment, that is, only used to specify which 
resource it is the user is requesting.  POST data is misdefined in 
RFC2616 as "a new subordinate of" the requested resource, and corrected 
in http://purl.org/NET/http-errata to be "data processed by" the 
requested resource.

So, in essence, the protocol definition makes a clear distinction 
between the roles of query fragments and POST data, but that distinction 
is lost when dealing with the vast bulk of web programming libraries out 
there, including mod_python's FieldStorage class.  The correct 
(as-per-specification) behaviour would be to distinguish between query 
arguments and POST data values.

It is quite easy to argue that long convention makes the specification's 
differentiation irrelevant, however.  But in neither world should part 
of the URL be /ignored/. :)

-- 
bje
From list at joreybump.com  Tue Jul  6 10:36:36 2004
From: list at joreybump.com (Jorey Bump)
Date: Tue Jul  6 09:36:43 2004
Subject: [mod_python] query_vars and form_vars
In-Reply-To: <40EA3C0A.4010608@apnic.net>
References: <40E9B0DE.5040900@theorb.net> <40EA06F1.3060401@joreybump.com>
	<40EA3C0A.4010608@apnic.net>
Message-ID: <40EAAAE4.1000709@joreybump.com>

Byron Ellacott wrote:
> Jorey Bump wrote:
> 
>> I don't know what causes this behaviour. Since only a POST request is 
>> sent, not a GET, I would expect any arguments in the URL to be ignored 
>> and only variables in the message body to be recognized.
> 
> 
> The specification makes a distinction between URL encoded arguments (a 
> query fragment) and POST data (just plain old data).  The URL arguments 
> form part of the resource request, and should be treated as effectively 
> the same as a path fragment, that is, only used to specify which 
> resource it is the user is requesting.  POST data is misdefined in 
> RFC2616 as "a new subordinate of" the requested resource, and corrected 
> in http://purl.org/NET/http-errata to be "data processed by" the 
> requested resource.
> 
> So, in essence, the protocol definition makes a clear distinction 
> between the roles of query fragments and POST data, but that distinction 
> is lost when dealing with the vast bulk of web programming libraries out 
> there, including mod_python's FieldStorage class.  The correct 
> (as-per-specification) behaviour would be to distinguish between query 
> arguments and POST data values.
> 
> It is quite easy to argue that long convention makes the specification's 
> differentiation irrelevant, however.  But in neither world should part 
> of the URL be /ignored/. :)

Well, I didn't say /discarded/. :) Query parts shouldn't prevent access 
to a resource (unless desired), but is it even appropriate to return 
them in an array if the GET method wasn't explicitly used?

To clarify my original statement: If the POST method is used, query 
parts in the URL should *not* be considered part of the form data set. 
This removes all ambiguity about precedence, substitution, or type 
conversion.

RFC2616 doesn't prohibit passing arguments in a URI when submitting POST 
data, but nowhere does it say that they should be processed as form data 
or supersede any variables passed as POST data. I'd disagree that POST 
data was originally misdefined; I believe the author was thinking more 
in terms of scope, where the POST data served to extend a resource. 
Taken literally, it still doesn't imply that the query parts should be 
acted upon; they're simply part of the URI. I like the new language, 
however, because it's less ambiguous.

From dpopowich at comcast.net  Tue Jul  6 10:45:35 2004
From: dpopowich at comcast.net (Daniel J. Popowich)
Date: Tue Jul  6 09:46:54 2004
Subject: [mod_python] query_vars and form_vars
In-Reply-To: <40E9B0DE.5040900@theorb.net>
References: <40E9B0DE.5040900@theorb.net>
Message-ID: <16618.44287.620236.878993@gargle.gargle.HOWL>


mod_python user writes:
> I'm new to python and consequently mod_python but have discovered the 
> servlet" package, and actually have a small templated webapp up and 
> running.  Extremely powerful language.
> 
> I would like to be able to retrieve both _form_ and _query_ variables, 
> even if they share the same name. e.g.
> 
>    <form method='post' action='/?name=NAME_ONE'>
>      <input type='hidden' name='name' value='NAME_TWO' />
>      <input type='submit' />
>    </form>
> 
> It seems that when both a GET and POST variable share the same name that 
> the GET (query) variable always wins.
> 
> Does anybody know how this might be accomplished?

Since you're acquiring this data from a POST you will probably want to
use form_vars instead of query_vars and set it like this:

   form_vars = [('name', [])]

Setting form_vars this way tells the servlet handler to get the value
of 'name' from the FieldStorage instance with the getlist method.

Setting form_vars like this:

   form_vars = ['name']

tells the handler to retrieve 'name' using the getfirst method.

Check out lesson #10 in the tutorial that comes with Mod_python
Servlets for a discussion concerning retrieving lists.  Lesson #12
discusses query_vars vs. form_vars.

Daniel

From grisha at modpython.org  Tue Jul  6 11:43:04 2004
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Tue Jul  6 10:43:09 2004
Subject: [mod_python] query_vars and form_vars
In-Reply-To: <40EA06F1.3060401@joreybump.com>
References: <40E9B0DE.5040900@theorb.net> <40EA06F1.3060401@joreybump.com>
Message-ID: <20040706102719.O8523@onyx.ispol.com>


This behaviour is part of mod_python.util.FieldStorage class, which is a 
little convenience tool. Protocol compliance is of little or no relevance 
here, since you're free not to use it and process input data using your 
own code or, for example using Python standard library FieldStorage.

Also, if I remember it correctly, most relevant RFC's tend to focus on the 
behaviour of the browser (e.g. the user should be warned before a POST if 
you hit reload, but not for GET), and there is nothing there about how the 
form variables should appear to an application.

As to why it processes GET and POST together and GET wins - that's a 
matter of personal preference. I find it convenient to be able to override 
variables in a form by appending them to the URL, and I think most 
user-friendly applications should behave this way, because IMHO ability to 
tinker with the URL is a good thing.

Some people believe that this should not be allowed because it enables a 
user to alter hidden POST variables, which would otherwise be difficult, 
but this seems to me like a silly argument. There are much more certain 
ways of ensuring that hidden variables have not been modified, e.g. an MD5 
or SHA signature passed along.

Grisha


On Mon, 5 Jul 2004, Jorey Bump wrote:

> mod_python user wrote:
>
>> Hi all,
>> 
>> I'm new to python and consequently mod_python but have discovered the 
>> servlet" package, and actually have a small templated webapp up and 
>> running.  Extremely powerful language.
>> 
>> I would like to be able to retrieve both _form_ and _query_ variables, 
>> even if they share the same name. e.g.
>> 
>>   <form method='post' action='/?name=NAME_ONE'>
>>     <input type='hidden' name='name' value='NAME_TWO' />
>>     <input type='submit' />
>>   </form>
>> 
>> It seems that when both a GET and POST variable share the same name that 
>> the GET (query) variable always wins.
>> 
>> Does anybody know how this might be accomplished?
>
> I don't know about servlets, but mod_publisher returns a list:
>
> ['NAME_ONE', 'NAME_TWO']
>
> I don't know what causes this behaviour. Since only a POST request is sent, 
> not a GET, I would expect any arguments in the URL to be ignored and only 
> variables in the message body to be recognized.
>
> I'd find out if this follows some kind of standard before relying on the 
> order the values appear in a list. It could be arbitrary or undocumented (and 
> therefore unpredictable).
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>
From python at dan-olsen.net  Tue Jul  6 09:55:32 2004
From: python at dan-olsen.net (Dan Olsen)
Date: Tue Jul  6 10:55:53 2004
Subject: [mod_python] Version Compatibility
Message-ID: <40EABD64.5020500@dan-olsen.net>

Does mod_python 2.7.10 work with Python 2.3.3?  The prerequisites say 
that it should have Python 1.5.2, 1.6, 2.0 or 2.1.  I tried to find 
something about it in the archives but couldn't find anything.

Dan Olsen
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://modpython.org/pipermail/mod_python/attachments/20040706/216f7239/attachment.html
From jcriehl at mail.jpl.nasa.gov  Tue Jul  6 09:59:44 2004
From: jcriehl at mail.jpl.nasa.gov (John Riehl)
Date: Tue Jul  6 11:59:47 2004
Subject: [mod_python] erratic behaviour from mptest.py
Message-ID: <40EACC70.4030504@mail.jpl.nasa.gov>


I set up a textbook mptest.py "hello world" example. Sometimes it works,
sometimes it gives me this:

----------------------------------------------------------------------
Mod_python error: "PythonHandler mptest"

Traceback (most recent call last):

    File "/usr/lib/python2.2/site-packages/mod_python/apache.py", line
287, in HandlerDispatch
      log=debug)

    File "/usr/lib/python2.2/site-packages/mod_python/apache.py", line
457, in import_module
      module = imp.load_module(mname, f, p, d)

    File "/proj/simdev/www/modpython/mptest.py", line 1

      from mod_python import apache

      ^

SyntaxError: invalid syntax

---------------------------------------------------------------------

(---- are mine to delimit sections)

To add to this, I created a second mptest.py, in a different location,
which works all the time.  (hello world).

The flakey mptest.py is under the user's directories.  The consistently
correct one is under the apache document root, symlinked from the user
directories (dont want to run this way).

The flakey one seems to run correctly if I had just previously run the
consistently correct one, or if it had just run correctly.  If I wait a
couple of minutes, and then run it, it will give me the error.

Anyone seen this before?  Any insight to resolving this?

I have been reading the archives, and someone suggested replacing the
PythonDebug On with
	<Files *>
                  PythonPath "sys.path + ['/<pathname>/modpython']"
                  PythonDebug On
          </Files>
but that has not yielded any additional error information.

apache error log has the same errors as above in it.

mod_python is 3.1.3, apache is 2.0.49, and python is 2.2 (rpm:
python-2.2.2-26).  apache & mod_python were built from source, python is
via rpm.

Thanks in advance,

jr
john riehl
sysadmin/mission systems engineer
multi-mission information systems testbed
jet propulsion laboratory




From python at dan-olsen.net  Tue Jul  6 11:52:22 2004
From: python at dan-olsen.net (Dan Olsen)
Date: Tue Jul  6 12:52:42 2004
Subject: [mod_python] mod_python and xml parsing
In-Reply-To: <1088147351.13067.1.camel@ack.dwerg.net>
References: <40DA0759.5010309@dan-olsen.net>	<1088107670.13505.2.camel@ack.dwerg.net>	<40DB35DB.7080400@dan-olsen.net>	<1088108970.13505.7.camel@ack.dwerg.net>
	<40DB3D15.40204@dan-olsen.net>
	<1088147351.13067.1.camel@ack.dwerg.net>
Message-ID: <40EAD8C6.2000800@dan-olsen.net>


>On Thu, 2004-06-24 at 22:44, Dan Olsen wrote:
>  
>
>>The script works on the server command line.  As far as I can tell the
>>module is installed properly.  Seeing how it works on the command line
>>I would think it should work in mod_python.  The system path is also
>>correct.
>>    
>>
>
>How did you install python? Are there multiple installations or just
>one?
>
>Manfred
>
I am still wondering if there is anyone who can help me.  I had Python 
installed when I installed Fedora Core 2.  What can I do to fix this 
problem.  This problem is really holding back my project here at work.  
Any help is appreciated.  See the previous messages for details on the 
problem.

Dan Olsen
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://modpython.org/pipermail/mod_python/attachments/20040706/59c33ab5/attachment.html
From list at joreybump.com  Tue Jul  6 14:28:45 2004
From: list at joreybump.com (Jorey Bump)
Date: Tue Jul  6 13:28:58 2004
Subject: [mod_python] query_vars and form_vars
In-Reply-To: <20040706102719.O8523@onyx.ispol.com>
References: <40E9B0DE.5040900@theorb.net> <40EA06F1.3060401@joreybump.com>
	<20040706102719.O8523@onyx.ispol.com>
Message-ID: <40EAE14D.9090004@joreybump.com>

Gregory (Grisha) Trubetskoy wrote:

> 
> This behaviour is part of mod_python.util.FieldStorage class, which is a 
> little convenience tool. Protocol compliance is of little or no 
> relevance here, since you're free not to use it and process input data 
> using your own code or, for example using Python standard library 
> FieldStorage.
> 
> Also, if I remember it correctly, most relevant RFC's tend to focus on 
> the behaviour of the browser (e.g. the user should be warned before a 
> POST if you hit reload, but not for GET), and there is nothing there 
> about how the form variables should appear to an application.
> 
> As to why it processes GET and POST together and GET wins - that's a 
> matter of personal preference. I find it convenient to be able to 
> override variables in a form by appending them to the URL, and I think 
> most user-friendly applications should behave this way, because IMHO 
> ability to tinker with the URL is a good thing.
> 
> Some people believe that this should not be allowed because it enables a 
> user to alter hidden POST variables, which would otherwise be difficult, 
> but this seems to me like a silly argument. There are much more certain 
> ways of ensuring that hidden variables have not been modified, e.g. an 
> MD5 or SHA signature passed along.

It all seems harmless enough. If a programmer decides to use this 
method, it will be necessary to check if the result is a string or a 
list and act accordingly.

If the need arises to distinguish between the query parts and the POST 
data, that's easy enough with cgi.parse_qs(req.args) or 
util.parse_qs(req.args). Is there a similar function that returns only 
POST data?

For applications not designed this way, what is the worst that could 
happen? String operations would break when a list is returned, like

  name = name.upper()

If there is an exploit, it's no different than any other user input 
validation issue, regardless of the method used (POST or GET).


From imm at iain-mackay.org  Tue Jul  6 20:00:36 2004
From: imm at iain-mackay.org (Iain Mackay)
Date: Tue Jul  6 14:00:56 2004
Subject: [mod_python] RE: Apache on Windows and concurrency
In-Reply-To: <200407061601.i66G1jIG028347@modpython.org>
Message-ID: <000501c46383$2a475500$e50bc8c2@Ness>

Hi all
I'm finding mod_python to be a very powerful tool. I have an application in
mind that is rather similar to some work I noticed in this list the other
day, i.e. using mod_python to provide sophisticated authentication for
WebDAV access to a repository.
One issue that has troubled me today is that it seems the observation that
one process=one interpreter, and therefore database connections (or other
data) may be shared in global variables, does not work for a default Apache
Windows configuration.
I may have missed something in the documentation but it seems essential that
Apache should have ThreadsPerChild=1, or you find multiple instances of your
handlers running concurrently, creating havoc with your shared updateable
variables.
I found a discussion of this problem on the web a few years back, but
nothing relating to current Apache and mod_python.
I don't think there is a way to, perhaps, query the server configuration to
at least detect a multi-threaded context.
I'm a little surprised that the Python interpreter itself doesn't suffer
catastrophic failures if it is called by Apache from multiple threads. So
maybe mod_python is ensuring there is one Python thread per process thread?
And if so, is there any way an application can interact with that, and maybe
have threads of its own to synchronize access to global resources?
Thanks for your consideration of these remarks
Iain



From grisha at modpython.org  Tue Jul  6 16:04:54 2004
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Tue Jul  6 15:04:58 2004
Subject: [mod_python] RE: Apache on Windows and concurrency
In-Reply-To: <000501c46383$2a475500$e50bc8c2@Ness>
References: <000501c46383$2a475500$e50bc8c2@Ness>
Message-ID: <20040706150109.N22827@onyx.ispol.com>



On Tue, 6 Jul 2004, Iain Mackay wrote:

> I don't think there is a way to, perhaps, query the server configuration to
> at least detect a multi-threaded context.

There is, it's the mpm_query() function. If you look at the beginning of 
Session.py file, you'll see some code that uses it to make the 
determination on whether the server is running multithreaded.

> I'm a little surprised that the Python interpreter itself doesn't suffer
> catastrophic failures if it is called by Apache from multiple threads.

The Python interpreter is actually smart enough to be aware of a 
multithreaded environment and act accordingly :-)

Grisha
From orders at nodivisions.com  Tue Jul  6 16:08:12 2004
From: orders at nodivisions.com (Anthony DiSante)
Date: Tue Jul  6 15:08:46 2004
Subject: [mod_python] script gives 404 error...
Message-ID: <40EAF89C.9050109@nodivisions.com>

Hello,

I'm running Apache/1.3.27, mod_python/2.7.10, Python/2.3.4, and RedHat 8.0 
Linux on an Intel PC.  I can't seem to get python scripts to run sensibly 
through the server.

Here's my httpd.conf, with comments indicating what happens when I visit the 
URL /pytest/mptest.py with one or the other PythonHandler set:


DocumentRoot "/home/me/public_html/html"
...
<Directory /home/me/public_html/html/pytest>
         AddHandler python-program .py
	# works:
         PythonHandler mptest
	# gives a 404 error:
         PythonHandler mod_python.publisher
	# so does this:
         PythonHandler mod_python.publisher | .py
         PythonDebug On
</Directory>


How can I make all .py scripts in a given directory be interpreted through 
mod_python, without having to enumerate every single scriptname in 
httpd.conf/htaccess files?  The documentation seems to indicate that the 
second PythonHandler line above is all that's needed.

Thanks,
Anthony DiSante
http://nodivisions.com/
From imm at iain-mackay.org  Tue Jul  6 21:09:07 2004
From: imm at iain-mackay.org (Iain Mackay)
Date: Tue Jul  6 15:09:27 2004
Subject: [mod_python] RE: Mod_python Digest, Vol 16, Issue 7
In-Reply-To: <200407061601.i66G1jIG028347@modpython.org>
Message-ID: <000601c4638c$bc5561e0$e50bc8c2@Ness>



-----Original Message-----
From: mod_python-bounces@modpython.org
[mailto:mod_python-bounces@modpython.org] On Behalf Of
mod_python-request@modpython.org
Sent: 06 July 2004 16:02
To: mod_python@modpython.org
Subject: Mod_python Digest, Vol 16, Issue 7

Send Mod_python mailing list submissions to
	mod_python@modpython.org

To subscribe or unsubscribe via the World Wide Web, visit
	http://mailman.modpython.org/mailman/listinfo/mod_python
or, via email, send a message with subject or body 'help' to
	mod_python-request@modpython.org

You can reach the person managing the list at
	mod_python-owner@modpython.org

When replying, please edit your Subject line so it is more specific
than "Re: Contents of Mod_python digest..."


Today's Topics:

   1. query_vars and form_vars (mod_python user)
   2. Re: Does mod_python have a global dictionary or sorts?
      (Byron Ellacott)
   3. Re: query_vars and form_vars (Jorey Bump)
   4. Re: query_vars and form_vars (Jorey Bump)
   5. Re: query_vars and form_vars (Byron Ellacott)
   6. Re: query_vars and form_vars (Jorey Bump)
   7. Re: query_vars and form_vars (Daniel J. Popowich)
   8. Re: query_vars and form_vars (Gregory (Grisha) Trubetskoy)
   9. Version Compatibility (Dan Olsen)
  10. erratic behaviour from mptest.py (John Riehl)


----------------------------------------------------------------------

Message: 1
Date: Mon, 05 Jul 2004 12:49:50 -0700
From: mod_python user <python@theorb.net>
Subject: [mod_python] query_vars and form_vars
To: mod_python@modpython.org
Message-ID: <40E9B0DE.5040900@theorb.net>
Content-Type: text/plain; charset=us-ascii; format=flowed

Hi all,

I'm new to python and consequently mod_python but have discovered the 
servlet" package, and actually have a small templated webapp up and 
running.  Extremely powerful language.

I would like to be able to retrieve both _form_ and _query_ variables, 
even if they share the same name. e.g.

   <form method='post' action='/?name=NAME_ONE'>
     <input type='hidden' name='name' value='NAME_TWO' />
     <input type='submit' />
   </form>

It seems that when both a GET and POST variable share the same name that 
the GET (query) variable always wins.

Does anybody know how this might be accomplished?

Thanks,
Mike Wright

------------------------------

Message: 2
Date: Tue, 06 Jul 2004 08:43:36 +1000
From: Byron Ellacott <bje@apnic.net>
Subject: Re: [mod_python] Does mod_python have a global dictionary or
	sorts?
To: mod_python user mailing list <mod_python@modpython.org>
Message-ID: <40E9D998.3060501@apnic.net>
Content-Type: text/plain; charset=us-ascii; format=flowed

James Gate wrote:
> I've started writing Web Applications using mod_python and was wondering 
> if there is some sort of global dictionary that I can register objects 
> in, similar in method to that of Java Servlets? What I'm trying to do is 
> create a global connection pool for database access, that is accessible 
> by all apache threads. I've written and tests a thread safe connection 
> pool, and just need somewhere to place an instance of it!

(As long as you're running a threaded Apache, and not a forking Apache...)

Just stick it in a global variable.  You can make it a singleton 
instance easily enough:

--- snip DBPool.py ---
#!/usr/bin/env python

class DBPool:
    pass

pool = DBPool()
--- snip DBPool.py ---

mod_python reuses Python interpreters, so once your module has been 
loaded, any subsequent imports of it will just be obtaining a reference 
from sys.modules[].  You'll want to watch for how you've told mod_python 
to create interpreters; by default it creates one interpreter per 
process, but you can also tell it to create an interpreter per directory 
or a specifically named interpreter.

-- 
bje

------------------------------

Message: 3
Date: Mon, 05 Jul 2004 21:57:05 -0400
From: Jorey Bump <list@joreybump.com>
Subject: Re: [mod_python] query_vars and form_vars
To: mod_python user mailing list <mod_python@modpython.org>
Message-ID: <40EA06F1.3060401@joreybump.com>
Content-Type: text/plain; charset=us-ascii; format=flowed

mod_python user wrote:

> Hi all,
> 
> I'm new to python and consequently mod_python but have discovered the 
> servlet" package, and actually have a small templated webapp up and 
> running.  Extremely powerful language.
> 
> I would like to be able to retrieve both _form_ and _query_ variables, 
> even if they share the same name. e.g.
> 
>   <form method='post' action='/?name=NAME_ONE'>
>     <input type='hidden' name='name' value='NAME_TWO' />
>     <input type='submit' />
>   </form>
> 
> It seems that when both a GET and POST variable share the same name that 
> the GET (query) variable always wins.
> 
> Does anybody know how this might be accomplished?

I don't know about servlets, but mod_publisher returns a list:

  ['NAME_ONE', 'NAME_TWO']

I don't know what causes this behaviour. Since only a POST request is 
sent, not a GET, I would expect any arguments in the URL to be ignored 
and only variables in the message body to be recognized.

I'd find out if this follows some kind of standard before relying on the 
order the values appear in a list. It could be arbitrary or undocumented 
(and therefore unpredictable).

------------------------------

Message: 4
Date: Tue, 06 Jul 2004 00:56:40 -0400
From: Jorey Bump <list@joreybump.com>
Subject: Re: [mod_python] query_vars and form_vars
To: mod_python user mailing list <mod_python@modpython.org>
Message-ID: <40EA3108.8000009@joreybump.com>
Content-Type: text/plain; charset=us-ascii; format=flowed

Jorey Bump wrote:

> mod_python user wrote:
> 
>> I would like to be able to retrieve both _form_ and _query_ 
>> variables, even if they share the same name. e.g.
>> 
>> <form method='post' action='/?name=NAME_ONE'> <input type='hidden' 
>> name='name' value='NAME_TWO' /> <input type='submit' /> </form>
>> 
>> It seems that when both a GET and POST variable share the same name
>>  that the GET (query) variable always wins.
>> 
>> Does anybody know how this might be accomplished?
> 
> I don't know about servlets, but mod_publisher returns a list:
> 
> ['NAME_ONE', 'NAME_TWO']

Duh. I mean mod_python.publisher. :P

> I don't know what causes this behaviour. Since only a POST request is
> sent, not a GET, I would expect any arguments in the URL to be 
> ignored and only variables in the message body to be recognized.

FWIW, mod_php ignores the URL arguments:

  Array ( [name] => NAME_TWO )

This seems more appropriate. A user shouldn't be allowed to mess with 
POST data so easily.

If this gets fixed (assuming it's a bug), you can still use 
req.unparsed_uri and do your own parsing. For example, use publisher and 
create foo.py with this function:

  def test(req):
      return req.unparsed_uri

Then view the results at:

  http://localhost/foo.py/test?name=something

Extract whatever you want from the resulting string.

------------------------------

Message: 5
Date: Tue, 06 Jul 2004 15:43:38 +1000
From: Byron Ellacott <bje@apnic.net>
Subject: Re: [mod_python] query_vars and form_vars
To: mod_python user mailing list <mod_python@modpython.org>
Message-ID: <40EA3C0A.4010608@apnic.net>
Content-Type: text/plain; charset=us-ascii; format=flowed

Jorey Bump wrote:
> I don't know what causes this behaviour. Since only a POST request is 
> sent, not a GET, I would expect any arguments in the URL to be ignored 
> and only variables in the message body to be recognized.

The specification makes a distinction between URL encoded arguments (a 
query fragment) and POST data (just plain old data).  The URL arguments 
form part of the resource request, and should be treated as effectively 
the same as a path fragment, that is, only used to specify which 
resource it is the user is requesting.  POST data is misdefined in 
RFC2616 as "a new subordinate of" the requested resource, and corrected 
in http://purl.org/NET/http-errata to be "data processed by" the 
requested resource.

So, in essence, the protocol definition makes a clear distinction 
between the roles of query fragments and POST data, but that distinction 
is lost when dealing with the vast bulk of web programming libraries out 
there, including mod_python's FieldStorage class.  The correct 
(as-per-specification) behaviour would be to distinguish between query 
arguments and POST data values.

It is quite easy to argue that long convention makes the specification's 
differentiation irrelevant, however.  But in neither world should part 
of the URL be /ignored/. :)

-- 
bje

------------------------------

Message: 6
Date: Tue, 06 Jul 2004 09:36:36 -0400
From: Jorey Bump <list@joreybump.com>
Subject: Re: [mod_python] query_vars and form_vars
To: mod_python user mailing list <mod_python@modpython.org>
Message-ID: <40EAAAE4.1000709@joreybump.com>
Content-Type: text/plain; charset=us-ascii; format=flowed

Byron Ellacott wrote:
> Jorey Bump wrote:
> 
>> I don't know what causes this behaviour. Since only a POST request is 
>> sent, not a GET, I would expect any arguments in the URL to be ignored 
>> and only variables in the message body to be recognized.
> 
> 
> The specification makes a distinction between URL encoded arguments (a 
> query fragment) and POST data (just plain old data).  The URL arguments 
> form part of the resource request, and should be treated as effectively 
> the same as a path fragment, that is, only used to specify which 
> resource it is the user is requesting.  POST data is misdefined in 
> RFC2616 as "a new subordinate of" the requested resource, and corrected 
> in http://purl.org/NET/http-errata to be "data processed by" the 
> requested resource.
> 
> So, in essence, the protocol definition makes a clear distinction 
> between the roles of query fragments and POST data, but that distinction 
> is lost when dealing with the vast bulk of web programming libraries out 
> there, including mod_python's FieldStorage class.  The correct 
> (as-per-specification) behaviour would be to distinguish between query 
> arguments and POST data values.
> 
> It is quite easy to argue that long convention makes the specification's 
> differentiation irrelevant, however.  But in neither world should part 
> of the URL be /ignored/. :)

Well, I didn't say /discarded/. :) Query parts shouldn't prevent access 
to a resource (unless desired), but is it even appropriate to return 
them in an array if the GET method wasn't explicitly used?

To clarify my original statement: If the POST method is used, query 
parts in the URL should *not* be considered part of the form data set. 
This removes all ambiguity about precedence, substitution, or type 
conversion.

RFC2616 doesn't prohibit passing arguments in a URI when submitting POST 
data, but nowhere does it say that they should be processed as form data 
or supersede any variables passed as POST data. I'd disagree that POST 
data was originally misdefined; I believe the author was thinking more 
in terms of scope, where the POST data served to extend a resource. 
Taken literally, it still doesn't imply that the query parts should be 
acted upon; they're simply part of the URI. I like the new language, 
however, because it's less ambiguous.


------------------------------

Message: 7
Date: Tue, 6 Jul 2004 09:45:35 -0400
From: "Daniel J. Popowich" <dpopowich@comcast.net>
Subject: Re: [mod_python] query_vars and form_vars
To: mod_python user mailing list <mod_python@modpython.org>
Message-ID: <16618.44287.620236.878993@gargle.gargle.HOWL>
Content-Type: text/plain; charset=us-ascii


mod_python user writes:
> I'm new to python and consequently mod_python but have discovered the 
> servlet" package, and actually have a small templated webapp up and 
> running.  Extremely powerful language.
> 
> I would like to be able to retrieve both _form_ and _query_ variables, 
> even if they share the same name. e.g.
> 
>    <form method='post' action='/?name=NAME_ONE'>
>      <input type='hidden' name='name' value='NAME_TWO' />
>      <input type='submit' />
>    </form>
> 
> It seems that when both a GET and POST variable share the same name that 
> the GET (query) variable always wins.
> 
> Does anybody know how this might be accomplished?

Since you're acquiring this data from a POST you will probably want to
use form_vars instead of query_vars and set it like this:

   form_vars = [('name', [])]

Setting form_vars this way tells the servlet handler to get the value
of 'name' from the FieldStorage instance with the getlist method.

Setting form_vars like this:

   form_vars = ['name']

tells the handler to retrieve 'name' using the getfirst method.

Check out lesson #10 in the tutorial that comes with Mod_python
Servlets for a discussion concerning retrieving lists.  Lesson #12
discusses query_vars vs. form_vars.

Daniel


------------------------------

Message: 8
Date: Tue, 6 Jul 2004 10:43:04 -0400 (EDT)
From: "Gregory (Grisha) Trubetskoy" <grisha@modpython.org>
Subject: Re: [mod_python] query_vars and form_vars
To: mod_python user mailing list <mod_python@modpython.org>
Message-ID: <20040706102719.O8523@onyx.ispol.com>
Content-Type: TEXT/PLAIN; charset=US-ASCII; format=flowed


This behaviour is part of mod_python.util.FieldStorage class, which is a 
little convenience tool. Protocol compliance is of little or no relevance 
here, since you're free not to use it and process input data using your 
own code or, for example using Python standard library FieldStorage.

Also, if I remember it correctly, most relevant RFC's tend to focus on the 
behaviour of the browser (e.g. the user should be warned before a POST if 
you hit reload, but not for GET), and there is nothing there about how the 
form variables should appear to an application.

As to why it processes GET and POST together and GET wins - that's a 
matter of personal preference. I find it convenient to be able to override 
variables in a form by appending them to the URL, and I think most 
user-friendly applications should behave this way, because IMHO ability to 
tinker with the URL is a good thing.

Some people believe that this should not be allowed because it enables a 
user to alter hidden POST variables, which would otherwise be difficult, 
but this seems to me like a silly argument. There are much more certain 
ways of ensuring that hidden variables have not been modified, e.g. an MD5 
or SHA signature passed along.

Grisha


On Mon, 5 Jul 2004, Jorey Bump wrote:

> mod_python user wrote:
>
>> Hi all,
>> 
>> I'm new to python and consequently mod_python but have discovered the 
>> servlet" package, and actually have a small templated webapp up and 
>> running.  Extremely powerful language.
>> 
>> I would like to be able to retrieve both _form_ and _query_ variables, 
>> even if they share the same name. e.g.
>> 
>>   <form method='post' action='/?name=NAME_ONE'>
>>     <input type='hidden' name='name' value='NAME_TWO' />
>>     <input type='submit' />
>>   </form>
>> 
>> It seems that when both a GET and POST variable share the same name that 
>> the GET (query) variable always wins.
>> 
>> Does anybody know how this might be accomplished?
>
> I don't know about servlets, but mod_publisher returns a list:
>
> ['NAME_ONE', 'NAME_TWO']
>
> I don't know what causes this behaviour. Since only a POST request is
sent, 
> not a GET, I would expect any arguments in the URL to be ignored and only 
> variables in the message body to be recognized.
>
> I'd find out if this follows some kind of standard before relying on the 
> order the values appear in a list. It could be arbitrary or undocumented
(and 
> therefore unpredictable).
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>

------------------------------

Message: 9
Date: Tue, 06 Jul 2004 08:55:32 -0600
From: Dan Olsen <python@dan-olsen.net>
Subject: [mod_python] Version Compatibility
To: mod_python@modpython.org
Message-ID: <40EABD64.5020500@dan-olsen.net>
Content-Type: text/plain; charset="us-ascii"

Does mod_python 2.7.10 work with Python 2.3.3?  The prerequisites say 
that it should have Python 1.5.2, 1.6, 2.0 or 2.1.  I tried to find 
something about it in the archives but couldn't find anything.

Dan Olsen
-------------- next part --------------
An HTML attachment was scrubbed...
URL:
http://modpython.org/pipermail/mod_python/attachments/20040706/216f7239/atta
chment-0001.html

------------------------------

Message: 10
Date: Tue, 06 Jul 2004 08:59:44 -0700
From: John Riehl <jcriehl@mail.jpl.nasa.gov>
Subject: [mod_python] erratic behaviour from mptest.py
To: mod_python@modpython.org
Message-ID: <40EACC70.4030504@mail.jpl.nasa.gov>
Content-Type: text/plain; charset=us-ascii; format=flowed


I set up a textbook mptest.py "hello world" example. Sometimes it works,
sometimes it gives me this:

----------------------------------------------------------------------
Mod_python error: "PythonHandler mptest"

Traceback (most recent call last):

    File "/usr/lib/python2.2/site-packages/mod_python/apache.py", line
287, in HandlerDispatch
      log=debug)

    File "/usr/lib/python2.2/site-packages/mod_python/apache.py", line
457, in import_module
      module = imp.load_module(mname, f, p, d)

    File "/proj/simdev/www/modpython/mptest.py", line 1

      from mod_python import apache

      ^

SyntaxError: invalid syntax

---------------------------------------------------------------------

(---- are mine to delimit sections)

To add to this, I created a second mptest.py, in a different location,
which works all the time.  (hello world).

The flakey mptest.py is under the user's directories.  The consistently
correct one is under the apache document root, symlinked from the user
directories (dont want to run this way).

The flakey one seems to run correctly if I had just previously run the
consistently correct one, or if it had just run correctly.  If I wait a
couple of minutes, and then run it, it will give me the error.

Anyone seen this before?  Any insight to resolving this?

I have been reading the archives, and someone suggested replacing the
PythonDebug On with
	<Files *>
                  PythonPath "sys.path + ['/<pathname>/modpython']"
                  PythonDebug On
          </Files>
but that has not yielded any additional error information.

apache error log has the same errors as above in it.

mod_python is 3.1.3, apache is 2.0.49, and python is 2.2 (rpm:
python-2.2.2-26).  apache & mod_python were built from source, python is
via rpm.

Thanks in advance,

jr
john riehl
sysadmin/mission systems engineer
multi-mission information systems testbed
jet propulsion laboratory





------------------------------

_______________________________________________
Mod_python mailing list
Mod_python@modpython.org
http://mailman.modpython.org/mailman/listinfo/mod_python


End of Mod_python Digest, Vol 16, Issue 7
*****************************************



From imm at iain-mackay.org  Tue Jul  6 21:17:45 2004
From: imm at iain-mackay.org (Iain Mackay)
Date: Tue Jul  6 15:18:01 2004
Subject: [mod_python] Apache on Windows and concurrency
Message-ID: <000701c4638d$f0d4e840$e50bc8c2@Ness>

Thanks Grisha for being so quickly on the case.

Session.py also includes the solution to my problem, using the Apache global
locks.

I now have the following code to protect a section of  script that is using
the database connection (it uses SQLite but would apply mutatis mutandis to
another database). I have restored multi-threading and all works smoothly. 

If this is the best way to do this, it might be worth a mention in the next
release of the documentation. I suppose ideally application code shouldn't
use _apache.

from mod_python import apache

import _apache

import re

import sqlite

import userdatabase

import sys

 

users = None

apache.log_error ("userHandler initialising", apache.APLOG_INFO)

 

def beginDB (req):

        _apache._global_lock(req.server, None, 0)

            global users

            if not users:

                        try:

                                    try:

                                                defaultUser =
req.get_options ()["defaultUser"]

                                    except:

                                                defaultUser = "guest"

                                    users = userdatabase.UserDatabase\

                                                (sqlite.connect
(req.get_options ()["dbFile"],

                                                077, autocommit=1),
defaultUser)

                        except:

                                    (type, value, tb) = sys.exc_info()

                                    apache.log_error ("Cannot access user
database: %s (%s)" % (type, value),

                                                apache.APLOG_ERR)

        

def endDB (req):

        _apache._global_unlock(req.server, None, 0)

 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://modpython.org/pipermail/mod_python/attachments/20040706/04fb22db/attachment.html
From python at theorb.net  Tue Jul  6 15:28:37 2004
From: python at theorb.net (mod_python user)
Date: Tue Jul  6 17:28:33 2004
Subject: [mod_python] query_vars and form_vars
In-Reply-To: <20040706102719.O8523@onyx.ispol.com>
References: <40E9B0DE.5040900@theorb.net> <40EA06F1.3060401@joreybump.com>
	<20040706102719.O8523@onyx.ispol.com>
Message-ID: <40EB1985.7040604@theorb.net>

Gregory (Grisha) Trubetskoy wrote:
> 
> This behaviour is part of mod_python.util.FieldStorage class, which is a 
> little convenience tool. Protocol compliance is of little or no 
> relevance here, since you're free not to use it and process input data 
> using your own code or, for example using Python standard library 
> FieldStorage.
> 
> Also, if I remember it correctly, most relevant RFC's tend to focus on 
> the behaviour of the browser (e.g. the user should be warned before a 
> POST if you hit reload, but not for GET), and there is nothing there 
> about how the form variables should appear to an application.
> 
> As to why it processes GET and POST together and GET wins - that's a 
> matter of personal preference. I find it convenient to be able to 
> override variables in a form by appending them to the URL, and I think 
> most user-friendly applications should behave this way, because IMHO 
> ability to tinker with the URL is a good thing.
> 

Thanks to all for their thoughtful responses.

It seems thoroughly broken to me.

If I define query_vars = [('name', [])] and then print(self.name) I am 
looking at the query variable AND the form variable.  Both form_vars and 
query_vars seem to pick up the other's values when the key names are the 
same.  If I'm looking for query info I definitely don't want form data 
supplied to me.

I'm very strongly of the opinion that they should not be intermixed and 
would consider this behavior to be a bug.

Not a rant or flame, just my personal opinion.

Thanks,
Mike Wright

> Some people believe that this should not be allowed because it enables a 
> user to alter hidden POST variables, which would otherwise be difficult, 
> but this seems to me like a silly argument. There are much more certain 
> ways of ensuring that hidden variables have not been modified, e.g. an 
> MD5 or SHA signature passed along.
> 
> Grisha
> 
> 
> On Mon, 5 Jul 2004, Jorey Bump wrote:
> 
>> mod_python user wrote:
>>
>>> Hi all,
>>>
>>> I'm new to python and consequently mod_python but have discovered the 
>>> servlet" package, and actually have a small templated webapp up and 
>>> running.  Extremely powerful language.
>>>
>>> I would like to be able to retrieve both _form_ and _query_ 
>>> variables, even if they share the same name. e.g.
>>>
>>>   <form method='post' action='/?name=NAME_ONE'>
>>>     <input type='hidden' name='name' value='NAME_TWO' />
>>>     <input type='submit' />
>>>   </form>
>>>
>>> It seems that when both a GET and POST variable share the same name 
>>> that the GET (query) variable always wins.
>>>
>>> Does anybody know how this might be accomplished?
>>
>>
>> I don't know about servlets, but mod_publisher returns a list:
>>
>> ['NAME_ONE', 'NAME_TWO']
>>
>> I don't know what causes this behaviour. Since only a POST request is 
>> sent, not a GET, I would expect any arguments in the URL to be ignored 
>> and only variables in the message body to be recognized.
>>
>> I'd find out if this follows some kind of standard before relying on 
>> the order the values appear in a list. It could be arbitrary or 
>> undocumented (and therefore unpredictable).
>> _______________________________________________
>> Mod_python mailing list
>> Mod_python@modpython.org
>> http://mailman.modpython.org/mailman/listinfo/mod_python
>>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
> 
> 

From joe+gmane at sunstarsys.com  Tue Jul  6 22:30:25 2004
From: joe+gmane at sunstarsys.com (Joe Schaefer)
Date: Tue Jul  6 17:30:26 2004
Subject: [mod_python] libapreq2? (was Re: query_vars and form_vars)
References: <40E9B0DE.5040900@theorb.net> <40EA06F1.3060401@joreybump.com>
	<40EA3C0A.4010608@apnic.net>
Message-ID: <873c44n7zo.fsf_-_@gemini.sunstarsys.com>

Byron Ellacott <bje@apnic.net> writes:

[...]

> So, in essence, the protocol definition makes a clear distinction
> between the roles of query fragments and POST data, but that
> distinction is lost when dealing with the vast bulk of web programming
> libraries out there, including mod_python's FieldStorage class.  The
> correct (as-per-specification) behaviour would be to distinguish
> between query arguments and POST data values. 

FWIW, the libapreq2 C library was designed with this in mind.  
The old-style API (where GET & POST data are combined) is
available through apreq_param(), but the GET and POST data is 
kept separate in two tables, req->args and req->body.

Since apreq is a sister-project to mod_python, I'd love 
to know if it's possible to somehow make the library 
available to mod_python users.

I'd be glad to say more about the benefits of libapreq2 
on this list, but since I don't know the first thing about
python I don't know how topical my remarks would be.

-- 
Joe Schaefer

From bje at apnic.net  Wed Jul  7 10:28:29 2004
From: bje at apnic.net (Byron Ellacott)
Date: Tue Jul  6 19:28:28 2004
Subject: [mod_python] query_vars and form_vars
In-Reply-To: <40EAAAE4.1000709@joreybump.com>
References: <40E9B0DE.5040900@theorb.net>
	<40EA06F1.3060401@joreybump.com>	<40EA3C0A.4010608@apnic.net>
	<40EAAAE4.1000709@joreybump.com>
Message-ID: <40EB359D.4010901@apnic.net>

Jorey Bump wrote:
> Well, I didn't say /discarded/. :) Query parts shouldn't prevent access 
> to a resource (unless desired), but is it even appropriate to return 
> them in an array if the GET method wasn't explicitly used?
 > To clarify my original statement: If the POST method is used, query
 > parts in the URL should *not* be considered part of the form data set.
 > This removes all ambiguity about precedence, substitution, or type
 > conversion.

It's appropriate to make them available in some form, regardless of the 
type of method used.  Whether it's appropriate to return them without 
distinguishing them from POST is, as Grisha says, a matter of 
preference.  By the definition, they should be treated distinctively. 
By common user and programmer expectations, they probably should be 
treated identically.

My own preference at this point is to be able to tell FieldStorage 
explicitly how you want things processed, overriding the current default 
behaviour to only process URI arguments, or POST data, or both.  It's a 
pretty trivial change to the code to do that.

> RFC2616 doesn't prohibit passing arguments in a URI when submitting POST 
> data, but nowhere does it say that they should be processed as form data 
> or supersede any variables passed as POST data. I'd disagree that POST 
> data was originally misdefined; I believe the author was thinking more 
> in terms of scope, where the POST data served to extend a resource. 
> Taken literally, it still doesn't imply that the query parts should be 
> acted upon; they're simply part of the URI. I like the new language, 
> however, because it's less ambiguous.

Absolutely.  RFC2616 doesn't make any connection between query arguments 
and method types.  The query arguments are part of the URI, and 
therefore part of the resource being identified.  Perhaps 'misdefined' 
is too strong a word, I'd be willing to settle for 'poorly defined.' :)
From nicolas at lehuen.com  Wed Jul  7 12:12:45 2004
From: nicolas at lehuen.com (Nicolas Lehuen)
Date: Wed Jul  7 05:12:49 2004
Subject: [mod_python] Apache on Windows and concurrency
In-Reply-To: <000701c4638d$f0d4e840$e50bc8c2@Ness>
Message-ID: <200407070912.i679ClIF011909@modpython.org>

Hi Ian,

You can also use the standard "thread" or "threading" Python modules, so
that you don't depend on _apache.

The approach you have is secure but it has the downside of denying any
concurrent access to the database (if I understand your code correctly). I
don't know SQLite very much, but it seems that it can handle multithreaded
access to the database (see  <http://www.sqlite.org/lockingv3.html>
http://www.sqlite.org/lockingv3.html), so it would be better to leverage
this. The solution is a connection pool.

You can write a connection pool using the threading.RLock and
threading.Condition to protect the critical sections, namely the acquisition
of database connections. The end result is that each thread is guaranteed to
have a connection of its own, which can be reused as soon the thread release
it to the pool. It usually speeds things up, and I guess it would be
especially useful with SQLite. I've been using such a connection pool for a
few months now and have never looked back since. In your case, it seems that
you wrap the SQLite connection with an UserDatabase object, so maybe you
should pool UserDatabase instances instead of SQLite connections.

Best regards,

Nicolas Lehuen


  _____  

De : mod_python-bounces@modpython.org
[mailto:mod_python-bounces@modpython.org] De la part de Iain Mackay
Envoy? : mardi 6 juillet 2004 21:18
? : mod_python@modpython.org
Objet : [mod_python] Apache on Windows and concurrency



Thanks Grisha for being so quickly on the case.

Session.py also includes the solution to my problem, using the Apache global
locks.

I now have the following code to protect a section of  script that is using
the database connection (it uses SQLite but would apply mutatis mutandis to
another database). I have restored multi-threading and all works smoothly. 

If this is the best way to do this, it might be worth a mention in the next
release of the documentation. I suppose ideally application code shouldn?t
use _apache.

from mod_python import apache

import _apache

import re

import sqlite

import userdatabase

import sys

 

users = None

apache.log_error ("userHandler initialising", apache.APLOG_INFO)

 

def beginDB (req):

        _apache._global_lock(req.server, None, 0)

            global users

            if not users:

                        try:

                                    try:

                                                defaultUser =
req.get_options ()["defaultUser"]

                                    except:

                                                defaultUser = "guest"

                                    users = userdatabase.UserDatabase\

                                                (sqlite.connect
(req.get_options ()["dbFile"],

                                                077, autocommit=1),
defaultUser)

                        except:

                                    (type, value, tb) = sys.exc_info()

                                    apache.log_error ("Cannot access user
database: %s (%s)" % (type, value),

                                                apache.APLOG_ERR)

        

def endDB (req):

        _apache._global_unlock(req.server, None, 0)

 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://modpython.org/pipermail/mod_python/attachments/20040707/de7dd43f/attachment-0001.html
From skremer at q.cis.uoguelph.ca  Wed Jul  7 15:16:22 2004
From: skremer at q.cis.uoguelph.ca (Stefan C. Kremer)
Date: Wed Jul  7 14:18:10 2004
Subject: [mod_python] What is a directory?
Message-ID: <200407071816.i67IGMiF020335@q.cis.uoguelph.ca>

This may sound like a stupid question (and perhaps it is), but I'm asking
it in the context of the PythonInterpPerDirectory directive and a custom
mod_python handler.

If my understanding is correct, it is my handlers job to process the
req argument and produce whatever content it sees fit.  Where I get
that content from, how it is generated, is entirely upto my handler.
I could, for example have my hander generate all pages directly and
never acess the file system at all.

But, before any of this happens, mod_python needs to select or create
an interpreter on which to run my handler.  Presumably, it does this without
actually accessing the target URI, since the target URI might be neither
a file nor a directory (as in the example above).

So my question is, what (in the context of the PythonInterpPerDirectory
directive) is a directory?  I'm guessing it is based on the syntax of the
requested URI.  If I've missed this in the documentaion, somewhere please
tell me where to go...

	Stefan
From grisha at modpython.org  Wed Jul  7 16:14:14 2004
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Wed Jul  7 15:14:18 2004
Subject: [mod_python] What is a directory?
In-Reply-To: <200407071816.i67IGMiF020335@q.cis.uoguelph.ca>
References: <200407071816.i67IGMiF020335@q.cis.uoguelph.ca>
Message-ID: <20040707150818.W44135@onyx.ispol.com>


Stefan -

When InterpPerDirectory is On, the interpreter name would be based on the 
directory name extracted from req->filename.

Read the note at the bottom of 
http://www.modpython.org/live/current/doc-html/dir-other-ipd.html
for some more information.

Probably where you are confused is that you don't "handle a request", you 
handle a _phase_ of a request, and Apache handles phases you don't 
explicitely handle.

Grisha

On Wed, 7 Jul 2004, Stefan C. Kremer wrote:

> This may sound like a stupid question (and perhaps it is), but I'm asking
> it in the context of the PythonInterpPerDirectory directive and a custom
> mod_python handler.
>
> If my understanding is correct, it is my handlers job to process the
> req argument and produce whatever content it sees fit.  Where I get
> that content from, how it is generated, is entirely upto my handler.
> I could, for example have my hander generate all pages directly and
> never acess the file system at all.
>
> But, before any of this happens, mod_python needs to select or create
> an interpreter on which to run my handler.  Presumably, it does this without
> actually accessing the target URI, since the target URI might be neither
> a file nor a directory (as in the example above).
>
> So my question is, what (in the context of the PythonInterpPerDirectory
> directive) is a directory?  I'm guessing it is based on the syntax of the
> requested URI.  If I've missed this in the documentaion, somewhere please
> tell me where to go...
>
> 	Stefan
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>
From skremer at q.cis.uoguelph.ca  Wed Jul  7 17:01:48 2004
From: skremer at q.cis.uoguelph.ca (Stefan C. Kremer)
Date: Wed Jul  7 16:03:54 2004
Subject: [mod_python] What is a directory?
Message-ID: <200407072001.i67K1mFk021459@q.cis.uoguelph.ca>

From: "Gregory (Grisha) Trubetskoy" <grisha@modpython.org>

When InterpPerDirectory is On, the interpreter name would be based on the directory name extracted from req->filename.

So, I guess my question is how is the directory name "extracted" from 
req->filename?

Or to put it into more concrete terms, let me make a slight modification to the example in the link you provided:

For example, assume there is a /directory. /directory has an .htaccess file with a PythonHandler directive and InterpPerDirectory, but NO OTHER FILES.  Now suppose that apache is sent requests for:

	 (1) /directory/something
     (2) /directory/something.ext
     (3) /directory/something/something
     (4) /directory/something/something.ext
     (5) /directory/somethingelse
     (6) /directory/somethingelse.ext

Assuming that the python handler (via apache) sends some data back for all of these things.  Can you tell me which of these will share sub-interpreters and why?

Based on my preliminary observations it seems to me that only (1) and (4) end up sharing.  Would that make sense to you?

	Stefan

From grisha at modpython.org  Wed Jul  7 17:50:38 2004
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Wed Jul  7 16:50:49 2004
Subject: [mod_python] What is a directory?
In-Reply-To: <200407072001.i67K1mFk021459@q.cis.uoguelph.ca>
References: <200407072001.i67K1mFk021459@q.cis.uoguelph.ca>
Message-ID: <20040707164333.R45683@onyx.ispol.com>


The code that makes the decision is in src/mod_python.c starting at line 
887. It takes req->filename and calls ap_make_dirstr_parent() on it. If 
that works like it looks it should, (1,3,4) should be in interpeter called 
'/directory/something' and (2,5,6) should be in '/directory'.

You can find out the interpreter name by looking at req.interpreter, BTW.

Grisha


On Wed, 7 Jul 2004, Stefan C. Kremer wrote:

>> From: "Gregory (Grisha) Trubetskoy" <grisha@modpython.org>
>>
>> When InterpPerDirectory is On, the interpreter name would be based on 
>> the directory name extracted from req->filename.
>
> So, I guess my question is how is the directory name "extracted" from
> req->filename?
>
> Or to put it into more concrete terms, let me make a slight modification 
> to the example in the link you provided:
>
> For example, assume there is a /directory. /directory has an .htaccess 
> file with a PythonHandler directive and InterpPerDirectory, but NO OTHER 
> FILES.  Now suppose that apache is sent requests for:
>
> 	 (1) /directory/something
>     (2) /directory/something.ext
>     (3) /directory/something/something
>     (4) /directory/something/something.ext
>     (5) /directory/somethingelse
>     (6) /directory/somethingelse.ext
>
> Assuming that the python handler (via apache) sends some data back for 
> all of these things.  Can you tell me which of these will share 
> sub-interpreters and why?
>
> Based on my preliminary observations it seems to me that only (1) and 
> (4) end up sharing.  Would that make sense to you?
>
> 	Stefan
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>
From imm at iain-mackay.org  Thu Jul  8 01:49:59 2004
From: imm at iain-mackay.org (Iain Mackay)
Date: Wed Jul  7 19:50:48 2004
Subject: [mod_python] Apache on Windows and concurrency
Message-ID: <001201c4647d$238dc640$e50bc8c2@Ness>

Dear Nicolas
Thank you for those most helpful comments. 
As a first step I rewrote my specimen code using a Lock on a global database
connection: This is very much faster than the server locks, and at least
with a modest load seems to have no concurrency problems either.
import threading

users = None
apache.log_error ("userHandler initialising", apache.APLOG_INFO)
DBLock = threading.Lock()

def beginDB (req):
	global DBLock
        DBLock.acquire()
	global users
	if not users:
		try:
			try:
				defaultUser = req.get_options
()["defaultUser"]
			except:
				defaultUser = "guest"
			users = userdatabase.UserDatabase\
				(sqlite.connect (req.get_options
()["dbFile"],
				077, autocommit=1), defaultUser)
		except:
			(type, value, tb) = sys.exc_info()
			apache.log_error ("Cannot access user database: %s
(%s)" % (type, value),
				apache.APLOG_ERR)
        
def endDB (req):
        DBLock.release()
This is still sharing a single database connection. The issue of how much
benefit you can get from multiple connections is a complex one; in the case
of SQLite I suspect it is quite limited, because SQLite locks the entire
database for each transaction. In a production situation one might well us a
different database.
If we move to a connection-per-thread paradigm, the code becomes slightly
more complex than I like to attempt in the wee small hours, so I'll leave
that for later.
I suppose the main drift here is that on Windows one has to beware threading
issues in mod_python; but t(h)read carefully and all will be well.
Iain



From neto at visuaw.net  Thu Jul  8 02:33:09 2004
From: neto at visuaw.net (Victor Tortorello Neto)
Date: Thu Jul  8 00:31:37 2004
Subject: [mod_python] File/Image upload
Message-ID: <200407080133.09965.neto@visuaw.net>

Hello!

I'm trying to upload an image to server. I was trying on Windows, opening an 
"fd" and writing image content in the fd.

I don't know if it's the best way to do this, if you know a better way please 
tell me! :)

Everything happens ok with Windows, open the fd with os.O_BINARY flag.

Today I have to migrate the web site to Linux, and only image upload has a 
problem, this problem.

Well, my question is:

Has some flag equivalent to Windows O_BINARY on Linux?

And my error output:

IOError: image file is truncated (30 bytes not processed)

Thanks in advance!

Victor Tortorello Neto
From b.niemann at betternet.de  Thu Jul  8 10:53:24 2004
From: b.niemann at betternet.de (Benjamin Niemann)
Date: Thu Jul  8 04:10:18 2004
Subject: [mod_python] Re: File/Image upload
In-Reply-To: <200407080133.09965.neto@visuaw.net>
References: <200407080133.09965.neto@visuaw.net>
Message-ID: <cciudp$82j$1@sea.gmane.org>

Victor Tortorello Neto wrote:
> Hello!
> 
> I'm trying to upload an image to server. I was trying on Windows, opening an 
> "fd" and writing image content in the fd.
> 
> I don't know if it's the best way to do this, if you know a better way please 
> tell me! :)
> 
> Everything happens ok with Windows, open the fd with os.O_BINARY flag.
> 
> Today I have to migrate the web site to Linux, and only image upload has a 
> problem, this problem.
> 
> Well, my question is:
> 
> Has some flag equivalent to Windows O_BINARY on Linux?
Not really. Using O_BINARY won't hurt and is good practice to avoid 
problems when moving from UNIX style systems to windows. UNIX style 
systems - including Linux - always treat a file as binary data.

> And my error output:
> 
> IOError: image file is truncated (30 bytes not processed)
When you try to open the uploaded file for reading? Is the file created 
at all?
A common problem for UNIX newcomers (and fileuploads through webservers 
in general) are access restrictions for the directory where the files 
are stored. Is the user, the webserver is running under (often something 
like www or www-data), allowed to write to the directory? Try "chmod a+w 
dirname". If this works, look for more info about UNIX users, groups and 
permissions and find some working but more restrictive settings (a+w 
grants write access to everyone..).

From dpopowich at comcast.net  Fri Jul  9 12:49:13 2004
From: dpopowich at comcast.net (Daniel Popowich)
Date: Fri Jul  9 11:49:44 2004
Subject: [mod_python] query_vars and form_vars
In-Reply-To: <40EB1985.7040604@theorb.net>
References: <40E9B0DE.5040900@theorb.net> <40EA06F1.3060401@joreybump.com>
	<20040706102719.O8523@onyx.ispol.com> <40EB1985.7040604@theorb.net>
Message-ID: <16622.48761.365699.680099@h00a0cc25a952.ne.client2.attbi.com>


mod_python user writes:
> It seems thoroughly broken to me.
> ...
> I'm very strongly of the opinion that they should not be intermixed and 
> would consider this behavior to be a bug.

While I empathize, this is not strictly a bug.

As others have said in this thread, better than I, the mixing of POST
data and URI query args is conventional use in a multitude of software
libraries and does not strictly break any RFC.

As for query_vars and form_vars in Servlets, they are built entirely
on top of mod_python.utils.FieldStorage and so inherit that class'
functionality.  Should FieldStorage be extended, as someone suggested,
to allow processing of query args only, form data only, or both (with
tagging of where it came from?), I'll propagate that functionality to
Servlets.

What may be broken in Servlets is, perhaps, nomenclature.  I'll accept
that query_vars and form_vars are not the best names for these
instance variables (and maybe even misleading, as in your case).  I
welcome any suggestions for better names for these variables.

Daniel



From miles at phgroup.com  Fri Jul  9 18:50:44 2004
From: miles at phgroup.com (Miles Thibault)
Date: Fri Jul  9 12:50:47 2004
Subject: [mod_python] Semaphores not cleaned up when running in debug mode
Message-ID: <40EECCE4.9030202@phgroup.com>

When running Apache in debug mode (-X or -DONE_PROCESS) the mutexes that 
mod_python creates are not removed after the server is shut down.

mod_python version = 3.1.3
Apache version = 2.0.49
OS = Linux 2.4 and 2.6
Disto = Suse 9.0 and 9.1

I've done strace's of Apache processes both in and not in debug mode.  
semctl(... IPC_RMID ...) is never called in debug mode.  I've also 
checked that the semaphores created are indeed the ones that show up in 
ipcs -s.
If this isn't my problem, I kind of think it's an Apache problem -- but 
I thought I'd try here first.

The easy way to fix things is to remove all the semaphores.  But this 
isn't great because I have more than one server running (as the same 
user) at the same time.  I've been trying to get mod_python to print the 
semid to the error_log as a debug message, but I haven't been able to 
figure out how to get the semid from the mutex array yet.

Thanks,
Miles.

From grisha at modpython.org  Fri Jul  9 14:30:48 2004
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jul  9 13:30:57 2004
Subject: [mod_python] Semaphores not cleaned up when running in debug mode
In-Reply-To: <40EECCE4.9030202@phgroup.com>
References: <40EECCE4.9030202@phgroup.com>
Message-ID: <20040709132623.U79088@onyx.ispol.com>


I'm guessing you Ctrl-C to stop apache and it probably doesn't shut down 
gracefully then. Try running httpd -k stop in another window (don't know 
if it will work, but worth a try).

Grisha

On Fri, 9 Jul 2004, Miles Thibault wrote:

> When running Apache in debug mode (-X or -DONE_PROCESS) the mutexes that 
> mod_python creates are not removed after the server is shut down.
>
> mod_python version = 3.1.3
> Apache version = 2.0.49
> OS = Linux 2.4 and 2.6
> Disto = Suse 9.0 and 9.1
>
> I've done strace's of Apache processes both in and not in debug mode. 
> semctl(... IPC_RMID ...) is never called in debug mode.  I've also checked 
> that the semaphores created are indeed the ones that show up in ipcs -s.
> If this isn't my problem, I kind of think it's an Apache problem -- but I 
> thought I'd try here first.
>
> The easy way to fix things is to remove all the semaphores.  But this isn't 
> great because I have more than one server running (as the same user) at the 
> same time.  I've been trying to get mod_python to print the semid to the 
> error_log as a debug message, but I haven't been able to figure out how to 
> get the semid from the mutex array yet.
>
> Thanks,
> Miles.
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>
From miles at phgroup.com  Fri Jul  9 19:45:36 2004
From: miles at phgroup.com (Miles Thibault)
Date: Fri Jul  9 13:45:37 2004
Subject: [mod_python] Semaphores not cleaned up when running in debug mode
In-Reply-To: <20040709132623.U79088@onyx.ispol.com>
References: <40EECCE4.9030202@phgroup.com>
	<20040709132623.U79088@onyx.ispol.com>
Message-ID: <40EED9C0.5020004@phgroup.com>

Tried that.  Also tried kill -HUP and kill -TERM.  I'm not positive, but 
I think -HUP is the same as httpd -k graceful and kill -TERM is the same 
as httpd -k stop.  Regardless, when looking at strace, shutdown actions 
do occur after receiving a signal, just not the removal of the semaphores.
Thanks,
Miles.

Gregory (Grisha) Trubetskoy wrote:

>
> I'm guessing you Ctrl-C to stop apache and it probably doesn't shut 
> down gracefully then. Try running httpd -k stop in another window 
> (don't know if it will work, but worth a try).
>
> Grisha

From pf_moore at yahoo.co.uk  Fri Jul  9 23:29:49 2004
From: pf_moore at yahoo.co.uk (Paul Moore)
Date: Fri Jul  9 17:29:42 2004
Subject: [mod_python] Binaries for Win32 and Python 2.4?
Message-ID: <y8lsj2cy.fsf@yahoo.co.uk>

Now that Python 2.4a1 has been released, I'd like to start testing it.
I don't have the facilities to build Win32 binaries of mod_python for
Python 2.4 (no MSVC 7.1 compiler, and no idea how or if I could build
with mingw)

Will Python 2.4 compatible binaries be available during the alpha/beta
cycle, for testing?

Thanks,
Paul.
-- 
The only reason some people get lost in thought is because it's
unfamiliar territory -- Paul Fix

From abrahams at gmail.com  Fri Jul  9 16:21:08 2004
From: abrahams at gmail.com (Sean Abrahams)
Date: Fri Jul  9 18:21:11 2004
Subject: [mod_python] mod_python and unittest
Message-ID: <dfbb7da0040709152119a10316@mail.gmail.com>

What's the best way to use python's unittest module with mod_python?

Unless I'm missing something, I can't just 'from mod_python import
apache' and create my own req object without it being run under
Apache. I was thinking I should just create a mock req object for
simple tests, thoughts?

Thanks,
--Sean
From grisha at modpython.org  Fri Jul  9 20:20:48 2004
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jul  9 19:20:52 2004
Subject: [mod_python] mod_python and unittest
In-Reply-To: <dfbb7da0040709152119a10316@mail.gmail.com>
References: <dfbb7da0040709152119a10316@mail.gmail.com>
Message-ID: <20040709191938.I84673@onyx.ispol.com>


Sean -

Take a look at the test subdirectory of the source distribution. It 
contains a bunch of mod_python tests. You're right, it's not that simple 
because you actually have to run httpd and make a request to conduct a 
test.

Grisha

On Fri, 9 Jul 2004, Sean Abrahams wrote:

> What's the best way to use python's unittest module with mod_python?
>
> Unless I'm missing something, I can't just 'from mod_python import
> apache' and create my own req object without it being run under
> Apache. I was thinking I should just create a mock req object for
> simple tests, thoughts?
>
> Thanks,
> --Sean
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>
From gustavo.cordova at q-voz.com  Fri Jul  9 19:49:14 2004
From: gustavo.cordova at q-voz.com (=?UTF-8?B?R3VzdGF2byBDw7NyZG92YSBBdmlsYQ==?=)
Date: Fri Jul  9 19:49:00 2004
Subject: [mod_python] query_vars and form_vars
In-Reply-To: <40EA3108.8000009@joreybump.com>
References: <40E9B0DE.5040900@theorb.net> <40EA06F1.3060401@joreybump.com>
	<40EA3108.8000009@joreybump.com>
Message-ID: <40EF2EFA.5080101@q-voz.com>

Don't get y'alls panties in a bunch, QUERY_STRING parameters and POSTed 
data are ORTHOGONAL, they don't have anything to do with each other.

I normally parse urlencoded parameters using something like:

    >>> params = dict(util.parse_qsl(request.args or ""))

because normally I only expect a single instance of any parameter, and 
any extra instances will get clobbered by this (not that this particular 
application cares, validation and verification happens after parsing).

IF you know for a fact that the POSTed data is URLEncoded, you can do 
something like the previous snippet and build a dictionary of those 
parameters also:

    >>> data = req.read(req.content_length)
    >>> posted_params = dict(util.parse_qsl(data or ""))

So now you have two dictionaries.

Parsing for multiple instances of a single parameter is left as an 
excersize to the reader.

;-)

-gus

Jorey Bump wrote:

> Jorey Bump wrote:
>
>> mod_python user wrote:
>>
>>> I would like to be able to retrieve both _form_ and _query_ 
>>> variables, even if they share the same name. e.g.
>>>
>>> <form method='post' action='/?name=NAME_ONE'> <input type='hidden' 
>>> name='name' value='NAME_TWO' /> <input type='submit' /> </form>
>>>
>>> It seems that when both a GET and POST variable share the same name
>>>  that the GET (query) variable always wins.
>>>
>>> Does anybody know how this might be accomplished?
>>
>>
>> I don't know about servlets, but mod_publisher returns a list:
>>
>> ['NAME_ONE', 'NAME_TWO']
>
>
> Duh. I mean mod_python.publisher. :P
>
>> I don't know what causes this behaviour. Since only a POST request is
>> sent, not a GET, I would expect any arguments in the URL to be 
>> ignored and only variables in the message body to be recognized.
>
>
> FWIW, mod_php ignores the URL arguments:
>
>  Array ( [name] => NAME_TWO )
>
> This seems more appropriate. A user shouldn't be allowed to mess with 
> POST data so easily.
>
> If this gets fixed (assuming it's a bug), you can still use 
> req.unparsed_uri and do your own parsing. For example, use publisher 
> and create foo.py with this function:
>
>  def test(req):
>      return req.unparsed_uri
>
> Then view the results at:
>
>  http://localhost/foo.py/test?name=something
>
> Extract whatever you want from the resulting string.
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>
>

-------------- next part --------------
A non-text attachment was scrubbed...
Name: gustavo.cordova.vcf
Type: text/x-vcard
Size: 449 bytes
Desc: not available
Url : http://modpython.org/pipermail/mod_python/attachments/20040709/dc6f9f98/gustavo.cordova.vcf
From d.holton at vanderbilt.edu  Sat Jul 10 01:17:00 2004
From: d.holton at vanderbilt.edu (Doug Holton)
Date: Sat Jul 10 01:17:14 2004
Subject: [mod_python] share any tutorials or code snippets you have -
	modpython wiki
Message-ID: <40EF7BCC.3010603@vanderbilt.edu>

If you have any good tips or code snippets or applications for 
mod_python, feel free to share them on the mod_python wiki at 
http://modpython.coedit.net/  Anyone can edit the pages there.
Right now it looks like there are more mod_python application frameworks 
than applications.
From peden at americanphysicians.net  Sat Jul 10 10:03:44 2004
From: peden at americanphysicians.net (Paul Eden)
Date: Sat Jul 10 12:03:48 2004
Subject: [mod_python] Creating many mysqld processes
Message-ID: <1089475423.23846.22.camel@dell.benchline.org>

I created an intranet application with mysql and mod_python and am
having trouble with extra mysqld processes on the server.

They don't seem to be being destroyed/collected until I restart the
mysql server.

This is probably some error on my part in coding the application, but I
am not sure where the problem is.

Will someone please tell me at what point in the DB API specification
the extra mysqld are destroyed if at all or how I can get rid of them
after they are finished?  Is it just connection.close()?


mod_python-3.1.3-1
MySQL-python-0.9.1-6
python-2.2.3-5
httpd-2.0.46-32.ent.3
Red Hat Enterprise Linux ES release 3

Thank You,

Paul


From sharky at codezone.ath.cx  Sat Jul 10 20:23:13 2004
From: sharky at codezone.ath.cx (Sharky @ Code Zone)
Date: Sat Jul 10 14:19:51 2004
Subject: [mod_python] servlet (mps_tutorial) and apache
Message-ID: <1089483793.8366.2.camel@sharkylandia.homelinux.net>

In the mps_tutorial, every time i change any .mps or _TutorialBase.py i
need to restart apache so that changes take affect?

Thanks
Sharky
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://modpython.org/pipermail/mod_python/attachments/20040710/3b9940b8/attachment.html
From ccurvey at earthlink.net  Sat Jul 10 17:44:42 2004
From: ccurvey at earthlink.net (Chris Curvey)
Date: Sat Jul 10 16:42:27 2004
Subject: [mod_python] servlet (mps_tutorial) and apache
In-Reply-To: <1089483793.8366.2.camel@sharkylandia.homelinux.net>
References: <1089483793.8366.2.camel@sharkylandia.homelinux.net>
Message-ID: <40F0553A.2070600@earthlink.net>

I think I'm having the same issue/confusion, but I can't find what I'm 
looking for in the mod_python docs or the mpservlet docs.  In fact, when 
I run httpd normally -- that is, with "apachectl restart", I seem to get 
random results.  It looks like different versions of the servlet are 
getting stored in different OS processes. 

Is there a summary out there of what causes a mod_python class (or a 
servlet class) to be reconstituted from disk? 

I seem to remember that there was an option I could set (somewhere) 
which told apache to always re-use code from disk.  This would be bad 
for production, but very useful for development....

-Chris


Sharky @ Code Zone wrote:

> In the mps_tutorial, every time i change any .mps or _TutorialBase.py 
> i need to restart apache so that changes take affect?
>
> Thanks
> Sharky
>
>------------------------------------------------------------------------
>
>_______________________________________________
>Mod_python mailing list
>Mod_python@modpython.org
>http://mailman.modpython.org/mailman/listinfo/mod_python
>  
>


From dpopowich at comcast.net  Sun Jul 11 11:49:39 2004
From: dpopowich at comcast.net (Daniel Popowich)
Date: Sun Jul 11 10:50:06 2004
Subject: [mod_python] servlet (mps_tutorial) and apache
In-Reply-To: <1089483793.8366.2.camel@sharkylandia.homelinux.net>
References: <1089483793.8366.2.camel@sharkylandia.homelinux.net>
Message-ID: <16625.21379.886575.430302@h00a0cc25a952.ne.client2.attbi.com>


> In the mps_tutorial, every time i change any .mps or _TutorialBase.py i
> need to restart apache so that changes take affect?

You shouldn't need to restart apache if you modify a mps file: an
internal cache of the Servlet handler maintains modification times of
mps files and if the version on disk is newer than that in the cache,
the file is re-loaded.  (For the curious, this code is in
mod_python.servlet._servlets_manager.__load_servlet.)

However, py files are another matter.  My favorite trick for
development/debugging is to modify the apache directive,
MaxRequestsPerChild.  Assuming you're using the prefork MPM:

    <IfModule prefork.c>
    ...
    #MaxRequestsPerChild  1000
    MaxRequestsPerChild  1
    ...
    </IfModule>

You DEFINITELY don't want this in production as it will reload the
python interpreter for each request, but the nasty issue of reloading
modified python modules goes away in a hurry.

The mod_python FAQ offers another trick, using the python reload
built-in, but that forces you to put code in your apps to manage the
reloads.

Cheers,

Daniel

From sharky at codezone.ath.cx  Sun Jul 11 19:17:15 2004
From: sharky at codezone.ath.cx (Sharky @ Code Zone)
Date: Sun Jul 11 13:12:37 2004
Subject: [mod_python] servlet (mps_tutorial) and apache
In-Reply-To: <16625.21379.886575.430302@h00a0cc25a952.ne.client2.attbi.com>
References: <1089483793.8366.2.camel@sharkylandia.homelinux.net>
	<16625.21379.886575.430302@h00a0cc25a952.ne.client2.attbi.com>
Message-ID: <1089566234.23689.26.camel@sharkylandia.homelinux.net>

Skipped content of type multipart/alternative-------------- next part --------------
A non-text attachment was scrubbed...
Name: smiley-10.png
Type: image/png
Size: 848 bytes
Desc: not available
Url : http://modpython.org/pipermail/mod_python/attachments/20040711/cfcb9cb1/smiley-10.png
From dpopowich at comcast.net  Sun Jul 11 21:44:38 2004
From: dpopowich at comcast.net (Daniel Popowich)
Date: Sun Jul 11 20:45:11 2004
Subject: [mod_python] servlet (mps_tutorial) and apache
In-Reply-To: <1089566234.23689.26.camel@sharkylandia.homelinux.net>
References: <1089483793.8366.2.camel@sharkylandia.homelinux.net>
	<16625.21379.886575.430302@h00a0cc25a952.ne.client2.attbi.com>
	<1089566234.23689.26.camel@sharkylandia.homelinux.net>
Message-ID: <16625.57078.272235.51378@h00a0cc25a952.ne.client2.attbi.com>


> In your example of mps_tutorial, all _files.py ('.py') are compiled and
> i think by default when you run for the first time.
> 
> But imagine you exemple with some diffs.:
>    1- tutorial instaled and configured in:  /var/www/mps_tutorial/
>    2- all your _*.py are in: /var/www/mps_tutorial/pyfiles/
>    3- all your *.mps are in: /var/www/mps_tutorial/
>    4- you have a __init__.py in /var/www/mps_tutorial/ with __vars__ =
> ["pyfiles"]
>    5- you have a __init__.py in /var/www/mps_tutorial/pyfiles with
> __vars__ = ["_SitePage", "_TutorialBase", "_HTML", "_HTMLHighlightedPy"]

I have never heard of __vars__.  Do you mean __all__?  Regardless,
this should have no impact on the generation of pyc files.

> In your index.mps you have something like:
> from pyfiles._TutorialBase import *
> 
> It works fine but dont creat any .pyc of *.py... why not?

When python imports a module and the pyc file does not exist it tries
to create it, and will, if the process has write permissions to the
directory containing the py file.

Does the directory you've created, pyfiles, allow write permissions to
the httpd process uid?

Daniel

From sharky at codezone.ath.cx  Mon Jul 12 03:19:53 2004
From: sharky at codezone.ath.cx (Sharky @ Code Zone)
Date: Sun Jul 11 21:15:13 2004
Subject: [mod_python] servlet (mps_tutorial) and apache
In-Reply-To: <16625.57078.272235.51378@h00a0cc25a952.ne.client2.attbi.com>
References: <1089483793.8366.2.camel@sharkylandia.homelinux.net>
	<16625.21379.886575.430302@h00a0cc25a952.ne.client2.attbi.com>
	<1089566234.23689.26.camel@sharkylandia.homelinux.net>
	<16625.57078.272235.51378@h00a0cc25a952.ne.client2.attbi.com>
Message-ID: <1089595192.27070.3.camel@sharkylandia.homelinux.net>

A Seg, 2004-07-12 ?s 01:44, Daniel Popowich escreveu:

> > In your example of mps_tutorial, all _files.py ('.py') are compiled and
> > i think by default when you run for the first time.
> > 
> > But imagine you exemple with some diffs.:
> >    1- tutorial instaled and configured in:  /var/www/mps_tutorial/
> >    2- all your _*.py are in: /var/www/mps_tutorial/pyfiles/
> >    3- all your *.mps are in: /var/www/mps_tutorial/
> >    4- you have a __init__.py in /var/www/mps_tutorial/ with __vars__ =
> > ["pyfiles"]
> >    5- you have a __init__.py in /var/www/mps_tutorial/pyfiles with
> > __vars__ = ["_SitePage", "_TutorialBase", "_HTML", "_HTMLHighlightedPy"]
> 
> I have never heard of __vars__.  Do you mean __all__?  Regardless,
> this should have no impact on the generation of pyc files.

__all__, not __vars__  sorry my mistake...


> > In your index.mps you have something like:
> > from pyfiles._TutorialBase import *
> > 
> > It works fine but dont creat any .pyc of *.py... why not?
> 
> When python imports a module and the pyc file does not exist it tries
> to create it, and will, if the process has write permissions to the
> directory containing the py file.
> 
> Does the directory you've created, pyfiles, allow write permissions to
> the httpd process uid?

You have rigth... the directory don's allow write permissions to my http
process.

Many thanks

Sharky
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://modpython.org/pipermail/mod_python/attachments/20040712/ccf34906/attachment.html
From arnaudsj at mac.com  Sun Jul 11 21:37:32 2004
From: arnaudsj at mac.com (=?ISO-8859-1?Q?S=E9bastien_Arnaud?=)
Date: Sun Jul 11 21:37:36 2004
Subject: [mod_python] Anybody using PyWORK
In-Reply-To: <y8lsj2cy.fsf@yahoo.co.uk>
References: <y8lsj2cy.fsf@yahoo.co.uk>
Message-ID: <0B25C385-D3A4-11D8-8934-003065966802@mac.com>

Hi,

I was wondering if anybody else was using PyWORK 
(http://pywork.sourceforge.net/)?

I am seduced by the framework and great integration with libxml2, 
libxslt but wondered if anybody had some feedback on using it in a 
production environment.

Otherwise, what are the other options in terms of web app framework 
based on mod_python that separate cleanly business logic and view and 
use a relatively widely accepted templating system (ZPT, XML/XSLT)

Thanks,

S?bastien
arnaudsj@mac.com

On Jul 9, 2004, at 4:29 PM, Paul Moore wrote:

> Now that Python 2.4a1 has been released, I'd like to start testing it.
> I don't have the facilities to build Win32 binaries of mod_python for
> Python 2.4 (no MSVC 7.1 compiler, and no idea how or if I could build
> with mingw)
>
> Will Python 2.4 compatible binaries be available during the alpha/beta
> cycle, for testing?
>
> Thanks,
> Paul.
> -- 
> The only reason some people get lost in thought is because it's
> unfamiliar territory -- Paul Fix
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
-------------- next part --------------
A non-text attachment was scrubbed...
Name: PGP.sig
Type: application/pgp-signature
Size: 155 bytes
Desc: This is a digitally signed message part
Url : http://modpython.org/pipermail/mod_python/attachments/20040711/8c55040b/PGP.bin
From sleach at netlojix.com  Sun Jul 11 21:42:25 2004
From: sleach at netlojix.com (Sean Leach)
Date: Sun Jul 11 23:42:29 2004
Subject: [mod_python] Anybody using PyWORK
In-Reply-To: <0B25C385-D3A4-11D8-8934-003065966802@mac.com>
References: <y8lsj2cy.fsf@yahoo.co.uk>
	<0B25C385-D3A4-11D8-8934-003065966802@mac.com>
Message-ID: <40F208A1.10206@netlojix.com>

I have been using it on a couple of projects and am very happy with it 
(I ended up contributing the Cheetah view support, I liked it so much). 
  I tried pretty much everything before (Spyce, PSP, Webware, Quixote, 
etc.).  The only other tool I really liked was nevow, but with no 
timetable of stripping it from Twisted, I passed on that.

As for other options, there are quite a few.  I would recommed trying 
them all.

http://www.python.org/cgi-bin/moinmoin/WebProgramming

Sean


S?bastien Arnaud wrote:
> Hi,
> 
> I was wondering if anybody else was using PyWORK 
> (http://pywork.sourceforge.net/)?
> 
> I am seduced by the framework and great integration with libxml2, 
> libxslt but wondered if anybody had some feedback on using it in a 
> production environment.
> 
> Otherwise, what are the other options in terms of web app framework 
> based on mod_python that separate cleanly business logic and view and 
> use a relatively widely accepted templating system (ZPT, XML/XSLT)
> 
> Thanks,
> 
> S?bastien
> arnaudsj@mac.com
> 
> On Jul 9, 2004, at 4:29 PM, Paul Moore wrote:
> 
>> Now that Python 2.4a1 has been released, I'd like to start testing it.
>> I don't have the facilities to build Win32 binaries of mod_python for
>> Python 2.4 (no MSVC 7.1 compiler, and no idea how or if I could build
>> with mingw)
>>
>> Will Python 2.4 compatible binaries be available during the alpha/beta
>> cycle, for testing?
>>
>> Thanks,
>> Paul.
>> -- 
>> The only reason some people get lost in thought is because it's
>> unfamiliar territory -- Paul Fix
>>
>> _______________________________________________
>> Mod_python mailing list
>> Mod_python@modpython.org
>> http://mailman.modpython.org/mailman/listinfo/mod_python
> 
> 
> 
> ------------------------------------------------------------------------
> 
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
From sharky at codezone.ath.cx  Mon Jul 12 18:18:08 2004
From: sharky at codezone.ath.cx (Sharky @ Code Zone)
Date: Mon Jul 12 12:13:23 2004
Subject: [mod_python] (servlets) last file from mps_tutorial
Message-ID: <1089649088.4771.15.camel@sharkylandia.homelinux.net>

In your last file on mps_tutorial (fini.mps) you have this:

        "For any file that does not begin with an underscore or period
        AND does not have a mps extension, the servlet handler will
        return mod_python.apache.DECLINED, so you can co-locate image
        files, css files, etc. with your servlets."


you don't mean "For any file that begin..." ???

Thanks
Sharky
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://modpython.org/pipermail/mod_python/attachments/20040712/1686a195/attachment.html
From dpopowich at comcast.net  Mon Jul 12 14:32:45 2004
From: dpopowich at comcast.net (Daniel Popowich)
Date: Mon Jul 12 13:33:20 2004
Subject: [mod_python] (servlets) last file from mps_tutorial
In-Reply-To: <1089649088.4771.15.camel@sharkylandia.homelinux.net>
References: <1089649088.4771.15.camel@sharkylandia.homelinux.net>
Message-ID: <16626.52029.580005.623975@h00a0cc25a952.ne.client2.attbi.com>

Sharky @ Code Zone writes:
> In your last file on mps_tutorial (fini.mps) you have this:
> 
>         "For any file that does not begin with an underscore or period
>         AND does not have a mps extension, the servlet handler will
>         return mod_python.apache.DECLINED, so you can co-locate image
>         files, css files, etc. with your servlets."
> 
> 
> you don't mean "For any file that begin..." ???

No, that's what I meant.  For files beginning with "_" or "." the
handler returns a 403 error (forbidden) regardless of file extension.
This, in effect, reserves such files for internal use by an
application, e.g., you can name an app's configuration file
_myapp.config and co-locate it with your mps files and it will remain
secure.

This is an oversimplification, but essentially the servlet handler
will:

    if the file matches [._]* raise mod_python.apache.HTTP_FORBIDDEN

    elif the file matches *.mps process it as a servlet

    else raise mod_python.apache.DECLINED


From rdavisunr at yahoo.com  Mon Jul 12 17:52:38 2004
From: rdavisunr at yahoo.com (Robert Thomas Davis)
Date: Mon Jul 12 19:52:39 2004
Subject: [mod_python] request.form
Message-ID: <20040712235238.50640.qmail@web81207.mail.yahoo.com>

I have a function which pulls values from a form ( item = req.form.getfirst('some_item') ) and inserts them in a mysql db.  Instead of these values coming from an actual HTML form I would like to populate the form object myself in some cases.  Is this possible?  This would enable me to use my already written function to insert data that I specify.
 
Thanks All


-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://modpython.org/pipermail/mod_python/attachments/20040712/e735bc79/attachment.html
From krishna at ironport.com  Tue Jul 13 17:33:19 2004
From: krishna at ironport.com (Krishna Srinivasan)
Date: Tue Jul 13 19:33:25 2004
Subject: [mod_python] python_cleanup/bsddb error
Message-ID: <20040713162836.C27164@saint.ironport.com>


Greetings.

I get the following errors in my error_log.
I guess this is why my sessions don't get
cleaned up at all and hence the mp_sess.dbm
in /tmp is always growing.

[Thu Jul 12 19:27:04 2004] [notice] [client 10.1.1.67] DbmSession: registered database cleanup., referer: http://mymachine/home
[Thu Jul 12 19:27:04 2004] [error] [client 10.1.1.67] python_cleanup: Error calling cleanup object <function dbm_cleanup at 0x823fc8c>, referer: http://mymachine/home
[Thu Jul 12 19:27:04 2004] [error] [client 10.1.1.67] bsddb.error: (22, 'Invalid argument'), referer: http://mymachine/home

Can someone please give me pointers as to
how to correctly clean up the db ?

Many thanks,
Krishna.

From sharky at codezone.ath.cx  Wed Jul 14 03:44:03 2004
From: sharky at codezone.ath.cx (Sharky @ Code Zone)
Date: Tue Jul 13 21:39:04 2004
Subject: [mod_python] (servlet) download files with req.sendfile
Message-ID: <1089769443.14037.8.camel@sharkylandia.homelinux.net>

Hi,

    I have a test mod_python.servlet in
http://pytsts2.codezone.ath.cx/dwn69 and don't know how to explain
because my pour english but i will go try  8-)

    When i use req.sendfile('filename') my browser (Mozila) don't know
the file type and name for download the file. It uses script filename.
But if i download the file directly, my browser download fine and know
the download filename and type.

    What are missing from my code? What i'm doing wrong?

Thanks,
Sharky

PS.: Sorry my n00b questions 8-)
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://modpython.org/pipermail/mod_python/attachments/20040714/752d76e9/attachment.html
From nicolas at lehuen.com  Wed Jul 14 10:40:24 2004
From: nicolas at lehuen.com (Nicolas Lehuen)
Date: Wed Jul 14 03:40:30 2004
Subject: [mod_python] (servlet) download files with req.sendfile
In-Reply-To: <1089769443.14037.8.camel@sharkylandia.homelinux.net>
Message-ID: <20040714074026.14751160BD4@postfix4-1.free.fr>

Hi,
 
You should make sure that you send a proper Content-Type header before
calling sendfile. A curl -i on
http://pytsts2.codezone.ath.cx/dwn69?dwn=teste.tgz shows that you return a
text/plain MIME type, which is not correct. Plus, the HTML page is appended
to the end of the TGZ file.
 
As for the filename problem, I'm not sure, but I think the problem can be
solved with a Content-Disposition header, though it is a bit unreliable. See
:
 
http://ppewww.ph.gla.ac.uk/~flavell/www/content-type.html
 
and
 
http://www.mozilla.org/docs/web-developer/mimetypes.html
 
Regards,
 
Nicolas Lehuen

  _____  

De : mod_python-bounces@modpython.org
[mailto:mod_python-bounces@modpython.org] De la part de Sharky @ Code Zone
Envoy? : mercredi 14 juillet 2004 03:44
? : mod_python mailing list
Objet : [mod_python] (servlet) download files with req.sendfile


Hi,

    I have a test mod_python.servlet in http://pytsts2.codezone.ath.cx/dwn69
and don't know how to explain because my pour english but i will go try  8-)

    When i use req.sendfile('filename') my browser (Mozila) don't know the
file type and name for download the file. It uses script filename. But if i
download the file directly, my browser download fine and know the download
filename and type.

    What are missing from my code? What i'm doing wrong?

Thanks,
Sharky

PS.: Sorry my n00b questions 8-) 
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://modpython.org/pipermail/mod_python/attachments/20040714/ee56d1f5/attachment.html
From sharky at codezone.ath.cx  Wed Jul 14 14:19:01 2004
From: sharky at codezone.ath.cx (Sharky @ Code Zone)
Date: Wed Jul 14 08:13:57 2004
Subject: [mod_python] (servlet) download files with req.sendfile
In-Reply-To: <20040714074026.14751160BD4@postfix4-1.free.fr>
References: <20040714074026.14751160BD4@postfix4-1.free.fr>
Message-ID: <1089807540.21577.3.camel@sharkylandia.homelinux.net>

So imagine that i don't append any HTML to the end of ths files, only
send file or show some HTML. When i do a req.sendfile(), he overwrite my
content_type...

You can see it in actions on: http://pytsts2.codezone.ath.cx/dwn69a

Thanks for help me
Sharky


A Qua, 2004-07-14 ?s 08:40, Nicolas Lehuen escreveu:

> Hi,
>  
> You should make sure that you send a proper Content-Type header before
> calling sendfile. A curl -i on
> http://pytsts2.codezone.ath.cx/dwn69?dwn=teste.tgz shows that you
> return a text/plain MIME type, which is not correct. Plus, the HTML
> page is appended to the end of the TGZ file.
>  
> As for the filename problem, I'm not sure, but I think the problem can
> be solved with a Content-Disposition header, though it is a bit
> unreliable. See :
>  
> http://ppewww.ph.gla.ac.uk/~flavell/www/content-type.html
>  
> and
>  
> http://www.mozilla.org/docs/web-developer/mimetypes.html
>  
> Regards,
>  
> Nicolas Lehuen
> 
> ______________________________________________________________________
> De : mod_python-bounces@modpython.org
> [mailto:mod_python-bounces@modpython.org] De la part de Sharky @ Code
> Zone
> Envoy? : mercredi 14 juillet 2004 03:44
> ? : mod_python mailing list
> Objet : [mod_python] (servlet) download files with req.sendfile
> 
> 
> Hi,
> 
>     I have a test mod_python.servlet in
> http://pytsts2.codezone.ath.cx/dwn69 and don't know how to explain
> because my pour english but i will go try  8-)
> 
>     When i use req.sendfile('filename') my browser (Mozila) don't know
> the file type and name for download the file. It uses script filename.
> But if i download the file directly, my browser download fine and know
> the download filename and type.
> 
>     What are missing from my code? What i'm doing wrong?
> 
> Thanks,
> Sharky
> 
> PS.: Sorry my n00b questions 8-)  
> 
> ______________________________________________________________________
> 
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://modpython.org/pipermail/mod_python/attachments/20040714/d2a43de2/attachment.html
From dpopowich at comcast.net  Wed Jul 14 12:41:34 2004
From: dpopowich at comcast.net (Daniel Popowich)
Date: Wed Jul 14 11:42:09 2004
Subject: [mod_python] (servlet) download files with req.sendfile
In-Reply-To: <1089807540.21577.3.camel@sharkylandia.homelinux.net>
References: <20040714074026.14751160BD4@postfix4-1.free.fr>
	<1089807540.21577.3.camel@sharkylandia.homelinux.net>
Message-ID: <16629.21550.77698.675114@h00a0cc25a952.ne.client2.attbi.com>


Sharky @ Code Zone writes:
> So imagine that i don't append any HTML to the end of ths files, only
> send file or show some HTML. When i do a req.sendfile(), he overwrite my
> content_type...
> 
> You can see it in actions on: http://pytsts2.codezone.ath.cx/dwn69a
> 

There are two problems with your servlet:

 1       def prep(self):
 2          Down.prep(self)
 3          self.title = self.dwn
 4          if self.dwn == 'teste.tgz' or self.dwn == 'teste.bz2':
 5              file = '/home/sharky/virtualhosts/vhost4/html/'+self.dwn
 6              self.content_type = 'application/x-gzip'
 7              self.req.sendfile(file, 0, -1)
 8          else:
 9              self.writeln( conteudo )
10              self.writeln(self.py.setdefault(self,
11                          HTMLHighlightedPy(open(self.sourcefilename()).read())))


 1) Change line #6 to:

      self.req.content_type = 'application/x-gzip'

    Because you are calling self.req.sendfile() to return content to
    the client, the value of self.content_type will never be
    propagated to the request object.  self.content_type only
    propagates to the request object (self.req.content_type) after a
    call to self.write or self.writeln.  The curious can look at the
    code in servlet.Servlet.flush.

 2) Insert after line #7, as the last line of the IF suite:

      raise apache.SERVER_RETURN, apache.OK

    The sendfile method DOES return.  So in your case, after the call
    to prep() finishes, the call to respond() is made; that's why
    you're seeing the HTML concatenated after the file returned.

Also, as a general note, I would avoid generating output inside calls
to prep (your ELSE suite).  If subclassing HTMLPage, put HTML output
inside calls to write_content.

Cheers,

Daniel

From abrahams at gmail.com  Wed Jul 14 10:39:26 2004
From: abrahams at gmail.com (Sean Abrahams)
Date: Wed Jul 14 12:39:31 2004
Subject: [mod_python] Creating many mysqld processes
In-Reply-To: <1089475423.23846.22.camel@dell.benchline.org>
References: <1089475423.23846.22.camel@dell.benchline.org>
Message-ID: <dfbb7da004071409394bdf1e70@mail.gmail.com>

On Sat, 10 Jul 2004 09:03:44 -0700, Paul Eden
<peden@americanphysicians.net> wrote:
> I created an intranet application with mysql and mod_python and am
> having trouble with extra mysqld processes on the server.
> 
> They don't seem to be being destroyed/collected until I restart the
> mysql server.
> 
> This is probably some error on my part in coding the application, but I
> am not sure where the problem is.
> 
> Will someone please tell me at what point in the DB API specification
> the extra mysqld are destroyed if at all or how I can get rid of them
> after they are finished?  Is it just connection.close()?

Mod_python is a long living process. As long as Apache is running, so
is your mod_python application. Whenever you make a connection to a
database from your mod_python application, it will not be disconnected
until you call connection.close() or you stop Apache or MySQL.

What you will need to do is create a ConnectionPool which will store
connections to the database and hand them out when you need them.
There is a FAQ entry on the mod_python web site:

http://www.modpython.org/FAQ/faqw.py?req=show&file=faq03.003.htp
 
Although, the example only shows how to connect to one database, not
multiples. If you are connecting to multiple different databases, make
DB_CONN a dict that stores each database connection in its own key.

--Sean

> mod_python-3.1.3-1
> MySQL-python-0.9.1-6
> python-2.2.3-5
> httpd-2.0.46-32.ent.3
> Red Hat Enterprise Linux ES release 3
> 
> Thank You,
> 
> Paul
> 
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>
From neel at mediapulse.com  Wed Jul 14 15:42:31 2004
From: neel at mediapulse.com (Michael C. Neel)
Date: Wed Jul 14 14:38:30 2004
Subject: [mod_python] Creating many mysqld processes
In-Reply-To: <dfbb7da004071409394bdf1e70@mail.gmail.com>
References: <1089475423.23846.22.camel@dell.benchline.org>
	<dfbb7da004071409394bdf1e70@mail.gmail.com>
Message-ID: <1089830551.6205.3.camel@mike.mediapulse.com>

Also, MySQLdb has known garbage collection issues, which I think are not
yet fixed in the main release, so you'll need to get a cvs version or
patch it yourself.  Looking through the sf.net forums/bug reports for
MySQLdb for the details and what you can do.  And it still doesn't hurt
to keep MaxClientRequests around 100 for apache as well.

Mike

On Wed, 2004-07-14 at 12:39, Sean Abrahams wrote:

> On Sat, 10 Jul 2004 09:03:44 -0700, Paul Eden
> <peden@americanphysicians.net> wrote:
> > I created an intranet application with mysql and mod_python and am
> > having trouble with extra mysqld processes on the server.
> > 
> > They don't seem to be being destroyed/collected until I restart the
> > mysql server.
> > 
> > This is probably some error on my part in coding the application, but I
> > am not sure where the problem is.
> > 
> > Will someone please tell me at what point in the DB API specification
> > the extra mysqld are destroyed if at all or how I can get rid of them
> > after they are finished?  Is it just connection.close()?
> 
> Mod_python is a long living process. As long as Apache is running, so
> is your mod_python application. Whenever you make a connection to a
> database from your mod_python application, it will not be disconnected
> until you call connection.close() or you stop Apache or MySQL.
> 
> What you will need to do is create a ConnectionPool which will store
> connections to the database and hand them out when you need them.
> There is a FAQ entry on the mod_python web site:
> 
> http://www.modpython.org/FAQ/faqw.py?req=show&file=faq03.003.htp
>  
> Although, the example only shows how to connect to one database, not
> multiples. If you are connecting to multiple different databases, make
> DB_CONN a dict that stores each database connection in its own key.
> 
> --Sean
> 
> > mod_python-3.1.3-1
> > MySQL-python-0.9.1-6
> > python-2.2.3-5
> > httpd-2.0.46-32.ent.3
> > Red Hat Enterprise Linux ES release 3
> > 
> > Thank You,
> > 
> > Paul
> > 
> > _______________________________________________
> > Mod_python mailing list
> > Mod_python@modpython.org
> > http://mailman.modpython.org/mailman/listinfo/mod_python
> >
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python

__________________________________ 

michael.neel@mediapulse.com
vice president of information systems
865.675.4455 x30
800.380.4514

www.mediapulse.com
__________________________________
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://modpython.org/pipermail/mod_python/attachments/20040714/0c0c7550/attachment.html
From stevohudac at yahoo.com  Wed Jul 14 21:24:13 2004
From: stevohudac at yahoo.com (Stefan Hudac)
Date: Wed Jul 14 20:24:16 2004
Subject: [mod_python] Multiple interpreter instances?
Message-ID: <40F5CEAD.4010808@yahoo.com>

Hi guys,

Thanks for your great work. Thanks to folks like you our work is more 
fun. Anyway I have a question to ask.

I am trying to create application framework on top of Apache. From my 
tests it looks like Python interpreter is being spawned per Apache fork. 
Practically meaning if there is any long-time-running process created 
through mod_python it is actually in memory as many times as many forks 
there are.

I found out by having an error in scripts. I did my tests resulting in 
an error. When I fixed a problem, I redownloaded a page. Looks like 
original fork was killed by Apache or another fork answered my request 
this time. It took a while to launch the framework and error was 
corrected. I reloaded the page and just corrected problem popped on me 
again... I was able to repeat this behavior couple times by 
redownloading a page. Everything got resolved when I restarted Apache.

I'd like to know if my observations are correct. If yes it means all 
resources kept in memory are actually unaccessible among Apache forks, 
therefore multiplicated as many times as there are forks. In the worst 
scenario it may mean that data created by objects executed through 
mod_python and kept in memory are not consistent among different Apache 
forks. Am I right?

stefan

From dylan at mobopro.com  Wed Jul 14 19:12:25 2004
From: dylan at mobopro.com (Dylan Kohler)
Date: Wed Jul 14 21:12:45 2004
Subject: [mod_python] mod_python and apache2 in Mac OS X 10.3.4
Message-ID: <08088235-D5FC-11D8-AC07-0003939DBE40@mobopro.com>

I'm trying to compile mod_python 3.1.3 to work with the latest apache2  
in Mac OS X 10.3.4.  With this:

./configure --with-apxs=/opt/apache2/bin/apxs
make

It ends up failing here:

/opt/apache2/build/libtool --silent --mode=compile gcc -prefer-pic  
-arch i386 -arch ppc -pipe -DAP_HAVE_DESIGNATED_INITIALIZER -DDARWIN  
-DSIGPROCMASK_SETS_THREAD_MASK -no-cpp-precomp  -I/opt/apache2/include   
-I/opt/apache2/include   -I/opt/apache2/include   
-I/Users/psgadmin/mod_python-3.1.3/src/include -I/opt/apache2/include  
-I/System/Library/Frameworks/Python.framework/Versions/2.3/include/ 
python2.3  -c -o mod_python.lo mod_python.c && touch mod_python.slo
gcc: cannot read specs file for arch `i386'
apxs:Error: Command failed with rc=65536

 From what I saw in the README, it seems libtool had to be patched to  
work before, but the instructions are for 10.2.x.

Anybody have any luck with this in 10.3.4?

From pascalbarbedor at free.fr  Thu Jul 15 06:57:23 2004
From: pascalbarbedor at free.fr (pascal barbedor)
Date: Wed Jul 14 23:57:22 2004
Subject: [mod_python] mod_python and apache2 in Mac OS X 10.3.4
References: <08088235-D5FC-11D8-AC07-0003939DBE40@mobopro.com>
Message-ID: <004e01c46a1f$d60133f0$0100007f@localhost>

why arch i386 if you are on mac os x ?
i386 is pentium

----- Original Message ----- 
From: "Dylan Kohler" <dylan@mobopro.com>
To: <mod_python@modpython.org>
Sent: Thursday, July 15, 2004 3:12 AM
Subject: [mod_python] mod_python and apache2 in Mac OS X 10.3.4


> I'm trying to compile mod_python 3.1.3 to work with the latest apache2  
> in Mac OS X 10.3.4.  With this:
> 
> ./configure --with-apxs=/opt/apache2/bin/apxs
> make
> 
> It ends up failing here:
> 
> /opt/apache2/build/libtool --silent --mode=compile gcc -prefer-pic  
> -arch i386 -arch ppc -pipe -DAP_HAVE_DESIGNATED_INITIALIZER -DDARWIN  
> -DSIGPROCMASK_SETS_THREAD_MASK -no-cpp-precomp  -I/opt/apache2/include   
> -I/opt/apache2/include   -I/opt/apache2/include   
> -I/Users/psgadmin/mod_python-3.1.3/src/include -I/opt/apache2/include  
> -I/System/Library/Frameworks/Python.framework/Versions/2.3/include/ 
> python2.3  -c -o mod_python.lo mod_python.c && touch mod_python.slo
> gcc: cannot read specs file for arch `i386'
> apxs:Error: Command failed with rc=65536
> 
>  From what I saw in the README, it seems libtool had to be patched to  
> work before, but the instructions are for 10.2.x.
> 
> Anybody have any luck with this in 10.3.4?
> 
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
> 
From dylan at mobopro.com  Wed Jul 14 22:28:56 2004
From: dylan at mobopro.com (Dylan Kohler)
Date: Thu Jul 15 00:29:03 2004
Subject: [mod_python] mod_python and apache2 in Mac OS X 10.3.4
In-Reply-To: <004e01c46a1f$d60133f0$0100007f@localhost>
References: <08088235-D5FC-11D8-AC07-0003939DBE40@mobopro.com>
	<004e01c46a1f$d60133f0$0100007f@localhost>
Message-ID: <7C0834B6-D617-11D8-9D96-000A95DA7F94@mobopro.com>

That's exactly what I'd like to know.  This is what happens when I 
simply run make, as below.

Note that I can manually run the failing command without the i386 flag, 
and it completes successfully.  But there are more targets to compile 
and I do not see how to make this a full workaround.


On Jul 14, 2004, at 8:57 PM, pascal barbedor wrote:

> why arch i386 if you are on mac os x ?
> i386 is pentium
>
> ----- Original Message -----
> From: "Dylan Kohler" <dylan@mobopro.com>
> To: <mod_python@modpython.org>
> Sent: Thursday, July 15, 2004 3:12 AM
> Subject: [mod_python] mod_python and apache2 in Mac OS X 10.3.4
>
>
>> I'm trying to compile mod_python 3.1.3 to work with the latest apache2
>> in Mac OS X 10.3.4.  With this:
>>
>> ./configure --with-apxs=/opt/apache2/bin/apxs
>> make
>>
>> It ends up failing here:
>>
>> /opt/apache2/build/libtool --silent --mode=compile gcc -prefer-pic
>> -arch i386 -arch ppc -pipe -DAP_HAVE_DESIGNATED_INITIALIZER -DDARWIN
>> -DSIGPROCMASK_SETS_THREAD_MASK -no-cpp-precomp  -I/opt/apache2/include
>> -I/opt/apache2/include   -I/opt/apache2/include
>> -I/Users/psgadmin/mod_python-3.1.3/src/include -I/opt/apache2/include
>> -I/System/Library/Frameworks/Python.framework/Versions/2.3/include/
>> python2.3  -c -o mod_python.lo mod_python.c && touch mod_python.slo
>> gcc: cannot read specs file for arch `i386'
>> apxs:Error: Command failed with rc=65536
>>
>>  From what I saw in the README, it seems libtool had to be patched to
>> work before, but the instructions are for 10.2.x.
>>
>> Anybody have any luck with this in 10.3.4?
>>
>> _______________________________________________
>> Mod_python mailing list
>> Mod_python@modpython.org
>> http://mailman.modpython.org/mailman/listinfo/mod_python
>>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>

From pascalbarbedor at free.fr  Thu Jul 15 08:53:37 2004
From: pascalbarbedor at free.fr (pascal barbedor)
Date: Thu Jul 15 01:53:35 2004
Subject: [mod_python] mod_python and apache2 in Mac OS X 10.3.4
References: <08088235-D5FC-11D8-AC07-0003939DBE40@mobopro.com><004e01c46a1f$d60133f0$0100007f@localhost>
	<7C0834B6-D617-11D8-9D96-000A95DA7F94@mobopro.com>
Message-ID: <005c01c46a30$13217230$0100007f@localhost>

that should be an option to comment out in the makefile


----- Original Message ----- 
From: "Dylan Kohler" <dylan@mobopro.com>
To: "mod_python user mailing list" <mod_python@modpython.org>
Sent: Thursday, July 15, 2004 6:28 AM
Subject: Re: [mod_python] mod_python and apache2 in Mac OS X 10.3.4


> That's exactly what I'd like to know.  This is what happens when I 
> simply run make, as below.
> 
> Note that I can manually run the failing command without the i386 flag, 
> and it completes successfully.  But there are more targets to compile 
> and I do not see how to make this a full workaround.
> 
> 
> On Jul 14, 2004, at 8:57 PM, pascal barbedor wrote:
> 
> > why arch i386 if you are on mac os x ?
> > i386 is pentium
> >
> > ----- Original Message -----
> > From: "Dylan Kohler" <dylan@mobopro.com>
> > To: <mod_python@modpython.org>
> > Sent: Thursday, July 15, 2004 3:12 AM
> > Subject: [mod_python] mod_python and apache2 in Mac OS X 10.3.4
> >
> >
> >> I'm trying to compile mod_python 3.1.3 to work with the latest apache2
> >> in Mac OS X 10.3.4.  With this:
> >>
> >> ./configure --with-apxs=/opt/apache2/bin/apxs
> >> make
> >>
> >> It ends up failing here:
> >>
> >> /opt/apache2/build/libtool --silent --mode=compile gcc -prefer-pic
> >> -arch i386 -arch ppc -pipe -DAP_HAVE_DESIGNATED_INITIALIZER -DDARWIN
> >> -DSIGPROCMASK_SETS_THREAD_MASK -no-cpp-precomp  -I/opt/apache2/include
> >> -I/opt/apache2/include   -I/opt/apache2/include
> >> -I/Users/psgadmin/mod_python-3.1.3/src/include -I/opt/apache2/include
> >> -I/System/Library/Frameworks/Python.framework/Versions/2.3/include/
> >> python2.3  -c -o mod_python.lo mod_python.c && touch mod_python.slo
> >> gcc: cannot read specs file for arch `i386'
> >> apxs:Error: Command failed with rc=65536
> >>
> >>  From what I saw in the README, it seems libtool had to be patched to
> >> work before, but the instructions are for 10.2.x.
> >>
> >> Anybody have any luck with this in 10.3.4?
> >>
> >> _______________________________________________
> >> Mod_python mailing list
> >> Mod_python@modpython.org
> >> http://mailman.modpython.org/mailman/listinfo/mod_python
> >>
> > _______________________________________________
> > Mod_python mailing list
> > Mod_python@modpython.org
> > http://mailman.modpython.org/mailman/listinfo/mod_python
> >
> 
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
> 
From dylan at mobopro.com  Thu Jul 15 00:14:18 2004
From: dylan at mobopro.com (Dylan Kohler)
Date: Thu Jul 15 02:24:13 2004
Subject: [mod_python] mod_python and apache2 in Mac OS X 10.3.4
In-Reply-To: <005c01c46a30$13217230$0100007f@localhost>
References: <08088235-D5FC-11D8-AC07-0003939DBE40@mobopro.com><004e01c46a1f$d60133f0$0100007f@localhost>
	<7C0834B6-D617-11D8-9D96-000A95DA7F94@mobopro.com>
	<005c01c46a30$13217230$0100007f@localhost>
Message-ID: <349A4DAA-D626-11D8-9D96-000A95DA7F94@mobopro.com>

If it were only that simple.  The makefile just runs apxs, which 
apparently kicks off these libtool commands -- no hint of i386 flags in 
any of mod_python.  This apxs is part of the standard release of 
apache2 in /opt on Mac OS X Server.  (I'd like to use this released 
apache2, since I got it working easily with php5 and alternatives were 
a pain to compile.)

Has nobody compiled mod_python to work with the apache2 of the Mac OS X 
10.3.4 release?


On Jul 14, 2004, at 10:53 PM, pascal barbedor wrote:

> that should be an option to comment out in the makefile
>
>
> ----- Original Message -----
> From: "Dylan Kohler" <dylan@mobopro.com>
> To: "mod_python user mailing list" <mod_python@modpython.org>
> Sent: Thursday, July 15, 2004 6:28 AM
> Subject: Re: [mod_python] mod_python and apache2 in Mac OS X 10.3.4
>
>
>> That's exactly what I'd like to know.  This is what happens when I
>> simply run make, as below.
>>
>> Note that I can manually run the failing command without the i386 
>> flag,
>> and it completes successfully.  But there are more targets to compile
>> and I do not see how to make this a full workaround.
>>
>>
>> On Jul 14, 2004, at 8:57 PM, pascal barbedor wrote:
>>
>>> why arch i386 if you are on mac os x ?
>>> i386 is pentium
>>>
>>> ----- Original Message -----
>>> From: "Dylan Kohler" <dylan@mobopro.com>
>>> To: <mod_python@modpython.org>
>>> Sent: Thursday, July 15, 2004 3:12 AM
>>> Subject: [mod_python] mod_python and apache2 in Mac OS X 10.3.4
>>>
>>>
>>>> I'm trying to compile mod_python 3.1.3 to work with the latest 
>>>> apache2
>>>> in Mac OS X 10.3.4.  With this:
>>>>
>>>> ./configure --with-apxs=/opt/apache2/bin/apxs
>>>> make
>>>>
>>>> It ends up failing here:
>>>>
>>>> /opt/apache2/build/libtool --silent --mode=compile gcc -prefer-pic
>>>> -arch i386 -arch ppc -pipe -DAP_HAVE_DESIGNATED_INITIALIZER -DDARWIN
>>>> -DSIGPROCMASK_SETS_THREAD_MASK -no-cpp-precomp  
>>>> -I/opt/apache2/include
>>>> -I/opt/apache2/include   -I/opt/apache2/include
>>>> -I/Users/psgadmin/mod_python-3.1.3/src/include 
>>>> -I/opt/apache2/include
>>>> -I/System/Library/Frameworks/Python.framework/Versions/2.3/include/
>>>> python2.3  -c -o mod_python.lo mod_python.c && touch mod_python.slo
>>>> gcc: cannot read specs file for arch `i386'
>>>> apxs:Error: Command failed with rc=65536
>>>>
>>>>  From what I saw in the README, it seems libtool had to be patched 
>>>> to
>>>> work before, but the instructions are for 10.2.x.
>>>>
>>>> Anybody have any luck with this in 10.3.4?
>>>>
>>>> _______________________________________________
>>>> Mod_python mailing list
>>>> Mod_python@modpython.org
>>>> http://mailman.modpython.org/mailman/listinfo/mod_python
>>>>
>>> _______________________________________________
>>> Mod_python mailing list
>>> Mod_python@modpython.org
>>> http://mailman.modpython.org/mailman/listinfo/mod_python
>>>
>>
>> _______________________________________________
>> Mod_python mailing list
>> Mod_python@modpython.org
>> http://mailman.modpython.org/mailman/listinfo/mod_python
>>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>

From arnaudsj at mac.com  Thu Jul 15 07:50:03 2004
From: arnaudsj at mac.com (=?ISO-8859-1?Q?S=E9bastien_Arnaud?=)
Date: Thu Jul 15 07:50:18 2004
Subject: [mod_python] mod_python and apache2 in Mac OS X 10.3.4
In-Reply-To: <349A4DAA-D626-11D8-9D96-000A95DA7F94@mobopro.com>
References: <08088235-D5FC-11D8-AC07-0003939DBE40@mobopro.com>
	<004e01c46a1f$d60133f0$0100007f@localhost>
	<7C0834B6-D617-11D8-9D96-000A95DA7F94@mobopro.com>
	<005c01c46a30$13217230$0100007f@localhost>
	<349A4DAA-D626-11D8-9D96-000A95DA7F94@mobopro.com>
Message-ID: <1B8E9A14-D655-11D8-B3FA-003065966802@mac.com>

I have mod_python compiled and running with Apache 2.0.49 on OS 10.3.4. 
I compiled Apache 2 from source via Fink 
(http://fink.sourceforget.net). I also compiled python 2.3.4 via Fink 
(Apple's built in Python is still 2.3.3 and is rarely updated) and it 
is the one that is used by mod_python and everything is running fine.

S?bastien
arnaudsj@mac.com

On Jul 15, 2004, at 1:14 AM, Dylan Kohler wrote:

> If it were only that simple.  The makefile just runs apxs, which 
> apparently kicks off these libtool commands -- no hint of i386 flags 
> in any of mod_python.  This apxs is part of the standard release of 
> apache2 in /opt on Mac OS X Server.  (I'd like to use this released 
> apache2, since I got it working easily with php5 and alternatives were 
> a pain to compile.)
>
> Has nobody compiled mod_python to work with the apache2 of the Mac OS 
> X 10.3.4 release?
>
>
> On Jul 14, 2004, at 10:53 PM, pascal barbedor wrote:
>
>> that should be an option to comment out in the makefile
>>
>>
>> ----- Original Message -----
>> From: "Dylan Kohler" <dylan@mobopro.com>
>> To: "mod_python user mailing list" <mod_python@modpython.org>
>> Sent: Thursday, July 15, 2004 6:28 AM
>> Subject: Re: [mod_python] mod_python and apache2 in Mac OS X 10.3.4
>>
>>
>>> That's exactly what I'd like to know.  This is what happens when I
>>> simply run make, as below.
>>>
>>> Note that I can manually run the failing command without the i386 
>>> flag,
>>> and it completes successfully.  But there are more targets to compile
>>> and I do not see how to make this a full workaround.
>>>
>>>
>>> On Jul 14, 2004, at 8:57 PM, pascal barbedor wrote:
>>>
>>>> why arch i386 if you are on mac os x ?
>>>> i386 is pentium
>>>>
>>>> ----- Original Message -----
>>>> From: "Dylan Kohler" <dylan@mobopro.com>
>>>> To: <mod_python@modpython.org>
>>>> Sent: Thursday, July 15, 2004 3:12 AM
>>>> Subject: [mod_python] mod_python and apache2 in Mac OS X 10.3.4
>>>>
>>>>
>>>>> I'm trying to compile mod_python 3.1.3 to work with the latest 
>>>>> apache2
>>>>> in Mac OS X 10.3.4.  With this:
>>>>>
>>>>> ./configure --with-apxs=/opt/apache2/bin/apxs
>>>>> make
>>>>>
>>>>> It ends up failing here:
>>>>>
>>>>> /opt/apache2/build/libtool --silent --mode=compile gcc -prefer-pic
>>>>> -arch i386 -arch ppc -pipe -DAP_HAVE_DESIGNATED_INITIALIZER 
>>>>> -DDARWIN
>>>>> -DSIGPROCMASK_SETS_THREAD_MASK -no-cpp-precomp  
>>>>> -I/opt/apache2/include
>>>>> -I/opt/apache2/include   -I/opt/apache2/include
>>>>> -I/Users/psgadmin/mod_python-3.1.3/src/include 
>>>>> -I/opt/apache2/include
>>>>> -I/System/Library/Frameworks/Python.framework/Versions/2.3/include/
>>>>> python2.3  -c -o mod_python.lo mod_python.c && touch mod_python.slo
>>>>> gcc: cannot read specs file for arch `i386'
>>>>> apxs:Error: Command failed with rc=65536
>>>>>
>>>>>  From what I saw in the README, it seems libtool had to be patched 
>>>>> to
>>>>> work before, but the instructions are for 10.2.x.
>>>>>
>>>>> Anybody have any luck with this in 10.3.4?
>>>>>
>>>>> _______________________________________________
>>>>> Mod_python mailing list
>>>>> Mod_python@modpython.org
>>>>> http://mailman.modpython.org/mailman/listinfo/mod_python
>>>>>
>>>> _______________________________________________
>>>> Mod_python mailing list
>>>> Mod_python@modpython.org
>>>> http://mailman.modpython.org/mailman/listinfo/mod_python
>>>>
>>>
>>> _______________________________________________
>>> Mod_python mailing list
>>> Mod_python@modpython.org
>>> http://mailman.modpython.org/mailman/listinfo/mod_python
>>>
>> _______________________________________________
>> Mod_python mailing list
>> Mod_python@modpython.org
>> http://mailman.modpython.org/mailman/listinfo/mod_python
>>
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
-------------- next part --------------
A non-text attachment was scrubbed...
Name: PGP.sig
Type: application/pgp-signature
Size: 155 bytes
Desc: This is a digitally signed message part
Url : http://modpython.org/pipermail/mod_python/attachments/20040715/a94ee436/PGP.bin
From johnathan.gurley at gmail.com  Thu Jul 15 08:07:02 2004
From: johnathan.gurley at gmail.com (Johnathan Gurley)
Date: Thu Jul 15 08:07:08 2004
Subject: [mod_python] mod_python and apache2 in Mac OS X 10.3.4
In-Reply-To: <1B8E9A14-D655-11D8-B3FA-003065966802@mac.com>
References: <08088235-D5FC-11D8-AC07-0003939DBE40@mobopro.com>
	<004e01c46a1f$d60133f0$0100007f@localhost>
	<7C0834B6-D617-11D8-9D96-000A95DA7F94@mobopro.com>
	<005c01c46a30$13217230$0100007f@localhost>
	<349A4DAA-D626-11D8-9D96-000A95DA7F94@mobopro.com>
	<1B8E9A14-D655-11D8-B3FA-003065966802@mac.com>
Message-ID: <2ac59b0404071505075f4289a@mail.gmail.com>

You might try to build it from source using Apple's source package. 
That will let you not use the right compiler flags.


> On Jul 15, 2004, at 1:14 AM, Dylan Kohler wrote:
> 
> > If it were only that simple.  The makefile just runs apxs, which
> > apparently kicks off these libtool commands -- no hint of i386 flags
> > in any of mod_python.  This apxs is part of the standard release of
> > apache2 in /opt on Mac OS X Server.  (I'd like to use this released
> > apache2, since I got it working easily with php5 and alternatives were
> > a pain to compile.)
> >
> > Has nobody compiled mod_python to work with the apache2 of the Mac OS
> > X 10.3.4 release?
> >
> >
> > On Jul 14, 2004, at 10:53 PM, pascal barbedor wrote:
> >
> >> that should be an option to comment out in the makefile
> >>
> >>
> >> ----- Original Message -----
> >> From: "Dylan Kohler" <dylan@mobopro.com>
> >> To: "mod_python user mailing list" <mod_python@modpython.org>
> >> Sent: Thursday, July 15, 2004 6:28 AM
> >> Subject: Re: [mod_python] mod_python and apache2 in Mac OS X 10.3.4
> >>
> >>
> >>> That's exactly what I'd like to know.  This is what happens when I
> >>> simply run make, as below.
> >>>
> >>> Note that I can manually run the failing command without the i386
> >>> flag,
> >>> and it completes successfully.  But there are more targets to compile
> >>> and I do not see how to make this a full workaround.
> >>>
> >>>
> >>> On Jul 14, 2004, at 8:57 PM, pascal barbedor wrote:
> >>>
> >>>> why arch i386 if you are on mac os x ?
> >>>> i386 is pentium
> >>>>
> >>>> ----- Original Message -----
> >>>> From: "Dylan Kohler" <dylan@mobopro.com>
> >>>> To: <mod_python@modpython.org>
> >>>> Sent: Thursday, July 15, 2004 3:12 AM
> >>>> Subject: [mod_python] mod_python and apache2 in Mac OS X 10.3.4
> >>>>
> >>>>
> >>>>> I'm trying to compile mod_python 3.1.3 to work with the latest
> >>>>> apache2
> >>>>> in Mac OS X 10.3.4.  With this:
> >>>>>
> >>>>> ./configure --with-apxs=/opt/apache2/bin/apxs
> >>>>> make
> >>>>>
> >>>>> It ends up failing here:
> >>>>>
> >>>>> /opt/apache2/build/libtool --silent --mode=compile gcc -prefer-pic
> >>>>> -arch i386 -arch ppc -pipe -DAP_HAVE_DESIGNATED_INITIALIZER
> >>>>> -DDARWIN
> >>>>> -DSIGPROCMASK_SETS_THREAD_MASK -no-cpp-precomp
> >>>>> -I/opt/apache2/include
> >>>>> -I/opt/apache2/include   -I/opt/apache2/include
> >>>>> -I/Users/psgadmin/mod_python-3.1.3/src/include
> >>>>> -I/opt/apache2/include
> >>>>> -I/System/Library/Frameworks/Python.framework/Versions/2.3/include/
> >>>>> python2.3  -c -o mod_python.lo mod_python.c && touch mod_python.slo
> >>>>> gcc: cannot read specs file for arch `i386'
> >>>>> apxs:Error: Command failed with rc=65536
> >>>>>
> >>>>>  From what I saw in the README, it seems libtool had to be patched
> >>>>> to
> >>>>> work before, but the instructions are for 10.2.x.
> >>>>>
> >>>>> Anybody have any luck with this in 10.3.4?
> >>>>>
> >>>>> _______________________________________________
> >>>>> Mod_python mailing list
> >>>>> Mod_python@modpython.org
> >>>>> http://mailman.modpython.org/mailman/listinfo/mod_python
> >>>>>
> >>>> _______________________________________________
> >>>> Mod_python mailing list
> >>>> Mod_python@modpython.org
> >>>> http://mailman.modpython.org/mailman/listinfo/mod_python
> >>>>
> >>>
> >>> _______________________________________________
> >>> Mod_python mailing list
> >>> Mod_python@modpython.org
> >>> http://mailman.modpython.org/mailman/listinfo/mod_python
> >>>
> >> _______________________________________________
> >> Mod_python mailing list
> >> Mod_python@modpython.org
> >> http://mailman.modpython.org/mailman/listinfo/mod_python
> >>
> >
> > _______________________________________________
> > Mod_python mailing list
> > Mod_python@modpython.org
> > http://mailman.modpython.org/mailman/listinfo/mod_python
> 
> 
>
From jryan at qutang.net  Thu Jul 15 11:04:36 2004
From: jryan at qutang.net (Justin Ryan)
Date: Thu Jul 15 11:04:41 2004
Subject: [mod_python] mod_python and apache2 in Mac OS X 10.3.4
In-Reply-To: <2ac59b0404071505075f4289a@mail.gmail.com>
References: <08088235-D5FC-11D8-AC07-0003939DBE40@mobopro.com>
	<004e01c46a1f$d60133f0$0100007f@localhost>
	<7C0834B6-D617-11D8-9D96-000A95DA7F94@mobopro.com>
	<005c01c46a30$13217230$0100007f@localhost>
	<349A4DAA-D626-11D8-9D96-000A95DA7F94@mobopro.com>
	<1B8E9A14-D655-11D8-B3FA-003065966802@mac.com>
	<2ac59b0404071505075f4289a@mail.gmail.com>
Message-ID: <4980D739-D670-11D8-8E37-000D93AD1DB8@qutang.net>

I have a default Apache2 build on OSX 10.3.4 with mod_python, but not  
Server (I don't get apache2 pre-installed :-/).

Where I ran into problems was linking against python - Apple does not  
include libpython2.3.a in their python distribution, so I rebuilt from  
source and installed over theirs (you dont want to screw around with  
multiple versions of python -- I tried this and got tons of 'version  
mismatch' stuff in mod_py).

-=JR

On Jul 15, 2004, at 7:07 AM, Johnathan Gurley wrote:

> You might try to build it from source using Apple's source package.
> That will let you not use the right compiler flags.
>
>
>> On Jul 15, 2004, at 1:14 AM, Dylan Kohler wrote:
>>
>>> If it were only that simple.  The makefile just runs apxs, which
>>> apparently kicks off these libtool commands -- no hint of i386 flags
>>> in any of mod_python.  This apxs is part of the standard release of
>>> apache2 in /opt on Mac OS X Server.  (I'd like to use this released
>>> apache2, since I got it working easily with php5 and alternatives  
>>> were
>>> a pain to compile.)
>>>
>>> Has nobody compiled mod_python to work with the apache2 of the Mac OS
>>> X 10.3.4 release?
>>>
>>>
>>> On Jul 14, 2004, at 10:53 PM, pascal barbedor wrote:
>>>
>>>> that should be an option to comment out in the makefile
>>>>
>>>>
>>>> ----- Original Message -----
>>>> From: "Dylan Kohler" <dylan@mobopro.com>
>>>> To: "mod_python user mailing list" <mod_python@modpython.org>
>>>> Sent: Thursday, July 15, 2004 6:28 AM
>>>> Subject: Re: [mod_python] mod_python and apache2 in Mac OS X 10.3.4
>>>>
>>>>
>>>>> That's exactly what I'd like to know.  This is what happens when I
>>>>> simply run make, as below.
>>>>>
>>>>> Note that I can manually run the failing command without the i386
>>>>> flag,
>>>>> and it completes successfully.  But there are more targets to  
>>>>> compile
>>>>> and I do not see how to make this a full workaround.
>>>>>
>>>>>
>>>>> On Jul 14, 2004, at 8:57 PM, pascal barbedor wrote:
>>>>>
>>>>>> why arch i386 if you are on mac os x ?
>>>>>> i386 is pentium
>>>>>>
>>>>>> ----- Original Message -----
>>>>>> From: "Dylan Kohler" <dylan@mobopro.com>
>>>>>> To: <mod_python@modpython.org>
>>>>>> Sent: Thursday, July 15, 2004 3:12 AM
>>>>>> Subject: [mod_python] mod_python and apache2 in Mac OS X 10.3.4
>>>>>>
>>>>>>
>>>>>>> I'm trying to compile mod_python 3.1.3 to work with the latest
>>>>>>> apache2
>>>>>>> in Mac OS X 10.3.4.  With this:
>>>>>>>
>>>>>>> ./configure --with-apxs=/opt/apache2/bin/apxs
>>>>>>> make
>>>>>>>
>>>>>>> It ends up failing here:
>>>>>>>
>>>>>>> /opt/apache2/build/libtool --silent --mode=compile gcc  
>>>>>>> -prefer-pic
>>>>>>> -arch i386 -arch ppc -pipe -DAP_HAVE_DESIGNATED_INITIALIZER
>>>>>>> -DDARWIN
>>>>>>> -DSIGPROCMASK_SETS_THREAD_MASK -no-cpp-precomp
>>>>>>> -I/opt/apache2/include
>>>>>>> -I/opt/apache2/include   -I/opt/apache2/include
>>>>>>> -I/Users/psgadmin/mod_python-3.1.3/src/include
>>>>>>> -I/opt/apache2/include
>>>>>>> -I/System/Library/Frameworks/Python.framework/Versions/2.3/ 
>>>>>>> include/
>>>>>>> python2.3  -c -o mod_python.lo mod_python.c && touch  
>>>>>>> mod_python.slo
>>>>>>> gcc: cannot read specs file for arch `i386'
>>>>>>> apxs:Error: Command failed with rc=65536
>>>>>>>
>>>>>>>  From what I saw in the README, it seems libtool had to be  
>>>>>>> patched
>>>>>>> to
>>>>>>> work before, but the instructions are for 10.2.x.
>>>>>>>
>>>>>>> Anybody have any luck with this in 10.3.4?
>>>>>>>
>>>>>>> _______________________________________________
>>>>>>> Mod_python mailing list
>>>>>>> Mod_python@modpython.org
>>>>>>> http://mailman.modpython.org/mailman/listinfo/mod_python
>>>>>>>
>>>>>> _______________________________________________
>>>>>> Mod_python mailing list
>>>>>> Mod_python@modpython.org
>>>>>> http://mailman.modpython.org/mailman/listinfo/mod_python
>>>>>>
>>>>>
>>>>> _______________________________________________
>>>>> Mod_python mailing list
>>>>> Mod_python@modpython.org
>>>>> http://mailman.modpython.org/mailman/listinfo/mod_python
>>>>>
>>>> _______________________________________________
>>>> Mod_python mailing list
>>>> Mod_python@modpython.org
>>>> http://mailman.modpython.org/mailman/listinfo/mod_python
>>>>
>>>
>>> _______________________________________________
>>> Mod_python mailing list
>>> Mod_python@modpython.org
>>> http://mailman.modpython.org/mailman/listinfo/mod_python
>>
>>
>>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>

From grisha at modpython.org  Thu Jul 15 13:12:24 2004
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Thu Jul 15 12:12:29 2004
Subject: [mod_python] Multiple interpreter instances?
In-Reply-To: <40F5CEAD.4010808@yahoo.com>
References: <40F5CEAD.4010808@yahoo.com>
Message-ID: <20040715121133.B33667@onyx.ispol.com>



On Wed, 14 Jul 2004, Stefan Hudac wrote:

> I'd like to know if my observations are correct. If yes it means all 
> resources kept in memory are actually unaccessible among Apache forks, 
> therefore multiplicated as many times as there are forks.

That's pretty much how it is.

Grisha
From johnathan.gurley at gmail.com  Thu Jul 15 14:19:27 2004
From: johnathan.gurley at gmail.com (Johnathan Gurley)
Date: Thu Jul 15 14:19:32 2004
Subject: [mod_python] Multiple interpreter instances?
In-Reply-To: <20040715121133.B33667@onyx.ispol.com>
References: <40F5CEAD.4010808@yahoo.com> <20040715121133.B33667@onyx.ispol.com>
Message-ID: <2ac59b0404071511195b0cfbdb@mail.gmail.com>

Correct me if I'm wrong, but fork copies the parent process's memory
into the child process's memory, but the child has its own unique
stack and heap.  This would make it very difficult to share Python
memory between Apache instances, as the Apache instances themselves
have separate memory space.

On Thu, 15 Jul 2004 12:12:24 -0400 (EDT), Gregory (Grisha) Trubetskoy
<grisha@modpython.org> wrote:
> 
> 
> On Wed, 14 Jul 2004, Stefan Hudac wrote:
> 
> > I'd like to know if my observations are correct. If yes it means all
> > resources kept in memory are actually unaccessible among Apache forks,
> > therefore multiplicated as many times as there are forks.
> 
> That's pretty much how it is.
> 
> Grisha
> 
> 
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>
From volodya at real.samuraj.org  Fri Jul 16 01:05:24 2004
From: volodya at real.samuraj.org (Volodya)
Date: Thu Jul 15 17:05:38 2004
Subject: [mod_python] Multiple interpreter instances?
In-Reply-To: <2ac59b0404071511195b0cfbdb@mail.gmail.com>
References: <40F5CEAD.4010808@yahoo.com> <20040715121133.B33667@onyx.ispol.com>
	<2ac59b0404071511195b0cfbdb@mail.gmail.com>
Message-ID: <20040715210524.GB31943@debian.mki-btc.com>

On Thu, Jul 15, 2004 at 01:19:27PM -0500, Johnathan Gurley wrote:
> Correct me if I'm wrong, but fork copies the parent process's memory
> into the child process's memory, but the child has its own unique
> stack and heap.  This would make it very difficult to share Python
> memory between Apache instances, as the Apache instances themselves
> have separate memory space.

Apache 2 introduced threaded model. Threads share process's memory.
With Mod_python 3.x and Apache 2.x you can share  global variables per
Apache's virtual server for example. And it seems threads work fine on
Linux, Windows and FreeBSD 5.x (but not FreeBSD 4.x).

From krishna at ironport.com  Thu Jul 15 16:07:57 2004
From: krishna at ironport.com (Krishna Srinivasan)
Date: Thu Jul 15 18:08:01 2004
Subject: [mod_python] python_cleanup/bsddb error
Message-ID: <20040715150600.C27164@saint.ironport.com>


Greetings.

Can some one please help me with this ?

The /tmp/mp_sess.dbm is just growing
with time and doesn't get cleaned
up at all. Please atleast let me know
if this is NOT a mod_python error or
some dbm-module error, so I can investigate
further as to what is wrong.

Thanks,
Krishna.


---------- Forwarded message ----------
Date: Tue, 13 Jul 2004 16:33:19 -0700 (PDT)
From: Krishna Srinivasan <krishna@ironport.com>
To: Modpython <Mod_python@modpython.org>
Subject: python_cleanup/bsddb error


Greetings.

I get the following errors in my error_log.
I guess this is why my sessions don't get
cleaned up at all and hence the mp_sess.dbm
in /tmp is always growing.

[Thu Jul 12 19:27:04 2004] [notice] [client 10.1.1.67] DbmSession: registered 
database cleanup., referer: http://mymachine/home
[Thu Jul 12 19:27:04 2004] [error] [client 10.1.1.67] python_cleanup: Error 
calling cleanup object <function dbm_cleanup at 0x823fc8c>, referer: 
http://mymachine/home
[Thu Jul 12 19:27:04 2004] [error] [client 10.1.1.67] bsddb.error: (22, 
'Invalid argument'), referer: http://mymachine/home

Can someone please give me pointers as to
how to correctly clean up the db ?

Many thanks,
Krishna.

From johnathan.gurley at gmail.com  Thu Jul 15 19:30:21 2004
From: johnathan.gurley at gmail.com (Johnathan Gurley)
Date: Thu Jul 15 19:30:29 2004
Subject: [mod_python] Multiple interpreter instances?
In-Reply-To: <20040715210524.GB31943@debian.mki-btc.com>
References: <40F5CEAD.4010808@yahoo.com> <20040715121133.B33667@onyx.ispol.com>
	<2ac59b0404071511195b0cfbdb@mail.gmail.com>
	<20040715210524.GB31943@debian.mki-btc.com>
Message-ID: <2ac59b04040715163050af7c41@mail.gmail.com>

True, but you can still choose how you wish Apache 2 to be built. 
Some distributions actually package different builds of Apache
2...SuSE for example, maintains different builds at
ftp://ftp.suse.com/pub/projects/apache/apache2
so, I suppose it all depends on how you build your Apache :)

On Fri, 16 Jul 2004 00:05:24 +0300, Volodya <volodya@real.samuraj.org> wrote:
> On Thu, Jul 15, 2004 at 01:19:27PM -0500, Johnathan Gurley wrote:
> > Correct me if I'm wrong, but fork copies the parent process's memory
> > into the child process's memory, but the child has its own unique
> > stack and heap.  This would make it very difficult to share Python
> > memory between Apache instances, as the Apache instances themselves
> > have separate memory space.
> 
> Apache 2 introduced threaded model. Threads share process's memory.
> With Mod_python 3.x and Apache 2.x you can share  global variables per
> Apache's virtual server for example. And it seems threads work fine on
> Linux, Windows and FreeBSD 5.x (but not FreeBSD 4.x).
> 
> 
> 
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>
From volodya at real.samuraj.org  Fri Jul 16 10:50:15 2004
From: volodya at real.samuraj.org (Volodya)
Date: Fri Jul 16 02:50:36 2004
Subject: [mod_python] Multiple interpreter instances?
In-Reply-To: <40F7194D.6080801@yahoo.com>
References: <40F5CEAD.4010808@yahoo.com> <20040715121133.B33667@onyx.ispol.com>
	<2ac59b0404071511195b0cfbdb@mail.gmail.com>
	<20040715210524.GB31943@debian.mki-btc.com>
	<40F7194D.6080801@yahoo.com>
Message-ID: <20040716065015.GA3076@debian.mki-btc.com>

On Thu, Jul 15, 2004 at 07:54:53PM -0400, Stefan Hudac wrote:
> Hi Volodya
> 
> You are right but just partially. Apache 2.xx really introduced threaded 
> model, but just as an addition to its forked model. In real life Apache 
> still creates couple of forks which then run couple of threads. So to 
> get to my original question, memory is shared among mod_python instances 
> on one fork, but not in between forks. :-( Still doesn't solve my problem.
> 
> Thank you all guys to confirm what I suspected.
> 
> stefan
> 

But you can control the way Apache handles processes & threads:

http://httpd.apache.org/docs-2.0/mod/worker.html

May be it is not the best solution but you can run "single process and
as much threads as you need" model. ( StartServers &  ServerLimit 16
directives).

From davidf at sjsoft.com  Fri Jul 16 11:16:48 2004
From: davidf at sjsoft.com (David Fraser)
Date: Fri Jul 16 04:15:22 2004
Subject: [mod_python] python_cleanup/bsddb error
In-Reply-To: <20040715150600.C27164@saint.ironport.com>
References: <20040715150600.C27164@saint.ironport.com>
Message-ID: <40F78EF0.4090600@sjsoft.com>

Hi

I'm not sure of this, but sometimes the cleanup functions give an error 
because they end up getting run in restricted mode.
But in this case the error message posted is here:

> [Thu Jul 12 19:27:04 2004] [error] [client 10.1.1.67] python_cleanup: 
> Error calling cleanup object <function dbm_cleanup at 0x823fc8c>, 
> referer: http://mymachine/home
> [Thu Jul 12 19:27:04 2004] [error] [client 10.1.1.67] bsddb.error: 
> (22, 'Invalid argument'), referer: http://mymachine/home

Can you post more details on how you register the cleanup etc, any 
reasons why it might be giving an invalid argument?

David

Krishna Srinivasan wrote:

>
> Greetings.
>
> Can some one please help me with this ?
>
> The /tmp/mp_sess.dbm is just growing
> with time and doesn't get cleaned
> up at all. Please atleast let me know
> if this is NOT a mod_python error or
> some dbm-module error, so I can investigate
> further as to what is wrong.
>
> Thanks,
> Krishna.
>
>
> ---------- Forwarded message ----------
> Date: Tue, 13 Jul 2004 16:33:19 -0700 (PDT)
> From: Krishna Srinivasan <krishna@ironport.com>
> To: Modpython <Mod_python@modpython.org>
> Subject: python_cleanup/bsddb error
>
>
> Greetings.
>
> I get the following errors in my error_log.
> I guess this is why my sessions don't get
> cleaned up at all and hence the mp_sess.dbm
> in /tmp is always growing.
>
> [Thu Jul 12 19:27:04 2004] [notice] [client 10.1.1.67] DbmSession: 
> registered database cleanup., referer: http://mymachine/home
> [Thu Jul 12 19:27:04 2004] [error] [client 10.1.1.67] python_cleanup: 
> Error calling cleanup object <function dbm_cleanup at 0x823fc8c>, 
> referer: http://mymachine/home
> [Thu Jul 12 19:27:04 2004] [error] [client 10.1.1.67] bsddb.error: 
> (22, 'Invalid argument'), referer: http://mymachine/home
>
> Can someone please give me pointers as to
> how to correctly clean up the db ?
>
> Many thanks,
> Krishna. 


From stevohudac at yahoo.com  Thu Jul 15 20:54:53 2004
From: stevohudac at yahoo.com (Stefan Hudac)
Date: Fri Jul 16 17:41:38 2004
Subject: [mod_python] Multiple interpreter instances?
In-Reply-To: <20040715210524.GB31943@debian.mki-btc.com>
References: <40F5CEAD.4010808@yahoo.com>
	<20040715121133.B33667@onyx.ispol.com>	<2ac59b0404071511195b0cfbdb@mail.gmail.com>
	<20040715210524.GB31943@debian.mki-btc.com>
Message-ID: <40F7194D.6080801@yahoo.com>

Hi Volodya

You are right but just partially. Apache 2.xx really introduced threaded 
model, but just as an addition to its forked model. In real life Apache 
still creates couple of forks which then run couple of threads. So to 
get to my original question, memory is shared among mod_python instances 
on one fork, but not in between forks. :-( Still doesn't solve my problem.

Thank you all guys to confirm what I suspected.

stefan

Volodya wrote:

> On Thu, Jul 15, 2004 at 01:19:27PM -0500, Johnathan Gurley wrote:
> 
>>Correct me if I'm wrong, but fork copies the parent process's memory
>>into the child process's memory, but the child has its own unique
>>stack and heap.  This would make it very difficult to share Python
>>memory between Apache instances, as the Apache instances themselves
>>have separate memory space.
> 
> 
> Apache 2 introduced threaded model. Threads share process's memory.
> With Mod_python 3.x and Apache 2.x you can share  global variables per
> Apache's virtual server for example. And it seems threads work fine on
> Linux, Windows and FreeBSD 5.x (but not FreeBSD 4.x).
> 
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
> 
> 

From bl at netgroup.dk  Mon Jul 19 19:54:26 2004
From: bl at netgroup.dk (Bo Lorentsen)
Date: Mon Jul 19 12:54:30 2004
Subject: [mod_python] importing home made modules
Message-ID: <1090256065.3985.165.camel@localhost>

Hi ...

I have a strage problem, while using apache2 2.0.49 and mod_python 3.1.3
(Python 2.3.4) on a debian testing/sarge platform.

I have made a python module written i C/C++ for python that just works
nicly on the command line python, it both imports and works as expected.
but when I include it in a python module via apache2 I get an
segmentation error. Ofcause plain mod_pyton modules without this module
just works :-)

So my module works just fine, but in apache2 :-(

The funny part is, that this workeed for just a few weeks ago, in the
same setup, but due to a hacker attack I was forced to reinstall the
mashine. The only thing I can think of that may have changed is the
python version (2.3.3->2.3.4).

Are there anyone that have had any problems like this, or will it be
wise to use python 2.2 instead ?

/BL

From dvarrazzo at virgilio.it  Mon Jul 19 21:03:54 2004
From: dvarrazzo at virgilio.it (Daniele Varrazzo)
Date: Mon Jul 19 14:04:01 2004
Subject: [mod_python] Crash on getting request's allowed_xmethods an boundary
Message-ID: <GKEBLAIAHOIHHOJGAOKJEEELCDAA.dvarrazzo@virgilio.it>

Hi everybody,

i'm experiencing crashing of the apache process when a mod_python handler
access the properties "boundary" and "allowed_xmethods" of the request
argument. This prevents the use of some interactive remote debuggers (such
ActiveState's) that try to read the contents of the variables in the
namespace and graphically present them in tree form.

I reported the crash on win32 platform. I am using python 2.3.4, apache
2.0.47, mod_python 3.1.3.

To show the bug here is a simple handler. It publishes the content of the
req object. Clicking on the url, the property is read and published.
Clicking on one of "allowed_xmethods" or "boundary" crashes apache. Actually
a plain read such as "x = req.boundary" is enough to crash.

from mod_python import apache

def handler(req):
    req.write("<html><body>")
    if req.args is None:
        for k in dir(req):
            req.write("<a href=%s?attr=%s>request.%s</a><br/>"
                      % (req.uri, k, k))
    else:
        attr = dict([ t.split('=') for t in req.args.split('&') ])['attr']
        req.write(str(getattr(req, attr)))

    req.write("</body></html>")
    return apache.OK

I published the script through:

<Directory "C:/httproot/test">
  AddHandler python-program .py
  PythonHandler mptest
  PythonDebug On
  PythonPath "['C:/httproot/test']+sys.path"
</Directory>

Daniele

From dg at sponsera.com  Mon Jul 19 16:24:26 2004
From: dg at sponsera.com (David Geller)
Date: Mon Jul 19 15:24:32 2004
Subject: [mod_python] importing home made modules
In-Reply-To: <1090256065.3985.165.camel@localhost>
References: <1090256065.3985.165.camel@localhost>
Message-ID: <40FC1FEA.7050303@sponsera.com>

This brings back memories.... ;)

Perhaps you have a "library conflict" somehwere (which happened to me 
awhile back). You must make sure that libraries used by various apache 
modules are the same. My problem was the PHP mod was using one version 
of mysql libraries, while mod_python was using another. In *some* 
configurations, this worked fine. In others, it segv'd. When I made all 
the libraries consistent, problems went away.

Just my 1/2 cent...

David

Bo Lorentsen wrote:
> Hi ...
> 
> I have a strage problem, while using apache2 2.0.49 and mod_python 3.1.3
> (Python 2.3.4) on a debian testing/sarge platform.
> 
> I have made a python module written i C/C++ for python that just works
> nicly on the command line python, it both imports and works as expected.
> but when I include it in a python module via apache2 I get an
> segmentation error. Ofcause plain mod_pyton modules without this module
> just works :-)
> 
> So my module works just fine, but in apache2 :-(
> 
> The funny part is, that this workeed for just a few weeks ago, in the
> same setup, but due to a hacker attack I was forced to reinstall the
> mashine. The only thing I can think of that may have changed is the
> python version (2.3.3->2.3.4).
> 
> Are there anyone that have had any problems like this, or will it be
> wise to use python 2.2 instead ?
> 
> /BL
> 
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
> 
> 
From bl at netgroup.dk  Tue Jul 20 01:48:32 2004
From: bl at netgroup.dk (Bo Lorentsen)
Date: Mon Jul 19 18:48:38 2004
Subject: [mod_python] importing home made modules
In-Reply-To: <40FC1FEA.7050303@sponsera.com>
References: <1090256065.3985.165.camel@localhost>
	<40FC1FEA.7050303@sponsera.com>
Message-ID: <1090277311.3982.250.camel@localhost>

On Mon, 2004-07-19 at 21:24, David Geller wrote:

> This brings back memories.... ;)
Long nights I quess ... :-)

> Perhaps you have a "library conflict" somehwere (which happened to me 
> awhile back). You must make sure that libraries used by various apache 
> modules are the same. My problem was the PHP mod was using one version 
> of mysql libraries, while mod_python was using another. In *some* 
> configurations, this worked fine. In others, it segv'd. When I made all 
> the libraries consistent, problems went away.
This was the problem ... a total rebuild of all modules (my python
modules depends on 3 other home brewn shared libs), and it all works as
before. 

Thanks for the hint !

/BL

From jerryfic_21 at hotmail.com  Tue Jul 20 12:41:34 2004
From: jerryfic_21 at hotmail.com (Gerardo Rodriguez Gutierrez)
Date: Tue Jul 20 13:41:38 2004
Subject: [mod_python] trouble instaling mod_python over apache 1.3.31
Message-ID: <BAY12-F39pQULTbjJvh0002fd9d@hotmail.com>

I did what it says the FAQ about it, and put in ennvars 
LD_PRELOAD=/usr/lib/libc_r.so

export LD_PRELOAD , and when restart apache it says me:

[warn] Loaded DSO libexec/mod_python.so uses plain Apache 1.3 API, this 
module might crash under EAPI! (please recompile it with -DEAPI)

???

when I run a py program, mod_python display an error

this is my apache conf file

LoadModule python_module      libexec/mod_python.so

<Directory "/usr/local/apache/htdocs/clientes">
AddHandler python-program .py
PythonHandler hello
PythonDebug On
Order allow,deny
Allow from all
</Directory>

and my python file is: hello.py

from mod_python import apache

def handler(req):
     req.content_type = "text/html"
     req.write("Hello World! Blarg!")
     return apache.OK

_________________________________________________________________
Protect your PC - get McAfee.com VirusScan Online 
http://clinic.mcafee.com/clinic/ibuy/campaign.asp?cid=3963

From krishna at ironport.com  Tue Jul 20 13:24:26 2004
From: krishna at ironport.com (Krishna Srinivasan)
Date: Tue Jul 20 15:24:29 2004
Subject: [mod_python] python_cleanup/bsddb error
Message-ID: <20040720121209.A31487@saint.ironport.com>


Greetings.

> Can you post more details on how you register the cleanup etc, any 
> reasons why it might be giving an invalid argument?

I don't do anything special at all - I just set up
the CLEANUP_CHANCE and that's it. Mod_Python is supposed
to be triggering the cleanup every time the CLEANUP_CHANCE
probability is hit.

I checked the permissions on '/tmp/mp_sess.dbm' file and
they are "-rw-r--r--" and owned by user "nobody" (same as
apache) and group "wheel" (std in freebsd). So I am assuming
that if 'nobody' can create and write to this file, it should
also be able to 'write' again (to delete some old stuff).

Any suggestions, help, please ? This memory problem is
really terrible. Whenever my temp file goes over 25 megs,
I have to wipe out that file and restart the server.
But this also means that I trouble all users of my application
to save all changes and not keep anything in session before
I do this wipe-out over a weekend.

Many thanks,
Krishna.




David wrote:

> Hi
> 
> I'm not sure of this, but sometimes the cleanup functions give an error 
> because they end up getting run in restricted mode.
> But in this case the error message posted is here:
> 
> > [Thu Jul 12 19:27:04 2004] [error] [client 10.1.1.67] python_cleanup: 
> > Error calling cleanup object <function dbm_cleanup at 0x823fc8c>, 
> > referer: http://mymachine/home
> > [Thu Jul 12 19:27:04 2004] [error] [client 10.1.1.67] bsddb.error: 
> > (22, 'Invalid argument'), referer: http://mymachine/home
> 
> Can you post more details on how you register the cleanup etc, any 
> reasons why it might be giving an invalid argument?

> David

Krishna Srinivasan wrote:

>
> Greetings.
>
> Can some one please help me with this ?
>
> The /tmp/mp_sess.dbm is just growing
> with time and doesn't get cleaned
> up at all. Please atleast let me know
> if this is NOT a mod_python error or
> some dbm-module error, so I can investigate
> further as to what is wrong.
>
> Thanks,
> Krishna.
>
>
> ---------- Forwarded message ----------
> Date: Tue, 13 Jul 2004 16:33:19 -0700 (PDT)
> From: Krishna Srinivasan <krishna at ironport.com>
> To: Modpython <Mod_python at modpython.org>
> Subject: python_cleanup/bsddb error
>
>
> Greetings.
>
> I get the following errors in my error_log.
> I guess this is why my sessions don't get
> cleaned up at all and hence the mp_sess.dbm
> in /tmp is always growing.
>
> [Thu Jul 12 19:27:04 2004] [notice] [client 10.1.1.67] DbmSession: 
> registered database cleanup., referer: http://mymachine/home
> [Thu Jul 12 19:27:04 2004] [error] [client 10.1.1.67] python_cleanup: 
> Error calling cleanup object <function dbm_cleanup at 0x823fc8c>, 
> referer: http://mymachine/home
> [Thu Jul 12 19:27:04 2004] [error] [client 10.1.1.67] bsddb.error: 
> (22, 'Invalid argument'), referer: http://mymachine/home
>
> Can someone please give me pointers as to
> how to correctly clean up the db ?
>
> Many thanks,
> Krishna.

From davidf at sjsoft.com  Wed Jul 21 00:05:30 2004
From: davidf at sjsoft.com (David Fraser)
Date: Tue Jul 20 17:03:52 2004
Subject: [mod_python] python_cleanup/bsddb error
In-Reply-To: <20040720121209.A31487@saint.ironport.com>
References: <20040720121209.A31487@saint.ironport.com>
Message-ID: <40FD891A.3070805@sjsoft.com>

Krishna Srinivasan wrote:

>
> Greetings.
>
>> Can you post more details on how you register the cleanup etc, any 
>> reasons why it might be giving an invalid argument?
>
>
> I don't do anything special at all - I just set up
> the CLEANUP_CHANCE and that's it. Mod_Python is supposed
> to be triggering the cleanup every time the CLEANUP_CHANCE
> probability is hit.
>
> I checked the permissions on '/tmp/mp_sess.dbm' file and
> they are "-rw-r--r--" and owned by user "nobody" (same as
> apache) and group "wheel" (std in freebsd). So I am assuming
> that if 'nobody' can create and write to this file, it should
> also be able to 'write' again (to delete some old stuff).
>
> Any suggestions, help, please ? This memory problem is
> really terrible. Whenever my temp file goes over 25 megs,
> I have to wipe out that file and restart the server.
> But this also means that I trouble all users of my application
> to save all changes and not keep anything in session before
> I do this wipe-out over a weekend.
>
> Many thanks,
> Krishna.

Actually I have little knowledge of freebsd and none of bsddb, so maybe 
others can help with that.
But it does sound suspiciously similar to the restricted mode problem 
that happens for me in cleanup functions.
This prevents any writing to disk whatsoever from Python.

David

>
>
>
>
> David wrote:
>
>> Hi
>>
>> I'm not sure of this, but sometimes the cleanup functions give an 
>> error because they end up getting run in restricted mode.
>> But in this case the error message posted is here:
>>
>> > [Thu Jul 12 19:27:04 2004] [error] [client 10.1.1.67] 
>> python_cleanup: > Error calling cleanup object <function dbm_cleanup 
>> at 0x823fc8c>, > referer: http://mymachine/home
>> > [Thu Jul 12 19:27:04 2004] [error] [client 10.1.1.67] bsddb.error: 
>> > (22, 'Invalid argument'), referer: http://mymachine/home
>>
>> Can you post more details on how you register the cleanup etc, any 
>> reasons why it might be giving an invalid argument?
>
>
>> David
>
>
> Krishna Srinivasan wrote:
>
>>
>> Greetings.
>>
>> Can some one please help me with this ?
>>
>> The /tmp/mp_sess.dbm is just growing
>> with time and doesn't get cleaned
>> up at all. Please atleast let me know
>> if this is NOT a mod_python error or
>> some dbm-module error, so I can investigate
>> further as to what is wrong.
>>
>> Thanks,
>> Krishna.
>>
>>
>> ---------- Forwarded message ----------
>> Date: Tue, 13 Jul 2004 16:33:19 -0700 (PDT)
>> From: Krishna Srinivasan <krishna at ironport.com>
>> To: Modpython <Mod_python at modpython.org>
>> Subject: python_cleanup/bsddb error
>>
>>
>> Greetings.
>>
>> I get the following errors in my error_log.
>> I guess this is why my sessions don't get
>> cleaned up at all and hence the mp_sess.dbm
>> in /tmp is always growing.
>>
>> [Thu Jul 12 19:27:04 2004] [notice] [client 10.1.1.67] DbmSession: 
>> registered database cleanup., referer: http://mymachine/home
>> [Thu Jul 12 19:27:04 2004] [error] [client 10.1.1.67] python_cleanup: 
>> Error calling cleanup object <function dbm_cleanup at 0x823fc8c>, 
>> referer: http://mymachine/home
>> [Thu Jul 12 19:27:04 2004] [error] [client 10.1.1.67] bsddb.error: 
>> (22, 'Invalid argument'), referer: http://mymachine/home
>>
>> Can someone please give me pointers as to
>> how to correctly clean up the db ?
>>
>> Many thanks,
>> Krishna.
>
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>

From abrahams at gmail.com  Fri Jul 23 16:59:11 2004
From: abrahams at gmail.com (Sean Abrahams)
Date: Fri Jul 23 18:59:19 2004
Subject: [mod_python] mod_python and unittest
In-Reply-To: <20040709191938.I84673@onyx.ispol.com>
References: <dfbb7da0040709152119a10316@mail.gmail.com>
	<20040709191938.I84673@onyx.ispol.com>
Message-ID: <dfbb7da00407231559183d0378@mail.gmail.com>

I've looked in the test directory and figured things out.

However for simple tests, would it not be easier to simply create a
mock request object?

Right now I just want a unittest for my session mutator functions.

I can imagine there are tests that will require setting up an http
instance and yadda, yadda, yadda, but for simple stuff, I'm thinking a
mock request object will do.

Does anyone see any reasons not to use a mock request object?

Perhaps a, from mod_python import mockreq ?? ;)

I just want to have a little dialog to ensure my effort to create a
mockreq module would be worthwhile.

Thanks,
--Sean


On Fri, 9 Jul 2004 19:20:48 -0400 (EDT), Gregory (Grisha) Trubetskoy
<grisha@modpython.org> wrote:
> 
> Sean -
> 
> Take a look at the test subdirectory of the source distribution. It
> contains a bunch of mod_python tests. You're right, it's not that simple
> because you actually have to run httpd and make a request to conduct a
> test.
> 
> Grisha
> 
> 
> 
> On Fri, 9 Jul 2004, Sean Abrahams wrote:
> 
> > What's the best way to use python's unittest module with mod_python?
> >
> > Unless I'm missing something, I can't just 'from mod_python import
> > apache' and create my own req object without it being run under
> > Apache. I was thinking I should just create a mock req object for
> > simple tests, thoughts?
> >
> > Thanks,
> > --Sean
> > _______________________________________________
> > Mod_python mailing list
> > Mod_python@modpython.org
> > http://mailman.modpython.org/mailman/listinfo/mod_python
> >
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>
From needyourhelp at mail.com  Fri Jul 23 21:17:15 2004
From: needyourhelp at mail.com (Peter Wong)
Date: Fri Jul 23 21:16:06 2004
Subject: [mod_python] Can't get mod_python working
Message-ID: <20040724011715.15F2B1F4FA1@ws1-2.us4.outblaze.com>

Hi,

Running RedHat 9 (Shrike; 2.4.20-8) using supplied apache (2.0.40) -- mod_python already included.

Followed the instructions in the Manual for testing (sec. 2.4) ... 

* added this to my httpd.conf:
    <Directory /some/directory/htdocs/test>
        AddHandler mod_python .py
        PythonHandler mptest
        PythonDebug On
    </Directory>

* mptest.py contains:

from mod_python import apache
def handler(req):
    req.write("Hello World!")
    return apache.OK

* pointed my browser to http://server/mptest.py and I get this page back:

from mod_python import apache
def handler(req):
    req.write("Hello World!")
    return apache.OK

There are no errors in the error_log

What's wrong???

Thanks,

Paul




-- 
___________________________________________________________
Sign-up for Ads Free at Mail.com
http://promo.mail.com/adsfreejump.htm

From grisha at modpython.org  Fri Jul 23 22:27:27 2004
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jul 23 21:27:31 2004
Subject: [mod_python] mod_python and unittest
In-Reply-To: <dfbb7da00407231559183d0378@mail.gmail.com>
References: <dfbb7da0040709152119a10316@mail.gmail.com>
	<20040709191938.I84673@onyx.ispol.com>
	<dfbb7da00407231559183d0378@mail.gmail.com>
Message-ID: <20040723212203.P41529@onyx.ispol.com>


On Fri, 23 Jul 2004, Sean Abrahams wrote:

> I've looked in the test directory and figured things out.
>
> However for simple tests, would it not be easier to simply create a
> mock request object?

Possibly - though it would only give a very limited perspective. But once 
you make a mock request you'll want to mock request phases and all the 
other stuff, and then it becomes not worth the effort - it's easier to 
just have httpd do that for you.

But if you come up with something worthwile, please do share it on the 
list!

Grisha

From psmith at consulting.co.nz  Sat Jul 24 14:51:50 2004
From: psmith at consulting.co.nz (Peter Smith)
Date: Fri Jul 23 21:52:00 2004
Subject: [mod_python] Can't get mod_python working
In-Reply-To: <20040724011715.15F2B1F4FA1@ws1-2.us4.outblaze.com>
References: <20040724011715.15F2B1F4FA1@ws1-2.us4.outblaze.com>
Message-ID: <4101C0B6.40507@consulting.co.nz>

Move mptest.py  into the test directory, and try pointing to 
http://server/test/mptest.py


Regards
Peter


Peter Wong wrote:

>Hi,
>
>Running RedHat 9 (Shrike; 2.4.20-8) using supplied apache (2.0.40) -- mod_python already included.
>
>Followed the instructions in the Manual for testing (sec. 2.4) ... 
>
>* added this to my httpd.conf:
>    <Directory /some/directory/htdocs/test>
>        AddHandler mod_python .py
>        PythonHandler mptest
>        PythonDebug On
>    </Directory>
>
>* mptest.py contains:
>
>from mod_python import apache
>def handler(req):
>    req.write("Hello World!")
>    return apache.OK
>
>* pointed my browser to http://server/mptest.py and I get this page back:
>
>from mod_python import apache
>def handler(req):
>    req.write("Hello World!")
>    return apache.OK
>
>There are no errors in the error_log
>
>What's wrong???
>
>Thanks,
>
>Paul
>
>
>
>
>  
>

From needyourhelp at mail.com  Fri Jul 23 22:01:03 2004
From: needyourhelp at mail.com (Peter Wong)
Date: Fri Jul 23 21:59:51 2004
Subject: [mod_python] Can't get mod_python working
Message-ID: <20040724020103.DF4431F4FA1@ws1-2.us4.outblaze.com>

sorry, I had a typo:

I do have mptest.py in my test dir. and I am pointing to 

http://server/test/mptest.py

----- Original Message -----
From: Peter Smith <psmith@consulting.co.nz>
Date: Sat, 24 Jul 2004 13:51:50 +1200
To: mod_python user mailing list <mod_python@modpython.org>
Subject: Re: [mod_python] Can't get mod_python working

> Move mptest.py  into the test directory, and try pointing to 
> http://server/test/mptest.py
> 
> 
> Regards
> Peter
> 
> 
> Peter Wong wrote:
> 
> >Hi,
> >
> >Running RedHat 9 (Shrike; 2.4.20-8) using supplied apache (2.0.40) -- mod_python already included.
> >
> >Followed the instructions in the Manual for testing (sec. 2.4) ... 
> >
> >* added this to my httpd.conf:
> >    <Directory /some/directory/htdocs/test>
> >        AddHandler mod_python .py
> >        PythonHandler mptest
> >        PythonDebug On
> >    </Directory>
> >
> >* mptest.py contains:
> >
> >from mod_python import apache
> >def handler(req):
> >    req.write("Hello World!")
> >    return apache.OK
> >
> >* pointed my browser to http://server/mptest.py and I get this page back:
> >
> >from mod_python import apache
> >def handler(req):
> >    req.write("Hello World!")
> >    return apache.OK
> >
> >There are no errors in the error_log
> >
> >What's wrong???
> >
> >Thanks,
> >
> >Paul
> >
> >
> >
> >
> >  
> >
> 
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python

-- 
___________________________________________________________
Sign-up for Ads Free at Mail.com
http://promo.mail.com/adsfreejump.htm

From develop at tuxed.de  Sun Jul 25 04:50:59 2004
From: develop at tuxed.de (Roman Roelofsen)
Date: Sat Jul 24 21:45:32 2004
Subject: [mod_python] PSP - no output
Message-ID: <200407250350.59207.develop@tuxed.de>


Hi,

I am new to mod_python and for my first app i tried to use a psp-page.  But 
when i send a request nothing gets generated. My config:

.htaccess
------------------------------
AddHandler mod_python .psp
PythonHandler mod_python.psp
PythonDebug On

test.psp
------------------------------
<html>
<%
greet = 'Hello'
%>
<%= greet %>
<br>
test test
</html>

There is really no ouput. No error message, neither in the browser nor in the 
apache error log. Just an empty file.  When I use the publisher as 
PythonHandler and no psp everthing works fine!

Versions
------------------------------
apache: 2.0.49-23
mod_python: 3.1.3
python: 2.3.3

Any ideas?

Thanks,

Roman
From fuf at mobil.cz  Mon Jul 26 11:38:48 2004
From: fuf at mobil.cz (Michal Vitecek)
Date: Mon Jul 26 05:30:41 2004
Subject: [mod_python] bug in parsing POST input sent by Opera
Message-ID: <200407260930.i6Q9UaqT024124@diana.mobil.cz>

 hello,

 i'm encountering a bug in mod_python (3.1.3) which occurs when POST is
 used to send data _and_ Opera browser (7.50.673 or 7.53.737 in my case)is
 used to send the data. the bug is that mod_python parses the last
 attribute=value pair wrongly as it sometimes add a random character (just
 one) to the value, so instead of getting attribute=value i get
 attribute=value4 or attribute=valueM etc.

 this doesn't happen when any other browser is used (mozilla based, ms
 ie, lynx) or when GET method is used.

 the bug can be worked around by adding a junk attribute=value to be the
 last one - so it doesn't matter it gets mangled by mod_python.

 btw: i don't think it's an opera's fault - it works flawlessly with
 mod_php or mod_perl.

	thank you,
-- 
		fuf		(fuf@mobil.cz)
From fuf at mobil.cz  Mon Jul 26 13:13:45 2004
From: fuf at mobil.cz (Michal Vitecek)
Date: Mon Jul 26 06:13:48 2004
Subject: [mod_python] bug in parsing POST input sent by Opera
In-Reply-To: <200407260930.i6Q9UaqT024124@diana.mobil.cz>
References: <200407260930.i6Q9UaqT024124@diana.mobil.cz>
Message-ID: <20040726101345.GA13850@diana.mobil.cz>

 hello again,

 after some investigating i found out the data already gets mangled to
 mod_python so it's not mod_python's problem. so the problem is somewhere
 in flash player and opera integration. apologies for the possible
 confusion - i've just found out.

Michal Vitecek wrote:
> hello,
>
> i'm encountering a bug in mod_python (3.1.3) which occurs when POST is
> used to send data _and_ Opera browser (7.50.673 or 7.53.737 in my case)is
> used to send the data. the bug is that mod_python parses the last
> attribute=value pair wrongly as it sometimes add a random character (just
> one) to the value, so instead of getting attribute=value i get
> attribute=value4 or attribute=valueM etc.
>
> this doesn't happen when any other browser is used (mozilla based, ms
> ie, lynx) or when GET method is used.
>
> the bug can be worked around by adding a junk attribute=value to be the
> last one - so it doesn't matter it gets mangled by mod_python.
>
> btw: i don't think it's an opera's fault - it works flawlessly with
> mod_php or mod_perl.

-- 
		fuf		(fuf@mobil.cz)
From stephane.bidoul at softwareag.com  Mon Jul 26 14:54:37 2004
From: stephane.bidoul at softwareag.com (=?iso-8859-1?Q?St=E9phane_Bidoul?=)
Date: Mon Jul 26 07:54:33 2004
Subject: [mod_python] PATCH: server cleanup callback
Message-ID: <010001c47307$70ce7380$9a0517ac@be.sag>

Skipped content of type multipart/alternative-------------- next part --------------
A non-text attachment was scrubbed...
Name: servercleanup.diff
Type: application/octet-stream
Size: 917 bytes
Desc: not available
Url : http://modpython.org/pipermail/mod_python/attachments/20040726/d16dab97/servercleanup.obj
From grisha at modpython.org  Mon Jul 26 20:25:42 2004
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Mon Jul 26 19:25:47 2004
Subject: [mod_python] PATCH: server cleanup callback
In-Reply-To: <010001c47307$70ce7380$9a0517ac@be.sag>
References: <010001c47307$70ce7380$9a0517ac@be.sag>
Message-ID: <20040726192407.X97342@onyx.ispol.com>


Yes, definitely makes sense... It was probably a result of a bad copy from 
the request cleanup code. I'll check this into CVS, thanks!

Grisha

On Mon, 26 Jul 2004, [iso-8859-1] St?phane Bidoul wrote:

> Hi,
>
> Hi went back into debugging this
> http://www.modpython.org/pipermail/mod_python/2004-April/015475.html
> and I found out it was not related to threading at all
> (this time I was getting crashes instead of restricted mode errors).
>
> Actually, the interpreter name that was stored in the cleanup_info structure
> was deallocated when the python_cleanup was called during child shutdown.
>
> Does the attached patch make sense?
>
> -sbi
>
From AJDENSTONE at BKB.com.br  Tue Jul 27 12:48:49 2004
From: AJDENSTONE at BKB.com.br (AJDENSTONE@BKB.com.br)
Date: Tue Jul 27 10:52:00 2004
Subject: [mod_python] Re: persistent, reliable globals
Message-ID: <DBBA2C22AB83D711BBBC0008C75DC954102C44AC@BRSAOMXMP02.sp.bra.bkb.com>

 
 
Alexandre Jara Denstone
BankBoston - Retail Internet Systems
Edif?cio BankBoston 5? andar - Asa Na??es
Av. Chucri Zaidan, 246
* (11) 3398-6730
* ajdenstone@bkb.com.br
 


Esta mensagem, incluindo seus anexos, pode conter informa??o confidencial
e/ou privilegiada. Se voc? recebeu este e-mail por engano, n?o utilize,
copie ou divulgue as informa??es nele contidas. E, por favor, avise
imediatamente o remetente, respondendo ao e-mail, e em seguida apague-o.
Este e-mail possui conte?do informativo e n?o transacional. Caso necessite
de atendimento imediato, recomendamos utilizar um dos canais dispon?veis:
Internet Banking <http://www.bankboston.com.br>  , BankBoston por telefone
<http://www.bankboston.com.br/bpt>  ou ag?ncia/representante de atendimento
de sua conveni?ncia. Agradecemos sua colabora??o.
This message, including its attachments, may contain confidential and/or
privileged information. If you received this email by mistake, do not use,
copy or disseminate any information herein contained. Please notify us
immediately by replying to the sender and then delete it. This email is for
information purposes only, not for transactions. In case you need immediate
assistance, please use one of the following channels: Internet Banking
<http://www.bankboston.com.br>  ,  BankBoston by phone
<http://www.bankboston.com.br/bpt>  or branch/relationship manager at your
convenience. Thank you for your cooperation.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://modpython.org/pipermail/mod_python/attachments/20040727/32e76737/attachment.html
From ross at karchner.com  Tue Jul 27 21:51:08 2004
From: ross at karchner.com (Ross Karchner)
Date: Tue Jul 27 20:51:18 2004
Subject: [mod_python] Aapche advice
Message-ID: <4106F87C.80706@karchner.com>

Hello-

Can anyone suggest the optimum Apache configuration to use with:

-Apache 2/mod_python
-Postgresl with 31 available connections (32 minus 1 dedicated superuser
connection)
-pyPgSQL

-Ross
From bl at netgroup.dk  Wed Jul 28 11:34:09 2004
From: bl at netgroup.dk (Bo Lorentsen)
Date: Wed Jul 28 04:34:48 2004
Subject: [mod_python] Aapche advice
In-Reply-To: <4106F87C.80706@karchner.com>
References: <4106F87C.80706@karchner.com>
Message-ID: <1091003649.839.71.camel@localhost>

On Wed, 2004-07-28 at 02:51, Ross Karchner wrote:

> Can anyone suggest the optimum Apache configuration to use with:
> 
> -Apache 2/mod_python
> -Postgresl with 31 available connections (32 minus 1 dedicated superuser
> connection)
> -pyPgSQL
I think we need some more information to be of any help !

How are you going to use this site ?

Are you going to use the publicher module, or just a "normal" request
handler ?

How much trafic, and how many SQL request per page ?

/BL

From ross at karchner.com  Wed Jul 28 09:04:44 2004
From: ross at karchner.com (Ross Karchner)
Date: Wed Jul 28 08:04:48 2004
Subject: [mod_python] Aapche advice
In-Reply-To: <1091003649.839.71.camel@localhost>
References: <4106F87C.80706@karchner.com> <1091003649.839.71.camel@localhost>
Message-ID: <4107965C.5010908@karchner.com>

Sorry about the lack of details, but none of those details are really
finalized yet. Thus far I have been using PSP, if that matters.


By 'optimum', I guess I really meant "won't run out of database
connections", and it was in the setting up of maximum threads, process,
spare servers, etc that I was getting a bit confused.

Bo Lorentsen wrote:

 > On Wed, 2004-07-28 at 02:51, Ross Karchner wrote:
 >
 >
 >>Can anyone suggest the optimum Apache configuration to use with:
 >>
 >>-Apache 2/mod_python
 >>-Postgresl with 31 available connections (32 minus 1 dedicated superuser
 >>connection)
 >>-pyPgSQL
 >
 > I think we need some more information to be of any help !
 >
 > How are you going to use this site ?
 >
 > Are you going to use the publicher module, or just a "normal" request
 > handler ?
 >
 > How much trafic, and how many SQL request per page ?
 >
 > /BL


From jan at huelsbergen.de  Thu Jul 29 02:40:09 2004
From: jan at huelsbergen.de (Jan Huelsbergen)
Date: Wed Jul 28 19:37:38 2004
Subject: [mod_python] mod_python.publisher and PSP on Apache 2.0.49
 (MPM_Prefork) with mod_python 3.1.3
Message-ID: <20040729014009.34ebb1dd@localhost>

Hello,

I am having some weird problems with the environment described in the
subject. I will try to describe them as precise as possible, hoping that
this will be at least enough for you to tell me where to find more
information on my problem.

I have a few pages using the publisher Handler, the all live in folders
with the following, identical .htaccess:

--snip--
SetHandler mod_python
PythonHandler mod_python.publisher
PythonDebug On
--snap--

The scripts use mod_python.psp as a templating engine.

Now *sometines* (Until now I was not able to narrow down when exactly
this happens and when not), after calling the first script, calling the
second will result in the following error:

--snip--
ValueError: <the template of the *first* script> is not a file
--snap--

The mentioned filename is not part of the second script and is indeed a valid file.

That is about all I can tell you so far. What is broken? What can I do
to collect more information on the problem?


TIA,

Jan

-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
Url : http://modpython.org/pipermail/mod_python/attachments/20040729/45cc5a21/attachment.bin
From bl at netgroup.dk  Thu Jul 29 11:35:05 2004
From: bl at netgroup.dk (Bo Lorentsen)
Date: Thu Jul 29 04:35:45 2004
Subject: [mod_python] Aapche advice
In-Reply-To: <4107965C.5010908@karchner.com>
References: <4106F87C.80706@karchner.com>
	<1091003649.839.71.camel@localhost>  <4107965C.5010908@karchner.com>
Message-ID: <1091090105.841.237.camel@localhost>

On Wed, 2004-07-28 at 14:04, Ross Karchner wrote:

> Sorry about the lack of details, but none of those details are really
> finalized yet. Thus far I have been using PSP, if that matters.
Ok, I have no knowlege of PSP, other than I know what it is, but I quess
it perform quite well.

> By 'optimum', I guess I really meant "won't run out of database
> connections", and it was in the setting up of maximum threads, process,
> spare servers, etc that I was getting a bit confused.
Hmm, I quess that as long as you don't have more processes in apache
than possible connections for postgresql, you will be fine.

Use persistance connections for postgres, and be sure you know what
state there in when you start (if you use transactions). Postgres is a
really nice DB (I use it myself) but it take some time to create a new
connections.

/BL

From davidf at sjsoft.com  Thu Jul 29 20:10:35 2004
From: davidf at sjsoft.com (David Fraser)
Date: Thu Jul 29 13:10:39 2004
Subject: [mod_python] PATCH: server cleanup callback
In-Reply-To: <20040726192407.X97342@onyx.ispol.com>
References: <010001c47307$70ce7380$9a0517ac@be.sag>
	<20040726192407.X97342@onyx.ispol.com>
Message-ID: <41092F8B.506@sjsoft.com>

To verify, this seems to fix the problem for me as well ... and prevents 
crashes / very slow restarts. Thanks so much St?phane!

David

Gregory (Grisha) Trubetskoy wrote:

>
> Yes, definitely makes sense... It was probably a result of a bad copy 
> from the request cleanup code. I'll check this into CVS, thanks!
>
> Grisha
>
> On Mon, 26 Jul 2004, [iso-8859-1] St?phane Bidoul wrote:
>
>> Hi,
>>
>> Hi went back into debugging this
>> http://www.modpython.org/pipermail/mod_python/2004-April/015475.html
>> and I found out it was not related to threading at all
>> (this time I was getting crashes instead of restricted mode errors).
>>
>> Actually, the interpreter name that was stored in the cleanup_info 
>> structure
>> was deallocated when the python_cleanup was called during child 
>> shutdown.
>>
>> Does the attached patch make sense?
>>
>> -sbi
>

From gmilas at sunstoneinc.com  Thu Jul 29 14:20:12 2004
From: gmilas at sunstoneinc.com (gmilas@sunstoneinc.com)
Date: Thu Jul 29 14:24:44 2004
Subject: [mod_python] win32com and session issues
Message-ID: <OFEA90C5C3.A1AF1C33-ON86256EE0.00523804-86256EE0.0064BA47@sunstoneinc.com>





Hi everyone,

My environment is Apache/2.0.50 (Win32) mod_python/3.1.3 Python/2.3 with a
PSP handler and Windows is 2000 professional.
Apache service runs under my user name which has administrator privileges.

I would like to keep a database connection open during a period of time and
I am trying to do it using the session mechanism. I'm trying this because I
have a bunch of code I had written before for IIS/ASP/Python and I have a
few helper classes to help me abstract away the environment, so I'm trying
to get my code as it is out of IIS to Apache.
Almost everything is fine except because I've used session to persist
database connection in my IIS, I am trying now the same thing but the
object that is being stored in the session does not come out "clean".

Anyway, is there a way to keep an ADODB.Connection object in a session
field reliably?
It seems like it is but when I try to use the connection from a session
field it gives me all sorts of errors. To what  I can say it looks like the
object stays around but it is closed and I can not reuse it actually. And
to reopen it defeats the purpose.

The code is basically something like this only hidden away in my helper
classes

import win32com.client
con=session.get("adocon",None)
if con is None:
      con = win32com.client.Dispatch('ADODB.Connection')
      con.Open(constr)
      session["adocon"]=con

cmd = win32com.client.Dispatch("ADODB.Command")
cmd.ActiveConnection = con
cmd.CommandText = "select * from MyUsers"
cmd.Execute()
...
Now if I run the code like above and work with con and cmd inside the PSP
file it always work.

Now if I create con and/or cmd inside some modules that I import in my PSP
file it works the first time, but when using con from the session it will
give me cmd.ActiveConnection can not be set .

 File "C:\Python23\lib\site-packages\win32com\client\dynamic.py", line 504,
in __setattr__
    raise AttributeError, "Property '%s.%s' can not be set." %
(self._username_, attr)
AttributeError: Property 'ADODB.Command.ActiveConnection' can not be set.

I also tried creating the "command" objects in my PSP file and pass it to
my classes and that does not work neither, I will have the same error.

I've also tried a "PythonImport win32com.client" because I hoped that if
there is some module global stuff in win32com.client.dynamic (which seems
that there is as I looked in the code) then it would stay around but I
could not make this work, I mean it gives me an error like "PythonImport
not allowed here" or otherwise it gives me no error, at least not in apache
log files, but just simply won't start the server.
httpd.conf looks like the following:
<VirtualHost *:80>
ServerName mysite.gheorghe.com
  <Directory ...>
    AddHandler mod_python .asp .asp_ .psp .psp_
    PythonHandler mod_python.psp
    #PythonImport win32com.client mysite.gheorghe.com #the server won't
start using this (python interpreter is that according to req.interpreter)
    PythonAutoReload On
    PythonDebug On
...

I've read that if I was to use a different handler, that I write myself, I
could set the connection as a global variable and it would stay there for
successive requests, but I'm trying to use psp and move the code as I have
it already working on IIS/ASP where I used session successfully. The
session seems to be memory session (session.__class__.__name__ is
MemorySession) so fields are in a global dictionary (aren't they), so is
the same as if I was using a different handler and my own global variables,
isn't it?

Please forgive my bad English, and I would really, really appreciate some
help as this is very frustrating not understanding what is going on.
Gheorghe Milas
gmilas@sunstoneinc.com


From mike_mp at zzzcomputing.com  Thu Jul 29 17:17:03 2004
From: mike_mp at zzzcomputing.com (mike bayer)
Date: Thu Jul 29 16:17:06 2004
Subject: [mod_python] the dreaded python_handler: make_obcallback returned
	no obCallBack!
Message-ID: <60747.69.112.3.223.1091132223.squirrel@69.112.3.223>

hi there -

I am installing mod_python 2.7.10 with python 2.3.4 and apache 1.3.28 on a
OS X/darwin machine.   I am using the apache 1.3 series here because the
environment i eventually want to run on is a host I share with my friends
who are unlikely to allow me to run apache 2.0, and i want my development
environment to be the same.  I would imagine a whole lot of people are in
the same "apache 1.3 only" boat.

anyway, I noticed via Google there were a lot of people two years ago
getting this message when they do the initial "hello world" test and it is
pretty much due to python's initial import of the apache module failing. 
I took a brief tour of the python embedding and extending docs which led
me to add the line:

PyErr_Print();

right on line 476 of mod_python.c where it prints the "could not import
mod_python.apache" message in the logs (wouldnt be a bad thing to add as
part of "PythonDebug On").  so running again I got this:


Traceback (most recent call last):
  File "/usr/local/lib/python2.3/site-packages/mod_python/apache.py", line
49, in ?
    import time
ImportError: Failure linking new module: : dyld: /usr/sbin/httpd Undefined
symbols:
/usr/local/lib/python2.3/lib-dynload/time.so undefined reference to
_PyArg_Parse expected to be defined in the executable
/usr/local/lib/python2.3/lib-dynload/time.so undefined reference to
_PyArg_ParseTuple expected to be defined in the executable
/usr/local/lib/python2.3/lib-dynload/time.so undefined reference to
_PyDict_GetItemString expected to be defined in the executable
/usr/local/lib/python2.3/lib-dynload/time.so undefined refer
make_obcallback(): could not import mod_python.apache.
make_obcallback(): could not call init.
[Thu Jul 29 15:25:08 2004] [error] [client 127.0.0.1] python_handler:
make_obcallback returned no obCallBack!


unfortunately my knowledge of dynamic linking is quite shallow.  so, with
this stack trace in hand, can someone tell me, what is the problem ???


- mike




From KJohnson at eclypse.org  Thu Jul 29 18:22:46 2004
From: KJohnson at eclypse.org (Ken Johnson)
Date: Thu Jul 29 18:23:05 2004
Subject: [mod_python] mptest.py is displayed, not interpreted
Message-ID: <200407292223.i6TMMxZV028135@host13.apollohosting.com>

Hello,
 
I am trying to configure mod_python for the first time.
After following the installation and testing instructions
to the best of my knowledge, I find that mptest.py is
displayed instead of interpreted.

I have reviewed the installation chapter.  A prowl through 
similar reports in the mail archives did not seem to help.
A pointer to the relevent documentation would be gladly
accepted.

The make and make install for httpd and for mod_python seemed
to complete successfully.

System: Red Hat 8.0, kernel 2.4.20-28.8

Status info from the server says:
 
Apache/2.0.50 (Unix) mod_python/3.1.3 Python/2.2.1 Server at 192.168.1.8
Port 8081 

Pointing my browser at http://192.168.1.8:8081/py-test/mptest.py
displays the contents of modules/py-test/mptest.py.

(mptest.py is as shown from the Install documentation,
except for a change to the quoted string ("Hello World!"))


logs/error_log shows:

[Thu Jul 29 16:31:41 2004] [notice] Apache/2.0.50 (Unix) mod_python/3.1.3
Python
/2.2.1 configured -- resuming normal operations

which looks to me like a success message.


Changes to conf/httpd.conf for mod_python were:

LoadModule python_module modules/mod_python.so

# Directory for basic test of mod_python
<Directory "/usr/local/apache_2.0.50/htdocs/test>
    AddHandler mod_python .py
    PythonHandler mptest
    PythonDebug On
</Directory>


Also tried:

# Directory for basic test of mod_python
<Directory "/usr/local/apache_2.0.50/htdocs/test>
    AllowOverride FileInfo
    AddHandler mod_python .py
    PythonHandler mptest
    PythonDebug On
</Directory>

with the same result.

>From the activity on this list, it appears that mod_python must
be working for many people, who must have been able to move
past this roadblock.  I confess to being an Apache novice;
if there is an aspect of Apache configuration which is 
implied but not specifically stated then I have probably
missed it.

Thanks in advance for your helpful responses,

Ken Johnson


From sanders at apache.org  Thu Jul 29 16:30:48 2004
From: sanders at apache.org (Scott Sanders)
Date: Thu Jul 29 18:30:53 2004
Subject: [mod_python] mptest.py is displayed, not interpreted
In-Reply-To: <200407292223.i6TMMxZV028135@host13.apollohosting.com>
References: <200407292223.i6TMMxZV028135@host13.apollohosting.com>
Message-ID: <F0A5FE45-E1AE-11D8-B956-000A95D2D288@apache.org>

> <Directory "/usr/local/apache_2.0.50/htdocs/test>
>
Where is the closing double quote?

Scott Sanders

From KJohnson at eclypse.org  Thu Jul 29 18:53:47 2004
From: KJohnson at eclypse.org (Ken Johnson)
Date: Thu Jul 29 18:54:06 2004
Subject: [mod_python] mptest.py is displayed, not interpreted
In-Reply-To: <F0A5FE45-E1AE-11D8-B956-000A95D2D288@apache.org>
Message-ID: <200407292254.i6TMs0ZV021019@host13.apollohosting.com>

Scott,

Thank you for pointing out this error.

Adding the missing closing double quote,
stopped and restarted the server,
same result.

Ken
 

-----Original Message-----
From: Scott Sanders [mailto:sanders@apache.org] 
Sent: Thursday, July 29, 2004 5:31 PM
To: mod_python user mailing list; KJohnson@eclypse.org
Subject: Re: [mod_python] mptest.py is displayed, not interpreted

> <Directory "/usr/local/apache_2.0.50/htdocs/test>
>
Where is the closing double quote?

Scott Sanders



From sanders at apache.org  Thu Jul 29 17:03:17 2004
From: sanders at apache.org (Scott Sanders)
Date: Thu Jul 29 19:03:21 2004
Subject: [mod_python] mptest.py is displayed, not interpreted
In-Reply-To: <200407292223.i6TMMxZV028135@host13.apollohosting.com>
References: <200407292223.i6TMMxZV028135@host13.apollohosting.com>
Message-ID: <7A80AC83-E1B3-11D8-B956-000A95D2D288@apache.org>


On Jul 29, 2004, at 3:22 PM, Ken Johnson wrote:

> Pointing my browser at http://192.168.1.8:8081/py-test/mptest.py
> displays the contents of modules/py-test/mptest.py.
>

<snip>

> <Directory "/usr/local/apache_2.0.50/htdocs/test>
>     AddHandler mod_python .py
>     PythonHandler mptest
>     PythonDebug On
> </Directory>
>

One is /py-test/, and one is /test/, which one is correct?

Scott Sanders

From vmanera at manord.com  Fri Jul 30 16:04:30 2004
From: vmanera at manord.com (Manera, Villiam)
Date: Fri Jul 30 10:14:19 2004
Subject: [mod_python] servlet
Message-ID: <52DC70C1C1575C418CB033523A29CF1410498E@exchange2000.manord.com>

I'm working for integrate mod_python servlet and mod_python.publisher.
 
firt af all some little problem:
1) If I leave in httpd.conf "ServerName localew.manord.com" when I start the
tutorial an alert tell me that:localew.manord.com can't be found, with this
statement comment all work fine
 
2)with the tutorial folder under DocumentRoot all work fine:
<Directory D:/discoE/wwwroot/cartelle_sito_mdn/mps_progetti/tutorial>
      SetHandler mod_python
      PythonHandler mod_python.servlet
      PythonDebug on
    </Directory>
but all my script don't stay under DocumentRoot, and with Alias statement I
can see them, but with servlet :
 
Alias /tutorial/ "D:/discoE/script/cgi/tutorial/"
<Directory "D:/discoE/script/cgi/tutorial">
      SetHandler mod_python
      PythonHandler mod_python.servlet
      PythonDebug on
 </Directory>
 
Forbidden You don't have permission to access /tutorial/ on this server
 
 
3) this is only for confirm:
 
I already have a Session instance from publischer program, and the function
made a lot of other work..
 
So in order to use my function on servlet a workaround may be:
 
 
class willybase(HTMLPage):
    py = {}
    use_session = False   <------------------------
    
    def prep(self):
        HTMLPage.prep(self) 
        self.session = adatta_ha.sessione(self.req,....) <--------
        self.use_session=True   <------------
        ........
 
In this way cleanup_session etc.. I think will work fine, and I have the
same function called from publisher and servlet
I'm right?

Villiam Manera 
Manifatture del Nord srl 
via Mazzacurati 6
42100 Reggio Emilia RE 
ITALY 

email : vmanera@manord.com 
www.pennyblack.com 

 
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://modpython.org/pipermail/mod_python/attachments/20040730/6cec8c88/attachment-0001.html
From dpopowich at comcast.net  Fri Jul 30 14:43:25 2004
From: dpopowich at comcast.net (Daniel Popowich)
Date: Fri Jul 30 13:43:47 2004
Subject: [mod_python] servlet
In-Reply-To: <52DC70C1C1575C418CB033523A29CF1410498E@exchange2000.manord.com>
References: <52DC70C1C1575C418CB033523A29CF1410498E@exchange2000.manord.com>
Message-ID: <16650.35005.285815.326206@fenway.local.>


> firt af all some little problem:
> 1) If I leave in httpd.conf "ServerName localew.manord.com" when I start the
> tutorial an alert tell me that:localew.manord.com can't be found, with this
> statement comment all work fine

Does this address resolve via DNS otherwise?

> 2)with the tutorial folder under DocumentRoot all work fine:
> <Directory D:/discoE/wwwroot/cartelle_sito_mdn/mps_progetti/tutorial>
>       SetHandler mod_python
>       PythonHandler mod_python.servlet
>       PythonDebug on
>     </Directory>
> but all my script don't stay under DocumentRoot, and with Alias statement I
> can see them, but with servlet :
>  
> Alias /tutorial/ "D:/discoE/script/cgi/tutorial/"
> <Directory "D:/discoE/script/cgi/tutorial">
>       SetHandler mod_python
>       PythonHandler mod_python.servlet
>       PythonDebug on
>  </Directory>
>  
> Forbidden You don't have permission to access /tutorial/ on this server

Does the apache process have access to this physical directory?

> 3) this is only for confirm:
>  
> I already have a Session instance from publischer program, and the function
> made a lot of other work..
>  
> So in order to use my function on servlet a workaround may be:
>  
>  
> class willybase(HTMLPage):
>     py = {}
>     use_session = False   <------------------------
>     
>     def prep(self):
>         HTMLPage.prep(self) 
>         self.session = adatta_ha.sessione(self.req,....) <--------
>         self.use_session=True   <------------
>         ........
>  
> In this way cleanup_session etc.. I think will work fine, and I have the
> same function called from publisher and servlet
> I'm right?

Should be fine.  In fact, a feature I'm considering for the next
verion is that use_session can refer to the class to instantiate for
session management.  In this way one could sublass
mod_python.Session.Session or create a class that implements the same
protocol.

Hope this helps!

Daniel

From dpopowich at comcast.net  Fri Jul 30 14:50:16 2004
From: dpopowich at comcast.net (Daniel Popowich)
Date: Fri Jul 30 13:50:33 2004
Subject: [mod_python] servlet
In-Reply-To: <52DC70C1C1575C418CB033523A29CF1410498E@exchange2000.manord.com>
References: <52DC70C1C1575C418CB033523A29CF1410498E@exchange2000.manord.com>
Message-ID: <16650.35416.586507.115146@fenway.local.>

> 3) this is only for confirm:
>  
> I already have a Session instance from publischer program, and the function
> made a lot of other work..
>  
> So in order to use my function on servlet a workaround may be:
>  
>  
> class willybase(HTMLPage):
>     py = {}
>     use_session = False   <------------------------
>     
>     def prep(self):
>         HTMLPage.prep(self) 
>         self.session = adatta_ha.sessione(self.req,....) <--------
>         self.use_session=True   <------------
>         ........
>  
> In this way cleanup_session etc.. I think will work fine, and I have the
> same function called from publisher and servlet
> I'm right?

Actually, I just thought of a problem.  Servlet instances span
requests, so when you set self.use_session = True in your prep()
method, then it will be True for the next request, as well.  You
probably want this:

     def prep(self):
     	 self.use_session = False
         HTMLPage.prep(self) 
         self.session = adatta_ha.sessione(self.req,....)
         self.use_session=True

Make sense?
	 
Daniel	 

From grahamd at dscpl.com.au  Sat Jul 31 19:13:26 2004
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Sat Jul 31 06:05:44 2004
Subject: [mod_python] Status of Mac OS X / Apache 1.3 / mod_python 2.7.10.
Message-ID: <7FA61E8F-E2C9-11D8-B9D4-000393DCF16E@dscpl.com.au>

I wanted to get mod_python working with the standard version of Apache 
(1.3) that
comes with Mac OS 10.3 but before I even tried I noted a number of 
posts in various
places on the net asking how to get it to work since they weren't even 
able to
get it to compile or if they did, the apache process died when 
mod_python was
loaded. In my search, I couldn't find anyone indicating that they had 
solved the
problem. The only positive indication was someone making available a 
prebuilt
version of mod_python but this was for Mac OS 10.1 and it has since 
been removed
from the net.

Actually trying it myself, I fixed the obvious problems with the 
makefiles and build
process but also found that the apache process died. Digging further, I 
found the
underlying problem was that Py_IsInitialized() always returned true, 
even on the
first time it was called from the python_init() function in 
mod_python.c. As such,
the required call to Py_Initialize() never occurred, nor did setup for 
threading.
Because initialisation of the interpreter never occurred, Python 
subsequently died
the first time a Python function was actually called. Adding a separate 
initialisation
flag in python_init() fixed the problem and so far on a simple example 
it is working
okay.

That said, what is the official status of mod_python 2.7.10 on Mac OS X 
with the
version of Apache (1.3) that comes with the OS?

Can post instructions/patch later if there is the interest.


--
Graham Dumpleton (grahamd@dscpl.com.au)

From Antonio at Memora.com  Sat Jul 31 09:24:56 2004
From: Antonio at Memora.com (Antonio Rodriguez)
Date: Sat Jul 31 08:25:06 2004
Subject: [mod_python] Status of Mac OS X / Apache 1.3 / mod_python 2.7.10.
In-Reply-To: <7FA61E8F-E2C9-11D8-B9D4-000393DCF16E@dscpl.com.au>
References: <7FA61E8F-E2C9-11D8-B9D4-000393DCF16E@dscpl.com.au>
Message-ID: <A1AF44AE-E2EC-11D8-963D-000A95AC6C3C@Memora.com>

Graham,

I was able to get it 2.7.10 to work on the stock apache with OSX by 
just downloading the latest python and doing a framework build (after 
moving aside the one that comes with OSX). This seems like it might 
have caused a lot of headaches but std. python build as a framework 
does pretty well on OSX.

AR


On Jul 31, 2004, at 4:13 AM, Graham Dumpleton wrote:

> I wanted to get mod_python working with the standard version of Apache 
> (1.3) that
> comes with Mac OS 10.3 but before I even tried I noted a number of 
> posts in various
> places on the net asking how to get it to work since they weren't even 
> able to
> get it to compile or if they did, the apache process died when 
> mod_python was
> loaded. In my search, I couldn't find anyone indicating that they had 
> solved the
> problem. The only positive indication was someone making available a 
> prebuilt
> version of mod_python but this was for Mac OS 10.1 and it has since 
> been removed
> from the net.
>
> Actually trying it myself, I fixed the obvious problems with the 
> makefiles and build
> process but also found that the apache process died. Digging further, 
> I found the
> underlying problem was that Py_IsInitialized() always returned true, 
> even on the
> first time it was called from the python_init() function in 
> mod_python.c. As such,
> the required call to Py_Initialize() never occurred, nor did setup for 
> threading.
> Because initialisation of the interpreter never occurred, Python 
> subsequently died
> the first time a Python function was actually called. Adding a 
> separate initialisation
> flag in python_init() fixed the problem and so far on a simple example 
> it is working
> okay.
>
> That said, what is the official status of mod_python 2.7.10 on Mac OS 
> X with the
> version of Apache (1.3) that comes with the OS?
>
> Can post instructions/patch later if there is the interest.
>
>
> --
> Graham Dumpleton (grahamd@dscpl.com.au)
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>

