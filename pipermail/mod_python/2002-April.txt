From jfk at metation.com  Mon Apr  1 09:50:46 2002
From: jfk at metation.com (=?iso-8859-1?q?J=F8rgen=20Fr=F8jk=20Kj=E6rsgaard=20{Metation}?=)
Date: Fri Jan  9 21:46:41 2004
Subject: [mod_python] mod_python under IIS?
Message-ID: <02040109504601.02567@grace.informaticon.dk>

I need to get mod_python running under MS IIS (basically because some people 
simply don't want to run Apache no matter how great it is). Has anyone done 
any work in that direction already? Running mod_python as a CGI script or 
Python as an ASP scripting language is not an option as I need to process the 
raw URL in Python.

thanks, jfk

-- 
J?rgen Fr?jk Kj?rsgaard, direkt?r og systemkonsulent
Metation aps - Kystvejen 29, DK-8000 ?rhus C
Web: www.metation.com  - Tlf: +45 8625 0038 - Mobil: +45 2925 6693

From anburger76 at hotmail.com  Mon Apr  1 12:09:51 2002
From: anburger76 at hotmail.com (Tony Burger)
Date: Fri Jan  9 21:46:41 2004
Subject: [mod_python] popen/popen2 usage?
Message-ID: <F152uNjVuMhvqgStMVh0001021a@hotmail.com>

An HTML attachment was scrubbed...
URL: http://mailman.modpython.org/pipermail/mod_python/attachments/20020401/668a0cb5/attachment.htm
-------------- next part --------------
An embedded message was scrubbed...
From: "Tony Burger" <anburger76@hotmail.com>
Subject: [mod_python] popen/popen2 usage?
Date: Sun, 31 Mar 2002 23:18:27 -0500
Size: 2785
Url: http://mailman.modpython.org/pipermail/mod_python/attachments/20020401/668a0cb5/attachment.eml
From s_lott at yahoo.com  Mon Apr  1 12:01:38 2002
From: s_lott at yahoo.com (Steven Lott)
Date: Fri Jan  9 21:46:41 2004
Subject: [mod_python] mod_python under IIS?
In-Reply-To: <02040109504601.02567@grace.informaticon.dk>
Message-ID: <20020401200138.49880.qmail@web9603.mail.yahoo.com>

Have you considered a simple CGI, ignoring mod_python?

While annoying (very heavy overhead from process forks), it will
work under a variety of web server configurations.

You must, of course, be absolutely certain that your CGI
applications do not expose any security holes.

You can use some of the mod_python modules that parse the
request and support creation of a response to do this.

I have a demo CGI framework used for education purposes.

--- Jørgen Frøjk Kjærsgaard {Metation} <jfk@metation.com> wrote:
> I need to get mod_python running under MS IIS (basically
> because some people 
> simply don't want to run Apache no matter how great it is).
> Has anyone done 
> any work in that direction already? Running mod_python as a
> CGI script or 
> Python as an ASP scripting language is not an option as I need
> to process the 
> raw URL in Python.
> 
> thanks, jfk
> 
> -- 
> Jørgen Frøjk Kjærsgaard, direktør og systemkonsulent
> Metation aps - Kystvejen 29, DK-8000 Århus C
> Web: www.metation.com  - Tlf: +45 8625 0038 - Mobil: +45 2925
> 6693
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://www.modpython.org/mailman/listinfo/mod_python


=====
--
S. Lott, CCP :-{)
S_LOTT@YAHOO.COM
http://www.mindspring.com/~slott1
Buccaneer #468: KaDiMa

Macintosh user: drinking upstream from the herd.

__________________________________________________
Do You Yahoo!?
Yahoo! Greetings - send holiday greetings for Easter, Passover
http://greetings.yahoo.com/

From modpython at xhaus.com  Mon Apr  1 15:45:15 2002
From: modpython at xhaus.com (Alan Kennedy)
Date: Fri Jan  9 21:46:41 2004
Subject: [mod_python] mod_python under IIS?
Message-ID: <200204012057.PAA132830@spool3.valueweb.net>

Hi,

I've never seen an embedded python for IIS. The only 
servers I know that are lucky enough to have such python 
embedding are Apache and AOLServer (PyWX)

http://www.idyll.org/~t/python9/pywx.html

The only reasonable (scalable) alternative I know of is 
FastCGI, which involves plugging a module into your 
webserver that passes the requests onto an external 
persistent threaded Python server, potentially on a 
different machine, or even multiple machines.

http://www.fastcgi.com/

There is a FastCGI module for IIS, There are several python 
modules/servers listed on the FastCGI home page.

I don't know IIS at all, but is there any way you can get 
IIS to pass requests onto COM objects? If so, then you can 
use Mark Hammond's excellent win32 extensions, which allow 
you to very easily write both COM servers and clients in 
python. 

http://www.python.org/windows/

Is there any specific reason why you don't want to use 
Python as a scripting language in ASP?

Best of luck,

Al.



---------------------------------------------
This message was sent using WebMail by CyberGate.
http://www.gate.net/webmail



From jfk at metation.com  Tue Apr  2 11:30:17 2002
From: jfk at metation.com (=?iso-8859-1?q?J=F8rgen=20Fr=F8jk=20Kj=E6rsgaard=20{Metation}?=)
Date: Fri Jan  9 21:46:41 2004
Subject: [mod_python] mod_python under IIS?
In-Reply-To: <20020401200138.49880.qmail@web9603.mail.yahoo.com>
References: <20020401200138.49880.qmail@web9603.mail.yahoo.com>
Message-ID: <02040211301700.00296@grace.informaticon.dk>

Mandag  1. April 2002 22:01 skrev du:
> Have you considered a simple CGI, ignoring mod_python?
>
> While annoying (very heavy overhead from process forks), it will
> work under a variety of web server configurations.

Well, there are two problems involved in using a CGI solution. One is 
performance, which isn't critical in all cases. Another problem is that I 
like to be able to use short, meningful URLs e.g. 
"http://somewhere.com/articles/20020215-1.html" instead of, say, 
"http://somewhere.com/cgi-bin/show.py?article-id=20020215-1"

Under Apache one could use mod_rewrite to rewrite urls of the former form to 
the latter. Do you happen to know if something similar is possible under IIS? 
I don't know much about IIS yet; until now I've only worked on Apache...

regards,
 
J?rgen Fr?jk Kj?rsgaard, direkt?r og systemkonsulent
Metation aps - Kystvejen 29, DK-8000 ?rhus C
Web: www.metation.com  - Tlf: +45 8625 0038 - Mobil: +45 2925 6693

From jfk at metation.com  Tue Apr  2 11:49:12 2002
From: jfk at metation.com (=?iso-8859-1?q?J=F8rgen=20Fr=F8jk=20Kj=E6rsgaard=20{Metation}?=)
Date: Fri Jan  9 21:46:41 2004
Subject: [mod_python] mod_python under IIS?
In-Reply-To: <200204012057.PAA132830@spool3.valueweb.net>
References: <200204012057.PAA132830@spool3.valueweb.net>
Message-ID: <02040211491201.00296@grace.informaticon.dk>

Mandag  1. April 2002 22:45 skrev du:
> Hi,
>
> I've never seen an embedded python for IIS. The only
> servers I know that are lucky enough to have such python
> embedding are Apache and AOLServer (PyWX)
>
> http://www.idyll.org/~t/python9/pywx.html
>
> The only reasonable (scalable) alternative I know of is
> FastCGI, which involves plugging a module into your
> webserver that passes the requests onto an external
> persistent threaded Python server, potentially on a
> different machine, or even multiple machines.
>
> http://www.fastcgi.com/
>
> There is a FastCGI module for IIS, There are several python
> modules/servers listed on the FastCGI home page.

This sounds like a plausible solution, I'll investigate it further.

> I don't know IIS at all, but is there any way you can get
> IIS to pass requests onto COM objects? If so, then you can
> use Mark Hammond's excellent win32 extensions, which allow
> you to very easily write both COM servers and clients in
> python.
>
> http://www.python.org/windows/

We are primarily a Unix house and have no COM expertice, but if the extension 
makes it very easy, it may well be the way to go.

For both these suggestions, the question is: will it allow me to get the raw 
URL, no matter what it is?

> Is there any specific reason why you don't want to use
> Python as a scripting language in ASP?

The ASP way is to mix logic and contents. We generate contents from external 
sources, e.g. XML. While it obviously would be possible to write an ASP page 
that interfaces to the content generator behind the scenes, It wouldn't be 
the most clean solution.

What I really would like is very simple: have IIS pass me the URL + CGI 
parameters, then I generate a page using some mod_python code and our own 
Python app and pass it back.

regards

J?rgen Fr?jk Kj?rsgaard, direkt?r og systemkonsulent
Metation aps - Kystvejen 29, DK-8000 ?rhus C
Web: www.metation.com  - Tlf: +45 8625 0038 - Mobil: +45 2925 6693

From modpython at xhaus.com  Tue Apr  2 07:16:18 2002
From: modpython at xhaus.com (Alan Kennedy)
Date: Fri Jan  9 21:46:41 2004
Subject: [mod_python] mod_python under IIS?
Message-ID: <200204021228.HAA39400@spool8.valueweb.net>

> For both these suggestions, the question is: will it
> allow me to get the raw URL, no matter what it is?

I think this is really 

1. A FastCGI question
2. An IIS question

and not a mod_python question.

I have no idea where you would find the answer to these 
questions.

Al.



---------------------------------------------
This message was sent using WebMail by CyberGate.
http://www.gate.net/webmail



From sandor.kopanyi at mailbox.hu  Wed Apr  3 09:41:14 2002
From: sandor.kopanyi at mailbox.hu (sandor.kopanyi@mailbox.hu)
Date: Fri Jan  9 21:46:41 2004
Subject: [mod_python] =?iso-8859-2?B?YXJndW1lbnQgbWF0Y2hpbmcgZm9yIGZvcm1z?=
Message-ID: <20020403074114.12400.qmail@web2.mailbox.hu>

Hi,

A mod_python newbie question about argument matching for forms:
I have a form for user registration, with 13 fields (name,
address, etc.) - I pass them to mod_python for processing.

But: if I don't give default values to the arguments, it fails,
saying 13 parameters expected, 3 got...

Which 3? Why those 3? And why works if I give default values?
If I use the req.form.list to extract the values, works fine.
But the other way is much more elegant...


The code:
def add_customer(addr_postal_code=None, addr_city=None, etc.):
   #etc.

This is not working without those None's.

Environment: RedHat 7.2, Python 1.5.2, mod_python 2.7.6, Apache
1.3.20 (mod_python config is copy-paste from doc).

----------------------------------
Related to this, a small config question:
in chapter 3.4 (Tutorial/Publisher Handler Makes it Easy) AddHandler
is used for Apache config, in 6.1 (Standard Handlers/Publisher Handler)
SetHandler. What's the difference?

Best regards,
Sandor

--------------------------------------------------
http://www.mailbox.hu - Mert levelezni kell...


From piet at cs.uu.nl  Thu Apr  4 10:33:23 2002
From: piet at cs.uu.nl (Piet van Oostrum)
Date: Fri Jan  9 21:46:41 2004
Subject: [mod_python] argument matching for forms
In-Reply-To: <20020403074114.12400.qmail@web2.mailbox.hu>
References: <20020403074114.12400.qmail@web2.mailbox.hu>
Message-ID: <wzsn6bj224.fsf@nono.cs.uu.nl>

>>>>> sandor.kopanyi@mailbox.hu (SK) writes:

SK> Hi,
SK> A mod_python newbie question about argument matching for forms:
SK> I have a form for user registration, with 13 fields (name,
SK> address, etc.) - I pass them to mod_python for processing.

SK> But: if I don't give default values to the arguments, it fails,
SK> saying 13 parameters expected, 3 got...

SK> Which 3? Why those 3? And why works if I give default values?
SK> If I use the req.form.list to extract the values, works fine.
SK> But the other way is much more elegant...

Probably the fields that were filled in in the form. Unfilled fields that
don't have a value in the form are probably not passed. Although I think
they should be passed.
-- 
Piet van Oostrum <piet@cs.uu.nl>
URL: http://www.cs.uu.nl/~piet [PGP]
Private email: P.van.Oostrum@hccnet.nl


From sandor.kopanyi at mailbox.hu  Thu Apr  4 11:34:54 2002
From: sandor.kopanyi at mailbox.hu (sandor.kopanyi@mailbox.hu)
Date: Fri Jan  9 21:46:42 2004
Subject: [mod_python] =?iso-8859-2?B?UmVbMl06?=
 =?iso-8859-2?B?W21vZF9weXRob25d?=
 =?iso-8859-2?B?YXJndW1lbnQ=?=
 =?iso-8859-2?B?bWF0Y2hpbmc=?=
 =?iso-8859-2?B?Zm9y?=
 =?iso-8859-2?B?Zm9ybXM=?=
In-Reply-To: <wzsn6bj224.fsf@nono.cs.uu.nl>
Message-ID: <20020404093454.16607.qmail@web2.mailbox.hu>

> SK> Hi,
> SK> A mod_python newbie question about argument matching for forms:
> SK> I have a form for user registration, with 13 fields (name,
> SK> address, etc.) - I pass them to mod_python for processing.
> 
> SK> But: if I don't give default values to the arguments, it fails,
> SK> saying 13 parameters expected, 3 got...
> 
> SK> Which 3? Why those 3? And why works if I give default values?
> SK> If I use the req.form.list to extract the values, works fine.
> SK> But the other way is much more elegant...
> 
> Probably the fields that were filled in in the form. Unfilled fields
> that
> don't have a value in the form are probably not passed. Although I
think
> they should be passed.

Thanks Piet,

Unfortunately happens idependent from the number of filled fields,
i.e. even if I fill all the fields. What I can see is that - if it
comes through :) - the unfilled fields values are ''s, i.e. empty
strings.

Sandor

--------------------------------------------------
http://www.mailbox.hu - Mert levelezni kell...




From matt at proweb.co.uk  Thu Apr  4 11:43:07 2002
From: matt at proweb.co.uk (Matt H)
Date: Fri Jan  9 21:46:42 2004
Subject: [mod_python] argument matching for forms
In-Reply-To: <wzsn6bj224.fsf@nono.cs.uu.nl>
References: <20020403074114.12400.qmail@web2.mailbox.hu>
	<wzsn6bj224.fsf@nono.cs.uu.nl>
Message-ID: <20020404114307.58b93be1.matt@proweb.co.uk>

> Probably the fields that were filled in in the form. Unfilled fields that
> don't have a value in the form are probably not passed. Although I think
> they should be passed.

no they shouldn't

the <form tag is a way of telling the browser how to lay out a form

the GET method is a way to tell the HTTP server what you are after

the POST method is a way to give the HTTP server information

browsers linking forms to POST/GET requests is an end user convenience

your code *must* accept that some or all of the fields will not be included for I may manually type

http://www.ewwef.com/page.html?var1=hello&var2=goodbye

Also how would you discriminate between a page request and a submission if you expected

http://www.ewwef.com/page.html?var1=&var2=

the solution to the poster's problem is a wrapper to his function that checks the parameters for validity (soemthign he shoudl be doing anyway!)

Matt







From jcea at argo.es  Thu Apr  4 16:58:35 2002
From: jcea at argo.es (Jesus Cea Avion)
Date: Fri Jan  9 21:46:42 2004
Subject: [mod_python] PythonAuthenHandler and PythonAuthzHandler
Message-ID: <3CAC6A1B.AA58CD35@argo.es>

"PythonAuthzHandler" is not documented in the last documentation
revision, at "http://www.modpython.org/live/mod_python-2.7.6/doc-html/".

The example in docs for "PythonAuthenHandler" doesn't work. Seems you
need use both, "PythonAuthenHandler" and "PythonAuthzHandler", one for
"authentication" and the other for "authorization".

-- 
Jesus Cea Avion                         _/_/      _/_/_/        _/_/_/
jcea@argo.es http://www.argo.es/~jcea/ _/_/    _/_/  _/_/    _/_/  _/_/
                                      _/_/    _/_/          _/_/_/_/_/
PGP Key Available at KeyServ   _/_/  _/_/    _/_/          _/_/  _/_/
"Things are not so easy"      _/_/  _/_/    _/_/  _/_/    _/_/  _/_/
"My name is Dump, Core Dump"   _/_/_/        _/_/_/      _/_/  _/_/
"El amor es poner tu felicidad en la felicidad de otro" - Leibniz

From jquinte at fadu.uba.ar  Thu Apr  4 15:28:31 2002
From: jquinte at fadu.uba.ar (Javier Quinteros)
Date: Fri Jan  9 21:46:42 2004
Subject: [mod_python] Same name, different directories...
Message-ID: <200204041235.PAA15434@www.fadu.uba.ar>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

Hi !!!
I've defined three Directories in my http.conf, all of them with python 
scripts inside. What i've noticed is that if I have more than one module 
called "module1.py" in different directories, mod_python is not able to work 
with both of them. It seems that it loads the first one (it doesn't matter 
which one) and after that, if I call the second one is the first one the one 
who answers me. After that I had to rename some modules just to avoid the 
possibility that mod_python use them the way he wants.

Is there any solution? I mean, I don't want to get one interpreter for each 
Directory I define.

Thanks in advance,

- -- 
- ---------------------------------
Javier Quinteros
jquinte@fadu.uba.ar
Secretar?a de Planificaci?n
Universidad de Buenos Aires
- ---------------------------------
Existe un solo lugar donde el Norte y el Sur del mundo se enfrentan en
igualdad de condiciones: es una cancha de f?tbol de Brasil, en la 
desembocadura
del r?o Amazonas. La l?nea del ecuador corta por la mitad el estadio Zerao, en
Amap?, de modo que cada equipo juega un tiempo en el sur y otro tiempo en el
norte.
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.0.6 (GNU/Linux)
Comment: For info see http://www.gnupg.org

iD8DBQE8rJtQdBzRnlFl4cgRAnPsAKDC1Q7KTH7QGL8XxdEPqvY9Zwud5gCfZHe0
sAcXkDQlrdfyrQvaq5rmuPc=
=qwm3
-----END PGP SIGNATURE-----

From grisha at modpython.org  Thu Apr  4 14:13:04 2002
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 21:46:42 2004
Subject: [mod_python] Same name, different directories...
In-Reply-To: <200204041235.PAA15434@www.fadu.uba.ar>
Message-ID: <Pine.BSF.4.32.0204041410500.67719-100000@localhost>

You can either use PythonInterpPerDirective, or manually force different
interpreter names with PythonInterpreter.

I recommend making sure you're using Python 2.2 if you're going to be
relying on multiple intepreter stuff.

Grisha

On Thu, 4 Apr 2002, Javier Quinteros wrote:

> -----BEGIN PGP SIGNED MESSAGE-----
> Hash: SHA1
>
> Hi !!!
> I've defined three Directories in my http.conf, all of them with python
> scripts inside. What i've noticed is that if I have more than one module
> called "module1.py" in different directories, mod_python is not able to work
> with both of them. It seems that it loads the first one (it doesn't matter
> which one) and after that, if I call the second one is the first one the one
> who answers me. After that I had to rename some modules just to avoid the
> possibility that mod_python use them the way he wants.
>
> Is there any solution? I mean, I don't want to get one interpreter for each
> Directory I define.
>
> Thanks in advance,
>
> - --
> - ---------------------------------
> Javier Quinteros
> jquinte@fadu.uba.ar
> Secretar?a de Planificaci?n
> Universidad de Buenos Aires
> - ---------------------------------
> Existe un solo lugar donde el Norte y el Sur del mundo se enfrentan en
> igualdad de condiciones: es una cancha de f?tbol de Brasil, en la
> desembocadura
> del r?o Amazonas. La l?nea del ecuador corta por la mitad el estadio Zerao, en
> Amap?, de modo que cada equipo juega un tiempo en el sur y otro tiempo en el
> norte.
> -----BEGIN PGP SIGNATURE-----
> Version: GnuPG v1.0.6 (GNU/Linux)
> Comment: For info see http://www.gnupg.org
>
> iD8DBQE8rJtQdBzRnlFl4cgRAnPsAKDC1Q7KTH7QGL8XxdEPqvY9Zwud5gCfZHe0
> sAcXkDQlrdfyrQvaq5rmuPc=
> =qwm3
> -----END PGP SIGNATURE-----
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://www.modpython.org/mailman/listinfo/mod_python
>


From jeffstearns at attbi.com  Thu Apr  4 11:51:48 2002
From: jeffstearns at attbi.com (Jeff Stearns)
Date: Fri Jan  9 21:46:42 2004
Subject: [mod_python] Same name, different directories...
References: <200204041235.PAA15434@www.fadu.uba.ar>
Message-ID: <003f01c1dc12$2a3dcda0$8001a8c0@SavageBeast.com>

This is probably a bug in import_module() in apache.py.  There are several
bugs in this function, and they show up in different ways sepending on how
you set PythonAutoReload and whether you use the publisher module.

I have tried various workarounds, but each workaround seems to expose a
different problem with this code.

Using unique names for each file is one thing that helps to reduce your
exposure to these bugs.  Turning on PythonAutoReload can help in some cases.

But rewriting import_module is probably what's really needed here.

-jeff stearns


----- Original Message -----
From: "Javier Quinteros" <jquinte@fadu.uba.ar>
To: <mod_python@modpython.org>
Sent: Thursday, April 04, 2002 10:28 AM
Subject: [mod_python] Same name, different directories...


> -----BEGIN PGP SIGNED MESSAGE-----
> Hash: SHA1
>
> Hi !!!
> I've defined three Directories in my http.conf, all of them with python
> scripts inside. What i've noticed is that if I have more than one module
> called "module1.py" in different directories, mod_python is not able to
work
> with both of them. It seems that it loads the first one (it doesn't matter
> which one) and after that, if I call the second one is the first one the
one
> who answers me. After that I had to rename some modules just to avoid the
> possibility that mod_python use them the way he wants.
>
> Is there any solution? I mean, I don't want to get one interpreter for
each
> Directory I define.
>
> Thanks in advance,
>
> - --
> - ---------------------------------
> Javier Quinteros
> jquinte@fadu.uba.ar
> Secretar?a de Planificaci?n
> Universidad de Buenos Aires
> - ---------------------------------
> Existe un solo lugar donde el Norte y el Sur del mundo se enfrentan en
> igualdad de condiciones: es una cancha de f?tbol de Brasil, en la
> desembocadura
> del r?o Amazonas. La l?nea del ecuador corta por la mitad el estadio
Zerao, en
> Amap?, de modo que cada equipo juega un tiempo en el sur y otro tiempo en
el
> norte.
> -----BEGIN PGP SIGNATURE-----
> Version: GnuPG v1.0.6 (GNU/Linux)
> Comment: For info see http://www.gnupg.org
>
> iD8DBQE8rJtQdBzRnlFl4cgRAnPsAKDC1Q7KTH7QGL8XxdEPqvY9Zwud5gCfZHe0
> sAcXkDQlrdfyrQvaq5rmuPc=
> =qwm3
> -----END PGP SIGNATURE-----
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://www.modpython.org/mailman/listinfo/mod_python
>


From grisha at modpython.org  Thu Apr  4 15:06:37 2002
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 21:46:42 2004
Subject: [mod_python] Same name, different directories...
In-Reply-To: <003f01c1dc12$2a3dcda0$8001a8c0@SavageBeast.com>
Message-ID: <Pine.BSF.4.32.0204041501460.68385-100000@localhost>

Well, import_module has been rewritten (it's in CVS, the branch-2-7-7
branch), but if I understood Javier correctly, he is using same module
names in different directories on the same virtual server, i.e. within the
same sub-interpreter. Since Python keeps track of modules by their name,
not the full path, in this case the namesake modules will definitely be at
conflict with one another.

Grisha

On Thu, 4 Apr 2002, Jeff Stearns wrote:

> This is probably a bug in import_module() in apache.py.  There are several
> bugs in this function, and they show up in different ways sepending on how
> you set PythonAutoReload and whether you use the publisher module.
>
> I have tried various workarounds, but each workaround seems to expose a
> different problem with this code.
>
> Using unique names for each file is one thing that helps to reduce your
> exposure to these bugs.  Turning on PythonAutoReload can help in some cases.
>
> But rewriting import_module is probably what's really needed here.
>
> -jeff stearns
>
>
> ----- Original Message -----
> From: "Javier Quinteros" <jquinte@fadu.uba.ar>
> To: <mod_python@modpython.org>
> Sent: Thursday, April 04, 2002 10:28 AM
> Subject: [mod_python] Same name, different directories...
>
>
> > -----BEGIN PGP SIGNED MESSAGE-----
> > Hash: SHA1
> >
> > Hi !!!
> > I've defined three Directories in my http.conf, all of them with python
> > scripts inside. What i've noticed is that if I have more than one module
> > called "module1.py" in different directories, mod_python is not able to
> work
> > with both of them. It seems that it loads the first one (it doesn't matter
> > which one) and after that, if I call the second one is the first one the
> one
> > who answers me. After that I had to rename some modules just to avoid the
> > possibility that mod_python use them the way he wants.
> >
> > Is there any solution? I mean, I don't want to get one interpreter for
> each
> > Directory I define.
> >
> > Thanks in advance,
> >
> > - --
> > - ---------------------------------
> > Javier Quinteros
> > jquinte@fadu.uba.ar
> > Secretar?a de Planificaci?n
> > Universidad de Buenos Aires
> > - ---------------------------------
> > Existe un solo lugar donde el Norte y el Sur del mundo se enfrentan en
> > igualdad de condiciones: es una cancha de f?tbol de Brasil, en la
> > desembocadura
> > del r?o Amazonas. La l?nea del ecuador corta por la mitad el estadio
> Zerao, en
> > Amap?, de modo que cada equipo juega un tiempo en el sur y otro tiempo en
> el
> > norte.
> > -----BEGIN PGP SIGNATURE-----
> > Version: GnuPG v1.0.6 (GNU/Linux)
> > Comment: For info see http://www.gnupg.org
> >
> > iD8DBQE8rJtQdBzRnlFl4cgRAnPsAKDC1Q7KTH7QGL8XxdEPqvY9Zwud5gCfZHe0
> > sAcXkDQlrdfyrQvaq5rmuPc=
> > =qwm3
> > -----END PGP SIGNATURE-----
> > _______________________________________________
> > Mod_python mailing list
> > Mod_python@modpython.org
> > http://www.modpython.org/mailman/listinfo/mod_python
> >
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://www.modpython.org/mailman/listinfo/mod_python
>


From ian at veryfresh.com  Thu Apr  4 12:07:11 2002
From: ian at veryfresh.com (Ian Clelland)
Date: Fri Jan  9 21:46:42 2004
Subject: [mod_python] Same name, different directories...
In-Reply-To: <200204041235.PAA15434@www.fadu.uba.ar>
References: <200204041235.PAA15434@www.fadu.uba.ar>
Message-ID: <20020404200711.GB19813@fullfactor.com>

On Thu, Apr 04, 2002 at 03:28:31PM -0300, Javier Quinteros wrote:
> I've defined three Directories in my http.conf, all of them with python 
> scripts inside. What i've noticed is that if I have more than one module 
> called "module1.py" in different directories, mod_python is not able to work 
> with both of them. It seems that it loads the first one (it doesn't matter 
> which one) and after that, if I call the second one is the first one the one 
> who answers me. After that I had to rename some modules just to avoid the 
> possibility that mod_python use them the way he wants.
> 
> Is there any solution? I mean, I don't want to get one interpreter for each 
> Directory I define.

The problem is that Python uses the module's file name -- without 
regard to its path -- as the module's name. A Python interpreter will 
also never load the same module twice, unless you use the 'reload' 
statement.

So the first time you 'import module1', Python loads and runs the first 
module1.py file it can find on sys.path. The second time you run the 
same import statement inside the same interpreter, Python does nothing, 
even if your sys.path is different that time.

It's just the way that Python works (and not mod_python in particular). 
There are probably three ways around this behaviour:

1) Give every module a unique filename.
2) Run seperate Python interpreters to handle different directories.
3) Look into using Python packages.

With packages, you should be able to distinguish between 
identically-named modules in different directories by calling them 
'directory1.module1' and 'directory2.module1'.

Hope this helps,

Ian

From fourie_willem at hotmail.com  Fri Apr  5 00:16:16 2002
From: fourie_willem at hotmail.com (Willem Fourie)
Date: Fri Jan  9 21:46:42 2004
Subject: [mod_python] mptest.py text does not interpret
Message-ID: <F82PiyAphwFutJLtosJ00000288@hotmail.com>

Dear reader

mptest.py is not being interpreted and simply displays the code in the 
browser. Other python files attempt to download. Please help.

Have made the proscribed mod's to conf (including AddModule mod_python.c) 
and it checks out OK. /server-info shows that python is indeed installed. 
(Apache/1.3.24 (Win32) mod_python/2.7.6 Python/2.2.1c1 PHP/4.1.3-dev)

It was mentioned that the mime type may not be maintained, but AddType 
application/x-httpd-py .py did not help.

Thanx in advance

_________________________________________________________________
Chat with friends online, try MSN Messenger: http://messenger.msn.com


From charney at charneyday.com  Thu Apr  4 18:15:53 2002
From: charney at charneyday.com (Reg Charney)
Date: Fri Jan  9 21:46:42 2004
Subject: [mod_python] mptest.py text does not interpret
References: <F82PiyAphwFutJLtosJ00000288@hotmail.com>
Message-ID: <3CAD08D9.3A1C3C5D@charneyday.com>

I had this same problem. Remove the AddType directive that refers to python
from the httpd.conf file. For some reason, mod_python is not implemented the
same way as PHP4,say.

Reg.

P.S. I never thanked others on the list that lead to this solution. My
apologies and thanks. I was trying to find the reason that I inserted the
AddType statement, but never did. By the time I reached that point, it was
"too late" to thank Ian Clelland <ian@veryfresh.com> and
"Gregory (Grisha) Trubetskoy" <grisha@modpython.org> for their help.

Willem Fourie wrote:

> Dear reader
>
> mptest.py is not being interpreted and simply displays the code in the
> browser. Other python files attempt to download. Please help.
>
> Have made the proscribed mod's to conf (including AddModule mod_python.c)
> and it checks out OK. /server-info shows that python is indeed installed.
> (Apache/1.3.24 (Win32) mod_python/2.7.6 Python/2.2.1c1 PHP/4.1.3-dev)
>
> It was mentioned that the mime type may not be maintained, but AddType
> application/x-httpd-py .py did not help.
>
> Thanx in advance
>
> _________________________________________________________________
> Chat with friends online, try MSN Messenger: http://messenger.msn.com
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://www.modpython.org/mailman/listinfo/mod_python



From fourie_willem at hotmail.com  Fri Apr  5 03:32:04 2002
From: fourie_willem at hotmail.com (Willem Fourie)
Date: Fri Jan  9 21:46:42 2004
Subject: [mod_python] mptest.py text does not interpret
Message-ID: <F176c4QzPW8AAkjtjsX0000090b@hotmail.com>

Hi Reg

Thanx very much for your reply, but unfortunately I had already removed the 
AddType (tried with and without).

When the ScriptAlias directory points to the WebDir (and mptest.py placed in 
that directory) then it shows the text sans interpretation.

With the config pointing to /python, and the file in that directory and the 
URL pointing to /python/mptest.py the server responds with "The server 
encountered an internal error or misconfiguration and was unable to complete 
your request"

Would appreciate ideas on other avenues perhaps.
Thanx


----Original Message Follows----
From: Reg Charney <charney@charneyday.com>
To: Willem Fourie <fourie_willem@hotmail.com>
CC: mod_python@modpython.org
Subject: Re: [mod_python] mptest.py text does not interpret
Date: Thu, 04 Apr 2002 18:15:53 -0800

I had this same problem. Remove the AddType directive that refers to python
from the httpd.conf file. For some reason, mod_python is not implemented the
same way as PHP4,say.

Reg.

P.S. I never thanked others on the list that lead to this solution. My
apologies and thanks. I was trying to find the reason that I inserted the
AddType statement, but never did. By the time I reached that point, it was
"too late" to thank Ian Clelland <ian@veryfresh.com> and
"Gregory (Grisha) Trubetskoy" <grisha@modpython.org> for their help.

Willem Fourie wrote:

 > Dear reader
 >
 > mptest.py is not being interpreted and simply displays the code in the
 > browser. Other python files attempt to download. Please help.
 >
 > Have made the proscribed mod's to conf (including AddModule mod_python.c)
 > and it checks out OK. /server-info shows that python is indeed installed.
 > (Apache/1.3.24 (Win32) mod_python/2.7.6 Python/2.2.1c1 PHP/4.1.3-dev)
 >
 > It was mentioned that the mime type may not be maintained, but AddType
 > application/x-httpd-py .py did not help.
 >
 > Thanx in advance
 >
 > _________________________________________________________________
 > Chat with friends online, try MSN Messenger: http://messenger.msn.com
 >
 > _______________________________________________
 > Mod_python mailing list
 > Mod_python@modpython.org
 > http://www.modpython.org/mailman/listinfo/mod_python


_______________________________________________
Mod_python mailing list
Mod_python@modpython.org
http://www.modpython.org/mailman/listinfo/mod_python


_________________________________________________________________
Join the worlds largest e-mail service with MSN Hotmail. 
http://www.hotmail.com


From charney at charneyday.com  Thu Apr  4 20:37:55 2002
From: charney at charneyday.com (Reg Charney)
Date: Fri Jan  9 21:46:42 2004
Subject: [mod_python] mptest.py text does not interpret
References: <F176c4QzPW8AAkjtjsX0000090b@hotmail.com>
Message-ID: <3CAD2A23.EA4E1F38@charneyday.com>

Could you please send a copy of the test program you are using. All my problems
started with an invalid test program. My "fixes" kept on making things worse and
worse until I asked the list.

Reg.

Willem Fourie wrote:

> Hi Reg
>
> Thanx very much for your reply, but unfortunately I had already removed the
> AddType (tried with and without).
>
> When the ScriptAlias directory points to the WebDir (and mptest.py placed in
> that directory) then it shows the text sans interpretation.
>
> With the config pointing to /python, and the file in that directory and the
> URL pointing to /python/mptest.py the server responds with "The server
> encountered an internal error or misconfiguration and was unable to complete
> your request"
>
> Would appreciate ideas on other avenues perhaps.
> Thanx
>
>



From sandor.kopanyi at mailbox.hu  Fri Apr  5 13:35:41 2002
From: sandor.kopanyi at mailbox.hu (sandor.kopanyi@mailbox.hu)
Date: Fri Jan  9 21:46:42 2004
Subject: [mod_python] =?iso-8859-2?B?UkU6?=
 =?iso-8859-2?B?W21vZF9weXRob25d?=
 =?iso-8859-2?B?YXJndW1lbnQ=?=
 =?iso-8859-2?B?bWF0Y2hpbmc=?=
 =?iso-8859-2?B?Zm9y?=
 =?iso-8859-2?B?Zm9ybXM=?=
Message-ID: <20020405113541.24258.qmail@web2.mailbox.hu>

[...]
> the <form tag is a way of telling the browser how to lay out a form
> 
> the GET method is a way to tell the HTTP server what you are after
> 
> the POST method is a way to give the HTTP server information
> 
> browsers linking forms to POST/GET requests is an end user convenience
> 
> your code *must* accept that some or all of the fields will 
> not be included for I may manually type
> 
> http://www.ewwef.com/page.html?var1=hello&var2=goodbye
> 
> Also how would you discriminate between a page request and a 
> submission if you expected
> 
> http://www.ewwef.com/page.html?var1=&var2=
> 
> the solution to the poster's problem is a wrapper to his 
> function that checks the parameters for validity (soemthign 
> he shoudl be doing anyway!)

Thanks Matt,
I'm doing anyway param. checking, I just was curious to understand,
why and what... Important is that now it works. BTW: do you know
some good intro about GET/POST? Of course, one can read the RFC
(and it should do it!), but a tutorial always helps... The ones
I found focus on HTML, not on GET/POST.

Best regards,
Sandor
Thanks Matt,

--------------------------------------------------
http://www.mailbox.hu - Mert levelezni kell...




From fourie_willem at hotmail.com  Fri Apr  5 13:59:01 2002
From: fourie_willem at hotmail.com (Willem Fourie)
Date: Fri Jan  9 21:46:42 2004
Subject: [mod_python] mptest.py text does not interpret
Message-ID: <F174zes92ukCSQOWl7h0000de0a@hotmail.com>

Hi Reg

1) mptest.py is:
from mod_python import apache

def handler(req):
	req.content_type = "text/plain"
	req.send_http_header()
	req.write("Hello World!")
	return apache.OK

2) and test.py (called from a form):
#!C:\Program Files\Python22\Lib
import cgi

def main():
	print "Content-type: text/html\n"
	form = cgi.FieldStorage()
	if form.has_key("firstname") and form["firstname"].value != "":
		print "<h1>Hello", form["firstname"].value, "</h1>"
	else:
		print "<h1>Error! Please enter first name.</h1>"

main()


1) displays text and 2) tries to download. Only when in webroot. In 
webroot/python it displays the internal error message.


Thanx then


----Original Message Follows----
From: Reg Charney <charney@charneyday.com>
To: Willem Fourie <fourie_willem@hotmail.com>
CC: mod_python@modpython.org
Subject: Re: [mod_python] mptest.py text does not interpret
Date: Thu, 04 Apr 2002 20:37:55 -0800

Could you please send a copy of the test program you are using. All my 
problems
started with an invalid test program. My "fixes" kept on making things worse 
and
worse until I asked the list.

Reg.

Willem Fourie wrote:

 > Hi Reg
 >
 > Thanx very much for your reply, but unfortunately I had already removed 
the
 > AddType (tried with and without).
 >
 > When the ScriptAlias directory points to the WebDir (and mptest.py placed 
in
 > that directory) then it shows the text sans interpretation.
 >
 > With the config pointing to /python, and the file in that directory and 
the
 > URL pointing to /python/mptest.py the server responds with "The server
 > encountered an internal error or misconfiguration and was unable to 
complete
 > your request"
 >
 > Would appreciate ideas on other avenues perhaps.
 > Thanx
 >
 >




_________________________________________________________________
Send and receive Hotmail on your mobile device: http://mobile.msn.com


From jquinte at fadu.uba.ar  Fri Apr  5 11:16:20 2002
From: jquinte at fadu.uba.ar (Javier Quinteros)
Date: Fri Jan  9 21:46:42 2004
Subject: [mod_python] Same name, different directories...
In-Reply-To: <Pine.BSF.4.32.0204041501460.68385-100000@localhost>
References: <Pine.BSF.4.32.0204041501460.68385-100000@localhost>
Message-ID: <200204050823.LAA28351@www.fadu.uba.ar>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

Well, I want to thank to Grisha, Ian and Jeff for the answers.
I've renamed some of the modules in conflict (as I have told you) and 
everything is working fine. Using different interpreters for different 
directories would have been another solution but that would imply a small 
lowdown in the performance (more memory, maybe swapping), especially if you 
plan to increase the number of directories with python scripts.

I will try in this days using Python packages as Ian recommended.

Comments will be appreciated..

- -- 
- ---------------------------------
Javier Quinteros
jquinte@fadu.uba.ar
Secretar?a de Planificaci?n
Universidad de Buenos Aires
- ---------------------------------
Existe un solo lugar donde el Norte y el Sur del mundo se enfrentan en
igualdad de condiciones: es una cancha de f?tbol de Brasil, en la 
desembocadura
del r?o Amazonas. La l?nea del ecuador corta por la mitad el estadio Zerao, en
Amap?, de modo que cada equipo juega un tiempo en el sur y otro tiempo en el
norte.
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.0.6 (GNU/Linux)
Comment: For info see http://www.gnupg.org

iD8DBQE8rbG1dBzRnlFl4cgRAiSBAJ9XfOax/f3mxQEek+QZnY6KM9lx8ACgpCOa
Tx+Rq5OoN6McNK3Du1D+z3g=
=FFVF
-----END PGP SIGNATURE-----

From s_lott at yahoo.com  Fri Apr  5 06:30:37 2002
From: s_lott at yahoo.com (Steven Lott)
Date: Fri Jan  9 21:46:42 2004
Subject: [mod_python] RE:[mod_python]argumentmatchingforforms
In-Reply-To: <20020405113541.24258.qmail@web2.mailbox.hu>
Message-ID: <20020405143037.31370.qmail@web9608.mail.yahoo.com>

Short version: get puts form arguments into the URL
post puts form arguments into a stream that can be read by
Apache/Modpython.

Generally, GET is a bad idea - form data needs to be encoded to
prevent problems creating a URL - there are limitations on size.

Always use POST - no encoding, no size limitations.

GET is the basic URL -> page loop in HTTP.  It is used for
simple non-form requests.  POST should always be used for form
data.

--- sandor.kopanyi@mailbox.hu wrote:
> [...]
> > the <form tag is a way of telling the browser how to lay out
> a form
> > 
> > the GET method is a way to tell the HTTP server what you are
> after
> > 
> > the POST method is a way to give the HTTP server information
> > 
> > browsers linking forms to POST/GET requests is an end user
> convenience
> > 
> > your code *must* accept that some or all of the fields will 
> > not be included for I may manually type
> > 
> > http://www.ewwef.com/page.html?var1=hello&var2=goodbye
> > 
> > Also how would you discriminate between a page request and a
> 
> > submission if you expected
> > 
> > http://www.ewwef.com/page.html?var1=&var2=
> > 
> > the solution to the poster's problem is a wrapper to his 
> > function that checks the parameters for validity (soemthign 
> > he shoudl be doing anyway!)
> 
> Thanks Matt,
> I'm doing anyway param. checking, I just was curious to
> understand,
> why and what... Important is that now it works. BTW: do you
> know
> some good intro about GET/POST? Of course, one can read the
> RFC
> (and it should do it!), but a tutorial always helps... The
> ones
> I found focus on HTML, not on GET/POST.
> 
> Best regards,
> Sandor
> Thanks Matt,
> 
> --------------------------------------------------
> http://www.mailbox.hu - Mert levelezni kell...
> 
> 
> 
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://www.modpython.org/mailman/listinfo/mod_python


=====
--
S. Lott, CCP :-{)
S_LOTT@YAHOO.COM
http://www.mindspring.com/~slott1
Buccaneer #468: KaDiMa

Macintosh user: drinking upstream from the herd.

__________________________________________________
Do You Yahoo!?
Yahoo! Tax Center - online filing with TurboTax
http://taxes.yahoo.com/

From fourie_willem at hotmail.com  Fri Apr  5 15:12:27 2002
From: fourie_willem at hotmail.com (Willem Fourie)
Date: Fri Jan  9 21:46:42 2004
Subject: [mod_python] mptest.py text does not interpret
Message-ID: <F146NV3LCTosnwO5UGX00000f61@hotmail.com>

Hi Reg

I've copied mptest and mptest.py (same content) to both webroot and 
webroot/python (the ScriptAlias dir). When I run the URL's I get:
1) http://server/mptest - displays text in browser
2) http://server/mptest.py - tries to download
3) http://server/python/mptest - displays text in browser
4) http://server/python/mptest.py - internal server error

It's the same with or without "AddType application/x-httpd-py .py"

Have a phat Phriday
Cheers then


----Original Message Follows----
From: Reg Charney <charney@charneyday.com>
To: Willem Fourie <fourie_willem@hotmail.com>
CC: mod_python@modpython.org
Subject: Re: [mod_python] mptest.py text does not interpret
Date: Thu, 04 Apr 2002 20:37:55 -0800

Could you please send a copy of the test program you are using. All my 
problems
started with an invalid test program. My "fixes" kept on making things worse 
and
worse until I asked the list.

Reg.

Willem Fourie wrote:

 > Hi Reg
 >
 > Thanx very much for your reply, but unfortunately I had already removed 
the
 > AddType (tried with and without).
 >
 > When the ScriptAlias directory points to the WebDir (and mptest.py placed 
in
 > that directory) then it shows the text sans interpretation.
 >
 > With the config pointing to /python, and the file in that directory and 
the
 > URL pointing to /python/mptest.py the server responds with "The server
 > encountered an internal error or misconfiguration and was unable to 
complete
 > your request"
 >
 > Would appreciate ideas on other avenues perhaps.
 > Thanx
 >
 >




_________________________________________________________________
Chat with friends online, try MSN Messenger: http://messenger.msn.com


From asaddi at philosophysw.com  Fri Apr  5 18:43:55 2002
From: asaddi at philosophysw.com (Allan Saddi)
Date: Fri Jan  9 21:46:42 2004
Subject: [mod_python] publisher security concerns
Message-ID: <20020405184014.S25745-100000@kalahari.flup.org>

Hi there,

I'm using mod_python 2.7.6 on FreeBSD. I was playing around with
the publisher handler today when I noticed something of concern.
I scoured the mailing list archives to see if it was mentioned
before, but I found no mention of it. (If it was discussed
before, please point me to the approximate date of the thread.)

Basically, if a module is loaded indirectly (via an import from
within another module), an outside user will be able to call
functions within that module afterward.

So, for example, if I have a script foo.py that imports pgdb
(PyGreSQL), and foo.py is later "published" by publisher,
afterward, I will be able to call functions within pgdb through
publisher. Note though that if a particular Apache child
interpreter instance has never loaded foo.py, it will
(rightfully) reject requests to pgdb.

The problem seems to lie in mod_python.apache.import_module(),
specifically this section of code:

        # keep track of file modification time and
        # try to reload it if it is newer
        if sys.modules.has_key(module_name):

            # the we won't even bother importing
            module = sys.modules[module_name]

            ...

When path is specified and not None (as it normally is when
import_module() is called from publisher), it is ignored if the
module already exists in the global modules list (sys.modules).

I'm a new mod_python user, so I'm not sure if this is a bug or
an intended feature. The impact of this behavior seems to be
limited to pure python modules, so thankfully, modules like os
cannot be exploited this way.  Essentially though, publisher is
exposing interfaces that the programmer may not know are
exposed. And that could be bad...

(Using my pgdb example, I was able to connect to my database
using the right URL... I wasn't able to do much else beyond
that, but that alone seemed scary enough.)

- Allan Saddi
  asaddi@philosophysw.com


From ian at veryfresh.com  Sat Apr  6 01:48:54 2002
From: ian at veryfresh.com (Ian Clelland)
Date: Fri Jan  9 21:46:42 2004
Subject: [mod_python] RE:[mod_python]argumentmatchingforforms
In-Reply-To: <20020405143037.31370.qmail@web9608.mail.yahoo.com>
References: <20020405113541.24258.qmail@web2.mailbox.hu> <20020405143037.31370.qmail@web9608.mail.yahoo.com>
Message-ID: <20020406094854.GC19813@fullfactor.com>

On Fri, Apr 05, 2002 at 06:30:37AM -0800, Steven Lott wrote:
> Short version: get puts form arguments into the URL
> post puts form arguments into a stream that can be read by
> Apache/Modpython.
...
> GET is the basic URL -> page loop in HTTP.  It is used for
> simple non-form requests.  POST should always be used for form
> data.

I'm sorry, but I have to strongly disagree with you on this. While web 
application designers have a tendency to treat GET and POST as 
interchangeable, they really have very different meanings in HTTP.

Long version:

GET should always be used when you are simply retrieving information 
from a web application. The parameters to the GET query, which do form 
part of the URL, should only be used to refine what information you are 
retrieving.

The important thing to remember about GET requests is that they are 
never supposed to have side effects. All it should do is show you 
something that is already on the server, or can be generated from data 
on the erver. GET request aren't supposed to actually 'do' anything, in 
terms of real-world effects, like changing things on the server, or 
sending an email message. This means that the browser should be free to 
re-send the request as many times as it wants to. It also means that 
the results can be cached (which is a good thing - the results of a GET 
query should stay relatively stable, at least over the short term)

POST requests, on the other hand, are specifically for sending data 
which is expected to modify the state of a web server. POST requests 
are expected to have side effects. Because of this, the browser is
*not allowed* to resubmit the request to the server without the user's 
explicit authorisation.

> Generally, GET is a bad idea - form data needs to be encoded to
> prevent problems creating a URL - there are limitations on size.
 
Yes, there is usually a limit imposed on the length of the URL, 
something like 4000 characters, but that should be enough for any 
request. If you ever go over that, you are probably doing something 
that GET was not designed for, like sending information to be saved on 
the server.

> Always use POST - no encoding, no size limitations.
 
POST queries, by default, use the same encoding as GET, 
application/x-www-form-urlencoded, when they are the results of 
submitting an HTML form. When you read POST form data using req.read(), 
you still have to decode strings like "param1=val1&param2=val2", just 
like in GET.

There is another standard for encoding POST data - multipart/form-data 
- which is useful when you want to send lots of binary data, such as a 
file upload. It is much less efficient for simple form data, though, 
and is more work to parse.


Sorry for the rant; I had to get that out :) I really do believe that
proper use of HTTP can only strengthen web applications, though (this
is the primary reason I am using mod_python now, instead of PHP).

--
Ian
<ian@veryfresh.com>

From sam at webslingerZ.com  Mon Apr  8 11:31:31 2002
From: sam at webslingerZ.com (Sam Brauer)
Date: Fri Jan  9 21:46:42 2004
Subject: [mod_python] strange runtime exception
Message-ID: <Pine.LNX.4.33.0204081119140.15787-100000@localhost.localdomain>

I have recently observed an intermittent exception that I think may be 
related to mod_python.  It may also be a Python problem, but I have only 
ever seen it occur under mod_python, so I thought I'd ask here first.

What happens is that I call code like this inside a handler:
utf8string = unicode(val, enc).encode('utf-8')
(where val is a string in an encoding identified by enc)

Most of the time (in fact, for days or even weeks) this works fine.  Then 
every so often I will get the following exception:

exceptions.RuntimeError: cannot unmarshal code objects in restricted 
execution mode
File "/usr/local/lib/python2.2/encodings/__init__.py", line 51, in 
search_function
mod = __import__(modname,globals(),locals(),'*')

Once I encounter this exception, I can hit the same url again and may or
may not get the exception again.  There seems to be no pattern to its
occurrence. But generally, once it occurs it will recur "at random" until
apache is restarted.

Has anyone else seen this before, or have any idea why it's happening?

Many thanks,
Sam

-- 
Sam Brauer
Systems Programmer
sam@webslingerZ.com


From jquinte at fadu.uba.ar  Mon Apr  8 16:19:18 2002
From: jquinte at fadu.uba.ar (Javier Quinteros)
Date: Fri Jan  9 21:46:42 2004
Subject: [mod_python] publisher security concerns
In-Reply-To: <20020405184014.S25745-100000@kalahari.flup.org>
References: <20020405184014.S25745-100000@kalahari.flup.org>
Message-ID: <200204081326.QAA03663@www.fadu.uba.ar>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

Hi !!!
If you are worried about exposing some scripts that should "only" be used 
from other modules importing them, there's an easy solution (and I think it's 
the right one)... ;-)

Suppose you've got a script called interfacedb.py in your directory and it's 
full of functions that access your DB without checking anything, because you 
supose that it was imported from the modules that effectively do the 
checkings. The solution is to put this statement at the beggining of the 
script:

__auth__ = {}

This way, you're telling apache that no one is authorize to access (execute) 
this script. You can only call the functions inside the script if you import 
it from other module. This way you should add this statement to every script 
you don't want to be execute directly, no matter what URL you ask your 
browser.

Sorry if I misunderstood your question....

Hope this help...

On Friday 05 April 2002 23:43, Allan Saddi wrote:
> Hi there,
>
> I'm using mod_python 2.7.6 on FreeBSD. I was playing around with
> the publisher handler today when I noticed something of concern.
> I scoured the mailing list archives to see if it was mentioned
> before, but I found no mention of it. (If it was discussed
> before, please point me to the approximate date of the thread.)
>
> Basically, if a module is loaded indirectly (via an import from
> within another module), an outside user will be able to call
> functions within that module afterward.
>
> So, for example, if I have a script foo.py that imports pgdb
> (PyGreSQL), and foo.py is later "published" by publisher,
> afterward, I will be able to call functions within pgdb through
> publisher. Note though that if a particular Apache child
> interpreter instance has never loaded foo.py, it will
> (rightfully) reject requests to pgdb.
>
> The problem seems to lie in mod_python.apache.import_module(),
> specifically this section of code:
>
>         # keep track of file modification time and
>         # try to reload it if it is newer
>         if sys.modules.has_key(module_name):
>
>             # the we won't even bother importing
>             module = sys.modules[module_name]
>
>             ...
>
> When path is specified and not None (as it normally is when
> import_module() is called from publisher), it is ignored if the
> module already exists in the global modules list (sys.modules).
>
> I'm a new mod_python user, so I'm not sure if this is a bug or
> an intended feature. The impact of this behavior seems to be
> limited to pure python modules, so thankfully, modules like os
> cannot be exploited this way.  Essentially though, publisher is
> exposing interfaces that the programmer may not know are
> exposed. And that could be bad...
>
> (Using my pgdb example, I was able to connect to my database
> using the right URL... I wasn't able to do much else beyond
> that, but that alone seemed scary enough.)
>
> - Allan Saddi
>   asaddi@philosophysw.com
>

- -- 
- ---------------------------------
Javier Quinteros
jquinte@fadu.uba.ar
Secretar?a de Planificaci?n
Universidad de Buenos Aires
- ---------------------------------
Existe un solo lugar donde el Norte y el Sur del mundo se enfrentan en
igualdad de condiciones: es una cancha de f?tbol de Brasil, en la 
desembocadura
del r?o Amazonas. La l?nea del ecuador corta por la mitad el estadio Zerao, en
Amap?, de modo que cada equipo juega un tiempo en el sur y otro tiempo en el
norte.
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.0.6 (GNU/Linux)
Comment: For info see http://www.gnupg.org

iD8DBQE8se02dBzRnlFl4cgRAilyAJ9HCNjVlEHoG/zbv/A1XSx3P98RkwCg5ATw
D4QDlDayZurKXPr+QjhRX9E=
=Ji5h
-----END PGP SIGNATURE-----

From asaddi at philosophysw.com  Mon Apr  8 13:34:11 2002
From: asaddi at philosophysw.com (Allan Saddi)
Date: Fri Jan  9 21:46:42 2004
Subject: [mod_python] publisher security concerns
In-Reply-To: <200204081326.QAA03663@www.fadu.uba.ar>
Message-ID: <20020408132027.E17910-100000@kalahari.flup.org>

Hi Javier,

That was very helpful, and yes, it does actually sound like the
"right" solution. :) The only drawback is that any third-party
modules (that is, modules that you didn't write yourself) will
have to be modified similarly. This may or may not be an easy
task, depending on the number of such modules you use in your
project. (And what about Python standard modules?)

I guess I'm basically looking for a "deny by default" type of
solution, which can easily be done by modifying publisher. But
such changes would break publisher's generalness and existing
apps built around publisher, so I guess it's not a very useful
thing to implement in the mod_python distribution.

Thanks.
- Allan

On Mon, 8 Apr 2002, Javier Quinteros wrote:

> Hi !!!
> If you are worried about exposing some scripts that should "only" be used
> from other modules importing them, there's an easy solution (and I think it's
> the right one)... ;-)
>
> Suppose you've got a script called interfacedb.py in your directory and it's
> full of functions that access your DB without checking anything, because you
> supose that it was imported from the modules that effectively do the
> checkings. The solution is to put this statement at the beggining of the
> script:
>
> __auth__ = {}
>
> This way, you're telling apache that no one is authorize to access (execute)
> this script. You can only call the functions inside the script if you import
> it from other module. This way you should add this statement to every script
> you don't want to be execute directly, no matter what URL you ask your
> browser.
>
> Sorry if I misunderstood your question....
>
> Hope this help...


From jquinte at fadu.uba.ar  Mon Apr  8 18:15:08 2002
From: jquinte at fadu.uba.ar (Javier Quinteros)
Date: Fri Jan  9 21:46:42 2004
Subject: [mod_python] publisher security concerns
In-Reply-To: <20020408132027.E17910-100000@kalahari.flup.org>
References: <20020408132027.E17910-100000@kalahari.flup.org>
Message-ID: <200204081522.SAA06372@www.fadu.uba.ar>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

Don't be worried about Python standard modules. The only things that anyone 
can execute via URL is the scripts you have in the Directory defined in 
apache. This means that all the third-party modules can be placed in 
/usr/local/python2/lib (or whatever) with Python standard modules and will 
not be exposed via apache.

Bye,

On Monday 08 April 2002 17:34, Allan Saddi wrote:
> Hi Javier,
>
> That was very helpful, and yes, it does actually sound like the
> "right" solution. :) The only drawback is that any third-party
> modules (that is, modules that you didn't write yourself) will
> have to be modified similarly. This may or may not be an easy
> task, depending on the number of such modules you use in your
> project. (And what about Python standard modules?)

- -- 
- ---------------------------------
Javier Quinteros
jquinte@fadu.uba.ar
Secretar?a de Planificaci?n
Universidad de Buenos Aires
- ---------------------------------
Existe un solo lugar donde el Norte y el Sur del mundo se enfrentan en
igualdad de condiciones: es una cancha de f?tbol de Brasil, en la 
desembocadura
del r?o Amazonas. La l?nea del ecuador corta por la mitad el estadio Zerao, en
Amap?, de modo que cada equipo juega un tiempo en el sur y otro tiempo en el
norte.
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.0.6 (GNU/Linux)
Comment: For info see http://www.gnupg.org

iD8DBQE8sghddBzRnlFl4cgRAi6AAJ9imwImXJLSSgT0r5/ZACI5pFzEUwCeOtRO
i94azxuFCdMoI1YMJ56qB6o=
=lQ1c
-----END PGP SIGNATURE-----

From asaddi at philosophysw.com  Mon Apr  8 15:05:28 2002
From: asaddi at philosophysw.com (Allan Saddi)
Date: Fri Jan  9 21:46:42 2004
Subject: [mod_python] publisher security concerns
In-Reply-To: <200204081522.SAA06372@www.fadu.uba.ar>
Message-ID: <20020408144431.D47255-100000@kalahari.flup.org>

I've found that this is only true when the module is loaded for
the first time. If the module is already loaded, regardless of
where it was loaded from, then you can access it via URL.

For example, since publisher.py imports base64, you can call
functions within base64 via URL:

  http://website/some/path/base64/encodestring?s=foobar

And this actually works for me. (Using FreeBSD 4.5, Apache
1.3.24, mod_python 2.7.6, Python 2.2)

My .htaccess is simply:

  PythonPath "['/some/directory', '/usr/local/lib/python2.2', '/usr/local/lib/python2.2/lib-dynload', '/usr/local/lib/python2.2/site-packages']"
  SetHandler python-program
  PythonHandler mod_python.publisher
  PythonDebug on

- Allan

On Mon, 8 Apr 2002, Javier Quinteros wrote:

> Don't be worried about Python standard modules. The only things that anyone
> can execute via URL is the scripts you have in the Directory defined in
> apache. This means that all the third-party modules can be placed in
> /usr/local/python2/lib (or whatever) with Python standard modules and will
> not be exposed via apache.
>
> Bye,


From jquinte at fadu.uba.ar  Mon Apr  8 20:00:44 2002
From: jquinte at fadu.uba.ar (Javier Quinteros)
Date: Fri Jan  9 21:46:42 2004
Subject: [mod_python] publisher security concerns
In-Reply-To: <20020408144431.D47255-100000@kalahari.flup.org>
References: <20020408144431.D47255-100000@kalahari.flup.org>
Message-ID: <200204081707.UAA07983@www.fadu.uba.ar>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

Allan:
????????You're right and now..... Houston, Houston. We have a problem....
Does anyone know how to solve this?

On Monday 08 April 2002 19:05, Allan Saddi wrote:
> I've found that this is only true when the module is loaded for
> the first time. If the module is already loaded, regardless of
> where it was loaded from, then you can access it via URL.
>
> For example, since publisher.py imports base64, you can call
> functions within base64 via URL:
>
>   http://website/some/path/base64/encodestring?s=foobar
>
> And this actually works for me. (Using FreeBSD 4.5, Apache
> 1.3.24, mod_python 2.7.6, Python 2.2)
>
> My .htaccess is simply:
>
>   PythonPath "['/some/directory', '/usr/local/lib/python2.2',
> '/usr/local/lib/python2.2/lib-dynload',
> '/usr/local/lib/python2.2/site-packages']" SetHandler python-program
>   PythonHandler mod_python.publisher
>   PythonDebug on
>
> - Allan

- -- 
- ---------------------------------
Javier Quinteros
jquinte@fadu.uba.ar
Secretar?a de Planificaci?n
Universidad de Buenos Aires
- ---------------------------------
Existe un solo lugar donde el Norte y el Sur del mundo se enfrentan en
igualdad de condiciones: es una cancha de f?tbol de Brasil, en la 
desembocadura
del r?o Amazonas. La l?nea del ecuador corta por la mitad el estadio Zerao, en
Amap?, de modo que cada equipo juega un tiempo en el sur y otro tiempo en el
norte.
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.0.6 (GNU/Linux)
Comment: For info see http://www.gnupg.org

iD8DBQE8siEcdBzRnlFl4cgRAuOiAKCqPxaDUL9KTi7BYLevQF9LDtynCQCgrj8Y
kWv27tFfobuj7JnU1kfptXo=
=L9NU
-----END PGP SIGNATURE-----

From jfk at metation.com  Tue Apr  9 10:11:33 2002
From: jfk at metation.com (=?iso-8859-1?q?J=F8rgen=20Fr=F8jk=20Kj=E6rsgaard=20{Metation}?=)
Date: Fri Jan  9 21:46:42 2004
Subject: [mod_python] Status for mod_python for Apache 2.0
Message-ID: <02040910113300.00295@grace.informaticon.dk>

Hi,

Apache 2.0 has come out. What is the status of mod_python for Apache 2.0? Is 
it being worked on at the moment; are there any release plans for a stable 
version?

regards, jfk

-- 
J?rgen Fr?jk Kj?rsgaard, direkt?r og systemkonsulent
Metation aps - Kystvejen 29, DK-8000 ?rhus C
Web: www.metation.com  - Tlf: +45 8625 0038 - Mobil: +45 2925 6693

From grisha at modpython.org  Tue Apr  9 08:38:54 2002
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 21:46:42 2004
Subject: [mod_python] Status for mod_python for Apache 2.0
In-Reply-To: <02040910113300.00295@grace.informaticon.dk>
Message-ID: <Pine.BSF.4.32.0204090838250.35893-100000@localhost>

It's being worked on. I wouldn't expect a release for another couple of
weeks at least.

Grisha

On Tue, 9 Apr 2002, [iso-8859-1] J?rgen Fr?jk Kj?rsgaard {Metation} wrote:

> Hi,
>
> Apache 2.0 has come out. What is the status of mod_python for Apache 2.0? Is
> it being worked on at the moment; are there any release plans for a stable
> version?
>
> regards, jfk
>
> --
> J?rgen Fr?jk Kj?rsgaard, direkt?r og systemkonsulent
> Metation aps - Kystvejen 29, DK-8000 ?rhus C
> Web: www.metation.com  - Tlf: +45 8625 0038 - Mobil: +45 2925 6693
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://www.modpython.org/mailman/listinfo/mod_python
>


From roy.smith at micromuse.com  Tue Apr  9 22:14:29 2002
From: roy.smith at micromuse.com (Roy Smith)
Date: Fri Jan  9 21:46:42 2004
Subject: [mod_python] Changes to modules seem to get cached
In-Reply-To: <200204091752.g39Hq1s39009@eden.ispol.com>
Message-ID: <47119735.3227379269@[192.168.1.33]>

I'm running:

Apache 1.3.22
Python 2.1.2
mod_python 2.7.6
Red Hat 6.2
Netscape 4.72

I'm just starting to play around with mod_python.  So far it seems pretty 
neat, but I don't quite understand how mod_python notices when a module 
gets updated, and what it does when it notices.

Most of the time, if I edit my python file and reload my browser window, I 
get the results of the new module.  Sometimes, however, it seems like I've 
got to reload twice to see the effect of the change.  This seems to be more 
likely to happen if the last version of the module generated an error. 
Even weirder, I can get into states where if I keep hitting reload, I'll 
cycle through a number of different earlier versions of the page.

I've got several httpd's running, and I'm guessing each time I do a reload 
it gets served by a different process, and apparantly each process has a 
different version of the module cached.  What I don't understand is why 
each process doesn't notice that the disk file has changed and re-import 
the module.  Or maybe my understanding of what's going on is totally off 
the wall?



--
Roy Smith
Staff Engineer
Visionary Model Development
roy.smith@micromuse.com
+1 914 747 7612


From stony8 at gmx.de  Wed Apr 10 06:54:45 2002
From: stony8 at gmx.de (Alexander Steinert)
Date: Fri Jan  9 21:46:43 2004
Subject: [mod_python] Changes to modules seem to get cached
In-Reply-To: <47119735.3227379269@[192.168.1.33]>; from roy.smith@micromuse.com on Tue, Apr 09, 2002 at 10:14:29PM -0400
References: <200204091752.g39Hq1s39009@eden.ispol.com> <47119735.3227379269@[192.168.1.33]>
Message-ID: <20020410065445.B642@tyche.svt.tu-harburg.de>

> I'm just starting to play around with mod_python.  So far it seems pretty 
> neat, but I don't quite understand how mod_python notices when a module 
> gets updated, and what it does when it notices.

Read
http://www.modpython.org/live/mod_python-2.7.6/doc-html/dir-other-par.html

IIRC, only modules imported by mod_python code (e.g. modules addressed
via URL using the publisher handler or modules specified as handlers in
httpd.conf) get reloaded automatically.

I _always_ reload apache before testing a change, because I often got
strange errors when I didn't.

HTH

Stony


From grisha at modpython.org  Wed Apr 10 10:56:06 2002
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 21:46:43 2004
Subject: [mod_python] publisher security concerns
In-Reply-To: <200204081707.UAA07983@www.fadu.uba.ar>
Message-ID: <Pine.BSF.4.32.0204101040140.50663-100000@localhost>

After a little bit of thinking, this looks like essentially a bug - the
Publisher (unlike the native mod_python handler) should not allow access
to files that are not in the directory which is being requested.

Another way to tackle it is require something like a __publish__ variable
to be defined inside the module, but I think that would be overkill.

This is obviously a serious security issue, so I will have to rush a
release out the door to fix it.

It seems that one can only (ab)use modules that already imported, and of
those only the ones that are native - but that in itself is already enough
to cause minial harm, e.g.:

http://website/some/path/os/makedirs?name=/tmp/hello

will create a direcroty "hello" in /tmp

I couldn't think of anything more harmful than this yet, but if someone
can come up with a more evil example, please e-mail me (off list perhaps).

Grisha



On Mon, 8 Apr 2002, Javier Quinteros wrote:

> -----BEGIN PGP SIGNED MESSAGE-----
> Hash: SHA1
>
> Allan:
> ????????You're right and now..... Houston, Houston. We have a problem....
> Does anyone know how to solve this?
>
> On Monday 08 April 2002 19:05, Allan Saddi wrote:
> > I've found that this is only true when the module is loaded for
> > the first time. If the module is already loaded, regardless of
> > where it was loaded from, then you can access it via URL.
> >
> > For example, since publisher.py imports base64, you can call
> > functions within base64 via URL:
> >
> >   http://website/some/path/base64/encodestring?s=foobar
> >
> > And this actually works for me. (Using FreeBSD 4.5, Apache
> > 1.3.24, mod_python 2.7.6, Python 2.2)
> >
> > My .htaccess is simply:
> >
> >   PythonPath "['/some/directory', '/usr/local/lib/python2.2',
> > '/usr/local/lib/python2.2/lib-dynload',
> > '/usr/local/lib/python2.2/site-packages']" SetHandler python-program
> >   PythonHandler mod_python.publisher
> >   PythonDebug on
> >
> > - Allan
>
> - --
> - ---------------------------------
> Javier Quinteros
> jquinte@fadu.uba.ar
> Secretar?a de Planificaci?n
> Universidad de Buenos Aires
> - ---------------------------------
> Existe un solo lugar donde el Norte y el Sur del mundo se enfrentan en
> igualdad de condiciones: es una cancha de f?tbol de Brasil, en la
> desembocadura
> del r?o Amazonas. La l?nea del ecuador corta por la mitad el estadio Zerao, en
> Amap?, de modo que cada equipo juega un tiempo en el sur y otro tiempo en el
> norte.
> -----BEGIN PGP SIGNATURE-----
> Version: GnuPG v1.0.6 (GNU/Linux)
> Comment: For info see http://www.gnupg.org
>
> iD8DBQE8siEcdBzRnlFl4cgRAuOiAKCqPxaDUL9KTi7BYLevQF9LDtynCQCgrj8Y
> kWv27tFfobuj7JnU1kfptXo=
> =L9NU
> -----END PGP SIGNATURE-----
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://www.modpython.org/mailman/listinfo/mod_python
>


From grisha at modpython.org  Wed Apr 10 18:06:04 2002
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 21:46:43 2004
Subject: [mod_python] Announce: 2.7.7
In-Reply-To: <200204081707.UAA07983@www.fadu.uba.ar>
Message-ID: <Pine.BSF.4.32.0204101755320.56871-100000@localhost>

I have released mod_python 2.7.7.

This release (as far as I could tell adequately) addresses the security
issue whereby a module indirectly imported by a published module could
then be accessed via the publisher.

It is highly recommended that you upgrade, especially if you use the
publisher.

A quick way to upgrade is to just replace the apache.py file and restart
httpd - everything else is pretty much the same except for the verion
number. Windows users should still be able to use the 2.7.6 DLL with the
new apache.py.

Grisha



From Nik.Barron at pennantplc.co.uk  Thu Apr 11 16:18:17 2002
From: Nik.Barron at pennantplc.co.uk (Nik Barron)
Date: Fri Jan  9 21:46:43 2004
Subject: [mod_python] Query about authentication/authorization win Apache on Win32
Message-ID: <F17550784FF9D111B7F100E02921B24741E828@NT-SOTON-001>

Hi,

I have a problem getting authentication/authorization working. In Apache I
have the following:

   <IfModule mod_python.c>
    <Directory "C:/Programs/Internet/Apache/htdocs/plcsreqs">
	AddHandler python-program .py
   	PythonHandler test2
	PythonAuthenHandler test2
   	PythonDebug on

	AuthType Basic
	AuthName "nicepeople"
	AuthUserFile "C:/Programs/Internet/Apache/conf/users"
	Require valid-user
    </Directory>
  </IfModule>

The Auth... stuff works fine for a "normal" directory, so the file is
readable etc, and my mod_python script works fine with no authentication.

My test script has an authenhandler as follows:

  def authenhandler(req):
	
	global user

	pw = req.get_basic_auth_pw()
	user = req.connection.user
	
	return apache.OK

Currently all I want to do is grab the user's name from their Apache login.

Now, if the user logs in to another page on the site before going to the
mod_python script, everything works as expected and the username is passed
to the rest of my code in the global variable 'user'. 

But if you go directly to the mod_python script (e.g.
http://myhost/plcsreq/test.py), it goes through as "None", and the broswer
doesn't pop up a username/password box.

I'm guessing this is going to be some stupid error on my part, but I can't
seem to get it working. Any suggestions most welcome.

Thanks!

Nick Barron
Manager, E-Services Division
Pennant Information Services Ltd -- Registered in England No. 3772667
PGP: A94C 4190 026E 3E02 6D50  C8FA 8620 3091 FF34 533D

From reitz at inworks.de  Thu Apr 11 17:05:59 2002
From: reitz at inworks.de (Andre Reitz)
Date: Fri Jan  9 21:46:43 2004
Subject: [mod_python] Announce: 2.7.7
In-Reply-To: <Pine.BSF.4.32.0204101755320.56871-100000@localhost>
References: <200204081707.UAA07983@www.fadu.uba.ar>
	<Pine.BSF.4.32.0204101755320.56871-100000@localhost>
Message-ID: <20020411170559.5277a53d.reitz@inworks.de>

On Wed, 10 Apr 2002 18:06:04 -0400 (EDT)
"Gregory (Grisha) Trubetskoy" <grisha@modpython.org> wrote:

> 
> I have released mod_python 2.7.7.
> 
> This release (as far as I could tell adequately) addresses the security
> issue whereby a module indirectly imported by a published module could
> then be accessed via the publisher.
> 
> It is highly recommended that you upgrade, especially if you use the
> publisher.
> 
> A quick way to upgrade is to just replace the apache.py file and restart
> httpd - everything else is pretty much the same except for the verion
> number. Windows users should still be able to use the 2.7.6 DLL with the
> new apache.py.
> 
> Grisha

Did you forget to patch apache.py?? (The boo boo)


def setup_cgi(req):
    """
    Replace sys.stdin and stdout with an objects that read/write to
    the socket, as well as substitute the os.environ.
    Returns (environ, stdin, stdout) which you must save and then use
    with restore_nocgi().
    """

    # save env
    env = os.environ.copy()            <------(1)
    
    si = sys.stdin
    so = sys.stdout

    env = build_cgi_env(req)
 
    for k in env.keys():
        os.environ[k] = env[k]

    sys.stdout = CGIStdout(req)
    sys.stdin = CGIStdin(req)

    sys.argv = [] # keeps cgi.py happy

    return env, si, so		<--------(2)
> 

(1) : originalenv=os.environ.copy()
(2) : return originalenv,si,so




> 
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://www.modpython.org/mailman/listinfo/mod_python


-- 
_____________________________________________
inworks GmbH            Andre Reitz		
Magirusstrasse 44	Tel. 0731/93 80 7-21
89077 Ulm		http://www.inworks.de


From zoppi at cli.di.unipi.it  Thu Apr 11 18:27:44 2002
From: zoppi at cli.di.unipi.it (Giorgio Zoppi)
Date: Fri Jan  9 21:46:43 2004
Subject: [mod_python] publisher security concerns
In-Reply-To: <Pine.BSF.4.32.0204101040140.50663-100000@localhost>
Message-ID: <Pine.GSO.4.00.10204111821520.4173-100000@carlotta.cli.di.unipi.it>

On Wed, 10 Apr 2002, Gregory (Grisha) Trubetskoy wrote:

> 
> After a little bit of thinking, this looks like essentially a bug - the
> Publisher (unlike the native mod_python handler) should not allow access
> to files that are not in the directory which is being requested.
> 
> Another way to tackle it is require something like a __publish__ variable
> to be defined inside the module, but I think that would be overkill.
> 
> This is obviously a serious security issue, so I will have to rush a
> release out the door to fix it.

You can allow people to list security policies.
For example: 
- these modules are safe, and can be used, ala default deny stance.
This however doesn't solve the issue, but allow to restrict
potential problems.



From grisha at modpython.org  Thu Apr 11 13:07:51 2002
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 21:46:43 2004
Subject: [mod_python] Announce: 2.7.7
In-Reply-To: <20020411170559.5277a53d.reitz@inworks.de>
Message-ID: <Pine.BSF.4.32.0204111304190.66803-100000@localhost>

My appologies - I must have forgotten to check it in after the patch or
something...

On Thu, 11 Apr 2002, Andre Reitz wrote:

> On Wed, 10 Apr 2002 18:06:04 -0400 (EDT)
> "Gregory (Grisha) Trubetskoy" <grisha@modpython.org> wrote:
>
> >
> > I have released mod_python 2.7.7.
> >
> > This release (as far as I could tell adequately) addresses the security
> > issue whereby a module indirectly imported by a published module could
> > then be accessed via the publisher.
> >
> > It is highly recommended that you upgrade, especially if you use the
> > publisher.
> >
> > A quick way to upgrade is to just replace the apache.py file and restart
> > httpd - everything else is pretty much the same except for the verion
> > number. Windows users should still be able to use the 2.7.6 DLL with the
> > new apache.py.
> >
> > Grisha
>
> Did you forget to patch apache.py?? (The boo boo)
>
>
> def setup_cgi(req):
>     """
>     Replace sys.stdin and stdout with an objects that read/write to
>     the socket, as well as substitute the os.environ.
>     Returns (environ, stdin, stdout) which you must save and then use
>     with restore_nocgi().
>     """
>
>     # save env
>     env = os.environ.copy()            <------(1)
>
>     si = sys.stdin
>     so = sys.stdout
>
>     env = build_cgi_env(req)
>
>     for k in env.keys():
>         os.environ[k] = env[k]
>
>     sys.stdout = CGIStdout(req)
>     sys.stdin = CGIStdin(req)
>
>     sys.argv = [] # keeps cgi.py happy
>
>     return env, si, so		<--------(2)
> >
>
> (1) : originalenv=os.environ.copy()
> (2) : return originalenv,si,so
>
>
>
>
> >
> > _______________________________________________
> > Mod_python mailing list
> > Mod_python@modpython.org
> > http://www.modpython.org/mailman/listinfo/mod_python
>
>
> --
> _____________________________________________
> inworks GmbH            Andre Reitz
> Magirusstrasse 44	Tel. 0731/93 80 7-21
> 89077 Ulm		http://www.inworks.de
>


From reitz at inworks.de  Thu Apr 11 18:10:41 2002
From: reitz at inworks.de (Andre Reitz)
Date: Fri Jan  9 21:46:43 2004
Subject: [mod_python] Announce: 2.7.7
In-Reply-To: <Pine.BSF.4.32.0204111304190.66803-100000@localhost>
References: <20020411170559.5277a53d.reitz@inworks.de>
	<Pine.BSF.4.32.0204111304190.66803-100000@localhost>
Message-ID: <20020411181041.38859da7.reitz@inworks.de>

On Thu, 11 Apr 2002 13:07:51 -0400 (EDT)
"Gregory (Grisha) Trubetskoy" <grisha@modpython.org> wrote:

> 
> My appologies - I must have forgotten to check it in after the patch or
> something...
> 
Will you release Version 2.7.8 tomorrow with the bugfix included? :)

Greetings, Andre'

> On Thu, 11 Apr 2002, Andre Reitz wrote:
> 
> > On Wed, 10 Apr 2002 18:06:04 -0400 (EDT)
> > "Gregory (Grisha) Trubetskoy" <grisha@modpython.org> wrote:
> >
> > >
> > > I have released mod_python 2.7.7.
> > >
> > > This release (as far as I could tell adequately) addresses the security
> > > issue whereby a module indirectly imported by a published module could
> > > then be accessed via the publisher.
> > >
> > > It is highly recommended that you upgrade, especially if you use the
> > > publisher.
> > >
> > > A quick way to upgrade is to just replace the apache.py file and restart
> > > httpd - everything else is pretty much the same except for the verion
> > > number. Windows users should still be able to use the 2.7.6 DLL with the
> > > new apache.py.
> > >
> > > Grisha
> >
> > Did you forget to patch apache.py?? (The boo boo)
> >
> >
> > def setup_cgi(req):
> >     """
> >     Replace sys.stdin and stdout with an objects that read/write to
> >     the socket, as well as substitute the os.environ.
> >     Returns (environ, stdin, stdout) which you must save and then use
> >     with restore_nocgi().
> >     """
> >
> >     # save env
> >     env = os.environ.copy()            <------(1)
> >
> >     si = sys.stdin
> >     so = sys.stdout
> >
> >     env = build_cgi_env(req)
> >
> >     for k in env.keys():
> >         os.environ[k] = env[k]
> >
> >     sys.stdout = CGIStdout(req)
> >     sys.stdin = CGIStdin(req)
> >
> >     sys.argv = [] # keeps cgi.py happy
> >
> >     return env, si, so		<--------(2)
> > >
> >
> > (1) : originalenv=os.environ.copy()
> > (2) : return originalenv,si,so
> >
> >
> >
> >
> > >
> > > _______________________________________________
> > > Mod_python mailing list
> > > Mod_python@modpython.org
> > > http://www.modpython.org/mailman/listinfo/mod_python
> >
> >
> > --
> > _____________________________________________
> > inworks GmbH            Andre Reitz
> > Magirusstrasse 44	Tel. 0731/93 80 7-21
> > 89077 Ulm		http://www.inworks.de
> >
> 


-- 
_____________________________________________
inworks GmbH            Andre Reitz		
Magirusstrasse 44	Tel. 0731/93 80 7-21
89077 Ulm		http://www.inworks.de


From chris at vindaloo.com  Thu Apr 11 15:31:10 2002
From: chris at vindaloo.com (Christopher Sean Hilton)
Date: Fri Jan  9 21:46:43 2004
Subject: [mod_python] file question with mod_python
In-Reply-To: <Pine.BSF.4.32.0204111304190.66803-100000@localhost>; from grisha@modpython.org on Thu, Apr 11, 2002 at 01:07:51PM -0400
References: <20020411170559.5277a53d.reitz@inworks.de> <Pine.BSF.4.32.0204111304190.66803-100000@localhost>
Message-ID: <20020411153110.B2101@andale.vindaloo.com>

I'm trying to create a script to handle a file upload from a form with 
mod_python. I know that I should be looking into the util module but I've 
really got no clue about how to get started. Has anyone got some words of 
wisdom to put me on the right track? For more background I'd like to have a 
remote program encode a transaction in xml and post that file to me so I can 
unwrap it and apply the transaction to my database.

Thanks
Chris

-- 
Chris Hilton                                 chilton-at-vindaloo-dot-com
------------------------------------------------------------------------
                "All I was doing was trying to get home from work!"
                                                 -- Rosa Parks

From tree at basistech.com  Thu Apr 11 16:14:14 2002
From: tree at basistech.com (Tom Emerson)
Date: Fri Jan  9 21:46:43 2004
Subject: [mod_python] file question with mod_python
In-Reply-To: <20020411153110.B2101@andale.vindaloo.com>
References: <20020411170559.5277a53d.reitz@inworks.de>
	<Pine.BSF.4.32.0204111304190.66803-100000@localhost>
	<20020411153110.B2101@andale.vindaloo.com>
Message-ID: <15541.61078.473435.259679@magrathea.basistech.com>

Christopher Sean Hilton writes:
> I'm trying to create a script to handle a file upload from a form with 
> mod_python. I know that I should be looking into the util module but I've 
> really got no clue about how to get started. Has anyone got some words of 
> wisdom to put me on the right track?

I've done this using publisher: it's certainly the easiest way.

Given a form along the lines of:

<form action="process.py/doit" method="POST" enctype="multipart/form-data">
<b>Filename</b>: <input type="file" name="file">
</form>

And a form handler "doit" in process.py:

def doit(req, file):
    # ...

The 'file' argument is a file object representing the uploaded file:
you can read from this as you would any other file.

You should check to make sure that the file has a non-zero length:

import os, stat
statinfo = os.fstat(file.fileno())
if statinfo[stat.ST_SIZE] > 0:
    # process the text
else:
    # it's an empty file, or it didn't exist!

You should also look at the content type of the uploaded file. You can
access this via the form table in the request record:

_file = req.form['file']
if _file.type == "text/plain":
    # process plain text

That should be enough to get you started, I expect.

    -tree

-- 
Tom Emerson                                          Basis Technology Corp.
Sr. Computational Linguist                         http://www.basistech.com
  "Beware the lollipop of mediocrity: lick it once and you suck forever"

From Nik.Barron at pennantplc.co.uk  Fri Apr 12 12:18:51 2002
From: Nik.Barron at pennantplc.co.uk (Nik Barron)
Date: Fri Jan  9 21:46:43 2004
Subject: [mod_python] mod_python.publisher problems: 404s on second and subsequent hits
Message-ID: <F17550784FF9D111B7F100E02921B24741E83A@NT-SOTON-001>

I've been trying to get pubisher working using the example from the docs
(Chapter 6); I have "Hello.py" and the Apache config as in the docs under
section 6.1.1, running under Apache on Win32

The first time the URL is accessed everything works as expected. After that,
all I get is a 404 error until the server is restarted. I'm guessing I need
something to make the module persistent

Any ideas? There's nothing obvious in the logs, other than the 200 for the
first hit and 404s after that.

Thanks in advance,

Nick Barron
Manager, E-Services Division
Pennant Information Services Ltd -- Registered in England No. 3772667
PGP: A94C 4190 026E 3E02 6D50  C8FA 8620 3091 FF34 533D

From msdemlei at cl.uni-heidelberg.de  Sat Apr 13 18:15:47 2002
From: msdemlei at cl.uni-heidelberg.de (Markus Demleitner)
Date: Fri Jan  9 21:46:43 2004
Subject: [mod_python] What's the deal with _apachemodule?
Message-ID: <20020413161547.GB23274@tucana.cl.uni-heidelberg.de>

Hi list,

I'm trying to compile modpython 2.7.7 together with apache 1.3.23
and python 2.2 -- which works after some fiddling with the libs
python was linked to.  I know that the prerequisites don't state 
that 2.2 is supported, but I couldn't see how my problem could
be linked with the python version.

When I'm actually trying to let some test script run, I get
Traceback (most recent call last):
  File "/home/unimut/www/cgi-bin/modpython.py", line 4, in ?
    from mod_python import apache
  File "/usr/local/lib/python2.2/site-packages/mod_python/apache.py", line 55, in ?
    import _apache
ImportError: No module named _apache
in the server log.

That's fair enough, because there is no _apachemodule.so in
.../site-packages/mod_python, or anywhere else on the
python path.

Now, I say to myself, it's got be somewhere and check the
source directory -- lo and behold, there's _apachemodule.o
all right.  So, I link it to a dso -- and only get an undefined
symbol MpServer_Type.  That's in one of the .o's in .../src,
so I simply link all .o together.

The resulting _apachemodule.so says:
  File "/home/unimut/www/cgi-bin/modpython.py", line 4, in ?
    from mod_python import apache
  File "/usr/local/lib/python2.2/site-packages/mod_python/apache.py", line 55, in ?
    import _apache
ImportError: /usr/local/lib/python2.2/site-packages/mod_python/_apachemodule.so: undefined symbol: ap_log_error

This symbol is imported by _apachemodule.o itself -- so it's
unlikely that I have overlinked.

At this point I gave up, thinking I must be doing something extraordinarily
stupid.

So, what's the deal?  _apachemodule.so isn't mentioned anywhere in the
source tree, but it seems to be required to satisfy the import _apache
statement.  What might the solution to this riddle be?

        Markus

From rien at yeepa.org  Sat Apr 13 22:58:19 2002
From: rien at yeepa.org (Adrien Plisson)
Date: Fri Jan  9 21:46:43 2004
Subject: [mod_python] What's the deal with _apachemodule?
References: <20020413161547.GB23274@tucana.cl.uni-heidelberg.de>
Message-ID: <001001c1e32d$f15aae90$2cee4cd4@RANDOM>

From: "Markus Demleitner" <msdemlei@cl.uni-heidelberg.de>
> ...
> So, what's the deal?  _apachemodule.so isn't mentioned anywhere in the
> source tree, but it seems to be required to satisfy the import _apache
> statement.  What might the solution to this riddle be?

if i remember right, this problem is due to the fact the the _apache module
works *only* in an apache environment, that is, only when imported in a
module which is called from mod_python which runs on a launched apache
server.

quoted from the doc:
"4.3 apache - Access to Apache Internals.

The Python Application Programmer interface to Apache internals is contained
in a module appropriately named
apache, located inside the mod python package. This module provides some
important objects that map to Apache
internal structures, as well as some useful functions, all documented below.
The apache module can only be imported by a script running under mod python.
This is because it depends on a
built-in module apache provided by mod python."

here it is, don't try to test mod_python from a standalone script.

i hope i 'd been helpful.

--
rien


From msdemlei at cl.uni-heidelberg.de  Sun Apr 14 00:01:21 2002
From: msdemlei at cl.uni-heidelberg.de (msdemlei@cl.uni-heidelberg.de)
Date: Fri Jan  9 21:46:43 2004
Subject: [mod_python] What's the deal with _apachemodule?
In-Reply-To: <001001c1e32d$f15aae90$2cee4cd4@RANDOM>
References: <20020413161547.GB23274@tucana.cl.uni-heidelberg.de> <001001c1e32d$f15aae90$2cee4cd4@RANDOM>
Message-ID: <20020414000121.A11915@ferkel.cl.uni-heidelberg.de>

On Sat, Apr 13, 2002 at 10:58:19PM +0200, Adrien Plisson wrote:
> From: "Markus Demleitner" <msdemlei@cl.uni-heidelberg.de>
> > ...
> > So, what's the deal?  _apachemodule.so isn't mentioned anywhere in the
> > source tree, but it seems to be required to satisfy the import _apache
> > statement.  What might the solution to this riddle be?
> 
> if i remember right, this problem is due to the fact the the _apache module
> works *only* in an apache environment, that is, only when imported in a
> module which is called from mod_python which runs on a launched apache
> server.
> 
> quoted from the doc:
> "4.3 apache - Access to Apache Internals.
> 
> The Python Application Programmer interface to Apache internals is contained
> in a module appropriately named
> apache, located inside the mod python package. This module provides some
> ...
Well, yes, I'd expect that much, but I was not talking about 
apache.py but about _apachemodule.so of which I found no trace 
in the distribution:  apache.py imports _apache and can't do so
on my system.  Also, the failure occurred inside the mod_python
handler (which is why the tracebacks ended up in the error.log).

But thanks anyway

        Markus

From yjy-list-python at arbago.com  Sun Apr 14 13:04:56 2002
From: yjy-list-python at arbago.com (YOON, Joo-Yung)
Date: Fri Jan  9 21:46:43 2004
Subject: [mod_python] [Q] Apache Configuration
Message-ID: <20020414040456.GA25132@arbago.com>

Hi,
I followed all the directions written on the installation doc,
but can't see hello world when I do "http://localhost/test/mptest.py".
Just can see the program file contents itself.
Am I right to configure apache with --enable-module=so ?
And nothing else.

My environment:
  1. apache: 1.3.24
  2. python: 2.1.2

Here are what I did in the httpd.conf.
LoadModule python_module libexec/mod_python.so
<Directory "/test">
  AddHandler python-program .py
  PythonHandler mptest 
  PythonDebug On
</Directory>

Thanks in advance.
-- 
YOON, Joo-Yung / python
yjy-list-python@arbago.com
subscribe: mod_python-request@modpython.org 
unsubscribe: 

From grisha at modpython.org  Mon Apr 15 09:00:38 2002
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 21:46:43 2004
Subject: [mod_python] What's the deal with _apachemodule?
In-Reply-To: <20020413161547.GB23274@tucana.cl.uni-heidelberg.de>
Message-ID: <Pine.BSF.4.32.0204150858470.13576-100000@localhost>

_apachemodule.o is linked into mod_python.so. It relies on Apache API, so
you can't really use it outside Apache.

Grisha

On Sat, 13 Apr 2002, Markus Demleitner wrote:

> Hi list,
>
> I'm trying to compile modpython 2.7.7 together with apache 1.3.23
> and python 2.2 -- which works after some fiddling with the libs
> python was linked to.  I know that the prerequisites don't state
> that 2.2 is supported, but I couldn't see how my problem could
> be linked with the python version.
>
> When I'm actually trying to let some test script run, I get
> Traceback (most recent call last):
>   File "/home/unimut/www/cgi-bin/modpython.py", line 4, in ?
>     from mod_python import apache
>   File "/usr/local/lib/python2.2/site-packages/mod_python/apache.py", line 55, in ?
>     import _apache
> ImportError: No module named _apache
> in the server log.
>
> That's fair enough, because there is no _apachemodule.so in
> .../site-packages/mod_python, or anywhere else on the
> python path.
>
> Now, I say to myself, it's got be somewhere and check the
> source directory -- lo and behold, there's _apachemodule.o
> all right.  So, I link it to a dso -- and only get an undefined
> symbol MpServer_Type.  That's in one of the .o's in .../src,
> so I simply link all .o together.
>
> The resulting _apachemodule.so says:
>   File "/home/unimut/www/cgi-bin/modpython.py", line 4, in ?
>     from mod_python import apache
>   File "/usr/local/lib/python2.2/site-packages/mod_python/apache.py", line 55, in ?
>     import _apache
> ImportError: /usr/local/lib/python2.2/site-packages/mod_python/_apachemodule.so: undefined symbol: ap_log_error
>
> This symbol is imported by _apachemodule.o itself -- so it's
> unlikely that I have overlinked.
>
> At this point I gave up, thinking I must be doing something extraordinarily
> stupid.
>
> So, what's the deal?  _apachemodule.so isn't mentioned anywhere in the
> source tree, but it seems to be required to satisfy the import _apache
> statement.  What might the solution to this riddle be?
>
>         Markus
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://www.modpython.org/mailman/listinfo/mod_python
>


From chris at vindaloo.com  Fri Apr 12 00:45:08 2002
From: chris at vindaloo.com (Christopher Sean Hilton)
Date: Fri Jan  9 21:46:43 2004
Subject: [mod_python] file question with mod_python
In-Reply-To: <15541.61078.473435.259679@magrathea.basistech.com>; from tree@basistech.com on Thu, Apr 11, 2002 at 04:14:14PM -0400
References: <20020411170559.5277a53d.reitz@inworks.de> <Pine.BSF.4.32.0204111304190.66803-100000@localhost> <20020411153110.B2101@andale.vindaloo.com> <15541.61078.473435.259679@magrathea.basistech.com>
Message-ID: <20020412004508.A810@dantooine.vindaloo.com>

Thanks, I'll try this out tommorow.

Chris

On Thu, Apr 11, 2002 at 04:14:14PM -0400, 
Tom Emerson wrote:
> Christopher Sean Hilton writes:
> > I'm trying to create a script to handle a file upload from a form with 
> > mod_python. I know that I should be looking into the util module but I've 
> > really got no clue about how to get started. Has anyone got some words of 
> > wisdom to put me on the right track?
> 
> I've done this using publisher: it's certainly the easiest way.
> 
> Given a form along the lines of:
> 
> <form action="process.py/doit" method="POST" enctype="multipart/form-data">
> <b>Filename</b>: <input type="file" name="file">
> </form>
> 
> And a form handler "doit" in process.py:
> 
> def doit(req, file):
>     # ...
> 
> The 'file' argument is a file object representing the uploaded file:
> you can read from this as you would any other file.
> 
> You should check to make sure that the file has a non-zero length:
> 
> import os, stat
> statinfo = os.fstat(file.fileno())
> if statinfo[stat.ST_SIZE] > 0:
>     # process the text
> else:
>     # it's an empty file, or it didn't exist!
> 
> You should also look at the content type of the uploaded file. You can
> access this via the form table in the request record:
> 
> _file = req.form['file']
> if _file.type == "text/plain":
>     # process plain text
> 
> That should be enough to get you started, I expect.
> 
>     -tree
> 
> -- 
> Tom Emerson                                          Basis Technology Corp.
> Sr. Computational Linguist                         http://www.basistech.com
>   "Beware the lollipop of mediocrity: lick it once and you suck forever"
> 

-- 
Chris Hilton                                 chilton-at-vindaloo-dot-com
------------------------------------------------------------------------
                "All I was doing was trying to get home from work!"
                                                 -- Rosa Parks

From msdemlei at cl.uni-heidelberg.de  Wed Apr 17 10:33:51 2002
From: msdemlei at cl.uni-heidelberg.de (Markus Demleitner)
Date: Fri Jan  9 21:46:43 2004
Subject: [mod_python] Simulating non parsed header scripts
Message-ID: <20020417083351.GA28501@tucana.cl.uni-heidelberg.de>

Hi,

The FAQ states that a redirection should be done this way:

 req.headers_out['location'] = 'http://www.modpython.org/'  
     req.status = apache.HTTP_MOVED_TEMPORARILY
     req.send_http_header()
     return apache.OK

Unfortunately, I couldn't find status in the docs, and so
I'm a bit uncertain what else I can do with status.
Basically, I want to port an nph-script, so is it ok
to set status to whatever I want in the server's response 
line (500, 302, 200, whatever) and then return apache.OK?

Also, my classes generate "`raw"' http result codes (instead
of symbolic names from the apache module).  I like it this
way, because I can use them with or without mod_python.  Is
there any danger in assigning those to req.status?

Minor gripes: The link to the complete mailing list archive
is dead, and in the docs for 5.1.9 PythonHandler, a % in the
TeX source is missing a backslash.

Cheers,

        Markus

From Nik.Barron at pennantplc.co.uk  Wed Apr 17 09:47:24 2002
From: Nik.Barron at pennantplc.co.uk (Nik Barron)
Date: Fri Jan  9 21:46:43 2004
Subject: [mod_python] Simulating non parsed header scripts
Message-ID: <F17550784FF9D111B7F100E02921B24741E862@NT-SOTON-001>

> Also, my classes generate "`raw"' http result codes (instead
> of symbolic names from the apache module).  I like it this
> way, because I can use them with or without mod_python.  Is
> there any danger in assigning those to req.status?

This should be OK, as the HTTP_xxx constants are all defined in apache.py
(line 623 onwards). The usual caveats about future compatibility etc apply I
guess.

Nik (mod_python newbie, so handle advice with care ;)

From grisha at modpython.org  Wed Apr 17 09:18:11 2002
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 21:46:43 2004
Subject: [mod_python] Simulating non parsed header scripts
In-Reply-To: <20020417083351.GA28501@tucana.cl.uni-heidelberg.de>
Message-ID: <Pine.BSF.4.32.0204170914400.41336-100000@localhost>

On Wed, 17 Apr 2002, Markus Demleitner wrote:

> Hi,
>
> The FAQ states that a redirection should be done this way:
>
>  req.headers_out['location'] = 'http://www.modpython.org/'
>      req.status = apache.HTTP_MOVED_TEMPORARILY
>      req.send_http_header()
>      return apache.OK
>
> Unfortunately, I couldn't find status in the docs, and so
> I'm a bit uncertain what else I can do with status.
> Basically, I want to port an nph-script, so is it ok
> to set status to whatever I want in the server's response
> line (500, 302, 200, whatever) and then return apache.OK?

Yes, if I remember it correctly, setting status to whatever, then
returning OK will work. You will probably need req.send_http_header() as
well, because I think that that is what actually sends the status line
out.


> Also, my classes generate "`raw"' http result codes (instead
> of symbolic names from the apache module).  I like it this
> way, because I can use them with or without mod_python.  Is
> there any danger in assigning those to req.status?

The constants are just integers. I like using them because they are more
descriptive than 302.

> Minor gripes: The link to the complete mailing list archive
> is dead, and in the docs for 5.1.9 PythonHandler, a % in the
> TeX source is missing a backslash.

Can you e-mail me off-list where specifically it is?

Grisha


From msdemlei at cl.uni-heidelberg.de  Wed Apr 17 20:55:12 2002
From: msdemlei at cl.uni-heidelberg.de (Markus Demleitner)
Date: Fri Jan  9 21:46:43 2004
Subject: [mod_python] .value in FieldStorage
Message-ID: <20020417185512.GB957@tucana.cl.uni-heidelberg.de>

Hi,

I'm again working on my project of migrating from CGI to mod_python.
This time, it's FieldStorage.  For some reason, FieldStorage.__getitem__
may return strings instead of fields.  When you want to keep your
classes compatible with cgi's FieldStorage, that's of course a
major showstopper, since every access to the value attribute
raises an exception.

As an emergency patch (I needed to get this done, since some
gadget of mine was causing excessive server loads when it
didn't need to), I added

import UserString

class StringWithValue(UserString.UserString):
  def __init__(self, val):
    UserString.UserString.__init__(self, val)
    self.value = val

at the top of util.py and changed then end of FieldStorage's
__getitem__ to
        if len(found) == 1:
          if isinstance(found[0], Field):
            return found[0]
          else:
            return StringWithValue(found[0])
        else:
          return found


This is of course super-ugly and will break when someone updates
mod_python.

Is FieldStorage's behaviour again due to my stupidity?  If not,
are there any plans to change it so it always returns Fields?

Cheers,

       Markus

From grisha at modpython.org  Wed Apr 17 16:39:35 2002
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 21:46:43 2004
Subject: [mod_python] .value in FieldStorage
In-Reply-To: <20020417185512.GB957@tucana.cl.uni-heidelberg.de>
Message-ID: <Pine.BSF.4.32.0204171635520.45255-100000@localhost>

Markus -

The rationale is that not everyone using mod_python is migrating from CGI.
For those of us who are writing mod_python handlers from scratch having to
use .value all over the place seemed like an annoyance.

Rather than patching mod_python code, I suggest either subclassing
FieldStorage, or using cgi.FieldStorage.

Grisha

On Wed, 17 Apr 2002, Markus Demleitner wrote:

> Hi,
>
> I'm again working on my project of migrating from CGI to mod_python.
> This time, it's FieldStorage.  For some reason, FieldStorage.__getitem__
> may return strings instead of fields.  When you want to keep your
> classes compatible with cgi's FieldStorage, that's of course a
> major showstopper, since every access to the value attribute
> raises an exception.
>
> As an emergency patch (I needed to get this done, since some
> gadget of mine was causing excessive server loads when it
> didn't need to), I added
>
> import UserString
>
> class StringWithValue(UserString.UserString):
>   def __init__(self, val):
>     UserString.UserString.__init__(self, val)
>     self.value = val
>
> at the top of util.py and changed then end of FieldStorage's
> __getitem__ to
>         if len(found) == 1:
>           if isinstance(found[0], Field):
>             return found[0]
>           else:
>             return StringWithValue(found[0])
>         else:
>           return found
>
>
> This is of course super-ugly and will break when someone updates
> mod_python.
>
> Is FieldStorage's behaviour again due to my stupidity?  If not,
> are there any plans to change it so it always returns Fields?
>
> Cheers,
>
>        Markus
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://www.modpython.org/mailman/listinfo/mod_python
>


From sa at sfsu.edu  Thu Apr 18 15:49:37 2002
From: sa at sfsu.edu (Sean Abrahams)
Date: Fri Jan  9 21:46:43 2004
Subject: [mod_python] import _apache fails
Message-ID: <5192884570.20020418154937@sfsu.edu>

Going through the docs, testing my mod_python install and getting this
message in the apache logs:

File "mptest.py", line 3, in ?
from mod_python import apache
File "/usr/lib/python2.1/site-packages/mod_python/apache.py", line 55, in ?
import _apache
ImportError: No module named _apache

I've looked around and found something in regards to this won't work
from the command line, but as I stated, this is from the apache error
log, generated when calling the script from the web.

Running:
Debian Testing / GNU/Linux 2.2.17
Apache 1.3.9-14 / Mod Python 2.7.6-1

I used apt-get to grab and install modpython.

Thanks,
Sean


From johannes at erdfelt.com  Thu Apr 18 21:30:48 2002
From: johannes at erdfelt.com (Johannes Erdfelt)
Date: Fri Jan  9 21:46:43 2004
Subject: [mod_python] [patch] 2.7.6 null publisher function
Message-ID: <20020418213048.A22717@sventech.com>

I've been playing around with mod_python lately and I like it so far.
The only thing I didn't like is the requirement for a function to be
passed before publisher will run anything.

I'd kind of a purist when it comes to URL's, so I made this patch. If
there is no function passed, it defaults to "handler".

JE

-------------- next part --------------
--- mod_python/publisher.py.orig	Tue Apr 16 20:31:06 2002
+++ mod_python/publisher.py	Tue Apr 16 20:34:45 2002
@@ -80,17 +80,17 @@
     args = {}
 
     # get the path PATH_INFO (everthing after script)
-    if not _req.subprocess_env.has_key("PATH_INFO"):
-        raise apache.SERVER_RETURN, apache.HTTP_NOT_FOUND
-    
-    func_path = _req.subprocess_env["PATH_INFO"][1:] # skip fist /
-    func_path = string.replace(func_path, "/", ".")
-    if func_path[-1] == ".":
-        func_path = func_path[:-1] 
+    if _req.subprocess_env.has_key("PATH_INFO"):
+        func_path = _req.subprocess_env["PATH_INFO"][1:] # skip fist /
+        func_path = string.replace(func_path, "/", ".")
+        if func_path[-1] == ".":
+            func_path = func_path[:-1] 
 
-    # if any part of the path begins with "_", abort
-    if func_path[0] == '_' or string.count(func_path, "._"):
-        raise apache.SERVER_RETURN, apache.HTTP_NOT_FOUND
+        # if any part of the path begins with "_", abort
+        if func_path[0] == '_' or string.count(func_path, "._"):
+            raise apache.SERVER_RETURN, apache.HTTP_NOT_FOUND
+    else:
+        func_path = "handler"
 
     # process input, if any
     fs = util.FieldStorage(req, keep_blank_values=1)
From msdemlei at cl.uni-heidelberg.de  Fri Apr 19 09:26:12 2002
From: msdemlei at cl.uni-heidelberg.de (Markus Demleitner)
Date: Fri Jan  9 21:46:43 2004
Subject: [mod_python] import _apache fails
In-Reply-To: <5192884570.20020418154937@sfsu.edu>
References: <5192884570.20020418154937@sfsu.edu>
Message-ID: <20020419072612.GA2929@tucana.cl.uni-heidelberg.de>

On Thu, Apr 18, 2002 at 03:49:37PM -0700, Sean Abrahams wrote:
> Going through the docs, testing my mod_python install and getting this
> message in the apache logs:
> 
> File "mptest.py", line 3, in ?
> from mod_python import apache
> File "/usr/lib/python2.1/site-packages/mod_python/apache.py", line 55, in ?
> import _apache
> ImportError: No module named _apache
> 
> I've looked around and found something in regards to this won't work
> from the command line, but as I stated, this is from the apache error
> log, generated when calling the script from the web.
> 
> Running:
> Debian Testing / GNU/Linux 2.2.17
> Apache 1.3.9-14 / Mod Python 2.7.6-1
> 
> I used apt-get to grab and install modpython.

Chanches are your mptest.py is not executed as a handler but as a
CGI -- check your httpd.conf and make sure there's something like
  AddHandler python-program .py
	PythonHandler unimut_modpython
in there and that the directives are active for whatever directory
your mptest.py is in.

    Markus

From johnny.morano at vlaanderen.be  Fri Apr 19 10:39:03 2002
From: johnny.morano at vlaanderen.be (Johnny Morano)
Date: Fri Jan  9 21:46:43 2004
Subject: [mod_python] newbie question regarding postgresql
Message-ID: <200204190934.g3J9Y5Y19977@s001032.vlaanderen.be>

hey all,

I'm trying to make a python script for database connection, but it doesn't 
seem to work in mod_python, although it runs fine on the command line.
Can anyone see my big mistake?

--begin-code---
from mod_python import apache
import pgdb

def s(req):
        nHost='localhost'
        nDbname='netdoc'
        readUser='nd_read'

        con = pgdb.connect(dsn=nHost+':'+nDbname, user=readUser)
        curs = con.cursor()
        curs.execute(""" SELECT relname as tablename
                         , pg_get_userbyid(relowner) AS tableowner
                         , relhasindex as hasindexes
                         , relhasrules as hasrules
                         , reltriggers as hastriggers
                         , pg_class.oid
                         , description as table_description
                         , relacl
                      FROM pg_class
                      LEFT OUTER JOIN pg_description on (   pg_class.oid = 
pg_description.objoid
                                                      AND 
pg_description.objsubid = 0)
                     WHERE (  relkind = 'r'::"char"
                           OR relkind = 's'::"char"
                           )
                       AND relname NOT LIKE 'pg_%' """)
        rows = curs.fetchall()
        x = "the table names: \n"
        for row in rows:
                x += "\t" + row[0] + "\n"
        return x
---end-code---

thanx !
-- 
Johnny Morano - Linux Consultant
___________________________________________________ 
 Ministerie Vlaamse Gemeenschap                    |
 Koning Albert II-laan, 7 (610) 1210 Brussel       |
 tel: 02/5531319 mail: johnny.morano@vlaanderen.be |

From sandor.kopanyi at mailbox.hu  Fri Apr 19 10:53:40 2002
From: sandor.kopanyi at mailbox.hu (sandor.kopanyi@mailbox.hu)
Date: Fri Jan  9 21:46:43 2004
Subject: [mod_python] newbie question regarding postgresql
In-Reply-To: <200204190934.g3J9Y5Y19977@s001032.vlaanderen.be>
Message-ID: <20020419085340.14294.qmail@web2.mailbox.hu>

Try to put backslashes inside the SQL-string, like this (see
end of each line):

>         curs.execute(""" SELECT relname as tablename 
>                          , pg_get_userbyid(relowner) AS tableowner 
>                          , relhasindex as hasindexes 
etc.

--------------------------------------------------
http://www.mailbox.hu - Mert levelezni kell...


From johnny.morano at vlaanderen.be  Fri Apr 19 11:17:46 2002
From: johnny.morano at vlaanderen.be (Johnny Morano)
Date: Fri Jan  9 21:46:43 2004
Subject: [mod_python] newbie question regarding postgresql
In-Reply-To: <20020419085340.14294.qmail@web2.mailbox.hu>
References: <20020419085340.14294.qmail@web2.mailbox.hu>
Message-ID: <200204191012.g3JACmY24851@s001032.vlaanderen.be>

so mean like this?:

curs.execute(""" SELECT relname as tablename \
                          , pg_get_userbyid(relowner) AS tableowner \
                          , relhasindex as hasindexes \
                          , relhasrules as hasrules \
                          , reltriggers as hastriggers \

doesn't work either. my web server gives me an internal error and the error 
message is that Dispatch doesn't return anything


On Friday 19 April 2002 10:53, you wrote:
> Try to put backslashes inside the SQL-string, like this (see
>
> end of each line):
> >         curs.execute(""" SELECT relname as tablename
> >                          , pg_get_userbyid(relowner) AS tableowner
> >                          , relhasindex as hasindexes
>
> etc.
>
> --------------------------------------------------
> http://www.mailbox.hu - Mert levelezni kell...
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://www.modpython.org/mailman/listinfo/mod_python

-- 
Johnny Morano - Linux Consultant
___________________________________________________ 
 Ministerie Vlaamse Gemeenschap                    |
 Koning Albert II-laan, 7 (610) 1210 Brussel       |
 tel: 02/5531319 mail: johnny.morano@vlaanderen.be |

From johnny.morano at vlaanderen.be  Fri Apr 19 12:46:48 2002
From: johnny.morano at vlaanderen.be (Johnny Morano)
Date: Fri Jan  9 21:46:43 2004
Subject: [mod_python] newbie question regarding postgresql
Message-ID: <200204191141.g3JBfoY03098@s001032.vlaanderen.be>

On Friday 19 April 2002 12:13, you wrote:
> >         for row in rows:
> >                 x += "\t" + row[0] + "\n"
> >         return x
>
> An Apache handler doesn't return a string -- it returns a status code.  The
> string should be written to the req object after sending the proper
> headers. Check the documentation for more.

well actually, that's not true. i have other scripts (mailscripts) which
handle this perfectly.
but, changing the end of my code into:

for row in rows:
                x += "\t" + row[0] + "\n"
        x += "</p></body></html>"
        req.write(x)
        return apache.OK

doesn't change a thing...

johnny
-- 
Johnny Morano - Linux Consultant
___________________________________________________ 
 Ministerie Vlaamse Gemeenschap                    |
 Koning Albert II-laan, 7 (610) 1210 Brussel       |
 tel: 02/5531319 mail: johnny.morano@vlaanderen.be |

From johnny.morano at vlaanderen.be  Fri Apr 19 14:43:24 2002
From: johnny.morano at vlaanderen.be (Johnny Morano)
Date: Fri Jan  9 21:46:44 2004
Subject: [mod_python] newbie question regarding postgresql
In-Reply-To: <3B5AE7F3-5392-11D6-B58C-0003938210D6@redivi.com>
References: <3B5AE7F3-5392-11D6-B58C-0003938210D6@redivi.com>
Message-ID: <200204191338.g3JDcQY13870@s001032.vlaanderen.be>

thanx for the reply(s/y/ies/)!
but the problem is something redhat-ish... the same code works perfect on 
debian, but refuses to run on redhat... libraries, dependencies, way too much 
policies ;-)



On Friday 19 April 2002 14:37, you wrote:
> My best guess as to why PostgreSQL isn't working from your web server is
> that you haven't given the webserver credentials to use the database.
> Create a user with the same name as the user that apache runs as
> (nobody, www, www-data) and then try it.
>
> This isn't an answer to your problem.. but Python has a feature such
> that if you do this:
>
> (""" my really really """
>   """ long string that gets split up """"
>   """ over a bunch of lines """
>   """ ............"""")
>
> then it turns out as one string with no \n's, without the runtime cost
> of using +=.  This is because python just concatenates adjacent strings
> if they aren't separated by anything.. i.e. ("""blah""" 'blah' "blah")
> is 'blahblahblah'.
>
> -bob
>
> On Friday, April 19, 2002, at 05:17 AM, Johnny Morano wrote:
> > so mean like this?:
> >
> > curs.execute(""" SELECT relname as tablename \
> >                           , pg_get_userbyid(relowner) AS tableowner \
> >                           , relhasindex as hasindexes \
> >                           , relhasrules as hasrules \
> >                           , reltriggers as hastriggers \
> >
> > doesn't work either. my web server gives me an internal error and the
> > error
> > message is that Dispatch doesn't return anything
> >
> > On Friday 19 April 2002 10:53, you wrote:
> >> Try to put backslashes inside the SQL-string, like this (see
> >>
> >> end of each line):
> >>>         curs.execute(""" SELECT relname as tablename
> >>>                          , pg_get_userbyid(relowner) AS tableowner
> >>>                          , relhasindex as hasindexes
> >>
> >> etc.
> >>
> >> --------------------------------------------------
> >> http://www.mailbox.hu - Mert levelezni kell...
> >>
> >> _______________________________________________
> >> Mod_python mailing list
> >> Mod_python@modpython.org
> >> http://www.modpython.org/mailman/listinfo/mod_python
> >
> > --
> > Johnny Morano - Linux Consultant
> > ___________________________________________________
> >  Ministerie Vlaamse Gemeenschap                    |
> >  Koning Albert II-laan, 7 (610) 1210 Brussel       |
> >  tel: 02/5531319 mail: johnny.morano@vlaanderen.be |
> > _______________________________________________
> > Mod_python mailing list
> > Mod_python@modpython.org
> > http://www.modpython.org/mailman/listinfo/mod_python

-- 
Johnny Morano - Linux Consultant
___________________________________________________ 
 Ministerie Vlaamse Gemeenschap                    |
 Koning Albert II-laan, 7 (610) 1210 Brussel       |
 tel: 02/5531319 mail: johnny.morano@vlaanderen.be |

From jquinte at fadu.uba.ar  Fri Apr 19 11:30:37 2002
From: jquinte at fadu.uba.ar (Javier Quinteros)
Date: Fri Jan  9 21:46:44 2004
Subject: [mod_python] Now you see it, now you don't...
Message-ID: <200204190834.LAA19242@www.fadu.uba.ar>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

Hi, all !!!
I don't know if this have been posted yet.
I call a function named "RealAlumno" in a script "alumno.py" by 
clicking a link in my browser. Everything works fine and returns me a new 
page with links that points to the same function in the same script. The 
matter is that I can keep clicking a couple of times, but after that, Apache 
starts telling me that there's no existing function like that. There's no 
broken link because sometimes I can press the Back button and try again and 
it works. But, the most of the time, I have to restart Apache to keep working.

Does any of you know what's going on???

I'm working with Apache 1.3.22, Python 1.5.2 and ModPython 2.7.7.

Bye,

- -- 
- ---------------------------------
Javier Quinteros
jquinte@fadu.uba.ar
Secretar?a de Planificaci?n
Universidad de Buenos Aires
- ---------------------------------
Existe un solo lugar donde el Norte y el Sur del mundo se enfrentan en
igualdad de condiciones: es una cancha de f?tbol de Brasil, en la 
desembocadura
del r?o Amazonas. La l?nea del ecuador corta por la mitad el estadio Zerao, en
Amap?, de modo que cada equipo juega un tiempo en el sur y otro tiempo en el
norte.
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.0.6 (GNU/Linux)
Comment: For info see http://www.gnupg.org

iD8DBQE8wCoTdBzRnlFl4cgRAhhBAKCBcxAQhlZzzP2ZxHw7VWSg1SzjAACguzIx
i0Y2PxX4XKNn2y/FtpTPfio=
=D6eC
-----END PGP SIGNATURE-----

From grisha at modpython.org  Fri Apr 19 11:10:43 2002
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 21:46:44 2004
Subject: [mod_python] Now you see it, now you don't...
In-Reply-To: <200204190834.LAA19242@www.fadu.uba.ar>
Message-ID: <Pine.BSF.4.32.0204191109530.73892-100000@localhost>

There is a bug in 2.7.7 which I'll try to fix today and release 2.7.8.

On Fri, 19 Apr 2002, Javier Quinteros wrote:

> -----BEGIN PGP SIGNED MESSAGE-----
> Hash: SHA1
>
> Hi, all !!!
> I don't know if this have been posted yet.
> I call a function named "RealAlumno" in a script "alumno.py" by
> clicking a link in my browser. Everything works fine and returns me a new
> page with links that points to the same function in the same script. The
> matter is that I can keep clicking a couple of times, but after that, Apache
> starts telling me that there's no existing function like that. There's no
> broken link because sometimes I can press the Back button and try again and
> it works. But, the most of the time, I have to restart Apache to keep working.
>
> Does any of you know what's going on???
>
> I'm working with Apache 1.3.22, Python 1.5.2 and ModPython 2.7.7.
>
> Bye,
>
> - --
> - ---------------------------------
> Javier Quinteros
> jquinte@fadu.uba.ar
> Secretar?a de Planificaci?n
> Universidad de Buenos Aires
> - ---------------------------------
> Existe un solo lugar donde el Norte y el Sur del mundo se enfrentan en
> igualdad de condiciones: es una cancha de f?tbol de Brasil, en la
> desembocadura
> del r?o Amazonas. La l?nea del ecuador corta por la mitad el estadio Zerao, en
> Amap?, de modo que cada equipo juega un tiempo en el sur y otro tiempo en el
> norte.
> -----BEGIN PGP SIGNATURE-----
> Version: GnuPG v1.0.6 (GNU/Linux)
> Comment: For info see http://www.gnupg.org
>
> iD8DBQE8wCoTdBzRnlFl4cgRAhhBAKCBcxAQhlZzzP2ZxHw7VWSg1SzjAACguzIx
> i0Y2PxX4XKNn2y/FtpTPfio=
> =D6eC
> -----END PGP SIGNATURE-----
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://www.modpython.org/mailman/listinfo/mod_python
>


From grisha at ispol.com  Fri Apr 19 14:42:58 2002
From: grisha at ispol.com (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 21:46:44 2004
Subject: [mod_python] 2.7.8
Message-ID: <Pine.BSF.4.32.0204191441370.76579-100000@localhost>

Version 2.7.8 is out there. It addresses the 404 issue that was introduced
in 2.7.7 as a side effect of fixing the security flaw in the publisher.

Grisha


From reitz at inworks.de  Sun Apr 21 04:21:05 2002
From: reitz at inworks.de (Andre Reitz)
Date: Fri Jan  9 21:46:44 2004
Subject: [mod_python] 2.7.8
In-Reply-To: <Pine.BSF.4.32.0204191441370.76579-100000@localhost>
References: <Pine.BSF.4.32.0204191441370.76579-100000@localhost>
Message-ID: <20020421042105.4d12d745.reitz@inworks.de>

On Fri, 19 Apr 2002 14:42:58 -0400 (EDT)
"Gregory (Grisha) Trubetskoy" <grisha@ispol.com> wrote:

> 
> Version 2.7.8 is out there. It addresses the 404 issue that was introduced
> in 2.7.7 as a side effect of fixing the security flaw in the publisher.
> 

Hy,

You forgot again to Fix the following Bug,
This is a Very Big BOBO!!!!!:


def setup_cgi(req):
    """
    Replace sys.stdin and stdout with an objects that read/write to
    the socket, as well as substitute the os.environ.
    Returns (environ, stdin, stdout) which you must save and then use
    with restore_nocgi().
    """

    # save env
#    env = os.environ.copy()
    originalenv = os.environ.copy()   <<<<<<<<<<<<<=====
    
    si = sys.stdin
    so = sys.stdout

    env = build_cgi_env(req)
 
    for k in env.keys():
        os.environ[k] = env[k]

    sys.stdout = CGIStdout(req)
    sys.stdin = CGIStdin(req)

    sys.argv = [] # keeps cgi.py happy

#    return env, si, so
    return originalenv, si, so <<<<<<<<======
        



Will You release Version 2.7.9 TOMORROW?????
:)

Greetings, Andre'



> Grisha
> 
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://www.modpython.org/mailman/listinfo/mod_python


-- 
_____________________________________________
inworks GmbH            Andre Reitz		
Magirusstrasse 44	Tel. 0731/93 80 7-21
89077 Ulm		http://www.inworks.de


From s13361562 at bach.sun.ac.za  Sun Apr 21 17:31:29 2002
From: s13361562 at bach.sun.ac.za (Hugo van der Merwe)
Date: Fri Jan  9 21:46:44 2004
Subject: [mod_python] taking over the main "index" page with mod_python?
Message-ID: <20020421153129.GA15290@vervet.localnet>

Hello,

I want to have the page returned by

http://my.web.site/

also be served by the mod_python publisher, e.g. I want it to load the
same thing as /show.py/norm - what is the simplest way to do this?
Something with DirectoryIndex? Or maybe with a normal mod_python handler
and a small python "wrapper"?

I hope this hasn't been asked too many times before. I could not find 
anything in the documentation included in the Debian 
libapache-mod-python package, version 2:2.7.6-1, and that does include 
the Mod_python manual for 2.7.6.

About updating to the newer mod_python for the security exploits: I have
sent an email asking for an update of the Debian package, and will
follow up on the issue.

Thanks,
Hugo van der Merwe

From bob at redivi.com  Sun Apr 21 12:05:57 2002
From: bob at redivi.com (Bob Ippolito)
Date: Fri Jan  9 21:46:44 2004
Subject: [mod_python] taking over the main "index" page with mod_python?
In-Reply-To: <20020421153129.GA15290@vervet.localnet>
Message-ID: <AA5F0186-5541-11D6-A4BB-0003938210D6@redivi.com>

There's always mod_rewrite.

On Sunday, April 21, 2002, at 11:31 AM, Hugo van der Merwe wrote:

> Hello,
>
> I want to have the page returned by
>
> http://my.web.site/
>
> also be served by the mod_python publisher, e.g. I want it to load the
> same thing as /show.py/norm - what is the simplest way to do this?
> Something with DirectoryIndex? Or maybe with a normal mod_python handler
> and a small python "wrapper"?
>
> I hope this hasn't been asked too many times before. I could not find
> anything in the documentation included in the Debian
> libapache-mod-python package, version 2:2.7.6-1, and that does include
> the Mod_python manual for 2.7.6.
>
> About updating to the newer mod_python for the security exploits: I have
> sent an email asking for an update of the Debian package, and will
> follow up on the issue.
>
> Thanks,
> Hugo van der Merwe
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://www.modpython.org/mailman/listinfo/mod_python


From tree at basistech.com  Sun Apr 21 16:42:14 2002
From: tree at basistech.com (Tom Emerson)
Date: Fri Jan  9 21:46:44 2004
Subject: [mod_python] taking over the main "index" page with mod_python?
In-Reply-To: <20020421153129.GA15290@vervet.localnet>
References: <20020421153129.GA15290@vervet.localnet>
Message-ID: <15555.9254.679995.356595@magrathea.basistech.com>

Hugo van der Merwe writes:
> Hello,
> 
> I want to have the page returned by
> 
> http://my.web.site/
> 
> also be served by the mod_python publisher, e.g. I want it to load the
> same thing as /show.py/norm - what is the simplest way to do this?
> Something with DirectoryIndex? Or maybe with a normal mod_python handler
> and a small python "wrapper"?

DirectoryIndex in the .htaccess file works perfectly.

    -tree

-- 
Tom Emerson                                          Basis Technology Corp.
Sr. Computational Linguist                         http://www.basistech.com
  "Beware the lollipop of mediocrity: lick it once and you suck forever"

From grisha at modpython.org  Sun Apr 21 20:47:14 2002
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 21:46:44 2004
Subject: [mod_python] taking over the main "index" page with mod_python?
In-Reply-To: <15555.9254.679995.356595@magrathea.basistech.com>
Message-ID: <Pine.BSF.4.32.0204212046380.9310-100000@localhost>

Or how about just SetHandler in the DocumentRoot directory.

Grisha

On Sun, 21 Apr 2002, Tom Emerson wrote:

> Hugo van der Merwe writes:
> > Hello,
> >
> > I want to have the page returned by
> >
> > http://my.web.site/
> >
> > also be served by the mod_python publisher, e.g. I want it to load the
> > same thing as /show.py/norm - what is the simplest way to do this?
> > Something with DirectoryIndex? Or maybe with a normal mod_python handler
> > and a small python "wrapper"?
>
> DirectoryIndex in the .htaccess file works perfectly.
>
>     -tree
>
> --
> Tom Emerson                                          Basis Technology Corp.
> Sr. Computational Linguist                         http://www.basistech.com
>   "Beware the lollipop of mediocrity: lick it once and you suck forever"
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://www.modpython.org/mailman/listinfo/mod_python
>


From thanos at 0x01.com  Mon Apr 22 11:26:14 2002
From: thanos at 0x01.com (thanos@0x01.com)
Date: Fri Jan  9 21:46:44 2004
Subject: [mod_python] Easy mod_python Session Handling with pso
Message-ID: <20020422152614.19811.qmail@0x01.com>

"@0x01.com
X-Mailer: ELM [version 2.5 PL5]
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Transfer-Encoding: 7bit

How-To: Easy mod_python Session Handling with pso           

Shows how to add easy session handling in mod_python with Python Service
Objects.

This document shows you how to use pso.session to add easy session
handling to a mod_python request handler. Python Service Objects is a
open source internet service development system. Its session module is
ideal for use with mod_python, and in fact included in this package is
ModPythonRequest which is the mod_python implementation bridge. The pso
system allows you to develop platform and server independent request
handlers.


URL:  http://www.scriptfoundry.com/modules/pso/doc/session-modpython.html

From cmeyer at carleton.edu  Mon Apr 22 11:34:26 2002
From: cmeyer at carleton.edu (Chris Meyer)
Date: Fri Jan  9 21:46:44 2004
Subject: [mod_python] Mod_python & apache on Solaris 8 compile problems
Message-ID: <3CC43B92.9040605@carleton.edu>

Greetings all,

I've been trying to build mod_python 2.7.5 into apache 1.3.23 on a 
Solaris 8 system for several days now, and whenever I issue "make" to 
apache after a "./configure 
--activate-module=src/modules/python/libpython.a" I keep on getting the 
same compile errors:

.
.
.
<=== src/modules
gcc -c  -I./os/unix -I./include   -DSOLARIS2=280 -DUSE_EXPAT 
-I./lib/expat-lite -DNO_DL_NEEDED `./apaci` modules.c
gcc -c  -I./os/unix -I./include   -DSOLARIS2=280 -DUSE_EXPAT 
-I./lib/expat-lite -DNO_DL_NEEDED `./apaci` buildmark.c
gcc  -DSOLARIS2=280 -DUSE_EXPAT -I./lib/expat-lite -DNO_DL_NEEDED 
`./apaci`    \
       -o httpd buildmark.o modules.o  modules/python/libpython.a 
modules/standard/libstandard.a  main/libmain.a  ./os/unix/libos.a 
ap/libap.a  lib/expat-lite\
libexpat.a  -lsocket -lnsl
Undefined                       first referenced
  symbol                             in file
PySequence_Index                    modules/python/libpython.a(mod_python.o)
Py_InitModule4 
modules/python/libpython.a(_apachemodule.o)
PyString_FromStringAndSize 
modules/python/libpython.a(_apachemodule.o)
PyExc_TypeError 
modules/python/libpython.a(tableobject.o)
.
.   about fifty or so undefined symbols later
.
Py_Initialize                       modules/python/libpython.a(mod_python.o)
PyErr_SetObject 
modules/python/libpython.a(requestobject.o)
PyString_Type 
modules/python/libpython.a(tableobject.o)
ld: fatal: Symbol referencing errors. No output written to httpd
collect2: ld returned 1 exit status
*** Error code 1
make: Fatal error: Command failed for target `target_static'
Current working directory /home/root/apache_1.3.23/src
*** Error code 1
make: Fatal error: Command failed for target `build-std'
Current working directory /home/root/apache_1.3.23
*** Error code 1
make: Fatal error: Command failed for target `build'
#

Is there anybody who's encountered this before, or can tell me what a 
fix might be? On a slightly related note, I got something similar when I 
tried compiling mod_perl (1.26) as well (without mod_python), but only 
when I issued the command manually from the apache directory--when I 
told the mod_perl configure script to build httpd for me, it went just 
fine. That says to me that it might be something with the way I have my 
system (a 64-bit Netra X1) set up, but I'll be darned if I can find out 
what's misconfigured.

Any help anyone can give would be greatly appreciated.

	-Chris Meyer


From sobral at sj.univali.br  Mon Apr 22 14:27:35 2002
From: sobral at sj.univali.br (Marcelo M. Sobral)
Date: Fri Jan  9 21:46:44 2004
Subject: [mod_python] Mod_python & apache on Solaris 8 compile problems
In-Reply-To: <3CC43B92.9040605@carleton.edu>
Message-ID: <Pine.LNX.4.33.0204221425350.9747-100000@so.sj.univali.br>

On Mon, 22 Apr 2002, Chris Meyer wrote:

> I've been trying to build mod_python 2.7.5 into apache 1.3.23 on a 
> Solaris 8 system for several days now, and whenever I issue "make" to 
> apache after a "./configure 
> --activate-module=src/modules/python/libpython.a" I keep on getting the 
> same compile errors:
> 
> .
> .
> .
> <=== src/modules
> gcc -c  -I./os/unix -I./include   -DSOLARIS2=280 -DUSE_EXPAT 
> -I./lib/expat-lite -DNO_DL_NEEDED `./apaci` modules.c
> gcc -c  -I./os/unix -I./include   -DSOLARIS2=280 -DUSE_EXPAT 
> -I./lib/expat-lite -DNO_DL_NEEDED `./apaci` buildmark.c
> gcc  -DSOLARIS2=280 -DUSE_EXPAT -I./lib/expat-lite -DNO_DL_NEEDED 
> `./apaci`    \
>        -o httpd buildmark.o modules.o  modules/python/libpython.a 
> modules/standard/libstandard.a  main/libmain.a  ./os/unix/libos.a 
> ap/libap.a  lib/expat-lite\
> libexpat.a  -lsocket -lnsl
> Undefined                       first referenced
>   symbol                             in file
> PySequence_Index                    modules/python/libpython.a(mod_python.o)
> Py_InitModule4 
> modules/python/libpython.a(_apachemodule.o)
> PyString_FromStringAndSize 
> modules/python/libpython.a(_apachemodule.o)
> PyExc_TypeError 
> modules/python/libpython.a(tableobject.o)
> .
> .   about fifty or so undefined symbols later

   Hi.

   Your libpython.a was compiled without PIC (position independent code). 
Try to recompile it with option -fpic passed to gcc (libpython.a is in the 
Python source code).

   Good luck.

  -----------------------------
  Prof. Marcelo Maia Sobral
  Administrador de Redes
  Nucleo de Informatica
  Univali - Campus S?o Jos?
  Fone: (0xx48) 281-1595
  -----------------------------


-----BEGIN PGP PUBLIC KEY BLOCK-----
Version: GnuPG v1.0.6 (GNU/Linux)
Comment: For info see http://www.gnupg.org

mQGiBDwiFZQRBACpWV7f+1b1H2Efm9WHM5LnQxQcXEBz/SHff9B909IL5kl5zAL1
F4+mABr4g25wUGKb2SLk6/zb7EPpgI6IrfG7gKqv4PRn8KRkGANSdSouiyqKd8qa
JPIwR7i5cCV1hz2p4T7An5307HiJj/BiAXtDtPnD9JKf3gx4upOqbyyyYwCg8gFr
AdI1OK++OvBcyCebHM4ojoUEAJedtyxaL/A3rnQ1Ni2DiX60I3mbCx2eWUgm506S
RCkwuMzIB2tEMGQg3acqZvTk/7i6ek01Hkk7d8UCZjubKnj8kN23ew5k5/PbFMbF
+02tvYy91240MBmTswgW/QTjpU6dRdhtOwOLuuNKUPOII1TtdqQUg+/sWnyfLyrC
5XSGA/wPJAVIEFbvwQUb/XPr9hi+flNjsgEvv6cZDs4b83YwtdXuY4OZH7EyeQ4p
+aBlkjNJIdqKB6gw7sv5hdAlX+zKgIukw2jDa63PZl3TiIx1y06p5lDWpqbbhVIG
ky1cWRif6vo0p2bPeuwcaNleiZiL1hvR79wLw3EYsMB3tbDAJLRPTWFyY2VsbyBN
YWlhIFNvYnJhbCAoQWRtaW5pc3RyYWRvciBkZSByZWRlIC0gVW5pdmFsaS1TSikg
PHNvYnJhbEBzai51bml2YWxpLmJyPohdBBMRAgAdBQI8IhWUBQkA7U4ABQsHCgME
AxUDAgMWAgECF4AACgkQ6vNSIUi7iuxQPgCgjRxk9vyJVt94CjySkZKcDj7jyB4A
niVhSkObCMg4iZMSTvD9HZRKAtu6uQENBDwiFZwQBADZEKBHT1MmO8miFB9/V34V
xjzSXn3P3vusbgS/4v7Ydf4Lrcfah8qLx/GEf0Cl7PAL8tSEZkl5+fgzIckKLDA4
E61A31xjxi/MVmySqkPrqzI8AmfT/ukSTgFYEpf/hOmBu7c7JH8BT5evZ3wCFRCH
aZf/XnNnOLQrmRqrlaM6CwADBQP8CiTjtSxcbVU5vECsy/pnAjag7EdeLdBzjM17
B0kDDBMYa3VFi6dAkhA1eCe+M7QQBHAzM1xCXLT1ZepteZiqwpb+dSq++0XKLUea
uJclWUn8DbwMWGKTdI4weGGr9Bcaq8EZpzzo2uDDbIh3kKGtFntVEFGvg4HorWNM
vLOVCwOITAQYEQIADAUCPCIVnAUJAO1OAAAKCRDq81IhSLuK7HNxAJ9UxQo0vu/O
NEEsJhrHJoDgpdc2PwCg1c9acqzo9jCig+Y9xWpgJyQpOZQ=
=99B8
-----END PGP PUBLIC KEY BLOCK-----


From jquinte at fadu.uba.ar  Mon Apr 22 19:57:39 2002
From: jquinte at fadu.uba.ar (Javier Quinteros)
Date: Fri Jan  9 21:46:44 2004
Subject: [mod_python] Global variable...
Message-ID: <200204221702.UAA10145@www.fadu.uba.ar>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

Hi, all !!!
What should I do if I want a variable to live for ever? I mean, I don't want 
to redefine the variable every time I import a module (where I use it) or 
click a link.

Thanks in advance,

- -- 
- ---------------------------------
Javier Quinteros
jquinte@fadu.uba.ar
Secretar?a de Planificaci?n
Universidad de Buenos Aires
- ---------------------------------
Existe un solo lugar donde el Norte y el Sur del mundo se enfrentan en
igualdad de condiciones: es una cancha de f?tbol de Brasil, en la 
desembocadura
del r?o Amazonas. La l?nea del ecuador corta por la mitad el estadio Zerao, en
Amap?, de modo que cada equipo juega un tiempo en el sur y otro tiempo en el
norte.
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.0.6 (GNU/Linux)
Comment: For info see http://www.gnupg.org

iD8DBQE8xJVjdBzRnlFl4cgRAnciAKDKJMp6VOYGiU9GpDc5Kk4SlYQ1LACfe77t
+3d1demwTU+dy0NnIpPWQlc=
=lZog
-----END PGP SIGNATURE-----

From sobral at sj.univali.br  Mon Apr 22 21:33:33 2002
From: sobral at sj.univali.br (Marcelo M. Sobral)
Date: Fri Jan  9 21:46:44 2004
Subject: [mod_python] Global variable...
In-Reply-To: <200204221702.UAA10145@www.fadu.uba.ar>
Message-ID: <Pine.GSO.4.05.10204222127210.3738-100000@cucao.sj.univali.br>

On Mon, 22 Apr 2002, Javier Quinteros wrote:

> What should I do if I want a variable to live for ever? I mean, I don't want 
> to redefine the variable every time I import a module (where I use it) or 
> click a link.

   HI.

   You must use shared memory for that. The shmmodule can help you (look
for it on Vault of Parnassus).
   I  have written a trivial class to save and restore objects in the
shared memory. You can download it from:

   http://www.sj.univali.br/~sobral/persist.tgz

   It has been used to implement a cache for logins and passwords, used by
a PythonAuthenHandler. The cache is a dictionary, which lives in the
sahred memory.

   It has some comments to help you to use it.

   Best regards.


  ------------------------
  Prof. Marcelo Maia Sobral
  Administrador de Redes
  Nucleo de Informatica
  Univali - Campus S?o Jos?
  Fone: (0xx48) 281-1595
  -----------------------------


-----BEGIN PGP PUBLIC KEY BLOCK-----
Version: GnuPG v1.0.6 (GNU/Linux)
Comment: For info see http://www.gnupg.org

mQGiBDwiFZQRBACpWV7f+1b1H2Efm9WHM5LnQxQcXEBz/SHff9B909IL5kl5zAL1
F4+mABr4g25wUGKb2SLk6/zb7EPpgI6IrfG7gKqv4PRn8KRkGANSdSouiyqKd8qa
JPIwR7i5cCV1hz2p4T7An5307HiJj/BiAXtDtPnD9JKf3gx4upOqbyyyYwCg8gFr
AdI1OK++OvBcyCebHM4ojoUEAJedtyxaL/A3rnQ1Ni2DiX60I3mbCx2eWUgm506S
RCkwuMzIB2tEMGQg3acqZvTk/7i6ek01Hkk7d8UCZjubKnj8kN23ew5k5/PbFMbF
+02tvYy91240MBmTswgW/QTjpU6dRdhtOwOLuuNKUPOII1TtdqQUg+/sWnyfLyrC
5XSGA/wPJAVIEFbvwQUb/XPr9hi+flNjsgEvv6cZDs4b83YwtdXuY4OZH7EyeQ4p
+aBlkjNJIdqKB6gw7sv5hdAlX+zKgIukw2jDa63PZl3TiIx1y06p5lDWpqbbhVIG
ky1cWRif6vo0p2bPeuwcaNleiZiL1hvR79wLw3EYsMB3tbDAJLRPTWFyY2VsbyBN
YWlhIFNvYnJhbCAoQWRtaW5pc3RyYWRvciBkZSByZWRlIC0gVW5pdmFsaS1TSikg
PHNvYnJhbEBzai51bml2YWxpLmJyPohdBBMRAgAdBQI8IhWUBQkA7U4ABQsHCgME
AxUDAgMWAgECF4AACgkQ6vNSIUi7iuxQPgCgjRxk9vyJVt94CjySkZKcDj7jyB4A
niVhSkObCMg4iZMSTvD9HZRKAtu6uQENBDwiFZwQBADZEKBHT1MmO8miFB9/V34V
xjzSXn3P3vusbgS/4v7Ydf4Lrcfah8qLx/GEf0Cl7PAL8tSEZkl5+fgzIckKLDA4
E61A31xjxi/MVmySqkPrqzI8AmfT/ukSTgFYEpf/hOmBu7c7JH8BT5evZ3wCFRCH
aZf/XnNnOLQrmRqrlaM6CwADBQP8CiTjtSxcbVU5vECsy/pnAjag7EdeLdBzjM17
B0kDDBMYa3VFi6dAkhA1eCe+M7QQBHAzM1xCXLT1ZepteZiqwpb+dSq++0XKLUea
uJclWUn8DbwMWGKTdI4weGGr9Bcaq8EZpzzo2uDDbIh3kKGtFntVEFGvg4HorWNM
vLOVCwOITAQYEQIADAUCPCIVnAUJAO1OAAAKCRDq81IhSLuK7HNxAJ9UxQo0vu/O
NEEsJhrHJoDgpdc2PwCg1c9acqzo9jCig+Y9xWpgJyQpOZQ=
=99B8
-----END PGP PUBLIC KEY BLOCK-----


From gbeasley at tsa.ac.za  Tue Apr 23 08:06:07 2002
From: gbeasley at tsa.ac.za (Grant Beasley)
Date: Fri Jan  9 21:46:44 2004
Subject: [mod_python] Global variable...
In-Reply-To: <Pine.GSO.4.05.10204222127210.3738-100000@cucao.sj.univali.br>
Message-ID: <OOENKCHGJGHILGPAGHGOAEIOCCAA.gbeasley@tsa.ac.za>

I've achieved a similar thing by creating a Globals module. This is imported
by all modules that require any global variable. I'm also using this module
to store a dictionary of users as well as other cached content. It seems to
work effectively for me. Anyone aware of any problems with this approach?

Thanks
Grant Beasley
Technikon SA

-----Original Message-----
From: mod_python-admin@modpython.org
[mailto:mod_python-admin@modpython.org]On Behalf Of Marcelo M. Sobral
Sent: 23 April 2002 02:34
To: Javier Quinteros
Cc: mod_python@modpython.org
Subject: Re: [mod_python] Global variable...


On Mon, 22 Apr 2002, Javier Quinteros wrote:

> What should I do if I want a variable to live for ever? I mean, I don't
want
> to redefine the variable every time I import a module (where I use it) or
> click a link.

   HI.

   You must use shared memory for that. The shmmodule can help you (look
for it on Vault of Parnassus).
   I  have written a trivial class to save and restore objects in the
shared memory. You can download it from:

   http://www.sj.univali.br/~sobral/persist.tgz

   It has been used to implement a cache for logins and passwords, used by
a PythonAuthenHandler. The cache is a dictionary, which lives in the
sahred memory.

   It has some comments to help you to use it.

   Best regards.


  ------------------------
  Prof. Marcelo Maia Sobral
  Administrador de Redes
  Nucleo de Informatica
  Univali - Campus S?o Jos?
  Fone: (0xx48) 281-1595
  -----------------------------


-----BEGIN PGP PUBLIC KEY BLOCK-----
Version: GnuPG v1.0.6 (GNU/Linux)
Comment: For info see http://www.gnupg.org

mQGiBDwiFZQRBACpWV7f+1b1H2Efm9WHM5LnQxQcXEBz/SHff9B909IL5kl5zAL1
F4+mABr4g25wUGKb2SLk6/zb7EPpgI6IrfG7gKqv4PRn8KRkGANSdSouiyqKd8qa
JPIwR7i5cCV1hz2p4T7An5307HiJj/BiAXtDtPnD9JKf3gx4upOqbyyyYwCg8gFr
AdI1OK++OvBcyCebHM4ojoUEAJedtyxaL/A3rnQ1Ni2DiX60I3mbCx2eWUgm506S
RCkwuMzIB2tEMGQg3acqZvTk/7i6ek01Hkk7d8UCZjubKnj8kN23ew5k5/PbFMbF
+02tvYy91240MBmTswgW/QTjpU6dRdhtOwOLuuNKUPOII1TtdqQUg+/sWnyfLyrC
5XSGA/wPJAVIEFbvwQUb/XPr9hi+flNjsgEvv6cZDs4b83YwtdXuY4OZH7EyeQ4p
+aBlkjNJIdqKB6gw7sv5hdAlX+zKgIukw2jDa63PZl3TiIx1y06p5lDWpqbbhVIG
ky1cWRif6vo0p2bPeuwcaNleiZiL1hvR79wLw3EYsMB3tbDAJLRPTWFyY2VsbyBN
YWlhIFNvYnJhbCAoQWRtaW5pc3RyYWRvciBkZSByZWRlIC0gVW5pdmFsaS1TSikg
PHNvYnJhbEBzai51bml2YWxpLmJyPohdBBMRAgAdBQI8IhWUBQkA7U4ABQsHCgME
AxUDAgMWAgECF4AACgkQ6vNSIUi7iuxQPgCgjRxk9vyJVt94CjySkZKcDj7jyB4A
niVhSkObCMg4iZMSTvD9HZRKAtu6uQENBDwiFZwQBADZEKBHT1MmO8miFB9/V34V
xjzSXn3P3vusbgS/4v7Ydf4Lrcfah8qLx/GEf0Cl7PAL8tSEZkl5+fgzIckKLDA4
E61A31xjxi/MVmySqkPrqzI8AmfT/ukSTgFYEpf/hOmBu7c7JH8BT5evZ3wCFRCH
aZf/XnNnOLQrmRqrlaM6CwADBQP8CiTjtSxcbVU5vECsy/pnAjag7EdeLdBzjM17
B0kDDBMYa3VFi6dAkhA1eCe+M7QQBHAzM1xCXLT1ZepteZiqwpb+dSq++0XKLUea
uJclWUn8DbwMWGKTdI4weGGr9Bcaq8EZpzzo2uDDbIh3kKGtFntVEFGvg4HorWNM
vLOVCwOITAQYEQIADAUCPCIVnAUJAO1OAAAKCRDq81IhSLuK7HNxAJ9UxQo0vu/O
NEEsJhrHJoDgpdc2PwCg1c9acqzo9jCig+Y9xWpgJyQpOZQ=
=99B8
-----END PGP PUBLIC KEY BLOCK-----

_______________________________________________
Mod_python mailing list
Mod_python@modpython.org
http://www.modpython.org/mailman/listinfo/mod_python


From Nik.Barron at pennantplc.co.uk  Tue Apr 23 10:01:01 2002
From: Nik.Barron at pennantplc.co.uk (Nik Barron)
Date: Fri Jan  9 21:46:44 2004
Subject: [mod_python] Query about authentication/authorization win Apa
	che on Win32
Message-ID: <F17550784FF9D111B7F100E02921B24741E898@NT-SOTON-001>

Anyone got any ideas? Still having hassle with this.

Many thanks,

Nik

From rien at yeepa.org  Tue Apr 23 11:32:36 2002
From: rien at yeepa.org (Adrien Plisson)
Date: Fri Jan  9 21:46:44 2004
Subject: [mod_python] Query about authentication/authorization win Apache on Win32
References: <F17550784FF9D111B7F100E02921B24741E898@NT-SOTON-001>
Message-ID: <001801c1eaa9$cec145f0$2cee4cd4@RANDOM>

From: "Nik Barron" <Nik.Barron@pennantplc.co.uk>
> Anyone got any ideas? Still having hassle with this.

try to test in your authenhandler if the username or password is bad.
if it is, then return a 401 (Authorisation required) error code, in addition
with this header:
WWW-Authenticate: Basic realm="nicepeople"

--
rien


From Nik.Barron at pennantplc.co.uk  Tue Apr 23 11:32:51 2002
From: Nik.Barron at pennantplc.co.uk (Nik Barron)
Date: Fri Jan  9 21:46:44 2004
Subject: [mod_python] Query about authentication/authorization win Apa
	che on Win32
Message-ID: <F17550784FF9D111B7F100E02921B24741E89B@NT-SOTON-001>

> try to test in your authenhandler if the username or password is bad.
> if it is, then return a 401 (Authorisation required) error 
> code, in addition
> with this header:
> WWW-Authenticate: Basic realm="nicepeople"

Excellent! That works a treat, many thanks.

Nik

From msdemlei at cl.uni-heidelberg.de  Tue Apr 23 14:03:57 2002
From: msdemlei at cl.uni-heidelberg.de (Markus Demleitner)
Date: Fri Jan  9 21:46:44 2004
Subject: [mod_python] Dispatch() returned nothing again
Message-ID: <20020423120357.GD9011@tucana.cl.uni-heidelberg.de>

Hi List,

With mod_python 2.7.8, I still see quite a number of the
dreaded "Dispatch() returned nothing." messages when
there's only one return in dispatch, and that's in the
very last line of the function and returns apache.OK.

The consequence is a 500 server error, which is kind of
annoying.  After looking for some systematics in the occurrence
of these errors, I gave up -- a simple reload generally
works and returns the requested page all right.  Also,
it is extremely cumbersome to trigger the problem, since
it appears every page on the server can cause it, but only
every so-many accesses.

So -- does anyone have any tips on how to go about fixing
this?

Thanks,

        Markus

From peter.bittner at gmx.net  Thu Apr 25 16:35:20 2002
From: peter.bittner at gmx.net (Peter Bittner)
Date: Fri Jan  9 21:46:44 2004
Subject: [mod_python] Migrating from CGI-Python to mod_python
Message-ID: <30981.1019745320@www16.gmx.net>

Hi there!

(I am no complete Python newbie. However, I am new to mod_python.)

I have written a library database with web user interface in Python a while
ago. Now I finally want to migrate it to mod_python since this promises the
web interface to be much faster then.

I have read some of mod_python's documentation, but this seems not to have a
proper solution (or tutorial) for my migration problem.

Is there anyone who already has experience with migrating python code that
runs based on CGI to mod_python? (I don't think I want to use mod_python's CGI
handler. I'd rather go for a clean mod_python implementation!)

Can anyone provide me some sample code of clean mod_python scripts?
Please help!

Cheers, Peter

-- 
Peter Bittner
mobil: +43/(0)650/4151545
web: http://www.peterbittner.tk - http://www.htmlkurs.tk
mail: peter.bittner@gmx.net

"Free software is like free speech, not free beer" (Richard Stallman)

GMX - Die Kommunikationsplattform im Internet.
http://www.gmx.net


From goldii_nffo_54r1vm at mail.com  Fri Apr 26 09:28:49 2002
From: goldii_nffo_54r1vm at mail.com (GOLD INFO)
Date: Fri Jan  9 21:46:44 2004
Subject: [mod_python] =?windows-1251?Q?=CB=E5=E3=EA=EE=F1=F2=FC_=EF=F0=E8=E2=EB=E5=F7=E5=ED=E8=FF_=ED=EE=E2=FB=F5_=EA=EB=E8=E5=ED=F2=EE=E2?=
Message-ID: <19550200245265284949@mail.com>















-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mailman.modpython.org/pipermail/mod_python/attachments/20020426/57072341/attachment.htm
From wart at softhome.net  Sat Apr 27 13:50:01 2002
From: wart at softhome.net (Wartan Hachaturow)
Date: Fri Jan  9 21:46:44 2004
Subject: [mod_python] Authentification with publisher handler
Message-ID: <20020427135000.A7545@calmar.tepkom.ru>

Hello.

I am trying to get an authentificated user's username from inside
a python code.

Here's the code:

__auth_realm__ = "Authorization"
__access__ = 1


def __auth__(req, user, passwd):
	if user == "foo" and passwd == "bar":
		return 1
	else:
		return 0

def stats(req):
	req.get_basic_auth_pw()
	return "<html><body>" + str(req.connection.user) + "</body></html>"	


What I get is a "None", i.e. req.connection.user is None. 
What could be the problem?

P.S. libapache-mod-python 2:2.7.6-1, python 2.1, apache 1.3.24

--
Regards, Wartan.

	

From hpotter at consultant.com  Sun Apr 28 18:49:52 2002
From: hpotter at consultant.com (hpotter@consultant.com)
Date: Fri Jan  9 21:46:44 2004
Subject: [mod_python] Good news for American and Canadian smokers
Message-ID: <200204290622.g3T6M9s00593@eden.ispol.com>

From Nik.Barron at pennantplc.co.uk  Mon Apr 29 08:58:25 2002
From: Nik.Barron at pennantplc.co.uk (Nik Barron)
Date: Fri Jan  9 21:46:44 2004
Subject: [mod_python] Authentification with publisher handler
Message-ID: <F17550784FF9D111B7F100E02921B24741E8C7@NT-SOTON-001>

> What I get is a "None", i.e. req.connection.user is None. 
> What could be the problem?

I had a similar problem -- do you get a login box when accessing the page?
If not, try adding the following to the authentication handler instead of
the return 0:

	else:
		req.headers_out.add("WWW-Authenticate", 'Basic
realm="whatever"')
		return apache.HTTP_UNAUTHORIZED

Nick Barron
Manager, E-Services Division
Pennant Software Services Ltd -- Registered in England No. 3772667
PGP: A94C 4190 026E 3E02 6D50  C8FA 8620 3091 FF34 533D

From wart at softhome.net  Mon Apr 29 11:22:19 2002
From: wart at softhome.net (Wartan Hachaturow)
Date: Fri Jan  9 21:46:44 2004
Subject: [mod_python] Authentification with publisher handler
In-Reply-To: <F17550784FF9D111B7F100E02921B24741E8C7@NT-SOTON-001>; from Nik.Barron@pennantplc.co.uk on Mon, Apr 29, 2002 at 08:58:25AM +0100
References: <F17550784FF9D111B7F100E02921B24741E8C7@NT-SOTON-001>
Message-ID: <20020429112219.A9300@calmar.tepkom.ru>

On Mon, Apr 29, 2002 at 08:58:25AM +0100, Nik Barron wrote:

> I had a similar problem -- do you get a login box when accessing the page?

Yes, I do. But req.connection.user is still None. Even adding explicit 
"unauthorized" as you suggested doesn't help.

--
Regards, Wartan.

From jfk at metation.com  Mon Apr  1 09:50:46 2002
From: jfk at metation.com (=?iso-8859-1?q?J=F8rgen=20Fr=F8jk=20Kj=E6rsgaard=20{Metation}?=)
Date: Fri Jan  9 21:52:46 2004
Subject: [mod_python] mod_python under IIS?
Message-ID: <02040109504601.02567@grace.informaticon.dk>

I need to get mod_python running under MS IIS (basically because some people 
simply don't want to run Apache no matter how great it is). Has anyone done 
any work in that direction already? Running mod_python as a CGI script or 
Python as an ASP scripting language is not an option as I need to process the 
raw URL in Python.

thanks, jfk

-- 
J?rgen Fr?jk Kj?rsgaard, direkt?r og systemkonsulent
Metation aps - Kystvejen 29, DK-8000 ?rhus C
Web: www.metation.com  - Tlf: +45 8625 0038 - Mobil: +45 2925 6693

From anburger76 at hotmail.com  Mon Apr  1 12:09:51 2002
From: anburger76 at hotmail.com (Tony Burger)
Date: Fri Jan  9 21:52:46 2004
Subject: [mod_python] popen/popen2 usage?
Message-ID: <F152uNjVuMhvqgStMVh0001021a@hotmail.com>

An HTML attachment was scrubbed...
URL: http://mailman.modpython.org/pipermail/mod_python/attachments/20020401/668a0cb5/attachment-0001.htm
-------------- next part --------------
An embedded message was scrubbed...
From: "Tony Burger" <anburger76@hotmail.com>
Subject: [mod_python] popen/popen2 usage?
Date: Sun, 31 Mar 2002 23:18:27 -0500
Size: 2785
Url: http://mailman.modpython.org/pipermail/mod_python/attachments/20020401/668a0cb5/attachment-0001.eml
From s_lott at yahoo.com  Mon Apr  1 12:01:38 2002
From: s_lott at yahoo.com (Steven Lott)
Date: Fri Jan  9 21:52:46 2004
Subject: [mod_python] mod_python under IIS?
In-Reply-To: <02040109504601.02567@grace.informaticon.dk>
Message-ID: <20020401200138.49880.qmail@web9603.mail.yahoo.com>

Have you considered a simple CGI, ignoring mod_python?

While annoying (very heavy overhead from process forks), it will
work under a variety of web server configurations.

You must, of course, be absolutely certain that your CGI
applications do not expose any security holes.

You can use some of the mod_python modules that parse the
request and support creation of a response to do this.

I have a demo CGI framework used for education purposes.

--- Jørgen Frøjk Kjærsgaard {Metation} <jfk@metation.com> wrote:
> I need to get mod_python running under MS IIS (basically
> because some people 
> simply don't want to run Apache no matter how great it is).
> Has anyone done 
> any work in that direction already? Running mod_python as a
> CGI script or 
> Python as an ASP scripting language is not an option as I need
> to process the 
> raw URL in Python.
> 
> thanks, jfk
> 
> -- 
> Jørgen Frøjk Kjærsgaard, direktør og systemkonsulent
> Metation aps - Kystvejen 29, DK-8000 Århus C
> Web: www.metation.com  - Tlf: +45 8625 0038 - Mobil: +45 2925
> 6693
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://www.modpython.org/mailman/listinfo/mod_python


=====
--
S. Lott, CCP :-{)
S_LOTT@YAHOO.COM
http://www.mindspring.com/~slott1
Buccaneer #468: KaDiMa

Macintosh user: drinking upstream from the herd.

__________________________________________________
Do You Yahoo!?
Yahoo! Greetings - send holiday greetings for Easter, Passover
http://greetings.yahoo.com/

From modpython at xhaus.com  Mon Apr  1 15:45:15 2002
From: modpython at xhaus.com (Alan Kennedy)
Date: Fri Jan  9 21:52:46 2004
Subject: [mod_python] mod_python under IIS?
Message-ID: <200204012057.PAA132830@spool3.valueweb.net>

Hi,

I've never seen an embedded python for IIS. The only 
servers I know that are lucky enough to have such python 
embedding are Apache and AOLServer (PyWX)

http://www.idyll.org/~t/python9/pywx.html

The only reasonable (scalable) alternative I know of is 
FastCGI, which involves plugging a module into your 
webserver that passes the requests onto an external 
persistent threaded Python server, potentially on a 
different machine, or even multiple machines.

http://www.fastcgi.com/

There is a FastCGI module for IIS, There are several python 
modules/servers listed on the FastCGI home page.

I don't know IIS at all, but is there any way you can get 
IIS to pass requests onto COM objects? If so, then you can 
use Mark Hammond's excellent win32 extensions, which allow 
you to very easily write both COM servers and clients in 
python. 

http://www.python.org/windows/

Is there any specific reason why you don't want to use 
Python as a scripting language in ASP?

Best of luck,

Al.



---------------------------------------------
This message was sent using WebMail by CyberGate.
http://www.gate.net/webmail



From jfk at metation.com  Tue Apr  2 11:30:17 2002
From: jfk at metation.com (=?iso-8859-1?q?J=F8rgen=20Fr=F8jk=20Kj=E6rsgaard=20{Metation}?=)
Date: Fri Jan  9 21:52:46 2004
Subject: [mod_python] mod_python under IIS?
In-Reply-To: <20020401200138.49880.qmail@web9603.mail.yahoo.com>
References: <20020401200138.49880.qmail@web9603.mail.yahoo.com>
Message-ID: <02040211301700.00296@grace.informaticon.dk>

Mandag  1. April 2002 22:01 skrev du:
> Have you considered a simple CGI, ignoring mod_python?
>
> While annoying (very heavy overhead from process forks), it will
> work under a variety of web server configurations.

Well, there are two problems involved in using a CGI solution. One is 
performance, which isn't critical in all cases. Another problem is that I 
like to be able to use short, meningful URLs e.g. 
"http://somewhere.com/articles/20020215-1.html" instead of, say, 
"http://somewhere.com/cgi-bin/show.py?article-id=20020215-1"

Under Apache one could use mod_rewrite to rewrite urls of the former form to 
the latter. Do you happen to know if something similar is possible under IIS? 
I don't know much about IIS yet; until now I've only worked on Apache...

regards,
 
J?rgen Fr?jk Kj?rsgaard, direkt?r og systemkonsulent
Metation aps - Kystvejen 29, DK-8000 ?rhus C
Web: www.metation.com  - Tlf: +45 8625 0038 - Mobil: +45 2925 6693

From jfk at metation.com  Tue Apr  2 11:49:12 2002
From: jfk at metation.com (=?iso-8859-1?q?J=F8rgen=20Fr=F8jk=20Kj=E6rsgaard=20{Metation}?=)
Date: Fri Jan  9 21:52:46 2004
Subject: [mod_python] mod_python under IIS?
In-Reply-To: <200204012057.PAA132830@spool3.valueweb.net>
References: <200204012057.PAA132830@spool3.valueweb.net>
Message-ID: <02040211491201.00296@grace.informaticon.dk>

Mandag  1. April 2002 22:45 skrev du:
> Hi,
>
> I've never seen an embedded python for IIS. The only
> servers I know that are lucky enough to have such python
> embedding are Apache and AOLServer (PyWX)
>
> http://www.idyll.org/~t/python9/pywx.html
>
> The only reasonable (scalable) alternative I know of is
> FastCGI, which involves plugging a module into your
> webserver that passes the requests onto an external
> persistent threaded Python server, potentially on a
> different machine, or even multiple machines.
>
> http://www.fastcgi.com/
>
> There is a FastCGI module for IIS, There are several python
> modules/servers listed on the FastCGI home page.

This sounds like a plausible solution, I'll investigate it further.

> I don't know IIS at all, but is there any way you can get
> IIS to pass requests onto COM objects? If so, then you can
> use Mark Hammond's excellent win32 extensions, which allow
> you to very easily write both COM servers and clients in
> python.
>
> http://www.python.org/windows/

We are primarily a Unix house and have no COM expertice, but if the extension 
makes it very easy, it may well be the way to go.

For both these suggestions, the question is: will it allow me to get the raw 
URL, no matter what it is?

> Is there any specific reason why you don't want to use
> Python as a scripting language in ASP?

The ASP way is to mix logic and contents. We generate contents from external 
sources, e.g. XML. While it obviously would be possible to write an ASP page 
that interfaces to the content generator behind the scenes, It wouldn't be 
the most clean solution.

What I really would like is very simple: have IIS pass me the URL + CGI 
parameters, then I generate a page using some mod_python code and our own 
Python app and pass it back.

regards

J?rgen Fr?jk Kj?rsgaard, direkt?r og systemkonsulent
Metation aps - Kystvejen 29, DK-8000 ?rhus C
Web: www.metation.com  - Tlf: +45 8625 0038 - Mobil: +45 2925 6693

From modpython at xhaus.com  Tue Apr  2 07:16:18 2002
From: modpython at xhaus.com (Alan Kennedy)
Date: Fri Jan  9 21:52:46 2004
Subject: [mod_python] mod_python under IIS?
Message-ID: <200204021228.HAA39400@spool8.valueweb.net>

> For both these suggestions, the question is: will it
> allow me to get the raw URL, no matter what it is?

I think this is really 

1. A FastCGI question
2. An IIS question

and not a mod_python question.

I have no idea where you would find the answer to these 
questions.

Al.



---------------------------------------------
This message was sent using WebMail by CyberGate.
http://www.gate.net/webmail



From sandor.kopanyi at mailbox.hu  Wed Apr  3 09:41:14 2002
From: sandor.kopanyi at mailbox.hu (sandor.kopanyi@mailbox.hu)
Date: Fri Jan  9 21:52:46 2004
Subject: [mod_python] =?iso-8859-2?B?YXJndW1lbnQgbWF0Y2hpbmcgZm9yIGZvcm1z?=
Message-ID: <20020403074114.12400.qmail@web2.mailbox.hu>

Hi,

A mod_python newbie question about argument matching for forms:
I have a form for user registration, with 13 fields (name,
address, etc.) - I pass them to mod_python for processing.

But: if I don't give default values to the arguments, it fails,
saying 13 parameters expected, 3 got...

Which 3? Why those 3? And why works if I give default values?
If I use the req.form.list to extract the values, works fine.
But the other way is much more elegant...


The code:
def add_customer(addr_postal_code=None, addr_city=None, etc.):
   #etc.

This is not working without those None's.

Environment: RedHat 7.2, Python 1.5.2, mod_python 2.7.6, Apache
1.3.20 (mod_python config is copy-paste from doc).

----------------------------------
Related to this, a small config question:
in chapter 3.4 (Tutorial/Publisher Handler Makes it Easy) AddHandler
is used for Apache config, in 6.1 (Standard Handlers/Publisher Handler)
SetHandler. What's the difference?

Best regards,
Sandor

--------------------------------------------------
http://www.mailbox.hu - Mert levelezni kell...


From piet at cs.uu.nl  Thu Apr  4 10:33:23 2002
From: piet at cs.uu.nl (Piet van Oostrum)
Date: Fri Jan  9 21:52:46 2004
Subject: [mod_python] argument matching for forms
In-Reply-To: <20020403074114.12400.qmail@web2.mailbox.hu>
References: <20020403074114.12400.qmail@web2.mailbox.hu>
Message-ID: <wzsn6bj224.fsf@nono.cs.uu.nl>

>>>>> sandor.kopanyi@mailbox.hu (SK) writes:

SK> Hi,
SK> A mod_python newbie question about argument matching for forms:
SK> I have a form for user registration, with 13 fields (name,
SK> address, etc.) - I pass them to mod_python for processing.

SK> But: if I don't give default values to the arguments, it fails,
SK> saying 13 parameters expected, 3 got...

SK> Which 3? Why those 3? And why works if I give default values?
SK> If I use the req.form.list to extract the values, works fine.
SK> But the other way is much more elegant...

Probably the fields that were filled in in the form. Unfilled fields that
don't have a value in the form are probably not passed. Although I think
they should be passed.
-- 
Piet van Oostrum <piet@cs.uu.nl>
URL: http://www.cs.uu.nl/~piet [PGP]
Private email: P.van.Oostrum@hccnet.nl


From sandor.kopanyi at mailbox.hu  Thu Apr  4 11:34:54 2002
From: sandor.kopanyi at mailbox.hu (sandor.kopanyi@mailbox.hu)
Date: Fri Jan  9 21:52:46 2004
Subject: [mod_python] =?iso-8859-2?B?UmVbMl06?=
 =?iso-8859-2?B?W21vZF9weXRob25d?=
 =?iso-8859-2?B?YXJndW1lbnQ=?=
 =?iso-8859-2?B?bWF0Y2hpbmc=?=
 =?iso-8859-2?B?Zm9y?=
 =?iso-8859-2?B?Zm9ybXM=?=
In-Reply-To: <wzsn6bj224.fsf@nono.cs.uu.nl>
Message-ID: <20020404093454.16607.qmail@web2.mailbox.hu>

> SK> Hi,
> SK> A mod_python newbie question about argument matching for forms:
> SK> I have a form for user registration, with 13 fields (name,
> SK> address, etc.) - I pass them to mod_python for processing.
> 
> SK> But: if I don't give default values to the arguments, it fails,
> SK> saying 13 parameters expected, 3 got...
> 
> SK> Which 3? Why those 3? And why works if I give default values?
> SK> If I use the req.form.list to extract the values, works fine.
> SK> But the other way is much more elegant...
> 
> Probably the fields that were filled in in the form. Unfilled fields
> that
> don't have a value in the form are probably not passed. Although I
think
> they should be passed.

Thanks Piet,

Unfortunately happens idependent from the number of filled fields,
i.e. even if I fill all the fields. What I can see is that - if it
comes through :) - the unfilled fields values are ''s, i.e. empty
strings.

Sandor

--------------------------------------------------
http://www.mailbox.hu - Mert levelezni kell...




From matt at proweb.co.uk  Thu Apr  4 11:43:07 2002
From: matt at proweb.co.uk (Matt H)
Date: Fri Jan  9 21:52:46 2004
Subject: [mod_python] argument matching for forms
In-Reply-To: <wzsn6bj224.fsf@nono.cs.uu.nl>
References: <20020403074114.12400.qmail@web2.mailbox.hu>
	<wzsn6bj224.fsf@nono.cs.uu.nl>
Message-ID: <20020404114307.58b93be1.matt@proweb.co.uk>

> Probably the fields that were filled in in the form. Unfilled fields that
> don't have a value in the form are probably not passed. Although I think
> they should be passed.

no they shouldn't

the <form tag is a way of telling the browser how to lay out a form

the GET method is a way to tell the HTTP server what you are after

the POST method is a way to give the HTTP server information

browsers linking forms to POST/GET requests is an end user convenience

your code *must* accept that some or all of the fields will not be included for I may manually type

http://www.ewwef.com/page.html?var1=hello&var2=goodbye

Also how would you discriminate between a page request and a submission if you expected

http://www.ewwef.com/page.html?var1=&var2=

the solution to the poster's problem is a wrapper to his function that checks the parameters for validity (soemthign he shoudl be doing anyway!)

Matt







From jcea at argo.es  Thu Apr  4 16:58:35 2002
From: jcea at argo.es (Jesus Cea Avion)
Date: Fri Jan  9 21:52:46 2004
Subject: [mod_python] PythonAuthenHandler and PythonAuthzHandler
Message-ID: <3CAC6A1B.AA58CD35@argo.es>

"PythonAuthzHandler" is not documented in the last documentation
revision, at "http://www.modpython.org/live/mod_python-2.7.6/doc-html/".

The example in docs for "PythonAuthenHandler" doesn't work. Seems you
need use both, "PythonAuthenHandler" and "PythonAuthzHandler", one for
"authentication" and the other for "authorization".

-- 
Jesus Cea Avion                         _/_/      _/_/_/        _/_/_/
jcea@argo.es http://www.argo.es/~jcea/ _/_/    _/_/  _/_/    _/_/  _/_/
                                      _/_/    _/_/          _/_/_/_/_/
PGP Key Available at KeyServ   _/_/  _/_/    _/_/          _/_/  _/_/
"Things are not so easy"      _/_/  _/_/    _/_/  _/_/    _/_/  _/_/
"My name is Dump, Core Dump"   _/_/_/        _/_/_/      _/_/  _/_/
"El amor es poner tu felicidad en la felicidad de otro" - Leibniz

From jquinte at fadu.uba.ar  Thu Apr  4 15:28:31 2002
From: jquinte at fadu.uba.ar (Javier Quinteros)
Date: Fri Jan  9 21:52:46 2004
Subject: [mod_python] Same name, different directories...
Message-ID: <200204041235.PAA15434@www.fadu.uba.ar>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

Hi !!!
I've defined three Directories in my http.conf, all of them with python 
scripts inside. What i've noticed is that if I have more than one module 
called "module1.py" in different directories, mod_python is not able to work 
with both of them. It seems that it loads the first one (it doesn't matter 
which one) and after that, if I call the second one is the first one the one 
who answers me. After that I had to rename some modules just to avoid the 
possibility that mod_python use them the way he wants.

Is there any solution? I mean, I don't want to get one interpreter for each 
Directory I define.

Thanks in advance,

- -- 
- ---------------------------------
Javier Quinteros
jquinte@fadu.uba.ar
Secretar?a de Planificaci?n
Universidad de Buenos Aires
- ---------------------------------
Existe un solo lugar donde el Norte y el Sur del mundo se enfrentan en
igualdad de condiciones: es una cancha de f?tbol de Brasil, en la 
desembocadura
del r?o Amazonas. La l?nea del ecuador corta por la mitad el estadio Zerao, en
Amap?, de modo que cada equipo juega un tiempo en el sur y otro tiempo en el
norte.
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.0.6 (GNU/Linux)
Comment: For info see http://www.gnupg.org

iD8DBQE8rJtQdBzRnlFl4cgRAnPsAKDC1Q7KTH7QGL8XxdEPqvY9Zwud5gCfZHe0
sAcXkDQlrdfyrQvaq5rmuPc=
=qwm3
-----END PGP SIGNATURE-----

From grisha at modpython.org  Thu Apr  4 14:13:04 2002
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 21:52:46 2004
Subject: [mod_python] Same name, different directories...
In-Reply-To: <200204041235.PAA15434@www.fadu.uba.ar>
Message-ID: <Pine.BSF.4.32.0204041410500.67719-100000@localhost>

You can either use PythonInterpPerDirective, or manually force different
interpreter names with PythonInterpreter.

I recommend making sure you're using Python 2.2 if you're going to be
relying on multiple intepreter stuff.

Grisha

On Thu, 4 Apr 2002, Javier Quinteros wrote:

> -----BEGIN PGP SIGNED MESSAGE-----
> Hash: SHA1
>
> Hi !!!
> I've defined three Directories in my http.conf, all of them with python
> scripts inside. What i've noticed is that if I have more than one module
> called "module1.py" in different directories, mod_python is not able to work
> with both of them. It seems that it loads the first one (it doesn't matter
> which one) and after that, if I call the second one is the first one the one
> who answers me. After that I had to rename some modules just to avoid the
> possibility that mod_python use them the way he wants.
>
> Is there any solution? I mean, I don't want to get one interpreter for each
> Directory I define.
>
> Thanks in advance,
>
> - --
> - ---------------------------------
> Javier Quinteros
> jquinte@fadu.uba.ar
> Secretar?a de Planificaci?n
> Universidad de Buenos Aires
> - ---------------------------------
> Existe un solo lugar donde el Norte y el Sur del mundo se enfrentan en
> igualdad de condiciones: es una cancha de f?tbol de Brasil, en la
> desembocadura
> del r?o Amazonas. La l?nea del ecuador corta por la mitad el estadio Zerao, en
> Amap?, de modo que cada equipo juega un tiempo en el sur y otro tiempo en el
> norte.
> -----BEGIN PGP SIGNATURE-----
> Version: GnuPG v1.0.6 (GNU/Linux)
> Comment: For info see http://www.gnupg.org
>
> iD8DBQE8rJtQdBzRnlFl4cgRAnPsAKDC1Q7KTH7QGL8XxdEPqvY9Zwud5gCfZHe0
> sAcXkDQlrdfyrQvaq5rmuPc=
> =qwm3
> -----END PGP SIGNATURE-----
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://www.modpython.org/mailman/listinfo/mod_python
>


From jeffstearns at attbi.com  Thu Apr  4 11:51:48 2002
From: jeffstearns at attbi.com (Jeff Stearns)
Date: Fri Jan  9 21:52:46 2004
Subject: [mod_python] Same name, different directories...
References: <200204041235.PAA15434@www.fadu.uba.ar>
Message-ID: <003f01c1dc12$2a3dcda0$8001a8c0@SavageBeast.com>

This is probably a bug in import_module() in apache.py.  There are several
bugs in this function, and they show up in different ways sepending on how
you set PythonAutoReload and whether you use the publisher module.

I have tried various workarounds, but each workaround seems to expose a
different problem with this code.

Using unique names for each file is one thing that helps to reduce your
exposure to these bugs.  Turning on PythonAutoReload can help in some cases.

But rewriting import_module is probably what's really needed here.

-jeff stearns


----- Original Message -----
From: "Javier Quinteros" <jquinte@fadu.uba.ar>
To: <mod_python@modpython.org>
Sent: Thursday, April 04, 2002 10:28 AM
Subject: [mod_python] Same name, different directories...


> -----BEGIN PGP SIGNED MESSAGE-----
> Hash: SHA1
>
> Hi !!!
> I've defined three Directories in my http.conf, all of them with python
> scripts inside. What i've noticed is that if I have more than one module
> called "module1.py" in different directories, mod_python is not able to
work
> with both of them. It seems that it loads the first one (it doesn't matter
> which one) and after that, if I call the second one is the first one the
one
> who answers me. After that I had to rename some modules just to avoid the
> possibility that mod_python use them the way he wants.
>
> Is there any solution? I mean, I don't want to get one interpreter for
each
> Directory I define.
>
> Thanks in advance,
>
> - --
> - ---------------------------------
> Javier Quinteros
> jquinte@fadu.uba.ar
> Secretar?a de Planificaci?n
> Universidad de Buenos Aires
> - ---------------------------------
> Existe un solo lugar donde el Norte y el Sur del mundo se enfrentan en
> igualdad de condiciones: es una cancha de f?tbol de Brasil, en la
> desembocadura
> del r?o Amazonas. La l?nea del ecuador corta por la mitad el estadio
Zerao, en
> Amap?, de modo que cada equipo juega un tiempo en el sur y otro tiempo en
el
> norte.
> -----BEGIN PGP SIGNATURE-----
> Version: GnuPG v1.0.6 (GNU/Linux)
> Comment: For info see http://www.gnupg.org
>
> iD8DBQE8rJtQdBzRnlFl4cgRAnPsAKDC1Q7KTH7QGL8XxdEPqvY9Zwud5gCfZHe0
> sAcXkDQlrdfyrQvaq5rmuPc=
> =qwm3
> -----END PGP SIGNATURE-----
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://www.modpython.org/mailman/listinfo/mod_python
>


From grisha at modpython.org  Thu Apr  4 15:06:37 2002
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 21:52:47 2004
Subject: [mod_python] Same name, different directories...
In-Reply-To: <003f01c1dc12$2a3dcda0$8001a8c0@SavageBeast.com>
Message-ID: <Pine.BSF.4.32.0204041501460.68385-100000@localhost>

Well, import_module has been rewritten (it's in CVS, the branch-2-7-7
branch), but if I understood Javier correctly, he is using same module
names in different directories on the same virtual server, i.e. within the
same sub-interpreter. Since Python keeps track of modules by their name,
not the full path, in this case the namesake modules will definitely be at
conflict with one another.

Grisha

On Thu, 4 Apr 2002, Jeff Stearns wrote:

> This is probably a bug in import_module() in apache.py.  There are several
> bugs in this function, and they show up in different ways sepending on how
> you set PythonAutoReload and whether you use the publisher module.
>
> I have tried various workarounds, but each workaround seems to expose a
> different problem with this code.
>
> Using unique names for each file is one thing that helps to reduce your
> exposure to these bugs.  Turning on PythonAutoReload can help in some cases.
>
> But rewriting import_module is probably what's really needed here.
>
> -jeff stearns
>
>
> ----- Original Message -----
> From: "Javier Quinteros" <jquinte@fadu.uba.ar>
> To: <mod_python@modpython.org>
> Sent: Thursday, April 04, 2002 10:28 AM
> Subject: [mod_python] Same name, different directories...
>
>
> > -----BEGIN PGP SIGNED MESSAGE-----
> > Hash: SHA1
> >
> > Hi !!!
> > I've defined three Directories in my http.conf, all of them with python
> > scripts inside. What i've noticed is that if I have more than one module
> > called "module1.py" in different directories, mod_python is not able to
> work
> > with both of them. It seems that it loads the first one (it doesn't matter
> > which one) and after that, if I call the second one is the first one the
> one
> > who answers me. After that I had to rename some modules just to avoid the
> > possibility that mod_python use them the way he wants.
> >
> > Is there any solution? I mean, I don't want to get one interpreter for
> each
> > Directory I define.
> >
> > Thanks in advance,
> >
> > - --
> > - ---------------------------------
> > Javier Quinteros
> > jquinte@fadu.uba.ar
> > Secretar?a de Planificaci?n
> > Universidad de Buenos Aires
> > - ---------------------------------
> > Existe un solo lugar donde el Norte y el Sur del mundo se enfrentan en
> > igualdad de condiciones: es una cancha de f?tbol de Brasil, en la
> > desembocadura
> > del r?o Amazonas. La l?nea del ecuador corta por la mitad el estadio
> Zerao, en
> > Amap?, de modo que cada equipo juega un tiempo en el sur y otro tiempo en
> el
> > norte.
> > -----BEGIN PGP SIGNATURE-----
> > Version: GnuPG v1.0.6 (GNU/Linux)
> > Comment: For info see http://www.gnupg.org
> >
> > iD8DBQE8rJtQdBzRnlFl4cgRAnPsAKDC1Q7KTH7QGL8XxdEPqvY9Zwud5gCfZHe0
> > sAcXkDQlrdfyrQvaq5rmuPc=
> > =qwm3
> > -----END PGP SIGNATURE-----
> > _______________________________________________
> > Mod_python mailing list
> > Mod_python@modpython.org
> > http://www.modpython.org/mailman/listinfo/mod_python
> >
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://www.modpython.org/mailman/listinfo/mod_python
>


From ian at veryfresh.com  Thu Apr  4 12:07:11 2002
From: ian at veryfresh.com (Ian Clelland)
Date: Fri Jan  9 21:52:47 2004
Subject: [mod_python] Same name, different directories...
In-Reply-To: <200204041235.PAA15434@www.fadu.uba.ar>
References: <200204041235.PAA15434@www.fadu.uba.ar>
Message-ID: <20020404200711.GB19813@fullfactor.com>

On Thu, Apr 04, 2002 at 03:28:31PM -0300, Javier Quinteros wrote:
> I've defined three Directories in my http.conf, all of them with python 
> scripts inside. What i've noticed is that if I have more than one module 
> called "module1.py" in different directories, mod_python is not able to work 
> with both of them. It seems that it loads the first one (it doesn't matter 
> which one) and after that, if I call the second one is the first one the one 
> who answers me. After that I had to rename some modules just to avoid the 
> possibility that mod_python use them the way he wants.
> 
> Is there any solution? I mean, I don't want to get one interpreter for each 
> Directory I define.

The problem is that Python uses the module's file name -- without 
regard to its path -- as the module's name. A Python interpreter will 
also never load the same module twice, unless you use the 'reload' 
statement.

So the first time you 'import module1', Python loads and runs the first 
module1.py file it can find on sys.path. The second time you run the 
same import statement inside the same interpreter, Python does nothing, 
even if your sys.path is different that time.

It's just the way that Python works (and not mod_python in particular). 
There are probably three ways around this behaviour:

1) Give every module a unique filename.
2) Run seperate Python interpreters to handle different directories.
3) Look into using Python packages.

With packages, you should be able to distinguish between 
identically-named modules in different directories by calling them 
'directory1.module1' and 'directory2.module1'.

Hope this helps,

Ian

From fourie_willem at hotmail.com  Fri Apr  5 00:16:16 2002
From: fourie_willem at hotmail.com (Willem Fourie)
Date: Fri Jan  9 21:52:47 2004
Subject: [mod_python] mptest.py text does not interpret
Message-ID: <F82PiyAphwFutJLtosJ00000288@hotmail.com>

Dear reader

mptest.py is not being interpreted and simply displays the code in the 
browser. Other python files attempt to download. Please help.

Have made the proscribed mod's to conf (including AddModule mod_python.c) 
and it checks out OK. /server-info shows that python is indeed installed. 
(Apache/1.3.24 (Win32) mod_python/2.7.6 Python/2.2.1c1 PHP/4.1.3-dev)

It was mentioned that the mime type may not be maintained, but AddType 
application/x-httpd-py .py did not help.

Thanx in advance

_________________________________________________________________
Chat with friends online, try MSN Messenger: http://messenger.msn.com


From charney at charneyday.com  Thu Apr  4 18:15:53 2002
From: charney at charneyday.com (Reg Charney)
Date: Fri Jan  9 21:52:47 2004
Subject: [mod_python] mptest.py text does not interpret
References: <F82PiyAphwFutJLtosJ00000288@hotmail.com>
Message-ID: <3CAD08D9.3A1C3C5D@charneyday.com>

I had this same problem. Remove the AddType directive that refers to python
from the httpd.conf file. For some reason, mod_python is not implemented the
same way as PHP4,say.

Reg.

P.S. I never thanked others on the list that lead to this solution. My
apologies and thanks. I was trying to find the reason that I inserted the
AddType statement, but never did. By the time I reached that point, it was
"too late" to thank Ian Clelland <ian@veryfresh.com> and
"Gregory (Grisha) Trubetskoy" <grisha@modpython.org> for their help.

Willem Fourie wrote:

> Dear reader
>
> mptest.py is not being interpreted and simply displays the code in the
> browser. Other python files attempt to download. Please help.
>
> Have made the proscribed mod's to conf (including AddModule mod_python.c)
> and it checks out OK. /server-info shows that python is indeed installed.
> (Apache/1.3.24 (Win32) mod_python/2.7.6 Python/2.2.1c1 PHP/4.1.3-dev)
>
> It was mentioned that the mime type may not be maintained, but AddType
> application/x-httpd-py .py did not help.
>
> Thanx in advance
>
> _________________________________________________________________
> Chat with friends online, try MSN Messenger: http://messenger.msn.com
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://www.modpython.org/mailman/listinfo/mod_python



From fourie_willem at hotmail.com  Fri Apr  5 03:32:04 2002
From: fourie_willem at hotmail.com (Willem Fourie)
Date: Fri Jan  9 21:52:47 2004
Subject: [mod_python] mptest.py text does not interpret
Message-ID: <F176c4QzPW8AAkjtjsX0000090b@hotmail.com>

Hi Reg

Thanx very much for your reply, but unfortunately I had already removed the 
AddType (tried with and without).

When the ScriptAlias directory points to the WebDir (and mptest.py placed in 
that directory) then it shows the text sans interpretation.

With the config pointing to /python, and the file in that directory and the 
URL pointing to /python/mptest.py the server responds with "The server 
encountered an internal error or misconfiguration and was unable to complete 
your request"

Would appreciate ideas on other avenues perhaps.
Thanx


----Original Message Follows----
From: Reg Charney <charney@charneyday.com>
To: Willem Fourie <fourie_willem@hotmail.com>
CC: mod_python@modpython.org
Subject: Re: [mod_python] mptest.py text does not interpret
Date: Thu, 04 Apr 2002 18:15:53 -0800

I had this same problem. Remove the AddType directive that refers to python
from the httpd.conf file. For some reason, mod_python is not implemented the
same way as PHP4,say.

Reg.

P.S. I never thanked others on the list that lead to this solution. My
apologies and thanks. I was trying to find the reason that I inserted the
AddType statement, but never did. By the time I reached that point, it was
"too late" to thank Ian Clelland <ian@veryfresh.com> and
"Gregory (Grisha) Trubetskoy" <grisha@modpython.org> for their help.

Willem Fourie wrote:

 > Dear reader
 >
 > mptest.py is not being interpreted and simply displays the code in the
 > browser. Other python files attempt to download. Please help.
 >
 > Have made the proscribed mod's to conf (including AddModule mod_python.c)
 > and it checks out OK. /server-info shows that python is indeed installed.
 > (Apache/1.3.24 (Win32) mod_python/2.7.6 Python/2.2.1c1 PHP/4.1.3-dev)
 >
 > It was mentioned that the mime type may not be maintained, but AddType
 > application/x-httpd-py .py did not help.
 >
 > Thanx in advance
 >
 > _________________________________________________________________
 > Chat with friends online, try MSN Messenger: http://messenger.msn.com
 >
 > _______________________________________________
 > Mod_python mailing list
 > Mod_python@modpython.org
 > http://www.modpython.org/mailman/listinfo/mod_python


_______________________________________________
Mod_python mailing list
Mod_python@modpython.org
http://www.modpython.org/mailman/listinfo/mod_python


_________________________________________________________________
Join the worlds largest e-mail service with MSN Hotmail. 
http://www.hotmail.com


From charney at charneyday.com  Thu Apr  4 20:37:55 2002
From: charney at charneyday.com (Reg Charney)
Date: Fri Jan  9 21:52:47 2004
Subject: [mod_python] mptest.py text does not interpret
References: <F176c4QzPW8AAkjtjsX0000090b@hotmail.com>
Message-ID: <3CAD2A23.EA4E1F38@charneyday.com>

Could you please send a copy of the test program you are using. All my problems
started with an invalid test program. My "fixes" kept on making things worse and
worse until I asked the list.

Reg.

Willem Fourie wrote:

> Hi Reg
>
> Thanx very much for your reply, but unfortunately I had already removed the
> AddType (tried with and without).
>
> When the ScriptAlias directory points to the WebDir (and mptest.py placed in
> that directory) then it shows the text sans interpretation.
>
> With the config pointing to /python, and the file in that directory and the
> URL pointing to /python/mptest.py the server responds with "The server
> encountered an internal error or misconfiguration and was unable to complete
> your request"
>
> Would appreciate ideas on other avenues perhaps.
> Thanx
>
>



From sandor.kopanyi at mailbox.hu  Fri Apr  5 13:35:41 2002
From: sandor.kopanyi at mailbox.hu (sandor.kopanyi@mailbox.hu)
Date: Fri Jan  9 21:52:47 2004
Subject: [mod_python] =?iso-8859-2?B?UkU6?=
 =?iso-8859-2?B?W21vZF9weXRob25d?=
 =?iso-8859-2?B?YXJndW1lbnQ=?=
 =?iso-8859-2?B?bWF0Y2hpbmc=?=
 =?iso-8859-2?B?Zm9y?=
 =?iso-8859-2?B?Zm9ybXM=?=
Message-ID: <20020405113541.24258.qmail@web2.mailbox.hu>

[...]
> the <form tag is a way of telling the browser how to lay out a form
> 
> the GET method is a way to tell the HTTP server what you are after
> 
> the POST method is a way to give the HTTP server information
> 
> browsers linking forms to POST/GET requests is an end user convenience
> 
> your code *must* accept that some or all of the fields will 
> not be included for I may manually type
> 
> http://www.ewwef.com/page.html?var1=hello&var2=goodbye
> 
> Also how would you discriminate between a page request and a 
> submission if you expected
> 
> http://www.ewwef.com/page.html?var1=&var2=
> 
> the solution to the poster's problem is a wrapper to his 
> function that checks the parameters for validity (soemthign 
> he shoudl be doing anyway!)

Thanks Matt,
I'm doing anyway param. checking, I just was curious to understand,
why and what... Important is that now it works. BTW: do you know
some good intro about GET/POST? Of course, one can read the RFC
(and it should do it!), but a tutorial always helps... The ones
I found focus on HTML, not on GET/POST.

Best regards,
Sandor
Thanks Matt,

--------------------------------------------------
http://www.mailbox.hu - Mert levelezni kell...




From fourie_willem at hotmail.com  Fri Apr  5 13:59:01 2002
From: fourie_willem at hotmail.com (Willem Fourie)
Date: Fri Jan  9 21:52:47 2004
Subject: [mod_python] mptest.py text does not interpret
Message-ID: <F174zes92ukCSQOWl7h0000de0a@hotmail.com>

Hi Reg

1) mptest.py is:
from mod_python import apache

def handler(req):
	req.content_type = "text/plain"
	req.send_http_header()
	req.write("Hello World!")
	return apache.OK

2) and test.py (called from a form):
#!C:\Program Files\Python22\Lib
import cgi

def main():
	print "Content-type: text/html\n"
	form = cgi.FieldStorage()
	if form.has_key("firstname") and form["firstname"].value != "":
		print "<h1>Hello", form["firstname"].value, "</h1>"
	else:
		print "<h1>Error! Please enter first name.</h1>"

main()


1) displays text and 2) tries to download. Only when in webroot. In 
webroot/python it displays the internal error message.


Thanx then


----Original Message Follows----
From: Reg Charney <charney@charneyday.com>
To: Willem Fourie <fourie_willem@hotmail.com>
CC: mod_python@modpython.org
Subject: Re: [mod_python] mptest.py text does not interpret
Date: Thu, 04 Apr 2002 20:37:55 -0800

Could you please send a copy of the test program you are using. All my 
problems
started with an invalid test program. My "fixes" kept on making things worse 
and
worse until I asked the list.

Reg.

Willem Fourie wrote:

 > Hi Reg
 >
 > Thanx very much for your reply, but unfortunately I had already removed 
the
 > AddType (tried with and without).
 >
 > When the ScriptAlias directory points to the WebDir (and mptest.py placed 
in
 > that directory) then it shows the text sans interpretation.
 >
 > With the config pointing to /python, and the file in that directory and 
the
 > URL pointing to /python/mptest.py the server responds with "The server
 > encountered an internal error or misconfiguration and was unable to 
complete
 > your request"
 >
 > Would appreciate ideas on other avenues perhaps.
 > Thanx
 >
 >




_________________________________________________________________
Send and receive Hotmail on your mobile device: http://mobile.msn.com


From jquinte at fadu.uba.ar  Fri Apr  5 11:16:20 2002
From: jquinte at fadu.uba.ar (Javier Quinteros)
Date: Fri Jan  9 21:52:47 2004
Subject: [mod_python] Same name, different directories...
In-Reply-To: <Pine.BSF.4.32.0204041501460.68385-100000@localhost>
References: <Pine.BSF.4.32.0204041501460.68385-100000@localhost>
Message-ID: <200204050823.LAA28351@www.fadu.uba.ar>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

Well, I want to thank to Grisha, Ian and Jeff for the answers.
I've renamed some of the modules in conflict (as I have told you) and 
everything is working fine. Using different interpreters for different 
directories would have been another solution but that would imply a small 
lowdown in the performance (more memory, maybe swapping), especially if you 
plan to increase the number of directories with python scripts.

I will try in this days using Python packages as Ian recommended.

Comments will be appreciated..

- -- 
- ---------------------------------
Javier Quinteros
jquinte@fadu.uba.ar
Secretar?a de Planificaci?n
Universidad de Buenos Aires
- ---------------------------------
Existe un solo lugar donde el Norte y el Sur del mundo se enfrentan en
igualdad de condiciones: es una cancha de f?tbol de Brasil, en la 
desembocadura
del r?o Amazonas. La l?nea del ecuador corta por la mitad el estadio Zerao, en
Amap?, de modo que cada equipo juega un tiempo en el sur y otro tiempo en el
norte.
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.0.6 (GNU/Linux)
Comment: For info see http://www.gnupg.org

iD8DBQE8rbG1dBzRnlFl4cgRAiSBAJ9XfOax/f3mxQEek+QZnY6KM9lx8ACgpCOa
Tx+Rq5OoN6McNK3Du1D+z3g=
=FFVF
-----END PGP SIGNATURE-----

From s_lott at yahoo.com  Fri Apr  5 06:30:37 2002
From: s_lott at yahoo.com (Steven Lott)
Date: Fri Jan  9 21:52:47 2004
Subject: [mod_python] RE:[mod_python]argumentmatchingforforms
In-Reply-To: <20020405113541.24258.qmail@web2.mailbox.hu>
Message-ID: <20020405143037.31370.qmail@web9608.mail.yahoo.com>

Short version: get puts form arguments into the URL
post puts form arguments into a stream that can be read by
Apache/Modpython.

Generally, GET is a bad idea - form data needs to be encoded to
prevent problems creating a URL - there are limitations on size.

Always use POST - no encoding, no size limitations.

GET is the basic URL -> page loop in HTTP.  It is used for
simple non-form requests.  POST should always be used for form
data.

--- sandor.kopanyi@mailbox.hu wrote:
> [...]
> > the <form tag is a way of telling the browser how to lay out
> a form
> > 
> > the GET method is a way to tell the HTTP server what you are
> after
> > 
> > the POST method is a way to give the HTTP server information
> > 
> > browsers linking forms to POST/GET requests is an end user
> convenience
> > 
> > your code *must* accept that some or all of the fields will 
> > not be included for I may manually type
> > 
> > http://www.ewwef.com/page.html?var1=hello&var2=goodbye
> > 
> > Also how would you discriminate between a page request and a
> 
> > submission if you expected
> > 
> > http://www.ewwef.com/page.html?var1=&var2=
> > 
> > the solution to the poster's problem is a wrapper to his 
> > function that checks the parameters for validity (soemthign 
> > he shoudl be doing anyway!)
> 
> Thanks Matt,
> I'm doing anyway param. checking, I just was curious to
> understand,
> why and what... Important is that now it works. BTW: do you
> know
> some good intro about GET/POST? Of course, one can read the
> RFC
> (and it should do it!), but a tutorial always helps... The
> ones
> I found focus on HTML, not on GET/POST.
> 
> Best regards,
> Sandor
> Thanks Matt,
> 
> --------------------------------------------------
> http://www.mailbox.hu - Mert levelezni kell...
> 
> 
> 
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://www.modpython.org/mailman/listinfo/mod_python


=====
--
S. Lott, CCP :-{)
S_LOTT@YAHOO.COM
http://www.mindspring.com/~slott1
Buccaneer #468: KaDiMa

Macintosh user: drinking upstream from the herd.

__________________________________________________
Do You Yahoo!?
Yahoo! Tax Center - online filing with TurboTax
http://taxes.yahoo.com/

From fourie_willem at hotmail.com  Fri Apr  5 15:12:27 2002
From: fourie_willem at hotmail.com (Willem Fourie)
Date: Fri Jan  9 21:52:47 2004
Subject: [mod_python] mptest.py text does not interpret
Message-ID: <F146NV3LCTosnwO5UGX00000f61@hotmail.com>

Hi Reg

I've copied mptest and mptest.py (same content) to both webroot and 
webroot/python (the ScriptAlias dir). When I run the URL's I get:
1) http://server/mptest - displays text in browser
2) http://server/mptest.py - tries to download
3) http://server/python/mptest - displays text in browser
4) http://server/python/mptest.py - internal server error

It's the same with or without "AddType application/x-httpd-py .py"

Have a phat Phriday
Cheers then


----Original Message Follows----
From: Reg Charney <charney@charneyday.com>
To: Willem Fourie <fourie_willem@hotmail.com>
CC: mod_python@modpython.org
Subject: Re: [mod_python] mptest.py text does not interpret
Date: Thu, 04 Apr 2002 20:37:55 -0800

Could you please send a copy of the test program you are using. All my 
problems
started with an invalid test program. My "fixes" kept on making things worse 
and
worse until I asked the list.

Reg.

Willem Fourie wrote:

 > Hi Reg
 >
 > Thanx very much for your reply, but unfortunately I had already removed 
the
 > AddType (tried with and without).
 >
 > When the ScriptAlias directory points to the WebDir (and mptest.py placed 
in
 > that directory) then it shows the text sans interpretation.
 >
 > With the config pointing to /python, and the file in that directory and 
the
 > URL pointing to /python/mptest.py the server responds with "The server
 > encountered an internal error or misconfiguration and was unable to 
complete
 > your request"
 >
 > Would appreciate ideas on other avenues perhaps.
 > Thanx
 >
 >




_________________________________________________________________
Chat with friends online, try MSN Messenger: http://messenger.msn.com


From asaddi at philosophysw.com  Fri Apr  5 18:43:55 2002
From: asaddi at philosophysw.com (Allan Saddi)
Date: Fri Jan  9 21:52:47 2004
Subject: [mod_python] publisher security concerns
Message-ID: <20020405184014.S25745-100000@kalahari.flup.org>

Hi there,

I'm using mod_python 2.7.6 on FreeBSD. I was playing around with
the publisher handler today when I noticed something of concern.
I scoured the mailing list archives to see if it was mentioned
before, but I found no mention of it. (If it was discussed
before, please point me to the approximate date of the thread.)

Basically, if a module is loaded indirectly (via an import from
within another module), an outside user will be able to call
functions within that module afterward.

So, for example, if I have a script foo.py that imports pgdb
(PyGreSQL), and foo.py is later "published" by publisher,
afterward, I will be able to call functions within pgdb through
publisher. Note though that if a particular Apache child
interpreter instance has never loaded foo.py, it will
(rightfully) reject requests to pgdb.

The problem seems to lie in mod_python.apache.import_module(),
specifically this section of code:

        # keep track of file modification time and
        # try to reload it if it is newer
        if sys.modules.has_key(module_name):

            # the we won't even bother importing
            module = sys.modules[module_name]

            ...

When path is specified and not None (as it normally is when
import_module() is called from publisher), it is ignored if the
module already exists in the global modules list (sys.modules).

I'm a new mod_python user, so I'm not sure if this is a bug or
an intended feature. The impact of this behavior seems to be
limited to pure python modules, so thankfully, modules like os
cannot be exploited this way.  Essentially though, publisher is
exposing interfaces that the programmer may not know are
exposed. And that could be bad...

(Using my pgdb example, I was able to connect to my database
using the right URL... I wasn't able to do much else beyond
that, but that alone seemed scary enough.)

- Allan Saddi
  asaddi@philosophysw.com


From ian at veryfresh.com  Sat Apr  6 01:48:54 2002
From: ian at veryfresh.com (Ian Clelland)
Date: Fri Jan  9 21:52:47 2004
Subject: [mod_python] RE:[mod_python]argumentmatchingforforms
In-Reply-To: <20020405143037.31370.qmail@web9608.mail.yahoo.com>
References: <20020405113541.24258.qmail@web2.mailbox.hu> <20020405143037.31370.qmail@web9608.mail.yahoo.com>
Message-ID: <20020406094854.GC19813@fullfactor.com>

On Fri, Apr 05, 2002 at 06:30:37AM -0800, Steven Lott wrote:
> Short version: get puts form arguments into the URL
> post puts form arguments into a stream that can be read by
> Apache/Modpython.
...
> GET is the basic URL -> page loop in HTTP.  It is used for
> simple non-form requests.  POST should always be used for form
> data.

I'm sorry, but I have to strongly disagree with you on this. While web 
application designers have a tendency to treat GET and POST as 
interchangeable, they really have very different meanings in HTTP.

Long version:

GET should always be used when you are simply retrieving information 
from a web application. The parameters to the GET query, which do form 
part of the URL, should only be used to refine what information you are 
retrieving.

The important thing to remember about GET requests is that they are 
never supposed to have side effects. All it should do is show you 
something that is already on the server, or can be generated from data 
on the erver. GET request aren't supposed to actually 'do' anything, in 
terms of real-world effects, like changing things on the server, or 
sending an email message. This means that the browser should be free to 
re-send the request as many times as it wants to. It also means that 
the results can be cached (which is a good thing - the results of a GET 
query should stay relatively stable, at least over the short term)

POST requests, on the other hand, are specifically for sending data 
which is expected to modify the state of a web server. POST requests 
are expected to have side effects. Because of this, the browser is
*not allowed* to resubmit the request to the server without the user's 
explicit authorisation.

> Generally, GET is a bad idea - form data needs to be encoded to
> prevent problems creating a URL - there are limitations on size.
 
Yes, there is usually a limit imposed on the length of the URL, 
something like 4000 characters, but that should be enough for any 
request. If you ever go over that, you are probably doing something 
that GET was not designed for, like sending information to be saved on 
the server.

> Always use POST - no encoding, no size limitations.
 
POST queries, by default, use the same encoding as GET, 
application/x-www-form-urlencoded, when they are the results of 
submitting an HTML form. When you read POST form data using req.read(), 
you still have to decode strings like "param1=val1&param2=val2", just 
like in GET.

There is another standard for encoding POST data - multipart/form-data 
- which is useful when you want to send lots of binary data, such as a 
file upload. It is much less efficient for simple form data, though, 
and is more work to parse.


Sorry for the rant; I had to get that out :) I really do believe that
proper use of HTTP can only strengthen web applications, though (this
is the primary reason I am using mod_python now, instead of PHP).

--
Ian
<ian@veryfresh.com>

From sam at webslingerZ.com  Mon Apr  8 11:31:31 2002
From: sam at webslingerZ.com (Sam Brauer)
Date: Fri Jan  9 21:52:47 2004
Subject: [mod_python] strange runtime exception
Message-ID: <Pine.LNX.4.33.0204081119140.15787-100000@localhost.localdomain>

I have recently observed an intermittent exception that I think may be 
related to mod_python.  It may also be a Python problem, but I have only 
ever seen it occur under mod_python, so I thought I'd ask here first.

What happens is that I call code like this inside a handler:
utf8string = unicode(val, enc).encode('utf-8')
(where val is a string in an encoding identified by enc)

Most of the time (in fact, for days or even weeks) this works fine.  Then 
every so often I will get the following exception:

exceptions.RuntimeError: cannot unmarshal code objects in restricted 
execution mode
File "/usr/local/lib/python2.2/encodings/__init__.py", line 51, in 
search_function
mod = __import__(modname,globals(),locals(),'*')

Once I encounter this exception, I can hit the same url again and may or
may not get the exception again.  There seems to be no pattern to its
occurrence. But generally, once it occurs it will recur "at random" until
apache is restarted.

Has anyone else seen this before, or have any idea why it's happening?

Many thanks,
Sam

-- 
Sam Brauer
Systems Programmer
sam@webslingerZ.com


From jquinte at fadu.uba.ar  Mon Apr  8 16:19:18 2002
From: jquinte at fadu.uba.ar (Javier Quinteros)
Date: Fri Jan  9 21:52:47 2004
Subject: [mod_python] publisher security concerns
In-Reply-To: <20020405184014.S25745-100000@kalahari.flup.org>
References: <20020405184014.S25745-100000@kalahari.flup.org>
Message-ID: <200204081326.QAA03663@www.fadu.uba.ar>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

Hi !!!
If you are worried about exposing some scripts that should "only" be used 
from other modules importing them, there's an easy solution (and I think it's 
the right one)... ;-)

Suppose you've got a script called interfacedb.py in your directory and it's 
full of functions that access your DB without checking anything, because you 
supose that it was imported from the modules that effectively do the 
checkings. The solution is to put this statement at the beggining of the 
script:

__auth__ = {}

This way, you're telling apache that no one is authorize to access (execute) 
this script. You can only call the functions inside the script if you import 
it from other module. This way you should add this statement to every script 
you don't want to be execute directly, no matter what URL you ask your 
browser.

Sorry if I misunderstood your question....

Hope this help...

On Friday 05 April 2002 23:43, Allan Saddi wrote:
> Hi there,
>
> I'm using mod_python 2.7.6 on FreeBSD. I was playing around with
> the publisher handler today when I noticed something of concern.
> I scoured the mailing list archives to see if it was mentioned
> before, but I found no mention of it. (If it was discussed
> before, please point me to the approximate date of the thread.)
>
> Basically, if a module is loaded indirectly (via an import from
> within another module), an outside user will be able to call
> functions within that module afterward.
>
> So, for example, if I have a script foo.py that imports pgdb
> (PyGreSQL), and foo.py is later "published" by publisher,
> afterward, I will be able to call functions within pgdb through
> publisher. Note though that if a particular Apache child
> interpreter instance has never loaded foo.py, it will
> (rightfully) reject requests to pgdb.
>
> The problem seems to lie in mod_python.apache.import_module(),
> specifically this section of code:
>
>         # keep track of file modification time and
>         # try to reload it if it is newer
>         if sys.modules.has_key(module_name):
>
>             # the we won't even bother importing
>             module = sys.modules[module_name]
>
>             ...
>
> When path is specified and not None (as it normally is when
> import_module() is called from publisher), it is ignored if the
> module already exists in the global modules list (sys.modules).
>
> I'm a new mod_python user, so I'm not sure if this is a bug or
> an intended feature. The impact of this behavior seems to be
> limited to pure python modules, so thankfully, modules like os
> cannot be exploited this way.  Essentially though, publisher is
> exposing interfaces that the programmer may not know are
> exposed. And that could be bad...
>
> (Using my pgdb example, I was able to connect to my database
> using the right URL... I wasn't able to do much else beyond
> that, but that alone seemed scary enough.)
>
> - Allan Saddi
>   asaddi@philosophysw.com
>

- -- 
- ---------------------------------
Javier Quinteros
jquinte@fadu.uba.ar
Secretar?a de Planificaci?n
Universidad de Buenos Aires
- ---------------------------------
Existe un solo lugar donde el Norte y el Sur del mundo se enfrentan en
igualdad de condiciones: es una cancha de f?tbol de Brasil, en la 
desembocadura
del r?o Amazonas. La l?nea del ecuador corta por la mitad el estadio Zerao, en
Amap?, de modo que cada equipo juega un tiempo en el sur y otro tiempo en el
norte.
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.0.6 (GNU/Linux)
Comment: For info see http://www.gnupg.org

iD8DBQE8se02dBzRnlFl4cgRAilyAJ9HCNjVlEHoG/zbv/A1XSx3P98RkwCg5ATw
D4QDlDayZurKXPr+QjhRX9E=
=Ji5h
-----END PGP SIGNATURE-----

From asaddi at philosophysw.com  Mon Apr  8 13:34:11 2002
From: asaddi at philosophysw.com (Allan Saddi)
Date: Fri Jan  9 21:52:47 2004
Subject: [mod_python] publisher security concerns
In-Reply-To: <200204081326.QAA03663@www.fadu.uba.ar>
Message-ID: <20020408132027.E17910-100000@kalahari.flup.org>

Hi Javier,

That was very helpful, and yes, it does actually sound like the
"right" solution. :) The only drawback is that any third-party
modules (that is, modules that you didn't write yourself) will
have to be modified similarly. This may or may not be an easy
task, depending on the number of such modules you use in your
project. (And what about Python standard modules?)

I guess I'm basically looking for a "deny by default" type of
solution, which can easily be done by modifying publisher. But
such changes would break publisher's generalness and existing
apps built around publisher, so I guess it's not a very useful
thing to implement in the mod_python distribution.

Thanks.
- Allan

On Mon, 8 Apr 2002, Javier Quinteros wrote:

> Hi !!!
> If you are worried about exposing some scripts that should "only" be used
> from other modules importing them, there's an easy solution (and I think it's
> the right one)... ;-)
>
> Suppose you've got a script called interfacedb.py in your directory and it's
> full of functions that access your DB without checking anything, because you
> supose that it was imported from the modules that effectively do the
> checkings. The solution is to put this statement at the beggining of the
> script:
>
> __auth__ = {}
>
> This way, you're telling apache that no one is authorize to access (execute)
> this script. You can only call the functions inside the script if you import
> it from other module. This way you should add this statement to every script
> you don't want to be execute directly, no matter what URL you ask your
> browser.
>
> Sorry if I misunderstood your question....
>
> Hope this help...


From jquinte at fadu.uba.ar  Mon Apr  8 18:15:08 2002
From: jquinte at fadu.uba.ar (Javier Quinteros)
Date: Fri Jan  9 21:52:47 2004
Subject: [mod_python] publisher security concerns
In-Reply-To: <20020408132027.E17910-100000@kalahari.flup.org>
References: <20020408132027.E17910-100000@kalahari.flup.org>
Message-ID: <200204081522.SAA06372@www.fadu.uba.ar>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

Don't be worried about Python standard modules. The only things that anyone 
can execute via URL is the scripts you have in the Directory defined in 
apache. This means that all the third-party modules can be placed in 
/usr/local/python2/lib (or whatever) with Python standard modules and will 
not be exposed via apache.

Bye,

On Monday 08 April 2002 17:34, Allan Saddi wrote:
> Hi Javier,
>
> That was very helpful, and yes, it does actually sound like the
> "right" solution. :) The only drawback is that any third-party
> modules (that is, modules that you didn't write yourself) will
> have to be modified similarly. This may or may not be an easy
> task, depending on the number of such modules you use in your
> project. (And what about Python standard modules?)

- -- 
- ---------------------------------
Javier Quinteros
jquinte@fadu.uba.ar
Secretar?a de Planificaci?n
Universidad de Buenos Aires
- ---------------------------------
Existe un solo lugar donde el Norte y el Sur del mundo se enfrentan en
igualdad de condiciones: es una cancha de f?tbol de Brasil, en la 
desembocadura
del r?o Amazonas. La l?nea del ecuador corta por la mitad el estadio Zerao, en
Amap?, de modo que cada equipo juega un tiempo en el sur y otro tiempo en el
norte.
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.0.6 (GNU/Linux)
Comment: For info see http://www.gnupg.org

iD8DBQE8sghddBzRnlFl4cgRAi6AAJ9imwImXJLSSgT0r5/ZACI5pFzEUwCeOtRO
i94azxuFCdMoI1YMJ56qB6o=
=lQ1c
-----END PGP SIGNATURE-----

From asaddi at philosophysw.com  Mon Apr  8 15:05:28 2002
From: asaddi at philosophysw.com (Allan Saddi)
Date: Fri Jan  9 21:52:47 2004
Subject: [mod_python] publisher security concerns
In-Reply-To: <200204081522.SAA06372@www.fadu.uba.ar>
Message-ID: <20020408144431.D47255-100000@kalahari.flup.org>

I've found that this is only true when the module is loaded for
the first time. If the module is already loaded, regardless of
where it was loaded from, then you can access it via URL.

For example, since publisher.py imports base64, you can call
functions within base64 via URL:

  http://website/some/path/base64/encodestring?s=foobar

And this actually works for me. (Using FreeBSD 4.5, Apache
1.3.24, mod_python 2.7.6, Python 2.2)

My .htaccess is simply:

  PythonPath "['/some/directory', '/usr/local/lib/python2.2', '/usr/local/lib/python2.2/lib-dynload', '/usr/local/lib/python2.2/site-packages']"
  SetHandler python-program
  PythonHandler mod_python.publisher
  PythonDebug on

- Allan

On Mon, 8 Apr 2002, Javier Quinteros wrote:

> Don't be worried about Python standard modules. The only things that anyone
> can execute via URL is the scripts you have in the Directory defined in
> apache. This means that all the third-party modules can be placed in
> /usr/local/python2/lib (or whatever) with Python standard modules and will
> not be exposed via apache.
>
> Bye,


From jquinte at fadu.uba.ar  Mon Apr  8 20:00:44 2002
From: jquinte at fadu.uba.ar (Javier Quinteros)
Date: Fri Jan  9 21:52:47 2004
Subject: [mod_python] publisher security concerns
In-Reply-To: <20020408144431.D47255-100000@kalahari.flup.org>
References: <20020408144431.D47255-100000@kalahari.flup.org>
Message-ID: <200204081707.UAA07983@www.fadu.uba.ar>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

Allan:
????????You're right and now..... Houston, Houston. We have a problem....
Does anyone know how to solve this?

On Monday 08 April 2002 19:05, Allan Saddi wrote:
> I've found that this is only true when the module is loaded for
> the first time. If the module is already loaded, regardless of
> where it was loaded from, then you can access it via URL.
>
> For example, since publisher.py imports base64, you can call
> functions within base64 via URL:
>
>   http://website/some/path/base64/encodestring?s=foobar
>
> And this actually works for me. (Using FreeBSD 4.5, Apache
> 1.3.24, mod_python 2.7.6, Python 2.2)
>
> My .htaccess is simply:
>
>   PythonPath "['/some/directory', '/usr/local/lib/python2.2',
> '/usr/local/lib/python2.2/lib-dynload',
> '/usr/local/lib/python2.2/site-packages']" SetHandler python-program
>   PythonHandler mod_python.publisher
>   PythonDebug on
>
> - Allan

- -- 
- ---------------------------------
Javier Quinteros
jquinte@fadu.uba.ar
Secretar?a de Planificaci?n
Universidad de Buenos Aires
- ---------------------------------
Existe un solo lugar donde el Norte y el Sur del mundo se enfrentan en
igualdad de condiciones: es una cancha de f?tbol de Brasil, en la 
desembocadura
del r?o Amazonas. La l?nea del ecuador corta por la mitad el estadio Zerao, en
Amap?, de modo que cada equipo juega un tiempo en el sur y otro tiempo en el
norte.
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.0.6 (GNU/Linux)
Comment: For info see http://www.gnupg.org

iD8DBQE8siEcdBzRnlFl4cgRAuOiAKCqPxaDUL9KTi7BYLevQF9LDtynCQCgrj8Y
kWv27tFfobuj7JnU1kfptXo=
=L9NU
-----END PGP SIGNATURE-----

From jfk at metation.com  Tue Apr  9 10:11:33 2002
From: jfk at metation.com (=?iso-8859-1?q?J=F8rgen=20Fr=F8jk=20Kj=E6rsgaard=20{Metation}?=)
Date: Fri Jan  9 21:52:47 2004
Subject: [mod_python] Status for mod_python for Apache 2.0
Message-ID: <02040910113300.00295@grace.informaticon.dk>

Hi,

Apache 2.0 has come out. What is the status of mod_python for Apache 2.0? Is 
it being worked on at the moment; are there any release plans for a stable 
version?

regards, jfk

-- 
J?rgen Fr?jk Kj?rsgaard, direkt?r og systemkonsulent
Metation aps - Kystvejen 29, DK-8000 ?rhus C
Web: www.metation.com  - Tlf: +45 8625 0038 - Mobil: +45 2925 6693

From grisha at modpython.org  Tue Apr  9 08:38:54 2002
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 21:52:47 2004
Subject: [mod_python] Status for mod_python for Apache 2.0
In-Reply-To: <02040910113300.00295@grace.informaticon.dk>
Message-ID: <Pine.BSF.4.32.0204090838250.35893-100000@localhost>

It's being worked on. I wouldn't expect a release for another couple of
weeks at least.

Grisha

On Tue, 9 Apr 2002, [iso-8859-1] J?rgen Fr?jk Kj?rsgaard {Metation} wrote:

> Hi,
>
> Apache 2.0 has come out. What is the status of mod_python for Apache 2.0? Is
> it being worked on at the moment; are there any release plans for a stable
> version?
>
> regards, jfk
>
> --
> J?rgen Fr?jk Kj?rsgaard, direkt?r og systemkonsulent
> Metation aps - Kystvejen 29, DK-8000 ?rhus C
> Web: www.metation.com  - Tlf: +45 8625 0038 - Mobil: +45 2925 6693
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://www.modpython.org/mailman/listinfo/mod_python
>


From roy.smith at micromuse.com  Tue Apr  9 22:14:29 2002
From: roy.smith at micromuse.com (Roy Smith)
Date: Fri Jan  9 21:52:47 2004
Subject: [mod_python] Changes to modules seem to get cached
In-Reply-To: <200204091752.g39Hq1s39009@eden.ispol.com>
Message-ID: <47119735.3227379269@[192.168.1.33]>

I'm running:

Apache 1.3.22
Python 2.1.2
mod_python 2.7.6
Red Hat 6.2
Netscape 4.72

I'm just starting to play around with mod_python.  So far it seems pretty 
neat, but I don't quite understand how mod_python notices when a module 
gets updated, and what it does when it notices.

Most of the time, if I edit my python file and reload my browser window, I 
get the results of the new module.  Sometimes, however, it seems like I've 
got to reload twice to see the effect of the change.  This seems to be more 
likely to happen if the last version of the module generated an error. 
Even weirder, I can get into states where if I keep hitting reload, I'll 
cycle through a number of different earlier versions of the page.

I've got several httpd's running, and I'm guessing each time I do a reload 
it gets served by a different process, and apparantly each process has a 
different version of the module cached.  What I don't understand is why 
each process doesn't notice that the disk file has changed and re-import 
the module.  Or maybe my understanding of what's going on is totally off 
the wall?



--
Roy Smith
Staff Engineer
Visionary Model Development
roy.smith@micromuse.com
+1 914 747 7612


From stony8 at gmx.de  Wed Apr 10 06:54:45 2002
From: stony8 at gmx.de (Alexander Steinert)
Date: Fri Jan  9 21:52:47 2004
Subject: [mod_python] Changes to modules seem to get cached
In-Reply-To: <47119735.3227379269@[192.168.1.33]>; from roy.smith@micromuse.com on Tue, Apr 09, 2002 at 10:14:29PM -0400
References: <200204091752.g39Hq1s39009@eden.ispol.com> <47119735.3227379269@[192.168.1.33]>
Message-ID: <20020410065445.B642@tyche.svt.tu-harburg.de>

> I'm just starting to play around with mod_python.  So far it seems pretty 
> neat, but I don't quite understand how mod_python notices when a module 
> gets updated, and what it does when it notices.

Read
http://www.modpython.org/live/mod_python-2.7.6/doc-html/dir-other-par.html

IIRC, only modules imported by mod_python code (e.g. modules addressed
via URL using the publisher handler or modules specified as handlers in
httpd.conf) get reloaded automatically.

I _always_ reload apache before testing a change, because I often got
strange errors when I didn't.

HTH

Stony


From grisha at modpython.org  Wed Apr 10 10:56:06 2002
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 21:52:47 2004
Subject: [mod_python] publisher security concerns
In-Reply-To: <200204081707.UAA07983@www.fadu.uba.ar>
Message-ID: <Pine.BSF.4.32.0204101040140.50663-100000@localhost>

After a little bit of thinking, this looks like essentially a bug - the
Publisher (unlike the native mod_python handler) should not allow access
to files that are not in the directory which is being requested.

Another way to tackle it is require something like a __publish__ variable
to be defined inside the module, but I think that would be overkill.

This is obviously a serious security issue, so I will have to rush a
release out the door to fix it.

It seems that one can only (ab)use modules that already imported, and of
those only the ones that are native - but that in itself is already enough
to cause minial harm, e.g.:

http://website/some/path/os/makedirs?name=/tmp/hello

will create a direcroty "hello" in /tmp

I couldn't think of anything more harmful than this yet, but if someone
can come up with a more evil example, please e-mail me (off list perhaps).

Grisha



On Mon, 8 Apr 2002, Javier Quinteros wrote:

> -----BEGIN PGP SIGNED MESSAGE-----
> Hash: SHA1
>
> Allan:
> ????????You're right and now..... Houston, Houston. We have a problem....
> Does anyone know how to solve this?
>
> On Monday 08 April 2002 19:05, Allan Saddi wrote:
> > I've found that this is only true when the module is loaded for
> > the first time. If the module is already loaded, regardless of
> > where it was loaded from, then you can access it via URL.
> >
> > For example, since publisher.py imports base64, you can call
> > functions within base64 via URL:
> >
> >   http://website/some/path/base64/encodestring?s=foobar
> >
> > And this actually works for me. (Using FreeBSD 4.5, Apache
> > 1.3.24, mod_python 2.7.6, Python 2.2)
> >
> > My .htaccess is simply:
> >
> >   PythonPath "['/some/directory', '/usr/local/lib/python2.2',
> > '/usr/local/lib/python2.2/lib-dynload',
> > '/usr/local/lib/python2.2/site-packages']" SetHandler python-program
> >   PythonHandler mod_python.publisher
> >   PythonDebug on
> >
> > - Allan
>
> - --
> - ---------------------------------
> Javier Quinteros
> jquinte@fadu.uba.ar
> Secretar?a de Planificaci?n
> Universidad de Buenos Aires
> - ---------------------------------
> Existe un solo lugar donde el Norte y el Sur del mundo se enfrentan en
> igualdad de condiciones: es una cancha de f?tbol de Brasil, en la
> desembocadura
> del r?o Amazonas. La l?nea del ecuador corta por la mitad el estadio Zerao, en
> Amap?, de modo que cada equipo juega un tiempo en el sur y otro tiempo en el
> norte.
> -----BEGIN PGP SIGNATURE-----
> Version: GnuPG v1.0.6 (GNU/Linux)
> Comment: For info see http://www.gnupg.org
>
> iD8DBQE8siEcdBzRnlFl4cgRAuOiAKCqPxaDUL9KTi7BYLevQF9LDtynCQCgrj8Y
> kWv27tFfobuj7JnU1kfptXo=
> =L9NU
> -----END PGP SIGNATURE-----
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://www.modpython.org/mailman/listinfo/mod_python
>


From grisha at modpython.org  Wed Apr 10 18:06:04 2002
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 21:52:47 2004
Subject: [mod_python] Announce: 2.7.7
In-Reply-To: <200204081707.UAA07983@www.fadu.uba.ar>
Message-ID: <Pine.BSF.4.32.0204101755320.56871-100000@localhost>

I have released mod_python 2.7.7.

This release (as far as I could tell adequately) addresses the security
issue whereby a module indirectly imported by a published module could
then be accessed via the publisher.

It is highly recommended that you upgrade, especially if you use the
publisher.

A quick way to upgrade is to just replace the apache.py file and restart
httpd - everything else is pretty much the same except for the verion
number. Windows users should still be able to use the 2.7.6 DLL with the
new apache.py.

Grisha



From Nik.Barron at pennantplc.co.uk  Thu Apr 11 16:18:17 2002
From: Nik.Barron at pennantplc.co.uk (Nik Barron)
Date: Fri Jan  9 21:52:47 2004
Subject: [mod_python] Query about authentication/authorization win Apache on Win32
Message-ID: <F17550784FF9D111B7F100E02921B24741E828@NT-SOTON-001>

Hi,

I have a problem getting authentication/authorization working. In Apache I
have the following:

   <IfModule mod_python.c>
    <Directory "C:/Programs/Internet/Apache/htdocs/plcsreqs">
	AddHandler python-program .py
   	PythonHandler test2
	PythonAuthenHandler test2
   	PythonDebug on

	AuthType Basic
	AuthName "nicepeople"
	AuthUserFile "C:/Programs/Internet/Apache/conf/users"
	Require valid-user
    </Directory>
  </IfModule>

The Auth... stuff works fine for a "normal" directory, so the file is
readable etc, and my mod_python script works fine with no authentication.

My test script has an authenhandler as follows:

  def authenhandler(req):
	
	global user

	pw = req.get_basic_auth_pw()
	user = req.connection.user
	
	return apache.OK

Currently all I want to do is grab the user's name from their Apache login.

Now, if the user logs in to another page on the site before going to the
mod_python script, everything works as expected and the username is passed
to the rest of my code in the global variable 'user'. 

But if you go directly to the mod_python script (e.g.
http://myhost/plcsreq/test.py), it goes through as "None", and the broswer
doesn't pop up a username/password box.

I'm guessing this is going to be some stupid error on my part, but I can't
seem to get it working. Any suggestions most welcome.

Thanks!

Nick Barron
Manager, E-Services Division
Pennant Information Services Ltd -- Registered in England No. 3772667
PGP: A94C 4190 026E 3E02 6D50  C8FA 8620 3091 FF34 533D

From reitz at inworks.de  Thu Apr 11 17:05:59 2002
From: reitz at inworks.de (Andre Reitz)
Date: Fri Jan  9 21:52:47 2004
Subject: [mod_python] Announce: 2.7.7
In-Reply-To: <Pine.BSF.4.32.0204101755320.56871-100000@localhost>
References: <200204081707.UAA07983@www.fadu.uba.ar>
	<Pine.BSF.4.32.0204101755320.56871-100000@localhost>
Message-ID: <20020411170559.5277a53d.reitz@inworks.de>

On Wed, 10 Apr 2002 18:06:04 -0400 (EDT)
"Gregory (Grisha) Trubetskoy" <grisha@modpython.org> wrote:

> 
> I have released mod_python 2.7.7.
> 
> This release (as far as I could tell adequately) addresses the security
> issue whereby a module indirectly imported by a published module could
> then be accessed via the publisher.
> 
> It is highly recommended that you upgrade, especially if you use the
> publisher.
> 
> A quick way to upgrade is to just replace the apache.py file and restart
> httpd - everything else is pretty much the same except for the verion
> number. Windows users should still be able to use the 2.7.6 DLL with the
> new apache.py.
> 
> Grisha

Did you forget to patch apache.py?? (The boo boo)


def setup_cgi(req):
    """
    Replace sys.stdin and stdout with an objects that read/write to
    the socket, as well as substitute the os.environ.
    Returns (environ, stdin, stdout) which you must save and then use
    with restore_nocgi().
    """

    # save env
    env = os.environ.copy()            <------(1)
    
    si = sys.stdin
    so = sys.stdout

    env = build_cgi_env(req)
 
    for k in env.keys():
        os.environ[k] = env[k]

    sys.stdout = CGIStdout(req)
    sys.stdin = CGIStdin(req)

    sys.argv = [] # keeps cgi.py happy

    return env, si, so		<--------(2)
> 

(1) : originalenv=os.environ.copy()
(2) : return originalenv,si,so




> 
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://www.modpython.org/mailman/listinfo/mod_python


-- 
_____________________________________________
inworks GmbH            Andre Reitz		
Magirusstrasse 44	Tel. 0731/93 80 7-21
89077 Ulm		http://www.inworks.de


From zoppi at cli.di.unipi.it  Thu Apr 11 18:27:44 2002
From: zoppi at cli.di.unipi.it (Giorgio Zoppi)
Date: Fri Jan  9 21:52:47 2004
Subject: [mod_python] publisher security concerns
In-Reply-To: <Pine.BSF.4.32.0204101040140.50663-100000@localhost>
Message-ID: <Pine.GSO.4.00.10204111821520.4173-100000@carlotta.cli.di.unipi.it>

On Wed, 10 Apr 2002, Gregory (Grisha) Trubetskoy wrote:

> 
> After a little bit of thinking, this looks like essentially a bug - the
> Publisher (unlike the native mod_python handler) should not allow access
> to files that are not in the directory which is being requested.
> 
> Another way to tackle it is require something like a __publish__ variable
> to be defined inside the module, but I think that would be overkill.
> 
> This is obviously a serious security issue, so I will have to rush a
> release out the door to fix it.

You can allow people to list security policies.
For example: 
- these modules are safe, and can be used, ala default deny stance.
This however doesn't solve the issue, but allow to restrict
potential problems.



From grisha at modpython.org  Thu Apr 11 13:07:51 2002
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 21:52:48 2004
Subject: [mod_python] Announce: 2.7.7
In-Reply-To: <20020411170559.5277a53d.reitz@inworks.de>
Message-ID: <Pine.BSF.4.32.0204111304190.66803-100000@localhost>

My appologies - I must have forgotten to check it in after the patch or
something...

On Thu, 11 Apr 2002, Andre Reitz wrote:

> On Wed, 10 Apr 2002 18:06:04 -0400 (EDT)
> "Gregory (Grisha) Trubetskoy" <grisha@modpython.org> wrote:
>
> >
> > I have released mod_python 2.7.7.
> >
> > This release (as far as I could tell adequately) addresses the security
> > issue whereby a module indirectly imported by a published module could
> > then be accessed via the publisher.
> >
> > It is highly recommended that you upgrade, especially if you use the
> > publisher.
> >
> > A quick way to upgrade is to just replace the apache.py file and restart
> > httpd - everything else is pretty much the same except for the verion
> > number. Windows users should still be able to use the 2.7.6 DLL with the
> > new apache.py.
> >
> > Grisha
>
> Did you forget to patch apache.py?? (The boo boo)
>
>
> def setup_cgi(req):
>     """
>     Replace sys.stdin and stdout with an objects that read/write to
>     the socket, as well as substitute the os.environ.
>     Returns (environ, stdin, stdout) which you must save and then use
>     with restore_nocgi().
>     """
>
>     # save env
>     env = os.environ.copy()            <------(1)
>
>     si = sys.stdin
>     so = sys.stdout
>
>     env = build_cgi_env(req)
>
>     for k in env.keys():
>         os.environ[k] = env[k]
>
>     sys.stdout = CGIStdout(req)
>     sys.stdin = CGIStdin(req)
>
>     sys.argv = [] # keeps cgi.py happy
>
>     return env, si, so		<--------(2)
> >
>
> (1) : originalenv=os.environ.copy()
> (2) : return originalenv,si,so
>
>
>
>
> >
> > _______________________________________________
> > Mod_python mailing list
> > Mod_python@modpython.org
> > http://www.modpython.org/mailman/listinfo/mod_python
>
>
> --
> _____________________________________________
> inworks GmbH            Andre Reitz
> Magirusstrasse 44	Tel. 0731/93 80 7-21
> 89077 Ulm		http://www.inworks.de
>


From reitz at inworks.de  Thu Apr 11 18:10:41 2002
From: reitz at inworks.de (Andre Reitz)
Date: Fri Jan  9 21:52:48 2004
Subject: [mod_python] Announce: 2.7.7
In-Reply-To: <Pine.BSF.4.32.0204111304190.66803-100000@localhost>
References: <20020411170559.5277a53d.reitz@inworks.de>
	<Pine.BSF.4.32.0204111304190.66803-100000@localhost>
Message-ID: <20020411181041.38859da7.reitz@inworks.de>

On Thu, 11 Apr 2002 13:07:51 -0400 (EDT)
"Gregory (Grisha) Trubetskoy" <grisha@modpython.org> wrote:

> 
> My appologies - I must have forgotten to check it in after the patch or
> something...
> 
Will you release Version 2.7.8 tomorrow with the bugfix included? :)

Greetings, Andre'

> On Thu, 11 Apr 2002, Andre Reitz wrote:
> 
> > On Wed, 10 Apr 2002 18:06:04 -0400 (EDT)
> > "Gregory (Grisha) Trubetskoy" <grisha@modpython.org> wrote:
> >
> > >
> > > I have released mod_python 2.7.7.
> > >
> > > This release (as far as I could tell adequately) addresses the security
> > > issue whereby a module indirectly imported by a published module could
> > > then be accessed via the publisher.
> > >
> > > It is highly recommended that you upgrade, especially if you use the
> > > publisher.
> > >
> > > A quick way to upgrade is to just replace the apache.py file and restart
> > > httpd - everything else is pretty much the same except for the verion
> > > number. Windows users should still be able to use the 2.7.6 DLL with the
> > > new apache.py.
> > >
> > > Grisha
> >
> > Did you forget to patch apache.py?? (The boo boo)
> >
> >
> > def setup_cgi(req):
> >     """
> >     Replace sys.stdin and stdout with an objects that read/write to
> >     the socket, as well as substitute the os.environ.
> >     Returns (environ, stdin, stdout) which you must save and then use
> >     with restore_nocgi().
> >     """
> >
> >     # save env
> >     env = os.environ.copy()            <------(1)
> >
> >     si = sys.stdin
> >     so = sys.stdout
> >
> >     env = build_cgi_env(req)
> >
> >     for k in env.keys():
> >         os.environ[k] = env[k]
> >
> >     sys.stdout = CGIStdout(req)
> >     sys.stdin = CGIStdin(req)
> >
> >     sys.argv = [] # keeps cgi.py happy
> >
> >     return env, si, so		<--------(2)
> > >
> >
> > (1) : originalenv=os.environ.copy()
> > (2) : return originalenv,si,so
> >
> >
> >
> >
> > >
> > > _______________________________________________
> > > Mod_python mailing list
> > > Mod_python@modpython.org
> > > http://www.modpython.org/mailman/listinfo/mod_python
> >
> >
> > --
> > _____________________________________________
> > inworks GmbH            Andre Reitz
> > Magirusstrasse 44	Tel. 0731/93 80 7-21
> > 89077 Ulm		http://www.inworks.de
> >
> 


-- 
_____________________________________________
inworks GmbH            Andre Reitz		
Magirusstrasse 44	Tel. 0731/93 80 7-21
89077 Ulm		http://www.inworks.de


From chris at vindaloo.com  Thu Apr 11 15:31:10 2002
From: chris at vindaloo.com (Christopher Sean Hilton)
Date: Fri Jan  9 21:52:48 2004
Subject: [mod_python] file question with mod_python
In-Reply-To: <Pine.BSF.4.32.0204111304190.66803-100000@localhost>; from grisha@modpython.org on Thu, Apr 11, 2002 at 01:07:51PM -0400
References: <20020411170559.5277a53d.reitz@inworks.de> <Pine.BSF.4.32.0204111304190.66803-100000@localhost>
Message-ID: <20020411153110.B2101@andale.vindaloo.com>

I'm trying to create a script to handle a file upload from a form with 
mod_python. I know that I should be looking into the util module but I've 
really got no clue about how to get started. Has anyone got some words of 
wisdom to put me on the right track? For more background I'd like to have a 
remote program encode a transaction in xml and post that file to me so I can 
unwrap it and apply the transaction to my database.

Thanks
Chris

-- 
Chris Hilton                                 chilton-at-vindaloo-dot-com
------------------------------------------------------------------------
                "All I was doing was trying to get home from work!"
                                                 -- Rosa Parks

From tree at basistech.com  Thu Apr 11 16:14:14 2002
From: tree at basistech.com (Tom Emerson)
Date: Fri Jan  9 21:52:48 2004
Subject: [mod_python] file question with mod_python
In-Reply-To: <20020411153110.B2101@andale.vindaloo.com>
References: <20020411170559.5277a53d.reitz@inworks.de>
	<Pine.BSF.4.32.0204111304190.66803-100000@localhost>
	<20020411153110.B2101@andale.vindaloo.com>
Message-ID: <15541.61078.473435.259679@magrathea.basistech.com>

Christopher Sean Hilton writes:
> I'm trying to create a script to handle a file upload from a form with 
> mod_python. I know that I should be looking into the util module but I've 
> really got no clue about how to get started. Has anyone got some words of 
> wisdom to put me on the right track?

I've done this using publisher: it's certainly the easiest way.

Given a form along the lines of:

<form action="process.py/doit" method="POST" enctype="multipart/form-data">
<b>Filename</b>: <input type="file" name="file">
</form>

And a form handler "doit" in process.py:

def doit(req, file):
    # ...

The 'file' argument is a file object representing the uploaded file:
you can read from this as you would any other file.

You should check to make sure that the file has a non-zero length:

import os, stat
statinfo = os.fstat(file.fileno())
if statinfo[stat.ST_SIZE] > 0:
    # process the text
else:
    # it's an empty file, or it didn't exist!

You should also look at the content type of the uploaded file. You can
access this via the form table in the request record:

_file = req.form['file']
if _file.type == "text/plain":
    # process plain text

That should be enough to get you started, I expect.

    -tree

-- 
Tom Emerson                                          Basis Technology Corp.
Sr. Computational Linguist                         http://www.basistech.com
  "Beware the lollipop of mediocrity: lick it once and you suck forever"

From Nik.Barron at pennantplc.co.uk  Fri Apr 12 12:18:51 2002
From: Nik.Barron at pennantplc.co.uk (Nik Barron)
Date: Fri Jan  9 21:52:48 2004
Subject: [mod_python] mod_python.publisher problems: 404s on second and subsequent hits
Message-ID: <F17550784FF9D111B7F100E02921B24741E83A@NT-SOTON-001>

I've been trying to get pubisher working using the example from the docs
(Chapter 6); I have "Hello.py" and the Apache config as in the docs under
section 6.1.1, running under Apache on Win32

The first time the URL is accessed everything works as expected. After that,
all I get is a 404 error until the server is restarted. I'm guessing I need
something to make the module persistent

Any ideas? There's nothing obvious in the logs, other than the 200 for the
first hit and 404s after that.

Thanks in advance,

Nick Barron
Manager, E-Services Division
Pennant Information Services Ltd -- Registered in England No. 3772667
PGP: A94C 4190 026E 3E02 6D50  C8FA 8620 3091 FF34 533D

From msdemlei at cl.uni-heidelberg.de  Sat Apr 13 18:15:47 2002
From: msdemlei at cl.uni-heidelberg.de (Markus Demleitner)
Date: Fri Jan  9 21:52:48 2004
Subject: [mod_python] What's the deal with _apachemodule?
Message-ID: <20020413161547.GB23274@tucana.cl.uni-heidelberg.de>

Hi list,

I'm trying to compile modpython 2.7.7 together with apache 1.3.23
and python 2.2 -- which works after some fiddling with the libs
python was linked to.  I know that the prerequisites don't state 
that 2.2 is supported, but I couldn't see how my problem could
be linked with the python version.

When I'm actually trying to let some test script run, I get
Traceback (most recent call last):
  File "/home/unimut/www/cgi-bin/modpython.py", line 4, in ?
    from mod_python import apache
  File "/usr/local/lib/python2.2/site-packages/mod_python/apache.py", line 55, in ?
    import _apache
ImportError: No module named _apache
in the server log.

That's fair enough, because there is no _apachemodule.so in
.../site-packages/mod_python, or anywhere else on the
python path.

Now, I say to myself, it's got be somewhere and check the
source directory -- lo and behold, there's _apachemodule.o
all right.  So, I link it to a dso -- and only get an undefined
symbol MpServer_Type.  That's in one of the .o's in .../src,
so I simply link all .o together.

The resulting _apachemodule.so says:
  File "/home/unimut/www/cgi-bin/modpython.py", line 4, in ?
    from mod_python import apache
  File "/usr/local/lib/python2.2/site-packages/mod_python/apache.py", line 55, in ?
    import _apache
ImportError: /usr/local/lib/python2.2/site-packages/mod_python/_apachemodule.so: undefined symbol: ap_log_error

This symbol is imported by _apachemodule.o itself -- so it's
unlikely that I have overlinked.

At this point I gave up, thinking I must be doing something extraordinarily
stupid.

So, what's the deal?  _apachemodule.so isn't mentioned anywhere in the
source tree, but it seems to be required to satisfy the import _apache
statement.  What might the solution to this riddle be?

        Markus

From rien at yeepa.org  Sat Apr 13 22:58:19 2002
From: rien at yeepa.org (Adrien Plisson)
Date: Fri Jan  9 21:52:48 2004
Subject: [mod_python] What's the deal with _apachemodule?
References: <20020413161547.GB23274@tucana.cl.uni-heidelberg.de>
Message-ID: <001001c1e32d$f15aae90$2cee4cd4@RANDOM>

From: "Markus Demleitner" <msdemlei@cl.uni-heidelberg.de>
> ...
> So, what's the deal?  _apachemodule.so isn't mentioned anywhere in the
> source tree, but it seems to be required to satisfy the import _apache
> statement.  What might the solution to this riddle be?

if i remember right, this problem is due to the fact the the _apache module
works *only* in an apache environment, that is, only when imported in a
module which is called from mod_python which runs on a launched apache
server.

quoted from the doc:
"4.3 apache - Access to Apache Internals.

The Python Application Programmer interface to Apache internals is contained
in a module appropriately named
apache, located inside the mod python package. This module provides some
important objects that map to Apache
internal structures, as well as some useful functions, all documented below.
The apache module can only be imported by a script running under mod python.
This is because it depends on a
built-in module apache provided by mod python."

here it is, don't try to test mod_python from a standalone script.

i hope i 'd been helpful.

--
rien


From msdemlei at cl.uni-heidelberg.de  Sun Apr 14 00:01:21 2002
From: msdemlei at cl.uni-heidelberg.de (msdemlei@cl.uni-heidelberg.de)
Date: Fri Jan  9 21:52:48 2004
Subject: [mod_python] What's the deal with _apachemodule?
In-Reply-To: <001001c1e32d$f15aae90$2cee4cd4@RANDOM>
References: <20020413161547.GB23274@tucana.cl.uni-heidelberg.de> <001001c1e32d$f15aae90$2cee4cd4@RANDOM>
Message-ID: <20020414000121.A11915@ferkel.cl.uni-heidelberg.de>

On Sat, Apr 13, 2002 at 10:58:19PM +0200, Adrien Plisson wrote:
> From: "Markus Demleitner" <msdemlei@cl.uni-heidelberg.de>
> > ...
> > So, what's the deal?  _apachemodule.so isn't mentioned anywhere in the
> > source tree, but it seems to be required to satisfy the import _apache
> > statement.  What might the solution to this riddle be?
> 
> if i remember right, this problem is due to the fact the the _apache module
> works *only* in an apache environment, that is, only when imported in a
> module which is called from mod_python which runs on a launched apache
> server.
> 
> quoted from the doc:
> "4.3 apache - Access to Apache Internals.
> 
> The Python Application Programmer interface to Apache internals is contained
> in a module appropriately named
> apache, located inside the mod python package. This module provides some
> ...
Well, yes, I'd expect that much, but I was not talking about 
apache.py but about _apachemodule.so of which I found no trace 
in the distribution:  apache.py imports _apache and can't do so
on my system.  Also, the failure occurred inside the mod_python
handler (which is why the tracebacks ended up in the error.log).

But thanks anyway

        Markus

From yjy-list-python at arbago.com  Sun Apr 14 13:04:56 2002
From: yjy-list-python at arbago.com (YOON, Joo-Yung)
Date: Fri Jan  9 21:52:48 2004
Subject: [mod_python] [Q] Apache Configuration
Message-ID: <20020414040456.GA25132@arbago.com>

Hi,
I followed all the directions written on the installation doc,
but can't see hello world when I do "http://localhost/test/mptest.py".
Just can see the program file contents itself.
Am I right to configure apache with --enable-module=so ?
And nothing else.

My environment:
  1. apache: 1.3.24
  2. python: 2.1.2

Here are what I did in the httpd.conf.
LoadModule python_module libexec/mod_python.so
<Directory "/test">
  AddHandler python-program .py
  PythonHandler mptest 
  PythonDebug On
</Directory>

Thanks in advance.
-- 
YOON, Joo-Yung / python
yjy-list-python@arbago.com
subscribe: mod_python-request@modpython.org 
unsubscribe: 

From grisha at modpython.org  Mon Apr 15 09:00:38 2002
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 21:52:48 2004
Subject: [mod_python] What's the deal with _apachemodule?
In-Reply-To: <20020413161547.GB23274@tucana.cl.uni-heidelberg.de>
Message-ID: <Pine.BSF.4.32.0204150858470.13576-100000@localhost>

_apachemodule.o is linked into mod_python.so. It relies on Apache API, so
you can't really use it outside Apache.

Grisha

On Sat, 13 Apr 2002, Markus Demleitner wrote:

> Hi list,
>
> I'm trying to compile modpython 2.7.7 together with apache 1.3.23
> and python 2.2 -- which works after some fiddling with the libs
> python was linked to.  I know that the prerequisites don't state
> that 2.2 is supported, but I couldn't see how my problem could
> be linked with the python version.
>
> When I'm actually trying to let some test script run, I get
> Traceback (most recent call last):
>   File "/home/unimut/www/cgi-bin/modpython.py", line 4, in ?
>     from mod_python import apache
>   File "/usr/local/lib/python2.2/site-packages/mod_python/apache.py", line 55, in ?
>     import _apache
> ImportError: No module named _apache
> in the server log.
>
> That's fair enough, because there is no _apachemodule.so in
> .../site-packages/mod_python, or anywhere else on the
> python path.
>
> Now, I say to myself, it's got be somewhere and check the
> source directory -- lo and behold, there's _apachemodule.o
> all right.  So, I link it to a dso -- and only get an undefined
> symbol MpServer_Type.  That's in one of the .o's in .../src,
> so I simply link all .o together.
>
> The resulting _apachemodule.so says:
>   File "/home/unimut/www/cgi-bin/modpython.py", line 4, in ?
>     from mod_python import apache
>   File "/usr/local/lib/python2.2/site-packages/mod_python/apache.py", line 55, in ?
>     import _apache
> ImportError: /usr/local/lib/python2.2/site-packages/mod_python/_apachemodule.so: undefined symbol: ap_log_error
>
> This symbol is imported by _apachemodule.o itself -- so it's
> unlikely that I have overlinked.
>
> At this point I gave up, thinking I must be doing something extraordinarily
> stupid.
>
> So, what's the deal?  _apachemodule.so isn't mentioned anywhere in the
> source tree, but it seems to be required to satisfy the import _apache
> statement.  What might the solution to this riddle be?
>
>         Markus
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://www.modpython.org/mailman/listinfo/mod_python
>


From chris at vindaloo.com  Fri Apr 12 00:45:08 2002
From: chris at vindaloo.com (Christopher Sean Hilton)
Date: Fri Jan  9 21:52:48 2004
Subject: [mod_python] file question with mod_python
In-Reply-To: <15541.61078.473435.259679@magrathea.basistech.com>; from tree@basistech.com on Thu, Apr 11, 2002 at 04:14:14PM -0400
References: <20020411170559.5277a53d.reitz@inworks.de> <Pine.BSF.4.32.0204111304190.66803-100000@localhost> <20020411153110.B2101@andale.vindaloo.com> <15541.61078.473435.259679@magrathea.basistech.com>
Message-ID: <20020412004508.A810@dantooine.vindaloo.com>

Thanks, I'll try this out tommorow.

Chris

On Thu, Apr 11, 2002 at 04:14:14PM -0400, 
Tom Emerson wrote:
> Christopher Sean Hilton writes:
> > I'm trying to create a script to handle a file upload from a form with 
> > mod_python. I know that I should be looking into the util module but I've 
> > really got no clue about how to get started. Has anyone got some words of 
> > wisdom to put me on the right track?
> 
> I've done this using publisher: it's certainly the easiest way.
> 
> Given a form along the lines of:
> 
> <form action="process.py/doit" method="POST" enctype="multipart/form-data">
> <b>Filename</b>: <input type="file" name="file">
> </form>
> 
> And a form handler "doit" in process.py:
> 
> def doit(req, file):
>     # ...
> 
> The 'file' argument is a file object representing the uploaded file:
> you can read from this as you would any other file.
> 
> You should check to make sure that the file has a non-zero length:
> 
> import os, stat
> statinfo = os.fstat(file.fileno())
> if statinfo[stat.ST_SIZE] > 0:
>     # process the text
> else:
>     # it's an empty file, or it didn't exist!
> 
> You should also look at the content type of the uploaded file. You can
> access this via the form table in the request record:
> 
> _file = req.form['file']
> if _file.type == "text/plain":
>     # process plain text
> 
> That should be enough to get you started, I expect.
> 
>     -tree
> 
> -- 
> Tom Emerson                                          Basis Technology Corp.
> Sr. Computational Linguist                         http://www.basistech.com
>   "Beware the lollipop of mediocrity: lick it once and you suck forever"
> 

-- 
Chris Hilton                                 chilton-at-vindaloo-dot-com
------------------------------------------------------------------------
                "All I was doing was trying to get home from work!"
                                                 -- Rosa Parks

From msdemlei at cl.uni-heidelberg.de  Wed Apr 17 10:33:51 2002
From: msdemlei at cl.uni-heidelberg.de (Markus Demleitner)
Date: Fri Jan  9 21:52:48 2004
Subject: [mod_python] Simulating non parsed header scripts
Message-ID: <20020417083351.GA28501@tucana.cl.uni-heidelberg.de>

Hi,

The FAQ states that a redirection should be done this way:

 req.headers_out['location'] = 'http://www.modpython.org/'  
     req.status = apache.HTTP_MOVED_TEMPORARILY
     req.send_http_header()
     return apache.OK

Unfortunately, I couldn't find status in the docs, and so
I'm a bit uncertain what else I can do with status.
Basically, I want to port an nph-script, so is it ok
to set status to whatever I want in the server's response 
line (500, 302, 200, whatever) and then return apache.OK?

Also, my classes generate "`raw"' http result codes (instead
of symbolic names from the apache module).  I like it this
way, because I can use them with or without mod_python.  Is
there any danger in assigning those to req.status?

Minor gripes: The link to the complete mailing list archive
is dead, and in the docs for 5.1.9 PythonHandler, a % in the
TeX source is missing a backslash.

Cheers,

        Markus

From Nik.Barron at pennantplc.co.uk  Wed Apr 17 09:47:24 2002
From: Nik.Barron at pennantplc.co.uk (Nik Barron)
Date: Fri Jan  9 21:52:48 2004
Subject: [mod_python] Simulating non parsed header scripts
Message-ID: <F17550784FF9D111B7F100E02921B24741E862@NT-SOTON-001>

> Also, my classes generate "`raw"' http result codes (instead
> of symbolic names from the apache module).  I like it this
> way, because I can use them with or without mod_python.  Is
> there any danger in assigning those to req.status?

This should be OK, as the HTTP_xxx constants are all defined in apache.py
(line 623 onwards). The usual caveats about future compatibility etc apply I
guess.

Nik (mod_python newbie, so handle advice with care ;)

From grisha at modpython.org  Wed Apr 17 09:18:11 2002
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 21:52:48 2004
Subject: [mod_python] Simulating non parsed header scripts
In-Reply-To: <20020417083351.GA28501@tucana.cl.uni-heidelberg.de>
Message-ID: <Pine.BSF.4.32.0204170914400.41336-100000@localhost>

On Wed, 17 Apr 2002, Markus Demleitner wrote:

> Hi,
>
> The FAQ states that a redirection should be done this way:
>
>  req.headers_out['location'] = 'http://www.modpython.org/'
>      req.status = apache.HTTP_MOVED_TEMPORARILY
>      req.send_http_header()
>      return apache.OK
>
> Unfortunately, I couldn't find status in the docs, and so
> I'm a bit uncertain what else I can do with status.
> Basically, I want to port an nph-script, so is it ok
> to set status to whatever I want in the server's response
> line (500, 302, 200, whatever) and then return apache.OK?

Yes, if I remember it correctly, setting status to whatever, then
returning OK will work. You will probably need req.send_http_header() as
well, because I think that that is what actually sends the status line
out.


> Also, my classes generate "`raw"' http result codes (instead
> of symbolic names from the apache module).  I like it this
> way, because I can use them with or without mod_python.  Is
> there any danger in assigning those to req.status?

The constants are just integers. I like using them because they are more
descriptive than 302.

> Minor gripes: The link to the complete mailing list archive
> is dead, and in the docs for 5.1.9 PythonHandler, a % in the
> TeX source is missing a backslash.

Can you e-mail me off-list where specifically it is?

Grisha


From msdemlei at cl.uni-heidelberg.de  Wed Apr 17 20:55:12 2002
From: msdemlei at cl.uni-heidelberg.de (Markus Demleitner)
Date: Fri Jan  9 21:52:48 2004
Subject: [mod_python] .value in FieldStorage
Message-ID: <20020417185512.GB957@tucana.cl.uni-heidelberg.de>

Hi,

I'm again working on my project of migrating from CGI to mod_python.
This time, it's FieldStorage.  For some reason, FieldStorage.__getitem__
may return strings instead of fields.  When you want to keep your
classes compatible with cgi's FieldStorage, that's of course a
major showstopper, since every access to the value attribute
raises an exception.

As an emergency patch (I needed to get this done, since some
gadget of mine was causing excessive server loads when it
didn't need to), I added

import UserString

class StringWithValue(UserString.UserString):
  def __init__(self, val):
    UserString.UserString.__init__(self, val)
    self.value = val

at the top of util.py and changed then end of FieldStorage's
__getitem__ to
        if len(found) == 1:
          if isinstance(found[0], Field):
            return found[0]
          else:
            return StringWithValue(found[0])
        else:
          return found


This is of course super-ugly and will break when someone updates
mod_python.

Is FieldStorage's behaviour again due to my stupidity?  If not,
are there any plans to change it so it always returns Fields?

Cheers,

       Markus

From grisha at modpython.org  Wed Apr 17 16:39:35 2002
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 21:52:48 2004
Subject: [mod_python] .value in FieldStorage
In-Reply-To: <20020417185512.GB957@tucana.cl.uni-heidelberg.de>
Message-ID: <Pine.BSF.4.32.0204171635520.45255-100000@localhost>

Markus -

The rationale is that not everyone using mod_python is migrating from CGI.
For those of us who are writing mod_python handlers from scratch having to
use .value all over the place seemed like an annoyance.

Rather than patching mod_python code, I suggest either subclassing
FieldStorage, or using cgi.FieldStorage.

Grisha

On Wed, 17 Apr 2002, Markus Demleitner wrote:

> Hi,
>
> I'm again working on my project of migrating from CGI to mod_python.
> This time, it's FieldStorage.  For some reason, FieldStorage.__getitem__
> may return strings instead of fields.  When you want to keep your
> classes compatible with cgi's FieldStorage, that's of course a
> major showstopper, since every access to the value attribute
> raises an exception.
>
> As an emergency patch (I needed to get this done, since some
> gadget of mine was causing excessive server loads when it
> didn't need to), I added
>
> import UserString
>
> class StringWithValue(UserString.UserString):
>   def __init__(self, val):
>     UserString.UserString.__init__(self, val)
>     self.value = val
>
> at the top of util.py and changed then end of FieldStorage's
> __getitem__ to
>         if len(found) == 1:
>           if isinstance(found[0], Field):
>             return found[0]
>           else:
>             return StringWithValue(found[0])
>         else:
>           return found
>
>
> This is of course super-ugly and will break when someone updates
> mod_python.
>
> Is FieldStorage's behaviour again due to my stupidity?  If not,
> are there any plans to change it so it always returns Fields?
>
> Cheers,
>
>        Markus
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://www.modpython.org/mailman/listinfo/mod_python
>


From sa at sfsu.edu  Thu Apr 18 15:49:37 2002
From: sa at sfsu.edu (Sean Abrahams)
Date: Fri Jan  9 21:52:48 2004
Subject: [mod_python] import _apache fails
Message-ID: <5192884570.20020418154937@sfsu.edu>

Going through the docs, testing my mod_python install and getting this
message in the apache logs:

File "mptest.py", line 3, in ?
from mod_python import apache
File "/usr/lib/python2.1/site-packages/mod_python/apache.py", line 55, in ?
import _apache
ImportError: No module named _apache

I've looked around and found something in regards to this won't work
from the command line, but as I stated, this is from the apache error
log, generated when calling the script from the web.

Running:
Debian Testing / GNU/Linux 2.2.17
Apache 1.3.9-14 / Mod Python 2.7.6-1

I used apt-get to grab and install modpython.

Thanks,
Sean


From johannes at erdfelt.com  Thu Apr 18 21:30:48 2002
From: johannes at erdfelt.com (Johannes Erdfelt)
Date: Fri Jan  9 21:52:48 2004
Subject: [mod_python] [patch] 2.7.6 null publisher function
Message-ID: <20020418213048.A22717@sventech.com>

I've been playing around with mod_python lately and I like it so far.
The only thing I didn't like is the requirement for a function to be
passed before publisher will run anything.

I'd kind of a purist when it comes to URL's, so I made this patch. If
there is no function passed, it defaults to "handler".

JE

-------------- next part --------------
--- mod_python/publisher.py.orig	Tue Apr 16 20:31:06 2002
+++ mod_python/publisher.py	Tue Apr 16 20:34:45 2002
@@ -80,17 +80,17 @@
     args = {}
 
     # get the path PATH_INFO (everthing after script)
-    if not _req.subprocess_env.has_key("PATH_INFO"):
-        raise apache.SERVER_RETURN, apache.HTTP_NOT_FOUND
-    
-    func_path = _req.subprocess_env["PATH_INFO"][1:] # skip fist /
-    func_path = string.replace(func_path, "/", ".")
-    if func_path[-1] == ".":
-        func_path = func_path[:-1] 
+    if _req.subprocess_env.has_key("PATH_INFO"):
+        func_path = _req.subprocess_env["PATH_INFO"][1:] # skip fist /
+        func_path = string.replace(func_path, "/", ".")
+        if func_path[-1] == ".":
+            func_path = func_path[:-1] 
 
-    # if any part of the path begins with "_", abort
-    if func_path[0] == '_' or string.count(func_path, "._"):
-        raise apache.SERVER_RETURN, apache.HTTP_NOT_FOUND
+        # if any part of the path begins with "_", abort
+        if func_path[0] == '_' or string.count(func_path, "._"):
+            raise apache.SERVER_RETURN, apache.HTTP_NOT_FOUND
+    else:
+        func_path = "handler"
 
     # process input, if any
     fs = util.FieldStorage(req, keep_blank_values=1)
From msdemlei at cl.uni-heidelberg.de  Fri Apr 19 09:26:12 2002
From: msdemlei at cl.uni-heidelberg.de (Markus Demleitner)
Date: Fri Jan  9 21:52:48 2004
Subject: [mod_python] import _apache fails
In-Reply-To: <5192884570.20020418154937@sfsu.edu>
References: <5192884570.20020418154937@sfsu.edu>
Message-ID: <20020419072612.GA2929@tucana.cl.uni-heidelberg.de>

On Thu, Apr 18, 2002 at 03:49:37PM -0700, Sean Abrahams wrote:
> Going through the docs, testing my mod_python install and getting this
> message in the apache logs:
> 
> File "mptest.py", line 3, in ?
> from mod_python import apache
> File "/usr/lib/python2.1/site-packages/mod_python/apache.py", line 55, in ?
> import _apache
> ImportError: No module named _apache
> 
> I've looked around and found something in regards to this won't work
> from the command line, but as I stated, this is from the apache error
> log, generated when calling the script from the web.
> 
> Running:
> Debian Testing / GNU/Linux 2.2.17
> Apache 1.3.9-14 / Mod Python 2.7.6-1
> 
> I used apt-get to grab and install modpython.

Chanches are your mptest.py is not executed as a handler but as a
CGI -- check your httpd.conf and make sure there's something like
  AddHandler python-program .py
	PythonHandler unimut_modpython
in there and that the directives are active for whatever directory
your mptest.py is in.

    Markus

From johnny.morano at vlaanderen.be  Fri Apr 19 10:39:03 2002
From: johnny.morano at vlaanderen.be (Johnny Morano)
Date: Fri Jan  9 21:52:48 2004
Subject: [mod_python] newbie question regarding postgresql
Message-ID: <200204190934.g3J9Y5Y19977@s001032.vlaanderen.be>

hey all,

I'm trying to make a python script for database connection, but it doesn't 
seem to work in mod_python, although it runs fine on the command line.
Can anyone see my big mistake?

--begin-code---
from mod_python import apache
import pgdb

def s(req):
        nHost='localhost'
        nDbname='netdoc'
        readUser='nd_read'

        con = pgdb.connect(dsn=nHost+':'+nDbname, user=readUser)
        curs = con.cursor()
        curs.execute(""" SELECT relname as tablename
                         , pg_get_userbyid(relowner) AS tableowner
                         , relhasindex as hasindexes
                         , relhasrules as hasrules
                         , reltriggers as hastriggers
                         , pg_class.oid
                         , description as table_description
                         , relacl
                      FROM pg_class
                      LEFT OUTER JOIN pg_description on (   pg_class.oid = 
pg_description.objoid
                                                      AND 
pg_description.objsubid = 0)
                     WHERE (  relkind = 'r'::"char"
                           OR relkind = 's'::"char"
                           )
                       AND relname NOT LIKE 'pg_%' """)
        rows = curs.fetchall()
        x = "the table names: \n"
        for row in rows:
                x += "\t" + row[0] + "\n"
        return x
---end-code---

thanx !
-- 
Johnny Morano - Linux Consultant
___________________________________________________ 
 Ministerie Vlaamse Gemeenschap                    |
 Koning Albert II-laan, 7 (610) 1210 Brussel       |
 tel: 02/5531319 mail: johnny.morano@vlaanderen.be |

From sandor.kopanyi at mailbox.hu  Fri Apr 19 10:53:40 2002
From: sandor.kopanyi at mailbox.hu (sandor.kopanyi@mailbox.hu)
Date: Fri Jan  9 21:52:48 2004
Subject: [mod_python] newbie question regarding postgresql
In-Reply-To: <200204190934.g3J9Y5Y19977@s001032.vlaanderen.be>
Message-ID: <20020419085340.14294.qmail@web2.mailbox.hu>

Try to put backslashes inside the SQL-string, like this (see
end of each line):

>         curs.execute(""" SELECT relname as tablename 
>                          , pg_get_userbyid(relowner) AS tableowner 
>                          , relhasindex as hasindexes 
etc.

--------------------------------------------------
http://www.mailbox.hu - Mert levelezni kell...


From johnny.morano at vlaanderen.be  Fri Apr 19 11:17:46 2002
From: johnny.morano at vlaanderen.be (Johnny Morano)
Date: Fri Jan  9 21:52:48 2004
Subject: [mod_python] newbie question regarding postgresql
In-Reply-To: <20020419085340.14294.qmail@web2.mailbox.hu>
References: <20020419085340.14294.qmail@web2.mailbox.hu>
Message-ID: <200204191012.g3JACmY24851@s001032.vlaanderen.be>

so mean like this?:

curs.execute(""" SELECT relname as tablename \
                          , pg_get_userbyid(relowner) AS tableowner \
                          , relhasindex as hasindexes \
                          , relhasrules as hasrules \
                          , reltriggers as hastriggers \

doesn't work either. my web server gives me an internal error and the error 
message is that Dispatch doesn't return anything


On Friday 19 April 2002 10:53, you wrote:
> Try to put backslashes inside the SQL-string, like this (see
>
> end of each line):
> >         curs.execute(""" SELECT relname as tablename
> >                          , pg_get_userbyid(relowner) AS tableowner
> >                          , relhasindex as hasindexes
>
> etc.
>
> --------------------------------------------------
> http://www.mailbox.hu - Mert levelezni kell...
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://www.modpython.org/mailman/listinfo/mod_python

-- 
Johnny Morano - Linux Consultant
___________________________________________________ 
 Ministerie Vlaamse Gemeenschap                    |
 Koning Albert II-laan, 7 (610) 1210 Brussel       |
 tel: 02/5531319 mail: johnny.morano@vlaanderen.be |

From johnny.morano at vlaanderen.be  Fri Apr 19 12:46:48 2002
From: johnny.morano at vlaanderen.be (Johnny Morano)
Date: Fri Jan  9 21:52:48 2004
Subject: [mod_python] newbie question regarding postgresql
Message-ID: <200204191141.g3JBfoY03098@s001032.vlaanderen.be>

On Friday 19 April 2002 12:13, you wrote:
> >         for row in rows:
> >                 x += "\t" + row[0] + "\n"
> >         return x
>
> An Apache handler doesn't return a string -- it returns a status code.  The
> string should be written to the req object after sending the proper
> headers. Check the documentation for more.

well actually, that's not true. i have other scripts (mailscripts) which
handle this perfectly.
but, changing the end of my code into:

for row in rows:
                x += "\t" + row[0] + "\n"
        x += "</p></body></html>"
        req.write(x)
        return apache.OK

doesn't change a thing...

johnny
-- 
Johnny Morano - Linux Consultant
___________________________________________________ 
 Ministerie Vlaamse Gemeenschap                    |
 Koning Albert II-laan, 7 (610) 1210 Brussel       |
 tel: 02/5531319 mail: johnny.morano@vlaanderen.be |

From johnny.morano at vlaanderen.be  Fri Apr 19 14:43:24 2002
From: johnny.morano at vlaanderen.be (Johnny Morano)
Date: Fri Jan  9 21:52:48 2004
Subject: [mod_python] newbie question regarding postgresql
In-Reply-To: <3B5AE7F3-5392-11D6-B58C-0003938210D6@redivi.com>
References: <3B5AE7F3-5392-11D6-B58C-0003938210D6@redivi.com>
Message-ID: <200204191338.g3JDcQY13870@s001032.vlaanderen.be>

thanx for the reply(s/y/ies/)!
but the problem is something redhat-ish... the same code works perfect on 
debian, but refuses to run on redhat... libraries, dependencies, way too much 
policies ;-)



On Friday 19 April 2002 14:37, you wrote:
> My best guess as to why PostgreSQL isn't working from your web server is
> that you haven't given the webserver credentials to use the database.
> Create a user with the same name as the user that apache runs as
> (nobody, www, www-data) and then try it.
>
> This isn't an answer to your problem.. but Python has a feature such
> that if you do this:
>
> (""" my really really """
>   """ long string that gets split up """"
>   """ over a bunch of lines """
>   """ ............"""")
>
> then it turns out as one string with no \n's, without the runtime cost
> of using +=.  This is because python just concatenates adjacent strings
> if they aren't separated by anything.. i.e. ("""blah""" 'blah' "blah")
> is 'blahblahblah'.
>
> -bob
>
> On Friday, April 19, 2002, at 05:17 AM, Johnny Morano wrote:
> > so mean like this?:
> >
> > curs.execute(""" SELECT relname as tablename \
> >                           , pg_get_userbyid(relowner) AS tableowner \
> >                           , relhasindex as hasindexes \
> >                           , relhasrules as hasrules \
> >                           , reltriggers as hastriggers \
> >
> > doesn't work either. my web server gives me an internal error and the
> > error
> > message is that Dispatch doesn't return anything
> >
> > On Friday 19 April 2002 10:53, you wrote:
> >> Try to put backslashes inside the SQL-string, like this (see
> >>
> >> end of each line):
> >>>         curs.execute(""" SELECT relname as tablename
> >>>                          , pg_get_userbyid(relowner) AS tableowner
> >>>                          , relhasindex as hasindexes
> >>
> >> etc.
> >>
> >> --------------------------------------------------
> >> http://www.mailbox.hu - Mert levelezni kell...
> >>
> >> _______________________________________________
> >> Mod_python mailing list
> >> Mod_python@modpython.org
> >> http://www.modpython.org/mailman/listinfo/mod_python
> >
> > --
> > Johnny Morano - Linux Consultant
> > ___________________________________________________
> >  Ministerie Vlaamse Gemeenschap                    |
> >  Koning Albert II-laan, 7 (610) 1210 Brussel       |
> >  tel: 02/5531319 mail: johnny.morano@vlaanderen.be |
> > _______________________________________________
> > Mod_python mailing list
> > Mod_python@modpython.org
> > http://www.modpython.org/mailman/listinfo/mod_python

-- 
Johnny Morano - Linux Consultant
___________________________________________________ 
 Ministerie Vlaamse Gemeenschap                    |
 Koning Albert II-laan, 7 (610) 1210 Brussel       |
 tel: 02/5531319 mail: johnny.morano@vlaanderen.be |

From jquinte at fadu.uba.ar  Fri Apr 19 11:30:37 2002
From: jquinte at fadu.uba.ar (Javier Quinteros)
Date: Fri Jan  9 21:52:48 2004
Subject: [mod_python] Now you see it, now you don't...
Message-ID: <200204190834.LAA19242@www.fadu.uba.ar>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

Hi, all !!!
I don't know if this have been posted yet.
I call a function named "RealAlumno" in a script "alumno.py" by 
clicking a link in my browser. Everything works fine and returns me a new 
page with links that points to the same function in the same script. The 
matter is that I can keep clicking a couple of times, but after that, Apache 
starts telling me that there's no existing function like that. There's no 
broken link because sometimes I can press the Back button and try again and 
it works. But, the most of the time, I have to restart Apache to keep working.

Does any of you know what's going on???

I'm working with Apache 1.3.22, Python 1.5.2 and ModPython 2.7.7.

Bye,

- -- 
- ---------------------------------
Javier Quinteros
jquinte@fadu.uba.ar
Secretar?a de Planificaci?n
Universidad de Buenos Aires
- ---------------------------------
Existe un solo lugar donde el Norte y el Sur del mundo se enfrentan en
igualdad de condiciones: es una cancha de f?tbol de Brasil, en la 
desembocadura
del r?o Amazonas. La l?nea del ecuador corta por la mitad el estadio Zerao, en
Amap?, de modo que cada equipo juega un tiempo en el sur y otro tiempo en el
norte.
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.0.6 (GNU/Linux)
Comment: For info see http://www.gnupg.org

iD8DBQE8wCoTdBzRnlFl4cgRAhhBAKCBcxAQhlZzzP2ZxHw7VWSg1SzjAACguzIx
i0Y2PxX4XKNn2y/FtpTPfio=
=D6eC
-----END PGP SIGNATURE-----

From grisha at modpython.org  Fri Apr 19 11:10:43 2002
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 21:52:48 2004
Subject: [mod_python] Now you see it, now you don't...
In-Reply-To: <200204190834.LAA19242@www.fadu.uba.ar>
Message-ID: <Pine.BSF.4.32.0204191109530.73892-100000@localhost>

There is a bug in 2.7.7 which I'll try to fix today and release 2.7.8.

On Fri, 19 Apr 2002, Javier Quinteros wrote:

> -----BEGIN PGP SIGNED MESSAGE-----
> Hash: SHA1
>
> Hi, all !!!
> I don't know if this have been posted yet.
> I call a function named "RealAlumno" in a script "alumno.py" by
> clicking a link in my browser. Everything works fine and returns me a new
> page with links that points to the same function in the same script. The
> matter is that I can keep clicking a couple of times, but after that, Apache
> starts telling me that there's no existing function like that. There's no
> broken link because sometimes I can press the Back button and try again and
> it works. But, the most of the time, I have to restart Apache to keep working.
>
> Does any of you know what's going on???
>
> I'm working with Apache 1.3.22, Python 1.5.2 and ModPython 2.7.7.
>
> Bye,
>
> - --
> - ---------------------------------
> Javier Quinteros
> jquinte@fadu.uba.ar
> Secretar?a de Planificaci?n
> Universidad de Buenos Aires
> - ---------------------------------
> Existe un solo lugar donde el Norte y el Sur del mundo se enfrentan en
> igualdad de condiciones: es una cancha de f?tbol de Brasil, en la
> desembocadura
> del r?o Amazonas. La l?nea del ecuador corta por la mitad el estadio Zerao, en
> Amap?, de modo que cada equipo juega un tiempo en el sur y otro tiempo en el
> norte.
> -----BEGIN PGP SIGNATURE-----
> Version: GnuPG v1.0.6 (GNU/Linux)
> Comment: For info see http://www.gnupg.org
>
> iD8DBQE8wCoTdBzRnlFl4cgRAhhBAKCBcxAQhlZzzP2ZxHw7VWSg1SzjAACguzIx
> i0Y2PxX4XKNn2y/FtpTPfio=
> =D6eC
> -----END PGP SIGNATURE-----
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://www.modpython.org/mailman/listinfo/mod_python
>


From grisha at ispol.com  Fri Apr 19 14:42:58 2002
From: grisha at ispol.com (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 21:52:48 2004
Subject: [mod_python] 2.7.8
Message-ID: <Pine.BSF.4.32.0204191441370.76579-100000@localhost>

Version 2.7.8 is out there. It addresses the 404 issue that was introduced
in 2.7.7 as a side effect of fixing the security flaw in the publisher.

Grisha


From reitz at inworks.de  Sun Apr 21 04:21:05 2002
From: reitz at inworks.de (Andre Reitz)
Date: Fri Jan  9 21:52:48 2004
Subject: [mod_python] 2.7.8
In-Reply-To: <Pine.BSF.4.32.0204191441370.76579-100000@localhost>
References: <Pine.BSF.4.32.0204191441370.76579-100000@localhost>
Message-ID: <20020421042105.4d12d745.reitz@inworks.de>

On Fri, 19 Apr 2002 14:42:58 -0400 (EDT)
"Gregory (Grisha) Trubetskoy" <grisha@ispol.com> wrote:

> 
> Version 2.7.8 is out there. It addresses the 404 issue that was introduced
> in 2.7.7 as a side effect of fixing the security flaw in the publisher.
> 

Hy,

You forgot again to Fix the following Bug,
This is a Very Big BOBO!!!!!:


def setup_cgi(req):
    """
    Replace sys.stdin and stdout with an objects that read/write to
    the socket, as well as substitute the os.environ.
    Returns (environ, stdin, stdout) which you must save and then use
    with restore_nocgi().
    """

    # save env
#    env = os.environ.copy()
    originalenv = os.environ.copy()   <<<<<<<<<<<<<=====
    
    si = sys.stdin
    so = sys.stdout

    env = build_cgi_env(req)
 
    for k in env.keys():
        os.environ[k] = env[k]

    sys.stdout = CGIStdout(req)
    sys.stdin = CGIStdin(req)

    sys.argv = [] # keeps cgi.py happy

#    return env, si, so
    return originalenv, si, so <<<<<<<<======
        



Will You release Version 2.7.9 TOMORROW?????
:)

Greetings, Andre'



> Grisha
> 
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://www.modpython.org/mailman/listinfo/mod_python


-- 
_____________________________________________
inworks GmbH            Andre Reitz		
Magirusstrasse 44	Tel. 0731/93 80 7-21
89077 Ulm		http://www.inworks.de


From s13361562 at bach.sun.ac.za  Sun Apr 21 17:31:29 2002
From: s13361562 at bach.sun.ac.za (Hugo van der Merwe)
Date: Fri Jan  9 21:52:48 2004
Subject: [mod_python] taking over the main "index" page with mod_python?
Message-ID: <20020421153129.GA15290@vervet.localnet>

Hello,

I want to have the page returned by

http://my.web.site/

also be served by the mod_python publisher, e.g. I want it to load the
same thing as /show.py/norm - what is the simplest way to do this?
Something with DirectoryIndex? Or maybe with a normal mod_python handler
and a small python "wrapper"?

I hope this hasn't been asked too many times before. I could not find 
anything in the documentation included in the Debian 
libapache-mod-python package, version 2:2.7.6-1, and that does include 
the Mod_python manual for 2.7.6.

About updating to the newer mod_python for the security exploits: I have
sent an email asking for an update of the Debian package, and will
follow up on the issue.

Thanks,
Hugo van der Merwe

From bob at redivi.com  Sun Apr 21 12:05:57 2002
From: bob at redivi.com (Bob Ippolito)
Date: Fri Jan  9 21:52:48 2004
Subject: [mod_python] taking over the main "index" page with mod_python?
In-Reply-To: <20020421153129.GA15290@vervet.localnet>
Message-ID: <AA5F0186-5541-11D6-A4BB-0003938210D6@redivi.com>

There's always mod_rewrite.

On Sunday, April 21, 2002, at 11:31 AM, Hugo van der Merwe wrote:

> Hello,
>
> I want to have the page returned by
>
> http://my.web.site/
>
> also be served by the mod_python publisher, e.g. I want it to load the
> same thing as /show.py/norm - what is the simplest way to do this?
> Something with DirectoryIndex? Or maybe with a normal mod_python handler
> and a small python "wrapper"?
>
> I hope this hasn't been asked too many times before. I could not find
> anything in the documentation included in the Debian
> libapache-mod-python package, version 2:2.7.6-1, and that does include
> the Mod_python manual for 2.7.6.
>
> About updating to the newer mod_python for the security exploits: I have
> sent an email asking for an update of the Debian package, and will
> follow up on the issue.
>
> Thanks,
> Hugo van der Merwe
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://www.modpython.org/mailman/listinfo/mod_python


From tree at basistech.com  Sun Apr 21 16:42:14 2002
From: tree at basistech.com (Tom Emerson)
Date: Fri Jan  9 21:52:48 2004
Subject: [mod_python] taking over the main "index" page with mod_python?
In-Reply-To: <20020421153129.GA15290@vervet.localnet>
References: <20020421153129.GA15290@vervet.localnet>
Message-ID: <15555.9254.679995.356595@magrathea.basistech.com>

Hugo van der Merwe writes:
> Hello,
> 
> I want to have the page returned by
> 
> http://my.web.site/
> 
> also be served by the mod_python publisher, e.g. I want it to load the
> same thing as /show.py/norm - what is the simplest way to do this?
> Something with DirectoryIndex? Or maybe with a normal mod_python handler
> and a small python "wrapper"?

DirectoryIndex in the .htaccess file works perfectly.

    -tree

-- 
Tom Emerson                                          Basis Technology Corp.
Sr. Computational Linguist                         http://www.basistech.com
  "Beware the lollipop of mediocrity: lick it once and you suck forever"

From grisha at modpython.org  Sun Apr 21 20:47:14 2002
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 21:52:49 2004
Subject: [mod_python] taking over the main "index" page with mod_python?
In-Reply-To: <15555.9254.679995.356595@magrathea.basistech.com>
Message-ID: <Pine.BSF.4.32.0204212046380.9310-100000@localhost>

Or how about just SetHandler in the DocumentRoot directory.

Grisha

On Sun, 21 Apr 2002, Tom Emerson wrote:

> Hugo van der Merwe writes:
> > Hello,
> >
> > I want to have the page returned by
> >
> > http://my.web.site/
> >
> > also be served by the mod_python publisher, e.g. I want it to load the
> > same thing as /show.py/norm - what is the simplest way to do this?
> > Something with DirectoryIndex? Or maybe with a normal mod_python handler
> > and a small python "wrapper"?
>
> DirectoryIndex in the .htaccess file works perfectly.
>
>     -tree
>
> --
> Tom Emerson                                          Basis Technology Corp.
> Sr. Computational Linguist                         http://www.basistech.com
>   "Beware the lollipop of mediocrity: lick it once and you suck forever"
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://www.modpython.org/mailman/listinfo/mod_python
>


From thanos at 0x01.com  Mon Apr 22 11:26:14 2002
From: thanos at 0x01.com (thanos@0x01.com)
Date: Fri Jan  9 21:52:49 2004
Subject: [mod_python] Easy mod_python Session Handling with pso
Message-ID: <20020422152614.19811.qmail@0x01.com>

"@0x01.com
X-Mailer: ELM [version 2.5 PL5]
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Transfer-Encoding: 7bit

How-To: Easy mod_python Session Handling with pso           

Shows how to add easy session handling in mod_python with Python Service
Objects.

This document shows you how to use pso.session to add easy session
handling to a mod_python request handler. Python Service Objects is a
open source internet service development system. Its session module is
ideal for use with mod_python, and in fact included in this package is
ModPythonRequest which is the mod_python implementation bridge. The pso
system allows you to develop platform and server independent request
handlers.


URL:  http://www.scriptfoundry.com/modules/pso/doc/session-modpython.html

From cmeyer at carleton.edu  Mon Apr 22 11:34:26 2002
From: cmeyer at carleton.edu (Chris Meyer)
Date: Fri Jan  9 21:52:49 2004
Subject: [mod_python] Mod_python & apache on Solaris 8 compile problems
Message-ID: <3CC43B92.9040605@carleton.edu>

Greetings all,

I've been trying to build mod_python 2.7.5 into apache 1.3.23 on a 
Solaris 8 system for several days now, and whenever I issue "make" to 
apache after a "./configure 
--activate-module=src/modules/python/libpython.a" I keep on getting the 
same compile errors:

.
.
.
<=== src/modules
gcc -c  -I./os/unix -I./include   -DSOLARIS2=280 -DUSE_EXPAT 
-I./lib/expat-lite -DNO_DL_NEEDED `./apaci` modules.c
gcc -c  -I./os/unix -I./include   -DSOLARIS2=280 -DUSE_EXPAT 
-I./lib/expat-lite -DNO_DL_NEEDED `./apaci` buildmark.c
gcc  -DSOLARIS2=280 -DUSE_EXPAT -I./lib/expat-lite -DNO_DL_NEEDED 
`./apaci`    \
       -o httpd buildmark.o modules.o  modules/python/libpython.a 
modules/standard/libstandard.a  main/libmain.a  ./os/unix/libos.a 
ap/libap.a  lib/expat-lite\
libexpat.a  -lsocket -lnsl
Undefined                       first referenced
  symbol                             in file
PySequence_Index                    modules/python/libpython.a(mod_python.o)
Py_InitModule4 
modules/python/libpython.a(_apachemodule.o)
PyString_FromStringAndSize 
modules/python/libpython.a(_apachemodule.o)
PyExc_TypeError 
modules/python/libpython.a(tableobject.o)
.
.   about fifty or so undefined symbols later
.
Py_Initialize                       modules/python/libpython.a(mod_python.o)
PyErr_SetObject 
modules/python/libpython.a(requestobject.o)
PyString_Type 
modules/python/libpython.a(tableobject.o)
ld: fatal: Symbol referencing errors. No output written to httpd
collect2: ld returned 1 exit status
*** Error code 1
make: Fatal error: Command failed for target `target_static'
Current working directory /home/root/apache_1.3.23/src
*** Error code 1
make: Fatal error: Command failed for target `build-std'
Current working directory /home/root/apache_1.3.23
*** Error code 1
make: Fatal error: Command failed for target `build'
#

Is there anybody who's encountered this before, or can tell me what a 
fix might be? On a slightly related note, I got something similar when I 
tried compiling mod_perl (1.26) as well (without mod_python), but only 
when I issued the command manually from the apache directory--when I 
told the mod_perl configure script to build httpd for me, it went just 
fine. That says to me that it might be something with the way I have my 
system (a 64-bit Netra X1) set up, but I'll be darned if I can find out 
what's misconfigured.

Any help anyone can give would be greatly appreciated.

	-Chris Meyer


From sobral at sj.univali.br  Mon Apr 22 14:27:35 2002
From: sobral at sj.univali.br (Marcelo M. Sobral)
Date: Fri Jan  9 21:52:49 2004
Subject: [mod_python] Mod_python & apache on Solaris 8 compile problems
In-Reply-To: <3CC43B92.9040605@carleton.edu>
Message-ID: <Pine.LNX.4.33.0204221425350.9747-100000@so.sj.univali.br>

On Mon, 22 Apr 2002, Chris Meyer wrote:

> I've been trying to build mod_python 2.7.5 into apache 1.3.23 on a 
> Solaris 8 system for several days now, and whenever I issue "make" to 
> apache after a "./configure 
> --activate-module=src/modules/python/libpython.a" I keep on getting the 
> same compile errors:
> 
> .
> .
> .
> <=== src/modules
> gcc -c  -I./os/unix -I./include   -DSOLARIS2=280 -DUSE_EXPAT 
> -I./lib/expat-lite -DNO_DL_NEEDED `./apaci` modules.c
> gcc -c  -I./os/unix -I./include   -DSOLARIS2=280 -DUSE_EXPAT 
> -I./lib/expat-lite -DNO_DL_NEEDED `./apaci` buildmark.c
> gcc  -DSOLARIS2=280 -DUSE_EXPAT -I./lib/expat-lite -DNO_DL_NEEDED 
> `./apaci`    \
>        -o httpd buildmark.o modules.o  modules/python/libpython.a 
> modules/standard/libstandard.a  main/libmain.a  ./os/unix/libos.a 
> ap/libap.a  lib/expat-lite\
> libexpat.a  -lsocket -lnsl
> Undefined                       first referenced
>   symbol                             in file
> PySequence_Index                    modules/python/libpython.a(mod_python.o)
> Py_InitModule4 
> modules/python/libpython.a(_apachemodule.o)
> PyString_FromStringAndSize 
> modules/python/libpython.a(_apachemodule.o)
> PyExc_TypeError 
> modules/python/libpython.a(tableobject.o)
> .
> .   about fifty or so undefined symbols later

   Hi.

   Your libpython.a was compiled without PIC (position independent code). 
Try to recompile it with option -fpic passed to gcc (libpython.a is in the 
Python source code).

   Good luck.

  -----------------------------
  Prof. Marcelo Maia Sobral
  Administrador de Redes
  Nucleo de Informatica
  Univali - Campus S?o Jos?
  Fone: (0xx48) 281-1595
  -----------------------------


-----BEGIN PGP PUBLIC KEY BLOCK-----
Version: GnuPG v1.0.6 (GNU/Linux)
Comment: For info see http://www.gnupg.org

mQGiBDwiFZQRBACpWV7f+1b1H2Efm9WHM5LnQxQcXEBz/SHff9B909IL5kl5zAL1
F4+mABr4g25wUGKb2SLk6/zb7EPpgI6IrfG7gKqv4PRn8KRkGANSdSouiyqKd8qa
JPIwR7i5cCV1hz2p4T7An5307HiJj/BiAXtDtPnD9JKf3gx4upOqbyyyYwCg8gFr
AdI1OK++OvBcyCebHM4ojoUEAJedtyxaL/A3rnQ1Ni2DiX60I3mbCx2eWUgm506S
RCkwuMzIB2tEMGQg3acqZvTk/7i6ek01Hkk7d8UCZjubKnj8kN23ew5k5/PbFMbF
+02tvYy91240MBmTswgW/QTjpU6dRdhtOwOLuuNKUPOII1TtdqQUg+/sWnyfLyrC
5XSGA/wPJAVIEFbvwQUb/XPr9hi+flNjsgEvv6cZDs4b83YwtdXuY4OZH7EyeQ4p
+aBlkjNJIdqKB6gw7sv5hdAlX+zKgIukw2jDa63PZl3TiIx1y06p5lDWpqbbhVIG
ky1cWRif6vo0p2bPeuwcaNleiZiL1hvR79wLw3EYsMB3tbDAJLRPTWFyY2VsbyBN
YWlhIFNvYnJhbCAoQWRtaW5pc3RyYWRvciBkZSByZWRlIC0gVW5pdmFsaS1TSikg
PHNvYnJhbEBzai51bml2YWxpLmJyPohdBBMRAgAdBQI8IhWUBQkA7U4ABQsHCgME
AxUDAgMWAgECF4AACgkQ6vNSIUi7iuxQPgCgjRxk9vyJVt94CjySkZKcDj7jyB4A
niVhSkObCMg4iZMSTvD9HZRKAtu6uQENBDwiFZwQBADZEKBHT1MmO8miFB9/V34V
xjzSXn3P3vusbgS/4v7Ydf4Lrcfah8qLx/GEf0Cl7PAL8tSEZkl5+fgzIckKLDA4
E61A31xjxi/MVmySqkPrqzI8AmfT/ukSTgFYEpf/hOmBu7c7JH8BT5evZ3wCFRCH
aZf/XnNnOLQrmRqrlaM6CwADBQP8CiTjtSxcbVU5vECsy/pnAjag7EdeLdBzjM17
B0kDDBMYa3VFi6dAkhA1eCe+M7QQBHAzM1xCXLT1ZepteZiqwpb+dSq++0XKLUea
uJclWUn8DbwMWGKTdI4weGGr9Bcaq8EZpzzo2uDDbIh3kKGtFntVEFGvg4HorWNM
vLOVCwOITAQYEQIADAUCPCIVnAUJAO1OAAAKCRDq81IhSLuK7HNxAJ9UxQo0vu/O
NEEsJhrHJoDgpdc2PwCg1c9acqzo9jCig+Y9xWpgJyQpOZQ=
=99B8
-----END PGP PUBLIC KEY BLOCK-----


From jquinte at fadu.uba.ar  Mon Apr 22 19:57:39 2002
From: jquinte at fadu.uba.ar (Javier Quinteros)
Date: Fri Jan  9 21:52:49 2004
Subject: [mod_python] Global variable...
Message-ID: <200204221702.UAA10145@www.fadu.uba.ar>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

Hi, all !!!
What should I do if I want a variable to live for ever? I mean, I don't want 
to redefine the variable every time I import a module (where I use it) or 
click a link.

Thanks in advance,

- -- 
- ---------------------------------
Javier Quinteros
jquinte@fadu.uba.ar
Secretar?a de Planificaci?n
Universidad de Buenos Aires
- ---------------------------------
Existe un solo lugar donde el Norte y el Sur del mundo se enfrentan en
igualdad de condiciones: es una cancha de f?tbol de Brasil, en la 
desembocadura
del r?o Amazonas. La l?nea del ecuador corta por la mitad el estadio Zerao, en
Amap?, de modo que cada equipo juega un tiempo en el sur y otro tiempo en el
norte.
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.0.6 (GNU/Linux)
Comment: For info see http://www.gnupg.org

iD8DBQE8xJVjdBzRnlFl4cgRAnciAKDKJMp6VOYGiU9GpDc5Kk4SlYQ1LACfe77t
+3d1demwTU+dy0NnIpPWQlc=
=lZog
-----END PGP SIGNATURE-----

From sobral at sj.univali.br  Mon Apr 22 21:33:33 2002
From: sobral at sj.univali.br (Marcelo M. Sobral)
Date: Fri Jan  9 21:52:49 2004
Subject: [mod_python] Global variable...
In-Reply-To: <200204221702.UAA10145@www.fadu.uba.ar>
Message-ID: <Pine.GSO.4.05.10204222127210.3738-100000@cucao.sj.univali.br>

On Mon, 22 Apr 2002, Javier Quinteros wrote:

> What should I do if I want a variable to live for ever? I mean, I don't want 
> to redefine the variable every time I import a module (where I use it) or 
> click a link.

   HI.

   You must use shared memory for that. The shmmodule can help you (look
for it on Vault of Parnassus).
   I  have written a trivial class to save and restore objects in the
shared memory. You can download it from:

   http://www.sj.univali.br/~sobral/persist.tgz

   It has been used to implement a cache for logins and passwords, used by
a PythonAuthenHandler. The cache is a dictionary, which lives in the
sahred memory.

   It has some comments to help you to use it.

   Best regards.


  ------------------------
  Prof. Marcelo Maia Sobral
  Administrador de Redes
  Nucleo de Informatica
  Univali - Campus S?o Jos?
  Fone: (0xx48) 281-1595
  -----------------------------


-----BEGIN PGP PUBLIC KEY BLOCK-----
Version: GnuPG v1.0.6 (GNU/Linux)
Comment: For info see http://www.gnupg.org

mQGiBDwiFZQRBACpWV7f+1b1H2Efm9WHM5LnQxQcXEBz/SHff9B909IL5kl5zAL1
F4+mABr4g25wUGKb2SLk6/zb7EPpgI6IrfG7gKqv4PRn8KRkGANSdSouiyqKd8qa
JPIwR7i5cCV1hz2p4T7An5307HiJj/BiAXtDtPnD9JKf3gx4upOqbyyyYwCg8gFr
AdI1OK++OvBcyCebHM4ojoUEAJedtyxaL/A3rnQ1Ni2DiX60I3mbCx2eWUgm506S
RCkwuMzIB2tEMGQg3acqZvTk/7i6ek01Hkk7d8UCZjubKnj8kN23ew5k5/PbFMbF
+02tvYy91240MBmTswgW/QTjpU6dRdhtOwOLuuNKUPOII1TtdqQUg+/sWnyfLyrC
5XSGA/wPJAVIEFbvwQUb/XPr9hi+flNjsgEvv6cZDs4b83YwtdXuY4OZH7EyeQ4p
+aBlkjNJIdqKB6gw7sv5hdAlX+zKgIukw2jDa63PZl3TiIx1y06p5lDWpqbbhVIG
ky1cWRif6vo0p2bPeuwcaNleiZiL1hvR79wLw3EYsMB3tbDAJLRPTWFyY2VsbyBN
YWlhIFNvYnJhbCAoQWRtaW5pc3RyYWRvciBkZSByZWRlIC0gVW5pdmFsaS1TSikg
PHNvYnJhbEBzai51bml2YWxpLmJyPohdBBMRAgAdBQI8IhWUBQkA7U4ABQsHCgME
AxUDAgMWAgECF4AACgkQ6vNSIUi7iuxQPgCgjRxk9vyJVt94CjySkZKcDj7jyB4A
niVhSkObCMg4iZMSTvD9HZRKAtu6uQENBDwiFZwQBADZEKBHT1MmO8miFB9/V34V
xjzSXn3P3vusbgS/4v7Ydf4Lrcfah8qLx/GEf0Cl7PAL8tSEZkl5+fgzIckKLDA4
E61A31xjxi/MVmySqkPrqzI8AmfT/ukSTgFYEpf/hOmBu7c7JH8BT5evZ3wCFRCH
aZf/XnNnOLQrmRqrlaM6CwADBQP8CiTjtSxcbVU5vECsy/pnAjag7EdeLdBzjM17
B0kDDBMYa3VFi6dAkhA1eCe+M7QQBHAzM1xCXLT1ZepteZiqwpb+dSq++0XKLUea
uJclWUn8DbwMWGKTdI4weGGr9Bcaq8EZpzzo2uDDbIh3kKGtFntVEFGvg4HorWNM
vLOVCwOITAQYEQIADAUCPCIVnAUJAO1OAAAKCRDq81IhSLuK7HNxAJ9UxQo0vu/O
NEEsJhrHJoDgpdc2PwCg1c9acqzo9jCig+Y9xWpgJyQpOZQ=
=99B8
-----END PGP PUBLIC KEY BLOCK-----


From gbeasley at tsa.ac.za  Tue Apr 23 08:06:07 2002
From: gbeasley at tsa.ac.za (Grant Beasley)
Date: Fri Jan  9 21:52:49 2004
Subject: [mod_python] Global variable...
In-Reply-To: <Pine.GSO.4.05.10204222127210.3738-100000@cucao.sj.univali.br>
Message-ID: <OOENKCHGJGHILGPAGHGOAEIOCCAA.gbeasley@tsa.ac.za>

I've achieved a similar thing by creating a Globals module. This is imported
by all modules that require any global variable. I'm also using this module
to store a dictionary of users as well as other cached content. It seems to
work effectively for me. Anyone aware of any problems with this approach?

Thanks
Grant Beasley
Technikon SA

-----Original Message-----
From: mod_python-admin@modpython.org
[mailto:mod_python-admin@modpython.org]On Behalf Of Marcelo M. Sobral
Sent: 23 April 2002 02:34
To: Javier Quinteros
Cc: mod_python@modpython.org
Subject: Re: [mod_python] Global variable...


On Mon, 22 Apr 2002, Javier Quinteros wrote:

> What should I do if I want a variable to live for ever? I mean, I don't
want
> to redefine the variable every time I import a module (where I use it) or
> click a link.

   HI.

   You must use shared memory for that. The shmmodule can help you (look
for it on Vault of Parnassus).
   I  have written a trivial class to save and restore objects in the
shared memory. You can download it from:

   http://www.sj.univali.br/~sobral/persist.tgz

   It has been used to implement a cache for logins and passwords, used by
a PythonAuthenHandler. The cache is a dictionary, which lives in the
sahred memory.

   It has some comments to help you to use it.

   Best regards.


  ------------------------
  Prof. Marcelo Maia Sobral
  Administrador de Redes
  Nucleo de Informatica
  Univali - Campus S?o Jos?
  Fone: (0xx48) 281-1595
  -----------------------------


-----BEGIN PGP PUBLIC KEY BLOCK-----
Version: GnuPG v1.0.6 (GNU/Linux)
Comment: For info see http://www.gnupg.org

mQGiBDwiFZQRBACpWV7f+1b1H2Efm9WHM5LnQxQcXEBz/SHff9B909IL5kl5zAL1
F4+mABr4g25wUGKb2SLk6/zb7EPpgI6IrfG7gKqv4PRn8KRkGANSdSouiyqKd8qa
JPIwR7i5cCV1hz2p4T7An5307HiJj/BiAXtDtPnD9JKf3gx4upOqbyyyYwCg8gFr
AdI1OK++OvBcyCebHM4ojoUEAJedtyxaL/A3rnQ1Ni2DiX60I3mbCx2eWUgm506S
RCkwuMzIB2tEMGQg3acqZvTk/7i6ek01Hkk7d8UCZjubKnj8kN23ew5k5/PbFMbF
+02tvYy91240MBmTswgW/QTjpU6dRdhtOwOLuuNKUPOII1TtdqQUg+/sWnyfLyrC
5XSGA/wPJAVIEFbvwQUb/XPr9hi+flNjsgEvv6cZDs4b83YwtdXuY4OZH7EyeQ4p
+aBlkjNJIdqKB6gw7sv5hdAlX+zKgIukw2jDa63PZl3TiIx1y06p5lDWpqbbhVIG
ky1cWRif6vo0p2bPeuwcaNleiZiL1hvR79wLw3EYsMB3tbDAJLRPTWFyY2VsbyBN
YWlhIFNvYnJhbCAoQWRtaW5pc3RyYWRvciBkZSByZWRlIC0gVW5pdmFsaS1TSikg
PHNvYnJhbEBzai51bml2YWxpLmJyPohdBBMRAgAdBQI8IhWUBQkA7U4ABQsHCgME
AxUDAgMWAgECF4AACgkQ6vNSIUi7iuxQPgCgjRxk9vyJVt94CjySkZKcDj7jyB4A
niVhSkObCMg4iZMSTvD9HZRKAtu6uQENBDwiFZwQBADZEKBHT1MmO8miFB9/V34V
xjzSXn3P3vusbgS/4v7Ydf4Lrcfah8qLx/GEf0Cl7PAL8tSEZkl5+fgzIckKLDA4
E61A31xjxi/MVmySqkPrqzI8AmfT/ukSTgFYEpf/hOmBu7c7JH8BT5evZ3wCFRCH
aZf/XnNnOLQrmRqrlaM6CwADBQP8CiTjtSxcbVU5vECsy/pnAjag7EdeLdBzjM17
B0kDDBMYa3VFi6dAkhA1eCe+M7QQBHAzM1xCXLT1ZepteZiqwpb+dSq++0XKLUea
uJclWUn8DbwMWGKTdI4weGGr9Bcaq8EZpzzo2uDDbIh3kKGtFntVEFGvg4HorWNM
vLOVCwOITAQYEQIADAUCPCIVnAUJAO1OAAAKCRDq81IhSLuK7HNxAJ9UxQo0vu/O
NEEsJhrHJoDgpdc2PwCg1c9acqzo9jCig+Y9xWpgJyQpOZQ=
=99B8
-----END PGP PUBLIC KEY BLOCK-----

_______________________________________________
Mod_python mailing list
Mod_python@modpython.org
http://www.modpython.org/mailman/listinfo/mod_python


From Nik.Barron at pennantplc.co.uk  Tue Apr 23 10:01:01 2002
From: Nik.Barron at pennantplc.co.uk (Nik Barron)
Date: Fri Jan  9 21:52:49 2004
Subject: [mod_python] Query about authentication/authorization win Apa
	che on Win32
Message-ID: <F17550784FF9D111B7F100E02921B24741E898@NT-SOTON-001>

Anyone got any ideas? Still having hassle with this.

Many thanks,

Nik

From rien at yeepa.org  Tue Apr 23 11:32:36 2002
From: rien at yeepa.org (Adrien Plisson)
Date: Fri Jan  9 21:52:49 2004
Subject: [mod_python] Query about authentication/authorization win Apache on Win32
References: <F17550784FF9D111B7F100E02921B24741E898@NT-SOTON-001>
Message-ID: <001801c1eaa9$cec145f0$2cee4cd4@RANDOM>

From: "Nik Barron" <Nik.Barron@pennantplc.co.uk>
> Anyone got any ideas? Still having hassle with this.

try to test in your authenhandler if the username or password is bad.
if it is, then return a 401 (Authorisation required) error code, in addition
with this header:
WWW-Authenticate: Basic realm="nicepeople"

--
rien


From Nik.Barron at pennantplc.co.uk  Tue Apr 23 11:32:51 2002
From: Nik.Barron at pennantplc.co.uk (Nik Barron)
Date: Fri Jan  9 21:52:49 2004
Subject: [mod_python] Query about authentication/authorization win Apa
	che on Win32
Message-ID: <F17550784FF9D111B7F100E02921B24741E89B@NT-SOTON-001>

> try to test in your authenhandler if the username or password is bad.
> if it is, then return a 401 (Authorisation required) error 
> code, in addition
> with this header:
> WWW-Authenticate: Basic realm="nicepeople"

Excellent! That works a treat, many thanks.

Nik

From msdemlei at cl.uni-heidelberg.de  Tue Apr 23 14:03:57 2002
From: msdemlei at cl.uni-heidelberg.de (Markus Demleitner)
Date: Fri Jan  9 21:52:49 2004
Subject: [mod_python] Dispatch() returned nothing again
Message-ID: <20020423120357.GD9011@tucana.cl.uni-heidelberg.de>

Hi List,

With mod_python 2.7.8, I still see quite a number of the
dreaded "Dispatch() returned nothing." messages when
there's only one return in dispatch, and that's in the
very last line of the function and returns apache.OK.

The consequence is a 500 server error, which is kind of
annoying.  After looking for some systematics in the occurrence
of these errors, I gave up -- a simple reload generally
works and returns the requested page all right.  Also,
it is extremely cumbersome to trigger the problem, since
it appears every page on the server can cause it, but only
every so-many accesses.

So -- does anyone have any tips on how to go about fixing
this?

Thanks,

        Markus

From peter.bittner at gmx.net  Thu Apr 25 16:35:20 2002
From: peter.bittner at gmx.net (Peter Bittner)
Date: Fri Jan  9 21:52:49 2004
Subject: [mod_python] Migrating from CGI-Python to mod_python
Message-ID: <30981.1019745320@www16.gmx.net>

Hi there!

(I am no complete Python newbie. However, I am new to mod_python.)

I have written a library database with web user interface in Python a while
ago. Now I finally want to migrate it to mod_python since this promises the
web interface to be much faster then.

I have read some of mod_python's documentation, but this seems not to have a
proper solution (or tutorial) for my migration problem.

Is there anyone who already has experience with migrating python code that
runs based on CGI to mod_python? (I don't think I want to use mod_python's CGI
handler. I'd rather go for a clean mod_python implementation!)

Can anyone provide me some sample code of clean mod_python scripts?
Please help!

Cheers, Peter

-- 
Peter Bittner
mobil: +43/(0)650/4151545
web: http://www.peterbittner.tk - http://www.htmlkurs.tk
mail: peter.bittner@gmx.net

"Free software is like free speech, not free beer" (Richard Stallman)

GMX - Die Kommunikationsplattform im Internet.
http://www.gmx.net


From goldii_nffo_54r1vm at mail.com  Fri Apr 26 09:28:49 2002
From: goldii_nffo_54r1vm at mail.com (GOLD INFO)
Date: Fri Jan  9 21:52:49 2004
Subject: [mod_python] =?windows-1251?Q?=CB=E5=E3=EA=EE=F1=F2=FC_=EF=F0=E8=E2=EB=E5=F7=E5=ED=E8=FF_=ED=EE=E2=FB=F5_=EA=EB=E8=E5=ED=F2=EE=E2?=
Message-ID: <19550200245265284949@mail.com>















-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mailman.modpython.org/pipermail/mod_python/attachments/20020426/57072341/attachment-0001.htm
From wart at softhome.net  Sat Apr 27 13:50:01 2002
From: wart at softhome.net (Wartan Hachaturow)
Date: Fri Jan  9 21:52:49 2004
Subject: [mod_python] Authentification with publisher handler
Message-ID: <20020427135000.A7545@calmar.tepkom.ru>

Hello.

I am trying to get an authentificated user's username from inside
a python code.

Here's the code:

__auth_realm__ = "Authorization"
__access__ = 1


def __auth__(req, user, passwd):
	if user == "foo" and passwd == "bar":
		return 1
	else:
		return 0

def stats(req):
	req.get_basic_auth_pw()
	return "<html><body>" + str(req.connection.user) + "</body></html>"	


What I get is a "None", i.e. req.connection.user is None. 
What could be the problem?

P.S. libapache-mod-python 2:2.7.6-1, python 2.1, apache 1.3.24

--
Regards, Wartan.

	

From hpotter at consultant.com  Sun Apr 28 18:49:52 2002
From: hpotter at consultant.com (hpotter@consultant.com)
Date: Fri Jan  9 21:52:49 2004
Subject: [mod_python] Good news for American and Canadian smokers
Message-ID: <200204290622.g3T6M9s00593@eden.ispol.com>

From Nik.Barron at pennantplc.co.uk  Mon Apr 29 08:58:25 2002
From: Nik.Barron at pennantplc.co.uk (Nik Barron)
Date: Fri Jan  9 21:52:49 2004
Subject: [mod_python] Authentification with publisher handler
Message-ID: <F17550784FF9D111B7F100E02921B24741E8C7@NT-SOTON-001>

> What I get is a "None", i.e. req.connection.user is None. 
> What could be the problem?

I had a similar problem -- do you get a login box when accessing the page?
If not, try adding the following to the authentication handler instead of
the return 0:

	else:
		req.headers_out.add("WWW-Authenticate", 'Basic
realm="whatever"')
		return apache.HTTP_UNAUTHORIZED

Nick Barron
Manager, E-Services Division
Pennant Software Services Ltd -- Registered in England No. 3772667
PGP: A94C 4190 026E 3E02 6D50  C8FA 8620 3091 FF34 533D

From wart at softhome.net  Mon Apr 29 11:22:19 2002
From: wart at softhome.net (Wartan Hachaturow)
Date: Fri Jan  9 21:52:49 2004
Subject: [mod_python] Authentification with publisher handler
In-Reply-To: <F17550784FF9D111B7F100E02921B24741E8C7@NT-SOTON-001>; from Nik.Barron@pennantplc.co.uk on Mon, Apr 29, 2002 at 08:58:25AM +0100
References: <F17550784FF9D111B7F100E02921B24741E8C7@NT-SOTON-001>
Message-ID: <20020429112219.A9300@calmar.tepkom.ru>

On Mon, Apr 29, 2002 at 08:58:25AM +0100, Nik Barron wrote:

> I had a similar problem -- do you get a login box when accessing the page?

Yes, I do. But req.connection.user is still None. Even adding explicit 
"unauthorized" as you suggested doesn't help.

--
Regards, Wartan.

From jfk at metation.com  Mon Apr  1 09:50:46 2002
From: jfk at metation.com (=?iso-8859-1?q?J=F8rgen=20Fr=F8jk=20Kj=E6rsgaard=20{Metation}?=)
Date: Fri Jan  9 21:59:17 2004
Subject: [mod_python] mod_python under IIS?
Message-ID: <02040109504601.02567@grace.informaticon.dk>

I need to get mod_python running under MS IIS (basically because some people 
simply don't want to run Apache no matter how great it is). Has anyone done 
any work in that direction already? Running mod_python as a CGI script or 
Python as an ASP scripting language is not an option as I need to process the 
raw URL in Python.

thanks, jfk

-- 
J?rgen Fr?jk Kj?rsgaard, direkt?r og systemkonsulent
Metation aps - Kystvejen 29, DK-8000 ?rhus C
Web: www.metation.com  - Tlf: +45 8625 0038 - Mobil: +45 2925 6693

From anburger76 at hotmail.com  Mon Apr  1 12:09:51 2002
From: anburger76 at hotmail.com (Tony Burger)
Date: Fri Jan  9 21:59:17 2004
Subject: [mod_python] popen/popen2 usage?
Message-ID: <F152uNjVuMhvqgStMVh0001021a@hotmail.com>

An HTML attachment was scrubbed...
URL: http://mailman.modpython.org/pipermail/mod_python/attachments/20020401/668a0cb5/attachment-0002.htm
-------------- next part --------------
An embedded message was scrubbed...
From: "Tony Burger" <anburger76@hotmail.com>
Subject: [mod_python] popen/popen2 usage?
Date: Sun, 31 Mar 2002 23:18:27 -0500
Size: 2785
Url: http://mailman.modpython.org/pipermail/mod_python/attachments/20020401/668a0cb5/attachment-0002.eml
From s_lott at yahoo.com  Mon Apr  1 12:01:38 2002
From: s_lott at yahoo.com (Steven Lott)
Date: Fri Jan  9 21:59:17 2004
Subject: [mod_python] mod_python under IIS?
In-Reply-To: <02040109504601.02567@grace.informaticon.dk>
Message-ID: <20020401200138.49880.qmail@web9603.mail.yahoo.com>

Have you considered a simple CGI, ignoring mod_python?

While annoying (very heavy overhead from process forks), it will
work under a variety of web server configurations.

You must, of course, be absolutely certain that your CGI
applications do not expose any security holes.

You can use some of the mod_python modules that parse the
request and support creation of a response to do this.

I have a demo CGI framework used for education purposes.

--- Jørgen Frøjk Kjærsgaard {Metation} <jfk@metation.com> wrote:
> I need to get mod_python running under MS IIS (basically
> because some people 
> simply don't want to run Apache no matter how great it is).
> Has anyone done 
> any work in that direction already? Running mod_python as a
> CGI script or 
> Python as an ASP scripting language is not an option as I need
> to process the 
> raw URL in Python.
> 
> thanks, jfk
> 
> -- 
> Jørgen Frøjk Kjærsgaard, direktør og systemkonsulent
> Metation aps - Kystvejen 29, DK-8000 Århus C
> Web: www.metation.com  - Tlf: +45 8625 0038 - Mobil: +45 2925
> 6693
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://www.modpython.org/mailman/listinfo/mod_python


=====
--
S. Lott, CCP :-{)
S_LOTT@YAHOO.COM
http://www.mindspring.com/~slott1
Buccaneer #468: KaDiMa

Macintosh user: drinking upstream from the herd.

__________________________________________________
Do You Yahoo!?
Yahoo! Greetings - send holiday greetings for Easter, Passover
http://greetings.yahoo.com/

From modpython at xhaus.com  Mon Apr  1 15:45:15 2002
From: modpython at xhaus.com (Alan Kennedy)
Date: Fri Jan  9 21:59:17 2004
Subject: [mod_python] mod_python under IIS?
Message-ID: <200204012057.PAA132830@spool3.valueweb.net>

Hi,

I've never seen an embedded python for IIS. The only 
servers I know that are lucky enough to have such python 
embedding are Apache and AOLServer (PyWX)

http://www.idyll.org/~t/python9/pywx.html

The only reasonable (scalable) alternative I know of is 
FastCGI, which involves plugging a module into your 
webserver that passes the requests onto an external 
persistent threaded Python server, potentially on a 
different machine, or even multiple machines.

http://www.fastcgi.com/

There is a FastCGI module for IIS, There are several python 
modules/servers listed on the FastCGI home page.

I don't know IIS at all, but is there any way you can get 
IIS to pass requests onto COM objects? If so, then you can 
use Mark Hammond's excellent win32 extensions, which allow 
you to very easily write both COM servers and clients in 
python. 

http://www.python.org/windows/

Is there any specific reason why you don't want to use 
Python as a scripting language in ASP?

Best of luck,

Al.



---------------------------------------------
This message was sent using WebMail by CyberGate.
http://www.gate.net/webmail



From jfk at metation.com  Tue Apr  2 11:30:17 2002
From: jfk at metation.com (=?iso-8859-1?q?J=F8rgen=20Fr=F8jk=20Kj=E6rsgaard=20{Metation}?=)
Date: Fri Jan  9 21:59:17 2004
Subject: [mod_python] mod_python under IIS?
In-Reply-To: <20020401200138.49880.qmail@web9603.mail.yahoo.com>
References: <20020401200138.49880.qmail@web9603.mail.yahoo.com>
Message-ID: <02040211301700.00296@grace.informaticon.dk>

Mandag  1. April 2002 22:01 skrev du:
> Have you considered a simple CGI, ignoring mod_python?
>
> While annoying (very heavy overhead from process forks), it will
> work under a variety of web server configurations.

Well, there are two problems involved in using a CGI solution. One is 
performance, which isn't critical in all cases. Another problem is that I 
like to be able to use short, meningful URLs e.g. 
"http://somewhere.com/articles/20020215-1.html" instead of, say, 
"http://somewhere.com/cgi-bin/show.py?article-id=20020215-1"

Under Apache one could use mod_rewrite to rewrite urls of the former form to 
the latter. Do you happen to know if something similar is possible under IIS? 
I don't know much about IIS yet; until now I've only worked on Apache...

regards,
 
J?rgen Fr?jk Kj?rsgaard, direkt?r og systemkonsulent
Metation aps - Kystvejen 29, DK-8000 ?rhus C
Web: www.metation.com  - Tlf: +45 8625 0038 - Mobil: +45 2925 6693

From jfk at metation.com  Tue Apr  2 11:49:12 2002
From: jfk at metation.com (=?iso-8859-1?q?J=F8rgen=20Fr=F8jk=20Kj=E6rsgaard=20{Metation}?=)
Date: Fri Jan  9 21:59:17 2004
Subject: [mod_python] mod_python under IIS?
In-Reply-To: <200204012057.PAA132830@spool3.valueweb.net>
References: <200204012057.PAA132830@spool3.valueweb.net>
Message-ID: <02040211491201.00296@grace.informaticon.dk>

Mandag  1. April 2002 22:45 skrev du:
> Hi,
>
> I've never seen an embedded python for IIS. The only
> servers I know that are lucky enough to have such python
> embedding are Apache and AOLServer (PyWX)
>
> http://www.idyll.org/~t/python9/pywx.html
>
> The only reasonable (scalable) alternative I know of is
> FastCGI, which involves plugging a module into your
> webserver that passes the requests onto an external
> persistent threaded Python server, potentially on a
> different machine, or even multiple machines.
>
> http://www.fastcgi.com/
>
> There is a FastCGI module for IIS, There are several python
> modules/servers listed on the FastCGI home page.

This sounds like a plausible solution, I'll investigate it further.

> I don't know IIS at all, but is there any way you can get
> IIS to pass requests onto COM objects? If so, then you can
> use Mark Hammond's excellent win32 extensions, which allow
> you to very easily write both COM servers and clients in
> python.
>
> http://www.python.org/windows/

We are primarily a Unix house and have no COM expertice, but if the extension 
makes it very easy, it may well be the way to go.

For both these suggestions, the question is: will it allow me to get the raw 
URL, no matter what it is?

> Is there any specific reason why you don't want to use
> Python as a scripting language in ASP?

The ASP way is to mix logic and contents. We generate contents from external 
sources, e.g. XML. While it obviously would be possible to write an ASP page 
that interfaces to the content generator behind the scenes, It wouldn't be 
the most clean solution.

What I really would like is very simple: have IIS pass me the URL + CGI 
parameters, then I generate a page using some mod_python code and our own 
Python app and pass it back.

regards

J?rgen Fr?jk Kj?rsgaard, direkt?r og systemkonsulent
Metation aps - Kystvejen 29, DK-8000 ?rhus C
Web: www.metation.com  - Tlf: +45 8625 0038 - Mobil: +45 2925 6693

From modpython at xhaus.com  Tue Apr  2 07:16:18 2002
From: modpython at xhaus.com (Alan Kennedy)
Date: Fri Jan  9 21:59:17 2004
Subject: [mod_python] mod_python under IIS?
Message-ID: <200204021228.HAA39400@spool8.valueweb.net>

> For both these suggestions, the question is: will it
> allow me to get the raw URL, no matter what it is?

I think this is really 

1. A FastCGI question
2. An IIS question

and not a mod_python question.

I have no idea where you would find the answer to these 
questions.

Al.



---------------------------------------------
This message was sent using WebMail by CyberGate.
http://www.gate.net/webmail



From sandor.kopanyi at mailbox.hu  Wed Apr  3 09:41:14 2002
From: sandor.kopanyi at mailbox.hu (sandor.kopanyi@mailbox.hu)
Date: Fri Jan  9 21:59:17 2004
Subject: [mod_python] =?iso-8859-2?B?YXJndW1lbnQgbWF0Y2hpbmcgZm9yIGZvcm1z?=
Message-ID: <20020403074114.12400.qmail@web2.mailbox.hu>

Hi,

A mod_python newbie question about argument matching for forms:
I have a form for user registration, with 13 fields (name,
address, etc.) - I pass them to mod_python for processing.

But: if I don't give default values to the arguments, it fails,
saying 13 parameters expected, 3 got...

Which 3? Why those 3? And why works if I give default values?
If I use the req.form.list to extract the values, works fine.
But the other way is much more elegant...


The code:
def add_customer(addr_postal_code=None, addr_city=None, etc.):
   #etc.

This is not working without those None's.

Environment: RedHat 7.2, Python 1.5.2, mod_python 2.7.6, Apache
1.3.20 (mod_python config is copy-paste from doc).

----------------------------------
Related to this, a small config question:
in chapter 3.4 (Tutorial/Publisher Handler Makes it Easy) AddHandler
is used for Apache config, in 6.1 (Standard Handlers/Publisher Handler)
SetHandler. What's the difference?

Best regards,
Sandor

--------------------------------------------------
http://www.mailbox.hu - Mert levelezni kell...


From piet at cs.uu.nl  Thu Apr  4 10:33:23 2002
From: piet at cs.uu.nl (Piet van Oostrum)
Date: Fri Jan  9 21:59:17 2004
Subject: [mod_python] argument matching for forms
In-Reply-To: <20020403074114.12400.qmail@web2.mailbox.hu>
References: <20020403074114.12400.qmail@web2.mailbox.hu>
Message-ID: <wzsn6bj224.fsf@nono.cs.uu.nl>

>>>>> sandor.kopanyi@mailbox.hu (SK) writes:

SK> Hi,
SK> A mod_python newbie question about argument matching for forms:
SK> I have a form for user registration, with 13 fields (name,
SK> address, etc.) - I pass them to mod_python for processing.

SK> But: if I don't give default values to the arguments, it fails,
SK> saying 13 parameters expected, 3 got...

SK> Which 3? Why those 3? And why works if I give default values?
SK> If I use the req.form.list to extract the values, works fine.
SK> But the other way is much more elegant...

Probably the fields that were filled in in the form. Unfilled fields that
don't have a value in the form are probably not passed. Although I think
they should be passed.
-- 
Piet van Oostrum <piet@cs.uu.nl>
URL: http://www.cs.uu.nl/~piet [PGP]
Private email: P.van.Oostrum@hccnet.nl


From sandor.kopanyi at mailbox.hu  Thu Apr  4 11:34:54 2002
From: sandor.kopanyi at mailbox.hu (sandor.kopanyi@mailbox.hu)
Date: Fri Jan  9 21:59:18 2004
Subject: [mod_python] =?iso-8859-2?B?UmVbMl06?=
 =?iso-8859-2?B?W21vZF9weXRob25d?=
 =?iso-8859-2?B?YXJndW1lbnQ=?=
 =?iso-8859-2?B?bWF0Y2hpbmc=?=
 =?iso-8859-2?B?Zm9y?=
 =?iso-8859-2?B?Zm9ybXM=?=
In-Reply-To: <wzsn6bj224.fsf@nono.cs.uu.nl>
Message-ID: <20020404093454.16607.qmail@web2.mailbox.hu>

> SK> Hi,
> SK> A mod_python newbie question about argument matching for forms:
> SK> I have a form for user registration, with 13 fields (name,
> SK> address, etc.) - I pass them to mod_python for processing.
> 
> SK> But: if I don't give default values to the arguments, it fails,
> SK> saying 13 parameters expected, 3 got...
> 
> SK> Which 3? Why those 3? And why works if I give default values?
> SK> If I use the req.form.list to extract the values, works fine.
> SK> But the other way is much more elegant...
> 
> Probably the fields that were filled in in the form. Unfilled fields
> that
> don't have a value in the form are probably not passed. Although I
think
> they should be passed.

Thanks Piet,

Unfortunately happens idependent from the number of filled fields,
i.e. even if I fill all the fields. What I can see is that - if it
comes through :) - the unfilled fields values are ''s, i.e. empty
strings.

Sandor

--------------------------------------------------
http://www.mailbox.hu - Mert levelezni kell...




From matt at proweb.co.uk  Thu Apr  4 11:43:07 2002
From: matt at proweb.co.uk (Matt H)
Date: Fri Jan  9 21:59:18 2004
Subject: [mod_python] argument matching for forms
In-Reply-To: <wzsn6bj224.fsf@nono.cs.uu.nl>
References: <20020403074114.12400.qmail@web2.mailbox.hu>
	<wzsn6bj224.fsf@nono.cs.uu.nl>
Message-ID: <20020404114307.58b93be1.matt@proweb.co.uk>

> Probably the fields that were filled in in the form. Unfilled fields that
> don't have a value in the form are probably not passed. Although I think
> they should be passed.

no they shouldn't

the <form tag is a way of telling the browser how to lay out a form

the GET method is a way to tell the HTTP server what you are after

the POST method is a way to give the HTTP server information

browsers linking forms to POST/GET requests is an end user convenience

your code *must* accept that some or all of the fields will not be included for I may manually type

http://www.ewwef.com/page.html?var1=hello&var2=goodbye

Also how would you discriminate between a page request and a submission if you expected

http://www.ewwef.com/page.html?var1=&var2=

the solution to the poster's problem is a wrapper to his function that checks the parameters for validity (soemthign he shoudl be doing anyway!)

Matt







From jcea at argo.es  Thu Apr  4 16:58:35 2002
From: jcea at argo.es (Jesus Cea Avion)
Date: Fri Jan  9 21:59:18 2004
Subject: [mod_python] PythonAuthenHandler and PythonAuthzHandler
Message-ID: <3CAC6A1B.AA58CD35@argo.es>

"PythonAuthzHandler" is not documented in the last documentation
revision, at "http://www.modpython.org/live/mod_python-2.7.6/doc-html/".

The example in docs for "PythonAuthenHandler" doesn't work. Seems you
need use both, "PythonAuthenHandler" and "PythonAuthzHandler", one for
"authentication" and the other for "authorization".

-- 
Jesus Cea Avion                         _/_/      _/_/_/        _/_/_/
jcea@argo.es http://www.argo.es/~jcea/ _/_/    _/_/  _/_/    _/_/  _/_/
                                      _/_/    _/_/          _/_/_/_/_/
PGP Key Available at KeyServ   _/_/  _/_/    _/_/          _/_/  _/_/
"Things are not so easy"      _/_/  _/_/    _/_/  _/_/    _/_/  _/_/
"My name is Dump, Core Dump"   _/_/_/        _/_/_/      _/_/  _/_/
"El amor es poner tu felicidad en la felicidad de otro" - Leibniz

From jquinte at fadu.uba.ar  Thu Apr  4 15:28:31 2002
From: jquinte at fadu.uba.ar (Javier Quinteros)
Date: Fri Jan  9 21:59:18 2004
Subject: [mod_python] Same name, different directories...
Message-ID: <200204041235.PAA15434@www.fadu.uba.ar>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

Hi !!!
I've defined three Directories in my http.conf, all of them with python 
scripts inside. What i've noticed is that if I have more than one module 
called "module1.py" in different directories, mod_python is not able to work 
with both of them. It seems that it loads the first one (it doesn't matter 
which one) and after that, if I call the second one is the first one the one 
who answers me. After that I had to rename some modules just to avoid the 
possibility that mod_python use them the way he wants.

Is there any solution? I mean, I don't want to get one interpreter for each 
Directory I define.

Thanks in advance,

- -- 
- ---------------------------------
Javier Quinteros
jquinte@fadu.uba.ar
Secretar?a de Planificaci?n
Universidad de Buenos Aires
- ---------------------------------
Existe un solo lugar donde el Norte y el Sur del mundo se enfrentan en
igualdad de condiciones: es una cancha de f?tbol de Brasil, en la 
desembocadura
del r?o Amazonas. La l?nea del ecuador corta por la mitad el estadio Zerao, en
Amap?, de modo que cada equipo juega un tiempo en el sur y otro tiempo en el
norte.
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.0.6 (GNU/Linux)
Comment: For info see http://www.gnupg.org

iD8DBQE8rJtQdBzRnlFl4cgRAnPsAKDC1Q7KTH7QGL8XxdEPqvY9Zwud5gCfZHe0
sAcXkDQlrdfyrQvaq5rmuPc=
=qwm3
-----END PGP SIGNATURE-----

From grisha at modpython.org  Thu Apr  4 14:13:04 2002
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 21:59:18 2004
Subject: [mod_python] Same name, different directories...
In-Reply-To: <200204041235.PAA15434@www.fadu.uba.ar>
Message-ID: <Pine.BSF.4.32.0204041410500.67719-100000@localhost>

You can either use PythonInterpPerDirective, or manually force different
interpreter names with PythonInterpreter.

I recommend making sure you're using Python 2.2 if you're going to be
relying on multiple intepreter stuff.

Grisha

On Thu, 4 Apr 2002, Javier Quinteros wrote:

> -----BEGIN PGP SIGNED MESSAGE-----
> Hash: SHA1
>
> Hi !!!
> I've defined three Directories in my http.conf, all of them with python
> scripts inside. What i've noticed is that if I have more than one module
> called "module1.py" in different directories, mod_python is not able to work
> with both of them. It seems that it loads the first one (it doesn't matter
> which one) and after that, if I call the second one is the first one the one
> who answers me. After that I had to rename some modules just to avoid the
> possibility that mod_python use them the way he wants.
>
> Is there any solution? I mean, I don't want to get one interpreter for each
> Directory I define.
>
> Thanks in advance,
>
> - --
> - ---------------------------------
> Javier Quinteros
> jquinte@fadu.uba.ar
> Secretar?a de Planificaci?n
> Universidad de Buenos Aires
> - ---------------------------------
> Existe un solo lugar donde el Norte y el Sur del mundo se enfrentan en
> igualdad de condiciones: es una cancha de f?tbol de Brasil, en la
> desembocadura
> del r?o Amazonas. La l?nea del ecuador corta por la mitad el estadio Zerao, en
> Amap?, de modo que cada equipo juega un tiempo en el sur y otro tiempo en el
> norte.
> -----BEGIN PGP SIGNATURE-----
> Version: GnuPG v1.0.6 (GNU/Linux)
> Comment: For info see http://www.gnupg.org
>
> iD8DBQE8rJtQdBzRnlFl4cgRAnPsAKDC1Q7KTH7QGL8XxdEPqvY9Zwud5gCfZHe0
> sAcXkDQlrdfyrQvaq5rmuPc=
> =qwm3
> -----END PGP SIGNATURE-----
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://www.modpython.org/mailman/listinfo/mod_python
>


From jeffstearns at attbi.com  Thu Apr  4 11:51:48 2002
From: jeffstearns at attbi.com (Jeff Stearns)
Date: Fri Jan  9 21:59:18 2004
Subject: [mod_python] Same name, different directories...
References: <200204041235.PAA15434@www.fadu.uba.ar>
Message-ID: <003f01c1dc12$2a3dcda0$8001a8c0@SavageBeast.com>

This is probably a bug in import_module() in apache.py.  There are several
bugs in this function, and they show up in different ways sepending on how
you set PythonAutoReload and whether you use the publisher module.

I have tried various workarounds, but each workaround seems to expose a
different problem with this code.

Using unique names for each file is one thing that helps to reduce your
exposure to these bugs.  Turning on PythonAutoReload can help in some cases.

But rewriting import_module is probably what's really needed here.

-jeff stearns


----- Original Message -----
From: "Javier Quinteros" <jquinte@fadu.uba.ar>
To: <mod_python@modpython.org>
Sent: Thursday, April 04, 2002 10:28 AM
Subject: [mod_python] Same name, different directories...


> -----BEGIN PGP SIGNED MESSAGE-----
> Hash: SHA1
>
> Hi !!!
> I've defined three Directories in my http.conf, all of them with python
> scripts inside. What i've noticed is that if I have more than one module
> called "module1.py" in different directories, mod_python is not able to
work
> with both of them. It seems that it loads the first one (it doesn't matter
> which one) and after that, if I call the second one is the first one the
one
> who answers me. After that I had to rename some modules just to avoid the
> possibility that mod_python use them the way he wants.
>
> Is there any solution? I mean, I don't want to get one interpreter for
each
> Directory I define.
>
> Thanks in advance,
>
> - --
> - ---------------------------------
> Javier Quinteros
> jquinte@fadu.uba.ar
> Secretar?a de Planificaci?n
> Universidad de Buenos Aires
> - ---------------------------------
> Existe un solo lugar donde el Norte y el Sur del mundo se enfrentan en
> igualdad de condiciones: es una cancha de f?tbol de Brasil, en la
> desembocadura
> del r?o Amazonas. La l?nea del ecuador corta por la mitad el estadio
Zerao, en
> Amap?, de modo que cada equipo juega un tiempo en el sur y otro tiempo en
el
> norte.
> -----BEGIN PGP SIGNATURE-----
> Version: GnuPG v1.0.6 (GNU/Linux)
> Comment: For info see http://www.gnupg.org
>
> iD8DBQE8rJtQdBzRnlFl4cgRAnPsAKDC1Q7KTH7QGL8XxdEPqvY9Zwud5gCfZHe0
> sAcXkDQlrdfyrQvaq5rmuPc=
> =qwm3
> -----END PGP SIGNATURE-----
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://www.modpython.org/mailman/listinfo/mod_python
>


From grisha at modpython.org  Thu Apr  4 15:06:37 2002
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 21:59:18 2004
Subject: [mod_python] Same name, different directories...
In-Reply-To: <003f01c1dc12$2a3dcda0$8001a8c0@SavageBeast.com>
Message-ID: <Pine.BSF.4.32.0204041501460.68385-100000@localhost>

Well, import_module has been rewritten (it's in CVS, the branch-2-7-7
branch), but if I understood Javier correctly, he is using same module
names in different directories on the same virtual server, i.e. within the
same sub-interpreter. Since Python keeps track of modules by their name,
not the full path, in this case the namesake modules will definitely be at
conflict with one another.

Grisha

On Thu, 4 Apr 2002, Jeff Stearns wrote:

> This is probably a bug in import_module() in apache.py.  There are several
> bugs in this function, and they show up in different ways sepending on how
> you set PythonAutoReload and whether you use the publisher module.
>
> I have tried various workarounds, but each workaround seems to expose a
> different problem with this code.
>
> Using unique names for each file is one thing that helps to reduce your
> exposure to these bugs.  Turning on PythonAutoReload can help in some cases.
>
> But rewriting import_module is probably what's really needed here.
>
> -jeff stearns
>
>
> ----- Original Message -----
> From: "Javier Quinteros" <jquinte@fadu.uba.ar>
> To: <mod_python@modpython.org>
> Sent: Thursday, April 04, 2002 10:28 AM
> Subject: [mod_python] Same name, different directories...
>
>
> > -----BEGIN PGP SIGNED MESSAGE-----
> > Hash: SHA1
> >
> > Hi !!!
> > I've defined three Directories in my http.conf, all of them with python
> > scripts inside. What i've noticed is that if I have more than one module
> > called "module1.py" in different directories, mod_python is not able to
> work
> > with both of them. It seems that it loads the first one (it doesn't matter
> > which one) and after that, if I call the second one is the first one the
> one
> > who answers me. After that I had to rename some modules just to avoid the
> > possibility that mod_python use them the way he wants.
> >
> > Is there any solution? I mean, I don't want to get one interpreter for
> each
> > Directory I define.
> >
> > Thanks in advance,
> >
> > - --
> > - ---------------------------------
> > Javier Quinteros
> > jquinte@fadu.uba.ar
> > Secretar?a de Planificaci?n
> > Universidad de Buenos Aires
> > - ---------------------------------
> > Existe un solo lugar donde el Norte y el Sur del mundo se enfrentan en
> > igualdad de condiciones: es una cancha de f?tbol de Brasil, en la
> > desembocadura
> > del r?o Amazonas. La l?nea del ecuador corta por la mitad el estadio
> Zerao, en
> > Amap?, de modo que cada equipo juega un tiempo en el sur y otro tiempo en
> el
> > norte.
> > -----BEGIN PGP SIGNATURE-----
> > Version: GnuPG v1.0.6 (GNU/Linux)
> > Comment: For info see http://www.gnupg.org
> >
> > iD8DBQE8rJtQdBzRnlFl4cgRAnPsAKDC1Q7KTH7QGL8XxdEPqvY9Zwud5gCfZHe0
> > sAcXkDQlrdfyrQvaq5rmuPc=
> > =qwm3
> > -----END PGP SIGNATURE-----
> > _______________________________________________
> > Mod_python mailing list
> > Mod_python@modpython.org
> > http://www.modpython.org/mailman/listinfo/mod_python
> >
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://www.modpython.org/mailman/listinfo/mod_python
>


From ian at veryfresh.com  Thu Apr  4 12:07:11 2002
From: ian at veryfresh.com (Ian Clelland)
Date: Fri Jan  9 21:59:18 2004
Subject: [mod_python] Same name, different directories...
In-Reply-To: <200204041235.PAA15434@www.fadu.uba.ar>
References: <200204041235.PAA15434@www.fadu.uba.ar>
Message-ID: <20020404200711.GB19813@fullfactor.com>

On Thu, Apr 04, 2002 at 03:28:31PM -0300, Javier Quinteros wrote:
> I've defined three Directories in my http.conf, all of them with python 
> scripts inside. What i've noticed is that if I have more than one module 
> called "module1.py" in different directories, mod_python is not able to work 
> with both of them. It seems that it loads the first one (it doesn't matter 
> which one) and after that, if I call the second one is the first one the one 
> who answers me. After that I had to rename some modules just to avoid the 
> possibility that mod_python use them the way he wants.
> 
> Is there any solution? I mean, I don't want to get one interpreter for each 
> Directory I define.

The problem is that Python uses the module's file name -- without 
regard to its path -- as the module's name. A Python interpreter will 
also never load the same module twice, unless you use the 'reload' 
statement.

So the first time you 'import module1', Python loads and runs the first 
module1.py file it can find on sys.path. The second time you run the 
same import statement inside the same interpreter, Python does nothing, 
even if your sys.path is different that time.

It's just the way that Python works (and not mod_python in particular). 
There are probably three ways around this behaviour:

1) Give every module a unique filename.
2) Run seperate Python interpreters to handle different directories.
3) Look into using Python packages.

With packages, you should be able to distinguish between 
identically-named modules in different directories by calling them 
'directory1.module1' and 'directory2.module1'.

Hope this helps,

Ian

From fourie_willem at hotmail.com  Fri Apr  5 00:16:16 2002
From: fourie_willem at hotmail.com (Willem Fourie)
Date: Fri Jan  9 21:59:18 2004
Subject: [mod_python] mptest.py text does not interpret
Message-ID: <F82PiyAphwFutJLtosJ00000288@hotmail.com>

Dear reader

mptest.py is not being interpreted and simply displays the code in the 
browser. Other python files attempt to download. Please help.

Have made the proscribed mod's to conf (including AddModule mod_python.c) 
and it checks out OK. /server-info shows that python is indeed installed. 
(Apache/1.3.24 (Win32) mod_python/2.7.6 Python/2.2.1c1 PHP/4.1.3-dev)

It was mentioned that the mime type may not be maintained, but AddType 
application/x-httpd-py .py did not help.

Thanx in advance

_________________________________________________________________
Chat with friends online, try MSN Messenger: http://messenger.msn.com


From charney at charneyday.com  Thu Apr  4 18:15:53 2002
From: charney at charneyday.com (Reg Charney)
Date: Fri Jan  9 21:59:18 2004
Subject: [mod_python] mptest.py text does not interpret
References: <F82PiyAphwFutJLtosJ00000288@hotmail.com>
Message-ID: <3CAD08D9.3A1C3C5D@charneyday.com>

I had this same problem. Remove the AddType directive that refers to python
from the httpd.conf file. For some reason, mod_python is not implemented the
same way as PHP4,say.

Reg.

P.S. I never thanked others on the list that lead to this solution. My
apologies and thanks. I was trying to find the reason that I inserted the
AddType statement, but never did. By the time I reached that point, it was
"too late" to thank Ian Clelland <ian@veryfresh.com> and
"Gregory (Grisha) Trubetskoy" <grisha@modpython.org> for their help.

Willem Fourie wrote:

> Dear reader
>
> mptest.py is not being interpreted and simply displays the code in the
> browser. Other python files attempt to download. Please help.
>
> Have made the proscribed mod's to conf (including AddModule mod_python.c)
> and it checks out OK. /server-info shows that python is indeed installed.
> (Apache/1.3.24 (Win32) mod_python/2.7.6 Python/2.2.1c1 PHP/4.1.3-dev)
>
> It was mentioned that the mime type may not be maintained, but AddType
> application/x-httpd-py .py did not help.
>
> Thanx in advance
>
> _________________________________________________________________
> Chat with friends online, try MSN Messenger: http://messenger.msn.com
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://www.modpython.org/mailman/listinfo/mod_python



From fourie_willem at hotmail.com  Fri Apr  5 03:32:04 2002
From: fourie_willem at hotmail.com (Willem Fourie)
Date: Fri Jan  9 21:59:18 2004
Subject: [mod_python] mptest.py text does not interpret
Message-ID: <F176c4QzPW8AAkjtjsX0000090b@hotmail.com>

Hi Reg

Thanx very much for your reply, but unfortunately I had already removed the 
AddType (tried with and without).

When the ScriptAlias directory points to the WebDir (and mptest.py placed in 
that directory) then it shows the text sans interpretation.

With the config pointing to /python, and the file in that directory and the 
URL pointing to /python/mptest.py the server responds with "The server 
encountered an internal error or misconfiguration and was unable to complete 
your request"

Would appreciate ideas on other avenues perhaps.
Thanx


----Original Message Follows----
From: Reg Charney <charney@charneyday.com>
To: Willem Fourie <fourie_willem@hotmail.com>
CC: mod_python@modpython.org
Subject: Re: [mod_python] mptest.py text does not interpret
Date: Thu, 04 Apr 2002 18:15:53 -0800

I had this same problem. Remove the AddType directive that refers to python
from the httpd.conf file. For some reason, mod_python is not implemented the
same way as PHP4,say.

Reg.

P.S. I never thanked others on the list that lead to this solution. My
apologies and thanks. I was trying to find the reason that I inserted the
AddType statement, but never did. By the time I reached that point, it was
"too late" to thank Ian Clelland <ian@veryfresh.com> and
"Gregory (Grisha) Trubetskoy" <grisha@modpython.org> for their help.

Willem Fourie wrote:

 > Dear reader
 >
 > mptest.py is not being interpreted and simply displays the code in the
 > browser. Other python files attempt to download. Please help.
 >
 > Have made the proscribed mod's to conf (including AddModule mod_python.c)
 > and it checks out OK. /server-info shows that python is indeed installed.
 > (Apache/1.3.24 (Win32) mod_python/2.7.6 Python/2.2.1c1 PHP/4.1.3-dev)
 >
 > It was mentioned that the mime type may not be maintained, but AddType
 > application/x-httpd-py .py did not help.
 >
 > Thanx in advance
 >
 > _________________________________________________________________
 > Chat with friends online, try MSN Messenger: http://messenger.msn.com
 >
 > _______________________________________________
 > Mod_python mailing list
 > Mod_python@modpython.org
 > http://www.modpython.org/mailman/listinfo/mod_python


_______________________________________________
Mod_python mailing list
Mod_python@modpython.org
http://www.modpython.org/mailman/listinfo/mod_python


_________________________________________________________________
Join the worlds largest e-mail service with MSN Hotmail. 
http://www.hotmail.com


From charney at charneyday.com  Thu Apr  4 20:37:55 2002
From: charney at charneyday.com (Reg Charney)
Date: Fri Jan  9 21:59:18 2004
Subject: [mod_python] mptest.py text does not interpret
References: <F176c4QzPW8AAkjtjsX0000090b@hotmail.com>
Message-ID: <3CAD2A23.EA4E1F38@charneyday.com>

Could you please send a copy of the test program you are using. All my problems
started with an invalid test program. My "fixes" kept on making things worse and
worse until I asked the list.

Reg.

Willem Fourie wrote:

> Hi Reg
>
> Thanx very much for your reply, but unfortunately I had already removed the
> AddType (tried with and without).
>
> When the ScriptAlias directory points to the WebDir (and mptest.py placed in
> that directory) then it shows the text sans interpretation.
>
> With the config pointing to /python, and the file in that directory and the
> URL pointing to /python/mptest.py the server responds with "The server
> encountered an internal error or misconfiguration and was unable to complete
> your request"
>
> Would appreciate ideas on other avenues perhaps.
> Thanx
>
>



From sandor.kopanyi at mailbox.hu  Fri Apr  5 13:35:41 2002
From: sandor.kopanyi at mailbox.hu (sandor.kopanyi@mailbox.hu)
Date: Fri Jan  9 21:59:18 2004
Subject: [mod_python] =?iso-8859-2?B?UkU6?=
 =?iso-8859-2?B?W21vZF9weXRob25d?=
 =?iso-8859-2?B?YXJndW1lbnQ=?=
 =?iso-8859-2?B?bWF0Y2hpbmc=?=
 =?iso-8859-2?B?Zm9y?=
 =?iso-8859-2?B?Zm9ybXM=?=
Message-ID: <20020405113541.24258.qmail@web2.mailbox.hu>

[...]
> the <form tag is a way of telling the browser how to lay out a form
> 
> the GET method is a way to tell the HTTP server what you are after
> 
> the POST method is a way to give the HTTP server information
> 
> browsers linking forms to POST/GET requests is an end user convenience
> 
> your code *must* accept that some or all of the fields will 
> not be included for I may manually type
> 
> http://www.ewwef.com/page.html?var1=hello&var2=goodbye
> 
> Also how would you discriminate between a page request and a 
> submission if you expected
> 
> http://www.ewwef.com/page.html?var1=&var2=
> 
> the solution to the poster's problem is a wrapper to his 
> function that checks the parameters for validity (soemthign 
> he shoudl be doing anyway!)

Thanks Matt,
I'm doing anyway param. checking, I just was curious to understand,
why and what... Important is that now it works. BTW: do you know
some good intro about GET/POST? Of course, one can read the RFC
(and it should do it!), but a tutorial always helps... The ones
I found focus on HTML, not on GET/POST.

Best regards,
Sandor
Thanks Matt,

--------------------------------------------------
http://www.mailbox.hu - Mert levelezni kell...




From fourie_willem at hotmail.com  Fri Apr  5 13:59:01 2002
From: fourie_willem at hotmail.com (Willem Fourie)
Date: Fri Jan  9 21:59:18 2004
Subject: [mod_python] mptest.py text does not interpret
Message-ID: <F174zes92ukCSQOWl7h0000de0a@hotmail.com>

Hi Reg

1) mptest.py is:
from mod_python import apache

def handler(req):
	req.content_type = "text/plain"
	req.send_http_header()
	req.write("Hello World!")
	return apache.OK

2) and test.py (called from a form):
#!C:\Program Files\Python22\Lib
import cgi

def main():
	print "Content-type: text/html\n"
	form = cgi.FieldStorage()
	if form.has_key("firstname") and form["firstname"].value != "":
		print "<h1>Hello", form["firstname"].value, "</h1>"
	else:
		print "<h1>Error! Please enter first name.</h1>"

main()


1) displays text and 2) tries to download. Only when in webroot. In 
webroot/python it displays the internal error message.


Thanx then


----Original Message Follows----
From: Reg Charney <charney@charneyday.com>
To: Willem Fourie <fourie_willem@hotmail.com>
CC: mod_python@modpython.org
Subject: Re: [mod_python] mptest.py text does not interpret
Date: Thu, 04 Apr 2002 20:37:55 -0800

Could you please send a copy of the test program you are using. All my 
problems
started with an invalid test program. My "fixes" kept on making things worse 
and
worse until I asked the list.

Reg.

Willem Fourie wrote:

 > Hi Reg
 >
 > Thanx very much for your reply, but unfortunately I had already removed 
the
 > AddType (tried with and without).
 >
 > When the ScriptAlias directory points to the WebDir (and mptest.py placed 
in
 > that directory) then it shows the text sans interpretation.
 >
 > With the config pointing to /python, and the file in that directory and 
the
 > URL pointing to /python/mptest.py the server responds with "The server
 > encountered an internal error or misconfiguration and was unable to 
complete
 > your request"
 >
 > Would appreciate ideas on other avenues perhaps.
 > Thanx
 >
 >




_________________________________________________________________
Send and receive Hotmail on your mobile device: http://mobile.msn.com


From jquinte at fadu.uba.ar  Fri Apr  5 11:16:20 2002
From: jquinte at fadu.uba.ar (Javier Quinteros)
Date: Fri Jan  9 21:59:18 2004
Subject: [mod_python] Same name, different directories...
In-Reply-To: <Pine.BSF.4.32.0204041501460.68385-100000@localhost>
References: <Pine.BSF.4.32.0204041501460.68385-100000@localhost>
Message-ID: <200204050823.LAA28351@www.fadu.uba.ar>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

Well, I want to thank to Grisha, Ian and Jeff for the answers.
I've renamed some of the modules in conflict (as I have told you) and 
everything is working fine. Using different interpreters for different 
directories would have been another solution but that would imply a small 
lowdown in the performance (more memory, maybe swapping), especially if you 
plan to increase the number of directories with python scripts.

I will try in this days using Python packages as Ian recommended.

Comments will be appreciated..

- -- 
- ---------------------------------
Javier Quinteros
jquinte@fadu.uba.ar
Secretar?a de Planificaci?n
Universidad de Buenos Aires
- ---------------------------------
Existe un solo lugar donde el Norte y el Sur del mundo se enfrentan en
igualdad de condiciones: es una cancha de f?tbol de Brasil, en la 
desembocadura
del r?o Amazonas. La l?nea del ecuador corta por la mitad el estadio Zerao, en
Amap?, de modo que cada equipo juega un tiempo en el sur y otro tiempo en el
norte.
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.0.6 (GNU/Linux)
Comment: For info see http://www.gnupg.org

iD8DBQE8rbG1dBzRnlFl4cgRAiSBAJ9XfOax/f3mxQEek+QZnY6KM9lx8ACgpCOa
Tx+Rq5OoN6McNK3Du1D+z3g=
=FFVF
-----END PGP SIGNATURE-----

From s_lott at yahoo.com  Fri Apr  5 06:30:37 2002
From: s_lott at yahoo.com (Steven Lott)
Date: Fri Jan  9 21:59:18 2004
Subject: [mod_python] RE:[mod_python]argumentmatchingforforms
In-Reply-To: <20020405113541.24258.qmail@web2.mailbox.hu>
Message-ID: <20020405143037.31370.qmail@web9608.mail.yahoo.com>

Short version: get puts form arguments into the URL
post puts form arguments into a stream that can be read by
Apache/Modpython.

Generally, GET is a bad idea - form data needs to be encoded to
prevent problems creating a URL - there are limitations on size.

Always use POST - no encoding, no size limitations.

GET is the basic URL -> page loop in HTTP.  It is used for
simple non-form requests.  POST should always be used for form
data.

--- sandor.kopanyi@mailbox.hu wrote:
> [...]
> > the <form tag is a way of telling the browser how to lay out
> a form
> > 
> > the GET method is a way to tell the HTTP server what you are
> after
> > 
> > the POST method is a way to give the HTTP server information
> > 
> > browsers linking forms to POST/GET requests is an end user
> convenience
> > 
> > your code *must* accept that some or all of the fields will 
> > not be included for I may manually type
> > 
> > http://www.ewwef.com/page.html?var1=hello&var2=goodbye
> > 
> > Also how would you discriminate between a page request and a
> 
> > submission if you expected
> > 
> > http://www.ewwef.com/page.html?var1=&var2=
> > 
> > the solution to the poster's problem is a wrapper to his 
> > function that checks the parameters for validity (soemthign 
> > he shoudl be doing anyway!)
> 
> Thanks Matt,
> I'm doing anyway param. checking, I just was curious to
> understand,
> why and what... Important is that now it works. BTW: do you
> know
> some good intro about GET/POST? Of course, one can read the
> RFC
> (and it should do it!), but a tutorial always helps... The
> ones
> I found focus on HTML, not on GET/POST.
> 
> Best regards,
> Sandor
> Thanks Matt,
> 
> --------------------------------------------------
> http://www.mailbox.hu - Mert levelezni kell...
> 
> 
> 
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://www.modpython.org/mailman/listinfo/mod_python


=====
--
S. Lott, CCP :-{)
S_LOTT@YAHOO.COM
http://www.mindspring.com/~slott1
Buccaneer #468: KaDiMa

Macintosh user: drinking upstream from the herd.

__________________________________________________
Do You Yahoo!?
Yahoo! Tax Center - online filing with TurboTax
http://taxes.yahoo.com/

From fourie_willem at hotmail.com  Fri Apr  5 15:12:27 2002
From: fourie_willem at hotmail.com (Willem Fourie)
Date: Fri Jan  9 21:59:18 2004
Subject: [mod_python] mptest.py text does not interpret
Message-ID: <F146NV3LCTosnwO5UGX00000f61@hotmail.com>

Hi Reg

I've copied mptest and mptest.py (same content) to both webroot and 
webroot/python (the ScriptAlias dir). When I run the URL's I get:
1) http://server/mptest - displays text in browser
2) http://server/mptest.py - tries to download
3) http://server/python/mptest - displays text in browser
4) http://server/python/mptest.py - internal server error

It's the same with or without "AddType application/x-httpd-py .py"

Have a phat Phriday
Cheers then


----Original Message Follows----
From: Reg Charney <charney@charneyday.com>
To: Willem Fourie <fourie_willem@hotmail.com>
CC: mod_python@modpython.org
Subject: Re: [mod_python] mptest.py text does not interpret
Date: Thu, 04 Apr 2002 20:37:55 -0800

Could you please send a copy of the test program you are using. All my 
problems
started with an invalid test program. My "fixes" kept on making things worse 
and
worse until I asked the list.

Reg.

Willem Fourie wrote:

 > Hi Reg
 >
 > Thanx very much for your reply, but unfortunately I had already removed 
the
 > AddType (tried with and without).
 >
 > When the ScriptAlias directory points to the WebDir (and mptest.py placed 
in
 > that directory) then it shows the text sans interpretation.
 >
 > With the config pointing to /python, and the file in that directory and 
the
 > URL pointing to /python/mptest.py the server responds with "The server
 > encountered an internal error or misconfiguration and was unable to 
complete
 > your request"
 >
 > Would appreciate ideas on other avenues perhaps.
 > Thanx
 >
 >




_________________________________________________________________
Chat with friends online, try MSN Messenger: http://messenger.msn.com


From asaddi at philosophysw.com  Fri Apr  5 18:43:55 2002
From: asaddi at philosophysw.com (Allan Saddi)
Date: Fri Jan  9 21:59:18 2004
Subject: [mod_python] publisher security concerns
Message-ID: <20020405184014.S25745-100000@kalahari.flup.org>

Hi there,

I'm using mod_python 2.7.6 on FreeBSD. I was playing around with
the publisher handler today when I noticed something of concern.
I scoured the mailing list archives to see if it was mentioned
before, but I found no mention of it. (If it was discussed
before, please point me to the approximate date of the thread.)

Basically, if a module is loaded indirectly (via an import from
within another module), an outside user will be able to call
functions within that module afterward.

So, for example, if I have a script foo.py that imports pgdb
(PyGreSQL), and foo.py is later "published" by publisher,
afterward, I will be able to call functions within pgdb through
publisher. Note though that if a particular Apache child
interpreter instance has never loaded foo.py, it will
(rightfully) reject requests to pgdb.

The problem seems to lie in mod_python.apache.import_module(),
specifically this section of code:

        # keep track of file modification time and
        # try to reload it if it is newer
        if sys.modules.has_key(module_name):

            # the we won't even bother importing
            module = sys.modules[module_name]

            ...

When path is specified and not None (as it normally is when
import_module() is called from publisher), it is ignored if the
module already exists in the global modules list (sys.modules).

I'm a new mod_python user, so I'm not sure if this is a bug or
an intended feature. The impact of this behavior seems to be
limited to pure python modules, so thankfully, modules like os
cannot be exploited this way.  Essentially though, publisher is
exposing interfaces that the programmer may not know are
exposed. And that could be bad...

(Using my pgdb example, I was able to connect to my database
using the right URL... I wasn't able to do much else beyond
that, but that alone seemed scary enough.)

- Allan Saddi
  asaddi@philosophysw.com


From ian at veryfresh.com  Sat Apr  6 01:48:54 2002
From: ian at veryfresh.com (Ian Clelland)
Date: Fri Jan  9 21:59:18 2004
Subject: [mod_python] RE:[mod_python]argumentmatchingforforms
In-Reply-To: <20020405143037.31370.qmail@web9608.mail.yahoo.com>
References: <20020405113541.24258.qmail@web2.mailbox.hu> <20020405143037.31370.qmail@web9608.mail.yahoo.com>
Message-ID: <20020406094854.GC19813@fullfactor.com>

On Fri, Apr 05, 2002 at 06:30:37AM -0800, Steven Lott wrote:
> Short version: get puts form arguments into the URL
> post puts form arguments into a stream that can be read by
> Apache/Modpython.
...
> GET is the basic URL -> page loop in HTTP.  It is used for
> simple non-form requests.  POST should always be used for form
> data.

I'm sorry, but I have to strongly disagree with you on this. While web 
application designers have a tendency to treat GET and POST as 
interchangeable, they really have very different meanings in HTTP.

Long version:

GET should always be used when you are simply retrieving information 
from a web application. The parameters to the GET query, which do form 
part of the URL, should only be used to refine what information you are 
retrieving.

The important thing to remember about GET requests is that they are 
never supposed to have side effects. All it should do is show you 
something that is already on the server, or can be generated from data 
on the erver. GET request aren't supposed to actually 'do' anything, in 
terms of real-world effects, like changing things on the server, or 
sending an email message. This means that the browser should be free to 
re-send the request as many times as it wants to. It also means that 
the results can be cached (which is a good thing - the results of a GET 
query should stay relatively stable, at least over the short term)

POST requests, on the other hand, are specifically for sending data 
which is expected to modify the state of a web server. POST requests 
are expected to have side effects. Because of this, the browser is
*not allowed* to resubmit the request to the server without the user's 
explicit authorisation.

> Generally, GET is a bad idea - form data needs to be encoded to
> prevent problems creating a URL - there are limitations on size.
 
Yes, there is usually a limit imposed on the length of the URL, 
something like 4000 characters, but that should be enough for any 
request. If you ever go over that, you are probably doing something 
that GET was not designed for, like sending information to be saved on 
the server.

> Always use POST - no encoding, no size limitations.
 
POST queries, by default, use the same encoding as GET, 
application/x-www-form-urlencoded, when they are the results of 
submitting an HTML form. When you read POST form data using req.read(), 
you still have to decode strings like "param1=val1&param2=val2", just 
like in GET.

There is another standard for encoding POST data - multipart/form-data 
- which is useful when you want to send lots of binary data, such as a 
file upload. It is much less efficient for simple form data, though, 
and is more work to parse.


Sorry for the rant; I had to get that out :) I really do believe that
proper use of HTTP can only strengthen web applications, though (this
is the primary reason I am using mod_python now, instead of PHP).

--
Ian
<ian@veryfresh.com>

From sam at webslingerZ.com  Mon Apr  8 11:31:31 2002
From: sam at webslingerZ.com (Sam Brauer)
Date: Fri Jan  9 21:59:18 2004
Subject: [mod_python] strange runtime exception
Message-ID: <Pine.LNX.4.33.0204081119140.15787-100000@localhost.localdomain>

I have recently observed an intermittent exception that I think may be 
related to mod_python.  It may also be a Python problem, but I have only 
ever seen it occur under mod_python, so I thought I'd ask here first.

What happens is that I call code like this inside a handler:
utf8string = unicode(val, enc).encode('utf-8')
(where val is a string in an encoding identified by enc)

Most of the time (in fact, for days or even weeks) this works fine.  Then 
every so often I will get the following exception:

exceptions.RuntimeError: cannot unmarshal code objects in restricted 
execution mode
File "/usr/local/lib/python2.2/encodings/__init__.py", line 51, in 
search_function
mod = __import__(modname,globals(),locals(),'*')

Once I encounter this exception, I can hit the same url again and may or
may not get the exception again.  There seems to be no pattern to its
occurrence. But generally, once it occurs it will recur "at random" until
apache is restarted.

Has anyone else seen this before, or have any idea why it's happening?

Many thanks,
Sam

-- 
Sam Brauer
Systems Programmer
sam@webslingerZ.com


From jquinte at fadu.uba.ar  Mon Apr  8 16:19:18 2002
From: jquinte at fadu.uba.ar (Javier Quinteros)
Date: Fri Jan  9 21:59:18 2004
Subject: [mod_python] publisher security concerns
In-Reply-To: <20020405184014.S25745-100000@kalahari.flup.org>
References: <20020405184014.S25745-100000@kalahari.flup.org>
Message-ID: <200204081326.QAA03663@www.fadu.uba.ar>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

Hi !!!
If you are worried about exposing some scripts that should "only" be used 
from other modules importing them, there's an easy solution (and I think it's 
the right one)... ;-)

Suppose you've got a script called interfacedb.py in your directory and it's 
full of functions that access your DB without checking anything, because you 
supose that it was imported from the modules that effectively do the 
checkings. The solution is to put this statement at the beggining of the 
script:

__auth__ = {}

This way, you're telling apache that no one is authorize to access (execute) 
this script. You can only call the functions inside the script if you import 
it from other module. This way you should add this statement to every script 
you don't want to be execute directly, no matter what URL you ask your 
browser.

Sorry if I misunderstood your question....

Hope this help...

On Friday 05 April 2002 23:43, Allan Saddi wrote:
> Hi there,
>
> I'm using mod_python 2.7.6 on FreeBSD. I was playing around with
> the publisher handler today when I noticed something of concern.
> I scoured the mailing list archives to see if it was mentioned
> before, but I found no mention of it. (If it was discussed
> before, please point me to the approximate date of the thread.)
>
> Basically, if a module is loaded indirectly (via an import from
> within another module), an outside user will be able to call
> functions within that module afterward.
>
> So, for example, if I have a script foo.py that imports pgdb
> (PyGreSQL), and foo.py is later "published" by publisher,
> afterward, I will be able to call functions within pgdb through
> publisher. Note though that if a particular Apache child
> interpreter instance has never loaded foo.py, it will
> (rightfully) reject requests to pgdb.
>
> The problem seems to lie in mod_python.apache.import_module(),
> specifically this section of code:
>
>         # keep track of file modification time and
>         # try to reload it if it is newer
>         if sys.modules.has_key(module_name):
>
>             # the we won't even bother importing
>             module = sys.modules[module_name]
>
>             ...
>
> When path is specified and not None (as it normally is when
> import_module() is called from publisher), it is ignored if the
> module already exists in the global modules list (sys.modules).
>
> I'm a new mod_python user, so I'm not sure if this is a bug or
> an intended feature. The impact of this behavior seems to be
> limited to pure python modules, so thankfully, modules like os
> cannot be exploited this way.  Essentially though, publisher is
> exposing interfaces that the programmer may not know are
> exposed. And that could be bad...
>
> (Using my pgdb example, I was able to connect to my database
> using the right URL... I wasn't able to do much else beyond
> that, but that alone seemed scary enough.)
>
> - Allan Saddi
>   asaddi@philosophysw.com
>

- -- 
- ---------------------------------
Javier Quinteros
jquinte@fadu.uba.ar
Secretar?a de Planificaci?n
Universidad de Buenos Aires
- ---------------------------------
Existe un solo lugar donde el Norte y el Sur del mundo se enfrentan en
igualdad de condiciones: es una cancha de f?tbol de Brasil, en la 
desembocadura
del r?o Amazonas. La l?nea del ecuador corta por la mitad el estadio Zerao, en
Amap?, de modo que cada equipo juega un tiempo en el sur y otro tiempo en el
norte.
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.0.6 (GNU/Linux)
Comment: For info see http://www.gnupg.org

iD8DBQE8se02dBzRnlFl4cgRAilyAJ9HCNjVlEHoG/zbv/A1XSx3P98RkwCg5ATw
D4QDlDayZurKXPr+QjhRX9E=
=Ji5h
-----END PGP SIGNATURE-----

From asaddi at philosophysw.com  Mon Apr  8 13:34:11 2002
From: asaddi at philosophysw.com (Allan Saddi)
Date: Fri Jan  9 21:59:18 2004
Subject: [mod_python] publisher security concerns
In-Reply-To: <200204081326.QAA03663@www.fadu.uba.ar>
Message-ID: <20020408132027.E17910-100000@kalahari.flup.org>

Hi Javier,

That was very helpful, and yes, it does actually sound like the
"right" solution. :) The only drawback is that any third-party
modules (that is, modules that you didn't write yourself) will
have to be modified similarly. This may or may not be an easy
task, depending on the number of such modules you use in your
project. (And what about Python standard modules?)

I guess I'm basically looking for a "deny by default" type of
solution, which can easily be done by modifying publisher. But
such changes would break publisher's generalness and existing
apps built around publisher, so I guess it's not a very useful
thing to implement in the mod_python distribution.

Thanks.
- Allan

On Mon, 8 Apr 2002, Javier Quinteros wrote:

> Hi !!!
> If you are worried about exposing some scripts that should "only" be used
> from other modules importing them, there's an easy solution (and I think it's
> the right one)... ;-)
>
> Suppose you've got a script called interfacedb.py in your directory and it's
> full of functions that access your DB without checking anything, because you
> supose that it was imported from the modules that effectively do the
> checkings. The solution is to put this statement at the beggining of the
> script:
>
> __auth__ = {}
>
> This way, you're telling apache that no one is authorize to access (execute)
> this script. You can only call the functions inside the script if you import
> it from other module. This way you should add this statement to every script
> you don't want to be execute directly, no matter what URL you ask your
> browser.
>
> Sorry if I misunderstood your question....
>
> Hope this help...


From jquinte at fadu.uba.ar  Mon Apr  8 18:15:08 2002
From: jquinte at fadu.uba.ar (Javier Quinteros)
Date: Fri Jan  9 21:59:18 2004
Subject: [mod_python] publisher security concerns
In-Reply-To: <20020408132027.E17910-100000@kalahari.flup.org>
References: <20020408132027.E17910-100000@kalahari.flup.org>
Message-ID: <200204081522.SAA06372@www.fadu.uba.ar>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

Don't be worried about Python standard modules. The only things that anyone 
can execute via URL is the scripts you have in the Directory defined in 
apache. This means that all the third-party modules can be placed in 
/usr/local/python2/lib (or whatever) with Python standard modules and will 
not be exposed via apache.

Bye,

On Monday 08 April 2002 17:34, Allan Saddi wrote:
> Hi Javier,
>
> That was very helpful, and yes, it does actually sound like the
> "right" solution. :) The only drawback is that any third-party
> modules (that is, modules that you didn't write yourself) will
> have to be modified similarly. This may or may not be an easy
> task, depending on the number of such modules you use in your
> project. (And what about Python standard modules?)

- -- 
- ---------------------------------
Javier Quinteros
jquinte@fadu.uba.ar
Secretar?a de Planificaci?n
Universidad de Buenos Aires
- ---------------------------------
Existe un solo lugar donde el Norte y el Sur del mundo se enfrentan en
igualdad de condiciones: es una cancha de f?tbol de Brasil, en la 
desembocadura
del r?o Amazonas. La l?nea del ecuador corta por la mitad el estadio Zerao, en
Amap?, de modo que cada equipo juega un tiempo en el sur y otro tiempo en el
norte.
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.0.6 (GNU/Linux)
Comment: For info see http://www.gnupg.org

iD8DBQE8sghddBzRnlFl4cgRAi6AAJ9imwImXJLSSgT0r5/ZACI5pFzEUwCeOtRO
i94azxuFCdMoI1YMJ56qB6o=
=lQ1c
-----END PGP SIGNATURE-----

From asaddi at philosophysw.com  Mon Apr  8 15:05:28 2002
From: asaddi at philosophysw.com (Allan Saddi)
Date: Fri Jan  9 21:59:18 2004
Subject: [mod_python] publisher security concerns
In-Reply-To: <200204081522.SAA06372@www.fadu.uba.ar>
Message-ID: <20020408144431.D47255-100000@kalahari.flup.org>

I've found that this is only true when the module is loaded for
the first time. If the module is already loaded, regardless of
where it was loaded from, then you can access it via URL.

For example, since publisher.py imports base64, you can call
functions within base64 via URL:

  http://website/some/path/base64/encodestring?s=foobar

And this actually works for me. (Using FreeBSD 4.5, Apache
1.3.24, mod_python 2.7.6, Python 2.2)

My .htaccess is simply:

  PythonPath "['/some/directory', '/usr/local/lib/python2.2', '/usr/local/lib/python2.2/lib-dynload', '/usr/local/lib/python2.2/site-packages']"
  SetHandler python-program
  PythonHandler mod_python.publisher
  PythonDebug on

- Allan

On Mon, 8 Apr 2002, Javier Quinteros wrote:

> Don't be worried about Python standard modules. The only things that anyone
> can execute via URL is the scripts you have in the Directory defined in
> apache. This means that all the third-party modules can be placed in
> /usr/local/python2/lib (or whatever) with Python standard modules and will
> not be exposed via apache.
>
> Bye,


From jquinte at fadu.uba.ar  Mon Apr  8 20:00:44 2002
From: jquinte at fadu.uba.ar (Javier Quinteros)
Date: Fri Jan  9 21:59:18 2004
Subject: [mod_python] publisher security concerns
In-Reply-To: <20020408144431.D47255-100000@kalahari.flup.org>
References: <20020408144431.D47255-100000@kalahari.flup.org>
Message-ID: <200204081707.UAA07983@www.fadu.uba.ar>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

Allan:
????????You're right and now..... Houston, Houston. We have a problem....
Does anyone know how to solve this?

On Monday 08 April 2002 19:05, Allan Saddi wrote:
> I've found that this is only true when the module is loaded for
> the first time. If the module is already loaded, regardless of
> where it was loaded from, then you can access it via URL.
>
> For example, since publisher.py imports base64, you can call
> functions within base64 via URL:
>
>   http://website/some/path/base64/encodestring?s=foobar
>
> And this actually works for me. (Using FreeBSD 4.5, Apache
> 1.3.24, mod_python 2.7.6, Python 2.2)
>
> My .htaccess is simply:
>
>   PythonPath "['/some/directory', '/usr/local/lib/python2.2',
> '/usr/local/lib/python2.2/lib-dynload',
> '/usr/local/lib/python2.2/site-packages']" SetHandler python-program
>   PythonHandler mod_python.publisher
>   PythonDebug on
>
> - Allan

- -- 
- ---------------------------------
Javier Quinteros
jquinte@fadu.uba.ar
Secretar?a de Planificaci?n
Universidad de Buenos Aires
- ---------------------------------
Existe un solo lugar donde el Norte y el Sur del mundo se enfrentan en
igualdad de condiciones: es una cancha de f?tbol de Brasil, en la 
desembocadura
del r?o Amazonas. La l?nea del ecuador corta por la mitad el estadio Zerao, en
Amap?, de modo que cada equipo juega un tiempo en el sur y otro tiempo en el
norte.
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.0.6 (GNU/Linux)
Comment: For info see http://www.gnupg.org

iD8DBQE8siEcdBzRnlFl4cgRAuOiAKCqPxaDUL9KTi7BYLevQF9LDtynCQCgrj8Y
kWv27tFfobuj7JnU1kfptXo=
=L9NU
-----END PGP SIGNATURE-----

From jfk at metation.com  Tue Apr  9 10:11:33 2002
From: jfk at metation.com (=?iso-8859-1?q?J=F8rgen=20Fr=F8jk=20Kj=E6rsgaard=20{Metation}?=)
Date: Fri Jan  9 21:59:18 2004
Subject: [mod_python] Status for mod_python for Apache 2.0
Message-ID: <02040910113300.00295@grace.informaticon.dk>

Hi,

Apache 2.0 has come out. What is the status of mod_python for Apache 2.0? Is 
it being worked on at the moment; are there any release plans for a stable 
version?

regards, jfk

-- 
J?rgen Fr?jk Kj?rsgaard, direkt?r og systemkonsulent
Metation aps - Kystvejen 29, DK-8000 ?rhus C
Web: www.metation.com  - Tlf: +45 8625 0038 - Mobil: +45 2925 6693

From grisha at modpython.org  Tue Apr  9 08:38:54 2002
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 21:59:18 2004
Subject: [mod_python] Status for mod_python for Apache 2.0
In-Reply-To: <02040910113300.00295@grace.informaticon.dk>
Message-ID: <Pine.BSF.4.32.0204090838250.35893-100000@localhost>

It's being worked on. I wouldn't expect a release for another couple of
weeks at least.

Grisha

On Tue, 9 Apr 2002, [iso-8859-1] J?rgen Fr?jk Kj?rsgaard {Metation} wrote:

> Hi,
>
> Apache 2.0 has come out. What is the status of mod_python for Apache 2.0? Is
> it being worked on at the moment; are there any release plans for a stable
> version?
>
> regards, jfk
>
> --
> J?rgen Fr?jk Kj?rsgaard, direkt?r og systemkonsulent
> Metation aps - Kystvejen 29, DK-8000 ?rhus C
> Web: www.metation.com  - Tlf: +45 8625 0038 - Mobil: +45 2925 6693
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://www.modpython.org/mailman/listinfo/mod_python
>


From roy.smith at micromuse.com  Tue Apr  9 22:14:29 2002
From: roy.smith at micromuse.com (Roy Smith)
Date: Fri Jan  9 21:59:18 2004
Subject: [mod_python] Changes to modules seem to get cached
In-Reply-To: <200204091752.g39Hq1s39009@eden.ispol.com>
Message-ID: <47119735.3227379269@[192.168.1.33]>

I'm running:

Apache 1.3.22
Python 2.1.2
mod_python 2.7.6
Red Hat 6.2
Netscape 4.72

I'm just starting to play around with mod_python.  So far it seems pretty 
neat, but I don't quite understand how mod_python notices when a module 
gets updated, and what it does when it notices.

Most of the time, if I edit my python file and reload my browser window, I 
get the results of the new module.  Sometimes, however, it seems like I've 
got to reload twice to see the effect of the change.  This seems to be more 
likely to happen if the last version of the module generated an error. 
Even weirder, I can get into states where if I keep hitting reload, I'll 
cycle through a number of different earlier versions of the page.

I've got several httpd's running, and I'm guessing each time I do a reload 
it gets served by a different process, and apparantly each process has a 
different version of the module cached.  What I don't understand is why 
each process doesn't notice that the disk file has changed and re-import 
the module.  Or maybe my understanding of what's going on is totally off 
the wall?



--
Roy Smith
Staff Engineer
Visionary Model Development
roy.smith@micromuse.com
+1 914 747 7612


From stony8 at gmx.de  Wed Apr 10 06:54:45 2002
From: stony8 at gmx.de (Alexander Steinert)
Date: Fri Jan  9 21:59:18 2004
Subject: [mod_python] Changes to modules seem to get cached
In-Reply-To: <47119735.3227379269@[192.168.1.33]>; from roy.smith@micromuse.com on Tue, Apr 09, 2002 at 10:14:29PM -0400
References: <200204091752.g39Hq1s39009@eden.ispol.com> <47119735.3227379269@[192.168.1.33]>
Message-ID: <20020410065445.B642@tyche.svt.tu-harburg.de>

> I'm just starting to play around with mod_python.  So far it seems pretty 
> neat, but I don't quite understand how mod_python notices when a module 
> gets updated, and what it does when it notices.

Read
http://www.modpython.org/live/mod_python-2.7.6/doc-html/dir-other-par.html

IIRC, only modules imported by mod_python code (e.g. modules addressed
via URL using the publisher handler or modules specified as handlers in
httpd.conf) get reloaded automatically.

I _always_ reload apache before testing a change, because I often got
strange errors when I didn't.

HTH

Stony


From grisha at modpython.org  Wed Apr 10 10:56:06 2002
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 21:59:19 2004
Subject: [mod_python] publisher security concerns
In-Reply-To: <200204081707.UAA07983@www.fadu.uba.ar>
Message-ID: <Pine.BSF.4.32.0204101040140.50663-100000@localhost>

After a little bit of thinking, this looks like essentially a bug - the
Publisher (unlike the native mod_python handler) should not allow access
to files that are not in the directory which is being requested.

Another way to tackle it is require something like a __publish__ variable
to be defined inside the module, but I think that would be overkill.

This is obviously a serious security issue, so I will have to rush a
release out the door to fix it.

It seems that one can only (ab)use modules that already imported, and of
those only the ones that are native - but that in itself is already enough
to cause minial harm, e.g.:

http://website/some/path/os/makedirs?name=/tmp/hello

will create a direcroty "hello" in /tmp

I couldn't think of anything more harmful than this yet, but if someone
can come up with a more evil example, please e-mail me (off list perhaps).

Grisha



On Mon, 8 Apr 2002, Javier Quinteros wrote:

> -----BEGIN PGP SIGNED MESSAGE-----
> Hash: SHA1
>
> Allan:
> ????????You're right and now..... Houston, Houston. We have a problem....
> Does anyone know how to solve this?
>
> On Monday 08 April 2002 19:05, Allan Saddi wrote:
> > I've found that this is only true when the module is loaded for
> > the first time. If the module is already loaded, regardless of
> > where it was loaded from, then you can access it via URL.
> >
> > For example, since publisher.py imports base64, you can call
> > functions within base64 via URL:
> >
> >   http://website/some/path/base64/encodestring?s=foobar
> >
> > And this actually works for me. (Using FreeBSD 4.5, Apache
> > 1.3.24, mod_python 2.7.6, Python 2.2)
> >
> > My .htaccess is simply:
> >
> >   PythonPath "['/some/directory', '/usr/local/lib/python2.2',
> > '/usr/local/lib/python2.2/lib-dynload',
> > '/usr/local/lib/python2.2/site-packages']" SetHandler python-program
> >   PythonHandler mod_python.publisher
> >   PythonDebug on
> >
> > - Allan
>
> - --
> - ---------------------------------
> Javier Quinteros
> jquinte@fadu.uba.ar
> Secretar?a de Planificaci?n
> Universidad de Buenos Aires
> - ---------------------------------
> Existe un solo lugar donde el Norte y el Sur del mundo se enfrentan en
> igualdad de condiciones: es una cancha de f?tbol de Brasil, en la
> desembocadura
> del r?o Amazonas. La l?nea del ecuador corta por la mitad el estadio Zerao, en
> Amap?, de modo que cada equipo juega un tiempo en el sur y otro tiempo en el
> norte.
> -----BEGIN PGP SIGNATURE-----
> Version: GnuPG v1.0.6 (GNU/Linux)
> Comment: For info see http://www.gnupg.org
>
> iD8DBQE8siEcdBzRnlFl4cgRAuOiAKCqPxaDUL9KTi7BYLevQF9LDtynCQCgrj8Y
> kWv27tFfobuj7JnU1kfptXo=
> =L9NU
> -----END PGP SIGNATURE-----
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://www.modpython.org/mailman/listinfo/mod_python
>


From grisha at modpython.org  Wed Apr 10 18:06:04 2002
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 21:59:19 2004
Subject: [mod_python] Announce: 2.7.7
In-Reply-To: <200204081707.UAA07983@www.fadu.uba.ar>
Message-ID: <Pine.BSF.4.32.0204101755320.56871-100000@localhost>

I have released mod_python 2.7.7.

This release (as far as I could tell adequately) addresses the security
issue whereby a module indirectly imported by a published module could
then be accessed via the publisher.

It is highly recommended that you upgrade, especially if you use the
publisher.

A quick way to upgrade is to just replace the apache.py file and restart
httpd - everything else is pretty much the same except for the verion
number. Windows users should still be able to use the 2.7.6 DLL with the
new apache.py.

Grisha



From Nik.Barron at pennantplc.co.uk  Thu Apr 11 16:18:17 2002
From: Nik.Barron at pennantplc.co.uk (Nik Barron)
Date: Fri Jan  9 21:59:19 2004
Subject: [mod_python] Query about authentication/authorization win Apache on Win32
Message-ID: <F17550784FF9D111B7F100E02921B24741E828@NT-SOTON-001>

Hi,

I have a problem getting authentication/authorization working. In Apache I
have the following:

   <IfModule mod_python.c>
    <Directory "C:/Programs/Internet/Apache/htdocs/plcsreqs">
	AddHandler python-program .py
   	PythonHandler test2
	PythonAuthenHandler test2
   	PythonDebug on

	AuthType Basic
	AuthName "nicepeople"
	AuthUserFile "C:/Programs/Internet/Apache/conf/users"
	Require valid-user
    </Directory>
  </IfModule>

The Auth... stuff works fine for a "normal" directory, so the file is
readable etc, and my mod_python script works fine with no authentication.

My test script has an authenhandler as follows:

  def authenhandler(req):
	
	global user

	pw = req.get_basic_auth_pw()
	user = req.connection.user
	
	return apache.OK

Currently all I want to do is grab the user's name from their Apache login.

Now, if the user logs in to another page on the site before going to the
mod_python script, everything works as expected and the username is passed
to the rest of my code in the global variable 'user'. 

But if you go directly to the mod_python script (e.g.
http://myhost/plcsreq/test.py), it goes through as "None", and the broswer
doesn't pop up a username/password box.

I'm guessing this is going to be some stupid error on my part, but I can't
seem to get it working. Any suggestions most welcome.

Thanks!

Nick Barron
Manager, E-Services Division
Pennant Information Services Ltd -- Registered in England No. 3772667
PGP: A94C 4190 026E 3E02 6D50  C8FA 8620 3091 FF34 533D

From reitz at inworks.de  Thu Apr 11 17:05:59 2002
From: reitz at inworks.de (Andre Reitz)
Date: Fri Jan  9 21:59:19 2004
Subject: [mod_python] Announce: 2.7.7
In-Reply-To: <Pine.BSF.4.32.0204101755320.56871-100000@localhost>
References: <200204081707.UAA07983@www.fadu.uba.ar>
	<Pine.BSF.4.32.0204101755320.56871-100000@localhost>
Message-ID: <20020411170559.5277a53d.reitz@inworks.de>

On Wed, 10 Apr 2002 18:06:04 -0400 (EDT)
"Gregory (Grisha) Trubetskoy" <grisha@modpython.org> wrote:

> 
> I have released mod_python 2.7.7.
> 
> This release (as far as I could tell adequately) addresses the security
> issue whereby a module indirectly imported by a published module could
> then be accessed via the publisher.
> 
> It is highly recommended that you upgrade, especially if you use the
> publisher.
> 
> A quick way to upgrade is to just replace the apache.py file and restart
> httpd - everything else is pretty much the same except for the verion
> number. Windows users should still be able to use the 2.7.6 DLL with the
> new apache.py.
> 
> Grisha

Did you forget to patch apache.py?? (The boo boo)


def setup_cgi(req):
    """
    Replace sys.stdin and stdout with an objects that read/write to
    the socket, as well as substitute the os.environ.
    Returns (environ, stdin, stdout) which you must save and then use
    with restore_nocgi().
    """

    # save env
    env = os.environ.copy()            <------(1)
    
    si = sys.stdin
    so = sys.stdout

    env = build_cgi_env(req)
 
    for k in env.keys():
        os.environ[k] = env[k]

    sys.stdout = CGIStdout(req)
    sys.stdin = CGIStdin(req)

    sys.argv = [] # keeps cgi.py happy

    return env, si, so		<--------(2)
> 

(1) : originalenv=os.environ.copy()
(2) : return originalenv,si,so




> 
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://www.modpython.org/mailman/listinfo/mod_python


-- 
_____________________________________________
inworks GmbH            Andre Reitz		
Magirusstrasse 44	Tel. 0731/93 80 7-21
89077 Ulm		http://www.inworks.de


From zoppi at cli.di.unipi.it  Thu Apr 11 18:27:44 2002
From: zoppi at cli.di.unipi.it (Giorgio Zoppi)
Date: Fri Jan  9 21:59:19 2004
Subject: [mod_python] publisher security concerns
In-Reply-To: <Pine.BSF.4.32.0204101040140.50663-100000@localhost>
Message-ID: <Pine.GSO.4.00.10204111821520.4173-100000@carlotta.cli.di.unipi.it>

On Wed, 10 Apr 2002, Gregory (Grisha) Trubetskoy wrote:

> 
> After a little bit of thinking, this looks like essentially a bug - the
> Publisher (unlike the native mod_python handler) should not allow access
> to files that are not in the directory which is being requested.
> 
> Another way to tackle it is require something like a __publish__ variable
> to be defined inside the module, but I think that would be overkill.
> 
> This is obviously a serious security issue, so I will have to rush a
> release out the door to fix it.

You can allow people to list security policies.
For example: 
- these modules are safe, and can be used, ala default deny stance.
This however doesn't solve the issue, but allow to restrict
potential problems.



From grisha at modpython.org  Thu Apr 11 13:07:51 2002
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 21:59:19 2004
Subject: [mod_python] Announce: 2.7.7
In-Reply-To: <20020411170559.5277a53d.reitz@inworks.de>
Message-ID: <Pine.BSF.4.32.0204111304190.66803-100000@localhost>

My appologies - I must have forgotten to check it in after the patch or
something...

On Thu, 11 Apr 2002, Andre Reitz wrote:

> On Wed, 10 Apr 2002 18:06:04 -0400 (EDT)
> "Gregory (Grisha) Trubetskoy" <grisha@modpython.org> wrote:
>
> >
> > I have released mod_python 2.7.7.
> >
> > This release (as far as I could tell adequately) addresses the security
> > issue whereby a module indirectly imported by a published module could
> > then be accessed via the publisher.
> >
> > It is highly recommended that you upgrade, especially if you use the
> > publisher.
> >
> > A quick way to upgrade is to just replace the apache.py file and restart
> > httpd - everything else is pretty much the same except for the verion
> > number. Windows users should still be able to use the 2.7.6 DLL with the
> > new apache.py.
> >
> > Grisha
>
> Did you forget to patch apache.py?? (The boo boo)
>
>
> def setup_cgi(req):
>     """
>     Replace sys.stdin and stdout with an objects that read/write to
>     the socket, as well as substitute the os.environ.
>     Returns (environ, stdin, stdout) which you must save and then use
>     with restore_nocgi().
>     """
>
>     # save env
>     env = os.environ.copy()            <------(1)
>
>     si = sys.stdin
>     so = sys.stdout
>
>     env = build_cgi_env(req)
>
>     for k in env.keys():
>         os.environ[k] = env[k]
>
>     sys.stdout = CGIStdout(req)
>     sys.stdin = CGIStdin(req)
>
>     sys.argv = [] # keeps cgi.py happy
>
>     return env, si, so		<--------(2)
> >
>
> (1) : originalenv=os.environ.copy()
> (2) : return originalenv,si,so
>
>
>
>
> >
> > _______________________________________________
> > Mod_python mailing list
> > Mod_python@modpython.org
> > http://www.modpython.org/mailman/listinfo/mod_python
>
>
> --
> _____________________________________________
> inworks GmbH            Andre Reitz
> Magirusstrasse 44	Tel. 0731/93 80 7-21
> 89077 Ulm		http://www.inworks.de
>


From reitz at inworks.de  Thu Apr 11 18:10:41 2002
From: reitz at inworks.de (Andre Reitz)
Date: Fri Jan  9 21:59:19 2004
Subject: [mod_python] Announce: 2.7.7
In-Reply-To: <Pine.BSF.4.32.0204111304190.66803-100000@localhost>
References: <20020411170559.5277a53d.reitz@inworks.de>
	<Pine.BSF.4.32.0204111304190.66803-100000@localhost>
Message-ID: <20020411181041.38859da7.reitz@inworks.de>

On Thu, 11 Apr 2002 13:07:51 -0400 (EDT)
"Gregory (Grisha) Trubetskoy" <grisha@modpython.org> wrote:

> 
> My appologies - I must have forgotten to check it in after the patch or
> something...
> 
Will you release Version 2.7.8 tomorrow with the bugfix included? :)

Greetings, Andre'

> On Thu, 11 Apr 2002, Andre Reitz wrote:
> 
> > On Wed, 10 Apr 2002 18:06:04 -0400 (EDT)
> > "Gregory (Grisha) Trubetskoy" <grisha@modpython.org> wrote:
> >
> > >
> > > I have released mod_python 2.7.7.
> > >
> > > This release (as far as I could tell adequately) addresses the security
> > > issue whereby a module indirectly imported by a published module could
> > > then be accessed via the publisher.
> > >
> > > It is highly recommended that you upgrade, especially if you use the
> > > publisher.
> > >
> > > A quick way to upgrade is to just replace the apache.py file and restart
> > > httpd - everything else is pretty much the same except for the verion
> > > number. Windows users should still be able to use the 2.7.6 DLL with the
> > > new apache.py.
> > >
> > > Grisha
> >
> > Did you forget to patch apache.py?? (The boo boo)
> >
> >
> > def setup_cgi(req):
> >     """
> >     Replace sys.stdin and stdout with an objects that read/write to
> >     the socket, as well as substitute the os.environ.
> >     Returns (environ, stdin, stdout) which you must save and then use
> >     with restore_nocgi().
> >     """
> >
> >     # save env
> >     env = os.environ.copy()            <------(1)
> >
> >     si = sys.stdin
> >     so = sys.stdout
> >
> >     env = build_cgi_env(req)
> >
> >     for k in env.keys():
> >         os.environ[k] = env[k]
> >
> >     sys.stdout = CGIStdout(req)
> >     sys.stdin = CGIStdin(req)
> >
> >     sys.argv = [] # keeps cgi.py happy
> >
> >     return env, si, so		<--------(2)
> > >
> >
> > (1) : originalenv=os.environ.copy()
> > (2) : return originalenv,si,so
> >
> >
> >
> >
> > >
> > > _______________________________________________
> > > Mod_python mailing list
> > > Mod_python@modpython.org
> > > http://www.modpython.org/mailman/listinfo/mod_python
> >
> >
> > --
> > _____________________________________________
> > inworks GmbH            Andre Reitz
> > Magirusstrasse 44	Tel. 0731/93 80 7-21
> > 89077 Ulm		http://www.inworks.de
> >
> 


-- 
_____________________________________________
inworks GmbH            Andre Reitz		
Magirusstrasse 44	Tel. 0731/93 80 7-21
89077 Ulm		http://www.inworks.de


From chris at vindaloo.com  Thu Apr 11 15:31:10 2002
From: chris at vindaloo.com (Christopher Sean Hilton)
Date: Fri Jan  9 21:59:19 2004
Subject: [mod_python] file question with mod_python
In-Reply-To: <Pine.BSF.4.32.0204111304190.66803-100000@localhost>; from grisha@modpython.org on Thu, Apr 11, 2002 at 01:07:51PM -0400
References: <20020411170559.5277a53d.reitz@inworks.de> <Pine.BSF.4.32.0204111304190.66803-100000@localhost>
Message-ID: <20020411153110.B2101@andale.vindaloo.com>

I'm trying to create a script to handle a file upload from a form with 
mod_python. I know that I should be looking into the util module but I've 
really got no clue about how to get started. Has anyone got some words of 
wisdom to put me on the right track? For more background I'd like to have a 
remote program encode a transaction in xml and post that file to me so I can 
unwrap it and apply the transaction to my database.

Thanks
Chris

-- 
Chris Hilton                                 chilton-at-vindaloo-dot-com
------------------------------------------------------------------------
                "All I was doing was trying to get home from work!"
                                                 -- Rosa Parks

From tree at basistech.com  Thu Apr 11 16:14:14 2002
From: tree at basistech.com (Tom Emerson)
Date: Fri Jan  9 21:59:19 2004
Subject: [mod_python] file question with mod_python
In-Reply-To: <20020411153110.B2101@andale.vindaloo.com>
References: <20020411170559.5277a53d.reitz@inworks.de>
	<Pine.BSF.4.32.0204111304190.66803-100000@localhost>
	<20020411153110.B2101@andale.vindaloo.com>
Message-ID: <15541.61078.473435.259679@magrathea.basistech.com>

Christopher Sean Hilton writes:
> I'm trying to create a script to handle a file upload from a form with 
> mod_python. I know that I should be looking into the util module but I've 
> really got no clue about how to get started. Has anyone got some words of 
> wisdom to put me on the right track?

I've done this using publisher: it's certainly the easiest way.

Given a form along the lines of:

<form action="process.py/doit" method="POST" enctype="multipart/form-data">
<b>Filename</b>: <input type="file" name="file">
</form>

And a form handler "doit" in process.py:

def doit(req, file):
    # ...

The 'file' argument is a file object representing the uploaded file:
you can read from this as you would any other file.

You should check to make sure that the file has a non-zero length:

import os, stat
statinfo = os.fstat(file.fileno())
if statinfo[stat.ST_SIZE] > 0:
    # process the text
else:
    # it's an empty file, or it didn't exist!

You should also look at the content type of the uploaded file. You can
access this via the form table in the request record:

_file = req.form['file']
if _file.type == "text/plain":
    # process plain text

That should be enough to get you started, I expect.

    -tree

-- 
Tom Emerson                                          Basis Technology Corp.
Sr. Computational Linguist                         http://www.basistech.com
  "Beware the lollipop of mediocrity: lick it once and you suck forever"

From Nik.Barron at pennantplc.co.uk  Fri Apr 12 12:18:51 2002
From: Nik.Barron at pennantplc.co.uk (Nik Barron)
Date: Fri Jan  9 21:59:19 2004
Subject: [mod_python] mod_python.publisher problems: 404s on second and subsequent hits
Message-ID: <F17550784FF9D111B7F100E02921B24741E83A@NT-SOTON-001>

I've been trying to get pubisher working using the example from the docs
(Chapter 6); I have "Hello.py" and the Apache config as in the docs under
section 6.1.1, running under Apache on Win32

The first time the URL is accessed everything works as expected. After that,
all I get is a 404 error until the server is restarted. I'm guessing I need
something to make the module persistent

Any ideas? There's nothing obvious in the logs, other than the 200 for the
first hit and 404s after that.

Thanks in advance,

Nick Barron
Manager, E-Services Division
Pennant Information Services Ltd -- Registered in England No. 3772667
PGP: A94C 4190 026E 3E02 6D50  C8FA 8620 3091 FF34 533D

From msdemlei at cl.uni-heidelberg.de  Sat Apr 13 18:15:47 2002
From: msdemlei at cl.uni-heidelberg.de (Markus Demleitner)
Date: Fri Jan  9 21:59:19 2004
Subject: [mod_python] What's the deal with _apachemodule?
Message-ID: <20020413161547.GB23274@tucana.cl.uni-heidelberg.de>

Hi list,

I'm trying to compile modpython 2.7.7 together with apache 1.3.23
and python 2.2 -- which works after some fiddling with the libs
python was linked to.  I know that the prerequisites don't state 
that 2.2 is supported, but I couldn't see how my problem could
be linked with the python version.

When I'm actually trying to let some test script run, I get
Traceback (most recent call last):
  File "/home/unimut/www/cgi-bin/modpython.py", line 4, in ?
    from mod_python import apache
  File "/usr/local/lib/python2.2/site-packages/mod_python/apache.py", line 55, in ?
    import _apache
ImportError: No module named _apache
in the server log.

That's fair enough, because there is no _apachemodule.so in
.../site-packages/mod_python, or anywhere else on the
python path.

Now, I say to myself, it's got be somewhere and check the
source directory -- lo and behold, there's _apachemodule.o
all right.  So, I link it to a dso -- and only get an undefined
symbol MpServer_Type.  That's in one of the .o's in .../src,
so I simply link all .o together.

The resulting _apachemodule.so says:
  File "/home/unimut/www/cgi-bin/modpython.py", line 4, in ?
    from mod_python import apache
  File "/usr/local/lib/python2.2/site-packages/mod_python/apache.py", line 55, in ?
    import _apache
ImportError: /usr/local/lib/python2.2/site-packages/mod_python/_apachemodule.so: undefined symbol: ap_log_error

This symbol is imported by _apachemodule.o itself -- so it's
unlikely that I have overlinked.

At this point I gave up, thinking I must be doing something extraordinarily
stupid.

So, what's the deal?  _apachemodule.so isn't mentioned anywhere in the
source tree, but it seems to be required to satisfy the import _apache
statement.  What might the solution to this riddle be?

        Markus

From rien at yeepa.org  Sat Apr 13 22:58:19 2002
From: rien at yeepa.org (Adrien Plisson)
Date: Fri Jan  9 21:59:19 2004
Subject: [mod_python] What's the deal with _apachemodule?
References: <20020413161547.GB23274@tucana.cl.uni-heidelberg.de>
Message-ID: <001001c1e32d$f15aae90$2cee4cd4@RANDOM>

From: "Markus Demleitner" <msdemlei@cl.uni-heidelberg.de>
> ...
> So, what's the deal?  _apachemodule.so isn't mentioned anywhere in the
> source tree, but it seems to be required to satisfy the import _apache
> statement.  What might the solution to this riddle be?

if i remember right, this problem is due to the fact the the _apache module
works *only* in an apache environment, that is, only when imported in a
module which is called from mod_python which runs on a launched apache
server.

quoted from the doc:
"4.3 apache - Access to Apache Internals.

The Python Application Programmer interface to Apache internals is contained
in a module appropriately named
apache, located inside the mod python package. This module provides some
important objects that map to Apache
internal structures, as well as some useful functions, all documented below.
The apache module can only be imported by a script running under mod python.
This is because it depends on a
built-in module apache provided by mod python."

here it is, don't try to test mod_python from a standalone script.

i hope i 'd been helpful.

--
rien


From msdemlei at cl.uni-heidelberg.de  Sun Apr 14 00:01:21 2002
From: msdemlei at cl.uni-heidelberg.de (msdemlei@cl.uni-heidelberg.de)
Date: Fri Jan  9 21:59:19 2004
Subject: [mod_python] What's the deal with _apachemodule?
In-Reply-To: <001001c1e32d$f15aae90$2cee4cd4@RANDOM>
References: <20020413161547.GB23274@tucana.cl.uni-heidelberg.de> <001001c1e32d$f15aae90$2cee4cd4@RANDOM>
Message-ID: <20020414000121.A11915@ferkel.cl.uni-heidelberg.de>

On Sat, Apr 13, 2002 at 10:58:19PM +0200, Adrien Plisson wrote:
> From: "Markus Demleitner" <msdemlei@cl.uni-heidelberg.de>
> > ...
> > So, what's the deal?  _apachemodule.so isn't mentioned anywhere in the
> > source tree, but it seems to be required to satisfy the import _apache
> > statement.  What might the solution to this riddle be?
> 
> if i remember right, this problem is due to the fact the the _apache module
> works *only* in an apache environment, that is, only when imported in a
> module which is called from mod_python which runs on a launched apache
> server.
> 
> quoted from the doc:
> "4.3 apache - Access to Apache Internals.
> 
> The Python Application Programmer interface to Apache internals is contained
> in a module appropriately named
> apache, located inside the mod python package. This module provides some
> ...
Well, yes, I'd expect that much, but I was not talking about 
apache.py but about _apachemodule.so of which I found no trace 
in the distribution:  apache.py imports _apache and can't do so
on my system.  Also, the failure occurred inside the mod_python
handler (which is why the tracebacks ended up in the error.log).

But thanks anyway

        Markus

From yjy-list-python at arbago.com  Sun Apr 14 13:04:56 2002
From: yjy-list-python at arbago.com (YOON, Joo-Yung)
Date: Fri Jan  9 21:59:19 2004
Subject: [mod_python] [Q] Apache Configuration
Message-ID: <20020414040456.GA25132@arbago.com>

Hi,
I followed all the directions written on the installation doc,
but can't see hello world when I do "http://localhost/test/mptest.py".
Just can see the program file contents itself.
Am I right to configure apache with --enable-module=so ?
And nothing else.

My environment:
  1. apache: 1.3.24
  2. python: 2.1.2

Here are what I did in the httpd.conf.
LoadModule python_module libexec/mod_python.so
<Directory "/test">
  AddHandler python-program .py
  PythonHandler mptest 
  PythonDebug On
</Directory>

Thanks in advance.
-- 
YOON, Joo-Yung / python
yjy-list-python@arbago.com
subscribe: mod_python-request@modpython.org 
unsubscribe: 

From grisha at modpython.org  Mon Apr 15 09:00:38 2002
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 21:59:19 2004
Subject: [mod_python] What's the deal with _apachemodule?
In-Reply-To: <20020413161547.GB23274@tucana.cl.uni-heidelberg.de>
Message-ID: <Pine.BSF.4.32.0204150858470.13576-100000@localhost>

_apachemodule.o is linked into mod_python.so. It relies on Apache API, so
you can't really use it outside Apache.

Grisha

On Sat, 13 Apr 2002, Markus Demleitner wrote:

> Hi list,
>
> I'm trying to compile modpython 2.7.7 together with apache 1.3.23
> and python 2.2 -- which works after some fiddling with the libs
> python was linked to.  I know that the prerequisites don't state
> that 2.2 is supported, but I couldn't see how my problem could
> be linked with the python version.
>
> When I'm actually trying to let some test script run, I get
> Traceback (most recent call last):
>   File "/home/unimut/www/cgi-bin/modpython.py", line 4, in ?
>     from mod_python import apache
>   File "/usr/local/lib/python2.2/site-packages/mod_python/apache.py", line 55, in ?
>     import _apache
> ImportError: No module named _apache
> in the server log.
>
> That's fair enough, because there is no _apachemodule.so in
> .../site-packages/mod_python, or anywhere else on the
> python path.
>
> Now, I say to myself, it's got be somewhere and check the
> source directory -- lo and behold, there's _apachemodule.o
> all right.  So, I link it to a dso -- and only get an undefined
> symbol MpServer_Type.  That's in one of the .o's in .../src,
> so I simply link all .o together.
>
> The resulting _apachemodule.so says:
>   File "/home/unimut/www/cgi-bin/modpython.py", line 4, in ?
>     from mod_python import apache
>   File "/usr/local/lib/python2.2/site-packages/mod_python/apache.py", line 55, in ?
>     import _apache
> ImportError: /usr/local/lib/python2.2/site-packages/mod_python/_apachemodule.so: undefined symbol: ap_log_error
>
> This symbol is imported by _apachemodule.o itself -- so it's
> unlikely that I have overlinked.
>
> At this point I gave up, thinking I must be doing something extraordinarily
> stupid.
>
> So, what's the deal?  _apachemodule.so isn't mentioned anywhere in the
> source tree, but it seems to be required to satisfy the import _apache
> statement.  What might the solution to this riddle be?
>
>         Markus
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://www.modpython.org/mailman/listinfo/mod_python
>


From chris at vindaloo.com  Fri Apr 12 00:45:08 2002
From: chris at vindaloo.com (Christopher Sean Hilton)
Date: Fri Jan  9 21:59:19 2004
Subject: [mod_python] file question with mod_python
In-Reply-To: <15541.61078.473435.259679@magrathea.basistech.com>; from tree@basistech.com on Thu, Apr 11, 2002 at 04:14:14PM -0400
References: <20020411170559.5277a53d.reitz@inworks.de> <Pine.BSF.4.32.0204111304190.66803-100000@localhost> <20020411153110.B2101@andale.vindaloo.com> <15541.61078.473435.259679@magrathea.basistech.com>
Message-ID: <20020412004508.A810@dantooine.vindaloo.com>

Thanks, I'll try this out tommorow.

Chris

On Thu, Apr 11, 2002 at 04:14:14PM -0400, 
Tom Emerson wrote:
> Christopher Sean Hilton writes:
> > I'm trying to create a script to handle a file upload from a form with 
> > mod_python. I know that I should be looking into the util module but I've 
> > really got no clue about how to get started. Has anyone got some words of 
> > wisdom to put me on the right track?
> 
> I've done this using publisher: it's certainly the easiest way.
> 
> Given a form along the lines of:
> 
> <form action="process.py/doit" method="POST" enctype="multipart/form-data">
> <b>Filename</b>: <input type="file" name="file">
> </form>
> 
> And a form handler "doit" in process.py:
> 
> def doit(req, file):
>     # ...
> 
> The 'file' argument is a file object representing the uploaded file:
> you can read from this as you would any other file.
> 
> You should check to make sure that the file has a non-zero length:
> 
> import os, stat
> statinfo = os.fstat(file.fileno())
> if statinfo[stat.ST_SIZE] > 0:
>     # process the text
> else:
>     # it's an empty file, or it didn't exist!
> 
> You should also look at the content type of the uploaded file. You can
> access this via the form table in the request record:
> 
> _file = req.form['file']
> if _file.type == "text/plain":
>     # process plain text
> 
> That should be enough to get you started, I expect.
> 
>     -tree
> 
> -- 
> Tom Emerson                                          Basis Technology Corp.
> Sr. Computational Linguist                         http://www.basistech.com
>   "Beware the lollipop of mediocrity: lick it once and you suck forever"
> 

-- 
Chris Hilton                                 chilton-at-vindaloo-dot-com
------------------------------------------------------------------------
                "All I was doing was trying to get home from work!"
                                                 -- Rosa Parks

From msdemlei at cl.uni-heidelberg.de  Wed Apr 17 10:33:51 2002
From: msdemlei at cl.uni-heidelberg.de (Markus Demleitner)
Date: Fri Jan  9 21:59:19 2004
Subject: [mod_python] Simulating non parsed header scripts
Message-ID: <20020417083351.GA28501@tucana.cl.uni-heidelberg.de>

Hi,

The FAQ states that a redirection should be done this way:

 req.headers_out['location'] = 'http://www.modpython.org/'  
     req.status = apache.HTTP_MOVED_TEMPORARILY
     req.send_http_header()
     return apache.OK

Unfortunately, I couldn't find status in the docs, and so
I'm a bit uncertain what else I can do with status.
Basically, I want to port an nph-script, so is it ok
to set status to whatever I want in the server's response 
line (500, 302, 200, whatever) and then return apache.OK?

Also, my classes generate "`raw"' http result codes (instead
of symbolic names from the apache module).  I like it this
way, because I can use them with or without mod_python.  Is
there any danger in assigning those to req.status?

Minor gripes: The link to the complete mailing list archive
is dead, and in the docs for 5.1.9 PythonHandler, a % in the
TeX source is missing a backslash.

Cheers,

        Markus

From Nik.Barron at pennantplc.co.uk  Wed Apr 17 09:47:24 2002
From: Nik.Barron at pennantplc.co.uk (Nik Barron)
Date: Fri Jan  9 21:59:19 2004
Subject: [mod_python] Simulating non parsed header scripts
Message-ID: <F17550784FF9D111B7F100E02921B24741E862@NT-SOTON-001>

> Also, my classes generate "`raw"' http result codes (instead
> of symbolic names from the apache module).  I like it this
> way, because I can use them with or without mod_python.  Is
> there any danger in assigning those to req.status?

This should be OK, as the HTTP_xxx constants are all defined in apache.py
(line 623 onwards). The usual caveats about future compatibility etc apply I
guess.

Nik (mod_python newbie, so handle advice with care ;)

From grisha at modpython.org  Wed Apr 17 09:18:11 2002
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 21:59:19 2004
Subject: [mod_python] Simulating non parsed header scripts
In-Reply-To: <20020417083351.GA28501@tucana.cl.uni-heidelberg.de>
Message-ID: <Pine.BSF.4.32.0204170914400.41336-100000@localhost>

On Wed, 17 Apr 2002, Markus Demleitner wrote:

> Hi,
>
> The FAQ states that a redirection should be done this way:
>
>  req.headers_out['location'] = 'http://www.modpython.org/'
>      req.status = apache.HTTP_MOVED_TEMPORARILY
>      req.send_http_header()
>      return apache.OK
>
> Unfortunately, I couldn't find status in the docs, and so
> I'm a bit uncertain what else I can do with status.
> Basically, I want to port an nph-script, so is it ok
> to set status to whatever I want in the server's response
> line (500, 302, 200, whatever) and then return apache.OK?

Yes, if I remember it correctly, setting status to whatever, then
returning OK will work. You will probably need req.send_http_header() as
well, because I think that that is what actually sends the status line
out.


> Also, my classes generate "`raw"' http result codes (instead
> of symbolic names from the apache module).  I like it this
> way, because I can use them with or without mod_python.  Is
> there any danger in assigning those to req.status?

The constants are just integers. I like using them because they are more
descriptive than 302.

> Minor gripes: The link to the complete mailing list archive
> is dead, and in the docs for 5.1.9 PythonHandler, a % in the
> TeX source is missing a backslash.

Can you e-mail me off-list where specifically it is?

Grisha


From msdemlei at cl.uni-heidelberg.de  Wed Apr 17 20:55:12 2002
From: msdemlei at cl.uni-heidelberg.de (Markus Demleitner)
Date: Fri Jan  9 21:59:19 2004
Subject: [mod_python] .value in FieldStorage
Message-ID: <20020417185512.GB957@tucana.cl.uni-heidelberg.de>

Hi,

I'm again working on my project of migrating from CGI to mod_python.
This time, it's FieldStorage.  For some reason, FieldStorage.__getitem__
may return strings instead of fields.  When you want to keep your
classes compatible with cgi's FieldStorage, that's of course a
major showstopper, since every access to the value attribute
raises an exception.

As an emergency patch (I needed to get this done, since some
gadget of mine was causing excessive server loads when it
didn't need to), I added

import UserString

class StringWithValue(UserString.UserString):
  def __init__(self, val):
    UserString.UserString.__init__(self, val)
    self.value = val

at the top of util.py and changed then end of FieldStorage's
__getitem__ to
        if len(found) == 1:
          if isinstance(found[0], Field):
            return found[0]
          else:
            return StringWithValue(found[0])
        else:
          return found


This is of course super-ugly and will break when someone updates
mod_python.

Is FieldStorage's behaviour again due to my stupidity?  If not,
are there any plans to change it so it always returns Fields?

Cheers,

       Markus

From grisha at modpython.org  Wed Apr 17 16:39:35 2002
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 21:59:19 2004
Subject: [mod_python] .value in FieldStorage
In-Reply-To: <20020417185512.GB957@tucana.cl.uni-heidelberg.de>
Message-ID: <Pine.BSF.4.32.0204171635520.45255-100000@localhost>

Markus -

The rationale is that not everyone using mod_python is migrating from CGI.
For those of us who are writing mod_python handlers from scratch having to
use .value all over the place seemed like an annoyance.

Rather than patching mod_python code, I suggest either subclassing
FieldStorage, or using cgi.FieldStorage.

Grisha

On Wed, 17 Apr 2002, Markus Demleitner wrote:

> Hi,
>
> I'm again working on my project of migrating from CGI to mod_python.
> This time, it's FieldStorage.  For some reason, FieldStorage.__getitem__
> may return strings instead of fields.  When you want to keep your
> classes compatible with cgi's FieldStorage, that's of course a
> major showstopper, since every access to the value attribute
> raises an exception.
>
> As an emergency patch (I needed to get this done, since some
> gadget of mine was causing excessive server loads when it
> didn't need to), I added
>
> import UserString
>
> class StringWithValue(UserString.UserString):
>   def __init__(self, val):
>     UserString.UserString.__init__(self, val)
>     self.value = val
>
> at the top of util.py and changed then end of FieldStorage's
> __getitem__ to
>         if len(found) == 1:
>           if isinstance(found[0], Field):
>             return found[0]
>           else:
>             return StringWithValue(found[0])
>         else:
>           return found
>
>
> This is of course super-ugly and will break when someone updates
> mod_python.
>
> Is FieldStorage's behaviour again due to my stupidity?  If not,
> are there any plans to change it so it always returns Fields?
>
> Cheers,
>
>        Markus
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://www.modpython.org/mailman/listinfo/mod_python
>


From sa at sfsu.edu  Thu Apr 18 15:49:37 2002
From: sa at sfsu.edu (Sean Abrahams)
Date: Fri Jan  9 21:59:19 2004
Subject: [mod_python] import _apache fails
Message-ID: <5192884570.20020418154937@sfsu.edu>

Going through the docs, testing my mod_python install and getting this
message in the apache logs:

File "mptest.py", line 3, in ?
from mod_python import apache
File "/usr/lib/python2.1/site-packages/mod_python/apache.py", line 55, in ?
import _apache
ImportError: No module named _apache

I've looked around and found something in regards to this won't work
from the command line, but as I stated, this is from the apache error
log, generated when calling the script from the web.

Running:
Debian Testing / GNU/Linux 2.2.17
Apache 1.3.9-14 / Mod Python 2.7.6-1

I used apt-get to grab and install modpython.

Thanks,
Sean


From johannes at erdfelt.com  Thu Apr 18 21:30:48 2002
From: johannes at erdfelt.com (Johannes Erdfelt)
Date: Fri Jan  9 21:59:19 2004
Subject: [mod_python] [patch] 2.7.6 null publisher function
Message-ID: <20020418213048.A22717@sventech.com>

I've been playing around with mod_python lately and I like it so far.
The only thing I didn't like is the requirement for a function to be
passed before publisher will run anything.

I'd kind of a purist when it comes to URL's, so I made this patch. If
there is no function passed, it defaults to "handler".

JE

-------------- next part --------------
--- mod_python/publisher.py.orig	Tue Apr 16 20:31:06 2002
+++ mod_python/publisher.py	Tue Apr 16 20:34:45 2002
@@ -80,17 +80,17 @@
     args = {}
 
     # get the path PATH_INFO (everthing after script)
-    if not _req.subprocess_env.has_key("PATH_INFO"):
-        raise apache.SERVER_RETURN, apache.HTTP_NOT_FOUND
-    
-    func_path = _req.subprocess_env["PATH_INFO"][1:] # skip fist /
-    func_path = string.replace(func_path, "/", ".")
-    if func_path[-1] == ".":
-        func_path = func_path[:-1] 
+    if _req.subprocess_env.has_key("PATH_INFO"):
+        func_path = _req.subprocess_env["PATH_INFO"][1:] # skip fist /
+        func_path = string.replace(func_path, "/", ".")
+        if func_path[-1] == ".":
+            func_path = func_path[:-1] 
 
-    # if any part of the path begins with "_", abort
-    if func_path[0] == '_' or string.count(func_path, "._"):
-        raise apache.SERVER_RETURN, apache.HTTP_NOT_FOUND
+        # if any part of the path begins with "_", abort
+        if func_path[0] == '_' or string.count(func_path, "._"):
+            raise apache.SERVER_RETURN, apache.HTTP_NOT_FOUND
+    else:
+        func_path = "handler"
 
     # process input, if any
     fs = util.FieldStorage(req, keep_blank_values=1)
From msdemlei at cl.uni-heidelberg.de  Fri Apr 19 09:26:12 2002
From: msdemlei at cl.uni-heidelberg.de (Markus Demleitner)
Date: Fri Jan  9 21:59:19 2004
Subject: [mod_python] import _apache fails
In-Reply-To: <5192884570.20020418154937@sfsu.edu>
References: <5192884570.20020418154937@sfsu.edu>
Message-ID: <20020419072612.GA2929@tucana.cl.uni-heidelberg.de>

On Thu, Apr 18, 2002 at 03:49:37PM -0700, Sean Abrahams wrote:
> Going through the docs, testing my mod_python install and getting this
> message in the apache logs:
> 
> File "mptest.py", line 3, in ?
> from mod_python import apache
> File "/usr/lib/python2.1/site-packages/mod_python/apache.py", line 55, in ?
> import _apache
> ImportError: No module named _apache
> 
> I've looked around and found something in regards to this won't work
> from the command line, but as I stated, this is from the apache error
> log, generated when calling the script from the web.
> 
> Running:
> Debian Testing / GNU/Linux 2.2.17
> Apache 1.3.9-14 / Mod Python 2.7.6-1
> 
> I used apt-get to grab and install modpython.

Chanches are your mptest.py is not executed as a handler but as a
CGI -- check your httpd.conf and make sure there's something like
  AddHandler python-program .py
	PythonHandler unimut_modpython
in there and that the directives are active for whatever directory
your mptest.py is in.

    Markus

From johnny.morano at vlaanderen.be  Fri Apr 19 10:39:03 2002
From: johnny.morano at vlaanderen.be (Johnny Morano)
Date: Fri Jan  9 21:59:19 2004
Subject: [mod_python] newbie question regarding postgresql
Message-ID: <200204190934.g3J9Y5Y19977@s001032.vlaanderen.be>

hey all,

I'm trying to make a python script for database connection, but it doesn't 
seem to work in mod_python, although it runs fine on the command line.
Can anyone see my big mistake?

--begin-code---
from mod_python import apache
import pgdb

def s(req):
        nHost='localhost'
        nDbname='netdoc'
        readUser='nd_read'

        con = pgdb.connect(dsn=nHost+':'+nDbname, user=readUser)
        curs = con.cursor()
        curs.execute(""" SELECT relname as tablename
                         , pg_get_userbyid(relowner) AS tableowner
                         , relhasindex as hasindexes
                         , relhasrules as hasrules
                         , reltriggers as hastriggers
                         , pg_class.oid
                         , description as table_description
                         , relacl
                      FROM pg_class
                      LEFT OUTER JOIN pg_description on (   pg_class.oid = 
pg_description.objoid
                                                      AND 
pg_description.objsubid = 0)
                     WHERE (  relkind = 'r'::"char"
                           OR relkind = 's'::"char"
                           )
                       AND relname NOT LIKE 'pg_%' """)
        rows = curs.fetchall()
        x = "the table names: \n"
        for row in rows:
                x += "\t" + row[0] + "\n"
        return x
---end-code---

thanx !
-- 
Johnny Morano - Linux Consultant
___________________________________________________ 
 Ministerie Vlaamse Gemeenschap                    |
 Koning Albert II-laan, 7 (610) 1210 Brussel       |
 tel: 02/5531319 mail: johnny.morano@vlaanderen.be |

From sandor.kopanyi at mailbox.hu  Fri Apr 19 10:53:40 2002
From: sandor.kopanyi at mailbox.hu (sandor.kopanyi@mailbox.hu)
Date: Fri Jan  9 21:59:19 2004
Subject: [mod_python] newbie question regarding postgresql
In-Reply-To: <200204190934.g3J9Y5Y19977@s001032.vlaanderen.be>
Message-ID: <20020419085340.14294.qmail@web2.mailbox.hu>

Try to put backslashes inside the SQL-string, like this (see
end of each line):

>         curs.execute(""" SELECT relname as tablename 
>                          , pg_get_userbyid(relowner) AS tableowner 
>                          , relhasindex as hasindexes 
etc.

--------------------------------------------------
http://www.mailbox.hu - Mert levelezni kell...


From johnny.morano at vlaanderen.be  Fri Apr 19 11:17:46 2002
From: johnny.morano at vlaanderen.be (Johnny Morano)
Date: Fri Jan  9 21:59:19 2004
Subject: [mod_python] newbie question regarding postgresql
In-Reply-To: <20020419085340.14294.qmail@web2.mailbox.hu>
References: <20020419085340.14294.qmail@web2.mailbox.hu>
Message-ID: <200204191012.g3JACmY24851@s001032.vlaanderen.be>

so mean like this?:

curs.execute(""" SELECT relname as tablename \
                          , pg_get_userbyid(relowner) AS tableowner \
                          , relhasindex as hasindexes \
                          , relhasrules as hasrules \
                          , reltriggers as hastriggers \

doesn't work either. my web server gives me an internal error and the error 
message is that Dispatch doesn't return anything


On Friday 19 April 2002 10:53, you wrote:
> Try to put backslashes inside the SQL-string, like this (see
>
> end of each line):
> >         curs.execute(""" SELECT relname as tablename
> >                          , pg_get_userbyid(relowner) AS tableowner
> >                          , relhasindex as hasindexes
>
> etc.
>
> --------------------------------------------------
> http://www.mailbox.hu - Mert levelezni kell...
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://www.modpython.org/mailman/listinfo/mod_python

-- 
Johnny Morano - Linux Consultant
___________________________________________________ 
 Ministerie Vlaamse Gemeenschap                    |
 Koning Albert II-laan, 7 (610) 1210 Brussel       |
 tel: 02/5531319 mail: johnny.morano@vlaanderen.be |

From johnny.morano at vlaanderen.be  Fri Apr 19 12:46:48 2002
From: johnny.morano at vlaanderen.be (Johnny Morano)
Date: Fri Jan  9 21:59:19 2004
Subject: [mod_python] newbie question regarding postgresql
Message-ID: <200204191141.g3JBfoY03098@s001032.vlaanderen.be>

On Friday 19 April 2002 12:13, you wrote:
> >         for row in rows:
> >                 x += "\t" + row[0] + "\n"
> >         return x
>
> An Apache handler doesn't return a string -- it returns a status code.  The
> string should be written to the req object after sending the proper
> headers. Check the documentation for more.

well actually, that's not true. i have other scripts (mailscripts) which
handle this perfectly.
but, changing the end of my code into:

for row in rows:
                x += "\t" + row[0] + "\n"
        x += "</p></body></html>"
        req.write(x)
        return apache.OK

doesn't change a thing...

johnny
-- 
Johnny Morano - Linux Consultant
___________________________________________________ 
 Ministerie Vlaamse Gemeenschap                    |
 Koning Albert II-laan, 7 (610) 1210 Brussel       |
 tel: 02/5531319 mail: johnny.morano@vlaanderen.be |

From johnny.morano at vlaanderen.be  Fri Apr 19 14:43:24 2002
From: johnny.morano at vlaanderen.be (Johnny Morano)
Date: Fri Jan  9 21:59:19 2004
Subject: [mod_python] newbie question regarding postgresql
In-Reply-To: <3B5AE7F3-5392-11D6-B58C-0003938210D6@redivi.com>
References: <3B5AE7F3-5392-11D6-B58C-0003938210D6@redivi.com>
Message-ID: <200204191338.g3JDcQY13870@s001032.vlaanderen.be>

thanx for the reply(s/y/ies/)!
but the problem is something redhat-ish... the same code works perfect on 
debian, but refuses to run on redhat... libraries, dependencies, way too much 
policies ;-)



On Friday 19 April 2002 14:37, you wrote:
> My best guess as to why PostgreSQL isn't working from your web server is
> that you haven't given the webserver credentials to use the database.
> Create a user with the same name as the user that apache runs as
> (nobody, www, www-data) and then try it.
>
> This isn't an answer to your problem.. but Python has a feature such
> that if you do this:
>
> (""" my really really """
>   """ long string that gets split up """"
>   """ over a bunch of lines """
>   """ ............"""")
>
> then it turns out as one string with no \n's, without the runtime cost
> of using +=.  This is because python just concatenates adjacent strings
> if they aren't separated by anything.. i.e. ("""blah""" 'blah' "blah")
> is 'blahblahblah'.
>
> -bob
>
> On Friday, April 19, 2002, at 05:17 AM, Johnny Morano wrote:
> > so mean like this?:
> >
> > curs.execute(""" SELECT relname as tablename \
> >                           , pg_get_userbyid(relowner) AS tableowner \
> >                           , relhasindex as hasindexes \
> >                           , relhasrules as hasrules \
> >                           , reltriggers as hastriggers \
> >
> > doesn't work either. my web server gives me an internal error and the
> > error
> > message is that Dispatch doesn't return anything
> >
> > On Friday 19 April 2002 10:53, you wrote:
> >> Try to put backslashes inside the SQL-string, like this (see
> >>
> >> end of each line):
> >>>         curs.execute(""" SELECT relname as tablename
> >>>                          , pg_get_userbyid(relowner) AS tableowner
> >>>                          , relhasindex as hasindexes
> >>
> >> etc.
> >>
> >> --------------------------------------------------
> >> http://www.mailbox.hu - Mert levelezni kell...
> >>
> >> _______________________________________________
> >> Mod_python mailing list
> >> Mod_python@modpython.org
> >> http://www.modpython.org/mailman/listinfo/mod_python
> >
> > --
> > Johnny Morano - Linux Consultant
> > ___________________________________________________
> >  Ministerie Vlaamse Gemeenschap                    |
> >  Koning Albert II-laan, 7 (610) 1210 Brussel       |
> >  tel: 02/5531319 mail: johnny.morano@vlaanderen.be |
> > _______________________________________________
> > Mod_python mailing list
> > Mod_python@modpython.org
> > http://www.modpython.org/mailman/listinfo/mod_python

-- 
Johnny Morano - Linux Consultant
___________________________________________________ 
 Ministerie Vlaamse Gemeenschap                    |
 Koning Albert II-laan, 7 (610) 1210 Brussel       |
 tel: 02/5531319 mail: johnny.morano@vlaanderen.be |

From jquinte at fadu.uba.ar  Fri Apr 19 11:30:37 2002
From: jquinte at fadu.uba.ar (Javier Quinteros)
Date: Fri Jan  9 21:59:19 2004
Subject: [mod_python] Now you see it, now you don't...
Message-ID: <200204190834.LAA19242@www.fadu.uba.ar>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

Hi, all !!!
I don't know if this have been posted yet.
I call a function named "RealAlumno" in a script "alumno.py" by 
clicking a link in my browser. Everything works fine and returns me a new 
page with links that points to the same function in the same script. The 
matter is that I can keep clicking a couple of times, but after that, Apache 
starts telling me that there's no existing function like that. There's no 
broken link because sometimes I can press the Back button and try again and 
it works. But, the most of the time, I have to restart Apache to keep working.

Does any of you know what's going on???

I'm working with Apache 1.3.22, Python 1.5.2 and ModPython 2.7.7.

Bye,

- -- 
- ---------------------------------
Javier Quinteros
jquinte@fadu.uba.ar
Secretar?a de Planificaci?n
Universidad de Buenos Aires
- ---------------------------------
Existe un solo lugar donde el Norte y el Sur del mundo se enfrentan en
igualdad de condiciones: es una cancha de f?tbol de Brasil, en la 
desembocadura
del r?o Amazonas. La l?nea del ecuador corta por la mitad el estadio Zerao, en
Amap?, de modo que cada equipo juega un tiempo en el sur y otro tiempo en el
norte.
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.0.6 (GNU/Linux)
Comment: For info see http://www.gnupg.org

iD8DBQE8wCoTdBzRnlFl4cgRAhhBAKCBcxAQhlZzzP2ZxHw7VWSg1SzjAACguzIx
i0Y2PxX4XKNn2y/FtpTPfio=
=D6eC
-----END PGP SIGNATURE-----

From grisha at modpython.org  Fri Apr 19 11:10:43 2002
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 21:59:20 2004
Subject: [mod_python] Now you see it, now you don't...
In-Reply-To: <200204190834.LAA19242@www.fadu.uba.ar>
Message-ID: <Pine.BSF.4.32.0204191109530.73892-100000@localhost>

There is a bug in 2.7.7 which I'll try to fix today and release 2.7.8.

On Fri, 19 Apr 2002, Javier Quinteros wrote:

> -----BEGIN PGP SIGNED MESSAGE-----
> Hash: SHA1
>
> Hi, all !!!
> I don't know if this have been posted yet.
> I call a function named "RealAlumno" in a script "alumno.py" by
> clicking a link in my browser. Everything works fine and returns me a new
> page with links that points to the same function in the same script. The
> matter is that I can keep clicking a couple of times, but after that, Apache
> starts telling me that there's no existing function like that. There's no
> broken link because sometimes I can press the Back button and try again and
> it works. But, the most of the time, I have to restart Apache to keep working.
>
> Does any of you know what's going on???
>
> I'm working with Apache 1.3.22, Python 1.5.2 and ModPython 2.7.7.
>
> Bye,
>
> - --
> - ---------------------------------
> Javier Quinteros
> jquinte@fadu.uba.ar
> Secretar?a de Planificaci?n
> Universidad de Buenos Aires
> - ---------------------------------
> Existe un solo lugar donde el Norte y el Sur del mundo se enfrentan en
> igualdad de condiciones: es una cancha de f?tbol de Brasil, en la
> desembocadura
> del r?o Amazonas. La l?nea del ecuador corta por la mitad el estadio Zerao, en
> Amap?, de modo que cada equipo juega un tiempo en el sur y otro tiempo en el
> norte.
> -----BEGIN PGP SIGNATURE-----
> Version: GnuPG v1.0.6 (GNU/Linux)
> Comment: For info see http://www.gnupg.org
>
> iD8DBQE8wCoTdBzRnlFl4cgRAhhBAKCBcxAQhlZzzP2ZxHw7VWSg1SzjAACguzIx
> i0Y2PxX4XKNn2y/FtpTPfio=
> =D6eC
> -----END PGP SIGNATURE-----
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://www.modpython.org/mailman/listinfo/mod_python
>


From grisha at ispol.com  Fri Apr 19 14:42:58 2002
From: grisha at ispol.com (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 21:59:20 2004
Subject: [mod_python] 2.7.8
Message-ID: <Pine.BSF.4.32.0204191441370.76579-100000@localhost>

Version 2.7.8 is out there. It addresses the 404 issue that was introduced
in 2.7.7 as a side effect of fixing the security flaw in the publisher.

Grisha


From reitz at inworks.de  Sun Apr 21 04:21:05 2002
From: reitz at inworks.de (Andre Reitz)
Date: Fri Jan  9 21:59:20 2004
Subject: [mod_python] 2.7.8
In-Reply-To: <Pine.BSF.4.32.0204191441370.76579-100000@localhost>
References: <Pine.BSF.4.32.0204191441370.76579-100000@localhost>
Message-ID: <20020421042105.4d12d745.reitz@inworks.de>

On Fri, 19 Apr 2002 14:42:58 -0400 (EDT)
"Gregory (Grisha) Trubetskoy" <grisha@ispol.com> wrote:

> 
> Version 2.7.8 is out there. It addresses the 404 issue that was introduced
> in 2.7.7 as a side effect of fixing the security flaw in the publisher.
> 

Hy,

You forgot again to Fix the following Bug,
This is a Very Big BOBO!!!!!:


def setup_cgi(req):
    """
    Replace sys.stdin and stdout with an objects that read/write to
    the socket, as well as substitute the os.environ.
    Returns (environ, stdin, stdout) which you must save and then use
    with restore_nocgi().
    """

    # save env
#    env = os.environ.copy()
    originalenv = os.environ.copy()   <<<<<<<<<<<<<=====
    
    si = sys.stdin
    so = sys.stdout

    env = build_cgi_env(req)
 
    for k in env.keys():
        os.environ[k] = env[k]

    sys.stdout = CGIStdout(req)
    sys.stdin = CGIStdin(req)

    sys.argv = [] # keeps cgi.py happy

#    return env, si, so
    return originalenv, si, so <<<<<<<<======
        



Will You release Version 2.7.9 TOMORROW?????
:)

Greetings, Andre'



> Grisha
> 
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://www.modpython.org/mailman/listinfo/mod_python


-- 
_____________________________________________
inworks GmbH            Andre Reitz		
Magirusstrasse 44	Tel. 0731/93 80 7-21
89077 Ulm		http://www.inworks.de


From s13361562 at bach.sun.ac.za  Sun Apr 21 17:31:29 2002
From: s13361562 at bach.sun.ac.za (Hugo van der Merwe)
Date: Fri Jan  9 21:59:20 2004
Subject: [mod_python] taking over the main "index" page with mod_python?
Message-ID: <20020421153129.GA15290@vervet.localnet>

Hello,

I want to have the page returned by

http://my.web.site/

also be served by the mod_python publisher, e.g. I want it to load the
same thing as /show.py/norm - what is the simplest way to do this?
Something with DirectoryIndex? Or maybe with a normal mod_python handler
and a small python "wrapper"?

I hope this hasn't been asked too many times before. I could not find 
anything in the documentation included in the Debian 
libapache-mod-python package, version 2:2.7.6-1, and that does include 
the Mod_python manual for 2.7.6.

About updating to the newer mod_python for the security exploits: I have
sent an email asking for an update of the Debian package, and will
follow up on the issue.

Thanks,
Hugo van der Merwe

From bob at redivi.com  Sun Apr 21 12:05:57 2002
From: bob at redivi.com (Bob Ippolito)
Date: Fri Jan  9 21:59:20 2004
Subject: [mod_python] taking over the main "index" page with mod_python?
In-Reply-To: <20020421153129.GA15290@vervet.localnet>
Message-ID: <AA5F0186-5541-11D6-A4BB-0003938210D6@redivi.com>

There's always mod_rewrite.

On Sunday, April 21, 2002, at 11:31 AM, Hugo van der Merwe wrote:

> Hello,
>
> I want to have the page returned by
>
> http://my.web.site/
>
> also be served by the mod_python publisher, e.g. I want it to load the
> same thing as /show.py/norm - what is the simplest way to do this?
> Something with DirectoryIndex? Or maybe with a normal mod_python handler
> and a small python "wrapper"?
>
> I hope this hasn't been asked too many times before. I could not find
> anything in the documentation included in the Debian
> libapache-mod-python package, version 2:2.7.6-1, and that does include
> the Mod_python manual for 2.7.6.
>
> About updating to the newer mod_python for the security exploits: I have
> sent an email asking for an update of the Debian package, and will
> follow up on the issue.
>
> Thanks,
> Hugo van der Merwe
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://www.modpython.org/mailman/listinfo/mod_python


From tree at basistech.com  Sun Apr 21 16:42:14 2002
From: tree at basistech.com (Tom Emerson)
Date: Fri Jan  9 21:59:20 2004
Subject: [mod_python] taking over the main "index" page with mod_python?
In-Reply-To: <20020421153129.GA15290@vervet.localnet>
References: <20020421153129.GA15290@vervet.localnet>
Message-ID: <15555.9254.679995.356595@magrathea.basistech.com>

Hugo van der Merwe writes:
> Hello,
> 
> I want to have the page returned by
> 
> http://my.web.site/
> 
> also be served by the mod_python publisher, e.g. I want it to load the
> same thing as /show.py/norm - what is the simplest way to do this?
> Something with DirectoryIndex? Or maybe with a normal mod_python handler
> and a small python "wrapper"?

DirectoryIndex in the .htaccess file works perfectly.

    -tree

-- 
Tom Emerson                                          Basis Technology Corp.
Sr. Computational Linguist                         http://www.basistech.com
  "Beware the lollipop of mediocrity: lick it once and you suck forever"

From grisha at modpython.org  Sun Apr 21 20:47:14 2002
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 21:59:20 2004
Subject: [mod_python] taking over the main "index" page with mod_python?
In-Reply-To: <15555.9254.679995.356595@magrathea.basistech.com>
Message-ID: <Pine.BSF.4.32.0204212046380.9310-100000@localhost>

Or how about just SetHandler in the DocumentRoot directory.

Grisha

On Sun, 21 Apr 2002, Tom Emerson wrote:

> Hugo van der Merwe writes:
> > Hello,
> >
> > I want to have the page returned by
> >
> > http://my.web.site/
> >
> > also be served by the mod_python publisher, e.g. I want it to load the
> > same thing as /show.py/norm - what is the simplest way to do this?
> > Something with DirectoryIndex? Or maybe with a normal mod_python handler
> > and a small python "wrapper"?
>
> DirectoryIndex in the .htaccess file works perfectly.
>
>     -tree
>
> --
> Tom Emerson                                          Basis Technology Corp.
> Sr. Computational Linguist                         http://www.basistech.com
>   "Beware the lollipop of mediocrity: lick it once and you suck forever"
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://www.modpython.org/mailman/listinfo/mod_python
>


From thanos at 0x01.com  Mon Apr 22 11:26:14 2002
From: thanos at 0x01.com (thanos@0x01.com)
Date: Fri Jan  9 21:59:20 2004
Subject: [mod_python] Easy mod_python Session Handling with pso
Message-ID: <20020422152614.19811.qmail@0x01.com>

"@0x01.com
X-Mailer: ELM [version 2.5 PL5]
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Transfer-Encoding: 7bit

How-To: Easy mod_python Session Handling with pso           

Shows how to add easy session handling in mod_python with Python Service
Objects.

This document shows you how to use pso.session to add easy session
handling to a mod_python request handler. Python Service Objects is a
open source internet service development system. Its session module is
ideal for use with mod_python, and in fact included in this package is
ModPythonRequest which is the mod_python implementation bridge. The pso
system allows you to develop platform and server independent request
handlers.


URL:  http://www.scriptfoundry.com/modules/pso/doc/session-modpython.html

From cmeyer at carleton.edu  Mon Apr 22 11:34:26 2002
From: cmeyer at carleton.edu (Chris Meyer)
Date: Fri Jan  9 21:59:20 2004
Subject: [mod_python] Mod_python & apache on Solaris 8 compile problems
Message-ID: <3CC43B92.9040605@carleton.edu>

Greetings all,

I've been trying to build mod_python 2.7.5 into apache 1.3.23 on a 
Solaris 8 system for several days now, and whenever I issue "make" to 
apache after a "./configure 
--activate-module=src/modules/python/libpython.a" I keep on getting the 
same compile errors:

.
.
.
<=== src/modules
gcc -c  -I./os/unix -I./include   -DSOLARIS2=280 -DUSE_EXPAT 
-I./lib/expat-lite -DNO_DL_NEEDED `./apaci` modules.c
gcc -c  -I./os/unix -I./include   -DSOLARIS2=280 -DUSE_EXPAT 
-I./lib/expat-lite -DNO_DL_NEEDED `./apaci` buildmark.c
gcc  -DSOLARIS2=280 -DUSE_EXPAT -I./lib/expat-lite -DNO_DL_NEEDED 
`./apaci`    \
       -o httpd buildmark.o modules.o  modules/python/libpython.a 
modules/standard/libstandard.a  main/libmain.a  ./os/unix/libos.a 
ap/libap.a  lib/expat-lite\
libexpat.a  -lsocket -lnsl
Undefined                       first referenced
  symbol                             in file
PySequence_Index                    modules/python/libpython.a(mod_python.o)
Py_InitModule4 
modules/python/libpython.a(_apachemodule.o)
PyString_FromStringAndSize 
modules/python/libpython.a(_apachemodule.o)
PyExc_TypeError 
modules/python/libpython.a(tableobject.o)
.
.   about fifty or so undefined symbols later
.
Py_Initialize                       modules/python/libpython.a(mod_python.o)
PyErr_SetObject 
modules/python/libpython.a(requestobject.o)
PyString_Type 
modules/python/libpython.a(tableobject.o)
ld: fatal: Symbol referencing errors. No output written to httpd
collect2: ld returned 1 exit status
*** Error code 1
make: Fatal error: Command failed for target `target_static'
Current working directory /home/root/apache_1.3.23/src
*** Error code 1
make: Fatal error: Command failed for target `build-std'
Current working directory /home/root/apache_1.3.23
*** Error code 1
make: Fatal error: Command failed for target `build'
#

Is there anybody who's encountered this before, or can tell me what a 
fix might be? On a slightly related note, I got something similar when I 
tried compiling mod_perl (1.26) as well (without mod_python), but only 
when I issued the command manually from the apache directory--when I 
told the mod_perl configure script to build httpd for me, it went just 
fine. That says to me that it might be something with the way I have my 
system (a 64-bit Netra X1) set up, but I'll be darned if I can find out 
what's misconfigured.

Any help anyone can give would be greatly appreciated.

	-Chris Meyer


From sobral at sj.univali.br  Mon Apr 22 14:27:35 2002
From: sobral at sj.univali.br (Marcelo M. Sobral)
Date: Fri Jan  9 21:59:20 2004
Subject: [mod_python] Mod_python & apache on Solaris 8 compile problems
In-Reply-To: <3CC43B92.9040605@carleton.edu>
Message-ID: <Pine.LNX.4.33.0204221425350.9747-100000@so.sj.univali.br>

On Mon, 22 Apr 2002, Chris Meyer wrote:

> I've been trying to build mod_python 2.7.5 into apache 1.3.23 on a 
> Solaris 8 system for several days now, and whenever I issue "make" to 
> apache after a "./configure 
> --activate-module=src/modules/python/libpython.a" I keep on getting the 
> same compile errors:
> 
> .
> .
> .
> <=== src/modules
> gcc -c  -I./os/unix -I./include   -DSOLARIS2=280 -DUSE_EXPAT 
> -I./lib/expat-lite -DNO_DL_NEEDED `./apaci` modules.c
> gcc -c  -I./os/unix -I./include   -DSOLARIS2=280 -DUSE_EXPAT 
> -I./lib/expat-lite -DNO_DL_NEEDED `./apaci` buildmark.c
> gcc  -DSOLARIS2=280 -DUSE_EXPAT -I./lib/expat-lite -DNO_DL_NEEDED 
> `./apaci`    \
>        -o httpd buildmark.o modules.o  modules/python/libpython.a 
> modules/standard/libstandard.a  main/libmain.a  ./os/unix/libos.a 
> ap/libap.a  lib/expat-lite\
> libexpat.a  -lsocket -lnsl
> Undefined                       first referenced
>   symbol                             in file
> PySequence_Index                    modules/python/libpython.a(mod_python.o)
> Py_InitModule4 
> modules/python/libpython.a(_apachemodule.o)
> PyString_FromStringAndSize 
> modules/python/libpython.a(_apachemodule.o)
> PyExc_TypeError 
> modules/python/libpython.a(tableobject.o)
> .
> .   about fifty or so undefined symbols later

   Hi.

   Your libpython.a was compiled without PIC (position independent code). 
Try to recompile it with option -fpic passed to gcc (libpython.a is in the 
Python source code).

   Good luck.

  -----------------------------
  Prof. Marcelo Maia Sobral
  Administrador de Redes
  Nucleo de Informatica
  Univali - Campus S?o Jos?
  Fone: (0xx48) 281-1595
  -----------------------------


-----BEGIN PGP PUBLIC KEY BLOCK-----
Version: GnuPG v1.0.6 (GNU/Linux)
Comment: For info see http://www.gnupg.org

mQGiBDwiFZQRBACpWV7f+1b1H2Efm9WHM5LnQxQcXEBz/SHff9B909IL5kl5zAL1
F4+mABr4g25wUGKb2SLk6/zb7EPpgI6IrfG7gKqv4PRn8KRkGANSdSouiyqKd8qa
JPIwR7i5cCV1hz2p4T7An5307HiJj/BiAXtDtPnD9JKf3gx4upOqbyyyYwCg8gFr
AdI1OK++OvBcyCebHM4ojoUEAJedtyxaL/A3rnQ1Ni2DiX60I3mbCx2eWUgm506S
RCkwuMzIB2tEMGQg3acqZvTk/7i6ek01Hkk7d8UCZjubKnj8kN23ew5k5/PbFMbF
+02tvYy91240MBmTswgW/QTjpU6dRdhtOwOLuuNKUPOII1TtdqQUg+/sWnyfLyrC
5XSGA/wPJAVIEFbvwQUb/XPr9hi+flNjsgEvv6cZDs4b83YwtdXuY4OZH7EyeQ4p
+aBlkjNJIdqKB6gw7sv5hdAlX+zKgIukw2jDa63PZl3TiIx1y06p5lDWpqbbhVIG
ky1cWRif6vo0p2bPeuwcaNleiZiL1hvR79wLw3EYsMB3tbDAJLRPTWFyY2VsbyBN
YWlhIFNvYnJhbCAoQWRtaW5pc3RyYWRvciBkZSByZWRlIC0gVW5pdmFsaS1TSikg
PHNvYnJhbEBzai51bml2YWxpLmJyPohdBBMRAgAdBQI8IhWUBQkA7U4ABQsHCgME
AxUDAgMWAgECF4AACgkQ6vNSIUi7iuxQPgCgjRxk9vyJVt94CjySkZKcDj7jyB4A
niVhSkObCMg4iZMSTvD9HZRKAtu6uQENBDwiFZwQBADZEKBHT1MmO8miFB9/V34V
xjzSXn3P3vusbgS/4v7Ydf4Lrcfah8qLx/GEf0Cl7PAL8tSEZkl5+fgzIckKLDA4
E61A31xjxi/MVmySqkPrqzI8AmfT/ukSTgFYEpf/hOmBu7c7JH8BT5evZ3wCFRCH
aZf/XnNnOLQrmRqrlaM6CwADBQP8CiTjtSxcbVU5vECsy/pnAjag7EdeLdBzjM17
B0kDDBMYa3VFi6dAkhA1eCe+M7QQBHAzM1xCXLT1ZepteZiqwpb+dSq++0XKLUea
uJclWUn8DbwMWGKTdI4weGGr9Bcaq8EZpzzo2uDDbIh3kKGtFntVEFGvg4HorWNM
vLOVCwOITAQYEQIADAUCPCIVnAUJAO1OAAAKCRDq81IhSLuK7HNxAJ9UxQo0vu/O
NEEsJhrHJoDgpdc2PwCg1c9acqzo9jCig+Y9xWpgJyQpOZQ=
=99B8
-----END PGP PUBLIC KEY BLOCK-----


From jquinte at fadu.uba.ar  Mon Apr 22 19:57:39 2002
From: jquinte at fadu.uba.ar (Javier Quinteros)
Date: Fri Jan  9 21:59:20 2004
Subject: [mod_python] Global variable...
Message-ID: <200204221702.UAA10145@www.fadu.uba.ar>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

Hi, all !!!
What should I do if I want a variable to live for ever? I mean, I don't want 
to redefine the variable every time I import a module (where I use it) or 
click a link.

Thanks in advance,

- -- 
- ---------------------------------
Javier Quinteros
jquinte@fadu.uba.ar
Secretar?a de Planificaci?n
Universidad de Buenos Aires
- ---------------------------------
Existe un solo lugar donde el Norte y el Sur del mundo se enfrentan en
igualdad de condiciones: es una cancha de f?tbol de Brasil, en la 
desembocadura
del r?o Amazonas. La l?nea del ecuador corta por la mitad el estadio Zerao, en
Amap?, de modo que cada equipo juega un tiempo en el sur y otro tiempo en el
norte.
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.0.6 (GNU/Linux)
Comment: For info see http://www.gnupg.org

iD8DBQE8xJVjdBzRnlFl4cgRAnciAKDKJMp6VOYGiU9GpDc5Kk4SlYQ1LACfe77t
+3d1demwTU+dy0NnIpPWQlc=
=lZog
-----END PGP SIGNATURE-----

From sobral at sj.univali.br  Mon Apr 22 21:33:33 2002
From: sobral at sj.univali.br (Marcelo M. Sobral)
Date: Fri Jan  9 21:59:20 2004
Subject: [mod_python] Global variable...
In-Reply-To: <200204221702.UAA10145@www.fadu.uba.ar>
Message-ID: <Pine.GSO.4.05.10204222127210.3738-100000@cucao.sj.univali.br>

On Mon, 22 Apr 2002, Javier Quinteros wrote:

> What should I do if I want a variable to live for ever? I mean, I don't want 
> to redefine the variable every time I import a module (where I use it) or 
> click a link.

   HI.

   You must use shared memory for that. The shmmodule can help you (look
for it on Vault of Parnassus).
   I  have written a trivial class to save and restore objects in the
shared memory. You can download it from:

   http://www.sj.univali.br/~sobral/persist.tgz

   It has been used to implement a cache for logins and passwords, used by
a PythonAuthenHandler. The cache is a dictionary, which lives in the
sahred memory.

   It has some comments to help you to use it.

   Best regards.


  ------------------------
  Prof. Marcelo Maia Sobral
  Administrador de Redes
  Nucleo de Informatica
  Univali - Campus S?o Jos?
  Fone: (0xx48) 281-1595
  -----------------------------


-----BEGIN PGP PUBLIC KEY BLOCK-----
Version: GnuPG v1.0.6 (GNU/Linux)
Comment: For info see http://www.gnupg.org

mQGiBDwiFZQRBACpWV7f+1b1H2Efm9WHM5LnQxQcXEBz/SHff9B909IL5kl5zAL1
F4+mABr4g25wUGKb2SLk6/zb7EPpgI6IrfG7gKqv4PRn8KRkGANSdSouiyqKd8qa
JPIwR7i5cCV1hz2p4T7An5307HiJj/BiAXtDtPnD9JKf3gx4upOqbyyyYwCg8gFr
AdI1OK++OvBcyCebHM4ojoUEAJedtyxaL/A3rnQ1Ni2DiX60I3mbCx2eWUgm506S
RCkwuMzIB2tEMGQg3acqZvTk/7i6ek01Hkk7d8UCZjubKnj8kN23ew5k5/PbFMbF
+02tvYy91240MBmTswgW/QTjpU6dRdhtOwOLuuNKUPOII1TtdqQUg+/sWnyfLyrC
5XSGA/wPJAVIEFbvwQUb/XPr9hi+flNjsgEvv6cZDs4b83YwtdXuY4OZH7EyeQ4p
+aBlkjNJIdqKB6gw7sv5hdAlX+zKgIukw2jDa63PZl3TiIx1y06p5lDWpqbbhVIG
ky1cWRif6vo0p2bPeuwcaNleiZiL1hvR79wLw3EYsMB3tbDAJLRPTWFyY2VsbyBN
YWlhIFNvYnJhbCAoQWRtaW5pc3RyYWRvciBkZSByZWRlIC0gVW5pdmFsaS1TSikg
PHNvYnJhbEBzai51bml2YWxpLmJyPohdBBMRAgAdBQI8IhWUBQkA7U4ABQsHCgME
AxUDAgMWAgECF4AACgkQ6vNSIUi7iuxQPgCgjRxk9vyJVt94CjySkZKcDj7jyB4A
niVhSkObCMg4iZMSTvD9HZRKAtu6uQENBDwiFZwQBADZEKBHT1MmO8miFB9/V34V
xjzSXn3P3vusbgS/4v7Ydf4Lrcfah8qLx/GEf0Cl7PAL8tSEZkl5+fgzIckKLDA4
E61A31xjxi/MVmySqkPrqzI8AmfT/ukSTgFYEpf/hOmBu7c7JH8BT5evZ3wCFRCH
aZf/XnNnOLQrmRqrlaM6CwADBQP8CiTjtSxcbVU5vECsy/pnAjag7EdeLdBzjM17
B0kDDBMYa3VFi6dAkhA1eCe+M7QQBHAzM1xCXLT1ZepteZiqwpb+dSq++0XKLUea
uJclWUn8DbwMWGKTdI4weGGr9Bcaq8EZpzzo2uDDbIh3kKGtFntVEFGvg4HorWNM
vLOVCwOITAQYEQIADAUCPCIVnAUJAO1OAAAKCRDq81IhSLuK7HNxAJ9UxQo0vu/O
NEEsJhrHJoDgpdc2PwCg1c9acqzo9jCig+Y9xWpgJyQpOZQ=
=99B8
-----END PGP PUBLIC KEY BLOCK-----


From gbeasley at tsa.ac.za  Tue Apr 23 08:06:07 2002
From: gbeasley at tsa.ac.za (Grant Beasley)
Date: Fri Jan  9 21:59:20 2004
Subject: [mod_python] Global variable...
In-Reply-To: <Pine.GSO.4.05.10204222127210.3738-100000@cucao.sj.univali.br>
Message-ID: <OOENKCHGJGHILGPAGHGOAEIOCCAA.gbeasley@tsa.ac.za>

I've achieved a similar thing by creating a Globals module. This is imported
by all modules that require any global variable. I'm also using this module
to store a dictionary of users as well as other cached content. It seems to
work effectively for me. Anyone aware of any problems with this approach?

Thanks
Grant Beasley
Technikon SA

-----Original Message-----
From: mod_python-admin@modpython.org
[mailto:mod_python-admin@modpython.org]On Behalf Of Marcelo M. Sobral
Sent: 23 April 2002 02:34
To: Javier Quinteros
Cc: mod_python@modpython.org
Subject: Re: [mod_python] Global variable...


On Mon, 22 Apr 2002, Javier Quinteros wrote:

> What should I do if I want a variable to live for ever? I mean, I don't
want
> to redefine the variable every time I import a module (where I use it) or
> click a link.

   HI.

   You must use shared memory for that. The shmmodule can help you (look
for it on Vault of Parnassus).
   I  have written a trivial class to save and restore objects in the
shared memory. You can download it from:

   http://www.sj.univali.br/~sobral/persist.tgz

   It has been used to implement a cache for logins and passwords, used by
a PythonAuthenHandler. The cache is a dictionary, which lives in the
sahred memory.

   It has some comments to help you to use it.

   Best regards.


  ------------------------
  Prof. Marcelo Maia Sobral
  Administrador de Redes
  Nucleo de Informatica
  Univali - Campus S?o Jos?
  Fone: (0xx48) 281-1595
  -----------------------------


-----BEGIN PGP PUBLIC KEY BLOCK-----
Version: GnuPG v1.0.6 (GNU/Linux)
Comment: For info see http://www.gnupg.org

mQGiBDwiFZQRBACpWV7f+1b1H2Efm9WHM5LnQxQcXEBz/SHff9B909IL5kl5zAL1
F4+mABr4g25wUGKb2SLk6/zb7EPpgI6IrfG7gKqv4PRn8KRkGANSdSouiyqKd8qa
JPIwR7i5cCV1hz2p4T7An5307HiJj/BiAXtDtPnD9JKf3gx4upOqbyyyYwCg8gFr
AdI1OK++OvBcyCebHM4ojoUEAJedtyxaL/A3rnQ1Ni2DiX60I3mbCx2eWUgm506S
RCkwuMzIB2tEMGQg3acqZvTk/7i6ek01Hkk7d8UCZjubKnj8kN23ew5k5/PbFMbF
+02tvYy91240MBmTswgW/QTjpU6dRdhtOwOLuuNKUPOII1TtdqQUg+/sWnyfLyrC
5XSGA/wPJAVIEFbvwQUb/XPr9hi+flNjsgEvv6cZDs4b83YwtdXuY4OZH7EyeQ4p
+aBlkjNJIdqKB6gw7sv5hdAlX+zKgIukw2jDa63PZl3TiIx1y06p5lDWpqbbhVIG
ky1cWRif6vo0p2bPeuwcaNleiZiL1hvR79wLw3EYsMB3tbDAJLRPTWFyY2VsbyBN
YWlhIFNvYnJhbCAoQWRtaW5pc3RyYWRvciBkZSByZWRlIC0gVW5pdmFsaS1TSikg
PHNvYnJhbEBzai51bml2YWxpLmJyPohdBBMRAgAdBQI8IhWUBQkA7U4ABQsHCgME
AxUDAgMWAgECF4AACgkQ6vNSIUi7iuxQPgCgjRxk9vyJVt94CjySkZKcDj7jyB4A
niVhSkObCMg4iZMSTvD9HZRKAtu6uQENBDwiFZwQBADZEKBHT1MmO8miFB9/V34V
xjzSXn3P3vusbgS/4v7Ydf4Lrcfah8qLx/GEf0Cl7PAL8tSEZkl5+fgzIckKLDA4
E61A31xjxi/MVmySqkPrqzI8AmfT/ukSTgFYEpf/hOmBu7c7JH8BT5evZ3wCFRCH
aZf/XnNnOLQrmRqrlaM6CwADBQP8CiTjtSxcbVU5vECsy/pnAjag7EdeLdBzjM17
B0kDDBMYa3VFi6dAkhA1eCe+M7QQBHAzM1xCXLT1ZepteZiqwpb+dSq++0XKLUea
uJclWUn8DbwMWGKTdI4weGGr9Bcaq8EZpzzo2uDDbIh3kKGtFntVEFGvg4HorWNM
vLOVCwOITAQYEQIADAUCPCIVnAUJAO1OAAAKCRDq81IhSLuK7HNxAJ9UxQo0vu/O
NEEsJhrHJoDgpdc2PwCg1c9acqzo9jCig+Y9xWpgJyQpOZQ=
=99B8
-----END PGP PUBLIC KEY BLOCK-----

_______________________________________________
Mod_python mailing list
Mod_python@modpython.org
http://www.modpython.org/mailman/listinfo/mod_python


From Nik.Barron at pennantplc.co.uk  Tue Apr 23 10:01:01 2002
From: Nik.Barron at pennantplc.co.uk (Nik Barron)
Date: Fri Jan  9 21:59:20 2004
Subject: [mod_python] Query about authentication/authorization win Apa
	che on Win32
Message-ID: <F17550784FF9D111B7F100E02921B24741E898@NT-SOTON-001>

Anyone got any ideas? Still having hassle with this.

Many thanks,

Nik

From rien at yeepa.org  Tue Apr 23 11:32:36 2002
From: rien at yeepa.org (Adrien Plisson)
Date: Fri Jan  9 21:59:20 2004
Subject: [mod_python] Query about authentication/authorization win Apache on Win32
References: <F17550784FF9D111B7F100E02921B24741E898@NT-SOTON-001>
Message-ID: <001801c1eaa9$cec145f0$2cee4cd4@RANDOM>

From: "Nik Barron" <Nik.Barron@pennantplc.co.uk>
> Anyone got any ideas? Still having hassle with this.

try to test in your authenhandler if the username or password is bad.
if it is, then return a 401 (Authorisation required) error code, in addition
with this header:
WWW-Authenticate: Basic realm="nicepeople"

--
rien


From Nik.Barron at pennantplc.co.uk  Tue Apr 23 11:32:51 2002
From: Nik.Barron at pennantplc.co.uk (Nik Barron)
Date: Fri Jan  9 21:59:20 2004
Subject: [mod_python] Query about authentication/authorization win Apa
	che on Win32
Message-ID: <F17550784FF9D111B7F100E02921B24741E89B@NT-SOTON-001>

> try to test in your authenhandler if the username or password is bad.
> if it is, then return a 401 (Authorisation required) error 
> code, in addition
> with this header:
> WWW-Authenticate: Basic realm="nicepeople"

Excellent! That works a treat, many thanks.

Nik

From msdemlei at cl.uni-heidelberg.de  Tue Apr 23 14:03:57 2002
From: msdemlei at cl.uni-heidelberg.de (Markus Demleitner)
Date: Fri Jan  9 21:59:20 2004
Subject: [mod_python] Dispatch() returned nothing again
Message-ID: <20020423120357.GD9011@tucana.cl.uni-heidelberg.de>

Hi List,

With mod_python 2.7.8, I still see quite a number of the
dreaded "Dispatch() returned nothing." messages when
there's only one return in dispatch, and that's in the
very last line of the function and returns apache.OK.

The consequence is a 500 server error, which is kind of
annoying.  After looking for some systematics in the occurrence
of these errors, I gave up -- a simple reload generally
works and returns the requested page all right.  Also,
it is extremely cumbersome to trigger the problem, since
it appears every page on the server can cause it, but only
every so-many accesses.

So -- does anyone have any tips on how to go about fixing
this?

Thanks,

        Markus

From peter.bittner at gmx.net  Thu Apr 25 16:35:20 2002
From: peter.bittner at gmx.net (Peter Bittner)
Date: Fri Jan  9 21:59:20 2004
Subject: [mod_python] Migrating from CGI-Python to mod_python
Message-ID: <30981.1019745320@www16.gmx.net>

Hi there!

(I am no complete Python newbie. However, I am new to mod_python.)

I have written a library database with web user interface in Python a while
ago. Now I finally want to migrate it to mod_python since this promises the
web interface to be much faster then.

I have read some of mod_python's documentation, but this seems not to have a
proper solution (or tutorial) for my migration problem.

Is there anyone who already has experience with migrating python code that
runs based on CGI to mod_python? (I don't think I want to use mod_python's CGI
handler. I'd rather go for a clean mod_python implementation!)

Can anyone provide me some sample code of clean mod_python scripts?
Please help!

Cheers, Peter

-- 
Peter Bittner
mobil: +43/(0)650/4151545
web: http://www.peterbittner.tk - http://www.htmlkurs.tk
mail: peter.bittner@gmx.net

"Free software is like free speech, not free beer" (Richard Stallman)

GMX - Die Kommunikationsplattform im Internet.
http://www.gmx.net


From goldii_nffo_54r1vm at mail.com  Fri Apr 26 09:28:49 2002
From: goldii_nffo_54r1vm at mail.com (GOLD INFO)
Date: Fri Jan  9 21:59:20 2004
Subject: [mod_python] =?windows-1251?Q?=CB=E5=E3=EA=EE=F1=F2=FC_=EF=F0=E8=E2=EB=E5=F7=E5=ED=E8=FF_=ED=EE=E2=FB=F5_=EA=EB=E8=E5=ED=F2=EE=E2?=
Message-ID: <19550200245265284949@mail.com>















-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mailman.modpython.org/pipermail/mod_python/attachments/20020426/57072341/attachment-0002.htm
From wart at softhome.net  Sat Apr 27 13:50:01 2002
From: wart at softhome.net (Wartan Hachaturow)
Date: Fri Jan  9 21:59:20 2004
Subject: [mod_python] Authentification with publisher handler
Message-ID: <20020427135000.A7545@calmar.tepkom.ru>

Hello.

I am trying to get an authentificated user's username from inside
a python code.

Here's the code:

__auth_realm__ = "Authorization"
__access__ = 1


def __auth__(req, user, passwd):
	if user == "foo" and passwd == "bar":
		return 1
	else:
		return 0

def stats(req):
	req.get_basic_auth_pw()
	return "<html><body>" + str(req.connection.user) + "</body></html>"	


What I get is a "None", i.e. req.connection.user is None. 
What could be the problem?

P.S. libapache-mod-python 2:2.7.6-1, python 2.1, apache 1.3.24

--
Regards, Wartan.

	

From hpotter at consultant.com  Sun Apr 28 18:49:52 2002
From: hpotter at consultant.com (hpotter@consultant.com)
Date: Fri Jan  9 21:59:20 2004
Subject: [mod_python] Good news for American and Canadian smokers
Message-ID: <200204290622.g3T6M9s00593@eden.ispol.com>

From Nik.Barron at pennantplc.co.uk  Mon Apr 29 08:58:25 2002
From: Nik.Barron at pennantplc.co.uk (Nik Barron)
Date: Fri Jan  9 21:59:20 2004
Subject: [mod_python] Authentification with publisher handler
Message-ID: <F17550784FF9D111B7F100E02921B24741E8C7@NT-SOTON-001>

> What I get is a "None", i.e. req.connection.user is None. 
> What could be the problem?

I had a similar problem -- do you get a login box when accessing the page?
If not, try adding the following to the authentication handler instead of
the return 0:

	else:
		req.headers_out.add("WWW-Authenticate", 'Basic
realm="whatever"')
		return apache.HTTP_UNAUTHORIZED

Nick Barron
Manager, E-Services Division
Pennant Software Services Ltd -- Registered in England No. 3772667
PGP: A94C 4190 026E 3E02 6D50  C8FA 8620 3091 FF34 533D

From wart at softhome.net  Mon Apr 29 11:22:19 2002
From: wart at softhome.net (Wartan Hachaturow)
Date: Fri Jan  9 21:59:20 2004
Subject: [mod_python] Authentification with publisher handler
In-Reply-To: <F17550784FF9D111B7F100E02921B24741E8C7@NT-SOTON-001>; from Nik.Barron@pennantplc.co.uk on Mon, Apr 29, 2002 at 08:58:25AM +0100
References: <F17550784FF9D111B7F100E02921B24741E8C7@NT-SOTON-001>
Message-ID: <20020429112219.A9300@calmar.tepkom.ru>

On Mon, Apr 29, 2002 at 08:58:25AM +0100, Nik Barron wrote:

> I had a similar problem -- do you get a login box when accessing the page?

Yes, I do. But req.connection.user is still None. Even adding explicit 
"unauthorized" as you suggested doesn't help.

--
Regards, Wartan.

From jfk at metation.com  Mon Apr  1 09:50:46 2002
From: jfk at metation.com (=?iso-8859-1?q?J=F8rgen=20Fr=F8jk=20Kj=E6rsgaard=20{Metation}?=)
Date: Fri Jan  9 22:03:07 2004
Subject: [mod_python] mod_python under IIS?
Message-ID: <02040109504601.02567@grace.informaticon.dk>

I need to get mod_python running under MS IIS (basically because some people 
simply don't want to run Apache no matter how great it is). Has anyone done 
any work in that direction already? Running mod_python as a CGI script or 
Python as an ASP scripting language is not an option as I need to process the 
raw URL in Python.

thanks, jfk

-- 
J?rgen Fr?jk Kj?rsgaard, direkt?r og systemkonsulent
Metation aps - Kystvejen 29, DK-8000 ?rhus C
Web: www.metation.com  - Tlf: +45 8625 0038 - Mobil: +45 2925 6693

From anburger76 at hotmail.com  Mon Apr  1 12:09:51 2002
From: anburger76 at hotmail.com (Tony Burger)
Date: Fri Jan  9 22:03:07 2004
Subject: [mod_python] popen/popen2 usage?
Message-ID: <F152uNjVuMhvqgStMVh0001021a@hotmail.com>

An HTML attachment was scrubbed...
URL: http://mailman.modpython.org/pipermail/mod_python/attachments/20020401/668a0cb5/attachment-0003.htm
-------------- next part --------------
An embedded message was scrubbed...
From: "Tony Burger" <anburger76@hotmail.com>
Subject: [mod_python] popen/popen2 usage?
Date: Sun, 31 Mar 2002 23:18:27 -0500
Size: 2785
Url: http://mailman.modpython.org/pipermail/mod_python/attachments/20020401/668a0cb5/attachment-0003.eml
From s_lott at yahoo.com  Mon Apr  1 12:01:38 2002
From: s_lott at yahoo.com (Steven Lott)
Date: Fri Jan  9 22:03:07 2004
Subject: [mod_python] mod_python under IIS?
In-Reply-To: <02040109504601.02567@grace.informaticon.dk>
Message-ID: <20020401200138.49880.qmail@web9603.mail.yahoo.com>

Have you considered a simple CGI, ignoring mod_python?

While annoying (very heavy overhead from process forks), it will
work under a variety of web server configurations.

You must, of course, be absolutely certain that your CGI
applications do not expose any security holes.

You can use some of the mod_python modules that parse the
request and support creation of a response to do this.

I have a demo CGI framework used for education purposes.

--- Jørgen Frøjk Kjærsgaard {Metation} <jfk@metation.com> wrote:
> I need to get mod_python running under MS IIS (basically
> because some people 
> simply don't want to run Apache no matter how great it is).
> Has anyone done 
> any work in that direction already? Running mod_python as a
> CGI script or 
> Python as an ASP scripting language is not an option as I need
> to process the 
> raw URL in Python.
> 
> thanks, jfk
> 
> -- 
> Jørgen Frøjk Kjærsgaard, direktør og systemkonsulent
> Metation aps - Kystvejen 29, DK-8000 Århus C
> Web: www.metation.com  - Tlf: +45 8625 0038 - Mobil: +45 2925
> 6693
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://www.modpython.org/mailman/listinfo/mod_python


=====
--
S. Lott, CCP :-{)
S_LOTT@YAHOO.COM
http://www.mindspring.com/~slott1
Buccaneer #468: KaDiMa

Macintosh user: drinking upstream from the herd.

__________________________________________________
Do You Yahoo!?
Yahoo! Greetings - send holiday greetings for Easter, Passover
http://greetings.yahoo.com/

From modpython at xhaus.com  Mon Apr  1 15:45:15 2002
From: modpython at xhaus.com (Alan Kennedy)
Date: Fri Jan  9 22:03:07 2004
Subject: [mod_python] mod_python under IIS?
Message-ID: <200204012057.PAA132830@spool3.valueweb.net>

Hi,

I've never seen an embedded python for IIS. The only 
servers I know that are lucky enough to have such python 
embedding are Apache and AOLServer (PyWX)

http://www.idyll.org/~t/python9/pywx.html

The only reasonable (scalable) alternative I know of is 
FastCGI, which involves plugging a module into your 
webserver that passes the requests onto an external 
persistent threaded Python server, potentially on a 
different machine, or even multiple machines.

http://www.fastcgi.com/

There is a FastCGI module for IIS, There are several python 
modules/servers listed on the FastCGI home page.

I don't know IIS at all, but is there any way you can get 
IIS to pass requests onto COM objects? If so, then you can 
use Mark Hammond's excellent win32 extensions, which allow 
you to very easily write both COM servers and clients in 
python. 

http://www.python.org/windows/

Is there any specific reason why you don't want to use 
Python as a scripting language in ASP?

Best of luck,

Al.



---------------------------------------------
This message was sent using WebMail by CyberGate.
http://www.gate.net/webmail



From jfk at metation.com  Tue Apr  2 11:30:17 2002
From: jfk at metation.com (=?iso-8859-1?q?J=F8rgen=20Fr=F8jk=20Kj=E6rsgaard=20{Metation}?=)
Date: Fri Jan  9 22:03:07 2004
Subject: [mod_python] mod_python under IIS?
In-Reply-To: <20020401200138.49880.qmail@web9603.mail.yahoo.com>
References: <20020401200138.49880.qmail@web9603.mail.yahoo.com>
Message-ID: <02040211301700.00296@grace.informaticon.dk>

Mandag  1. April 2002 22:01 skrev du:
> Have you considered a simple CGI, ignoring mod_python?
>
> While annoying (very heavy overhead from process forks), it will
> work under a variety of web server configurations.

Well, there are two problems involved in using a CGI solution. One is 
performance, which isn't critical in all cases. Another problem is that I 
like to be able to use short, meningful URLs e.g. 
"http://somewhere.com/articles/20020215-1.html" instead of, say, 
"http://somewhere.com/cgi-bin/show.py?article-id=20020215-1"

Under Apache one could use mod_rewrite to rewrite urls of the former form to 
the latter. Do you happen to know if something similar is possible under IIS? 
I don't know much about IIS yet; until now I've only worked on Apache...

regards,
 
J?rgen Fr?jk Kj?rsgaard, direkt?r og systemkonsulent
Metation aps - Kystvejen 29, DK-8000 ?rhus C
Web: www.metation.com  - Tlf: +45 8625 0038 - Mobil: +45 2925 6693

From jfk at metation.com  Tue Apr  2 11:49:12 2002
From: jfk at metation.com (=?iso-8859-1?q?J=F8rgen=20Fr=F8jk=20Kj=E6rsgaard=20{Metation}?=)
Date: Fri Jan  9 22:03:07 2004
Subject: [mod_python] mod_python under IIS?
In-Reply-To: <200204012057.PAA132830@spool3.valueweb.net>
References: <200204012057.PAA132830@spool3.valueweb.net>
Message-ID: <02040211491201.00296@grace.informaticon.dk>

Mandag  1. April 2002 22:45 skrev du:
> Hi,
>
> I've never seen an embedded python for IIS. The only
> servers I know that are lucky enough to have such python
> embedding are Apache and AOLServer (PyWX)
>
> http://www.idyll.org/~t/python9/pywx.html
>
> The only reasonable (scalable) alternative I know of is
> FastCGI, which involves plugging a module into your
> webserver that passes the requests onto an external
> persistent threaded Python server, potentially on a
> different machine, or even multiple machines.
>
> http://www.fastcgi.com/
>
> There is a FastCGI module for IIS, There are several python
> modules/servers listed on the FastCGI home page.

This sounds like a plausible solution, I'll investigate it further.

> I don't know IIS at all, but is there any way you can get
> IIS to pass requests onto COM objects? If so, then you can
> use Mark Hammond's excellent win32 extensions, which allow
> you to very easily write both COM servers and clients in
> python.
>
> http://www.python.org/windows/

We are primarily a Unix house and have no COM expertice, but if the extension 
makes it very easy, it may well be the way to go.

For both these suggestions, the question is: will it allow me to get the raw 
URL, no matter what it is?

> Is there any specific reason why you don't want to use
> Python as a scripting language in ASP?

The ASP way is to mix logic and contents. We generate contents from external 
sources, e.g. XML. While it obviously would be possible to write an ASP page 
that interfaces to the content generator behind the scenes, It wouldn't be 
the most clean solution.

What I really would like is very simple: have IIS pass me the URL + CGI 
parameters, then I generate a page using some mod_python code and our own 
Python app and pass it back.

regards

J?rgen Fr?jk Kj?rsgaard, direkt?r og systemkonsulent
Metation aps - Kystvejen 29, DK-8000 ?rhus C
Web: www.metation.com  - Tlf: +45 8625 0038 - Mobil: +45 2925 6693

From modpython at xhaus.com  Tue Apr  2 07:16:18 2002
From: modpython at xhaus.com (Alan Kennedy)
Date: Fri Jan  9 22:03:07 2004
Subject: [mod_python] mod_python under IIS?
Message-ID: <200204021228.HAA39400@spool8.valueweb.net>

> For both these suggestions, the question is: will it
> allow me to get the raw URL, no matter what it is?

I think this is really 

1. A FastCGI question
2. An IIS question

and not a mod_python question.

I have no idea where you would find the answer to these 
questions.

Al.



---------------------------------------------
This message was sent using WebMail by CyberGate.
http://www.gate.net/webmail



From sandor.kopanyi at mailbox.hu  Wed Apr  3 09:41:14 2002
From: sandor.kopanyi at mailbox.hu (sandor.kopanyi@mailbox.hu)
Date: Fri Jan  9 22:03:07 2004
Subject: [mod_python] =?iso-8859-2?B?YXJndW1lbnQgbWF0Y2hpbmcgZm9yIGZvcm1z?=
Message-ID: <20020403074114.12400.qmail@web2.mailbox.hu>

Hi,

A mod_python newbie question about argument matching for forms:
I have a form for user registration, with 13 fields (name,
address, etc.) - I pass them to mod_python for processing.

But: if I don't give default values to the arguments, it fails,
saying 13 parameters expected, 3 got...

Which 3? Why those 3? And why works if I give default values?
If I use the req.form.list to extract the values, works fine.
But the other way is much more elegant...


The code:
def add_customer(addr_postal_code=None, addr_city=None, etc.):
   #etc.

This is not working without those None's.

Environment: RedHat 7.2, Python 1.5.2, mod_python 2.7.6, Apache
1.3.20 (mod_python config is copy-paste from doc).

----------------------------------
Related to this, a small config question:
in chapter 3.4 (Tutorial/Publisher Handler Makes it Easy) AddHandler
is used for Apache config, in 6.1 (Standard Handlers/Publisher Handler)
SetHandler. What's the difference?

Best regards,
Sandor

--------------------------------------------------
http://www.mailbox.hu - Mert levelezni kell...


From piet at cs.uu.nl  Thu Apr  4 10:33:23 2002
From: piet at cs.uu.nl (Piet van Oostrum)
Date: Fri Jan  9 22:03:07 2004
Subject: [mod_python] argument matching for forms
In-Reply-To: <20020403074114.12400.qmail@web2.mailbox.hu>
References: <20020403074114.12400.qmail@web2.mailbox.hu>
Message-ID: <wzsn6bj224.fsf@nono.cs.uu.nl>

>>>>> sandor.kopanyi@mailbox.hu (SK) writes:

SK> Hi,
SK> A mod_python newbie question about argument matching for forms:
SK> I have a form for user registration, with 13 fields (name,
SK> address, etc.) - I pass them to mod_python for processing.

SK> But: if I don't give default values to the arguments, it fails,
SK> saying 13 parameters expected, 3 got...

SK> Which 3? Why those 3? And why works if I give default values?
SK> If I use the req.form.list to extract the values, works fine.
SK> But the other way is much more elegant...

Probably the fields that were filled in in the form. Unfilled fields that
don't have a value in the form are probably not passed. Although I think
they should be passed.
-- 
Piet van Oostrum <piet@cs.uu.nl>
URL: http://www.cs.uu.nl/~piet [PGP]
Private email: P.van.Oostrum@hccnet.nl


From sandor.kopanyi at mailbox.hu  Thu Apr  4 11:34:54 2002
From: sandor.kopanyi at mailbox.hu (sandor.kopanyi@mailbox.hu)
Date: Fri Jan  9 22:03:07 2004
Subject: [mod_python] =?iso-8859-2?B?UmVbMl06?=
 =?iso-8859-2?B?W21vZF9weXRob25d?=
 =?iso-8859-2?B?YXJndW1lbnQ=?=
 =?iso-8859-2?B?bWF0Y2hpbmc=?=
 =?iso-8859-2?B?Zm9y?=
 =?iso-8859-2?B?Zm9ybXM=?=
In-Reply-To: <wzsn6bj224.fsf@nono.cs.uu.nl>
Message-ID: <20020404093454.16607.qmail@web2.mailbox.hu>

> SK> Hi,
> SK> A mod_python newbie question about argument matching for forms:
> SK> I have a form for user registration, with 13 fields (name,
> SK> address, etc.) - I pass them to mod_python for processing.
> 
> SK> But: if I don't give default values to the arguments, it fails,
> SK> saying 13 parameters expected, 3 got...
> 
> SK> Which 3? Why those 3? And why works if I give default values?
> SK> If I use the req.form.list to extract the values, works fine.
> SK> But the other way is much more elegant...
> 
> Probably the fields that were filled in in the form. Unfilled fields
> that
> don't have a value in the form are probably not passed. Although I
think
> they should be passed.

Thanks Piet,

Unfortunately happens idependent from the number of filled fields,
i.e. even if I fill all the fields. What I can see is that - if it
comes through :) - the unfilled fields values are ''s, i.e. empty
strings.

Sandor

--------------------------------------------------
http://www.mailbox.hu - Mert levelezni kell...




From matt at proweb.co.uk  Thu Apr  4 11:43:07 2002
From: matt at proweb.co.uk (Matt H)
Date: Fri Jan  9 22:03:07 2004
Subject: [mod_python] argument matching for forms
In-Reply-To: <wzsn6bj224.fsf@nono.cs.uu.nl>
References: <20020403074114.12400.qmail@web2.mailbox.hu>
	<wzsn6bj224.fsf@nono.cs.uu.nl>
Message-ID: <20020404114307.58b93be1.matt@proweb.co.uk>

> Probably the fields that were filled in in the form. Unfilled fields that
> don't have a value in the form are probably not passed. Although I think
> they should be passed.

no they shouldn't

the <form tag is a way of telling the browser how to lay out a form

the GET method is a way to tell the HTTP server what you are after

the POST method is a way to give the HTTP server information

browsers linking forms to POST/GET requests is an end user convenience

your code *must* accept that some or all of the fields will not be included for I may manually type

http://www.ewwef.com/page.html?var1=hello&var2=goodbye

Also how would you discriminate between a page request and a submission if you expected

http://www.ewwef.com/page.html?var1=&var2=

the solution to the poster's problem is a wrapper to his function that checks the parameters for validity (soemthign he shoudl be doing anyway!)

Matt







From jcea at argo.es  Thu Apr  4 16:58:35 2002
From: jcea at argo.es (Jesus Cea Avion)
Date: Fri Jan  9 22:03:07 2004
Subject: [mod_python] PythonAuthenHandler and PythonAuthzHandler
Message-ID: <3CAC6A1B.AA58CD35@argo.es>

"PythonAuthzHandler" is not documented in the last documentation
revision, at "http://www.modpython.org/live/mod_python-2.7.6/doc-html/".

The example in docs for "PythonAuthenHandler" doesn't work. Seems you
need use both, "PythonAuthenHandler" and "PythonAuthzHandler", one for
"authentication" and the other for "authorization".

-- 
Jesus Cea Avion                         _/_/      _/_/_/        _/_/_/
jcea@argo.es http://www.argo.es/~jcea/ _/_/    _/_/  _/_/    _/_/  _/_/
                                      _/_/    _/_/          _/_/_/_/_/
PGP Key Available at KeyServ   _/_/  _/_/    _/_/          _/_/  _/_/
"Things are not so easy"      _/_/  _/_/    _/_/  _/_/    _/_/  _/_/
"My name is Dump, Core Dump"   _/_/_/        _/_/_/      _/_/  _/_/
"El amor es poner tu felicidad en la felicidad de otro" - Leibniz

From jquinte at fadu.uba.ar  Thu Apr  4 15:28:31 2002
From: jquinte at fadu.uba.ar (Javier Quinteros)
Date: Fri Jan  9 22:03:07 2004
Subject: [mod_python] Same name, different directories...
Message-ID: <200204041235.PAA15434@www.fadu.uba.ar>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

Hi !!!
I've defined three Directories in my http.conf, all of them with python 
scripts inside. What i've noticed is that if I have more than one module 
called "module1.py" in different directories, mod_python is not able to work 
with both of them. It seems that it loads the first one (it doesn't matter 
which one) and after that, if I call the second one is the first one the one 
who answers me. After that I had to rename some modules just to avoid the 
possibility that mod_python use them the way he wants.

Is there any solution? I mean, I don't want to get one interpreter for each 
Directory I define.

Thanks in advance,

- -- 
- ---------------------------------
Javier Quinteros
jquinte@fadu.uba.ar
Secretar?a de Planificaci?n
Universidad de Buenos Aires
- ---------------------------------
Existe un solo lugar donde el Norte y el Sur del mundo se enfrentan en
igualdad de condiciones: es una cancha de f?tbol de Brasil, en la 
desembocadura
del r?o Amazonas. La l?nea del ecuador corta por la mitad el estadio Zerao, en
Amap?, de modo que cada equipo juega un tiempo en el sur y otro tiempo en el
norte.
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.0.6 (GNU/Linux)
Comment: For info see http://www.gnupg.org

iD8DBQE8rJtQdBzRnlFl4cgRAnPsAKDC1Q7KTH7QGL8XxdEPqvY9Zwud5gCfZHe0
sAcXkDQlrdfyrQvaq5rmuPc=
=qwm3
-----END PGP SIGNATURE-----

From grisha at modpython.org  Thu Apr  4 14:13:04 2002
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 22:03:07 2004
Subject: [mod_python] Same name, different directories...
In-Reply-To: <200204041235.PAA15434@www.fadu.uba.ar>
Message-ID: <Pine.BSF.4.32.0204041410500.67719-100000@localhost>

You can either use PythonInterpPerDirective, or manually force different
interpreter names with PythonInterpreter.

I recommend making sure you're using Python 2.2 if you're going to be
relying on multiple intepreter stuff.

Grisha

On Thu, 4 Apr 2002, Javier Quinteros wrote:

> -----BEGIN PGP SIGNED MESSAGE-----
> Hash: SHA1
>
> Hi !!!
> I've defined three Directories in my http.conf, all of them with python
> scripts inside. What i've noticed is that if I have more than one module
> called "module1.py" in different directories, mod_python is not able to work
> with both of them. It seems that it loads the first one (it doesn't matter
> which one) and after that, if I call the second one is the first one the one
> who answers me. After that I had to rename some modules just to avoid the
> possibility that mod_python use them the way he wants.
>
> Is there any solution? I mean, I don't want to get one interpreter for each
> Directory I define.
>
> Thanks in advance,
>
> - --
> - ---------------------------------
> Javier Quinteros
> jquinte@fadu.uba.ar
> Secretar?a de Planificaci?n
> Universidad de Buenos Aires
> - ---------------------------------
> Existe un solo lugar donde el Norte y el Sur del mundo se enfrentan en
> igualdad de condiciones: es una cancha de f?tbol de Brasil, en la
> desembocadura
> del r?o Amazonas. La l?nea del ecuador corta por la mitad el estadio Zerao, en
> Amap?, de modo que cada equipo juega un tiempo en el sur y otro tiempo en el
> norte.
> -----BEGIN PGP SIGNATURE-----
> Version: GnuPG v1.0.6 (GNU/Linux)
> Comment: For info see http://www.gnupg.org
>
> iD8DBQE8rJtQdBzRnlFl4cgRAnPsAKDC1Q7KTH7QGL8XxdEPqvY9Zwud5gCfZHe0
> sAcXkDQlrdfyrQvaq5rmuPc=
> =qwm3
> -----END PGP SIGNATURE-----
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://www.modpython.org/mailman/listinfo/mod_python
>


From jeffstearns at attbi.com  Thu Apr  4 11:51:48 2002
From: jeffstearns at attbi.com (Jeff Stearns)
Date: Fri Jan  9 22:03:07 2004
Subject: [mod_python] Same name, different directories...
References: <200204041235.PAA15434@www.fadu.uba.ar>
Message-ID: <003f01c1dc12$2a3dcda0$8001a8c0@SavageBeast.com>

This is probably a bug in import_module() in apache.py.  There are several
bugs in this function, and they show up in different ways sepending on how
you set PythonAutoReload and whether you use the publisher module.

I have tried various workarounds, but each workaround seems to expose a
different problem with this code.

Using unique names for each file is one thing that helps to reduce your
exposure to these bugs.  Turning on PythonAutoReload can help in some cases.

But rewriting import_module is probably what's really needed here.

-jeff stearns


----- Original Message -----
From: "Javier Quinteros" <jquinte@fadu.uba.ar>
To: <mod_python@modpython.org>
Sent: Thursday, April 04, 2002 10:28 AM
Subject: [mod_python] Same name, different directories...


> -----BEGIN PGP SIGNED MESSAGE-----
> Hash: SHA1
>
> Hi !!!
> I've defined three Directories in my http.conf, all of them with python
> scripts inside. What i've noticed is that if I have more than one module
> called "module1.py" in different directories, mod_python is not able to
work
> with both of them. It seems that it loads the first one (it doesn't matter
> which one) and after that, if I call the second one is the first one the
one
> who answers me. After that I had to rename some modules just to avoid the
> possibility that mod_python use them the way he wants.
>
> Is there any solution? I mean, I don't want to get one interpreter for
each
> Directory I define.
>
> Thanks in advance,
>
> - --
> - ---------------------------------
> Javier Quinteros
> jquinte@fadu.uba.ar
> Secretar?a de Planificaci?n
> Universidad de Buenos Aires
> - ---------------------------------
> Existe un solo lugar donde el Norte y el Sur del mundo se enfrentan en
> igualdad de condiciones: es una cancha de f?tbol de Brasil, en la
> desembocadura
> del r?o Amazonas. La l?nea del ecuador corta por la mitad el estadio
Zerao, en
> Amap?, de modo que cada equipo juega un tiempo en el sur y otro tiempo en
el
> norte.
> -----BEGIN PGP SIGNATURE-----
> Version: GnuPG v1.0.6 (GNU/Linux)
> Comment: For info see http://www.gnupg.org
>
> iD8DBQE8rJtQdBzRnlFl4cgRAnPsAKDC1Q7KTH7QGL8XxdEPqvY9Zwud5gCfZHe0
> sAcXkDQlrdfyrQvaq5rmuPc=
> =qwm3
> -----END PGP SIGNATURE-----
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://www.modpython.org/mailman/listinfo/mod_python
>


From grisha at modpython.org  Thu Apr  4 15:06:37 2002
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 22:03:07 2004
Subject: [mod_python] Same name, different directories...
In-Reply-To: <003f01c1dc12$2a3dcda0$8001a8c0@SavageBeast.com>
Message-ID: <Pine.BSF.4.32.0204041501460.68385-100000@localhost>

Well, import_module has been rewritten (it's in CVS, the branch-2-7-7
branch), but if I understood Javier correctly, he is using same module
names in different directories on the same virtual server, i.e. within the
same sub-interpreter. Since Python keeps track of modules by their name,
not the full path, in this case the namesake modules will definitely be at
conflict with one another.

Grisha

On Thu, 4 Apr 2002, Jeff Stearns wrote:

> This is probably a bug in import_module() in apache.py.  There are several
> bugs in this function, and they show up in different ways sepending on how
> you set PythonAutoReload and whether you use the publisher module.
>
> I have tried various workarounds, but each workaround seems to expose a
> different problem with this code.
>
> Using unique names for each file is one thing that helps to reduce your
> exposure to these bugs.  Turning on PythonAutoReload can help in some cases.
>
> But rewriting import_module is probably what's really needed here.
>
> -jeff stearns
>
>
> ----- Original Message -----
> From: "Javier Quinteros" <jquinte@fadu.uba.ar>
> To: <mod_python@modpython.org>
> Sent: Thursday, April 04, 2002 10:28 AM
> Subject: [mod_python] Same name, different directories...
>
>
> > -----BEGIN PGP SIGNED MESSAGE-----
> > Hash: SHA1
> >
> > Hi !!!
> > I've defined three Directories in my http.conf, all of them with python
> > scripts inside. What i've noticed is that if I have more than one module
> > called "module1.py" in different directories, mod_python is not able to
> work
> > with both of them. It seems that it loads the first one (it doesn't matter
> > which one) and after that, if I call the second one is the first one the
> one
> > who answers me. After that I had to rename some modules just to avoid the
> > possibility that mod_python use them the way he wants.
> >
> > Is there any solution? I mean, I don't want to get one interpreter for
> each
> > Directory I define.
> >
> > Thanks in advance,
> >
> > - --
> > - ---------------------------------
> > Javier Quinteros
> > jquinte@fadu.uba.ar
> > Secretar?a de Planificaci?n
> > Universidad de Buenos Aires
> > - ---------------------------------
> > Existe un solo lugar donde el Norte y el Sur del mundo se enfrentan en
> > igualdad de condiciones: es una cancha de f?tbol de Brasil, en la
> > desembocadura
> > del r?o Amazonas. La l?nea del ecuador corta por la mitad el estadio
> Zerao, en
> > Amap?, de modo que cada equipo juega un tiempo en el sur y otro tiempo en
> el
> > norte.
> > -----BEGIN PGP SIGNATURE-----
> > Version: GnuPG v1.0.6 (GNU/Linux)
> > Comment: For info see http://www.gnupg.org
> >
> > iD8DBQE8rJtQdBzRnlFl4cgRAnPsAKDC1Q7KTH7QGL8XxdEPqvY9Zwud5gCfZHe0
> > sAcXkDQlrdfyrQvaq5rmuPc=
> > =qwm3
> > -----END PGP SIGNATURE-----
> > _______________________________________________
> > Mod_python mailing list
> > Mod_python@modpython.org
> > http://www.modpython.org/mailman/listinfo/mod_python
> >
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://www.modpython.org/mailman/listinfo/mod_python
>


From ian at veryfresh.com  Thu Apr  4 12:07:11 2002
From: ian at veryfresh.com (Ian Clelland)
Date: Fri Jan  9 22:03:07 2004
Subject: [mod_python] Same name, different directories...
In-Reply-To: <200204041235.PAA15434@www.fadu.uba.ar>
References: <200204041235.PAA15434@www.fadu.uba.ar>
Message-ID: <20020404200711.GB19813@fullfactor.com>

On Thu, Apr 04, 2002 at 03:28:31PM -0300, Javier Quinteros wrote:
> I've defined three Directories in my http.conf, all of them with python 
> scripts inside. What i've noticed is that if I have more than one module 
> called "module1.py" in different directories, mod_python is not able to work 
> with both of them. It seems that it loads the first one (it doesn't matter 
> which one) and after that, if I call the second one is the first one the one 
> who answers me. After that I had to rename some modules just to avoid the 
> possibility that mod_python use them the way he wants.
> 
> Is there any solution? I mean, I don't want to get one interpreter for each 
> Directory I define.

The problem is that Python uses the module's file name -- without 
regard to its path -- as the module's name. A Python interpreter will 
also never load the same module twice, unless you use the 'reload' 
statement.

So the first time you 'import module1', Python loads and runs the first 
module1.py file it can find on sys.path. The second time you run the 
same import statement inside the same interpreter, Python does nothing, 
even if your sys.path is different that time.

It's just the way that Python works (and not mod_python in particular). 
There are probably three ways around this behaviour:

1) Give every module a unique filename.
2) Run seperate Python interpreters to handle different directories.
3) Look into using Python packages.

With packages, you should be able to distinguish between 
identically-named modules in different directories by calling them 
'directory1.module1' and 'directory2.module1'.

Hope this helps,

Ian

From fourie_willem at hotmail.com  Fri Apr  5 00:16:16 2002
From: fourie_willem at hotmail.com (Willem Fourie)
Date: Fri Jan  9 22:03:08 2004
Subject: [mod_python] mptest.py text does not interpret
Message-ID: <F82PiyAphwFutJLtosJ00000288@hotmail.com>

Dear reader

mptest.py is not being interpreted and simply displays the code in the 
browser. Other python files attempt to download. Please help.

Have made the proscribed mod's to conf (including AddModule mod_python.c) 
and it checks out OK. /server-info shows that python is indeed installed. 
(Apache/1.3.24 (Win32) mod_python/2.7.6 Python/2.2.1c1 PHP/4.1.3-dev)

It was mentioned that the mime type may not be maintained, but AddType 
application/x-httpd-py .py did not help.

Thanx in advance

_________________________________________________________________
Chat with friends online, try MSN Messenger: http://messenger.msn.com


From charney at charneyday.com  Thu Apr  4 18:15:53 2002
From: charney at charneyday.com (Reg Charney)
Date: Fri Jan  9 22:03:08 2004
Subject: [mod_python] mptest.py text does not interpret
References: <F82PiyAphwFutJLtosJ00000288@hotmail.com>
Message-ID: <3CAD08D9.3A1C3C5D@charneyday.com>

I had this same problem. Remove the AddType directive that refers to python
from the httpd.conf file. For some reason, mod_python is not implemented the
same way as PHP4,say.

Reg.

P.S. I never thanked others on the list that lead to this solution. My
apologies and thanks. I was trying to find the reason that I inserted the
AddType statement, but never did. By the time I reached that point, it was
"too late" to thank Ian Clelland <ian@veryfresh.com> and
"Gregory (Grisha) Trubetskoy" <grisha@modpython.org> for their help.

Willem Fourie wrote:

> Dear reader
>
> mptest.py is not being interpreted and simply displays the code in the
> browser. Other python files attempt to download. Please help.
>
> Have made the proscribed mod's to conf (including AddModule mod_python.c)
> and it checks out OK. /server-info shows that python is indeed installed.
> (Apache/1.3.24 (Win32) mod_python/2.7.6 Python/2.2.1c1 PHP/4.1.3-dev)
>
> It was mentioned that the mime type may not be maintained, but AddType
> application/x-httpd-py .py did not help.
>
> Thanx in advance
>
> _________________________________________________________________
> Chat with friends online, try MSN Messenger: http://messenger.msn.com
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://www.modpython.org/mailman/listinfo/mod_python



From fourie_willem at hotmail.com  Fri Apr  5 03:32:04 2002
From: fourie_willem at hotmail.com (Willem Fourie)
Date: Fri Jan  9 22:03:08 2004
Subject: [mod_python] mptest.py text does not interpret
Message-ID: <F176c4QzPW8AAkjtjsX0000090b@hotmail.com>

Hi Reg

Thanx very much for your reply, but unfortunately I had already removed the 
AddType (tried with and without).

When the ScriptAlias directory points to the WebDir (and mptest.py placed in 
that directory) then it shows the text sans interpretation.

With the config pointing to /python, and the file in that directory and the 
URL pointing to /python/mptest.py the server responds with "The server 
encountered an internal error or misconfiguration and was unable to complete 
your request"

Would appreciate ideas on other avenues perhaps.
Thanx


----Original Message Follows----
From: Reg Charney <charney@charneyday.com>
To: Willem Fourie <fourie_willem@hotmail.com>
CC: mod_python@modpython.org
Subject: Re: [mod_python] mptest.py text does not interpret
Date: Thu, 04 Apr 2002 18:15:53 -0800

I had this same problem. Remove the AddType directive that refers to python
from the httpd.conf file. For some reason, mod_python is not implemented the
same way as PHP4,say.

Reg.

P.S. I never thanked others on the list that lead to this solution. My
apologies and thanks. I was trying to find the reason that I inserted the
AddType statement, but never did. By the time I reached that point, it was
"too late" to thank Ian Clelland <ian@veryfresh.com> and
"Gregory (Grisha) Trubetskoy" <grisha@modpython.org> for their help.

Willem Fourie wrote:

 > Dear reader
 >
 > mptest.py is not being interpreted and simply displays the code in the
 > browser. Other python files attempt to download. Please help.
 >
 > Have made the proscribed mod's to conf (including AddModule mod_python.c)
 > and it checks out OK. /server-info shows that python is indeed installed.
 > (Apache/1.3.24 (Win32) mod_python/2.7.6 Python/2.2.1c1 PHP/4.1.3-dev)
 >
 > It was mentioned that the mime type may not be maintained, but AddType
 > application/x-httpd-py .py did not help.
 >
 > Thanx in advance
 >
 > _________________________________________________________________
 > Chat with friends online, try MSN Messenger: http://messenger.msn.com
 >
 > _______________________________________________
 > Mod_python mailing list
 > Mod_python@modpython.org
 > http://www.modpython.org/mailman/listinfo/mod_python


_______________________________________________
Mod_python mailing list
Mod_python@modpython.org
http://www.modpython.org/mailman/listinfo/mod_python


_________________________________________________________________
Join the worlds largest e-mail service with MSN Hotmail. 
http://www.hotmail.com


From charney at charneyday.com  Thu Apr  4 20:37:55 2002
From: charney at charneyday.com (Reg Charney)
Date: Fri Jan  9 22:03:08 2004
Subject: [mod_python] mptest.py text does not interpret
References: <F176c4QzPW8AAkjtjsX0000090b@hotmail.com>
Message-ID: <3CAD2A23.EA4E1F38@charneyday.com>

Could you please send a copy of the test program you are using. All my problems
started with an invalid test program. My "fixes" kept on making things worse and
worse until I asked the list.

Reg.

Willem Fourie wrote:

> Hi Reg
>
> Thanx very much for your reply, but unfortunately I had already removed the
> AddType (tried with and without).
>
> When the ScriptAlias directory points to the WebDir (and mptest.py placed in
> that directory) then it shows the text sans interpretation.
>
> With the config pointing to /python, and the file in that directory and the
> URL pointing to /python/mptest.py the server responds with "The server
> encountered an internal error or misconfiguration and was unable to complete
> your request"
>
> Would appreciate ideas on other avenues perhaps.
> Thanx
>
>



From sandor.kopanyi at mailbox.hu  Fri Apr  5 13:35:41 2002
From: sandor.kopanyi at mailbox.hu (sandor.kopanyi@mailbox.hu)
Date: Fri Jan  9 22:03:08 2004
Subject: [mod_python] =?iso-8859-2?B?UkU6?=
 =?iso-8859-2?B?W21vZF9weXRob25d?=
 =?iso-8859-2?B?YXJndW1lbnQ=?=
 =?iso-8859-2?B?bWF0Y2hpbmc=?=
 =?iso-8859-2?B?Zm9y?=
 =?iso-8859-2?B?Zm9ybXM=?=
Message-ID: <20020405113541.24258.qmail@web2.mailbox.hu>

[...]
> the <form tag is a way of telling the browser how to lay out a form
> 
> the GET method is a way to tell the HTTP server what you are after
> 
> the POST method is a way to give the HTTP server information
> 
> browsers linking forms to POST/GET requests is an end user convenience
> 
> your code *must* accept that some or all of the fields will 
> not be included for I may manually type
> 
> http://www.ewwef.com/page.html?var1=hello&var2=goodbye
> 
> Also how would you discriminate between a page request and a 
> submission if you expected
> 
> http://www.ewwef.com/page.html?var1=&var2=
> 
> the solution to the poster's problem is a wrapper to his 
> function that checks the parameters for validity (soemthign 
> he shoudl be doing anyway!)

Thanks Matt,
I'm doing anyway param. checking, I just was curious to understand,
why and what... Important is that now it works. BTW: do you know
some good intro about GET/POST? Of course, one can read the RFC
(and it should do it!), but a tutorial always helps... The ones
I found focus on HTML, not on GET/POST.

Best regards,
Sandor
Thanks Matt,

--------------------------------------------------
http://www.mailbox.hu - Mert levelezni kell...




From fourie_willem at hotmail.com  Fri Apr  5 13:59:01 2002
From: fourie_willem at hotmail.com (Willem Fourie)
Date: Fri Jan  9 22:03:08 2004
Subject: [mod_python] mptest.py text does not interpret
Message-ID: <F174zes92ukCSQOWl7h0000de0a@hotmail.com>

Hi Reg

1) mptest.py is:
from mod_python import apache

def handler(req):
	req.content_type = "text/plain"
	req.send_http_header()
	req.write("Hello World!")
	return apache.OK

2) and test.py (called from a form):
#!C:\Program Files\Python22\Lib
import cgi

def main():
	print "Content-type: text/html\n"
	form = cgi.FieldStorage()
	if form.has_key("firstname") and form["firstname"].value != "":
		print "<h1>Hello", form["firstname"].value, "</h1>"
	else:
		print "<h1>Error! Please enter first name.</h1>"

main()


1) displays text and 2) tries to download. Only when in webroot. In 
webroot/python it displays the internal error message.


Thanx then


----Original Message Follows----
From: Reg Charney <charney@charneyday.com>
To: Willem Fourie <fourie_willem@hotmail.com>
CC: mod_python@modpython.org
Subject: Re: [mod_python] mptest.py text does not interpret
Date: Thu, 04 Apr 2002 20:37:55 -0800

Could you please send a copy of the test program you are using. All my 
problems
started with an invalid test program. My "fixes" kept on making things worse 
and
worse until I asked the list.

Reg.

Willem Fourie wrote:

 > Hi Reg
 >
 > Thanx very much for your reply, but unfortunately I had already removed 
the
 > AddType (tried with and without).
 >
 > When the ScriptAlias directory points to the WebDir (and mptest.py placed 
in
 > that directory) then it shows the text sans interpretation.
 >
 > With the config pointing to /python, and the file in that directory and 
the
 > URL pointing to /python/mptest.py the server responds with "The server
 > encountered an internal error or misconfiguration and was unable to 
complete
 > your request"
 >
 > Would appreciate ideas on other avenues perhaps.
 > Thanx
 >
 >




_________________________________________________________________
Send and receive Hotmail on your mobile device: http://mobile.msn.com


From jquinte at fadu.uba.ar  Fri Apr  5 11:16:20 2002
From: jquinte at fadu.uba.ar (Javier Quinteros)
Date: Fri Jan  9 22:03:08 2004
Subject: [mod_python] Same name, different directories...
In-Reply-To: <Pine.BSF.4.32.0204041501460.68385-100000@localhost>
References: <Pine.BSF.4.32.0204041501460.68385-100000@localhost>
Message-ID: <200204050823.LAA28351@www.fadu.uba.ar>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

Well, I want to thank to Grisha, Ian and Jeff for the answers.
I've renamed some of the modules in conflict (as I have told you) and 
everything is working fine. Using different interpreters for different 
directories would have been another solution but that would imply a small 
lowdown in the performance (more memory, maybe swapping), especially if you 
plan to increase the number of directories with python scripts.

I will try in this days using Python packages as Ian recommended.

Comments will be appreciated..

- -- 
- ---------------------------------
Javier Quinteros
jquinte@fadu.uba.ar
Secretar?a de Planificaci?n
Universidad de Buenos Aires
- ---------------------------------
Existe un solo lugar donde el Norte y el Sur del mundo se enfrentan en
igualdad de condiciones: es una cancha de f?tbol de Brasil, en la 
desembocadura
del r?o Amazonas. La l?nea del ecuador corta por la mitad el estadio Zerao, en
Amap?, de modo que cada equipo juega un tiempo en el sur y otro tiempo en el
norte.
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.0.6 (GNU/Linux)
Comment: For info see http://www.gnupg.org

iD8DBQE8rbG1dBzRnlFl4cgRAiSBAJ9XfOax/f3mxQEek+QZnY6KM9lx8ACgpCOa
Tx+Rq5OoN6McNK3Du1D+z3g=
=FFVF
-----END PGP SIGNATURE-----

From s_lott at yahoo.com  Fri Apr  5 06:30:37 2002
From: s_lott at yahoo.com (Steven Lott)
Date: Fri Jan  9 22:03:08 2004
Subject: [mod_python] RE:[mod_python]argumentmatchingforforms
In-Reply-To: <20020405113541.24258.qmail@web2.mailbox.hu>
Message-ID: <20020405143037.31370.qmail@web9608.mail.yahoo.com>

Short version: get puts form arguments into the URL
post puts form arguments into a stream that can be read by
Apache/Modpython.

Generally, GET is a bad idea - form data needs to be encoded to
prevent problems creating a URL - there are limitations on size.

Always use POST - no encoding, no size limitations.

GET is the basic URL -> page loop in HTTP.  It is used for
simple non-form requests.  POST should always be used for form
data.

--- sandor.kopanyi@mailbox.hu wrote:
> [...]
> > the <form tag is a way of telling the browser how to lay out
> a form
> > 
> > the GET method is a way to tell the HTTP server what you are
> after
> > 
> > the POST method is a way to give the HTTP server information
> > 
> > browsers linking forms to POST/GET requests is an end user
> convenience
> > 
> > your code *must* accept that some or all of the fields will 
> > not be included for I may manually type
> > 
> > http://www.ewwef.com/page.html?var1=hello&var2=goodbye
> > 
> > Also how would you discriminate between a page request and a
> 
> > submission if you expected
> > 
> > http://www.ewwef.com/page.html?var1=&var2=
> > 
> > the solution to the poster's problem is a wrapper to his 
> > function that checks the parameters for validity (soemthign 
> > he shoudl be doing anyway!)
> 
> Thanks Matt,
> I'm doing anyway param. checking, I just was curious to
> understand,
> why and what... Important is that now it works. BTW: do you
> know
> some good intro about GET/POST? Of course, one can read the
> RFC
> (and it should do it!), but a tutorial always helps... The
> ones
> I found focus on HTML, not on GET/POST.
> 
> Best regards,
> Sandor
> Thanks Matt,
> 
> --------------------------------------------------
> http://www.mailbox.hu - Mert levelezni kell...
> 
> 
> 
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://www.modpython.org/mailman/listinfo/mod_python


=====
--
S. Lott, CCP :-{)
S_LOTT@YAHOO.COM
http://www.mindspring.com/~slott1
Buccaneer #468: KaDiMa

Macintosh user: drinking upstream from the herd.

__________________________________________________
Do You Yahoo!?
Yahoo! Tax Center - online filing with TurboTax
http://taxes.yahoo.com/

From fourie_willem at hotmail.com  Fri Apr  5 15:12:27 2002
From: fourie_willem at hotmail.com (Willem Fourie)
Date: Fri Jan  9 22:03:08 2004
Subject: [mod_python] mptest.py text does not interpret
Message-ID: <F146NV3LCTosnwO5UGX00000f61@hotmail.com>

Hi Reg

I've copied mptest and mptest.py (same content) to both webroot and 
webroot/python (the ScriptAlias dir). When I run the URL's I get:
1) http://server/mptest - displays text in browser
2) http://server/mptest.py - tries to download
3) http://server/python/mptest - displays text in browser
4) http://server/python/mptest.py - internal server error

It's the same with or without "AddType application/x-httpd-py .py"

Have a phat Phriday
Cheers then


----Original Message Follows----
From: Reg Charney <charney@charneyday.com>
To: Willem Fourie <fourie_willem@hotmail.com>
CC: mod_python@modpython.org
Subject: Re: [mod_python] mptest.py text does not interpret
Date: Thu, 04 Apr 2002 20:37:55 -0800

Could you please send a copy of the test program you are using. All my 
problems
started with an invalid test program. My "fixes" kept on making things worse 
and
worse until I asked the list.

Reg.

Willem Fourie wrote:

 > Hi Reg
 >
 > Thanx very much for your reply, but unfortunately I had already removed 
the
 > AddType (tried with and without).
 >
 > When the ScriptAlias directory points to the WebDir (and mptest.py placed 
in
 > that directory) then it shows the text sans interpretation.
 >
 > With the config pointing to /python, and the file in that directory and 
the
 > URL pointing to /python/mptest.py the server responds with "The server
 > encountered an internal error or misconfiguration and was unable to 
complete
 > your request"
 >
 > Would appreciate ideas on other avenues perhaps.
 > Thanx
 >
 >




_________________________________________________________________
Chat with friends online, try MSN Messenger: http://messenger.msn.com


From asaddi at philosophysw.com  Fri Apr  5 18:43:55 2002
From: asaddi at philosophysw.com (Allan Saddi)
Date: Fri Jan  9 22:03:08 2004
Subject: [mod_python] publisher security concerns
Message-ID: <20020405184014.S25745-100000@kalahari.flup.org>

Hi there,

I'm using mod_python 2.7.6 on FreeBSD. I was playing around with
the publisher handler today when I noticed something of concern.
I scoured the mailing list archives to see if it was mentioned
before, but I found no mention of it. (If it was discussed
before, please point me to the approximate date of the thread.)

Basically, if a module is loaded indirectly (via an import from
within another module), an outside user will be able to call
functions within that module afterward.

So, for example, if I have a script foo.py that imports pgdb
(PyGreSQL), and foo.py is later "published" by publisher,
afterward, I will be able to call functions within pgdb through
publisher. Note though that if a particular Apache child
interpreter instance has never loaded foo.py, it will
(rightfully) reject requests to pgdb.

The problem seems to lie in mod_python.apache.import_module(),
specifically this section of code:

        # keep track of file modification time and
        # try to reload it if it is newer
        if sys.modules.has_key(module_name):

            # the we won't even bother importing
            module = sys.modules[module_name]

            ...

When path is specified and not None (as it normally is when
import_module() is called from publisher), it is ignored if the
module already exists in the global modules list (sys.modules).

I'm a new mod_python user, so I'm not sure if this is a bug or
an intended feature. The impact of this behavior seems to be
limited to pure python modules, so thankfully, modules like os
cannot be exploited this way.  Essentially though, publisher is
exposing interfaces that the programmer may not know are
exposed. And that could be bad...

(Using my pgdb example, I was able to connect to my database
using the right URL... I wasn't able to do much else beyond
that, but that alone seemed scary enough.)

- Allan Saddi
  asaddi@philosophysw.com


From ian at veryfresh.com  Sat Apr  6 01:48:54 2002
From: ian at veryfresh.com (Ian Clelland)
Date: Fri Jan  9 22:03:08 2004
Subject: [mod_python] RE:[mod_python]argumentmatchingforforms
In-Reply-To: <20020405143037.31370.qmail@web9608.mail.yahoo.com>
References: <20020405113541.24258.qmail@web2.mailbox.hu> <20020405143037.31370.qmail@web9608.mail.yahoo.com>
Message-ID: <20020406094854.GC19813@fullfactor.com>

On Fri, Apr 05, 2002 at 06:30:37AM -0800, Steven Lott wrote:
> Short version: get puts form arguments into the URL
> post puts form arguments into a stream that can be read by
> Apache/Modpython.
...
> GET is the basic URL -> page loop in HTTP.  It is used for
> simple non-form requests.  POST should always be used for form
> data.

I'm sorry, but I have to strongly disagree with you on this. While web 
application designers have a tendency to treat GET and POST as 
interchangeable, they really have very different meanings in HTTP.

Long version:

GET should always be used when you are simply retrieving information 
from a web application. The parameters to the GET query, which do form 
part of the URL, should only be used to refine what information you are 
retrieving.

The important thing to remember about GET requests is that they are 
never supposed to have side effects. All it should do is show you 
something that is already on the server, or can be generated from data 
on the erver. GET request aren't supposed to actually 'do' anything, in 
terms of real-world effects, like changing things on the server, or 
sending an email message. This means that the browser should be free to 
re-send the request as many times as it wants to. It also means that 
the results can be cached (which is a good thing - the results of a GET 
query should stay relatively stable, at least over the short term)

POST requests, on the other hand, are specifically for sending data 
which is expected to modify the state of a web server. POST requests 
are expected to have side effects. Because of this, the browser is
*not allowed* to resubmit the request to the server without the user's 
explicit authorisation.

> Generally, GET is a bad idea - form data needs to be encoded to
> prevent problems creating a URL - there are limitations on size.
 
Yes, there is usually a limit imposed on the length of the URL, 
something like 4000 characters, but that should be enough for any 
request. If you ever go over that, you are probably doing something 
that GET was not designed for, like sending information to be saved on 
the server.

> Always use POST - no encoding, no size limitations.
 
POST queries, by default, use the same encoding as GET, 
application/x-www-form-urlencoded, when they are the results of 
submitting an HTML form. When you read POST form data using req.read(), 
you still have to decode strings like "param1=val1&param2=val2", just 
like in GET.

There is another standard for encoding POST data - multipart/form-data 
- which is useful when you want to send lots of binary data, such as a 
file upload. It is much less efficient for simple form data, though, 
and is more work to parse.


Sorry for the rant; I had to get that out :) I really do believe that
proper use of HTTP can only strengthen web applications, though (this
is the primary reason I am using mod_python now, instead of PHP).

--
Ian
<ian@veryfresh.com>

From sam at webslingerZ.com  Mon Apr  8 11:31:31 2002
From: sam at webslingerZ.com (Sam Brauer)
Date: Fri Jan  9 22:03:08 2004
Subject: [mod_python] strange runtime exception
Message-ID: <Pine.LNX.4.33.0204081119140.15787-100000@localhost.localdomain>

I have recently observed an intermittent exception that I think may be 
related to mod_python.  It may also be a Python problem, but I have only 
ever seen it occur under mod_python, so I thought I'd ask here first.

What happens is that I call code like this inside a handler:
utf8string = unicode(val, enc).encode('utf-8')
(where val is a string in an encoding identified by enc)

Most of the time (in fact, for days or even weeks) this works fine.  Then 
every so often I will get the following exception:

exceptions.RuntimeError: cannot unmarshal code objects in restricted 
execution mode
File "/usr/local/lib/python2.2/encodings/__init__.py", line 51, in 
search_function
mod = __import__(modname,globals(),locals(),'*')

Once I encounter this exception, I can hit the same url again and may or
may not get the exception again.  There seems to be no pattern to its
occurrence. But generally, once it occurs it will recur "at random" until
apache is restarted.

Has anyone else seen this before, or have any idea why it's happening?

Many thanks,
Sam

-- 
Sam Brauer
Systems Programmer
sam@webslingerZ.com


From jquinte at fadu.uba.ar  Mon Apr  8 16:19:18 2002
From: jquinte at fadu.uba.ar (Javier Quinteros)
Date: Fri Jan  9 22:03:08 2004
Subject: [mod_python] publisher security concerns
In-Reply-To: <20020405184014.S25745-100000@kalahari.flup.org>
References: <20020405184014.S25745-100000@kalahari.flup.org>
Message-ID: <200204081326.QAA03663@www.fadu.uba.ar>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

Hi !!!
If you are worried about exposing some scripts that should "only" be used 
from other modules importing them, there's an easy solution (and I think it's 
the right one)... ;-)

Suppose you've got a script called interfacedb.py in your directory and it's 
full of functions that access your DB without checking anything, because you 
supose that it was imported from the modules that effectively do the 
checkings. The solution is to put this statement at the beggining of the 
script:

__auth__ = {}

This way, you're telling apache that no one is authorize to access (execute) 
this script. You can only call the functions inside the script if you import 
it from other module. This way you should add this statement to every script 
you don't want to be execute directly, no matter what URL you ask your 
browser.

Sorry if I misunderstood your question....

Hope this help...

On Friday 05 April 2002 23:43, Allan Saddi wrote:
> Hi there,
>
> I'm using mod_python 2.7.6 on FreeBSD. I was playing around with
> the publisher handler today when I noticed something of concern.
> I scoured the mailing list archives to see if it was mentioned
> before, but I found no mention of it. (If it was discussed
> before, please point me to the approximate date of the thread.)
>
> Basically, if a module is loaded indirectly (via an import from
> within another module), an outside user will be able to call
> functions within that module afterward.
>
> So, for example, if I have a script foo.py that imports pgdb
> (PyGreSQL), and foo.py is later "published" by publisher,
> afterward, I will be able to call functions within pgdb through
> publisher. Note though that if a particular Apache child
> interpreter instance has never loaded foo.py, it will
> (rightfully) reject requests to pgdb.
>
> The problem seems to lie in mod_python.apache.import_module(),
> specifically this section of code:
>
>         # keep track of file modification time and
>         # try to reload it if it is newer
>         if sys.modules.has_key(module_name):
>
>             # the we won't even bother importing
>             module = sys.modules[module_name]
>
>             ...
>
> When path is specified and not None (as it normally is when
> import_module() is called from publisher), it is ignored if the
> module already exists in the global modules list (sys.modules).
>
> I'm a new mod_python user, so I'm not sure if this is a bug or
> an intended feature. The impact of this behavior seems to be
> limited to pure python modules, so thankfully, modules like os
> cannot be exploited this way.  Essentially though, publisher is
> exposing interfaces that the programmer may not know are
> exposed. And that could be bad...
>
> (Using my pgdb example, I was able to connect to my database
> using the right URL... I wasn't able to do much else beyond
> that, but that alone seemed scary enough.)
>
> - Allan Saddi
>   asaddi@philosophysw.com
>

- -- 
- ---------------------------------
Javier Quinteros
jquinte@fadu.uba.ar
Secretar?a de Planificaci?n
Universidad de Buenos Aires
- ---------------------------------
Existe un solo lugar donde el Norte y el Sur del mundo se enfrentan en
igualdad de condiciones: es una cancha de f?tbol de Brasil, en la 
desembocadura
del r?o Amazonas. La l?nea del ecuador corta por la mitad el estadio Zerao, en
Amap?, de modo que cada equipo juega un tiempo en el sur y otro tiempo en el
norte.
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.0.6 (GNU/Linux)
Comment: For info see http://www.gnupg.org

iD8DBQE8se02dBzRnlFl4cgRAilyAJ9HCNjVlEHoG/zbv/A1XSx3P98RkwCg5ATw
D4QDlDayZurKXPr+QjhRX9E=
=Ji5h
-----END PGP SIGNATURE-----

From asaddi at philosophysw.com  Mon Apr  8 13:34:11 2002
From: asaddi at philosophysw.com (Allan Saddi)
Date: Fri Jan  9 22:03:08 2004
Subject: [mod_python] publisher security concerns
In-Reply-To: <200204081326.QAA03663@www.fadu.uba.ar>
Message-ID: <20020408132027.E17910-100000@kalahari.flup.org>

Hi Javier,

That was very helpful, and yes, it does actually sound like the
"right" solution. :) The only drawback is that any third-party
modules (that is, modules that you didn't write yourself) will
have to be modified similarly. This may or may not be an easy
task, depending on the number of such modules you use in your
project. (And what about Python standard modules?)

I guess I'm basically looking for a "deny by default" type of
solution, which can easily be done by modifying publisher. But
such changes would break publisher's generalness and existing
apps built around publisher, so I guess it's not a very useful
thing to implement in the mod_python distribution.

Thanks.
- Allan

On Mon, 8 Apr 2002, Javier Quinteros wrote:

> Hi !!!
> If you are worried about exposing some scripts that should "only" be used
> from other modules importing them, there's an easy solution (and I think it's
> the right one)... ;-)
>
> Suppose you've got a script called interfacedb.py in your directory and it's
> full of functions that access your DB without checking anything, because you
> supose that it was imported from the modules that effectively do the
> checkings. The solution is to put this statement at the beggining of the
> script:
>
> __auth__ = {}
>
> This way, you're telling apache that no one is authorize to access (execute)
> this script. You can only call the functions inside the script if you import
> it from other module. This way you should add this statement to every script
> you don't want to be execute directly, no matter what URL you ask your
> browser.
>
> Sorry if I misunderstood your question....
>
> Hope this help...


From jquinte at fadu.uba.ar  Mon Apr  8 18:15:08 2002
From: jquinte at fadu.uba.ar (Javier Quinteros)
Date: Fri Jan  9 22:03:08 2004
Subject: [mod_python] publisher security concerns
In-Reply-To: <20020408132027.E17910-100000@kalahari.flup.org>
References: <20020408132027.E17910-100000@kalahari.flup.org>
Message-ID: <200204081522.SAA06372@www.fadu.uba.ar>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

Don't be worried about Python standard modules. The only things that anyone 
can execute via URL is the scripts you have in the Directory defined in 
apache. This means that all the third-party modules can be placed in 
/usr/local/python2/lib (or whatever) with Python standard modules and will 
not be exposed via apache.

Bye,

On Monday 08 April 2002 17:34, Allan Saddi wrote:
> Hi Javier,
>
> That was very helpful, and yes, it does actually sound like the
> "right" solution. :) The only drawback is that any third-party
> modules (that is, modules that you didn't write yourself) will
> have to be modified similarly. This may or may not be an easy
> task, depending on the number of such modules you use in your
> project. (And what about Python standard modules?)

- -- 
- ---------------------------------
Javier Quinteros
jquinte@fadu.uba.ar
Secretar?a de Planificaci?n
Universidad de Buenos Aires
- ---------------------------------
Existe un solo lugar donde el Norte y el Sur del mundo se enfrentan en
igualdad de condiciones: es una cancha de f?tbol de Brasil, en la 
desembocadura
del r?o Amazonas. La l?nea del ecuador corta por la mitad el estadio Zerao, en
Amap?, de modo que cada equipo juega un tiempo en el sur y otro tiempo en el
norte.
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.0.6 (GNU/Linux)
Comment: For info see http://www.gnupg.org

iD8DBQE8sghddBzRnlFl4cgRAi6AAJ9imwImXJLSSgT0r5/ZACI5pFzEUwCeOtRO
i94azxuFCdMoI1YMJ56qB6o=
=lQ1c
-----END PGP SIGNATURE-----

From asaddi at philosophysw.com  Mon Apr  8 15:05:28 2002
From: asaddi at philosophysw.com (Allan Saddi)
Date: Fri Jan  9 22:03:08 2004
Subject: [mod_python] publisher security concerns
In-Reply-To: <200204081522.SAA06372@www.fadu.uba.ar>
Message-ID: <20020408144431.D47255-100000@kalahari.flup.org>

I've found that this is only true when the module is loaded for
the first time. If the module is already loaded, regardless of
where it was loaded from, then you can access it via URL.

For example, since publisher.py imports base64, you can call
functions within base64 via URL:

  http://website/some/path/base64/encodestring?s=foobar

And this actually works for me. (Using FreeBSD 4.5, Apache
1.3.24, mod_python 2.7.6, Python 2.2)

My .htaccess is simply:

  PythonPath "['/some/directory', '/usr/local/lib/python2.2', '/usr/local/lib/python2.2/lib-dynload', '/usr/local/lib/python2.2/site-packages']"
  SetHandler python-program
  PythonHandler mod_python.publisher
  PythonDebug on

- Allan

On Mon, 8 Apr 2002, Javier Quinteros wrote:

> Don't be worried about Python standard modules. The only things that anyone
> can execute via URL is the scripts you have in the Directory defined in
> apache. This means that all the third-party modules can be placed in
> /usr/local/python2/lib (or whatever) with Python standard modules and will
> not be exposed via apache.
>
> Bye,


From jquinte at fadu.uba.ar  Mon Apr  8 20:00:44 2002
From: jquinte at fadu.uba.ar (Javier Quinteros)
Date: Fri Jan  9 22:03:08 2004
Subject: [mod_python] publisher security concerns
In-Reply-To: <20020408144431.D47255-100000@kalahari.flup.org>
References: <20020408144431.D47255-100000@kalahari.flup.org>
Message-ID: <200204081707.UAA07983@www.fadu.uba.ar>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

Allan:
????????You're right and now..... Houston, Houston. We have a problem....
Does anyone know how to solve this?

On Monday 08 April 2002 19:05, Allan Saddi wrote:
> I've found that this is only true when the module is loaded for
> the first time. If the module is already loaded, regardless of
> where it was loaded from, then you can access it via URL.
>
> For example, since publisher.py imports base64, you can call
> functions within base64 via URL:
>
>   http://website/some/path/base64/encodestring?s=foobar
>
> And this actually works for me. (Using FreeBSD 4.5, Apache
> 1.3.24, mod_python 2.7.6, Python 2.2)
>
> My .htaccess is simply:
>
>   PythonPath "['/some/directory', '/usr/local/lib/python2.2',
> '/usr/local/lib/python2.2/lib-dynload',
> '/usr/local/lib/python2.2/site-packages']" SetHandler python-program
>   PythonHandler mod_python.publisher
>   PythonDebug on
>
> - Allan

- -- 
- ---------------------------------
Javier Quinteros
jquinte@fadu.uba.ar
Secretar?a de Planificaci?n
Universidad de Buenos Aires
- ---------------------------------
Existe un solo lugar donde el Norte y el Sur del mundo se enfrentan en
igualdad de condiciones: es una cancha de f?tbol de Brasil, en la 
desembocadura
del r?o Amazonas. La l?nea del ecuador corta por la mitad el estadio Zerao, en
Amap?, de modo que cada equipo juega un tiempo en el sur y otro tiempo en el
norte.
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.0.6 (GNU/Linux)
Comment: For info see http://www.gnupg.org

iD8DBQE8siEcdBzRnlFl4cgRAuOiAKCqPxaDUL9KTi7BYLevQF9LDtynCQCgrj8Y
kWv27tFfobuj7JnU1kfptXo=
=L9NU
-----END PGP SIGNATURE-----

From jfk at metation.com  Tue Apr  9 10:11:33 2002
From: jfk at metation.com (=?iso-8859-1?q?J=F8rgen=20Fr=F8jk=20Kj=E6rsgaard=20{Metation}?=)
Date: Fri Jan  9 22:03:08 2004
Subject: [mod_python] Status for mod_python for Apache 2.0
Message-ID: <02040910113300.00295@grace.informaticon.dk>

Hi,

Apache 2.0 has come out. What is the status of mod_python for Apache 2.0? Is 
it being worked on at the moment; are there any release plans for a stable 
version?

regards, jfk

-- 
J?rgen Fr?jk Kj?rsgaard, direkt?r og systemkonsulent
Metation aps - Kystvejen 29, DK-8000 ?rhus C
Web: www.metation.com  - Tlf: +45 8625 0038 - Mobil: +45 2925 6693

From grisha at modpython.org  Tue Apr  9 08:38:54 2002
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 22:03:08 2004
Subject: [mod_python] Status for mod_python for Apache 2.0
In-Reply-To: <02040910113300.00295@grace.informaticon.dk>
Message-ID: <Pine.BSF.4.32.0204090838250.35893-100000@localhost>

It's being worked on. I wouldn't expect a release for another couple of
weeks at least.

Grisha

On Tue, 9 Apr 2002, [iso-8859-1] J?rgen Fr?jk Kj?rsgaard {Metation} wrote:

> Hi,
>
> Apache 2.0 has come out. What is the status of mod_python for Apache 2.0? Is
> it being worked on at the moment; are there any release plans for a stable
> version?
>
> regards, jfk
>
> --
> J?rgen Fr?jk Kj?rsgaard, direkt?r og systemkonsulent
> Metation aps - Kystvejen 29, DK-8000 ?rhus C
> Web: www.metation.com  - Tlf: +45 8625 0038 - Mobil: +45 2925 6693
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://www.modpython.org/mailman/listinfo/mod_python
>


From roy.smith at micromuse.com  Tue Apr  9 22:14:29 2002
From: roy.smith at micromuse.com (Roy Smith)
Date: Fri Jan  9 22:03:08 2004
Subject: [mod_python] Changes to modules seem to get cached
In-Reply-To: <200204091752.g39Hq1s39009@eden.ispol.com>
Message-ID: <47119735.3227379269@[192.168.1.33]>

I'm running:

Apache 1.3.22
Python 2.1.2
mod_python 2.7.6
Red Hat 6.2
Netscape 4.72

I'm just starting to play around with mod_python.  So far it seems pretty 
neat, but I don't quite understand how mod_python notices when a module 
gets updated, and what it does when it notices.

Most of the time, if I edit my python file and reload my browser window, I 
get the results of the new module.  Sometimes, however, it seems like I've 
got to reload twice to see the effect of the change.  This seems to be more 
likely to happen if the last version of the module generated an error. 
Even weirder, I can get into states where if I keep hitting reload, I'll 
cycle through a number of different earlier versions of the page.

I've got several httpd's running, and I'm guessing each time I do a reload 
it gets served by a different process, and apparantly each process has a 
different version of the module cached.  What I don't understand is why 
each process doesn't notice that the disk file has changed and re-import 
the module.  Or maybe my understanding of what's going on is totally off 
the wall?



--
Roy Smith
Staff Engineer
Visionary Model Development
roy.smith@micromuse.com
+1 914 747 7612


From stony8 at gmx.de  Wed Apr 10 06:54:45 2002
From: stony8 at gmx.de (Alexander Steinert)
Date: Fri Jan  9 22:03:08 2004
Subject: [mod_python] Changes to modules seem to get cached
In-Reply-To: <47119735.3227379269@[192.168.1.33]>; from roy.smith@micromuse.com on Tue, Apr 09, 2002 at 10:14:29PM -0400
References: <200204091752.g39Hq1s39009@eden.ispol.com> <47119735.3227379269@[192.168.1.33]>
Message-ID: <20020410065445.B642@tyche.svt.tu-harburg.de>

> I'm just starting to play around with mod_python.  So far it seems pretty 
> neat, but I don't quite understand how mod_python notices when a module 
> gets updated, and what it does when it notices.

Read
http://www.modpython.org/live/mod_python-2.7.6/doc-html/dir-other-par.html

IIRC, only modules imported by mod_python code (e.g. modules addressed
via URL using the publisher handler or modules specified as handlers in
httpd.conf) get reloaded automatically.

I _always_ reload apache before testing a change, because I often got
strange errors when I didn't.

HTH

Stony


From grisha at modpython.org  Wed Apr 10 10:56:06 2002
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 22:03:08 2004
Subject: [mod_python] publisher security concerns
In-Reply-To: <200204081707.UAA07983@www.fadu.uba.ar>
Message-ID: <Pine.BSF.4.32.0204101040140.50663-100000@localhost>

After a little bit of thinking, this looks like essentially a bug - the
Publisher (unlike the native mod_python handler) should not allow access
to files that are not in the directory which is being requested.

Another way to tackle it is require something like a __publish__ variable
to be defined inside the module, but I think that would be overkill.

This is obviously a serious security issue, so I will have to rush a
release out the door to fix it.

It seems that one can only (ab)use modules that already imported, and of
those only the ones that are native - but that in itself is already enough
to cause minial harm, e.g.:

http://website/some/path/os/makedirs?name=/tmp/hello

will create a direcroty "hello" in /tmp

I couldn't think of anything more harmful than this yet, but if someone
can come up with a more evil example, please e-mail me (off list perhaps).

Grisha



On Mon, 8 Apr 2002, Javier Quinteros wrote:

> -----BEGIN PGP SIGNED MESSAGE-----
> Hash: SHA1
>
> Allan:
> ????????You're right and now..... Houston, Houston. We have a problem....
> Does anyone know how to solve this?
>
> On Monday 08 April 2002 19:05, Allan Saddi wrote:
> > I've found that this is only true when the module is loaded for
> > the first time. If the module is already loaded, regardless of
> > where it was loaded from, then you can access it via URL.
> >
> > For example, since publisher.py imports base64, you can call
> > functions within base64 via URL:
> >
> >   http://website/some/path/base64/encodestring?s=foobar
> >
> > And this actually works for me. (Using FreeBSD 4.5, Apache
> > 1.3.24, mod_python 2.7.6, Python 2.2)
> >
> > My .htaccess is simply:
> >
> >   PythonPath "['/some/directory', '/usr/local/lib/python2.2',
> > '/usr/local/lib/python2.2/lib-dynload',
> > '/usr/local/lib/python2.2/site-packages']" SetHandler python-program
> >   PythonHandler mod_python.publisher
> >   PythonDebug on
> >
> > - Allan
>
> - --
> - ---------------------------------
> Javier Quinteros
> jquinte@fadu.uba.ar
> Secretar?a de Planificaci?n
> Universidad de Buenos Aires
> - ---------------------------------
> Existe un solo lugar donde el Norte y el Sur del mundo se enfrentan en
> igualdad de condiciones: es una cancha de f?tbol de Brasil, en la
> desembocadura
> del r?o Amazonas. La l?nea del ecuador corta por la mitad el estadio Zerao, en
> Amap?, de modo que cada equipo juega un tiempo en el sur y otro tiempo en el
> norte.
> -----BEGIN PGP SIGNATURE-----
> Version: GnuPG v1.0.6 (GNU/Linux)
> Comment: For info see http://www.gnupg.org
>
> iD8DBQE8siEcdBzRnlFl4cgRAuOiAKCqPxaDUL9KTi7BYLevQF9LDtynCQCgrj8Y
> kWv27tFfobuj7JnU1kfptXo=
> =L9NU
> -----END PGP SIGNATURE-----
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://www.modpython.org/mailman/listinfo/mod_python
>


From grisha at modpython.org  Wed Apr 10 18:06:04 2002
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 22:03:08 2004
Subject: [mod_python] Announce: 2.7.7
In-Reply-To: <200204081707.UAA07983@www.fadu.uba.ar>
Message-ID: <Pine.BSF.4.32.0204101755320.56871-100000@localhost>

I have released mod_python 2.7.7.

This release (as far as I could tell adequately) addresses the security
issue whereby a module indirectly imported by a published module could
then be accessed via the publisher.

It is highly recommended that you upgrade, especially if you use the
publisher.

A quick way to upgrade is to just replace the apache.py file and restart
httpd - everything else is pretty much the same except for the verion
number. Windows users should still be able to use the 2.7.6 DLL with the
new apache.py.

Grisha



From Nik.Barron at pennantplc.co.uk  Thu Apr 11 16:18:17 2002
From: Nik.Barron at pennantplc.co.uk (Nik Barron)
Date: Fri Jan  9 22:03:08 2004
Subject: [mod_python] Query about authentication/authorization win Apache on Win32
Message-ID: <F17550784FF9D111B7F100E02921B24741E828@NT-SOTON-001>

Hi,

I have a problem getting authentication/authorization working. In Apache I
have the following:

   <IfModule mod_python.c>
    <Directory "C:/Programs/Internet/Apache/htdocs/plcsreqs">
	AddHandler python-program .py
   	PythonHandler test2
	PythonAuthenHandler test2
   	PythonDebug on

	AuthType Basic
	AuthName "nicepeople"
	AuthUserFile "C:/Programs/Internet/Apache/conf/users"
	Require valid-user
    </Directory>
  </IfModule>

The Auth... stuff works fine for a "normal" directory, so the file is
readable etc, and my mod_python script works fine with no authentication.

My test script has an authenhandler as follows:

  def authenhandler(req):
	
	global user

	pw = req.get_basic_auth_pw()
	user = req.connection.user
	
	return apache.OK

Currently all I want to do is grab the user's name from their Apache login.

Now, if the user logs in to another page on the site before going to the
mod_python script, everything works as expected and the username is passed
to the rest of my code in the global variable 'user'. 

But if you go directly to the mod_python script (e.g.
http://myhost/plcsreq/test.py), it goes through as "None", and the broswer
doesn't pop up a username/password box.

I'm guessing this is going to be some stupid error on my part, but I can't
seem to get it working. Any suggestions most welcome.

Thanks!

Nick Barron
Manager, E-Services Division
Pennant Information Services Ltd -- Registered in England No. 3772667
PGP: A94C 4190 026E 3E02 6D50  C8FA 8620 3091 FF34 533D

From reitz at inworks.de  Thu Apr 11 17:05:59 2002
From: reitz at inworks.de (Andre Reitz)
Date: Fri Jan  9 22:03:08 2004
Subject: [mod_python] Announce: 2.7.7
In-Reply-To: <Pine.BSF.4.32.0204101755320.56871-100000@localhost>
References: <200204081707.UAA07983@www.fadu.uba.ar>
	<Pine.BSF.4.32.0204101755320.56871-100000@localhost>
Message-ID: <20020411170559.5277a53d.reitz@inworks.de>

On Wed, 10 Apr 2002 18:06:04 -0400 (EDT)
"Gregory (Grisha) Trubetskoy" <grisha@modpython.org> wrote:

> 
> I have released mod_python 2.7.7.
> 
> This release (as far as I could tell adequately) addresses the security
> issue whereby a module indirectly imported by a published module could
> then be accessed via the publisher.
> 
> It is highly recommended that you upgrade, especially if you use the
> publisher.
> 
> A quick way to upgrade is to just replace the apache.py file and restart
> httpd - everything else is pretty much the same except for the verion
> number. Windows users should still be able to use the 2.7.6 DLL with the
> new apache.py.
> 
> Grisha

Did you forget to patch apache.py?? (The boo boo)


def setup_cgi(req):
    """
    Replace sys.stdin and stdout with an objects that read/write to
    the socket, as well as substitute the os.environ.
    Returns (environ, stdin, stdout) which you must save and then use
    with restore_nocgi().
    """

    # save env
    env = os.environ.copy()            <------(1)
    
    si = sys.stdin
    so = sys.stdout

    env = build_cgi_env(req)
 
    for k in env.keys():
        os.environ[k] = env[k]

    sys.stdout = CGIStdout(req)
    sys.stdin = CGIStdin(req)

    sys.argv = [] # keeps cgi.py happy

    return env, si, so		<--------(2)
> 

(1) : originalenv=os.environ.copy()
(2) : return originalenv,si,so




> 
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://www.modpython.org/mailman/listinfo/mod_python


-- 
_____________________________________________
inworks GmbH            Andre Reitz		
Magirusstrasse 44	Tel. 0731/93 80 7-21
89077 Ulm		http://www.inworks.de


From zoppi at cli.di.unipi.it  Thu Apr 11 18:27:44 2002
From: zoppi at cli.di.unipi.it (Giorgio Zoppi)
Date: Fri Jan  9 22:03:08 2004
Subject: [mod_python] publisher security concerns
In-Reply-To: <Pine.BSF.4.32.0204101040140.50663-100000@localhost>
Message-ID: <Pine.GSO.4.00.10204111821520.4173-100000@carlotta.cli.di.unipi.it>

On Wed, 10 Apr 2002, Gregory (Grisha) Trubetskoy wrote:

> 
> After a little bit of thinking, this looks like essentially a bug - the
> Publisher (unlike the native mod_python handler) should not allow access
> to files that are not in the directory which is being requested.
> 
> Another way to tackle it is require something like a __publish__ variable
> to be defined inside the module, but I think that would be overkill.
> 
> This is obviously a serious security issue, so I will have to rush a
> release out the door to fix it.

You can allow people to list security policies.
For example: 
- these modules are safe, and can be used, ala default deny stance.
This however doesn't solve the issue, but allow to restrict
potential problems.



From grisha at modpython.org  Thu Apr 11 13:07:51 2002
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 22:03:08 2004
Subject: [mod_python] Announce: 2.7.7
In-Reply-To: <20020411170559.5277a53d.reitz@inworks.de>
Message-ID: <Pine.BSF.4.32.0204111304190.66803-100000@localhost>

My appologies - I must have forgotten to check it in after the patch or
something...

On Thu, 11 Apr 2002, Andre Reitz wrote:

> On Wed, 10 Apr 2002 18:06:04 -0400 (EDT)
> "Gregory (Grisha) Trubetskoy" <grisha@modpython.org> wrote:
>
> >
> > I have released mod_python 2.7.7.
> >
> > This release (as far as I could tell adequately) addresses the security
> > issue whereby a module indirectly imported by a published module could
> > then be accessed via the publisher.
> >
> > It is highly recommended that you upgrade, especially if you use the
> > publisher.
> >
> > A quick way to upgrade is to just replace the apache.py file and restart
> > httpd - everything else is pretty much the same except for the verion
> > number. Windows users should still be able to use the 2.7.6 DLL with the
> > new apache.py.
> >
> > Grisha
>
> Did you forget to patch apache.py?? (The boo boo)
>
>
> def setup_cgi(req):
>     """
>     Replace sys.stdin and stdout with an objects that read/write to
>     the socket, as well as substitute the os.environ.
>     Returns (environ, stdin, stdout) which you must save and then use
>     with restore_nocgi().
>     """
>
>     # save env
>     env = os.environ.copy()            <------(1)
>
>     si = sys.stdin
>     so = sys.stdout
>
>     env = build_cgi_env(req)
>
>     for k in env.keys():
>         os.environ[k] = env[k]
>
>     sys.stdout = CGIStdout(req)
>     sys.stdin = CGIStdin(req)
>
>     sys.argv = [] # keeps cgi.py happy
>
>     return env, si, so		<--------(2)
> >
>
> (1) : originalenv=os.environ.copy()
> (2) : return originalenv,si,so
>
>
>
>
> >
> > _______________________________________________
> > Mod_python mailing list
> > Mod_python@modpython.org
> > http://www.modpython.org/mailman/listinfo/mod_python
>
>
> --
> _____________________________________________
> inworks GmbH            Andre Reitz
> Magirusstrasse 44	Tel. 0731/93 80 7-21
> 89077 Ulm		http://www.inworks.de
>


From reitz at inworks.de  Thu Apr 11 18:10:41 2002
From: reitz at inworks.de (Andre Reitz)
Date: Fri Jan  9 22:03:08 2004
Subject: [mod_python] Announce: 2.7.7
In-Reply-To: <Pine.BSF.4.32.0204111304190.66803-100000@localhost>
References: <20020411170559.5277a53d.reitz@inworks.de>
	<Pine.BSF.4.32.0204111304190.66803-100000@localhost>
Message-ID: <20020411181041.38859da7.reitz@inworks.de>

On Thu, 11 Apr 2002 13:07:51 -0400 (EDT)
"Gregory (Grisha) Trubetskoy" <grisha@modpython.org> wrote:

> 
> My appologies - I must have forgotten to check it in after the patch or
> something...
> 
Will you release Version 2.7.8 tomorrow with the bugfix included? :)

Greetings, Andre'

> On Thu, 11 Apr 2002, Andre Reitz wrote:
> 
> > On Wed, 10 Apr 2002 18:06:04 -0400 (EDT)
> > "Gregory (Grisha) Trubetskoy" <grisha@modpython.org> wrote:
> >
> > >
> > > I have released mod_python 2.7.7.
> > >
> > > This release (as far as I could tell adequately) addresses the security
> > > issue whereby a module indirectly imported by a published module could
> > > then be accessed via the publisher.
> > >
> > > It is highly recommended that you upgrade, especially if you use the
> > > publisher.
> > >
> > > A quick way to upgrade is to just replace the apache.py file and restart
> > > httpd - everything else is pretty much the same except for the verion
> > > number. Windows users should still be able to use the 2.7.6 DLL with the
> > > new apache.py.
> > >
> > > Grisha
> >
> > Did you forget to patch apache.py?? (The boo boo)
> >
> >
> > def setup_cgi(req):
> >     """
> >     Replace sys.stdin and stdout with an objects that read/write to
> >     the socket, as well as substitute the os.environ.
> >     Returns (environ, stdin, stdout) which you must save and then use
> >     with restore_nocgi().
> >     """
> >
> >     # save env
> >     env = os.environ.copy()            <------(1)
> >
> >     si = sys.stdin
> >     so = sys.stdout
> >
> >     env = build_cgi_env(req)
> >
> >     for k in env.keys():
> >         os.environ[k] = env[k]
> >
> >     sys.stdout = CGIStdout(req)
> >     sys.stdin = CGIStdin(req)
> >
> >     sys.argv = [] # keeps cgi.py happy
> >
> >     return env, si, so		<--------(2)
> > >
> >
> > (1) : originalenv=os.environ.copy()
> > (2) : return originalenv,si,so
> >
> >
> >
> >
> > >
> > > _______________________________________________
> > > Mod_python mailing list
> > > Mod_python@modpython.org
> > > http://www.modpython.org/mailman/listinfo/mod_python
> >
> >
> > --
> > _____________________________________________
> > inworks GmbH            Andre Reitz
> > Magirusstrasse 44	Tel. 0731/93 80 7-21
> > 89077 Ulm		http://www.inworks.de
> >
> 


-- 
_____________________________________________
inworks GmbH            Andre Reitz		
Magirusstrasse 44	Tel. 0731/93 80 7-21
89077 Ulm		http://www.inworks.de


From chris at vindaloo.com  Thu Apr 11 15:31:10 2002
From: chris at vindaloo.com (Christopher Sean Hilton)
Date: Fri Jan  9 22:03:09 2004
Subject: [mod_python] file question with mod_python
In-Reply-To: <Pine.BSF.4.32.0204111304190.66803-100000@localhost>; from grisha@modpython.org on Thu, Apr 11, 2002 at 01:07:51PM -0400
References: <20020411170559.5277a53d.reitz@inworks.de> <Pine.BSF.4.32.0204111304190.66803-100000@localhost>
Message-ID: <20020411153110.B2101@andale.vindaloo.com>

I'm trying to create a script to handle a file upload from a form with 
mod_python. I know that I should be looking into the util module but I've 
really got no clue about how to get started. Has anyone got some words of 
wisdom to put me on the right track? For more background I'd like to have a 
remote program encode a transaction in xml and post that file to me so I can 
unwrap it and apply the transaction to my database.

Thanks
Chris

-- 
Chris Hilton                                 chilton-at-vindaloo-dot-com
------------------------------------------------------------------------
                "All I was doing was trying to get home from work!"
                                                 -- Rosa Parks

From tree at basistech.com  Thu Apr 11 16:14:14 2002
From: tree at basistech.com (Tom Emerson)
Date: Fri Jan  9 22:03:09 2004
Subject: [mod_python] file question with mod_python
In-Reply-To: <20020411153110.B2101@andale.vindaloo.com>
References: <20020411170559.5277a53d.reitz@inworks.de>
	<Pine.BSF.4.32.0204111304190.66803-100000@localhost>
	<20020411153110.B2101@andale.vindaloo.com>
Message-ID: <15541.61078.473435.259679@magrathea.basistech.com>

Christopher Sean Hilton writes:
> I'm trying to create a script to handle a file upload from a form with 
> mod_python. I know that I should be looking into the util module but I've 
> really got no clue about how to get started. Has anyone got some words of 
> wisdom to put me on the right track?

I've done this using publisher: it's certainly the easiest way.

Given a form along the lines of:

<form action="process.py/doit" method="POST" enctype="multipart/form-data">
<b>Filename</b>: <input type="file" name="file">
</form>

And a form handler "doit" in process.py:

def doit(req, file):
    # ...

The 'file' argument is a file object representing the uploaded file:
you can read from this as you would any other file.

You should check to make sure that the file has a non-zero length:

import os, stat
statinfo = os.fstat(file.fileno())
if statinfo[stat.ST_SIZE] > 0:
    # process the text
else:
    # it's an empty file, or it didn't exist!

You should also look at the content type of the uploaded file. You can
access this via the form table in the request record:

_file = req.form['file']
if _file.type == "text/plain":
    # process plain text

That should be enough to get you started, I expect.

    -tree

-- 
Tom Emerson                                          Basis Technology Corp.
Sr. Computational Linguist                         http://www.basistech.com
  "Beware the lollipop of mediocrity: lick it once and you suck forever"

From Nik.Barron at pennantplc.co.uk  Fri Apr 12 12:18:51 2002
From: Nik.Barron at pennantplc.co.uk (Nik Barron)
Date: Fri Jan  9 22:03:09 2004
Subject: [mod_python] mod_python.publisher problems: 404s on second and subsequent hits
Message-ID: <F17550784FF9D111B7F100E02921B24741E83A@NT-SOTON-001>

I've been trying to get pubisher working using the example from the docs
(Chapter 6); I have "Hello.py" and the Apache config as in the docs under
section 6.1.1, running under Apache on Win32

The first time the URL is accessed everything works as expected. After that,
all I get is a 404 error until the server is restarted. I'm guessing I need
something to make the module persistent

Any ideas? There's nothing obvious in the logs, other than the 200 for the
first hit and 404s after that.

Thanks in advance,

Nick Barron
Manager, E-Services Division
Pennant Information Services Ltd -- Registered in England No. 3772667
PGP: A94C 4190 026E 3E02 6D50  C8FA 8620 3091 FF34 533D

From msdemlei at cl.uni-heidelberg.de  Sat Apr 13 18:15:47 2002
From: msdemlei at cl.uni-heidelberg.de (Markus Demleitner)
Date: Fri Jan  9 22:03:09 2004
Subject: [mod_python] What's the deal with _apachemodule?
Message-ID: <20020413161547.GB23274@tucana.cl.uni-heidelberg.de>

Hi list,

I'm trying to compile modpython 2.7.7 together with apache 1.3.23
and python 2.2 -- which works after some fiddling with the libs
python was linked to.  I know that the prerequisites don't state 
that 2.2 is supported, but I couldn't see how my problem could
be linked with the python version.

When I'm actually trying to let some test script run, I get
Traceback (most recent call last):
  File "/home/unimut/www/cgi-bin/modpython.py", line 4, in ?
    from mod_python import apache
  File "/usr/local/lib/python2.2/site-packages/mod_python/apache.py", line 55, in ?
    import _apache
ImportError: No module named _apache
in the server log.

That's fair enough, because there is no _apachemodule.so in
.../site-packages/mod_python, or anywhere else on the
python path.

Now, I say to myself, it's got be somewhere and check the
source directory -- lo and behold, there's _apachemodule.o
all right.  So, I link it to a dso -- and only get an undefined
symbol MpServer_Type.  That's in one of the .o's in .../src,
so I simply link all .o together.

The resulting _apachemodule.so says:
  File "/home/unimut/www/cgi-bin/modpython.py", line 4, in ?
    from mod_python import apache
  File "/usr/local/lib/python2.2/site-packages/mod_python/apache.py", line 55, in ?
    import _apache
ImportError: /usr/local/lib/python2.2/site-packages/mod_python/_apachemodule.so: undefined symbol: ap_log_error

This symbol is imported by _apachemodule.o itself -- so it's
unlikely that I have overlinked.

At this point I gave up, thinking I must be doing something extraordinarily
stupid.

So, what's the deal?  _apachemodule.so isn't mentioned anywhere in the
source tree, but it seems to be required to satisfy the import _apache
statement.  What might the solution to this riddle be?

        Markus

From rien at yeepa.org  Sat Apr 13 22:58:19 2002
From: rien at yeepa.org (Adrien Plisson)
Date: Fri Jan  9 22:03:09 2004
Subject: [mod_python] What's the deal with _apachemodule?
References: <20020413161547.GB23274@tucana.cl.uni-heidelberg.de>
Message-ID: <001001c1e32d$f15aae90$2cee4cd4@RANDOM>

From: "Markus Demleitner" <msdemlei@cl.uni-heidelberg.de>
> ...
> So, what's the deal?  _apachemodule.so isn't mentioned anywhere in the
> source tree, but it seems to be required to satisfy the import _apache
> statement.  What might the solution to this riddle be?

if i remember right, this problem is due to the fact the the _apache module
works *only* in an apache environment, that is, only when imported in a
module which is called from mod_python which runs on a launched apache
server.

quoted from the doc:
"4.3 apache - Access to Apache Internals.

The Python Application Programmer interface to Apache internals is contained
in a module appropriately named
apache, located inside the mod python package. This module provides some
important objects that map to Apache
internal structures, as well as some useful functions, all documented below.
The apache module can only be imported by a script running under mod python.
This is because it depends on a
built-in module apache provided by mod python."

here it is, don't try to test mod_python from a standalone script.

i hope i 'd been helpful.

--
rien


From msdemlei at cl.uni-heidelberg.de  Sun Apr 14 00:01:21 2002
From: msdemlei at cl.uni-heidelberg.de (msdemlei@cl.uni-heidelberg.de)
Date: Fri Jan  9 22:03:09 2004
Subject: [mod_python] What's the deal with _apachemodule?
In-Reply-To: <001001c1e32d$f15aae90$2cee4cd4@RANDOM>
References: <20020413161547.GB23274@tucana.cl.uni-heidelberg.de> <001001c1e32d$f15aae90$2cee4cd4@RANDOM>
Message-ID: <20020414000121.A11915@ferkel.cl.uni-heidelberg.de>

On Sat, Apr 13, 2002 at 10:58:19PM +0200, Adrien Plisson wrote:
> From: "Markus Demleitner" <msdemlei@cl.uni-heidelberg.de>
> > ...
> > So, what's the deal?  _apachemodule.so isn't mentioned anywhere in the
> > source tree, but it seems to be required to satisfy the import _apache
> > statement.  What might the solution to this riddle be?
> 
> if i remember right, this problem is due to the fact the the _apache module
> works *only* in an apache environment, that is, only when imported in a
> module which is called from mod_python which runs on a launched apache
> server.
> 
> quoted from the doc:
> "4.3 apache - Access to Apache Internals.
> 
> The Python Application Programmer interface to Apache internals is contained
> in a module appropriately named
> apache, located inside the mod python package. This module provides some
> ...
Well, yes, I'd expect that much, but I was not talking about 
apache.py but about _apachemodule.so of which I found no trace 
in the distribution:  apache.py imports _apache and can't do so
on my system.  Also, the failure occurred inside the mod_python
handler (which is why the tracebacks ended up in the error.log).

But thanks anyway

        Markus

From yjy-list-python at arbago.com  Sun Apr 14 13:04:56 2002
From: yjy-list-python at arbago.com (YOON, Joo-Yung)
Date: Fri Jan  9 22:03:09 2004
Subject: [mod_python] [Q] Apache Configuration
Message-ID: <20020414040456.GA25132@arbago.com>

Hi,
I followed all the directions written on the installation doc,
but can't see hello world when I do "http://localhost/test/mptest.py".
Just can see the program file contents itself.
Am I right to configure apache with --enable-module=so ?
And nothing else.

My environment:
  1. apache: 1.3.24
  2. python: 2.1.2

Here are what I did in the httpd.conf.
LoadModule python_module libexec/mod_python.so
<Directory "/test">
  AddHandler python-program .py
  PythonHandler mptest 
  PythonDebug On
</Directory>

Thanks in advance.
-- 
YOON, Joo-Yung / python
yjy-list-python@arbago.com
subscribe: mod_python-request@modpython.org 
unsubscribe: 

From grisha at modpython.org  Mon Apr 15 09:00:38 2002
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 22:03:09 2004
Subject: [mod_python] What's the deal with _apachemodule?
In-Reply-To: <20020413161547.GB23274@tucana.cl.uni-heidelberg.de>
Message-ID: <Pine.BSF.4.32.0204150858470.13576-100000@localhost>

_apachemodule.o is linked into mod_python.so. It relies on Apache API, so
you can't really use it outside Apache.

Grisha

On Sat, 13 Apr 2002, Markus Demleitner wrote:

> Hi list,
>
> I'm trying to compile modpython 2.7.7 together with apache 1.3.23
> and python 2.2 -- which works after some fiddling with the libs
> python was linked to.  I know that the prerequisites don't state
> that 2.2 is supported, but I couldn't see how my problem could
> be linked with the python version.
>
> When I'm actually trying to let some test script run, I get
> Traceback (most recent call last):
>   File "/home/unimut/www/cgi-bin/modpython.py", line 4, in ?
>     from mod_python import apache
>   File "/usr/local/lib/python2.2/site-packages/mod_python/apache.py", line 55, in ?
>     import _apache
> ImportError: No module named _apache
> in the server log.
>
> That's fair enough, because there is no _apachemodule.so in
> .../site-packages/mod_python, or anywhere else on the
> python path.
>
> Now, I say to myself, it's got be somewhere and check the
> source directory -- lo and behold, there's _apachemodule.o
> all right.  So, I link it to a dso -- and only get an undefined
> symbol MpServer_Type.  That's in one of the .o's in .../src,
> so I simply link all .o together.
>
> The resulting _apachemodule.so says:
>   File "/home/unimut/www/cgi-bin/modpython.py", line 4, in ?
>     from mod_python import apache
>   File "/usr/local/lib/python2.2/site-packages/mod_python/apache.py", line 55, in ?
>     import _apache
> ImportError: /usr/local/lib/python2.2/site-packages/mod_python/_apachemodule.so: undefined symbol: ap_log_error
>
> This symbol is imported by _apachemodule.o itself -- so it's
> unlikely that I have overlinked.
>
> At this point I gave up, thinking I must be doing something extraordinarily
> stupid.
>
> So, what's the deal?  _apachemodule.so isn't mentioned anywhere in the
> source tree, but it seems to be required to satisfy the import _apache
> statement.  What might the solution to this riddle be?
>
>         Markus
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://www.modpython.org/mailman/listinfo/mod_python
>


From chris at vindaloo.com  Fri Apr 12 00:45:08 2002
From: chris at vindaloo.com (Christopher Sean Hilton)
Date: Fri Jan  9 22:03:09 2004
Subject: [mod_python] file question with mod_python
In-Reply-To: <15541.61078.473435.259679@magrathea.basistech.com>; from tree@basistech.com on Thu, Apr 11, 2002 at 04:14:14PM -0400
References: <20020411170559.5277a53d.reitz@inworks.de> <Pine.BSF.4.32.0204111304190.66803-100000@localhost> <20020411153110.B2101@andale.vindaloo.com> <15541.61078.473435.259679@magrathea.basistech.com>
Message-ID: <20020412004508.A810@dantooine.vindaloo.com>

Thanks, I'll try this out tommorow.

Chris

On Thu, Apr 11, 2002 at 04:14:14PM -0400, 
Tom Emerson wrote:
> Christopher Sean Hilton writes:
> > I'm trying to create a script to handle a file upload from a form with 
> > mod_python. I know that I should be looking into the util module but I've 
> > really got no clue about how to get started. Has anyone got some words of 
> > wisdom to put me on the right track?
> 
> I've done this using publisher: it's certainly the easiest way.
> 
> Given a form along the lines of:
> 
> <form action="process.py/doit" method="POST" enctype="multipart/form-data">
> <b>Filename</b>: <input type="file" name="file">
> </form>
> 
> And a form handler "doit" in process.py:
> 
> def doit(req, file):
>     # ...
> 
> The 'file' argument is a file object representing the uploaded file:
> you can read from this as you would any other file.
> 
> You should check to make sure that the file has a non-zero length:
> 
> import os, stat
> statinfo = os.fstat(file.fileno())
> if statinfo[stat.ST_SIZE] > 0:
>     # process the text
> else:
>     # it's an empty file, or it didn't exist!
> 
> You should also look at the content type of the uploaded file. You can
> access this via the form table in the request record:
> 
> _file = req.form['file']
> if _file.type == "text/plain":
>     # process plain text
> 
> That should be enough to get you started, I expect.
> 
>     -tree
> 
> -- 
> Tom Emerson                                          Basis Technology Corp.
> Sr. Computational Linguist                         http://www.basistech.com
>   "Beware the lollipop of mediocrity: lick it once and you suck forever"
> 

-- 
Chris Hilton                                 chilton-at-vindaloo-dot-com
------------------------------------------------------------------------
                "All I was doing was trying to get home from work!"
                                                 -- Rosa Parks

From msdemlei at cl.uni-heidelberg.de  Wed Apr 17 10:33:51 2002
From: msdemlei at cl.uni-heidelberg.de (Markus Demleitner)
Date: Fri Jan  9 22:03:09 2004
Subject: [mod_python] Simulating non parsed header scripts
Message-ID: <20020417083351.GA28501@tucana.cl.uni-heidelberg.de>

Hi,

The FAQ states that a redirection should be done this way:

 req.headers_out['location'] = 'http://www.modpython.org/'  
     req.status = apache.HTTP_MOVED_TEMPORARILY
     req.send_http_header()
     return apache.OK

Unfortunately, I couldn't find status in the docs, and so
I'm a bit uncertain what else I can do with status.
Basically, I want to port an nph-script, so is it ok
to set status to whatever I want in the server's response 
line (500, 302, 200, whatever) and then return apache.OK?

Also, my classes generate "`raw"' http result codes (instead
of symbolic names from the apache module).  I like it this
way, because I can use them with or without mod_python.  Is
there any danger in assigning those to req.status?

Minor gripes: The link to the complete mailing list archive
is dead, and in the docs for 5.1.9 PythonHandler, a % in the
TeX source is missing a backslash.

Cheers,

        Markus

From Nik.Barron at pennantplc.co.uk  Wed Apr 17 09:47:24 2002
From: Nik.Barron at pennantplc.co.uk (Nik Barron)
Date: Fri Jan  9 22:03:09 2004
Subject: [mod_python] Simulating non parsed header scripts
Message-ID: <F17550784FF9D111B7F100E02921B24741E862@NT-SOTON-001>

> Also, my classes generate "`raw"' http result codes (instead
> of symbolic names from the apache module).  I like it this
> way, because I can use them with or without mod_python.  Is
> there any danger in assigning those to req.status?

This should be OK, as the HTTP_xxx constants are all defined in apache.py
(line 623 onwards). The usual caveats about future compatibility etc apply I
guess.

Nik (mod_python newbie, so handle advice with care ;)

From grisha at modpython.org  Wed Apr 17 09:18:11 2002
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 22:03:09 2004
Subject: [mod_python] Simulating non parsed header scripts
In-Reply-To: <20020417083351.GA28501@tucana.cl.uni-heidelberg.de>
Message-ID: <Pine.BSF.4.32.0204170914400.41336-100000@localhost>

On Wed, 17 Apr 2002, Markus Demleitner wrote:

> Hi,
>
> The FAQ states that a redirection should be done this way:
>
>  req.headers_out['location'] = 'http://www.modpython.org/'
>      req.status = apache.HTTP_MOVED_TEMPORARILY
>      req.send_http_header()
>      return apache.OK
>
> Unfortunately, I couldn't find status in the docs, and so
> I'm a bit uncertain what else I can do with status.
> Basically, I want to port an nph-script, so is it ok
> to set status to whatever I want in the server's response
> line (500, 302, 200, whatever) and then return apache.OK?

Yes, if I remember it correctly, setting status to whatever, then
returning OK will work. You will probably need req.send_http_header() as
well, because I think that that is what actually sends the status line
out.


> Also, my classes generate "`raw"' http result codes (instead
> of symbolic names from the apache module).  I like it this
> way, because I can use them with or without mod_python.  Is
> there any danger in assigning those to req.status?

The constants are just integers. I like using them because they are more
descriptive than 302.

> Minor gripes: The link to the complete mailing list archive
> is dead, and in the docs for 5.1.9 PythonHandler, a % in the
> TeX source is missing a backslash.

Can you e-mail me off-list where specifically it is?

Grisha


From msdemlei at cl.uni-heidelberg.de  Wed Apr 17 20:55:12 2002
From: msdemlei at cl.uni-heidelberg.de (Markus Demleitner)
Date: Fri Jan  9 22:03:09 2004
Subject: [mod_python] .value in FieldStorage
Message-ID: <20020417185512.GB957@tucana.cl.uni-heidelberg.de>

Hi,

I'm again working on my project of migrating from CGI to mod_python.
This time, it's FieldStorage.  For some reason, FieldStorage.__getitem__
may return strings instead of fields.  When you want to keep your
classes compatible with cgi's FieldStorage, that's of course a
major showstopper, since every access to the value attribute
raises an exception.

As an emergency patch (I needed to get this done, since some
gadget of mine was causing excessive server loads when it
didn't need to), I added

import UserString

class StringWithValue(UserString.UserString):
  def __init__(self, val):
    UserString.UserString.__init__(self, val)
    self.value = val

at the top of util.py and changed then end of FieldStorage's
__getitem__ to
        if len(found) == 1:
          if isinstance(found[0], Field):
            return found[0]
          else:
            return StringWithValue(found[0])
        else:
          return found


This is of course super-ugly and will break when someone updates
mod_python.

Is FieldStorage's behaviour again due to my stupidity?  If not,
are there any plans to change it so it always returns Fields?

Cheers,

       Markus

From grisha at modpython.org  Wed Apr 17 16:39:35 2002
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 22:03:09 2004
Subject: [mod_python] .value in FieldStorage
In-Reply-To: <20020417185512.GB957@tucana.cl.uni-heidelberg.de>
Message-ID: <Pine.BSF.4.32.0204171635520.45255-100000@localhost>

Markus -

The rationale is that not everyone using mod_python is migrating from CGI.
For those of us who are writing mod_python handlers from scratch having to
use .value all over the place seemed like an annoyance.

Rather than patching mod_python code, I suggest either subclassing
FieldStorage, or using cgi.FieldStorage.

Grisha

On Wed, 17 Apr 2002, Markus Demleitner wrote:

> Hi,
>
> I'm again working on my project of migrating from CGI to mod_python.
> This time, it's FieldStorage.  For some reason, FieldStorage.__getitem__
> may return strings instead of fields.  When you want to keep your
> classes compatible with cgi's FieldStorage, that's of course a
> major showstopper, since every access to the value attribute
> raises an exception.
>
> As an emergency patch (I needed to get this done, since some
> gadget of mine was causing excessive server loads when it
> didn't need to), I added
>
> import UserString
>
> class StringWithValue(UserString.UserString):
>   def __init__(self, val):
>     UserString.UserString.__init__(self, val)
>     self.value = val
>
> at the top of util.py and changed then end of FieldStorage's
> __getitem__ to
>         if len(found) == 1:
>           if isinstance(found[0], Field):
>             return found[0]
>           else:
>             return StringWithValue(found[0])
>         else:
>           return found
>
>
> This is of course super-ugly and will break when someone updates
> mod_python.
>
> Is FieldStorage's behaviour again due to my stupidity?  If not,
> are there any plans to change it so it always returns Fields?
>
> Cheers,
>
>        Markus
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://www.modpython.org/mailman/listinfo/mod_python
>


From sa at sfsu.edu  Thu Apr 18 15:49:37 2002
From: sa at sfsu.edu (Sean Abrahams)
Date: Fri Jan  9 22:03:09 2004
Subject: [mod_python] import _apache fails
Message-ID: <5192884570.20020418154937@sfsu.edu>

Going through the docs, testing my mod_python install and getting this
message in the apache logs:

File "mptest.py", line 3, in ?
from mod_python import apache
File "/usr/lib/python2.1/site-packages/mod_python/apache.py", line 55, in ?
import _apache
ImportError: No module named _apache

I've looked around and found something in regards to this won't work
from the command line, but as I stated, this is from the apache error
log, generated when calling the script from the web.

Running:
Debian Testing / GNU/Linux 2.2.17
Apache 1.3.9-14 / Mod Python 2.7.6-1

I used apt-get to grab and install modpython.

Thanks,
Sean


From johannes at erdfelt.com  Thu Apr 18 21:30:48 2002
From: johannes at erdfelt.com (Johannes Erdfelt)
Date: Fri Jan  9 22:03:09 2004
Subject: [mod_python] [patch] 2.7.6 null publisher function
Message-ID: <20020418213048.A22717@sventech.com>

I've been playing around with mod_python lately and I like it so far.
The only thing I didn't like is the requirement for a function to be
passed before publisher will run anything.

I'd kind of a purist when it comes to URL's, so I made this patch. If
there is no function passed, it defaults to "handler".

JE

-------------- next part --------------
--- mod_python/publisher.py.orig	Tue Apr 16 20:31:06 2002
+++ mod_python/publisher.py	Tue Apr 16 20:34:45 2002
@@ -80,17 +80,17 @@
     args = {}
 
     # get the path PATH_INFO (everthing after script)
-    if not _req.subprocess_env.has_key("PATH_INFO"):
-        raise apache.SERVER_RETURN, apache.HTTP_NOT_FOUND
-    
-    func_path = _req.subprocess_env["PATH_INFO"][1:] # skip fist /
-    func_path = string.replace(func_path, "/", ".")
-    if func_path[-1] == ".":
-        func_path = func_path[:-1] 
+    if _req.subprocess_env.has_key("PATH_INFO"):
+        func_path = _req.subprocess_env["PATH_INFO"][1:] # skip fist /
+        func_path = string.replace(func_path, "/", ".")
+        if func_path[-1] == ".":
+            func_path = func_path[:-1] 
 
-    # if any part of the path begins with "_", abort
-    if func_path[0] == '_' or string.count(func_path, "._"):
-        raise apache.SERVER_RETURN, apache.HTTP_NOT_FOUND
+        # if any part of the path begins with "_", abort
+        if func_path[0] == '_' or string.count(func_path, "._"):
+            raise apache.SERVER_RETURN, apache.HTTP_NOT_FOUND
+    else:
+        func_path = "handler"
 
     # process input, if any
     fs = util.FieldStorage(req, keep_blank_values=1)
From msdemlei at cl.uni-heidelberg.de  Fri Apr 19 09:26:12 2002
From: msdemlei at cl.uni-heidelberg.de (Markus Demleitner)
Date: Fri Jan  9 22:03:09 2004
Subject: [mod_python] import _apache fails
In-Reply-To: <5192884570.20020418154937@sfsu.edu>
References: <5192884570.20020418154937@sfsu.edu>
Message-ID: <20020419072612.GA2929@tucana.cl.uni-heidelberg.de>

On Thu, Apr 18, 2002 at 03:49:37PM -0700, Sean Abrahams wrote:
> Going through the docs, testing my mod_python install and getting this
> message in the apache logs:
> 
> File "mptest.py", line 3, in ?
> from mod_python import apache
> File "/usr/lib/python2.1/site-packages/mod_python/apache.py", line 55, in ?
> import _apache
> ImportError: No module named _apache
> 
> I've looked around and found something in regards to this won't work
> from the command line, but as I stated, this is from the apache error
> log, generated when calling the script from the web.
> 
> Running:
> Debian Testing / GNU/Linux 2.2.17
> Apache 1.3.9-14 / Mod Python 2.7.6-1
> 
> I used apt-get to grab and install modpython.

Chanches are your mptest.py is not executed as a handler but as a
CGI -- check your httpd.conf and make sure there's something like
  AddHandler python-program .py
	PythonHandler unimut_modpython
in there and that the directives are active for whatever directory
your mptest.py is in.

    Markus

From johnny.morano at vlaanderen.be  Fri Apr 19 10:39:03 2002
From: johnny.morano at vlaanderen.be (Johnny Morano)
Date: Fri Jan  9 22:03:09 2004
Subject: [mod_python] newbie question regarding postgresql
Message-ID: <200204190934.g3J9Y5Y19977@s001032.vlaanderen.be>

hey all,

I'm trying to make a python script for database connection, but it doesn't 
seem to work in mod_python, although it runs fine on the command line.
Can anyone see my big mistake?

--begin-code---
from mod_python import apache
import pgdb

def s(req):
        nHost='localhost'
        nDbname='netdoc'
        readUser='nd_read'

        con = pgdb.connect(dsn=nHost+':'+nDbname, user=readUser)
        curs = con.cursor()
        curs.execute(""" SELECT relname as tablename
                         , pg_get_userbyid(relowner) AS tableowner
                         , relhasindex as hasindexes
                         , relhasrules as hasrules
                         , reltriggers as hastriggers
                         , pg_class.oid
                         , description as table_description
                         , relacl
                      FROM pg_class
                      LEFT OUTER JOIN pg_description on (   pg_class.oid = 
pg_description.objoid
                                                      AND 
pg_description.objsubid = 0)
                     WHERE (  relkind = 'r'::"char"
                           OR relkind = 's'::"char"
                           )
                       AND relname NOT LIKE 'pg_%' """)
        rows = curs.fetchall()
        x = "the table names: \n"
        for row in rows:
                x += "\t" + row[0] + "\n"
        return x
---end-code---

thanx !
-- 
Johnny Morano - Linux Consultant
___________________________________________________ 
 Ministerie Vlaamse Gemeenschap                    |
 Koning Albert II-laan, 7 (610) 1210 Brussel       |
 tel: 02/5531319 mail: johnny.morano@vlaanderen.be |

From sandor.kopanyi at mailbox.hu  Fri Apr 19 10:53:40 2002
From: sandor.kopanyi at mailbox.hu (sandor.kopanyi@mailbox.hu)
Date: Fri Jan  9 22:03:09 2004
Subject: [mod_python] newbie question regarding postgresql
In-Reply-To: <200204190934.g3J9Y5Y19977@s001032.vlaanderen.be>
Message-ID: <20020419085340.14294.qmail@web2.mailbox.hu>

Try to put backslashes inside the SQL-string, like this (see
end of each line):

>         curs.execute(""" SELECT relname as tablename 
>                          , pg_get_userbyid(relowner) AS tableowner 
>                          , relhasindex as hasindexes 
etc.

--------------------------------------------------
http://www.mailbox.hu - Mert levelezni kell...


From johnny.morano at vlaanderen.be  Fri Apr 19 11:17:46 2002
From: johnny.morano at vlaanderen.be (Johnny Morano)
Date: Fri Jan  9 22:03:09 2004
Subject: [mod_python] newbie question regarding postgresql
In-Reply-To: <20020419085340.14294.qmail@web2.mailbox.hu>
References: <20020419085340.14294.qmail@web2.mailbox.hu>
Message-ID: <200204191012.g3JACmY24851@s001032.vlaanderen.be>

so mean like this?:

curs.execute(""" SELECT relname as tablename \
                          , pg_get_userbyid(relowner) AS tableowner \
                          , relhasindex as hasindexes \
                          , relhasrules as hasrules \
                          , reltriggers as hastriggers \

doesn't work either. my web server gives me an internal error and the error 
message is that Dispatch doesn't return anything


On Friday 19 April 2002 10:53, you wrote:
> Try to put backslashes inside the SQL-string, like this (see
>
> end of each line):
> >         curs.execute(""" SELECT relname as tablename
> >                          , pg_get_userbyid(relowner) AS tableowner
> >                          , relhasindex as hasindexes
>
> etc.
>
> --------------------------------------------------
> http://www.mailbox.hu - Mert levelezni kell...
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://www.modpython.org/mailman/listinfo/mod_python

-- 
Johnny Morano - Linux Consultant
___________________________________________________ 
 Ministerie Vlaamse Gemeenschap                    |
 Koning Albert II-laan, 7 (610) 1210 Brussel       |
 tel: 02/5531319 mail: johnny.morano@vlaanderen.be |

From johnny.morano at vlaanderen.be  Fri Apr 19 12:46:48 2002
From: johnny.morano at vlaanderen.be (Johnny Morano)
Date: Fri Jan  9 22:03:09 2004
Subject: [mod_python] newbie question regarding postgresql
Message-ID: <200204191141.g3JBfoY03098@s001032.vlaanderen.be>

On Friday 19 April 2002 12:13, you wrote:
> >         for row in rows:
> >                 x += "\t" + row[0] + "\n"
> >         return x
>
> An Apache handler doesn't return a string -- it returns a status code.  The
> string should be written to the req object after sending the proper
> headers. Check the documentation for more.

well actually, that's not true. i have other scripts (mailscripts) which
handle this perfectly.
but, changing the end of my code into:

for row in rows:
                x += "\t" + row[0] + "\n"
        x += "</p></body></html>"
        req.write(x)
        return apache.OK

doesn't change a thing...

johnny
-- 
Johnny Morano - Linux Consultant
___________________________________________________ 
 Ministerie Vlaamse Gemeenschap                    |
 Koning Albert II-laan, 7 (610) 1210 Brussel       |
 tel: 02/5531319 mail: johnny.morano@vlaanderen.be |

From johnny.morano at vlaanderen.be  Fri Apr 19 14:43:24 2002
From: johnny.morano at vlaanderen.be (Johnny Morano)
Date: Fri Jan  9 22:03:09 2004
Subject: [mod_python] newbie question regarding postgresql
In-Reply-To: <3B5AE7F3-5392-11D6-B58C-0003938210D6@redivi.com>
References: <3B5AE7F3-5392-11D6-B58C-0003938210D6@redivi.com>
Message-ID: <200204191338.g3JDcQY13870@s001032.vlaanderen.be>

thanx for the reply(s/y/ies/)!
but the problem is something redhat-ish... the same code works perfect on 
debian, but refuses to run on redhat... libraries, dependencies, way too much 
policies ;-)



On Friday 19 April 2002 14:37, you wrote:
> My best guess as to why PostgreSQL isn't working from your web server is
> that you haven't given the webserver credentials to use the database.
> Create a user with the same name as the user that apache runs as
> (nobody, www, www-data) and then try it.
>
> This isn't an answer to your problem.. but Python has a feature such
> that if you do this:
>
> (""" my really really """
>   """ long string that gets split up """"
>   """ over a bunch of lines """
>   """ ............"""")
>
> then it turns out as one string with no \n's, without the runtime cost
> of using +=.  This is because python just concatenates adjacent strings
> if they aren't separated by anything.. i.e. ("""blah""" 'blah' "blah")
> is 'blahblahblah'.
>
> -bob
>
> On Friday, April 19, 2002, at 05:17 AM, Johnny Morano wrote:
> > so mean like this?:
> >
> > curs.execute(""" SELECT relname as tablename \
> >                           , pg_get_userbyid(relowner) AS tableowner \
> >                           , relhasindex as hasindexes \
> >                           , relhasrules as hasrules \
> >                           , reltriggers as hastriggers \
> >
> > doesn't work either. my web server gives me an internal error and the
> > error
> > message is that Dispatch doesn't return anything
> >
> > On Friday 19 April 2002 10:53, you wrote:
> >> Try to put backslashes inside the SQL-string, like this (see
> >>
> >> end of each line):
> >>>         curs.execute(""" SELECT relname as tablename
> >>>                          , pg_get_userbyid(relowner) AS tableowner
> >>>                          , relhasindex as hasindexes
> >>
> >> etc.
> >>
> >> --------------------------------------------------
> >> http://www.mailbox.hu - Mert levelezni kell...
> >>
> >> _______________________________________________
> >> Mod_python mailing list
> >> Mod_python@modpython.org
> >> http://www.modpython.org/mailman/listinfo/mod_python
> >
> > --
> > Johnny Morano - Linux Consultant
> > ___________________________________________________
> >  Ministerie Vlaamse Gemeenschap                    |
> >  Koning Albert II-laan, 7 (610) 1210 Brussel       |
> >  tel: 02/5531319 mail: johnny.morano@vlaanderen.be |
> > _______________________________________________
> > Mod_python mailing list
> > Mod_python@modpython.org
> > http://www.modpython.org/mailman/listinfo/mod_python

-- 
Johnny Morano - Linux Consultant
___________________________________________________ 
 Ministerie Vlaamse Gemeenschap                    |
 Koning Albert II-laan, 7 (610) 1210 Brussel       |
 tel: 02/5531319 mail: johnny.morano@vlaanderen.be |

From jquinte at fadu.uba.ar  Fri Apr 19 11:30:37 2002
From: jquinte at fadu.uba.ar (Javier Quinteros)
Date: Fri Jan  9 22:03:09 2004
Subject: [mod_python] Now you see it, now you don't...
Message-ID: <200204190834.LAA19242@www.fadu.uba.ar>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

Hi, all !!!
I don't know if this have been posted yet.
I call a function named "RealAlumno" in a script "alumno.py" by 
clicking a link in my browser. Everything works fine and returns me a new 
page with links that points to the same function in the same script. The 
matter is that I can keep clicking a couple of times, but after that, Apache 
starts telling me that there's no existing function like that. There's no 
broken link because sometimes I can press the Back button and try again and 
it works. But, the most of the time, I have to restart Apache to keep working.

Does any of you know what's going on???

I'm working with Apache 1.3.22, Python 1.5.2 and ModPython 2.7.7.

Bye,

- -- 
- ---------------------------------
Javier Quinteros
jquinte@fadu.uba.ar
Secretar?a de Planificaci?n
Universidad de Buenos Aires
- ---------------------------------
Existe un solo lugar donde el Norte y el Sur del mundo se enfrentan en
igualdad de condiciones: es una cancha de f?tbol de Brasil, en la 
desembocadura
del r?o Amazonas. La l?nea del ecuador corta por la mitad el estadio Zerao, en
Amap?, de modo que cada equipo juega un tiempo en el sur y otro tiempo en el
norte.
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.0.6 (GNU/Linux)
Comment: For info see http://www.gnupg.org

iD8DBQE8wCoTdBzRnlFl4cgRAhhBAKCBcxAQhlZzzP2ZxHw7VWSg1SzjAACguzIx
i0Y2PxX4XKNn2y/FtpTPfio=
=D6eC
-----END PGP SIGNATURE-----

From grisha at modpython.org  Fri Apr 19 11:10:43 2002
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 22:03:09 2004
Subject: [mod_python] Now you see it, now you don't...
In-Reply-To: <200204190834.LAA19242@www.fadu.uba.ar>
Message-ID: <Pine.BSF.4.32.0204191109530.73892-100000@localhost>

There is a bug in 2.7.7 which I'll try to fix today and release 2.7.8.

On Fri, 19 Apr 2002, Javier Quinteros wrote:

> -----BEGIN PGP SIGNED MESSAGE-----
> Hash: SHA1
>
> Hi, all !!!
> I don't know if this have been posted yet.
> I call a function named "RealAlumno" in a script "alumno.py" by
> clicking a link in my browser. Everything works fine and returns me a new
> page with links that points to the same function in the same script. The
> matter is that I can keep clicking a couple of times, but after that, Apache
> starts telling me that there's no existing function like that. There's no
> broken link because sometimes I can press the Back button and try again and
> it works. But, the most of the time, I have to restart Apache to keep working.
>
> Does any of you know what's going on???
>
> I'm working with Apache 1.3.22, Python 1.5.2 and ModPython 2.7.7.
>
> Bye,
>
> - --
> - ---------------------------------
> Javier Quinteros
> jquinte@fadu.uba.ar
> Secretar?a de Planificaci?n
> Universidad de Buenos Aires
> - ---------------------------------
> Existe un solo lugar donde el Norte y el Sur del mundo se enfrentan en
> igualdad de condiciones: es una cancha de f?tbol de Brasil, en la
> desembocadura
> del r?o Amazonas. La l?nea del ecuador corta por la mitad el estadio Zerao, en
> Amap?, de modo que cada equipo juega un tiempo en el sur y otro tiempo en el
> norte.
> -----BEGIN PGP SIGNATURE-----
> Version: GnuPG v1.0.6 (GNU/Linux)
> Comment: For info see http://www.gnupg.org
>
> iD8DBQE8wCoTdBzRnlFl4cgRAhhBAKCBcxAQhlZzzP2ZxHw7VWSg1SzjAACguzIx
> i0Y2PxX4XKNn2y/FtpTPfio=
> =D6eC
> -----END PGP SIGNATURE-----
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://www.modpython.org/mailman/listinfo/mod_python
>


From grisha at ispol.com  Fri Apr 19 14:42:58 2002
From: grisha at ispol.com (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 22:03:09 2004
Subject: [mod_python] 2.7.8
Message-ID: <Pine.BSF.4.32.0204191441370.76579-100000@localhost>

Version 2.7.8 is out there. It addresses the 404 issue that was introduced
in 2.7.7 as a side effect of fixing the security flaw in the publisher.

Grisha


From reitz at inworks.de  Sun Apr 21 04:21:05 2002
From: reitz at inworks.de (Andre Reitz)
Date: Fri Jan  9 22:03:09 2004
Subject: [mod_python] 2.7.8
In-Reply-To: <Pine.BSF.4.32.0204191441370.76579-100000@localhost>
References: <Pine.BSF.4.32.0204191441370.76579-100000@localhost>
Message-ID: <20020421042105.4d12d745.reitz@inworks.de>

On Fri, 19 Apr 2002 14:42:58 -0400 (EDT)
"Gregory (Grisha) Trubetskoy" <grisha@ispol.com> wrote:

> 
> Version 2.7.8 is out there. It addresses the 404 issue that was introduced
> in 2.7.7 as a side effect of fixing the security flaw in the publisher.
> 

Hy,

You forgot again to Fix the following Bug,
This is a Very Big BOBO!!!!!:


def setup_cgi(req):
    """
    Replace sys.stdin and stdout with an objects that read/write to
    the socket, as well as substitute the os.environ.
    Returns (environ, stdin, stdout) which you must save and then use
    with restore_nocgi().
    """

    # save env
#    env = os.environ.copy()
    originalenv = os.environ.copy()   <<<<<<<<<<<<<=====
    
    si = sys.stdin
    so = sys.stdout

    env = build_cgi_env(req)
 
    for k in env.keys():
        os.environ[k] = env[k]

    sys.stdout = CGIStdout(req)
    sys.stdin = CGIStdin(req)

    sys.argv = [] # keeps cgi.py happy

#    return env, si, so
    return originalenv, si, so <<<<<<<<======
        



Will You release Version 2.7.9 TOMORROW?????
:)

Greetings, Andre'



> Grisha
> 
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://www.modpython.org/mailman/listinfo/mod_python


-- 
_____________________________________________
inworks GmbH            Andre Reitz		
Magirusstrasse 44	Tel. 0731/93 80 7-21
89077 Ulm		http://www.inworks.de


From s13361562 at bach.sun.ac.za  Sun Apr 21 17:31:29 2002
From: s13361562 at bach.sun.ac.za (Hugo van der Merwe)
Date: Fri Jan  9 22:03:09 2004
Subject: [mod_python] taking over the main "index" page with mod_python?
Message-ID: <20020421153129.GA15290@vervet.localnet>

Hello,

I want to have the page returned by

http://my.web.site/

also be served by the mod_python publisher, e.g. I want it to load the
same thing as /show.py/norm - what is the simplest way to do this?
Something with DirectoryIndex? Or maybe with a normal mod_python handler
and a small python "wrapper"?

I hope this hasn't been asked too many times before. I could not find 
anything in the documentation included in the Debian 
libapache-mod-python package, version 2:2.7.6-1, and that does include 
the Mod_python manual for 2.7.6.

About updating to the newer mod_python for the security exploits: I have
sent an email asking for an update of the Debian package, and will
follow up on the issue.

Thanks,
Hugo van der Merwe

From bob at redivi.com  Sun Apr 21 12:05:57 2002
From: bob at redivi.com (Bob Ippolito)
Date: Fri Jan  9 22:03:09 2004
Subject: [mod_python] taking over the main "index" page with mod_python?
In-Reply-To: <20020421153129.GA15290@vervet.localnet>
Message-ID: <AA5F0186-5541-11D6-A4BB-0003938210D6@redivi.com>

There's always mod_rewrite.

On Sunday, April 21, 2002, at 11:31 AM, Hugo van der Merwe wrote:

> Hello,
>
> I want to have the page returned by
>
> http://my.web.site/
>
> also be served by the mod_python publisher, e.g. I want it to load the
> same thing as /show.py/norm - what is the simplest way to do this?
> Something with DirectoryIndex? Or maybe with a normal mod_python handler
> and a small python "wrapper"?
>
> I hope this hasn't been asked too many times before. I could not find
> anything in the documentation included in the Debian
> libapache-mod-python package, version 2:2.7.6-1, and that does include
> the Mod_python manual for 2.7.6.
>
> About updating to the newer mod_python for the security exploits: I have
> sent an email asking for an update of the Debian package, and will
> follow up on the issue.
>
> Thanks,
> Hugo van der Merwe
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://www.modpython.org/mailman/listinfo/mod_python


From tree at basistech.com  Sun Apr 21 16:42:14 2002
From: tree at basistech.com (Tom Emerson)
Date: Fri Jan  9 22:03:09 2004
Subject: [mod_python] taking over the main "index" page with mod_python?
In-Reply-To: <20020421153129.GA15290@vervet.localnet>
References: <20020421153129.GA15290@vervet.localnet>
Message-ID: <15555.9254.679995.356595@magrathea.basistech.com>

Hugo van der Merwe writes:
> Hello,
> 
> I want to have the page returned by
> 
> http://my.web.site/
> 
> also be served by the mod_python publisher, e.g. I want it to load the
> same thing as /show.py/norm - what is the simplest way to do this?
> Something with DirectoryIndex? Or maybe with a normal mod_python handler
> and a small python "wrapper"?

DirectoryIndex in the .htaccess file works perfectly.

    -tree

-- 
Tom Emerson                                          Basis Technology Corp.
Sr. Computational Linguist                         http://www.basistech.com
  "Beware the lollipop of mediocrity: lick it once and you suck forever"

From grisha at modpython.org  Sun Apr 21 20:47:14 2002
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 22:03:09 2004
Subject: [mod_python] taking over the main "index" page with mod_python?
In-Reply-To: <15555.9254.679995.356595@magrathea.basistech.com>
Message-ID: <Pine.BSF.4.32.0204212046380.9310-100000@localhost>

Or how about just SetHandler in the DocumentRoot directory.

Grisha

On Sun, 21 Apr 2002, Tom Emerson wrote:

> Hugo van der Merwe writes:
> > Hello,
> >
> > I want to have the page returned by
> >
> > http://my.web.site/
> >
> > also be served by the mod_python publisher, e.g. I want it to load the
> > same thing as /show.py/norm - what is the simplest way to do this?
> > Something with DirectoryIndex? Or maybe with a normal mod_python handler
> > and a small python "wrapper"?
>
> DirectoryIndex in the .htaccess file works perfectly.
>
>     -tree
>
> --
> Tom Emerson                                          Basis Technology Corp.
> Sr. Computational Linguist                         http://www.basistech.com
>   "Beware the lollipop of mediocrity: lick it once and you suck forever"
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://www.modpython.org/mailman/listinfo/mod_python
>


From thanos at 0x01.com  Mon Apr 22 11:26:14 2002
From: thanos at 0x01.com (thanos@0x01.com)
Date: Fri Jan  9 22:03:09 2004
Subject: [mod_python] Easy mod_python Session Handling with pso
Message-ID: <20020422152614.19811.qmail@0x01.com>

"@0x01.com
X-Mailer: ELM [version 2.5 PL5]
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Transfer-Encoding: 7bit

How-To: Easy mod_python Session Handling with pso           

Shows how to add easy session handling in mod_python with Python Service
Objects.

This document shows you how to use pso.session to add easy session
handling to a mod_python request handler. Python Service Objects is a
open source internet service development system. Its session module is
ideal for use with mod_python, and in fact included in this package is
ModPythonRequest which is the mod_python implementation bridge. The pso
system allows you to develop platform and server independent request
handlers.


URL:  http://www.scriptfoundry.com/modules/pso/doc/session-modpython.html

From cmeyer at carleton.edu  Mon Apr 22 11:34:26 2002
From: cmeyer at carleton.edu (Chris Meyer)
Date: Fri Jan  9 22:03:09 2004
Subject: [mod_python] Mod_python & apache on Solaris 8 compile problems
Message-ID: <3CC43B92.9040605@carleton.edu>

Greetings all,

I've been trying to build mod_python 2.7.5 into apache 1.3.23 on a 
Solaris 8 system for several days now, and whenever I issue "make" to 
apache after a "./configure 
--activate-module=src/modules/python/libpython.a" I keep on getting the 
same compile errors:

.
.
.
<=== src/modules
gcc -c  -I./os/unix -I./include   -DSOLARIS2=280 -DUSE_EXPAT 
-I./lib/expat-lite -DNO_DL_NEEDED `./apaci` modules.c
gcc -c  -I./os/unix -I./include   -DSOLARIS2=280 -DUSE_EXPAT 
-I./lib/expat-lite -DNO_DL_NEEDED `./apaci` buildmark.c
gcc  -DSOLARIS2=280 -DUSE_EXPAT -I./lib/expat-lite -DNO_DL_NEEDED 
`./apaci`    \
       -o httpd buildmark.o modules.o  modules/python/libpython.a 
modules/standard/libstandard.a  main/libmain.a  ./os/unix/libos.a 
ap/libap.a  lib/expat-lite\
libexpat.a  -lsocket -lnsl
Undefined                       first referenced
  symbol                             in file
PySequence_Index                    modules/python/libpython.a(mod_python.o)
Py_InitModule4 
modules/python/libpython.a(_apachemodule.o)
PyString_FromStringAndSize 
modules/python/libpython.a(_apachemodule.o)
PyExc_TypeError 
modules/python/libpython.a(tableobject.o)
.
.   about fifty or so undefined symbols later
.
Py_Initialize                       modules/python/libpython.a(mod_python.o)
PyErr_SetObject 
modules/python/libpython.a(requestobject.o)
PyString_Type 
modules/python/libpython.a(tableobject.o)
ld: fatal: Symbol referencing errors. No output written to httpd
collect2: ld returned 1 exit status
*** Error code 1
make: Fatal error: Command failed for target `target_static'
Current working directory /home/root/apache_1.3.23/src
*** Error code 1
make: Fatal error: Command failed for target `build-std'
Current working directory /home/root/apache_1.3.23
*** Error code 1
make: Fatal error: Command failed for target `build'
#

Is there anybody who's encountered this before, or can tell me what a 
fix might be? On a slightly related note, I got something similar when I 
tried compiling mod_perl (1.26) as well (without mod_python), but only 
when I issued the command manually from the apache directory--when I 
told the mod_perl configure script to build httpd for me, it went just 
fine. That says to me that it might be something with the way I have my 
system (a 64-bit Netra X1) set up, but I'll be darned if I can find out 
what's misconfigured.

Any help anyone can give would be greatly appreciated.

	-Chris Meyer


From sobral at sj.univali.br  Mon Apr 22 14:27:35 2002
From: sobral at sj.univali.br (Marcelo M. Sobral)
Date: Fri Jan  9 22:03:10 2004
Subject: [mod_python] Mod_python & apache on Solaris 8 compile problems
In-Reply-To: <3CC43B92.9040605@carleton.edu>
Message-ID: <Pine.LNX.4.33.0204221425350.9747-100000@so.sj.univali.br>

On Mon, 22 Apr 2002, Chris Meyer wrote:

> I've been trying to build mod_python 2.7.5 into apache 1.3.23 on a 
> Solaris 8 system for several days now, and whenever I issue "make" to 
> apache after a "./configure 
> --activate-module=src/modules/python/libpython.a" I keep on getting the 
> same compile errors:
> 
> .
> .
> .
> <=== src/modules
> gcc -c  -I./os/unix -I./include   -DSOLARIS2=280 -DUSE_EXPAT 
> -I./lib/expat-lite -DNO_DL_NEEDED `./apaci` modules.c
> gcc -c  -I./os/unix -I./include   -DSOLARIS2=280 -DUSE_EXPAT 
> -I./lib/expat-lite -DNO_DL_NEEDED `./apaci` buildmark.c
> gcc  -DSOLARIS2=280 -DUSE_EXPAT -I./lib/expat-lite -DNO_DL_NEEDED 
> `./apaci`    \
>        -o httpd buildmark.o modules.o  modules/python/libpython.a 
> modules/standard/libstandard.a  main/libmain.a  ./os/unix/libos.a 
> ap/libap.a  lib/expat-lite\
> libexpat.a  -lsocket -lnsl
> Undefined                       first referenced
>   symbol                             in file
> PySequence_Index                    modules/python/libpython.a(mod_python.o)
> Py_InitModule4 
> modules/python/libpython.a(_apachemodule.o)
> PyString_FromStringAndSize 
> modules/python/libpython.a(_apachemodule.o)
> PyExc_TypeError 
> modules/python/libpython.a(tableobject.o)
> .
> .   about fifty or so undefined symbols later

   Hi.

   Your libpython.a was compiled without PIC (position independent code). 
Try to recompile it with option -fpic passed to gcc (libpython.a is in the 
Python source code).

   Good luck.

  -----------------------------
  Prof. Marcelo Maia Sobral
  Administrador de Redes
  Nucleo de Informatica
  Univali - Campus S?o Jos?
  Fone: (0xx48) 281-1595
  -----------------------------


-----BEGIN PGP PUBLIC KEY BLOCK-----
Version: GnuPG v1.0.6 (GNU/Linux)
Comment: For info see http://www.gnupg.org

mQGiBDwiFZQRBACpWV7f+1b1H2Efm9WHM5LnQxQcXEBz/SHff9B909IL5kl5zAL1
F4+mABr4g25wUGKb2SLk6/zb7EPpgI6IrfG7gKqv4PRn8KRkGANSdSouiyqKd8qa
JPIwR7i5cCV1hz2p4T7An5307HiJj/BiAXtDtPnD9JKf3gx4upOqbyyyYwCg8gFr
AdI1OK++OvBcyCebHM4ojoUEAJedtyxaL/A3rnQ1Ni2DiX60I3mbCx2eWUgm506S
RCkwuMzIB2tEMGQg3acqZvTk/7i6ek01Hkk7d8UCZjubKnj8kN23ew5k5/PbFMbF
+02tvYy91240MBmTswgW/QTjpU6dRdhtOwOLuuNKUPOII1TtdqQUg+/sWnyfLyrC
5XSGA/wPJAVIEFbvwQUb/XPr9hi+flNjsgEvv6cZDs4b83YwtdXuY4OZH7EyeQ4p
+aBlkjNJIdqKB6gw7sv5hdAlX+zKgIukw2jDa63PZl3TiIx1y06p5lDWpqbbhVIG
ky1cWRif6vo0p2bPeuwcaNleiZiL1hvR79wLw3EYsMB3tbDAJLRPTWFyY2VsbyBN
YWlhIFNvYnJhbCAoQWRtaW5pc3RyYWRvciBkZSByZWRlIC0gVW5pdmFsaS1TSikg
PHNvYnJhbEBzai51bml2YWxpLmJyPohdBBMRAgAdBQI8IhWUBQkA7U4ABQsHCgME
AxUDAgMWAgECF4AACgkQ6vNSIUi7iuxQPgCgjRxk9vyJVt94CjySkZKcDj7jyB4A
niVhSkObCMg4iZMSTvD9HZRKAtu6uQENBDwiFZwQBADZEKBHT1MmO8miFB9/V34V
xjzSXn3P3vusbgS/4v7Ydf4Lrcfah8qLx/GEf0Cl7PAL8tSEZkl5+fgzIckKLDA4
E61A31xjxi/MVmySqkPrqzI8AmfT/ukSTgFYEpf/hOmBu7c7JH8BT5evZ3wCFRCH
aZf/XnNnOLQrmRqrlaM6CwADBQP8CiTjtSxcbVU5vECsy/pnAjag7EdeLdBzjM17
B0kDDBMYa3VFi6dAkhA1eCe+M7QQBHAzM1xCXLT1ZepteZiqwpb+dSq++0XKLUea
uJclWUn8DbwMWGKTdI4weGGr9Bcaq8EZpzzo2uDDbIh3kKGtFntVEFGvg4HorWNM
vLOVCwOITAQYEQIADAUCPCIVnAUJAO1OAAAKCRDq81IhSLuK7HNxAJ9UxQo0vu/O
NEEsJhrHJoDgpdc2PwCg1c9acqzo9jCig+Y9xWpgJyQpOZQ=
=99B8
-----END PGP PUBLIC KEY BLOCK-----


From jquinte at fadu.uba.ar  Mon Apr 22 19:57:39 2002
From: jquinte at fadu.uba.ar (Javier Quinteros)
Date: Fri Jan  9 22:03:10 2004
Subject: [mod_python] Global variable...
Message-ID: <200204221702.UAA10145@www.fadu.uba.ar>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

Hi, all !!!
What should I do if I want a variable to live for ever? I mean, I don't want 
to redefine the variable every time I import a module (where I use it) or 
click a link.

Thanks in advance,

- -- 
- ---------------------------------
Javier Quinteros
jquinte@fadu.uba.ar
Secretar?a de Planificaci?n
Universidad de Buenos Aires
- ---------------------------------
Existe un solo lugar donde el Norte y el Sur del mundo se enfrentan en
igualdad de condiciones: es una cancha de f?tbol de Brasil, en la 
desembocadura
del r?o Amazonas. La l?nea del ecuador corta por la mitad el estadio Zerao, en
Amap?, de modo que cada equipo juega un tiempo en el sur y otro tiempo en el
norte.
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.0.6 (GNU/Linux)
Comment: For info see http://www.gnupg.org

iD8DBQE8xJVjdBzRnlFl4cgRAnciAKDKJMp6VOYGiU9GpDc5Kk4SlYQ1LACfe77t
+3d1demwTU+dy0NnIpPWQlc=
=lZog
-----END PGP SIGNATURE-----

From sobral at sj.univali.br  Mon Apr 22 21:33:33 2002
From: sobral at sj.univali.br (Marcelo M. Sobral)
Date: Fri Jan  9 22:03:10 2004
Subject: [mod_python] Global variable...
In-Reply-To: <200204221702.UAA10145@www.fadu.uba.ar>
Message-ID: <Pine.GSO.4.05.10204222127210.3738-100000@cucao.sj.univali.br>

On Mon, 22 Apr 2002, Javier Quinteros wrote:

> What should I do if I want a variable to live for ever? I mean, I don't want 
> to redefine the variable every time I import a module (where I use it) or 
> click a link.

   HI.

   You must use shared memory for that. The shmmodule can help you (look
for it on Vault of Parnassus).
   I  have written a trivial class to save and restore objects in the
shared memory. You can download it from:

   http://www.sj.univali.br/~sobral/persist.tgz

   It has been used to implement a cache for logins and passwords, used by
a PythonAuthenHandler. The cache is a dictionary, which lives in the
sahred memory.

   It has some comments to help you to use it.

   Best regards.


  ------------------------
  Prof. Marcelo Maia Sobral
  Administrador de Redes
  Nucleo de Informatica
  Univali - Campus S?o Jos?
  Fone: (0xx48) 281-1595
  -----------------------------


-----BEGIN PGP PUBLIC KEY BLOCK-----
Version: GnuPG v1.0.6 (GNU/Linux)
Comment: For info see http://www.gnupg.org

mQGiBDwiFZQRBACpWV7f+1b1H2Efm9WHM5LnQxQcXEBz/SHff9B909IL5kl5zAL1
F4+mABr4g25wUGKb2SLk6/zb7EPpgI6IrfG7gKqv4PRn8KRkGANSdSouiyqKd8qa
JPIwR7i5cCV1hz2p4T7An5307HiJj/BiAXtDtPnD9JKf3gx4upOqbyyyYwCg8gFr
AdI1OK++OvBcyCebHM4ojoUEAJedtyxaL/A3rnQ1Ni2DiX60I3mbCx2eWUgm506S
RCkwuMzIB2tEMGQg3acqZvTk/7i6ek01Hkk7d8UCZjubKnj8kN23ew5k5/PbFMbF
+02tvYy91240MBmTswgW/QTjpU6dRdhtOwOLuuNKUPOII1TtdqQUg+/sWnyfLyrC
5XSGA/wPJAVIEFbvwQUb/XPr9hi+flNjsgEvv6cZDs4b83YwtdXuY4OZH7EyeQ4p
+aBlkjNJIdqKB6gw7sv5hdAlX+zKgIukw2jDa63PZl3TiIx1y06p5lDWpqbbhVIG
ky1cWRif6vo0p2bPeuwcaNleiZiL1hvR79wLw3EYsMB3tbDAJLRPTWFyY2VsbyBN
YWlhIFNvYnJhbCAoQWRtaW5pc3RyYWRvciBkZSByZWRlIC0gVW5pdmFsaS1TSikg
PHNvYnJhbEBzai51bml2YWxpLmJyPohdBBMRAgAdBQI8IhWUBQkA7U4ABQsHCgME
AxUDAgMWAgECF4AACgkQ6vNSIUi7iuxQPgCgjRxk9vyJVt94CjySkZKcDj7jyB4A
niVhSkObCMg4iZMSTvD9HZRKAtu6uQENBDwiFZwQBADZEKBHT1MmO8miFB9/V34V
xjzSXn3P3vusbgS/4v7Ydf4Lrcfah8qLx/GEf0Cl7PAL8tSEZkl5+fgzIckKLDA4
E61A31xjxi/MVmySqkPrqzI8AmfT/ukSTgFYEpf/hOmBu7c7JH8BT5evZ3wCFRCH
aZf/XnNnOLQrmRqrlaM6CwADBQP8CiTjtSxcbVU5vECsy/pnAjag7EdeLdBzjM17
B0kDDBMYa3VFi6dAkhA1eCe+M7QQBHAzM1xCXLT1ZepteZiqwpb+dSq++0XKLUea
uJclWUn8DbwMWGKTdI4weGGr9Bcaq8EZpzzo2uDDbIh3kKGtFntVEFGvg4HorWNM
vLOVCwOITAQYEQIADAUCPCIVnAUJAO1OAAAKCRDq81IhSLuK7HNxAJ9UxQo0vu/O
NEEsJhrHJoDgpdc2PwCg1c9acqzo9jCig+Y9xWpgJyQpOZQ=
=99B8
-----END PGP PUBLIC KEY BLOCK-----


From gbeasley at tsa.ac.za  Tue Apr 23 08:06:07 2002
From: gbeasley at tsa.ac.za (Grant Beasley)
Date: Fri Jan  9 22:03:10 2004
Subject: [mod_python] Global variable...
In-Reply-To: <Pine.GSO.4.05.10204222127210.3738-100000@cucao.sj.univali.br>
Message-ID: <OOENKCHGJGHILGPAGHGOAEIOCCAA.gbeasley@tsa.ac.za>

I've achieved a similar thing by creating a Globals module. This is imported
by all modules that require any global variable. I'm also using this module
to store a dictionary of users as well as other cached content. It seems to
work effectively for me. Anyone aware of any problems with this approach?

Thanks
Grant Beasley
Technikon SA

-----Original Message-----
From: mod_python-admin@modpython.org
[mailto:mod_python-admin@modpython.org]On Behalf Of Marcelo M. Sobral
Sent: 23 April 2002 02:34
To: Javier Quinteros
Cc: mod_python@modpython.org
Subject: Re: [mod_python] Global variable...


On Mon, 22 Apr 2002, Javier Quinteros wrote:

> What should I do if I want a variable to live for ever? I mean, I don't
want
> to redefine the variable every time I import a module (where I use it) or
> click a link.

   HI.

   You must use shared memory for that. The shmmodule can help you (look
for it on Vault of Parnassus).
   I  have written a trivial class to save and restore objects in the
shared memory. You can download it from:

   http://www.sj.univali.br/~sobral/persist.tgz

   It has been used to implement a cache for logins and passwords, used by
a PythonAuthenHandler. The cache is a dictionary, which lives in the
sahred memory.

   It has some comments to help you to use it.

   Best regards.


  ------------------------
  Prof. Marcelo Maia Sobral
  Administrador de Redes
  Nucleo de Informatica
  Univali - Campus S?o Jos?
  Fone: (0xx48) 281-1595
  -----------------------------


-----BEGIN PGP PUBLIC KEY BLOCK-----
Version: GnuPG v1.0.6 (GNU/Linux)
Comment: For info see http://www.gnupg.org

mQGiBDwiFZQRBACpWV7f+1b1H2Efm9WHM5LnQxQcXEBz/SHff9B909IL5kl5zAL1
F4+mABr4g25wUGKb2SLk6/zb7EPpgI6IrfG7gKqv4PRn8KRkGANSdSouiyqKd8qa
JPIwR7i5cCV1hz2p4T7An5307HiJj/BiAXtDtPnD9JKf3gx4upOqbyyyYwCg8gFr
AdI1OK++OvBcyCebHM4ojoUEAJedtyxaL/A3rnQ1Ni2DiX60I3mbCx2eWUgm506S
RCkwuMzIB2tEMGQg3acqZvTk/7i6ek01Hkk7d8UCZjubKnj8kN23ew5k5/PbFMbF
+02tvYy91240MBmTswgW/QTjpU6dRdhtOwOLuuNKUPOII1TtdqQUg+/sWnyfLyrC
5XSGA/wPJAVIEFbvwQUb/XPr9hi+flNjsgEvv6cZDs4b83YwtdXuY4OZH7EyeQ4p
+aBlkjNJIdqKB6gw7sv5hdAlX+zKgIukw2jDa63PZl3TiIx1y06p5lDWpqbbhVIG
ky1cWRif6vo0p2bPeuwcaNleiZiL1hvR79wLw3EYsMB3tbDAJLRPTWFyY2VsbyBN
YWlhIFNvYnJhbCAoQWRtaW5pc3RyYWRvciBkZSByZWRlIC0gVW5pdmFsaS1TSikg
PHNvYnJhbEBzai51bml2YWxpLmJyPohdBBMRAgAdBQI8IhWUBQkA7U4ABQsHCgME
AxUDAgMWAgECF4AACgkQ6vNSIUi7iuxQPgCgjRxk9vyJVt94CjySkZKcDj7jyB4A
niVhSkObCMg4iZMSTvD9HZRKAtu6uQENBDwiFZwQBADZEKBHT1MmO8miFB9/V34V
xjzSXn3P3vusbgS/4v7Ydf4Lrcfah8qLx/GEf0Cl7PAL8tSEZkl5+fgzIckKLDA4
E61A31xjxi/MVmySqkPrqzI8AmfT/ukSTgFYEpf/hOmBu7c7JH8BT5evZ3wCFRCH
aZf/XnNnOLQrmRqrlaM6CwADBQP8CiTjtSxcbVU5vECsy/pnAjag7EdeLdBzjM17
B0kDDBMYa3VFi6dAkhA1eCe+M7QQBHAzM1xCXLT1ZepteZiqwpb+dSq++0XKLUea
uJclWUn8DbwMWGKTdI4weGGr9Bcaq8EZpzzo2uDDbIh3kKGtFntVEFGvg4HorWNM
vLOVCwOITAQYEQIADAUCPCIVnAUJAO1OAAAKCRDq81IhSLuK7HNxAJ9UxQo0vu/O
NEEsJhrHJoDgpdc2PwCg1c9acqzo9jCig+Y9xWpgJyQpOZQ=
=99B8
-----END PGP PUBLIC KEY BLOCK-----

_______________________________________________
Mod_python mailing list
Mod_python@modpython.org
http://www.modpython.org/mailman/listinfo/mod_python


From Nik.Barron at pennantplc.co.uk  Tue Apr 23 10:01:01 2002
From: Nik.Barron at pennantplc.co.uk (Nik Barron)
Date: Fri Jan  9 22:03:10 2004
Subject: [mod_python] Query about authentication/authorization win Apa
	che on Win32
Message-ID: <F17550784FF9D111B7F100E02921B24741E898@NT-SOTON-001>

Anyone got any ideas? Still having hassle with this.

Many thanks,

Nik

From rien at yeepa.org  Tue Apr 23 11:32:36 2002
From: rien at yeepa.org (Adrien Plisson)
Date: Fri Jan  9 22:03:10 2004
Subject: [mod_python] Query about authentication/authorization win Apache on Win32
References: <F17550784FF9D111B7F100E02921B24741E898@NT-SOTON-001>
Message-ID: <001801c1eaa9$cec145f0$2cee4cd4@RANDOM>

From: "Nik Barron" <Nik.Barron@pennantplc.co.uk>
> Anyone got any ideas? Still having hassle with this.

try to test in your authenhandler if the username or password is bad.
if it is, then return a 401 (Authorisation required) error code, in addition
with this header:
WWW-Authenticate: Basic realm="nicepeople"

--
rien


From Nik.Barron at pennantplc.co.uk  Tue Apr 23 11:32:51 2002
From: Nik.Barron at pennantplc.co.uk (Nik Barron)
Date: Fri Jan  9 22:03:10 2004
Subject: [mod_python] Query about authentication/authorization win Apa
	che on Win32
Message-ID: <F17550784FF9D111B7F100E02921B24741E89B@NT-SOTON-001>

> try to test in your authenhandler if the username or password is bad.
> if it is, then return a 401 (Authorisation required) error 
> code, in addition
> with this header:
> WWW-Authenticate: Basic realm="nicepeople"

Excellent! That works a treat, many thanks.

Nik

From msdemlei at cl.uni-heidelberg.de  Tue Apr 23 14:03:57 2002
From: msdemlei at cl.uni-heidelberg.de (Markus Demleitner)
Date: Fri Jan  9 22:03:10 2004
Subject: [mod_python] Dispatch() returned nothing again
Message-ID: <20020423120357.GD9011@tucana.cl.uni-heidelberg.de>

Hi List,

With mod_python 2.7.8, I still see quite a number of the
dreaded "Dispatch() returned nothing." messages when
there's only one return in dispatch, and that's in the
very last line of the function and returns apache.OK.

The consequence is a 500 server error, which is kind of
annoying.  After looking for some systematics in the occurrence
of these errors, I gave up -- a simple reload generally
works and returns the requested page all right.  Also,
it is extremely cumbersome to trigger the problem, since
it appears every page on the server can cause it, but only
every so-many accesses.

So -- does anyone have any tips on how to go about fixing
this?

Thanks,

        Markus

From peter.bittner at gmx.net  Thu Apr 25 16:35:20 2002
From: peter.bittner at gmx.net (Peter Bittner)
Date: Fri Jan  9 22:03:10 2004
Subject: [mod_python] Migrating from CGI-Python to mod_python
Message-ID: <30981.1019745320@www16.gmx.net>

Hi there!

(I am no complete Python newbie. However, I am new to mod_python.)

I have written a library database with web user interface in Python a while
ago. Now I finally want to migrate it to mod_python since this promises the
web interface to be much faster then.

I have read some of mod_python's documentation, but this seems not to have a
proper solution (or tutorial) for my migration problem.

Is there anyone who already has experience with migrating python code that
runs based on CGI to mod_python? (I don't think I want to use mod_python's CGI
handler. I'd rather go for a clean mod_python implementation!)

Can anyone provide me some sample code of clean mod_python scripts?
Please help!

Cheers, Peter

-- 
Peter Bittner
mobil: +43/(0)650/4151545
web: http://www.peterbittner.tk - http://www.htmlkurs.tk
mail: peter.bittner@gmx.net

"Free software is like free speech, not free beer" (Richard Stallman)

GMX - Die Kommunikationsplattform im Internet.
http://www.gmx.net


From goldii_nffo_54r1vm at mail.com  Fri Apr 26 09:28:49 2002
From: goldii_nffo_54r1vm at mail.com (GOLD INFO)
Date: Fri Jan  9 22:03:10 2004
Subject: [mod_python] =?windows-1251?Q?=CB=E5=E3=EA=EE=F1=F2=FC_=EF=F0=E8=E2=EB=E5=F7=E5=ED=E8=FF_=ED=EE=E2=FB=F5_=EA=EB=E8=E5=ED=F2=EE=E2?=
Message-ID: <19550200245265284949@mail.com>















-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mailman.modpython.org/pipermail/mod_python/attachments/20020426/57072341/attachment-0003.htm
From wart at softhome.net  Sat Apr 27 13:50:01 2002
From: wart at softhome.net (Wartan Hachaturow)
Date: Fri Jan  9 22:03:10 2004
Subject: [mod_python] Authentification with publisher handler
Message-ID: <20020427135000.A7545@calmar.tepkom.ru>

Hello.

I am trying to get an authentificated user's username from inside
a python code.

Here's the code:

__auth_realm__ = "Authorization"
__access__ = 1


def __auth__(req, user, passwd):
	if user == "foo" and passwd == "bar":
		return 1
	else:
		return 0

def stats(req):
	req.get_basic_auth_pw()
	return "<html><body>" + str(req.connection.user) + "</body></html>"	


What I get is a "None", i.e. req.connection.user is None. 
What could be the problem?

P.S. libapache-mod-python 2:2.7.6-1, python 2.1, apache 1.3.24

--
Regards, Wartan.

	

From hpotter at consultant.com  Sun Apr 28 18:49:52 2002
From: hpotter at consultant.com (hpotter@consultant.com)
Date: Fri Jan  9 22:03:10 2004
Subject: [mod_python] Good news for American and Canadian smokers
Message-ID: <200204290622.g3T6M9s00593@eden.ispol.com>

From Nik.Barron at pennantplc.co.uk  Mon Apr 29 08:58:25 2002
From: Nik.Barron at pennantplc.co.uk (Nik Barron)
Date: Fri Jan  9 22:03:10 2004
Subject: [mod_python] Authentification with publisher handler
Message-ID: <F17550784FF9D111B7F100E02921B24741E8C7@NT-SOTON-001>

> What I get is a "None", i.e. req.connection.user is None. 
> What could be the problem?

I had a similar problem -- do you get a login box when accessing the page?
If not, try adding the following to the authentication handler instead of
the return 0:

	else:
		req.headers_out.add("WWW-Authenticate", 'Basic
realm="whatever"')
		return apache.HTTP_UNAUTHORIZED

Nick Barron
Manager, E-Services Division
Pennant Software Services Ltd -- Registered in England No. 3772667
PGP: A94C 4190 026E 3E02 6D50  C8FA 8620 3091 FF34 533D

From wart at softhome.net  Mon Apr 29 11:22:19 2002
From: wart at softhome.net (Wartan Hachaturow)
Date: Fri Jan  9 22:03:10 2004
Subject: [mod_python] Authentification with publisher handler
In-Reply-To: <F17550784FF9D111B7F100E02921B24741E8C7@NT-SOTON-001>; from Nik.Barron@pennantplc.co.uk on Mon, Apr 29, 2002 at 08:58:25AM +0100
References: <F17550784FF9D111B7F100E02921B24741E8C7@NT-SOTON-001>
Message-ID: <20020429112219.A9300@calmar.tepkom.ru>

On Mon, Apr 29, 2002 at 08:58:25AM +0100, Nik Barron wrote:

> I had a similar problem -- do you get a login box when accessing the page?

Yes, I do. But req.connection.user is still None. Even adding explicit 
"unauthorized" as you suggested doesn't help.

--
Regards, Wartan.

