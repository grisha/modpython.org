From leader730 at hotmail.com  Sun Sep  1 00:40:30 2002
From: leader730 at hotmail.com (Leader730)
Date: Fri Jan  9 21:46:58 2004
Subject: [mod_python] Running more than one Python script
Message-ID: <OE23auNjVuMhvqgStMV0000edaf@hotmail.com>

Hello, I am new to all this and I'm having a problem, I configured mod_python on alright I guess but the only file that will run is the the name specidied after PythonHandler in the apache httpd.conf file

<Directory "C:/Program Files/Apache Group/Apache/htdocs/server">
   AddHandler python-program .py
   PythonHandler test
</Directory>

so in this case only the file test.py would run, anything else would return the same thing as test.py, I followed the tutorial and it says that every file should run but it doesn't work for me, I have it setup exactly like it says so If anyone knows how to fix this please tell me (I'm running it on Windows btw).

thanks


-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mailman.modpython.org/pipermail/mod_python/attachments/20020901/fb1bdcaf/attachment.htm
From ian at veryfresh.com  Sun Sep  1 03:00:23 2002
From: ian at veryfresh.com (Ian Clelland)
Date: Fri Jan  9 21:46:58 2004
Subject: [mod_python] Running more than one Python script
In-Reply-To: <OE23auNjVuMhvqgStMV0000edaf@hotmail.com>
References: <OE23auNjVuMhvqgStMV0000edaf@hotmail.com>
Message-ID: <20020901100023.GG5501@fullfactor.com>

On Sun, Sep 01, 2002 at 12:40:30AM -0400, Leader730 wrote:
> Hello, I am new to all this and I'm having a problem, I configured 
> mod_python on alright I guess but the only file that will run is the 
> the name specidied after PythonHandler in the apache httpd.conf file
> 
> <Directory "C:/Program Files/Apache Group/Apache/htdocs/server">
>    AddHandler python-program .py
>    PythonHandler test
> </Directory>

Yes, it looks like you have Apache configured correctly to run 
mod_python on all URLs which end in '.py' in that directory.
 
> so in this case only the file test.py would run, anything else would 
> return the same thing as test.py, I followed the tutorial and it says 
> that every file should run but it doesn't work for me, I have it 
> setup exactly like it says so If anyone knows how to fix this please 
> tell me (I'm running it on Windows btw).

The tutorial _does not_ say that every python file will be run by the 
server. The last paragraph of the tutorial (Section 3.2 of the manual) 
explains that Apache won't even look at the name of the file. Because 
of the way that Apache works, *EVERY* URL which ends in ".py" will 
cause mod_python to run the "test" module, in this case. This is the 
correct behaviour; Apache only allows you to set up one python handler 
per <Directory> tag.

If what you are looking for is a way to run various python files that 
you have placed in your web server directories, then you need to use a 
dispatcher handler, like Publisher. The Publisher handler looks at all 
of the requests which come in to the server, and passes them off to 
your python files, based on their filenames. Check out section 3.4 of 
the manual for a quick introduction to it.

Ian
<ian@veryfresh.com> 

From haering_python at gmx.de  Sun Sep  1 17:40:53 2002
From: haering_python at gmx.de (Gerhard =?iso-8859-1?Q?H=E4ring?=)
Date: Fri Jan  9 21:46:58 2004
Subject: [mod_python] Problems with -HEAD and Apache 2.0.40 on FreeBSD
Message-ID: <20020901154053.GA1241@lilith.ghaering.test>

I tried to get the CVS version working with Apache 2.0.40 on FreeBSD
4.6-STABLE but had no luck :-(

This is what I did:

compiled the FreeBSD apache2 port using WITH_THREADS=1. Which seems to
have worked:

gargamel# ldd /usr/local/sbin/httpd
/usr/local/sbin/httpd:
[...]
libc_r.so.4 => /usr/lib/libc_r.so.4 (0x28225000)
libc.so.4 => /usr/lib/libc.so.4 (0x282df000)
 
I'm not sure if its ok to link against libc_r and libc at the same time,
though. But as is, Apache seems to display static pages fine. But then,
I have no experience with Apache2 whatsoever.

gargamel# /usr/local/sbin/httpd -l
Compiled in modules:
core.c
prefork.c
http_core.c
mod_so.c

So it looks like it's using the preforked model.

The Python compiled against is the standard FreeBSD port with threads
enabled:
gargamel# ldd /usr/local/bin/python
/usr/local/bin/python:
libutil.so.3 => /usr/lib/libutil.so.3 (0x280e6000)
libm.so.2 => /usr/lib/libm.so.2 (0x280ef000)
libc_r.so.4 => /usr/lib/libc_r.so.4 (0x2810b000)

mod_python.so is statically linked against libpython2.2.a, however again
is linked against the normal, nonthreaded libc (!):

gargamel# ldd /usr/local/libexec/apache2/mod_python.so
/usr/local/libexec/apache2/mod_python.so:
libm.so.2 => /usr/lib/libm.so.2 (0x281d9000)
libutil.so.3 => /usr/lib/libutil.so.3 (0x281f5000)
libc.so.4 => /usr/lib/libc.so.4 (0x28069000)

Needless to say, the results aren't that satisfactory:

[Sun Sep 01 17:32:32 2002] [notice] Apache/2.0.40 (Unix) mod_python/3.0.0-BETA Python/2.2.1 configured -- resuming normal operations
[Sun Sep 01 17:32:39 2002] [notice] child pid 35323 exit signal Segmentation fault (11)
[Sun Sep 01 17:32:39 2002] [notice] child pid 35324 exit signal Segmentation fault (11)

All I did was put this line in httpd.conf:
LoadModule python_module libexec/apache2/mod_python.so

I didn't even call a Python handler, yet.

Any clues?

Gerhard
-- 
mail:   gerhard <at> bigfoot <dot> de       registered Linux user #64239
web:    http://www.cs.fhm.edu/~ifw00065/    OpenPGP public key id AD24C930
public key fingerprint: 3FCC 8700 3012 0A9E B0C9  3667 814B 9CAA AD24 C930
reduce(lambda x,y:x+y,map(lambda x:chr(ord(x)^42),tuple('zS^BED\nX_FOY\x0b')))

From grisha at modpython.org  Sun Sep  1 13:47:41 2002
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 21:46:58 2004
Subject: [mod_python] Problems with -HEAD and Apache 2.0.40 on FreeBSD
In-Reply-To: <20020901154053.GA1241@lilith.ghaering.test>
Message-ID: <Pine.BSF.4.32.0209011343500.45308-100000@eden.ispol.com>

I haven't tried it on FreeBSD yet. Apache seemed (or seemed, don't know if
it's resolved in .40) to have some sort of a problem with FreeBSD threads
(thus prefork being the default MPM). Because of this I actually moved all
my development to Linux (to my dismay). So it's possible you have to do
everything without threads. If you figre this out out, please let me know.

Grisha

On Sun, 1 Sep 2002, Gerhard [iso-8859-1] H?ring wrote:

> I tried to get the CVS version working with Apache 2.0.40 on FreeBSD
> 4.6-STABLE but had no luck :-(
>
> This is what I did:
>
> compiled the FreeBSD apache2 port using WITH_THREADS=1. Which seems to
> have worked:
>
> gargamel# ldd /usr/local/sbin/httpd
> /usr/local/sbin/httpd:
> [...]
> libc_r.so.4 => /usr/lib/libc_r.so.4 (0x28225000)
> libc.so.4 => /usr/lib/libc.so.4 (0x282df000)
>
> I'm not sure if its ok to link against libc_r and libc at the same time,
> though. But as is, Apache seems to display static pages fine. But then,
> I have no experience with Apache2 whatsoever.
>
> gargamel# /usr/local/sbin/httpd -l
> Compiled in modules:
> core.c
> prefork.c
> http_core.c
> mod_so.c
>
> So it looks like it's using the preforked model.
>
> The Python compiled against is the standard FreeBSD port with threads
> enabled:
> gargamel# ldd /usr/local/bin/python
> /usr/local/bin/python:
> libutil.so.3 => /usr/lib/libutil.so.3 (0x280e6000)
> libm.so.2 => /usr/lib/libm.so.2 (0x280ef000)
> libc_r.so.4 => /usr/lib/libc_r.so.4 (0x2810b000)
>
> mod_python.so is statically linked against libpython2.2.a, however again
> is linked against the normal, nonthreaded libc (!):
>
> gargamel# ldd /usr/local/libexec/apache2/mod_python.so
> /usr/local/libexec/apache2/mod_python.so:
> libm.so.2 => /usr/lib/libm.so.2 (0x281d9000)
> libutil.so.3 => /usr/lib/libutil.so.3 (0x281f5000)
> libc.so.4 => /usr/lib/libc.so.4 (0x28069000)
>
> Needless to say, the results aren't that satisfactory:
>
> [Sun Sep 01 17:32:32 2002] [notice] Apache/2.0.40 (Unix) mod_python/3.0.0-BETA Python/2.2.1 configured -- resuming normal operations
> [Sun Sep 01 17:32:39 2002] [notice] child pid 35323 exit signal Segmentation fault (11)
> [Sun Sep 01 17:32:39 2002] [notice] child pid 35324 exit signal Segmentation fault (11)
>
> All I did was put this line in httpd.conf:
> LoadModule python_module libexec/apache2/mod_python.so
>
> I didn't even call a Python handler, yet.
>
> Any clues?
>
> Gerhard
> --
> mail:   gerhard <at> bigfoot <dot> de       registered Linux user #64239
> web:    http://www.cs.fhm.edu/~ifw00065/    OpenPGP public key id AD24C930
> public key fingerprint: 3FCC 8700 3012 0A9E B0C9  3667 814B 9CAA AD24 C930
> reduce(lambda x,y:x+y,map(lambda x:chr(ord(x)^42),tuple('zS^BED\nX_FOY\x0b')))
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://www.modpython.org/mailman/listinfo/mod_python
>


From other at stopthesanity.org  Mon Sep  2 11:43:29 2002
From: other at stopthesanity.org (Chris Cioffi)
Date: Fri Jan  9 21:46:58 2004
Subject: [mod_python] mptest.py fails with (8)Exec format error
Message-ID: <015301c25297$7c15d4a0$75125340@MYOBKPQVQN74K8>

I've looked through the docs and FAQs and couldn't find anything.

Google brought up this link:
http://www.modpython.org/pipermail/mod_python/2001-July/001489.html
but no one answered the question through the list.

My config:
Debian woody, Apache 1.3.26
mod_python 2.7.8

I copied the test script and configuration out of the docs exactly. 

Any ideas?  Thanks!
-- 
Chris <chris@stopthesanity.org>
  Junior Birdman(TM) in training
  http://stopthesanity.org



From grisha at modpython.org  Mon Sep  2 12:27:57 2002
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 21:46:58 2004
Subject: [mod_python] mptest.py fails with (8)Exec format error
In-Reply-To: <015301c25297$7c15d4a0$75125340@MYOBKPQVQN74K8>
Message-ID: <Pine.BSF.4.32.0209021226460.55551-100000@eden.ispol.com>

The problem is that Apache is treating it like a CGI script, which it
isn't.

Grisha

On Mon, 2 Sep 2002, Chris Cioffi wrote:

> I've looked through the docs and FAQs and couldn't find anything.
>
> Google brought up this link:
> http://www.modpython.org/pipermail/mod_python/2001-July/001489.html
> but no one answered the question through the list.
>
> My config:
> Debian woody, Apache 1.3.26
> mod_python 2.7.8
>
> I copied the test script and configuration out of the docs exactly.
>
> Any ideas?  Thanks!
> --
> Chris <chris@stopthesanity.org>
>   Junior Birdman(TM) in training
>   http://stopthesanity.org
>
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://www.modpython.org/mailman/listinfo/mod_python
>


From other at stopthesanity.org  Mon Sep  2 12:33:21 2002
From: other at stopthesanity.org (Chris Cioffi)
Date: Fri Jan  9 21:46:58 2004
Subject: [mod_python] mptest.py fails with (8)Exec format error
References: <E398378A-BE8C-11D6-A0B8-0030653DCC28@attbi.com>
Message-ID: <016401c2529e$736dc7c0$75125340@MYOBKPQVQN74K8>

Bingo.  Thanks Jeff!

-- 
Chris <chris@stopthesanity.org>
  Junior Birdman(TM) in training
  http://stopthesanity.org
----- Original Message ----- 
From: "Jeff Stearns" <jeffstearns@attbi.com>
To: "Chris Cioffi" <other@stopthesanity.org>
Sent: Monday, September 02, 2002 11:58 AM
Subject: Re: [mod_python] mptest.py fails with (8)Exec format error


> Chris -
> 
> You don't provide any details of the problem you're having, so all I can 
> do is guess.
> 
> Make sure that your file doesn't have \r\n line terminators.  You can do 
> that in vi or look with od.
> 
> I assume you're using a #! line at the start of the file.  Triple-check 
> it; it's probably wrong.
> 
> -jeff stearns
> 
> On Monday, September 2, 2002, at 08:43  AM, Chris Cioffi wrote:
> 
> > I've looked through the docs and FAQs and couldn't find anything.
> >
> > Google brought up this link:
> > http://www.modpython.org/pipermail/mod_python/2001-July/001489.html
> > but no one answered the question through the list.
> >
> > My config:
> > Debian woody, Apache 1.3.26
> > mod_python 2.7.8
> >
> > I copied the test script and configuration out of the docs exactly.
> >
> > Any ideas?  Thanks!
> > --
> > Chris <chris@stopthesanity.org>
> >   Junior Birdman(TM) in training
> >   http://stopthesanity.org
> >
> >
> > _______________________________________________
> > Mod_python mailing list
> > Mod_python@modpython.org
> > http://www.modpython.org/mailman/listinfo/mod_python
> 
> 
> 



From leader730 at hotmail.com  Mon Sep  2 22:54:13 2002
From: leader730 at hotmail.com (Leader730)
Date: Fri Jan  9 21:46:58 2004
Subject: [mod_python] PythonHandler mod_python.publisher returns 404 for every file
Message-ID: <OE36fdhNzW3l1GM3h3v00003a92@hotmail.com>

Hellp, I am trying to get PythonHandler mod_python.publisher to work but everytime I try it, any python file I try to run on the server returns a "404 File Not Found" error. this is the config:

<Directory "C:/Program Files/Apache Group/Apache/htdocs/server">
    AddHandler python-program .py
    PythonHandler mod_python.publisher
</Directory>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mailman.modpython.org/pipermail/mod_python/attachments/20020902/e6be7731/attachment.htm
From peter.bittner at gmx.net  Tue Sep  3 18:07:01 2002
From: peter.bittner at gmx.net (Peter Bittner)
Date: Fri Jan  9 21:46:58 2004
Subject: [mod_python] How can I have sensible URLs?
Message-ID: <23016.1031069221@www25.gmx.net>

Hi there!

I have a little bit of understand problem of how the architecture of a
mod_python web application (say web site, if you want) should be.

I would like to have the URLs as if the mod_python scripts were simply some
kind of "special HTML documents", comparable to PHP scripts.

For example, I have written a script named "index.py" which is located on my
document root. So I would expect "http://www.mydomain.com/index.py" to
execute my script (I have set up my Apache so that I can omit the filename, too).
But it doesn't. When I remove the ".py" at the end there is no change to this
too.

So what I have to do is to execute "http://www.mydomain.com/index/method",
provided a method called "method" in my script. This way it works. - But is
there a way to have "HTML-like" or "PHP-like" behavior? Or how do I have to
organize my scripts so that I can have my whole website written in mod_python
and can run it with "http://www.mydomain.com" alone?

Does anyone have a good example about how to do this?

Thanks in advance!
Peter

-- 
Peter Bittner
mobil: +43/(0)650/4151545
web: http://www.bittner.at.tf - http://beam.to/htmlkurs
mail: peter.bittner@gmx.net

"Free software is like free speech, not free beer" (Richard Stallman)

GMX - Die Kommunikationsplattform im Internet.
http://www.gmx.net


From Hans.Yandle at cingular.com  Tue Sep  3 12:28:31 2002
From: Hans.Yandle at cingular.com (Yandle, Hans)
Date: Fri Jan  9 21:46:58 2004
Subject: [mod_python] How can I have sensible URLs?
Message-ID: <D31B04F24EDE7644BB169BB4F080778A01F4C613@s30342g004005>

If the publisher module of mod_python does not fill the bill try looking to
http://spyce.sourceforge.net/, http://www.ccraig.org/software/pyhp/, or just
go looking around on http://py.vaults.ca/parnassus/ for other stuff.

Hans

-----Original Message-----
From: Peter Bittner [mailto:peter.bittner@gmx.net]
Sent: Tuesday, September 03, 2002 12:07 PM
To: mod_python@modpython.org
Subject: [mod_python] How can I have sensible URLs?


Hi there!

I have a little bit of understand problem of how the architecture of a
mod_python web application (say web site, if you want) should be.

I would like to have the URLs as if the mod_python scripts were simply some
kind of "special HTML documents", comparable to PHP scripts.

For example, I have written a script named "index.py" which is located on my
document root. So I would expect "http://www.mydomain.com/index.py" to
execute my script (I have set up my Apache so that I can omit the filename,
too).
But it doesn't. When I remove the ".py" at the end there is no change to
this
too.

So what I have to do is to execute "http://www.mydomain.com/index/method",
provided a method called "method" in my script. This way it works. - But is
there a way to have "HTML-like" or "PHP-like" behavior? Or how do I have to
organize my scripts so that I can have my whole website written in
mod_python
and can run it with "http://www.mydomain.com" alone?

Does anyone have a good example about how to do this?

Thanks in advance!
Peter

-- 
Peter Bittner
mobil: +43/(0)650/4151545
web: http://www.bittner.at.tf - http://beam.to/htmlkurs
mail: peter.bittner@gmx.net

"Free software is like free speech, not free beer" (Richard Stallman)

GMX - Die Kommunikationsplattform im Internet.
http://www.gmx.net

_______________________________________________
Mod_python mailing list
Mod_python@modpython.org
http://www.modpython.org/mailman/listinfo/mod_python

From grisha at modpython.org  Tue Sep  3 13:03:37 2002
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 21:46:58 2004
Subject: [mod_python] How can I have sensible URLs?
In-Reply-To: <23016.1031069221@www25.gmx.net>
Message-ID: <Pine.BSF.4.32.0209031257590.68415-100000@eden.ispol.com>

Basically, the publisher doesn't have a "default" method name. (There is
no particular reason for this, it just didn't occur to me at the time of
writing.)

There is probably more than one way to accomplish something to that
extent, one way would be to try a redirect, something like:

Redirect /index.py http://www.mydomain.com/index.py/index

Grisha

On Tue, 3 Sep 2002, Peter Bittner wrote:

> Hi there!
>
> I have a little bit of understand problem of how the architecture of a
> mod_python web application (say web site, if you want) should be.
>
> I would like to have the URLs as if the mod_python scripts were simply some
> kind of "special HTML documents", comparable to PHP scripts.
>
> For example, I have written a script named "index.py" which is located on my
> document root. So I would expect "http://www.mydomain.com/index.py" to
> execute my script (I have set up my Apache so that I can omit the filename, too).
> But it doesn't. When I remove the ".py" at the end there is no change to this
> too.
>
> So what I have to do is to execute "http://www.mydomain.com/index/method",
> provided a method called "method" in my script. This way it works. - But is
> there a way to have "HTML-like" or "PHP-like" behavior? Or how do I have to
> organize my scripts so that I can have my whole website written in mod_python
> and can run it with "http://www.mydomain.com" alone?
>
> Does anyone have a good example about how to do this?
>
> Thanks in advance!
> Peter
>
> --
> Peter Bittner
> mobil: +43/(0)650/4151545
> web: http://www.bittner.at.tf - http://beam.to/htmlkurs
> mail: peter.bittner@gmx.net
>
> "Free software is like free speech, not free beer" (Richard Stallman)
>
> GMX - Die Kommunikationsplattform im Internet.
> http://www.gmx.net
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://www.modpython.org/mailman/listinfo/mod_python
>


From mbp at samba.org  Wed Sep  4 11:42:35 2002
From: mbp at samba.org (Martin Pool)
Date: Fri Jan  9 21:46:59 2004
Subject: [mod_python] How can I have sensible URLs?
In-Reply-To: <23016.1031069221@www25.gmx.net>
References: <23016.1031069221@www25.gmx.net>
Message-ID: <20020904014233.GC7271@samba.org>

On  3 Sep 2002, Peter Bittner <peter.bittner@gmx.net> wrote:
> Hi there!
> 
> I have a little bit of understand problem of how the architecture of a
> mod_python web application (say web site, if you want) should be.
> 
> I would like to have the URLs as if the mod_python scripts were simply some
> kind of "special HTML documents", comparable to PHP scripts.
> 
> For example, I have written a script named "index.py" which is located on my
> document root. So I would expect "http://www.mydomain.com/index.py" to
> execute my script (I have set up my Apache so that I can omit the filename, too).
> But it doesn't. When I remove the ".py" at the end there is no change to this
> too.
> 
> So what I have to do is to execute "http://www.mydomain.com/index/method",
> provided a method called "method" in my script. This way it works. - But is
> there a way to have "HTML-like" or "PHP-like" behavior? Or how do I have to
> organize my scripts so that I can have my whole website written in mod_python
> and can run it with "http://www.mydomain.com" alone?

Have a look at the mod_rewrite documentation.  Something like

  RewriteMatch /index/(.*) /python/index.py/$1

-- 
Martin 

From Thomas.Rothmayer at borealisgroup.com  Wed Sep  4 07:55:15 2002
From: Thomas.Rothmayer at borealisgroup.com (Rothmayer, Thomas)
Date: Fri Jan  9 21:46:59 2004
Subject: [mod_python] Python - MySql - Apache: Installation of mod_python on WinNT
Message-ID: <B956D4DA8568D41186B60050046724AC183D05@LZNTS005>

Good morning all,

to add data to my MySql-database (and to display the query-results on a
browswer) I'm using PHP. It's running quite well.
But as I insert most of the data with several NumPy-scripts, I'd like to do
also the output with Python (e.g. graphs on the browser) in order not to get
too much different softwares.

I've already tried to install mod_snake (because Apache 2.0 is installed on
my computer) and WebWare/Webkit - without success.
My OS is WinNT, MySQLdb is installed.

Some changes I made:
httpd.conf:	LoadModule webkit_module modules/mod_webkit.dll
webkit.cgi:	#! c:\programme\python21\python

Please support me with installation details of mod_snake and/or Webware (if
necessary) on NT!
Someone already has experience with my software triumvirat?


Many thanks,
Thomas



**********************************************************************
This email and any files transmitted with it are confidential and
intended solely for the use of the individual or entity to whom they
are addressed. If you have received this email in error please notify
the sender either by telephone or by e-mail and delete the material
from any computer. Thank you for your cooperation.

This footnote also confirms that this email message has been swept by
MIMEsweeper for the presence of computer viruses.

www.borealisgroup.com
**********************************************************************


From fabbe at paniq.net  Wed Sep  4 09:25:13 2002
From: fabbe at paniq.net (Fabian Fagerholm)
Date: Fri Jan  9 21:46:59 2004
Subject: [mod_python] Python - MySql - Apache: Installation of
	mod_python on WinNT
In-Reply-To: <B956D4DA8568D41186B60050046724AC183D05@LZNTS005>
References: <B956D4DA8568D41186B60050046724AC183D05@LZNTS005>
Message-ID: <1031120714.4175.3.camel@kernel>

On Wed, 2002-09-04 at 08:55, Rothmayer, Thomas wrote:
> Please support me with installation details of mod_snake and/or Webware (if
> necessary) on NT!
> Someone already has experience with my software triumvirat?

mod_snake is dead, but the remnants can be found on
http://sourceforge.net/projects/modsnake

The home page for Webware is http://webware.sourceforge.net/ and has
details about that.

Did you realize you sent your mail to the mod_python mailing list? If
you'd like to try mod_python for your web application, then please see
the mod_python home page: http://www.modpython.org/

There are detailed instructions, including a tutorial.

Have fun!

Fabian

-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 240 bytes
Desc: This is a digitally signed message part
Url : http://mailman.modpython.org/pipermail/mod_python/attachments/20020904/b9574f6b/attachment.bin
From peter.bittner at gmx.net  Wed Sep  4 11:03:01 2002
From: peter.bittner at gmx.net (Peter Bittner)
Date: Fri Jan  9 21:46:59 2004
Subject: [mod_python] How can I have sensible URLs?
References: <Pine.BSF.4.32.0209031257590.68415-100000@eden.ispol.com>
Message-ID: <7845.1031130181@www2.gmx.net>

Hi Grisha,

> Basically, the publisher doesn't have a "default" method name. (There is
> no particular reason for this, it just didn't occur to me at the time of
> writing.)

Wouldn't it be a nice idea to provide such a default method name? ("main"
seems a good name for that task.)

I am very keen on organizing my web projects nicely, so I usually structure
the application using separate file for separate tasks.

I also like to obey a couple of web-design paradigmas such as "let your URLs
be hackable", which says nothing less than when the user modifies the URL
there shouldn't be an "unexpected behaviour" as a result. I do get a little of
a headache when I think of users removing the "/dothis" from a
"http://www.mydomain.com/myscript/dothis" and then getting a "404 Not Found".  :-(

I have the feeling that this is really a point that presents a huge
understanding problem to novices, to mod_python beginners, (even if they are
perfectly familiar to Python).
Python scripts begin a the start of the file, everything is processed
sequentially. Why not having a default starting point for mod_python scripts?

Grisha, what was/is your motivation to omit the ".py" in the URL at the end
of the script's filename? - Don't get me wrong, I do see the beauty in this
solution (since the ".py" hits the eye), but isn't this arguably? Wouldn't a
CGI-style processing ("..../myscript.cgi?opt1=abc") be more straight forward?

I would be really happy seeing mod_python to be that easy to understand and
easy to use (to write applications) that it might be a real alternative to
PHP, JSP and ASP, and still (with Python a its base) being a language where
beautiful and well structured code emerges from.

> There is probably more than one way to accomplish something to that
> extent, one way would be to try a redirect, something like:
> 
> Redirect /index.py http://www.mydomain.com/index.py/index

Apache's module mod_rewrite might be some kind of workaround to this. But is
this really satisfying? How do other programmers feel about this?

Cheers, Peter


> On Tue, 3 Sep 2002, Peter Bittner wrote:
> 
> > Hi there!
> >
> > I have a little bit of understand problem of how the architecture of a
> > mod_python web application (say web site, if you want) should be.
> >
> > I would like to have the URLs as if the mod_python scripts were simply
> some
> > kind of "special HTML documents", comparable to PHP scripts.
> >
> > For example, I have written a script named "index.py" which is located
> on my
> > document root. So I would expect "http://www.mydomain.com/index.py" to
> > execute my script (I have set up my Apache so that I can omit the
> filename, too).
> > But it doesn't. When I remove the ".py" at the end there is no change to
> this
> > too.
> >
> > So what I have to do is to execute
> "http://www.mydomain.com/index/method",
> > provided a method called "method" in my script. This way it works. - But
> is
> > there a way to have "HTML-like" or "PHP-like" behavior? Or how do I have
> to
> > organize my scripts so that I can have my whole website written in
> mod_python
> > and can run it with "http://www.mydomain.com" alone?
> >
> > Does anyone have a good example about how to do this?
> >
> > Thanks in advance!
> > Peter
> >
> > --
> > Peter Bittner
> > mobil: +43/(0)650/4151545
> > web: http://www.bittner.at.tf - http://beam.to/htmlkurs
> > mail: peter.bittner@gmx.net
> >
> > "Free software is like free speech, not free beer" (Richard Stallman)
> 

-- 
GMX - Die Kommunikationsplattform im Internet.
http://www.gmx.net


From rien at yeepa.org  Wed Sep  4 12:01:25 2002
From: rien at yeepa.org (Adrien Plisson)
Date: Fri Jan  9 21:46:59 2004
Subject: [mod_python] How can I have sensible URLs?
References: <Pine.BSF.4.32.0209031257590.68415-100000@eden.ispol.com> <7845.1031130181@www2.gmx.net>
Message-ID: <000501c253fa$08b08230$0a020101@skynet.be>

From: "Peter Bittner" <peter.bittner@gmx.net>
> Apache's module mod_rewrite might be some kind of workaround to this. But
is
> this really satisfying? How do other programmers feel about this?

i used mod_rewrite for almost the same purpose.
i took me some times (counting in minutes) to figure out how to write the
regular expression which rewrite the URL. but if you always use the same
name for the default method and *every* files are python script, then one
rule is sufficient for the whole server. for more complex cases, take the
time to know exactly in which case you need a rewrite, and there will always
be a regular expression matching your need.
in my case, i ended up with 5 rules for the whole server -> 5 different
cases which could happen when a request is coming in.

mod_rewrite is flexible (due to the use of regexp), easy to understand, and
incredibly powerful : it allows you to do everything you want when dealing
with url problems. try it and you will like it.

--
rien


From peter.bittner at gmx.net  Wed Sep  4 15:09:32 2002
From: peter.bittner at gmx.net (Peter Bittner)
Date: Fri Jan  9 21:46:59 2004
Subject: [mod_python] How can I have sensible URLs?
References: <000501c253fa$08b08230$0a020101@skynet.be>
Message-ID: <20103.1031144972@www25.gmx.net>

Adrien,

> mod_rewrite is flexible (due to the use of regexp), easy to understand,
> and incredibly powerful : it allows you to do everything you want when
> dealing with url problems. try it and you will like it.

I'm sure mod_rewrite is a good thing when all you want is really just
beautiful URLs and nothing more.

In my case I think there is some more to it. I'll try to sketch it out:
Say, I have the following scripts that form a user interface to a library
database (say, I'm using Python over CGI for this one here)

- http://www.mydomain.com/libdb/index.py
- http://www.mydomain.com/libdb/input.py
- http://www.mydomain.com/libdb/search.py
- http://www.mydomain.com/libdb/reports.py
- http://www.mydomain.com/libdb/maintain.py

I'm sure you can imagine that every script is doing a lot of stuff (printing
out HTML forms, handling user actions and so on). - Let's see how I would
implement this with mod_python:

- I would write one large mod_python script called "libdb.py" which contains
basically the whole code of all the above listed scripts. Each of the above
scripts I would replace by methods (handlers) like "def index():", "def
input():", "def search():", etc.
Then I've ended up with a huge, almost unmaintainable script.  :-(

Is there any way to avoid this?
Would anyone tackle this problem differently?

Any help is greatly appreciated!
Cheers, Peter

-- 
Peter Bittner
mobil: +43/(0)650/4151545
web: http://www.bittner.at.tf - http://beam.to/htmlkurs
mail: peter.bittner@gmx.net

"Free software is like free speech, not free beer" (Richard Stallman)

GMX - Die Kommunikationsplattform im Internet.
http://www.gmx.net


From christoph at cocon-seide.com  Wed Sep  4 16:50:24 2002
From: christoph at cocon-seide.com (Christoph Fritzsch)
Date: Fri Jan  9 21:46:59 2004
Subject: [mod_python] How can I have sensible URLs?
In-Reply-To: <20103.1031144972@www25.gmx.net>
Message-ID: <20020904154555.EF66C9BB41@mail.fritzsch.net>

Hi Peter !

>Say, I have the following scripts that form a user interface to a library
>database (say, I'm using Python over CGI for this one here)
>
>- http://www.mydomain.com/libdb/index.py
>- http://www.mydomain.com/libdb/input.py
....
I can see perfectly well that ONE big script would be a pain in the a....
And I hope I understood you alright.
But why not seperate them by putting one script in in one file and wrap it in one def:
file "input.py" :

def main():
  all the code input needs
  return 'the printout'

and call it by http://.../libdb/input/main
next file "maintainer.py":
def main():
 code
 return 'xx'
and call it by http://.../libdb/maintainer/main

prerequisite is that the publisher is installed :-)

The only disadvantage would be the trailing /main or whatever you should call it if main 
is a reseverd word

Take care Christoph


From peter.bittner at gmx.net  Wed Sep  4 17:56:13 2002
From: peter.bittner at gmx.net (Peter Bittner)
Date: Fri Jan  9 21:46:59 2004
Subject: [mod_python] How can I have sensible URLs?
References: <7845.1031130181@www2.gmx.net>
Message-ID: <16280.1031154973@www2.gmx.net>

Hi!

> "Grisha" wrote:
> > Basically, the publisher doesn't have a "default" method name. (There is
> > no particular reason for this, it just didn't occur to me at the time of
> > writing.)

I have adapted my publisher.py so that is now takes a "default()" method by
default 
if no one is specified in the URL. (See the the code below.)

Do you think this adaption is worth being part of the "official" mod_python?
Anyone 
who finds this interesting? (Anyone who wouldn't like it?)

> I do get a little of a headache when I think of users removing the
> "/dothis" from a "http://www.mydomain.com/myscript/dothis" and then
> getting a "404 Not Found".  :-(

I was a little bit unprecise: It is not a 404 that is raised, it is a
"IndexError: 
string index out of range" that is displayed.

I have changed the code in "publisher.py" from

80:    if func_path[-1] == ".":
81:        func_path = func_path[:-1]

to the following: (the numbers on the left are the line numbers)

80:    if func_path == "":          # set method name to "default"
81:        func_path = "default"    # if none is specified in the URL
82:    elif func_path[-1] == ".":
83:        func_path = func_path[:-1]

(Actually, now it displays the 404 if no "default" method is present! ;-)
*argl*)

Now I have a default-method in each script and I can call scripts by 
"http://servername/scriptname/". It works! :-)

Please send me your comments about this change. Does anyone feel this should
be a 
default mod_python behavior? (I don't like to know my mod_python code only
works on 
my very own server and nowhere else, hugh!)

Cheers,
Peter


-- 
Peter Bittner
mobil: +43/(0)650/4151545
web: http://www.bittner.at.tf - http://beam.to/htmlkurs
mail: peter.bittner@gmx.net

"Free software is like free speech, not free beer" (Richard Stallman)

GMX - Die Kommunikationsplattform im Internet.
http://www.gmx.net
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/octet-stream
Size: 81 bytes
Desc: not available
Url : http://mailman.modpython.org/pipermail/mod_python/attachments/20020904/8932dce9/attachment.obj
From rien at yeepa.org  Wed Sep  4 18:13:02 2002
From: rien at yeepa.org (Adrien Plisson)
Date: Fri Jan  9 21:46:59 2004
Subject: [mod_python] How can I have sensible URLs?
References: <20020904154555.EF66C9BB41@mail.fritzsch.net>
Message-ID: <000701c2542d$f23eab10$0a020101@skynet.be>

From: "Christoph Fritzsch" <christoph@cocon-seide.com>
> But why not seperate them by putting one script in in one file and wrap it
in one def:
> file "input.py" :
>
> def main():
>   all the code input needs
>   return 'the printout'
>
> and call it by http://.../libdb/input/main
> next file "maintainer.py":
> def main():
>  code
>  return 'xx'
> and call it by http://.../libdb/maintainer/main
>
> prerequisite is that the publisher is installed :-)

I was thinking that this was already the case, that's why i didn't precised
it in my previous reply.
so, yes, you can do it this way with the following addenda:

> The only disadvantage would be the trailing /main or whatever you should
call it if main
> is a reseverd word

the trailing main could be added on the server side with a mod_rewrite
RewriteRule, i.e. :
RewriteRule (.*/libd)/([^\.])\.py $1/$2/main
so a client request to:
http://.../libdb/input.py
would be rewriten and will look like:
http://.../libdb/input/main

(the RewriteRule is given in example and has not been tested, so don't
expect it to do the work as it should)

--
rien


From drh9296 at ritvax.rit.edu  Wed Sep  4 15:09:50 2002
From: drh9296 at ritvax.rit.edu (David Higgs)
Date: Fri Jan  9 21:46:59 2004
Subject: [mod_python] Re: How can I have sensible URLs?
References: <20020904160001.81353.92151.Mailman@eden.ispol.com>
Message-ID: <3D765A7E.6080203@rit.edu>

> I'm sure you can imagine that every script is doing a lot of stuff (printing
> out HTML forms, handling user actions and so on). - Let's see how I would
> implement this with mod_python:
> 
> - I would write one large mod_python script called "libdb.py" which contains
> basically the whole code of all the above listed scripts. Each of the above
> scripts I would replace by methods (handlers) like "def index():", "def
> input():", "def search():", etc.
> Then I've ended up with a huge, almost unmaintainable script.  :-(
> 
> Is there any way to avoid this?
> Would anyone tackle this problem differently?
> 
> Any help is greatly appreciated!
> Cheers, Peter

Have your root libdb.py do some error handling and parsing, and then 
execfile() the appropriate script for the request.  You can hide your 
scripts far away from the webserver directory for added security.

This might actually be what publisher does, but I haven't looked into it 
at all.

--david


From grisha at modpython.org  Wed Sep  4 16:07:58 2002
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 21:46:59 2004
Subject: [mod_python] How can I have sensible URLs?
In-Reply-To: <20103.1031144972@www25.gmx.net>
Message-ID: <Pine.BSF.4.32.0209041557540.83863-100000@eden.ispol.com>

You could also separate your app into different modules, then write
libdb.py so that all its functions do is call functions from your other
modules, e.g.:

Assuming there is a libsearch.py which contains all the code necessary
for searching, in libdb.py you'd have:

import libsearch

def search():
	return libsearch.search()

The only caveat with this approach is described here:

http://www.modpython.org/FAQ/faqw.py?req=show&file=faq03.001.htp

Grisha

On Wed, 4 Sep 2002, Peter Bittner wrote:

> In my case I think there is some more to it. I'll try to sketch it out:
> Say, I have the following scripts that form a user interface to a library
> database (say, I'm using Python over CGI for this one here)
>
> - http://www.mydomain.com/libdb/index.py
> - http://www.mydomain.com/libdb/input.py
> - http://www.mydomain.com/libdb/search.py
> - http://www.mydomain.com/libdb/reports.py
> - http://www.mydomain.com/libdb/maintain.py
>
> I'm sure you can imagine that every script is doing a lot of stuff (printing
> out HTML forms, handling user actions and so on). - Let's see how I would
> implement this with mod_python:
>
> - I would write one large mod_python script called "libdb.py" which contains
> basically the whole code of all the above listed scripts. Each of the above
> scripts I would replace by methods (handlers) like "def index():", "def
> input():", "def search():", etc.
> Then I've ended up with a huge, almost unmaintainable script.  :-(
>
> Is there any way to avoid this?
> Would anyone tackle this problem differently?


From scherrey at proteus-tech.com  Wed Sep  4 17:15:55 2002
From: scherrey at proteus-tech.com (Benjamin Scherrey)
Date: Fri Jan  9 21:46:59 2004
Subject: [mod_python] 3.0 & Apache 2.0 support
Message-ID: <200209041715.55379.scherrey@proteus-tech.com>

I'm looking to do my first mod_python install (to support a Quixote 
development) and I want to deploy on Apache 2.0. I see that a beta 
3.0 of mod_python is available that promises Apache 2.0 support but 
was wondering what the experiences here were with that. Is it usable? 
Busted? Any comments or suggestions would be appreciated.

	Ben Scherrey

From mateusz at ant.gliwice.pl  Thu Sep  5 11:59:00 2002
From: mateusz at ant.gliwice.pl (Mateusz Korniak)
Date: Fri Jan  9 21:46:59 2004
Subject: [mod_python] How can I have sensible URLs?
In-Reply-To: <16280.1031154973@www2.gmx.net>
References: <7845.1031130181@www2.gmx.net> <16280.1031154973@www2.gmx.net>
Message-ID: <200209041949.56749.mateusz@ant.gliwice.pl>

On Wednesday 04 September 2002 17:56, Peter Bittner wrote:
> > "Grisha" wrote:
> > > Basically, the publisher doesn't have a "default" method name. (There
> > > is no particular reason for this, it just didn't occur to me at the
> > > time of writing.)
>
> I have adapted my publisher.py so that is now takes a "default()" method by
> default
> if no one is specified in the URL. (See the the code below.)
>
> Do you think this adaption is worth being part of the "official"
> mod_python? 

I think It should.

> Anyone
> who finds this interesting? (Anyone who wouldn't like it?)

I would really like it :)

-- 
Mateusz Korniak




From gbenson at redhat.com  Thu Sep  5 11:40:19 2002
From: gbenson at redhat.com (Gary Benson)
Date: Fri Jan  9 21:46:59 2004
Subject: [mod_python] 3.0 & Apache 2.0 support
In-Reply-To: <200209041715.55379.scherrey@proteus-tech.com>; from scherrey@proteus-tech.com on Wed, Sep 04, 2002 at 05:15:55PM -0400
References: <200209041715.55379.scherrey@proteus-tech.com>
Message-ID: <20020905114018.A22389@redhat.com>

On Wed, Sep 04, 2002 at 05:15:55PM -0400, Benjamin Scherrey wrote:

> I'm looking to do my first mod_python install (to support a Quixote 
> development) and I want to deploy on Apache 2.0. I see that a beta 
> 3.0 of mod_python is available that promises Apache 2.0 support but 
> was wondering what the experiences here were with that. Is it usable? 
> Busted? Any comments or suggestions would be appreciated.

I've been using it with prefork and it's very usable indeed.

Cheers,
Gary

[ gbenson@redhat.com ][ GnuPG 85A8F78B ][ http://inauspicious.org/ ]

From jack_diederich at email.com  Thu Sep  5 13:24:04 2002
From: jack_diederich at email.com (Jack Diederich)
Date: Fri Jan  9 21:46:59 2004
Subject: [mod_python] _apache.so? where are you!
Message-ID: <20020905182405.16118.qmail@email.com>

I was trying to run a test script from the command line...

I was trying to call the parse_qs() routine, but it seems to need _apache.so, which is never built. _apachemodule.c which defines init_apache() is compiled into the mod_python.so module.  I tried putting mod_python.so in site-packages renamed as _apache.so, but it failed because it needs some apache symbols.

Is it just not possible to use misc mod_python routines from the command line, or does it just need a patch?

thanks,

-jack


-- 
__________________________________________________________
Sign-up for your own FREE Personalized E-mail at Mail.com
http://www.mail.com/?sr=signup


From grisha at modpython.org  Thu Sep  5 14:48:05 2002
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 21:46:59 2004
Subject: [mod_python] _apache.so? where are you!
In-Reply-To: <20020905182405.16118.qmail@email.com>
Message-ID: <Pine.BSF.4.32.0209051446470.95519-100000@eden.ispol.com>


On Thu, 5 Sep 2002, Jack Diederich wrote:

> Is it just not possible to use misc mod_python routines from the
> command line, or does it just need a patch?

I'm afraid it's not possible. _apache relies on many httpd functions and
can't exist outside of the httpd process.

Grisha


From scherrey at proteus-tech.com  Thu Sep  5 17:17:59 2002
From: scherrey at proteus-tech.com (Benjamin Scherrey)
Date: Fri Jan  9 21:46:59 2004
Subject: [mod_python] Trouble getting mod_python BETA3 running with Apache 2 under linux (RedHat 7.2)
Message-ID: <200209051718.00063.scherrey@proteus-tech.com>

What does mod_python mean when it says:
"python_handler: make_obcallback returned no obCallBack!, referer: 
http://localhost/python/"

In the error_log? I'm testing my mod_python install (per the online 
docs) and it doesn't seem to be running. When I start Apache it 
reports the presense of mod_python. Anything new for mod_python3 
under Apache 2 that I need to do to get it running?
	
	thanx & later,

			Ben Scherrey

From grisha at modpython.org  Thu Sep  5 17:39:31 2002
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 21:46:59 2004
Subject: [mod_python] Trouble getting mod_python BETA3 running with Apache
 2 under linux (RedHat 7.2)
In-Reply-To: <200209051718.00063.scherrey@proteus-tech.com>
Message-ID: <Pine.BSF.4.32.0209051738090.98161-100000@eden.ispol.com>

On Thu, 5 Sep 2002, Benjamin Scherrey wrote:

> What does mod_python mean when it says:
> "python_handler: make_obcallback returned no obCallBack!, referer:
> http://localhost/python/"
>
> In the error_log? I'm testing my mod_python install (per the online
> docs) and it doesn't seem to be running. When I start Apache it
> reports the presense of mod_python. Anything new for mod_python3
> under Apache 2 that I need to do to get it running?

Hmmm... AFAIK there aren't any *online* docs for mp 3.0 - you should
follow the docs in the tar file. :-)

Grisha




From scherrey at proteus-tech.com  Thu Sep  5 17:40:42 2002
From: scherrey at proteus-tech.com (Benjamin Scherrey)
Date: Fri Jan  9 21:46:59 2004
Subject: [mod_python] Trouble getting mod_python BETA3 running with Apache 2 under linux (RedHat 7.2)
In-Reply-To: <Pine.BSF.4.32.0209051738090.98161-100000@eden.ispol.com>
References: <Pine.BSF.4.32.0209051738090.98161-100000@eden.ispol.com>
Message-ID: <200209051740.43045.scherrey@proteus-tech.com>

Actually I figured it out - Its a problem with RedHat's insistence 
that python be python1.5 so the python2.2 executable is named 
python2. I renamed stuff and changed my path to put the python2 
directory first and it now works...  FWIW - the only docs I found in 
the tar file were .tex files. Maybe there's another file I'm supposed 
to download?

	thanx & later,

		Ben Scherrey

On Thursday 05 September 2002 05:39 pm, Gregory (Grisha) Trubetskoy 
wrote:
> On Thu, 5 Sep 2002, Benjamin Scherrey wrote:
> > What does mod_python mean when it says:
> > "python_handler: make_obcallback returned no obCallBack!,
> > referer: http://localhost/python/"
> >
> > In the error_log? I'm testing my mod_python install (per the
> > online docs) and it doesn't seem to be running. When I start
> > Apache it reports the presense of mod_python. Anything new for
> > mod_python3 under Apache 2 that I need to do to get it running?
>
> Hmmm... AFAIK there aren't any *online* docs for mp 3.0 - you
> should follow the docs in the tar file. :-)
>
> Grisha

From grisha at modpython.org  Thu Sep  5 18:10:47 2002
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 21:46:59 2004
Subject: [mod_python] Trouble getting mod_python BETA3 running with Apache
 2 under linux (RedHat 7.2)
In-Reply-To: <200209051740.43045.scherrey@proteus-tech.com>
Message-ID: <Pine.BSF.4.32.0209051806560.98637-100000@eden.ispol.com>

You're right, sorry, the docs slipped out somehow. I put a small tar file
with the docs in the same directory with the beta.

Grisha

On Thu, 5 Sep 2002, Benjamin Scherrey wrote:

> FWIW - the only docs I found in the tar file were .tex files. Maybe
> there's another file I'm supposed to download?


From scherrey at proteus-tech.com  Thu Sep  5 19:20:28 2002
From: scherrey at proteus-tech.com (Benjamin Scherrey)
Date: Fri Jan  9 21:46:59 2004
Subject: [mod_python] Trouble getting mod_python BETA3 running with Apache 2 under linux (RedHat 7.2)
In-Reply-To: <04B0284D-C126-11D6-A0B8-0030653DCC28@savagebeast.com>
References: <04B0284D-C126-11D6-A0B8-0030653DCC28@savagebeast.com>
Message-ID: <200209051920.28731.scherrey@proteus-tech.com>

Jeff -

	Thanx for the offer. I'd be interested in trying it out if this is 
indeed the problem. However, I don't see how it would be unless 
something in quixote or mod_python has got a hard coded reference to 
the python executable. I've got my python2.2 executable in the very 
first path position. Also - for mod_python support, am I supposed to 
have the qdemo directory be a subdirectory of the registered 
mod_python directory (it isn't) or as a subdirectory of the htdocs 
directory (where it is)? I'm not too clear on what kind of 
integration is going on between mod_python, python, and quixote.

	thanx & later,

		Ben Scherrey

On Thursday 05 September 2002 07:20 pm, Jeff Stearns wrote:
> Ben -
>
> This is a common problem; it typically occurs when mod_python is
> confused about Python is installed.
>
> I have a patch for mod_python; it adds a directive which allows you
> to specify the path to Python and its libraries.  This allows
> mod_python to work in an environment with multiple Python
> interpreters, or where you don't have write permission to the
> system-wide Python lib directory.
>
> I've previously offered it to Grisha for inclusion in the source
> tree, but he's not interested.  If you are, you can contact me
> directly and I'll send you the patch.
>
> -jeff stearns

From chengpua at yahoo.com  Thu Sep  5 18:49:46 2002
From: chengpua at yahoo.com (Cheng Pua)
Date: Fri Jan  9 21:46:59 2004
Subject: [mod_python] Problem in installing 3.0.0 Beta for windows
Message-ID: <20020906014946.37344.qmail@web12505.mail.yahoo.com>

I install 3.0.0 Beta for windows.  However, I could
not get "Hello World" example working.  This is the
error I got: 

python_handler: make_obcallback returned no
obCallBack!

Cheng

__________________________________________________
Do You Yahoo!?
Yahoo! Finance - Get real-time stock quotes
http://finance.yahoo.com

From rpinder at usc.edu  Thu Sep  5 22:12:25 2002
From: rpinder at usc.edu (Rich Pinder)
Date: Fri Jan  9 21:46:59 2004
Subject: [mod_python] 'ok' AttributeError / win32
Message-ID: <3D783939.8090802@usc.edu>

(Very) Newbie here...

I'm starting out with a win32 install (my linux server is 3 weeks away) - and trying to get a head start using 
ModPython.
Eventually, want to get ModPython working with Kinterbasedb & Firebird to do simple form based data storage 
for our cancer research study.

I've gotten the install done, found via the archives the 'gotcha' omission of adding  "AddModule 
mod_python.c", created the little mptest.py sample, and it KIND of works.... But seems to be complaining that 
there is no 'ok' attribute found.

Setup:
Apache/1.3.26  mod_python/2.7.6  Python 2.2.1  (Even though I've upgraded to the 2.7.8 version of the 
mod_python files -using the Apr 19 version of apache.py- the only dll I could find was 2.7.6)


Details of the error:

Hello ThisWorld
Mod_python error: "PythonHandler mptest"

Traceback (most recent call last):

   File "c:\python22\lib\mod_python\apache.py", line 193, in Dispatch
     result = object(req)

   File "c:/program files/apache group/apache/htdocs/python\mptest.py", line 7, in handler
     return apache.ok

AttributeError: 'module' object has no attribute 'ok'

.................

Thanks for any thoughts

Rich Pinder
USC School of Medicine


From ian at veryfresh.com  Thu Sep  5 23:47:13 2002
From: ian at veryfresh.com (Ian Clelland)
Date: Fri Jan  9 21:46:59 2004
Subject: [mod_python] 'ok' AttributeError / win32
In-Reply-To: <3D783939.8090802@usc.edu>
References: <3D783939.8090802@usc.edu>
Message-ID: <20020906064713.GH5501@fullfactor.com>

On Thu, Sep 05, 2002 at 10:12:25PM -0700, Rich Pinder wrote:
> (Very) Newbie here...
> 
> I've gotten the install done, found via the archives the 'gotcha' omission 
> of adding  "AddModule mod_python.c", created the little mptest.py sample, 
> and it KIND of works.... But seems to be complaining that there is no 'ok' 
> attribute found.

> AttributeError: 'module' object has no attribute 'ok'

Identifiers in Python are case-sensitive; try returning "apache.OK" instead of
"apache.ok"

Ian
<ian@veryfresh.com>

From peter.bittner at gmx.net  Fri Sep  6 14:22:25 2002
From: peter.bittner at gmx.net (Peter Bittner)
Date: Fri Jan  9 21:46:59 2004
Subject: [mod_python] Modifying publisher for sensible URLs
References: <16280.1031154973@www2.gmx.net>
Message-ID: <16960.1031314945@www20.gmx.net>

Hi!

I am happy there was some feedback about my modifications to the publisher
(although I know they are everything but brilliant! :-) ).

Could we discuss whether it were worth to change the publisher module so
that it offers some more flexibility as far as URLs are concerned? I'm afraid I
just don't know enough about the publisher to do some more serious
modifications. However, I've found some problems related to this issue:

1. "http://servername/path/script/" works, but
"http://servername/path/script" (without the trailing slash) doesn't. (I can imagine why, but don't know
how to fix it)

2. Provided I've set "index.py" to be one possibility for my
"DirectoryIndex" on Apache then omitting the scriptname in the URL "http://servername/path/"
should execute as "http://servername/path/script". But it seems that it
doesn't (it probably does as ".../script.py" which is not very helpful). (This
would be important to have fixed, too)

(To make this list complete add the following to the top of the list:
"http://servername/path/script/" (or "http://servername/path/script") should
execute as "http://servername/path/script/default". - That is what my
modifications where all about.)

I'd be really happy to see this being implemented in the publisher by
default. I am sure it would do good and would result in a better user acceptance.

Please, Grisha - and all the others that are interested, let's discuss this
out!

Cheers, Peter


> > "Grisha" wrote:
> > > Basically, the publisher doesn't have a "default" method name.
> > > (There is no particular reason for this, it just didn't occur to
> > > me at the time of writing.)
> 
> I have adapted my publisher.py so that is now takes a "default()" method
> by default if no one is specified in the URL. (See the the code below.)
> 
> Do you think this adaption is worth being part of the "official"
> mod_python? Anyone who finds this interesting? (Anyone who
> wouldn't like it?)
>
> [...]

-- 
Peter Bittner
mobil: +43/(0)650/4151545
web: http://www.bittner.at.tf - http://beam.to/htmlkurs
mail: peter.bittner@gmx.net

"Free software is like free speech, not free beer" (Richard Stallman)

GMX - Die Kommunikationsplattform im Internet.
http://www.gmx.net


From drh9296 at ritvax.rit.edu  Fri Sep  6 11:35:18 2002
From: drh9296 at ritvax.rit.edu (David Higgs)
Date: Fri Jan  9 21:46:59 2004
Subject: [mod_python] Modifying publisher for sensible URLs
References: <16280.1031154973@www2.gmx.net> <16960.1031314945@www20.gmx.net>
Message-ID: <3D78CB36.90207@rit.edu>

> Could we discuss whether it were worth to change the publisher module so
> that it offers some more flexibility as far as URLs are concerned? I'm afraid I
> just don't know enough about the publisher to do some more serious
> modifications. However, I've found some problems related to this issue:
> 
> 1. "http://servername/path/script/" works, but
> "http://servername/path/script" (without the trailing slash) doesn't. (I can imagine why, but don't know
> how to fix it)

That functionality is already possible if you roll your own handler. 
Depending on the amount of functionality you want, you may only need 20 
lines of code (or less) to parse and dispatch the request.

With the setup below, http://www.domain.com/util will be a call to 
util_handler.py.  The 'main' method called is always handler().  You'll 
use request.filename and request.path_info to determine what what 
requested.  In this case, the filename would be 
/path/to/your/script/util/index.html, and the path_info would be an 
empty string.

Here's an approximation of my setup:

<Location /util>
     Options -Indexes
     SetHandler python-program
     PythonPath "sys.path+['/path/to/your/script/util', 
'/path/to/your/modules']"
     PythonHandler util_handler
</Location>

bash$ cd /path/to/your/script/util/
bash$ ls
index.html      util_handler.py

The annoying part is that you *need* the index.html to prevent a 404 
error from happening before your script is called.  The content of 
index.html doesn't matter since it is never read; mine are all 
zero-length files.

I have also found that with multiple PythonHandlers, each script must be 
named differently to prevent caching issues.  This wasn't immediately 
obvious, since each httpd thread seemed to have a separate cache.

--david


From vmilitaru at sympatico.ca  Fri Sep  6 14:12:14 2002
From: vmilitaru at sympatico.ca (vio)
Date: Fri Jan  9 21:46:59 2004
Subject: [mod_python] Modifying publisher for sensible URLs
In-Reply-To: <3D78CB36.90207@rit.edu>; from drh9296@ritvax.rit.edu on Fri, Sep 06, 2002 at 11:35:18AM -0400
References: <16280.1031154973@www2.gmx.net> <16960.1031314945@www20.gmx.net> <3D78CB36.90207@rit.edu>
Message-ID: <20020906141214.A1800@eye.neb>

* David Higgs <drh9296@ritvax.rit.edu> [020906 13:40]:
> That functionality is already possible if you roll your own handler. 
> Depending on the amount of functionality you want, you may only need 20 
> lines of code (or less) to parse and dispatch the request.

If I may add, to me this is why mod_python is so damn exciting: its flexibility!With a little python under your belt, and basic understanding of how apache and
'request/response' kinda works, one can make it do absolutely whatever you want.
Adding more 'default' behaviour is nice too, put proportionally will rise the 
learning curve. As a point of comparison, Zope has a lot more functionality 
built-in (I mean 'out of the box'), but the learning curve is proportionally 
steeper, while drastically cutting into Zope's flexibility (in my opinion).
Did I mention that Zope has gotten so huge, with a lot of useless 'fat' 
if you only are looking for very specific functionality.
Flexibility = good, fat = bad.

My 2 c.
Vio

(PS. Hope I haven't started another religious war or Zope bashing campaign,
just wanted to point out that sometimes -though not always- 'leaner' is better)

From mod_python at ns1.tcu-inc.com  Fri Sep  6 21:32:13 2002
From: mod_python at ns1.tcu-inc.com (Mark Nielsen)
Date: Fri Jan  9 21:46:59 2004
Subject: [mod_python] new to list, will mod_python ever simulate what mod_perl does?
Message-ID: <200209070432.g874WDo17067@ns1.tcu-inc.com>

Hello!

I have been pushing myself to use Python more than Perl in the last few
years. I really really like the way mod_perl has turned out and how 
there are tons of modules developed for it. 

Although I use Zope, I don't use it for everything I do and a lot of times
I have no interest in using any publishing modulei for Apache -- yet.
Thus, I like to use the CGI hanlder for now. It caches scripts, modules,
and has hooks into Apache. 

The one thing I seem to be missing with the CGI handler is a standard
way to do persistent database connections. Is there one?

It would be really cool to port all the Perl modules for mod_perl over
to mod_python. Is anybody doing that?

One more thing, I tried to compile mod_python for Apache 2.0 and it keeps
seg faulting apache 2.0. I ma using Python 2.2.1 and RedHat 7.3. 
Anybody have similar problems but got it to work?

Thanks!
Mark




From fabbe at paniq.net  Sat Sep  7 16:37:10 2002
From: fabbe at paniq.net (Fabian Fagerholm)
Date: Fri Jan  9 21:46:59 2004
Subject: [mod_python] new to list, will mod_python ever simulate what
	mod_perl does?
In-Reply-To: <200209070432.g874WDo17067@ns1.tcu-inc.com>
References: <200209070432.g874WDo17067@ns1.tcu-inc.com>
Message-ID: <1031405830.26807.123.camel@kernel>

On Sat, 2002-09-07 at 07:32, Mark Nielsen wrote:
> The one thing I seem to be missing with the CGI handler is a standard
> way to do persistent database connections. Is there one?

Database stuff should be handled by the standard Python DBAPI. Use a
Python database module that supports persistent connections. If
connection pooling is enough and you're using PostgreSQL, try psycopg.

> It would be really cool to port all the Perl modules for mod_perl over
> to mod_python. Is anybody doing that?

Not that I'm aware of.
Which mod_perl modules would you like to have equivalents for in Python?

Note that Python itself has lots of functionality for many different
things. See the Python library reference:
http://www.python.org/doc/current/lib/lib.html

And as a side pointer, look at Albatross which is just perfect when
coupled with mod_python:
http://www.object-craft.com.au/projects/albatross/

If you don't want to program at such a low level then I suggest Webware
or Zope.

Cheers,
Fabian

-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 240 bytes
Desc: This is a digitally signed message part
Url : http://mailman.modpython.org/pipermail/mod_python/attachments/20020907/fe0c4b2b/attachment.bin
From leader730 at hotmail.com  Fri Sep  6 23:48:13 2002
From: leader730 at hotmail.com (Leader730)
Date: Fri Jan  9 21:46:59 2004
Subject: [mod_python] getting clients ip address
Message-ID: <OE57YImWd1Go7tUPsyg0001f9c5@hotmail.com>

hello, I was wondering what was the function I can use to get the clients ip
address, I'm sure I saw it somewhere in the module docs but I can't find it
anymore D:

-----------------------
Too often we lose sight of life's simple pleasures. Remember when someone
annoys you it takes 42 muscles in your face to frown, BUT, it only takes 4
muscles to extend your arm and bitch-slap that mother@#?!&! upside the head!

From alain at onesite.org  Sat Sep  7 17:28:51 2002
From: alain at onesite.org (Alain Tesio)
Date: Fri Jan  9 21:46:59 2004
Subject: [mod_python] getting clients ip address
In-Reply-To: <OE57YImWd1Go7tUPsyg0001f9c5@hotmail.com>
References: <OE57YImWd1Go7tUPsyg0001f9c5@hotmail.com>
Message-ID: <20020907172851.1a142ba6.alain@onesite.org>

On Fri, 6 Sep 2002 23:48:13 -0400
"Leader730" <leader730@hotmail.com> wrote:

> 
> 
> hello, I was wondering what was the function I can use to get the clients ip
> address, I'm sure I saw it somewhere in the module docs but I can't find it
> anymore D:

req.connection.remote_ip

Alain

From peter.bittner at gmx.net  Sun Sep  8 11:44:04 2002
From: peter.bittner at gmx.net (Peter Bittner)
Date: Fri Jan  9 21:46:59 2004
Subject: [mod_python] Modifying publisher for sensible URLs
References: <3D78CB36.90207@rit.edu>
Message-ID: <3932.1031478244@www52.gmx.net>

Hi!

> That functionality is already possible if you roll your own handler. 

Well, I think almost everything is possible when you do a lot on your own.

What I am focusing on is on is to provide a little extra functionality -
just for publisher.py - that makes mod_python more straight forward and easier
to develop programs for. (I do not think that such 15 lines of extra code
would blow up mod_python enormously. It would only affect the publisher.)

From rpinder at usc.edu  Sun Sep  8 21:32:19 2002
From: rpinder at usc.edu (Rich Pinder)
Date: Fri Jan  9 21:47:00 2004
Subject: [mod_python] "Not Found" message with Publisher example
Message-ID: <3D7C2453.8020300@usc.edu>

Got the easy example workin fine from the Manual (3.2 section), but got hung up with the example that 
discusses how the Publisher works.  Edited the  .conf  file, created a new python script   mail.py, made a 
html form - but still get:

The requested URL /form/email was not found on this server.


I'm sure its a simple one - thanks for any thoughts !

Rich Pinder
USC School of Medicine




From fabbe at paniq.net  Mon Sep  9 12:00:11 2002
From: fabbe at paniq.net (Fabian Fagerholm)
Date: Fri Jan  9 21:47:00 2004
Subject: [mod_python] new to list, will mod_python ever simulate what
In-Reply-To: <200209090228.g892Ss622967@ns1.tcu-inc.com>
References: <200209090228.g892Ss622967@ns1.tcu-inc.com>
Message-ID: <1031562012.8377.81.camel@kernel>

On Mon, 2002-09-09 at 05:28, Mark Nielsen wrote:
> In Perl, the core DBI module takes care of all database connections which
> use DBI if you also use Apache DBI.
> I was thinking, there should be a standard way of doing it rather than
> relying on each database author.

Hence DBAPI.
http://www.python.org/topics/database/DatabaseAPI-2.0.html

> There should be a way to do it in Python irrelevant of which database
> connection you use. We would just need a way to make the database
> connections global variables which don't die. 

I agree that it would be useful to be able to keep any such objects
between browser requests. Perhaps there would be a way to place the
connection objects in the global namespace of each mod_python
subinterpreter so that they would continue to exist until the
subinterpreter dies?

But this is a separate issue from the "generic database access" issue.

> So, I guess, I probably will have to make up a way to do it. 
> I use MySQL, PostgreSQL, and Oracle, and also DBM, so I need one way
> for all database connections. 

Even the three SQL-capable ones have slight variations in the SQL syntax
which makes it hard to find a good lowest common denominator that could
be accepted as "standard".

I would write an abstract class that defines the behavior you need and
then four subclasses to implement that behavior for the four database
back-ends you mention. The interface to your application would be your
own, and the interface to each database would make use of DBAPI 2.0
modules specific to each database.

Making the abstract class "standard" makes little sense since it's
probably not very large or complicated, and it's often quite specific to
your application.

I also fail to see how Perl DBI solves certain issues. For example, if
you use Perl DBI and write an application that relies on transactional
capabilities of the database, and you move to a database without
transactional capabilities (MySQL with MyISAM tables, for instance) then
you'll have to adapt your code.
Also, in every single Perl DBI example I've seen, there's SQL embedded
in the code. I probably don't understand DBI but it seems to me that
this makes it essentially impossible to write code for, say, an Oracle
database that makes use of Oracle-specific features, and then run the
same code with a MySQL database as back-end. Or can DBI somehow emulate
the behavior of these databases?

So there really isn't any way out - the back-ends are just too
different. With good use of classes you can at least separate the
databases from the functional code in your particular application.

Cheers,
Fabian


-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 240 bytes
Desc: This is a digitally signed message part
Url : http://mailman.modpython.org/pipermail/mod_python/attachments/20020909/f0263eda/attachment.bin
From fabbe at paniq.net  Mon Sep  9 12:07:24 2002
From: fabbe at paniq.net (Fabian Fagerholm)
Date: Fri Jan  9 21:47:00 2004
Subject: [mod_python] new to list, will mod_python ever simulate what
In-Reply-To: <200209090228.g892Ss622967@ns1.tcu-inc.com>
References: <200209090228.g892Ss622967@ns1.tcu-inc.com>
Message-ID: <1031562445.8385.84.camel@kernel>

On Mon, 2002-09-09 at 05:28, Mark Nielsen wrote:
> ...
> Mark

Please fix your mail server and/or your From: address.

Cheers,
Fabian

-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 240 bytes
Desc: This is a digitally signed message part
Url : http://mailman.modpython.org/pipermail/mod_python/attachments/20020909/fe7efdef/attachment.bin
From lisicky at datis.cdrail.cz  Tue Sep 10 12:27:24 2002
From: lisicky at datis.cdrail.cz (Jiri Lisicky)
Date: Fri Jan  9 21:47:00 2004
Subject: [mod_python] free hosting?
Message-ID: <j4irnu81vavvh2bc7tde66ib68m34qigvo@4ax.com>

Is anywhere on the net free web hosting with mod_python instaled?

I search but found only zope or cgi.

thanks 

Jiri Lisicky

From gbenson at redhat.com  Thu Sep 12 11:25:30 2002
From: gbenson at redhat.com (Gary Benson)
Date: Fri Jan  9 21:47:00 2004
Subject: [mod_python] [PATCH] fix filter lookup failure
Message-ID: <20020912112529.B27092@redhat.com>

Hi,

ap_register_*_filter() normalizes the filter's name before it stores it
by converting it to lower case and removing special characters.  If the
name is not the same when normalized then python_filter() will not be
able to work out which filter it is and will segfault.  The attached
patch fixes.

Later,
Gary

[ gbenson@redhat.com ][ GnuPG 85A8F78B ][ http://inauspicious.org/ ]
-------------- next part --------------
ap_register_*_filter normalizes the filter's name, so we need to store
the normalized name for filter lookups rather than the name the user
registered it with.

Index: src/mod_python.c
===================================================================
RCS file: /cvsroot/modpython/mod_python/src/mod_python.c,v
retrieving revision 1.73
diff -u -r1.73 mod_python.c
--- src/mod_python.c	6 Sep 2002 22:06:28 -0000	1.73
+++ src/mod_python.c	11 Sep 2002 15:58:56 -0000
@@ -1479,23 +1479,24 @@
 
     py_config *conf;
     py_handler *fh;
+    ap_filter_rec_t *frec;
     
     if (!name)
         name = apr_pstrdup(cmd->pool, handler);
 
+    /* register the filter NOTE - this only works so long as the
+       directive is only allowed in the main config. For .htaccess we
+       would have to make sure not to duplicate this */
+    frec = ap_register_input_filter(name, python_input_filter, NULL, AP_FTYPE_CONNECTION);
+ 
     conf = (py_config *) mconfig;
 
     fh = (py_handler *) apr_pcalloc(cmd->pool, sizeof(py_handler));
     fh->handler = (char *)handler;
     fh->dir = conf->config_dir;
 
-    apr_hash_set(conf->in_filters, name, APR_HASH_KEY_STRING, fh);
+    apr_hash_set(conf->in_filters, frec->name, APR_HASH_KEY_STRING, fh);
 
-    /* register the filter NOTE - this only works so long as the
-       directive is only allowed in the main config. For .htaccess we
-       would have to make sure not to duplicate this */
-    ap_register_input_filter(name, python_input_filter, NULL, AP_FTYPE_CONNECTION);
- 
     return NULL;
 }
 
@@ -1503,23 +1504,24 @@
                                                 const char *handler, const char *name) {
     py_config *conf;
     py_handler *fh;
+    ap_filter_rec_t *frec;
  
     if (!name)
         name = apr_pstrdup(cmd->pool, handler);
 
+    /* register the filter NOTE - this only works so long as the
+       directive is only allowed in the main config. For .htaccess we
+       would have to make sure not to duplicate this */
+    frec = ap_register_output_filter(name, python_output_filter, NULL, AP_FTYPE_RESOURCE);
+ 
     conf = (py_config *) mconfig;
     
     fh = (py_handler *) apr_pcalloc(cmd->pool, sizeof(py_handler));
     fh->handler = (char *)handler;
     fh->dir = conf->config_dir;
 
-    apr_hash_set(conf->out_filters, name, APR_HASH_KEY_STRING, fh);
+    apr_hash_set(conf->out_filters, frec->name, APR_HASH_KEY_STRING, fh);
 
-    /* register the filter NOTE - this only works so long as the
-       directive is only allowed in the main config. For .htaccess we
-       would have to make sure not to duplicate this */
-    ap_register_output_filter(name, python_output_filter, NULL, AP_FTYPE_RESOURCE);
- 
     return NULL;
 }
 
From bakey at traq.com  Thu Sep 12 09:15:53 2002
From: bakey at traq.com (Brian Akey)
Date: Fri Jan  9 21:47:00 2004
Subject: [mod_python] Apache 2 and ModPython3
In-Reply-To: <20020912112529.B27092@redhat.com>
References: <20020912112529.B27092@redhat.com>
Message-ID: <1031840154.798.2.camel@g2.traq.com>

What am I missing?
I have tried both Gentoo 1.2 and Slackware 8.1
and compiled apache2 and modpython3 by hand and the httpd segfaults
every time
I go to the directory where my python code lives.
I am using python 2.2.1.
How can I get this to work?

bakey@traq.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mailman.modpython.org/pipermail/mod_python/attachments/20020912/6bb317ed/attachment.htm
From gbenson at redhat.com  Thu Sep 12 17:39:46 2002
From: gbenson at redhat.com (Gary Benson)
Date: Fri Jan  9 21:47:00 2004
Subject: [mod_python] Filter chaining bug
Message-ID: <20020912173945.G27092@redhat.com>

Hi,

I've been playing around with chaining PythonOutputFilters and run into
a dead end.  It seems that mod_python can be the first filter in a chain
quite nicely but it can't be a subsequent filter and it's not obvious
why (to me, anyway).

The attached tarball contains a fragment of httpd.conf that sets up
filters from mod_python and mod_include in some directory.  Everything
works except

  data.flt.flt -- two mod_python filters chained, the second segfaults
  data.shtml.flt -- mod_include outputting into mod_python, mod_python
    segfaults

Is anyone else is able to reproduce this and/or does anyone know what is
wrong here?

Cheers,
Gary

[ gbenson@redhat.com ][ GnuPG 85A8F78B ][ http://inauspicious.org/ ]

From gbenson at redhat.com  Thu Sep 12 17:40:43 2002
From: gbenson at redhat.com (Gary Benson)
Date: Fri Jan  9 21:47:00 2004
Subject: [mod_python] Filter chaining bug (take 2)
Message-ID: <20020912174042.H27092@redhat.com>

Doh, forgot the tarball!

----- Forwarded message from Gary Benson <gbenson@redhat.com> -----

Date: Thu, 12 Sep 2002 17:39:46 +0100
From: Gary Benson <gbenson@redhat.com>
To: mod_python@modpython.org
Mail-Followup-To: mod_python@modpython.org
Subject: Filter chaining bug

Hi,

I've been playing around with chaining PythonOutputFilters and run into
a dead end.  It seems that mod_python can be the first filter in a chain
quite nicely but it can't be a subsequent filter and it's not obvious
why (to me, anyway).

The attached tarball contains a fragment of httpd.conf that sets up
filters from mod_python and mod_include in some directory.  Everything
works except

  data.flt.flt -- two mod_python filters chained, the second segfaults
  data.shtml.flt -- mod_include outputting into mod_python, mod_python
    segfaults

Is anyone else is able to reproduce this and/or does anyone know what is
wrong here?

Cheers,
Gary

[ gbenson@redhat.com ][ GnuPG 85A8F78B ][ http://inauspicious.org/ ]

----- End forwarded message -----
[ gbenson@redhat.com ][ GnuPG 85A8F78B ][ http://inauspicious.org/ ]
-------------- next part --------------
A non-text attachment was scrubbed...
Name: filter.tar.gz
Type: application/x-gzip
Size: 621 bytes
Desc: not available
Url : http://mailman.modpython.org/pipermail/mod_python/attachments/20020912/a4775706/filter.tar.bin
From andres.meza at nuevosmedios.ws  Thu Sep 12 13:20:45 2002
From: andres.meza at nuevosmedios.ws (Andres Meza)
Date: Fri Jan  9 21:47:00 2004
Subject: [mod_python] How to upload files using mod_python's publisher handler?
Message-ID: <1031854845.5447.9.camel@coraje>

Greetings. 

I have created a python CGI script that can upload files sucessfully.
Now, I want to create a mod_python script with the same feature using
the "publisher" handler and I get this error:   


[Thu Sep 12 08:53:41 2002] [error] PythonHandler mod_python.publisher:
Traceback (most recent call last): 
[Thu Sep 12 08:53:41 2002] [error] PythonHandler mod_python.publisher:  
File
"/home/mrnet/rpm/tmp/mod_python-root/usr/lib/python2.2/site-packages/mod_python/apache.py", line 193, in Dispatch 
[Thu Sep 12 08:53:41 2002] [error] PythonHandler mod_python.publisher:  
File
"/home/mrnet/rpm/tmp/mod_python-root/usr/lib/python2.2/site-packages/mod_python/publisher.py", line 104, in handler 
[Thu Sep 12 08:53:41 2002] [error] PythonHandler mod_python.publisher:  
File
"/home/mrnet/rpm/tmp/mod_python-root/usr/lib/python2.2/site-packages/mod_python/publisher.py", line 308, in __init__ 
[Thu Sep 12 08:53:41 2002] [error] PythonHandler mod_python.publisher:
AttributeError: 'file' object has no attribute '__methods__' 

Anyone have an idea about why I get this error? 

Thanks for your time, 
-- 
   Andr?s Meza
   Technical Manager
 __Nuevos Medios - NM S.A.____________________
   e-mail:         andres.meza@nuevosmedios.ws
   day time phone: (+572)6827794 ext.102
   url:            www.nuevosmedios.ws
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mailman.modpython.org/pipermail/mod_python/attachments/20020912/31ee3b44/attachment.htm
From grisha at modpython.org  Thu Sep 12 18:25:45 2002
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 21:47:00 2004
Subject: [mod_python] ANNOUNCE: Mod_Python donated to ASF
Message-ID: <Pine.BSF.4.32.0209121812020.92256-100000@eden.ispol.com>

It is my pleasure to announce that Mod_Python has been donated to the
Apache Software Foundation, and is now a subproject of the httpd server
project (see http://httpd.apache.org/).

I am grateful to ASF for accepting this donation and committing resources
to further the support of Mod_Python. I believe that this action will
advance the development of Mod_Python, resulting in an ultimately better
and more popular tool for Python developers. I also believe it will serve
to better position Python as a language of choice for web development, a
need that has been expressed by many.

There are no implications to the current Mod_Python users - the license is
the same with the sole difference in that the copyright belongs to ASF
now.

As a consequense of the donation, the CVS repository is now hosted on
cvs.apache.org.  Do not use the SourceForge repository anymore, it will
soon be removed.

There will also be website and mailing changes, but the details are still
being finalized and will be announced when ready.

Regards,

Grisha Trubetskoy



From neel at mediapulse.com  Thu Sep 12 18:37:20 2002
From: neel at mediapulse.com (Michael C. Neel)
Date: Fri Jan  9 21:47:00 2004
Subject: [mod_python] ANNOUNCE: Mod_Python donated to ASF
Message-ID: <C0FC22C08B82074A88B50061764157772C63C6@johnson.mediapulse.net>

Let me be the first to say, in the fashion that the Internet has taught
us to celebrate a great victory or other action....

Woot.

Mike

--
Michael C. Neel
There are only 10 types of people in the world;
those who understand binary and those who don't.


-----Original Message-----
From: Gregory (Grisha) Trubetskoy [mailto:grisha@modpython.org] 
Sent: Thursday, September 12, 2002 6:26 PM
To: mod_python@modpython.org; python-list@python.org;
announce@apache.org; dev@httpd.apache.org
Cc: jim@apache.org
Subject: [mod_python] ANNOUNCE: Mod_Python donated to ASF



It is my pleasure to announce that Mod_Python has been donated to the
Apache Software Foundation, and is now a subproject of the httpd server
project (see http://httpd.apache.org/).

I am grateful to ASF for accepting this donation and committing
resources
to further the support of Mod_Python. I believe that this action will
advance the development of Mod_Python, resulting in an ultimately better
and more popular tool for Python developers. I also believe it will
serve
to better position Python as a language of choice for web development, a
need that has been expressed by many.

There are no implications to the current Mod_Python users - the license
is
the same with the sole difference in that the copyright belongs to ASF
now.

As a consequense of the donation, the CVS repository is now hosted on
cvs.apache.org.  Do not use the SourceForge repository anymore, it will
soon be removed.

There will also be website and mailing changes, but the details are
still
being finalized and will be announced when ready.

Regards,

Grisha Trubetskoy


_______________________________________________
Mod_python mailing list
Mod_python@modpython.org
http://www.modpython.org/mailman/listinfo/mod_python


From jack_diederich at email.com  Thu Sep 12 17:45:21 2002
From: jack_diederich at email.com (Jack Diederich)
Date: Fri Jan  9 21:47:00 2004
Subject: [mod_python] ANNOUNCE: Mod_Python donated to ASF
Message-ID: <20020912224521.7047.qmail@email.com>

Congrats!

This can only be seen as a Good Thing

-jack
-- 
__________________________________________________________
Sign-up for your own FREE Personalized E-mail at Mail.com
http://www.mail.com/?sr=signup


From vmilitaru at sympatico.ca  Thu Sep 12 22:11:22 2002
From: vmilitaru at sympatico.ca (vio)
Date: Fri Jan  9 21:47:00 2004
Subject: [mod_python] ANNOUNCE: Mod_Python donated to ASF
In-Reply-To: <Pine.BSF.4.32.0209121812020.92256-100000@eden.ispol.com>; from grisha@modpython.org on Thu, Sep 12, 2002 at 06:25:45PM -0400
References: <Pine.BSF.4.32.0209121812020.92256-100000@eden.ispol.com>
Message-ID: <20020912221122.A1410@eye.neb>

Congrats to Gregory for this 'official' recognition for the great work he did
with mod_python. And thank you to the apache board for recognising the need
for an 'official' python effort in such an open way. Let's face it, there is no
better place for an apache module to live but close to apache (httpd)'s place.
Certainly the most intuitive place from a user's perspective. And this official
blessing brings the additional advantage to cut through the confusion: there
are not 10 'official' python' flavored apaches for a newcomer to choose from.
(enough headaches just installing the beast and learning it)

Regards,
Vio

* Gregory (Grisha) Trubetskoy <grisha@modpython.org> [020912 20:57]:
> 
> It is my pleasure to announce that Mod_Python has been donated to the
> Apache Software Foundation, and is now a subproject of the httpd server
> project (see http://httpd.apache.org/).
> 
> I am grateful to ASF for accepting this donation and committing resources
> to further the support of Mod_Python. I believe that this action will
> advance the development of Mod_Python, resulting in an ultimately better
> and more popular tool for Python developers. I also believe it will serve
> to better position Python as a language of choice for web development, a
> need that has been expressed by many.
> 
> There are no implications to the current Mod_Python users - the license is
> the same with the sole difference in that the copyright belongs to ASF
> now.
> 
> As a consequense of the donation, the CVS repository is now hosted on
> cvs.apache.org.  Do not use the SourceForge repository anymore, it will
> soon be removed.
> 
> There will also be website and mailing changes, but the details are still
> being finalized and will be announced when ready.
> 
> Regards,
> 
> Grisha Trubetskoy
> 
> 
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://www.modpython.org/mailman/listinfo/mod_python

From neel at mediapulse.com  Fri Sep 13 00:40:32 2002
From: neel at mediapulse.com (Michael Neel)
Date: Fri Jan  9 21:47:00 2004
Subject: [mod_python] Mod_Python 3 / Apache 2 / RedHat 7.3 / Python 2.2 = Seg fault :(
Message-ID: <000001c25adf$b2039020$0400a8c0@clapton>

I'm having a bit of trouble trying to get mod_python beta 3 to run on
apache 2.  I get a line like:

[Thu Sep 12 23:31:21 2002] [notice] child pid 3768 exit signal
Segmentation fault (11)

Whenever I load mod_python no matter what page I hit, .py or otherwise.
I'm running RH 7.3 and I've copied the python2.2 binary over the python
one so I have python2.2 as default so this could be related to a path
issue of lib's but I'll be damned if I can find it.

My compile options for apache were basic; --with-mpm=worker and
--enable-mods-shared=all.  Mod_python I just past in the path to apxs.
I didn't see anything about beta 3 not working with worker threads (the
way I'd prefer apache to run), but I've tried prefork as well with the
same results.

Any tips or ideas would help greatly.  I've looked though the list
archives and couldn't find anything, but to be stuck at this small of a
step means I've overlooked something basic...

Mike

--
Michael C. Neel
There are only 10 types of people in the world;
those who understand binary and those who don't.


From fabbe at paniq.net  Fri Sep 13 10:02:55 2002
From: fabbe at paniq.net (Fabian Fagerholm)
Date: Fri Jan  9 21:47:00 2004
Subject: [mod_python] ANNOUNCE: Mod_Python donated to ASF
In-Reply-To: <Pine.BSF.4.32.0209121812020.92256-100000@eden.ispol.com>
References: <Pine.BSF.4.32.0209121812020.92256-100000@eden.ispol.com>
Message-ID: <1031900581.6954.103.camel@kernel>

On Fri, 2002-09-13 at 01:25, Gregory (Grisha) Trubetskoy wrote:
> It is my pleasure to announce that Mod_Python has been donated to the
> Apache Software Foundation, and is now a subproject of the httpd server
> project (see http://httpd.apache.org/).

My congratulations to you Grisha for pulling this off - I think this
will be a good thing for the Python language in general and mod_python
users in particular. Not to mention the benefits that Apache users will
probably see.

Cheers,
Fabian

-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 240 bytes
Desc: This is a digitally signed message part
Url : http://mailman.modpython.org/pipermail/mod_python/attachments/20020913/ac1bf2c8/attachment.bin
From jfk at metation.com  Fri Sep 13 09:31:30 2002
From: jfk at metation.com (=?iso-8859-1?q?J=F8rgen=20Fr=F8jk=20Kj=E6rsgaard=20{Metation}?=)
Date: Fri Jan  9 21:47:00 2004
Subject: [mod_python] ANNOUNCE: Mod_Python donated to ASF
In-Reply-To: <Pine.BSF.4.32.0209121812020.92256-100000@eden.ispol.com>
References: <Pine.BSF.4.32.0209121812020.92256-100000@eden.ispol.com>
Message-ID: <0209130931300R.00311@grace.metation.com>

Congratulatiuons!

I think this is a great step forward for Python as a web language and 
mod_python in particular. mod_python really deserves the exposure it can get 
through apache.org.

/jfk

From mbp at samba.org  Fri Sep 13 18:10:42 2002
From: mbp at samba.org (Martin Pool)
Date: Fri Jan  9 21:47:00 2004
Subject: [mod_python] Mod_Python 3 / Apache 2 / RedHat 7.3 / Python 2.2 = Seg fault :(
In-Reply-To: <000001c25adf$b2039020$0400a8c0@clapton>
References: <000001c25adf$b2039020$0400a8c0@clapton>
Message-ID: <20020913081040.GI8093@samba.org>

On 13 Sep 2002, Michael Neel <neel@mediapulse.com> wrote:
> I'm having a bit of trouble trying to get mod_python beta 3 to run on
> apache 2.  I get a line like:
> 
> [Thu Sep 12 23:31:21 2002] [notice] child pid 3768 exit signal
> Segmentation fault (11)
> 
> Whenever I load mod_python no matter what page I hit, .py or otherwise.
> I'm running RH 7.3 and I've copied the python2.2 binary over the python
> one so I have python2.2 as default so this could be related to a path
> issue of lib's but I'll be damned if I can find it.
> 
> My compile options for apache were basic; --with-mpm=worker and
> I didn't see anything about beta 3 not working with worker threads (the
> way I'd prefer apache to run), but I've tried prefork as well with the
> same results.
> 
> Any tips or ideas would help greatly.  I've looked though the list
> archives and couldn't find anything, but to be stuck at this small of a
> step means I've overlooked something basic...

Try running apache under gdb?  Something like this:

  # gdb /usr/sbin/apache2
  [blah blah]
  gdb> run -X

Then try to access a page.  Apache should stop in gdb, and it might
tell you where the problem is.

-- 
Martin 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
Url : http://mailman.modpython.org/pipermail/mod_python/attachments/20020913/284089f0/attachment.bin
From list-mod_python at empires.org  Fri Sep 13 01:36:58 2002
From: list-mod_python at empires.org (Jeff Davis)
Date: Fri Jan  9 21:47:00 2004
Subject: [mod_python] Segfault for me as well
In-Reply-To: <000001c25adf$b2039020$0400a8c0@clapton>
References: <000001c25adf$b2039020$0400a8c0@clapton>
Message-ID: <200209130136.58171.list-mod_python@empires.org>

I have the same segfault problem that someone else mentioned earlier. I am on 
debian unstable, and have the current package for apache2 installed 
(mpm-prefork), and I built it with:

./configure --with-apxs=/usr/bin/apxs2
make dso
make install

However, I had to set the variable "PYTHONBIN" in the Makefile, it wasn't set 
up for me automatically. I think that is just a minor problem with the build 
system on my platform. I couldn't find anything in the configure script to 
suggest that it was trying to set that variable.

Anyway, after I did get it built it simply segfaulted every time that I 
accessed the server. 

I know a little C, so I will look into this a little. If I have time I will 
try to deal with both of these issues (the build issue and the segfault). 

By the way, is this list the proper development forum? I don't see a lot of 
development discussion here.

Regards,
	Jeff

On Thursday 12 September 2002 09:40 pm, Michael Neel wrote:
> I'm having a bit of trouble trying to get mod_python beta 3 to run on
> apache 2.  I get a line like:
>
> [Thu Sep 12 23:31:21 2002] [notice] child pid 3768 exit signal
> Segmentation fault (11)
>
> Whenever I load mod_python no matter what page I hit, .py or otherwise.
> I'm running RH 7.3 and I've copied the python2.2 binary over the python
> one so I have python2.2 as default so this could be related to a path
> issue of lib's but I'll be damned if I can find it.
>
> My compile options for apache were basic; --with-mpm=worker and
> --enable-mods-shared=all.  Mod_python I just past in the path to apxs.
> I didn't see anything about beta 3 not working with worker threads (the
> way I'd prefer apache to run), but I've tried prefork as well with the
> same results.
>
> Any tips or ideas would help greatly.  I've looked though the list
> archives and couldn't find anything, but to be stuck at this small of a
> step means I've overlooked something basic...
>
> Mike


From list-mod_python at empires.org  Fri Sep 13 02:03:37 2002
From: list-mod_python at empires.org (Jeff Davis)
Date: Fri Jan  9 21:47:00 2004
Subject: [mod_python] patch for build
Message-ID: <200209130203.37120.list-mod_python@empires.org>

I mentioned a problem with the build on my system, wherein the PYTHONBIN 
variable was not being defined in the Makefile. Here is a simple patch to 
Makefile.in (from the old to the new) that just adds the PYTHONBIN variable 
(and sets it to the PYTHON_BIN variable of the configure script).

I am not too familiar with build systems, so forgive me if I'm way off track 
about how to change these things. Or, maybe I just wasn't building it 
properly in the first place and it was working the whole time.

Regards,
	Jeff

--- Makefile.in~	2002-08-11 19:01:15.000000000 -0700
+++ Makefile.in	2002-09-13 01:56:50.000000000 -0700
@@ -50,6 +50,7 @@
 AP_SRC_GRP=@AP_SRC_GRP@
 INSTALL=@INSTALL@
 PY_STD_LIB=@PY_STD_LIB@
+PYTHONBIN=@PYTHON_BIN@
 
 all: @ALL@
 


From vmanera at manord.com  Fri Sep 13 11:05:25 2002
From: vmanera at manord.com (Manera, Villiam)
Date: Fri Jan  9 21:47:00 2004
Subject: R: [mod_python] How to upload files using mod_python's publisher 
	handler?
Message-ID: <52DC70C1C1575C418CB033523A29CF140E0483@exchange2000.manord.com>

try this: 

 publisher.py patched with this function work fine!!!!

class File:

""" Like a file, but also has headers and filename

"""

def __init__(self, field):

# steal all the file-like methods

#for m in field.file.__methods__:

#for m in dir(field.file): #dont' work

for m in self.sim_methods(field.file):

self.__dict__[m] = getattr(field.file, m)

self.headers = field.headers

self.filename = field.filename

def sim_methods(self,obj):

from types import BuiltinMethodType #parte aggiunta

return filter(lambda s, t=obj:

type(getattr(t, s)) == BuiltinMethodType, dir(obj))

 

 

Villiam

-----Messaggio originale-----
Da: Andres Meza [mailto:andres.meza@nuevosmedios.ws]
Inviato: gioved? 12 settembre 2002 20.21
A: mod_python@modpython.org
Oggetto: [mod_python] How to upload files using mod_python's publisher
handler?


Greetings. 

I have created a python CGI script that can upload files sucessfully. Now, I
want to create a mod_python script with the same feature using the
"publisher" handler and I get this error:   


[Thu Sep 12 08:53:41 2002] [error] PythonHandler mod_python.publisher:
Traceback (most recent call last): 
[Thu Sep 12 08:53:41 2002] [error] PythonHandler mod_python.publisher:
File
"/home/mrnet/rpm/tmp/mod_python-root/usr/lib/python2.2/site-packages/mod_pyt
hon/apache.py", line 193, in Dispatch 
[Thu Sep 12 08:53:41 2002] [error] PythonHandler mod_python.publisher:
File
"/home/mrnet/rpm/tmp/mod_python-root/usr/lib/python2.2/site-packages/mod_pyt
hon/publisher.py", line 104, in handler 
[Thu Sep 12 08:53:41 2002] [error] PythonHandler mod_python.publisher:
File
"/home/mrnet/rpm/tmp/mod_python-root/usr/lib/python2.2/site-packages/mod_pyt
hon/publisher.py", line 308, in __init__ 
[Thu Sep 12 08:53:41 2002] [error] PythonHandler mod_python.publisher:
AttributeError: 'file' object has no attribute '__methods__' 

Anyone have an idea about why I get this error? 

Thanks for your time, 

-- 

   Andr?s Meza

   Technical Manager

 __Nuevos Medios - NM S.A.____________________

   e-mail:         andres.meza@nuevosmedios.ws

   day time phone: (+572)6827794 ext.102

   url:            www.nuevosmedios.ws

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mailman.modpython.org/pipermail/mod_python/attachments/20020913/3e8fc6ec/attachment.htm
From list-mod_python at empires.org  Fri Sep 13 02:34:23 2002
From: list-mod_python at empires.org (Jeff Davis)
Date: Fri Jan  9 21:47:00 2004
Subject: [mod_python] Mod_Python 3 / Apache 2 / RedHat 7.3 / Python 2.2 = Seg fault :(
In-Reply-To: <20020913081040.GI8093@samba.org>
References: <000001c25adf$b2039020$0400a8c0@clapton> <20020913081040.GI8093@samba.org>
Message-ID: <200209130234.23802.list-mod_python@empires.org>

> Try running apache under gdb?  Something like this:
>
>   # gdb /usr/sbin/apache2
>   [blah blah]
>   gdb> run -X
>
> Then try to access a page.  Apache should stop in gdb, and it might
> tell you where the problem is.

I tried both gdb and valgrind and supplied the -X argument for each. When I 
hit a page, all it said was "Segmentation Fault" (for valgrind, and gdb was 
similar: "Program received signal SIGSEGV, Segmentation fault."). GDB also 
said "0x402611bb in strlen () from /lib/libc.so.6" after the SIGSEGV, which 
might be helpful. 

Is there something I should be doing differently? I am not really good with 
debuggers.

Valgrind also produced a couple mutex errors for my apache2 even without 
loading mod_python, so it could, I suppose, be a problem with apache2 
(however apache2 seems to function just fine for static pages & cgi).

Regards,
	Jeff

From mbp at samba.org  Fri Sep 13 19:47:21 2002
From: mbp at samba.org (Martin Pool)
Date: Fri Jan  9 21:47:00 2004
Subject: [mod_python] Mod_Python 3 / Apache 2 / RedHat 7.3 / Python 2.2 = Seg fault :(
In-Reply-To: <200209130234.23802.list-mod_python@empires.org>
References: <000001c25adf$b2039020$0400a8c0@clapton> <20020913081040.GI8093@samba.org> <200209130234.23802.list-mod_python@empires.org>
Message-ID: <20020913094720.GL8093@samba.org>

On 13 Sep 2002, Jeff Davis <list-mod_python@empires.org> wrote:
> > Try running apache under gdb?  Something like this:
> >
> >   # gdb /usr/sbin/apache2
> >   [blah blah]
> >   gdb> run -X
> >
> > Then try to access a page.  Apache should stop in gdb, and it might
> > tell you where the problem is.
> 
> I tried both gdb and valgrind and supplied the -X argument for each. When I 
> hit a page, all it said was "Segmentation Fault" (for valgrind, and gdb was 
> similar: "Program received signal SIGSEGV, Segmentation fault."). GDB also 
> said "0x402611bb in strlen () from /lib/libc.so.6" after the SIGSEGV, which 
> might be helpful. 

OK, good.  Now once you get to that point, type 

  gdb> backtrace full

to get some info on where the call to strlen() that caused trouble
came from.  

-- 
Martin 

From neel at mediapulse.com  Fri Sep 13 11:12:55 2002
From: neel at mediapulse.com (Michael C. Neel)
Date: Fri Jan  9 21:47:00 2004
Subject: [mod_python] Mod_Python 3 / Apache 2 / RedHat 7.3 / Python 2.2 = Seg fault :(
Message-ID: <C0FC22C08B82074A88B50061764157775BA8@johnson.mediapulse.net>

I take it you are having a similar problem?

I'm not able to get gdb to run on apache2; it runs but I cannot connect
to it.  I'm not really familiar with gdb, so I'm not sure what I have to
do to get it to run.

I'm trying out compiling mod_python with different arguments to see if
anything fixes it.  It might also be python 2.2, I need to upgrade to
2.2.1 and see where that leads.

Mike
--
Michael C. Neel
There are only 10 types of people in the world;
those who understand binary and those who don't.

-----Original Message-----
From: Martin Pool [mailto:mbp@samba.org] 
Sent: Friday, September 13, 2002 5:47 AM
To: Jeff Davis
Cc: Michael C. Neel; mod_python@modpython.org
Subject: Re: [mod_python] Mod_Python 3 / Apache 2 / RedHat 7.3 / Python
2.2 = Seg fault :(


On 13 Sep 2002, Jeff Davis <list-mod_python@empires.org> wrote:
> > Try running apache under gdb?  Something like this:
> >
> >   # gdb /usr/sbin/apache2
> >   [blah blah]
> >   gdb> run -X
> >
> > Then try to access a page.  Apache should stop in gdb, and it might
> > tell you where the problem is.
> 
> I tried both gdb and valgrind and supplied the -X argument for each.
When I 
> hit a page, all it said was "Segmentation Fault" (for valgrind, and
gdb was 
> similar: "Program received signal SIGSEGV, Segmentation fault."). GDB
also 
> said "0x402611bb in strlen () from /lib/libc.so.6" after the SIGSEGV,
which 
> might be helpful. 

OK, good.  Now once you get to that point, type 

  gdb> backtrace full

to get some info on where the call to strlen() that caused trouble
came from.  

-- 
Martin 


From andres.meza at nuevosmedios.ws  Fri Sep 13 10:52:44 2002
From: andres.meza at nuevosmedios.ws (Andres Meza)
Date: Fri Jan  9 21:47:00 2004
Subject: R: [mod_python] How to upload files using mod_python's	publisher
 handler?
In-Reply-To: <52DC70C1C1575C418CB033523A29CF140E0483@exchange2000.manord.com>
References: <52DC70C1C1575C418CB033523A29CF140E0483@exchange2000.manord.com>
Message-ID: <1031932364.2958.15.camel@coraje>

It works quite well!

Thanks a lot for your patch. Do you know if this bug-fix or the
equivalent one will be included in future versions of mod_python ?

Best regards,
-- 
   Andr?s Meza
   Technical Manager
 __Nuevos Medios - NM S.A.____________________
   e-mail:         andres.meza@nuevosmedios.ws
   day time phone: (+572)6827794 ext.102
   url:            www.nuevosmedios.ws

El vie, 13-09-2002 a las 04:05, Manera, Villiam escribi?:

    try this: 
    
     publisher.py patched with this function work fine!!!!
    
    class File:
    
    """ Like a file, but also has headers and filename
    
    """
    
    def __init__(self, field):
    
    # steal all the file-like methods
    
    #for m in field.file.__methods__:
    
    #for m in dir(field.file): #dont' work
    
    for m in self.sim_methods(field.file):
    
    self.__dict__[m] = getattr(field.file, m)
    
    self.headers = field.headers
    
    self.filename = field.filename
    
    def sim_methods(self,obj):
    
    from types import BuiltinMethodType #parte aggiunta
    
    return filter(lambda s, t=obj:
    
    type(getattr(t, s)) == BuiltinMethodType, dir(obj))
    
     
    
     
    
    Villiam

        -----Messaggio originale-----
        Da: Andres Meza [mailto:andres.meza@nuevosmedios.ws]
        Inviato: gioved? 12 settembre 2002 20.21
        A: mod_python@modpython.org
        Oggetto: [mod_python] How to upload files using mod_python's
        publisher handler?
        
        
        Greetings. 
        
        I have created a python CGI script that can upload files
        sucessfully. Now, I want to create a mod_python script with the
        same feature using the "publisher" handler and I get this
        error:   
        
        
        [Thu Sep 12 08:53:41 2002] [error] PythonHandler
        mod_python.publisher: Traceback (most recent call last): 
        [Thu Sep 12 08:53:41 2002] [error] PythonHandler
        mod_python.publisher:   File
        "/home/mrnet/rpm/tmp/mod_python-root/usr/lib/python2.2/site-packages/mod_python/apache.py", line 193, in Dispatch 
        [Thu Sep 12 08:53:41 2002] [error] PythonHandler
        mod_python.publisher:   File
        "/home/mrnet/rpm/tmp/mod_python-root/usr/lib/python2.2/site-packages/mod_python/publisher.py", line 104, in handler 
        [Thu Sep 12 08:53:41 2002] [error] PythonHandler
        mod_python.publisher:   File
        "/home/mrnet/rpm/tmp/mod_python-root/usr/lib/python2.2/site-packages/mod_python/publisher.py", line 308, in __init__ 
        [Thu Sep 12 08:53:41 2002] [error] PythonHandler
        mod_python.publisher: AttributeError: 'file' object has no
        attribute '__methods__' 
        
        Anyone have an idea about why I get this error? 
        
        Thanks for your time, 
        -- 
           Andr?s Meza
           Technical Manager
         __Nuevos Medios - NM S.A.____________________
           e-mail:         andres.meza@nuevosmedios.ws
           day time phone: (+572)6827794 ext.102
           url:            www.nuevosmedios.ws


-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mailman.modpython.org/pipermail/mod_python/attachments/20020913/d5b46a96/attachment.htm
From bryan at eevolved.com  Fri Sep 13 16:04:02 2002
From: bryan at eevolved.com (Bryan Mongeau)
Date: Fri Jan  9 21:47:00 2004
Subject: [mod_python] Mod_python 3.0 BETA / Apache2 segfault
Message-ID: <200209131604.02633.bryan@eevolved.com>

Hello,

I have tested out the 3.0 BETA with apache 2 and discovered a segfault.

$ gdb ./httpd
GNU gdb 5.2.1
(gdb) run -X
Starting program: /usr/local/apache2/bin/httpd -X

Program received signal SIGSEGV, Segmentation fault.
0x400e8eef in apr_pstrcat (a=0x81d7fe8) at apr_strings.c:175
175             apr_size_t cplen = strlen(cp);
(gdb) bt
#0  0x400e8eef in apr_pstrcat (a=0x81d7fe8) at apr_strings.c:175
#1  0x402ed68d in python_handler (req=0x81d8020, phase=0x40369247 
"PythonTransHandler")
    at mod_python.c:764
#2  0x402eea6d in PythonTransHandler (req=0x81d8020) at mod_python.c:1687
#3  0x0808cd48 in ap_run_translate_name (r=0x81d8020) at request.c:108
#4  0x0808d5ec in ap_process_request_internal (r=0x81d8020) at request.c:167
#5  0x08069e02 in ap_process_request (r=0x81d8020) at http_request.c:255
#6  0x08065dab in ap_process_http_connection (c=0x81d40e0) at http_core.c:293
#7  0x080831c8 in ap_run_process_connection (c=0x81d40e0) at connection.c:85
#8  0x0808346f in ap_process_connection (c=0x81d40e0, csd=0x81d4010) at 
connection.c:207
#9  0x08078cc2 in child_main (child_num_arg=0) at prefork.c:696
#10 0x08078d80 in make_child (s=0x80b5378, slot=0) at prefork.c:736
#11 0x08078e71 in startup_children (number_to_start=5) at prefork.c:808
#12 0x0807917d in ap_mpm_run (_pconf=0x80b2cb0, plog=0x80ead90, s=0x80b5378) 
at prefork.c:1024
#13 0x0807e67c in main (argc=2, argv=0xbffff934) at main.c:645
#14 0x401933c1 in __libc_start_main () from /lib/libc.so.6


FIX: Comment out lines 764-767 and 770 of mod_python.c. Seems to compile and 
run fine. Impact on functionality unknown.

Please advise,
-- 
Bryan Mongeau
eEvolved Inc. - IT Consulting & Custom Software
http://eevolved.com/
--
"The hardest thing in the world to understand is the income tax."-- Einstein


From list-mod_python at empires.org  Fri Sep 13 14:00:16 2002
From: list-mod_python at empires.org (Jeff Davis)
Date: Fri Jan  9 21:47:00 2004
Subject: [mod_python] Mod_python 3.0 BETA / Apache2 segfault
In-Reply-To: <200209131604.02633.bryan@eevolved.com>
References: <200209131604.02633.bryan@eevolved.com>
Message-ID: <200209131400.16448.list-mod_python@empires.org>

Thanks!

For those who don't want to find those lines in the file, a patch is included 
below this message.

I don't know what the impact of that is either. I hope it's good :)

Regards,
	Jeff


On Friday 13 September 2002 09:04 am, Bryan Mongeau wrote:
> Hello,
>
> I have tested out the 3.0 BETA with apache 2 and discovered a segfault.
>
> $ gdb ./httpd
> GNU gdb 5.2.1
> (gdb) run -X
> Starting program: /usr/local/apache2/bin/httpd -X
>
> Program received signal SIGSEGV, Segmentation fault.
> 0x400e8eef in apr_pstrcat (a=0x81d7fe8) at apr_strings.c:175
> 175             apr_size_t cplen = strlen(cp);
> (gdb) bt
> #0  0x400e8eef in apr_pstrcat (a=0x81d7fe8) at apr_strings.c:175
> #1  0x402ed68d in python_handler (req=0x81d8020, phase=0x40369247
> "PythonTransHandler")
>     at mod_python.c:764
> #2  0x402eea6d in PythonTransHandler (req=0x81d8020) at mod_python.c:1687
> #3  0x0808cd48 in ap_run_translate_name (r=0x81d8020) at request.c:108
> #4  0x0808d5ec in ap_process_request_internal (r=0x81d8020) at
> request.c:167 #5  0x08069e02 in ap_process_request (r=0x81d8020) at
> http_request.c:255 #6  0x08065dab in ap_process_http_connection
> (c=0x81d40e0) at http_core.c:293 #7  0x080831c8 in
> ap_run_process_connection (c=0x81d40e0) at connection.c:85 #8  0x0808346f
> in ap_process_connection (c=0x81d40e0, csd=0x81d4010) at connection.c:207
> #9  0x08078cc2 in child_main (child_num_arg=0) at prefork.c:696
> #10 0x08078d80 in make_child (s=0x80b5378, slot=0) at prefork.c:736
> #11 0x08078e71 in startup_children (number_to_start=5) at prefork.c:808
> #12 0x0807917d in ap_mpm_run (_pconf=0x80b2cb0, plog=0x80ead90,
> s=0x80b5378) at prefork.c:1024
> #13 0x0807e67c in main (argc=2, argv=0xbffff934) at main.c:645
> #14 0x401933c1 in __libc_start_main () from /lib/libc.so.6
>
>
> FIX: Comment out lines 764-767 and 770 of mod_python.c. Seems to compile
> and run fine. Impact on functionality unknown.
>



--- mod_python.c.old	2002-09-13 13:51:09.000000000 -0700
+++ mod_python.c	2002-09-13 13:51:38.000000000 -0700
@@ -759,15 +759,7 @@
             ext = apr_pstrcat(req->pool, ".", ext, NULL);
     }
 
-    /* is there an hlist entry, i.e. a handler? */
-    /* try with extension */
-    hle = (hl_entry *)apr_hash_get(conf->hlists, 
-                                   apr_pstrcat(req->pool, phase, ext, NULL),
-                                   APR_HASH_KEY_STRING);
-    if (!hle) {
-        /* try without extension */
         hle = (hl_entry *)apr_hash_get(conf->hlists, phase, 
APR_HASH_KEY_STRING);
-    }
     
     req_conf = (py_req_config *) ap_get_module_config(req->request_config,
                                                       &python_module);





From bryan at eevolved.com  Fri Sep 13 17:11:22 2002
From: bryan at eevolved.com (Bryan Mongeau)
Date: Fri Jan  9 21:47:01 2004
Subject: [mod_python] Mod_python and Sub-Interpreter segregation
Message-ID: <200209131711.22854.bryan@eevolved.com>

Greetings,

I've been playing around with mod_python and have noticed a peculiar behaviour 
that perhaps someone could explain to me.  As the mod_python documentation 
explains, a sub-interpreter is created for each virtual host (default).  I 
therefore expected global variables within this sub-interpreter to be able to 
maintain state between hits.  I created a simple script ( included below ) to 
observe this behaviour by counting hits in a global variable and printing the 
interpreter name.

To my surprise, it seems as if different apache child processes run their 
python code in different sub-interpreters even though the interpreter name 
remains the same ( virtualhost ). I produced this behaviour by loading the 
script in my browser and refreshing (very) rapidly. What happens is the hit 
counter eventually returns to zero, meaning that the global variable is no 
longer in the namespace. Repeated refreshing causes the hit counter to jump 
all over the place as I presume it jumps from one apache child process to 
another, each having their own sub-interpreters and global variables.

It seems as if each child process has its own sub-interpreter? Or am I 
confused? Was this documented? Enlightenment is greatly appreciated. 
Unfortunately the behaviour I am observing is undesired.

Here is the code to demonstrate:

from mod_python import apache
def handler(req):
    try:
        globals()['hits']+=1
    except KeyError:
        globals()['hits'] = 0
    req.write("interpreter_name=" + req.interpreter )
    req.write(" - hits: " + str(globals()['hits']))
    return apache.OK
-- 
Bryan Mongeau
eEvolved Inc. - IT Consulting & Custom Software
http://eevolved.com/
--
"The true function of life, that which is being maximized in the natural 
world, is DNA survival. But DNA is not floating free; it is locked up in 
living bodies and it has made the most of the levers of power at its 
disposal." -- Richard Dawkins


From brianh at exelixis.com  Fri Sep 13 14:28:37 2002
From: brianh at exelixis.com (Brian Hawthorne)
Date: Fri Jan  9 21:47:01 2004
Subject: [mod_python] Mod_python and Sub-Interpreter segregation
In-Reply-To: <200209131711.22854.bryan@eevolved.com>
Message-ID: <Pine.GSO.4.05.10209131423360.8716-100000@timeless.exelixis.com>

unfortunately, there is no way to share global data among multiple
apache child processes without using an external database of some sort.
this is true regardless of how many interpreters you have in each child
proc.  i anticipate that the multithreaded server model available in
apache2 will address this issue, though i haven't gotten my hands dirty
yet trying to set up modpy3 alpha with apache2.

brian hawthorne
-bioinformatics,
Exelixis, Inc.


On Fri, 13 Sep 2002, Bryan Mongeau wrote:

> Greetings,
> 
> I've been playing around with mod_python and have noticed a peculiar behaviour 
> that perhaps someone could explain to me.  As the mod_python documentation 
> explains, a sub-interpreter is created for each virtual host (default).  I 
> therefore expected global variables within this sub-interpreter to be able to 
> maintain state between hits.  I created a simple script ( included below ) to 
> observe this behaviour by counting hits in a global variable and printing the 
> interpreter name.
> 
> To my surprise, it seems as if different apache child processes run their 
> python code in different sub-interpreters even though the interpreter name 
> remains the same ( virtualhost ). I produced this behaviour by loading the 
> script in my browser and refreshing (very) rapidly. What happens is the hit 
> counter eventually returns to zero, meaning that the global variable is no 
> longer in the namespace. Repeated refreshing causes the hit counter to jump 
> all over the place as I presume it jumps from one apache child process to 
> another, each having their own sub-interpreters and global variables.
> 
> It seems as if each child process has its own sub-interpreter? Or am I 
> confused? Was this documented? Enlightenment is greatly appreciated. 
> Unfortunately the behaviour I am observing is undesired.
> 
> Here is the code to demonstrate:
> 
> from mod_python import apache
> def handler(req):
>     try:
>         globals()['hits']+=1
>     except KeyError:
>         globals()['hits'] = 0
>     req.write("interpreter_name=" + req.interpreter )
>     req.write(" - hits: " + str(globals()['hits']))
>     return apache.OK
> -- 
> Bryan Mongeau
> eEvolved Inc. - IT Consulting & Custom Software
> http://eevolved.com/
> --
> "The true function of life, that which is being maximized in the natural 
> world, is DNA survival. But DNA is not floating free; it is locked up in 
> living bodies and it has made the most of the levers of power at its 
> disposal." -- Richard Dawkins
> 
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://www.modpython.org/mailman/listinfo/mod_python
> 


From list-mod_python at empires.org  Fri Sep 13 14:36:39 2002
From: list-mod_python at empires.org (Jeff Davis)
Date: Fri Jan  9 21:47:01 2004
Subject: [mod_python] more info about the segfault bug
Message-ID: <200209131436.39544.list-mod_python@empires.org>

Patch below. That variable "ext" is not being initialized appearently (in the 
function python_handler in mod_python.c). So I suppose it's not passing the 
"if(req->filename)" test, and so the call to apr_pstrcat just passes garbage 
("ext") to the function. Perhaps we need an "else" safety clause, or 
something? I don't really know what's supposed to be happening there, but if 
someone does maybe this will help them find the problem.

I will continue to look into the problem, but I'm not all that familiar with 
writing apache modules.


Regards,
	Jeff

Note: patch is from distributed version to me new one. Disregard my previous 
patch, which implemented Bryan Mongeau's solution.

--- mod_python.c.old	2002-09-13 13:51:09.000000000 -0700
+++ mod_python.c	2002-09-13 14:28:47.000000000 -0700
@@ -742,7 +742,7 @@
     int result;
     const char * interpreter = NULL;
     PyThreadState *tstate;
-    const char *ext;
+    char *ext = NULL;
     hl_entry *hle = NULL;
     hl_entry *dynhle = NULL;
 


From neel at mediapulse.com  Fri Sep 13 17:40:42 2002
From: neel at mediapulse.com (Michael C. Neel)
Date: Fri Jan  9 21:47:01 2004
Subject: [mod_python] Mod_python and Sub-Interpreter segregation
Message-ID: <C0FC22C08B82074A88B50061764157775BAA@johnson.mediapulse.net>

I don't think this will work in apache2 either, based on my limited
experience.

Apache2 threaded still has separate processes (children) along with
threads.  You can either have a fixed number of processes, and let the
threads grow and shrink, or have a fixed number of threads per process
and add more processes as needed.

While this will help with resource pooling, you'll still need an outside
database to have a global variable.  Now with apache2's cgid (a process
to handle all cgi scripts since forking a 75 thread apache child would
be, um, bad) there might be something you can do there, but then that
means you app is a CGI and we don't use that word in 2002 anymore...

Mike 

--
Michael C. Neel
There are only 10 types of people in the world;
those who understand binary and those who don't.


-----Original Message-----
From: Brian Hawthorne [mailto:brianh@exelixis.com] 
Sent: Friday, September 13, 2002 5:29 PM
To: Bryan Mongeau
Cc: mod_python@modpython.org
Subject: Re: [mod_python] Mod_python and Sub-Interpreter segregation


unfortunately, there is no way to share global data among multiple
apache child processes without using an external database of some sort.
this is true regardless of how many interpreters you have in each child
proc.  i anticipate that the multithreaded server model available in
apache2 will address this issue, though i haven't gotten my hands dirty
yet trying to set up modpy3 alpha with apache2.

brian hawthorne
-bioinformatics,
Exelixis, Inc.


On Fri, 13 Sep 2002, Bryan Mongeau wrote:

> Greetings,
> 
> I've been playing around with mod_python and have noticed a peculiar
behaviour 
> that perhaps someone could explain to me.  As the mod_python
documentation 
> explains, a sub-interpreter is created for each virtual host
(default).  I 
> therefore expected global variables within this sub-interpreter to be
able to 
> maintain state between hits.  I created a simple script ( included
below ) to 
> observe this behaviour by counting hits in a global variable and
printing the 
> interpreter name.
> 
> To my surprise, it seems as if different apache child processes run
their 
> python code in different sub-interpreters even though the interpreter
name 
> remains the same ( virtualhost ). I produced this behaviour by loading
the 
> script in my browser and refreshing (very) rapidly. What happens is
the hit 
> counter eventually returns to zero, meaning that the global variable
is no 
> longer in the namespace. Repeated refreshing causes the hit counter to
jump 
> all over the place as I presume it jumps from one apache child process
to 
> another, each having their own sub-interpreters and global variables.
> 
> It seems as if each child process has its own sub-interpreter? Or am I

> confused? Was this documented? Enlightenment is greatly appreciated. 
> Unfortunately the behaviour I am observing is undesired.
> 
> Here is the code to demonstrate:
> 
> from mod_python import apache
> def handler(req):
>     try:
>         globals()['hits']+=1
>     except KeyError:
>         globals()['hits'] = 0
>     req.write("interpreter_name=" + req.interpreter )
>     req.write(" - hits: " + str(globals()['hits']))
>     return apache.OK
> -- 
> Bryan Mongeau
> eEvolved Inc. - IT Consulting & Custom Software
> http://eevolved.com/
> --
> "The true function of life, that which is being maximized in the
natural 
> world, is DNA survival. But DNA is not floating free; it is locked up
in 
> living bodies and it has made the most of the levers of power at its 
> disposal." -- Richard Dawkins
> 
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://www.modpython.org/mailman/listinfo/mod_python
> 

_______________________________________________
Mod_python mailing list
Mod_python@modpython.org
http://www.modpython.org/mailman/listinfo/mod_python


From list-mod_python at empires.org  Fri Sep 13 14:48:57 2002
From: list-mod_python at empires.org (Jeff Davis)
Date: Fri Jan  9 21:47:01 2004
Subject: [mod_python] Mod_python and Sub-Interpreter segregation
In-Reply-To: <200209131711.22854.bryan@eevolved.com>
References: <200209131711.22854.bryan@eevolved.com>
Message-ID: <200209131448.57166.list-mod_python@empires.org>

Hi,

The only way I know of that an interpreter can be shared is if you have a 
multithreaded app.

I think that's possible because it seems to me that python does well with 
threads. That way, each request could execute in it's own interpreter 
function call, and that way they'd be separate, but allow you to share global 
variables. However, that seems like it might be a little tricky, so I am not 
sure how feasible it is. Also note that the data wouldn't survive an apache 
restart.

However, to have the one-process-many-threads per virtualhost in apache2, you 
need to use mpm perchild. That mpm isn't really stable, so you might need to 
wait a while.

You might consider a lightweigtht DB or a RAM based filesystem or something in 
the interim. Or, if you wanted a featureful database you could use postgresql 
and persistant connections and it would still operate at a pretty good speed, 
which could be a good idea if you need to use a database for your application 
anyway.

Regards,
	Jeff

On Friday 13 September 2002 10:11 am, Bryan Mongeau wrote:
> Greetings,
>
> I've been playing around with mod_python and have noticed a peculiar
> behaviour that perhaps someone could explain to me.  As the mod_python
> documentation explains, a sub-interpreter is created for each virtual host
> (default).  I therefore expected global variables within this
> sub-interpreter to be able to maintain state between hits.  I created a
> simple script ( included below ) to observe this behaviour by counting hits
> in a global variable and printing the interpreter name.
>
> To my surprise, it seems as if different apache child processes run their
> python code in different sub-interpreters even though the interpreter name
> remains the same ( virtualhost ). I produced this behaviour by loading the
> script in my browser and refreshing (very) rapidly. What happens is the hit
> counter eventually returns to zero, meaning that the global variable is no
> longer in the namespace. Repeated refreshing causes the hit counter to jump
> all over the place as I presume it jumps from one apache child process to
> another, each having their own sub-interpreters and global variables.
>
> It seems as if each child process has its own sub-interpreter? Or am I
> confused? Was this documented? Enlightenment is greatly appreciated.
> Unfortunately the behaviour I am observing is undesired.
>
> Here is the code to demonstrate:
>
> from mod_python import apache
> def handler(req):
>     try:
>         globals()['hits']+=1
>     except KeyError:
>         globals()['hits'] = 0
>     req.write("interpreter_name=" + req.interpreter )
>     req.write(" - hits: " + str(globals()['hits']))
>     return apache.OK


From brianh at exelixis.com  Fri Sep 13 14:58:33 2002
From: brianh at exelixis.com (Brian Hawthorne)
Date: Fri Jan  9 21:47:01 2004
Subject: [mod_python] Mod_python and Sub-Interpreter segregation
In-Reply-To: <C0FC22C08B82074A88B50061764157775BAA@johnson.mediapulse.net>
Message-ID: <Pine.GSO.4.05.10209131450100.8716-100000@timeless.exelixis.com>

hmmm,
currently you can share global vars if you set apache to have exactly one
child process (but to great performance detriment).  i was imagining you
could do the same in the perthread server by setting the numprocs=1 and
letting the numthreads grow/shrink (recouping the performace hit with
extra threads).

actually, it should be pretty easy to wrap a bit of code around python
shelve to turn some dbm file into a modpyglobal repository of python objs
keyed by varname.  that's what i would do if i didn't feel like dealing
with a real db.  also, if you don't use an external repository, you have
to worry about server restarts and child procs getting killed etc.

brian


On Fri, 13 Sep 2002, Michael C. Neel wrote:

> I don't think this will work in apache2 either, based on my limited
> experience.
> 
> Apache2 threaded still has separate processes (children) along with
> threads.  You can either have a fixed number of processes, and let the
> threads grow and shrink, or have a fixed number of threads per process
> and add more processes as needed.
> 
> While this will help with resource pooling, you'll still need an outside
> database to have a global variable.  Now with apache2's cgid (a process
> to handle all cgi scripts since forking a 75 thread apache child would
> be, um, bad) there might be something you can do there, but then that
> means you app is a CGI and we don't use that word in 2002 anymore...
> 
> Mike 
> 
> --
> Michael C. Neel
> There are only 10 types of people in the world;
> those who understand binary and those who don't.
> 
> 
> -----Original Message-----
> From: Brian Hawthorne [mailto:brianh@exelixis.com] 
> Sent: Friday, September 13, 2002 5:29 PM
> To: Bryan Mongeau
> Cc: mod_python@modpython.org
> Subject: Re: [mod_python] Mod_python and Sub-Interpreter segregation
> 
> 
> unfortunately, there is no way to share global data among multiple
> apache child processes without using an external database of some sort.
> this is true regardless of how many interpreters you have in each child
> proc.  i anticipate that the multithreaded server model available in
> apache2 will address this issue, though i haven't gotten my hands dirty
> yet trying to set up modpy3 alpha with apache2.
> 
> brian hawthorne
> -bioinformatics,
> Exelixis, Inc.
> 
> 
> On Fri, 13 Sep 2002, Bryan Mongeau wrote:
> 
> > Greetings,
> > 
> > I've been playing around with mod_python and have noticed a peculiar
> behaviour 
> > that perhaps someone could explain to me.  As the mod_python
> documentation 
> > explains, a sub-interpreter is created for each virtual host
> (default).  I 
> > therefore expected global variables within this sub-interpreter to be
> able to 
> > maintain state between hits.  I created a simple script ( included
> below ) to 
> > observe this behaviour by counting hits in a global variable and
> printing the 
> > interpreter name.
> > 
> > To my surprise, it seems as if different apache child processes run
> their 
> > python code in different sub-interpreters even though the interpreter
> name 
> > remains the same ( virtualhost ). I produced this behaviour by loading
> the 
> > script in my browser and refreshing (very) rapidly. What happens is
> the hit 
> > counter eventually returns to zero, meaning that the global variable
> is no 
> > longer in the namespace. Repeated refreshing causes the hit counter to
> jump 
> > all over the place as I presume it jumps from one apache child process
> to 
> > another, each having their own sub-interpreters and global variables.
> > 
> > It seems as if each child process has its own sub-interpreter? Or am I
> 
> > confused? Was this documented? Enlightenment is greatly appreciated. 
> > Unfortunately the behaviour I am observing is undesired.
> > 
> > Here is the code to demonstrate:
> > 
> > from mod_python import apache
> > def handler(req):
> >     try:
> >         globals()['hits']+=1
> >     except KeyError:
> >         globals()['hits'] = 0
> >     req.write("interpreter_name=" + req.interpreter )
> >     req.write(" - hits: " + str(globals()['hits']))
> >     return apache.OK
> > -- 
> > Bryan Mongeau
> > eEvolved Inc. - IT Consulting & Custom Software
> > http://eevolved.com/
> > --
> > "The true function of life, that which is being maximized in the
> natural 
> > world, is DNA survival. But DNA is not floating free; it is locked up
> in 
> > living bodies and it has made the most of the levers of power at its 
> > disposal." -- Richard Dawkins
> > 
> > _______________________________________________
> > Mod_python mailing list
> > Mod_python@modpython.org
> > http://www.modpython.org/mailman/listinfo/mod_python
> > 
> 
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://www.modpython.org/mailman/listinfo/mod_python
> 
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://www.modpython.org/mailman/listinfo/mod_python
> 


From list-mod_python at empires.org  Fri Sep 13 15:06:03 2002
From: list-mod_python at empires.org (Jeff Davis)
Date: Fri Jan  9 21:47:01 2004
Subject: [mod_python] Mod_Python 3 / Apache 2 / RedHat 7.3 / Python 2.2 = Seg fault :(
In-Reply-To: <20020913094720.GL8093@samba.org>
References: <000001c25adf$b2039020$0400a8c0@clapton> <200209130234.23802.list-mod_python@empires.org> <20020913094720.GL8093@samba.org>
Message-ID: <200209131506.03684.list-mod_python@empires.org>

The backtrace is below. I think that we're getting it taken care of. I 
narrowed it to an uninitialized variable (see another message I sent earlier 
with the subject: "more info about the segfault").

Thanks for letting me know how to use gdb! Couldn't have done it without gdb, 
that's for sure.

Regards,
	Jeff

#0  0x402611bb in strlen () from /lib/libc.so.6
No symbol table info available.
#1  0x4015d9b4 in apr_pstrcat () from /usr/lib/libapr.so.0
No symbol table info available.
#2  0x40350f88 in python_handler () from 
/usr/lib/apache2/modules/mod_python.so
No symbol table info available.
#3  0x40352817 in PythonPostReadRequestHandler ()
   from /usr/lib/apache2/modules/mod_python.so
No symbol table info available.
#4  0x08094f90 in ap_run_post_read_request ()
No symbol table info available.
#5  0x08093a1e in ap_read_request ()
No symbol table info available.
#6  0x0806915c in _start ()
No symbol table info available.
#7  0x0808e7c1 in ap_run_process_connection ()
No symbol table info available.
#8  0x0808ebac in ap_process_connection ()
No symbol table info available.
#9  0x08080468 in ap_graceful_stop_signalled ()
No symbol table info available.
#10 0x0808054d in ap_graceful_stop_signalled ()
No symbol table info available.
---Type <return> to continue, or q <return> to quit---
#11 0x08080684 in ap_graceful_stop_signalled ()
No symbol table info available.
#12 0x08080aa6 in ap_mpm_run ()
No symbol table info available.
#13 0x08087743 in main ()
No symbol table info available.
#14 0x402070bf in __libc_start_main () from /lib/libc.so.6
No symbol table info available.

On Friday 13 September 2002 02:47 am, Martin Pool wrote:
> On 13 Sep 2002, Jeff Davis <list-mod_python@empires.org> wrote:
> > > Try running apache under gdb?  Something like this:
> > >
> > >   # gdb /usr/sbin/apache2
> > >   [blah blah]
> > >   gdb> run -X
> > >
> > > Then try to access a page.  Apache should stop in gdb, and it might
> > > tell you where the problem is.
> >
> > I tried both gdb and valgrind and supplied the -X argument for each. When
> > I hit a page, all it said was "Segmentation Fault" (for valgrind, and gdb
> > was similar: "Program received signal SIGSEGV, Segmentation fault."). GDB
> > also said "0x402611bb in strlen () from /lib/libc.so.6" after the
> > SIGSEGV, which might be helpful.
>
> OK, good.  Now once you get to that point, type
>
>   gdb> backtrace full
>
> to get some info on where the call to strlen() that caused trouble
> came from.


From jack_diederich at email.com  Fri Sep 13 17:10:28 2002
From: jack_diederich at email.com (Jack Diederich)
Date: Fri Jan  9 21:47:01 2004
Subject: [mod_python] Mod_python and Sub-Interpreter segregation
Message-ID: <20020913221028.26023.qmail@email.com>

As others have pointed out, apache spawns multiple processes which each have their own independent memory space.

One of the 'external storage' solutions is to use shareded memory between processes.  This is supported differently on different flavors of unix.  Here is a very out of date link for a shared memory python wrapper
http://gigue.peabody.jhu.edu/~mdboom/omi/source/shm_source/shm.html

I have no idea if it still works, or if it will work on your actual server.

-jack
-- 
__________________________________________________________
Sign-up for your own FREE Personalized E-mail at Mail.com
http://www.mail.com/?sr=signup


From bryan at eevolved.com  Fri Sep 13 19:59:42 2002
From: bryan at eevolved.com (Bryan Mongeau)
Date: Fri Jan  9 21:47:01 2004
Subject: [mod_python] Mod_python and Sub-Interpreter segregation
In-Reply-To: <Pine.GSO.4.05.10209131450100.8716-100000@timeless.exelixis.com>
References: <Pine.GSO.4.05.10209131450100.8716-100000@timeless.exelixis.com>
Message-ID: <200209131959.42086.bryan@eevolved.com>

Thanks for all the great replies everyone! I appreciate it.

On September 13, 2002 09:58 pm, Brian Hawthorne wrote:
> hmmm,
> currently you can share global vars if you set apache to have exactly one
> child process (but to great performance detriment).  i was imagining you
> could do the same in the perthread server by setting the numprocs=1 and
> letting the numthreads grow/shrink (recouping the performace hit with
> extra threads).

Thanks alot for this idea! I compiled apache with the worker MPM, set 
StartServers to 1 and ThreadsPerChild to 64. The result? My shared memory hit 
counter works perfectly and clocks about 50 hits/sec on my 800 Mhz, which, 
according to my rough hand benchmarks, is actually a little faster than using 
prefork with StartServers at 5!

Seems as if my problem is solved.. at least for now, thanks!

> actually, it should be pretty easy to wrap a bit of code around python
> shelve to turn some dbm file into a modpyglobal repository of python objs
> keyed by varname.  that's what i would do if i didn't feel like dealing
> with a real db.  also, if you don't use an external repository, you have
> to worry about server restarts and child procs getting killed etc.

This is almost exactly what I have in mind :) More later,
-- 
Bryan Mongeau
eEvolved Inc. - IT Consulting & Custom Software
http://eevolved.com/
--
"Let us understand what our own selfish genes are up to, because we may then 
at least have a chance to upset their designs, something that no other 
species has ever aspired to do." -- Richard Dawkins


From grisha at ispol.com  Fri Sep 13 21:28:22 2002
From: grisha at ispol.com (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 21:47:01 2004
Subject: [mod_python] python-dev list
Message-ID: <Pine.BSF.4.32.0209132124180.8852-100000@eden.ispol.com>

Folks -

Just wanted to point out that there now exists a
python-dev@httpd.apache.org list, intended specifically for mod_python
development (i.e. the C and Python code that implements the mod_python
internals). So if you have patches or bug reports, please subscribe to
that list and post it there.

This list can then become a strictly end-user list.

Thanks,

Grisha



From peter at hawkins.emu.id.au  Sat Sep 14 11:39:17 2002
From: peter at hawkins.emu.id.au (Peter Hawkins)
Date: Fri Jan  9 21:47:01 2004
Subject: [mod_python] Segfault in 2.7.8 if encoding changed
Message-ID: <200209141139.19625.peter@hawkins.emu.id.au>

Hi...

I'm the current debian package maintainer for mod_python.

I'm hoping that someone can help me with this bug (the bugs listed 
below are identical, I think).
http://bugs.debian.org/cgi-bin/bugreport.cgi?bug=152750&repeatmerged=yes
http://bugs.debian.org/cgi-bin/bugreport.cgi?bug=135346&repeatmerged=yes

As explained in the bug logs, if you change your encoding to anything 
other than ascii in /etc/python2.1/site.py, then mod_python segfaults 
on every request. Somehow, this causes the interpreters global 
variable to be NULL when it is used in get_interpreter_data, leading 
to a segfault.

The python versions that modpython is built against (2.1, 2.2 and 
2.3a0) are all compiled with threads on linux (not really an awful 
lot I can do about that).

Backtrace (my own):
0x40280424 in PyDict_GetItemString () from 
/usr/lib/libpython2.2.so.0.0
(gdb) bt
#0  0x40280424 in PyDict_GetItemString () from 
/usr/lib/libpython2.2.so.0.0
#1  0x4022e1a6 in get_interpreter_data () from 
/usr/lib/apache/1.3/mod_python.so
#2  0x4022f0f4 in make_obcallback () from 
/usr/lib/apache/1.3/mod_python.so
#3  0x402306f0 in python_finalize () from 
/usr/lib/apache/1.3/mod_python.so
#4  0x08053a84 in ap_invoke_handler ()
#5  0x0806338c in ap_some_auth_required ()
#6  0x080633e8 in ap_process_request ()
#7  0x0805cbcb in ap_child_terminate ()
#8  0x0805cd5c in ap_child_terminate ()
#9  0x0805ce79 in ap_child_terminate ()
#10 0x0805d355 in ap_child_terminate ()
#11 0x0805da5d in main ()
#12 0x400ed0bf in __libc_start_main () from /lib/libc.so.6

From jack_diederich at email.com  Fri Sep 13 21:39:45 2002
From: jack_diederich at email.com (Jack Diederich)
Date: Fri Jan  9 21:47:01 2004
Subject: [mod_python] python-dev list
Message-ID: <20020914023948.26152.qmail@email.com>

To subscribe, send an empty email to

python-dev-subscribe@httpd.apache.org


> Just wanted to point out that there now exists a
> python-dev@httpd.apache.org list, intended specifically for mod_python
> development

> This list can then become a strictly end-user list.

wouldn't it be better from a maintenace and dont-confuse-users standpoint to have the two lists in the same place? (not the same list, but the same host).  mod_python@modpython.org could then just auto-respond with a "Look over there" message.

-jack
-- 
__________________________________________________________
Sign-up for your own FREE Personalized E-mail at Mail.com
http://www.mail.com/?sr=signup


From neel at mediapulse.com  Fri Sep 13 22:50:40 2002
From: neel at mediapulse.com (Michael Neel)
Date: Fri Jan  9 21:47:01 2004
Subject: [mod_python] more info about the segfault bug
In-Reply-To: <200209131436.39544.list-mod_python@empires.org>
Message-ID: <000501c25b99$833bbf50$0400a8c0@clapton>

Thanks Jeff, this fixed the issue for me.  I'll keep watch on this list
and the new httpd.apache.org list for an official update, and for any
word what the side effects (if any, that change looks fairly harmless on
the surface) this has.

Mike

--
Michael C. Neel
There are only 10 types of people in the world;
those who understand binary and those who don't.

-----Original Message-----
From: mod_python-admin@modpython.org
[mailto:mod_python-admin@modpython.org] On Behalf Of Jeff Davis
Sent: Friday, September 13, 2002 5:37 PM
To: mod_python@modpython.org
Subject: [mod_python] more info about the segfault bug



Patch below. That variable "ext" is not being initialized appearently
(in the 
function python_handler in mod_python.c). So I suppose it's not passing
the 
"if(req->filename)" test, and so the call to apr_pstrcat just passes
garbage 
("ext") to the function. Perhaps we need an "else" safety clause, or 
something? I don't really know what's supposed to be happening there,
but if 
someone does maybe this will help them find the problem.

I will continue to look into the problem, but I'm not all that familiar
with 
writing apache modules.


Regards,
	Jeff

Note: patch is from distributed version to me new one. Disregard my
previous 
patch, which implemented Bryan Mongeau's solution.

--- mod_python.c.old	2002-09-13 13:51:09.000000000 -0700
+++ mod_python.c	2002-09-13 14:28:47.000000000 -0700
@@ -742,7 +742,7 @@
     int result;
     const char * interpreter = NULL;
     PyThreadState *tstate;
-    const char *ext;
+    char *ext = NULL;
     hl_entry *hle = NULL;
     hl_entry *dynhle = NULL;
 

_______________________________________________
Mod_python mailing list
Mod_python@modpython.org
http://www.modpython.org/mailman/listinfo/mod_python


From grisha at modpython.org  Fri Sep 13 22:57:59 2002
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 21:47:01 2004
Subject: [mod_python] python-dev list
In-Reply-To: <20020914023948.26152.qmail@email.com>
Message-ID: <Pine.BSF.4.32.0209132255320.10141-100000@eden.ispol.com>

Yes, we just haven't figured out how to move the mod_python@modpython.org
list - ideally, we will migrate the archives and subscribtions (or at
least archives) to the new list, but since apache mailing lists are not
mailman its a bit tricky.

On Fri, 13 Sep 2002, Jack Diederich wrote:

> wouldn't it be better from a maintenace and dont-confuse-users
> standpoint to have the two lists in the same place? (not the same
> list, but the same host).  mod_python@modpython.org could then just
> auto-respond with a "Look over there" message.


From neel at mediapulse.com  Fri Sep 13 23:07:50 2002
From: neel at mediapulse.com (Michael Neel)
Date: Fri Jan  9 21:47:01 2004
Subject: [mod_python] Mod_python and Sub-Interpreter segregation
In-Reply-To: <200209131959.42086.bryan@eevolved.com>
Message-ID: <001401c25b9b$e97f0770$0400a8c0@clapton>

Thank will work great, until you hit the 65th concurrent connection, at
wich point apache will give you another child. Another thing to keep in
mind is that if one thing goes wrong in any thread, there goes your
whole server.  (just a side note, to test a web server I use the ab tool
that comes with apache; it will let you set the concurrent number of
theard to try and get at once).

I saw a python tool mentioned in another thread;
http://www.object-craft.com.au/projects/albatross/ which I'm looking at
myself right now, so I have no experience with, but after a first read
though looks very promising when used with mod_python and has several
options for saved states and should have some good choices for globals
in there.

Mike 

-----Original Message-----
From: mod_python-admin@modpython.org
[mailto:mod_python-admin@modpython.org] On Behalf Of Bryan Mongeau
Sent: Friday, September 13, 2002 4:00 PM
To: mod_python@modpython.org
Subject: Re: [mod_python] Mod_python and Sub-Interpreter segregation


Thanks for all the great replies everyone! I appreciate it.

On September 13, 2002 09:58 pm, Brian Hawthorne wrote:
> hmmm,
> currently you can share global vars if you set apache to have exactly 
> one child process (but to great performance detriment).  i was 
> imagining you could do the same in the perthread server by setting the

> numprocs=1 and letting the numthreads grow/shrink (recouping the 
> performace hit with extra threads).

Thanks alot for this idea! I compiled apache with the worker MPM, set 
StartServers to 1 and ThreadsPerChild to 64. The result? My shared
memory hit 
counter works perfectly and clocks about 50 hits/sec on my 800 Mhz,
which, 
according to my rough hand benchmarks, is actually a little faster than
using 
prefork with StartServers at 5!

Seems as if my problem is solved.. at least for now, thanks!

> actually, it should be pretty easy to wrap a bit of code around python

> shelve to turn some dbm file into a modpyglobal repository of python 
> objs keyed by varname.  that's what i would do if i didn't feel like 
> dealing with a real db.  also, if you don't use an external 
> repository, you have to worry about server restarts and child procs 
> getting killed etc.

This is almost exactly what I have in mind :) More later,
-- 
Bryan Mongeau
eEvolved Inc. - IT Consulting & Custom Software http://eevolved.com/
--
"Let us understand what our own selfish genes are up to, because we may
then 
at least have a chance to upset their designs, something that no other 
species has ever aspired to do." -- Richard Dawkins

_______________________________________________
Mod_python mailing list
Mod_python@modpython.org
http://www.modpython.org/mailman/listinfo/mod_python


From vmilitaru at sympatico.ca  Fri Sep 13 23:22:05 2002
From: vmilitaru at sympatico.ca (vio)
Date: Fri Jan  9 21:47:01 2004
Subject: [mod_python] python-dev list
In-Reply-To: <Pine.BSF.4.32.0209132255320.10141-100000@eden.ispol.com>; from grisha@modpython.org on Fri, Sep 13, 2002 at 10:57:59PM -0400
References: <20020914023948.26152.qmail@email.com> <Pine.BSF.4.32.0209132255320.10141-100000@eden.ispol.com>
Message-ID: <20020913232204.A2273@eye.neb>

* Gregory (Grisha) Trubetskoy <grisha@modpython.org> [020913 22:55]:
> 
> Yes, we just haven't figured out how to move the mod_python@modpython.org
> list - ideally, we will migrate the archives and subscribtions (or at
> least archives) to the new list, but since apache mailing lists are not
> mailman its a bit tricky.

I agree with Jack. Let's try to keep confusion to a minimum, and keep 
everything in one place. I never touched a list server from a manager's seat,
but out of curiosity, what mailing server is apache using ? Sounds to ignorant
me as just some text massaging operation, nothing a python script can't handle.
(but on the other hand, ignorance is bliss).
If mod_python is now part of apache, I don't see a point in maintaining
modpython.org anymore except, perhaps, to redirect lost users to the new home.

Cheers,
Vio

From neel at mediapulse.com  Fri Sep 13 23:55:03 2002
From: neel at mediapulse.com (Michael Neel)
Date: Fri Jan  9 21:47:01 2004
Subject: [mod_python] python-dev list
In-Reply-To: <20020913232204.A2273@eye.neb>
Message-ID: <001501c25ba2$81d5d7a0$0400a8c0@clapton>

Apache is using ezmlm; of which I have no idea how it works.  Maybe we
could show asf the light and get them to switch to mailman? =D

Mike

--
Michael C. Neel
There are only 10 types of people in the world;
those who understand binary and those who don't.

-----Original Message-----
From: mod_python-admin@modpython.org
[mailto:mod_python-admin@modpython.org] On Behalf Of vio
Sent: Saturday, September 14, 2002 12:22 AM
To: mod_python@modpython.org
Subject: Re: [mod_python] python-dev list


* Gregory (Grisha) Trubetskoy <grisha@modpython.org> [020913 22:55]:
> 
> Yes, we just haven't figured out how to move the 
> mod_python@modpython.org list - ideally, we will migrate the archives 
> and subscribtions (or at least archives) to the new list, but since 
> apache mailing lists are not mailman its a bit tricky.

I agree with Jack. Let's try to keep confusion to a minimum, and keep 
everything in one place. I never touched a list server from a manager's
seat, but out of curiosity, what mailing server is apache using ? Sounds
to ignorant me as just some text massaging operation, nothing a python
script can't handle. (but on the other hand, ignorance is bliss). If
mod_python is now part of apache, I don't see a point in maintaining
modpython.org anymore except, perhaps, to redirect lost users to the new
home.

Cheers,
Vio
_______________________________________________
Mod_python mailing list
Mod_python@modpython.org
http://www.modpython.org/mailman/listinfo/mod_python


From vmilitaru at sympatico.ca  Sat Sep 14 01:53:37 2002
From: vmilitaru at sympatico.ca (vio)
Date: Fri Jan  9 21:47:01 2004
Subject: [mod_python] python-dev list
In-Reply-To: <001501c25ba2$81d5d7a0$0400a8c0@clapton>; from neel@mediapulse.com on Fri, Sep 13, 2002 at 11:55:03PM -0400
References: <20020913232204.A2273@eye.neb> <001501c25ba2$81d5d7a0$0400a8c0@clapton>
Message-ID: <20020914015337.A2359@eye.neb>

* Michael Neel <neel@mediapulse.com> [020914 01:04]:
> Apache is using ezmlm; of which I have no idea how it works.  Maybe we
> could show asf the light and get them to switch to mailman? =D

A wild guess: could 'ezmlm' stand for 'eazy mailman'?
I wonder if trying to propose such a fundamental switch to ASF is feasible,
especially if the use of ezmlm is 'entrentched' at apache (I have no clues) 
and there are no major issues with it. Why would they (us?) switch to mailman ?
There must be some fundamental motivation behind this move, be it technical
or ideological or otherwise. I don't know enough about the apache politics to
answer such questions. Another wild guess: ASF is made of pretty bright people,
surely there must be something about ezmlm to making them choose it (I am 
doing a lot of guessing here, so I guess they must have been aware of mailman
when they decided on ezmlm instead).

Just skimming the ezmlm.org site, seems it is very good at handling 'huge'
mailing lists (half a million subscribers). Maybe that's its core competitive 
advantage. Also supports MySQL RDBMS which sounds interesting.
(accessing the ezmlm FAQ seems quite slow, though). And is optimized for speed.
I don't know, maybe ezmlm is better suited for ASF's needs than mailman (on
which I must plead total ignorance, sorry).

FAQ topic of interest: '5.7 Converting to and from and SQL database.' By 
extension, I wonder where's the topic 'X.Y Converting to and from mailman.'? :)

Vio

From gstein at lyra.org  Sat Sep 14 00:48:01 2002
From: gstein at lyra.org (Greg Stein)
Date: Fri Jan  9 21:47:01 2004
Subject: [mod_python] python-dev list
In-Reply-To: <20020914015337.A2359@eye.neb>; from vmilitaru@sympatico.ca on Sat, Sep 14, 2002 at 01:53:37AM -0500
References: <20020913232204.A2273@eye.neb> <001501c25ba2$81d5d7a0$0400a8c0@clapton> <20020914015337.A2359@eye.neb>
Message-ID: <20020914004801.A10914@lyra.org>

On Sat, Sep 14, 2002 at 01:53:37AM -0500, vio wrote:
> * Michael Neel <neel@mediapulse.com> [020914 01:04]:
> > Apache is using ezmlm; of which I have no idea how it works.  Maybe we
> > could show asf the light and get them to switch to mailman? =D

That's been tried :-)

>...
> I wonder if trying to propose such a fundamental switch to ASF is feasible,
> especially if the use of ezmlm is 'entrentched' at apache (I have no clues)

It runs *all* of the mailing lists, so yah: it's entrenched.

> and there are no major issues with it.

I'd prefer Mailman, but most of the people doing mailing list admin are more
comfortable using ezmlm. And no, there aren't really any major issues except
for the lack of a good web archive (altho there is some work on getting
Eyebrowse set up for this, but Eyebrowse sucks)

>...
> surely there must be something about ezmlm to making them choose it (I am 
> doing a lot of guessing here, so I guess they must have been aware of mailman
> when they decided on ezmlm instead).

At the time that new mlm software was needed, Mailman was still in Beta.
Brian looked into using it, but apparently there were some problems with it
on FreeBSD, and the mailman devs weren't responsive/active enough to track
down the problems at that point. So... the move to ezmlm.

> Just skimming the ezmlm.org site, seems it is very good at handling 'huge'
> mailing lists (half a million subscribers). Maybe that's its core competitive 
> advantage. Also supports MySQL RDBMS which sounds interesting.
> (accessing the ezmlm FAQ seems quite slow, though). And is optimized for speed.
> I don't know, maybe ezmlm is better suited for ASF's needs than mailman (on
> which I must plead total ignorance, sorry).

The ASF sends out an *incredible* amount of email to the mailing lists each
day. Yes: the MLM must be efficient as hell. DJB has certain, um, issues,
but his software is seriously speedy.

Cheers,
-g

-- 
Greg Stein, http://www.lyra.org/

From gstein at lyra.org  Sat Sep 14 00:49:15 2002
From: gstein at lyra.org (Greg Stein)
Date: Fri Jan  9 21:47:01 2004
Subject: [mod_python] python-dev list
In-Reply-To: <20020913232204.A2273@eye.neb>; from vmilitaru@sympatico.ca on Fri, Sep 13, 2002 at 11:22:05PM -0500
References: <20020914023948.26152.qmail@email.com> <Pine.BSF.4.32.0209132255320.10141-100000@eden.ispol.com> <20020913232204.A2273@eye.neb>
Message-ID: <20020914004915.B10914@lyra.org>

On Fri, Sep 13, 2002 at 11:22:05PM -0500, vio wrote:
> * Gregory (Grisha) Trubetskoy <grisha@modpython.org> [020913 22:55]:
> > 
> > Yes, we just haven't figured out how to move the mod_python@modpython.org
> > list - ideally, we will migrate the archives and subscribtions (or at
> > least archives) to the new list, but since apache mailing lists are not
> > mailman its a bit tricky.
> 
> I agree with Jack. Let's try to keep confusion to a minimum, and keep

That's all great and everything, but somebody must take the time to get this
work completed. Since this is an entirely volunteer thing, that means that
it will take time. And other things may be prioritized first...

Cheers,
-g

-- 
Greg Stein, http://www.lyra.org/

From vmilitaru at sympatico.ca  Sat Sep 14 05:23:26 2002
From: vmilitaru at sympatico.ca (vio)
Date: Fri Jan  9 21:47:01 2004
Subject: [mod_python] python-dev list
In-Reply-To: <20020914004915.B10914@lyra.org>; from gstein@lyra.org on Sat, Sep 14, 2002 at 12:49:15AM -0700
References: <20020914023948.26152.qmail@email.com> <Pine.BSF.4.32.0209132255320.10141-100000@eden.ispol.com> <20020913232204.A2273@eye.neb> <20020914004915.B10914@lyra.org>
Message-ID: <20020914052325.A2440@eye.neb>

* Greg Stein <gstein@lyra.org> [020914 03:48]:
> That's all great and everything, but somebody must take the time to get this
> work completed. Since this is an entirely volunteer thing, that means that
> it will take time. And other things may be prioritized first...

Got you. Greg, as you well know, text manipulation in python is rather trivial.
So maybe some on this list with some spare time on their hands could give this
a try. I would see a few ways to handle this problem. One would be to simply
grab each message in the mod_python archive (just writing a script to grab each
through the web interface), and then post it to the apache list. Problem here
I foresee is that original dates and posters' identity may get lost from message
headers, though they could be pasted into the message content, or preserved 
some other way. But I don't know if this is good behaviour for a mailing list 
archive (to see entire mod_python.org list as if posted on the same day).

Another alternative would be to work directly on the storage files and 
transform the mailman data files (provided mailman messages are somehow 
available in clear text) into ezmlm files, through multiple passes. Used this 
technique to transform java source into python. But unlike java2python, I doubt
ezmlm would accept some flat file(s) as ezmlm archive files just like that, out of the blue. Someone knowledgeable in both mailman and ezmlm internals migh 
pull thid off.

Vio

From vmilitaru at sympatico.ca  Sat Sep 14 05:57:15 2002
From: vmilitaru at sympatico.ca (vio)
Date: Fri Jan  9 21:47:01 2004
Subject: [mod_python] python-dev list
In-Reply-To: <20020914052325.A2440@eye.neb>; from vmilitaru@sympatico.ca on Sat, Sep 14, 2002 at 05:23:26AM -0500
References: <20020914023948.26152.qmail@email.com> <Pine.BSF.4.32.0209132255320.10141-100000@eden.ispol.com> <20020913232204.A2273@eye.neb> <20020914004915.B10914@lyra.org> <20020914052325.A2440@eye.neb>
Message-ID: <20020914055713.A2503@eye.neb>

Oops, taking back most of what I said in previous message. Remembering some
past mod_python example, maniputating mail messages seems more flexible 
than initially thought.
And all mod_python message archives look like simple flat text files (.gz).
So, on second look, moving the entire modpython archive to apache could be
done in something like, I don't know, 20-30 lines of python code. 

Vio

* vio <vmilitaru@sympatico.ca> [020914 05:31]:
> * Greg Stein <gstein@lyra.org> [020914 03:48]:
> > That's all great and everything, but somebody must take the time to get this
> > work completed. Since this is an entirely volunteer thing, that means that
> > it will take time. And other things may be prioritized first...
> 
> Got you. Greg, as you well know, text manipulation in python is rather trivial.
> So maybe some on this list with some spare time on their hands could give this
> a try. I would see a few ways to handle this problem. One would be to simply
> grab each message in the mod_python archive (just writing a script to grab each
> through the web interface), and then post it to the apache list. Problem here
> I foresee is that original dates and posters' identity may get lost from message
> headers, though they could be pasted into the message content, or preserved 
> some other way. But I don't know if this is good behaviour for a mailing list 
> archive (to see entire mod_python.org list as if posted on the same day).
> 
> Another alternative would be to work directly on the storage files and 
> transform the mailman data files (provided mailman messages are somehow 
> available in clear text) into ezmlm files, through multiple passes. Used this 
> technique to transform java source into python. But unlike java2python, I doubt
> ezmlm would accept some flat file(s) as ezmlm archive files just like that, out of the blue. Someone knowledgeable in both mailman and ezmlm internals migh 
> pull thid off.
> 
> Vio
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://www.modpython.org/mailman/listinfo/mod_python

From john at veidit.net  Sat Sep 14 23:35:23 2002
From: john at veidit.net (John Angelmo)
Date: Fri Jan  9 21:47:01 2004
Subject: [mod_python] Upgrade problem
Message-ID: <20020914233523.649f805e.john@veidit.net>

Hello

I recently upgraded both mod_python and Apache with portupgrade. Now there seems to be some problem I only get this output:

Mod_python error: "PythonHandler mod_python.publisher"

Traceback (most recent call last):

  File "/usr/local/lib/python2.2/site-packages/mod_python/apache.py", line 193, in Dispatch
    result = object(req)

  File "/usr/local/lib/python2.2/site-packages/mod_python/publisher.py", line 88, in handler
    if func_path[-1] == ".":

IndexError: string index out of range


My apacheconfig:

<Directory /usr/local/www/data/wa>
            AddHandler python-program .py
            PythonHandler mod_python.publisher
            PythonDebug On
</Directory>

/John

From list-mod_python at empires.org  Sat Sep 14 16:33:13 2002
From: list-mod_python at empires.org (Jeff Davis)
Date: Fri Jan  9 21:47:01 2004
Subject: [mod_python] Upgrade problem
In-Reply-To: <20020914233523.649f805e.john@veidit.net>
References: <20020914233523.649f805e.john@veidit.net>
Message-ID: <200209141633.13955.list-mod_python@empires.org>

What OS, old mod_python version, new mod_python version, and apache version do 
you have?

How did you install the new version? Is it possible that it didn't properly 
install the mod_python lib? If you were installing from a package, is it 
possible that it wasn't built correctly?

What URL were you using to access your page? What are the contents fo your 
file?

Please provide the most simple example you can that still reproduces the 
problem.

It seems like it might be a problem related to the mod_python library and the 
URL. Perhaps mod_python was updated and the mod_python library wasn't? 
Perhaps the new mod_python library doesn't work correcty?

Regards,
	Jeff

On Saturday 14 September 2002 02:35 pm, John Angelmo wrote:
> Hello
>
> I recently upgraded both mod_python and Apache with portupgrade. Now there
> seems to be some problem I only get this output:
>
> Mod_python error: "PythonHandler mod_python.publisher"
>
> Traceback (most recent call last):
>
>   File "/usr/local/lib/python2.2/site-packages/mod_python/apache.py", line
> 193, in Dispatch result = object(req)
>
>   File "/usr/local/lib/python2.2/site-packages/mod_python/publisher.py",
> line 88, in handler if func_path[-1] == ".":
>
> IndexError: string index out of range
>
>
> My apacheconfig:
>
> <Directory /usr/local/www/data/wa>
>             AddHandler python-program .py
>             PythonHandler mod_python.publisher
>             PythonDebug On
> </Directory>
>
> /John
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://www.modpython.org/mailman/listinfo/mod_python


From rpinder at usc.edu  Sat Sep 14 21:15:11 2002
From: rpinder at usc.edu (Rich Pinder)
Date: Fri Jan  9 21:47:01 2004
Subject: [mod_python] "Not Found" message with Publisher example
References: <3D7C2453.8020300@usc.edu>
Message-ID: <3D84094F.10501@usc.edu>

I'm still stumped with getting the SIMPLE example code on page 13 of the manual working.
(HAD simple example 1 from page 10 working, so I'm sure all the stuff is in correct location)
(Windows install. Python 2.2.1   mod_python.dll v 2.7.6   apache 1.2.26)

Edited the apache conf file, inside the  <IfModule mod_alias.c>

     <Directory "C:/Program Files/Apache Group/Apache/htdocs/python">
	AddHandler python-program .py
	PythonHandler mod_python.publisher
	PythonDebug on
     </Directory>

Test html form has:

   <form action="form/email" method="POST">

Created form.py (when i try to call it form the interpreter, I get no python indenting/parsing errors). 
form.py is in the directory pointed to in the apache .conf file.  (...../htdocs/python).  And, as its copied 
from the example, inside the  form.py  is a method defined as   email.  So form action makes sense to me.

But when trying to post, still get error :  The requested URL /form/email was not found on this server.


Am I missing something here?  Almost like the publisher is not being accessed ? There are no ancilliry files 
for the publisher that need to be installed either under the apache tree (other than the .dll), or under the 
python tree ??

I'm SURE its something trivial I've missed here - I am very new to this all.

Thanks for any thoughts you might have.

Rich

[Alain's idea, which i hoped was the clue, turned out not to be the problem]:

 >........  Edited the  .conf  file, created a new python script   mail.py, made
 >> a html form - but still get:
 >>
 >> The requested URL /form/email was not found on this server.
 >
 >
 > "mail" != "email"        [i'd mistakingly said in prior paragraph the script was called mail.py...]
 > was/is called form.py    [ but it was/is called form.py.  and besides, email is defined as a method ]
 >
 > Alain,
 >



Rich Pinder wrote:
 > Got the easy example workin fine from the Manual (3.2 section), but got hung up with the example that
 > discusses how the Publisher works.  Edited the  .conf  file, created a new python script   form.py,  made
 > an html form - but still get:
 >
 > The requested URL /form/email was not found on this server.
 >
 > I'm sure its a simple one - thanks for any thoughts !
 >
 > Rich Pinder USC School of Medicine
 >


From john at veidit.net  Sun Sep 15 14:06:05 2002
From: john at veidit.net (John Angelmo)
Date: Fri Jan  9 21:47:01 2004
Subject: [mod_python] Upgrade problem
References: <20020914233523.649f805e.john@veidit.net> <200209141633.13955.list-mod_python@empires.org>
Message-ID: <3D8477AD.1040604@veidit.net>

FreeBSD updated from 4.5 to 4.6.2
mod_python updated from 2.7.6 to 2.7.8
Apache updated from??? (six months old) to latest (not 2.0)
Installation was made with the FreeBSD ports system
The page that I accessed is on my internal server 192.168.1.1/wa

/John

Jeff Davis wrote:
> What OS, old mod_python version, new mod_python version, and apache version do 
> you have?
> 
> How did you install the new version? Is it possible that it didn't properly 
> install the mod_python lib? If you were installing from a package, is it 
> possible that it wasn't built correctly?
> 
> What URL were you using to access your page? What are the contents fo your 
> file?
> 
> Please provide the most simple example you can that still reproduces the 
> problem.
> 
> It seems like it might be a problem related to the mod_python library and the 
> URL. Perhaps mod_python was updated and the mod_python library wasn't? 
> Perhaps the new mod_python library doesn't work correcty?
> 
> Regards,
> 	Jeff
> 
> On Saturday 14 September 2002 02:35 pm, John Angelmo wrote:
> 
>>Hello
>>
>>I recently upgraded both mod_python and Apache with portupgrade. Now there
>>seems to be some problem I only get this output:
>>
>>Mod_python error: "PythonHandler mod_python.publisher"
>>
>>Traceback (most recent call last):
>>
>>  File "/usr/local/lib/python2.2/site-packages/mod_python/apache.py", line
>>193, in Dispatch result = object(req)
>>
>>  File "/usr/local/lib/python2.2/site-packages/mod_python/publisher.py",
>>line 88, in handler if func_path[-1] == ".":
>>
>>IndexError: string index out of range
>>
>>
>>My apacheconfig:
>>
>><Directory /usr/local/www/data/wa>
>>            AddHandler python-program .py
>>            PythonHandler mod_python.publisher
>>            PythonDebug On
>></Directory>
>>
>>/John
>>_______________________________________________
>>Mod_python mailing list
>>Mod_python@modpython.org
>>http://www.modpython.org/mailman/listinfo/mod_python
> 
> 
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://www.modpython.org/mailman/listinfo/mod_python



From grisha at modpython.org  Sun Sep 15 13:35:56 2002
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 21:47:01 2004
Subject: [mod_python] "Not Found" message with Publisher example
In-Reply-To: <3D84094F.10501@usc.edu>
Message-ID: <Pine.BSF.4.32.0209151333390.30540-100000@eden.ispol.com>


On Sat, 14 Sep 2002, Rich Pinder wrote:

>    <form action="form/email" method="POST">

try

 <form action="form.py/email" method="POST">


I think it's a typo in the docs.

Grisha


From grisha at modpython.org  Sun Sep 15 13:42:08 2002
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 21:47:01 2004
Subject: [mod_python] Upgrade problem
In-Reply-To: <3D8477AD.1040604@veidit.net>
Message-ID: <Pine.BSF.4.32.0209151337040.30540-100000@eden.ispol.com>

Try changing that line in publicher.py to
    if func_path[:-1] == ".":

(note : before -1)

Grisha

On Sun, 15 Sep 2002, John Angelmo wrote:

> FreeBSD updated from 4.5 to 4.6.2
> mod_python updated from 2.7.6 to 2.7.8
> Apache updated from??? (six months old) to latest (not 2.0)
> Installation was made with the FreeBSD ports system
> The page that I accessed is on my internal server 192.168.1.1/wa
>
> /John
>
> Jeff Davis wrote:
> > What OS, old mod_python version, new mod_python version, and apache version do
> > you have?
> >
> > How did you install the new version? Is it possible that it didn't properly
> > install the mod_python lib? If you were installing from a package, is it
> > possible that it wasn't built correctly?
> >
> > What URL were you using to access your page? What are the contents fo your
> > file?
> >
> > Please provide the most simple example you can that still reproduces the
> > problem.
> >
> > It seems like it might be a problem related to the mod_python library and the
> > URL. Perhaps mod_python was updated and the mod_python library wasn't?
> > Perhaps the new mod_python library doesn't work correcty?
> >
> > Regards,
> > 	Jeff
> >
> > On Saturday 14 September 2002 02:35 pm, John Angelmo wrote:
> >
> >>Hello
> >>
> >>I recently upgraded both mod_python and Apache with portupgrade. Now there
> >>seems to be some problem I only get this output:
> >>
> >>Mod_python error: "PythonHandler mod_python.publisher"
> >>
> >>Traceback (most recent call last):
> >>
> >>  File "/usr/local/lib/python2.2/site-packages/mod_python/apache.py", line
> >>193, in Dispatch result = object(req)
> >>
> >>  File "/usr/local/lib/python2.2/site-packages/mod_python/publisher.py",
> >>line 88, in handler if func_path[-1] == ".":
> >>
> >>IndexError: string index out of range
> >>
> >>
> >>My apacheconfig:
> >>
> >><Directory /usr/local/www/data/wa>
> >>            AddHandler python-program .py
> >>            PythonHandler mod_python.publisher
> >>            PythonDebug On
> >></Directory>
> >>
> >>/John
> >>_______________________________________________
> >>Mod_python mailing list
> >>Mod_python@modpython.org
> >>http://www.modpython.org/mailman/listinfo/mod_python
> >
> >
> > _______________________________________________
> > Mod_python mailing list
> > Mod_python@modpython.org
> > http://www.modpython.org/mailman/listinfo/mod_python
>
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://www.modpython.org/mailman/listinfo/mod_python
>


From jack_diederich at email.com  Sun Sep 15 12:50:24 2002
From: jack_diederich at email.com (Jack Diederich)
Date: Fri Jan  9 21:47:02 2004
Subject: [mod_python] Upgrade problem
Message-ID: <20020915175024.29980.qmail@email.com>

> 
> Try changing that line in publicher.py to
>     if func_path[:-1] == ".":
> 
> (note : before -1)
> 
>
If you just want the last char, and don't want it to fail on an empty string you mean

if func_path[-1:]

func_path[:-1] will give you everything but the last char
-- 
__________________________________________________________
Sign-up for your own FREE Personalized E-mail at Mail.com
http://www.mail.com/?sr=signup


From grisha at modpython.org  Sun Sep 15 16:41:19 2002
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 21:47:02 2004
Subject: [mod_python] Upgrade problem
In-Reply-To: <20020915175024.29980.qmail@email.com>
Message-ID: <Pine.BSF.4.32.0209151640240.32460-100000@eden.ispol.com>

Sorry, my mistake, you're right, it should be [-1:] of course :-)

On Sun, 15 Sep 2002, Jack Diederich wrote:

>
> >
> > Try changing that line in publicher.py to
> >     if func_path[:-1] == ".":
> >
> > (note : before -1)
> >
> >
> If you just want the last char, and don't want it to fail on an empty string you mean
>
> if func_path[-1:]
>
> func_path[:-1] will give you everything but the last char
> --
> __________________________________________________________
> Sign-up for your own FREE Personalized E-mail at Mail.com
> http://www.mail.com/?sr=signup
>


From thanos at 0x01.com  Sun Sep 15 22:48:07 2002
From: thanos at 0x01.com (thanos vassilakis)
Date: Fri Jan  9 21:47:02 2004
Subject: [mod_python] How to upload files using mod_python's publisher handler?
In-Reply-To: <1031854845.5447.9.camel@coraje>
Message-ID: <BB1CA6A6-C91E-11D6-B410-00306559D868@0x01.com>

Try using PSO:
See http://www.scriptfoundry.com/modules/pso/doc/pso-guide.html#files

On Thursday, September 12, 2002, at 02:20 PM, Andres Meza wrote:

> Greetings.
>
> I have created a python CGI script that can upload files sucessfully. 
> Now, I want to create a mod_python script with the same feature using 
> the "publisher" handler and I get this error:??
>
>
> [Thu Sep 12 08:53:41 2002] [error] PythonHandler mod_python.publisher: 
> Traceback (most recent call last):
> [Thu Sep 12 08:53:41 2002] [error] PythonHandler 
> mod_python.publisher:?? File "/home/mrnet/rpm/tmp/mod_python-
> root/usr/lib/python2.2/site-packages/mod_python/apache.py", line 193, 
> in Dispatch
> [Thu Sep 12 08:53:41 2002] [error] PythonHandler 
> mod_python.publisher:?? File "/home/mrnet/rpm/tmp/mod_python-
> root/usr/lib/python2.2/site-packages/mod_python/publisher.py", line 
> 104, in handler
> [Thu Sep 12 08:53:41 2002] [error] PythonHandler 
> mod_python.publisher:?? File "/home/mrnet/rpm/tmp/mod_python-
> root/usr/lib/python2.2/site-packages/mod_python/publisher.py", line 
> 308, in __init__
> [Thu Sep 12 08:53:41 2002] [error] PythonHandler mod_python.publisher: 
> AttributeError: 'file' object has no attribute '__methods__'
>
> Anyone have an idea about why I get this error?
>
> Thanks for your time,

>



From woodm at colorado.edu  Mon Sep 16 01:02:01 2002
From: woodm at colorado.edu (Matthew D. Wood)
Date: Fri Jan  9 21:47:02 2004
Subject: [mod_python] Follow up on install problems.
Message-ID: <1032159721.15421.11.camel@mascot>

Ok, so I believe I've fixed my -DEAPI error, but I still can't get
apache to start.  

both
    apachectl start
and
    httpd -X
do not start the deamon.

Here is the output from "apachectl start":
    [doorman:/usr/sbin] > sudo ./apachectl start
    Password:
    /usr/sbin/apachectl start: httpd could not be started

"httpd -X" on the other hand gives me absolutely no output.


Every time I run either of those commands, my error_log file has the
following appended:
    /usr/libexec/ld.so: Undefined symbol "_pthread_mutex_init" called
    from httpd:/usr/lib/apache/modules/mod_python.so at 0x402e0148

I would love to run an "strace" but I don't think it's installed, and my
not-so-through attempts to find it have resulted in failure so far.


As always, thank you all for even reading this.  And you all definitely
receive an enormous "thank you" for any help you can give.





Here's my system information:
  OS: OpenBSD 3.1
  Python: I have both 2.2 and 2.1 .  I don't know why, but the OpenBSD
          ports tree decided I should have both.
  Apache: I'm running the out-of-the-box 1.3 that comes with OpenBSD




From alain at onesite.org  Mon Sep 16 09:40:01 2002
From: alain at onesite.org (Alain Tesio)
Date: Fri Jan  9 21:47:02 2004
Subject: [mod_python] Follow up on install problems.
In-Reply-To: <1032159721.15421.11.camel@mascot>
References: <1032159721.15421.11.camel@mascot>
Message-ID: <20020916094001.39f7fd79.alain@onesite.org>

On 16 Sep 2002 01:02:01 -0600
"Matthew D. Wood" <woodm@colorado.edu> wrote:

> I would love to run an "strace" but I don't think it's installed, and my
> not-so-through attempts to find it have resulted in failure so far.
> 
>   OS: OpenBSD 3.1

There is no strace on OpenBSD, the analogous program is ktrace,
use kdump to see the contents of the log files.

Alain

From jack_diederich at email.com  Mon Sep 16 08:54:04 2002
From: jack_diederich at email.com (Jack Diederich)
Date: Fri Jan  9 21:47:02 2004
Subject: [mod_python] Follow up on install problems.
Message-ID: <20020916135404.9741.qmail@email.com>

> Every time I run either of those commands, my error_log file has the
> following appended:
>     /usr/libexec/ld.so: Undefined symbol "_pthread_mutex_init" called
>     from httpd:/usr/lib/apache/modules/mod_python.so at 0x402e0148
> 
It looks like you either have python compiled with threads,
or a module that requires threads is being loaded.

mod_python can't be compiled with threads due to the spawning nature of apache.

-jack
-- 
__________________________________________________________
Sign-up for your own FREE Personalized E-mail at Mail.com
http://www.mail.com/?sr=signup


From grisha at modpython.org  Mon Sep 16 10:47:46 2002
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 21:47:02 2004
Subject: [mod_python] Follow up on install problems.
In-Reply-To: <20020916135404.9741.qmail@email.com>
Message-ID: <Pine.BSF.4.32.0209161043370.41786-100000@eden.ispol.com>

To be more precise, it's an issues specifically on FreeBSD (and I guess on
OpenBSD as well), which uses different libc's for threaded and not
threaded apps. As a result, you can't mix the two, and Apache 1.3 is
usually compiled against non-threaded libs since it doesn't care for
threads. So your only options are to recompile Python without threads or
compile Apache with threads (I've never tried the latter, but the former
works just fine).

The threaded/non-threaded thing doesn't seem to be an issue on Linux or
Solaris.

Grisha

On Mon, 16 Sep 2002, Jack Diederich wrote:

> > Every time I run either of those commands, my error_log file has the
> > following appended:
> >     /usr/libexec/ld.so: Undefined symbol "_pthread_mutex_init" called
> >     from httpd:/usr/lib/apache/modules/mod_python.so at 0x402e0148
> >
> It looks like you either have python compiled with threads,
> or a module that requires threads is being loaded.
>
> mod_python can't be compiled with threads due to the spawning nature of apache.
>


From jack_diederich at email.com  Mon Sep 16 13:19:25 2002
From: jack_diederich at email.com (Jack Diederich)
Date: Fri Jan  9 21:47:02 2004
Subject: [mod_python] Initializing the interpreter in python_init() instead of
 python_handler()
Message-ID: <20020916181926.12891.qmail@email.com>

I just threw some of the python_handler() code into python_init() and it works!

This means that it is possible to do all the imports etc only once, instead of once per child.
I mentioned the possibility here
http://www.modpython.org/pipermail/mod_python/2002-July/002246.html
and compared it to the mod_perl handler here
http://www.modpython.org/pipermail/mod_python/2002-July/002248.html

Basically, we currently do more work than we have to because each child does the same work to initalize the interpreter.  In the easy case where we are using the PythonInterpreter directive to force everyone to use
the same name for the interpreter (in the below example 'MAIN') we can just do the one initilization in python_init() and the children inherit a clone of the result.  I'm not aware of any problems this might cause (wierd shared file handles or something) but I haven't tested it very extensively.  I do some calculations in the main of several of my modules, so having this done once is a decent speed boost at apache startup.

below is my replacement python_init(), it only works if you have

PythonInterpreter 'MAIN'

in your httpd.conf

modified python_init follows, based on ver 2.7.8
GLYPHS AND WARNINGS!
this is just a proof-of-concept, I don't do lots of neccessary error checking
and I've hard coded all my strings instead of reading the apache configuration.
After initializing the MAIN interpreter, it loads my module your_python_module_here.py
and calls its setup function do_our_one_time_global_setup().  The children then get all
the calculated stuff that was done in do_our_one_time_global_setup().

enjoy,

-jack

void python_init(server_rec *s, pool *p)
{

    char buff[255];
    PyObject *m;
    PyObject *obCallBack = NULL;
    interpreterdata *idata;
    PyThreadState *tstate;

    /* pool given to us in ChildInit. We use it for 
       server.register_cleanup() */
    pool *child_init_pool = NULL;

    /* mod_python version */
    ap_add_version_component(VERSION_COMPONENT);
    
    /* Python version */
    sprintf(buff, "Python/%s", strtok((char *)Py_GetVersion(), " "));
    ap_add_version_component(buff);

    /* initialize global Python interpreter if necessary */
    if (! Py_IsInitialized()) 
    {

	/* initialze the interpreter */
	Py_Initialize();

#ifdef WITH_THREAD
	/* create and acquire the interpreter lock */
	PyEval_InitThreads();
#endif
	/* Release the thread state because we will never use 
	 * the main interpreter, only sub interpreters created later. */
        PyThreadState_Swap(NULL); 

	/* create the obCallBack dictionary */
	interpreters = PyDict_New();
	if (! interpreters) {
	    ap_log_error(APLOG_MARK, APLOG_NOERRNO|APLOG_ERR, s,
			 "python_init: PyDict_New() failed! No more memory?");
	    exit(1);
	}

	/* NEW STUFF FROM HERE */
	idata = get_interpreter_data("MAIN", s);
	tstate = PyThreadState_New(idata->istate);
	PyThreadState_Swap(tstate);

	m = PyImport_ImportModule("your_python_module_here");
	if (!m) {
	  fprintf(stderr, "Couldn't import module\n");
	} else {
	  obCallBack = PyObject_CallMethod(m, "do_our_one_time_global_setup", NULL);
	  if (!obCallBack)
	    fprintf(stderr, "CallFunc failed\n");
	  else
	    fprintf(stderr, "I think it succeeded?\n");
	}

	PyThreadState_Swap(NULL);
	PyThreadState_Delete(tstate);
	/* TO HERE */

#ifdef WITH_THREAD
	/* release the lock; now other threads can run */
	PyEval_ReleaseLock();
#endif
    }
}



-- 
__________________________________________________________
Sign-up for your own FREE Personalized E-mail at Mail.com
http://www.mail.com/?sr=signup


From woodm at colorado.edu  Mon Sep 16 21:40:01 2002
From: woodm at colorado.edu (Matthew D. Wood)
Date: Fri Jan  9 21:47:02 2004
Subject: [mod_python] Follow up on install problems.
In-Reply-To: <Pine.BSF.4.32.0209161043370.41786-100000@eden.ispol.com>
References: <Pine.BSF.4.32.0209161043370.41786-100000@eden.ispol.com>
Message-ID: <1032234001.15421.437.camel@mascot>

Interesting.  Has anyone tried using mod-python in a threaded setting? 
I just wouldn't have thought that to be a problem.

So, just to be clear, if I recompile apache with threads support, will I
be able to create mod-python scripts that use threads?


On Mon, 2002-09-16 at 08:47, Gregory (Grisha) Trubetskoy wrote:
> 
> To be more precise, it's an issues specifically on FreeBSD (and I guess on
> OpenBSD as well), which uses different libc's for threaded and not
> threaded apps. As a result, you can't mix the two, and Apache 1.3 is
> usually compiled against non-threaded libs since it doesn't care for
> threads. So your only options are to recompile Python without threads or
> compile Apache with threads (I've never tried the latter, but the former
> works just fine).
> 
> The threaded/non-threaded thing doesn't seem to be an issue on Linux or
> Solaris.
> 
> Grisha
> 
> On Mon, 16 Sep 2002, Jack Diederich wrote:
> 
> > > Every time I run either of those commands, my error_log file has the
> > > following appended:
> > >     /usr/libexec/ld.so: Undefined symbol "_pthread_mutex_init" called
> > >     from httpd:/usr/lib/apache/modules/mod_python.so at 0x402e0148
> > >
> > It looks like you either have python compiled with threads,
> > or a module that requires threads is being loaded.
> >
> > mod_python can't be compiled with threads due to the spawning nature of apache.
> >
> 
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://www.modpython.org/mailman/listinfo/mod_python


From grisha at modpython.org  Mon Sep 16 23:56:02 2002
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 21:47:02 2004
Subject: [mod_python] Follow up on install problems.
In-Reply-To: <1032234001.15421.437.camel@mascot>
Message-ID: <Pine.BSF.4.32.0209162355020.50632-100000@eden.ispol.com>

On 16 Sep 2002, Matthew D. Wood wrote:

> So, just to be clear, if I recompile apache with threads support, will I
> be able to create mod-python scripts that use threads?

I don't see why not, provided you're on one of the platforms where mixing
thread/non-thread is possible.

Grisha



From cgardner at netlojix.com  Tue Sep 17 09:43:16 2002
From: cgardner at netlojix.com (Clarence Gardner)
Date: Fri Jan  9 21:47:02 2004
Subject: [mod_python] signal handling
Message-ID: <20020917094316.A3021@liberty.sba2.netlojix.net>

Hello.

I've recently noticed that an application that I ported to mod_python
is unable to do signal handling. In particular, it sets a SIGALRM handler,
which gets correctly registered (as confirmed by a second call to
signal.signal), but after an alarm() call, the signal handler just
never gets delivered. It works fine as a CGI. I noticed that Apache
uses SIGALRM internally, so for fun I tried registering a SIGWINCH
handler instead and then sending myself that signal, and that didn't
get invoked either.

I've seen this on two different system configurations; one was
using Apache 1.3.22, mod_python 2.7.6, and Linux 2.2.19.

TIA for any help with this.

-- 
Clarence Gardner
Software Engineer
NetLojix Communications
cgardner@netlojix.com

From gkrackow at bellsouth.net  Tue Sep 17 13:26:10 2002
From: gkrackow at bellsouth.net (Dr . Unix Software Inc .)
Date: Fri Jan  9 21:47:02 2004
Subject: [mod_python] Fwd: Installation problems - Unable to configure Apache 1.3.26 [gkrackow@bellsouth.net]
In-Reply-To: <20020917131446.A21056@compaq450>; from gkrackow@bellsouth.net on Tue, Sep 17, 2002 at 13:14:46 -0400
References: <20020917131446.A21056@compaq450>
Message-ID: <20020917132610.C21056@compaq450>

Hi guys, I am new to the mod_python mailing list.

I have tried for more than 4 days to get the mod_python working with apache
1.3.26

I followed the Mod_python manual instructions, and had spent lots of times
looking in the mailing list for a clue.

This is what I have :

RedHat 7.2 (Enigma), Kernel 2.4.7-10
gcc 2.96
Python 2.2.1 compiled with no threads.
Apache 1.3.26
mod_python 2.7.8


Making mod_python was no problem. I have apache installed under
/usr/local/apache, so I used ./configure
with --with-apache and --with-python options.

I used make, and make static, as well as (root) make install and make
install_static. It made no difference, the Apache 
recompilation failed with the same errors.

From gkrackow at bellsouth.net  Tue Sep 17 13:32:22 2002
From: gkrackow at bellsouth.net (Dr . Unix Software Inc .)
Date: Fri Jan  9 21:47:02 2004
Subject: [mod_python] Installation problems - Unable to configure Apache 1.3.26
In-Reply-To: <20020917132610.C21056@compaq450>; from gkrackow@bellsouth.net on Tue, Sep 17, 2002 at 13:26:10 -0400
References: <20020917131446.A21056@compaq450> <20020917132610.C21056@compaq450>
Message-ID: <20020917133222.A22983@compaq450>

Hi guys, I am new to the mod_python mailing list.

I have tried for more than 4 days to get the mod_python working with apache
1.3.26

I followed the Mod_python manual instructions, and had spent lots of times
looking in the mailing list for a clue.

This is what I have :

RedHat 7.2 (Enigma), Kernel 2.4.7-10
gcc 2.96
Python 2.2.1 compiled with no threads.
Apache 1.3.26
mod_python 2.7.8


Making mod_python was no problem. I have apache installed under
/usr/local/apache, so I used ./configure
with --with-apache and --with-python options.

I used make, and make static, as well as (root) make install and make
install_static. It made no difference, the Apache 
recompilation failed with the same errors.

From jack_diederich at email.com  Wed Sep 18 01:42:43 2002
From: jack_diederich at email.com (Jack Diederich)
Date: Fri Jan  9 21:47:02 2004
Subject: [mod_python] Installation problems - Unable to configure
    Apache 1.3.26
Message-ID: <20020918064243.3864.qmail@email.com>

I've had this problem before, I ended up using a DSO install instead.

here is my mod_python ./configure
./configure  --with-apxs=/home/apache_python/bin/apxs

and my apache ./configure
./configure --with-layout=Apache --prefix=/home/apache_python --enable-module=so --enable-rule=SHARED_CORE

----- Original Message -----
From: "Dr . Unix Software Inc ." <gkrackow@bellsouth.net>
Date: Tue, 17 Sep 2002 13:32:22 -0400 
To: mod_python@modpython.org
Subject: [mod_python] Installation problems - Unable to configure Apache 1.3.26


> 
> Hi guys, I am new to the mod_python mailing list.
> 
> I have tried for more than 4 days to get the mod_python working with apache
> 1.3.26
> 
> I followed the Mod_python manual instructions, and had spent lots of times
> looking in the mailing list for a clue.
> 
> This is what I have :
> 
> RedHat 7.2 (Enigma), Kernel 2.4.7-10
> gcc 2.96
> Python 2.2.1 compiled with no threads.
> Apache 1.3.26
> mod_python 2.7.8
> 
> 
> Making mod_python was no problem. I have apache installed under
> /usr/local/apache, so I used ./configure
> with --with-apache and --with-python options.
> 
> I used make, and make static, as well as (root) make install and make
> install_static. It made no difference, the Apache 
> recompilation failed with the same errors.
> 
> From the Apache source directory I issued the command :
> 
> ./configure --activate-module=src/modules/python/libpython.a
> 
> which gave : 
> 
> Configuring for Apache, Version 1.3.26
>  + using installation path layout: Apache (config.layout)
>  + activated python module (modules/python/libpython.a)
> Creating Makefile
> Creating Configuration.apaci in src
> Creating Makefile in src
>  + configured for Linux platform
>  + setting C compiler to gcc
>  + setting C pre-processor to gcc -E
>  + checking for system header files
>  + adding selected modules
>     o python_module uses ConfigStart/End
>  + using system Expat
>  + checking sizeof various data types
>  + doing sanity check on compiler and options
> Creating Makefile in src/support
> Creating Makefile in src/regex
> Creating Makefile in src/os/unix
> Creating Makefile in src/ap
> Creating Makefile in src/main
> Creating Makefile in src/modules/standard
> Creating Makefile in src/modules/python
> 
> then issued make
> 
> This is the last part of the Apache compilation that shows the errors :
> 
> 
> gcc -c -I/usr/drunix/webservers/apache/mod_python-2.7.8/src/include
> -I/usr/drunix/webservers/apache/apache_1.3.26/src/include
> -I/usr/drunix/webservers/apache/apache_1.3.26/src/os/unix
> -I/usr/drunix/programming/python/Python-2.2.1
> -I/usr/drunix/programming/python/Python-2.2.1/Include -I./os/unix
> -I./include   -DLINUX=22 -DUSE_HSREGEX -DNO_DL_NEEDED `./apaci` buildmark.c
> gcc  -DLINUX=22 -DUSE_HSREGEX -DNO_DL_NEEDED `./apaci` -Xlinker
> -export-dynamic       \
>       -o httpd buildmark.o modules.o modules/standard/libstandard.a
> modules/python/libpython.a main/libmain.a ./os/unix/libos.a ap/libap.a
> regex/libregex.a   -lm -lcrypt -lm  /usr/drunix/programming/python/Python-2.2.1/libpython2.2.a
> -lexpat
> 
> --->> This is my note : Up to here everything seems to be okay, but then
> ...  --->>
> 
> /usr/drunix/programming/python/Python-2.2.1/libpython2.2.a(posixmodule.o):
> In function `posix_tmpnam':
> /usr/drunix/programming/python/Python-2.2.1/./Modules/posixmodule.c:4503:
> the use of `tmpnam' is dangerous, better use `mkstemp'
> /usr/drunix/programming/python/Python-2.2.1/libpython2.2.a(posixmodule.o):
> In function `posix_tempnam':
> /usr/drunix/programming/python/Python-2.2.1/./Modules/posixmodule.c:4451:
> the use of `tempnam' is dangerous, better use `mkstemp'
> 
> /usr/drunix/programming/python/Python-2.2.1/libpython2.2.a(dynload_shlib.o):
> In function `_PyImport_GetDynLoadFunc':
> /usr/drunix/programming/python/Python-2.2.1/Python/dynload_shlib.c:90:
> undefined reference to `dlopen'
> /usr/drunix/programming/python/Python-2.2.1/Python/dynload_shlib.c:93:
> undefined reference to `dlerror'
> /usr/drunix/programming/python/Python-2.2.1/Python/dynload_shlib.c:74:
> undefined reference to `dlsym'
> /usr/drunix/programming/python/Python-2.2.1/Python/dynload_shlib.c:98:
> undefined reference to `dlsym'
> /usr/drunix/programming/python/Python-2.2.1/libpython2.2.a(posixmodule.o):
> In function `posix_openpty':
> /usr/drunix/programming/python/Python-2.2.1/./Modules/posixmodule.c:1934:
> undefined reference to `openpty'
> /usr/drunix/programming/python/Python-2.2.1/libpython2.2.a(posixmodule.o):
> In function `posix_forkpty':
> /usr/drunix/programming/python/Python-2.2.1/./Modules/posixmodule.c:1965:
> undefined reference to `forkpty'
> collect2: ld returned 1 exit status
> make[2]: *** [target_static] Error 1
> make[2]: Leaving directory `/usr/drunix/webservers/apache/apache_1.3.26/src'
> make[1]: *** [build-std] Error 2
> make[1]: Leaving directory `/usr/drunix/webservers/apache/apache_1.3.26'
> make: *** [build] Error 2
> 
> I have been stuck here for days, found no similar errors in the mailing
> list, I scanned them form January to September (2002).
> 
> Any susgestions would be greatly appreciated.
> 
> G.K.
> 
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://www.modpython.org/mailman/listinfo/mod_python
> 
> 

-- 
__________________________________________________________
Sign-up for your own FREE Personalized E-mail at Mail.com
http://www.mail.com/?sr=signup


From bryan at eevolved.com  Tue Sep 17 21:06:52 2002
From: bryan at eevolved.com (Bryan Mongeau)
Date: Fri Jan  9 21:47:02 2004
Subject: [mod_python] Mod_python and Sub-Interpreter segregation
In-Reply-To: <001401c25b9b$e97f0770$0400a8c0@clapton>
References: <001401c25b9b$e97f0770$0400a8c0@clapton>
Message-ID: <200209172106.52339.bryan@eevolved.com>

On September 14, 2002 03:07 am, Michael Neel wrote:
> Thank will work great, until you hit the 65th concurrent connection, at
> wich point apache will give you another child.

Thanks Mike. It seems as if even when MaxClients is set to 64 apache will fork 
another child anyway on the 65th concurrent connection... Why? Do you know 
what is going on here? I would like to simply work around the issue by 
limiting the amount of concurrent clients.

> (just a side note, to test a web server I use the ab tool
> that comes with apache; it will let you set the concurrent number of
> theard to try and get at once).

Thanks alot, ab is my newest friend :)
-- 
Bryan Mongeau
eEvolved Inc. - IT Consulting & Custom Software
http://eevolved.com/
--
"10^38 machine instructions would simulate ALL the brains (non-humans 
included) that ever existed, ever since brains were invented in the Cambrian 
Explosion 570 million years ago." -- K. Eric Drexler


From neel at mediapulse.com  Wed Sep 18 13:57:35 2002
From: neel at mediapulse.com (Michael C. Neel)
Date: Fri Jan  9 21:47:02 2004
Subject: [mod_python] Mod_python and Sub-Interpreter segregation
Message-ID: <C0FC22C08B82074A88B50061764157775BAE@johnson.mediapulse.net>

I think you might be able to get the effect you want with the
ServerLimit setting, although I still don't recommend constraining
apache.  To do a hit counter, bumping a number in a flat file would
probably be best.  I'm not sure what the overall goal is, but there are
also other options for managing state.

Yea, ever since I met ab we have been very close.

Mike
--
Michael C. Neel
There are only 10 types of people in the world;
those who understand binary and those who don't.


-----Original Message-----
From: Bryan Mongeau [mailto:bryan@eevolved.com] 
Sent: Tuesday, September 17, 2002 5:07 PM
To: mod_python@modpython.org
Subject: Re: [mod_python] Mod_python and Sub-Interpreter segregation


On September 14, 2002 03:07 am, Michael Neel wrote:
> Thank will work great, until you hit the 65th concurrent connection,
at
> wich point apache will give you another child.

Thanks Mike. It seems as if even when MaxClients is set to 64 apache
will fork 
another child anyway on the 65th concurrent connection... Why? Do you
know 
what is going on here? I would like to simply work around the issue by 
limiting the amount of concurrent clients.

> (just a side note, to test a web server I use the ab tool
> that comes with apache; it will let you set the concurrent number of
> theard to try and get at once).

Thanks alot, ab is my newest friend :)
-- 
Bryan Mongeau
eEvolved Inc. - IT Consulting & Custom Software
http://eevolved.com/
--
"10^38 machine instructions would simulate ALL the brains (non-humans 
included) that ever existed, ever since brains were invented in the
Cambrian 
Explosion 570 million years ago." -- K. Eric Drexler

_______________________________________________
Mod_python mailing list
Mod_python@modpython.org
http://www.modpython.org/mailman/listinfo/mod_python


From pk1u at yahoo.com  Wed Sep 18 13:31:29 2002
From: pk1u at yahoo.com (Praveen Kumar)
Date: Fri Jan  9 21:47:02 2004
Subject: [mod_python] multithreading support
Message-ID: <20020918203129.71020.qmail@web80305.mail.yahoo.com>

I've found messages on various lists that have stated
that it's a myth that threads don't work w/
mod_python, it works fine on most platforms, etc. Can
anyone comment on that ( I *really* want to use
threads ) ? Has anyone encountered problems w/ threads
on a RH7.2 + Apache 1.3.26 + mod_python 2.7.8 + Python
2.1.3 config ?

pk


__________________________________________________
Do you Yahoo!?
Yahoo! News - Today's headlines
http://news.yahoo.com

From bryan at eevolved.com  Fri Sep 20 16:58:08 2002
From: bryan at eevolved.com (Bryan Mongeau)
Date: Fri Jan  9 21:47:03 2004
Subject: [mod_python] multithreading support
In-Reply-To: <20020918203129.71020.qmail@web80305.mail.yahoo.com>
References: <20020918203129.71020.qmail@web80305.mail.yahoo.com>
Message-ID: <200209201658.08726.bryan@eevolved.com>

On September 18, 2002 08:31 pm, Praveen Kumar wrote:
> I've found messages on various lists that have stated
> that it's a myth that threads don't work w/
> mod_python, it works fine on most platforms, etc. Can
> anyone comment on that ( I *really* want to use
> threads ) ? Has anyone encountered problems w/ threads
> on a RH7.2 + Apache 1.3.26 + mod_python 2.7.8 + Python
> 2.1.3 config ?

I have successfully used threads to implement a "Janitor" that periodically 
deletes expired sessions. It is (re)started when the module is imported. It 
is part of a session module that handles cookie based user session variables. 
Usage:

from mod_python import apache
from session import CookieSession

def handler(req):
	sess = CookieSession(req)
	req.content_type="text/html"
	req.send_http_header()
	try:
		sess['hits'] += 1
	except KeyError:
		sess['hits'] = 1
	req.write("Session hits: "+str(sess['hits']))
	return apache.OK

Anyone interested in such a beast can drop me a line. I have not yet tested it 
extensively but Threads and Events definitely *seem* to work.

My setup:
apache 2.0.40
mod_python 3.0 BETA ( patched )
python 2.2.1
-- 
Bryan Mongeau
eEvolved Inc. - IT Consulting & Custom Software
http://eevolved.com/
--
"The only thing that I'd rather own than Windows is English, because then I 
could charge you two hundred and forty-nine dollars for the right to speak 
it." -- Scott McNealy


From jack_diederich at email.com  Fri Sep 20 22:41:08 2002
From: jack_diederich at email.com (Jack Diederich)
Date: Fri Jan  9 21:47:03 2004
Subject: [mod_python] multithreading support
Message-ID: <20020921034108.10532.qmail@email.com>

Re: Threads & mod_python

Grisha can give the final +1/-1 ...

I've read through the mod_python source, and the python embedding HOWTO here http://www.python.org/doc/current/api/threads.html
and in my opinion mod_python will only not work with threads if there is a bug in mod_python interpreter locking, which I doubt is the case because there's really only two places where we call the interpreter (to get the python callback, and to make the callback) and the code would shit the bed if it wasn't 100% right in the first place.  

I run mod_python without threads because I use it in a production environment, so I want to be safe. I don't require threads for the app, so I don't lose anything.

My only minor /but/ is that the python documentation defines a couple of the functions mod_python calls as unavailable functions if python is compiled without threads. (from the link above, read PyEval_AcquireThread).  I think this is documentation dissonace, but just maybe it means that a macro does nothing when it should be doing something.  Bizzarly enough, maybe that means that compiling _without_ threads is the wrong thing to do!

-jackdied
-- 
__________________________________________________________
Sign-up for your own FREE Personalized E-mail at Mail.com
http://www.mail.com/?sr=signup


From jack_diederich at email.com  Sat Sep 21 17:04:10 2002
From: jack_diederich at email.com (Jack Diederich)
Date: Fri Jan  9 21:47:03 2004
Subject: [mod_python] python-dev down?
Message-ID: <20020921220410.562.qmail@email.com>

Is the python-dev list down, or is it simply smart enough not to relay something I sent back to me?

-jack
-- 
__________________________________________________________
Sign-up for your own FREE Personalized E-mail at Mail.com
http://www.mail.com/?sr=signup


From grisha at ispol.com  Tue Sep 24 13:20:59 2002
From: grisha at ispol.com (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 21:47:03 2004
Subject: [mod_python] another beta tarball
Message-ID: <Pine.BSF.4.32.0209241317520.53347-100000@eden.ispol.com>

You can get the latest 3.0 Beta tarball from
http://www.apache.org/dist/httpd/modpython/dev/

Note the new location. It also has all the other dist files, and will be
the main distribution point moving forward. Port, rpm and package
maintainers should probably update their files to fetch from there.

Grisha



From mbp at samba.org  Wed Sep 25 18:26:47 2002
From: mbp at samba.org (Martin Pool)
Date: Fri Jan  9 21:47:03 2004
Subject: [mod_python] [patch] Make mod_python work with NTLM authentication
Message-ID: <20020925082645.GG8296@samba.org>

The mod_python 2.7.8 Publisher assumes that it will only ever be used
with Basic authentication.  It always returns "400 Bad Request" if it
is ever used inside a directory authenticated by Apache's mod_ntlm,
which uses the Authorization header with a different format.   I
suspect it would fail with digest authentication as well.

This patch makes the publisher adhere more closely to the RFC2617
specification by checking the authentication scheme name before trying
to parse the header.

If this could go into 2.7.9 I would be happy.

Index: publisher.py
===================================================================
--- publisher.py
+++ publisher.py	2002-09-25 17:23:05.000000000 +1000
@@ -189,6 +189,29 @@
     else:
         return apache.HTTP_INTERNAL_SERVER_ERROR
 
+
+def _parse_authentication(req):
+    """Return (username, password) from the Authorization header.
+
+    This only handles HTTP Basic (RFC2617) authentication.  In at
+    least two other interesting cases, it is not possible for
+    mod_python to know the password, because it is not included in the
+    request.  For authentication schemes other than Basic, (None,
+    None) is returned.
+
+    May raise an exception if the authorization is invalid in some way.
+    """
+    s = req.headers_in["Authorization"]
+    scheme, rest = string.split(s, None, 1)
+    if string.lower(scheme) != 'basic':
+        return None, None
+
+    s = base64.decodestring(rest)
+    user, passwd = string.split(s, ":", 1)
+    return user, passwd
+    
+    
+
 def process_auth(req, object, realm="unknown", user=None, passwd=None):
 
     found_auth, found_access = 0, 0
@@ -202,9 +225,7 @@
     # once and the are received as arguments
     if not user and req.headers_in.has_key("Authorization"):
         try:
-            s = req.headers_in["Authorization"][6:]
-            s = base64.decodestring(s)
-            user, passwd = string.split(s, ":", 1)
+            user, passwd = _parse_authentication(req)
         except:
             raise apache.SERVER_RETURN, apache.HTTP_BAD_REQUEST
 

-- 
Martin 



From mbp at samba.org  Wed Sep 25 18:33:50 2002
From: mbp at samba.org (Martin Pool)
Date: Fri Jan  9 21:47:03 2004
Subject: [mod_python] Mod_python and Sub-Interpreter segregation
In-Reply-To: <200209172106.52339.bryan@eevolved.com>
References: <001401c25b9b$e97f0770$0400a8c0@clapton> <200209172106.52339.bryan@eevolved.com>
Message-ID: <20020925083348.GH8296@samba.org>

On 17 Sep 2002, Bryan Mongeau <bryan@eevolved.com> wrote:
> On September 14, 2002 03:07 am, Michael Neel wrote:
> > Thank will work great, until you hit the 65th concurrent connection, at
> > wich point apache will give you another child.
> 
> Thanks Mike. It seems as if even when MaxClients is set to 64 apache will fork 
> another child anyway on the 65th concurrent connection... Why? Do you know 
> what is going on here? I would like to simply work around the issue by 
> limiting the amount of concurrent clients.

I think if you go down the path of relying on data kept inside an
Apache instance you will regret it.  The right way to retain state on
the server is to keep it in some kind of external database. 

Here are a few reasons:

 - If you reconfigure apache (e.g. apachectl graceful) or need to
   restart it, the data in memory will be irretrievably lost.
   Perhaps at the moment you don't need strong persistence but most
   web apps find their storage needs grow, so you will in the future. 

 - Having multiple children is an important robustness feature of
   Apache.

 - Keeping shared data separate is a "safer" design -- if you need to  
   coordinate access between threads then there is a risk of race
   conditions or lockups.  For example, if one thread abnormally
   terminates, it might leave internal data structures in an
   inconsistent state.  If you use an external database things are
   more isolated and easier to debug.

 - Using something like Python's shelve module is nearly as easy as an
   in-memory variable.

This is a dead horse; there are plenty of other discussions of it on
the web.  Don't repeat mistakes that were learnt by others six years
ago.

-- 
Martin 

From grisha at modpython.org  Wed Sep 25 09:31:05 2002
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 21:47:03 2004
Subject: [mod_python] [patch] Make mod_python work with NTLM authentication
In-Reply-To: <20020925082645.GG8296@samba.org>
Message-ID: <Pine.BSF.4.32.0209250929120.64042-100000@eden.ispol.com>

On Wed, 25 Sep 2002, Martin Pool wrote:

> If this could go into 2.7.9 I would be happy.

I will add it to 3.0. 2.7.9 won't happen unless there are some serious
problems (like security).

Grisha


From wilk-ml at flibuste.net  Wed Sep 25 22:48:14 2002
From: wilk-ml at flibuste.net (William Dode)
Date: Fri Jan  9 21:47:03 2004
Subject: [mod_python] suexec setuid
Message-ID: <87fzvxn6cx.fsf@flibuste.net>

hi,

Is it possible to change the uid of the interpreter like suexec, in
different virtual host ?

thanks

-- 
William - http://wikipython.tuxfamily.org

From grisha at modpython.org  Wed Sep 25 19:42:51 2002
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 21:47:03 2004
Subject: [mod_python] suexec setuid
In-Reply-To: <87fzvxn6cx.fsf@flibuste.net>
Message-ID: <Pine.BSF.4.32.0209251941120.70644-100000@eden.ispol.com>

It should be possible on Apache 2.0 using the perchild MPM. I haven't
tried this. The latest mp 3.0 beta should be pretty stable - give it a try
:)

On 25 Sep 2002, William Dode wrote:

> hi,
>
> Is it possible to change the uid of the interpreter like suexec, in
> different virtual host ?
>
> thanks
>
> --
> William - http://wikipython.tuxfamily.org
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://www.modpython.org/mailman/listinfo/mod_python
>


From neo at https.ru  Thu Sep 26 19:39:29 2002
From: neo at https.ru (Neo Eureka)
Date: Fri Jan  9 21:47:03 2004
Subject: [mod_python] BETA2: problems with configure and make !
In-Reply-To: <Pine.BSF.4.32.0209251941120.70644-100000@eden.ispol.com>
References: <Pine.BSF.4.32.0209251941120.70644-100000@eden.ispol.com>
Message-ID: <5721418898.20020926193929@https.ru>

  Hello !

  I have just tried to configure and make the "BETA2" of mod_python3.
The results are below.
  I was not completely sure to which of 2 lists I should post this,
but it seems I act as a user rather than a developer, so...

  My server runs Linux 7.2 (Enigma), I have just downloaded the latest
release of Apache -- httpd-2.0.42, and was playing with it to see how
things work with it. I have three different versions of Python
installed: 1.5(native), 2.1.3 and 2.2.1. The latter two are installed
as packages (rpm) with corresponding "-devel" packages.

  It seems, all preconditions for successful build of mod_python are
met, but the problems started once I had run 'configure'.

Firstly, it found Python-1.5 and was happy though it requires 2.2.1.
So I tried "./configure --with-python=...". But here, again, it
behaved odd. It was trying to find Python executable, some "Makefile"
and "Include" source directory. Unsuccessfully.

Below is the directory tree of the Python installation:

-- BEGIN --
/usr/local/python-2.2.1/:
total 28
drwxr-sr-x    7 root     root         4096 Sep 10 15:46 ./
drwxr-sr-x   26 root     root         4096 Sep 10 15:46 ../
drwxr-sr-x    2 root     root         4096 Sep 26 17:24 bin/
drwxr-sr-x    3 root     root         4096 Sep 10 15:46 include/
drwxr-sr-x    3 root     root         4096 Sep 10 15:46 lib/
drwxr-sr-x    3 root     root         4096 Sep 10 15:46 man/
drwxr-sr-x    3 root     root         4096 Sep 10 15:46 share/

/usr/local/python-2.2.1/bin:
total 836
drwxr-sr-x    2 root     root         4096 Sep 26 17:24 ./
drwxr-sr-x    7 root     root         4096 Sep 10 15:46 ../
-rwxr-xr-x    1 root     root           49 Apr  9 23:16 pydoc2*
-rwxr-xr-x    1 root     root       838114 Apr  9 23:16 python2*

/usr/local/python-2.2.1/include:
total 12
drwxr-sr-x    3 root     root         4096 Sep 10 15:46 ./
drwxr-sr-x    7 root     root         4096 Sep 10 15:46 ../
drwxr-xr-x    2 root     root         4096 Sep 10 15:47 python2.2/

/usr/local/python-2.2.1/include/python2.2:
[... skipped ...]

/usr/local/python-2.2.1/lib:
total 20
drwxr-sr-x    3 root     root         4096 Sep 10 15:46 ./
drwxr-sr-x    7 root     root         4096 Sep 10 15:46 ../
drwxr-xr-x   14 root     root        12288 Sep 10 15:47 python2.2/

/usr/local/python-2.2.1/lib/python2.2:
[... skipped ...]

/usr/local/python-2.2.1/man:
[... skipped ...]

/usr/local/python-2.2.1/share:
[... skipped ...]
-- END --

It's obvious that "configure" script expects different layout and
filenames. When I added these symlinks to the
"/usr/local/python-2.2.1/bin" directory:

lrwxrwxrwx    1 root     root           20 Sep 26 17:24 Include -> ../include/python2.2/
lrwxrwxrwx    1 root     root            7 Sep 26 17:15 python -> python2*

... "configure" seemed to succeed, though it failed to find "Makefile"
and "Modules" directory.

I also have problems with "make dso" after the above, but I think I
should first investigate the issue myself.

Am I missing something? May be I did something dumb? I still have poor
experience of Linux etc.

Thanks.

---
Neo Eureka / mailto:neo@https.ru


From leader730 at hotmail.com  Sun Sep  1 00:40:30 2002
From: leader730 at hotmail.com (Leader730)
Date: Fri Jan  9 21:53:04 2004
Subject: [mod_python] Running more than one Python script
Message-ID: <OE23auNjVuMhvqgStMV0000edaf@hotmail.com>

Hello, I am new to all this and I'm having a problem, I configured mod_python on alright I guess but the only file that will run is the the name specidied after PythonHandler in the apache httpd.conf file

<Directory "C:/Program Files/Apache Group/Apache/htdocs/server">
   AddHandler python-program .py
   PythonHandler test
</Directory>

so in this case only the file test.py would run, anything else would return the same thing as test.py, I followed the tutorial and it says that every file should run but it doesn't work for me, I have it setup exactly like it says so If anyone knows how to fix this please tell me (I'm running it on Windows btw).

thanks


-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mailman.modpython.org/pipermail/mod_python/attachments/20020901/fb1bdcaf/attachment-0001.htm
From ian at veryfresh.com  Sun Sep  1 03:00:23 2002
From: ian at veryfresh.com (Ian Clelland)
Date: Fri Jan  9 21:53:05 2004
Subject: [mod_python] Running more than one Python script
In-Reply-To: <OE23auNjVuMhvqgStMV0000edaf@hotmail.com>
References: <OE23auNjVuMhvqgStMV0000edaf@hotmail.com>
Message-ID: <20020901100023.GG5501@fullfactor.com>

On Sun, Sep 01, 2002 at 12:40:30AM -0400, Leader730 wrote:
> Hello, I am new to all this and I'm having a problem, I configured 
> mod_python on alright I guess but the only file that will run is the 
> the name specidied after PythonHandler in the apache httpd.conf file
> 
> <Directory "C:/Program Files/Apache Group/Apache/htdocs/server">
>    AddHandler python-program .py
>    PythonHandler test
> </Directory>

Yes, it looks like you have Apache configured correctly to run 
mod_python on all URLs which end in '.py' in that directory.
 
> so in this case only the file test.py would run, anything else would 
> return the same thing as test.py, I followed the tutorial and it says 
> that every file should run but it doesn't work for me, I have it 
> setup exactly like it says so If anyone knows how to fix this please 
> tell me (I'm running it on Windows btw).

The tutorial _does not_ say that every python file will be run by the 
server. The last paragraph of the tutorial (Section 3.2 of the manual) 
explains that Apache won't even look at the name of the file. Because 
of the way that Apache works, *EVERY* URL which ends in ".py" will 
cause mod_python to run the "test" module, in this case. This is the 
correct behaviour; Apache only allows you to set up one python handler 
per <Directory> tag.

If what you are looking for is a way to run various python files that 
you have placed in your web server directories, then you need to use a 
dispatcher handler, like Publisher. The Publisher handler looks at all 
of the requests which come in to the server, and passes them off to 
your python files, based on their filenames. Check out section 3.4 of 
the manual for a quick introduction to it.

Ian
<ian@veryfresh.com> 

From haering_python at gmx.de  Sun Sep  1 17:40:53 2002
From: haering_python at gmx.de (Gerhard =?iso-8859-1?Q?H=E4ring?=)
Date: Fri Jan  9 21:53:05 2004
Subject: [mod_python] Problems with -HEAD and Apache 2.0.40 on FreeBSD
Message-ID: <20020901154053.GA1241@lilith.ghaering.test>

I tried to get the CVS version working with Apache 2.0.40 on FreeBSD
4.6-STABLE but had no luck :-(

This is what I did:

compiled the FreeBSD apache2 port using WITH_THREADS=1. Which seems to
have worked:

gargamel# ldd /usr/local/sbin/httpd
/usr/local/sbin/httpd:
[...]
libc_r.so.4 => /usr/lib/libc_r.so.4 (0x28225000)
libc.so.4 => /usr/lib/libc.so.4 (0x282df000)
 
I'm not sure if its ok to link against libc_r and libc at the same time,
though. But as is, Apache seems to display static pages fine. But then,
I have no experience with Apache2 whatsoever.

gargamel# /usr/local/sbin/httpd -l
Compiled in modules:
core.c
prefork.c
http_core.c
mod_so.c

So it looks like it's using the preforked model.

The Python compiled against is the standard FreeBSD port with threads
enabled:
gargamel# ldd /usr/local/bin/python
/usr/local/bin/python:
libutil.so.3 => /usr/lib/libutil.so.3 (0x280e6000)
libm.so.2 => /usr/lib/libm.so.2 (0x280ef000)
libc_r.so.4 => /usr/lib/libc_r.so.4 (0x2810b000)

mod_python.so is statically linked against libpython2.2.a, however again
is linked against the normal, nonthreaded libc (!):

gargamel# ldd /usr/local/libexec/apache2/mod_python.so
/usr/local/libexec/apache2/mod_python.so:
libm.so.2 => /usr/lib/libm.so.2 (0x281d9000)
libutil.so.3 => /usr/lib/libutil.so.3 (0x281f5000)
libc.so.4 => /usr/lib/libc.so.4 (0x28069000)

Needless to say, the results aren't that satisfactory:

[Sun Sep 01 17:32:32 2002] [notice] Apache/2.0.40 (Unix) mod_python/3.0.0-BETA Python/2.2.1 configured -- resuming normal operations
[Sun Sep 01 17:32:39 2002] [notice] child pid 35323 exit signal Segmentation fault (11)
[Sun Sep 01 17:32:39 2002] [notice] child pid 35324 exit signal Segmentation fault (11)

All I did was put this line in httpd.conf:
LoadModule python_module libexec/apache2/mod_python.so

I didn't even call a Python handler, yet.

Any clues?

Gerhard
-- 
mail:   gerhard <at> bigfoot <dot> de       registered Linux user #64239
web:    http://www.cs.fhm.edu/~ifw00065/    OpenPGP public key id AD24C930
public key fingerprint: 3FCC 8700 3012 0A9E B0C9  3667 814B 9CAA AD24 C930
reduce(lambda x,y:x+y,map(lambda x:chr(ord(x)^42),tuple('zS^BED\nX_FOY\x0b')))

From grisha at modpython.org  Sun Sep  1 13:47:41 2002
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 21:53:05 2004
Subject: [mod_python] Problems with -HEAD and Apache 2.0.40 on FreeBSD
In-Reply-To: <20020901154053.GA1241@lilith.ghaering.test>
Message-ID: <Pine.BSF.4.32.0209011343500.45308-100000@eden.ispol.com>

I haven't tried it on FreeBSD yet. Apache seemed (or seemed, don't know if
it's resolved in .40) to have some sort of a problem with FreeBSD threads
(thus prefork being the default MPM). Because of this I actually moved all
my development to Linux (to my dismay). So it's possible you have to do
everything without threads. If you figre this out out, please let me know.

Grisha

On Sun, 1 Sep 2002, Gerhard [iso-8859-1] H?ring wrote:

> I tried to get the CVS version working with Apache 2.0.40 on FreeBSD
> 4.6-STABLE but had no luck :-(
>
> This is what I did:
>
> compiled the FreeBSD apache2 port using WITH_THREADS=1. Which seems to
> have worked:
>
> gargamel# ldd /usr/local/sbin/httpd
> /usr/local/sbin/httpd:
> [...]
> libc_r.so.4 => /usr/lib/libc_r.so.4 (0x28225000)
> libc.so.4 => /usr/lib/libc.so.4 (0x282df000)
>
> I'm not sure if its ok to link against libc_r and libc at the same time,
> though. But as is, Apache seems to display static pages fine. But then,
> I have no experience with Apache2 whatsoever.
>
> gargamel# /usr/local/sbin/httpd -l
> Compiled in modules:
> core.c
> prefork.c
> http_core.c
> mod_so.c
>
> So it looks like it's using the preforked model.
>
> The Python compiled against is the standard FreeBSD port with threads
> enabled:
> gargamel# ldd /usr/local/bin/python
> /usr/local/bin/python:
> libutil.so.3 => /usr/lib/libutil.so.3 (0x280e6000)
> libm.so.2 => /usr/lib/libm.so.2 (0x280ef000)
> libc_r.so.4 => /usr/lib/libc_r.so.4 (0x2810b000)
>
> mod_python.so is statically linked against libpython2.2.a, however again
> is linked against the normal, nonthreaded libc (!):
>
> gargamel# ldd /usr/local/libexec/apache2/mod_python.so
> /usr/local/libexec/apache2/mod_python.so:
> libm.so.2 => /usr/lib/libm.so.2 (0x281d9000)
> libutil.so.3 => /usr/lib/libutil.so.3 (0x281f5000)
> libc.so.4 => /usr/lib/libc.so.4 (0x28069000)
>
> Needless to say, the results aren't that satisfactory:
>
> [Sun Sep 01 17:32:32 2002] [notice] Apache/2.0.40 (Unix) mod_python/3.0.0-BETA Python/2.2.1 configured -- resuming normal operations
> [Sun Sep 01 17:32:39 2002] [notice] child pid 35323 exit signal Segmentation fault (11)
> [Sun Sep 01 17:32:39 2002] [notice] child pid 35324 exit signal Segmentation fault (11)
>
> All I did was put this line in httpd.conf:
> LoadModule python_module libexec/apache2/mod_python.so
>
> I didn't even call a Python handler, yet.
>
> Any clues?
>
> Gerhard
> --
> mail:   gerhard <at> bigfoot <dot> de       registered Linux user #64239
> web:    http://www.cs.fhm.edu/~ifw00065/    OpenPGP public key id AD24C930
> public key fingerprint: 3FCC 8700 3012 0A9E B0C9  3667 814B 9CAA AD24 C930
> reduce(lambda x,y:x+y,map(lambda x:chr(ord(x)^42),tuple('zS^BED\nX_FOY\x0b')))
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://www.modpython.org/mailman/listinfo/mod_python
>


From other at stopthesanity.org  Mon Sep  2 11:43:29 2002
From: other at stopthesanity.org (Chris Cioffi)
Date: Fri Jan  9 21:53:05 2004
Subject: [mod_python] mptest.py fails with (8)Exec format error
Message-ID: <015301c25297$7c15d4a0$75125340@MYOBKPQVQN74K8>

I've looked through the docs and FAQs and couldn't find anything.

Google brought up this link:
http://www.modpython.org/pipermail/mod_python/2001-July/001489.html
but no one answered the question through the list.

My config:
Debian woody, Apache 1.3.26
mod_python 2.7.8

I copied the test script and configuration out of the docs exactly. 

Any ideas?  Thanks!
-- 
Chris <chris@stopthesanity.org>
  Junior Birdman(TM) in training
  http://stopthesanity.org



From grisha at modpython.org  Mon Sep  2 12:27:57 2002
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 21:53:05 2004
Subject: [mod_python] mptest.py fails with (8)Exec format error
In-Reply-To: <015301c25297$7c15d4a0$75125340@MYOBKPQVQN74K8>
Message-ID: <Pine.BSF.4.32.0209021226460.55551-100000@eden.ispol.com>

The problem is that Apache is treating it like a CGI script, which it
isn't.

Grisha

On Mon, 2 Sep 2002, Chris Cioffi wrote:

> I've looked through the docs and FAQs and couldn't find anything.
>
> Google brought up this link:
> http://www.modpython.org/pipermail/mod_python/2001-July/001489.html
> but no one answered the question through the list.
>
> My config:
> Debian woody, Apache 1.3.26
> mod_python 2.7.8
>
> I copied the test script and configuration out of the docs exactly.
>
> Any ideas?  Thanks!
> --
> Chris <chris@stopthesanity.org>
>   Junior Birdman(TM) in training
>   http://stopthesanity.org
>
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://www.modpython.org/mailman/listinfo/mod_python
>


From other at stopthesanity.org  Mon Sep  2 12:33:21 2002
From: other at stopthesanity.org (Chris Cioffi)
Date: Fri Jan  9 21:53:05 2004
Subject: [mod_python] mptest.py fails with (8)Exec format error
References: <E398378A-BE8C-11D6-A0B8-0030653DCC28@attbi.com>
Message-ID: <016401c2529e$736dc7c0$75125340@MYOBKPQVQN74K8>

Bingo.  Thanks Jeff!

-- 
Chris <chris@stopthesanity.org>
  Junior Birdman(TM) in training
  http://stopthesanity.org
----- Original Message ----- 
From: "Jeff Stearns" <jeffstearns@attbi.com>
To: "Chris Cioffi" <other@stopthesanity.org>
Sent: Monday, September 02, 2002 11:58 AM
Subject: Re: [mod_python] mptest.py fails with (8)Exec format error


> Chris -
> 
> You don't provide any details of the problem you're having, so all I can 
> do is guess.
> 
> Make sure that your file doesn't have \r\n line terminators.  You can do 
> that in vi or look with od.
> 
> I assume you're using a #! line at the start of the file.  Triple-check 
> it; it's probably wrong.
> 
> -jeff stearns
> 
> On Monday, September 2, 2002, at 08:43  AM, Chris Cioffi wrote:
> 
> > I've looked through the docs and FAQs and couldn't find anything.
> >
> > Google brought up this link:
> > http://www.modpython.org/pipermail/mod_python/2001-July/001489.html
> > but no one answered the question through the list.
> >
> > My config:
> > Debian woody, Apache 1.3.26
> > mod_python 2.7.8
> >
> > I copied the test script and configuration out of the docs exactly.
> >
> > Any ideas?  Thanks!
> > --
> > Chris <chris@stopthesanity.org>
> >   Junior Birdman(TM) in training
> >   http://stopthesanity.org
> >
> >
> > _______________________________________________
> > Mod_python mailing list
> > Mod_python@modpython.org
> > http://www.modpython.org/mailman/listinfo/mod_python
> 
> 
> 



From leader730 at hotmail.com  Mon Sep  2 22:54:13 2002
From: leader730 at hotmail.com (Leader730)
Date: Fri Jan  9 21:53:05 2004
Subject: [mod_python] PythonHandler mod_python.publisher returns 404 for every file
Message-ID: <OE36fdhNzW3l1GM3h3v00003a92@hotmail.com>

Hellp, I am trying to get PythonHandler mod_python.publisher to work but everytime I try it, any python file I try to run on the server returns a "404 File Not Found" error. this is the config:

<Directory "C:/Program Files/Apache Group/Apache/htdocs/server">
    AddHandler python-program .py
    PythonHandler mod_python.publisher
</Directory>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mailman.modpython.org/pipermail/mod_python/attachments/20020902/e6be7731/attachment-0001.htm
From peter.bittner at gmx.net  Tue Sep  3 18:07:01 2002
From: peter.bittner at gmx.net (Peter Bittner)
Date: Fri Jan  9 21:53:05 2004
Subject: [mod_python] How can I have sensible URLs?
Message-ID: <23016.1031069221@www25.gmx.net>

Hi there!

I have a little bit of understand problem of how the architecture of a
mod_python web application (say web site, if you want) should be.

I would like to have the URLs as if the mod_python scripts were simply some
kind of "special HTML documents", comparable to PHP scripts.

For example, I have written a script named "index.py" which is located on my
document root. So I would expect "http://www.mydomain.com/index.py" to
execute my script (I have set up my Apache so that I can omit the filename, too).
But it doesn't. When I remove the ".py" at the end there is no change to this
too.

So what I have to do is to execute "http://www.mydomain.com/index/method",
provided a method called "method" in my script. This way it works. - But is
there a way to have "HTML-like" or "PHP-like" behavior? Or how do I have to
organize my scripts so that I can have my whole website written in mod_python
and can run it with "http://www.mydomain.com" alone?

Does anyone have a good example about how to do this?

Thanks in advance!
Peter

-- 
Peter Bittner
mobil: +43/(0)650/4151545
web: http://www.bittner.at.tf - http://beam.to/htmlkurs
mail: peter.bittner@gmx.net

"Free software is like free speech, not free beer" (Richard Stallman)

GMX - Die Kommunikationsplattform im Internet.
http://www.gmx.net


From Hans.Yandle at cingular.com  Tue Sep  3 12:28:31 2002
From: Hans.Yandle at cingular.com (Yandle, Hans)
Date: Fri Jan  9 21:53:05 2004
Subject: [mod_python] How can I have sensible URLs?
Message-ID: <D31B04F24EDE7644BB169BB4F080778A01F4C613@s30342g004005>

If the publisher module of mod_python does not fill the bill try looking to
http://spyce.sourceforge.net/, http://www.ccraig.org/software/pyhp/, or just
go looking around on http://py.vaults.ca/parnassus/ for other stuff.

Hans

-----Original Message-----
From: Peter Bittner [mailto:peter.bittner@gmx.net]
Sent: Tuesday, September 03, 2002 12:07 PM
To: mod_python@modpython.org
Subject: [mod_python] How can I have sensible URLs?


Hi there!

I have a little bit of understand problem of how the architecture of a
mod_python web application (say web site, if you want) should be.

I would like to have the URLs as if the mod_python scripts were simply some
kind of "special HTML documents", comparable to PHP scripts.

For example, I have written a script named "index.py" which is located on my
document root. So I would expect "http://www.mydomain.com/index.py" to
execute my script (I have set up my Apache so that I can omit the filename,
too).
But it doesn't. When I remove the ".py" at the end there is no change to
this
too.

So what I have to do is to execute "http://www.mydomain.com/index/method",
provided a method called "method" in my script. This way it works. - But is
there a way to have "HTML-like" or "PHP-like" behavior? Or how do I have to
organize my scripts so that I can have my whole website written in
mod_python
and can run it with "http://www.mydomain.com" alone?

Does anyone have a good example about how to do this?

Thanks in advance!
Peter

-- 
Peter Bittner
mobil: +43/(0)650/4151545
web: http://www.bittner.at.tf - http://beam.to/htmlkurs
mail: peter.bittner@gmx.net

"Free software is like free speech, not free beer" (Richard Stallman)

GMX - Die Kommunikationsplattform im Internet.
http://www.gmx.net

_______________________________________________
Mod_python mailing list
Mod_python@modpython.org
http://www.modpython.org/mailman/listinfo/mod_python

From grisha at modpython.org  Tue Sep  3 13:03:37 2002
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 21:53:05 2004
Subject: [mod_python] How can I have sensible URLs?
In-Reply-To: <23016.1031069221@www25.gmx.net>
Message-ID: <Pine.BSF.4.32.0209031257590.68415-100000@eden.ispol.com>

Basically, the publisher doesn't have a "default" method name. (There is
no particular reason for this, it just didn't occur to me at the time of
writing.)

There is probably more than one way to accomplish something to that
extent, one way would be to try a redirect, something like:

Redirect /index.py http://www.mydomain.com/index.py/index

Grisha

On Tue, 3 Sep 2002, Peter Bittner wrote:

> Hi there!
>
> I have a little bit of understand problem of how the architecture of a
> mod_python web application (say web site, if you want) should be.
>
> I would like to have the URLs as if the mod_python scripts were simply some
> kind of "special HTML documents", comparable to PHP scripts.
>
> For example, I have written a script named "index.py" which is located on my
> document root. So I would expect "http://www.mydomain.com/index.py" to
> execute my script (I have set up my Apache so that I can omit the filename, too).
> But it doesn't. When I remove the ".py" at the end there is no change to this
> too.
>
> So what I have to do is to execute "http://www.mydomain.com/index/method",
> provided a method called "method" in my script. This way it works. - But is
> there a way to have "HTML-like" or "PHP-like" behavior? Or how do I have to
> organize my scripts so that I can have my whole website written in mod_python
> and can run it with "http://www.mydomain.com" alone?
>
> Does anyone have a good example about how to do this?
>
> Thanks in advance!
> Peter
>
> --
> Peter Bittner
> mobil: +43/(0)650/4151545
> web: http://www.bittner.at.tf - http://beam.to/htmlkurs
> mail: peter.bittner@gmx.net
>
> "Free software is like free speech, not free beer" (Richard Stallman)
>
> GMX - Die Kommunikationsplattform im Internet.
> http://www.gmx.net
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://www.modpython.org/mailman/listinfo/mod_python
>


From mbp at samba.org  Wed Sep  4 11:42:35 2002
From: mbp at samba.org (Martin Pool)
Date: Fri Jan  9 21:53:05 2004
Subject: [mod_python] How can I have sensible URLs?
In-Reply-To: <23016.1031069221@www25.gmx.net>
References: <23016.1031069221@www25.gmx.net>
Message-ID: <20020904014233.GC7271@samba.org>

On  3 Sep 2002, Peter Bittner <peter.bittner@gmx.net> wrote:
> Hi there!
> 
> I have a little bit of understand problem of how the architecture of a
> mod_python web application (say web site, if you want) should be.
> 
> I would like to have the URLs as if the mod_python scripts were simply some
> kind of "special HTML documents", comparable to PHP scripts.
> 
> For example, I have written a script named "index.py" which is located on my
> document root. So I would expect "http://www.mydomain.com/index.py" to
> execute my script (I have set up my Apache so that I can omit the filename, too).
> But it doesn't. When I remove the ".py" at the end there is no change to this
> too.
> 
> So what I have to do is to execute "http://www.mydomain.com/index/method",
> provided a method called "method" in my script. This way it works. - But is
> there a way to have "HTML-like" or "PHP-like" behavior? Or how do I have to
> organize my scripts so that I can have my whole website written in mod_python
> and can run it with "http://www.mydomain.com" alone?

Have a look at the mod_rewrite documentation.  Something like

  RewriteMatch /index/(.*) /python/index.py/$1

-- 
Martin 

From Thomas.Rothmayer at borealisgroup.com  Wed Sep  4 07:55:15 2002
From: Thomas.Rothmayer at borealisgroup.com (Rothmayer, Thomas)
Date: Fri Jan  9 21:53:05 2004
Subject: [mod_python] Python - MySql - Apache: Installation of mod_python on WinNT
Message-ID: <B956D4DA8568D41186B60050046724AC183D05@LZNTS005>

Good morning all,

to add data to my MySql-database (and to display the query-results on a
browswer) I'm using PHP. It's running quite well.
But as I insert most of the data with several NumPy-scripts, I'd like to do
also the output with Python (e.g. graphs on the browser) in order not to get
too much different softwares.

I've already tried to install mod_snake (because Apache 2.0 is installed on
my computer) and WebWare/Webkit - without success.
My OS is WinNT, MySQLdb is installed.

Some changes I made:
httpd.conf:	LoadModule webkit_module modules/mod_webkit.dll
webkit.cgi:	#! c:\programme\python21\python

Please support me with installation details of mod_snake and/or Webware (if
necessary) on NT!
Someone already has experience with my software triumvirat?


Many thanks,
Thomas



**********************************************************************
This email and any files transmitted with it are confidential and
intended solely for the use of the individual or entity to whom they
are addressed. If you have received this email in error please notify
the sender either by telephone or by e-mail and delete the material
from any computer. Thank you for your cooperation.

This footnote also confirms that this email message has been swept by
MIMEsweeper for the presence of computer viruses.

www.borealisgroup.com
**********************************************************************


From fabbe at paniq.net  Wed Sep  4 09:25:13 2002
From: fabbe at paniq.net (Fabian Fagerholm)
Date: Fri Jan  9 21:53:05 2004
Subject: [mod_python] Python - MySql - Apache: Installation of
	mod_python on WinNT
In-Reply-To: <B956D4DA8568D41186B60050046724AC183D05@LZNTS005>
References: <B956D4DA8568D41186B60050046724AC183D05@LZNTS005>
Message-ID: <1031120714.4175.3.camel@kernel>

On Wed, 2002-09-04 at 08:55, Rothmayer, Thomas wrote:
> Please support me with installation details of mod_snake and/or Webware (if
> necessary) on NT!
> Someone already has experience with my software triumvirat?

mod_snake is dead, but the remnants can be found on
http://sourceforge.net/projects/modsnake

The home page for Webware is http://webware.sourceforge.net/ and has
details about that.

Did you realize you sent your mail to the mod_python mailing list? If
you'd like to try mod_python for your web application, then please see
the mod_python home page: http://www.modpython.org/

There are detailed instructions, including a tutorial.

Have fun!

Fabian

-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 240 bytes
Desc: This is a digitally signed message part
Url : http://mailman.modpython.org/pipermail/mod_python/attachments/20020904/b9574f6b/attachment-0001.bin
From peter.bittner at gmx.net  Wed Sep  4 11:03:01 2002
From: peter.bittner at gmx.net (Peter Bittner)
Date: Fri Jan  9 21:53:05 2004
Subject: [mod_python] How can I have sensible URLs?
References: <Pine.BSF.4.32.0209031257590.68415-100000@eden.ispol.com>
Message-ID: <7845.1031130181@www2.gmx.net>

Hi Grisha,

> Basically, the publisher doesn't have a "default" method name. (There is
> no particular reason for this, it just didn't occur to me at the time of
> writing.)

Wouldn't it be a nice idea to provide such a default method name? ("main"
seems a good name for that task.)

I am very keen on organizing my web projects nicely, so I usually structure
the application using separate file for separate tasks.

I also like to obey a couple of web-design paradigmas such as "let your URLs
be hackable", which says nothing less than when the user modifies the URL
there shouldn't be an "unexpected behaviour" as a result. I do get a little of
a headache when I think of users removing the "/dothis" from a
"http://www.mydomain.com/myscript/dothis" and then getting a "404 Not Found".  :-(

I have the feeling that this is really a point that presents a huge
understanding problem to novices, to mod_python beginners, (even if they are
perfectly familiar to Python).
Python scripts begin a the start of the file, everything is processed
sequentially. Why not having a default starting point for mod_python scripts?

Grisha, what was/is your motivation to omit the ".py" in the URL at the end
of the script's filename? - Don't get me wrong, I do see the beauty in this
solution (since the ".py" hits the eye), but isn't this arguably? Wouldn't a
CGI-style processing ("..../myscript.cgi?opt1=abc") be more straight forward?

I would be really happy seeing mod_python to be that easy to understand and
easy to use (to write applications) that it might be a real alternative to
PHP, JSP and ASP, and still (with Python a its base) being a language where
beautiful and well structured code emerges from.

> There is probably more than one way to accomplish something to that
> extent, one way would be to try a redirect, something like:
> 
> Redirect /index.py http://www.mydomain.com/index.py/index

Apache's module mod_rewrite might be some kind of workaround to this. But is
this really satisfying? How do other programmers feel about this?

Cheers, Peter


> On Tue, 3 Sep 2002, Peter Bittner wrote:
> 
> > Hi there!
> >
> > I have a little bit of understand problem of how the architecture of a
> > mod_python web application (say web site, if you want) should be.
> >
> > I would like to have the URLs as if the mod_python scripts were simply
> some
> > kind of "special HTML documents", comparable to PHP scripts.
> >
> > For example, I have written a script named "index.py" which is located
> on my
> > document root. So I would expect "http://www.mydomain.com/index.py" to
> > execute my script (I have set up my Apache so that I can omit the
> filename, too).
> > But it doesn't. When I remove the ".py" at the end there is no change to
> this
> > too.
> >
> > So what I have to do is to execute
> "http://www.mydomain.com/index/method",
> > provided a method called "method" in my script. This way it works. - But
> is
> > there a way to have "HTML-like" or "PHP-like" behavior? Or how do I have
> to
> > organize my scripts so that I can have my whole website written in
> mod_python
> > and can run it with "http://www.mydomain.com" alone?
> >
> > Does anyone have a good example about how to do this?
> >
> > Thanks in advance!
> > Peter
> >
> > --
> > Peter Bittner
> > mobil: +43/(0)650/4151545
> > web: http://www.bittner.at.tf - http://beam.to/htmlkurs
> > mail: peter.bittner@gmx.net
> >
> > "Free software is like free speech, not free beer" (Richard Stallman)
> 

-- 
GMX - Die Kommunikationsplattform im Internet.
http://www.gmx.net


From rien at yeepa.org  Wed Sep  4 12:01:25 2002
From: rien at yeepa.org (Adrien Plisson)
Date: Fri Jan  9 21:53:05 2004
Subject: [mod_python] How can I have sensible URLs?
References: <Pine.BSF.4.32.0209031257590.68415-100000@eden.ispol.com> <7845.1031130181@www2.gmx.net>
Message-ID: <000501c253fa$08b08230$0a020101@skynet.be>

From: "Peter Bittner" <peter.bittner@gmx.net>
> Apache's module mod_rewrite might be some kind of workaround to this. But
is
> this really satisfying? How do other programmers feel about this?

i used mod_rewrite for almost the same purpose.
i took me some times (counting in minutes) to figure out how to write the
regular expression which rewrite the URL. but if you always use the same
name for the default method and *every* files are python script, then one
rule is sufficient for the whole server. for more complex cases, take the
time to know exactly in which case you need a rewrite, and there will always
be a regular expression matching your need.
in my case, i ended up with 5 rules for the whole server -> 5 different
cases which could happen when a request is coming in.

mod_rewrite is flexible (due to the use of regexp), easy to understand, and
incredibly powerful : it allows you to do everything you want when dealing
with url problems. try it and you will like it.

--
rien


From peter.bittner at gmx.net  Wed Sep  4 15:09:32 2002
From: peter.bittner at gmx.net (Peter Bittner)
Date: Fri Jan  9 21:53:05 2004
Subject: [mod_python] How can I have sensible URLs?
References: <000501c253fa$08b08230$0a020101@skynet.be>
Message-ID: <20103.1031144972@www25.gmx.net>

Adrien,

> mod_rewrite is flexible (due to the use of regexp), easy to understand,
> and incredibly powerful : it allows you to do everything you want when
> dealing with url problems. try it and you will like it.

I'm sure mod_rewrite is a good thing when all you want is really just
beautiful URLs and nothing more.

In my case I think there is some more to it. I'll try to sketch it out:
Say, I have the following scripts that form a user interface to a library
database (say, I'm using Python over CGI for this one here)

- http://www.mydomain.com/libdb/index.py
- http://www.mydomain.com/libdb/input.py
- http://www.mydomain.com/libdb/search.py
- http://www.mydomain.com/libdb/reports.py
- http://www.mydomain.com/libdb/maintain.py

I'm sure you can imagine that every script is doing a lot of stuff (printing
out HTML forms, handling user actions and so on). - Let's see how I would
implement this with mod_python:

- I would write one large mod_python script called "libdb.py" which contains
basically the whole code of all the above listed scripts. Each of the above
scripts I would replace by methods (handlers) like "def index():", "def
input():", "def search():", etc.
Then I've ended up with a huge, almost unmaintainable script.  :-(

Is there any way to avoid this?
Would anyone tackle this problem differently?

Any help is greatly appreciated!
Cheers, Peter

-- 
Peter Bittner
mobil: +43/(0)650/4151545
web: http://www.bittner.at.tf - http://beam.to/htmlkurs
mail: peter.bittner@gmx.net

"Free software is like free speech, not free beer" (Richard Stallman)

GMX - Die Kommunikationsplattform im Internet.
http://www.gmx.net


From christoph at cocon-seide.com  Wed Sep  4 16:50:24 2002
From: christoph at cocon-seide.com (Christoph Fritzsch)
Date: Fri Jan  9 21:53:05 2004
Subject: [mod_python] How can I have sensible URLs?
In-Reply-To: <20103.1031144972@www25.gmx.net>
Message-ID: <20020904154555.EF66C9BB41@mail.fritzsch.net>

Hi Peter !

>Say, I have the following scripts that form a user interface to a library
>database (say, I'm using Python over CGI for this one here)
>
>- http://www.mydomain.com/libdb/index.py
>- http://www.mydomain.com/libdb/input.py
....
I can see perfectly well that ONE big script would be a pain in the a....
And I hope I understood you alright.
But why not seperate them by putting one script in in one file and wrap it in one def:
file "input.py" :

def main():
  all the code input needs
  return 'the printout'

and call it by http://.../libdb/input/main
next file "maintainer.py":
def main():
 code
 return 'xx'
and call it by http://.../libdb/maintainer/main

prerequisite is that the publisher is installed :-)

The only disadvantage would be the trailing /main or whatever you should call it if main 
is a reseverd word

Take care Christoph


From peter.bittner at gmx.net  Wed Sep  4 17:56:13 2002
From: peter.bittner at gmx.net (Peter Bittner)
Date: Fri Jan  9 21:53:06 2004
Subject: [mod_python] How can I have sensible URLs?
References: <7845.1031130181@www2.gmx.net>
Message-ID: <16280.1031154973@www2.gmx.net>

Hi!

> "Grisha" wrote:
> > Basically, the publisher doesn't have a "default" method name. (There is
> > no particular reason for this, it just didn't occur to me at the time of
> > writing.)

I have adapted my publisher.py so that is now takes a "default()" method by
default 
if no one is specified in the URL. (See the the code below.)

Do you think this adaption is worth being part of the "official" mod_python?
Anyone 
who finds this interesting? (Anyone who wouldn't like it?)

> I do get a little of a headache when I think of users removing the
> "/dothis" from a "http://www.mydomain.com/myscript/dothis" and then
> getting a "404 Not Found".  :-(

I was a little bit unprecise: It is not a 404 that is raised, it is a
"IndexError: 
string index out of range" that is displayed.

I have changed the code in "publisher.py" from

80:    if func_path[-1] == ".":
81:        func_path = func_path[:-1]

to the following: (the numbers on the left are the line numbers)

80:    if func_path == "":          # set method name to "default"
81:        func_path = "default"    # if none is specified in the URL
82:    elif func_path[-1] == ".":
83:        func_path = func_path[:-1]

(Actually, now it displays the 404 if no "default" method is present! ;-)
*argl*)

Now I have a default-method in each script and I can call scripts by 
"http://servername/scriptname/". It works! :-)

Please send me your comments about this change. Does anyone feel this should
be a 
default mod_python behavior? (I don't like to know my mod_python code only
works on 
my very own server and nowhere else, hugh!)

Cheers,
Peter


-- 
Peter Bittner
mobil: +43/(0)650/4151545
web: http://www.bittner.at.tf - http://beam.to/htmlkurs
mail: peter.bittner@gmx.net

"Free software is like free speech, not free beer" (Richard Stallman)

GMX - Die Kommunikationsplattform im Internet.
http://www.gmx.net
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/octet-stream
Size: 81 bytes
Desc: not available
Url : http://mailman.modpython.org/pipermail/mod_python/attachments/20020904/8932dce9/attachment-0001.obj
From rien at yeepa.org  Wed Sep  4 18:13:02 2002
From: rien at yeepa.org (Adrien Plisson)
Date: Fri Jan  9 21:53:06 2004
Subject: [mod_python] How can I have sensible URLs?
References: <20020904154555.EF66C9BB41@mail.fritzsch.net>
Message-ID: <000701c2542d$f23eab10$0a020101@skynet.be>

From: "Christoph Fritzsch" <christoph@cocon-seide.com>
> But why not seperate them by putting one script in in one file and wrap it
in one def:
> file "input.py" :
>
> def main():
>   all the code input needs
>   return 'the printout'
>
> and call it by http://.../libdb/input/main
> next file "maintainer.py":
> def main():
>  code
>  return 'xx'
> and call it by http://.../libdb/maintainer/main
>
> prerequisite is that the publisher is installed :-)

I was thinking that this was already the case, that's why i didn't precised
it in my previous reply.
so, yes, you can do it this way with the following addenda:

> The only disadvantage would be the trailing /main or whatever you should
call it if main
> is a reseverd word

the trailing main could be added on the server side with a mod_rewrite
RewriteRule, i.e. :
RewriteRule (.*/libd)/([^\.])\.py $1/$2/main
so a client request to:
http://.../libdb/input.py
would be rewriten and will look like:
http://.../libdb/input/main

(the RewriteRule is given in example and has not been tested, so don't
expect it to do the work as it should)

--
rien


From drh9296 at ritvax.rit.edu  Wed Sep  4 15:09:50 2002
From: drh9296 at ritvax.rit.edu (David Higgs)
Date: Fri Jan  9 21:53:06 2004
Subject: [mod_python] Re: How can I have sensible URLs?
References: <20020904160001.81353.92151.Mailman@eden.ispol.com>
Message-ID: <3D765A7E.6080203@rit.edu>

> I'm sure you can imagine that every script is doing a lot of stuff (printing
> out HTML forms, handling user actions and so on). - Let's see how I would
> implement this with mod_python:
> 
> - I would write one large mod_python script called "libdb.py" which contains
> basically the whole code of all the above listed scripts. Each of the above
> scripts I would replace by methods (handlers) like "def index():", "def
> input():", "def search():", etc.
> Then I've ended up with a huge, almost unmaintainable script.  :-(
> 
> Is there any way to avoid this?
> Would anyone tackle this problem differently?
> 
> Any help is greatly appreciated!
> Cheers, Peter

Have your root libdb.py do some error handling and parsing, and then 
execfile() the appropriate script for the request.  You can hide your 
scripts far away from the webserver directory for added security.

This might actually be what publisher does, but I haven't looked into it 
at all.

--david


From grisha at modpython.org  Wed Sep  4 16:07:58 2002
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 21:53:06 2004
Subject: [mod_python] How can I have sensible URLs?
In-Reply-To: <20103.1031144972@www25.gmx.net>
Message-ID: <Pine.BSF.4.32.0209041557540.83863-100000@eden.ispol.com>

You could also separate your app into different modules, then write
libdb.py so that all its functions do is call functions from your other
modules, e.g.:

Assuming there is a libsearch.py which contains all the code necessary
for searching, in libdb.py you'd have:

import libsearch

def search():
	return libsearch.search()

The only caveat with this approach is described here:

http://www.modpython.org/FAQ/faqw.py?req=show&file=faq03.001.htp

Grisha

On Wed, 4 Sep 2002, Peter Bittner wrote:

> In my case I think there is some more to it. I'll try to sketch it out:
> Say, I have the following scripts that form a user interface to a library
> database (say, I'm using Python over CGI for this one here)
>
> - http://www.mydomain.com/libdb/index.py
> - http://www.mydomain.com/libdb/input.py
> - http://www.mydomain.com/libdb/search.py
> - http://www.mydomain.com/libdb/reports.py
> - http://www.mydomain.com/libdb/maintain.py
>
> I'm sure you can imagine that every script is doing a lot of stuff (printing
> out HTML forms, handling user actions and so on). - Let's see how I would
> implement this with mod_python:
>
> - I would write one large mod_python script called "libdb.py" which contains
> basically the whole code of all the above listed scripts. Each of the above
> scripts I would replace by methods (handlers) like "def index():", "def
> input():", "def search():", etc.
> Then I've ended up with a huge, almost unmaintainable script.  :-(
>
> Is there any way to avoid this?
> Would anyone tackle this problem differently?


From scherrey at proteus-tech.com  Wed Sep  4 17:15:55 2002
From: scherrey at proteus-tech.com (Benjamin Scherrey)
Date: Fri Jan  9 21:53:06 2004
Subject: [mod_python] 3.0 & Apache 2.0 support
Message-ID: <200209041715.55379.scherrey@proteus-tech.com>

I'm looking to do my first mod_python install (to support a Quixote 
development) and I want to deploy on Apache 2.0. I see that a beta 
3.0 of mod_python is available that promises Apache 2.0 support but 
was wondering what the experiences here were with that. Is it usable? 
Busted? Any comments or suggestions would be appreciated.

	Ben Scherrey

From mateusz at ant.gliwice.pl  Thu Sep  5 11:59:00 2002
From: mateusz at ant.gliwice.pl (Mateusz Korniak)
Date: Fri Jan  9 21:53:06 2004
Subject: [mod_python] How can I have sensible URLs?
In-Reply-To: <16280.1031154973@www2.gmx.net>
References: <7845.1031130181@www2.gmx.net> <16280.1031154973@www2.gmx.net>
Message-ID: <200209041949.56749.mateusz@ant.gliwice.pl>

On Wednesday 04 September 2002 17:56, Peter Bittner wrote:
> > "Grisha" wrote:
> > > Basically, the publisher doesn't have a "default" method name. (There
> > > is no particular reason for this, it just didn't occur to me at the
> > > time of writing.)
>
> I have adapted my publisher.py so that is now takes a "default()" method by
> default
> if no one is specified in the URL. (See the the code below.)
>
> Do you think this adaption is worth being part of the "official"
> mod_python? 

I think It should.

> Anyone
> who finds this interesting? (Anyone who wouldn't like it?)

I would really like it :)

-- 
Mateusz Korniak




From gbenson at redhat.com  Thu Sep  5 11:40:19 2002
From: gbenson at redhat.com (Gary Benson)
Date: Fri Jan  9 21:53:06 2004
Subject: [mod_python] 3.0 & Apache 2.0 support
In-Reply-To: <200209041715.55379.scherrey@proteus-tech.com>; from scherrey@proteus-tech.com on Wed, Sep 04, 2002 at 05:15:55PM -0400
References: <200209041715.55379.scherrey@proteus-tech.com>
Message-ID: <20020905114018.A22389@redhat.com>

On Wed, Sep 04, 2002 at 05:15:55PM -0400, Benjamin Scherrey wrote:

> I'm looking to do my first mod_python install (to support a Quixote 
> development) and I want to deploy on Apache 2.0. I see that a beta 
> 3.0 of mod_python is available that promises Apache 2.0 support but 
> was wondering what the experiences here were with that. Is it usable? 
> Busted? Any comments or suggestions would be appreciated.

I've been using it with prefork and it's very usable indeed.

Cheers,
Gary

[ gbenson@redhat.com ][ GnuPG 85A8F78B ][ http://inauspicious.org/ ]

From jack_diederich at email.com  Thu Sep  5 13:24:04 2002
From: jack_diederich at email.com (Jack Diederich)
Date: Fri Jan  9 21:53:06 2004
Subject: [mod_python] _apache.so? where are you!
Message-ID: <20020905182405.16118.qmail@email.com>

I was trying to run a test script from the command line...

I was trying to call the parse_qs() routine, but it seems to need _apache.so, which is never built. _apachemodule.c which defines init_apache() is compiled into the mod_python.so module.  I tried putting mod_python.so in site-packages renamed as _apache.so, but it failed because it needs some apache symbols.

Is it just not possible to use misc mod_python routines from the command line, or does it just need a patch?

thanks,

-jack


-- 
__________________________________________________________
Sign-up for your own FREE Personalized E-mail at Mail.com
http://www.mail.com/?sr=signup


From grisha at modpython.org  Thu Sep  5 14:48:05 2002
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 21:53:06 2004
Subject: [mod_python] _apache.so? where are you!
In-Reply-To: <20020905182405.16118.qmail@email.com>
Message-ID: <Pine.BSF.4.32.0209051446470.95519-100000@eden.ispol.com>


On Thu, 5 Sep 2002, Jack Diederich wrote:

> Is it just not possible to use misc mod_python routines from the
> command line, or does it just need a patch?

I'm afraid it's not possible. _apache relies on many httpd functions and
can't exist outside of the httpd process.

Grisha


From scherrey at proteus-tech.com  Thu Sep  5 17:17:59 2002
From: scherrey at proteus-tech.com (Benjamin Scherrey)
Date: Fri Jan  9 21:53:06 2004
Subject: [mod_python] Trouble getting mod_python BETA3 running with Apache 2 under linux (RedHat 7.2)
Message-ID: <200209051718.00063.scherrey@proteus-tech.com>

What does mod_python mean when it says:
"python_handler: make_obcallback returned no obCallBack!, referer: 
http://localhost/python/"

In the error_log? I'm testing my mod_python install (per the online 
docs) and it doesn't seem to be running. When I start Apache it 
reports the presense of mod_python. Anything new for mod_python3 
under Apache 2 that I need to do to get it running?
	
	thanx & later,

			Ben Scherrey

From grisha at modpython.org  Thu Sep  5 17:39:31 2002
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 21:53:06 2004
Subject: [mod_python] Trouble getting mod_python BETA3 running with Apache
 2 under linux (RedHat 7.2)
In-Reply-To: <200209051718.00063.scherrey@proteus-tech.com>
Message-ID: <Pine.BSF.4.32.0209051738090.98161-100000@eden.ispol.com>

On Thu, 5 Sep 2002, Benjamin Scherrey wrote:

> What does mod_python mean when it says:
> "python_handler: make_obcallback returned no obCallBack!, referer:
> http://localhost/python/"
>
> In the error_log? I'm testing my mod_python install (per the online
> docs) and it doesn't seem to be running. When I start Apache it
> reports the presense of mod_python. Anything new for mod_python3
> under Apache 2 that I need to do to get it running?

Hmmm... AFAIK there aren't any *online* docs for mp 3.0 - you should
follow the docs in the tar file. :-)

Grisha




From scherrey at proteus-tech.com  Thu Sep  5 17:40:42 2002
From: scherrey at proteus-tech.com (Benjamin Scherrey)
Date: Fri Jan  9 21:53:06 2004
Subject: [mod_python] Trouble getting mod_python BETA3 running with Apache 2 under linux (RedHat 7.2)
In-Reply-To: <Pine.BSF.4.32.0209051738090.98161-100000@eden.ispol.com>
References: <Pine.BSF.4.32.0209051738090.98161-100000@eden.ispol.com>
Message-ID: <200209051740.43045.scherrey@proteus-tech.com>

Actually I figured it out - Its a problem with RedHat's insistence 
that python be python1.5 so the python2.2 executable is named 
python2. I renamed stuff and changed my path to put the python2 
directory first and it now works...  FWIW - the only docs I found in 
the tar file were .tex files. Maybe there's another file I'm supposed 
to download?

	thanx & later,

		Ben Scherrey

On Thursday 05 September 2002 05:39 pm, Gregory (Grisha) Trubetskoy 
wrote:
> On Thu, 5 Sep 2002, Benjamin Scherrey wrote:
> > What does mod_python mean when it says:
> > "python_handler: make_obcallback returned no obCallBack!,
> > referer: http://localhost/python/"
> >
> > In the error_log? I'm testing my mod_python install (per the
> > online docs) and it doesn't seem to be running. When I start
> > Apache it reports the presense of mod_python. Anything new for
> > mod_python3 under Apache 2 that I need to do to get it running?
>
> Hmmm... AFAIK there aren't any *online* docs for mp 3.0 - you
> should follow the docs in the tar file. :-)
>
> Grisha

From grisha at modpython.org  Thu Sep  5 18:10:47 2002
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 21:53:06 2004
Subject: [mod_python] Trouble getting mod_python BETA3 running with Apache
 2 under linux (RedHat 7.2)
In-Reply-To: <200209051740.43045.scherrey@proteus-tech.com>
Message-ID: <Pine.BSF.4.32.0209051806560.98637-100000@eden.ispol.com>

You're right, sorry, the docs slipped out somehow. I put a small tar file
with the docs in the same directory with the beta.

Grisha

On Thu, 5 Sep 2002, Benjamin Scherrey wrote:

> FWIW - the only docs I found in the tar file were .tex files. Maybe
> there's another file I'm supposed to download?


From scherrey at proteus-tech.com  Thu Sep  5 19:20:28 2002
From: scherrey at proteus-tech.com (Benjamin Scherrey)
Date: Fri Jan  9 21:53:06 2004
Subject: [mod_python] Trouble getting mod_python BETA3 running with Apache 2 under linux (RedHat 7.2)
In-Reply-To: <04B0284D-C126-11D6-A0B8-0030653DCC28@savagebeast.com>
References: <04B0284D-C126-11D6-A0B8-0030653DCC28@savagebeast.com>
Message-ID: <200209051920.28731.scherrey@proteus-tech.com>

Jeff -

	Thanx for the offer. I'd be interested in trying it out if this is 
indeed the problem. However, I don't see how it would be unless 
something in quixote or mod_python has got a hard coded reference to 
the python executable. I've got my python2.2 executable in the very 
first path position. Also - for mod_python support, am I supposed to 
have the qdemo directory be a subdirectory of the registered 
mod_python directory (it isn't) or as a subdirectory of the htdocs 
directory (where it is)? I'm not too clear on what kind of 
integration is going on between mod_python, python, and quixote.

	thanx & later,

		Ben Scherrey

On Thursday 05 September 2002 07:20 pm, Jeff Stearns wrote:
> Ben -
>
> This is a common problem; it typically occurs when mod_python is
> confused about Python is installed.
>
> I have a patch for mod_python; it adds a directive which allows you
> to specify the path to Python and its libraries.  This allows
> mod_python to work in an environment with multiple Python
> interpreters, or where you don't have write permission to the
> system-wide Python lib directory.
>
> I've previously offered it to Grisha for inclusion in the source
> tree, but he's not interested.  If you are, you can contact me
> directly and I'll send you the patch.
>
> -jeff stearns

From chengpua at yahoo.com  Thu Sep  5 18:49:46 2002
From: chengpua at yahoo.com (Cheng Pua)
Date: Fri Jan  9 21:53:06 2004
Subject: [mod_python] Problem in installing 3.0.0 Beta for windows
Message-ID: <20020906014946.37344.qmail@web12505.mail.yahoo.com>

I install 3.0.0 Beta for windows.  However, I could
not get "Hello World" example working.  This is the
error I got: 

python_handler: make_obcallback returned no
obCallBack!

Cheng

__________________________________________________
Do You Yahoo!?
Yahoo! Finance - Get real-time stock quotes
http://finance.yahoo.com

From rpinder at usc.edu  Thu Sep  5 22:12:25 2002
From: rpinder at usc.edu (Rich Pinder)
Date: Fri Jan  9 21:53:06 2004
Subject: [mod_python] 'ok' AttributeError / win32
Message-ID: <3D783939.8090802@usc.edu>

(Very) Newbie here...

I'm starting out with a win32 install (my linux server is 3 weeks away) - and trying to get a head start using 
ModPython.
Eventually, want to get ModPython working with Kinterbasedb & Firebird to do simple form based data storage 
for our cancer research study.

I've gotten the install done, found via the archives the 'gotcha' omission of adding  "AddModule 
mod_python.c", created the little mptest.py sample, and it KIND of works.... But seems to be complaining that 
there is no 'ok' attribute found.

Setup:
Apache/1.3.26  mod_python/2.7.6  Python 2.2.1  (Even though I've upgraded to the 2.7.8 version of the 
mod_python files -using the Apr 19 version of apache.py- the only dll I could find was 2.7.6)


Details of the error:

Hello ThisWorld
Mod_python error: "PythonHandler mptest"

Traceback (most recent call last):

   File "c:\python22\lib\mod_python\apache.py", line 193, in Dispatch
     result = object(req)

   File "c:/program files/apache group/apache/htdocs/python\mptest.py", line 7, in handler
     return apache.ok

AttributeError: 'module' object has no attribute 'ok'

.................

Thanks for any thoughts

Rich Pinder
USC School of Medicine


From ian at veryfresh.com  Thu Sep  5 23:47:13 2002
From: ian at veryfresh.com (Ian Clelland)
Date: Fri Jan  9 21:53:06 2004
Subject: [mod_python] 'ok' AttributeError / win32
In-Reply-To: <3D783939.8090802@usc.edu>
References: <3D783939.8090802@usc.edu>
Message-ID: <20020906064713.GH5501@fullfactor.com>

On Thu, Sep 05, 2002 at 10:12:25PM -0700, Rich Pinder wrote:
> (Very) Newbie here...
> 
> I've gotten the install done, found via the archives the 'gotcha' omission 
> of adding  "AddModule mod_python.c", created the little mptest.py sample, 
> and it KIND of works.... But seems to be complaining that there is no 'ok' 
> attribute found.

> AttributeError: 'module' object has no attribute 'ok'

Identifiers in Python are case-sensitive; try returning "apache.OK" instead of
"apache.ok"

Ian
<ian@veryfresh.com>

From peter.bittner at gmx.net  Fri Sep  6 14:22:25 2002
From: peter.bittner at gmx.net (Peter Bittner)
Date: Fri Jan  9 21:53:06 2004
Subject: [mod_python] Modifying publisher for sensible URLs
References: <16280.1031154973@www2.gmx.net>
Message-ID: <16960.1031314945@www20.gmx.net>

Hi!

I am happy there was some feedback about my modifications to the publisher
(although I know they are everything but brilliant! :-) ).

Could we discuss whether it were worth to change the publisher module so
that it offers some more flexibility as far as URLs are concerned? I'm afraid I
just don't know enough about the publisher to do some more serious
modifications. However, I've found some problems related to this issue:

1. "http://servername/path/script/" works, but
"http://servername/path/script" (without the trailing slash) doesn't. (I can imagine why, but don't know
how to fix it)

2. Provided I've set "index.py" to be one possibility for my
"DirectoryIndex" on Apache then omitting the scriptname in the URL "http://servername/path/"
should execute as "http://servername/path/script". But it seems that it
doesn't (it probably does as ".../script.py" which is not very helpful). (This
would be important to have fixed, too)

(To make this list complete add the following to the top of the list:
"http://servername/path/script/" (or "http://servername/path/script") should
execute as "http://servername/path/script/default". - That is what my
modifications where all about.)

I'd be really happy to see this being implemented in the publisher by
default. I am sure it would do good and would result in a better user acceptance.

Please, Grisha - and all the others that are interested, let's discuss this
out!

Cheers, Peter


> > "Grisha" wrote:
> > > Basically, the publisher doesn't have a "default" method name.
> > > (There is no particular reason for this, it just didn't occur to
> > > me at the time of writing.)
> 
> I have adapted my publisher.py so that is now takes a "default()" method
> by default if no one is specified in the URL. (See the the code below.)
> 
> Do you think this adaption is worth being part of the "official"
> mod_python? Anyone who finds this interesting? (Anyone who
> wouldn't like it?)
>
> [...]

-- 
Peter Bittner
mobil: +43/(0)650/4151545
web: http://www.bittner.at.tf - http://beam.to/htmlkurs
mail: peter.bittner@gmx.net

"Free software is like free speech, not free beer" (Richard Stallman)

GMX - Die Kommunikationsplattform im Internet.
http://www.gmx.net


From drh9296 at ritvax.rit.edu  Fri Sep  6 11:35:18 2002
From: drh9296 at ritvax.rit.edu (David Higgs)
Date: Fri Jan  9 21:53:06 2004
Subject: [mod_python] Modifying publisher for sensible URLs
References: <16280.1031154973@www2.gmx.net> <16960.1031314945@www20.gmx.net>
Message-ID: <3D78CB36.90207@rit.edu>

> Could we discuss whether it were worth to change the publisher module so
> that it offers some more flexibility as far as URLs are concerned? I'm afraid I
> just don't know enough about the publisher to do some more serious
> modifications. However, I've found some problems related to this issue:
> 
> 1. "http://servername/path/script/" works, but
> "http://servername/path/script" (without the trailing slash) doesn't. (I can imagine why, but don't know
> how to fix it)

That functionality is already possible if you roll your own handler. 
Depending on the amount of functionality you want, you may only need 20 
lines of code (or less) to parse and dispatch the request.

With the setup below, http://www.domain.com/util will be a call to 
util_handler.py.  The 'main' method called is always handler().  You'll 
use request.filename and request.path_info to determine what what 
requested.  In this case, the filename would be 
/path/to/your/script/util/index.html, and the path_info would be an 
empty string.

Here's an approximation of my setup:

<Location /util>
     Options -Indexes
     SetHandler python-program
     PythonPath "sys.path+['/path/to/your/script/util', 
'/path/to/your/modules']"
     PythonHandler util_handler
</Location>

bash$ cd /path/to/your/script/util/
bash$ ls
index.html      util_handler.py

The annoying part is that you *need* the index.html to prevent a 404 
error from happening before your script is called.  The content of 
index.html doesn't matter since it is never read; mine are all 
zero-length files.

I have also found that with multiple PythonHandlers, each script must be 
named differently to prevent caching issues.  This wasn't immediately 
obvious, since each httpd thread seemed to have a separate cache.

--david


From vmilitaru at sympatico.ca  Fri Sep  6 14:12:14 2002
From: vmilitaru at sympatico.ca (vio)
Date: Fri Jan  9 21:53:06 2004
Subject: [mod_python] Modifying publisher for sensible URLs
In-Reply-To: <3D78CB36.90207@rit.edu>; from drh9296@ritvax.rit.edu on Fri, Sep 06, 2002 at 11:35:18AM -0400
References: <16280.1031154973@www2.gmx.net> <16960.1031314945@www20.gmx.net> <3D78CB36.90207@rit.edu>
Message-ID: <20020906141214.A1800@eye.neb>

* David Higgs <drh9296@ritvax.rit.edu> [020906 13:40]:
> That functionality is already possible if you roll your own handler. 
> Depending on the amount of functionality you want, you may only need 20 
> lines of code (or less) to parse and dispatch the request.

If I may add, to me this is why mod_python is so damn exciting: its flexibility!With a little python under your belt, and basic understanding of how apache and
'request/response' kinda works, one can make it do absolutely whatever you want.
Adding more 'default' behaviour is nice too, put proportionally will rise the 
learning curve. As a point of comparison, Zope has a lot more functionality 
built-in (I mean 'out of the box'), but the learning curve is proportionally 
steeper, while drastically cutting into Zope's flexibility (in my opinion).
Did I mention that Zope has gotten so huge, with a lot of useless 'fat' 
if you only are looking for very specific functionality.
Flexibility = good, fat = bad.

My 2 c.
Vio

(PS. Hope I haven't started another religious war or Zope bashing campaign,
just wanted to point out that sometimes -though not always- 'leaner' is better)

From mod_python at ns1.tcu-inc.com  Fri Sep  6 21:32:13 2002
From: mod_python at ns1.tcu-inc.com (Mark Nielsen)
Date: Fri Jan  9 21:53:06 2004
Subject: [mod_python] new to list, will mod_python ever simulate what mod_perl does?
Message-ID: <200209070432.g874WDo17067@ns1.tcu-inc.com>

Hello!

I have been pushing myself to use Python more than Perl in the last few
years. I really really like the way mod_perl has turned out and how 
there are tons of modules developed for it. 

Although I use Zope, I don't use it for everything I do and a lot of times
I have no interest in using any publishing modulei for Apache -- yet.
Thus, I like to use the CGI hanlder for now. It caches scripts, modules,
and has hooks into Apache. 

The one thing I seem to be missing with the CGI handler is a standard
way to do persistent database connections. Is there one?

It would be really cool to port all the Perl modules for mod_perl over
to mod_python. Is anybody doing that?

One more thing, I tried to compile mod_python for Apache 2.0 and it keeps
seg faulting apache 2.0. I ma using Python 2.2.1 and RedHat 7.3. 
Anybody have similar problems but got it to work?

Thanks!
Mark




From fabbe at paniq.net  Sat Sep  7 16:37:10 2002
From: fabbe at paniq.net (Fabian Fagerholm)
Date: Fri Jan  9 21:53:06 2004
Subject: [mod_python] new to list, will mod_python ever simulate what
	mod_perl does?
In-Reply-To: <200209070432.g874WDo17067@ns1.tcu-inc.com>
References: <200209070432.g874WDo17067@ns1.tcu-inc.com>
Message-ID: <1031405830.26807.123.camel@kernel>

On Sat, 2002-09-07 at 07:32, Mark Nielsen wrote:
> The one thing I seem to be missing with the CGI handler is a standard
> way to do persistent database connections. Is there one?

Database stuff should be handled by the standard Python DBAPI. Use a
Python database module that supports persistent connections. If
connection pooling is enough and you're using PostgreSQL, try psycopg.

> It would be really cool to port all the Perl modules for mod_perl over
> to mod_python. Is anybody doing that?

Not that I'm aware of.
Which mod_perl modules would you like to have equivalents for in Python?

Note that Python itself has lots of functionality for many different
things. See the Python library reference:
http://www.python.org/doc/current/lib/lib.html

And as a side pointer, look at Albatross which is just perfect when
coupled with mod_python:
http://www.object-craft.com.au/projects/albatross/

If you don't want to program at such a low level then I suggest Webware
or Zope.

Cheers,
Fabian

-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 240 bytes
Desc: This is a digitally signed message part
Url : http://mailman.modpython.org/pipermail/mod_python/attachments/20020907/fe0c4b2b/attachment-0001.bin
From leader730 at hotmail.com  Fri Sep  6 23:48:13 2002
From: leader730 at hotmail.com (Leader730)
Date: Fri Jan  9 21:53:06 2004
Subject: [mod_python] getting clients ip address
Message-ID: <OE57YImWd1Go7tUPsyg0001f9c5@hotmail.com>

hello, I was wondering what was the function I can use to get the clients ip
address, I'm sure I saw it somewhere in the module docs but I can't find it
anymore D:

-----------------------
Too often we lose sight of life's simple pleasures. Remember when someone
annoys you it takes 42 muscles in your face to frown, BUT, it only takes 4
muscles to extend your arm and bitch-slap that mother@#?!&! upside the head!

From alain at onesite.org  Sat Sep  7 17:28:51 2002
From: alain at onesite.org (Alain Tesio)
Date: Fri Jan  9 21:53:06 2004
Subject: [mod_python] getting clients ip address
In-Reply-To: <OE57YImWd1Go7tUPsyg0001f9c5@hotmail.com>
References: <OE57YImWd1Go7tUPsyg0001f9c5@hotmail.com>
Message-ID: <20020907172851.1a142ba6.alain@onesite.org>

On Fri, 6 Sep 2002 23:48:13 -0400
"Leader730" <leader730@hotmail.com> wrote:

> 
> 
> hello, I was wondering what was the function I can use to get the clients ip
> address, I'm sure I saw it somewhere in the module docs but I can't find it
> anymore D:

req.connection.remote_ip

Alain

From peter.bittner at gmx.net  Sun Sep  8 11:44:04 2002
From: peter.bittner at gmx.net (Peter Bittner)
Date: Fri Jan  9 21:53:06 2004
Subject: [mod_python] Modifying publisher for sensible URLs
References: <3D78CB36.90207@rit.edu>
Message-ID: <3932.1031478244@www52.gmx.net>

Hi!

> That functionality is already possible if you roll your own handler. 

Well, I think almost everything is possible when you do a lot on your own.

What I am focusing on is on is to provide a little extra functionality -
just for publisher.py - that makes mod_python more straight forward and easier
to develop programs for. (I do not think that such 15 lines of extra code
would blow up mod_python enormously. It would only affect the publisher.)

From rpinder at usc.edu  Sun Sep  8 21:32:19 2002
From: rpinder at usc.edu (Rich Pinder)
Date: Fri Jan  9 21:53:06 2004
Subject: [mod_python] "Not Found" message with Publisher example
Message-ID: <3D7C2453.8020300@usc.edu>

Got the easy example workin fine from the Manual (3.2 section), but got hung up with the example that 
discusses how the Publisher works.  Edited the  .conf  file, created a new python script   mail.py, made a 
html form - but still get:

The requested URL /form/email was not found on this server.


I'm sure its a simple one - thanks for any thoughts !

Rich Pinder
USC School of Medicine




From fabbe at paniq.net  Mon Sep  9 12:00:11 2002
From: fabbe at paniq.net (Fabian Fagerholm)
Date: Fri Jan  9 21:53:06 2004
Subject: [mod_python] new to list, will mod_python ever simulate what
In-Reply-To: <200209090228.g892Ss622967@ns1.tcu-inc.com>
References: <200209090228.g892Ss622967@ns1.tcu-inc.com>
Message-ID: <1031562012.8377.81.camel@kernel>

On Mon, 2002-09-09 at 05:28, Mark Nielsen wrote:
> In Perl, the core DBI module takes care of all database connections which
> use DBI if you also use Apache DBI.
> I was thinking, there should be a standard way of doing it rather than
> relying on each database author.

Hence DBAPI.
http://www.python.org/topics/database/DatabaseAPI-2.0.html

> There should be a way to do it in Python irrelevant of which database
> connection you use. We would just need a way to make the database
> connections global variables which don't die. 

I agree that it would be useful to be able to keep any such objects
between browser requests. Perhaps there would be a way to place the
connection objects in the global namespace of each mod_python
subinterpreter so that they would continue to exist until the
subinterpreter dies?

But this is a separate issue from the "generic database access" issue.

> So, I guess, I probably will have to make up a way to do it. 
> I use MySQL, PostgreSQL, and Oracle, and also DBM, so I need one way
> for all database connections. 

Even the three SQL-capable ones have slight variations in the SQL syntax
which makes it hard to find a good lowest common denominator that could
be accepted as "standard".

I would write an abstract class that defines the behavior you need and
then four subclasses to implement that behavior for the four database
back-ends you mention. The interface to your application would be your
own, and the interface to each database would make use of DBAPI 2.0
modules specific to each database.

Making the abstract class "standard" makes little sense since it's
probably not very large or complicated, and it's often quite specific to
your application.

I also fail to see how Perl DBI solves certain issues. For example, if
you use Perl DBI and write an application that relies on transactional
capabilities of the database, and you move to a database without
transactional capabilities (MySQL with MyISAM tables, for instance) then
you'll have to adapt your code.
Also, in every single Perl DBI example I've seen, there's SQL embedded
in the code. I probably don't understand DBI but it seems to me that
this makes it essentially impossible to write code for, say, an Oracle
database that makes use of Oracle-specific features, and then run the
same code with a MySQL database as back-end. Or can DBI somehow emulate
the behavior of these databases?

So there really isn't any way out - the back-ends are just too
different. With good use of classes you can at least separate the
databases from the functional code in your particular application.

Cheers,
Fabian


-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 240 bytes
Desc: This is a digitally signed message part
Url : http://mailman.modpython.org/pipermail/mod_python/attachments/20020909/f0263eda/attachment-0001.bin
From fabbe at paniq.net  Mon Sep  9 12:07:24 2002
From: fabbe at paniq.net (Fabian Fagerholm)
Date: Fri Jan  9 21:53:06 2004
Subject: [mod_python] new to list, will mod_python ever simulate what
In-Reply-To: <200209090228.g892Ss622967@ns1.tcu-inc.com>
References: <200209090228.g892Ss622967@ns1.tcu-inc.com>
Message-ID: <1031562445.8385.84.camel@kernel>

On Mon, 2002-09-09 at 05:28, Mark Nielsen wrote:
> ...
> Mark

Please fix your mail server and/or your From: address.

Cheers,
Fabian

-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 240 bytes
Desc: This is a digitally signed message part
Url : http://mailman.modpython.org/pipermail/mod_python/attachments/20020909/fe7efdef/attachment-0001.bin
From lisicky at datis.cdrail.cz  Tue Sep 10 12:27:24 2002
From: lisicky at datis.cdrail.cz (Jiri Lisicky)
Date: Fri Jan  9 21:53:06 2004
Subject: [mod_python] free hosting?
Message-ID: <j4irnu81vavvh2bc7tde66ib68m34qigvo@4ax.com>

Is anywhere on the net free web hosting with mod_python instaled?

I search but found only zope or cgi.

thanks 

Jiri Lisicky

From gbenson at redhat.com  Thu Sep 12 11:25:30 2002
From: gbenson at redhat.com (Gary Benson)
Date: Fri Jan  9 21:53:06 2004
Subject: [mod_python] [PATCH] fix filter lookup failure
Message-ID: <20020912112529.B27092@redhat.com>

Hi,

ap_register_*_filter() normalizes the filter's name before it stores it
by converting it to lower case and removing special characters.  If the
name is not the same when normalized then python_filter() will not be
able to work out which filter it is and will segfault.  The attached
patch fixes.

Later,
Gary

[ gbenson@redhat.com ][ GnuPG 85A8F78B ][ http://inauspicious.org/ ]
-------------- next part --------------
ap_register_*_filter normalizes the filter's name, so we need to store
the normalized name for filter lookups rather than the name the user
registered it with.

Index: src/mod_python.c
===================================================================
RCS file: /cvsroot/modpython/mod_python/src/mod_python.c,v
retrieving revision 1.73
diff -u -r1.73 mod_python.c
--- src/mod_python.c	6 Sep 2002 22:06:28 -0000	1.73
+++ src/mod_python.c	11 Sep 2002 15:58:56 -0000
@@ -1479,23 +1479,24 @@
 
     py_config *conf;
     py_handler *fh;
+    ap_filter_rec_t *frec;
     
     if (!name)
         name = apr_pstrdup(cmd->pool, handler);
 
+    /* register the filter NOTE - this only works so long as the
+       directive is only allowed in the main config. For .htaccess we
+       would have to make sure not to duplicate this */
+    frec = ap_register_input_filter(name, python_input_filter, NULL, AP_FTYPE_CONNECTION);
+ 
     conf = (py_config *) mconfig;
 
     fh = (py_handler *) apr_pcalloc(cmd->pool, sizeof(py_handler));
     fh->handler = (char *)handler;
     fh->dir = conf->config_dir;
 
-    apr_hash_set(conf->in_filters, name, APR_HASH_KEY_STRING, fh);
+    apr_hash_set(conf->in_filters, frec->name, APR_HASH_KEY_STRING, fh);
 
-    /* register the filter NOTE - this only works so long as the
-       directive is only allowed in the main config. For .htaccess we
-       would have to make sure not to duplicate this */
-    ap_register_input_filter(name, python_input_filter, NULL, AP_FTYPE_CONNECTION);
- 
     return NULL;
 }
 
@@ -1503,23 +1504,24 @@
                                                 const char *handler, const char *name) {
     py_config *conf;
     py_handler *fh;
+    ap_filter_rec_t *frec;
  
     if (!name)
         name = apr_pstrdup(cmd->pool, handler);
 
+    /* register the filter NOTE - this only works so long as the
+       directive is only allowed in the main config. For .htaccess we
+       would have to make sure not to duplicate this */
+    frec = ap_register_output_filter(name, python_output_filter, NULL, AP_FTYPE_RESOURCE);
+ 
     conf = (py_config *) mconfig;
     
     fh = (py_handler *) apr_pcalloc(cmd->pool, sizeof(py_handler));
     fh->handler = (char *)handler;
     fh->dir = conf->config_dir;
 
-    apr_hash_set(conf->out_filters, name, APR_HASH_KEY_STRING, fh);
+    apr_hash_set(conf->out_filters, frec->name, APR_HASH_KEY_STRING, fh);
 
-    /* register the filter NOTE - this only works so long as the
-       directive is only allowed in the main config. For .htaccess we
-       would have to make sure not to duplicate this */
-    ap_register_output_filter(name, python_output_filter, NULL, AP_FTYPE_RESOURCE);
- 
     return NULL;
 }
 
From bakey at traq.com  Thu Sep 12 09:15:53 2002
From: bakey at traq.com (Brian Akey)
Date: Fri Jan  9 21:53:06 2004
Subject: [mod_python] Apache 2 and ModPython3
In-Reply-To: <20020912112529.B27092@redhat.com>
References: <20020912112529.B27092@redhat.com>
Message-ID: <1031840154.798.2.camel@g2.traq.com>

What am I missing?
I have tried both Gentoo 1.2 and Slackware 8.1
and compiled apache2 and modpython3 by hand and the httpd segfaults
every time
I go to the directory where my python code lives.
I am using python 2.2.1.
How can I get this to work?

bakey@traq.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mailman.modpython.org/pipermail/mod_python/attachments/20020912/6bb317ed/attachment-0001.htm
From gbenson at redhat.com  Thu Sep 12 17:39:46 2002
From: gbenson at redhat.com (Gary Benson)
Date: Fri Jan  9 21:53:07 2004
Subject: [mod_python] Filter chaining bug
Message-ID: <20020912173945.G27092@redhat.com>

Hi,

I've been playing around with chaining PythonOutputFilters and run into
a dead end.  It seems that mod_python can be the first filter in a chain
quite nicely but it can't be a subsequent filter and it's not obvious
why (to me, anyway).

The attached tarball contains a fragment of httpd.conf that sets up
filters from mod_python and mod_include in some directory.  Everything
works except

  data.flt.flt -- two mod_python filters chained, the second segfaults
  data.shtml.flt -- mod_include outputting into mod_python, mod_python
    segfaults

Is anyone else is able to reproduce this and/or does anyone know what is
wrong here?

Cheers,
Gary

[ gbenson@redhat.com ][ GnuPG 85A8F78B ][ http://inauspicious.org/ ]

From gbenson at redhat.com  Thu Sep 12 17:40:43 2002
From: gbenson at redhat.com (Gary Benson)
Date: Fri Jan  9 21:53:07 2004
Subject: [mod_python] Filter chaining bug (take 2)
Message-ID: <20020912174042.H27092@redhat.com>

Doh, forgot the tarball!

----- Forwarded message from Gary Benson <gbenson@redhat.com> -----

Date: Thu, 12 Sep 2002 17:39:46 +0100
From: Gary Benson <gbenson@redhat.com>
To: mod_python@modpython.org
Mail-Followup-To: mod_python@modpython.org
Subject: Filter chaining bug

Hi,

I've been playing around with chaining PythonOutputFilters and run into
a dead end.  It seems that mod_python can be the first filter in a chain
quite nicely but it can't be a subsequent filter and it's not obvious
why (to me, anyway).

The attached tarball contains a fragment of httpd.conf that sets up
filters from mod_python and mod_include in some directory.  Everything
works except

  data.flt.flt -- two mod_python filters chained, the second segfaults
  data.shtml.flt -- mod_include outputting into mod_python, mod_python
    segfaults

Is anyone else is able to reproduce this and/or does anyone know what is
wrong here?

Cheers,
Gary

[ gbenson@redhat.com ][ GnuPG 85A8F78B ][ http://inauspicious.org/ ]

----- End forwarded message -----
[ gbenson@redhat.com ][ GnuPG 85A8F78B ][ http://inauspicious.org/ ]
-------------- next part --------------
A non-text attachment was scrubbed...
Name: filter.tar.gz
Type: application/x-gzip
Size: 621 bytes
Desc: not available
Url : http://mailman.modpython.org/pipermail/mod_python/attachments/20020912/a4775706/filter.tar-0001.bin
From andres.meza at nuevosmedios.ws  Thu Sep 12 13:20:45 2002
From: andres.meza at nuevosmedios.ws (Andres Meza)
Date: Fri Jan  9 21:53:07 2004
Subject: [mod_python] How to upload files using mod_python's publisher handler?
Message-ID: <1031854845.5447.9.camel@coraje>

Greetings. 

I have created a python CGI script that can upload files sucessfully.
Now, I want to create a mod_python script with the same feature using
the "publisher" handler and I get this error:   


[Thu Sep 12 08:53:41 2002] [error] PythonHandler mod_python.publisher:
Traceback (most recent call last): 
[Thu Sep 12 08:53:41 2002] [error] PythonHandler mod_python.publisher:  
File
"/home/mrnet/rpm/tmp/mod_python-root/usr/lib/python2.2/site-packages/mod_python/apache.py", line 193, in Dispatch 
[Thu Sep 12 08:53:41 2002] [error] PythonHandler mod_python.publisher:  
File
"/home/mrnet/rpm/tmp/mod_python-root/usr/lib/python2.2/site-packages/mod_python/publisher.py", line 104, in handler 
[Thu Sep 12 08:53:41 2002] [error] PythonHandler mod_python.publisher:  
File
"/home/mrnet/rpm/tmp/mod_python-root/usr/lib/python2.2/site-packages/mod_python/publisher.py", line 308, in __init__ 
[Thu Sep 12 08:53:41 2002] [error] PythonHandler mod_python.publisher:
AttributeError: 'file' object has no attribute '__methods__' 

Anyone have an idea about why I get this error? 

Thanks for your time, 
-- 
   Andr?s Meza
   Technical Manager
 __Nuevos Medios - NM S.A.____________________
   e-mail:         andres.meza@nuevosmedios.ws
   day time phone: (+572)6827794 ext.102
   url:            www.nuevosmedios.ws
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mailman.modpython.org/pipermail/mod_python/attachments/20020912/31ee3b44/attachment-0001.htm
From grisha at modpython.org  Thu Sep 12 18:25:45 2002
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 21:53:07 2004
Subject: [mod_python] ANNOUNCE: Mod_Python donated to ASF
Message-ID: <Pine.BSF.4.32.0209121812020.92256-100000@eden.ispol.com>

It is my pleasure to announce that Mod_Python has been donated to the
Apache Software Foundation, and is now a subproject of the httpd server
project (see http://httpd.apache.org/).

I am grateful to ASF for accepting this donation and committing resources
to further the support of Mod_Python. I believe that this action will
advance the development of Mod_Python, resulting in an ultimately better
and more popular tool for Python developers. I also believe it will serve
to better position Python as a language of choice for web development, a
need that has been expressed by many.

There are no implications to the current Mod_Python users - the license is
the same with the sole difference in that the copyright belongs to ASF
now.

As a consequense of the donation, the CVS repository is now hosted on
cvs.apache.org.  Do not use the SourceForge repository anymore, it will
soon be removed.

There will also be website and mailing changes, but the details are still
being finalized and will be announced when ready.

Regards,

Grisha Trubetskoy



From neel at mediapulse.com  Thu Sep 12 18:37:20 2002
From: neel at mediapulse.com (Michael C. Neel)
Date: Fri Jan  9 21:53:07 2004
Subject: [mod_python] ANNOUNCE: Mod_Python donated to ASF
Message-ID: <C0FC22C08B82074A88B50061764157772C63C6@johnson.mediapulse.net>

Let me be the first to say, in the fashion that the Internet has taught
us to celebrate a great victory or other action....

Woot.

Mike

--
Michael C. Neel
There are only 10 types of people in the world;
those who understand binary and those who don't.


-----Original Message-----
From: Gregory (Grisha) Trubetskoy [mailto:grisha@modpython.org] 
Sent: Thursday, September 12, 2002 6:26 PM
To: mod_python@modpython.org; python-list@python.org;
announce@apache.org; dev@httpd.apache.org
Cc: jim@apache.org
Subject: [mod_python] ANNOUNCE: Mod_Python donated to ASF



It is my pleasure to announce that Mod_Python has been donated to the
Apache Software Foundation, and is now a subproject of the httpd server
project (see http://httpd.apache.org/).

I am grateful to ASF for accepting this donation and committing
resources
to further the support of Mod_Python. I believe that this action will
advance the development of Mod_Python, resulting in an ultimately better
and more popular tool for Python developers. I also believe it will
serve
to better position Python as a language of choice for web development, a
need that has been expressed by many.

There are no implications to the current Mod_Python users - the license
is
the same with the sole difference in that the copyright belongs to ASF
now.

As a consequense of the donation, the CVS repository is now hosted on
cvs.apache.org.  Do not use the SourceForge repository anymore, it will
soon be removed.

There will also be website and mailing changes, but the details are
still
being finalized and will be announced when ready.

Regards,

Grisha Trubetskoy


_______________________________________________
Mod_python mailing list
Mod_python@modpython.org
http://www.modpython.org/mailman/listinfo/mod_python


From jack_diederich at email.com  Thu Sep 12 17:45:21 2002
From: jack_diederich at email.com (Jack Diederich)
Date: Fri Jan  9 21:53:07 2004
Subject: [mod_python] ANNOUNCE: Mod_Python donated to ASF
Message-ID: <20020912224521.7047.qmail@email.com>

Congrats!

This can only be seen as a Good Thing

-jack
-- 
__________________________________________________________
Sign-up for your own FREE Personalized E-mail at Mail.com
http://www.mail.com/?sr=signup


From vmilitaru at sympatico.ca  Thu Sep 12 22:11:22 2002
From: vmilitaru at sympatico.ca (vio)
Date: Fri Jan  9 21:53:07 2004
Subject: [mod_python] ANNOUNCE: Mod_Python donated to ASF
In-Reply-To: <Pine.BSF.4.32.0209121812020.92256-100000@eden.ispol.com>; from grisha@modpython.org on Thu, Sep 12, 2002 at 06:25:45PM -0400
References: <Pine.BSF.4.32.0209121812020.92256-100000@eden.ispol.com>
Message-ID: <20020912221122.A1410@eye.neb>

Congrats to Gregory for this 'official' recognition for the great work he did
with mod_python. And thank you to the apache board for recognising the need
for an 'official' python effort in such an open way. Let's face it, there is no
better place for an apache module to live but close to apache (httpd)'s place.
Certainly the most intuitive place from a user's perspective. And this official
blessing brings the additional advantage to cut through the confusion: there
are not 10 'official' python' flavored apaches for a newcomer to choose from.
(enough headaches just installing the beast and learning it)

Regards,
Vio

* Gregory (Grisha) Trubetskoy <grisha@modpython.org> [020912 20:57]:
> 
> It is my pleasure to announce that Mod_Python has been donated to the
> Apache Software Foundation, and is now a subproject of the httpd server
> project (see http://httpd.apache.org/).
> 
> I am grateful to ASF for accepting this donation and committing resources
> to further the support of Mod_Python. I believe that this action will
> advance the development of Mod_Python, resulting in an ultimately better
> and more popular tool for Python developers. I also believe it will serve
> to better position Python as a language of choice for web development, a
> need that has been expressed by many.
> 
> There are no implications to the current Mod_Python users - the license is
> the same with the sole difference in that the copyright belongs to ASF
> now.
> 
> As a consequense of the donation, the CVS repository is now hosted on
> cvs.apache.org.  Do not use the SourceForge repository anymore, it will
> soon be removed.
> 
> There will also be website and mailing changes, but the details are still
> being finalized and will be announced when ready.
> 
> Regards,
> 
> Grisha Trubetskoy
> 
> 
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://www.modpython.org/mailman/listinfo/mod_python

From neel at mediapulse.com  Fri Sep 13 00:40:32 2002
From: neel at mediapulse.com (Michael Neel)
Date: Fri Jan  9 21:53:07 2004
Subject: [mod_python] Mod_Python 3 / Apache 2 / RedHat 7.3 / Python 2.2 = Seg fault :(
Message-ID: <000001c25adf$b2039020$0400a8c0@clapton>

I'm having a bit of trouble trying to get mod_python beta 3 to run on
apache 2.  I get a line like:

[Thu Sep 12 23:31:21 2002] [notice] child pid 3768 exit signal
Segmentation fault (11)

Whenever I load mod_python no matter what page I hit, .py or otherwise.
I'm running RH 7.3 and I've copied the python2.2 binary over the python
one so I have python2.2 as default so this could be related to a path
issue of lib's but I'll be damned if I can find it.

My compile options for apache were basic; --with-mpm=worker and
--enable-mods-shared=all.  Mod_python I just past in the path to apxs.
I didn't see anything about beta 3 not working with worker threads (the
way I'd prefer apache to run), but I've tried prefork as well with the
same results.

Any tips or ideas would help greatly.  I've looked though the list
archives and couldn't find anything, but to be stuck at this small of a
step means I've overlooked something basic...

Mike

--
Michael C. Neel
There are only 10 types of people in the world;
those who understand binary and those who don't.


From fabbe at paniq.net  Fri Sep 13 10:02:55 2002
From: fabbe at paniq.net (Fabian Fagerholm)
Date: Fri Jan  9 21:53:07 2004
Subject: [mod_python] ANNOUNCE: Mod_Python donated to ASF
In-Reply-To: <Pine.BSF.4.32.0209121812020.92256-100000@eden.ispol.com>
References: <Pine.BSF.4.32.0209121812020.92256-100000@eden.ispol.com>
Message-ID: <1031900581.6954.103.camel@kernel>

On Fri, 2002-09-13 at 01:25, Gregory (Grisha) Trubetskoy wrote:
> It is my pleasure to announce that Mod_Python has been donated to the
> Apache Software Foundation, and is now a subproject of the httpd server
> project (see http://httpd.apache.org/).

My congratulations to you Grisha for pulling this off - I think this
will be a good thing for the Python language in general and mod_python
users in particular. Not to mention the benefits that Apache users will
probably see.

Cheers,
Fabian

-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 240 bytes
Desc: This is a digitally signed message part
Url : http://mailman.modpython.org/pipermail/mod_python/attachments/20020913/ac1bf2c8/attachment-0001.bin
From jfk at metation.com  Fri Sep 13 09:31:30 2002
From: jfk at metation.com (=?iso-8859-1?q?J=F8rgen=20Fr=F8jk=20Kj=E6rsgaard=20{Metation}?=)
Date: Fri Jan  9 21:53:07 2004
Subject: [mod_python] ANNOUNCE: Mod_Python donated to ASF
In-Reply-To: <Pine.BSF.4.32.0209121812020.92256-100000@eden.ispol.com>
References: <Pine.BSF.4.32.0209121812020.92256-100000@eden.ispol.com>
Message-ID: <0209130931300R.00311@grace.metation.com>

Congratulatiuons!

I think this is a great step forward for Python as a web language and 
mod_python in particular. mod_python really deserves the exposure it can get 
through apache.org.

/jfk

From mbp at samba.org  Fri Sep 13 18:10:42 2002
From: mbp at samba.org (Martin Pool)
Date: Fri Jan  9 21:53:07 2004
Subject: [mod_python] Mod_Python 3 / Apache 2 / RedHat 7.3 / Python 2.2 = Seg fault :(
In-Reply-To: <000001c25adf$b2039020$0400a8c0@clapton>
References: <000001c25adf$b2039020$0400a8c0@clapton>
Message-ID: <20020913081040.GI8093@samba.org>

On 13 Sep 2002, Michael Neel <neel@mediapulse.com> wrote:
> I'm having a bit of trouble trying to get mod_python beta 3 to run on
> apache 2.  I get a line like:
> 
> [Thu Sep 12 23:31:21 2002] [notice] child pid 3768 exit signal
> Segmentation fault (11)
> 
> Whenever I load mod_python no matter what page I hit, .py or otherwise.
> I'm running RH 7.3 and I've copied the python2.2 binary over the python
> one so I have python2.2 as default so this could be related to a path
> issue of lib's but I'll be damned if I can find it.
> 
> My compile options for apache were basic; --with-mpm=worker and
> I didn't see anything about beta 3 not working with worker threads (the
> way I'd prefer apache to run), but I've tried prefork as well with the
> same results.
> 
> Any tips or ideas would help greatly.  I've looked though the list
> archives and couldn't find anything, but to be stuck at this small of a
> step means I've overlooked something basic...

Try running apache under gdb?  Something like this:

  # gdb /usr/sbin/apache2
  [blah blah]
  gdb> run -X

Then try to access a page.  Apache should stop in gdb, and it might
tell you where the problem is.

-- 
Martin 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
Url : http://mailman.modpython.org/pipermail/mod_python/attachments/20020913/284089f0/attachment-0001.bin
From list-mod_python at empires.org  Fri Sep 13 01:36:58 2002
From: list-mod_python at empires.org (Jeff Davis)
Date: Fri Jan  9 21:53:07 2004
Subject: [mod_python] Segfault for me as well
In-Reply-To: <000001c25adf$b2039020$0400a8c0@clapton>
References: <000001c25adf$b2039020$0400a8c0@clapton>
Message-ID: <200209130136.58171.list-mod_python@empires.org>

I have the same segfault problem that someone else mentioned earlier. I am on 
debian unstable, and have the current package for apache2 installed 
(mpm-prefork), and I built it with:

./configure --with-apxs=/usr/bin/apxs2
make dso
make install

However, I had to set the variable "PYTHONBIN" in the Makefile, it wasn't set 
up for me automatically. I think that is just a minor problem with the build 
system on my platform. I couldn't find anything in the configure script to 
suggest that it was trying to set that variable.

Anyway, after I did get it built it simply segfaulted every time that I 
accessed the server. 

I know a little C, so I will look into this a little. If I have time I will 
try to deal with both of these issues (the build issue and the segfault). 

By the way, is this list the proper development forum? I don't see a lot of 
development discussion here.

Regards,
	Jeff

On Thursday 12 September 2002 09:40 pm, Michael Neel wrote:
> I'm having a bit of trouble trying to get mod_python beta 3 to run on
> apache 2.  I get a line like:
>
> [Thu Sep 12 23:31:21 2002] [notice] child pid 3768 exit signal
> Segmentation fault (11)
>
> Whenever I load mod_python no matter what page I hit, .py or otherwise.
> I'm running RH 7.3 and I've copied the python2.2 binary over the python
> one so I have python2.2 as default so this could be related to a path
> issue of lib's but I'll be damned if I can find it.
>
> My compile options for apache were basic; --with-mpm=worker and
> --enable-mods-shared=all.  Mod_python I just past in the path to apxs.
> I didn't see anything about beta 3 not working with worker threads (the
> way I'd prefer apache to run), but I've tried prefork as well with the
> same results.
>
> Any tips or ideas would help greatly.  I've looked though the list
> archives and couldn't find anything, but to be stuck at this small of a
> step means I've overlooked something basic...
>
> Mike


From list-mod_python at empires.org  Fri Sep 13 02:03:37 2002
From: list-mod_python at empires.org (Jeff Davis)
Date: Fri Jan  9 21:53:07 2004
Subject: [mod_python] patch for build
Message-ID: <200209130203.37120.list-mod_python@empires.org>

I mentioned a problem with the build on my system, wherein the PYTHONBIN 
variable was not being defined in the Makefile. Here is a simple patch to 
Makefile.in (from the old to the new) that just adds the PYTHONBIN variable 
(and sets it to the PYTHON_BIN variable of the configure script).

I am not too familiar with build systems, so forgive me if I'm way off track 
about how to change these things. Or, maybe I just wasn't building it 
properly in the first place and it was working the whole time.

Regards,
	Jeff

--- Makefile.in~	2002-08-11 19:01:15.000000000 -0700
+++ Makefile.in	2002-09-13 01:56:50.000000000 -0700
@@ -50,6 +50,7 @@
 AP_SRC_GRP=@AP_SRC_GRP@
 INSTALL=@INSTALL@
 PY_STD_LIB=@PY_STD_LIB@
+PYTHONBIN=@PYTHON_BIN@
 
 all: @ALL@
 


From vmanera at manord.com  Fri Sep 13 11:05:25 2002
From: vmanera at manord.com (Manera, Villiam)
Date: Fri Jan  9 21:53:07 2004
Subject: R: [mod_python] How to upload files using mod_python's publisher 
	handler?
Message-ID: <52DC70C1C1575C418CB033523A29CF140E0483@exchange2000.manord.com>

try this: 

 publisher.py patched with this function work fine!!!!

class File:

""" Like a file, but also has headers and filename

"""

def __init__(self, field):

# steal all the file-like methods

#for m in field.file.__methods__:

#for m in dir(field.file): #dont' work

for m in self.sim_methods(field.file):

self.__dict__[m] = getattr(field.file, m)

self.headers = field.headers

self.filename = field.filename

def sim_methods(self,obj):

from types import BuiltinMethodType #parte aggiunta

return filter(lambda s, t=obj:

type(getattr(t, s)) == BuiltinMethodType, dir(obj))

 

 

Villiam

-----Messaggio originale-----
Da: Andres Meza [mailto:andres.meza@nuevosmedios.ws]
Inviato: gioved? 12 settembre 2002 20.21
A: mod_python@modpython.org
Oggetto: [mod_python] How to upload files using mod_python's publisher
handler?


Greetings. 

I have created a python CGI script that can upload files sucessfully. Now, I
want to create a mod_python script with the same feature using the
"publisher" handler and I get this error:   


[Thu Sep 12 08:53:41 2002] [error] PythonHandler mod_python.publisher:
Traceback (most recent call last): 
[Thu Sep 12 08:53:41 2002] [error] PythonHandler mod_python.publisher:
File
"/home/mrnet/rpm/tmp/mod_python-root/usr/lib/python2.2/site-packages/mod_pyt
hon/apache.py", line 193, in Dispatch 
[Thu Sep 12 08:53:41 2002] [error] PythonHandler mod_python.publisher:
File
"/home/mrnet/rpm/tmp/mod_python-root/usr/lib/python2.2/site-packages/mod_pyt
hon/publisher.py", line 104, in handler 
[Thu Sep 12 08:53:41 2002] [error] PythonHandler mod_python.publisher:
File
"/home/mrnet/rpm/tmp/mod_python-root/usr/lib/python2.2/site-packages/mod_pyt
hon/publisher.py", line 308, in __init__ 
[Thu Sep 12 08:53:41 2002] [error] PythonHandler mod_python.publisher:
AttributeError: 'file' object has no attribute '__methods__' 

Anyone have an idea about why I get this error? 

Thanks for your time, 

-- 

   Andr?s Meza

   Technical Manager

 __Nuevos Medios - NM S.A.____________________

   e-mail:         andres.meza@nuevosmedios.ws

   day time phone: (+572)6827794 ext.102

   url:            www.nuevosmedios.ws

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mailman.modpython.org/pipermail/mod_python/attachments/20020913/3e8fc6ec/attachment-0001.htm
From list-mod_python at empires.org  Fri Sep 13 02:34:23 2002
From: list-mod_python at empires.org (Jeff Davis)
Date: Fri Jan  9 21:53:07 2004
Subject: [mod_python] Mod_Python 3 / Apache 2 / RedHat 7.3 / Python 2.2 = Seg fault :(
In-Reply-To: <20020913081040.GI8093@samba.org>
References: <000001c25adf$b2039020$0400a8c0@clapton> <20020913081040.GI8093@samba.org>
Message-ID: <200209130234.23802.list-mod_python@empires.org>

> Try running apache under gdb?  Something like this:
>
>   # gdb /usr/sbin/apache2
>   [blah blah]
>   gdb> run -X
>
> Then try to access a page.  Apache should stop in gdb, and it might
> tell you where the problem is.

I tried both gdb and valgrind and supplied the -X argument for each. When I 
hit a page, all it said was "Segmentation Fault" (for valgrind, and gdb was 
similar: "Program received signal SIGSEGV, Segmentation fault."). GDB also 
said "0x402611bb in strlen () from /lib/libc.so.6" after the SIGSEGV, which 
might be helpful. 

Is there something I should be doing differently? I am not really good with 
debuggers.

Valgrind also produced a couple mutex errors for my apache2 even without 
loading mod_python, so it could, I suppose, be a problem with apache2 
(however apache2 seems to function just fine for static pages & cgi).

Regards,
	Jeff

From mbp at samba.org  Fri Sep 13 19:47:21 2002
From: mbp at samba.org (Martin Pool)
Date: Fri Jan  9 21:53:07 2004
Subject: [mod_python] Mod_Python 3 / Apache 2 / RedHat 7.3 / Python 2.2 = Seg fault :(
In-Reply-To: <200209130234.23802.list-mod_python@empires.org>
References: <000001c25adf$b2039020$0400a8c0@clapton> <20020913081040.GI8093@samba.org> <200209130234.23802.list-mod_python@empires.org>
Message-ID: <20020913094720.GL8093@samba.org>

On 13 Sep 2002, Jeff Davis <list-mod_python@empires.org> wrote:
> > Try running apache under gdb?  Something like this:
> >
> >   # gdb /usr/sbin/apache2
> >   [blah blah]
> >   gdb> run -X
> >
> > Then try to access a page.  Apache should stop in gdb, and it might
> > tell you where the problem is.
> 
> I tried both gdb and valgrind and supplied the -X argument for each. When I 
> hit a page, all it said was "Segmentation Fault" (for valgrind, and gdb was 
> similar: "Program received signal SIGSEGV, Segmentation fault."). GDB also 
> said "0x402611bb in strlen () from /lib/libc.so.6" after the SIGSEGV, which 
> might be helpful. 

OK, good.  Now once you get to that point, type 

  gdb> backtrace full

to get some info on where the call to strlen() that caused trouble
came from.  

-- 
Martin 

From neel at mediapulse.com  Fri Sep 13 11:12:55 2002
From: neel at mediapulse.com (Michael C. Neel)
Date: Fri Jan  9 21:53:07 2004
Subject: [mod_python] Mod_Python 3 / Apache 2 / RedHat 7.3 / Python 2.2 = Seg fault :(
Message-ID: <C0FC22C08B82074A88B50061764157775BA8@johnson.mediapulse.net>

I take it you are having a similar problem?

I'm not able to get gdb to run on apache2; it runs but I cannot connect
to it.  I'm not really familiar with gdb, so I'm not sure what I have to
do to get it to run.

I'm trying out compiling mod_python with different arguments to see if
anything fixes it.  It might also be python 2.2, I need to upgrade to
2.2.1 and see where that leads.

Mike
--
Michael C. Neel
There are only 10 types of people in the world;
those who understand binary and those who don't.

-----Original Message-----
From: Martin Pool [mailto:mbp@samba.org] 
Sent: Friday, September 13, 2002 5:47 AM
To: Jeff Davis
Cc: Michael C. Neel; mod_python@modpython.org
Subject: Re: [mod_python] Mod_Python 3 / Apache 2 / RedHat 7.3 / Python
2.2 = Seg fault :(


On 13 Sep 2002, Jeff Davis <list-mod_python@empires.org> wrote:
> > Try running apache under gdb?  Something like this:
> >
> >   # gdb /usr/sbin/apache2
> >   [blah blah]
> >   gdb> run -X
> >
> > Then try to access a page.  Apache should stop in gdb, and it might
> > tell you where the problem is.
> 
> I tried both gdb and valgrind and supplied the -X argument for each.
When I 
> hit a page, all it said was "Segmentation Fault" (for valgrind, and
gdb was 
> similar: "Program received signal SIGSEGV, Segmentation fault."). GDB
also 
> said "0x402611bb in strlen () from /lib/libc.so.6" after the SIGSEGV,
which 
> might be helpful. 

OK, good.  Now once you get to that point, type 

  gdb> backtrace full

to get some info on where the call to strlen() that caused trouble
came from.  

-- 
Martin 


From andres.meza at nuevosmedios.ws  Fri Sep 13 10:52:44 2002
From: andres.meza at nuevosmedios.ws (Andres Meza)
Date: Fri Jan  9 21:53:07 2004
Subject: R: [mod_python] How to upload files using mod_python's	publisher
 handler?
In-Reply-To: <52DC70C1C1575C418CB033523A29CF140E0483@exchange2000.manord.com>
References: <52DC70C1C1575C418CB033523A29CF140E0483@exchange2000.manord.com>
Message-ID: <1031932364.2958.15.camel@coraje>

It works quite well!

Thanks a lot for your patch. Do you know if this bug-fix or the
equivalent one will be included in future versions of mod_python ?

Best regards,
-- 
   Andr?s Meza
   Technical Manager
 __Nuevos Medios - NM S.A.____________________
   e-mail:         andres.meza@nuevosmedios.ws
   day time phone: (+572)6827794 ext.102
   url:            www.nuevosmedios.ws

El vie, 13-09-2002 a las 04:05, Manera, Villiam escribi?:

    try this: 
    
     publisher.py patched with this function work fine!!!!
    
    class File:
    
    """ Like a file, but also has headers and filename
    
    """
    
    def __init__(self, field):
    
    # steal all the file-like methods
    
    #for m in field.file.__methods__:
    
    #for m in dir(field.file): #dont' work
    
    for m in self.sim_methods(field.file):
    
    self.__dict__[m] = getattr(field.file, m)
    
    self.headers = field.headers
    
    self.filename = field.filename
    
    def sim_methods(self,obj):
    
    from types import BuiltinMethodType #parte aggiunta
    
    return filter(lambda s, t=obj:
    
    type(getattr(t, s)) == BuiltinMethodType, dir(obj))
    
     
    
     
    
    Villiam

        -----Messaggio originale-----
        Da: Andres Meza [mailto:andres.meza@nuevosmedios.ws]
        Inviato: gioved? 12 settembre 2002 20.21
        A: mod_python@modpython.org
        Oggetto: [mod_python] How to upload files using mod_python's
        publisher handler?
        
        
        Greetings. 
        
        I have created a python CGI script that can upload files
        sucessfully. Now, I want to create a mod_python script with the
        same feature using the "publisher" handler and I get this
        error:   
        
        
        [Thu Sep 12 08:53:41 2002] [error] PythonHandler
        mod_python.publisher: Traceback (most recent call last): 
        [Thu Sep 12 08:53:41 2002] [error] PythonHandler
        mod_python.publisher:   File
        "/home/mrnet/rpm/tmp/mod_python-root/usr/lib/python2.2/site-packages/mod_python/apache.py", line 193, in Dispatch 
        [Thu Sep 12 08:53:41 2002] [error] PythonHandler
        mod_python.publisher:   File
        "/home/mrnet/rpm/tmp/mod_python-root/usr/lib/python2.2/site-packages/mod_python/publisher.py", line 104, in handler 
        [Thu Sep 12 08:53:41 2002] [error] PythonHandler
        mod_python.publisher:   File
        "/home/mrnet/rpm/tmp/mod_python-root/usr/lib/python2.2/site-packages/mod_python/publisher.py", line 308, in __init__ 
        [Thu Sep 12 08:53:41 2002] [error] PythonHandler
        mod_python.publisher: AttributeError: 'file' object has no
        attribute '__methods__' 
        
        Anyone have an idea about why I get this error? 
        
        Thanks for your time, 
        -- 
           Andr?s Meza
           Technical Manager
         __Nuevos Medios - NM S.A.____________________
           e-mail:         andres.meza@nuevosmedios.ws
           day time phone: (+572)6827794 ext.102
           url:            www.nuevosmedios.ws


-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mailman.modpython.org/pipermail/mod_python/attachments/20020913/d5b46a96/attachment-0001.htm
From bryan at eevolved.com  Fri Sep 13 16:04:02 2002
From: bryan at eevolved.com (Bryan Mongeau)
Date: Fri Jan  9 21:53:07 2004
Subject: [mod_python] Mod_python 3.0 BETA / Apache2 segfault
Message-ID: <200209131604.02633.bryan@eevolved.com>

Hello,

I have tested out the 3.0 BETA with apache 2 and discovered a segfault.

$ gdb ./httpd
GNU gdb 5.2.1
(gdb) run -X
Starting program: /usr/local/apache2/bin/httpd -X

Program received signal SIGSEGV, Segmentation fault.
0x400e8eef in apr_pstrcat (a=0x81d7fe8) at apr_strings.c:175
175             apr_size_t cplen = strlen(cp);
(gdb) bt
#0  0x400e8eef in apr_pstrcat (a=0x81d7fe8) at apr_strings.c:175
#1  0x402ed68d in python_handler (req=0x81d8020, phase=0x40369247 
"PythonTransHandler")
    at mod_python.c:764
#2  0x402eea6d in PythonTransHandler (req=0x81d8020) at mod_python.c:1687
#3  0x0808cd48 in ap_run_translate_name (r=0x81d8020) at request.c:108
#4  0x0808d5ec in ap_process_request_internal (r=0x81d8020) at request.c:167
#5  0x08069e02 in ap_process_request (r=0x81d8020) at http_request.c:255
#6  0x08065dab in ap_process_http_connection (c=0x81d40e0) at http_core.c:293
#7  0x080831c8 in ap_run_process_connection (c=0x81d40e0) at connection.c:85
#8  0x0808346f in ap_process_connection (c=0x81d40e0, csd=0x81d4010) at 
connection.c:207
#9  0x08078cc2 in child_main (child_num_arg=0) at prefork.c:696
#10 0x08078d80 in make_child (s=0x80b5378, slot=0) at prefork.c:736
#11 0x08078e71 in startup_children (number_to_start=5) at prefork.c:808
#12 0x0807917d in ap_mpm_run (_pconf=0x80b2cb0, plog=0x80ead90, s=0x80b5378) 
at prefork.c:1024
#13 0x0807e67c in main (argc=2, argv=0xbffff934) at main.c:645
#14 0x401933c1 in __libc_start_main () from /lib/libc.so.6


FIX: Comment out lines 764-767 and 770 of mod_python.c. Seems to compile and 
run fine. Impact on functionality unknown.

Please advise,
-- 
Bryan Mongeau
eEvolved Inc. - IT Consulting & Custom Software
http://eevolved.com/
--
"The hardest thing in the world to understand is the income tax."-- Einstein


From list-mod_python at empires.org  Fri Sep 13 14:00:16 2002
From: list-mod_python at empires.org (Jeff Davis)
Date: Fri Jan  9 21:53:07 2004
Subject: [mod_python] Mod_python 3.0 BETA / Apache2 segfault
In-Reply-To: <200209131604.02633.bryan@eevolved.com>
References: <200209131604.02633.bryan@eevolved.com>
Message-ID: <200209131400.16448.list-mod_python@empires.org>

Thanks!

For those who don't want to find those lines in the file, a patch is included 
below this message.

I don't know what the impact of that is either. I hope it's good :)

Regards,
	Jeff


On Friday 13 September 2002 09:04 am, Bryan Mongeau wrote:
> Hello,
>
> I have tested out the 3.0 BETA with apache 2 and discovered a segfault.
>
> $ gdb ./httpd
> GNU gdb 5.2.1
> (gdb) run -X
> Starting program: /usr/local/apache2/bin/httpd -X
>
> Program received signal SIGSEGV, Segmentation fault.
> 0x400e8eef in apr_pstrcat (a=0x81d7fe8) at apr_strings.c:175
> 175             apr_size_t cplen = strlen(cp);
> (gdb) bt
> #0  0x400e8eef in apr_pstrcat (a=0x81d7fe8) at apr_strings.c:175
> #1  0x402ed68d in python_handler (req=0x81d8020, phase=0x40369247
> "PythonTransHandler")
>     at mod_python.c:764
> #2  0x402eea6d in PythonTransHandler (req=0x81d8020) at mod_python.c:1687
> #3  0x0808cd48 in ap_run_translate_name (r=0x81d8020) at request.c:108
> #4  0x0808d5ec in ap_process_request_internal (r=0x81d8020) at
> request.c:167 #5  0x08069e02 in ap_process_request (r=0x81d8020) at
> http_request.c:255 #6  0x08065dab in ap_process_http_connection
> (c=0x81d40e0) at http_core.c:293 #7  0x080831c8 in
> ap_run_process_connection (c=0x81d40e0) at connection.c:85 #8  0x0808346f
> in ap_process_connection (c=0x81d40e0, csd=0x81d4010) at connection.c:207
> #9  0x08078cc2 in child_main (child_num_arg=0) at prefork.c:696
> #10 0x08078d80 in make_child (s=0x80b5378, slot=0) at prefork.c:736
> #11 0x08078e71 in startup_children (number_to_start=5) at prefork.c:808
> #12 0x0807917d in ap_mpm_run (_pconf=0x80b2cb0, plog=0x80ead90,
> s=0x80b5378) at prefork.c:1024
> #13 0x0807e67c in main (argc=2, argv=0xbffff934) at main.c:645
> #14 0x401933c1 in __libc_start_main () from /lib/libc.so.6
>
>
> FIX: Comment out lines 764-767 and 770 of mod_python.c. Seems to compile
> and run fine. Impact on functionality unknown.
>



--- mod_python.c.old	2002-09-13 13:51:09.000000000 -0700
+++ mod_python.c	2002-09-13 13:51:38.000000000 -0700
@@ -759,15 +759,7 @@
             ext = apr_pstrcat(req->pool, ".", ext, NULL);
     }
 
-    /* is there an hlist entry, i.e. a handler? */
-    /* try with extension */
-    hle = (hl_entry *)apr_hash_get(conf->hlists, 
-                                   apr_pstrcat(req->pool, phase, ext, NULL),
-                                   APR_HASH_KEY_STRING);
-    if (!hle) {
-        /* try without extension */
         hle = (hl_entry *)apr_hash_get(conf->hlists, phase, 
APR_HASH_KEY_STRING);
-    }
     
     req_conf = (py_req_config *) ap_get_module_config(req->request_config,
                                                       &python_module);





From bryan at eevolved.com  Fri Sep 13 17:11:22 2002
From: bryan at eevolved.com (Bryan Mongeau)
Date: Fri Jan  9 21:53:07 2004
Subject: [mod_python] Mod_python and Sub-Interpreter segregation
Message-ID: <200209131711.22854.bryan@eevolved.com>

Greetings,

I've been playing around with mod_python and have noticed a peculiar behaviour 
that perhaps someone could explain to me.  As the mod_python documentation 
explains, a sub-interpreter is created for each virtual host (default).  I 
therefore expected global variables within this sub-interpreter to be able to 
maintain state between hits.  I created a simple script ( included below ) to 
observe this behaviour by counting hits in a global variable and printing the 
interpreter name.

To my surprise, it seems as if different apache child processes run their 
python code in different sub-interpreters even though the interpreter name 
remains the same ( virtualhost ). I produced this behaviour by loading the 
script in my browser and refreshing (very) rapidly. What happens is the hit 
counter eventually returns to zero, meaning that the global variable is no 
longer in the namespace. Repeated refreshing causes the hit counter to jump 
all over the place as I presume it jumps from one apache child process to 
another, each having their own sub-interpreters and global variables.

It seems as if each child process has its own sub-interpreter? Or am I 
confused? Was this documented? Enlightenment is greatly appreciated. 
Unfortunately the behaviour I am observing is undesired.

Here is the code to demonstrate:

from mod_python import apache
def handler(req):
    try:
        globals()['hits']+=1
    except KeyError:
        globals()['hits'] = 0
    req.write("interpreter_name=" + req.interpreter )
    req.write(" - hits: " + str(globals()['hits']))
    return apache.OK
-- 
Bryan Mongeau
eEvolved Inc. - IT Consulting & Custom Software
http://eevolved.com/
--
"The true function of life, that which is being maximized in the natural 
world, is DNA survival. But DNA is not floating free; it is locked up in 
living bodies and it has made the most of the levers of power at its 
disposal." -- Richard Dawkins


From brianh at exelixis.com  Fri Sep 13 14:28:37 2002
From: brianh at exelixis.com (Brian Hawthorne)
Date: Fri Jan  9 21:53:07 2004
Subject: [mod_python] Mod_python and Sub-Interpreter segregation
In-Reply-To: <200209131711.22854.bryan@eevolved.com>
Message-ID: <Pine.GSO.4.05.10209131423360.8716-100000@timeless.exelixis.com>

unfortunately, there is no way to share global data among multiple
apache child processes without using an external database of some sort.
this is true regardless of how many interpreters you have in each child
proc.  i anticipate that the multithreaded server model available in
apache2 will address this issue, though i haven't gotten my hands dirty
yet trying to set up modpy3 alpha with apache2.

brian hawthorne
-bioinformatics,
Exelixis, Inc.


On Fri, 13 Sep 2002, Bryan Mongeau wrote:

> Greetings,
> 
> I've been playing around with mod_python and have noticed a peculiar behaviour 
> that perhaps someone could explain to me.  As the mod_python documentation 
> explains, a sub-interpreter is created for each virtual host (default).  I 
> therefore expected global variables within this sub-interpreter to be able to 
> maintain state between hits.  I created a simple script ( included below ) to 
> observe this behaviour by counting hits in a global variable and printing the 
> interpreter name.
> 
> To my surprise, it seems as if different apache child processes run their 
> python code in different sub-interpreters even though the interpreter name 
> remains the same ( virtualhost ). I produced this behaviour by loading the 
> script in my browser and refreshing (very) rapidly. What happens is the hit 
> counter eventually returns to zero, meaning that the global variable is no 
> longer in the namespace. Repeated refreshing causes the hit counter to jump 
> all over the place as I presume it jumps from one apache child process to 
> another, each having their own sub-interpreters and global variables.
> 
> It seems as if each child process has its own sub-interpreter? Or am I 
> confused? Was this documented? Enlightenment is greatly appreciated. 
> Unfortunately the behaviour I am observing is undesired.
> 
> Here is the code to demonstrate:
> 
> from mod_python import apache
> def handler(req):
>     try:
>         globals()['hits']+=1
>     except KeyError:
>         globals()['hits'] = 0
>     req.write("interpreter_name=" + req.interpreter )
>     req.write(" - hits: " + str(globals()['hits']))
>     return apache.OK
> -- 
> Bryan Mongeau
> eEvolved Inc. - IT Consulting & Custom Software
> http://eevolved.com/
> --
> "The true function of life, that which is being maximized in the natural 
> world, is DNA survival. But DNA is not floating free; it is locked up in 
> living bodies and it has made the most of the levers of power at its 
> disposal." -- Richard Dawkins
> 
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://www.modpython.org/mailman/listinfo/mod_python
> 


From list-mod_python at empires.org  Fri Sep 13 14:36:39 2002
From: list-mod_python at empires.org (Jeff Davis)
Date: Fri Jan  9 21:53:07 2004
Subject: [mod_python] more info about the segfault bug
Message-ID: <200209131436.39544.list-mod_python@empires.org>

Patch below. That variable "ext" is not being initialized appearently (in the 
function python_handler in mod_python.c). So I suppose it's not passing the 
"if(req->filename)" test, and so the call to apr_pstrcat just passes garbage 
("ext") to the function. Perhaps we need an "else" safety clause, or 
something? I don't really know what's supposed to be happening there, but if 
someone does maybe this will help them find the problem.

I will continue to look into the problem, but I'm not all that familiar with 
writing apache modules.


Regards,
	Jeff

Note: patch is from distributed version to me new one. Disregard my previous 
patch, which implemented Bryan Mongeau's solution.

--- mod_python.c.old	2002-09-13 13:51:09.000000000 -0700
+++ mod_python.c	2002-09-13 14:28:47.000000000 -0700
@@ -742,7 +742,7 @@
     int result;
     const char * interpreter = NULL;
     PyThreadState *tstate;
-    const char *ext;
+    char *ext = NULL;
     hl_entry *hle = NULL;
     hl_entry *dynhle = NULL;
 


From neel at mediapulse.com  Fri Sep 13 17:40:42 2002
From: neel at mediapulse.com (Michael C. Neel)
Date: Fri Jan  9 21:53:07 2004
Subject: [mod_python] Mod_python and Sub-Interpreter segregation
Message-ID: <C0FC22C08B82074A88B50061764157775BAA@johnson.mediapulse.net>

I don't think this will work in apache2 either, based on my limited
experience.

Apache2 threaded still has separate processes (children) along with
threads.  You can either have a fixed number of processes, and let the
threads grow and shrink, or have a fixed number of threads per process
and add more processes as needed.

While this will help with resource pooling, you'll still need an outside
database to have a global variable.  Now with apache2's cgid (a process
to handle all cgi scripts since forking a 75 thread apache child would
be, um, bad) there might be something you can do there, but then that
means you app is a CGI and we don't use that word in 2002 anymore...

Mike 

--
Michael C. Neel
There are only 10 types of people in the world;
those who understand binary and those who don't.


-----Original Message-----
From: Brian Hawthorne [mailto:brianh@exelixis.com] 
Sent: Friday, September 13, 2002 5:29 PM
To: Bryan Mongeau
Cc: mod_python@modpython.org
Subject: Re: [mod_python] Mod_python and Sub-Interpreter segregation


unfortunately, there is no way to share global data among multiple
apache child processes without using an external database of some sort.
this is true regardless of how many interpreters you have in each child
proc.  i anticipate that the multithreaded server model available in
apache2 will address this issue, though i haven't gotten my hands dirty
yet trying to set up modpy3 alpha with apache2.

brian hawthorne
-bioinformatics,
Exelixis, Inc.


On Fri, 13 Sep 2002, Bryan Mongeau wrote:

> Greetings,
> 
> I've been playing around with mod_python and have noticed a peculiar
behaviour 
> that perhaps someone could explain to me.  As the mod_python
documentation 
> explains, a sub-interpreter is created for each virtual host
(default).  I 
> therefore expected global variables within this sub-interpreter to be
able to 
> maintain state between hits.  I created a simple script ( included
below ) to 
> observe this behaviour by counting hits in a global variable and
printing the 
> interpreter name.
> 
> To my surprise, it seems as if different apache child processes run
their 
> python code in different sub-interpreters even though the interpreter
name 
> remains the same ( virtualhost ). I produced this behaviour by loading
the 
> script in my browser and refreshing (very) rapidly. What happens is
the hit 
> counter eventually returns to zero, meaning that the global variable
is no 
> longer in the namespace. Repeated refreshing causes the hit counter to
jump 
> all over the place as I presume it jumps from one apache child process
to 
> another, each having their own sub-interpreters and global variables.
> 
> It seems as if each child process has its own sub-interpreter? Or am I

> confused? Was this documented? Enlightenment is greatly appreciated. 
> Unfortunately the behaviour I am observing is undesired.
> 
> Here is the code to demonstrate:
> 
> from mod_python import apache
> def handler(req):
>     try:
>         globals()['hits']+=1
>     except KeyError:
>         globals()['hits'] = 0
>     req.write("interpreter_name=" + req.interpreter )
>     req.write(" - hits: " + str(globals()['hits']))
>     return apache.OK
> -- 
> Bryan Mongeau
> eEvolved Inc. - IT Consulting & Custom Software
> http://eevolved.com/
> --
> "The true function of life, that which is being maximized in the
natural 
> world, is DNA survival. But DNA is not floating free; it is locked up
in 
> living bodies and it has made the most of the levers of power at its 
> disposal." -- Richard Dawkins
> 
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://www.modpython.org/mailman/listinfo/mod_python
> 

_______________________________________________
Mod_python mailing list
Mod_python@modpython.org
http://www.modpython.org/mailman/listinfo/mod_python


From list-mod_python at empires.org  Fri Sep 13 14:48:57 2002
From: list-mod_python at empires.org (Jeff Davis)
Date: Fri Jan  9 21:53:07 2004
Subject: [mod_python] Mod_python and Sub-Interpreter segregation
In-Reply-To: <200209131711.22854.bryan@eevolved.com>
References: <200209131711.22854.bryan@eevolved.com>
Message-ID: <200209131448.57166.list-mod_python@empires.org>

Hi,

The only way I know of that an interpreter can be shared is if you have a 
multithreaded app.

I think that's possible because it seems to me that python does well with 
threads. That way, each request could execute in it's own interpreter 
function call, and that way they'd be separate, but allow you to share global 
variables. However, that seems like it might be a little tricky, so I am not 
sure how feasible it is. Also note that the data wouldn't survive an apache 
restart.

However, to have the one-process-many-threads per virtualhost in apache2, you 
need to use mpm perchild. That mpm isn't really stable, so you might need to 
wait a while.

You might consider a lightweigtht DB or a RAM based filesystem or something in 
the interim. Or, if you wanted a featureful database you could use postgresql 
and persistant connections and it would still operate at a pretty good speed, 
which could be a good idea if you need to use a database for your application 
anyway.

Regards,
	Jeff

On Friday 13 September 2002 10:11 am, Bryan Mongeau wrote:
> Greetings,
>
> I've been playing around with mod_python and have noticed a peculiar
> behaviour that perhaps someone could explain to me.  As the mod_python
> documentation explains, a sub-interpreter is created for each virtual host
> (default).  I therefore expected global variables within this
> sub-interpreter to be able to maintain state between hits.  I created a
> simple script ( included below ) to observe this behaviour by counting hits
> in a global variable and printing the interpreter name.
>
> To my surprise, it seems as if different apache child processes run their
> python code in different sub-interpreters even though the interpreter name
> remains the same ( virtualhost ). I produced this behaviour by loading the
> script in my browser and refreshing (very) rapidly. What happens is the hit
> counter eventually returns to zero, meaning that the global variable is no
> longer in the namespace. Repeated refreshing causes the hit counter to jump
> all over the place as I presume it jumps from one apache child process to
> another, each having their own sub-interpreters and global variables.
>
> It seems as if each child process has its own sub-interpreter? Or am I
> confused? Was this documented? Enlightenment is greatly appreciated.
> Unfortunately the behaviour I am observing is undesired.
>
> Here is the code to demonstrate:
>
> from mod_python import apache
> def handler(req):
>     try:
>         globals()['hits']+=1
>     except KeyError:
>         globals()['hits'] = 0
>     req.write("interpreter_name=" + req.interpreter )
>     req.write(" - hits: " + str(globals()['hits']))
>     return apache.OK


From brianh at exelixis.com  Fri Sep 13 14:58:33 2002
From: brianh at exelixis.com (Brian Hawthorne)
Date: Fri Jan  9 21:53:08 2004
Subject: [mod_python] Mod_python and Sub-Interpreter segregation
In-Reply-To: <C0FC22C08B82074A88B50061764157775BAA@johnson.mediapulse.net>
Message-ID: <Pine.GSO.4.05.10209131450100.8716-100000@timeless.exelixis.com>

hmmm,
currently you can share global vars if you set apache to have exactly one
child process (but to great performance detriment).  i was imagining you
could do the same in the perthread server by setting the numprocs=1 and
letting the numthreads grow/shrink (recouping the performace hit with
extra threads).

actually, it should be pretty easy to wrap a bit of code around python
shelve to turn some dbm file into a modpyglobal repository of python objs
keyed by varname.  that's what i would do if i didn't feel like dealing
with a real db.  also, if you don't use an external repository, you have
to worry about server restarts and child procs getting killed etc.

brian


On Fri, 13 Sep 2002, Michael C. Neel wrote:

> I don't think this will work in apache2 either, based on my limited
> experience.
> 
> Apache2 threaded still has separate processes (children) along with
> threads.  You can either have a fixed number of processes, and let the
> threads grow and shrink, or have a fixed number of threads per process
> and add more processes as needed.
> 
> While this will help with resource pooling, you'll still need an outside
> database to have a global variable.  Now with apache2's cgid (a process
> to handle all cgi scripts since forking a 75 thread apache child would
> be, um, bad) there might be something you can do there, but then that
> means you app is a CGI and we don't use that word in 2002 anymore...
> 
> Mike 
> 
> --
> Michael C. Neel
> There are only 10 types of people in the world;
> those who understand binary and those who don't.
> 
> 
> -----Original Message-----
> From: Brian Hawthorne [mailto:brianh@exelixis.com] 
> Sent: Friday, September 13, 2002 5:29 PM
> To: Bryan Mongeau
> Cc: mod_python@modpython.org
> Subject: Re: [mod_python] Mod_python and Sub-Interpreter segregation
> 
> 
> unfortunately, there is no way to share global data among multiple
> apache child processes without using an external database of some sort.
> this is true regardless of how many interpreters you have in each child
> proc.  i anticipate that the multithreaded server model available in
> apache2 will address this issue, though i haven't gotten my hands dirty
> yet trying to set up modpy3 alpha with apache2.
> 
> brian hawthorne
> -bioinformatics,
> Exelixis, Inc.
> 
> 
> On Fri, 13 Sep 2002, Bryan Mongeau wrote:
> 
> > Greetings,
> > 
> > I've been playing around with mod_python and have noticed a peculiar
> behaviour 
> > that perhaps someone could explain to me.  As the mod_python
> documentation 
> > explains, a sub-interpreter is created for each virtual host
> (default).  I 
> > therefore expected global variables within this sub-interpreter to be
> able to 
> > maintain state between hits.  I created a simple script ( included
> below ) to 
> > observe this behaviour by counting hits in a global variable and
> printing the 
> > interpreter name.
> > 
> > To my surprise, it seems as if different apache child processes run
> their 
> > python code in different sub-interpreters even though the interpreter
> name 
> > remains the same ( virtualhost ). I produced this behaviour by loading
> the 
> > script in my browser and refreshing (very) rapidly. What happens is
> the hit 
> > counter eventually returns to zero, meaning that the global variable
> is no 
> > longer in the namespace. Repeated refreshing causes the hit counter to
> jump 
> > all over the place as I presume it jumps from one apache child process
> to 
> > another, each having their own sub-interpreters and global variables.
> > 
> > It seems as if each child process has its own sub-interpreter? Or am I
> 
> > confused? Was this documented? Enlightenment is greatly appreciated. 
> > Unfortunately the behaviour I am observing is undesired.
> > 
> > Here is the code to demonstrate:
> > 
> > from mod_python import apache
> > def handler(req):
> >     try:
> >         globals()['hits']+=1
> >     except KeyError:
> >         globals()['hits'] = 0
> >     req.write("interpreter_name=" + req.interpreter )
> >     req.write(" - hits: " + str(globals()['hits']))
> >     return apache.OK
> > -- 
> > Bryan Mongeau
> > eEvolved Inc. - IT Consulting & Custom Software
> > http://eevolved.com/
> > --
> > "The true function of life, that which is being maximized in the
> natural 
> > world, is DNA survival. But DNA is not floating free; it is locked up
> in 
> > living bodies and it has made the most of the levers of power at its 
> > disposal." -- Richard Dawkins
> > 
> > _______________________________________________
> > Mod_python mailing list
> > Mod_python@modpython.org
> > http://www.modpython.org/mailman/listinfo/mod_python
> > 
> 
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://www.modpython.org/mailman/listinfo/mod_python
> 
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://www.modpython.org/mailman/listinfo/mod_python
> 


From list-mod_python at empires.org  Fri Sep 13 15:06:03 2002
From: list-mod_python at empires.org (Jeff Davis)
Date: Fri Jan  9 21:53:08 2004
Subject: [mod_python] Mod_Python 3 / Apache 2 / RedHat 7.3 / Python 2.2 = Seg fault :(
In-Reply-To: <20020913094720.GL8093@samba.org>
References: <000001c25adf$b2039020$0400a8c0@clapton> <200209130234.23802.list-mod_python@empires.org> <20020913094720.GL8093@samba.org>
Message-ID: <200209131506.03684.list-mod_python@empires.org>

The backtrace is below. I think that we're getting it taken care of. I 
narrowed it to an uninitialized variable (see another message I sent earlier 
with the subject: "more info about the segfault").

Thanks for letting me know how to use gdb! Couldn't have done it without gdb, 
that's for sure.

Regards,
	Jeff

#0  0x402611bb in strlen () from /lib/libc.so.6
No symbol table info available.
#1  0x4015d9b4 in apr_pstrcat () from /usr/lib/libapr.so.0
No symbol table info available.
#2  0x40350f88 in python_handler () from 
/usr/lib/apache2/modules/mod_python.so
No symbol table info available.
#3  0x40352817 in PythonPostReadRequestHandler ()
   from /usr/lib/apache2/modules/mod_python.so
No symbol table info available.
#4  0x08094f90 in ap_run_post_read_request ()
No symbol table info available.
#5  0x08093a1e in ap_read_request ()
No symbol table info available.
#6  0x0806915c in _start ()
No symbol table info available.
#7  0x0808e7c1 in ap_run_process_connection ()
No symbol table info available.
#8  0x0808ebac in ap_process_connection ()
No symbol table info available.
#9  0x08080468 in ap_graceful_stop_signalled ()
No symbol table info available.
#10 0x0808054d in ap_graceful_stop_signalled ()
No symbol table info available.
---Type <return> to continue, or q <return> to quit---
#11 0x08080684 in ap_graceful_stop_signalled ()
No symbol table info available.
#12 0x08080aa6 in ap_mpm_run ()
No symbol table info available.
#13 0x08087743 in main ()
No symbol table info available.
#14 0x402070bf in __libc_start_main () from /lib/libc.so.6
No symbol table info available.

On Friday 13 September 2002 02:47 am, Martin Pool wrote:
> On 13 Sep 2002, Jeff Davis <list-mod_python@empires.org> wrote:
> > > Try running apache under gdb?  Something like this:
> > >
> > >   # gdb /usr/sbin/apache2
> > >   [blah blah]
> > >   gdb> run -X
> > >
> > > Then try to access a page.  Apache should stop in gdb, and it might
> > > tell you where the problem is.
> >
> > I tried both gdb and valgrind and supplied the -X argument for each. When
> > I hit a page, all it said was "Segmentation Fault" (for valgrind, and gdb
> > was similar: "Program received signal SIGSEGV, Segmentation fault."). GDB
> > also said "0x402611bb in strlen () from /lib/libc.so.6" after the
> > SIGSEGV, which might be helpful.
>
> OK, good.  Now once you get to that point, type
>
>   gdb> backtrace full
>
> to get some info on where the call to strlen() that caused trouble
> came from.


From jack_diederich at email.com  Fri Sep 13 17:10:28 2002
From: jack_diederich at email.com (Jack Diederich)
Date: Fri Jan  9 21:53:08 2004
Subject: [mod_python] Mod_python and Sub-Interpreter segregation
Message-ID: <20020913221028.26023.qmail@email.com>

As others have pointed out, apache spawns multiple processes which each have their own independent memory space.

One of the 'external storage' solutions is to use shareded memory between processes.  This is supported differently on different flavors of unix.  Here is a very out of date link for a shared memory python wrapper
http://gigue.peabody.jhu.edu/~mdboom/omi/source/shm_source/shm.html

I have no idea if it still works, or if it will work on your actual server.

-jack
-- 
__________________________________________________________
Sign-up for your own FREE Personalized E-mail at Mail.com
http://www.mail.com/?sr=signup


From bryan at eevolved.com  Fri Sep 13 19:59:42 2002
From: bryan at eevolved.com (Bryan Mongeau)
Date: Fri Jan  9 21:53:08 2004
Subject: [mod_python] Mod_python and Sub-Interpreter segregation
In-Reply-To: <Pine.GSO.4.05.10209131450100.8716-100000@timeless.exelixis.com>
References: <Pine.GSO.4.05.10209131450100.8716-100000@timeless.exelixis.com>
Message-ID: <200209131959.42086.bryan@eevolved.com>

Thanks for all the great replies everyone! I appreciate it.

On September 13, 2002 09:58 pm, Brian Hawthorne wrote:
> hmmm,
> currently you can share global vars if you set apache to have exactly one
> child process (but to great performance detriment).  i was imagining you
> could do the same in the perthread server by setting the numprocs=1 and
> letting the numthreads grow/shrink (recouping the performace hit with
> extra threads).

Thanks alot for this idea! I compiled apache with the worker MPM, set 
StartServers to 1 and ThreadsPerChild to 64. The result? My shared memory hit 
counter works perfectly and clocks about 50 hits/sec on my 800 Mhz, which, 
according to my rough hand benchmarks, is actually a little faster than using 
prefork with StartServers at 5!

Seems as if my problem is solved.. at least for now, thanks!

> actually, it should be pretty easy to wrap a bit of code around python
> shelve to turn some dbm file into a modpyglobal repository of python objs
> keyed by varname.  that's what i would do if i didn't feel like dealing
> with a real db.  also, if you don't use an external repository, you have
> to worry about server restarts and child procs getting killed etc.

This is almost exactly what I have in mind :) More later,
-- 
Bryan Mongeau
eEvolved Inc. - IT Consulting & Custom Software
http://eevolved.com/
--
"Let us understand what our own selfish genes are up to, because we may then 
at least have a chance to upset their designs, something that no other 
species has ever aspired to do." -- Richard Dawkins


From grisha at ispol.com  Fri Sep 13 21:28:22 2002
From: grisha at ispol.com (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 21:53:08 2004
Subject: [mod_python] python-dev list
Message-ID: <Pine.BSF.4.32.0209132124180.8852-100000@eden.ispol.com>

Folks -

Just wanted to point out that there now exists a
python-dev@httpd.apache.org list, intended specifically for mod_python
development (i.e. the C and Python code that implements the mod_python
internals). So if you have patches or bug reports, please subscribe to
that list and post it there.

This list can then become a strictly end-user list.

Thanks,

Grisha



From peter at hawkins.emu.id.au  Sat Sep 14 11:39:17 2002
From: peter at hawkins.emu.id.au (Peter Hawkins)
Date: Fri Jan  9 21:53:08 2004
Subject: [mod_python] Segfault in 2.7.8 if encoding changed
Message-ID: <200209141139.19625.peter@hawkins.emu.id.au>

Hi...

I'm the current debian package maintainer for mod_python.

I'm hoping that someone can help me with this bug (the bugs listed 
below are identical, I think).
http://bugs.debian.org/cgi-bin/bugreport.cgi?bug=152750&repeatmerged=yes
http://bugs.debian.org/cgi-bin/bugreport.cgi?bug=135346&repeatmerged=yes

As explained in the bug logs, if you change your encoding to anything 
other than ascii in /etc/python2.1/site.py, then mod_python segfaults 
on every request. Somehow, this causes the interpreters global 
variable to be NULL when it is used in get_interpreter_data, leading 
to a segfault.

The python versions that modpython is built against (2.1, 2.2 and 
2.3a0) are all compiled with threads on linux (not really an awful 
lot I can do about that).

Backtrace (my own):
0x40280424 in PyDict_GetItemString () from 
/usr/lib/libpython2.2.so.0.0
(gdb) bt
#0  0x40280424 in PyDict_GetItemString () from 
/usr/lib/libpython2.2.so.0.0
#1  0x4022e1a6 in get_interpreter_data () from 
/usr/lib/apache/1.3/mod_python.so
#2  0x4022f0f4 in make_obcallback () from 
/usr/lib/apache/1.3/mod_python.so
#3  0x402306f0 in python_finalize () from 
/usr/lib/apache/1.3/mod_python.so
#4  0x08053a84 in ap_invoke_handler ()
#5  0x0806338c in ap_some_auth_required ()
#6  0x080633e8 in ap_process_request ()
#7  0x0805cbcb in ap_child_terminate ()
#8  0x0805cd5c in ap_child_terminate ()
#9  0x0805ce79 in ap_child_terminate ()
#10 0x0805d355 in ap_child_terminate ()
#11 0x0805da5d in main ()
#12 0x400ed0bf in __libc_start_main () from /lib/libc.so.6

From jack_diederich at email.com  Fri Sep 13 21:39:45 2002
From: jack_diederich at email.com (Jack Diederich)
Date: Fri Jan  9 21:53:08 2004
Subject: [mod_python] python-dev list
Message-ID: <20020914023948.26152.qmail@email.com>

To subscribe, send an empty email to

python-dev-subscribe@httpd.apache.org


> Just wanted to point out that there now exists a
> python-dev@httpd.apache.org list, intended specifically for mod_python
> development

> This list can then become a strictly end-user list.

wouldn't it be better from a maintenace and dont-confuse-users standpoint to have the two lists in the same place? (not the same list, but the same host).  mod_python@modpython.org could then just auto-respond with a "Look over there" message.

-jack
-- 
__________________________________________________________
Sign-up for your own FREE Personalized E-mail at Mail.com
http://www.mail.com/?sr=signup


From neel at mediapulse.com  Fri Sep 13 22:50:40 2002
From: neel at mediapulse.com (Michael Neel)
Date: Fri Jan  9 21:53:08 2004
Subject: [mod_python] more info about the segfault bug
In-Reply-To: <200209131436.39544.list-mod_python@empires.org>
Message-ID: <000501c25b99$833bbf50$0400a8c0@clapton>

Thanks Jeff, this fixed the issue for me.  I'll keep watch on this list
and the new httpd.apache.org list for an official update, and for any
word what the side effects (if any, that change looks fairly harmless on
the surface) this has.

Mike

--
Michael C. Neel
There are only 10 types of people in the world;
those who understand binary and those who don't.

-----Original Message-----
From: mod_python-admin@modpython.org
[mailto:mod_python-admin@modpython.org] On Behalf Of Jeff Davis
Sent: Friday, September 13, 2002 5:37 PM
To: mod_python@modpython.org
Subject: [mod_python] more info about the segfault bug



Patch below. That variable "ext" is not being initialized appearently
(in the 
function python_handler in mod_python.c). So I suppose it's not passing
the 
"if(req->filename)" test, and so the call to apr_pstrcat just passes
garbage 
("ext") to the function. Perhaps we need an "else" safety clause, or 
something? I don't really know what's supposed to be happening there,
but if 
someone does maybe this will help them find the problem.

I will continue to look into the problem, but I'm not all that familiar
with 
writing apache modules.


Regards,
	Jeff

Note: patch is from distributed version to me new one. Disregard my
previous 
patch, which implemented Bryan Mongeau's solution.

--- mod_python.c.old	2002-09-13 13:51:09.000000000 -0700
+++ mod_python.c	2002-09-13 14:28:47.000000000 -0700
@@ -742,7 +742,7 @@
     int result;
     const char * interpreter = NULL;
     PyThreadState *tstate;
-    const char *ext;
+    char *ext = NULL;
     hl_entry *hle = NULL;
     hl_entry *dynhle = NULL;
 

_______________________________________________
Mod_python mailing list
Mod_python@modpython.org
http://www.modpython.org/mailman/listinfo/mod_python


From grisha at modpython.org  Fri Sep 13 22:57:59 2002
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 21:53:08 2004
Subject: [mod_python] python-dev list
In-Reply-To: <20020914023948.26152.qmail@email.com>
Message-ID: <Pine.BSF.4.32.0209132255320.10141-100000@eden.ispol.com>

Yes, we just haven't figured out how to move the mod_python@modpython.org
list - ideally, we will migrate the archives and subscribtions (or at
least archives) to the new list, but since apache mailing lists are not
mailman its a bit tricky.

On Fri, 13 Sep 2002, Jack Diederich wrote:

> wouldn't it be better from a maintenace and dont-confuse-users
> standpoint to have the two lists in the same place? (not the same
> list, but the same host).  mod_python@modpython.org could then just
> auto-respond with a "Look over there" message.


From neel at mediapulse.com  Fri Sep 13 23:07:50 2002
From: neel at mediapulse.com (Michael Neel)
Date: Fri Jan  9 21:53:08 2004
Subject: [mod_python] Mod_python and Sub-Interpreter segregation
In-Reply-To: <200209131959.42086.bryan@eevolved.com>
Message-ID: <001401c25b9b$e97f0770$0400a8c0@clapton>

Thank will work great, until you hit the 65th concurrent connection, at
wich point apache will give you another child. Another thing to keep in
mind is that if one thing goes wrong in any thread, there goes your
whole server.  (just a side note, to test a web server I use the ab tool
that comes with apache; it will let you set the concurrent number of
theard to try and get at once).

I saw a python tool mentioned in another thread;
http://www.object-craft.com.au/projects/albatross/ which I'm looking at
myself right now, so I have no experience with, but after a first read
though looks very promising when used with mod_python and has several
options for saved states and should have some good choices for globals
in there.

Mike 

-----Original Message-----
From: mod_python-admin@modpython.org
[mailto:mod_python-admin@modpython.org] On Behalf Of Bryan Mongeau
Sent: Friday, September 13, 2002 4:00 PM
To: mod_python@modpython.org
Subject: Re: [mod_python] Mod_python and Sub-Interpreter segregation


Thanks for all the great replies everyone! I appreciate it.

On September 13, 2002 09:58 pm, Brian Hawthorne wrote:
> hmmm,
> currently you can share global vars if you set apache to have exactly 
> one child process (but to great performance detriment).  i was 
> imagining you could do the same in the perthread server by setting the

> numprocs=1 and letting the numthreads grow/shrink (recouping the 
> performace hit with extra threads).

Thanks alot for this idea! I compiled apache with the worker MPM, set 
StartServers to 1 and ThreadsPerChild to 64. The result? My shared
memory hit 
counter works perfectly and clocks about 50 hits/sec on my 800 Mhz,
which, 
according to my rough hand benchmarks, is actually a little faster than
using 
prefork with StartServers at 5!

Seems as if my problem is solved.. at least for now, thanks!

> actually, it should be pretty easy to wrap a bit of code around python

> shelve to turn some dbm file into a modpyglobal repository of python 
> objs keyed by varname.  that's what i would do if i didn't feel like 
> dealing with a real db.  also, if you don't use an external 
> repository, you have to worry about server restarts and child procs 
> getting killed etc.

This is almost exactly what I have in mind :) More later,
-- 
Bryan Mongeau
eEvolved Inc. - IT Consulting & Custom Software http://eevolved.com/
--
"Let us understand what our own selfish genes are up to, because we may
then 
at least have a chance to upset their designs, something that no other 
species has ever aspired to do." -- Richard Dawkins

_______________________________________________
Mod_python mailing list
Mod_python@modpython.org
http://www.modpython.org/mailman/listinfo/mod_python


From vmilitaru at sympatico.ca  Fri Sep 13 23:22:05 2002
From: vmilitaru at sympatico.ca (vio)
Date: Fri Jan  9 21:53:08 2004
Subject: [mod_python] python-dev list
In-Reply-To: <Pine.BSF.4.32.0209132255320.10141-100000@eden.ispol.com>; from grisha@modpython.org on Fri, Sep 13, 2002 at 10:57:59PM -0400
References: <20020914023948.26152.qmail@email.com> <Pine.BSF.4.32.0209132255320.10141-100000@eden.ispol.com>
Message-ID: <20020913232204.A2273@eye.neb>

* Gregory (Grisha) Trubetskoy <grisha@modpython.org> [020913 22:55]:
> 
> Yes, we just haven't figured out how to move the mod_python@modpython.org
> list - ideally, we will migrate the archives and subscribtions (or at
> least archives) to the new list, but since apache mailing lists are not
> mailman its a bit tricky.

I agree with Jack. Let's try to keep confusion to a minimum, and keep 
everything in one place. I never touched a list server from a manager's seat,
but out of curiosity, what mailing server is apache using ? Sounds to ignorant
me as just some text massaging operation, nothing a python script can't handle.
(but on the other hand, ignorance is bliss).
If mod_python is now part of apache, I don't see a point in maintaining
modpython.org anymore except, perhaps, to redirect lost users to the new home.

Cheers,
Vio

From neel at mediapulse.com  Fri Sep 13 23:55:03 2002
From: neel at mediapulse.com (Michael Neel)
Date: Fri Jan  9 21:53:08 2004
Subject: [mod_python] python-dev list
In-Reply-To: <20020913232204.A2273@eye.neb>
Message-ID: <001501c25ba2$81d5d7a0$0400a8c0@clapton>

Apache is using ezmlm; of which I have no idea how it works.  Maybe we
could show asf the light and get them to switch to mailman? =D

Mike

--
Michael C. Neel
There are only 10 types of people in the world;
those who understand binary and those who don't.

-----Original Message-----
From: mod_python-admin@modpython.org
[mailto:mod_python-admin@modpython.org] On Behalf Of vio
Sent: Saturday, September 14, 2002 12:22 AM
To: mod_python@modpython.org
Subject: Re: [mod_python] python-dev list


* Gregory (Grisha) Trubetskoy <grisha@modpython.org> [020913 22:55]:
> 
> Yes, we just haven't figured out how to move the 
> mod_python@modpython.org list - ideally, we will migrate the archives 
> and subscribtions (or at least archives) to the new list, but since 
> apache mailing lists are not mailman its a bit tricky.

I agree with Jack. Let's try to keep confusion to a minimum, and keep 
everything in one place. I never touched a list server from a manager's
seat, but out of curiosity, what mailing server is apache using ? Sounds
to ignorant me as just some text massaging operation, nothing a python
script can't handle. (but on the other hand, ignorance is bliss). If
mod_python is now part of apache, I don't see a point in maintaining
modpython.org anymore except, perhaps, to redirect lost users to the new
home.

Cheers,
Vio
_______________________________________________
Mod_python mailing list
Mod_python@modpython.org
http://www.modpython.org/mailman/listinfo/mod_python


From vmilitaru at sympatico.ca  Sat Sep 14 01:53:37 2002
From: vmilitaru at sympatico.ca (vio)
Date: Fri Jan  9 21:53:08 2004
Subject: [mod_python] python-dev list
In-Reply-To: <001501c25ba2$81d5d7a0$0400a8c0@clapton>; from neel@mediapulse.com on Fri, Sep 13, 2002 at 11:55:03PM -0400
References: <20020913232204.A2273@eye.neb> <001501c25ba2$81d5d7a0$0400a8c0@clapton>
Message-ID: <20020914015337.A2359@eye.neb>

* Michael Neel <neel@mediapulse.com> [020914 01:04]:
> Apache is using ezmlm; of which I have no idea how it works.  Maybe we
> could show asf the light and get them to switch to mailman? =D

A wild guess: could 'ezmlm' stand for 'eazy mailman'?
I wonder if trying to propose such a fundamental switch to ASF is feasible,
especially if the use of ezmlm is 'entrentched' at apache (I have no clues) 
and there are no major issues with it. Why would they (us?) switch to mailman ?
There must be some fundamental motivation behind this move, be it technical
or ideological or otherwise. I don't know enough about the apache politics to
answer such questions. Another wild guess: ASF is made of pretty bright people,
surely there must be something about ezmlm to making them choose it (I am 
doing a lot of guessing here, so I guess they must have been aware of mailman
when they decided on ezmlm instead).

Just skimming the ezmlm.org site, seems it is very good at handling 'huge'
mailing lists (half a million subscribers). Maybe that's its core competitive 
advantage. Also supports MySQL RDBMS which sounds interesting.
(accessing the ezmlm FAQ seems quite slow, though). And is optimized for speed.
I don't know, maybe ezmlm is better suited for ASF's needs than mailman (on
which I must plead total ignorance, sorry).

FAQ topic of interest: '5.7 Converting to and from and SQL database.' By 
extension, I wonder where's the topic 'X.Y Converting to and from mailman.'? :)

Vio

From gstein at lyra.org  Sat Sep 14 00:48:01 2002
From: gstein at lyra.org (Greg Stein)
Date: Fri Jan  9 21:53:08 2004
Subject: [mod_python] python-dev list
In-Reply-To: <20020914015337.A2359@eye.neb>; from vmilitaru@sympatico.ca on Sat, Sep 14, 2002 at 01:53:37AM -0500
References: <20020913232204.A2273@eye.neb> <001501c25ba2$81d5d7a0$0400a8c0@clapton> <20020914015337.A2359@eye.neb>
Message-ID: <20020914004801.A10914@lyra.org>

On Sat, Sep 14, 2002 at 01:53:37AM -0500, vio wrote:
> * Michael Neel <neel@mediapulse.com> [020914 01:04]:
> > Apache is using ezmlm; of which I have no idea how it works.  Maybe we
> > could show asf the light and get them to switch to mailman? =D

That's been tried :-)

>...
> I wonder if trying to propose such a fundamental switch to ASF is feasible,
> especially if the use of ezmlm is 'entrentched' at apache (I have no clues)

It runs *all* of the mailing lists, so yah: it's entrenched.

> and there are no major issues with it.

I'd prefer Mailman, but most of the people doing mailing list admin are more
comfortable using ezmlm. And no, there aren't really any major issues except
for the lack of a good web archive (altho there is some work on getting
Eyebrowse set up for this, but Eyebrowse sucks)

>...
> surely there must be something about ezmlm to making them choose it (I am 
> doing a lot of guessing here, so I guess they must have been aware of mailman
> when they decided on ezmlm instead).

At the time that new mlm software was needed, Mailman was still in Beta.
Brian looked into using it, but apparently there were some problems with it
on FreeBSD, and the mailman devs weren't responsive/active enough to track
down the problems at that point. So... the move to ezmlm.

> Just skimming the ezmlm.org site, seems it is very good at handling 'huge'
> mailing lists (half a million subscribers). Maybe that's its core competitive 
> advantage. Also supports MySQL RDBMS which sounds interesting.
> (accessing the ezmlm FAQ seems quite slow, though). And is optimized for speed.
> I don't know, maybe ezmlm is better suited for ASF's needs than mailman (on
> which I must plead total ignorance, sorry).

The ASF sends out an *incredible* amount of email to the mailing lists each
day. Yes: the MLM must be efficient as hell. DJB has certain, um, issues,
but his software is seriously speedy.

Cheers,
-g

-- 
Greg Stein, http://www.lyra.org/

From gstein at lyra.org  Sat Sep 14 00:49:15 2002
From: gstein at lyra.org (Greg Stein)
Date: Fri Jan  9 21:53:08 2004
Subject: [mod_python] python-dev list
In-Reply-To: <20020913232204.A2273@eye.neb>; from vmilitaru@sympatico.ca on Fri, Sep 13, 2002 at 11:22:05PM -0500
References: <20020914023948.26152.qmail@email.com> <Pine.BSF.4.32.0209132255320.10141-100000@eden.ispol.com> <20020913232204.A2273@eye.neb>
Message-ID: <20020914004915.B10914@lyra.org>

On Fri, Sep 13, 2002 at 11:22:05PM -0500, vio wrote:
> * Gregory (Grisha) Trubetskoy <grisha@modpython.org> [020913 22:55]:
> > 
> > Yes, we just haven't figured out how to move the mod_python@modpython.org
> > list - ideally, we will migrate the archives and subscribtions (or at
> > least archives) to the new list, but since apache mailing lists are not
> > mailman its a bit tricky.
> 
> I agree with Jack. Let's try to keep confusion to a minimum, and keep

That's all great and everything, but somebody must take the time to get this
work completed. Since this is an entirely volunteer thing, that means that
it will take time. And other things may be prioritized first...

Cheers,
-g

-- 
Greg Stein, http://www.lyra.org/

From vmilitaru at sympatico.ca  Sat Sep 14 05:23:26 2002
From: vmilitaru at sympatico.ca (vio)
Date: Fri Jan  9 21:53:08 2004
Subject: [mod_python] python-dev list
In-Reply-To: <20020914004915.B10914@lyra.org>; from gstein@lyra.org on Sat, Sep 14, 2002 at 12:49:15AM -0700
References: <20020914023948.26152.qmail@email.com> <Pine.BSF.4.32.0209132255320.10141-100000@eden.ispol.com> <20020913232204.A2273@eye.neb> <20020914004915.B10914@lyra.org>
Message-ID: <20020914052325.A2440@eye.neb>

* Greg Stein <gstein@lyra.org> [020914 03:48]:
> That's all great and everything, but somebody must take the time to get this
> work completed. Since this is an entirely volunteer thing, that means that
> it will take time. And other things may be prioritized first...

Got you. Greg, as you well know, text manipulation in python is rather trivial.
So maybe some on this list with some spare time on their hands could give this
a try. I would see a few ways to handle this problem. One would be to simply
grab each message in the mod_python archive (just writing a script to grab each
through the web interface), and then post it to the apache list. Problem here
I foresee is that original dates and posters' identity may get lost from message
headers, though they could be pasted into the message content, or preserved 
some other way. But I don't know if this is good behaviour for a mailing list 
archive (to see entire mod_python.org list as if posted on the same day).

Another alternative would be to work directly on the storage files and 
transform the mailman data files (provided mailman messages are somehow 
available in clear text) into ezmlm files, through multiple passes. Used this 
technique to transform java source into python. But unlike java2python, I doubt
ezmlm would accept some flat file(s) as ezmlm archive files just like that, out of the blue. Someone knowledgeable in both mailman and ezmlm internals migh 
pull thid off.

Vio

From vmilitaru at sympatico.ca  Sat Sep 14 05:57:15 2002
From: vmilitaru at sympatico.ca (vio)
Date: Fri Jan  9 21:53:08 2004
Subject: [mod_python] python-dev list
In-Reply-To: <20020914052325.A2440@eye.neb>; from vmilitaru@sympatico.ca on Sat, Sep 14, 2002 at 05:23:26AM -0500
References: <20020914023948.26152.qmail@email.com> <Pine.BSF.4.32.0209132255320.10141-100000@eden.ispol.com> <20020913232204.A2273@eye.neb> <20020914004915.B10914@lyra.org> <20020914052325.A2440@eye.neb>
Message-ID: <20020914055713.A2503@eye.neb>

Oops, taking back most of what I said in previous message. Remembering some
past mod_python example, maniputating mail messages seems more flexible 
than initially thought.
And all mod_python message archives look like simple flat text files (.gz).
So, on second look, moving the entire modpython archive to apache could be
done in something like, I don't know, 20-30 lines of python code. 

Vio

* vio <vmilitaru@sympatico.ca> [020914 05:31]:
> * Greg Stein <gstein@lyra.org> [020914 03:48]:
> > That's all great and everything, but somebody must take the time to get this
> > work completed. Since this is an entirely volunteer thing, that means that
> > it will take time. And other things may be prioritized first...
> 
> Got you. Greg, as you well know, text manipulation in python is rather trivial.
> So maybe some on this list with some spare time on their hands could give this
> a try. I would see a few ways to handle this problem. One would be to simply
> grab each message in the mod_python archive (just writing a script to grab each
> through the web interface), and then post it to the apache list. Problem here
> I foresee is that original dates and posters' identity may get lost from message
> headers, though they could be pasted into the message content, or preserved 
> some other way. But I don't know if this is good behaviour for a mailing list 
> archive (to see entire mod_python.org list as if posted on the same day).
> 
> Another alternative would be to work directly on the storage files and 
> transform the mailman data files (provided mailman messages are somehow 
> available in clear text) into ezmlm files, through multiple passes. Used this 
> technique to transform java source into python. But unlike java2python, I doubt
> ezmlm would accept some flat file(s) as ezmlm archive files just like that, out of the blue. Someone knowledgeable in both mailman and ezmlm internals migh 
> pull thid off.
> 
> Vio
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://www.modpython.org/mailman/listinfo/mod_python

From john at veidit.net  Sat Sep 14 23:35:23 2002
From: john at veidit.net (John Angelmo)
Date: Fri Jan  9 21:53:08 2004
Subject: [mod_python] Upgrade problem
Message-ID: <20020914233523.649f805e.john@veidit.net>

Hello

I recently upgraded both mod_python and Apache with portupgrade. Now there seems to be some problem I only get this output:

Mod_python error: "PythonHandler mod_python.publisher"

Traceback (most recent call last):

  File "/usr/local/lib/python2.2/site-packages/mod_python/apache.py", line 193, in Dispatch
    result = object(req)

  File "/usr/local/lib/python2.2/site-packages/mod_python/publisher.py", line 88, in handler
    if func_path[-1] == ".":

IndexError: string index out of range


My apacheconfig:

<Directory /usr/local/www/data/wa>
            AddHandler python-program .py
            PythonHandler mod_python.publisher
            PythonDebug On
</Directory>

/John

From list-mod_python at empires.org  Sat Sep 14 16:33:13 2002
From: list-mod_python at empires.org (Jeff Davis)
Date: Fri Jan  9 21:53:08 2004
Subject: [mod_python] Upgrade problem
In-Reply-To: <20020914233523.649f805e.john@veidit.net>
References: <20020914233523.649f805e.john@veidit.net>
Message-ID: <200209141633.13955.list-mod_python@empires.org>

What OS, old mod_python version, new mod_python version, and apache version do 
you have?

How did you install the new version? Is it possible that it didn't properly 
install the mod_python lib? If you were installing from a package, is it 
possible that it wasn't built correctly?

What URL were you using to access your page? What are the contents fo your 
file?

Please provide the most simple example you can that still reproduces the 
problem.

It seems like it might be a problem related to the mod_python library and the 
URL. Perhaps mod_python was updated and the mod_python library wasn't? 
Perhaps the new mod_python library doesn't work correcty?

Regards,
	Jeff

On Saturday 14 September 2002 02:35 pm, John Angelmo wrote:
> Hello
>
> I recently upgraded both mod_python and Apache with portupgrade. Now there
> seems to be some problem I only get this output:
>
> Mod_python error: "PythonHandler mod_python.publisher"
>
> Traceback (most recent call last):
>
>   File "/usr/local/lib/python2.2/site-packages/mod_python/apache.py", line
> 193, in Dispatch result = object(req)
>
>   File "/usr/local/lib/python2.2/site-packages/mod_python/publisher.py",
> line 88, in handler if func_path[-1] == ".":
>
> IndexError: string index out of range
>
>
> My apacheconfig:
>
> <Directory /usr/local/www/data/wa>
>             AddHandler python-program .py
>             PythonHandler mod_python.publisher
>             PythonDebug On
> </Directory>
>
> /John
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://www.modpython.org/mailman/listinfo/mod_python


From rpinder at usc.edu  Sat Sep 14 21:15:11 2002
From: rpinder at usc.edu (Rich Pinder)
Date: Fri Jan  9 21:53:08 2004
Subject: [mod_python] "Not Found" message with Publisher example
References: <3D7C2453.8020300@usc.edu>
Message-ID: <3D84094F.10501@usc.edu>

I'm still stumped with getting the SIMPLE example code on page 13 of the manual working.
(HAD simple example 1 from page 10 working, so I'm sure all the stuff is in correct location)
(Windows install. Python 2.2.1   mod_python.dll v 2.7.6   apache 1.2.26)

Edited the apache conf file, inside the  <IfModule mod_alias.c>

     <Directory "C:/Program Files/Apache Group/Apache/htdocs/python">
	AddHandler python-program .py
	PythonHandler mod_python.publisher
	PythonDebug on
     </Directory>

Test html form has:

   <form action="form/email" method="POST">

Created form.py (when i try to call it form the interpreter, I get no python indenting/parsing errors). 
form.py is in the directory pointed to in the apache .conf file.  (...../htdocs/python).  And, as its copied 
from the example, inside the  form.py  is a method defined as   email.  So form action makes sense to me.

But when trying to post, still get error :  The requested URL /form/email was not found on this server.


Am I missing something here?  Almost like the publisher is not being accessed ? There are no ancilliry files 
for the publisher that need to be installed either under the apache tree (other than the .dll), or under the 
python tree ??

I'm SURE its something trivial I've missed here - I am very new to this all.

Thanks for any thoughts you might have.

Rich

[Alain's idea, which i hoped was the clue, turned out not to be the problem]:

 >........  Edited the  .conf  file, created a new python script   mail.py, made
 >> a html form - but still get:
 >>
 >> The requested URL /form/email was not found on this server.
 >
 >
 > "mail" != "email"        [i'd mistakingly said in prior paragraph the script was called mail.py...]
 > was/is called form.py    [ but it was/is called form.py.  and besides, email is defined as a method ]
 >
 > Alain,
 >



Rich Pinder wrote:
 > Got the easy example workin fine from the Manual (3.2 section), but got hung up with the example that
 > discusses how the Publisher works.  Edited the  .conf  file, created a new python script   form.py,  made
 > an html form - but still get:
 >
 > The requested URL /form/email was not found on this server.
 >
 > I'm sure its a simple one - thanks for any thoughts !
 >
 > Rich Pinder USC School of Medicine
 >


From john at veidit.net  Sun Sep 15 14:06:05 2002
From: john at veidit.net (John Angelmo)
Date: Fri Jan  9 21:53:08 2004
Subject: [mod_python] Upgrade problem
References: <20020914233523.649f805e.john@veidit.net> <200209141633.13955.list-mod_python@empires.org>
Message-ID: <3D8477AD.1040604@veidit.net>

FreeBSD updated from 4.5 to 4.6.2
mod_python updated from 2.7.6 to 2.7.8
Apache updated from??? (six months old) to latest (not 2.0)
Installation was made with the FreeBSD ports system
The page that I accessed is on my internal server 192.168.1.1/wa

/John

Jeff Davis wrote:
> What OS, old mod_python version, new mod_python version, and apache version do 
> you have?
> 
> How did you install the new version? Is it possible that it didn't properly 
> install the mod_python lib? If you were installing from a package, is it 
> possible that it wasn't built correctly?
> 
> What URL were you using to access your page? What are the contents fo your 
> file?
> 
> Please provide the most simple example you can that still reproduces the 
> problem.
> 
> It seems like it might be a problem related to the mod_python library and the 
> URL. Perhaps mod_python was updated and the mod_python library wasn't? 
> Perhaps the new mod_python library doesn't work correcty?
> 
> Regards,
> 	Jeff
> 
> On Saturday 14 September 2002 02:35 pm, John Angelmo wrote:
> 
>>Hello
>>
>>I recently upgraded both mod_python and Apache with portupgrade. Now there
>>seems to be some problem I only get this output:
>>
>>Mod_python error: "PythonHandler mod_python.publisher"
>>
>>Traceback (most recent call last):
>>
>>  File "/usr/local/lib/python2.2/site-packages/mod_python/apache.py", line
>>193, in Dispatch result = object(req)
>>
>>  File "/usr/local/lib/python2.2/site-packages/mod_python/publisher.py",
>>line 88, in handler if func_path[-1] == ".":
>>
>>IndexError: string index out of range
>>
>>
>>My apacheconfig:
>>
>><Directory /usr/local/www/data/wa>
>>            AddHandler python-program .py
>>            PythonHandler mod_python.publisher
>>            PythonDebug On
>></Directory>
>>
>>/John
>>_______________________________________________
>>Mod_python mailing list
>>Mod_python@modpython.org
>>http://www.modpython.org/mailman/listinfo/mod_python
> 
> 
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://www.modpython.org/mailman/listinfo/mod_python



From grisha at modpython.org  Sun Sep 15 13:35:56 2002
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 21:53:08 2004
Subject: [mod_python] "Not Found" message with Publisher example
In-Reply-To: <3D84094F.10501@usc.edu>
Message-ID: <Pine.BSF.4.32.0209151333390.30540-100000@eden.ispol.com>


On Sat, 14 Sep 2002, Rich Pinder wrote:

>    <form action="form/email" method="POST">

try

 <form action="form.py/email" method="POST">


I think it's a typo in the docs.

Grisha


From grisha at modpython.org  Sun Sep 15 13:42:08 2002
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 21:53:08 2004
Subject: [mod_python] Upgrade problem
In-Reply-To: <3D8477AD.1040604@veidit.net>
Message-ID: <Pine.BSF.4.32.0209151337040.30540-100000@eden.ispol.com>

Try changing that line in publicher.py to
    if func_path[:-1] == ".":

(note : before -1)

Grisha

On Sun, 15 Sep 2002, John Angelmo wrote:

> FreeBSD updated from 4.5 to 4.6.2
> mod_python updated from 2.7.6 to 2.7.8
> Apache updated from??? (six months old) to latest (not 2.0)
> Installation was made with the FreeBSD ports system
> The page that I accessed is on my internal server 192.168.1.1/wa
>
> /John
>
> Jeff Davis wrote:
> > What OS, old mod_python version, new mod_python version, and apache version do
> > you have?
> >
> > How did you install the new version? Is it possible that it didn't properly
> > install the mod_python lib? If you were installing from a package, is it
> > possible that it wasn't built correctly?
> >
> > What URL were you using to access your page? What are the contents fo your
> > file?
> >
> > Please provide the most simple example you can that still reproduces the
> > problem.
> >
> > It seems like it might be a problem related to the mod_python library and the
> > URL. Perhaps mod_python was updated and the mod_python library wasn't?
> > Perhaps the new mod_python library doesn't work correcty?
> >
> > Regards,
> > 	Jeff
> >
> > On Saturday 14 September 2002 02:35 pm, John Angelmo wrote:
> >
> >>Hello
> >>
> >>I recently upgraded both mod_python and Apache with portupgrade. Now there
> >>seems to be some problem I only get this output:
> >>
> >>Mod_python error: "PythonHandler mod_python.publisher"
> >>
> >>Traceback (most recent call last):
> >>
> >>  File "/usr/local/lib/python2.2/site-packages/mod_python/apache.py", line
> >>193, in Dispatch result = object(req)
> >>
> >>  File "/usr/local/lib/python2.2/site-packages/mod_python/publisher.py",
> >>line 88, in handler if func_path[-1] == ".":
> >>
> >>IndexError: string index out of range
> >>
> >>
> >>My apacheconfig:
> >>
> >><Directory /usr/local/www/data/wa>
> >>            AddHandler python-program .py
> >>            PythonHandler mod_python.publisher
> >>            PythonDebug On
> >></Directory>
> >>
> >>/John
> >>_______________________________________________
> >>Mod_python mailing list
> >>Mod_python@modpython.org
> >>http://www.modpython.org/mailman/listinfo/mod_python
> >
> >
> > _______________________________________________
> > Mod_python mailing list
> > Mod_python@modpython.org
> > http://www.modpython.org/mailman/listinfo/mod_python
>
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://www.modpython.org/mailman/listinfo/mod_python
>


From jack_diederich at email.com  Sun Sep 15 12:50:24 2002
From: jack_diederich at email.com (Jack Diederich)
Date: Fri Jan  9 21:53:08 2004
Subject: [mod_python] Upgrade problem
Message-ID: <20020915175024.29980.qmail@email.com>

> 
> Try changing that line in publicher.py to
>     if func_path[:-1] == ".":
> 
> (note : before -1)
> 
>
If you just want the last char, and don't want it to fail on an empty string you mean

if func_path[-1:]

func_path[:-1] will give you everything but the last char
-- 
__________________________________________________________
Sign-up for your own FREE Personalized E-mail at Mail.com
http://www.mail.com/?sr=signup


From grisha at modpython.org  Sun Sep 15 16:41:19 2002
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 21:53:08 2004
Subject: [mod_python] Upgrade problem
In-Reply-To: <20020915175024.29980.qmail@email.com>
Message-ID: <Pine.BSF.4.32.0209151640240.32460-100000@eden.ispol.com>

Sorry, my mistake, you're right, it should be [-1:] of course :-)

On Sun, 15 Sep 2002, Jack Diederich wrote:

>
> >
> > Try changing that line in publicher.py to
> >     if func_path[:-1] == ".":
> >
> > (note : before -1)
> >
> >
> If you just want the last char, and don't want it to fail on an empty string you mean
>
> if func_path[-1:]
>
> func_path[:-1] will give you everything but the last char
> --
> __________________________________________________________
> Sign-up for your own FREE Personalized E-mail at Mail.com
> http://www.mail.com/?sr=signup
>


From thanos at 0x01.com  Sun Sep 15 22:48:07 2002
From: thanos at 0x01.com (thanos vassilakis)
Date: Fri Jan  9 21:53:08 2004
Subject: [mod_python] How to upload files using mod_python's publisher handler?
In-Reply-To: <1031854845.5447.9.camel@coraje>
Message-ID: <BB1CA6A6-C91E-11D6-B410-00306559D868@0x01.com>

Try using PSO:
See http://www.scriptfoundry.com/modules/pso/doc/pso-guide.html#files

On Thursday, September 12, 2002, at 02:20 PM, Andres Meza wrote:

> Greetings.
>
> I have created a python CGI script that can upload files sucessfully. 
> Now, I want to create a mod_python script with the same feature using 
> the "publisher" handler and I get this error:??
>
>
> [Thu Sep 12 08:53:41 2002] [error] PythonHandler mod_python.publisher: 
> Traceback (most recent call last):
> [Thu Sep 12 08:53:41 2002] [error] PythonHandler 
> mod_python.publisher:?? File "/home/mrnet/rpm/tmp/mod_python-
> root/usr/lib/python2.2/site-packages/mod_python/apache.py", line 193, 
> in Dispatch
> [Thu Sep 12 08:53:41 2002] [error] PythonHandler 
> mod_python.publisher:?? File "/home/mrnet/rpm/tmp/mod_python-
> root/usr/lib/python2.2/site-packages/mod_python/publisher.py", line 
> 104, in handler
> [Thu Sep 12 08:53:41 2002] [error] PythonHandler 
> mod_python.publisher:?? File "/home/mrnet/rpm/tmp/mod_python-
> root/usr/lib/python2.2/site-packages/mod_python/publisher.py", line 
> 308, in __init__
> [Thu Sep 12 08:53:41 2002] [error] PythonHandler mod_python.publisher: 
> AttributeError: 'file' object has no attribute '__methods__'
>
> Anyone have an idea about why I get this error?
>
> Thanks for your time,

>



From woodm at colorado.edu  Mon Sep 16 01:02:01 2002
From: woodm at colorado.edu (Matthew D. Wood)
Date: Fri Jan  9 21:53:08 2004
Subject: [mod_python] Follow up on install problems.
Message-ID: <1032159721.15421.11.camel@mascot>

Ok, so I believe I've fixed my -DEAPI error, but I still can't get
apache to start.  

both
    apachectl start
and
    httpd -X
do not start the deamon.

Here is the output from "apachectl start":
    [doorman:/usr/sbin] > sudo ./apachectl start
    Password:
    /usr/sbin/apachectl start: httpd could not be started

"httpd -X" on the other hand gives me absolutely no output.


Every time I run either of those commands, my error_log file has the
following appended:
    /usr/libexec/ld.so: Undefined symbol "_pthread_mutex_init" called
    from httpd:/usr/lib/apache/modules/mod_python.so at 0x402e0148

I would love to run an "strace" but I don't think it's installed, and my
not-so-through attempts to find it have resulted in failure so far.


As always, thank you all for even reading this.  And you all definitely
receive an enormous "thank you" for any help you can give.





Here's my system information:
  OS: OpenBSD 3.1
  Python: I have both 2.2 and 2.1 .  I don't know why, but the OpenBSD
          ports tree decided I should have both.
  Apache: I'm running the out-of-the-box 1.3 that comes with OpenBSD




From alain at onesite.org  Mon Sep 16 09:40:01 2002
From: alain at onesite.org (Alain Tesio)
Date: Fri Jan  9 21:53:08 2004
Subject: [mod_python] Follow up on install problems.
In-Reply-To: <1032159721.15421.11.camel@mascot>
References: <1032159721.15421.11.camel@mascot>
Message-ID: <20020916094001.39f7fd79.alain@onesite.org>

On 16 Sep 2002 01:02:01 -0600
"Matthew D. Wood" <woodm@colorado.edu> wrote:

> I would love to run an "strace" but I don't think it's installed, and my
> not-so-through attempts to find it have resulted in failure so far.
> 
>   OS: OpenBSD 3.1

There is no strace on OpenBSD, the analogous program is ktrace,
use kdump to see the contents of the log files.

Alain

From jack_diederich at email.com  Mon Sep 16 08:54:04 2002
From: jack_diederich at email.com (Jack Diederich)
Date: Fri Jan  9 21:53:08 2004
Subject: [mod_python] Follow up on install problems.
Message-ID: <20020916135404.9741.qmail@email.com>

> Every time I run either of those commands, my error_log file has the
> following appended:
>     /usr/libexec/ld.so: Undefined symbol "_pthread_mutex_init" called
>     from httpd:/usr/lib/apache/modules/mod_python.so at 0x402e0148
> 
It looks like you either have python compiled with threads,
or a module that requires threads is being loaded.

mod_python can't be compiled with threads due to the spawning nature of apache.

-jack
-- 
__________________________________________________________
Sign-up for your own FREE Personalized E-mail at Mail.com
http://www.mail.com/?sr=signup


From grisha at modpython.org  Mon Sep 16 10:47:46 2002
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 21:53:09 2004
Subject: [mod_python] Follow up on install problems.
In-Reply-To: <20020916135404.9741.qmail@email.com>
Message-ID: <Pine.BSF.4.32.0209161043370.41786-100000@eden.ispol.com>

To be more precise, it's an issues specifically on FreeBSD (and I guess on
OpenBSD as well), which uses different libc's for threaded and not
threaded apps. As a result, you can't mix the two, and Apache 1.3 is
usually compiled against non-threaded libs since it doesn't care for
threads. So your only options are to recompile Python without threads or
compile Apache with threads (I've never tried the latter, but the former
works just fine).

The threaded/non-threaded thing doesn't seem to be an issue on Linux or
Solaris.

Grisha

On Mon, 16 Sep 2002, Jack Diederich wrote:

> > Every time I run either of those commands, my error_log file has the
> > following appended:
> >     /usr/libexec/ld.so: Undefined symbol "_pthread_mutex_init" called
> >     from httpd:/usr/lib/apache/modules/mod_python.so at 0x402e0148
> >
> It looks like you either have python compiled with threads,
> or a module that requires threads is being loaded.
>
> mod_python can't be compiled with threads due to the spawning nature of apache.
>


From jack_diederich at email.com  Mon Sep 16 13:19:25 2002
From: jack_diederich at email.com (Jack Diederich)
Date: Fri Jan  9 21:53:09 2004
Subject: [mod_python] Initializing the interpreter in python_init() instead of
 python_handler()
Message-ID: <20020916181926.12891.qmail@email.com>

I just threw some of the python_handler() code into python_init() and it works!

This means that it is possible to do all the imports etc only once, instead of once per child.
I mentioned the possibility here
http://www.modpython.org/pipermail/mod_python/2002-July/002246.html
and compared it to the mod_perl handler here
http://www.modpython.org/pipermail/mod_python/2002-July/002248.html

Basically, we currently do more work than we have to because each child does the same work to initalize the interpreter.  In the easy case where we are using the PythonInterpreter directive to force everyone to use
the same name for the interpreter (in the below example 'MAIN') we can just do the one initilization in python_init() and the children inherit a clone of the result.  I'm not aware of any problems this might cause (wierd shared file handles or something) but I haven't tested it very extensively.  I do some calculations in the main of several of my modules, so having this done once is a decent speed boost at apache startup.

below is my replacement python_init(), it only works if you have

PythonInterpreter 'MAIN'

in your httpd.conf

modified python_init follows, based on ver 2.7.8
GLYPHS AND WARNINGS!
this is just a proof-of-concept, I don't do lots of neccessary error checking
and I've hard coded all my strings instead of reading the apache configuration.
After initializing the MAIN interpreter, it loads my module your_python_module_here.py
and calls its setup function do_our_one_time_global_setup().  The children then get all
the calculated stuff that was done in do_our_one_time_global_setup().

enjoy,

-jack

void python_init(server_rec *s, pool *p)
{

    char buff[255];
    PyObject *m;
    PyObject *obCallBack = NULL;
    interpreterdata *idata;
    PyThreadState *tstate;

    /* pool given to us in ChildInit. We use it for 
       server.register_cleanup() */
    pool *child_init_pool = NULL;

    /* mod_python version */
    ap_add_version_component(VERSION_COMPONENT);
    
    /* Python version */
    sprintf(buff, "Python/%s", strtok((char *)Py_GetVersion(), " "));
    ap_add_version_component(buff);

    /* initialize global Python interpreter if necessary */
    if (! Py_IsInitialized()) 
    {

	/* initialze the interpreter */
	Py_Initialize();

#ifdef WITH_THREAD
	/* create and acquire the interpreter lock */
	PyEval_InitThreads();
#endif
	/* Release the thread state because we will never use 
	 * the main interpreter, only sub interpreters created later. */
        PyThreadState_Swap(NULL); 

	/* create the obCallBack dictionary */
	interpreters = PyDict_New();
	if (! interpreters) {
	    ap_log_error(APLOG_MARK, APLOG_NOERRNO|APLOG_ERR, s,
			 "python_init: PyDict_New() failed! No more memory?");
	    exit(1);
	}

	/* NEW STUFF FROM HERE */
	idata = get_interpreter_data("MAIN", s);
	tstate = PyThreadState_New(idata->istate);
	PyThreadState_Swap(tstate);

	m = PyImport_ImportModule("your_python_module_here");
	if (!m) {
	  fprintf(stderr, "Couldn't import module\n");
	} else {
	  obCallBack = PyObject_CallMethod(m, "do_our_one_time_global_setup", NULL);
	  if (!obCallBack)
	    fprintf(stderr, "CallFunc failed\n");
	  else
	    fprintf(stderr, "I think it succeeded?\n");
	}

	PyThreadState_Swap(NULL);
	PyThreadState_Delete(tstate);
	/* TO HERE */

#ifdef WITH_THREAD
	/* release the lock; now other threads can run */
	PyEval_ReleaseLock();
#endif
    }
}



-- 
__________________________________________________________
Sign-up for your own FREE Personalized E-mail at Mail.com
http://www.mail.com/?sr=signup


From woodm at colorado.edu  Mon Sep 16 21:40:01 2002
From: woodm at colorado.edu (Matthew D. Wood)
Date: Fri Jan  9 21:53:09 2004
Subject: [mod_python] Follow up on install problems.
In-Reply-To: <Pine.BSF.4.32.0209161043370.41786-100000@eden.ispol.com>
References: <Pine.BSF.4.32.0209161043370.41786-100000@eden.ispol.com>
Message-ID: <1032234001.15421.437.camel@mascot>

Interesting.  Has anyone tried using mod-python in a threaded setting? 
I just wouldn't have thought that to be a problem.

So, just to be clear, if I recompile apache with threads support, will I
be able to create mod-python scripts that use threads?


On Mon, 2002-09-16 at 08:47, Gregory (Grisha) Trubetskoy wrote:
> 
> To be more precise, it's an issues specifically on FreeBSD (and I guess on
> OpenBSD as well), which uses different libc's for threaded and not
> threaded apps. As a result, you can't mix the two, and Apache 1.3 is
> usually compiled against non-threaded libs since it doesn't care for
> threads. So your only options are to recompile Python without threads or
> compile Apache with threads (I've never tried the latter, but the former
> works just fine).
> 
> The threaded/non-threaded thing doesn't seem to be an issue on Linux or
> Solaris.
> 
> Grisha
> 
> On Mon, 16 Sep 2002, Jack Diederich wrote:
> 
> > > Every time I run either of those commands, my error_log file has the
> > > following appended:
> > >     /usr/libexec/ld.so: Undefined symbol "_pthread_mutex_init" called
> > >     from httpd:/usr/lib/apache/modules/mod_python.so at 0x402e0148
> > >
> > It looks like you either have python compiled with threads,
> > or a module that requires threads is being loaded.
> >
> > mod_python can't be compiled with threads due to the spawning nature of apache.
> >
> 
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://www.modpython.org/mailman/listinfo/mod_python


From grisha at modpython.org  Mon Sep 16 23:56:02 2002
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 21:53:09 2004
Subject: [mod_python] Follow up on install problems.
In-Reply-To: <1032234001.15421.437.camel@mascot>
Message-ID: <Pine.BSF.4.32.0209162355020.50632-100000@eden.ispol.com>

On 16 Sep 2002, Matthew D. Wood wrote:

> So, just to be clear, if I recompile apache with threads support, will I
> be able to create mod-python scripts that use threads?

I don't see why not, provided you're on one of the platforms where mixing
thread/non-thread is possible.

Grisha



From cgardner at netlojix.com  Tue Sep 17 09:43:16 2002
From: cgardner at netlojix.com (Clarence Gardner)
Date: Fri Jan  9 21:53:09 2004
Subject: [mod_python] signal handling
Message-ID: <20020917094316.A3021@liberty.sba2.netlojix.net>

Hello.

I've recently noticed that an application that I ported to mod_python
is unable to do signal handling. In particular, it sets a SIGALRM handler,
which gets correctly registered (as confirmed by a second call to
signal.signal), but after an alarm() call, the signal handler just
never gets delivered. It works fine as a CGI. I noticed that Apache
uses SIGALRM internally, so for fun I tried registering a SIGWINCH
handler instead and then sending myself that signal, and that didn't
get invoked either.

I've seen this on two different system configurations; one was
using Apache 1.3.22, mod_python 2.7.6, and Linux 2.2.19.

TIA for any help with this.

-- 
Clarence Gardner
Software Engineer
NetLojix Communications
cgardner@netlojix.com

From gkrackow at bellsouth.net  Tue Sep 17 13:26:10 2002
From: gkrackow at bellsouth.net (Dr . Unix Software Inc .)
Date: Fri Jan  9 21:53:09 2004
Subject: [mod_python] Fwd: Installation problems - Unable to configure Apache 1.3.26 [gkrackow@bellsouth.net]
In-Reply-To: <20020917131446.A21056@compaq450>; from gkrackow@bellsouth.net on Tue, Sep 17, 2002 at 13:14:46 -0400
References: <20020917131446.A21056@compaq450>
Message-ID: <20020917132610.C21056@compaq450>

Hi guys, I am new to the mod_python mailing list.

I have tried for more than 4 days to get the mod_python working with apache
1.3.26

I followed the Mod_python manual instructions, and had spent lots of times
looking in the mailing list for a clue.

This is what I have :

RedHat 7.2 (Enigma), Kernel 2.4.7-10
gcc 2.96
Python 2.2.1 compiled with no threads.
Apache 1.3.26
mod_python 2.7.8


Making mod_python was no problem. I have apache installed under
/usr/local/apache, so I used ./configure
with --with-apache and --with-python options.

I used make, and make static, as well as (root) make install and make
install_static. It made no difference, the Apache 
recompilation failed with the same errors.

From gkrackow at bellsouth.net  Tue Sep 17 13:32:22 2002
From: gkrackow at bellsouth.net (Dr . Unix Software Inc .)
Date: Fri Jan  9 21:53:09 2004
Subject: [mod_python] Installation problems - Unable to configure Apache 1.3.26
In-Reply-To: <20020917132610.C21056@compaq450>; from gkrackow@bellsouth.net on Tue, Sep 17, 2002 at 13:26:10 -0400
References: <20020917131446.A21056@compaq450> <20020917132610.C21056@compaq450>
Message-ID: <20020917133222.A22983@compaq450>

Hi guys, I am new to the mod_python mailing list.

I have tried for more than 4 days to get the mod_python working with apache
1.3.26

I followed the Mod_python manual instructions, and had spent lots of times
looking in the mailing list for a clue.

This is what I have :

RedHat 7.2 (Enigma), Kernel 2.4.7-10
gcc 2.96
Python 2.2.1 compiled with no threads.
Apache 1.3.26
mod_python 2.7.8


Making mod_python was no problem. I have apache installed under
/usr/local/apache, so I used ./configure
with --with-apache and --with-python options.

I used make, and make static, as well as (root) make install and make
install_static. It made no difference, the Apache 
recompilation failed with the same errors.

From jack_diederich at email.com  Wed Sep 18 01:42:43 2002
From: jack_diederich at email.com (Jack Diederich)
Date: Fri Jan  9 21:53:09 2004
Subject: [mod_python] Installation problems - Unable to configure
    Apache 1.3.26
Message-ID: <20020918064243.3864.qmail@email.com>

I've had this problem before, I ended up using a DSO install instead.

here is my mod_python ./configure
./configure  --with-apxs=/home/apache_python/bin/apxs

and my apache ./configure
./configure --with-layout=Apache --prefix=/home/apache_python --enable-module=so --enable-rule=SHARED_CORE

----- Original Message -----
From: "Dr . Unix Software Inc ." <gkrackow@bellsouth.net>
Date: Tue, 17 Sep 2002 13:32:22 -0400 
To: mod_python@modpython.org
Subject: [mod_python] Installation problems - Unable to configure Apache 1.3.26


> 
> Hi guys, I am new to the mod_python mailing list.
> 
> I have tried for more than 4 days to get the mod_python working with apache
> 1.3.26
> 
> I followed the Mod_python manual instructions, and had spent lots of times
> looking in the mailing list for a clue.
> 
> This is what I have :
> 
> RedHat 7.2 (Enigma), Kernel 2.4.7-10
> gcc 2.96
> Python 2.2.1 compiled with no threads.
> Apache 1.3.26
> mod_python 2.7.8
> 
> 
> Making mod_python was no problem. I have apache installed under
> /usr/local/apache, so I used ./configure
> with --with-apache and --with-python options.
> 
> I used make, and make static, as well as (root) make install and make
> install_static. It made no difference, the Apache 
> recompilation failed with the same errors.
> 
> From the Apache source directory I issued the command :
> 
> ./configure --activate-module=src/modules/python/libpython.a
> 
> which gave : 
> 
> Configuring for Apache, Version 1.3.26
>  + using installation path layout: Apache (config.layout)
>  + activated python module (modules/python/libpython.a)
> Creating Makefile
> Creating Configuration.apaci in src
> Creating Makefile in src
>  + configured for Linux platform
>  + setting C compiler to gcc
>  + setting C pre-processor to gcc -E
>  + checking for system header files
>  + adding selected modules
>     o python_module uses ConfigStart/End
>  + using system Expat
>  + checking sizeof various data types
>  + doing sanity check on compiler and options
> Creating Makefile in src/support
> Creating Makefile in src/regex
> Creating Makefile in src/os/unix
> Creating Makefile in src/ap
> Creating Makefile in src/main
> Creating Makefile in src/modules/standard
> Creating Makefile in src/modules/python
> 
> then issued make
> 
> This is the last part of the Apache compilation that shows the errors :
> 
> 
> gcc -c -I/usr/drunix/webservers/apache/mod_python-2.7.8/src/include
> -I/usr/drunix/webservers/apache/apache_1.3.26/src/include
> -I/usr/drunix/webservers/apache/apache_1.3.26/src/os/unix
> -I/usr/drunix/programming/python/Python-2.2.1
> -I/usr/drunix/programming/python/Python-2.2.1/Include -I./os/unix
> -I./include   -DLINUX=22 -DUSE_HSREGEX -DNO_DL_NEEDED `./apaci` buildmark.c
> gcc  -DLINUX=22 -DUSE_HSREGEX -DNO_DL_NEEDED `./apaci` -Xlinker
> -export-dynamic       \
>       -o httpd buildmark.o modules.o modules/standard/libstandard.a
> modules/python/libpython.a main/libmain.a ./os/unix/libos.a ap/libap.a
> regex/libregex.a   -lm -lcrypt -lm  /usr/drunix/programming/python/Python-2.2.1/libpython2.2.a
> -lexpat
> 
> --->> This is my note : Up to here everything seems to be okay, but then
> ...  --->>
> 
> /usr/drunix/programming/python/Python-2.2.1/libpython2.2.a(posixmodule.o):
> In function `posix_tmpnam':
> /usr/drunix/programming/python/Python-2.2.1/./Modules/posixmodule.c:4503:
> the use of `tmpnam' is dangerous, better use `mkstemp'
> /usr/drunix/programming/python/Python-2.2.1/libpython2.2.a(posixmodule.o):
> In function `posix_tempnam':
> /usr/drunix/programming/python/Python-2.2.1/./Modules/posixmodule.c:4451:
> the use of `tempnam' is dangerous, better use `mkstemp'
> 
> /usr/drunix/programming/python/Python-2.2.1/libpython2.2.a(dynload_shlib.o):
> In function `_PyImport_GetDynLoadFunc':
> /usr/drunix/programming/python/Python-2.2.1/Python/dynload_shlib.c:90:
> undefined reference to `dlopen'
> /usr/drunix/programming/python/Python-2.2.1/Python/dynload_shlib.c:93:
> undefined reference to `dlerror'
> /usr/drunix/programming/python/Python-2.2.1/Python/dynload_shlib.c:74:
> undefined reference to `dlsym'
> /usr/drunix/programming/python/Python-2.2.1/Python/dynload_shlib.c:98:
> undefined reference to `dlsym'
> /usr/drunix/programming/python/Python-2.2.1/libpython2.2.a(posixmodule.o):
> In function `posix_openpty':
> /usr/drunix/programming/python/Python-2.2.1/./Modules/posixmodule.c:1934:
> undefined reference to `openpty'
> /usr/drunix/programming/python/Python-2.2.1/libpython2.2.a(posixmodule.o):
> In function `posix_forkpty':
> /usr/drunix/programming/python/Python-2.2.1/./Modules/posixmodule.c:1965:
> undefined reference to `forkpty'
> collect2: ld returned 1 exit status
> make[2]: *** [target_static] Error 1
> make[2]: Leaving directory `/usr/drunix/webservers/apache/apache_1.3.26/src'
> make[1]: *** [build-std] Error 2
> make[1]: Leaving directory `/usr/drunix/webservers/apache/apache_1.3.26'
> make: *** [build] Error 2
> 
> I have been stuck here for days, found no similar errors in the mailing
> list, I scanned them form January to September (2002).
> 
> Any susgestions would be greatly appreciated.
> 
> G.K.
> 
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://www.modpython.org/mailman/listinfo/mod_python
> 
> 

-- 
__________________________________________________________
Sign-up for your own FREE Personalized E-mail at Mail.com
http://www.mail.com/?sr=signup


From bryan at eevolved.com  Tue Sep 17 21:06:52 2002
From: bryan at eevolved.com (Bryan Mongeau)
Date: Fri Jan  9 21:53:09 2004
Subject: [mod_python] Mod_python and Sub-Interpreter segregation
In-Reply-To: <001401c25b9b$e97f0770$0400a8c0@clapton>
References: <001401c25b9b$e97f0770$0400a8c0@clapton>
Message-ID: <200209172106.52339.bryan@eevolved.com>

On September 14, 2002 03:07 am, Michael Neel wrote:
> Thank will work great, until you hit the 65th concurrent connection, at
> wich point apache will give you another child.

Thanks Mike. It seems as if even when MaxClients is set to 64 apache will fork 
another child anyway on the 65th concurrent connection... Why? Do you know 
what is going on here? I would like to simply work around the issue by 
limiting the amount of concurrent clients.

> (just a side note, to test a web server I use the ab tool
> that comes with apache; it will let you set the concurrent number of
> theard to try and get at once).

Thanks alot, ab is my newest friend :)
-- 
Bryan Mongeau
eEvolved Inc. - IT Consulting & Custom Software
http://eevolved.com/
--
"10^38 machine instructions would simulate ALL the brains (non-humans 
included) that ever existed, ever since brains were invented in the Cambrian 
Explosion 570 million years ago." -- K. Eric Drexler


From neel at mediapulse.com  Wed Sep 18 13:57:35 2002
From: neel at mediapulse.com (Michael C. Neel)
Date: Fri Jan  9 21:53:10 2004
Subject: [mod_python] Mod_python and Sub-Interpreter segregation
Message-ID: <C0FC22C08B82074A88B50061764157775BAE@johnson.mediapulse.net>

I think you might be able to get the effect you want with the
ServerLimit setting, although I still don't recommend constraining
apache.  To do a hit counter, bumping a number in a flat file would
probably be best.  I'm not sure what the overall goal is, but there are
also other options for managing state.

Yea, ever since I met ab we have been very close.

Mike
--
Michael C. Neel
There are only 10 types of people in the world;
those who understand binary and those who don't.


-----Original Message-----
From: Bryan Mongeau [mailto:bryan@eevolved.com] 
Sent: Tuesday, September 17, 2002 5:07 PM
To: mod_python@modpython.org
Subject: Re: [mod_python] Mod_python and Sub-Interpreter segregation


On September 14, 2002 03:07 am, Michael Neel wrote:
> Thank will work great, until you hit the 65th concurrent connection,
at
> wich point apache will give you another child.

Thanks Mike. It seems as if even when MaxClients is set to 64 apache
will fork 
another child anyway on the 65th concurrent connection... Why? Do you
know 
what is going on here? I would like to simply work around the issue by 
limiting the amount of concurrent clients.

> (just a side note, to test a web server I use the ab tool
> that comes with apache; it will let you set the concurrent number of
> theard to try and get at once).

Thanks alot, ab is my newest friend :)
-- 
Bryan Mongeau
eEvolved Inc. - IT Consulting & Custom Software
http://eevolved.com/
--
"10^38 machine instructions would simulate ALL the brains (non-humans 
included) that ever existed, ever since brains were invented in the
Cambrian 
Explosion 570 million years ago." -- K. Eric Drexler

_______________________________________________
Mod_python mailing list
Mod_python@modpython.org
http://www.modpython.org/mailman/listinfo/mod_python


From pk1u at yahoo.com  Wed Sep 18 13:31:29 2002
From: pk1u at yahoo.com (Praveen Kumar)
Date: Fri Jan  9 21:53:10 2004
Subject: [mod_python] multithreading support
Message-ID: <20020918203129.71020.qmail@web80305.mail.yahoo.com>

I've found messages on various lists that have stated
that it's a myth that threads don't work w/
mod_python, it works fine on most platforms, etc. Can
anyone comment on that ( I *really* want to use
threads ) ? Has anyone encountered problems w/ threads
on a RH7.2 + Apache 1.3.26 + mod_python 2.7.8 + Python
2.1.3 config ?

pk


__________________________________________________
Do you Yahoo!?
Yahoo! News - Today's headlines
http://news.yahoo.com

From bryan at eevolved.com  Fri Sep 20 16:58:08 2002
From: bryan at eevolved.com (Bryan Mongeau)
Date: Fri Jan  9 21:53:10 2004
Subject: [mod_python] multithreading support
In-Reply-To: <20020918203129.71020.qmail@web80305.mail.yahoo.com>
References: <20020918203129.71020.qmail@web80305.mail.yahoo.com>
Message-ID: <200209201658.08726.bryan@eevolved.com>

On September 18, 2002 08:31 pm, Praveen Kumar wrote:
> I've found messages on various lists that have stated
> that it's a myth that threads don't work w/
> mod_python, it works fine on most platforms, etc. Can
> anyone comment on that ( I *really* want to use
> threads ) ? Has anyone encountered problems w/ threads
> on a RH7.2 + Apache 1.3.26 + mod_python 2.7.8 + Python
> 2.1.3 config ?

I have successfully used threads to implement a "Janitor" that periodically 
deletes expired sessions. It is (re)started when the module is imported. It 
is part of a session module that handles cookie based user session variables. 
Usage:

from mod_python import apache
from session import CookieSession

def handler(req):
	sess = CookieSession(req)
	req.content_type="text/html"
	req.send_http_header()
	try:
		sess['hits'] += 1
	except KeyError:
		sess['hits'] = 1
	req.write("Session hits: "+str(sess['hits']))
	return apache.OK

Anyone interested in such a beast can drop me a line. I have not yet tested it 
extensively but Threads and Events definitely *seem* to work.

My setup:
apache 2.0.40
mod_python 3.0 BETA ( patched )
python 2.2.1
-- 
Bryan Mongeau
eEvolved Inc. - IT Consulting & Custom Software
http://eevolved.com/
--
"The only thing that I'd rather own than Windows is English, because then I 
could charge you two hundred and forty-nine dollars for the right to speak 
it." -- Scott McNealy


From jack_diederich at email.com  Fri Sep 20 22:41:08 2002
From: jack_diederich at email.com (Jack Diederich)
Date: Fri Jan  9 21:53:10 2004
Subject: [mod_python] multithreading support
Message-ID: <20020921034108.10532.qmail@email.com>

Re: Threads & mod_python

Grisha can give the final +1/-1 ...

I've read through the mod_python source, and the python embedding HOWTO here http://www.python.org/doc/current/api/threads.html
and in my opinion mod_python will only not work with threads if there is a bug in mod_python interpreter locking, which I doubt is the case because there's really only two places where we call the interpreter (to get the python callback, and to make the callback) and the code would shit the bed if it wasn't 100% right in the first place.  

I run mod_python without threads because I use it in a production environment, so I want to be safe. I don't require threads for the app, so I don't lose anything.

My only minor /but/ is that the python documentation defines a couple of the functions mod_python calls as unavailable functions if python is compiled without threads. (from the link above, read PyEval_AcquireThread).  I think this is documentation dissonace, but just maybe it means that a macro does nothing when it should be doing something.  Bizzarly enough, maybe that means that compiling _without_ threads is the wrong thing to do!

-jackdied
-- 
__________________________________________________________
Sign-up for your own FREE Personalized E-mail at Mail.com
http://www.mail.com/?sr=signup


From jack_diederich at email.com  Sat Sep 21 17:04:10 2002
From: jack_diederich at email.com (Jack Diederich)
Date: Fri Jan  9 21:53:10 2004
Subject: [mod_python] python-dev down?
Message-ID: <20020921220410.562.qmail@email.com>

Is the python-dev list down, or is it simply smart enough not to relay something I sent back to me?

-jack
-- 
__________________________________________________________
Sign-up for your own FREE Personalized E-mail at Mail.com
http://www.mail.com/?sr=signup


From grisha at ispol.com  Tue Sep 24 13:20:59 2002
From: grisha at ispol.com (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 21:53:10 2004
Subject: [mod_python] another beta tarball
Message-ID: <Pine.BSF.4.32.0209241317520.53347-100000@eden.ispol.com>

You can get the latest 3.0 Beta tarball from
http://www.apache.org/dist/httpd/modpython/dev/

Note the new location. It also has all the other dist files, and will be
the main distribution point moving forward. Port, rpm and package
maintainers should probably update their files to fetch from there.

Grisha



From mbp at samba.org  Wed Sep 25 18:26:47 2002
From: mbp at samba.org (Martin Pool)
Date: Fri Jan  9 21:53:10 2004
Subject: [mod_python] [patch] Make mod_python work with NTLM authentication
Message-ID: <20020925082645.GG8296@samba.org>

The mod_python 2.7.8 Publisher assumes that it will only ever be used
with Basic authentication.  It always returns "400 Bad Request" if it
is ever used inside a directory authenticated by Apache's mod_ntlm,
which uses the Authorization header with a different format.   I
suspect it would fail with digest authentication as well.

This patch makes the publisher adhere more closely to the RFC2617
specification by checking the authentication scheme name before trying
to parse the header.

If this could go into 2.7.9 I would be happy.

Index: publisher.py
===================================================================
--- publisher.py
+++ publisher.py	2002-09-25 17:23:05.000000000 +1000
@@ -189,6 +189,29 @@
     else:
         return apache.HTTP_INTERNAL_SERVER_ERROR
 
+
+def _parse_authentication(req):
+    """Return (username, password) from the Authorization header.
+
+    This only handles HTTP Basic (RFC2617) authentication.  In at
+    least two other interesting cases, it is not possible for
+    mod_python to know the password, because it is not included in the
+    request.  For authentication schemes other than Basic, (None,
+    None) is returned.
+
+    May raise an exception if the authorization is invalid in some way.
+    """
+    s = req.headers_in["Authorization"]
+    scheme, rest = string.split(s, None, 1)
+    if string.lower(scheme) != 'basic':
+        return None, None
+
+    s = base64.decodestring(rest)
+    user, passwd = string.split(s, ":", 1)
+    return user, passwd
+    
+    
+
 def process_auth(req, object, realm="unknown", user=None, passwd=None):
 
     found_auth, found_access = 0, 0
@@ -202,9 +225,7 @@
     # once and the are received as arguments
     if not user and req.headers_in.has_key("Authorization"):
         try:
-            s = req.headers_in["Authorization"][6:]
-            s = base64.decodestring(s)
-            user, passwd = string.split(s, ":", 1)
+            user, passwd = _parse_authentication(req)
         except:
             raise apache.SERVER_RETURN, apache.HTTP_BAD_REQUEST
 

-- 
Martin 



From mbp at samba.org  Wed Sep 25 18:33:50 2002
From: mbp at samba.org (Martin Pool)
Date: Fri Jan  9 21:53:10 2004
Subject: [mod_python] Mod_python and Sub-Interpreter segregation
In-Reply-To: <200209172106.52339.bryan@eevolved.com>
References: <001401c25b9b$e97f0770$0400a8c0@clapton> <200209172106.52339.bryan@eevolved.com>
Message-ID: <20020925083348.GH8296@samba.org>

On 17 Sep 2002, Bryan Mongeau <bryan@eevolved.com> wrote:
> On September 14, 2002 03:07 am, Michael Neel wrote:
> > Thank will work great, until you hit the 65th concurrent connection, at
> > wich point apache will give you another child.
> 
> Thanks Mike. It seems as if even when MaxClients is set to 64 apache will fork 
> another child anyway on the 65th concurrent connection... Why? Do you know 
> what is going on here? I would like to simply work around the issue by 
> limiting the amount of concurrent clients.

I think if you go down the path of relying on data kept inside an
Apache instance you will regret it.  The right way to retain state on
the server is to keep it in some kind of external database. 

Here are a few reasons:

 - If you reconfigure apache (e.g. apachectl graceful) or need to
   restart it, the data in memory will be irretrievably lost.
   Perhaps at the moment you don't need strong persistence but most
   web apps find their storage needs grow, so you will in the future. 

 - Having multiple children is an important robustness feature of
   Apache.

 - Keeping shared data separate is a "safer" design -- if you need to  
   coordinate access between threads then there is a risk of race
   conditions or lockups.  For example, if one thread abnormally
   terminates, it might leave internal data structures in an
   inconsistent state.  If you use an external database things are
   more isolated and easier to debug.

 - Using something like Python's shelve module is nearly as easy as an
   in-memory variable.

This is a dead horse; there are plenty of other discussions of it on
the web.  Don't repeat mistakes that were learnt by others six years
ago.

-- 
Martin 

From grisha at modpython.org  Wed Sep 25 09:31:05 2002
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 21:53:10 2004
Subject: [mod_python] [patch] Make mod_python work with NTLM authentication
In-Reply-To: <20020925082645.GG8296@samba.org>
Message-ID: <Pine.BSF.4.32.0209250929120.64042-100000@eden.ispol.com>

On Wed, 25 Sep 2002, Martin Pool wrote:

> If this could go into 2.7.9 I would be happy.

I will add it to 3.0. 2.7.9 won't happen unless there are some serious
problems (like security).

Grisha


From wilk-ml at flibuste.net  Wed Sep 25 22:48:14 2002
From: wilk-ml at flibuste.net (William Dode)
Date: Fri Jan  9 21:53:10 2004
Subject: [mod_python] suexec setuid
Message-ID: <87fzvxn6cx.fsf@flibuste.net>

hi,

Is it possible to change the uid of the interpreter like suexec, in
different virtual host ?

thanks

-- 
William - http://wikipython.tuxfamily.org

From grisha at modpython.org  Wed Sep 25 19:42:51 2002
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 21:53:10 2004
Subject: [mod_python] suexec setuid
In-Reply-To: <87fzvxn6cx.fsf@flibuste.net>
Message-ID: <Pine.BSF.4.32.0209251941120.70644-100000@eden.ispol.com>

It should be possible on Apache 2.0 using the perchild MPM. I haven't
tried this. The latest mp 3.0 beta should be pretty stable - give it a try
:)

On 25 Sep 2002, William Dode wrote:

> hi,
>
> Is it possible to change the uid of the interpreter like suexec, in
> different virtual host ?
>
> thanks
>
> --
> William - http://wikipython.tuxfamily.org
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://www.modpython.org/mailman/listinfo/mod_python
>


From neo at https.ru  Thu Sep 26 19:39:29 2002
From: neo at https.ru (Neo Eureka)
Date: Fri Jan  9 21:53:10 2004
Subject: [mod_python] BETA2: problems with configure and make !
In-Reply-To: <Pine.BSF.4.32.0209251941120.70644-100000@eden.ispol.com>
References: <Pine.BSF.4.32.0209251941120.70644-100000@eden.ispol.com>
Message-ID: <5721418898.20020926193929@https.ru>

  Hello !

  I have just tried to configure and make the "BETA2" of mod_python3.
The results are below.
  I was not completely sure to which of 2 lists I should post this,
but it seems I act as a user rather than a developer, so...

  My server runs Linux 7.2 (Enigma), I have just downloaded the latest
release of Apache -- httpd-2.0.42, and was playing with it to see how
things work with it. I have three different versions of Python
installed: 1.5(native), 2.1.3 and 2.2.1. The latter two are installed
as packages (rpm) with corresponding "-devel" packages.

  It seems, all preconditions for successful build of mod_python are
met, but the problems started once I had run 'configure'.

Firstly, it found Python-1.5 and was happy though it requires 2.2.1.
So I tried "./configure --with-python=...". But here, again, it
behaved odd. It was trying to find Python executable, some "Makefile"
and "Include" source directory. Unsuccessfully.

Below is the directory tree of the Python installation:

-- BEGIN --
/usr/local/python-2.2.1/:
total 28
drwxr-sr-x    7 root     root         4096 Sep 10 15:46 ./
drwxr-sr-x   26 root     root         4096 Sep 10 15:46 ../
drwxr-sr-x    2 root     root         4096 Sep 26 17:24 bin/
drwxr-sr-x    3 root     root         4096 Sep 10 15:46 include/
drwxr-sr-x    3 root     root         4096 Sep 10 15:46 lib/
drwxr-sr-x    3 root     root         4096 Sep 10 15:46 man/
drwxr-sr-x    3 root     root         4096 Sep 10 15:46 share/

/usr/local/python-2.2.1/bin:
total 836
drwxr-sr-x    2 root     root         4096 Sep 26 17:24 ./
drwxr-sr-x    7 root     root         4096 Sep 10 15:46 ../
-rwxr-xr-x    1 root     root           49 Apr  9 23:16 pydoc2*
-rwxr-xr-x    1 root     root       838114 Apr  9 23:16 python2*

/usr/local/python-2.2.1/include:
total 12
drwxr-sr-x    3 root     root         4096 Sep 10 15:46 ./
drwxr-sr-x    7 root     root         4096 Sep 10 15:46 ../
drwxr-xr-x    2 root     root         4096 Sep 10 15:47 python2.2/

/usr/local/python-2.2.1/include/python2.2:
[... skipped ...]

/usr/local/python-2.2.1/lib:
total 20
drwxr-sr-x    3 root     root         4096 Sep 10 15:46 ./
drwxr-sr-x    7 root     root         4096 Sep 10 15:46 ../
drwxr-xr-x   14 root     root        12288 Sep 10 15:47 python2.2/

/usr/local/python-2.2.1/lib/python2.2:
[... skipped ...]

/usr/local/python-2.2.1/man:
[... skipped ...]

/usr/local/python-2.2.1/share:
[... skipped ...]
-- END --

It's obvious that "configure" script expects different layout and
filenames. When I added these symlinks to the
"/usr/local/python-2.2.1/bin" directory:

lrwxrwxrwx    1 root     root           20 Sep 26 17:24 Include -> ../include/python2.2/
lrwxrwxrwx    1 root     root            7 Sep 26 17:15 python -> python2*

... "configure" seemed to succeed, though it failed to find "Makefile"
and "Modules" directory.

I also have problems with "make dso" after the above, but I think I
should first investigate the issue myself.

Am I missing something? May be I did something dumb? I still have poor
experience of Linux etc.

Thanks.

---
Neo Eureka / mailto:neo@https.ru


From leader730 at hotmail.com  Sun Sep  1 00:40:30 2002
From: leader730 at hotmail.com (Leader730)
Date: Fri Jan  9 21:59:36 2004
Subject: [mod_python] Running more than one Python script
Message-ID: <OE23auNjVuMhvqgStMV0000edaf@hotmail.com>

Hello, I am new to all this and I'm having a problem, I configured mod_python on alright I guess but the only file that will run is the the name specidied after PythonHandler in the apache httpd.conf file

<Directory "C:/Program Files/Apache Group/Apache/htdocs/server">
   AddHandler python-program .py
   PythonHandler test
</Directory>

so in this case only the file test.py would run, anything else would return the same thing as test.py, I followed the tutorial and it says that every file should run but it doesn't work for me, I have it setup exactly like it says so If anyone knows how to fix this please tell me (I'm running it on Windows btw).

thanks


-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mailman.modpython.org/pipermail/mod_python/attachments/20020901/fb1bdcaf/attachment-0002.htm
From ian at veryfresh.com  Sun Sep  1 03:00:23 2002
From: ian at veryfresh.com (Ian Clelland)
Date: Fri Jan  9 21:59:36 2004
Subject: [mod_python] Running more than one Python script
In-Reply-To: <OE23auNjVuMhvqgStMV0000edaf@hotmail.com>
References: <OE23auNjVuMhvqgStMV0000edaf@hotmail.com>
Message-ID: <20020901100023.GG5501@fullfactor.com>

On Sun, Sep 01, 2002 at 12:40:30AM -0400, Leader730 wrote:
> Hello, I am new to all this and I'm having a problem, I configured 
> mod_python on alright I guess but the only file that will run is the 
> the name specidied after PythonHandler in the apache httpd.conf file
> 
> <Directory "C:/Program Files/Apache Group/Apache/htdocs/server">
>    AddHandler python-program .py
>    PythonHandler test
> </Directory>

Yes, it looks like you have Apache configured correctly to run 
mod_python on all URLs which end in '.py' in that directory.
 
> so in this case only the file test.py would run, anything else would 
> return the same thing as test.py, I followed the tutorial and it says 
> that every file should run but it doesn't work for me, I have it 
> setup exactly like it says so If anyone knows how to fix this please 
> tell me (I'm running it on Windows btw).

The tutorial _does not_ say that every python file will be run by the 
server. The last paragraph of the tutorial (Section 3.2 of the manual) 
explains that Apache won't even look at the name of the file. Because 
of the way that Apache works, *EVERY* URL which ends in ".py" will 
cause mod_python to run the "test" module, in this case. This is the 
correct behaviour; Apache only allows you to set up one python handler 
per <Directory> tag.

If what you are looking for is a way to run various python files that 
you have placed in your web server directories, then you need to use a 
dispatcher handler, like Publisher. The Publisher handler looks at all 
of the requests which come in to the server, and passes them off to 
your python files, based on their filenames. Check out section 3.4 of 
the manual for a quick introduction to it.

Ian
<ian@veryfresh.com> 

From haering_python at gmx.de  Sun Sep  1 17:40:53 2002
From: haering_python at gmx.de (Gerhard =?iso-8859-1?Q?H=E4ring?=)
Date: Fri Jan  9 21:59:36 2004
Subject: [mod_python] Problems with -HEAD and Apache 2.0.40 on FreeBSD
Message-ID: <20020901154053.GA1241@lilith.ghaering.test>

I tried to get the CVS version working with Apache 2.0.40 on FreeBSD
4.6-STABLE but had no luck :-(

This is what I did:

compiled the FreeBSD apache2 port using WITH_THREADS=1. Which seems to
have worked:

gargamel# ldd /usr/local/sbin/httpd
/usr/local/sbin/httpd:
[...]
libc_r.so.4 => /usr/lib/libc_r.so.4 (0x28225000)
libc.so.4 => /usr/lib/libc.so.4 (0x282df000)
 
I'm not sure if its ok to link against libc_r and libc at the same time,
though. But as is, Apache seems to display static pages fine. But then,
I have no experience with Apache2 whatsoever.

gargamel# /usr/local/sbin/httpd -l
Compiled in modules:
core.c
prefork.c
http_core.c
mod_so.c

So it looks like it's using the preforked model.

The Python compiled against is the standard FreeBSD port with threads
enabled:
gargamel# ldd /usr/local/bin/python
/usr/local/bin/python:
libutil.so.3 => /usr/lib/libutil.so.3 (0x280e6000)
libm.so.2 => /usr/lib/libm.so.2 (0x280ef000)
libc_r.so.4 => /usr/lib/libc_r.so.4 (0x2810b000)

mod_python.so is statically linked against libpython2.2.a, however again
is linked against the normal, nonthreaded libc (!):

gargamel# ldd /usr/local/libexec/apache2/mod_python.so
/usr/local/libexec/apache2/mod_python.so:
libm.so.2 => /usr/lib/libm.so.2 (0x281d9000)
libutil.so.3 => /usr/lib/libutil.so.3 (0x281f5000)
libc.so.4 => /usr/lib/libc.so.4 (0x28069000)

Needless to say, the results aren't that satisfactory:

[Sun Sep 01 17:32:32 2002] [notice] Apache/2.0.40 (Unix) mod_python/3.0.0-BETA Python/2.2.1 configured -- resuming normal operations
[Sun Sep 01 17:32:39 2002] [notice] child pid 35323 exit signal Segmentation fault (11)
[Sun Sep 01 17:32:39 2002] [notice] child pid 35324 exit signal Segmentation fault (11)

All I did was put this line in httpd.conf:
LoadModule python_module libexec/apache2/mod_python.so

I didn't even call a Python handler, yet.

Any clues?

Gerhard
-- 
mail:   gerhard <at> bigfoot <dot> de       registered Linux user #64239
web:    http://www.cs.fhm.edu/~ifw00065/    OpenPGP public key id AD24C930
public key fingerprint: 3FCC 8700 3012 0A9E B0C9  3667 814B 9CAA AD24 C930
reduce(lambda x,y:x+y,map(lambda x:chr(ord(x)^42),tuple('zS^BED\nX_FOY\x0b')))

From grisha at modpython.org  Sun Sep  1 13:47:41 2002
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 21:59:36 2004
Subject: [mod_python] Problems with -HEAD and Apache 2.0.40 on FreeBSD
In-Reply-To: <20020901154053.GA1241@lilith.ghaering.test>
Message-ID: <Pine.BSF.4.32.0209011343500.45308-100000@eden.ispol.com>

I haven't tried it on FreeBSD yet. Apache seemed (or seemed, don't know if
it's resolved in .40) to have some sort of a problem with FreeBSD threads
(thus prefork being the default MPM). Because of this I actually moved all
my development to Linux (to my dismay). So it's possible you have to do
everything without threads. If you figre this out out, please let me know.

Grisha

On Sun, 1 Sep 2002, Gerhard [iso-8859-1] H?ring wrote:

> I tried to get the CVS version working with Apache 2.0.40 on FreeBSD
> 4.6-STABLE but had no luck :-(
>
> This is what I did:
>
> compiled the FreeBSD apache2 port using WITH_THREADS=1. Which seems to
> have worked:
>
> gargamel# ldd /usr/local/sbin/httpd
> /usr/local/sbin/httpd:
> [...]
> libc_r.so.4 => /usr/lib/libc_r.so.4 (0x28225000)
> libc.so.4 => /usr/lib/libc.so.4 (0x282df000)
>
> I'm not sure if its ok to link against libc_r and libc at the same time,
> though. But as is, Apache seems to display static pages fine. But then,
> I have no experience with Apache2 whatsoever.
>
> gargamel# /usr/local/sbin/httpd -l
> Compiled in modules:
> core.c
> prefork.c
> http_core.c
> mod_so.c
>
> So it looks like it's using the preforked model.
>
> The Python compiled against is the standard FreeBSD port with threads
> enabled:
> gargamel# ldd /usr/local/bin/python
> /usr/local/bin/python:
> libutil.so.3 => /usr/lib/libutil.so.3 (0x280e6000)
> libm.so.2 => /usr/lib/libm.so.2 (0x280ef000)
> libc_r.so.4 => /usr/lib/libc_r.so.4 (0x2810b000)
>
> mod_python.so is statically linked against libpython2.2.a, however again
> is linked against the normal, nonthreaded libc (!):
>
> gargamel# ldd /usr/local/libexec/apache2/mod_python.so
> /usr/local/libexec/apache2/mod_python.so:
> libm.so.2 => /usr/lib/libm.so.2 (0x281d9000)
> libutil.so.3 => /usr/lib/libutil.so.3 (0x281f5000)
> libc.so.4 => /usr/lib/libc.so.4 (0x28069000)
>
> Needless to say, the results aren't that satisfactory:
>
> [Sun Sep 01 17:32:32 2002] [notice] Apache/2.0.40 (Unix) mod_python/3.0.0-BETA Python/2.2.1 configured -- resuming normal operations
> [Sun Sep 01 17:32:39 2002] [notice] child pid 35323 exit signal Segmentation fault (11)
> [Sun Sep 01 17:32:39 2002] [notice] child pid 35324 exit signal Segmentation fault (11)
>
> All I did was put this line in httpd.conf:
> LoadModule python_module libexec/apache2/mod_python.so
>
> I didn't even call a Python handler, yet.
>
> Any clues?
>
> Gerhard
> --
> mail:   gerhard <at> bigfoot <dot> de       registered Linux user #64239
> web:    http://www.cs.fhm.edu/~ifw00065/    OpenPGP public key id AD24C930
> public key fingerprint: 3FCC 8700 3012 0A9E B0C9  3667 814B 9CAA AD24 C930
> reduce(lambda x,y:x+y,map(lambda x:chr(ord(x)^42),tuple('zS^BED\nX_FOY\x0b')))
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://www.modpython.org/mailman/listinfo/mod_python
>


From other at stopthesanity.org  Mon Sep  2 11:43:29 2002
From: other at stopthesanity.org (Chris Cioffi)
Date: Fri Jan  9 21:59:36 2004
Subject: [mod_python] mptest.py fails with (8)Exec format error
Message-ID: <015301c25297$7c15d4a0$75125340@MYOBKPQVQN74K8>

I've looked through the docs and FAQs and couldn't find anything.

Google brought up this link:
http://www.modpython.org/pipermail/mod_python/2001-July/001489.html
but no one answered the question through the list.

My config:
Debian woody, Apache 1.3.26
mod_python 2.7.8

I copied the test script and configuration out of the docs exactly. 

Any ideas?  Thanks!
-- 
Chris <chris@stopthesanity.org>
  Junior Birdman(TM) in training
  http://stopthesanity.org



From grisha at modpython.org  Mon Sep  2 12:27:57 2002
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 21:59:36 2004
Subject: [mod_python] mptest.py fails with (8)Exec format error
In-Reply-To: <015301c25297$7c15d4a0$75125340@MYOBKPQVQN74K8>
Message-ID: <Pine.BSF.4.32.0209021226460.55551-100000@eden.ispol.com>

The problem is that Apache is treating it like a CGI script, which it
isn't.

Grisha

On Mon, 2 Sep 2002, Chris Cioffi wrote:

> I've looked through the docs and FAQs and couldn't find anything.
>
> Google brought up this link:
> http://www.modpython.org/pipermail/mod_python/2001-July/001489.html
> but no one answered the question through the list.
>
> My config:
> Debian woody, Apache 1.3.26
> mod_python 2.7.8
>
> I copied the test script and configuration out of the docs exactly.
>
> Any ideas?  Thanks!
> --
> Chris <chris@stopthesanity.org>
>   Junior Birdman(TM) in training
>   http://stopthesanity.org
>
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://www.modpython.org/mailman/listinfo/mod_python
>


From other at stopthesanity.org  Mon Sep  2 12:33:21 2002
From: other at stopthesanity.org (Chris Cioffi)
Date: Fri Jan  9 21:59:36 2004
Subject: [mod_python] mptest.py fails with (8)Exec format error
References: <E398378A-BE8C-11D6-A0B8-0030653DCC28@attbi.com>
Message-ID: <016401c2529e$736dc7c0$75125340@MYOBKPQVQN74K8>

Bingo.  Thanks Jeff!

-- 
Chris <chris@stopthesanity.org>
  Junior Birdman(TM) in training
  http://stopthesanity.org
----- Original Message ----- 
From: "Jeff Stearns" <jeffstearns@attbi.com>
To: "Chris Cioffi" <other@stopthesanity.org>
Sent: Monday, September 02, 2002 11:58 AM
Subject: Re: [mod_python] mptest.py fails with (8)Exec format error


> Chris -
> 
> You don't provide any details of the problem you're having, so all I can 
> do is guess.
> 
> Make sure that your file doesn't have \r\n line terminators.  You can do 
> that in vi or look with od.
> 
> I assume you're using a #! line at the start of the file.  Triple-check 
> it; it's probably wrong.
> 
> -jeff stearns
> 
> On Monday, September 2, 2002, at 08:43  AM, Chris Cioffi wrote:
> 
> > I've looked through the docs and FAQs and couldn't find anything.
> >
> > Google brought up this link:
> > http://www.modpython.org/pipermail/mod_python/2001-July/001489.html
> > but no one answered the question through the list.
> >
> > My config:
> > Debian woody, Apache 1.3.26
> > mod_python 2.7.8
> >
> > I copied the test script and configuration out of the docs exactly.
> >
> > Any ideas?  Thanks!
> > --
> > Chris <chris@stopthesanity.org>
> >   Junior Birdman(TM) in training
> >   http://stopthesanity.org
> >
> >
> > _______________________________________________
> > Mod_python mailing list
> > Mod_python@modpython.org
> > http://www.modpython.org/mailman/listinfo/mod_python
> 
> 
> 



From leader730 at hotmail.com  Mon Sep  2 22:54:13 2002
From: leader730 at hotmail.com (Leader730)
Date: Fri Jan  9 21:59:36 2004
Subject: [mod_python] PythonHandler mod_python.publisher returns 404 for every file
Message-ID: <OE36fdhNzW3l1GM3h3v00003a92@hotmail.com>

Hellp, I am trying to get PythonHandler mod_python.publisher to work but everytime I try it, any python file I try to run on the server returns a "404 File Not Found" error. this is the config:

<Directory "C:/Program Files/Apache Group/Apache/htdocs/server">
    AddHandler python-program .py
    PythonHandler mod_python.publisher
</Directory>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mailman.modpython.org/pipermail/mod_python/attachments/20020902/e6be7731/attachment-0002.htm
From peter.bittner at gmx.net  Tue Sep  3 18:07:01 2002
From: peter.bittner at gmx.net (Peter Bittner)
Date: Fri Jan  9 21:59:36 2004
Subject: [mod_python] How can I have sensible URLs?
Message-ID: <23016.1031069221@www25.gmx.net>

Hi there!

I have a little bit of understand problem of how the architecture of a
mod_python web application (say web site, if you want) should be.

I would like to have the URLs as if the mod_python scripts were simply some
kind of "special HTML documents", comparable to PHP scripts.

For example, I have written a script named "index.py" which is located on my
document root. So I would expect "http://www.mydomain.com/index.py" to
execute my script (I have set up my Apache so that I can omit the filename, too).
But it doesn't. When I remove the ".py" at the end there is no change to this
too.

So what I have to do is to execute "http://www.mydomain.com/index/method",
provided a method called "method" in my script. This way it works. - But is
there a way to have "HTML-like" or "PHP-like" behavior? Or how do I have to
organize my scripts so that I can have my whole website written in mod_python
and can run it with "http://www.mydomain.com" alone?

Does anyone have a good example about how to do this?

Thanks in advance!
Peter

-- 
Peter Bittner
mobil: +43/(0)650/4151545
web: http://www.bittner.at.tf - http://beam.to/htmlkurs
mail: peter.bittner@gmx.net

"Free software is like free speech, not free beer" (Richard Stallman)

GMX - Die Kommunikationsplattform im Internet.
http://www.gmx.net


From Hans.Yandle at cingular.com  Tue Sep  3 12:28:31 2002
From: Hans.Yandle at cingular.com (Yandle, Hans)
Date: Fri Jan  9 21:59:36 2004
Subject: [mod_python] How can I have sensible URLs?
Message-ID: <D31B04F24EDE7644BB169BB4F080778A01F4C613@s30342g004005>

If the publisher module of mod_python does not fill the bill try looking to
http://spyce.sourceforge.net/, http://www.ccraig.org/software/pyhp/, or just
go looking around on http://py.vaults.ca/parnassus/ for other stuff.

Hans

-----Original Message-----
From: Peter Bittner [mailto:peter.bittner@gmx.net]
Sent: Tuesday, September 03, 2002 12:07 PM
To: mod_python@modpython.org
Subject: [mod_python] How can I have sensible URLs?


Hi there!

I have a little bit of understand problem of how the architecture of a
mod_python web application (say web site, if you want) should be.

I would like to have the URLs as if the mod_python scripts were simply some
kind of "special HTML documents", comparable to PHP scripts.

For example, I have written a script named "index.py" which is located on my
document root. So I would expect "http://www.mydomain.com/index.py" to
execute my script (I have set up my Apache so that I can omit the filename,
too).
But it doesn't. When I remove the ".py" at the end there is no change to
this
too.

So what I have to do is to execute "http://www.mydomain.com/index/method",
provided a method called "method" in my script. This way it works. - But is
there a way to have "HTML-like" or "PHP-like" behavior? Or how do I have to
organize my scripts so that I can have my whole website written in
mod_python
and can run it with "http://www.mydomain.com" alone?

Does anyone have a good example about how to do this?

Thanks in advance!
Peter

-- 
Peter Bittner
mobil: +43/(0)650/4151545
web: http://www.bittner.at.tf - http://beam.to/htmlkurs
mail: peter.bittner@gmx.net

"Free software is like free speech, not free beer" (Richard Stallman)

GMX - Die Kommunikationsplattform im Internet.
http://www.gmx.net

_______________________________________________
Mod_python mailing list
Mod_python@modpython.org
http://www.modpython.org/mailman/listinfo/mod_python

From grisha at modpython.org  Tue Sep  3 13:03:37 2002
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 21:59:36 2004
Subject: [mod_python] How can I have sensible URLs?
In-Reply-To: <23016.1031069221@www25.gmx.net>
Message-ID: <Pine.BSF.4.32.0209031257590.68415-100000@eden.ispol.com>

Basically, the publisher doesn't have a "default" method name. (There is
no particular reason for this, it just didn't occur to me at the time of
writing.)

There is probably more than one way to accomplish something to that
extent, one way would be to try a redirect, something like:

Redirect /index.py http://www.mydomain.com/index.py/index

Grisha

On Tue, 3 Sep 2002, Peter Bittner wrote:

> Hi there!
>
> I have a little bit of understand problem of how the architecture of a
> mod_python web application (say web site, if you want) should be.
>
> I would like to have the URLs as if the mod_python scripts were simply some
> kind of "special HTML documents", comparable to PHP scripts.
>
> For example, I have written a script named "index.py" which is located on my
> document root. So I would expect "http://www.mydomain.com/index.py" to
> execute my script (I have set up my Apache so that I can omit the filename, too).
> But it doesn't. When I remove the ".py" at the end there is no change to this
> too.
>
> So what I have to do is to execute "http://www.mydomain.com/index/method",
> provided a method called "method" in my script. This way it works. - But is
> there a way to have "HTML-like" or "PHP-like" behavior? Or how do I have to
> organize my scripts so that I can have my whole website written in mod_python
> and can run it with "http://www.mydomain.com" alone?
>
> Does anyone have a good example about how to do this?
>
> Thanks in advance!
> Peter
>
> --
> Peter Bittner
> mobil: +43/(0)650/4151545
> web: http://www.bittner.at.tf - http://beam.to/htmlkurs
> mail: peter.bittner@gmx.net
>
> "Free software is like free speech, not free beer" (Richard Stallman)
>
> GMX - Die Kommunikationsplattform im Internet.
> http://www.gmx.net
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://www.modpython.org/mailman/listinfo/mod_python
>


From mbp at samba.org  Wed Sep  4 11:42:35 2002
From: mbp at samba.org (Martin Pool)
Date: Fri Jan  9 21:59:36 2004
Subject: [mod_python] How can I have sensible URLs?
In-Reply-To: <23016.1031069221@www25.gmx.net>
References: <23016.1031069221@www25.gmx.net>
Message-ID: <20020904014233.GC7271@samba.org>

On  3 Sep 2002, Peter Bittner <peter.bittner@gmx.net> wrote:
> Hi there!
> 
> I have a little bit of understand problem of how the architecture of a
> mod_python web application (say web site, if you want) should be.
> 
> I would like to have the URLs as if the mod_python scripts were simply some
> kind of "special HTML documents", comparable to PHP scripts.
> 
> For example, I have written a script named "index.py" which is located on my
> document root. So I would expect "http://www.mydomain.com/index.py" to
> execute my script (I have set up my Apache so that I can omit the filename, too).
> But it doesn't. When I remove the ".py" at the end there is no change to this
> too.
> 
> So what I have to do is to execute "http://www.mydomain.com/index/method",
> provided a method called "method" in my script. This way it works. - But is
> there a way to have "HTML-like" or "PHP-like" behavior? Or how do I have to
> organize my scripts so that I can have my whole website written in mod_python
> and can run it with "http://www.mydomain.com" alone?

Have a look at the mod_rewrite documentation.  Something like

  RewriteMatch /index/(.*) /python/index.py/$1

-- 
Martin 

From Thomas.Rothmayer at borealisgroup.com  Wed Sep  4 07:55:15 2002
From: Thomas.Rothmayer at borealisgroup.com (Rothmayer, Thomas)
Date: Fri Jan  9 21:59:36 2004
Subject: [mod_python] Python - MySql - Apache: Installation of mod_python on WinNT
Message-ID: <B956D4DA8568D41186B60050046724AC183D05@LZNTS005>

Good morning all,

to add data to my MySql-database (and to display the query-results on a
browswer) I'm using PHP. It's running quite well.
But as I insert most of the data with several NumPy-scripts, I'd like to do
also the output with Python (e.g. graphs on the browser) in order not to get
too much different softwares.

I've already tried to install mod_snake (because Apache 2.0 is installed on
my computer) and WebWare/Webkit - without success.
My OS is WinNT, MySQLdb is installed.

Some changes I made:
httpd.conf:	LoadModule webkit_module modules/mod_webkit.dll
webkit.cgi:	#! c:\programme\python21\python

Please support me with installation details of mod_snake and/or Webware (if
necessary) on NT!
Someone already has experience with my software triumvirat?


Many thanks,
Thomas



**********************************************************************
This email and any files transmitted with it are confidential and
intended solely for the use of the individual or entity to whom they
are addressed. If you have received this email in error please notify
the sender either by telephone or by e-mail and delete the material
from any computer. Thank you for your cooperation.

This footnote also confirms that this email message has been swept by
MIMEsweeper for the presence of computer viruses.

www.borealisgroup.com
**********************************************************************


From fabbe at paniq.net  Wed Sep  4 09:25:13 2002
From: fabbe at paniq.net (Fabian Fagerholm)
Date: Fri Jan  9 21:59:36 2004
Subject: [mod_python] Python - MySql - Apache: Installation of
	mod_python on WinNT
In-Reply-To: <B956D4DA8568D41186B60050046724AC183D05@LZNTS005>
References: <B956D4DA8568D41186B60050046724AC183D05@LZNTS005>
Message-ID: <1031120714.4175.3.camel@kernel>

On Wed, 2002-09-04 at 08:55, Rothmayer, Thomas wrote:
> Please support me with installation details of mod_snake and/or Webware (if
> necessary) on NT!
> Someone already has experience with my software triumvirat?

mod_snake is dead, but the remnants can be found on
http://sourceforge.net/projects/modsnake

The home page for Webware is http://webware.sourceforge.net/ and has
details about that.

Did you realize you sent your mail to the mod_python mailing list? If
you'd like to try mod_python for your web application, then please see
the mod_python home page: http://www.modpython.org/

There are detailed instructions, including a tutorial.

Have fun!

Fabian

-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 240 bytes
Desc: This is a digitally signed message part
Url : http://mailman.modpython.org/pipermail/mod_python/attachments/20020904/b9574f6b/attachment-0002.bin
From peter.bittner at gmx.net  Wed Sep  4 11:03:01 2002
From: peter.bittner at gmx.net (Peter Bittner)
Date: Fri Jan  9 21:59:36 2004
Subject: [mod_python] How can I have sensible URLs?
References: <Pine.BSF.4.32.0209031257590.68415-100000@eden.ispol.com>
Message-ID: <7845.1031130181@www2.gmx.net>

Hi Grisha,

> Basically, the publisher doesn't have a "default" method name. (There is
> no particular reason for this, it just didn't occur to me at the time of
> writing.)

Wouldn't it be a nice idea to provide such a default method name? ("main"
seems a good name for that task.)

I am very keen on organizing my web projects nicely, so I usually structure
the application using separate file for separate tasks.

I also like to obey a couple of web-design paradigmas such as "let your URLs
be hackable", which says nothing less than when the user modifies the URL
there shouldn't be an "unexpected behaviour" as a result. I do get a little of
a headache when I think of users removing the "/dothis" from a
"http://www.mydomain.com/myscript/dothis" and then getting a "404 Not Found".  :-(

I have the feeling that this is really a point that presents a huge
understanding problem to novices, to mod_python beginners, (even if they are
perfectly familiar to Python).
Python scripts begin a the start of the file, everything is processed
sequentially. Why not having a default starting point for mod_python scripts?

Grisha, what was/is your motivation to omit the ".py" in the URL at the end
of the script's filename? - Don't get me wrong, I do see the beauty in this
solution (since the ".py" hits the eye), but isn't this arguably? Wouldn't a
CGI-style processing ("..../myscript.cgi?opt1=abc") be more straight forward?

I would be really happy seeing mod_python to be that easy to understand and
easy to use (to write applications) that it might be a real alternative to
PHP, JSP and ASP, and still (with Python a its base) being a language where
beautiful and well structured code emerges from.

> There is probably more than one way to accomplish something to that
> extent, one way would be to try a redirect, something like:
> 
> Redirect /index.py http://www.mydomain.com/index.py/index

Apache's module mod_rewrite might be some kind of workaround to this. But is
this really satisfying? How do other programmers feel about this?

Cheers, Peter


> On Tue, 3 Sep 2002, Peter Bittner wrote:
> 
> > Hi there!
> >
> > I have a little bit of understand problem of how the architecture of a
> > mod_python web application (say web site, if you want) should be.
> >
> > I would like to have the URLs as if the mod_python scripts were simply
> some
> > kind of "special HTML documents", comparable to PHP scripts.
> >
> > For example, I have written a script named "index.py" which is located
> on my
> > document root. So I would expect "http://www.mydomain.com/index.py" to
> > execute my script (I have set up my Apache so that I can omit the
> filename, too).
> > But it doesn't. When I remove the ".py" at the end there is no change to
> this
> > too.
> >
> > So what I have to do is to execute
> "http://www.mydomain.com/index/method",
> > provided a method called "method" in my script. This way it works. - But
> is
> > there a way to have "HTML-like" or "PHP-like" behavior? Or how do I have
> to
> > organize my scripts so that I can have my whole website written in
> mod_python
> > and can run it with "http://www.mydomain.com" alone?
> >
> > Does anyone have a good example about how to do this?
> >
> > Thanks in advance!
> > Peter
> >
> > --
> > Peter Bittner
> > mobil: +43/(0)650/4151545
> > web: http://www.bittner.at.tf - http://beam.to/htmlkurs
> > mail: peter.bittner@gmx.net
> >
> > "Free software is like free speech, not free beer" (Richard Stallman)
> 

-- 
GMX - Die Kommunikationsplattform im Internet.
http://www.gmx.net


From rien at yeepa.org  Wed Sep  4 12:01:25 2002
From: rien at yeepa.org (Adrien Plisson)
Date: Fri Jan  9 21:59:37 2004
Subject: [mod_python] How can I have sensible URLs?
References: <Pine.BSF.4.32.0209031257590.68415-100000@eden.ispol.com> <7845.1031130181@www2.gmx.net>
Message-ID: <000501c253fa$08b08230$0a020101@skynet.be>

From: "Peter Bittner" <peter.bittner@gmx.net>
> Apache's module mod_rewrite might be some kind of workaround to this. But
is
> this really satisfying? How do other programmers feel about this?

i used mod_rewrite for almost the same purpose.
i took me some times (counting in minutes) to figure out how to write the
regular expression which rewrite the URL. but if you always use the same
name for the default method and *every* files are python script, then one
rule is sufficient for the whole server. for more complex cases, take the
time to know exactly in which case you need a rewrite, and there will always
be a regular expression matching your need.
in my case, i ended up with 5 rules for the whole server -> 5 different
cases which could happen when a request is coming in.

mod_rewrite is flexible (due to the use of regexp), easy to understand, and
incredibly powerful : it allows you to do everything you want when dealing
with url problems. try it and you will like it.

--
rien


From peter.bittner at gmx.net  Wed Sep  4 15:09:32 2002
From: peter.bittner at gmx.net (Peter Bittner)
Date: Fri Jan  9 21:59:37 2004
Subject: [mod_python] How can I have sensible URLs?
References: <000501c253fa$08b08230$0a020101@skynet.be>
Message-ID: <20103.1031144972@www25.gmx.net>

Adrien,

> mod_rewrite is flexible (due to the use of regexp), easy to understand,
> and incredibly powerful : it allows you to do everything you want when
> dealing with url problems. try it and you will like it.

I'm sure mod_rewrite is a good thing when all you want is really just
beautiful URLs and nothing more.

In my case I think there is some more to it. I'll try to sketch it out:
Say, I have the following scripts that form a user interface to a library
database (say, I'm using Python over CGI for this one here)

- http://www.mydomain.com/libdb/index.py
- http://www.mydomain.com/libdb/input.py
- http://www.mydomain.com/libdb/search.py
- http://www.mydomain.com/libdb/reports.py
- http://www.mydomain.com/libdb/maintain.py

I'm sure you can imagine that every script is doing a lot of stuff (printing
out HTML forms, handling user actions and so on). - Let's see how I would
implement this with mod_python:

- I would write one large mod_python script called "libdb.py" which contains
basically the whole code of all the above listed scripts. Each of the above
scripts I would replace by methods (handlers) like "def index():", "def
input():", "def search():", etc.
Then I've ended up with a huge, almost unmaintainable script.  :-(

Is there any way to avoid this?
Would anyone tackle this problem differently?

Any help is greatly appreciated!
Cheers, Peter

-- 
Peter Bittner
mobil: +43/(0)650/4151545
web: http://www.bittner.at.tf - http://beam.to/htmlkurs
mail: peter.bittner@gmx.net

"Free software is like free speech, not free beer" (Richard Stallman)

GMX - Die Kommunikationsplattform im Internet.
http://www.gmx.net


From christoph at cocon-seide.com  Wed Sep  4 16:50:24 2002
From: christoph at cocon-seide.com (Christoph Fritzsch)
Date: Fri Jan  9 21:59:37 2004
Subject: [mod_python] How can I have sensible URLs?
In-Reply-To: <20103.1031144972@www25.gmx.net>
Message-ID: <20020904154555.EF66C9BB41@mail.fritzsch.net>

Hi Peter !

>Say, I have the following scripts that form a user interface to a library
>database (say, I'm using Python over CGI for this one here)
>
>- http://www.mydomain.com/libdb/index.py
>- http://www.mydomain.com/libdb/input.py
....
I can see perfectly well that ONE big script would be a pain in the a....
And I hope I understood you alright.
But why not seperate them by putting one script in in one file and wrap it in one def:
file "input.py" :

def main():
  all the code input needs
  return 'the printout'

and call it by http://.../libdb/input/main
next file "maintainer.py":
def main():
 code
 return 'xx'
and call it by http://.../libdb/maintainer/main

prerequisite is that the publisher is installed :-)

The only disadvantage would be the trailing /main or whatever you should call it if main 
is a reseverd word

Take care Christoph


From peter.bittner at gmx.net  Wed Sep  4 17:56:13 2002
From: peter.bittner at gmx.net (Peter Bittner)
Date: Fri Jan  9 21:59:37 2004
Subject: [mod_python] How can I have sensible URLs?
References: <7845.1031130181@www2.gmx.net>
Message-ID: <16280.1031154973@www2.gmx.net>

Hi!

> "Grisha" wrote:
> > Basically, the publisher doesn't have a "default" method name. (There is
> > no particular reason for this, it just didn't occur to me at the time of
> > writing.)

I have adapted my publisher.py so that is now takes a "default()" method by
default 
if no one is specified in the URL. (See the the code below.)

Do you think this adaption is worth being part of the "official" mod_python?
Anyone 
who finds this interesting? (Anyone who wouldn't like it?)

> I do get a little of a headache when I think of users removing the
> "/dothis" from a "http://www.mydomain.com/myscript/dothis" and then
> getting a "404 Not Found".  :-(

I was a little bit unprecise: It is not a 404 that is raised, it is a
"IndexError: 
string index out of range" that is displayed.

I have changed the code in "publisher.py" from

80:    if func_path[-1] == ".":
81:        func_path = func_path[:-1]

to the following: (the numbers on the left are the line numbers)

80:    if func_path == "":          # set method name to "default"
81:        func_path = "default"    # if none is specified in the URL
82:    elif func_path[-1] == ".":
83:        func_path = func_path[:-1]

(Actually, now it displays the 404 if no "default" method is present! ;-)
*argl*)

Now I have a default-method in each script and I can call scripts by 
"http://servername/scriptname/". It works! :-)

Please send me your comments about this change. Does anyone feel this should
be a 
default mod_python behavior? (I don't like to know my mod_python code only
works on 
my very own server and nowhere else, hugh!)

Cheers,
Peter


-- 
Peter Bittner
mobil: +43/(0)650/4151545
web: http://www.bittner.at.tf - http://beam.to/htmlkurs
mail: peter.bittner@gmx.net

"Free software is like free speech, not free beer" (Richard Stallman)

GMX - Die Kommunikationsplattform im Internet.
http://www.gmx.net
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/octet-stream
Size: 81 bytes
Desc: not available
Url : http://mailman.modpython.org/pipermail/mod_python/attachments/20020904/8932dce9/attachment-0002.obj
From rien at yeepa.org  Wed Sep  4 18:13:02 2002
From: rien at yeepa.org (Adrien Plisson)
Date: Fri Jan  9 21:59:37 2004
Subject: [mod_python] How can I have sensible URLs?
References: <20020904154555.EF66C9BB41@mail.fritzsch.net>
Message-ID: <000701c2542d$f23eab10$0a020101@skynet.be>

From: "Christoph Fritzsch" <christoph@cocon-seide.com>
> But why not seperate them by putting one script in in one file and wrap it
in one def:
> file "input.py" :
>
> def main():
>   all the code input needs
>   return 'the printout'
>
> and call it by http://.../libdb/input/main
> next file "maintainer.py":
> def main():
>  code
>  return 'xx'
> and call it by http://.../libdb/maintainer/main
>
> prerequisite is that the publisher is installed :-)

I was thinking that this was already the case, that's why i didn't precised
it in my previous reply.
so, yes, you can do it this way with the following addenda:

> The only disadvantage would be the trailing /main or whatever you should
call it if main
> is a reseverd word

the trailing main could be added on the server side with a mod_rewrite
RewriteRule, i.e. :
RewriteRule (.*/libd)/([^\.])\.py $1/$2/main
so a client request to:
http://.../libdb/input.py
would be rewriten and will look like:
http://.../libdb/input/main

(the RewriteRule is given in example and has not been tested, so don't
expect it to do the work as it should)

--
rien


From drh9296 at ritvax.rit.edu  Wed Sep  4 15:09:50 2002
From: drh9296 at ritvax.rit.edu (David Higgs)
Date: Fri Jan  9 21:59:37 2004
Subject: [mod_python] Re: How can I have sensible URLs?
References: <20020904160001.81353.92151.Mailman@eden.ispol.com>
Message-ID: <3D765A7E.6080203@rit.edu>

> I'm sure you can imagine that every script is doing a lot of stuff (printing
> out HTML forms, handling user actions and so on). - Let's see how I would
> implement this with mod_python:
> 
> - I would write one large mod_python script called "libdb.py" which contains
> basically the whole code of all the above listed scripts. Each of the above
> scripts I would replace by methods (handlers) like "def index():", "def
> input():", "def search():", etc.
> Then I've ended up with a huge, almost unmaintainable script.  :-(
> 
> Is there any way to avoid this?
> Would anyone tackle this problem differently?
> 
> Any help is greatly appreciated!
> Cheers, Peter

Have your root libdb.py do some error handling and parsing, and then 
execfile() the appropriate script for the request.  You can hide your 
scripts far away from the webserver directory for added security.

This might actually be what publisher does, but I haven't looked into it 
at all.

--david


From grisha at modpython.org  Wed Sep  4 16:07:58 2002
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 21:59:37 2004
Subject: [mod_python] How can I have sensible URLs?
In-Reply-To: <20103.1031144972@www25.gmx.net>
Message-ID: <Pine.BSF.4.32.0209041557540.83863-100000@eden.ispol.com>

You could also separate your app into different modules, then write
libdb.py so that all its functions do is call functions from your other
modules, e.g.:

Assuming there is a libsearch.py which contains all the code necessary
for searching, in libdb.py you'd have:

import libsearch

def search():
	return libsearch.search()

The only caveat with this approach is described here:

http://www.modpython.org/FAQ/faqw.py?req=show&file=faq03.001.htp

Grisha

On Wed, 4 Sep 2002, Peter Bittner wrote:

> In my case I think there is some more to it. I'll try to sketch it out:
> Say, I have the following scripts that form a user interface to a library
> database (say, I'm using Python over CGI for this one here)
>
> - http://www.mydomain.com/libdb/index.py
> - http://www.mydomain.com/libdb/input.py
> - http://www.mydomain.com/libdb/search.py
> - http://www.mydomain.com/libdb/reports.py
> - http://www.mydomain.com/libdb/maintain.py
>
> I'm sure you can imagine that every script is doing a lot of stuff (printing
> out HTML forms, handling user actions and so on). - Let's see how I would
> implement this with mod_python:
>
> - I would write one large mod_python script called "libdb.py" which contains
> basically the whole code of all the above listed scripts. Each of the above
> scripts I would replace by methods (handlers) like "def index():", "def
> input():", "def search():", etc.
> Then I've ended up with a huge, almost unmaintainable script.  :-(
>
> Is there any way to avoid this?
> Would anyone tackle this problem differently?


From scherrey at proteus-tech.com  Wed Sep  4 17:15:55 2002
From: scherrey at proteus-tech.com (Benjamin Scherrey)
Date: Fri Jan  9 21:59:37 2004
Subject: [mod_python] 3.0 & Apache 2.0 support
Message-ID: <200209041715.55379.scherrey@proteus-tech.com>

I'm looking to do my first mod_python install (to support a Quixote 
development) and I want to deploy on Apache 2.0. I see that a beta 
3.0 of mod_python is available that promises Apache 2.0 support but 
was wondering what the experiences here were with that. Is it usable? 
Busted? Any comments or suggestions would be appreciated.

	Ben Scherrey

From mateusz at ant.gliwice.pl  Thu Sep  5 11:59:00 2002
From: mateusz at ant.gliwice.pl (Mateusz Korniak)
Date: Fri Jan  9 21:59:37 2004
Subject: [mod_python] How can I have sensible URLs?
In-Reply-To: <16280.1031154973@www2.gmx.net>
References: <7845.1031130181@www2.gmx.net> <16280.1031154973@www2.gmx.net>
Message-ID: <200209041949.56749.mateusz@ant.gliwice.pl>

On Wednesday 04 September 2002 17:56, Peter Bittner wrote:
> > "Grisha" wrote:
> > > Basically, the publisher doesn't have a "default" method name. (There
> > > is no particular reason for this, it just didn't occur to me at the
> > > time of writing.)
>
> I have adapted my publisher.py so that is now takes a "default()" method by
> default
> if no one is specified in the URL. (See the the code below.)
>
> Do you think this adaption is worth being part of the "official"
> mod_python? 

I think It should.

> Anyone
> who finds this interesting? (Anyone who wouldn't like it?)

I would really like it :)

-- 
Mateusz Korniak




From gbenson at redhat.com  Thu Sep  5 11:40:19 2002
From: gbenson at redhat.com (Gary Benson)
Date: Fri Jan  9 21:59:37 2004
Subject: [mod_python] 3.0 & Apache 2.0 support
In-Reply-To: <200209041715.55379.scherrey@proteus-tech.com>; from scherrey@proteus-tech.com on Wed, Sep 04, 2002 at 05:15:55PM -0400
References: <200209041715.55379.scherrey@proteus-tech.com>
Message-ID: <20020905114018.A22389@redhat.com>

On Wed, Sep 04, 2002 at 05:15:55PM -0400, Benjamin Scherrey wrote:

> I'm looking to do my first mod_python install (to support a Quixote 
> development) and I want to deploy on Apache 2.0. I see that a beta 
> 3.0 of mod_python is available that promises Apache 2.0 support but 
> was wondering what the experiences here were with that. Is it usable? 
> Busted? Any comments or suggestions would be appreciated.

I've been using it with prefork and it's very usable indeed.

Cheers,
Gary

[ gbenson@redhat.com ][ GnuPG 85A8F78B ][ http://inauspicious.org/ ]

From jack_diederich at email.com  Thu Sep  5 13:24:04 2002
From: jack_diederich at email.com (Jack Diederich)
Date: Fri Jan  9 21:59:37 2004
Subject: [mod_python] _apache.so? where are you!
Message-ID: <20020905182405.16118.qmail@email.com>

I was trying to run a test script from the command line...

I was trying to call the parse_qs() routine, but it seems to need _apache.so, which is never built. _apachemodule.c which defines init_apache() is compiled into the mod_python.so module.  I tried putting mod_python.so in site-packages renamed as _apache.so, but it failed because it needs some apache symbols.

Is it just not possible to use misc mod_python routines from the command line, or does it just need a patch?

thanks,

-jack


-- 
__________________________________________________________
Sign-up for your own FREE Personalized E-mail at Mail.com
http://www.mail.com/?sr=signup


From grisha at modpython.org  Thu Sep  5 14:48:05 2002
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 21:59:37 2004
Subject: [mod_python] _apache.so? where are you!
In-Reply-To: <20020905182405.16118.qmail@email.com>
Message-ID: <Pine.BSF.4.32.0209051446470.95519-100000@eden.ispol.com>


On Thu, 5 Sep 2002, Jack Diederich wrote:

> Is it just not possible to use misc mod_python routines from the
> command line, or does it just need a patch?

I'm afraid it's not possible. _apache relies on many httpd functions and
can't exist outside of the httpd process.

Grisha


From scherrey at proteus-tech.com  Thu Sep  5 17:17:59 2002
From: scherrey at proteus-tech.com (Benjamin Scherrey)
Date: Fri Jan  9 21:59:37 2004
Subject: [mod_python] Trouble getting mod_python BETA3 running with Apache 2 under linux (RedHat 7.2)
Message-ID: <200209051718.00063.scherrey@proteus-tech.com>

What does mod_python mean when it says:
"python_handler: make_obcallback returned no obCallBack!, referer: 
http://localhost/python/"

In the error_log? I'm testing my mod_python install (per the online 
docs) and it doesn't seem to be running. When I start Apache it 
reports the presense of mod_python. Anything new for mod_python3 
under Apache 2 that I need to do to get it running?
	
	thanx & later,

			Ben Scherrey

From grisha at modpython.org  Thu Sep  5 17:39:31 2002
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 21:59:37 2004
Subject: [mod_python] Trouble getting mod_python BETA3 running with Apache
 2 under linux (RedHat 7.2)
In-Reply-To: <200209051718.00063.scherrey@proteus-tech.com>
Message-ID: <Pine.BSF.4.32.0209051738090.98161-100000@eden.ispol.com>

On Thu, 5 Sep 2002, Benjamin Scherrey wrote:

> What does mod_python mean when it says:
> "python_handler: make_obcallback returned no obCallBack!, referer:
> http://localhost/python/"
>
> In the error_log? I'm testing my mod_python install (per the online
> docs) and it doesn't seem to be running. When I start Apache it
> reports the presense of mod_python. Anything new for mod_python3
> under Apache 2 that I need to do to get it running?

Hmmm... AFAIK there aren't any *online* docs for mp 3.0 - you should
follow the docs in the tar file. :-)

Grisha




From scherrey at proteus-tech.com  Thu Sep  5 17:40:42 2002
From: scherrey at proteus-tech.com (Benjamin Scherrey)
Date: Fri Jan  9 21:59:37 2004
Subject: [mod_python] Trouble getting mod_python BETA3 running with Apache 2 under linux (RedHat 7.2)
In-Reply-To: <Pine.BSF.4.32.0209051738090.98161-100000@eden.ispol.com>
References: <Pine.BSF.4.32.0209051738090.98161-100000@eden.ispol.com>
Message-ID: <200209051740.43045.scherrey@proteus-tech.com>

Actually I figured it out - Its a problem with RedHat's insistence 
that python be python1.5 so the python2.2 executable is named 
python2. I renamed stuff and changed my path to put the python2 
directory first and it now works...  FWIW - the only docs I found in 
the tar file were .tex files. Maybe there's another file I'm supposed 
to download?

	thanx & later,

		Ben Scherrey

On Thursday 05 September 2002 05:39 pm, Gregory (Grisha) Trubetskoy 
wrote:
> On Thu, 5 Sep 2002, Benjamin Scherrey wrote:
> > What does mod_python mean when it says:
> > "python_handler: make_obcallback returned no obCallBack!,
> > referer: http://localhost/python/"
> >
> > In the error_log? I'm testing my mod_python install (per the
> > online docs) and it doesn't seem to be running. When I start
> > Apache it reports the presense of mod_python. Anything new for
> > mod_python3 under Apache 2 that I need to do to get it running?
>
> Hmmm... AFAIK there aren't any *online* docs for mp 3.0 - you
> should follow the docs in the tar file. :-)
>
> Grisha

From grisha at modpython.org  Thu Sep  5 18:10:47 2002
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 21:59:37 2004
Subject: [mod_python] Trouble getting mod_python BETA3 running with Apache
 2 under linux (RedHat 7.2)
In-Reply-To: <200209051740.43045.scherrey@proteus-tech.com>
Message-ID: <Pine.BSF.4.32.0209051806560.98637-100000@eden.ispol.com>

You're right, sorry, the docs slipped out somehow. I put a small tar file
with the docs in the same directory with the beta.

Grisha

On Thu, 5 Sep 2002, Benjamin Scherrey wrote:

> FWIW - the only docs I found in the tar file were .tex files. Maybe
> there's another file I'm supposed to download?


From scherrey at proteus-tech.com  Thu Sep  5 19:20:28 2002
From: scherrey at proteus-tech.com (Benjamin Scherrey)
Date: Fri Jan  9 21:59:37 2004
Subject: [mod_python] Trouble getting mod_python BETA3 running with Apache 2 under linux (RedHat 7.2)
In-Reply-To: <04B0284D-C126-11D6-A0B8-0030653DCC28@savagebeast.com>
References: <04B0284D-C126-11D6-A0B8-0030653DCC28@savagebeast.com>
Message-ID: <200209051920.28731.scherrey@proteus-tech.com>

Jeff -

	Thanx for the offer. I'd be interested in trying it out if this is 
indeed the problem. However, I don't see how it would be unless 
something in quixote or mod_python has got a hard coded reference to 
the python executable. I've got my python2.2 executable in the very 
first path position. Also - for mod_python support, am I supposed to 
have the qdemo directory be a subdirectory of the registered 
mod_python directory (it isn't) or as a subdirectory of the htdocs 
directory (where it is)? I'm not too clear on what kind of 
integration is going on between mod_python, python, and quixote.

	thanx & later,

		Ben Scherrey

On Thursday 05 September 2002 07:20 pm, Jeff Stearns wrote:
> Ben -
>
> This is a common problem; it typically occurs when mod_python is
> confused about Python is installed.
>
> I have a patch for mod_python; it adds a directive which allows you
> to specify the path to Python and its libraries.  This allows
> mod_python to work in an environment with multiple Python
> interpreters, or where you don't have write permission to the
> system-wide Python lib directory.
>
> I've previously offered it to Grisha for inclusion in the source
> tree, but he's not interested.  If you are, you can contact me
> directly and I'll send you the patch.
>
> -jeff stearns

From chengpua at yahoo.com  Thu Sep  5 18:49:46 2002
From: chengpua at yahoo.com (Cheng Pua)
Date: Fri Jan  9 21:59:37 2004
Subject: [mod_python] Problem in installing 3.0.0 Beta for windows
Message-ID: <20020906014946.37344.qmail@web12505.mail.yahoo.com>

I install 3.0.0 Beta for windows.  However, I could
not get "Hello World" example working.  This is the
error I got: 

python_handler: make_obcallback returned no
obCallBack!

Cheng

__________________________________________________
Do You Yahoo!?
Yahoo! Finance - Get real-time stock quotes
http://finance.yahoo.com

From rpinder at usc.edu  Thu Sep  5 22:12:25 2002
From: rpinder at usc.edu (Rich Pinder)
Date: Fri Jan  9 21:59:37 2004
Subject: [mod_python] 'ok' AttributeError / win32
Message-ID: <3D783939.8090802@usc.edu>

(Very) Newbie here...

I'm starting out with a win32 install (my linux server is 3 weeks away) - and trying to get a head start using 
ModPython.
Eventually, want to get ModPython working with Kinterbasedb & Firebird to do simple form based data storage 
for our cancer research study.

I've gotten the install done, found via the archives the 'gotcha' omission of adding  "AddModule 
mod_python.c", created the little mptest.py sample, and it KIND of works.... But seems to be complaining that 
there is no 'ok' attribute found.

Setup:
Apache/1.3.26  mod_python/2.7.6  Python 2.2.1  (Even though I've upgraded to the 2.7.8 version of the 
mod_python files -using the Apr 19 version of apache.py- the only dll I could find was 2.7.6)


Details of the error:

Hello ThisWorld
Mod_python error: "PythonHandler mptest"

Traceback (most recent call last):

   File "c:\python22\lib\mod_python\apache.py", line 193, in Dispatch
     result = object(req)

   File "c:/program files/apache group/apache/htdocs/python\mptest.py", line 7, in handler
     return apache.ok

AttributeError: 'module' object has no attribute 'ok'

.................

Thanks for any thoughts

Rich Pinder
USC School of Medicine


From ian at veryfresh.com  Thu Sep  5 23:47:13 2002
From: ian at veryfresh.com (Ian Clelland)
Date: Fri Jan  9 21:59:37 2004
Subject: [mod_python] 'ok' AttributeError / win32
In-Reply-To: <3D783939.8090802@usc.edu>
References: <3D783939.8090802@usc.edu>
Message-ID: <20020906064713.GH5501@fullfactor.com>

On Thu, Sep 05, 2002 at 10:12:25PM -0700, Rich Pinder wrote:
> (Very) Newbie here...
> 
> I've gotten the install done, found via the archives the 'gotcha' omission 
> of adding  "AddModule mod_python.c", created the little mptest.py sample, 
> and it KIND of works.... But seems to be complaining that there is no 'ok' 
> attribute found.

> AttributeError: 'module' object has no attribute 'ok'

Identifiers in Python are case-sensitive; try returning "apache.OK" instead of
"apache.ok"

Ian
<ian@veryfresh.com>

From peter.bittner at gmx.net  Fri Sep  6 14:22:25 2002
From: peter.bittner at gmx.net (Peter Bittner)
Date: Fri Jan  9 21:59:37 2004
Subject: [mod_python] Modifying publisher for sensible URLs
References: <16280.1031154973@www2.gmx.net>
Message-ID: <16960.1031314945@www20.gmx.net>

Hi!

I am happy there was some feedback about my modifications to the publisher
(although I know they are everything but brilliant! :-) ).

Could we discuss whether it were worth to change the publisher module so
that it offers some more flexibility as far as URLs are concerned? I'm afraid I
just don't know enough about the publisher to do some more serious
modifications. However, I've found some problems related to this issue:

1. "http://servername/path/script/" works, but
"http://servername/path/script" (without the trailing slash) doesn't. (I can imagine why, but don't know
how to fix it)

2. Provided I've set "index.py" to be one possibility for my
"DirectoryIndex" on Apache then omitting the scriptname in the URL "http://servername/path/"
should execute as "http://servername/path/script". But it seems that it
doesn't (it probably does as ".../script.py" which is not very helpful). (This
would be important to have fixed, too)

(To make this list complete add the following to the top of the list:
"http://servername/path/script/" (or "http://servername/path/script") should
execute as "http://servername/path/script/default". - That is what my
modifications where all about.)

I'd be really happy to see this being implemented in the publisher by
default. I am sure it would do good and would result in a better user acceptance.

Please, Grisha - and all the others that are interested, let's discuss this
out!

Cheers, Peter


> > "Grisha" wrote:
> > > Basically, the publisher doesn't have a "default" method name.
> > > (There is no particular reason for this, it just didn't occur to
> > > me at the time of writing.)
> 
> I have adapted my publisher.py so that is now takes a "default()" method
> by default if no one is specified in the URL. (See the the code below.)
> 
> Do you think this adaption is worth being part of the "official"
> mod_python? Anyone who finds this interesting? (Anyone who
> wouldn't like it?)
>
> [...]

-- 
Peter Bittner
mobil: +43/(0)650/4151545
web: http://www.bittner.at.tf - http://beam.to/htmlkurs
mail: peter.bittner@gmx.net

"Free software is like free speech, not free beer" (Richard Stallman)

GMX - Die Kommunikationsplattform im Internet.
http://www.gmx.net


From drh9296 at ritvax.rit.edu  Fri Sep  6 11:35:18 2002
From: drh9296 at ritvax.rit.edu (David Higgs)
Date: Fri Jan  9 21:59:37 2004
Subject: [mod_python] Modifying publisher for sensible URLs
References: <16280.1031154973@www2.gmx.net> <16960.1031314945@www20.gmx.net>
Message-ID: <3D78CB36.90207@rit.edu>

> Could we discuss whether it were worth to change the publisher module so
> that it offers some more flexibility as far as URLs are concerned? I'm afraid I
> just don't know enough about the publisher to do some more serious
> modifications. However, I've found some problems related to this issue:
> 
> 1. "http://servername/path/script/" works, but
> "http://servername/path/script" (without the trailing slash) doesn't. (I can imagine why, but don't know
> how to fix it)

That functionality is already possible if you roll your own handler. 
Depending on the amount of functionality you want, you may only need 20 
lines of code (or less) to parse and dispatch the request.

With the setup below, http://www.domain.com/util will be a call to 
util_handler.py.  The 'main' method called is always handler().  You'll 
use request.filename and request.path_info to determine what what 
requested.  In this case, the filename would be 
/path/to/your/script/util/index.html, and the path_info would be an 
empty string.

Here's an approximation of my setup:

<Location /util>
     Options -Indexes
     SetHandler python-program
     PythonPath "sys.path+['/path/to/your/script/util', 
'/path/to/your/modules']"
     PythonHandler util_handler
</Location>

bash$ cd /path/to/your/script/util/
bash$ ls
index.html      util_handler.py

The annoying part is that you *need* the index.html to prevent a 404 
error from happening before your script is called.  The content of 
index.html doesn't matter since it is never read; mine are all 
zero-length files.

I have also found that with multiple PythonHandlers, each script must be 
named differently to prevent caching issues.  This wasn't immediately 
obvious, since each httpd thread seemed to have a separate cache.

--david


From vmilitaru at sympatico.ca  Fri Sep  6 14:12:14 2002
From: vmilitaru at sympatico.ca (vio)
Date: Fri Jan  9 21:59:37 2004
Subject: [mod_python] Modifying publisher for sensible URLs
In-Reply-To: <3D78CB36.90207@rit.edu>; from drh9296@ritvax.rit.edu on Fri, Sep 06, 2002 at 11:35:18AM -0400
References: <16280.1031154973@www2.gmx.net> <16960.1031314945@www20.gmx.net> <3D78CB36.90207@rit.edu>
Message-ID: <20020906141214.A1800@eye.neb>

* David Higgs <drh9296@ritvax.rit.edu> [020906 13:40]:
> That functionality is already possible if you roll your own handler. 
> Depending on the amount of functionality you want, you may only need 20 
> lines of code (or less) to parse and dispatch the request.

If I may add, to me this is why mod_python is so damn exciting: its flexibility!With a little python under your belt, and basic understanding of how apache and
'request/response' kinda works, one can make it do absolutely whatever you want.
Adding more 'default' behaviour is nice too, put proportionally will rise the 
learning curve. As a point of comparison, Zope has a lot more functionality 
built-in (I mean 'out of the box'), but the learning curve is proportionally 
steeper, while drastically cutting into Zope's flexibility (in my opinion).
Did I mention that Zope has gotten so huge, with a lot of useless 'fat' 
if you only are looking for very specific functionality.
Flexibility = good, fat = bad.

My 2 c.
Vio

(PS. Hope I haven't started another religious war or Zope bashing campaign,
just wanted to point out that sometimes -though not always- 'leaner' is better)

From mod_python at ns1.tcu-inc.com  Fri Sep  6 21:32:13 2002
From: mod_python at ns1.tcu-inc.com (Mark Nielsen)
Date: Fri Jan  9 21:59:37 2004
Subject: [mod_python] new to list, will mod_python ever simulate what mod_perl does?
Message-ID: <200209070432.g874WDo17067@ns1.tcu-inc.com>

Hello!

I have been pushing myself to use Python more than Perl in the last few
years. I really really like the way mod_perl has turned out and how 
there are tons of modules developed for it. 

Although I use Zope, I don't use it for everything I do and a lot of times
I have no interest in using any publishing modulei for Apache -- yet.
Thus, I like to use the CGI hanlder for now. It caches scripts, modules,
and has hooks into Apache. 

The one thing I seem to be missing with the CGI handler is a standard
way to do persistent database connections. Is there one?

It would be really cool to port all the Perl modules for mod_perl over
to mod_python. Is anybody doing that?

One more thing, I tried to compile mod_python for Apache 2.0 and it keeps
seg faulting apache 2.0. I ma using Python 2.2.1 and RedHat 7.3. 
Anybody have similar problems but got it to work?

Thanks!
Mark




From fabbe at paniq.net  Sat Sep  7 16:37:10 2002
From: fabbe at paniq.net (Fabian Fagerholm)
Date: Fri Jan  9 21:59:37 2004
Subject: [mod_python] new to list, will mod_python ever simulate what
	mod_perl does?
In-Reply-To: <200209070432.g874WDo17067@ns1.tcu-inc.com>
References: <200209070432.g874WDo17067@ns1.tcu-inc.com>
Message-ID: <1031405830.26807.123.camel@kernel>

On Sat, 2002-09-07 at 07:32, Mark Nielsen wrote:
> The one thing I seem to be missing with the CGI handler is a standard
> way to do persistent database connections. Is there one?

Database stuff should be handled by the standard Python DBAPI. Use a
Python database module that supports persistent connections. If
connection pooling is enough and you're using PostgreSQL, try psycopg.

> It would be really cool to port all the Perl modules for mod_perl over
> to mod_python. Is anybody doing that?

Not that I'm aware of.
Which mod_perl modules would you like to have equivalents for in Python?

Note that Python itself has lots of functionality for many different
things. See the Python library reference:
http://www.python.org/doc/current/lib/lib.html

And as a side pointer, look at Albatross which is just perfect when
coupled with mod_python:
http://www.object-craft.com.au/projects/albatross/

If you don't want to program at such a low level then I suggest Webware
or Zope.

Cheers,
Fabian

-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 240 bytes
Desc: This is a digitally signed message part
Url : http://mailman.modpython.org/pipermail/mod_python/attachments/20020907/fe0c4b2b/attachment-0002.bin
From leader730 at hotmail.com  Fri Sep  6 23:48:13 2002
From: leader730 at hotmail.com (Leader730)
Date: Fri Jan  9 21:59:37 2004
Subject: [mod_python] getting clients ip address
Message-ID: <OE57YImWd1Go7tUPsyg0001f9c5@hotmail.com>

hello, I was wondering what was the function I can use to get the clients ip
address, I'm sure I saw it somewhere in the module docs but I can't find it
anymore D:

-----------------------
Too often we lose sight of life's simple pleasures. Remember when someone
annoys you it takes 42 muscles in your face to frown, BUT, it only takes 4
muscles to extend your arm and bitch-slap that mother@#?!&! upside the head!

From alain at onesite.org  Sat Sep  7 17:28:51 2002
From: alain at onesite.org (Alain Tesio)
Date: Fri Jan  9 21:59:37 2004
Subject: [mod_python] getting clients ip address
In-Reply-To: <OE57YImWd1Go7tUPsyg0001f9c5@hotmail.com>
References: <OE57YImWd1Go7tUPsyg0001f9c5@hotmail.com>
Message-ID: <20020907172851.1a142ba6.alain@onesite.org>

On Fri, 6 Sep 2002 23:48:13 -0400
"Leader730" <leader730@hotmail.com> wrote:

> 
> 
> hello, I was wondering what was the function I can use to get the clients ip
> address, I'm sure I saw it somewhere in the module docs but I can't find it
> anymore D:

req.connection.remote_ip

Alain

From peter.bittner at gmx.net  Sun Sep  8 11:44:04 2002
From: peter.bittner at gmx.net (Peter Bittner)
Date: Fri Jan  9 21:59:37 2004
Subject: [mod_python] Modifying publisher for sensible URLs
References: <3D78CB36.90207@rit.edu>
Message-ID: <3932.1031478244@www52.gmx.net>

Hi!

> That functionality is already possible if you roll your own handler. 

Well, I think almost everything is possible when you do a lot on your own.

What I am focusing on is on is to provide a little extra functionality -
just for publisher.py - that makes mod_python more straight forward and easier
to develop programs for. (I do not think that such 15 lines of extra code
would blow up mod_python enormously. It would only affect the publisher.)

From rpinder at usc.edu  Sun Sep  8 21:32:19 2002
From: rpinder at usc.edu (Rich Pinder)
Date: Fri Jan  9 21:59:37 2004
Subject: [mod_python] "Not Found" message with Publisher example
Message-ID: <3D7C2453.8020300@usc.edu>

Got the easy example workin fine from the Manual (3.2 section), but got hung up with the example that 
discusses how the Publisher works.  Edited the  .conf  file, created a new python script   mail.py, made a 
html form - but still get:

The requested URL /form/email was not found on this server.


I'm sure its a simple one - thanks for any thoughts !

Rich Pinder
USC School of Medicine




From fabbe at paniq.net  Mon Sep  9 12:00:11 2002
From: fabbe at paniq.net (Fabian Fagerholm)
Date: Fri Jan  9 21:59:37 2004
Subject: [mod_python] new to list, will mod_python ever simulate what
In-Reply-To: <200209090228.g892Ss622967@ns1.tcu-inc.com>
References: <200209090228.g892Ss622967@ns1.tcu-inc.com>
Message-ID: <1031562012.8377.81.camel@kernel>

On Mon, 2002-09-09 at 05:28, Mark Nielsen wrote:
> In Perl, the core DBI module takes care of all database connections which
> use DBI if you also use Apache DBI.
> I was thinking, there should be a standard way of doing it rather than
> relying on each database author.

Hence DBAPI.
http://www.python.org/topics/database/DatabaseAPI-2.0.html

> There should be a way to do it in Python irrelevant of which database
> connection you use. We would just need a way to make the database
> connections global variables which don't die. 

I agree that it would be useful to be able to keep any such objects
between browser requests. Perhaps there would be a way to place the
connection objects in the global namespace of each mod_python
subinterpreter so that they would continue to exist until the
subinterpreter dies?

But this is a separate issue from the "generic database access" issue.

> So, I guess, I probably will have to make up a way to do it. 
> I use MySQL, PostgreSQL, and Oracle, and also DBM, so I need one way
> for all database connections. 

Even the three SQL-capable ones have slight variations in the SQL syntax
which makes it hard to find a good lowest common denominator that could
be accepted as "standard".

I would write an abstract class that defines the behavior you need and
then four subclasses to implement that behavior for the four database
back-ends you mention. The interface to your application would be your
own, and the interface to each database would make use of DBAPI 2.0
modules specific to each database.

Making the abstract class "standard" makes little sense since it's
probably not very large or complicated, and it's often quite specific to
your application.

I also fail to see how Perl DBI solves certain issues. For example, if
you use Perl DBI and write an application that relies on transactional
capabilities of the database, and you move to a database without
transactional capabilities (MySQL with MyISAM tables, for instance) then
you'll have to adapt your code.
Also, in every single Perl DBI example I've seen, there's SQL embedded
in the code. I probably don't understand DBI but it seems to me that
this makes it essentially impossible to write code for, say, an Oracle
database that makes use of Oracle-specific features, and then run the
same code with a MySQL database as back-end. Or can DBI somehow emulate
the behavior of these databases?

So there really isn't any way out - the back-ends are just too
different. With good use of classes you can at least separate the
databases from the functional code in your particular application.

Cheers,
Fabian


-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 240 bytes
Desc: This is a digitally signed message part
Url : http://mailman.modpython.org/pipermail/mod_python/attachments/20020909/f0263eda/attachment-0002.bin
From fabbe at paniq.net  Mon Sep  9 12:07:24 2002
From: fabbe at paniq.net (Fabian Fagerholm)
Date: Fri Jan  9 21:59:37 2004
Subject: [mod_python] new to list, will mod_python ever simulate what
In-Reply-To: <200209090228.g892Ss622967@ns1.tcu-inc.com>
References: <200209090228.g892Ss622967@ns1.tcu-inc.com>
Message-ID: <1031562445.8385.84.camel@kernel>

On Mon, 2002-09-09 at 05:28, Mark Nielsen wrote:
> ...
> Mark

Please fix your mail server and/or your From: address.

Cheers,
Fabian

-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 240 bytes
Desc: This is a digitally signed message part
Url : http://mailman.modpython.org/pipermail/mod_python/attachments/20020909/fe7efdef/attachment-0002.bin
From lisicky at datis.cdrail.cz  Tue Sep 10 12:27:24 2002
From: lisicky at datis.cdrail.cz (Jiri Lisicky)
Date: Fri Jan  9 21:59:37 2004
Subject: [mod_python] free hosting?
Message-ID: <j4irnu81vavvh2bc7tde66ib68m34qigvo@4ax.com>

Is anywhere on the net free web hosting with mod_python instaled?

I search but found only zope or cgi.

thanks 

Jiri Lisicky

From gbenson at redhat.com  Thu Sep 12 11:25:30 2002
From: gbenson at redhat.com (Gary Benson)
Date: Fri Jan  9 21:59:38 2004
Subject: [mod_python] [PATCH] fix filter lookup failure
Message-ID: <20020912112529.B27092@redhat.com>

Hi,

ap_register_*_filter() normalizes the filter's name before it stores it
by converting it to lower case and removing special characters.  If the
name is not the same when normalized then python_filter() will not be
able to work out which filter it is and will segfault.  The attached
patch fixes.

Later,
Gary

[ gbenson@redhat.com ][ GnuPG 85A8F78B ][ http://inauspicious.org/ ]
-------------- next part --------------
ap_register_*_filter normalizes the filter's name, so we need to store
the normalized name for filter lookups rather than the name the user
registered it with.

Index: src/mod_python.c
===================================================================
RCS file: /cvsroot/modpython/mod_python/src/mod_python.c,v
retrieving revision 1.73
diff -u -r1.73 mod_python.c
--- src/mod_python.c	6 Sep 2002 22:06:28 -0000	1.73
+++ src/mod_python.c	11 Sep 2002 15:58:56 -0000
@@ -1479,23 +1479,24 @@
 
     py_config *conf;
     py_handler *fh;
+    ap_filter_rec_t *frec;
     
     if (!name)
         name = apr_pstrdup(cmd->pool, handler);
 
+    /* register the filter NOTE - this only works so long as the
+       directive is only allowed in the main config. For .htaccess we
+       would have to make sure not to duplicate this */
+    frec = ap_register_input_filter(name, python_input_filter, NULL, AP_FTYPE_CONNECTION);
+ 
     conf = (py_config *) mconfig;
 
     fh = (py_handler *) apr_pcalloc(cmd->pool, sizeof(py_handler));
     fh->handler = (char *)handler;
     fh->dir = conf->config_dir;
 
-    apr_hash_set(conf->in_filters, name, APR_HASH_KEY_STRING, fh);
+    apr_hash_set(conf->in_filters, frec->name, APR_HASH_KEY_STRING, fh);
 
-    /* register the filter NOTE - this only works so long as the
-       directive is only allowed in the main config. For .htaccess we
-       would have to make sure not to duplicate this */
-    ap_register_input_filter(name, python_input_filter, NULL, AP_FTYPE_CONNECTION);
- 
     return NULL;
 }
 
@@ -1503,23 +1504,24 @@
                                                 const char *handler, const char *name) {
     py_config *conf;
     py_handler *fh;
+    ap_filter_rec_t *frec;
  
     if (!name)
         name = apr_pstrdup(cmd->pool, handler);
 
+    /* register the filter NOTE - this only works so long as the
+       directive is only allowed in the main config. For .htaccess we
+       would have to make sure not to duplicate this */
+    frec = ap_register_output_filter(name, python_output_filter, NULL, AP_FTYPE_RESOURCE);
+ 
     conf = (py_config *) mconfig;
     
     fh = (py_handler *) apr_pcalloc(cmd->pool, sizeof(py_handler));
     fh->handler = (char *)handler;
     fh->dir = conf->config_dir;
 
-    apr_hash_set(conf->out_filters, name, APR_HASH_KEY_STRING, fh);
+    apr_hash_set(conf->out_filters, frec->name, APR_HASH_KEY_STRING, fh);
 
-    /* register the filter NOTE - this only works so long as the
-       directive is only allowed in the main config. For .htaccess we
-       would have to make sure not to duplicate this */
-    ap_register_output_filter(name, python_output_filter, NULL, AP_FTYPE_RESOURCE);
- 
     return NULL;
 }
 
From bakey at traq.com  Thu Sep 12 09:15:53 2002
From: bakey at traq.com (Brian Akey)
Date: Fri Jan  9 21:59:38 2004
Subject: [mod_python] Apache 2 and ModPython3
In-Reply-To: <20020912112529.B27092@redhat.com>
References: <20020912112529.B27092@redhat.com>
Message-ID: <1031840154.798.2.camel@g2.traq.com>

What am I missing?
I have tried both Gentoo 1.2 and Slackware 8.1
and compiled apache2 and modpython3 by hand and the httpd segfaults
every time
I go to the directory where my python code lives.
I am using python 2.2.1.
How can I get this to work?

bakey@traq.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mailman.modpython.org/pipermail/mod_python/attachments/20020912/6bb317ed/attachment-0002.htm
From gbenson at redhat.com  Thu Sep 12 17:39:46 2002
From: gbenson at redhat.com (Gary Benson)
Date: Fri Jan  9 21:59:38 2004
Subject: [mod_python] Filter chaining bug
Message-ID: <20020912173945.G27092@redhat.com>

Hi,

I've been playing around with chaining PythonOutputFilters and run into
a dead end.  It seems that mod_python can be the first filter in a chain
quite nicely but it can't be a subsequent filter and it's not obvious
why (to me, anyway).

The attached tarball contains a fragment of httpd.conf that sets up
filters from mod_python and mod_include in some directory.  Everything
works except

  data.flt.flt -- two mod_python filters chained, the second segfaults
  data.shtml.flt -- mod_include outputting into mod_python, mod_python
    segfaults

Is anyone else is able to reproduce this and/or does anyone know what is
wrong here?

Cheers,
Gary

[ gbenson@redhat.com ][ GnuPG 85A8F78B ][ http://inauspicious.org/ ]

From gbenson at redhat.com  Thu Sep 12 17:40:43 2002
From: gbenson at redhat.com (Gary Benson)
Date: Fri Jan  9 21:59:38 2004
Subject: [mod_python] Filter chaining bug (take 2)
Message-ID: <20020912174042.H27092@redhat.com>

Doh, forgot the tarball!

----- Forwarded message from Gary Benson <gbenson@redhat.com> -----

Date: Thu, 12 Sep 2002 17:39:46 +0100
From: Gary Benson <gbenson@redhat.com>
To: mod_python@modpython.org
Mail-Followup-To: mod_python@modpython.org
Subject: Filter chaining bug

Hi,

I've been playing around with chaining PythonOutputFilters and run into
a dead end.  It seems that mod_python can be the first filter in a chain
quite nicely but it can't be a subsequent filter and it's not obvious
why (to me, anyway).

The attached tarball contains a fragment of httpd.conf that sets up
filters from mod_python and mod_include in some directory.  Everything
works except

  data.flt.flt -- two mod_python filters chained, the second segfaults
  data.shtml.flt -- mod_include outputting into mod_python, mod_python
    segfaults

Is anyone else is able to reproduce this and/or does anyone know what is
wrong here?

Cheers,
Gary

[ gbenson@redhat.com ][ GnuPG 85A8F78B ][ http://inauspicious.org/ ]

----- End forwarded message -----
[ gbenson@redhat.com ][ GnuPG 85A8F78B ][ http://inauspicious.org/ ]
-------------- next part --------------
A non-text attachment was scrubbed...
Name: filter.tar.gz
Type: application/x-gzip
Size: 621 bytes
Desc: not available
Url : http://mailman.modpython.org/pipermail/mod_python/attachments/20020912/a4775706/filter.tar-0002.bin
From andres.meza at nuevosmedios.ws  Thu Sep 12 13:20:45 2002
From: andres.meza at nuevosmedios.ws (Andres Meza)
Date: Fri Jan  9 21:59:38 2004
Subject: [mod_python] How to upload files using mod_python's publisher handler?
Message-ID: <1031854845.5447.9.camel@coraje>

Greetings. 

I have created a python CGI script that can upload files sucessfully.
Now, I want to create a mod_python script with the same feature using
the "publisher" handler and I get this error:   


[Thu Sep 12 08:53:41 2002] [error] PythonHandler mod_python.publisher:
Traceback (most recent call last): 
[Thu Sep 12 08:53:41 2002] [error] PythonHandler mod_python.publisher:  
File
"/home/mrnet/rpm/tmp/mod_python-root/usr/lib/python2.2/site-packages/mod_python/apache.py", line 193, in Dispatch 
[Thu Sep 12 08:53:41 2002] [error] PythonHandler mod_python.publisher:  
File
"/home/mrnet/rpm/tmp/mod_python-root/usr/lib/python2.2/site-packages/mod_python/publisher.py", line 104, in handler 
[Thu Sep 12 08:53:41 2002] [error] PythonHandler mod_python.publisher:  
File
"/home/mrnet/rpm/tmp/mod_python-root/usr/lib/python2.2/site-packages/mod_python/publisher.py", line 308, in __init__ 
[Thu Sep 12 08:53:41 2002] [error] PythonHandler mod_python.publisher:
AttributeError: 'file' object has no attribute '__methods__' 

Anyone have an idea about why I get this error? 

Thanks for your time, 
-- 
   Andr?s Meza
   Technical Manager
 __Nuevos Medios - NM S.A.____________________
   e-mail:         andres.meza@nuevosmedios.ws
   day time phone: (+572)6827794 ext.102
   url:            www.nuevosmedios.ws
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mailman.modpython.org/pipermail/mod_python/attachments/20020912/31ee3b44/attachment-0002.htm
From grisha at modpython.org  Thu Sep 12 18:25:45 2002
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 21:59:38 2004
Subject: [mod_python] ANNOUNCE: Mod_Python donated to ASF
Message-ID: <Pine.BSF.4.32.0209121812020.92256-100000@eden.ispol.com>

It is my pleasure to announce that Mod_Python has been donated to the
Apache Software Foundation, and is now a subproject of the httpd server
project (see http://httpd.apache.org/).

I am grateful to ASF for accepting this donation and committing resources
to further the support of Mod_Python. I believe that this action will
advance the development of Mod_Python, resulting in an ultimately better
and more popular tool for Python developers. I also believe it will serve
to better position Python as a language of choice for web development, a
need that has been expressed by many.

There are no implications to the current Mod_Python users - the license is
the same with the sole difference in that the copyright belongs to ASF
now.

As a consequense of the donation, the CVS repository is now hosted on
cvs.apache.org.  Do not use the SourceForge repository anymore, it will
soon be removed.

There will also be website and mailing changes, but the details are still
being finalized and will be announced when ready.

Regards,

Grisha Trubetskoy



From neel at mediapulse.com  Thu Sep 12 18:37:20 2002
From: neel at mediapulse.com (Michael C. Neel)
Date: Fri Jan  9 21:59:38 2004
Subject: [mod_python] ANNOUNCE: Mod_Python donated to ASF
Message-ID: <C0FC22C08B82074A88B50061764157772C63C6@johnson.mediapulse.net>

Let me be the first to say, in the fashion that the Internet has taught
us to celebrate a great victory or other action....

Woot.

Mike

--
Michael C. Neel
There are only 10 types of people in the world;
those who understand binary and those who don't.


-----Original Message-----
From: Gregory (Grisha) Trubetskoy [mailto:grisha@modpython.org] 
Sent: Thursday, September 12, 2002 6:26 PM
To: mod_python@modpython.org; python-list@python.org;
announce@apache.org; dev@httpd.apache.org
Cc: jim@apache.org
Subject: [mod_python] ANNOUNCE: Mod_Python donated to ASF



It is my pleasure to announce that Mod_Python has been donated to the
Apache Software Foundation, and is now a subproject of the httpd server
project (see http://httpd.apache.org/).

I am grateful to ASF for accepting this donation and committing
resources
to further the support of Mod_Python. I believe that this action will
advance the development of Mod_Python, resulting in an ultimately better
and more popular tool for Python developers. I also believe it will
serve
to better position Python as a language of choice for web development, a
need that has been expressed by many.

There are no implications to the current Mod_Python users - the license
is
the same with the sole difference in that the copyright belongs to ASF
now.

As a consequense of the donation, the CVS repository is now hosted on
cvs.apache.org.  Do not use the SourceForge repository anymore, it will
soon be removed.

There will also be website and mailing changes, but the details are
still
being finalized and will be announced when ready.

Regards,

Grisha Trubetskoy


_______________________________________________
Mod_python mailing list
Mod_python@modpython.org
http://www.modpython.org/mailman/listinfo/mod_python


From jack_diederich at email.com  Thu Sep 12 17:45:21 2002
From: jack_diederich at email.com (Jack Diederich)
Date: Fri Jan  9 21:59:38 2004
Subject: [mod_python] ANNOUNCE: Mod_Python donated to ASF
Message-ID: <20020912224521.7047.qmail@email.com>

Congrats!

This can only be seen as a Good Thing

-jack
-- 
__________________________________________________________
Sign-up for your own FREE Personalized E-mail at Mail.com
http://www.mail.com/?sr=signup


From vmilitaru at sympatico.ca  Thu Sep 12 22:11:22 2002
From: vmilitaru at sympatico.ca (vio)
Date: Fri Jan  9 21:59:38 2004
Subject: [mod_python] ANNOUNCE: Mod_Python donated to ASF
In-Reply-To: <Pine.BSF.4.32.0209121812020.92256-100000@eden.ispol.com>; from grisha@modpython.org on Thu, Sep 12, 2002 at 06:25:45PM -0400
References: <Pine.BSF.4.32.0209121812020.92256-100000@eden.ispol.com>
Message-ID: <20020912221122.A1410@eye.neb>

Congrats to Gregory for this 'official' recognition for the great work he did
with mod_python. And thank you to the apache board for recognising the need
for an 'official' python effort in such an open way. Let's face it, there is no
better place for an apache module to live but close to apache (httpd)'s place.
Certainly the most intuitive place from a user's perspective. And this official
blessing brings the additional advantage to cut through the confusion: there
are not 10 'official' python' flavored apaches for a newcomer to choose from.
(enough headaches just installing the beast and learning it)

Regards,
Vio

* Gregory (Grisha) Trubetskoy <grisha@modpython.org> [020912 20:57]:
> 
> It is my pleasure to announce that Mod_Python has been donated to the
> Apache Software Foundation, and is now a subproject of the httpd server
> project (see http://httpd.apache.org/).
> 
> I am grateful to ASF for accepting this donation and committing resources
> to further the support of Mod_Python. I believe that this action will
> advance the development of Mod_Python, resulting in an ultimately better
> and more popular tool for Python developers. I also believe it will serve
> to better position Python as a language of choice for web development, a
> need that has been expressed by many.
> 
> There are no implications to the current Mod_Python users - the license is
> the same with the sole difference in that the copyright belongs to ASF
> now.
> 
> As a consequense of the donation, the CVS repository is now hosted on
> cvs.apache.org.  Do not use the SourceForge repository anymore, it will
> soon be removed.
> 
> There will also be website and mailing changes, but the details are still
> being finalized and will be announced when ready.
> 
> Regards,
> 
> Grisha Trubetskoy
> 
> 
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://www.modpython.org/mailman/listinfo/mod_python

From neel at mediapulse.com  Fri Sep 13 00:40:32 2002
From: neel at mediapulse.com (Michael Neel)
Date: Fri Jan  9 21:59:38 2004
Subject: [mod_python] Mod_Python 3 / Apache 2 / RedHat 7.3 / Python 2.2 = Seg fault :(
Message-ID: <000001c25adf$b2039020$0400a8c0@clapton>

I'm having a bit of trouble trying to get mod_python beta 3 to run on
apache 2.  I get a line like:

[Thu Sep 12 23:31:21 2002] [notice] child pid 3768 exit signal
Segmentation fault (11)

Whenever I load mod_python no matter what page I hit, .py or otherwise.
I'm running RH 7.3 and I've copied the python2.2 binary over the python
one so I have python2.2 as default so this could be related to a path
issue of lib's but I'll be damned if I can find it.

My compile options for apache were basic; --with-mpm=worker and
--enable-mods-shared=all.  Mod_python I just past in the path to apxs.
I didn't see anything about beta 3 not working with worker threads (the
way I'd prefer apache to run), but I've tried prefork as well with the
same results.

Any tips or ideas would help greatly.  I've looked though the list
archives and couldn't find anything, but to be stuck at this small of a
step means I've overlooked something basic...

Mike

--
Michael C. Neel
There are only 10 types of people in the world;
those who understand binary and those who don't.


From fabbe at paniq.net  Fri Sep 13 10:02:55 2002
From: fabbe at paniq.net (Fabian Fagerholm)
Date: Fri Jan  9 21:59:38 2004
Subject: [mod_python] ANNOUNCE: Mod_Python donated to ASF
In-Reply-To: <Pine.BSF.4.32.0209121812020.92256-100000@eden.ispol.com>
References: <Pine.BSF.4.32.0209121812020.92256-100000@eden.ispol.com>
Message-ID: <1031900581.6954.103.camel@kernel>

On Fri, 2002-09-13 at 01:25, Gregory (Grisha) Trubetskoy wrote:
> It is my pleasure to announce that Mod_Python has been donated to the
> Apache Software Foundation, and is now a subproject of the httpd server
> project (see http://httpd.apache.org/).

My congratulations to you Grisha for pulling this off - I think this
will be a good thing for the Python language in general and mod_python
users in particular. Not to mention the benefits that Apache users will
probably see.

Cheers,
Fabian

-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 240 bytes
Desc: This is a digitally signed message part
Url : http://mailman.modpython.org/pipermail/mod_python/attachments/20020913/ac1bf2c8/attachment-0002.bin
From jfk at metation.com  Fri Sep 13 09:31:30 2002
From: jfk at metation.com (=?iso-8859-1?q?J=F8rgen=20Fr=F8jk=20Kj=E6rsgaard=20{Metation}?=)
Date: Fri Jan  9 21:59:38 2004
Subject: [mod_python] ANNOUNCE: Mod_Python donated to ASF
In-Reply-To: <Pine.BSF.4.32.0209121812020.92256-100000@eden.ispol.com>
References: <Pine.BSF.4.32.0209121812020.92256-100000@eden.ispol.com>
Message-ID: <0209130931300R.00311@grace.metation.com>

Congratulatiuons!

I think this is a great step forward for Python as a web language and 
mod_python in particular. mod_python really deserves the exposure it can get 
through apache.org.

/jfk

From mbp at samba.org  Fri Sep 13 18:10:42 2002
From: mbp at samba.org (Martin Pool)
Date: Fri Jan  9 21:59:38 2004
Subject: [mod_python] Mod_Python 3 / Apache 2 / RedHat 7.3 / Python 2.2 = Seg fault :(
In-Reply-To: <000001c25adf$b2039020$0400a8c0@clapton>
References: <000001c25adf$b2039020$0400a8c0@clapton>
Message-ID: <20020913081040.GI8093@samba.org>

On 13 Sep 2002, Michael Neel <neel@mediapulse.com> wrote:
> I'm having a bit of trouble trying to get mod_python beta 3 to run on
> apache 2.  I get a line like:
> 
> [Thu Sep 12 23:31:21 2002] [notice] child pid 3768 exit signal
> Segmentation fault (11)
> 
> Whenever I load mod_python no matter what page I hit, .py or otherwise.
> I'm running RH 7.3 and I've copied the python2.2 binary over the python
> one so I have python2.2 as default so this could be related to a path
> issue of lib's but I'll be damned if I can find it.
> 
> My compile options for apache were basic; --with-mpm=worker and
> I didn't see anything about beta 3 not working with worker threads (the
> way I'd prefer apache to run), but I've tried prefork as well with the
> same results.
> 
> Any tips or ideas would help greatly.  I've looked though the list
> archives and couldn't find anything, but to be stuck at this small of a
> step means I've overlooked something basic...

Try running apache under gdb?  Something like this:

  # gdb /usr/sbin/apache2
  [blah blah]
  gdb> run -X

Then try to access a page.  Apache should stop in gdb, and it might
tell you where the problem is.

-- 
Martin 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
Url : http://mailman.modpython.org/pipermail/mod_python/attachments/20020913/284089f0/attachment-0002.bin
From list-mod_python at empires.org  Fri Sep 13 01:36:58 2002
From: list-mod_python at empires.org (Jeff Davis)
Date: Fri Jan  9 21:59:38 2004
Subject: [mod_python] Segfault for me as well
In-Reply-To: <000001c25adf$b2039020$0400a8c0@clapton>
References: <000001c25adf$b2039020$0400a8c0@clapton>
Message-ID: <200209130136.58171.list-mod_python@empires.org>

I have the same segfault problem that someone else mentioned earlier. I am on 
debian unstable, and have the current package for apache2 installed 
(mpm-prefork), and I built it with:

./configure --with-apxs=/usr/bin/apxs2
make dso
make install

However, I had to set the variable "PYTHONBIN" in the Makefile, it wasn't set 
up for me automatically. I think that is just a minor problem with the build 
system on my platform. I couldn't find anything in the configure script to 
suggest that it was trying to set that variable.

Anyway, after I did get it built it simply segfaulted every time that I 
accessed the server. 

I know a little C, so I will look into this a little. If I have time I will 
try to deal with both of these issues (the build issue and the segfault). 

By the way, is this list the proper development forum? I don't see a lot of 
development discussion here.

Regards,
	Jeff

On Thursday 12 September 2002 09:40 pm, Michael Neel wrote:
> I'm having a bit of trouble trying to get mod_python beta 3 to run on
> apache 2.  I get a line like:
>
> [Thu Sep 12 23:31:21 2002] [notice] child pid 3768 exit signal
> Segmentation fault (11)
>
> Whenever I load mod_python no matter what page I hit, .py or otherwise.
> I'm running RH 7.3 and I've copied the python2.2 binary over the python
> one so I have python2.2 as default so this could be related to a path
> issue of lib's but I'll be damned if I can find it.
>
> My compile options for apache were basic; --with-mpm=worker and
> --enable-mods-shared=all.  Mod_python I just past in the path to apxs.
> I didn't see anything about beta 3 not working with worker threads (the
> way I'd prefer apache to run), but I've tried prefork as well with the
> same results.
>
> Any tips or ideas would help greatly.  I've looked though the list
> archives and couldn't find anything, but to be stuck at this small of a
> step means I've overlooked something basic...
>
> Mike


From list-mod_python at empires.org  Fri Sep 13 02:03:37 2002
From: list-mod_python at empires.org (Jeff Davis)
Date: Fri Jan  9 21:59:38 2004
Subject: [mod_python] patch for build
Message-ID: <200209130203.37120.list-mod_python@empires.org>

I mentioned a problem with the build on my system, wherein the PYTHONBIN 
variable was not being defined in the Makefile. Here is a simple patch to 
Makefile.in (from the old to the new) that just adds the PYTHONBIN variable 
(and sets it to the PYTHON_BIN variable of the configure script).

I am not too familiar with build systems, so forgive me if I'm way off track 
about how to change these things. Or, maybe I just wasn't building it 
properly in the first place and it was working the whole time.

Regards,
	Jeff

--- Makefile.in~	2002-08-11 19:01:15.000000000 -0700
+++ Makefile.in	2002-09-13 01:56:50.000000000 -0700
@@ -50,6 +50,7 @@
 AP_SRC_GRP=@AP_SRC_GRP@
 INSTALL=@INSTALL@
 PY_STD_LIB=@PY_STD_LIB@
+PYTHONBIN=@PYTHON_BIN@
 
 all: @ALL@
 


From vmanera at manord.com  Fri Sep 13 11:05:25 2002
From: vmanera at manord.com (Manera, Villiam)
Date: Fri Jan  9 21:59:38 2004
Subject: R: [mod_python] How to upload files using mod_python's publisher 
	handler?
Message-ID: <52DC70C1C1575C418CB033523A29CF140E0483@exchange2000.manord.com>

try this: 

 publisher.py patched with this function work fine!!!!

class File:

""" Like a file, but also has headers and filename

"""

def __init__(self, field):

# steal all the file-like methods

#for m in field.file.__methods__:

#for m in dir(field.file): #dont' work

for m in self.sim_methods(field.file):

self.__dict__[m] = getattr(field.file, m)

self.headers = field.headers

self.filename = field.filename

def sim_methods(self,obj):

from types import BuiltinMethodType #parte aggiunta

return filter(lambda s, t=obj:

type(getattr(t, s)) == BuiltinMethodType, dir(obj))

 

 

Villiam

-----Messaggio originale-----
Da: Andres Meza [mailto:andres.meza@nuevosmedios.ws]
Inviato: gioved? 12 settembre 2002 20.21
A: mod_python@modpython.org
Oggetto: [mod_python] How to upload files using mod_python's publisher
handler?


Greetings. 

I have created a python CGI script that can upload files sucessfully. Now, I
want to create a mod_python script with the same feature using the
"publisher" handler and I get this error:   


[Thu Sep 12 08:53:41 2002] [error] PythonHandler mod_python.publisher:
Traceback (most recent call last): 
[Thu Sep 12 08:53:41 2002] [error] PythonHandler mod_python.publisher:
File
"/home/mrnet/rpm/tmp/mod_python-root/usr/lib/python2.2/site-packages/mod_pyt
hon/apache.py", line 193, in Dispatch 
[Thu Sep 12 08:53:41 2002] [error] PythonHandler mod_python.publisher:
File
"/home/mrnet/rpm/tmp/mod_python-root/usr/lib/python2.2/site-packages/mod_pyt
hon/publisher.py", line 104, in handler 
[Thu Sep 12 08:53:41 2002] [error] PythonHandler mod_python.publisher:
File
"/home/mrnet/rpm/tmp/mod_python-root/usr/lib/python2.2/site-packages/mod_pyt
hon/publisher.py", line 308, in __init__ 
[Thu Sep 12 08:53:41 2002] [error] PythonHandler mod_python.publisher:
AttributeError: 'file' object has no attribute '__methods__' 

Anyone have an idea about why I get this error? 

Thanks for your time, 

-- 

   Andr?s Meza

   Technical Manager

 __Nuevos Medios - NM S.A.____________________

   e-mail:         andres.meza@nuevosmedios.ws

   day time phone: (+572)6827794 ext.102

   url:            www.nuevosmedios.ws

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mailman.modpython.org/pipermail/mod_python/attachments/20020913/3e8fc6ec/attachment-0002.htm
From list-mod_python at empires.org  Fri Sep 13 02:34:23 2002
From: list-mod_python at empires.org (Jeff Davis)
Date: Fri Jan  9 21:59:38 2004
Subject: [mod_python] Mod_Python 3 / Apache 2 / RedHat 7.3 / Python 2.2 = Seg fault :(
In-Reply-To: <20020913081040.GI8093@samba.org>
References: <000001c25adf$b2039020$0400a8c0@clapton> <20020913081040.GI8093@samba.org>
Message-ID: <200209130234.23802.list-mod_python@empires.org>

> Try running apache under gdb?  Something like this:
>
>   # gdb /usr/sbin/apache2
>   [blah blah]
>   gdb> run -X
>
> Then try to access a page.  Apache should stop in gdb, and it might
> tell you where the problem is.

I tried both gdb and valgrind and supplied the -X argument for each. When I 
hit a page, all it said was "Segmentation Fault" (for valgrind, and gdb was 
similar: "Program received signal SIGSEGV, Segmentation fault."). GDB also 
said "0x402611bb in strlen () from /lib/libc.so.6" after the SIGSEGV, which 
might be helpful. 

Is there something I should be doing differently? I am not really good with 
debuggers.

Valgrind also produced a couple mutex errors for my apache2 even without 
loading mod_python, so it could, I suppose, be a problem with apache2 
(however apache2 seems to function just fine for static pages & cgi).

Regards,
	Jeff

From mbp at samba.org  Fri Sep 13 19:47:21 2002
From: mbp at samba.org (Martin Pool)
Date: Fri Jan  9 21:59:38 2004
Subject: [mod_python] Mod_Python 3 / Apache 2 / RedHat 7.3 / Python 2.2 = Seg fault :(
In-Reply-To: <200209130234.23802.list-mod_python@empires.org>
References: <000001c25adf$b2039020$0400a8c0@clapton> <20020913081040.GI8093@samba.org> <200209130234.23802.list-mod_python@empires.org>
Message-ID: <20020913094720.GL8093@samba.org>

On 13 Sep 2002, Jeff Davis <list-mod_python@empires.org> wrote:
> > Try running apache under gdb?  Something like this:
> >
> >   # gdb /usr/sbin/apache2
> >   [blah blah]
> >   gdb> run -X
> >
> > Then try to access a page.  Apache should stop in gdb, and it might
> > tell you where the problem is.
> 
> I tried both gdb and valgrind and supplied the -X argument for each. When I 
> hit a page, all it said was "Segmentation Fault" (for valgrind, and gdb was 
> similar: "Program received signal SIGSEGV, Segmentation fault."). GDB also 
> said "0x402611bb in strlen () from /lib/libc.so.6" after the SIGSEGV, which 
> might be helpful. 

OK, good.  Now once you get to that point, type 

  gdb> backtrace full

to get some info on where the call to strlen() that caused trouble
came from.  

-- 
Martin 

From neel at mediapulse.com  Fri Sep 13 11:12:55 2002
From: neel at mediapulse.com (Michael C. Neel)
Date: Fri Jan  9 21:59:38 2004
Subject: [mod_python] Mod_Python 3 / Apache 2 / RedHat 7.3 / Python 2.2 = Seg fault :(
Message-ID: <C0FC22C08B82074A88B50061764157775BA8@johnson.mediapulse.net>

I take it you are having a similar problem?

I'm not able to get gdb to run on apache2; it runs but I cannot connect
to it.  I'm not really familiar with gdb, so I'm not sure what I have to
do to get it to run.

I'm trying out compiling mod_python with different arguments to see if
anything fixes it.  It might also be python 2.2, I need to upgrade to
2.2.1 and see where that leads.

Mike
--
Michael C. Neel
There are only 10 types of people in the world;
those who understand binary and those who don't.

-----Original Message-----
From: Martin Pool [mailto:mbp@samba.org] 
Sent: Friday, September 13, 2002 5:47 AM
To: Jeff Davis
Cc: Michael C. Neel; mod_python@modpython.org
Subject: Re: [mod_python] Mod_Python 3 / Apache 2 / RedHat 7.3 / Python
2.2 = Seg fault :(


On 13 Sep 2002, Jeff Davis <list-mod_python@empires.org> wrote:
> > Try running apache under gdb?  Something like this:
> >
> >   # gdb /usr/sbin/apache2
> >   [blah blah]
> >   gdb> run -X
> >
> > Then try to access a page.  Apache should stop in gdb, and it might
> > tell you where the problem is.
> 
> I tried both gdb and valgrind and supplied the -X argument for each.
When I 
> hit a page, all it said was "Segmentation Fault" (for valgrind, and
gdb was 
> similar: "Program received signal SIGSEGV, Segmentation fault."). GDB
also 
> said "0x402611bb in strlen () from /lib/libc.so.6" after the SIGSEGV,
which 
> might be helpful. 

OK, good.  Now once you get to that point, type 

  gdb> backtrace full

to get some info on where the call to strlen() that caused trouble
came from.  

-- 
Martin 


From andres.meza at nuevosmedios.ws  Fri Sep 13 10:52:44 2002
From: andres.meza at nuevosmedios.ws (Andres Meza)
Date: Fri Jan  9 21:59:38 2004
Subject: R: [mod_python] How to upload files using mod_python's	publisher
 handler?
In-Reply-To: <52DC70C1C1575C418CB033523A29CF140E0483@exchange2000.manord.com>
References: <52DC70C1C1575C418CB033523A29CF140E0483@exchange2000.manord.com>
Message-ID: <1031932364.2958.15.camel@coraje>

It works quite well!

Thanks a lot for your patch. Do you know if this bug-fix or the
equivalent one will be included in future versions of mod_python ?

Best regards,
-- 
   Andr?s Meza
   Technical Manager
 __Nuevos Medios - NM S.A.____________________
   e-mail:         andres.meza@nuevosmedios.ws
   day time phone: (+572)6827794 ext.102
   url:            www.nuevosmedios.ws

El vie, 13-09-2002 a las 04:05, Manera, Villiam escribi?:

    try this: 
    
     publisher.py patched with this function work fine!!!!
    
    class File:
    
    """ Like a file, but also has headers and filename
    
    """
    
    def __init__(self, field):
    
    # steal all the file-like methods
    
    #for m in field.file.__methods__:
    
    #for m in dir(field.file): #dont' work
    
    for m in self.sim_methods(field.file):
    
    self.__dict__[m] = getattr(field.file, m)
    
    self.headers = field.headers
    
    self.filename = field.filename
    
    def sim_methods(self,obj):
    
    from types import BuiltinMethodType #parte aggiunta
    
    return filter(lambda s, t=obj:
    
    type(getattr(t, s)) == BuiltinMethodType, dir(obj))
    
     
    
     
    
    Villiam

        -----Messaggio originale-----
        Da: Andres Meza [mailto:andres.meza@nuevosmedios.ws]
        Inviato: gioved? 12 settembre 2002 20.21
        A: mod_python@modpython.org
        Oggetto: [mod_python] How to upload files using mod_python's
        publisher handler?
        
        
        Greetings. 
        
        I have created a python CGI script that can upload files
        sucessfully. Now, I want to create a mod_python script with the
        same feature using the "publisher" handler and I get this
        error:   
        
        
        [Thu Sep 12 08:53:41 2002] [error] PythonHandler
        mod_python.publisher: Traceback (most recent call last): 
        [Thu Sep 12 08:53:41 2002] [error] PythonHandler
        mod_python.publisher:   File
        "/home/mrnet/rpm/tmp/mod_python-root/usr/lib/python2.2/site-packages/mod_python/apache.py", line 193, in Dispatch 
        [Thu Sep 12 08:53:41 2002] [error] PythonHandler
        mod_python.publisher:   File
        "/home/mrnet/rpm/tmp/mod_python-root/usr/lib/python2.2/site-packages/mod_python/publisher.py", line 104, in handler 
        [Thu Sep 12 08:53:41 2002] [error] PythonHandler
        mod_python.publisher:   File
        "/home/mrnet/rpm/tmp/mod_python-root/usr/lib/python2.2/site-packages/mod_python/publisher.py", line 308, in __init__ 
        [Thu Sep 12 08:53:41 2002] [error] PythonHandler
        mod_python.publisher: AttributeError: 'file' object has no
        attribute '__methods__' 
        
        Anyone have an idea about why I get this error? 
        
        Thanks for your time, 
        -- 
           Andr?s Meza
           Technical Manager
         __Nuevos Medios - NM S.A.____________________
           e-mail:         andres.meza@nuevosmedios.ws
           day time phone: (+572)6827794 ext.102
           url:            www.nuevosmedios.ws


-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mailman.modpython.org/pipermail/mod_python/attachments/20020913/d5b46a96/attachment-0002.htm
From bryan at eevolved.com  Fri Sep 13 16:04:02 2002
From: bryan at eevolved.com (Bryan Mongeau)
Date: Fri Jan  9 21:59:38 2004
Subject: [mod_python] Mod_python 3.0 BETA / Apache2 segfault
Message-ID: <200209131604.02633.bryan@eevolved.com>

Hello,

I have tested out the 3.0 BETA with apache 2 and discovered a segfault.

$ gdb ./httpd
GNU gdb 5.2.1
(gdb) run -X
Starting program: /usr/local/apache2/bin/httpd -X

Program received signal SIGSEGV, Segmentation fault.
0x400e8eef in apr_pstrcat (a=0x81d7fe8) at apr_strings.c:175
175             apr_size_t cplen = strlen(cp);
(gdb) bt
#0  0x400e8eef in apr_pstrcat (a=0x81d7fe8) at apr_strings.c:175
#1  0x402ed68d in python_handler (req=0x81d8020, phase=0x40369247 
"PythonTransHandler")
    at mod_python.c:764
#2  0x402eea6d in PythonTransHandler (req=0x81d8020) at mod_python.c:1687
#3  0x0808cd48 in ap_run_translate_name (r=0x81d8020) at request.c:108
#4  0x0808d5ec in ap_process_request_internal (r=0x81d8020) at request.c:167
#5  0x08069e02 in ap_process_request (r=0x81d8020) at http_request.c:255
#6  0x08065dab in ap_process_http_connection (c=0x81d40e0) at http_core.c:293
#7  0x080831c8 in ap_run_process_connection (c=0x81d40e0) at connection.c:85
#8  0x0808346f in ap_process_connection (c=0x81d40e0, csd=0x81d4010) at 
connection.c:207
#9  0x08078cc2 in child_main (child_num_arg=0) at prefork.c:696
#10 0x08078d80 in make_child (s=0x80b5378, slot=0) at prefork.c:736
#11 0x08078e71 in startup_children (number_to_start=5) at prefork.c:808
#12 0x0807917d in ap_mpm_run (_pconf=0x80b2cb0, plog=0x80ead90, s=0x80b5378) 
at prefork.c:1024
#13 0x0807e67c in main (argc=2, argv=0xbffff934) at main.c:645
#14 0x401933c1 in __libc_start_main () from /lib/libc.so.6


FIX: Comment out lines 764-767 and 770 of mod_python.c. Seems to compile and 
run fine. Impact on functionality unknown.

Please advise,
-- 
Bryan Mongeau
eEvolved Inc. - IT Consulting & Custom Software
http://eevolved.com/
--
"The hardest thing in the world to understand is the income tax."-- Einstein


From list-mod_python at empires.org  Fri Sep 13 14:00:16 2002
From: list-mod_python at empires.org (Jeff Davis)
Date: Fri Jan  9 21:59:38 2004
Subject: [mod_python] Mod_python 3.0 BETA / Apache2 segfault
In-Reply-To: <200209131604.02633.bryan@eevolved.com>
References: <200209131604.02633.bryan@eevolved.com>
Message-ID: <200209131400.16448.list-mod_python@empires.org>

Thanks!

For those who don't want to find those lines in the file, a patch is included 
below this message.

I don't know what the impact of that is either. I hope it's good :)

Regards,
	Jeff


On Friday 13 September 2002 09:04 am, Bryan Mongeau wrote:
> Hello,
>
> I have tested out the 3.0 BETA with apache 2 and discovered a segfault.
>
> $ gdb ./httpd
> GNU gdb 5.2.1
> (gdb) run -X
> Starting program: /usr/local/apache2/bin/httpd -X
>
> Program received signal SIGSEGV, Segmentation fault.
> 0x400e8eef in apr_pstrcat (a=0x81d7fe8) at apr_strings.c:175
> 175             apr_size_t cplen = strlen(cp);
> (gdb) bt
> #0  0x400e8eef in apr_pstrcat (a=0x81d7fe8) at apr_strings.c:175
> #1  0x402ed68d in python_handler (req=0x81d8020, phase=0x40369247
> "PythonTransHandler")
>     at mod_python.c:764
> #2  0x402eea6d in PythonTransHandler (req=0x81d8020) at mod_python.c:1687
> #3  0x0808cd48 in ap_run_translate_name (r=0x81d8020) at request.c:108
> #4  0x0808d5ec in ap_process_request_internal (r=0x81d8020) at
> request.c:167 #5  0x08069e02 in ap_process_request (r=0x81d8020) at
> http_request.c:255 #6  0x08065dab in ap_process_http_connection
> (c=0x81d40e0) at http_core.c:293 #7  0x080831c8 in
> ap_run_process_connection (c=0x81d40e0) at connection.c:85 #8  0x0808346f
> in ap_process_connection (c=0x81d40e0, csd=0x81d4010) at connection.c:207
> #9  0x08078cc2 in child_main (child_num_arg=0) at prefork.c:696
> #10 0x08078d80 in make_child (s=0x80b5378, slot=0) at prefork.c:736
> #11 0x08078e71 in startup_children (number_to_start=5) at prefork.c:808
> #12 0x0807917d in ap_mpm_run (_pconf=0x80b2cb0, plog=0x80ead90,
> s=0x80b5378) at prefork.c:1024
> #13 0x0807e67c in main (argc=2, argv=0xbffff934) at main.c:645
> #14 0x401933c1 in __libc_start_main () from /lib/libc.so.6
>
>
> FIX: Comment out lines 764-767 and 770 of mod_python.c. Seems to compile
> and run fine. Impact on functionality unknown.
>



--- mod_python.c.old	2002-09-13 13:51:09.000000000 -0700
+++ mod_python.c	2002-09-13 13:51:38.000000000 -0700
@@ -759,15 +759,7 @@
             ext = apr_pstrcat(req->pool, ".", ext, NULL);
     }
 
-    /* is there an hlist entry, i.e. a handler? */
-    /* try with extension */
-    hle = (hl_entry *)apr_hash_get(conf->hlists, 
-                                   apr_pstrcat(req->pool, phase, ext, NULL),
-                                   APR_HASH_KEY_STRING);
-    if (!hle) {
-        /* try without extension */
         hle = (hl_entry *)apr_hash_get(conf->hlists, phase, 
APR_HASH_KEY_STRING);
-    }
     
     req_conf = (py_req_config *) ap_get_module_config(req->request_config,
                                                       &python_module);





From bryan at eevolved.com  Fri Sep 13 17:11:22 2002
From: bryan at eevolved.com (Bryan Mongeau)
Date: Fri Jan  9 21:59:38 2004
Subject: [mod_python] Mod_python and Sub-Interpreter segregation
Message-ID: <200209131711.22854.bryan@eevolved.com>

Greetings,

I've been playing around with mod_python and have noticed a peculiar behaviour 
that perhaps someone could explain to me.  As the mod_python documentation 
explains, a sub-interpreter is created for each virtual host (default).  I 
therefore expected global variables within this sub-interpreter to be able to 
maintain state between hits.  I created a simple script ( included below ) to 
observe this behaviour by counting hits in a global variable and printing the 
interpreter name.

To my surprise, it seems as if different apache child processes run their 
python code in different sub-interpreters even though the interpreter name 
remains the same ( virtualhost ). I produced this behaviour by loading the 
script in my browser and refreshing (very) rapidly. What happens is the hit 
counter eventually returns to zero, meaning that the global variable is no 
longer in the namespace. Repeated refreshing causes the hit counter to jump 
all over the place as I presume it jumps from one apache child process to 
another, each having their own sub-interpreters and global variables.

It seems as if each child process has its own sub-interpreter? Or am I 
confused? Was this documented? Enlightenment is greatly appreciated. 
Unfortunately the behaviour I am observing is undesired.

Here is the code to demonstrate:

from mod_python import apache
def handler(req):
    try:
        globals()['hits']+=1
    except KeyError:
        globals()['hits'] = 0
    req.write("interpreter_name=" + req.interpreter )
    req.write(" - hits: " + str(globals()['hits']))
    return apache.OK
-- 
Bryan Mongeau
eEvolved Inc. - IT Consulting & Custom Software
http://eevolved.com/
--
"The true function of life, that which is being maximized in the natural 
world, is DNA survival. But DNA is not floating free; it is locked up in 
living bodies and it has made the most of the levers of power at its 
disposal." -- Richard Dawkins


From brianh at exelixis.com  Fri Sep 13 14:28:37 2002
From: brianh at exelixis.com (Brian Hawthorne)
Date: Fri Jan  9 21:59:38 2004
Subject: [mod_python] Mod_python and Sub-Interpreter segregation
In-Reply-To: <200209131711.22854.bryan@eevolved.com>
Message-ID: <Pine.GSO.4.05.10209131423360.8716-100000@timeless.exelixis.com>

unfortunately, there is no way to share global data among multiple
apache child processes without using an external database of some sort.
this is true regardless of how many interpreters you have in each child
proc.  i anticipate that the multithreaded server model available in
apache2 will address this issue, though i haven't gotten my hands dirty
yet trying to set up modpy3 alpha with apache2.

brian hawthorne
-bioinformatics,
Exelixis, Inc.


On Fri, 13 Sep 2002, Bryan Mongeau wrote:

> Greetings,
> 
> I've been playing around with mod_python and have noticed a peculiar behaviour 
> that perhaps someone could explain to me.  As the mod_python documentation 
> explains, a sub-interpreter is created for each virtual host (default).  I 
> therefore expected global variables within this sub-interpreter to be able to 
> maintain state between hits.  I created a simple script ( included below ) to 
> observe this behaviour by counting hits in a global variable and printing the 
> interpreter name.
> 
> To my surprise, it seems as if different apache child processes run their 
> python code in different sub-interpreters even though the interpreter name 
> remains the same ( virtualhost ). I produced this behaviour by loading the 
> script in my browser and refreshing (very) rapidly. What happens is the hit 
> counter eventually returns to zero, meaning that the global variable is no 
> longer in the namespace. Repeated refreshing causes the hit counter to jump 
> all over the place as I presume it jumps from one apache child process to 
> another, each having their own sub-interpreters and global variables.
> 
> It seems as if each child process has its own sub-interpreter? Or am I 
> confused? Was this documented? Enlightenment is greatly appreciated. 
> Unfortunately the behaviour I am observing is undesired.
> 
> Here is the code to demonstrate:
> 
> from mod_python import apache
> def handler(req):
>     try:
>         globals()['hits']+=1
>     except KeyError:
>         globals()['hits'] = 0
>     req.write("interpreter_name=" + req.interpreter )
>     req.write(" - hits: " + str(globals()['hits']))
>     return apache.OK
> -- 
> Bryan Mongeau
> eEvolved Inc. - IT Consulting & Custom Software
> http://eevolved.com/
> --
> "The true function of life, that which is being maximized in the natural 
> world, is DNA survival. But DNA is not floating free; it is locked up in 
> living bodies and it has made the most of the levers of power at its 
> disposal." -- Richard Dawkins
> 
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://www.modpython.org/mailman/listinfo/mod_python
> 


From list-mod_python at empires.org  Fri Sep 13 14:36:39 2002
From: list-mod_python at empires.org (Jeff Davis)
Date: Fri Jan  9 21:59:38 2004
Subject: [mod_python] more info about the segfault bug
Message-ID: <200209131436.39544.list-mod_python@empires.org>

Patch below. That variable "ext" is not being initialized appearently (in the 
function python_handler in mod_python.c). So I suppose it's not passing the 
"if(req->filename)" test, and so the call to apr_pstrcat just passes garbage 
("ext") to the function. Perhaps we need an "else" safety clause, or 
something? I don't really know what's supposed to be happening there, but if 
someone does maybe this will help them find the problem.

I will continue to look into the problem, but I'm not all that familiar with 
writing apache modules.


Regards,
	Jeff

Note: patch is from distributed version to me new one. Disregard my previous 
patch, which implemented Bryan Mongeau's solution.

--- mod_python.c.old	2002-09-13 13:51:09.000000000 -0700
+++ mod_python.c	2002-09-13 14:28:47.000000000 -0700
@@ -742,7 +742,7 @@
     int result;
     const char * interpreter = NULL;
     PyThreadState *tstate;
-    const char *ext;
+    char *ext = NULL;
     hl_entry *hle = NULL;
     hl_entry *dynhle = NULL;
 


From neel at mediapulse.com  Fri Sep 13 17:40:42 2002
From: neel at mediapulse.com (Michael C. Neel)
Date: Fri Jan  9 21:59:39 2004
Subject: [mod_python] Mod_python and Sub-Interpreter segregation
Message-ID: <C0FC22C08B82074A88B50061764157775BAA@johnson.mediapulse.net>

I don't think this will work in apache2 either, based on my limited
experience.

Apache2 threaded still has separate processes (children) along with
threads.  You can either have a fixed number of processes, and let the
threads grow and shrink, or have a fixed number of threads per process
and add more processes as needed.

While this will help with resource pooling, you'll still need an outside
database to have a global variable.  Now with apache2's cgid (a process
to handle all cgi scripts since forking a 75 thread apache child would
be, um, bad) there might be something you can do there, but then that
means you app is a CGI and we don't use that word in 2002 anymore...

Mike 

--
Michael C. Neel
There are only 10 types of people in the world;
those who understand binary and those who don't.


-----Original Message-----
From: Brian Hawthorne [mailto:brianh@exelixis.com] 
Sent: Friday, September 13, 2002 5:29 PM
To: Bryan Mongeau
Cc: mod_python@modpython.org
Subject: Re: [mod_python] Mod_python and Sub-Interpreter segregation


unfortunately, there is no way to share global data among multiple
apache child processes without using an external database of some sort.
this is true regardless of how many interpreters you have in each child
proc.  i anticipate that the multithreaded server model available in
apache2 will address this issue, though i haven't gotten my hands dirty
yet trying to set up modpy3 alpha with apache2.

brian hawthorne
-bioinformatics,
Exelixis, Inc.


On Fri, 13 Sep 2002, Bryan Mongeau wrote:

> Greetings,
> 
> I've been playing around with mod_python and have noticed a peculiar
behaviour 
> that perhaps someone could explain to me.  As the mod_python
documentation 
> explains, a sub-interpreter is created for each virtual host
(default).  I 
> therefore expected global variables within this sub-interpreter to be
able to 
> maintain state between hits.  I created a simple script ( included
below ) to 
> observe this behaviour by counting hits in a global variable and
printing the 
> interpreter name.
> 
> To my surprise, it seems as if different apache child processes run
their 
> python code in different sub-interpreters even though the interpreter
name 
> remains the same ( virtualhost ). I produced this behaviour by loading
the 
> script in my browser and refreshing (very) rapidly. What happens is
the hit 
> counter eventually returns to zero, meaning that the global variable
is no 
> longer in the namespace. Repeated refreshing causes the hit counter to
jump 
> all over the place as I presume it jumps from one apache child process
to 
> another, each having their own sub-interpreters and global variables.
> 
> It seems as if each child process has its own sub-interpreter? Or am I

> confused? Was this documented? Enlightenment is greatly appreciated. 
> Unfortunately the behaviour I am observing is undesired.
> 
> Here is the code to demonstrate:
> 
> from mod_python import apache
> def handler(req):
>     try:
>         globals()['hits']+=1
>     except KeyError:
>         globals()['hits'] = 0
>     req.write("interpreter_name=" + req.interpreter )
>     req.write(" - hits: " + str(globals()['hits']))
>     return apache.OK
> -- 
> Bryan Mongeau
> eEvolved Inc. - IT Consulting & Custom Software
> http://eevolved.com/
> --
> "The true function of life, that which is being maximized in the
natural 
> world, is DNA survival. But DNA is not floating free; it is locked up
in 
> living bodies and it has made the most of the levers of power at its 
> disposal." -- Richard Dawkins
> 
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://www.modpython.org/mailman/listinfo/mod_python
> 

_______________________________________________
Mod_python mailing list
Mod_python@modpython.org
http://www.modpython.org/mailman/listinfo/mod_python


From list-mod_python at empires.org  Fri Sep 13 14:48:57 2002
From: list-mod_python at empires.org (Jeff Davis)
Date: Fri Jan  9 21:59:39 2004
Subject: [mod_python] Mod_python and Sub-Interpreter segregation
In-Reply-To: <200209131711.22854.bryan@eevolved.com>
References: <200209131711.22854.bryan@eevolved.com>
Message-ID: <200209131448.57166.list-mod_python@empires.org>

Hi,

The only way I know of that an interpreter can be shared is if you have a 
multithreaded app.

I think that's possible because it seems to me that python does well with 
threads. That way, each request could execute in it's own interpreter 
function call, and that way they'd be separate, but allow you to share global 
variables. However, that seems like it might be a little tricky, so I am not 
sure how feasible it is. Also note that the data wouldn't survive an apache 
restart.

However, to have the one-process-many-threads per virtualhost in apache2, you 
need to use mpm perchild. That mpm isn't really stable, so you might need to 
wait a while.

You might consider a lightweigtht DB or a RAM based filesystem or something in 
the interim. Or, if you wanted a featureful database you could use postgresql 
and persistant connections and it would still operate at a pretty good speed, 
which could be a good idea if you need to use a database for your application 
anyway.

Regards,
	Jeff

On Friday 13 September 2002 10:11 am, Bryan Mongeau wrote:
> Greetings,
>
> I've been playing around with mod_python and have noticed a peculiar
> behaviour that perhaps someone could explain to me.  As the mod_python
> documentation explains, a sub-interpreter is created for each virtual host
> (default).  I therefore expected global variables within this
> sub-interpreter to be able to maintain state between hits.  I created a
> simple script ( included below ) to observe this behaviour by counting hits
> in a global variable and printing the interpreter name.
>
> To my surprise, it seems as if different apache child processes run their
> python code in different sub-interpreters even though the interpreter name
> remains the same ( virtualhost ). I produced this behaviour by loading the
> script in my browser and refreshing (very) rapidly. What happens is the hit
> counter eventually returns to zero, meaning that the global variable is no
> longer in the namespace. Repeated refreshing causes the hit counter to jump
> all over the place as I presume it jumps from one apache child process to
> another, each having their own sub-interpreters and global variables.
>
> It seems as if each child process has its own sub-interpreter? Or am I
> confused? Was this documented? Enlightenment is greatly appreciated.
> Unfortunately the behaviour I am observing is undesired.
>
> Here is the code to demonstrate:
>
> from mod_python import apache
> def handler(req):
>     try:
>         globals()['hits']+=1
>     except KeyError:
>         globals()['hits'] = 0
>     req.write("interpreter_name=" + req.interpreter )
>     req.write(" - hits: " + str(globals()['hits']))
>     return apache.OK


From brianh at exelixis.com  Fri Sep 13 14:58:33 2002
From: brianh at exelixis.com (Brian Hawthorne)
Date: Fri Jan  9 21:59:39 2004
Subject: [mod_python] Mod_python and Sub-Interpreter segregation
In-Reply-To: <C0FC22C08B82074A88B50061764157775BAA@johnson.mediapulse.net>
Message-ID: <Pine.GSO.4.05.10209131450100.8716-100000@timeless.exelixis.com>

hmmm,
currently you can share global vars if you set apache to have exactly one
child process (but to great performance detriment).  i was imagining you
could do the same in the perthread server by setting the numprocs=1 and
letting the numthreads grow/shrink (recouping the performace hit with
extra threads).

actually, it should be pretty easy to wrap a bit of code around python
shelve to turn some dbm file into a modpyglobal repository of python objs
keyed by varname.  that's what i would do if i didn't feel like dealing
with a real db.  also, if you don't use an external repository, you have
to worry about server restarts and child procs getting killed etc.

brian


On Fri, 13 Sep 2002, Michael C. Neel wrote:

> I don't think this will work in apache2 either, based on my limited
> experience.
> 
> Apache2 threaded still has separate processes (children) along with
> threads.  You can either have a fixed number of processes, and let the
> threads grow and shrink, or have a fixed number of threads per process
> and add more processes as needed.
> 
> While this will help with resource pooling, you'll still need an outside
> database to have a global variable.  Now with apache2's cgid (a process
> to handle all cgi scripts since forking a 75 thread apache child would
> be, um, bad) there might be something you can do there, but then that
> means you app is a CGI and we don't use that word in 2002 anymore...
> 
> Mike 
> 
> --
> Michael C. Neel
> There are only 10 types of people in the world;
> those who understand binary and those who don't.
> 
> 
> -----Original Message-----
> From: Brian Hawthorne [mailto:brianh@exelixis.com] 
> Sent: Friday, September 13, 2002 5:29 PM
> To: Bryan Mongeau
> Cc: mod_python@modpython.org
> Subject: Re: [mod_python] Mod_python and Sub-Interpreter segregation
> 
> 
> unfortunately, there is no way to share global data among multiple
> apache child processes without using an external database of some sort.
> this is true regardless of how many interpreters you have in each child
> proc.  i anticipate that the multithreaded server model available in
> apache2 will address this issue, though i haven't gotten my hands dirty
> yet trying to set up modpy3 alpha with apache2.
> 
> brian hawthorne
> -bioinformatics,
> Exelixis, Inc.
> 
> 
> On Fri, 13 Sep 2002, Bryan Mongeau wrote:
> 
> > Greetings,
> > 
> > I've been playing around with mod_python and have noticed a peculiar
> behaviour 
> > that perhaps someone could explain to me.  As the mod_python
> documentation 
> > explains, a sub-interpreter is created for each virtual host
> (default).  I 
> > therefore expected global variables within this sub-interpreter to be
> able to 
> > maintain state between hits.  I created a simple script ( included
> below ) to 
> > observe this behaviour by counting hits in a global variable and
> printing the 
> > interpreter name.
> > 
> > To my surprise, it seems as if different apache child processes run
> their 
> > python code in different sub-interpreters even though the interpreter
> name 
> > remains the same ( virtualhost ). I produced this behaviour by loading
> the 
> > script in my browser and refreshing (very) rapidly. What happens is
> the hit 
> > counter eventually returns to zero, meaning that the global variable
> is no 
> > longer in the namespace. Repeated refreshing causes the hit counter to
> jump 
> > all over the place as I presume it jumps from one apache child process
> to 
> > another, each having their own sub-interpreters and global variables.
> > 
> > It seems as if each child process has its own sub-interpreter? Or am I
> 
> > confused? Was this documented? Enlightenment is greatly appreciated. 
> > Unfortunately the behaviour I am observing is undesired.
> > 
> > Here is the code to demonstrate:
> > 
> > from mod_python import apache
> > def handler(req):
> >     try:
> >         globals()['hits']+=1
> >     except KeyError:
> >         globals()['hits'] = 0
> >     req.write("interpreter_name=" + req.interpreter )
> >     req.write(" - hits: " + str(globals()['hits']))
> >     return apache.OK
> > -- 
> > Bryan Mongeau
> > eEvolved Inc. - IT Consulting & Custom Software
> > http://eevolved.com/
> > --
> > "The true function of life, that which is being maximized in the
> natural 
> > world, is DNA survival. But DNA is not floating free; it is locked up
> in 
> > living bodies and it has made the most of the levers of power at its 
> > disposal." -- Richard Dawkins
> > 
> > _______________________________________________
> > Mod_python mailing list
> > Mod_python@modpython.org
> > http://www.modpython.org/mailman/listinfo/mod_python
> > 
> 
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://www.modpython.org/mailman/listinfo/mod_python
> 
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://www.modpython.org/mailman/listinfo/mod_python
> 


From list-mod_python at empires.org  Fri Sep 13 15:06:03 2002
From: list-mod_python at empires.org (Jeff Davis)
Date: Fri Jan  9 21:59:39 2004
Subject: [mod_python] Mod_Python 3 / Apache 2 / RedHat 7.3 / Python 2.2 = Seg fault :(
In-Reply-To: <20020913094720.GL8093@samba.org>
References: <000001c25adf$b2039020$0400a8c0@clapton> <200209130234.23802.list-mod_python@empires.org> <20020913094720.GL8093@samba.org>
Message-ID: <200209131506.03684.list-mod_python@empires.org>

The backtrace is below. I think that we're getting it taken care of. I 
narrowed it to an uninitialized variable (see another message I sent earlier 
with the subject: "more info about the segfault").

Thanks for letting me know how to use gdb! Couldn't have done it without gdb, 
that's for sure.

Regards,
	Jeff

#0  0x402611bb in strlen () from /lib/libc.so.6
No symbol table info available.
#1  0x4015d9b4 in apr_pstrcat () from /usr/lib/libapr.so.0
No symbol table info available.
#2  0x40350f88 in python_handler () from 
/usr/lib/apache2/modules/mod_python.so
No symbol table info available.
#3  0x40352817 in PythonPostReadRequestHandler ()
   from /usr/lib/apache2/modules/mod_python.so
No symbol table info available.
#4  0x08094f90 in ap_run_post_read_request ()
No symbol table info available.
#5  0x08093a1e in ap_read_request ()
No symbol table info available.
#6  0x0806915c in _start ()
No symbol table info available.
#7  0x0808e7c1 in ap_run_process_connection ()
No symbol table info available.
#8  0x0808ebac in ap_process_connection ()
No symbol table info available.
#9  0x08080468 in ap_graceful_stop_signalled ()
No symbol table info available.
#10 0x0808054d in ap_graceful_stop_signalled ()
No symbol table info available.
---Type <return> to continue, or q <return> to quit---
#11 0x08080684 in ap_graceful_stop_signalled ()
No symbol table info available.
#12 0x08080aa6 in ap_mpm_run ()
No symbol table info available.
#13 0x08087743 in main ()
No symbol table info available.
#14 0x402070bf in __libc_start_main () from /lib/libc.so.6
No symbol table info available.

On Friday 13 September 2002 02:47 am, Martin Pool wrote:
> On 13 Sep 2002, Jeff Davis <list-mod_python@empires.org> wrote:
> > > Try running apache under gdb?  Something like this:
> > >
> > >   # gdb /usr/sbin/apache2
> > >   [blah blah]
> > >   gdb> run -X
> > >
> > > Then try to access a page.  Apache should stop in gdb, and it might
> > > tell you where the problem is.
> >
> > I tried both gdb and valgrind and supplied the -X argument for each. When
> > I hit a page, all it said was "Segmentation Fault" (for valgrind, and gdb
> > was similar: "Program received signal SIGSEGV, Segmentation fault."). GDB
> > also said "0x402611bb in strlen () from /lib/libc.so.6" after the
> > SIGSEGV, which might be helpful.
>
> OK, good.  Now once you get to that point, type
>
>   gdb> backtrace full
>
> to get some info on where the call to strlen() that caused trouble
> came from.


From jack_diederich at email.com  Fri Sep 13 17:10:28 2002
From: jack_diederich at email.com (Jack Diederich)
Date: Fri Jan  9 21:59:39 2004
Subject: [mod_python] Mod_python and Sub-Interpreter segregation
Message-ID: <20020913221028.26023.qmail@email.com>

As others have pointed out, apache spawns multiple processes which each have their own independent memory space.

One of the 'external storage' solutions is to use shareded memory between processes.  This is supported differently on different flavors of unix.  Here is a very out of date link for a shared memory python wrapper
http://gigue.peabody.jhu.edu/~mdboom/omi/source/shm_source/shm.html

I have no idea if it still works, or if it will work on your actual server.

-jack
-- 
__________________________________________________________
Sign-up for your own FREE Personalized E-mail at Mail.com
http://www.mail.com/?sr=signup


From bryan at eevolved.com  Fri Sep 13 19:59:42 2002
From: bryan at eevolved.com (Bryan Mongeau)
Date: Fri Jan  9 21:59:39 2004
Subject: [mod_python] Mod_python and Sub-Interpreter segregation
In-Reply-To: <Pine.GSO.4.05.10209131450100.8716-100000@timeless.exelixis.com>
References: <Pine.GSO.4.05.10209131450100.8716-100000@timeless.exelixis.com>
Message-ID: <200209131959.42086.bryan@eevolved.com>

Thanks for all the great replies everyone! I appreciate it.

On September 13, 2002 09:58 pm, Brian Hawthorne wrote:
> hmmm,
> currently you can share global vars if you set apache to have exactly one
> child process (but to great performance detriment).  i was imagining you
> could do the same in the perthread server by setting the numprocs=1 and
> letting the numthreads grow/shrink (recouping the performace hit with
> extra threads).

Thanks alot for this idea! I compiled apache with the worker MPM, set 
StartServers to 1 and ThreadsPerChild to 64. The result? My shared memory hit 
counter works perfectly and clocks about 50 hits/sec on my 800 Mhz, which, 
according to my rough hand benchmarks, is actually a little faster than using 
prefork with StartServers at 5!

Seems as if my problem is solved.. at least for now, thanks!

> actually, it should be pretty easy to wrap a bit of code around python
> shelve to turn some dbm file into a modpyglobal repository of python objs
> keyed by varname.  that's what i would do if i didn't feel like dealing
> with a real db.  also, if you don't use an external repository, you have
> to worry about server restarts and child procs getting killed etc.

This is almost exactly what I have in mind :) More later,
-- 
Bryan Mongeau
eEvolved Inc. - IT Consulting & Custom Software
http://eevolved.com/
--
"Let us understand what our own selfish genes are up to, because we may then 
at least have a chance to upset their designs, something that no other 
species has ever aspired to do." -- Richard Dawkins


From grisha at ispol.com  Fri Sep 13 21:28:22 2002
From: grisha at ispol.com (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 21:59:39 2004
Subject: [mod_python] python-dev list
Message-ID: <Pine.BSF.4.32.0209132124180.8852-100000@eden.ispol.com>

Folks -

Just wanted to point out that there now exists a
python-dev@httpd.apache.org list, intended specifically for mod_python
development (i.e. the C and Python code that implements the mod_python
internals). So if you have patches or bug reports, please subscribe to
that list and post it there.

This list can then become a strictly end-user list.

Thanks,

Grisha



From peter at hawkins.emu.id.au  Sat Sep 14 11:39:17 2002
From: peter at hawkins.emu.id.au (Peter Hawkins)
Date: Fri Jan  9 21:59:39 2004
Subject: [mod_python] Segfault in 2.7.8 if encoding changed
Message-ID: <200209141139.19625.peter@hawkins.emu.id.au>

Hi...

I'm the current debian package maintainer for mod_python.

I'm hoping that someone can help me with this bug (the bugs listed 
below are identical, I think).
http://bugs.debian.org/cgi-bin/bugreport.cgi?bug=152750&repeatmerged=yes
http://bugs.debian.org/cgi-bin/bugreport.cgi?bug=135346&repeatmerged=yes

As explained in the bug logs, if you change your encoding to anything 
other than ascii in /etc/python2.1/site.py, then mod_python segfaults 
on every request. Somehow, this causes the interpreters global 
variable to be NULL when it is used in get_interpreter_data, leading 
to a segfault.

The python versions that modpython is built against (2.1, 2.2 and 
2.3a0) are all compiled with threads on linux (not really an awful 
lot I can do about that).

Backtrace (my own):
0x40280424 in PyDict_GetItemString () from 
/usr/lib/libpython2.2.so.0.0
(gdb) bt
#0  0x40280424 in PyDict_GetItemString () from 
/usr/lib/libpython2.2.so.0.0
#1  0x4022e1a6 in get_interpreter_data () from 
/usr/lib/apache/1.3/mod_python.so
#2  0x4022f0f4 in make_obcallback () from 
/usr/lib/apache/1.3/mod_python.so
#3  0x402306f0 in python_finalize () from 
/usr/lib/apache/1.3/mod_python.so
#4  0x08053a84 in ap_invoke_handler ()
#5  0x0806338c in ap_some_auth_required ()
#6  0x080633e8 in ap_process_request ()
#7  0x0805cbcb in ap_child_terminate ()
#8  0x0805cd5c in ap_child_terminate ()
#9  0x0805ce79 in ap_child_terminate ()
#10 0x0805d355 in ap_child_terminate ()
#11 0x0805da5d in main ()
#12 0x400ed0bf in __libc_start_main () from /lib/libc.so.6

From jack_diederich at email.com  Fri Sep 13 21:39:45 2002
From: jack_diederich at email.com (Jack Diederich)
Date: Fri Jan  9 21:59:39 2004
Subject: [mod_python] python-dev list
Message-ID: <20020914023948.26152.qmail@email.com>

To subscribe, send an empty email to

python-dev-subscribe@httpd.apache.org


> Just wanted to point out that there now exists a
> python-dev@httpd.apache.org list, intended specifically for mod_python
> development

> This list can then become a strictly end-user list.

wouldn't it be better from a maintenace and dont-confuse-users standpoint to have the two lists in the same place? (not the same list, but the same host).  mod_python@modpython.org could then just auto-respond with a "Look over there" message.

-jack
-- 
__________________________________________________________
Sign-up for your own FREE Personalized E-mail at Mail.com
http://www.mail.com/?sr=signup


From neel at mediapulse.com  Fri Sep 13 22:50:40 2002
From: neel at mediapulse.com (Michael Neel)
Date: Fri Jan  9 21:59:39 2004
Subject: [mod_python] more info about the segfault bug
In-Reply-To: <200209131436.39544.list-mod_python@empires.org>
Message-ID: <000501c25b99$833bbf50$0400a8c0@clapton>

Thanks Jeff, this fixed the issue for me.  I'll keep watch on this list
and the new httpd.apache.org list for an official update, and for any
word what the side effects (if any, that change looks fairly harmless on
the surface) this has.

Mike

--
Michael C. Neel
There are only 10 types of people in the world;
those who understand binary and those who don't.

-----Original Message-----
From: mod_python-admin@modpython.org
[mailto:mod_python-admin@modpython.org] On Behalf Of Jeff Davis
Sent: Friday, September 13, 2002 5:37 PM
To: mod_python@modpython.org
Subject: [mod_python] more info about the segfault bug



Patch below. That variable "ext" is not being initialized appearently
(in the 
function python_handler in mod_python.c). So I suppose it's not passing
the 
"if(req->filename)" test, and so the call to apr_pstrcat just passes
garbage 
("ext") to the function. Perhaps we need an "else" safety clause, or 
something? I don't really know what's supposed to be happening there,
but if 
someone does maybe this will help them find the problem.

I will continue to look into the problem, but I'm not all that familiar
with 
writing apache modules.


Regards,
	Jeff

Note: patch is from distributed version to me new one. Disregard my
previous 
patch, which implemented Bryan Mongeau's solution.

--- mod_python.c.old	2002-09-13 13:51:09.000000000 -0700
+++ mod_python.c	2002-09-13 14:28:47.000000000 -0700
@@ -742,7 +742,7 @@
     int result;
     const char * interpreter = NULL;
     PyThreadState *tstate;
-    const char *ext;
+    char *ext = NULL;
     hl_entry *hle = NULL;
     hl_entry *dynhle = NULL;
 

_______________________________________________
Mod_python mailing list
Mod_python@modpython.org
http://www.modpython.org/mailman/listinfo/mod_python


From grisha at modpython.org  Fri Sep 13 22:57:59 2002
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 21:59:39 2004
Subject: [mod_python] python-dev list
In-Reply-To: <20020914023948.26152.qmail@email.com>
Message-ID: <Pine.BSF.4.32.0209132255320.10141-100000@eden.ispol.com>

Yes, we just haven't figured out how to move the mod_python@modpython.org
list - ideally, we will migrate the archives and subscribtions (or at
least archives) to the new list, but since apache mailing lists are not
mailman its a bit tricky.

On Fri, 13 Sep 2002, Jack Diederich wrote:

> wouldn't it be better from a maintenace and dont-confuse-users
> standpoint to have the two lists in the same place? (not the same
> list, but the same host).  mod_python@modpython.org could then just
> auto-respond with a "Look over there" message.


From neel at mediapulse.com  Fri Sep 13 23:07:50 2002
From: neel at mediapulse.com (Michael Neel)
Date: Fri Jan  9 21:59:39 2004
Subject: [mod_python] Mod_python and Sub-Interpreter segregation
In-Reply-To: <200209131959.42086.bryan@eevolved.com>
Message-ID: <001401c25b9b$e97f0770$0400a8c0@clapton>

Thank will work great, until you hit the 65th concurrent connection, at
wich point apache will give you another child. Another thing to keep in
mind is that if one thing goes wrong in any thread, there goes your
whole server.  (just a side note, to test a web server I use the ab tool
that comes with apache; it will let you set the concurrent number of
theard to try and get at once).

I saw a python tool mentioned in another thread;
http://www.object-craft.com.au/projects/albatross/ which I'm looking at
myself right now, so I have no experience with, but after a first read
though looks very promising when used with mod_python and has several
options for saved states and should have some good choices for globals
in there.

Mike 

-----Original Message-----
From: mod_python-admin@modpython.org
[mailto:mod_python-admin@modpython.org] On Behalf Of Bryan Mongeau
Sent: Friday, September 13, 2002 4:00 PM
To: mod_python@modpython.org
Subject: Re: [mod_python] Mod_python and Sub-Interpreter segregation


Thanks for all the great replies everyone! I appreciate it.

On September 13, 2002 09:58 pm, Brian Hawthorne wrote:
> hmmm,
> currently you can share global vars if you set apache to have exactly 
> one child process (but to great performance detriment).  i was 
> imagining you could do the same in the perthread server by setting the

> numprocs=1 and letting the numthreads grow/shrink (recouping the 
> performace hit with extra threads).

Thanks alot for this idea! I compiled apache with the worker MPM, set 
StartServers to 1 and ThreadsPerChild to 64. The result? My shared
memory hit 
counter works perfectly and clocks about 50 hits/sec on my 800 Mhz,
which, 
according to my rough hand benchmarks, is actually a little faster than
using 
prefork with StartServers at 5!

Seems as if my problem is solved.. at least for now, thanks!

> actually, it should be pretty easy to wrap a bit of code around python

> shelve to turn some dbm file into a modpyglobal repository of python 
> objs keyed by varname.  that's what i would do if i didn't feel like 
> dealing with a real db.  also, if you don't use an external 
> repository, you have to worry about server restarts and child procs 
> getting killed etc.

This is almost exactly what I have in mind :) More later,
-- 
Bryan Mongeau
eEvolved Inc. - IT Consulting & Custom Software http://eevolved.com/
--
"Let us understand what our own selfish genes are up to, because we may
then 
at least have a chance to upset their designs, something that no other 
species has ever aspired to do." -- Richard Dawkins

_______________________________________________
Mod_python mailing list
Mod_python@modpython.org
http://www.modpython.org/mailman/listinfo/mod_python


From vmilitaru at sympatico.ca  Fri Sep 13 23:22:05 2002
From: vmilitaru at sympatico.ca (vio)
Date: Fri Jan  9 21:59:39 2004
Subject: [mod_python] python-dev list
In-Reply-To: <Pine.BSF.4.32.0209132255320.10141-100000@eden.ispol.com>; from grisha@modpython.org on Fri, Sep 13, 2002 at 10:57:59PM -0400
References: <20020914023948.26152.qmail@email.com> <Pine.BSF.4.32.0209132255320.10141-100000@eden.ispol.com>
Message-ID: <20020913232204.A2273@eye.neb>

* Gregory (Grisha) Trubetskoy <grisha@modpython.org> [020913 22:55]:
> 
> Yes, we just haven't figured out how to move the mod_python@modpython.org
> list - ideally, we will migrate the archives and subscribtions (or at
> least archives) to the new list, but since apache mailing lists are not
> mailman its a bit tricky.

I agree with Jack. Let's try to keep confusion to a minimum, and keep 
everything in one place. I never touched a list server from a manager's seat,
but out of curiosity, what mailing server is apache using ? Sounds to ignorant
me as just some text massaging operation, nothing a python script can't handle.
(but on the other hand, ignorance is bliss).
If mod_python is now part of apache, I don't see a point in maintaining
modpython.org anymore except, perhaps, to redirect lost users to the new home.

Cheers,
Vio

From neel at mediapulse.com  Fri Sep 13 23:55:03 2002
From: neel at mediapulse.com (Michael Neel)
Date: Fri Jan  9 21:59:39 2004
Subject: [mod_python] python-dev list
In-Reply-To: <20020913232204.A2273@eye.neb>
Message-ID: <001501c25ba2$81d5d7a0$0400a8c0@clapton>

Apache is using ezmlm; of which I have no idea how it works.  Maybe we
could show asf the light and get them to switch to mailman? =D

Mike

--
Michael C. Neel
There are only 10 types of people in the world;
those who understand binary and those who don't.

-----Original Message-----
From: mod_python-admin@modpython.org
[mailto:mod_python-admin@modpython.org] On Behalf Of vio
Sent: Saturday, September 14, 2002 12:22 AM
To: mod_python@modpython.org
Subject: Re: [mod_python] python-dev list


* Gregory (Grisha) Trubetskoy <grisha@modpython.org> [020913 22:55]:
> 
> Yes, we just haven't figured out how to move the 
> mod_python@modpython.org list - ideally, we will migrate the archives 
> and subscribtions (or at least archives) to the new list, but since 
> apache mailing lists are not mailman its a bit tricky.

I agree with Jack. Let's try to keep confusion to a minimum, and keep 
everything in one place. I never touched a list server from a manager's
seat, but out of curiosity, what mailing server is apache using ? Sounds
to ignorant me as just some text massaging operation, nothing a python
script can't handle. (but on the other hand, ignorance is bliss). If
mod_python is now part of apache, I don't see a point in maintaining
modpython.org anymore except, perhaps, to redirect lost users to the new
home.

Cheers,
Vio
_______________________________________________
Mod_python mailing list
Mod_python@modpython.org
http://www.modpython.org/mailman/listinfo/mod_python


From vmilitaru at sympatico.ca  Sat Sep 14 01:53:37 2002
From: vmilitaru at sympatico.ca (vio)
Date: Fri Jan  9 21:59:39 2004
Subject: [mod_python] python-dev list
In-Reply-To: <001501c25ba2$81d5d7a0$0400a8c0@clapton>; from neel@mediapulse.com on Fri, Sep 13, 2002 at 11:55:03PM -0400
References: <20020913232204.A2273@eye.neb> <001501c25ba2$81d5d7a0$0400a8c0@clapton>
Message-ID: <20020914015337.A2359@eye.neb>

* Michael Neel <neel@mediapulse.com> [020914 01:04]:
> Apache is using ezmlm; of which I have no idea how it works.  Maybe we
> could show asf the light and get them to switch to mailman? =D

A wild guess: could 'ezmlm' stand for 'eazy mailman'?
I wonder if trying to propose such a fundamental switch to ASF is feasible,
especially if the use of ezmlm is 'entrentched' at apache (I have no clues) 
and there are no major issues with it. Why would they (us?) switch to mailman ?
There must be some fundamental motivation behind this move, be it technical
or ideological or otherwise. I don't know enough about the apache politics to
answer such questions. Another wild guess: ASF is made of pretty bright people,
surely there must be something about ezmlm to making them choose it (I am 
doing a lot of guessing here, so I guess they must have been aware of mailman
when they decided on ezmlm instead).

Just skimming the ezmlm.org site, seems it is very good at handling 'huge'
mailing lists (half a million subscribers). Maybe that's its core competitive 
advantage. Also supports MySQL RDBMS which sounds interesting.
(accessing the ezmlm FAQ seems quite slow, though). And is optimized for speed.
I don't know, maybe ezmlm is better suited for ASF's needs than mailman (on
which I must plead total ignorance, sorry).

FAQ topic of interest: '5.7 Converting to and from and SQL database.' By 
extension, I wonder where's the topic 'X.Y Converting to and from mailman.'? :)

Vio

From gstein at lyra.org  Sat Sep 14 00:48:01 2002
From: gstein at lyra.org (Greg Stein)
Date: Fri Jan  9 21:59:39 2004
Subject: [mod_python] python-dev list
In-Reply-To: <20020914015337.A2359@eye.neb>; from vmilitaru@sympatico.ca on Sat, Sep 14, 2002 at 01:53:37AM -0500
References: <20020913232204.A2273@eye.neb> <001501c25ba2$81d5d7a0$0400a8c0@clapton> <20020914015337.A2359@eye.neb>
Message-ID: <20020914004801.A10914@lyra.org>

On Sat, Sep 14, 2002 at 01:53:37AM -0500, vio wrote:
> * Michael Neel <neel@mediapulse.com> [020914 01:04]:
> > Apache is using ezmlm; of which I have no idea how it works.  Maybe we
> > could show asf the light and get them to switch to mailman? =D

That's been tried :-)

>...
> I wonder if trying to propose such a fundamental switch to ASF is feasible,
> especially if the use of ezmlm is 'entrentched' at apache (I have no clues)

It runs *all* of the mailing lists, so yah: it's entrenched.

> and there are no major issues with it.

I'd prefer Mailman, but most of the people doing mailing list admin are more
comfortable using ezmlm. And no, there aren't really any major issues except
for the lack of a good web archive (altho there is some work on getting
Eyebrowse set up for this, but Eyebrowse sucks)

>...
> surely there must be something about ezmlm to making them choose it (I am 
> doing a lot of guessing here, so I guess they must have been aware of mailman
> when they decided on ezmlm instead).

At the time that new mlm software was needed, Mailman was still in Beta.
Brian looked into using it, but apparently there were some problems with it
on FreeBSD, and the mailman devs weren't responsive/active enough to track
down the problems at that point. So... the move to ezmlm.

> Just skimming the ezmlm.org site, seems it is very good at handling 'huge'
> mailing lists (half a million subscribers). Maybe that's its core competitive 
> advantage. Also supports MySQL RDBMS which sounds interesting.
> (accessing the ezmlm FAQ seems quite slow, though). And is optimized for speed.
> I don't know, maybe ezmlm is better suited for ASF's needs than mailman (on
> which I must plead total ignorance, sorry).

The ASF sends out an *incredible* amount of email to the mailing lists each
day. Yes: the MLM must be efficient as hell. DJB has certain, um, issues,
but his software is seriously speedy.

Cheers,
-g

-- 
Greg Stein, http://www.lyra.org/

From gstein at lyra.org  Sat Sep 14 00:49:15 2002
From: gstein at lyra.org (Greg Stein)
Date: Fri Jan  9 21:59:39 2004
Subject: [mod_python] python-dev list
In-Reply-To: <20020913232204.A2273@eye.neb>; from vmilitaru@sympatico.ca on Fri, Sep 13, 2002 at 11:22:05PM -0500
References: <20020914023948.26152.qmail@email.com> <Pine.BSF.4.32.0209132255320.10141-100000@eden.ispol.com> <20020913232204.A2273@eye.neb>
Message-ID: <20020914004915.B10914@lyra.org>

On Fri, Sep 13, 2002 at 11:22:05PM -0500, vio wrote:
> * Gregory (Grisha) Trubetskoy <grisha@modpython.org> [020913 22:55]:
> > 
> > Yes, we just haven't figured out how to move the mod_python@modpython.org
> > list - ideally, we will migrate the archives and subscribtions (or at
> > least archives) to the new list, but since apache mailing lists are not
> > mailman its a bit tricky.
> 
> I agree with Jack. Let's try to keep confusion to a minimum, and keep

That's all great and everything, but somebody must take the time to get this
work completed. Since this is an entirely volunteer thing, that means that
it will take time. And other things may be prioritized first...

Cheers,
-g

-- 
Greg Stein, http://www.lyra.org/

From vmilitaru at sympatico.ca  Sat Sep 14 05:23:26 2002
From: vmilitaru at sympatico.ca (vio)
Date: Fri Jan  9 21:59:39 2004
Subject: [mod_python] python-dev list
In-Reply-To: <20020914004915.B10914@lyra.org>; from gstein@lyra.org on Sat, Sep 14, 2002 at 12:49:15AM -0700
References: <20020914023948.26152.qmail@email.com> <Pine.BSF.4.32.0209132255320.10141-100000@eden.ispol.com> <20020913232204.A2273@eye.neb> <20020914004915.B10914@lyra.org>
Message-ID: <20020914052325.A2440@eye.neb>

* Greg Stein <gstein@lyra.org> [020914 03:48]:
> That's all great and everything, but somebody must take the time to get this
> work completed. Since this is an entirely volunteer thing, that means that
> it will take time. And other things may be prioritized first...

Got you. Greg, as you well know, text manipulation in python is rather trivial.
So maybe some on this list with some spare time on their hands could give this
a try. I would see a few ways to handle this problem. One would be to simply
grab each message in the mod_python archive (just writing a script to grab each
through the web interface), and then post it to the apache list. Problem here
I foresee is that original dates and posters' identity may get lost from message
headers, though they could be pasted into the message content, or preserved 
some other way. But I don't know if this is good behaviour for a mailing list 
archive (to see entire mod_python.org list as if posted on the same day).

Another alternative would be to work directly on the storage files and 
transform the mailman data files (provided mailman messages are somehow 
available in clear text) into ezmlm files, through multiple passes. Used this 
technique to transform java source into python. But unlike java2python, I doubt
ezmlm would accept some flat file(s) as ezmlm archive files just like that, out of the blue. Someone knowledgeable in both mailman and ezmlm internals migh 
pull thid off.

Vio

From vmilitaru at sympatico.ca  Sat Sep 14 05:57:15 2002
From: vmilitaru at sympatico.ca (vio)
Date: Fri Jan  9 21:59:39 2004
Subject: [mod_python] python-dev list
In-Reply-To: <20020914052325.A2440@eye.neb>; from vmilitaru@sympatico.ca on Sat, Sep 14, 2002 at 05:23:26AM -0500
References: <20020914023948.26152.qmail@email.com> <Pine.BSF.4.32.0209132255320.10141-100000@eden.ispol.com> <20020913232204.A2273@eye.neb> <20020914004915.B10914@lyra.org> <20020914052325.A2440@eye.neb>
Message-ID: <20020914055713.A2503@eye.neb>

Oops, taking back most of what I said in previous message. Remembering some
past mod_python example, maniputating mail messages seems more flexible 
than initially thought.
And all mod_python message archives look like simple flat text files (.gz).
So, on second look, moving the entire modpython archive to apache could be
done in something like, I don't know, 20-30 lines of python code. 

Vio

* vio <vmilitaru@sympatico.ca> [020914 05:31]:
> * Greg Stein <gstein@lyra.org> [020914 03:48]:
> > That's all great and everything, but somebody must take the time to get this
> > work completed. Since this is an entirely volunteer thing, that means that
> > it will take time. And other things may be prioritized first...
> 
> Got you. Greg, as you well know, text manipulation in python is rather trivial.
> So maybe some on this list with some spare time on their hands could give this
> a try. I would see a few ways to handle this problem. One would be to simply
> grab each message in the mod_python archive (just writing a script to grab each
> through the web interface), and then post it to the apache list. Problem here
> I foresee is that original dates and posters' identity may get lost from message
> headers, though they could be pasted into the message content, or preserved 
> some other way. But I don't know if this is good behaviour for a mailing list 
> archive (to see entire mod_python.org list as if posted on the same day).
> 
> Another alternative would be to work directly on the storage files and 
> transform the mailman data files (provided mailman messages are somehow 
> available in clear text) into ezmlm files, through multiple passes. Used this 
> technique to transform java source into python. But unlike java2python, I doubt
> ezmlm would accept some flat file(s) as ezmlm archive files just like that, out of the blue. Someone knowledgeable in both mailman and ezmlm internals migh 
> pull thid off.
> 
> Vio
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://www.modpython.org/mailman/listinfo/mod_python

From john at veidit.net  Sat Sep 14 23:35:23 2002
From: john at veidit.net (John Angelmo)
Date: Fri Jan  9 21:59:39 2004
Subject: [mod_python] Upgrade problem
Message-ID: <20020914233523.649f805e.john@veidit.net>

Hello

I recently upgraded both mod_python and Apache with portupgrade. Now there seems to be some problem I only get this output:

Mod_python error: "PythonHandler mod_python.publisher"

Traceback (most recent call last):

  File "/usr/local/lib/python2.2/site-packages/mod_python/apache.py", line 193, in Dispatch
    result = object(req)

  File "/usr/local/lib/python2.2/site-packages/mod_python/publisher.py", line 88, in handler
    if func_path[-1] == ".":

IndexError: string index out of range


My apacheconfig:

<Directory /usr/local/www/data/wa>
            AddHandler python-program .py
            PythonHandler mod_python.publisher
            PythonDebug On
</Directory>

/John

From list-mod_python at empires.org  Sat Sep 14 16:33:13 2002
From: list-mod_python at empires.org (Jeff Davis)
Date: Fri Jan  9 21:59:39 2004
Subject: [mod_python] Upgrade problem
In-Reply-To: <20020914233523.649f805e.john@veidit.net>
References: <20020914233523.649f805e.john@veidit.net>
Message-ID: <200209141633.13955.list-mod_python@empires.org>

What OS, old mod_python version, new mod_python version, and apache version do 
you have?

How did you install the new version? Is it possible that it didn't properly 
install the mod_python lib? If you were installing from a package, is it 
possible that it wasn't built correctly?

What URL were you using to access your page? What are the contents fo your 
file?

Please provide the most simple example you can that still reproduces the 
problem.

It seems like it might be a problem related to the mod_python library and the 
URL. Perhaps mod_python was updated and the mod_python library wasn't? 
Perhaps the new mod_python library doesn't work correcty?

Regards,
	Jeff

On Saturday 14 September 2002 02:35 pm, John Angelmo wrote:
> Hello
>
> I recently upgraded both mod_python and Apache with portupgrade. Now there
> seems to be some problem I only get this output:
>
> Mod_python error: "PythonHandler mod_python.publisher"
>
> Traceback (most recent call last):
>
>   File "/usr/local/lib/python2.2/site-packages/mod_python/apache.py", line
> 193, in Dispatch result = object(req)
>
>   File "/usr/local/lib/python2.2/site-packages/mod_python/publisher.py",
> line 88, in handler if func_path[-1] == ".":
>
> IndexError: string index out of range
>
>
> My apacheconfig:
>
> <Directory /usr/local/www/data/wa>
>             AddHandler python-program .py
>             PythonHandler mod_python.publisher
>             PythonDebug On
> </Directory>
>
> /John
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://www.modpython.org/mailman/listinfo/mod_python


From rpinder at usc.edu  Sat Sep 14 21:15:11 2002
From: rpinder at usc.edu (Rich Pinder)
Date: Fri Jan  9 21:59:39 2004
Subject: [mod_python] "Not Found" message with Publisher example
References: <3D7C2453.8020300@usc.edu>
Message-ID: <3D84094F.10501@usc.edu>

I'm still stumped with getting the SIMPLE example code on page 13 of the manual working.
(HAD simple example 1 from page 10 working, so I'm sure all the stuff is in correct location)
(Windows install. Python 2.2.1   mod_python.dll v 2.7.6   apache 1.2.26)

Edited the apache conf file, inside the  <IfModule mod_alias.c>

     <Directory "C:/Program Files/Apache Group/Apache/htdocs/python">
	AddHandler python-program .py
	PythonHandler mod_python.publisher
	PythonDebug on
     </Directory>

Test html form has:

   <form action="form/email" method="POST">

Created form.py (when i try to call it form the interpreter, I get no python indenting/parsing errors). 
form.py is in the directory pointed to in the apache .conf file.  (...../htdocs/python).  And, as its copied 
from the example, inside the  form.py  is a method defined as   email.  So form action makes sense to me.

But when trying to post, still get error :  The requested URL /form/email was not found on this server.


Am I missing something here?  Almost like the publisher is not being accessed ? There are no ancilliry files 
for the publisher that need to be installed either under the apache tree (other than the .dll), or under the 
python tree ??

I'm SURE its something trivial I've missed here - I am very new to this all.

Thanks for any thoughts you might have.

Rich

[Alain's idea, which i hoped was the clue, turned out not to be the problem]:

 >........  Edited the  .conf  file, created a new python script   mail.py, made
 >> a html form - but still get:
 >>
 >> The requested URL /form/email was not found on this server.
 >
 >
 > "mail" != "email"        [i'd mistakingly said in prior paragraph the script was called mail.py...]
 > was/is called form.py    [ but it was/is called form.py.  and besides, email is defined as a method ]
 >
 > Alain,
 >



Rich Pinder wrote:
 > Got the easy example workin fine from the Manual (3.2 section), but got hung up with the example that
 > discusses how the Publisher works.  Edited the  .conf  file, created a new python script   form.py,  made
 > an html form - but still get:
 >
 > The requested URL /form/email was not found on this server.
 >
 > I'm sure its a simple one - thanks for any thoughts !
 >
 > Rich Pinder USC School of Medicine
 >


From john at veidit.net  Sun Sep 15 14:06:05 2002
From: john at veidit.net (John Angelmo)
Date: Fri Jan  9 21:59:39 2004
Subject: [mod_python] Upgrade problem
References: <20020914233523.649f805e.john@veidit.net> <200209141633.13955.list-mod_python@empires.org>
Message-ID: <3D8477AD.1040604@veidit.net>

FreeBSD updated from 4.5 to 4.6.2
mod_python updated from 2.7.6 to 2.7.8
Apache updated from??? (six months old) to latest (not 2.0)
Installation was made with the FreeBSD ports system
The page that I accessed is on my internal server 192.168.1.1/wa

/John

Jeff Davis wrote:
> What OS, old mod_python version, new mod_python version, and apache version do 
> you have?
> 
> How did you install the new version? Is it possible that it didn't properly 
> install the mod_python lib? If you were installing from a package, is it 
> possible that it wasn't built correctly?
> 
> What URL were you using to access your page? What are the contents fo your 
> file?
> 
> Please provide the most simple example you can that still reproduces the 
> problem.
> 
> It seems like it might be a problem related to the mod_python library and the 
> URL. Perhaps mod_python was updated and the mod_python library wasn't? 
> Perhaps the new mod_python library doesn't work correcty?
> 
> Regards,
> 	Jeff
> 
> On Saturday 14 September 2002 02:35 pm, John Angelmo wrote:
> 
>>Hello
>>
>>I recently upgraded both mod_python and Apache with portupgrade. Now there
>>seems to be some problem I only get this output:
>>
>>Mod_python error: "PythonHandler mod_python.publisher"
>>
>>Traceback (most recent call last):
>>
>>  File "/usr/local/lib/python2.2/site-packages/mod_python/apache.py", line
>>193, in Dispatch result = object(req)
>>
>>  File "/usr/local/lib/python2.2/site-packages/mod_python/publisher.py",
>>line 88, in handler if func_path[-1] == ".":
>>
>>IndexError: string index out of range
>>
>>
>>My apacheconfig:
>>
>><Directory /usr/local/www/data/wa>
>>            AddHandler python-program .py
>>            PythonHandler mod_python.publisher
>>            PythonDebug On
>></Directory>
>>
>>/John
>>_______________________________________________
>>Mod_python mailing list
>>Mod_python@modpython.org
>>http://www.modpython.org/mailman/listinfo/mod_python
> 
> 
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://www.modpython.org/mailman/listinfo/mod_python



From grisha at modpython.org  Sun Sep 15 13:35:56 2002
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 21:59:39 2004
Subject: [mod_python] "Not Found" message with Publisher example
In-Reply-To: <3D84094F.10501@usc.edu>
Message-ID: <Pine.BSF.4.32.0209151333390.30540-100000@eden.ispol.com>


On Sat, 14 Sep 2002, Rich Pinder wrote:

>    <form action="form/email" method="POST">

try

 <form action="form.py/email" method="POST">


I think it's a typo in the docs.

Grisha


From grisha at modpython.org  Sun Sep 15 13:42:08 2002
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 21:59:39 2004
Subject: [mod_python] Upgrade problem
In-Reply-To: <3D8477AD.1040604@veidit.net>
Message-ID: <Pine.BSF.4.32.0209151337040.30540-100000@eden.ispol.com>

Try changing that line in publicher.py to
    if func_path[:-1] == ".":

(note : before -1)

Grisha

On Sun, 15 Sep 2002, John Angelmo wrote:

> FreeBSD updated from 4.5 to 4.6.2
> mod_python updated from 2.7.6 to 2.7.8
> Apache updated from??? (six months old) to latest (not 2.0)
> Installation was made with the FreeBSD ports system
> The page that I accessed is on my internal server 192.168.1.1/wa
>
> /John
>
> Jeff Davis wrote:
> > What OS, old mod_python version, new mod_python version, and apache version do
> > you have?
> >
> > How did you install the new version? Is it possible that it didn't properly
> > install the mod_python lib? If you were installing from a package, is it
> > possible that it wasn't built correctly?
> >
> > What URL were you using to access your page? What are the contents fo your
> > file?
> >
> > Please provide the most simple example you can that still reproduces the
> > problem.
> >
> > It seems like it might be a problem related to the mod_python library and the
> > URL. Perhaps mod_python was updated and the mod_python library wasn't?
> > Perhaps the new mod_python library doesn't work correcty?
> >
> > Regards,
> > 	Jeff
> >
> > On Saturday 14 September 2002 02:35 pm, John Angelmo wrote:
> >
> >>Hello
> >>
> >>I recently upgraded both mod_python and Apache with portupgrade. Now there
> >>seems to be some problem I only get this output:
> >>
> >>Mod_python error: "PythonHandler mod_python.publisher"
> >>
> >>Traceback (most recent call last):
> >>
> >>  File "/usr/local/lib/python2.2/site-packages/mod_python/apache.py", line
> >>193, in Dispatch result = object(req)
> >>
> >>  File "/usr/local/lib/python2.2/site-packages/mod_python/publisher.py",
> >>line 88, in handler if func_path[-1] == ".":
> >>
> >>IndexError: string index out of range
> >>
> >>
> >>My apacheconfig:
> >>
> >><Directory /usr/local/www/data/wa>
> >>            AddHandler python-program .py
> >>            PythonHandler mod_python.publisher
> >>            PythonDebug On
> >></Directory>
> >>
> >>/John
> >>_______________________________________________
> >>Mod_python mailing list
> >>Mod_python@modpython.org
> >>http://www.modpython.org/mailman/listinfo/mod_python
> >
> >
> > _______________________________________________
> > Mod_python mailing list
> > Mod_python@modpython.org
> > http://www.modpython.org/mailman/listinfo/mod_python
>
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://www.modpython.org/mailman/listinfo/mod_python
>


From jack_diederich at email.com  Sun Sep 15 12:50:24 2002
From: jack_diederich at email.com (Jack Diederich)
Date: Fri Jan  9 21:59:39 2004
Subject: [mod_python] Upgrade problem
Message-ID: <20020915175024.29980.qmail@email.com>

> 
> Try changing that line in publicher.py to
>     if func_path[:-1] == ".":
> 
> (note : before -1)
> 
>
If you just want the last char, and don't want it to fail on an empty string you mean

if func_path[-1:]

func_path[:-1] will give you everything but the last char
-- 
__________________________________________________________
Sign-up for your own FREE Personalized E-mail at Mail.com
http://www.mail.com/?sr=signup


From grisha at modpython.org  Sun Sep 15 16:41:19 2002
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 21:59:39 2004
Subject: [mod_python] Upgrade problem
In-Reply-To: <20020915175024.29980.qmail@email.com>
Message-ID: <Pine.BSF.4.32.0209151640240.32460-100000@eden.ispol.com>

Sorry, my mistake, you're right, it should be [-1:] of course :-)

On Sun, 15 Sep 2002, Jack Diederich wrote:

>
> >
> > Try changing that line in publicher.py to
> >     if func_path[:-1] == ".":
> >
> > (note : before -1)
> >
> >
> If you just want the last char, and don't want it to fail on an empty string you mean
>
> if func_path[-1:]
>
> func_path[:-1] will give you everything but the last char
> --
> __________________________________________________________
> Sign-up for your own FREE Personalized E-mail at Mail.com
> http://www.mail.com/?sr=signup
>


From thanos at 0x01.com  Sun Sep 15 22:48:07 2002
From: thanos at 0x01.com (thanos vassilakis)
Date: Fri Jan  9 21:59:39 2004
Subject: [mod_python] How to upload files using mod_python's publisher handler?
In-Reply-To: <1031854845.5447.9.camel@coraje>
Message-ID: <BB1CA6A6-C91E-11D6-B410-00306559D868@0x01.com>

Try using PSO:
See http://www.scriptfoundry.com/modules/pso/doc/pso-guide.html#files

On Thursday, September 12, 2002, at 02:20 PM, Andres Meza wrote:

> Greetings.
>
> I have created a python CGI script that can upload files sucessfully. 
> Now, I want to create a mod_python script with the same feature using 
> the "publisher" handler and I get this error:??
>
>
> [Thu Sep 12 08:53:41 2002] [error] PythonHandler mod_python.publisher: 
> Traceback (most recent call last):
> [Thu Sep 12 08:53:41 2002] [error] PythonHandler 
> mod_python.publisher:?? File "/home/mrnet/rpm/tmp/mod_python-
> root/usr/lib/python2.2/site-packages/mod_python/apache.py", line 193, 
> in Dispatch
> [Thu Sep 12 08:53:41 2002] [error] PythonHandler 
> mod_python.publisher:?? File "/home/mrnet/rpm/tmp/mod_python-
> root/usr/lib/python2.2/site-packages/mod_python/publisher.py", line 
> 104, in handler
> [Thu Sep 12 08:53:41 2002] [error] PythonHandler 
> mod_python.publisher:?? File "/home/mrnet/rpm/tmp/mod_python-
> root/usr/lib/python2.2/site-packages/mod_python/publisher.py", line 
> 308, in __init__
> [Thu Sep 12 08:53:41 2002] [error] PythonHandler mod_python.publisher: 
> AttributeError: 'file' object has no attribute '__methods__'
>
> Anyone have an idea about why I get this error?
>
> Thanks for your time,

>



From woodm at colorado.edu  Mon Sep 16 01:02:01 2002
From: woodm at colorado.edu (Matthew D. Wood)
Date: Fri Jan  9 21:59:39 2004
Subject: [mod_python] Follow up on install problems.
Message-ID: <1032159721.15421.11.camel@mascot>

Ok, so I believe I've fixed my -DEAPI error, but I still can't get
apache to start.  

both
    apachectl start
and
    httpd -X
do not start the deamon.

Here is the output from "apachectl start":
    [doorman:/usr/sbin] > sudo ./apachectl start
    Password:
    /usr/sbin/apachectl start: httpd could not be started

"httpd -X" on the other hand gives me absolutely no output.


Every time I run either of those commands, my error_log file has the
following appended:
    /usr/libexec/ld.so: Undefined symbol "_pthread_mutex_init" called
    from httpd:/usr/lib/apache/modules/mod_python.so at 0x402e0148

I would love to run an "strace" but I don't think it's installed, and my
not-so-through attempts to find it have resulted in failure so far.


As always, thank you all for even reading this.  And you all definitely
receive an enormous "thank you" for any help you can give.





Here's my system information:
  OS: OpenBSD 3.1
  Python: I have both 2.2 and 2.1 .  I don't know why, but the OpenBSD
          ports tree decided I should have both.
  Apache: I'm running the out-of-the-box 1.3 that comes with OpenBSD




From alain at onesite.org  Mon Sep 16 09:40:01 2002
From: alain at onesite.org (Alain Tesio)
Date: Fri Jan  9 21:59:40 2004
Subject: [mod_python] Follow up on install problems.
In-Reply-To: <1032159721.15421.11.camel@mascot>
References: <1032159721.15421.11.camel@mascot>
Message-ID: <20020916094001.39f7fd79.alain@onesite.org>

On 16 Sep 2002 01:02:01 -0600
"Matthew D. Wood" <woodm@colorado.edu> wrote:

> I would love to run an "strace" but I don't think it's installed, and my
> not-so-through attempts to find it have resulted in failure so far.
> 
>   OS: OpenBSD 3.1

There is no strace on OpenBSD, the analogous program is ktrace,
use kdump to see the contents of the log files.

Alain

From jack_diederich at email.com  Mon Sep 16 08:54:04 2002
From: jack_diederich at email.com (Jack Diederich)
Date: Fri Jan  9 21:59:40 2004
Subject: [mod_python] Follow up on install problems.
Message-ID: <20020916135404.9741.qmail@email.com>

> Every time I run either of those commands, my error_log file has the
> following appended:
>     /usr/libexec/ld.so: Undefined symbol "_pthread_mutex_init" called
>     from httpd:/usr/lib/apache/modules/mod_python.so at 0x402e0148
> 
It looks like you either have python compiled with threads,
or a module that requires threads is being loaded.

mod_python can't be compiled with threads due to the spawning nature of apache.

-jack
-- 
__________________________________________________________
Sign-up for your own FREE Personalized E-mail at Mail.com
http://www.mail.com/?sr=signup


From grisha at modpython.org  Mon Sep 16 10:47:46 2002
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 21:59:40 2004
Subject: [mod_python] Follow up on install problems.
In-Reply-To: <20020916135404.9741.qmail@email.com>
Message-ID: <Pine.BSF.4.32.0209161043370.41786-100000@eden.ispol.com>

To be more precise, it's an issues specifically on FreeBSD (and I guess on
OpenBSD as well), which uses different libc's for threaded and not
threaded apps. As a result, you can't mix the two, and Apache 1.3 is
usually compiled against non-threaded libs since it doesn't care for
threads. So your only options are to recompile Python without threads or
compile Apache with threads (I've never tried the latter, but the former
works just fine).

The threaded/non-threaded thing doesn't seem to be an issue on Linux or
Solaris.

Grisha

On Mon, 16 Sep 2002, Jack Diederich wrote:

> > Every time I run either of those commands, my error_log file has the
> > following appended:
> >     /usr/libexec/ld.so: Undefined symbol "_pthread_mutex_init" called
> >     from httpd:/usr/lib/apache/modules/mod_python.so at 0x402e0148
> >
> It looks like you either have python compiled with threads,
> or a module that requires threads is being loaded.
>
> mod_python can't be compiled with threads due to the spawning nature of apache.
>


From jack_diederich at email.com  Mon Sep 16 13:19:25 2002
From: jack_diederich at email.com (Jack Diederich)
Date: Fri Jan  9 21:59:40 2004
Subject: [mod_python] Initializing the interpreter in python_init() instead of
 python_handler()
Message-ID: <20020916181926.12891.qmail@email.com>

I just threw some of the python_handler() code into python_init() and it works!

This means that it is possible to do all the imports etc only once, instead of once per child.
I mentioned the possibility here
http://www.modpython.org/pipermail/mod_python/2002-July/002246.html
and compared it to the mod_perl handler here
http://www.modpython.org/pipermail/mod_python/2002-July/002248.html

Basically, we currently do more work than we have to because each child does the same work to initalize the interpreter.  In the easy case where we are using the PythonInterpreter directive to force everyone to use
the same name for the interpreter (in the below example 'MAIN') we can just do the one initilization in python_init() and the children inherit a clone of the result.  I'm not aware of any problems this might cause (wierd shared file handles or something) but I haven't tested it very extensively.  I do some calculations in the main of several of my modules, so having this done once is a decent speed boost at apache startup.

below is my replacement python_init(), it only works if you have

PythonInterpreter 'MAIN'

in your httpd.conf

modified python_init follows, based on ver 2.7.8
GLYPHS AND WARNINGS!
this is just a proof-of-concept, I don't do lots of neccessary error checking
and I've hard coded all my strings instead of reading the apache configuration.
After initializing the MAIN interpreter, it loads my module your_python_module_here.py
and calls its setup function do_our_one_time_global_setup().  The children then get all
the calculated stuff that was done in do_our_one_time_global_setup().

enjoy,

-jack

void python_init(server_rec *s, pool *p)
{

    char buff[255];
    PyObject *m;
    PyObject *obCallBack = NULL;
    interpreterdata *idata;
    PyThreadState *tstate;

    /* pool given to us in ChildInit. We use it for 
       server.register_cleanup() */
    pool *child_init_pool = NULL;

    /* mod_python version */
    ap_add_version_component(VERSION_COMPONENT);
    
    /* Python version */
    sprintf(buff, "Python/%s", strtok((char *)Py_GetVersion(), " "));
    ap_add_version_component(buff);

    /* initialize global Python interpreter if necessary */
    if (! Py_IsInitialized()) 
    {

	/* initialze the interpreter */
	Py_Initialize();

#ifdef WITH_THREAD
	/* create and acquire the interpreter lock */
	PyEval_InitThreads();
#endif
	/* Release the thread state because we will never use 
	 * the main interpreter, only sub interpreters created later. */
        PyThreadState_Swap(NULL); 

	/* create the obCallBack dictionary */
	interpreters = PyDict_New();
	if (! interpreters) {
	    ap_log_error(APLOG_MARK, APLOG_NOERRNO|APLOG_ERR, s,
			 "python_init: PyDict_New() failed! No more memory?");
	    exit(1);
	}

	/* NEW STUFF FROM HERE */
	idata = get_interpreter_data("MAIN", s);
	tstate = PyThreadState_New(idata->istate);
	PyThreadState_Swap(tstate);

	m = PyImport_ImportModule("your_python_module_here");
	if (!m) {
	  fprintf(stderr, "Couldn't import module\n");
	} else {
	  obCallBack = PyObject_CallMethod(m, "do_our_one_time_global_setup", NULL);
	  if (!obCallBack)
	    fprintf(stderr, "CallFunc failed\n");
	  else
	    fprintf(stderr, "I think it succeeded?\n");
	}

	PyThreadState_Swap(NULL);
	PyThreadState_Delete(tstate);
	/* TO HERE */

#ifdef WITH_THREAD
	/* release the lock; now other threads can run */
	PyEval_ReleaseLock();
#endif
    }
}



-- 
__________________________________________________________
Sign-up for your own FREE Personalized E-mail at Mail.com
http://www.mail.com/?sr=signup


From woodm at colorado.edu  Mon Sep 16 21:40:01 2002
From: woodm at colorado.edu (Matthew D. Wood)
Date: Fri Jan  9 21:59:40 2004
Subject: [mod_python] Follow up on install problems.
In-Reply-To: <Pine.BSF.4.32.0209161043370.41786-100000@eden.ispol.com>
References: <Pine.BSF.4.32.0209161043370.41786-100000@eden.ispol.com>
Message-ID: <1032234001.15421.437.camel@mascot>

Interesting.  Has anyone tried using mod-python in a threaded setting? 
I just wouldn't have thought that to be a problem.

So, just to be clear, if I recompile apache with threads support, will I
be able to create mod-python scripts that use threads?


On Mon, 2002-09-16 at 08:47, Gregory (Grisha) Trubetskoy wrote:
> 
> To be more precise, it's an issues specifically on FreeBSD (and I guess on
> OpenBSD as well), which uses different libc's for threaded and not
> threaded apps. As a result, you can't mix the two, and Apache 1.3 is
> usually compiled against non-threaded libs since it doesn't care for
> threads. So your only options are to recompile Python without threads or
> compile Apache with threads (I've never tried the latter, but the former
> works just fine).
> 
> The threaded/non-threaded thing doesn't seem to be an issue on Linux or
> Solaris.
> 
> Grisha
> 
> On Mon, 16 Sep 2002, Jack Diederich wrote:
> 
> > > Every time I run either of those commands, my error_log file has the
> > > following appended:
> > >     /usr/libexec/ld.so: Undefined symbol "_pthread_mutex_init" called
> > >     from httpd:/usr/lib/apache/modules/mod_python.so at 0x402e0148
> > >
> > It looks like you either have python compiled with threads,
> > or a module that requires threads is being loaded.
> >
> > mod_python can't be compiled with threads due to the spawning nature of apache.
> >
> 
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://www.modpython.org/mailman/listinfo/mod_python


From grisha at modpython.org  Mon Sep 16 23:56:02 2002
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 21:59:40 2004
Subject: [mod_python] Follow up on install problems.
In-Reply-To: <1032234001.15421.437.camel@mascot>
Message-ID: <Pine.BSF.4.32.0209162355020.50632-100000@eden.ispol.com>

On 16 Sep 2002, Matthew D. Wood wrote:

> So, just to be clear, if I recompile apache with threads support, will I
> be able to create mod-python scripts that use threads?

I don't see why not, provided you're on one of the platforms where mixing
thread/non-thread is possible.

Grisha



From cgardner at netlojix.com  Tue Sep 17 09:43:16 2002
From: cgardner at netlojix.com (Clarence Gardner)
Date: Fri Jan  9 21:59:40 2004
Subject: [mod_python] signal handling
Message-ID: <20020917094316.A3021@liberty.sba2.netlojix.net>

Hello.

I've recently noticed that an application that I ported to mod_python
is unable to do signal handling. In particular, it sets a SIGALRM handler,
which gets correctly registered (as confirmed by a second call to
signal.signal), but after an alarm() call, the signal handler just
never gets delivered. It works fine as a CGI. I noticed that Apache
uses SIGALRM internally, so for fun I tried registering a SIGWINCH
handler instead and then sending myself that signal, and that didn't
get invoked either.

I've seen this on two different system configurations; one was
using Apache 1.3.22, mod_python 2.7.6, and Linux 2.2.19.

TIA for any help with this.

-- 
Clarence Gardner
Software Engineer
NetLojix Communications
cgardner@netlojix.com

From gkrackow at bellsouth.net  Tue Sep 17 13:26:10 2002
From: gkrackow at bellsouth.net (Dr . Unix Software Inc .)
Date: Fri Jan  9 21:59:40 2004
Subject: [mod_python] Fwd: Installation problems - Unable to configure Apache 1.3.26 [gkrackow@bellsouth.net]
In-Reply-To: <20020917131446.A21056@compaq450>; from gkrackow@bellsouth.net on Tue, Sep 17, 2002 at 13:14:46 -0400
References: <20020917131446.A21056@compaq450>
Message-ID: <20020917132610.C21056@compaq450>

Hi guys, I am new to the mod_python mailing list.

I have tried for more than 4 days to get the mod_python working with apache
1.3.26

I followed the Mod_python manual instructions, and had spent lots of times
looking in the mailing list for a clue.

This is what I have :

RedHat 7.2 (Enigma), Kernel 2.4.7-10
gcc 2.96
Python 2.2.1 compiled with no threads.
Apache 1.3.26
mod_python 2.7.8


Making mod_python was no problem. I have apache installed under
/usr/local/apache, so I used ./configure
with --with-apache and --with-python options.

I used make, and make static, as well as (root) make install and make
install_static. It made no difference, the Apache 
recompilation failed with the same errors.

From gkrackow at bellsouth.net  Tue Sep 17 13:32:22 2002
From: gkrackow at bellsouth.net (Dr . Unix Software Inc .)
Date: Fri Jan  9 21:59:40 2004
Subject: [mod_python] Installation problems - Unable to configure Apache 1.3.26
In-Reply-To: <20020917132610.C21056@compaq450>; from gkrackow@bellsouth.net on Tue, Sep 17, 2002 at 13:26:10 -0400
References: <20020917131446.A21056@compaq450> <20020917132610.C21056@compaq450>
Message-ID: <20020917133222.A22983@compaq450>

Hi guys, I am new to the mod_python mailing list.

I have tried for more than 4 days to get the mod_python working with apache
1.3.26

I followed the Mod_python manual instructions, and had spent lots of times
looking in the mailing list for a clue.

This is what I have :

RedHat 7.2 (Enigma), Kernel 2.4.7-10
gcc 2.96
Python 2.2.1 compiled with no threads.
Apache 1.3.26
mod_python 2.7.8


Making mod_python was no problem. I have apache installed under
/usr/local/apache, so I used ./configure
with --with-apache and --with-python options.

I used make, and make static, as well as (root) make install and make
install_static. It made no difference, the Apache 
recompilation failed with the same errors.

From jack_diederich at email.com  Wed Sep 18 01:42:43 2002
From: jack_diederich at email.com (Jack Diederich)
Date: Fri Jan  9 21:59:41 2004
Subject: [mod_python] Installation problems - Unable to configure
    Apache 1.3.26
Message-ID: <20020918064243.3864.qmail@email.com>

I've had this problem before, I ended up using a DSO install instead.

here is my mod_python ./configure
./configure  --with-apxs=/home/apache_python/bin/apxs

and my apache ./configure
./configure --with-layout=Apache --prefix=/home/apache_python --enable-module=so --enable-rule=SHARED_CORE

----- Original Message -----
From: "Dr . Unix Software Inc ." <gkrackow@bellsouth.net>
Date: Tue, 17 Sep 2002 13:32:22 -0400 
To: mod_python@modpython.org
Subject: [mod_python] Installation problems - Unable to configure Apache 1.3.26


> 
> Hi guys, I am new to the mod_python mailing list.
> 
> I have tried for more than 4 days to get the mod_python working with apache
> 1.3.26
> 
> I followed the Mod_python manual instructions, and had spent lots of times
> looking in the mailing list for a clue.
> 
> This is what I have :
> 
> RedHat 7.2 (Enigma), Kernel 2.4.7-10
> gcc 2.96
> Python 2.2.1 compiled with no threads.
> Apache 1.3.26
> mod_python 2.7.8
> 
> 
> Making mod_python was no problem. I have apache installed under
> /usr/local/apache, so I used ./configure
> with --with-apache and --with-python options.
> 
> I used make, and make static, as well as (root) make install and make
> install_static. It made no difference, the Apache 
> recompilation failed with the same errors.
> 
> From the Apache source directory I issued the command :
> 
> ./configure --activate-module=src/modules/python/libpython.a
> 
> which gave : 
> 
> Configuring for Apache, Version 1.3.26
>  + using installation path layout: Apache (config.layout)
>  + activated python module (modules/python/libpython.a)
> Creating Makefile
> Creating Configuration.apaci in src
> Creating Makefile in src
>  + configured for Linux platform
>  + setting C compiler to gcc
>  + setting C pre-processor to gcc -E
>  + checking for system header files
>  + adding selected modules
>     o python_module uses ConfigStart/End
>  + using system Expat
>  + checking sizeof various data types
>  + doing sanity check on compiler and options
> Creating Makefile in src/support
> Creating Makefile in src/regex
> Creating Makefile in src/os/unix
> Creating Makefile in src/ap
> Creating Makefile in src/main
> Creating Makefile in src/modules/standard
> Creating Makefile in src/modules/python
> 
> then issued make
> 
> This is the last part of the Apache compilation that shows the errors :
> 
> 
> gcc -c -I/usr/drunix/webservers/apache/mod_python-2.7.8/src/include
> -I/usr/drunix/webservers/apache/apache_1.3.26/src/include
> -I/usr/drunix/webservers/apache/apache_1.3.26/src/os/unix
> -I/usr/drunix/programming/python/Python-2.2.1
> -I/usr/drunix/programming/python/Python-2.2.1/Include -I./os/unix
> -I./include   -DLINUX=22 -DUSE_HSREGEX -DNO_DL_NEEDED `./apaci` buildmark.c
> gcc  -DLINUX=22 -DUSE_HSREGEX -DNO_DL_NEEDED `./apaci` -Xlinker
> -export-dynamic       \
>       -o httpd buildmark.o modules.o modules/standard/libstandard.a
> modules/python/libpython.a main/libmain.a ./os/unix/libos.a ap/libap.a
> regex/libregex.a   -lm -lcrypt -lm  /usr/drunix/programming/python/Python-2.2.1/libpython2.2.a
> -lexpat
> 
> --->> This is my note : Up to here everything seems to be okay, but then
> ...  --->>
> 
> /usr/drunix/programming/python/Python-2.2.1/libpython2.2.a(posixmodule.o):
> In function `posix_tmpnam':
> /usr/drunix/programming/python/Python-2.2.1/./Modules/posixmodule.c:4503:
> the use of `tmpnam' is dangerous, better use `mkstemp'
> /usr/drunix/programming/python/Python-2.2.1/libpython2.2.a(posixmodule.o):
> In function `posix_tempnam':
> /usr/drunix/programming/python/Python-2.2.1/./Modules/posixmodule.c:4451:
> the use of `tempnam' is dangerous, better use `mkstemp'
> 
> /usr/drunix/programming/python/Python-2.2.1/libpython2.2.a(dynload_shlib.o):
> In function `_PyImport_GetDynLoadFunc':
> /usr/drunix/programming/python/Python-2.2.1/Python/dynload_shlib.c:90:
> undefined reference to `dlopen'
> /usr/drunix/programming/python/Python-2.2.1/Python/dynload_shlib.c:93:
> undefined reference to `dlerror'
> /usr/drunix/programming/python/Python-2.2.1/Python/dynload_shlib.c:74:
> undefined reference to `dlsym'
> /usr/drunix/programming/python/Python-2.2.1/Python/dynload_shlib.c:98:
> undefined reference to `dlsym'
> /usr/drunix/programming/python/Python-2.2.1/libpython2.2.a(posixmodule.o):
> In function `posix_openpty':
> /usr/drunix/programming/python/Python-2.2.1/./Modules/posixmodule.c:1934:
> undefined reference to `openpty'
> /usr/drunix/programming/python/Python-2.2.1/libpython2.2.a(posixmodule.o):
> In function `posix_forkpty':
> /usr/drunix/programming/python/Python-2.2.1/./Modules/posixmodule.c:1965:
> undefined reference to `forkpty'
> collect2: ld returned 1 exit status
> make[2]: *** [target_static] Error 1
> make[2]: Leaving directory `/usr/drunix/webservers/apache/apache_1.3.26/src'
> make[1]: *** [build-std] Error 2
> make[1]: Leaving directory `/usr/drunix/webservers/apache/apache_1.3.26'
> make: *** [build] Error 2
> 
> I have been stuck here for days, found no similar errors in the mailing
> list, I scanned them form January to September (2002).
> 
> Any susgestions would be greatly appreciated.
> 
> G.K.
> 
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://www.modpython.org/mailman/listinfo/mod_python
> 
> 

-- 
__________________________________________________________
Sign-up for your own FREE Personalized E-mail at Mail.com
http://www.mail.com/?sr=signup


From bryan at eevolved.com  Tue Sep 17 21:06:52 2002
From: bryan at eevolved.com (Bryan Mongeau)
Date: Fri Jan  9 21:59:41 2004
Subject: [mod_python] Mod_python and Sub-Interpreter segregation
In-Reply-To: <001401c25b9b$e97f0770$0400a8c0@clapton>
References: <001401c25b9b$e97f0770$0400a8c0@clapton>
Message-ID: <200209172106.52339.bryan@eevolved.com>

On September 14, 2002 03:07 am, Michael Neel wrote:
> Thank will work great, until you hit the 65th concurrent connection, at
> wich point apache will give you another child.

Thanks Mike. It seems as if even when MaxClients is set to 64 apache will fork 
another child anyway on the 65th concurrent connection... Why? Do you know 
what is going on here? I would like to simply work around the issue by 
limiting the amount of concurrent clients.

> (just a side note, to test a web server I use the ab tool
> that comes with apache; it will let you set the concurrent number of
> theard to try and get at once).

Thanks alot, ab is my newest friend :)
-- 
Bryan Mongeau
eEvolved Inc. - IT Consulting & Custom Software
http://eevolved.com/
--
"10^38 machine instructions would simulate ALL the brains (non-humans 
included) that ever existed, ever since brains were invented in the Cambrian 
Explosion 570 million years ago." -- K. Eric Drexler


From neel at mediapulse.com  Wed Sep 18 13:57:35 2002
From: neel at mediapulse.com (Michael C. Neel)
Date: Fri Jan  9 21:59:41 2004
Subject: [mod_python] Mod_python and Sub-Interpreter segregation
Message-ID: <C0FC22C08B82074A88B50061764157775BAE@johnson.mediapulse.net>

I think you might be able to get the effect you want with the
ServerLimit setting, although I still don't recommend constraining
apache.  To do a hit counter, bumping a number in a flat file would
probably be best.  I'm not sure what the overall goal is, but there are
also other options for managing state.

Yea, ever since I met ab we have been very close.

Mike
--
Michael C. Neel
There are only 10 types of people in the world;
those who understand binary and those who don't.


-----Original Message-----
From: Bryan Mongeau [mailto:bryan@eevolved.com] 
Sent: Tuesday, September 17, 2002 5:07 PM
To: mod_python@modpython.org
Subject: Re: [mod_python] Mod_python and Sub-Interpreter segregation


On September 14, 2002 03:07 am, Michael Neel wrote:
> Thank will work great, until you hit the 65th concurrent connection,
at
> wich point apache will give you another child.

Thanks Mike. It seems as if even when MaxClients is set to 64 apache
will fork 
another child anyway on the 65th concurrent connection... Why? Do you
know 
what is going on here? I would like to simply work around the issue by 
limiting the amount of concurrent clients.

> (just a side note, to test a web server I use the ab tool
> that comes with apache; it will let you set the concurrent number of
> theard to try and get at once).

Thanks alot, ab is my newest friend :)
-- 
Bryan Mongeau
eEvolved Inc. - IT Consulting & Custom Software
http://eevolved.com/
--
"10^38 machine instructions would simulate ALL the brains (non-humans 
included) that ever existed, ever since brains were invented in the
Cambrian 
Explosion 570 million years ago." -- K. Eric Drexler

_______________________________________________
Mod_python mailing list
Mod_python@modpython.org
http://www.modpython.org/mailman/listinfo/mod_python


From pk1u at yahoo.com  Wed Sep 18 13:31:29 2002
From: pk1u at yahoo.com (Praveen Kumar)
Date: Fri Jan  9 21:59:41 2004
Subject: [mod_python] multithreading support
Message-ID: <20020918203129.71020.qmail@web80305.mail.yahoo.com>

I've found messages on various lists that have stated
that it's a myth that threads don't work w/
mod_python, it works fine on most platforms, etc. Can
anyone comment on that ( I *really* want to use
threads ) ? Has anyone encountered problems w/ threads
on a RH7.2 + Apache 1.3.26 + mod_python 2.7.8 + Python
2.1.3 config ?

pk


__________________________________________________
Do you Yahoo!?
Yahoo! News - Today's headlines
http://news.yahoo.com

From bryan at eevolved.com  Fri Sep 20 16:58:08 2002
From: bryan at eevolved.com (Bryan Mongeau)
Date: Fri Jan  9 21:59:41 2004
Subject: [mod_python] multithreading support
In-Reply-To: <20020918203129.71020.qmail@web80305.mail.yahoo.com>
References: <20020918203129.71020.qmail@web80305.mail.yahoo.com>
Message-ID: <200209201658.08726.bryan@eevolved.com>

On September 18, 2002 08:31 pm, Praveen Kumar wrote:
> I've found messages on various lists that have stated
> that it's a myth that threads don't work w/
> mod_python, it works fine on most platforms, etc. Can
> anyone comment on that ( I *really* want to use
> threads ) ? Has anyone encountered problems w/ threads
> on a RH7.2 + Apache 1.3.26 + mod_python 2.7.8 + Python
> 2.1.3 config ?

I have successfully used threads to implement a "Janitor" that periodically 
deletes expired sessions. It is (re)started when the module is imported. It 
is part of a session module that handles cookie based user session variables. 
Usage:

from mod_python import apache
from session import CookieSession

def handler(req):
	sess = CookieSession(req)
	req.content_type="text/html"
	req.send_http_header()
	try:
		sess['hits'] += 1
	except KeyError:
		sess['hits'] = 1
	req.write("Session hits: "+str(sess['hits']))
	return apache.OK

Anyone interested in such a beast can drop me a line. I have not yet tested it 
extensively but Threads and Events definitely *seem* to work.

My setup:
apache 2.0.40
mod_python 3.0 BETA ( patched )
python 2.2.1
-- 
Bryan Mongeau
eEvolved Inc. - IT Consulting & Custom Software
http://eevolved.com/
--
"The only thing that I'd rather own than Windows is English, because then I 
could charge you two hundred and forty-nine dollars for the right to speak 
it." -- Scott McNealy


From jack_diederich at email.com  Fri Sep 20 22:41:08 2002
From: jack_diederich at email.com (Jack Diederich)
Date: Fri Jan  9 21:59:41 2004
Subject: [mod_python] multithreading support
Message-ID: <20020921034108.10532.qmail@email.com>

Re: Threads & mod_python

Grisha can give the final +1/-1 ...

I've read through the mod_python source, and the python embedding HOWTO here http://www.python.org/doc/current/api/threads.html
and in my opinion mod_python will only not work with threads if there is a bug in mod_python interpreter locking, which I doubt is the case because there's really only two places where we call the interpreter (to get the python callback, and to make the callback) and the code would shit the bed if it wasn't 100% right in the first place.  

I run mod_python without threads because I use it in a production environment, so I want to be safe. I don't require threads for the app, so I don't lose anything.

My only minor /but/ is that the python documentation defines a couple of the functions mod_python calls as unavailable functions if python is compiled without threads. (from the link above, read PyEval_AcquireThread).  I think this is documentation dissonace, but just maybe it means that a macro does nothing when it should be doing something.  Bizzarly enough, maybe that means that compiling _without_ threads is the wrong thing to do!

-jackdied
-- 
__________________________________________________________
Sign-up for your own FREE Personalized E-mail at Mail.com
http://www.mail.com/?sr=signup


From jack_diederich at email.com  Sat Sep 21 17:04:10 2002
From: jack_diederich at email.com (Jack Diederich)
Date: Fri Jan  9 21:59:41 2004
Subject: [mod_python] python-dev down?
Message-ID: <20020921220410.562.qmail@email.com>

Is the python-dev list down, or is it simply smart enough not to relay something I sent back to me?

-jack
-- 
__________________________________________________________
Sign-up for your own FREE Personalized E-mail at Mail.com
http://www.mail.com/?sr=signup


From grisha at ispol.com  Tue Sep 24 13:20:59 2002
From: grisha at ispol.com (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 21:59:41 2004
Subject: [mod_python] another beta tarball
Message-ID: <Pine.BSF.4.32.0209241317520.53347-100000@eden.ispol.com>

You can get the latest 3.0 Beta tarball from
http://www.apache.org/dist/httpd/modpython/dev/

Note the new location. It also has all the other dist files, and will be
the main distribution point moving forward. Port, rpm and package
maintainers should probably update their files to fetch from there.

Grisha



From mbp at samba.org  Wed Sep 25 18:26:47 2002
From: mbp at samba.org (Martin Pool)
Date: Fri Jan  9 21:59:41 2004
Subject: [mod_python] [patch] Make mod_python work with NTLM authentication
Message-ID: <20020925082645.GG8296@samba.org>

The mod_python 2.7.8 Publisher assumes that it will only ever be used
with Basic authentication.  It always returns "400 Bad Request" if it
is ever used inside a directory authenticated by Apache's mod_ntlm,
which uses the Authorization header with a different format.   I
suspect it would fail with digest authentication as well.

This patch makes the publisher adhere more closely to the RFC2617
specification by checking the authentication scheme name before trying
to parse the header.

If this could go into 2.7.9 I would be happy.

Index: publisher.py
===================================================================
--- publisher.py
+++ publisher.py	2002-09-25 17:23:05.000000000 +1000
@@ -189,6 +189,29 @@
     else:
         return apache.HTTP_INTERNAL_SERVER_ERROR
 
+
+def _parse_authentication(req):
+    """Return (username, password) from the Authorization header.
+
+    This only handles HTTP Basic (RFC2617) authentication.  In at
+    least two other interesting cases, it is not possible for
+    mod_python to know the password, because it is not included in the
+    request.  For authentication schemes other than Basic, (None,
+    None) is returned.
+
+    May raise an exception if the authorization is invalid in some way.
+    """
+    s = req.headers_in["Authorization"]
+    scheme, rest = string.split(s, None, 1)
+    if string.lower(scheme) != 'basic':
+        return None, None
+
+    s = base64.decodestring(rest)
+    user, passwd = string.split(s, ":", 1)
+    return user, passwd
+    
+    
+
 def process_auth(req, object, realm="unknown", user=None, passwd=None):
 
     found_auth, found_access = 0, 0
@@ -202,9 +225,7 @@
     # once and the are received as arguments
     if not user and req.headers_in.has_key("Authorization"):
         try:
-            s = req.headers_in["Authorization"][6:]
-            s = base64.decodestring(s)
-            user, passwd = string.split(s, ":", 1)
+            user, passwd = _parse_authentication(req)
         except:
             raise apache.SERVER_RETURN, apache.HTTP_BAD_REQUEST
 

-- 
Martin 



From mbp at samba.org  Wed Sep 25 18:33:50 2002
From: mbp at samba.org (Martin Pool)
Date: Fri Jan  9 21:59:41 2004
Subject: [mod_python] Mod_python and Sub-Interpreter segregation
In-Reply-To: <200209172106.52339.bryan@eevolved.com>
References: <001401c25b9b$e97f0770$0400a8c0@clapton> <200209172106.52339.bryan@eevolved.com>
Message-ID: <20020925083348.GH8296@samba.org>

On 17 Sep 2002, Bryan Mongeau <bryan@eevolved.com> wrote:
> On September 14, 2002 03:07 am, Michael Neel wrote:
> > Thank will work great, until you hit the 65th concurrent connection, at
> > wich point apache will give you another child.
> 
> Thanks Mike. It seems as if even when MaxClients is set to 64 apache will fork 
> another child anyway on the 65th concurrent connection... Why? Do you know 
> what is going on here? I would like to simply work around the issue by 
> limiting the amount of concurrent clients.

I think if you go down the path of relying on data kept inside an
Apache instance you will regret it.  The right way to retain state on
the server is to keep it in some kind of external database. 

Here are a few reasons:

 - If you reconfigure apache (e.g. apachectl graceful) or need to
   restart it, the data in memory will be irretrievably lost.
   Perhaps at the moment you don't need strong persistence but most
   web apps find their storage needs grow, so you will in the future. 

 - Having multiple children is an important robustness feature of
   Apache.

 - Keeping shared data separate is a "safer" design -- if you need to  
   coordinate access between threads then there is a risk of race
   conditions or lockups.  For example, if one thread abnormally
   terminates, it might leave internal data structures in an
   inconsistent state.  If you use an external database things are
   more isolated and easier to debug.

 - Using something like Python's shelve module is nearly as easy as an
   in-memory variable.

This is a dead horse; there are plenty of other discussions of it on
the web.  Don't repeat mistakes that were learnt by others six years
ago.

-- 
Martin 

From grisha at modpython.org  Wed Sep 25 09:31:05 2002
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 21:59:41 2004
Subject: [mod_python] [patch] Make mod_python work with NTLM authentication
In-Reply-To: <20020925082645.GG8296@samba.org>
Message-ID: <Pine.BSF.4.32.0209250929120.64042-100000@eden.ispol.com>

On Wed, 25 Sep 2002, Martin Pool wrote:

> If this could go into 2.7.9 I would be happy.

I will add it to 3.0. 2.7.9 won't happen unless there are some serious
problems (like security).

Grisha


From wilk-ml at flibuste.net  Wed Sep 25 22:48:14 2002
From: wilk-ml at flibuste.net (William Dode)
Date: Fri Jan  9 21:59:41 2004
Subject: [mod_python] suexec setuid
Message-ID: <87fzvxn6cx.fsf@flibuste.net>

hi,

Is it possible to change the uid of the interpreter like suexec, in
different virtual host ?

thanks

-- 
William - http://wikipython.tuxfamily.org

From grisha at modpython.org  Wed Sep 25 19:42:51 2002
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 21:59:41 2004
Subject: [mod_python] suexec setuid
In-Reply-To: <87fzvxn6cx.fsf@flibuste.net>
Message-ID: <Pine.BSF.4.32.0209251941120.70644-100000@eden.ispol.com>

It should be possible on Apache 2.0 using the perchild MPM. I haven't
tried this. The latest mp 3.0 beta should be pretty stable - give it a try
:)

On 25 Sep 2002, William Dode wrote:

> hi,
>
> Is it possible to change the uid of the interpreter like suexec, in
> different virtual host ?
>
> thanks
>
> --
> William - http://wikipython.tuxfamily.org
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://www.modpython.org/mailman/listinfo/mod_python
>


From neo at https.ru  Thu Sep 26 19:39:29 2002
From: neo at https.ru (Neo Eureka)
Date: Fri Jan  9 21:59:41 2004
Subject: [mod_python] BETA2: problems with configure and make !
In-Reply-To: <Pine.BSF.4.32.0209251941120.70644-100000@eden.ispol.com>
References: <Pine.BSF.4.32.0209251941120.70644-100000@eden.ispol.com>
Message-ID: <5721418898.20020926193929@https.ru>

  Hello !

  I have just tried to configure and make the "BETA2" of mod_python3.
The results are below.
  I was not completely sure to which of 2 lists I should post this,
but it seems I act as a user rather than a developer, so...

  My server runs Linux 7.2 (Enigma), I have just downloaded the latest
release of Apache -- httpd-2.0.42, and was playing with it to see how
things work with it. I have three different versions of Python
installed: 1.5(native), 2.1.3 and 2.2.1. The latter two are installed
as packages (rpm) with corresponding "-devel" packages.

  It seems, all preconditions for successful build of mod_python are
met, but the problems started once I had run 'configure'.

Firstly, it found Python-1.5 and was happy though it requires 2.2.1.
So I tried "./configure --with-python=...". But here, again, it
behaved odd. It was trying to find Python executable, some "Makefile"
and "Include" source directory. Unsuccessfully.

Below is the directory tree of the Python installation:

-- BEGIN --
/usr/local/python-2.2.1/:
total 28
drwxr-sr-x    7 root     root         4096 Sep 10 15:46 ./
drwxr-sr-x   26 root     root         4096 Sep 10 15:46 ../
drwxr-sr-x    2 root     root         4096 Sep 26 17:24 bin/
drwxr-sr-x    3 root     root         4096 Sep 10 15:46 include/
drwxr-sr-x    3 root     root         4096 Sep 10 15:46 lib/
drwxr-sr-x    3 root     root         4096 Sep 10 15:46 man/
drwxr-sr-x    3 root     root         4096 Sep 10 15:46 share/

/usr/local/python-2.2.1/bin:
total 836
drwxr-sr-x    2 root     root         4096 Sep 26 17:24 ./
drwxr-sr-x    7 root     root         4096 Sep 10 15:46 ../
-rwxr-xr-x    1 root     root           49 Apr  9 23:16 pydoc2*
-rwxr-xr-x    1 root     root       838114 Apr  9 23:16 python2*

/usr/local/python-2.2.1/include:
total 12
drwxr-sr-x    3 root     root         4096 Sep 10 15:46 ./
drwxr-sr-x    7 root     root         4096 Sep 10 15:46 ../
drwxr-xr-x    2 root     root         4096 Sep 10 15:47 python2.2/

/usr/local/python-2.2.1/include/python2.2:
[... skipped ...]

/usr/local/python-2.2.1/lib:
total 20
drwxr-sr-x    3 root     root         4096 Sep 10 15:46 ./
drwxr-sr-x    7 root     root         4096 Sep 10 15:46 ../
drwxr-xr-x   14 root     root        12288 Sep 10 15:47 python2.2/

/usr/local/python-2.2.1/lib/python2.2:
[... skipped ...]

/usr/local/python-2.2.1/man:
[... skipped ...]

/usr/local/python-2.2.1/share:
[... skipped ...]
-- END --

It's obvious that "configure" script expects different layout and
filenames. When I added these symlinks to the
"/usr/local/python-2.2.1/bin" directory:

lrwxrwxrwx    1 root     root           20 Sep 26 17:24 Include -> ../include/python2.2/
lrwxrwxrwx    1 root     root            7 Sep 26 17:15 python -> python2*

... "configure" seemed to succeed, though it failed to find "Makefile"
and "Modules" directory.

I also have problems with "make dso" after the above, but I think I
should first investigate the issue myself.

Am I missing something? May be I did something dumb? I still have poor
experience of Linux etc.

Thanks.

---
Neo Eureka / mailto:neo@https.ru


From leader730 at hotmail.com  Sun Sep  1 00:40:30 2002
From: leader730 at hotmail.com (Leader730)
Date: Fri Jan  9 22:03:25 2004
Subject: [mod_python] Running more than one Python script
Message-ID: <OE23auNjVuMhvqgStMV0000edaf@hotmail.com>

Hello, I am new to all this and I'm having a problem, I configured mod_python on alright I guess but the only file that will run is the the name specidied after PythonHandler in the apache httpd.conf file

<Directory "C:/Program Files/Apache Group/Apache/htdocs/server">
   AddHandler python-program .py
   PythonHandler test
</Directory>

so in this case only the file test.py would run, anything else would return the same thing as test.py, I followed the tutorial and it says that every file should run but it doesn't work for me, I have it setup exactly like it says so If anyone knows how to fix this please tell me (I'm running it on Windows btw).

thanks


-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mailman.modpython.org/pipermail/mod_python/attachments/20020901/fb1bdcaf/attachment-0003.htm
From ian at veryfresh.com  Sun Sep  1 03:00:23 2002
From: ian at veryfresh.com (Ian Clelland)
Date: Fri Jan  9 22:03:26 2004
Subject: [mod_python] Running more than one Python script
In-Reply-To: <OE23auNjVuMhvqgStMV0000edaf@hotmail.com>
References: <OE23auNjVuMhvqgStMV0000edaf@hotmail.com>
Message-ID: <20020901100023.GG5501@fullfactor.com>

On Sun, Sep 01, 2002 at 12:40:30AM -0400, Leader730 wrote:
> Hello, I am new to all this and I'm having a problem, I configured 
> mod_python on alright I guess but the only file that will run is the 
> the name specidied after PythonHandler in the apache httpd.conf file
> 
> <Directory "C:/Program Files/Apache Group/Apache/htdocs/server">
>    AddHandler python-program .py
>    PythonHandler test
> </Directory>

Yes, it looks like you have Apache configured correctly to run 
mod_python on all URLs which end in '.py' in that directory.
 
> so in this case only the file test.py would run, anything else would 
> return the same thing as test.py, I followed the tutorial and it says 
> that every file should run but it doesn't work for me, I have it 
> setup exactly like it says so If anyone knows how to fix this please 
> tell me (I'm running it on Windows btw).

The tutorial _does not_ say that every python file will be run by the 
server. The last paragraph of the tutorial (Section 3.2 of the manual) 
explains that Apache won't even look at the name of the file. Because 
of the way that Apache works, *EVERY* URL which ends in ".py" will 
cause mod_python to run the "test" module, in this case. This is the 
correct behaviour; Apache only allows you to set up one python handler 
per <Directory> tag.

If what you are looking for is a way to run various python files that 
you have placed in your web server directories, then you need to use a 
dispatcher handler, like Publisher. The Publisher handler looks at all 
of the requests which come in to the server, and passes them off to 
your python files, based on their filenames. Check out section 3.4 of 
the manual for a quick introduction to it.

Ian
<ian@veryfresh.com> 

From haering_python at gmx.de  Sun Sep  1 17:40:53 2002
From: haering_python at gmx.de (Gerhard =?iso-8859-1?Q?H=E4ring?=)
Date: Fri Jan  9 22:03:26 2004
Subject: [mod_python] Problems with -HEAD and Apache 2.0.40 on FreeBSD
Message-ID: <20020901154053.GA1241@lilith.ghaering.test>

I tried to get the CVS version working with Apache 2.0.40 on FreeBSD
4.6-STABLE but had no luck :-(

This is what I did:

compiled the FreeBSD apache2 port using WITH_THREADS=1. Which seems to
have worked:

gargamel# ldd /usr/local/sbin/httpd
/usr/local/sbin/httpd:
[...]
libc_r.so.4 => /usr/lib/libc_r.so.4 (0x28225000)
libc.so.4 => /usr/lib/libc.so.4 (0x282df000)
 
I'm not sure if its ok to link against libc_r and libc at the same time,
though. But as is, Apache seems to display static pages fine. But then,
I have no experience with Apache2 whatsoever.

gargamel# /usr/local/sbin/httpd -l
Compiled in modules:
core.c
prefork.c
http_core.c
mod_so.c

So it looks like it's using the preforked model.

The Python compiled against is the standard FreeBSD port with threads
enabled:
gargamel# ldd /usr/local/bin/python
/usr/local/bin/python:
libutil.so.3 => /usr/lib/libutil.so.3 (0x280e6000)
libm.so.2 => /usr/lib/libm.so.2 (0x280ef000)
libc_r.so.4 => /usr/lib/libc_r.so.4 (0x2810b000)

mod_python.so is statically linked against libpython2.2.a, however again
is linked against the normal, nonthreaded libc (!):

gargamel# ldd /usr/local/libexec/apache2/mod_python.so
/usr/local/libexec/apache2/mod_python.so:
libm.so.2 => /usr/lib/libm.so.2 (0x281d9000)
libutil.so.3 => /usr/lib/libutil.so.3 (0x281f5000)
libc.so.4 => /usr/lib/libc.so.4 (0x28069000)

Needless to say, the results aren't that satisfactory:

[Sun Sep 01 17:32:32 2002] [notice] Apache/2.0.40 (Unix) mod_python/3.0.0-BETA Python/2.2.1 configured -- resuming normal operations
[Sun Sep 01 17:32:39 2002] [notice] child pid 35323 exit signal Segmentation fault (11)
[Sun Sep 01 17:32:39 2002] [notice] child pid 35324 exit signal Segmentation fault (11)

All I did was put this line in httpd.conf:
LoadModule python_module libexec/apache2/mod_python.so

I didn't even call a Python handler, yet.

Any clues?

Gerhard
-- 
mail:   gerhard <at> bigfoot <dot> de       registered Linux user #64239
web:    http://www.cs.fhm.edu/~ifw00065/    OpenPGP public key id AD24C930
public key fingerprint: 3FCC 8700 3012 0A9E B0C9  3667 814B 9CAA AD24 C930
reduce(lambda x,y:x+y,map(lambda x:chr(ord(x)^42),tuple('zS^BED\nX_FOY\x0b')))

From grisha at modpython.org  Sun Sep  1 13:47:41 2002
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 22:03:26 2004
Subject: [mod_python] Problems with -HEAD and Apache 2.0.40 on FreeBSD
In-Reply-To: <20020901154053.GA1241@lilith.ghaering.test>
Message-ID: <Pine.BSF.4.32.0209011343500.45308-100000@eden.ispol.com>

I haven't tried it on FreeBSD yet. Apache seemed (or seemed, don't know if
it's resolved in .40) to have some sort of a problem with FreeBSD threads
(thus prefork being the default MPM). Because of this I actually moved all
my development to Linux (to my dismay). So it's possible you have to do
everything without threads. If you figre this out out, please let me know.

Grisha

On Sun, 1 Sep 2002, Gerhard [iso-8859-1] H?ring wrote:

> I tried to get the CVS version working with Apache 2.0.40 on FreeBSD
> 4.6-STABLE but had no luck :-(
>
> This is what I did:
>
> compiled the FreeBSD apache2 port using WITH_THREADS=1. Which seems to
> have worked:
>
> gargamel# ldd /usr/local/sbin/httpd
> /usr/local/sbin/httpd:
> [...]
> libc_r.so.4 => /usr/lib/libc_r.so.4 (0x28225000)
> libc.so.4 => /usr/lib/libc.so.4 (0x282df000)
>
> I'm not sure if its ok to link against libc_r and libc at the same time,
> though. But as is, Apache seems to display static pages fine. But then,
> I have no experience with Apache2 whatsoever.
>
> gargamel# /usr/local/sbin/httpd -l
> Compiled in modules:
> core.c
> prefork.c
> http_core.c
> mod_so.c
>
> So it looks like it's using the preforked model.
>
> The Python compiled against is the standard FreeBSD port with threads
> enabled:
> gargamel# ldd /usr/local/bin/python
> /usr/local/bin/python:
> libutil.so.3 => /usr/lib/libutil.so.3 (0x280e6000)
> libm.so.2 => /usr/lib/libm.so.2 (0x280ef000)
> libc_r.so.4 => /usr/lib/libc_r.so.4 (0x2810b000)
>
> mod_python.so is statically linked against libpython2.2.a, however again
> is linked against the normal, nonthreaded libc (!):
>
> gargamel# ldd /usr/local/libexec/apache2/mod_python.so
> /usr/local/libexec/apache2/mod_python.so:
> libm.so.2 => /usr/lib/libm.so.2 (0x281d9000)
> libutil.so.3 => /usr/lib/libutil.so.3 (0x281f5000)
> libc.so.4 => /usr/lib/libc.so.4 (0x28069000)
>
> Needless to say, the results aren't that satisfactory:
>
> [Sun Sep 01 17:32:32 2002] [notice] Apache/2.0.40 (Unix) mod_python/3.0.0-BETA Python/2.2.1 configured -- resuming normal operations
> [Sun Sep 01 17:32:39 2002] [notice] child pid 35323 exit signal Segmentation fault (11)
> [Sun Sep 01 17:32:39 2002] [notice] child pid 35324 exit signal Segmentation fault (11)
>
> All I did was put this line in httpd.conf:
> LoadModule python_module libexec/apache2/mod_python.so
>
> I didn't even call a Python handler, yet.
>
> Any clues?
>
> Gerhard
> --
> mail:   gerhard <at> bigfoot <dot> de       registered Linux user #64239
> web:    http://www.cs.fhm.edu/~ifw00065/    OpenPGP public key id AD24C930
> public key fingerprint: 3FCC 8700 3012 0A9E B0C9  3667 814B 9CAA AD24 C930
> reduce(lambda x,y:x+y,map(lambda x:chr(ord(x)^42),tuple('zS^BED\nX_FOY\x0b')))
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://www.modpython.org/mailman/listinfo/mod_python
>


From other at stopthesanity.org  Mon Sep  2 11:43:29 2002
From: other at stopthesanity.org (Chris Cioffi)
Date: Fri Jan  9 22:03:26 2004
Subject: [mod_python] mptest.py fails with (8)Exec format error
Message-ID: <015301c25297$7c15d4a0$75125340@MYOBKPQVQN74K8>

I've looked through the docs and FAQs and couldn't find anything.

Google brought up this link:
http://www.modpython.org/pipermail/mod_python/2001-July/001489.html
but no one answered the question through the list.

My config:
Debian woody, Apache 1.3.26
mod_python 2.7.8

I copied the test script and configuration out of the docs exactly. 

Any ideas?  Thanks!
-- 
Chris <chris@stopthesanity.org>
  Junior Birdman(TM) in training
  http://stopthesanity.org



From grisha at modpython.org  Mon Sep  2 12:27:57 2002
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 22:03:26 2004
Subject: [mod_python] mptest.py fails with (8)Exec format error
In-Reply-To: <015301c25297$7c15d4a0$75125340@MYOBKPQVQN74K8>
Message-ID: <Pine.BSF.4.32.0209021226460.55551-100000@eden.ispol.com>

The problem is that Apache is treating it like a CGI script, which it
isn't.

Grisha

On Mon, 2 Sep 2002, Chris Cioffi wrote:

> I've looked through the docs and FAQs and couldn't find anything.
>
> Google brought up this link:
> http://www.modpython.org/pipermail/mod_python/2001-July/001489.html
> but no one answered the question through the list.
>
> My config:
> Debian woody, Apache 1.3.26
> mod_python 2.7.8
>
> I copied the test script and configuration out of the docs exactly.
>
> Any ideas?  Thanks!
> --
> Chris <chris@stopthesanity.org>
>   Junior Birdman(TM) in training
>   http://stopthesanity.org
>
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://www.modpython.org/mailman/listinfo/mod_python
>


From other at stopthesanity.org  Mon Sep  2 12:33:21 2002
From: other at stopthesanity.org (Chris Cioffi)
Date: Fri Jan  9 22:03:26 2004
Subject: [mod_python] mptest.py fails with (8)Exec format error
References: <E398378A-BE8C-11D6-A0B8-0030653DCC28@attbi.com>
Message-ID: <016401c2529e$736dc7c0$75125340@MYOBKPQVQN74K8>

Bingo.  Thanks Jeff!

-- 
Chris <chris@stopthesanity.org>
  Junior Birdman(TM) in training
  http://stopthesanity.org
----- Original Message ----- 
From: "Jeff Stearns" <jeffstearns@attbi.com>
To: "Chris Cioffi" <other@stopthesanity.org>
Sent: Monday, September 02, 2002 11:58 AM
Subject: Re: [mod_python] mptest.py fails with (8)Exec format error


> Chris -
> 
> You don't provide any details of the problem you're having, so all I can 
> do is guess.
> 
> Make sure that your file doesn't have \r\n line terminators.  You can do 
> that in vi or look with od.
> 
> I assume you're using a #! line at the start of the file.  Triple-check 
> it; it's probably wrong.
> 
> -jeff stearns
> 
> On Monday, September 2, 2002, at 08:43  AM, Chris Cioffi wrote:
> 
> > I've looked through the docs and FAQs and couldn't find anything.
> >
> > Google brought up this link:
> > http://www.modpython.org/pipermail/mod_python/2001-July/001489.html
> > but no one answered the question through the list.
> >
> > My config:
> > Debian woody, Apache 1.3.26
> > mod_python 2.7.8
> >
> > I copied the test script and configuration out of the docs exactly.
> >
> > Any ideas?  Thanks!
> > --
> > Chris <chris@stopthesanity.org>
> >   Junior Birdman(TM) in training
> >   http://stopthesanity.org
> >
> >
> > _______________________________________________
> > Mod_python mailing list
> > Mod_python@modpython.org
> > http://www.modpython.org/mailman/listinfo/mod_python
> 
> 
> 



From leader730 at hotmail.com  Mon Sep  2 22:54:13 2002
From: leader730 at hotmail.com (Leader730)
Date: Fri Jan  9 22:03:26 2004
Subject: [mod_python] PythonHandler mod_python.publisher returns 404 for every file
Message-ID: <OE36fdhNzW3l1GM3h3v00003a92@hotmail.com>

Hellp, I am trying to get PythonHandler mod_python.publisher to work but everytime I try it, any python file I try to run on the server returns a "404 File Not Found" error. this is the config:

<Directory "C:/Program Files/Apache Group/Apache/htdocs/server">
    AddHandler python-program .py
    PythonHandler mod_python.publisher
</Directory>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mailman.modpython.org/pipermail/mod_python/attachments/20020902/e6be7731/attachment-0003.htm
From peter.bittner at gmx.net  Tue Sep  3 18:07:01 2002
From: peter.bittner at gmx.net (Peter Bittner)
Date: Fri Jan  9 22:03:26 2004
Subject: [mod_python] How can I have sensible URLs?
Message-ID: <23016.1031069221@www25.gmx.net>

Hi there!

I have a little bit of understand problem of how the architecture of a
mod_python web application (say web site, if you want) should be.

I would like to have the URLs as if the mod_python scripts were simply some
kind of "special HTML documents", comparable to PHP scripts.

For example, I have written a script named "index.py" which is located on my
document root. So I would expect "http://www.mydomain.com/index.py" to
execute my script (I have set up my Apache so that I can omit the filename, too).
But it doesn't. When I remove the ".py" at the end there is no change to this
too.

So what I have to do is to execute "http://www.mydomain.com/index/method",
provided a method called "method" in my script. This way it works. - But is
there a way to have "HTML-like" or "PHP-like" behavior? Or how do I have to
organize my scripts so that I can have my whole website written in mod_python
and can run it with "http://www.mydomain.com" alone?

Does anyone have a good example about how to do this?

Thanks in advance!
Peter

-- 
Peter Bittner
mobil: +43/(0)650/4151545
web: http://www.bittner.at.tf - http://beam.to/htmlkurs
mail: peter.bittner@gmx.net

"Free software is like free speech, not free beer" (Richard Stallman)

GMX - Die Kommunikationsplattform im Internet.
http://www.gmx.net


From Hans.Yandle at cingular.com  Tue Sep  3 12:28:31 2002
From: Hans.Yandle at cingular.com (Yandle, Hans)
Date: Fri Jan  9 22:03:26 2004
Subject: [mod_python] How can I have sensible URLs?
Message-ID: <D31B04F24EDE7644BB169BB4F080778A01F4C613@s30342g004005>

If the publisher module of mod_python does not fill the bill try looking to
http://spyce.sourceforge.net/, http://www.ccraig.org/software/pyhp/, or just
go looking around on http://py.vaults.ca/parnassus/ for other stuff.

Hans

-----Original Message-----
From: Peter Bittner [mailto:peter.bittner@gmx.net]
Sent: Tuesday, September 03, 2002 12:07 PM
To: mod_python@modpython.org
Subject: [mod_python] How can I have sensible URLs?


Hi there!

I have a little bit of understand problem of how the architecture of a
mod_python web application (say web site, if you want) should be.

I would like to have the URLs as if the mod_python scripts were simply some
kind of "special HTML documents", comparable to PHP scripts.

For example, I have written a script named "index.py" which is located on my
document root. So I would expect "http://www.mydomain.com/index.py" to
execute my script (I have set up my Apache so that I can omit the filename,
too).
But it doesn't. When I remove the ".py" at the end there is no change to
this
too.

So what I have to do is to execute "http://www.mydomain.com/index/method",
provided a method called "method" in my script. This way it works. - But is
there a way to have "HTML-like" or "PHP-like" behavior? Or how do I have to
organize my scripts so that I can have my whole website written in
mod_python
and can run it with "http://www.mydomain.com" alone?

Does anyone have a good example about how to do this?

Thanks in advance!
Peter

-- 
Peter Bittner
mobil: +43/(0)650/4151545
web: http://www.bittner.at.tf - http://beam.to/htmlkurs
mail: peter.bittner@gmx.net

"Free software is like free speech, not free beer" (Richard Stallman)

GMX - Die Kommunikationsplattform im Internet.
http://www.gmx.net

_______________________________________________
Mod_python mailing list
Mod_python@modpython.org
http://www.modpython.org/mailman/listinfo/mod_python

From grisha at modpython.org  Tue Sep  3 13:03:37 2002
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 22:03:26 2004
Subject: [mod_python] How can I have sensible URLs?
In-Reply-To: <23016.1031069221@www25.gmx.net>
Message-ID: <Pine.BSF.4.32.0209031257590.68415-100000@eden.ispol.com>

Basically, the publisher doesn't have a "default" method name. (There is
no particular reason for this, it just didn't occur to me at the time of
writing.)

There is probably more than one way to accomplish something to that
extent, one way would be to try a redirect, something like:

Redirect /index.py http://www.mydomain.com/index.py/index

Grisha

On Tue, 3 Sep 2002, Peter Bittner wrote:

> Hi there!
>
> I have a little bit of understand problem of how the architecture of a
> mod_python web application (say web site, if you want) should be.
>
> I would like to have the URLs as if the mod_python scripts were simply some
> kind of "special HTML documents", comparable to PHP scripts.
>
> For example, I have written a script named "index.py" which is located on my
> document root. So I would expect "http://www.mydomain.com/index.py" to
> execute my script (I have set up my Apache so that I can omit the filename, too).
> But it doesn't. When I remove the ".py" at the end there is no change to this
> too.
>
> So what I have to do is to execute "http://www.mydomain.com/index/method",
> provided a method called "method" in my script. This way it works. - But is
> there a way to have "HTML-like" or "PHP-like" behavior? Or how do I have to
> organize my scripts so that I can have my whole website written in mod_python
> and can run it with "http://www.mydomain.com" alone?
>
> Does anyone have a good example about how to do this?
>
> Thanks in advance!
> Peter
>
> --
> Peter Bittner
> mobil: +43/(0)650/4151545
> web: http://www.bittner.at.tf - http://beam.to/htmlkurs
> mail: peter.bittner@gmx.net
>
> "Free software is like free speech, not free beer" (Richard Stallman)
>
> GMX - Die Kommunikationsplattform im Internet.
> http://www.gmx.net
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://www.modpython.org/mailman/listinfo/mod_python
>


From mbp at samba.org  Wed Sep  4 11:42:35 2002
From: mbp at samba.org (Martin Pool)
Date: Fri Jan  9 22:03:26 2004
Subject: [mod_python] How can I have sensible URLs?
In-Reply-To: <23016.1031069221@www25.gmx.net>
References: <23016.1031069221@www25.gmx.net>
Message-ID: <20020904014233.GC7271@samba.org>

On  3 Sep 2002, Peter Bittner <peter.bittner@gmx.net> wrote:
> Hi there!
> 
> I have a little bit of understand problem of how the architecture of a
> mod_python web application (say web site, if you want) should be.
> 
> I would like to have the URLs as if the mod_python scripts were simply some
> kind of "special HTML documents", comparable to PHP scripts.
> 
> For example, I have written a script named "index.py" which is located on my
> document root. So I would expect "http://www.mydomain.com/index.py" to
> execute my script (I have set up my Apache so that I can omit the filename, too).
> But it doesn't. When I remove the ".py" at the end there is no change to this
> too.
> 
> So what I have to do is to execute "http://www.mydomain.com/index/method",
> provided a method called "method" in my script. This way it works. - But is
> there a way to have "HTML-like" or "PHP-like" behavior? Or how do I have to
> organize my scripts so that I can have my whole website written in mod_python
> and can run it with "http://www.mydomain.com" alone?

Have a look at the mod_rewrite documentation.  Something like

  RewriteMatch /index/(.*) /python/index.py/$1

-- 
Martin 

From Thomas.Rothmayer at borealisgroup.com  Wed Sep  4 07:55:15 2002
From: Thomas.Rothmayer at borealisgroup.com (Rothmayer, Thomas)
Date: Fri Jan  9 22:03:26 2004
Subject: [mod_python] Python - MySql - Apache: Installation of mod_python on WinNT
Message-ID: <B956D4DA8568D41186B60050046724AC183D05@LZNTS005>

Good morning all,

to add data to my MySql-database (and to display the query-results on a
browswer) I'm using PHP. It's running quite well.
But as I insert most of the data with several NumPy-scripts, I'd like to do
also the output with Python (e.g. graphs on the browser) in order not to get
too much different softwares.

I've already tried to install mod_snake (because Apache 2.0 is installed on
my computer) and WebWare/Webkit - without success.
My OS is WinNT, MySQLdb is installed.

Some changes I made:
httpd.conf:	LoadModule webkit_module modules/mod_webkit.dll
webkit.cgi:	#! c:\programme\python21\python

Please support me with installation details of mod_snake and/or Webware (if
necessary) on NT!
Someone already has experience with my software triumvirat?


Many thanks,
Thomas



**********************************************************************
This email and any files transmitted with it are confidential and
intended solely for the use of the individual or entity to whom they
are addressed. If you have received this email in error please notify
the sender either by telephone or by e-mail and delete the material
from any computer. Thank you for your cooperation.

This footnote also confirms that this email message has been swept by
MIMEsweeper for the presence of computer viruses.

www.borealisgroup.com
**********************************************************************


From fabbe at paniq.net  Wed Sep  4 09:25:13 2002
From: fabbe at paniq.net (Fabian Fagerholm)
Date: Fri Jan  9 22:03:26 2004
Subject: [mod_python] Python - MySql - Apache: Installation of
	mod_python on WinNT
In-Reply-To: <B956D4DA8568D41186B60050046724AC183D05@LZNTS005>
References: <B956D4DA8568D41186B60050046724AC183D05@LZNTS005>
Message-ID: <1031120714.4175.3.camel@kernel>

On Wed, 2002-09-04 at 08:55, Rothmayer, Thomas wrote:
> Please support me with installation details of mod_snake and/or Webware (if
> necessary) on NT!
> Someone already has experience with my software triumvirat?

mod_snake is dead, but the remnants can be found on
http://sourceforge.net/projects/modsnake

The home page for Webware is http://webware.sourceforge.net/ and has
details about that.

Did you realize you sent your mail to the mod_python mailing list? If
you'd like to try mod_python for your web application, then please see
the mod_python home page: http://www.modpython.org/

There are detailed instructions, including a tutorial.

Have fun!

Fabian

-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 240 bytes
Desc: This is a digitally signed message part
Url : http://mailman.modpython.org/pipermail/mod_python/attachments/20020904/b9574f6b/attachment-0003.bin
From peter.bittner at gmx.net  Wed Sep  4 11:03:01 2002
From: peter.bittner at gmx.net (Peter Bittner)
Date: Fri Jan  9 22:03:26 2004
Subject: [mod_python] How can I have sensible URLs?
References: <Pine.BSF.4.32.0209031257590.68415-100000@eden.ispol.com>
Message-ID: <7845.1031130181@www2.gmx.net>

Hi Grisha,

> Basically, the publisher doesn't have a "default" method name. (There is
> no particular reason for this, it just didn't occur to me at the time of
> writing.)

Wouldn't it be a nice idea to provide such a default method name? ("main"
seems a good name for that task.)

I am very keen on organizing my web projects nicely, so I usually structure
the application using separate file for separate tasks.

I also like to obey a couple of web-design paradigmas such as "let your URLs
be hackable", which says nothing less than when the user modifies the URL
there shouldn't be an "unexpected behaviour" as a result. I do get a little of
a headache when I think of users removing the "/dothis" from a
"http://www.mydomain.com/myscript/dothis" and then getting a "404 Not Found".  :-(

I have the feeling that this is really a point that presents a huge
understanding problem to novices, to mod_python beginners, (even if they are
perfectly familiar to Python).
Python scripts begin a the start of the file, everything is processed
sequentially. Why not having a default starting point for mod_python scripts?

Grisha, what was/is your motivation to omit the ".py" in the URL at the end
of the script's filename? - Don't get me wrong, I do see the beauty in this
solution (since the ".py" hits the eye), but isn't this arguably? Wouldn't a
CGI-style processing ("..../myscript.cgi?opt1=abc") be more straight forward?

I would be really happy seeing mod_python to be that easy to understand and
easy to use (to write applications) that it might be a real alternative to
PHP, JSP and ASP, and still (with Python a its base) being a language where
beautiful and well structured code emerges from.

> There is probably more than one way to accomplish something to that
> extent, one way would be to try a redirect, something like:
> 
> Redirect /index.py http://www.mydomain.com/index.py/index

Apache's module mod_rewrite might be some kind of workaround to this. But is
this really satisfying? How do other programmers feel about this?

Cheers, Peter


> On Tue, 3 Sep 2002, Peter Bittner wrote:
> 
> > Hi there!
> >
> > I have a little bit of understand problem of how the architecture of a
> > mod_python web application (say web site, if you want) should be.
> >
> > I would like to have the URLs as if the mod_python scripts were simply
> some
> > kind of "special HTML documents", comparable to PHP scripts.
> >
> > For example, I have written a script named "index.py" which is located
> on my
> > document root. So I would expect "http://www.mydomain.com/index.py" to
> > execute my script (I have set up my Apache so that I can omit the
> filename, too).
> > But it doesn't. When I remove the ".py" at the end there is no change to
> this
> > too.
> >
> > So what I have to do is to execute
> "http://www.mydomain.com/index/method",
> > provided a method called "method" in my script. This way it works. - But
> is
> > there a way to have "HTML-like" or "PHP-like" behavior? Or how do I have
> to
> > organize my scripts so that I can have my whole website written in
> mod_python
> > and can run it with "http://www.mydomain.com" alone?
> >
> > Does anyone have a good example about how to do this?
> >
> > Thanks in advance!
> > Peter
> >
> > --
> > Peter Bittner
> > mobil: +43/(0)650/4151545
> > web: http://www.bittner.at.tf - http://beam.to/htmlkurs
> > mail: peter.bittner@gmx.net
> >
> > "Free software is like free speech, not free beer" (Richard Stallman)
> 

-- 
GMX - Die Kommunikationsplattform im Internet.
http://www.gmx.net


From rien at yeepa.org  Wed Sep  4 12:01:25 2002
From: rien at yeepa.org (Adrien Plisson)
Date: Fri Jan  9 22:03:26 2004
Subject: [mod_python] How can I have sensible URLs?
References: <Pine.BSF.4.32.0209031257590.68415-100000@eden.ispol.com> <7845.1031130181@www2.gmx.net>
Message-ID: <000501c253fa$08b08230$0a020101@skynet.be>

From: "Peter Bittner" <peter.bittner@gmx.net>
> Apache's module mod_rewrite might be some kind of workaround to this. But
is
> this really satisfying? How do other programmers feel about this?

i used mod_rewrite for almost the same purpose.
i took me some times (counting in minutes) to figure out how to write the
regular expression which rewrite the URL. but if you always use the same
name for the default method and *every* files are python script, then one
rule is sufficient for the whole server. for more complex cases, take the
time to know exactly in which case you need a rewrite, and there will always
be a regular expression matching your need.
in my case, i ended up with 5 rules for the whole server -> 5 different
cases which could happen when a request is coming in.

mod_rewrite is flexible (due to the use of regexp), easy to understand, and
incredibly powerful : it allows you to do everything you want when dealing
with url problems. try it and you will like it.

--
rien


From peter.bittner at gmx.net  Wed Sep  4 15:09:32 2002
From: peter.bittner at gmx.net (Peter Bittner)
Date: Fri Jan  9 22:03:26 2004
Subject: [mod_python] How can I have sensible URLs?
References: <000501c253fa$08b08230$0a020101@skynet.be>
Message-ID: <20103.1031144972@www25.gmx.net>

Adrien,

> mod_rewrite is flexible (due to the use of regexp), easy to understand,
> and incredibly powerful : it allows you to do everything you want when
> dealing with url problems. try it and you will like it.

I'm sure mod_rewrite is a good thing when all you want is really just
beautiful URLs and nothing more.

In my case I think there is some more to it. I'll try to sketch it out:
Say, I have the following scripts that form a user interface to a library
database (say, I'm using Python over CGI for this one here)

- http://www.mydomain.com/libdb/index.py
- http://www.mydomain.com/libdb/input.py
- http://www.mydomain.com/libdb/search.py
- http://www.mydomain.com/libdb/reports.py
- http://www.mydomain.com/libdb/maintain.py

I'm sure you can imagine that every script is doing a lot of stuff (printing
out HTML forms, handling user actions and so on). - Let's see how I would
implement this with mod_python:

- I would write one large mod_python script called "libdb.py" which contains
basically the whole code of all the above listed scripts. Each of the above
scripts I would replace by methods (handlers) like "def index():", "def
input():", "def search():", etc.
Then I've ended up with a huge, almost unmaintainable script.  :-(

Is there any way to avoid this?
Would anyone tackle this problem differently?

Any help is greatly appreciated!
Cheers, Peter

-- 
Peter Bittner
mobil: +43/(0)650/4151545
web: http://www.bittner.at.tf - http://beam.to/htmlkurs
mail: peter.bittner@gmx.net

"Free software is like free speech, not free beer" (Richard Stallman)

GMX - Die Kommunikationsplattform im Internet.
http://www.gmx.net


From christoph at cocon-seide.com  Wed Sep  4 16:50:24 2002
From: christoph at cocon-seide.com (Christoph Fritzsch)
Date: Fri Jan  9 22:03:26 2004
Subject: [mod_python] How can I have sensible URLs?
In-Reply-To: <20103.1031144972@www25.gmx.net>
Message-ID: <20020904154555.EF66C9BB41@mail.fritzsch.net>

Hi Peter !

>Say, I have the following scripts that form a user interface to a library
>database (say, I'm using Python over CGI for this one here)
>
>- http://www.mydomain.com/libdb/index.py
>- http://www.mydomain.com/libdb/input.py
....
I can see perfectly well that ONE big script would be a pain in the a....
And I hope I understood you alright.
But why not seperate them by putting one script in in one file and wrap it in one def:
file "input.py" :

def main():
  all the code input needs
  return 'the printout'

and call it by http://.../libdb/input/main
next file "maintainer.py":
def main():
 code
 return 'xx'
and call it by http://.../libdb/maintainer/main

prerequisite is that the publisher is installed :-)

The only disadvantage would be the trailing /main or whatever you should call it if main 
is a reseverd word

Take care Christoph


From peter.bittner at gmx.net  Wed Sep  4 17:56:13 2002
From: peter.bittner at gmx.net (Peter Bittner)
Date: Fri Jan  9 22:03:26 2004
Subject: [mod_python] How can I have sensible URLs?
References: <7845.1031130181@www2.gmx.net>
Message-ID: <16280.1031154973@www2.gmx.net>

Hi!

> "Grisha" wrote:
> > Basically, the publisher doesn't have a "default" method name. (There is
> > no particular reason for this, it just didn't occur to me at the time of
> > writing.)

I have adapted my publisher.py so that is now takes a "default()" method by
default 
if no one is specified in the URL. (See the the code below.)

Do you think this adaption is worth being part of the "official" mod_python?
Anyone 
who finds this interesting? (Anyone who wouldn't like it?)

> I do get a little of a headache when I think of users removing the
> "/dothis" from a "http://www.mydomain.com/myscript/dothis" and then
> getting a "404 Not Found".  :-(

I was a little bit unprecise: It is not a 404 that is raised, it is a
"IndexError: 
string index out of range" that is displayed.

I have changed the code in "publisher.py" from

80:    if func_path[-1] == ".":
81:        func_path = func_path[:-1]

to the following: (the numbers on the left are the line numbers)

80:    if func_path == "":          # set method name to "default"
81:        func_path = "default"    # if none is specified in the URL
82:    elif func_path[-1] == ".":
83:        func_path = func_path[:-1]

(Actually, now it displays the 404 if no "default" method is present! ;-)
*argl*)

Now I have a default-method in each script and I can call scripts by 
"http://servername/scriptname/". It works! :-)

Please send me your comments about this change. Does anyone feel this should
be a 
default mod_python behavior? (I don't like to know my mod_python code only
works on 
my very own server and nowhere else, hugh!)

Cheers,
Peter


-- 
Peter Bittner
mobil: +43/(0)650/4151545
web: http://www.bittner.at.tf - http://beam.to/htmlkurs
mail: peter.bittner@gmx.net

"Free software is like free speech, not free beer" (Richard Stallman)

GMX - Die Kommunikationsplattform im Internet.
http://www.gmx.net
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/octet-stream
Size: 81 bytes
Desc: not available
Url : http://mailman.modpython.org/pipermail/mod_python/attachments/20020904/8932dce9/attachment-0003.obj
From rien at yeepa.org  Wed Sep  4 18:13:02 2002
From: rien at yeepa.org (Adrien Plisson)
Date: Fri Jan  9 22:03:27 2004
Subject: [mod_python] How can I have sensible URLs?
References: <20020904154555.EF66C9BB41@mail.fritzsch.net>
Message-ID: <000701c2542d$f23eab10$0a020101@skynet.be>

From: "Christoph Fritzsch" <christoph@cocon-seide.com>
> But why not seperate them by putting one script in in one file and wrap it
in one def:
> file "input.py" :
>
> def main():
>   all the code input needs
>   return 'the printout'
>
> and call it by http://.../libdb/input/main
> next file "maintainer.py":
> def main():
>  code
>  return 'xx'
> and call it by http://.../libdb/maintainer/main
>
> prerequisite is that the publisher is installed :-)

I was thinking that this was already the case, that's why i didn't precised
it in my previous reply.
so, yes, you can do it this way with the following addenda:

> The only disadvantage would be the trailing /main or whatever you should
call it if main
> is a reseverd word

the trailing main could be added on the server side with a mod_rewrite
RewriteRule, i.e. :
RewriteRule (.*/libd)/([^\.])\.py $1/$2/main
so a client request to:
http://.../libdb/input.py
would be rewriten and will look like:
http://.../libdb/input/main

(the RewriteRule is given in example and has not been tested, so don't
expect it to do the work as it should)

--
rien


From drh9296 at ritvax.rit.edu  Wed Sep  4 15:09:50 2002
From: drh9296 at ritvax.rit.edu (David Higgs)
Date: Fri Jan  9 22:03:27 2004
Subject: [mod_python] Re: How can I have sensible URLs?
References: <20020904160001.81353.92151.Mailman@eden.ispol.com>
Message-ID: <3D765A7E.6080203@rit.edu>

> I'm sure you can imagine that every script is doing a lot of stuff (printing
> out HTML forms, handling user actions and so on). - Let's see how I would
> implement this with mod_python:
> 
> - I would write one large mod_python script called "libdb.py" which contains
> basically the whole code of all the above listed scripts. Each of the above
> scripts I would replace by methods (handlers) like "def index():", "def
> input():", "def search():", etc.
> Then I've ended up with a huge, almost unmaintainable script.  :-(
> 
> Is there any way to avoid this?
> Would anyone tackle this problem differently?
> 
> Any help is greatly appreciated!
> Cheers, Peter

Have your root libdb.py do some error handling and parsing, and then 
execfile() the appropriate script for the request.  You can hide your 
scripts far away from the webserver directory for added security.

This might actually be what publisher does, but I haven't looked into it 
at all.

--david


From grisha at modpython.org  Wed Sep  4 16:07:58 2002
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 22:03:27 2004
Subject: [mod_python] How can I have sensible URLs?
In-Reply-To: <20103.1031144972@www25.gmx.net>
Message-ID: <Pine.BSF.4.32.0209041557540.83863-100000@eden.ispol.com>

You could also separate your app into different modules, then write
libdb.py so that all its functions do is call functions from your other
modules, e.g.:

Assuming there is a libsearch.py which contains all the code necessary
for searching, in libdb.py you'd have:

import libsearch

def search():
	return libsearch.search()

The only caveat with this approach is described here:

http://www.modpython.org/FAQ/faqw.py?req=show&file=faq03.001.htp

Grisha

On Wed, 4 Sep 2002, Peter Bittner wrote:

> In my case I think there is some more to it. I'll try to sketch it out:
> Say, I have the following scripts that form a user interface to a library
> database (say, I'm using Python over CGI for this one here)
>
> - http://www.mydomain.com/libdb/index.py
> - http://www.mydomain.com/libdb/input.py
> - http://www.mydomain.com/libdb/search.py
> - http://www.mydomain.com/libdb/reports.py
> - http://www.mydomain.com/libdb/maintain.py
>
> I'm sure you can imagine that every script is doing a lot of stuff (printing
> out HTML forms, handling user actions and so on). - Let's see how I would
> implement this with mod_python:
>
> - I would write one large mod_python script called "libdb.py" which contains
> basically the whole code of all the above listed scripts. Each of the above
> scripts I would replace by methods (handlers) like "def index():", "def
> input():", "def search():", etc.
> Then I've ended up with a huge, almost unmaintainable script.  :-(
>
> Is there any way to avoid this?
> Would anyone tackle this problem differently?


From scherrey at proteus-tech.com  Wed Sep  4 17:15:55 2002
From: scherrey at proteus-tech.com (Benjamin Scherrey)
Date: Fri Jan  9 22:03:27 2004
Subject: [mod_python] 3.0 & Apache 2.0 support
Message-ID: <200209041715.55379.scherrey@proteus-tech.com>

I'm looking to do my first mod_python install (to support a Quixote 
development) and I want to deploy on Apache 2.0. I see that a beta 
3.0 of mod_python is available that promises Apache 2.0 support but 
was wondering what the experiences here were with that. Is it usable? 
Busted? Any comments or suggestions would be appreciated.

	Ben Scherrey

From mateusz at ant.gliwice.pl  Thu Sep  5 11:59:00 2002
From: mateusz at ant.gliwice.pl (Mateusz Korniak)
Date: Fri Jan  9 22:03:27 2004
Subject: [mod_python] How can I have sensible URLs?
In-Reply-To: <16280.1031154973@www2.gmx.net>
References: <7845.1031130181@www2.gmx.net> <16280.1031154973@www2.gmx.net>
Message-ID: <200209041949.56749.mateusz@ant.gliwice.pl>

On Wednesday 04 September 2002 17:56, Peter Bittner wrote:
> > "Grisha" wrote:
> > > Basically, the publisher doesn't have a "default" method name. (There
> > > is no particular reason for this, it just didn't occur to me at the
> > > time of writing.)
>
> I have adapted my publisher.py so that is now takes a "default()" method by
> default
> if no one is specified in the URL. (See the the code below.)
>
> Do you think this adaption is worth being part of the "official"
> mod_python? 

I think It should.

> Anyone
> who finds this interesting? (Anyone who wouldn't like it?)

I would really like it :)

-- 
Mateusz Korniak




From gbenson at redhat.com  Thu Sep  5 11:40:19 2002
From: gbenson at redhat.com (Gary Benson)
Date: Fri Jan  9 22:03:27 2004
Subject: [mod_python] 3.0 & Apache 2.0 support
In-Reply-To: <200209041715.55379.scherrey@proteus-tech.com>; from scherrey@proteus-tech.com on Wed, Sep 04, 2002 at 05:15:55PM -0400
References: <200209041715.55379.scherrey@proteus-tech.com>
Message-ID: <20020905114018.A22389@redhat.com>

On Wed, Sep 04, 2002 at 05:15:55PM -0400, Benjamin Scherrey wrote:

> I'm looking to do my first mod_python install (to support a Quixote 
> development) and I want to deploy on Apache 2.0. I see that a beta 
> 3.0 of mod_python is available that promises Apache 2.0 support but 
> was wondering what the experiences here were with that. Is it usable? 
> Busted? Any comments or suggestions would be appreciated.

I've been using it with prefork and it's very usable indeed.

Cheers,
Gary

[ gbenson@redhat.com ][ GnuPG 85A8F78B ][ http://inauspicious.org/ ]

From jack_diederich at email.com  Thu Sep  5 13:24:04 2002
From: jack_diederich at email.com (Jack Diederich)
Date: Fri Jan  9 22:03:27 2004
Subject: [mod_python] _apache.so? where are you!
Message-ID: <20020905182405.16118.qmail@email.com>

I was trying to run a test script from the command line...

I was trying to call the parse_qs() routine, but it seems to need _apache.so, which is never built. _apachemodule.c which defines init_apache() is compiled into the mod_python.so module.  I tried putting mod_python.so in site-packages renamed as _apache.so, but it failed because it needs some apache symbols.

Is it just not possible to use misc mod_python routines from the command line, or does it just need a patch?

thanks,

-jack


-- 
__________________________________________________________
Sign-up for your own FREE Personalized E-mail at Mail.com
http://www.mail.com/?sr=signup


From grisha at modpython.org  Thu Sep  5 14:48:05 2002
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 22:03:27 2004
Subject: [mod_python] _apache.so? where are you!
In-Reply-To: <20020905182405.16118.qmail@email.com>
Message-ID: <Pine.BSF.4.32.0209051446470.95519-100000@eden.ispol.com>


On Thu, 5 Sep 2002, Jack Diederich wrote:

> Is it just not possible to use misc mod_python routines from the
> command line, or does it just need a patch?

I'm afraid it's not possible. _apache relies on many httpd functions and
can't exist outside of the httpd process.

Grisha


From scherrey at proteus-tech.com  Thu Sep  5 17:17:59 2002
From: scherrey at proteus-tech.com (Benjamin Scherrey)
Date: Fri Jan  9 22:03:27 2004
Subject: [mod_python] Trouble getting mod_python BETA3 running with Apache 2 under linux (RedHat 7.2)
Message-ID: <200209051718.00063.scherrey@proteus-tech.com>

What does mod_python mean when it says:
"python_handler: make_obcallback returned no obCallBack!, referer: 
http://localhost/python/"

In the error_log? I'm testing my mod_python install (per the online 
docs) and it doesn't seem to be running. When I start Apache it 
reports the presense of mod_python. Anything new for mod_python3 
under Apache 2 that I need to do to get it running?
	
	thanx & later,

			Ben Scherrey

From grisha at modpython.org  Thu Sep  5 17:39:31 2002
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 22:03:27 2004
Subject: [mod_python] Trouble getting mod_python BETA3 running with Apache
 2 under linux (RedHat 7.2)
In-Reply-To: <200209051718.00063.scherrey@proteus-tech.com>
Message-ID: <Pine.BSF.4.32.0209051738090.98161-100000@eden.ispol.com>

On Thu, 5 Sep 2002, Benjamin Scherrey wrote:

> What does mod_python mean when it says:
> "python_handler: make_obcallback returned no obCallBack!, referer:
> http://localhost/python/"
>
> In the error_log? I'm testing my mod_python install (per the online
> docs) and it doesn't seem to be running. When I start Apache it
> reports the presense of mod_python. Anything new for mod_python3
> under Apache 2 that I need to do to get it running?

Hmmm... AFAIK there aren't any *online* docs for mp 3.0 - you should
follow the docs in the tar file. :-)

Grisha




From scherrey at proteus-tech.com  Thu Sep  5 17:40:42 2002
From: scherrey at proteus-tech.com (Benjamin Scherrey)
Date: Fri Jan  9 22:03:27 2004
Subject: [mod_python] Trouble getting mod_python BETA3 running with Apache 2 under linux (RedHat 7.2)
In-Reply-To: <Pine.BSF.4.32.0209051738090.98161-100000@eden.ispol.com>
References: <Pine.BSF.4.32.0209051738090.98161-100000@eden.ispol.com>
Message-ID: <200209051740.43045.scherrey@proteus-tech.com>

Actually I figured it out - Its a problem with RedHat's insistence 
that python be python1.5 so the python2.2 executable is named 
python2. I renamed stuff and changed my path to put the python2 
directory first and it now works...  FWIW - the only docs I found in 
the tar file were .tex files. Maybe there's another file I'm supposed 
to download?

	thanx & later,

		Ben Scherrey

On Thursday 05 September 2002 05:39 pm, Gregory (Grisha) Trubetskoy 
wrote:
> On Thu, 5 Sep 2002, Benjamin Scherrey wrote:
> > What does mod_python mean when it says:
> > "python_handler: make_obcallback returned no obCallBack!,
> > referer: http://localhost/python/"
> >
> > In the error_log? I'm testing my mod_python install (per the
> > online docs) and it doesn't seem to be running. When I start
> > Apache it reports the presense of mod_python. Anything new for
> > mod_python3 under Apache 2 that I need to do to get it running?
>
> Hmmm... AFAIK there aren't any *online* docs for mp 3.0 - you
> should follow the docs in the tar file. :-)
>
> Grisha

From grisha at modpython.org  Thu Sep  5 18:10:47 2002
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 22:03:27 2004
Subject: [mod_python] Trouble getting mod_python BETA3 running with Apache
 2 under linux (RedHat 7.2)
In-Reply-To: <200209051740.43045.scherrey@proteus-tech.com>
Message-ID: <Pine.BSF.4.32.0209051806560.98637-100000@eden.ispol.com>

You're right, sorry, the docs slipped out somehow. I put a small tar file
with the docs in the same directory with the beta.

Grisha

On Thu, 5 Sep 2002, Benjamin Scherrey wrote:

> FWIW - the only docs I found in the tar file were .tex files. Maybe
> there's another file I'm supposed to download?


From scherrey at proteus-tech.com  Thu Sep  5 19:20:28 2002
From: scherrey at proteus-tech.com (Benjamin Scherrey)
Date: Fri Jan  9 22:03:27 2004
Subject: [mod_python] Trouble getting mod_python BETA3 running with Apache 2 under linux (RedHat 7.2)
In-Reply-To: <04B0284D-C126-11D6-A0B8-0030653DCC28@savagebeast.com>
References: <04B0284D-C126-11D6-A0B8-0030653DCC28@savagebeast.com>
Message-ID: <200209051920.28731.scherrey@proteus-tech.com>

Jeff -

	Thanx for the offer. I'd be interested in trying it out if this is 
indeed the problem. However, I don't see how it would be unless 
something in quixote or mod_python has got a hard coded reference to 
the python executable. I've got my python2.2 executable in the very 
first path position. Also - for mod_python support, am I supposed to 
have the qdemo directory be a subdirectory of the registered 
mod_python directory (it isn't) or as a subdirectory of the htdocs 
directory (where it is)? I'm not too clear on what kind of 
integration is going on between mod_python, python, and quixote.

	thanx & later,

		Ben Scherrey

On Thursday 05 September 2002 07:20 pm, Jeff Stearns wrote:
> Ben -
>
> This is a common problem; it typically occurs when mod_python is
> confused about Python is installed.
>
> I have a patch for mod_python; it adds a directive which allows you
> to specify the path to Python and its libraries.  This allows
> mod_python to work in an environment with multiple Python
> interpreters, or where you don't have write permission to the
> system-wide Python lib directory.
>
> I've previously offered it to Grisha for inclusion in the source
> tree, but he's not interested.  If you are, you can contact me
> directly and I'll send you the patch.
>
> -jeff stearns

From chengpua at yahoo.com  Thu Sep  5 18:49:46 2002
From: chengpua at yahoo.com (Cheng Pua)
Date: Fri Jan  9 22:03:27 2004
Subject: [mod_python] Problem in installing 3.0.0 Beta for windows
Message-ID: <20020906014946.37344.qmail@web12505.mail.yahoo.com>

I install 3.0.0 Beta for windows.  However, I could
not get "Hello World" example working.  This is the
error I got: 

python_handler: make_obcallback returned no
obCallBack!

Cheng

__________________________________________________
Do You Yahoo!?
Yahoo! Finance - Get real-time stock quotes
http://finance.yahoo.com

From rpinder at usc.edu  Thu Sep  5 22:12:25 2002
From: rpinder at usc.edu (Rich Pinder)
Date: Fri Jan  9 22:03:27 2004
Subject: [mod_python] 'ok' AttributeError / win32
Message-ID: <3D783939.8090802@usc.edu>

(Very) Newbie here...

I'm starting out with a win32 install (my linux server is 3 weeks away) - and trying to get a head start using 
ModPython.
Eventually, want to get ModPython working with Kinterbasedb & Firebird to do simple form based data storage 
for our cancer research study.

I've gotten the install done, found via the archives the 'gotcha' omission of adding  "AddModule 
mod_python.c", created the little mptest.py sample, and it KIND of works.... But seems to be complaining that 
there is no 'ok' attribute found.

Setup:
Apache/1.3.26  mod_python/2.7.6  Python 2.2.1  (Even though I've upgraded to the 2.7.8 version of the 
mod_python files -using the Apr 19 version of apache.py- the only dll I could find was 2.7.6)


Details of the error:

Hello ThisWorld
Mod_python error: "PythonHandler mptest"

Traceback (most recent call last):

   File "c:\python22\lib\mod_python\apache.py", line 193, in Dispatch
     result = object(req)

   File "c:/program files/apache group/apache/htdocs/python\mptest.py", line 7, in handler
     return apache.ok

AttributeError: 'module' object has no attribute 'ok'

.................

Thanks for any thoughts

Rich Pinder
USC School of Medicine


From ian at veryfresh.com  Thu Sep  5 23:47:13 2002
From: ian at veryfresh.com (Ian Clelland)
Date: Fri Jan  9 22:03:27 2004
Subject: [mod_python] 'ok' AttributeError / win32
In-Reply-To: <3D783939.8090802@usc.edu>
References: <3D783939.8090802@usc.edu>
Message-ID: <20020906064713.GH5501@fullfactor.com>

On Thu, Sep 05, 2002 at 10:12:25PM -0700, Rich Pinder wrote:
> (Very) Newbie here...
> 
> I've gotten the install done, found via the archives the 'gotcha' omission 
> of adding  "AddModule mod_python.c", created the little mptest.py sample, 
> and it KIND of works.... But seems to be complaining that there is no 'ok' 
> attribute found.

> AttributeError: 'module' object has no attribute 'ok'

Identifiers in Python are case-sensitive; try returning "apache.OK" instead of
"apache.ok"

Ian
<ian@veryfresh.com>

From peter.bittner at gmx.net  Fri Sep  6 14:22:25 2002
From: peter.bittner at gmx.net (Peter Bittner)
Date: Fri Jan  9 22:03:27 2004
Subject: [mod_python] Modifying publisher for sensible URLs
References: <16280.1031154973@www2.gmx.net>
Message-ID: <16960.1031314945@www20.gmx.net>

Hi!

I am happy there was some feedback about my modifications to the publisher
(although I know they are everything but brilliant! :-) ).

Could we discuss whether it were worth to change the publisher module so
that it offers some more flexibility as far as URLs are concerned? I'm afraid I
just don't know enough about the publisher to do some more serious
modifications. However, I've found some problems related to this issue:

1. "http://servername/path/script/" works, but
"http://servername/path/script" (without the trailing slash) doesn't. (I can imagine why, but don't know
how to fix it)

2. Provided I've set "index.py" to be one possibility for my
"DirectoryIndex" on Apache then omitting the scriptname in the URL "http://servername/path/"
should execute as "http://servername/path/script". But it seems that it
doesn't (it probably does as ".../script.py" which is not very helpful). (This
would be important to have fixed, too)

(To make this list complete add the following to the top of the list:
"http://servername/path/script/" (or "http://servername/path/script") should
execute as "http://servername/path/script/default". - That is what my
modifications where all about.)

I'd be really happy to see this being implemented in the publisher by
default. I am sure it would do good and would result in a better user acceptance.

Please, Grisha - and all the others that are interested, let's discuss this
out!

Cheers, Peter


> > "Grisha" wrote:
> > > Basically, the publisher doesn't have a "default" method name.
> > > (There is no particular reason for this, it just didn't occur to
> > > me at the time of writing.)
> 
> I have adapted my publisher.py so that is now takes a "default()" method
> by default if no one is specified in the URL. (See the the code below.)
> 
> Do you think this adaption is worth being part of the "official"
> mod_python? Anyone who finds this interesting? (Anyone who
> wouldn't like it?)
>
> [...]

-- 
Peter Bittner
mobil: +43/(0)650/4151545
web: http://www.bittner.at.tf - http://beam.to/htmlkurs
mail: peter.bittner@gmx.net

"Free software is like free speech, not free beer" (Richard Stallman)

GMX - Die Kommunikationsplattform im Internet.
http://www.gmx.net


From drh9296 at ritvax.rit.edu  Fri Sep  6 11:35:18 2002
From: drh9296 at ritvax.rit.edu (David Higgs)
Date: Fri Jan  9 22:03:27 2004
Subject: [mod_python] Modifying publisher for sensible URLs
References: <16280.1031154973@www2.gmx.net> <16960.1031314945@www20.gmx.net>
Message-ID: <3D78CB36.90207@rit.edu>

> Could we discuss whether it were worth to change the publisher module so
> that it offers some more flexibility as far as URLs are concerned? I'm afraid I
> just don't know enough about the publisher to do some more serious
> modifications. However, I've found some problems related to this issue:
> 
> 1. "http://servername/path/script/" works, but
> "http://servername/path/script" (without the trailing slash) doesn't. (I can imagine why, but don't know
> how to fix it)

That functionality is already possible if you roll your own handler. 
Depending on the amount of functionality you want, you may only need 20 
lines of code (or less) to parse and dispatch the request.

With the setup below, http://www.domain.com/util will be a call to 
util_handler.py.  The 'main' method called is always handler().  You'll 
use request.filename and request.path_info to determine what what 
requested.  In this case, the filename would be 
/path/to/your/script/util/index.html, and the path_info would be an 
empty string.

Here's an approximation of my setup:

<Location /util>
     Options -Indexes
     SetHandler python-program
     PythonPath "sys.path+['/path/to/your/script/util', 
'/path/to/your/modules']"
     PythonHandler util_handler
</Location>

bash$ cd /path/to/your/script/util/
bash$ ls
index.html      util_handler.py

The annoying part is that you *need* the index.html to prevent a 404 
error from happening before your script is called.  The content of 
index.html doesn't matter since it is never read; mine are all 
zero-length files.

I have also found that with multiple PythonHandlers, each script must be 
named differently to prevent caching issues.  This wasn't immediately 
obvious, since each httpd thread seemed to have a separate cache.

--david


From vmilitaru at sympatico.ca  Fri Sep  6 14:12:14 2002
From: vmilitaru at sympatico.ca (vio)
Date: Fri Jan  9 22:03:27 2004
Subject: [mod_python] Modifying publisher for sensible URLs
In-Reply-To: <3D78CB36.90207@rit.edu>; from drh9296@ritvax.rit.edu on Fri, Sep 06, 2002 at 11:35:18AM -0400
References: <16280.1031154973@www2.gmx.net> <16960.1031314945@www20.gmx.net> <3D78CB36.90207@rit.edu>
Message-ID: <20020906141214.A1800@eye.neb>

* David Higgs <drh9296@ritvax.rit.edu> [020906 13:40]:
> That functionality is already possible if you roll your own handler. 
> Depending on the amount of functionality you want, you may only need 20 
> lines of code (or less) to parse and dispatch the request.

If I may add, to me this is why mod_python is so damn exciting: its flexibility!With a little python under your belt, and basic understanding of how apache and
'request/response' kinda works, one can make it do absolutely whatever you want.
Adding more 'default' behaviour is nice too, put proportionally will rise the 
learning curve. As a point of comparison, Zope has a lot more functionality 
built-in (I mean 'out of the box'), but the learning curve is proportionally 
steeper, while drastically cutting into Zope's flexibility (in my opinion).
Did I mention that Zope has gotten so huge, with a lot of useless 'fat' 
if you only are looking for very specific functionality.
Flexibility = good, fat = bad.

My 2 c.
Vio

(PS. Hope I haven't started another religious war or Zope bashing campaign,
just wanted to point out that sometimes -though not always- 'leaner' is better)

From mod_python at ns1.tcu-inc.com  Fri Sep  6 21:32:13 2002
From: mod_python at ns1.tcu-inc.com (Mark Nielsen)
Date: Fri Jan  9 22:03:27 2004
Subject: [mod_python] new to list, will mod_python ever simulate what mod_perl does?
Message-ID: <200209070432.g874WDo17067@ns1.tcu-inc.com>

Hello!

I have been pushing myself to use Python more than Perl in the last few
years. I really really like the way mod_perl has turned out and how 
there are tons of modules developed for it. 

Although I use Zope, I don't use it for everything I do and a lot of times
I have no interest in using any publishing modulei for Apache -- yet.
Thus, I like to use the CGI hanlder for now. It caches scripts, modules,
and has hooks into Apache. 

The one thing I seem to be missing with the CGI handler is a standard
way to do persistent database connections. Is there one?

It would be really cool to port all the Perl modules for mod_perl over
to mod_python. Is anybody doing that?

One more thing, I tried to compile mod_python for Apache 2.0 and it keeps
seg faulting apache 2.0. I ma using Python 2.2.1 and RedHat 7.3. 
Anybody have similar problems but got it to work?

Thanks!
Mark




From fabbe at paniq.net  Sat Sep  7 16:37:10 2002
From: fabbe at paniq.net (Fabian Fagerholm)
Date: Fri Jan  9 22:03:27 2004
Subject: [mod_python] new to list, will mod_python ever simulate what
	mod_perl does?
In-Reply-To: <200209070432.g874WDo17067@ns1.tcu-inc.com>
References: <200209070432.g874WDo17067@ns1.tcu-inc.com>
Message-ID: <1031405830.26807.123.camel@kernel>

On Sat, 2002-09-07 at 07:32, Mark Nielsen wrote:
> The one thing I seem to be missing with the CGI handler is a standard
> way to do persistent database connections. Is there one?

Database stuff should be handled by the standard Python DBAPI. Use a
Python database module that supports persistent connections. If
connection pooling is enough and you're using PostgreSQL, try psycopg.

> It would be really cool to port all the Perl modules for mod_perl over
> to mod_python. Is anybody doing that?

Not that I'm aware of.
Which mod_perl modules would you like to have equivalents for in Python?

Note that Python itself has lots of functionality for many different
things. See the Python library reference:
http://www.python.org/doc/current/lib/lib.html

And as a side pointer, look at Albatross which is just perfect when
coupled with mod_python:
http://www.object-craft.com.au/projects/albatross/

If you don't want to program at such a low level then I suggest Webware
or Zope.

Cheers,
Fabian

-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 240 bytes
Desc: This is a digitally signed message part
Url : http://mailman.modpython.org/pipermail/mod_python/attachments/20020907/fe0c4b2b/attachment-0003.bin
From leader730 at hotmail.com  Fri Sep  6 23:48:13 2002
From: leader730 at hotmail.com (Leader730)
Date: Fri Jan  9 22:03:27 2004
Subject: [mod_python] getting clients ip address
Message-ID: <OE57YImWd1Go7tUPsyg0001f9c5@hotmail.com>

hello, I was wondering what was the function I can use to get the clients ip
address, I'm sure I saw it somewhere in the module docs but I can't find it
anymore D:

-----------------------
Too often we lose sight of life's simple pleasures. Remember when someone
annoys you it takes 42 muscles in your face to frown, BUT, it only takes 4
muscles to extend your arm and bitch-slap that mother@#?!&! upside the head!

From alain at onesite.org  Sat Sep  7 17:28:51 2002
From: alain at onesite.org (Alain Tesio)
Date: Fri Jan  9 22:03:27 2004
Subject: [mod_python] getting clients ip address
In-Reply-To: <OE57YImWd1Go7tUPsyg0001f9c5@hotmail.com>
References: <OE57YImWd1Go7tUPsyg0001f9c5@hotmail.com>
Message-ID: <20020907172851.1a142ba6.alain@onesite.org>

On Fri, 6 Sep 2002 23:48:13 -0400
"Leader730" <leader730@hotmail.com> wrote:

> 
> 
> hello, I was wondering what was the function I can use to get the clients ip
> address, I'm sure I saw it somewhere in the module docs but I can't find it
> anymore D:

req.connection.remote_ip

Alain

From peter.bittner at gmx.net  Sun Sep  8 11:44:04 2002
From: peter.bittner at gmx.net (Peter Bittner)
Date: Fri Jan  9 22:03:27 2004
Subject: [mod_python] Modifying publisher for sensible URLs
References: <3D78CB36.90207@rit.edu>
Message-ID: <3932.1031478244@www52.gmx.net>

Hi!

> That functionality is already possible if you roll your own handler. 

Well, I think almost everything is possible when you do a lot on your own.

What I am focusing on is on is to provide a little extra functionality -
just for publisher.py - that makes mod_python more straight forward and easier
to develop programs for. (I do not think that such 15 lines of extra code
would blow up mod_python enormously. It would only affect the publisher.)

From rpinder at usc.edu  Sun Sep  8 21:32:19 2002
From: rpinder at usc.edu (Rich Pinder)
Date: Fri Jan  9 22:03:27 2004
Subject: [mod_python] "Not Found" message with Publisher example
Message-ID: <3D7C2453.8020300@usc.edu>

Got the easy example workin fine from the Manual (3.2 section), but got hung up with the example that 
discusses how the Publisher works.  Edited the  .conf  file, created a new python script   mail.py, made a 
html form - but still get:

The requested URL /form/email was not found on this server.


I'm sure its a simple one - thanks for any thoughts !

Rich Pinder
USC School of Medicine




From fabbe at paniq.net  Mon Sep  9 12:00:11 2002
From: fabbe at paniq.net (Fabian Fagerholm)
Date: Fri Jan  9 22:03:27 2004
Subject: [mod_python] new to list, will mod_python ever simulate what
In-Reply-To: <200209090228.g892Ss622967@ns1.tcu-inc.com>
References: <200209090228.g892Ss622967@ns1.tcu-inc.com>
Message-ID: <1031562012.8377.81.camel@kernel>

On Mon, 2002-09-09 at 05:28, Mark Nielsen wrote:
> In Perl, the core DBI module takes care of all database connections which
> use DBI if you also use Apache DBI.
> I was thinking, there should be a standard way of doing it rather than
> relying on each database author.

Hence DBAPI.
http://www.python.org/topics/database/DatabaseAPI-2.0.html

> There should be a way to do it in Python irrelevant of which database
> connection you use. We would just need a way to make the database
> connections global variables which don't die. 

I agree that it would be useful to be able to keep any such objects
between browser requests. Perhaps there would be a way to place the
connection objects in the global namespace of each mod_python
subinterpreter so that they would continue to exist until the
subinterpreter dies?

But this is a separate issue from the "generic database access" issue.

> So, I guess, I probably will have to make up a way to do it. 
> I use MySQL, PostgreSQL, and Oracle, and also DBM, so I need one way
> for all database connections. 

Even the three SQL-capable ones have slight variations in the SQL syntax
which makes it hard to find a good lowest common denominator that could
be accepted as "standard".

I would write an abstract class that defines the behavior you need and
then four subclasses to implement that behavior for the four database
back-ends you mention. The interface to your application would be your
own, and the interface to each database would make use of DBAPI 2.0
modules specific to each database.

Making the abstract class "standard" makes little sense since it's
probably not very large or complicated, and it's often quite specific to
your application.

I also fail to see how Perl DBI solves certain issues. For example, if
you use Perl DBI and write an application that relies on transactional
capabilities of the database, and you move to a database without
transactional capabilities (MySQL with MyISAM tables, for instance) then
you'll have to adapt your code.
Also, in every single Perl DBI example I've seen, there's SQL embedded
in the code. I probably don't understand DBI but it seems to me that
this makes it essentially impossible to write code for, say, an Oracle
database that makes use of Oracle-specific features, and then run the
same code with a MySQL database as back-end. Or can DBI somehow emulate
the behavior of these databases?

So there really isn't any way out - the back-ends are just too
different. With good use of classes you can at least separate the
databases from the functional code in your particular application.

Cheers,
Fabian


-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 240 bytes
Desc: This is a digitally signed message part
Url : http://mailman.modpython.org/pipermail/mod_python/attachments/20020909/f0263eda/attachment-0003.bin
From fabbe at paniq.net  Mon Sep  9 12:07:24 2002
From: fabbe at paniq.net (Fabian Fagerholm)
Date: Fri Jan  9 22:03:27 2004
Subject: [mod_python] new to list, will mod_python ever simulate what
In-Reply-To: <200209090228.g892Ss622967@ns1.tcu-inc.com>
References: <200209090228.g892Ss622967@ns1.tcu-inc.com>
Message-ID: <1031562445.8385.84.camel@kernel>

On Mon, 2002-09-09 at 05:28, Mark Nielsen wrote:
> ...
> Mark

Please fix your mail server and/or your From: address.

Cheers,
Fabian

-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 240 bytes
Desc: This is a digitally signed message part
Url : http://mailman.modpython.org/pipermail/mod_python/attachments/20020909/fe7efdef/attachment-0003.bin
From lisicky at datis.cdrail.cz  Tue Sep 10 12:27:24 2002
From: lisicky at datis.cdrail.cz (Jiri Lisicky)
Date: Fri Jan  9 22:03:27 2004
Subject: [mod_python] free hosting?
Message-ID: <j4irnu81vavvh2bc7tde66ib68m34qigvo@4ax.com>

Is anywhere on the net free web hosting with mod_python instaled?

I search but found only zope or cgi.

thanks 

Jiri Lisicky

From gbenson at redhat.com  Thu Sep 12 11:25:30 2002
From: gbenson at redhat.com (Gary Benson)
Date: Fri Jan  9 22:03:27 2004
Subject: [mod_python] [PATCH] fix filter lookup failure
Message-ID: <20020912112529.B27092@redhat.com>

Hi,

ap_register_*_filter() normalizes the filter's name before it stores it
by converting it to lower case and removing special characters.  If the
name is not the same when normalized then python_filter() will not be
able to work out which filter it is and will segfault.  The attached
patch fixes.

Later,
Gary

[ gbenson@redhat.com ][ GnuPG 85A8F78B ][ http://inauspicious.org/ ]
-------------- next part --------------
ap_register_*_filter normalizes the filter's name, so we need to store
the normalized name for filter lookups rather than the name the user
registered it with.

Index: src/mod_python.c
===================================================================
RCS file: /cvsroot/modpython/mod_python/src/mod_python.c,v
retrieving revision 1.73
diff -u -r1.73 mod_python.c
--- src/mod_python.c	6 Sep 2002 22:06:28 -0000	1.73
+++ src/mod_python.c	11 Sep 2002 15:58:56 -0000
@@ -1479,23 +1479,24 @@
 
     py_config *conf;
     py_handler *fh;
+    ap_filter_rec_t *frec;
     
     if (!name)
         name = apr_pstrdup(cmd->pool, handler);
 
+    /* register the filter NOTE - this only works so long as the
+       directive is only allowed in the main config. For .htaccess we
+       would have to make sure not to duplicate this */
+    frec = ap_register_input_filter(name, python_input_filter, NULL, AP_FTYPE_CONNECTION);
+ 
     conf = (py_config *) mconfig;
 
     fh = (py_handler *) apr_pcalloc(cmd->pool, sizeof(py_handler));
     fh->handler = (char *)handler;
     fh->dir = conf->config_dir;
 
-    apr_hash_set(conf->in_filters, name, APR_HASH_KEY_STRING, fh);
+    apr_hash_set(conf->in_filters, frec->name, APR_HASH_KEY_STRING, fh);
 
-    /* register the filter NOTE - this only works so long as the
-       directive is only allowed in the main config. For .htaccess we
-       would have to make sure not to duplicate this */
-    ap_register_input_filter(name, python_input_filter, NULL, AP_FTYPE_CONNECTION);
- 
     return NULL;
 }
 
@@ -1503,23 +1504,24 @@
                                                 const char *handler, const char *name) {
     py_config *conf;
     py_handler *fh;
+    ap_filter_rec_t *frec;
  
     if (!name)
         name = apr_pstrdup(cmd->pool, handler);
 
+    /* register the filter NOTE - this only works so long as the
+       directive is only allowed in the main config. For .htaccess we
+       would have to make sure not to duplicate this */
+    frec = ap_register_output_filter(name, python_output_filter, NULL, AP_FTYPE_RESOURCE);
+ 
     conf = (py_config *) mconfig;
     
     fh = (py_handler *) apr_pcalloc(cmd->pool, sizeof(py_handler));
     fh->handler = (char *)handler;
     fh->dir = conf->config_dir;
 
-    apr_hash_set(conf->out_filters, name, APR_HASH_KEY_STRING, fh);
+    apr_hash_set(conf->out_filters, frec->name, APR_HASH_KEY_STRING, fh);
 
-    /* register the filter NOTE - this only works so long as the
-       directive is only allowed in the main config. For .htaccess we
-       would have to make sure not to duplicate this */
-    ap_register_output_filter(name, python_output_filter, NULL, AP_FTYPE_RESOURCE);
- 
     return NULL;
 }
 
From bakey at traq.com  Thu Sep 12 09:15:53 2002
From: bakey at traq.com (Brian Akey)
Date: Fri Jan  9 22:03:27 2004
Subject: [mod_python] Apache 2 and ModPython3
In-Reply-To: <20020912112529.B27092@redhat.com>
References: <20020912112529.B27092@redhat.com>
Message-ID: <1031840154.798.2.camel@g2.traq.com>

What am I missing?
I have tried both Gentoo 1.2 and Slackware 8.1
and compiled apache2 and modpython3 by hand and the httpd segfaults
every time
I go to the directory where my python code lives.
I am using python 2.2.1.
How can I get this to work?

bakey@traq.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mailman.modpython.org/pipermail/mod_python/attachments/20020912/6bb317ed/attachment-0003.htm
From gbenson at redhat.com  Thu Sep 12 17:39:46 2002
From: gbenson at redhat.com (Gary Benson)
Date: Fri Jan  9 22:03:27 2004
Subject: [mod_python] Filter chaining bug
Message-ID: <20020912173945.G27092@redhat.com>

Hi,

I've been playing around with chaining PythonOutputFilters and run into
a dead end.  It seems that mod_python can be the first filter in a chain
quite nicely but it can't be a subsequent filter and it's not obvious
why (to me, anyway).

The attached tarball contains a fragment of httpd.conf that sets up
filters from mod_python and mod_include in some directory.  Everything
works except

  data.flt.flt -- two mod_python filters chained, the second segfaults
  data.shtml.flt -- mod_include outputting into mod_python, mod_python
    segfaults

Is anyone else is able to reproduce this and/or does anyone know what is
wrong here?

Cheers,
Gary

[ gbenson@redhat.com ][ GnuPG 85A8F78B ][ http://inauspicious.org/ ]

From gbenson at redhat.com  Thu Sep 12 17:40:43 2002
From: gbenson at redhat.com (Gary Benson)
Date: Fri Jan  9 22:03:27 2004
Subject: [mod_python] Filter chaining bug (take 2)
Message-ID: <20020912174042.H27092@redhat.com>

Doh, forgot the tarball!

----- Forwarded message from Gary Benson <gbenson@redhat.com> -----

Date: Thu, 12 Sep 2002 17:39:46 +0100
From: Gary Benson <gbenson@redhat.com>
To: mod_python@modpython.org
Mail-Followup-To: mod_python@modpython.org
Subject: Filter chaining bug

Hi,

I've been playing around with chaining PythonOutputFilters and run into
a dead end.  It seems that mod_python can be the first filter in a chain
quite nicely but it can't be a subsequent filter and it's not obvious
why (to me, anyway).

The attached tarball contains a fragment of httpd.conf that sets up
filters from mod_python and mod_include in some directory.  Everything
works except

  data.flt.flt -- two mod_python filters chained, the second segfaults
  data.shtml.flt -- mod_include outputting into mod_python, mod_python
    segfaults

Is anyone else is able to reproduce this and/or does anyone know what is
wrong here?

Cheers,
Gary

[ gbenson@redhat.com ][ GnuPG 85A8F78B ][ http://inauspicious.org/ ]

----- End forwarded message -----
[ gbenson@redhat.com ][ GnuPG 85A8F78B ][ http://inauspicious.org/ ]
-------------- next part --------------
A non-text attachment was scrubbed...
Name: filter.tar.gz
Type: application/x-gzip
Size: 621 bytes
Desc: not available
Url : http://mailman.modpython.org/pipermail/mod_python/attachments/20020912/a4775706/filter.tar-0003.bin
From andres.meza at nuevosmedios.ws  Thu Sep 12 13:20:45 2002
From: andres.meza at nuevosmedios.ws (Andres Meza)
Date: Fri Jan  9 22:03:28 2004
Subject: [mod_python] How to upload files using mod_python's publisher handler?
Message-ID: <1031854845.5447.9.camel@coraje>

Greetings. 

I have created a python CGI script that can upload files sucessfully.
Now, I want to create a mod_python script with the same feature using
the "publisher" handler and I get this error:   


[Thu Sep 12 08:53:41 2002] [error] PythonHandler mod_python.publisher:
Traceback (most recent call last): 
[Thu Sep 12 08:53:41 2002] [error] PythonHandler mod_python.publisher:  
File
"/home/mrnet/rpm/tmp/mod_python-root/usr/lib/python2.2/site-packages/mod_python/apache.py", line 193, in Dispatch 
[Thu Sep 12 08:53:41 2002] [error] PythonHandler mod_python.publisher:  
File
"/home/mrnet/rpm/tmp/mod_python-root/usr/lib/python2.2/site-packages/mod_python/publisher.py", line 104, in handler 
[Thu Sep 12 08:53:41 2002] [error] PythonHandler mod_python.publisher:  
File
"/home/mrnet/rpm/tmp/mod_python-root/usr/lib/python2.2/site-packages/mod_python/publisher.py", line 308, in __init__ 
[Thu Sep 12 08:53:41 2002] [error] PythonHandler mod_python.publisher:
AttributeError: 'file' object has no attribute '__methods__' 

Anyone have an idea about why I get this error? 

Thanks for your time, 
-- 
   Andr?s Meza
   Technical Manager
 __Nuevos Medios - NM S.A.____________________
   e-mail:         andres.meza@nuevosmedios.ws
   day time phone: (+572)6827794 ext.102
   url:            www.nuevosmedios.ws
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mailman.modpython.org/pipermail/mod_python/attachments/20020912/31ee3b44/attachment-0003.htm
From grisha at modpython.org  Thu Sep 12 18:25:45 2002
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 22:03:28 2004
Subject: [mod_python] ANNOUNCE: Mod_Python donated to ASF
Message-ID: <Pine.BSF.4.32.0209121812020.92256-100000@eden.ispol.com>

It is my pleasure to announce that Mod_Python has been donated to the
Apache Software Foundation, and is now a subproject of the httpd server
project (see http://httpd.apache.org/).

I am grateful to ASF for accepting this donation and committing resources
to further the support of Mod_Python. I believe that this action will
advance the development of Mod_Python, resulting in an ultimately better
and more popular tool for Python developers. I also believe it will serve
to better position Python as a language of choice for web development, a
need that has been expressed by many.

There are no implications to the current Mod_Python users - the license is
the same with the sole difference in that the copyright belongs to ASF
now.

As a consequense of the donation, the CVS repository is now hosted on
cvs.apache.org.  Do not use the SourceForge repository anymore, it will
soon be removed.

There will also be website and mailing changes, but the details are still
being finalized and will be announced when ready.

Regards,

Grisha Trubetskoy



From neel at mediapulse.com  Thu Sep 12 18:37:20 2002
From: neel at mediapulse.com (Michael C. Neel)
Date: Fri Jan  9 22:03:28 2004
Subject: [mod_python] ANNOUNCE: Mod_Python donated to ASF
Message-ID: <C0FC22C08B82074A88B50061764157772C63C6@johnson.mediapulse.net>

Let me be the first to say, in the fashion that the Internet has taught
us to celebrate a great victory or other action....

Woot.

Mike

--
Michael C. Neel
There are only 10 types of people in the world;
those who understand binary and those who don't.


-----Original Message-----
From: Gregory (Grisha) Trubetskoy [mailto:grisha@modpython.org] 
Sent: Thursday, September 12, 2002 6:26 PM
To: mod_python@modpython.org; python-list@python.org;
announce@apache.org; dev@httpd.apache.org
Cc: jim@apache.org
Subject: [mod_python] ANNOUNCE: Mod_Python donated to ASF



It is my pleasure to announce that Mod_Python has been donated to the
Apache Software Foundation, and is now a subproject of the httpd server
project (see http://httpd.apache.org/).

I am grateful to ASF for accepting this donation and committing
resources
to further the support of Mod_Python. I believe that this action will
advance the development of Mod_Python, resulting in an ultimately better
and more popular tool for Python developers. I also believe it will
serve
to better position Python as a language of choice for web development, a
need that has been expressed by many.

There are no implications to the current Mod_Python users - the license
is
the same with the sole difference in that the copyright belongs to ASF
now.

As a consequense of the donation, the CVS repository is now hosted on
cvs.apache.org.  Do not use the SourceForge repository anymore, it will
soon be removed.

There will also be website and mailing changes, but the details are
still
being finalized and will be announced when ready.

Regards,

Grisha Trubetskoy


_______________________________________________
Mod_python mailing list
Mod_python@modpython.org
http://www.modpython.org/mailman/listinfo/mod_python


From jack_diederich at email.com  Thu Sep 12 17:45:21 2002
From: jack_diederich at email.com (Jack Diederich)
Date: Fri Jan  9 22:03:28 2004
Subject: [mod_python] ANNOUNCE: Mod_Python donated to ASF
Message-ID: <20020912224521.7047.qmail@email.com>

Congrats!

This can only be seen as a Good Thing

-jack
-- 
__________________________________________________________
Sign-up for your own FREE Personalized E-mail at Mail.com
http://www.mail.com/?sr=signup


From vmilitaru at sympatico.ca  Thu Sep 12 22:11:22 2002
From: vmilitaru at sympatico.ca (vio)
Date: Fri Jan  9 22:03:28 2004
Subject: [mod_python] ANNOUNCE: Mod_Python donated to ASF
In-Reply-To: <Pine.BSF.4.32.0209121812020.92256-100000@eden.ispol.com>; from grisha@modpython.org on Thu, Sep 12, 2002 at 06:25:45PM -0400
References: <Pine.BSF.4.32.0209121812020.92256-100000@eden.ispol.com>
Message-ID: <20020912221122.A1410@eye.neb>

Congrats to Gregory for this 'official' recognition for the great work he did
with mod_python. And thank you to the apache board for recognising the need
for an 'official' python effort in such an open way. Let's face it, there is no
better place for an apache module to live but close to apache (httpd)'s place.
Certainly the most intuitive place from a user's perspective. And this official
blessing brings the additional advantage to cut through the confusion: there
are not 10 'official' python' flavored apaches for a newcomer to choose from.
(enough headaches just installing the beast and learning it)

Regards,
Vio

* Gregory (Grisha) Trubetskoy <grisha@modpython.org> [020912 20:57]:
> 
> It is my pleasure to announce that Mod_Python has been donated to the
> Apache Software Foundation, and is now a subproject of the httpd server
> project (see http://httpd.apache.org/).
> 
> I am grateful to ASF for accepting this donation and committing resources
> to further the support of Mod_Python. I believe that this action will
> advance the development of Mod_Python, resulting in an ultimately better
> and more popular tool for Python developers. I also believe it will serve
> to better position Python as a language of choice for web development, a
> need that has been expressed by many.
> 
> There are no implications to the current Mod_Python users - the license is
> the same with the sole difference in that the copyright belongs to ASF
> now.
> 
> As a consequense of the donation, the CVS repository is now hosted on
> cvs.apache.org.  Do not use the SourceForge repository anymore, it will
> soon be removed.
> 
> There will also be website and mailing changes, but the details are still
> being finalized and will be announced when ready.
> 
> Regards,
> 
> Grisha Trubetskoy
> 
> 
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://www.modpython.org/mailman/listinfo/mod_python

From neel at mediapulse.com  Fri Sep 13 00:40:32 2002
From: neel at mediapulse.com (Michael Neel)
Date: Fri Jan  9 22:03:28 2004
Subject: [mod_python] Mod_Python 3 / Apache 2 / RedHat 7.3 / Python 2.2 = Seg fault :(
Message-ID: <000001c25adf$b2039020$0400a8c0@clapton>

I'm having a bit of trouble trying to get mod_python beta 3 to run on
apache 2.  I get a line like:

[Thu Sep 12 23:31:21 2002] [notice] child pid 3768 exit signal
Segmentation fault (11)

Whenever I load mod_python no matter what page I hit, .py or otherwise.
I'm running RH 7.3 and I've copied the python2.2 binary over the python
one so I have python2.2 as default so this could be related to a path
issue of lib's but I'll be damned if I can find it.

My compile options for apache were basic; --with-mpm=worker and
--enable-mods-shared=all.  Mod_python I just past in the path to apxs.
I didn't see anything about beta 3 not working with worker threads (the
way I'd prefer apache to run), but I've tried prefork as well with the
same results.

Any tips or ideas would help greatly.  I've looked though the list
archives and couldn't find anything, but to be stuck at this small of a
step means I've overlooked something basic...

Mike

--
Michael C. Neel
There are only 10 types of people in the world;
those who understand binary and those who don't.


From fabbe at paniq.net  Fri Sep 13 10:02:55 2002
From: fabbe at paniq.net (Fabian Fagerholm)
Date: Fri Jan  9 22:03:28 2004
Subject: [mod_python] ANNOUNCE: Mod_Python donated to ASF
In-Reply-To: <Pine.BSF.4.32.0209121812020.92256-100000@eden.ispol.com>
References: <Pine.BSF.4.32.0209121812020.92256-100000@eden.ispol.com>
Message-ID: <1031900581.6954.103.camel@kernel>

On Fri, 2002-09-13 at 01:25, Gregory (Grisha) Trubetskoy wrote:
> It is my pleasure to announce that Mod_Python has been donated to the
> Apache Software Foundation, and is now a subproject of the httpd server
> project (see http://httpd.apache.org/).

My congratulations to you Grisha for pulling this off - I think this
will be a good thing for the Python language in general and mod_python
users in particular. Not to mention the benefits that Apache users will
probably see.

Cheers,
Fabian

-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 240 bytes
Desc: This is a digitally signed message part
Url : http://mailman.modpython.org/pipermail/mod_python/attachments/20020913/ac1bf2c8/attachment-0003.bin
From jfk at metation.com  Fri Sep 13 09:31:30 2002
From: jfk at metation.com (=?iso-8859-1?q?J=F8rgen=20Fr=F8jk=20Kj=E6rsgaard=20{Metation}?=)
Date: Fri Jan  9 22:03:28 2004
Subject: [mod_python] ANNOUNCE: Mod_Python donated to ASF
In-Reply-To: <Pine.BSF.4.32.0209121812020.92256-100000@eden.ispol.com>
References: <Pine.BSF.4.32.0209121812020.92256-100000@eden.ispol.com>
Message-ID: <0209130931300R.00311@grace.metation.com>

Congratulatiuons!

I think this is a great step forward for Python as a web language and 
mod_python in particular. mod_python really deserves the exposure it can get 
through apache.org.

/jfk

From mbp at samba.org  Fri Sep 13 18:10:42 2002
From: mbp at samba.org (Martin Pool)
Date: Fri Jan  9 22:03:28 2004
Subject: [mod_python] Mod_Python 3 / Apache 2 / RedHat 7.3 / Python 2.2 = Seg fault :(
In-Reply-To: <000001c25adf$b2039020$0400a8c0@clapton>
References: <000001c25adf$b2039020$0400a8c0@clapton>
Message-ID: <20020913081040.GI8093@samba.org>

On 13 Sep 2002, Michael Neel <neel@mediapulse.com> wrote:
> I'm having a bit of trouble trying to get mod_python beta 3 to run on
> apache 2.  I get a line like:
> 
> [Thu Sep 12 23:31:21 2002] [notice] child pid 3768 exit signal
> Segmentation fault (11)
> 
> Whenever I load mod_python no matter what page I hit, .py or otherwise.
> I'm running RH 7.3 and I've copied the python2.2 binary over the python
> one so I have python2.2 as default so this could be related to a path
> issue of lib's but I'll be damned if I can find it.
> 
> My compile options for apache were basic; --with-mpm=worker and
> I didn't see anything about beta 3 not working with worker threads (the
> way I'd prefer apache to run), but I've tried prefork as well with the
> same results.
> 
> Any tips or ideas would help greatly.  I've looked though the list
> archives and couldn't find anything, but to be stuck at this small of a
> step means I've overlooked something basic...

Try running apache under gdb?  Something like this:

  # gdb /usr/sbin/apache2
  [blah blah]
  gdb> run -X

Then try to access a page.  Apache should stop in gdb, and it might
tell you where the problem is.

-- 
Martin 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
Url : http://mailman.modpython.org/pipermail/mod_python/attachments/20020913/284089f0/attachment-0003.bin
From list-mod_python at empires.org  Fri Sep 13 01:36:58 2002
From: list-mod_python at empires.org (Jeff Davis)
Date: Fri Jan  9 22:03:28 2004
Subject: [mod_python] Segfault for me as well
In-Reply-To: <000001c25adf$b2039020$0400a8c0@clapton>
References: <000001c25adf$b2039020$0400a8c0@clapton>
Message-ID: <200209130136.58171.list-mod_python@empires.org>

I have the same segfault problem that someone else mentioned earlier. I am on 
debian unstable, and have the current package for apache2 installed 
(mpm-prefork), and I built it with:

./configure --with-apxs=/usr/bin/apxs2
make dso
make install

However, I had to set the variable "PYTHONBIN" in the Makefile, it wasn't set 
up for me automatically. I think that is just a minor problem with the build 
system on my platform. I couldn't find anything in the configure script to 
suggest that it was trying to set that variable.

Anyway, after I did get it built it simply segfaulted every time that I 
accessed the server. 

I know a little C, so I will look into this a little. If I have time I will 
try to deal with both of these issues (the build issue and the segfault). 

By the way, is this list the proper development forum? I don't see a lot of 
development discussion here.

Regards,
	Jeff

On Thursday 12 September 2002 09:40 pm, Michael Neel wrote:
> I'm having a bit of trouble trying to get mod_python beta 3 to run on
> apache 2.  I get a line like:
>
> [Thu Sep 12 23:31:21 2002] [notice] child pid 3768 exit signal
> Segmentation fault (11)
>
> Whenever I load mod_python no matter what page I hit, .py or otherwise.
> I'm running RH 7.3 and I've copied the python2.2 binary over the python
> one so I have python2.2 as default so this could be related to a path
> issue of lib's but I'll be damned if I can find it.
>
> My compile options for apache were basic; --with-mpm=worker and
> --enable-mods-shared=all.  Mod_python I just past in the path to apxs.
> I didn't see anything about beta 3 not working with worker threads (the
> way I'd prefer apache to run), but I've tried prefork as well with the
> same results.
>
> Any tips or ideas would help greatly.  I've looked though the list
> archives and couldn't find anything, but to be stuck at this small of a
> step means I've overlooked something basic...
>
> Mike


From list-mod_python at empires.org  Fri Sep 13 02:03:37 2002
From: list-mod_python at empires.org (Jeff Davis)
Date: Fri Jan  9 22:03:28 2004
Subject: [mod_python] patch for build
Message-ID: <200209130203.37120.list-mod_python@empires.org>

I mentioned a problem with the build on my system, wherein the PYTHONBIN 
variable was not being defined in the Makefile. Here is a simple patch to 
Makefile.in (from the old to the new) that just adds the PYTHONBIN variable 
(and sets it to the PYTHON_BIN variable of the configure script).

I am not too familiar with build systems, so forgive me if I'm way off track 
about how to change these things. Or, maybe I just wasn't building it 
properly in the first place and it was working the whole time.

Regards,
	Jeff

--- Makefile.in~	2002-08-11 19:01:15.000000000 -0700
+++ Makefile.in	2002-09-13 01:56:50.000000000 -0700
@@ -50,6 +50,7 @@
 AP_SRC_GRP=@AP_SRC_GRP@
 INSTALL=@INSTALL@
 PY_STD_LIB=@PY_STD_LIB@
+PYTHONBIN=@PYTHON_BIN@
 
 all: @ALL@
 


From vmanera at manord.com  Fri Sep 13 11:05:25 2002
From: vmanera at manord.com (Manera, Villiam)
Date: Fri Jan  9 22:03:28 2004
Subject: R: [mod_python] How to upload files using mod_python's publisher 
	handler?
Message-ID: <52DC70C1C1575C418CB033523A29CF140E0483@exchange2000.manord.com>

try this: 

 publisher.py patched with this function work fine!!!!

class File:

""" Like a file, but also has headers and filename

"""

def __init__(self, field):

# steal all the file-like methods

#for m in field.file.__methods__:

#for m in dir(field.file): #dont' work

for m in self.sim_methods(field.file):

self.__dict__[m] = getattr(field.file, m)

self.headers = field.headers

self.filename = field.filename

def sim_methods(self,obj):

from types import BuiltinMethodType #parte aggiunta

return filter(lambda s, t=obj:

type(getattr(t, s)) == BuiltinMethodType, dir(obj))

 

 

Villiam

-----Messaggio originale-----
Da: Andres Meza [mailto:andres.meza@nuevosmedios.ws]
Inviato: gioved? 12 settembre 2002 20.21
A: mod_python@modpython.org
Oggetto: [mod_python] How to upload files using mod_python's publisher
handler?


Greetings. 

I have created a python CGI script that can upload files sucessfully. Now, I
want to create a mod_python script with the same feature using the
"publisher" handler and I get this error:   


[Thu Sep 12 08:53:41 2002] [error] PythonHandler mod_python.publisher:
Traceback (most recent call last): 
[Thu Sep 12 08:53:41 2002] [error] PythonHandler mod_python.publisher:
File
"/home/mrnet/rpm/tmp/mod_python-root/usr/lib/python2.2/site-packages/mod_pyt
hon/apache.py", line 193, in Dispatch 
[Thu Sep 12 08:53:41 2002] [error] PythonHandler mod_python.publisher:
File
"/home/mrnet/rpm/tmp/mod_python-root/usr/lib/python2.2/site-packages/mod_pyt
hon/publisher.py", line 104, in handler 
[Thu Sep 12 08:53:41 2002] [error] PythonHandler mod_python.publisher:
File
"/home/mrnet/rpm/tmp/mod_python-root/usr/lib/python2.2/site-packages/mod_pyt
hon/publisher.py", line 308, in __init__ 
[Thu Sep 12 08:53:41 2002] [error] PythonHandler mod_python.publisher:
AttributeError: 'file' object has no attribute '__methods__' 

Anyone have an idea about why I get this error? 

Thanks for your time, 

-- 

   Andr?s Meza

   Technical Manager

 __Nuevos Medios - NM S.A.____________________

   e-mail:         andres.meza@nuevosmedios.ws

   day time phone: (+572)6827794 ext.102

   url:            www.nuevosmedios.ws

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mailman.modpython.org/pipermail/mod_python/attachments/20020913/3e8fc6ec/attachment-0003.htm
From list-mod_python at empires.org  Fri Sep 13 02:34:23 2002
From: list-mod_python at empires.org (Jeff Davis)
Date: Fri Jan  9 22:03:28 2004
Subject: [mod_python] Mod_Python 3 / Apache 2 / RedHat 7.3 / Python 2.2 = Seg fault :(
In-Reply-To: <20020913081040.GI8093@samba.org>
References: <000001c25adf$b2039020$0400a8c0@clapton> <20020913081040.GI8093@samba.org>
Message-ID: <200209130234.23802.list-mod_python@empires.org>

> Try running apache under gdb?  Something like this:
>
>   # gdb /usr/sbin/apache2
>   [blah blah]
>   gdb> run -X
>
> Then try to access a page.  Apache should stop in gdb, and it might
> tell you where the problem is.

I tried both gdb and valgrind and supplied the -X argument for each. When I 
hit a page, all it said was "Segmentation Fault" (for valgrind, and gdb was 
similar: "Program received signal SIGSEGV, Segmentation fault."). GDB also 
said "0x402611bb in strlen () from /lib/libc.so.6" after the SIGSEGV, which 
might be helpful. 

Is there something I should be doing differently? I am not really good with 
debuggers.

Valgrind also produced a couple mutex errors for my apache2 even without 
loading mod_python, so it could, I suppose, be a problem with apache2 
(however apache2 seems to function just fine for static pages & cgi).

Regards,
	Jeff

From mbp at samba.org  Fri Sep 13 19:47:21 2002
From: mbp at samba.org (Martin Pool)
Date: Fri Jan  9 22:03:28 2004
Subject: [mod_python] Mod_Python 3 / Apache 2 / RedHat 7.3 / Python 2.2 = Seg fault :(
In-Reply-To: <200209130234.23802.list-mod_python@empires.org>
References: <000001c25adf$b2039020$0400a8c0@clapton> <20020913081040.GI8093@samba.org> <200209130234.23802.list-mod_python@empires.org>
Message-ID: <20020913094720.GL8093@samba.org>

On 13 Sep 2002, Jeff Davis <list-mod_python@empires.org> wrote:
> > Try running apache under gdb?  Something like this:
> >
> >   # gdb /usr/sbin/apache2
> >   [blah blah]
> >   gdb> run -X
> >
> > Then try to access a page.  Apache should stop in gdb, and it might
> > tell you where the problem is.
> 
> I tried both gdb and valgrind and supplied the -X argument for each. When I 
> hit a page, all it said was "Segmentation Fault" (for valgrind, and gdb was 
> similar: "Program received signal SIGSEGV, Segmentation fault."). GDB also 
> said "0x402611bb in strlen () from /lib/libc.so.6" after the SIGSEGV, which 
> might be helpful. 

OK, good.  Now once you get to that point, type 

  gdb> backtrace full

to get some info on where the call to strlen() that caused trouble
came from.  

-- 
Martin 

From neel at mediapulse.com  Fri Sep 13 11:12:55 2002
From: neel at mediapulse.com (Michael C. Neel)
Date: Fri Jan  9 22:03:28 2004
Subject: [mod_python] Mod_Python 3 / Apache 2 / RedHat 7.3 / Python 2.2 = Seg fault :(
Message-ID: <C0FC22C08B82074A88B50061764157775BA8@johnson.mediapulse.net>

I take it you are having a similar problem?

I'm not able to get gdb to run on apache2; it runs but I cannot connect
to it.  I'm not really familiar with gdb, so I'm not sure what I have to
do to get it to run.

I'm trying out compiling mod_python with different arguments to see if
anything fixes it.  It might also be python 2.2, I need to upgrade to
2.2.1 and see where that leads.

Mike
--
Michael C. Neel
There are only 10 types of people in the world;
those who understand binary and those who don't.

-----Original Message-----
From: Martin Pool [mailto:mbp@samba.org] 
Sent: Friday, September 13, 2002 5:47 AM
To: Jeff Davis
Cc: Michael C. Neel; mod_python@modpython.org
Subject: Re: [mod_python] Mod_Python 3 / Apache 2 / RedHat 7.3 / Python
2.2 = Seg fault :(


On 13 Sep 2002, Jeff Davis <list-mod_python@empires.org> wrote:
> > Try running apache under gdb?  Something like this:
> >
> >   # gdb /usr/sbin/apache2
> >   [blah blah]
> >   gdb> run -X
> >
> > Then try to access a page.  Apache should stop in gdb, and it might
> > tell you where the problem is.
> 
> I tried both gdb and valgrind and supplied the -X argument for each.
When I 
> hit a page, all it said was "Segmentation Fault" (for valgrind, and
gdb was 
> similar: "Program received signal SIGSEGV, Segmentation fault."). GDB
also 
> said "0x402611bb in strlen () from /lib/libc.so.6" after the SIGSEGV,
which 
> might be helpful. 

OK, good.  Now once you get to that point, type 

  gdb> backtrace full

to get some info on where the call to strlen() that caused trouble
came from.  

-- 
Martin 


From andres.meza at nuevosmedios.ws  Fri Sep 13 10:52:44 2002
From: andres.meza at nuevosmedios.ws (Andres Meza)
Date: Fri Jan  9 22:03:28 2004
Subject: R: [mod_python] How to upload files using mod_python's	publisher
 handler?
In-Reply-To: <52DC70C1C1575C418CB033523A29CF140E0483@exchange2000.manord.com>
References: <52DC70C1C1575C418CB033523A29CF140E0483@exchange2000.manord.com>
Message-ID: <1031932364.2958.15.camel@coraje>

It works quite well!

Thanks a lot for your patch. Do you know if this bug-fix or the
equivalent one will be included in future versions of mod_python ?

Best regards,
-- 
   Andr?s Meza
   Technical Manager
 __Nuevos Medios - NM S.A.____________________
   e-mail:         andres.meza@nuevosmedios.ws
   day time phone: (+572)6827794 ext.102
   url:            www.nuevosmedios.ws

El vie, 13-09-2002 a las 04:05, Manera, Villiam escribi?:

    try this: 
    
     publisher.py patched with this function work fine!!!!
    
    class File:
    
    """ Like a file, but also has headers and filename
    
    """
    
    def __init__(self, field):
    
    # steal all the file-like methods
    
    #for m in field.file.__methods__:
    
    #for m in dir(field.file): #dont' work
    
    for m in self.sim_methods(field.file):
    
    self.__dict__[m] = getattr(field.file, m)
    
    self.headers = field.headers
    
    self.filename = field.filename
    
    def sim_methods(self,obj):
    
    from types import BuiltinMethodType #parte aggiunta
    
    return filter(lambda s, t=obj:
    
    type(getattr(t, s)) == BuiltinMethodType, dir(obj))
    
     
    
     
    
    Villiam

        -----Messaggio originale-----
        Da: Andres Meza [mailto:andres.meza@nuevosmedios.ws]
        Inviato: gioved? 12 settembre 2002 20.21
        A: mod_python@modpython.org
        Oggetto: [mod_python] How to upload files using mod_python's
        publisher handler?
        
        
        Greetings. 
        
        I have created a python CGI script that can upload files
        sucessfully. Now, I want to create a mod_python script with the
        same feature using the "publisher" handler and I get this
        error:   
        
        
        [Thu Sep 12 08:53:41 2002] [error] PythonHandler
        mod_python.publisher: Traceback (most recent call last): 
        [Thu Sep 12 08:53:41 2002] [error] PythonHandler
        mod_python.publisher:   File
        "/home/mrnet/rpm/tmp/mod_python-root/usr/lib/python2.2/site-packages/mod_python/apache.py", line 193, in Dispatch 
        [Thu Sep 12 08:53:41 2002] [error] PythonHandler
        mod_python.publisher:   File
        "/home/mrnet/rpm/tmp/mod_python-root/usr/lib/python2.2/site-packages/mod_python/publisher.py", line 104, in handler 
        [Thu Sep 12 08:53:41 2002] [error] PythonHandler
        mod_python.publisher:   File
        "/home/mrnet/rpm/tmp/mod_python-root/usr/lib/python2.2/site-packages/mod_python/publisher.py", line 308, in __init__ 
        [Thu Sep 12 08:53:41 2002] [error] PythonHandler
        mod_python.publisher: AttributeError: 'file' object has no
        attribute '__methods__' 
        
        Anyone have an idea about why I get this error? 
        
        Thanks for your time, 
        -- 
           Andr?s Meza
           Technical Manager
         __Nuevos Medios - NM S.A.____________________
           e-mail:         andres.meza@nuevosmedios.ws
           day time phone: (+572)6827794 ext.102
           url:            www.nuevosmedios.ws


-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mailman.modpython.org/pipermail/mod_python/attachments/20020913/d5b46a96/attachment-0003.htm
From bryan at eevolved.com  Fri Sep 13 16:04:02 2002
From: bryan at eevolved.com (Bryan Mongeau)
Date: Fri Jan  9 22:03:28 2004
Subject: [mod_python] Mod_python 3.0 BETA / Apache2 segfault
Message-ID: <200209131604.02633.bryan@eevolved.com>

Hello,

I have tested out the 3.0 BETA with apache 2 and discovered a segfault.

$ gdb ./httpd
GNU gdb 5.2.1
(gdb) run -X
Starting program: /usr/local/apache2/bin/httpd -X

Program received signal SIGSEGV, Segmentation fault.
0x400e8eef in apr_pstrcat (a=0x81d7fe8) at apr_strings.c:175
175             apr_size_t cplen = strlen(cp);
(gdb) bt
#0  0x400e8eef in apr_pstrcat (a=0x81d7fe8) at apr_strings.c:175
#1  0x402ed68d in python_handler (req=0x81d8020, phase=0x40369247 
"PythonTransHandler")
    at mod_python.c:764
#2  0x402eea6d in PythonTransHandler (req=0x81d8020) at mod_python.c:1687
#3  0x0808cd48 in ap_run_translate_name (r=0x81d8020) at request.c:108
#4  0x0808d5ec in ap_process_request_internal (r=0x81d8020) at request.c:167
#5  0x08069e02 in ap_process_request (r=0x81d8020) at http_request.c:255
#6  0x08065dab in ap_process_http_connection (c=0x81d40e0) at http_core.c:293
#7  0x080831c8 in ap_run_process_connection (c=0x81d40e0) at connection.c:85
#8  0x0808346f in ap_process_connection (c=0x81d40e0, csd=0x81d4010) at 
connection.c:207
#9  0x08078cc2 in child_main (child_num_arg=0) at prefork.c:696
#10 0x08078d80 in make_child (s=0x80b5378, slot=0) at prefork.c:736
#11 0x08078e71 in startup_children (number_to_start=5) at prefork.c:808
#12 0x0807917d in ap_mpm_run (_pconf=0x80b2cb0, plog=0x80ead90, s=0x80b5378) 
at prefork.c:1024
#13 0x0807e67c in main (argc=2, argv=0xbffff934) at main.c:645
#14 0x401933c1 in __libc_start_main () from /lib/libc.so.6


FIX: Comment out lines 764-767 and 770 of mod_python.c. Seems to compile and 
run fine. Impact on functionality unknown.

Please advise,
-- 
Bryan Mongeau
eEvolved Inc. - IT Consulting & Custom Software
http://eevolved.com/
--
"The hardest thing in the world to understand is the income tax."-- Einstein


From list-mod_python at empires.org  Fri Sep 13 14:00:16 2002
From: list-mod_python at empires.org (Jeff Davis)
Date: Fri Jan  9 22:03:28 2004
Subject: [mod_python] Mod_python 3.0 BETA / Apache2 segfault
In-Reply-To: <200209131604.02633.bryan@eevolved.com>
References: <200209131604.02633.bryan@eevolved.com>
Message-ID: <200209131400.16448.list-mod_python@empires.org>

Thanks!

For those who don't want to find those lines in the file, a patch is included 
below this message.

I don't know what the impact of that is either. I hope it's good :)

Regards,
	Jeff


On Friday 13 September 2002 09:04 am, Bryan Mongeau wrote:
> Hello,
>
> I have tested out the 3.0 BETA with apache 2 and discovered a segfault.
>
> $ gdb ./httpd
> GNU gdb 5.2.1
> (gdb) run -X
> Starting program: /usr/local/apache2/bin/httpd -X
>
> Program received signal SIGSEGV, Segmentation fault.
> 0x400e8eef in apr_pstrcat (a=0x81d7fe8) at apr_strings.c:175
> 175             apr_size_t cplen = strlen(cp);
> (gdb) bt
> #0  0x400e8eef in apr_pstrcat (a=0x81d7fe8) at apr_strings.c:175
> #1  0x402ed68d in python_handler (req=0x81d8020, phase=0x40369247
> "PythonTransHandler")
>     at mod_python.c:764
> #2  0x402eea6d in PythonTransHandler (req=0x81d8020) at mod_python.c:1687
> #3  0x0808cd48 in ap_run_translate_name (r=0x81d8020) at request.c:108
> #4  0x0808d5ec in ap_process_request_internal (r=0x81d8020) at
> request.c:167 #5  0x08069e02 in ap_process_request (r=0x81d8020) at
> http_request.c:255 #6  0x08065dab in ap_process_http_connection
> (c=0x81d40e0) at http_core.c:293 #7  0x080831c8 in
> ap_run_process_connection (c=0x81d40e0) at connection.c:85 #8  0x0808346f
> in ap_process_connection (c=0x81d40e0, csd=0x81d4010) at connection.c:207
> #9  0x08078cc2 in child_main (child_num_arg=0) at prefork.c:696
> #10 0x08078d80 in make_child (s=0x80b5378, slot=0) at prefork.c:736
> #11 0x08078e71 in startup_children (number_to_start=5) at prefork.c:808
> #12 0x0807917d in ap_mpm_run (_pconf=0x80b2cb0, plog=0x80ead90,
> s=0x80b5378) at prefork.c:1024
> #13 0x0807e67c in main (argc=2, argv=0xbffff934) at main.c:645
> #14 0x401933c1 in __libc_start_main () from /lib/libc.so.6
>
>
> FIX: Comment out lines 764-767 and 770 of mod_python.c. Seems to compile
> and run fine. Impact on functionality unknown.
>



--- mod_python.c.old	2002-09-13 13:51:09.000000000 -0700
+++ mod_python.c	2002-09-13 13:51:38.000000000 -0700
@@ -759,15 +759,7 @@
             ext = apr_pstrcat(req->pool, ".", ext, NULL);
     }
 
-    /* is there an hlist entry, i.e. a handler? */
-    /* try with extension */
-    hle = (hl_entry *)apr_hash_get(conf->hlists, 
-                                   apr_pstrcat(req->pool, phase, ext, NULL),
-                                   APR_HASH_KEY_STRING);
-    if (!hle) {
-        /* try without extension */
         hle = (hl_entry *)apr_hash_get(conf->hlists, phase, 
APR_HASH_KEY_STRING);
-    }
     
     req_conf = (py_req_config *) ap_get_module_config(req->request_config,
                                                       &python_module);





From bryan at eevolved.com  Fri Sep 13 17:11:22 2002
From: bryan at eevolved.com (Bryan Mongeau)
Date: Fri Jan  9 22:03:28 2004
Subject: [mod_python] Mod_python and Sub-Interpreter segregation
Message-ID: <200209131711.22854.bryan@eevolved.com>

Greetings,

I've been playing around with mod_python and have noticed a peculiar behaviour 
that perhaps someone could explain to me.  As the mod_python documentation 
explains, a sub-interpreter is created for each virtual host (default).  I 
therefore expected global variables within this sub-interpreter to be able to 
maintain state between hits.  I created a simple script ( included below ) to 
observe this behaviour by counting hits in a global variable and printing the 
interpreter name.

To my surprise, it seems as if different apache child processes run their 
python code in different sub-interpreters even though the interpreter name 
remains the same ( virtualhost ). I produced this behaviour by loading the 
script in my browser and refreshing (very) rapidly. What happens is the hit 
counter eventually returns to zero, meaning that the global variable is no 
longer in the namespace. Repeated refreshing causes the hit counter to jump 
all over the place as I presume it jumps from one apache child process to 
another, each having their own sub-interpreters and global variables.

It seems as if each child process has its own sub-interpreter? Or am I 
confused? Was this documented? Enlightenment is greatly appreciated. 
Unfortunately the behaviour I am observing is undesired.

Here is the code to demonstrate:

from mod_python import apache
def handler(req):
    try:
        globals()['hits']+=1
    except KeyError:
        globals()['hits'] = 0
    req.write("interpreter_name=" + req.interpreter )
    req.write(" - hits: " + str(globals()['hits']))
    return apache.OK
-- 
Bryan Mongeau
eEvolved Inc. - IT Consulting & Custom Software
http://eevolved.com/
--
"The true function of life, that which is being maximized in the natural 
world, is DNA survival. But DNA is not floating free; it is locked up in 
living bodies and it has made the most of the levers of power at its 
disposal." -- Richard Dawkins


From brianh at exelixis.com  Fri Sep 13 14:28:37 2002
From: brianh at exelixis.com (Brian Hawthorne)
Date: Fri Jan  9 22:03:28 2004
Subject: [mod_python] Mod_python and Sub-Interpreter segregation
In-Reply-To: <200209131711.22854.bryan@eevolved.com>
Message-ID: <Pine.GSO.4.05.10209131423360.8716-100000@timeless.exelixis.com>

unfortunately, there is no way to share global data among multiple
apache child processes without using an external database of some sort.
this is true regardless of how many interpreters you have in each child
proc.  i anticipate that the multithreaded server model available in
apache2 will address this issue, though i haven't gotten my hands dirty
yet trying to set up modpy3 alpha with apache2.

brian hawthorne
-bioinformatics,
Exelixis, Inc.


On Fri, 13 Sep 2002, Bryan Mongeau wrote:

> Greetings,
> 
> I've been playing around with mod_python and have noticed a peculiar behaviour 
> that perhaps someone could explain to me.  As the mod_python documentation 
> explains, a sub-interpreter is created for each virtual host (default).  I 
> therefore expected global variables within this sub-interpreter to be able to 
> maintain state between hits.  I created a simple script ( included below ) to 
> observe this behaviour by counting hits in a global variable and printing the 
> interpreter name.
> 
> To my surprise, it seems as if different apache child processes run their 
> python code in different sub-interpreters even though the interpreter name 
> remains the same ( virtualhost ). I produced this behaviour by loading the 
> script in my browser and refreshing (very) rapidly. What happens is the hit 
> counter eventually returns to zero, meaning that the global variable is no 
> longer in the namespace. Repeated refreshing causes the hit counter to jump 
> all over the place as I presume it jumps from one apache child process to 
> another, each having their own sub-interpreters and global variables.
> 
> It seems as if each child process has its own sub-interpreter? Or am I 
> confused? Was this documented? Enlightenment is greatly appreciated. 
> Unfortunately the behaviour I am observing is undesired.
> 
> Here is the code to demonstrate:
> 
> from mod_python import apache
> def handler(req):
>     try:
>         globals()['hits']+=1
>     except KeyError:
>         globals()['hits'] = 0
>     req.write("interpreter_name=" + req.interpreter )
>     req.write(" - hits: " + str(globals()['hits']))
>     return apache.OK
> -- 
> Bryan Mongeau
> eEvolved Inc. - IT Consulting & Custom Software
> http://eevolved.com/
> --
> "The true function of life, that which is being maximized in the natural 
> world, is DNA survival. But DNA is not floating free; it is locked up in 
> living bodies and it has made the most of the levers of power at its 
> disposal." -- Richard Dawkins
> 
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://www.modpython.org/mailman/listinfo/mod_python
> 


From list-mod_python at empires.org  Fri Sep 13 14:36:39 2002
From: list-mod_python at empires.org (Jeff Davis)
Date: Fri Jan  9 22:03:28 2004
Subject: [mod_python] more info about the segfault bug
Message-ID: <200209131436.39544.list-mod_python@empires.org>

Patch below. That variable "ext" is not being initialized appearently (in the 
function python_handler in mod_python.c). So I suppose it's not passing the 
"if(req->filename)" test, and so the call to apr_pstrcat just passes garbage 
("ext") to the function. Perhaps we need an "else" safety clause, or 
something? I don't really know what's supposed to be happening there, but if 
someone does maybe this will help them find the problem.

I will continue to look into the problem, but I'm not all that familiar with 
writing apache modules.


Regards,
	Jeff

Note: patch is from distributed version to me new one. Disregard my previous 
patch, which implemented Bryan Mongeau's solution.

--- mod_python.c.old	2002-09-13 13:51:09.000000000 -0700
+++ mod_python.c	2002-09-13 14:28:47.000000000 -0700
@@ -742,7 +742,7 @@
     int result;
     const char * interpreter = NULL;
     PyThreadState *tstate;
-    const char *ext;
+    char *ext = NULL;
     hl_entry *hle = NULL;
     hl_entry *dynhle = NULL;
 


From neel at mediapulse.com  Fri Sep 13 17:40:42 2002
From: neel at mediapulse.com (Michael C. Neel)
Date: Fri Jan  9 22:03:28 2004
Subject: [mod_python] Mod_python and Sub-Interpreter segregation
Message-ID: <C0FC22C08B82074A88B50061764157775BAA@johnson.mediapulse.net>

I don't think this will work in apache2 either, based on my limited
experience.

Apache2 threaded still has separate processes (children) along with
threads.  You can either have a fixed number of processes, and let the
threads grow and shrink, or have a fixed number of threads per process
and add more processes as needed.

While this will help with resource pooling, you'll still need an outside
database to have a global variable.  Now with apache2's cgid (a process
to handle all cgi scripts since forking a 75 thread apache child would
be, um, bad) there might be something you can do there, but then that
means you app is a CGI and we don't use that word in 2002 anymore...

Mike 

--
Michael C. Neel
There are only 10 types of people in the world;
those who understand binary and those who don't.


-----Original Message-----
From: Brian Hawthorne [mailto:brianh@exelixis.com] 
Sent: Friday, September 13, 2002 5:29 PM
To: Bryan Mongeau
Cc: mod_python@modpython.org
Subject: Re: [mod_python] Mod_python and Sub-Interpreter segregation


unfortunately, there is no way to share global data among multiple
apache child processes without using an external database of some sort.
this is true regardless of how many interpreters you have in each child
proc.  i anticipate that the multithreaded server model available in
apache2 will address this issue, though i haven't gotten my hands dirty
yet trying to set up modpy3 alpha with apache2.

brian hawthorne
-bioinformatics,
Exelixis, Inc.


On Fri, 13 Sep 2002, Bryan Mongeau wrote:

> Greetings,
> 
> I've been playing around with mod_python and have noticed a peculiar
behaviour 
> that perhaps someone could explain to me.  As the mod_python
documentation 
> explains, a sub-interpreter is created for each virtual host
(default).  I 
> therefore expected global variables within this sub-interpreter to be
able to 
> maintain state between hits.  I created a simple script ( included
below ) to 
> observe this behaviour by counting hits in a global variable and
printing the 
> interpreter name.
> 
> To my surprise, it seems as if different apache child processes run
their 
> python code in different sub-interpreters even though the interpreter
name 
> remains the same ( virtualhost ). I produced this behaviour by loading
the 
> script in my browser and refreshing (very) rapidly. What happens is
the hit 
> counter eventually returns to zero, meaning that the global variable
is no 
> longer in the namespace. Repeated refreshing causes the hit counter to
jump 
> all over the place as I presume it jumps from one apache child process
to 
> another, each having their own sub-interpreters and global variables.
> 
> It seems as if each child process has its own sub-interpreter? Or am I

> confused? Was this documented? Enlightenment is greatly appreciated. 
> Unfortunately the behaviour I am observing is undesired.
> 
> Here is the code to demonstrate:
> 
> from mod_python import apache
> def handler(req):
>     try:
>         globals()['hits']+=1
>     except KeyError:
>         globals()['hits'] = 0
>     req.write("interpreter_name=" + req.interpreter )
>     req.write(" - hits: " + str(globals()['hits']))
>     return apache.OK
> -- 
> Bryan Mongeau
> eEvolved Inc. - IT Consulting & Custom Software
> http://eevolved.com/
> --
> "The true function of life, that which is being maximized in the
natural 
> world, is DNA survival. But DNA is not floating free; it is locked up
in 
> living bodies and it has made the most of the levers of power at its 
> disposal." -- Richard Dawkins
> 
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://www.modpython.org/mailman/listinfo/mod_python
> 

_______________________________________________
Mod_python mailing list
Mod_python@modpython.org
http://www.modpython.org/mailman/listinfo/mod_python


From list-mod_python at empires.org  Fri Sep 13 14:48:57 2002
From: list-mod_python at empires.org (Jeff Davis)
Date: Fri Jan  9 22:03:28 2004
Subject: [mod_python] Mod_python and Sub-Interpreter segregation
In-Reply-To: <200209131711.22854.bryan@eevolved.com>
References: <200209131711.22854.bryan@eevolved.com>
Message-ID: <200209131448.57166.list-mod_python@empires.org>

Hi,

The only way I know of that an interpreter can be shared is if you have a 
multithreaded app.

I think that's possible because it seems to me that python does well with 
threads. That way, each request could execute in it's own interpreter 
function call, and that way they'd be separate, but allow you to share global 
variables. However, that seems like it might be a little tricky, so I am not 
sure how feasible it is. Also note that the data wouldn't survive an apache 
restart.

However, to have the one-process-many-threads per virtualhost in apache2, you 
need to use mpm perchild. That mpm isn't really stable, so you might need to 
wait a while.

You might consider a lightweigtht DB or a RAM based filesystem or something in 
the interim. Or, if you wanted a featureful database you could use postgresql 
and persistant connections and it would still operate at a pretty good speed, 
which could be a good idea if you need to use a database for your application 
anyway.

Regards,
	Jeff

On Friday 13 September 2002 10:11 am, Bryan Mongeau wrote:
> Greetings,
>
> I've been playing around with mod_python and have noticed a peculiar
> behaviour that perhaps someone could explain to me.  As the mod_python
> documentation explains, a sub-interpreter is created for each virtual host
> (default).  I therefore expected global variables within this
> sub-interpreter to be able to maintain state between hits.  I created a
> simple script ( included below ) to observe this behaviour by counting hits
> in a global variable and printing the interpreter name.
>
> To my surprise, it seems as if different apache child processes run their
> python code in different sub-interpreters even though the interpreter name
> remains the same ( virtualhost ). I produced this behaviour by loading the
> script in my browser and refreshing (very) rapidly. What happens is the hit
> counter eventually returns to zero, meaning that the global variable is no
> longer in the namespace. Repeated refreshing causes the hit counter to jump
> all over the place as I presume it jumps from one apache child process to
> another, each having their own sub-interpreters and global variables.
>
> It seems as if each child process has its own sub-interpreter? Or am I
> confused? Was this documented? Enlightenment is greatly appreciated.
> Unfortunately the behaviour I am observing is undesired.
>
> Here is the code to demonstrate:
>
> from mod_python import apache
> def handler(req):
>     try:
>         globals()['hits']+=1
>     except KeyError:
>         globals()['hits'] = 0
>     req.write("interpreter_name=" + req.interpreter )
>     req.write(" - hits: " + str(globals()['hits']))
>     return apache.OK


From brianh at exelixis.com  Fri Sep 13 14:58:33 2002
From: brianh at exelixis.com (Brian Hawthorne)
Date: Fri Jan  9 22:03:28 2004
Subject: [mod_python] Mod_python and Sub-Interpreter segregation
In-Reply-To: <C0FC22C08B82074A88B50061764157775BAA@johnson.mediapulse.net>
Message-ID: <Pine.GSO.4.05.10209131450100.8716-100000@timeless.exelixis.com>

hmmm,
currently you can share global vars if you set apache to have exactly one
child process (but to great performance detriment).  i was imagining you
could do the same in the perthread server by setting the numprocs=1 and
letting the numthreads grow/shrink (recouping the performace hit with
extra threads).

actually, it should be pretty easy to wrap a bit of code around python
shelve to turn some dbm file into a modpyglobal repository of python objs
keyed by varname.  that's what i would do if i didn't feel like dealing
with a real db.  also, if you don't use an external repository, you have
to worry about server restarts and child procs getting killed etc.

brian


On Fri, 13 Sep 2002, Michael C. Neel wrote:

> I don't think this will work in apache2 either, based on my limited
> experience.
> 
> Apache2 threaded still has separate processes (children) along with
> threads.  You can either have a fixed number of processes, and let the
> threads grow and shrink, or have a fixed number of threads per process
> and add more processes as needed.
> 
> While this will help with resource pooling, you'll still need an outside
> database to have a global variable.  Now with apache2's cgid (a process
> to handle all cgi scripts since forking a 75 thread apache child would
> be, um, bad) there might be something you can do there, but then that
> means you app is a CGI and we don't use that word in 2002 anymore...
> 
> Mike 
> 
> --
> Michael C. Neel
> There are only 10 types of people in the world;
> those who understand binary and those who don't.
> 
> 
> -----Original Message-----
> From: Brian Hawthorne [mailto:brianh@exelixis.com] 
> Sent: Friday, September 13, 2002 5:29 PM
> To: Bryan Mongeau
> Cc: mod_python@modpython.org
> Subject: Re: [mod_python] Mod_python and Sub-Interpreter segregation
> 
> 
> unfortunately, there is no way to share global data among multiple
> apache child processes without using an external database of some sort.
> this is true regardless of how many interpreters you have in each child
> proc.  i anticipate that the multithreaded server model available in
> apache2 will address this issue, though i haven't gotten my hands dirty
> yet trying to set up modpy3 alpha with apache2.
> 
> brian hawthorne
> -bioinformatics,
> Exelixis, Inc.
> 
> 
> On Fri, 13 Sep 2002, Bryan Mongeau wrote:
> 
> > Greetings,
> > 
> > I've been playing around with mod_python and have noticed a peculiar
> behaviour 
> > that perhaps someone could explain to me.  As the mod_python
> documentation 
> > explains, a sub-interpreter is created for each virtual host
> (default).  I 
> > therefore expected global variables within this sub-interpreter to be
> able to 
> > maintain state between hits.  I created a simple script ( included
> below ) to 
> > observe this behaviour by counting hits in a global variable and
> printing the 
> > interpreter name.
> > 
> > To my surprise, it seems as if different apache child processes run
> their 
> > python code in different sub-interpreters even though the interpreter
> name 
> > remains the same ( virtualhost ). I produced this behaviour by loading
> the 
> > script in my browser and refreshing (very) rapidly. What happens is
> the hit 
> > counter eventually returns to zero, meaning that the global variable
> is no 
> > longer in the namespace. Repeated refreshing causes the hit counter to
> jump 
> > all over the place as I presume it jumps from one apache child process
> to 
> > another, each having their own sub-interpreters and global variables.
> > 
> > It seems as if each child process has its own sub-interpreter? Or am I
> 
> > confused? Was this documented? Enlightenment is greatly appreciated. 
> > Unfortunately the behaviour I am observing is undesired.
> > 
> > Here is the code to demonstrate:
> > 
> > from mod_python import apache
> > def handler(req):
> >     try:
> >         globals()['hits']+=1
> >     except KeyError:
> >         globals()['hits'] = 0
> >     req.write("interpreter_name=" + req.interpreter )
> >     req.write(" - hits: " + str(globals()['hits']))
> >     return apache.OK
> > -- 
> > Bryan Mongeau
> > eEvolved Inc. - IT Consulting & Custom Software
> > http://eevolved.com/
> > --
> > "The true function of life, that which is being maximized in the
> natural 
> > world, is DNA survival. But DNA is not floating free; it is locked up
> in 
> > living bodies and it has made the most of the levers of power at its 
> > disposal." -- Richard Dawkins
> > 
> > _______________________________________________
> > Mod_python mailing list
> > Mod_python@modpython.org
> > http://www.modpython.org/mailman/listinfo/mod_python
> > 
> 
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://www.modpython.org/mailman/listinfo/mod_python
> 
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://www.modpython.org/mailman/listinfo/mod_python
> 


From list-mod_python at empires.org  Fri Sep 13 15:06:03 2002
From: list-mod_python at empires.org (Jeff Davis)
Date: Fri Jan  9 22:03:28 2004
Subject: [mod_python] Mod_Python 3 / Apache 2 / RedHat 7.3 / Python 2.2 = Seg fault :(
In-Reply-To: <20020913094720.GL8093@samba.org>
References: <000001c25adf$b2039020$0400a8c0@clapton> <200209130234.23802.list-mod_python@empires.org> <20020913094720.GL8093@samba.org>
Message-ID: <200209131506.03684.list-mod_python@empires.org>

The backtrace is below. I think that we're getting it taken care of. I 
narrowed it to an uninitialized variable (see another message I sent earlier 
with the subject: "more info about the segfault").

Thanks for letting me know how to use gdb! Couldn't have done it without gdb, 
that's for sure.

Regards,
	Jeff

#0  0x402611bb in strlen () from /lib/libc.so.6
No symbol table info available.
#1  0x4015d9b4 in apr_pstrcat () from /usr/lib/libapr.so.0
No symbol table info available.
#2  0x40350f88 in python_handler () from 
/usr/lib/apache2/modules/mod_python.so
No symbol table info available.
#3  0x40352817 in PythonPostReadRequestHandler ()
   from /usr/lib/apache2/modules/mod_python.so
No symbol table info available.
#4  0x08094f90 in ap_run_post_read_request ()
No symbol table info available.
#5  0x08093a1e in ap_read_request ()
No symbol table info available.
#6  0x0806915c in _start ()
No symbol table info available.
#7  0x0808e7c1 in ap_run_process_connection ()
No symbol table info available.
#8  0x0808ebac in ap_process_connection ()
No symbol table info available.
#9  0x08080468 in ap_graceful_stop_signalled ()
No symbol table info available.
#10 0x0808054d in ap_graceful_stop_signalled ()
No symbol table info available.
---Type <return> to continue, or q <return> to quit---
#11 0x08080684 in ap_graceful_stop_signalled ()
No symbol table info available.
#12 0x08080aa6 in ap_mpm_run ()
No symbol table info available.
#13 0x08087743 in main ()
No symbol table info available.
#14 0x402070bf in __libc_start_main () from /lib/libc.so.6
No symbol table info available.

On Friday 13 September 2002 02:47 am, Martin Pool wrote:
> On 13 Sep 2002, Jeff Davis <list-mod_python@empires.org> wrote:
> > > Try running apache under gdb?  Something like this:
> > >
> > >   # gdb /usr/sbin/apache2
> > >   [blah blah]
> > >   gdb> run -X
> > >
> > > Then try to access a page.  Apache should stop in gdb, and it might
> > > tell you where the problem is.
> >
> > I tried both gdb and valgrind and supplied the -X argument for each. When
> > I hit a page, all it said was "Segmentation Fault" (for valgrind, and gdb
> > was similar: "Program received signal SIGSEGV, Segmentation fault."). GDB
> > also said "0x402611bb in strlen () from /lib/libc.so.6" after the
> > SIGSEGV, which might be helpful.
>
> OK, good.  Now once you get to that point, type
>
>   gdb> backtrace full
>
> to get some info on where the call to strlen() that caused trouble
> came from.


From jack_diederich at email.com  Fri Sep 13 17:10:28 2002
From: jack_diederich at email.com (Jack Diederich)
Date: Fri Jan  9 22:03:28 2004
Subject: [mod_python] Mod_python and Sub-Interpreter segregation
Message-ID: <20020913221028.26023.qmail@email.com>

As others have pointed out, apache spawns multiple processes which each have their own independent memory space.

One of the 'external storage' solutions is to use shareded memory between processes.  This is supported differently on different flavors of unix.  Here is a very out of date link for a shared memory python wrapper
http://gigue.peabody.jhu.edu/~mdboom/omi/source/shm_source/shm.html

I have no idea if it still works, or if it will work on your actual server.

-jack
-- 
__________________________________________________________
Sign-up for your own FREE Personalized E-mail at Mail.com
http://www.mail.com/?sr=signup


From bryan at eevolved.com  Fri Sep 13 19:59:42 2002
From: bryan at eevolved.com (Bryan Mongeau)
Date: Fri Jan  9 22:03:29 2004
Subject: [mod_python] Mod_python and Sub-Interpreter segregation
In-Reply-To: <Pine.GSO.4.05.10209131450100.8716-100000@timeless.exelixis.com>
References: <Pine.GSO.4.05.10209131450100.8716-100000@timeless.exelixis.com>
Message-ID: <200209131959.42086.bryan@eevolved.com>

Thanks for all the great replies everyone! I appreciate it.

On September 13, 2002 09:58 pm, Brian Hawthorne wrote:
> hmmm,
> currently you can share global vars if you set apache to have exactly one
> child process (but to great performance detriment).  i was imagining you
> could do the same in the perthread server by setting the numprocs=1 and
> letting the numthreads grow/shrink (recouping the performace hit with
> extra threads).

Thanks alot for this idea! I compiled apache with the worker MPM, set 
StartServers to 1 and ThreadsPerChild to 64. The result? My shared memory hit 
counter works perfectly and clocks about 50 hits/sec on my 800 Mhz, which, 
according to my rough hand benchmarks, is actually a little faster than using 
prefork with StartServers at 5!

Seems as if my problem is solved.. at least for now, thanks!

> actually, it should be pretty easy to wrap a bit of code around python
> shelve to turn some dbm file into a modpyglobal repository of python objs
> keyed by varname.  that's what i would do if i didn't feel like dealing
> with a real db.  also, if you don't use an external repository, you have
> to worry about server restarts and child procs getting killed etc.

This is almost exactly what I have in mind :) More later,
-- 
Bryan Mongeau
eEvolved Inc. - IT Consulting & Custom Software
http://eevolved.com/
--
"Let us understand what our own selfish genes are up to, because we may then 
at least have a chance to upset their designs, something that no other 
species has ever aspired to do." -- Richard Dawkins


From grisha at ispol.com  Fri Sep 13 21:28:22 2002
From: grisha at ispol.com (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 22:03:29 2004
Subject: [mod_python] python-dev list
Message-ID: <Pine.BSF.4.32.0209132124180.8852-100000@eden.ispol.com>

Folks -

Just wanted to point out that there now exists a
python-dev@httpd.apache.org list, intended specifically for mod_python
development (i.e. the C and Python code that implements the mod_python
internals). So if you have patches or bug reports, please subscribe to
that list and post it there.

This list can then become a strictly end-user list.

Thanks,

Grisha



From peter at hawkins.emu.id.au  Sat Sep 14 11:39:17 2002
From: peter at hawkins.emu.id.au (Peter Hawkins)
Date: Fri Jan  9 22:03:29 2004
Subject: [mod_python] Segfault in 2.7.8 if encoding changed
Message-ID: <200209141139.19625.peter@hawkins.emu.id.au>

Hi...

I'm the current debian package maintainer for mod_python.

I'm hoping that someone can help me with this bug (the bugs listed 
below are identical, I think).
http://bugs.debian.org/cgi-bin/bugreport.cgi?bug=152750&repeatmerged=yes
http://bugs.debian.org/cgi-bin/bugreport.cgi?bug=135346&repeatmerged=yes

As explained in the bug logs, if you change your encoding to anything 
other than ascii in /etc/python2.1/site.py, then mod_python segfaults 
on every request. Somehow, this causes the interpreters global 
variable to be NULL when it is used in get_interpreter_data, leading 
to a segfault.

The python versions that modpython is built against (2.1, 2.2 and 
2.3a0) are all compiled with threads on linux (not really an awful 
lot I can do about that).

Backtrace (my own):
0x40280424 in PyDict_GetItemString () from 
/usr/lib/libpython2.2.so.0.0
(gdb) bt
#0  0x40280424 in PyDict_GetItemString () from 
/usr/lib/libpython2.2.so.0.0
#1  0x4022e1a6 in get_interpreter_data () from 
/usr/lib/apache/1.3/mod_python.so
#2  0x4022f0f4 in make_obcallback () from 
/usr/lib/apache/1.3/mod_python.so
#3  0x402306f0 in python_finalize () from 
/usr/lib/apache/1.3/mod_python.so
#4  0x08053a84 in ap_invoke_handler ()
#5  0x0806338c in ap_some_auth_required ()
#6  0x080633e8 in ap_process_request ()
#7  0x0805cbcb in ap_child_terminate ()
#8  0x0805cd5c in ap_child_terminate ()
#9  0x0805ce79 in ap_child_terminate ()
#10 0x0805d355 in ap_child_terminate ()
#11 0x0805da5d in main ()
#12 0x400ed0bf in __libc_start_main () from /lib/libc.so.6

From jack_diederich at email.com  Fri Sep 13 21:39:45 2002
From: jack_diederich at email.com (Jack Diederich)
Date: Fri Jan  9 22:03:29 2004
Subject: [mod_python] python-dev list
Message-ID: <20020914023948.26152.qmail@email.com>

To subscribe, send an empty email to

python-dev-subscribe@httpd.apache.org


> Just wanted to point out that there now exists a
> python-dev@httpd.apache.org list, intended specifically for mod_python
> development

> This list can then become a strictly end-user list.

wouldn't it be better from a maintenace and dont-confuse-users standpoint to have the two lists in the same place? (not the same list, but the same host).  mod_python@modpython.org could then just auto-respond with a "Look over there" message.

-jack
-- 
__________________________________________________________
Sign-up for your own FREE Personalized E-mail at Mail.com
http://www.mail.com/?sr=signup


From neel at mediapulse.com  Fri Sep 13 22:50:40 2002
From: neel at mediapulse.com (Michael Neel)
Date: Fri Jan  9 22:03:29 2004
Subject: [mod_python] more info about the segfault bug
In-Reply-To: <200209131436.39544.list-mod_python@empires.org>
Message-ID: <000501c25b99$833bbf50$0400a8c0@clapton>

Thanks Jeff, this fixed the issue for me.  I'll keep watch on this list
and the new httpd.apache.org list for an official update, and for any
word what the side effects (if any, that change looks fairly harmless on
the surface) this has.

Mike

--
Michael C. Neel
There are only 10 types of people in the world;
those who understand binary and those who don't.

-----Original Message-----
From: mod_python-admin@modpython.org
[mailto:mod_python-admin@modpython.org] On Behalf Of Jeff Davis
Sent: Friday, September 13, 2002 5:37 PM
To: mod_python@modpython.org
Subject: [mod_python] more info about the segfault bug



Patch below. That variable "ext" is not being initialized appearently
(in the 
function python_handler in mod_python.c). So I suppose it's not passing
the 
"if(req->filename)" test, and so the call to apr_pstrcat just passes
garbage 
("ext") to the function. Perhaps we need an "else" safety clause, or 
something? I don't really know what's supposed to be happening there,
but if 
someone does maybe this will help them find the problem.

I will continue to look into the problem, but I'm not all that familiar
with 
writing apache modules.


Regards,
	Jeff

Note: patch is from distributed version to me new one. Disregard my
previous 
patch, which implemented Bryan Mongeau's solution.

--- mod_python.c.old	2002-09-13 13:51:09.000000000 -0700
+++ mod_python.c	2002-09-13 14:28:47.000000000 -0700
@@ -742,7 +742,7 @@
     int result;
     const char * interpreter = NULL;
     PyThreadState *tstate;
-    const char *ext;
+    char *ext = NULL;
     hl_entry *hle = NULL;
     hl_entry *dynhle = NULL;
 

_______________________________________________
Mod_python mailing list
Mod_python@modpython.org
http://www.modpython.org/mailman/listinfo/mod_python


From grisha at modpython.org  Fri Sep 13 22:57:59 2002
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 22:03:29 2004
Subject: [mod_python] python-dev list
In-Reply-To: <20020914023948.26152.qmail@email.com>
Message-ID: <Pine.BSF.4.32.0209132255320.10141-100000@eden.ispol.com>

Yes, we just haven't figured out how to move the mod_python@modpython.org
list - ideally, we will migrate the archives and subscribtions (or at
least archives) to the new list, but since apache mailing lists are not
mailman its a bit tricky.

On Fri, 13 Sep 2002, Jack Diederich wrote:

> wouldn't it be better from a maintenace and dont-confuse-users
> standpoint to have the two lists in the same place? (not the same
> list, but the same host).  mod_python@modpython.org could then just
> auto-respond with a "Look over there" message.


From neel at mediapulse.com  Fri Sep 13 23:07:50 2002
From: neel at mediapulse.com (Michael Neel)
Date: Fri Jan  9 22:03:29 2004
Subject: [mod_python] Mod_python and Sub-Interpreter segregation
In-Reply-To: <200209131959.42086.bryan@eevolved.com>
Message-ID: <001401c25b9b$e97f0770$0400a8c0@clapton>

Thank will work great, until you hit the 65th concurrent connection, at
wich point apache will give you another child. Another thing to keep in
mind is that if one thing goes wrong in any thread, there goes your
whole server.  (just a side note, to test a web server I use the ab tool
that comes with apache; it will let you set the concurrent number of
theard to try and get at once).

I saw a python tool mentioned in another thread;
http://www.object-craft.com.au/projects/albatross/ which I'm looking at
myself right now, so I have no experience with, but after a first read
though looks very promising when used with mod_python and has several
options for saved states and should have some good choices for globals
in there.

Mike 

-----Original Message-----
From: mod_python-admin@modpython.org
[mailto:mod_python-admin@modpython.org] On Behalf Of Bryan Mongeau
Sent: Friday, September 13, 2002 4:00 PM
To: mod_python@modpython.org
Subject: Re: [mod_python] Mod_python and Sub-Interpreter segregation


Thanks for all the great replies everyone! I appreciate it.

On September 13, 2002 09:58 pm, Brian Hawthorne wrote:
> hmmm,
> currently you can share global vars if you set apache to have exactly 
> one child process (but to great performance detriment).  i was 
> imagining you could do the same in the perthread server by setting the

> numprocs=1 and letting the numthreads grow/shrink (recouping the 
> performace hit with extra threads).

Thanks alot for this idea! I compiled apache with the worker MPM, set 
StartServers to 1 and ThreadsPerChild to 64. The result? My shared
memory hit 
counter works perfectly and clocks about 50 hits/sec on my 800 Mhz,
which, 
according to my rough hand benchmarks, is actually a little faster than
using 
prefork with StartServers at 5!

Seems as if my problem is solved.. at least for now, thanks!

> actually, it should be pretty easy to wrap a bit of code around python

> shelve to turn some dbm file into a modpyglobal repository of python 
> objs keyed by varname.  that's what i would do if i didn't feel like 
> dealing with a real db.  also, if you don't use an external 
> repository, you have to worry about server restarts and child procs 
> getting killed etc.

This is almost exactly what I have in mind :) More later,
-- 
Bryan Mongeau
eEvolved Inc. - IT Consulting & Custom Software http://eevolved.com/
--
"Let us understand what our own selfish genes are up to, because we may
then 
at least have a chance to upset their designs, something that no other 
species has ever aspired to do." -- Richard Dawkins

_______________________________________________
Mod_python mailing list
Mod_python@modpython.org
http://www.modpython.org/mailman/listinfo/mod_python


From vmilitaru at sympatico.ca  Fri Sep 13 23:22:05 2002
From: vmilitaru at sympatico.ca (vio)
Date: Fri Jan  9 22:03:29 2004
Subject: [mod_python] python-dev list
In-Reply-To: <Pine.BSF.4.32.0209132255320.10141-100000@eden.ispol.com>; from grisha@modpython.org on Fri, Sep 13, 2002 at 10:57:59PM -0400
References: <20020914023948.26152.qmail@email.com> <Pine.BSF.4.32.0209132255320.10141-100000@eden.ispol.com>
Message-ID: <20020913232204.A2273@eye.neb>

* Gregory (Grisha) Trubetskoy <grisha@modpython.org> [020913 22:55]:
> 
> Yes, we just haven't figured out how to move the mod_python@modpython.org
> list - ideally, we will migrate the archives and subscribtions (or at
> least archives) to the new list, but since apache mailing lists are not
> mailman its a bit tricky.

I agree with Jack. Let's try to keep confusion to a minimum, and keep 
everything in one place. I never touched a list server from a manager's seat,
but out of curiosity, what mailing server is apache using ? Sounds to ignorant
me as just some text massaging operation, nothing a python script can't handle.
(but on the other hand, ignorance is bliss).
If mod_python is now part of apache, I don't see a point in maintaining
modpython.org anymore except, perhaps, to redirect lost users to the new home.

Cheers,
Vio

From neel at mediapulse.com  Fri Sep 13 23:55:03 2002
From: neel at mediapulse.com (Michael Neel)
Date: Fri Jan  9 22:03:29 2004
Subject: [mod_python] python-dev list
In-Reply-To: <20020913232204.A2273@eye.neb>
Message-ID: <001501c25ba2$81d5d7a0$0400a8c0@clapton>

Apache is using ezmlm; of which I have no idea how it works.  Maybe we
could show asf the light and get them to switch to mailman? =D

Mike

--
Michael C. Neel
There are only 10 types of people in the world;
those who understand binary and those who don't.

-----Original Message-----
From: mod_python-admin@modpython.org
[mailto:mod_python-admin@modpython.org] On Behalf Of vio
Sent: Saturday, September 14, 2002 12:22 AM
To: mod_python@modpython.org
Subject: Re: [mod_python] python-dev list


* Gregory (Grisha) Trubetskoy <grisha@modpython.org> [020913 22:55]:
> 
> Yes, we just haven't figured out how to move the 
> mod_python@modpython.org list - ideally, we will migrate the archives 
> and subscribtions (or at least archives) to the new list, but since 
> apache mailing lists are not mailman its a bit tricky.

I agree with Jack. Let's try to keep confusion to a minimum, and keep 
everything in one place. I never touched a list server from a manager's
seat, but out of curiosity, what mailing server is apache using ? Sounds
to ignorant me as just some text massaging operation, nothing a python
script can't handle. (but on the other hand, ignorance is bliss). If
mod_python is now part of apache, I don't see a point in maintaining
modpython.org anymore except, perhaps, to redirect lost users to the new
home.

Cheers,
Vio
_______________________________________________
Mod_python mailing list
Mod_python@modpython.org
http://www.modpython.org/mailman/listinfo/mod_python


From vmilitaru at sympatico.ca  Sat Sep 14 01:53:37 2002
From: vmilitaru at sympatico.ca (vio)
Date: Fri Jan  9 22:03:29 2004
Subject: [mod_python] python-dev list
In-Reply-To: <001501c25ba2$81d5d7a0$0400a8c0@clapton>; from neel@mediapulse.com on Fri, Sep 13, 2002 at 11:55:03PM -0400
References: <20020913232204.A2273@eye.neb> <001501c25ba2$81d5d7a0$0400a8c0@clapton>
Message-ID: <20020914015337.A2359@eye.neb>

* Michael Neel <neel@mediapulse.com> [020914 01:04]:
> Apache is using ezmlm; of which I have no idea how it works.  Maybe we
> could show asf the light and get them to switch to mailman? =D

A wild guess: could 'ezmlm' stand for 'eazy mailman'?
I wonder if trying to propose such a fundamental switch to ASF is feasible,
especially if the use of ezmlm is 'entrentched' at apache (I have no clues) 
and there are no major issues with it. Why would they (us?) switch to mailman ?
There must be some fundamental motivation behind this move, be it technical
or ideological or otherwise. I don't know enough about the apache politics to
answer such questions. Another wild guess: ASF is made of pretty bright people,
surely there must be something about ezmlm to making them choose it (I am 
doing a lot of guessing here, so I guess they must have been aware of mailman
when they decided on ezmlm instead).

Just skimming the ezmlm.org site, seems it is very good at handling 'huge'
mailing lists (half a million subscribers). Maybe that's its core competitive 
advantage. Also supports MySQL RDBMS which sounds interesting.
(accessing the ezmlm FAQ seems quite slow, though). And is optimized for speed.
I don't know, maybe ezmlm is better suited for ASF's needs than mailman (on
which I must plead total ignorance, sorry).

FAQ topic of interest: '5.7 Converting to and from and SQL database.' By 
extension, I wonder where's the topic 'X.Y Converting to and from mailman.'? :)

Vio

From gstein at lyra.org  Sat Sep 14 00:48:01 2002
From: gstein at lyra.org (Greg Stein)
Date: Fri Jan  9 22:03:29 2004
Subject: [mod_python] python-dev list
In-Reply-To: <20020914015337.A2359@eye.neb>; from vmilitaru@sympatico.ca on Sat, Sep 14, 2002 at 01:53:37AM -0500
References: <20020913232204.A2273@eye.neb> <001501c25ba2$81d5d7a0$0400a8c0@clapton> <20020914015337.A2359@eye.neb>
Message-ID: <20020914004801.A10914@lyra.org>

On Sat, Sep 14, 2002 at 01:53:37AM -0500, vio wrote:
> * Michael Neel <neel@mediapulse.com> [020914 01:04]:
> > Apache is using ezmlm; of which I have no idea how it works.  Maybe we
> > could show asf the light and get them to switch to mailman? =D

That's been tried :-)

>...
> I wonder if trying to propose such a fundamental switch to ASF is feasible,
> especially if the use of ezmlm is 'entrentched' at apache (I have no clues)

It runs *all* of the mailing lists, so yah: it's entrenched.

> and there are no major issues with it.

I'd prefer Mailman, but most of the people doing mailing list admin are more
comfortable using ezmlm. And no, there aren't really any major issues except
for the lack of a good web archive (altho there is some work on getting
Eyebrowse set up for this, but Eyebrowse sucks)

>...
> surely there must be something about ezmlm to making them choose it (I am 
> doing a lot of guessing here, so I guess they must have been aware of mailman
> when they decided on ezmlm instead).

At the time that new mlm software was needed, Mailman was still in Beta.
Brian looked into using it, but apparently there were some problems with it
on FreeBSD, and the mailman devs weren't responsive/active enough to track
down the problems at that point. So... the move to ezmlm.

> Just skimming the ezmlm.org site, seems it is very good at handling 'huge'
> mailing lists (half a million subscribers). Maybe that's its core competitive 
> advantage. Also supports MySQL RDBMS which sounds interesting.
> (accessing the ezmlm FAQ seems quite slow, though). And is optimized for speed.
> I don't know, maybe ezmlm is better suited for ASF's needs than mailman (on
> which I must plead total ignorance, sorry).

The ASF sends out an *incredible* amount of email to the mailing lists each
day. Yes: the MLM must be efficient as hell. DJB has certain, um, issues,
but his software is seriously speedy.

Cheers,
-g

-- 
Greg Stein, http://www.lyra.org/

From gstein at lyra.org  Sat Sep 14 00:49:15 2002
From: gstein at lyra.org (Greg Stein)
Date: Fri Jan  9 22:03:29 2004
Subject: [mod_python] python-dev list
In-Reply-To: <20020913232204.A2273@eye.neb>; from vmilitaru@sympatico.ca on Fri, Sep 13, 2002 at 11:22:05PM -0500
References: <20020914023948.26152.qmail@email.com> <Pine.BSF.4.32.0209132255320.10141-100000@eden.ispol.com> <20020913232204.A2273@eye.neb>
Message-ID: <20020914004915.B10914@lyra.org>

On Fri, Sep 13, 2002 at 11:22:05PM -0500, vio wrote:
> * Gregory (Grisha) Trubetskoy <grisha@modpython.org> [020913 22:55]:
> > 
> > Yes, we just haven't figured out how to move the mod_python@modpython.org
> > list - ideally, we will migrate the archives and subscribtions (or at
> > least archives) to the new list, but since apache mailing lists are not
> > mailman its a bit tricky.
> 
> I agree with Jack. Let's try to keep confusion to a minimum, and keep

That's all great and everything, but somebody must take the time to get this
work completed. Since this is an entirely volunteer thing, that means that
it will take time. And other things may be prioritized first...

Cheers,
-g

-- 
Greg Stein, http://www.lyra.org/

From vmilitaru at sympatico.ca  Sat Sep 14 05:23:26 2002
From: vmilitaru at sympatico.ca (vio)
Date: Fri Jan  9 22:03:29 2004
Subject: [mod_python] python-dev list
In-Reply-To: <20020914004915.B10914@lyra.org>; from gstein@lyra.org on Sat, Sep 14, 2002 at 12:49:15AM -0700
References: <20020914023948.26152.qmail@email.com> <Pine.BSF.4.32.0209132255320.10141-100000@eden.ispol.com> <20020913232204.A2273@eye.neb> <20020914004915.B10914@lyra.org>
Message-ID: <20020914052325.A2440@eye.neb>

* Greg Stein <gstein@lyra.org> [020914 03:48]:
> That's all great and everything, but somebody must take the time to get this
> work completed. Since this is an entirely volunteer thing, that means that
> it will take time. And other things may be prioritized first...

Got you. Greg, as you well know, text manipulation in python is rather trivial.
So maybe some on this list with some spare time on their hands could give this
a try. I would see a few ways to handle this problem. One would be to simply
grab each message in the mod_python archive (just writing a script to grab each
through the web interface), and then post it to the apache list. Problem here
I foresee is that original dates and posters' identity may get lost from message
headers, though they could be pasted into the message content, or preserved 
some other way. But I don't know if this is good behaviour for a mailing list 
archive (to see entire mod_python.org list as if posted on the same day).

Another alternative would be to work directly on the storage files and 
transform the mailman data files (provided mailman messages are somehow 
available in clear text) into ezmlm files, through multiple passes. Used this 
technique to transform java source into python. But unlike java2python, I doubt
ezmlm would accept some flat file(s) as ezmlm archive files just like that, out of the blue. Someone knowledgeable in both mailman and ezmlm internals migh 
pull thid off.

Vio

From vmilitaru at sympatico.ca  Sat Sep 14 05:57:15 2002
From: vmilitaru at sympatico.ca (vio)
Date: Fri Jan  9 22:03:29 2004
Subject: [mod_python] python-dev list
In-Reply-To: <20020914052325.A2440@eye.neb>; from vmilitaru@sympatico.ca on Sat, Sep 14, 2002 at 05:23:26AM -0500
References: <20020914023948.26152.qmail@email.com> <Pine.BSF.4.32.0209132255320.10141-100000@eden.ispol.com> <20020913232204.A2273@eye.neb> <20020914004915.B10914@lyra.org> <20020914052325.A2440@eye.neb>
Message-ID: <20020914055713.A2503@eye.neb>

Oops, taking back most of what I said in previous message. Remembering some
past mod_python example, maniputating mail messages seems more flexible 
than initially thought.
And all mod_python message archives look like simple flat text files (.gz).
So, on second look, moving the entire modpython archive to apache could be
done in something like, I don't know, 20-30 lines of python code. 

Vio

* vio <vmilitaru@sympatico.ca> [020914 05:31]:
> * Greg Stein <gstein@lyra.org> [020914 03:48]:
> > That's all great and everything, but somebody must take the time to get this
> > work completed. Since this is an entirely volunteer thing, that means that
> > it will take time. And other things may be prioritized first...
> 
> Got you. Greg, as you well know, text manipulation in python is rather trivial.
> So maybe some on this list with some spare time on their hands could give this
> a try. I would see a few ways to handle this problem. One would be to simply
> grab each message in the mod_python archive (just writing a script to grab each
> through the web interface), and then post it to the apache list. Problem here
> I foresee is that original dates and posters' identity may get lost from message
> headers, though they could be pasted into the message content, or preserved 
> some other way. But I don't know if this is good behaviour for a mailing list 
> archive (to see entire mod_python.org list as if posted on the same day).
> 
> Another alternative would be to work directly on the storage files and 
> transform the mailman data files (provided mailman messages are somehow 
> available in clear text) into ezmlm files, through multiple passes. Used this 
> technique to transform java source into python. But unlike java2python, I doubt
> ezmlm would accept some flat file(s) as ezmlm archive files just like that, out of the blue. Someone knowledgeable in both mailman and ezmlm internals migh 
> pull thid off.
> 
> Vio
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://www.modpython.org/mailman/listinfo/mod_python

From john at veidit.net  Sat Sep 14 23:35:23 2002
From: john at veidit.net (John Angelmo)
Date: Fri Jan  9 22:03:29 2004
Subject: [mod_python] Upgrade problem
Message-ID: <20020914233523.649f805e.john@veidit.net>

Hello

I recently upgraded both mod_python and Apache with portupgrade. Now there seems to be some problem I only get this output:

Mod_python error: "PythonHandler mod_python.publisher"

Traceback (most recent call last):

  File "/usr/local/lib/python2.2/site-packages/mod_python/apache.py", line 193, in Dispatch
    result = object(req)

  File "/usr/local/lib/python2.2/site-packages/mod_python/publisher.py", line 88, in handler
    if func_path[-1] == ".":

IndexError: string index out of range


My apacheconfig:

<Directory /usr/local/www/data/wa>
            AddHandler python-program .py
            PythonHandler mod_python.publisher
            PythonDebug On
</Directory>

/John

From list-mod_python at empires.org  Sat Sep 14 16:33:13 2002
From: list-mod_python at empires.org (Jeff Davis)
Date: Fri Jan  9 22:03:29 2004
Subject: [mod_python] Upgrade problem
In-Reply-To: <20020914233523.649f805e.john@veidit.net>
References: <20020914233523.649f805e.john@veidit.net>
Message-ID: <200209141633.13955.list-mod_python@empires.org>

What OS, old mod_python version, new mod_python version, and apache version do 
you have?

How did you install the new version? Is it possible that it didn't properly 
install the mod_python lib? If you were installing from a package, is it 
possible that it wasn't built correctly?

What URL were you using to access your page? What are the contents fo your 
file?

Please provide the most simple example you can that still reproduces the 
problem.

It seems like it might be a problem related to the mod_python library and the 
URL. Perhaps mod_python was updated and the mod_python library wasn't? 
Perhaps the new mod_python library doesn't work correcty?

Regards,
	Jeff

On Saturday 14 September 2002 02:35 pm, John Angelmo wrote:
> Hello
>
> I recently upgraded both mod_python and Apache with portupgrade. Now there
> seems to be some problem I only get this output:
>
> Mod_python error: "PythonHandler mod_python.publisher"
>
> Traceback (most recent call last):
>
>   File "/usr/local/lib/python2.2/site-packages/mod_python/apache.py", line
> 193, in Dispatch result = object(req)
>
>   File "/usr/local/lib/python2.2/site-packages/mod_python/publisher.py",
> line 88, in handler if func_path[-1] == ".":
>
> IndexError: string index out of range
>
>
> My apacheconfig:
>
> <Directory /usr/local/www/data/wa>
>             AddHandler python-program .py
>             PythonHandler mod_python.publisher
>             PythonDebug On
> </Directory>
>
> /John
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://www.modpython.org/mailman/listinfo/mod_python


From rpinder at usc.edu  Sat Sep 14 21:15:11 2002
From: rpinder at usc.edu (Rich Pinder)
Date: Fri Jan  9 22:03:29 2004
Subject: [mod_python] "Not Found" message with Publisher example
References: <3D7C2453.8020300@usc.edu>
Message-ID: <3D84094F.10501@usc.edu>

I'm still stumped with getting the SIMPLE example code on page 13 of the manual working.
(HAD simple example 1 from page 10 working, so I'm sure all the stuff is in correct location)
(Windows install. Python 2.2.1   mod_python.dll v 2.7.6   apache 1.2.26)

Edited the apache conf file, inside the  <IfModule mod_alias.c>

     <Directory "C:/Program Files/Apache Group/Apache/htdocs/python">
	AddHandler python-program .py
	PythonHandler mod_python.publisher
	PythonDebug on
     </Directory>

Test html form has:

   <form action="form/email" method="POST">

Created form.py (when i try to call it form the interpreter, I get no python indenting/parsing errors). 
form.py is in the directory pointed to in the apache .conf file.  (...../htdocs/python).  And, as its copied 
from the example, inside the  form.py  is a method defined as   email.  So form action makes sense to me.

But when trying to post, still get error :  The requested URL /form/email was not found on this server.


Am I missing something here?  Almost like the publisher is not being accessed ? There are no ancilliry files 
for the publisher that need to be installed either under the apache tree (other than the .dll), or under the 
python tree ??

I'm SURE its something trivial I've missed here - I am very new to this all.

Thanks for any thoughts you might have.

Rich

[Alain's idea, which i hoped was the clue, turned out not to be the problem]:

 >........  Edited the  .conf  file, created a new python script   mail.py, made
 >> a html form - but still get:
 >>
 >> The requested URL /form/email was not found on this server.
 >
 >
 > "mail" != "email"        [i'd mistakingly said in prior paragraph the script was called mail.py...]
 > was/is called form.py    [ but it was/is called form.py.  and besides, email is defined as a method ]
 >
 > Alain,
 >



Rich Pinder wrote:
 > Got the easy example workin fine from the Manual (3.2 section), but got hung up with the example that
 > discusses how the Publisher works.  Edited the  .conf  file, created a new python script   form.py,  made
 > an html form - but still get:
 >
 > The requested URL /form/email was not found on this server.
 >
 > I'm sure its a simple one - thanks for any thoughts !
 >
 > Rich Pinder USC School of Medicine
 >


From john at veidit.net  Sun Sep 15 14:06:05 2002
From: john at veidit.net (John Angelmo)
Date: Fri Jan  9 22:03:29 2004
Subject: [mod_python] Upgrade problem
References: <20020914233523.649f805e.john@veidit.net> <200209141633.13955.list-mod_python@empires.org>
Message-ID: <3D8477AD.1040604@veidit.net>

FreeBSD updated from 4.5 to 4.6.2
mod_python updated from 2.7.6 to 2.7.8
Apache updated from??? (six months old) to latest (not 2.0)
Installation was made with the FreeBSD ports system
The page that I accessed is on my internal server 192.168.1.1/wa

/John

Jeff Davis wrote:
> What OS, old mod_python version, new mod_python version, and apache version do 
> you have?
> 
> How did you install the new version? Is it possible that it didn't properly 
> install the mod_python lib? If you were installing from a package, is it 
> possible that it wasn't built correctly?
> 
> What URL were you using to access your page? What are the contents fo your 
> file?
> 
> Please provide the most simple example you can that still reproduces the 
> problem.
> 
> It seems like it might be a problem related to the mod_python library and the 
> URL. Perhaps mod_python was updated and the mod_python library wasn't? 
> Perhaps the new mod_python library doesn't work correcty?
> 
> Regards,
> 	Jeff
> 
> On Saturday 14 September 2002 02:35 pm, John Angelmo wrote:
> 
>>Hello
>>
>>I recently upgraded both mod_python and Apache with portupgrade. Now there
>>seems to be some problem I only get this output:
>>
>>Mod_python error: "PythonHandler mod_python.publisher"
>>
>>Traceback (most recent call last):
>>
>>  File "/usr/local/lib/python2.2/site-packages/mod_python/apache.py", line
>>193, in Dispatch result = object(req)
>>
>>  File "/usr/local/lib/python2.2/site-packages/mod_python/publisher.py",
>>line 88, in handler if func_path[-1] == ".":
>>
>>IndexError: string index out of range
>>
>>
>>My apacheconfig:
>>
>><Directory /usr/local/www/data/wa>
>>            AddHandler python-program .py
>>            PythonHandler mod_python.publisher
>>            PythonDebug On
>></Directory>
>>
>>/John
>>_______________________________________________
>>Mod_python mailing list
>>Mod_python@modpython.org
>>http://www.modpython.org/mailman/listinfo/mod_python
> 
> 
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://www.modpython.org/mailman/listinfo/mod_python



From grisha at modpython.org  Sun Sep 15 13:35:56 2002
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 22:03:29 2004
Subject: [mod_python] "Not Found" message with Publisher example
In-Reply-To: <3D84094F.10501@usc.edu>
Message-ID: <Pine.BSF.4.32.0209151333390.30540-100000@eden.ispol.com>


On Sat, 14 Sep 2002, Rich Pinder wrote:

>    <form action="form/email" method="POST">

try

 <form action="form.py/email" method="POST">


I think it's a typo in the docs.

Grisha


From grisha at modpython.org  Sun Sep 15 13:42:08 2002
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 22:03:29 2004
Subject: [mod_python] Upgrade problem
In-Reply-To: <3D8477AD.1040604@veidit.net>
Message-ID: <Pine.BSF.4.32.0209151337040.30540-100000@eden.ispol.com>

Try changing that line in publicher.py to
    if func_path[:-1] == ".":

(note : before -1)

Grisha

On Sun, 15 Sep 2002, John Angelmo wrote:

> FreeBSD updated from 4.5 to 4.6.2
> mod_python updated from 2.7.6 to 2.7.8
> Apache updated from??? (six months old) to latest (not 2.0)
> Installation was made with the FreeBSD ports system
> The page that I accessed is on my internal server 192.168.1.1/wa
>
> /John
>
> Jeff Davis wrote:
> > What OS, old mod_python version, new mod_python version, and apache version do
> > you have?
> >
> > How did you install the new version? Is it possible that it didn't properly
> > install the mod_python lib? If you were installing from a package, is it
> > possible that it wasn't built correctly?
> >
> > What URL were you using to access your page? What are the contents fo your
> > file?
> >
> > Please provide the most simple example you can that still reproduces the
> > problem.
> >
> > It seems like it might be a problem related to the mod_python library and the
> > URL. Perhaps mod_python was updated and the mod_python library wasn't?
> > Perhaps the new mod_python library doesn't work correcty?
> >
> > Regards,
> > 	Jeff
> >
> > On Saturday 14 September 2002 02:35 pm, John Angelmo wrote:
> >
> >>Hello
> >>
> >>I recently upgraded both mod_python and Apache with portupgrade. Now there
> >>seems to be some problem I only get this output:
> >>
> >>Mod_python error: "PythonHandler mod_python.publisher"
> >>
> >>Traceback (most recent call last):
> >>
> >>  File "/usr/local/lib/python2.2/site-packages/mod_python/apache.py", line
> >>193, in Dispatch result = object(req)
> >>
> >>  File "/usr/local/lib/python2.2/site-packages/mod_python/publisher.py",
> >>line 88, in handler if func_path[-1] == ".":
> >>
> >>IndexError: string index out of range
> >>
> >>
> >>My apacheconfig:
> >>
> >><Directory /usr/local/www/data/wa>
> >>            AddHandler python-program .py
> >>            PythonHandler mod_python.publisher
> >>            PythonDebug On
> >></Directory>
> >>
> >>/John
> >>_______________________________________________
> >>Mod_python mailing list
> >>Mod_python@modpython.org
> >>http://www.modpython.org/mailman/listinfo/mod_python
> >
> >
> > _______________________________________________
> > Mod_python mailing list
> > Mod_python@modpython.org
> > http://www.modpython.org/mailman/listinfo/mod_python
>
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://www.modpython.org/mailman/listinfo/mod_python
>


From jack_diederich at email.com  Sun Sep 15 12:50:24 2002
From: jack_diederich at email.com (Jack Diederich)
Date: Fri Jan  9 22:03:29 2004
Subject: [mod_python] Upgrade problem
Message-ID: <20020915175024.29980.qmail@email.com>

> 
> Try changing that line in publicher.py to
>     if func_path[:-1] == ".":
> 
> (note : before -1)
> 
>
If you just want the last char, and don't want it to fail on an empty string you mean

if func_path[-1:]

func_path[:-1] will give you everything but the last char
-- 
__________________________________________________________
Sign-up for your own FREE Personalized E-mail at Mail.com
http://www.mail.com/?sr=signup


From grisha at modpython.org  Sun Sep 15 16:41:19 2002
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 22:03:29 2004
Subject: [mod_python] Upgrade problem
In-Reply-To: <20020915175024.29980.qmail@email.com>
Message-ID: <Pine.BSF.4.32.0209151640240.32460-100000@eden.ispol.com>

Sorry, my mistake, you're right, it should be [-1:] of course :-)

On Sun, 15 Sep 2002, Jack Diederich wrote:

>
> >
> > Try changing that line in publicher.py to
> >     if func_path[:-1] == ".":
> >
> > (note : before -1)
> >
> >
> If you just want the last char, and don't want it to fail on an empty string you mean
>
> if func_path[-1:]
>
> func_path[:-1] will give you everything but the last char
> --
> __________________________________________________________
> Sign-up for your own FREE Personalized E-mail at Mail.com
> http://www.mail.com/?sr=signup
>


From thanos at 0x01.com  Sun Sep 15 22:48:07 2002
From: thanos at 0x01.com (thanos vassilakis)
Date: Fri Jan  9 22:03:29 2004
Subject: [mod_python] How to upload files using mod_python's publisher handler?
In-Reply-To: <1031854845.5447.9.camel@coraje>
Message-ID: <BB1CA6A6-C91E-11D6-B410-00306559D868@0x01.com>

Try using PSO:
See http://www.scriptfoundry.com/modules/pso/doc/pso-guide.html#files

On Thursday, September 12, 2002, at 02:20 PM, Andres Meza wrote:

> Greetings.
>
> I have created a python CGI script that can upload files sucessfully. 
> Now, I want to create a mod_python script with the same feature using 
> the "publisher" handler and I get this error:??
>
>
> [Thu Sep 12 08:53:41 2002] [error] PythonHandler mod_python.publisher: 
> Traceback (most recent call last):
> [Thu Sep 12 08:53:41 2002] [error] PythonHandler 
> mod_python.publisher:?? File "/home/mrnet/rpm/tmp/mod_python-
> root/usr/lib/python2.2/site-packages/mod_python/apache.py", line 193, 
> in Dispatch
> [Thu Sep 12 08:53:41 2002] [error] PythonHandler 
> mod_python.publisher:?? File "/home/mrnet/rpm/tmp/mod_python-
> root/usr/lib/python2.2/site-packages/mod_python/publisher.py", line 
> 104, in handler
> [Thu Sep 12 08:53:41 2002] [error] PythonHandler 
> mod_python.publisher:?? File "/home/mrnet/rpm/tmp/mod_python-
> root/usr/lib/python2.2/site-packages/mod_python/publisher.py", line 
> 308, in __init__
> [Thu Sep 12 08:53:41 2002] [error] PythonHandler mod_python.publisher: 
> AttributeError: 'file' object has no attribute '__methods__'
>
> Anyone have an idea about why I get this error?
>
> Thanks for your time,

>



From woodm at colorado.edu  Mon Sep 16 01:02:01 2002
From: woodm at colorado.edu (Matthew D. Wood)
Date: Fri Jan  9 22:03:29 2004
Subject: [mod_python] Follow up on install problems.
Message-ID: <1032159721.15421.11.camel@mascot>

Ok, so I believe I've fixed my -DEAPI error, but I still can't get
apache to start.  

both
    apachectl start
and
    httpd -X
do not start the deamon.

Here is the output from "apachectl start":
    [doorman:/usr/sbin] > sudo ./apachectl start
    Password:
    /usr/sbin/apachectl start: httpd could not be started

"httpd -X" on the other hand gives me absolutely no output.


Every time I run either of those commands, my error_log file has the
following appended:
    /usr/libexec/ld.so: Undefined symbol "_pthread_mutex_init" called
    from httpd:/usr/lib/apache/modules/mod_python.so at 0x402e0148

I would love to run an "strace" but I don't think it's installed, and my
not-so-through attempts to find it have resulted in failure so far.


As always, thank you all for even reading this.  And you all definitely
receive an enormous "thank you" for any help you can give.





Here's my system information:
  OS: OpenBSD 3.1
  Python: I have both 2.2 and 2.1 .  I don't know why, but the OpenBSD
          ports tree decided I should have both.
  Apache: I'm running the out-of-the-box 1.3 that comes with OpenBSD




From alain at onesite.org  Mon Sep 16 09:40:01 2002
From: alain at onesite.org (Alain Tesio)
Date: Fri Jan  9 22:03:29 2004
Subject: [mod_python] Follow up on install problems.
In-Reply-To: <1032159721.15421.11.camel@mascot>
References: <1032159721.15421.11.camel@mascot>
Message-ID: <20020916094001.39f7fd79.alain@onesite.org>

On 16 Sep 2002 01:02:01 -0600
"Matthew D. Wood" <woodm@colorado.edu> wrote:

> I would love to run an "strace" but I don't think it's installed, and my
> not-so-through attempts to find it have resulted in failure so far.
> 
>   OS: OpenBSD 3.1

There is no strace on OpenBSD, the analogous program is ktrace,
use kdump to see the contents of the log files.

Alain

From jack_diederich at email.com  Mon Sep 16 08:54:04 2002
From: jack_diederich at email.com (Jack Diederich)
Date: Fri Jan  9 22:03:29 2004
Subject: [mod_python] Follow up on install problems.
Message-ID: <20020916135404.9741.qmail@email.com>

> Every time I run either of those commands, my error_log file has the
> following appended:
>     /usr/libexec/ld.so: Undefined symbol "_pthread_mutex_init" called
>     from httpd:/usr/lib/apache/modules/mod_python.so at 0x402e0148
> 
It looks like you either have python compiled with threads,
or a module that requires threads is being loaded.

mod_python can't be compiled with threads due to the spawning nature of apache.

-jack
-- 
__________________________________________________________
Sign-up for your own FREE Personalized E-mail at Mail.com
http://www.mail.com/?sr=signup


From grisha at modpython.org  Mon Sep 16 10:47:46 2002
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 22:03:29 2004
Subject: [mod_python] Follow up on install problems.
In-Reply-To: <20020916135404.9741.qmail@email.com>
Message-ID: <Pine.BSF.4.32.0209161043370.41786-100000@eden.ispol.com>

To be more precise, it's an issues specifically on FreeBSD (and I guess on
OpenBSD as well), which uses different libc's for threaded and not
threaded apps. As a result, you can't mix the two, and Apache 1.3 is
usually compiled against non-threaded libs since it doesn't care for
threads. So your only options are to recompile Python without threads or
compile Apache with threads (I've never tried the latter, but the former
works just fine).

The threaded/non-threaded thing doesn't seem to be an issue on Linux or
Solaris.

Grisha

On Mon, 16 Sep 2002, Jack Diederich wrote:

> > Every time I run either of those commands, my error_log file has the
> > following appended:
> >     /usr/libexec/ld.so: Undefined symbol "_pthread_mutex_init" called
> >     from httpd:/usr/lib/apache/modules/mod_python.so at 0x402e0148
> >
> It looks like you either have python compiled with threads,
> or a module that requires threads is being loaded.
>
> mod_python can't be compiled with threads due to the spawning nature of apache.
>


From jack_diederich at email.com  Mon Sep 16 13:19:25 2002
From: jack_diederich at email.com (Jack Diederich)
Date: Fri Jan  9 22:03:29 2004
Subject: [mod_python] Initializing the interpreter in python_init() instead of
 python_handler()
Message-ID: <20020916181926.12891.qmail@email.com>

I just threw some of the python_handler() code into python_init() and it works!

This means that it is possible to do all the imports etc only once, instead of once per child.
I mentioned the possibility here
http://www.modpython.org/pipermail/mod_python/2002-July/002246.html
and compared it to the mod_perl handler here
http://www.modpython.org/pipermail/mod_python/2002-July/002248.html

Basically, we currently do more work than we have to because each child does the same work to initalize the interpreter.  In the easy case where we are using the PythonInterpreter directive to force everyone to use
the same name for the interpreter (in the below example 'MAIN') we can just do the one initilization in python_init() and the children inherit a clone of the result.  I'm not aware of any problems this might cause (wierd shared file handles or something) but I haven't tested it very extensively.  I do some calculations in the main of several of my modules, so having this done once is a decent speed boost at apache startup.

below is my replacement python_init(), it only works if you have

PythonInterpreter 'MAIN'

in your httpd.conf

modified python_init follows, based on ver 2.7.8
GLYPHS AND WARNINGS!
this is just a proof-of-concept, I don't do lots of neccessary error checking
and I've hard coded all my strings instead of reading the apache configuration.
After initializing the MAIN interpreter, it loads my module your_python_module_here.py
and calls its setup function do_our_one_time_global_setup().  The children then get all
the calculated stuff that was done in do_our_one_time_global_setup().

enjoy,

-jack

void python_init(server_rec *s, pool *p)
{

    char buff[255];
    PyObject *m;
    PyObject *obCallBack = NULL;
    interpreterdata *idata;
    PyThreadState *tstate;

    /* pool given to us in ChildInit. We use it for 
       server.register_cleanup() */
    pool *child_init_pool = NULL;

    /* mod_python version */
    ap_add_version_component(VERSION_COMPONENT);
    
    /* Python version */
    sprintf(buff, "Python/%s", strtok((char *)Py_GetVersion(), " "));
    ap_add_version_component(buff);

    /* initialize global Python interpreter if necessary */
    if (! Py_IsInitialized()) 
    {

	/* initialze the interpreter */
	Py_Initialize();

#ifdef WITH_THREAD
	/* create and acquire the interpreter lock */
	PyEval_InitThreads();
#endif
	/* Release the thread state because we will never use 
	 * the main interpreter, only sub interpreters created later. */
        PyThreadState_Swap(NULL); 

	/* create the obCallBack dictionary */
	interpreters = PyDict_New();
	if (! interpreters) {
	    ap_log_error(APLOG_MARK, APLOG_NOERRNO|APLOG_ERR, s,
			 "python_init: PyDict_New() failed! No more memory?");
	    exit(1);
	}

	/* NEW STUFF FROM HERE */
	idata = get_interpreter_data("MAIN", s);
	tstate = PyThreadState_New(idata->istate);
	PyThreadState_Swap(tstate);

	m = PyImport_ImportModule("your_python_module_here");
	if (!m) {
	  fprintf(stderr, "Couldn't import module\n");
	} else {
	  obCallBack = PyObject_CallMethod(m, "do_our_one_time_global_setup", NULL);
	  if (!obCallBack)
	    fprintf(stderr, "CallFunc failed\n");
	  else
	    fprintf(stderr, "I think it succeeded?\n");
	}

	PyThreadState_Swap(NULL);
	PyThreadState_Delete(tstate);
	/* TO HERE */

#ifdef WITH_THREAD
	/* release the lock; now other threads can run */
	PyEval_ReleaseLock();
#endif
    }
}



-- 
__________________________________________________________
Sign-up for your own FREE Personalized E-mail at Mail.com
http://www.mail.com/?sr=signup


From woodm at colorado.edu  Mon Sep 16 21:40:01 2002
From: woodm at colorado.edu (Matthew D. Wood)
Date: Fri Jan  9 22:03:29 2004
Subject: [mod_python] Follow up on install problems.
In-Reply-To: <Pine.BSF.4.32.0209161043370.41786-100000@eden.ispol.com>
References: <Pine.BSF.4.32.0209161043370.41786-100000@eden.ispol.com>
Message-ID: <1032234001.15421.437.camel@mascot>

Interesting.  Has anyone tried using mod-python in a threaded setting? 
I just wouldn't have thought that to be a problem.

So, just to be clear, if I recompile apache with threads support, will I
be able to create mod-python scripts that use threads?


On Mon, 2002-09-16 at 08:47, Gregory (Grisha) Trubetskoy wrote:
> 
> To be more precise, it's an issues specifically on FreeBSD (and I guess on
> OpenBSD as well), which uses different libc's for threaded and not
> threaded apps. As a result, you can't mix the two, and Apache 1.3 is
> usually compiled against non-threaded libs since it doesn't care for
> threads. So your only options are to recompile Python without threads or
> compile Apache with threads (I've never tried the latter, but the former
> works just fine).
> 
> The threaded/non-threaded thing doesn't seem to be an issue on Linux or
> Solaris.
> 
> Grisha
> 
> On Mon, 16 Sep 2002, Jack Diederich wrote:
> 
> > > Every time I run either of those commands, my error_log file has the
> > > following appended:
> > >     /usr/libexec/ld.so: Undefined symbol "_pthread_mutex_init" called
> > >     from httpd:/usr/lib/apache/modules/mod_python.so at 0x402e0148
> > >
> > It looks like you either have python compiled with threads,
> > or a module that requires threads is being loaded.
> >
> > mod_python can't be compiled with threads due to the spawning nature of apache.
> >
> 
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://www.modpython.org/mailman/listinfo/mod_python


From grisha at modpython.org  Mon Sep 16 23:56:02 2002
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 22:03:29 2004
Subject: [mod_python] Follow up on install problems.
In-Reply-To: <1032234001.15421.437.camel@mascot>
Message-ID: <Pine.BSF.4.32.0209162355020.50632-100000@eden.ispol.com>

On 16 Sep 2002, Matthew D. Wood wrote:

> So, just to be clear, if I recompile apache with threads support, will I
> be able to create mod-python scripts that use threads?

I don't see why not, provided you're on one of the platforms where mixing
thread/non-thread is possible.

Grisha



From cgardner at netlojix.com  Tue Sep 17 09:43:16 2002
From: cgardner at netlojix.com (Clarence Gardner)
Date: Fri Jan  9 22:03:30 2004
Subject: [mod_python] signal handling
Message-ID: <20020917094316.A3021@liberty.sba2.netlojix.net>

Hello.

I've recently noticed that an application that I ported to mod_python
is unable to do signal handling. In particular, it sets a SIGALRM handler,
which gets correctly registered (as confirmed by a second call to
signal.signal), but after an alarm() call, the signal handler just
never gets delivered. It works fine as a CGI. I noticed that Apache
uses SIGALRM internally, so for fun I tried registering a SIGWINCH
handler instead and then sending myself that signal, and that didn't
get invoked either.

I've seen this on two different system configurations; one was
using Apache 1.3.22, mod_python 2.7.6, and Linux 2.2.19.

TIA for any help with this.

-- 
Clarence Gardner
Software Engineer
NetLojix Communications
cgardner@netlojix.com

From gkrackow at bellsouth.net  Tue Sep 17 13:26:10 2002
From: gkrackow at bellsouth.net (Dr . Unix Software Inc .)
Date: Fri Jan  9 22:03:30 2004
Subject: [mod_python] Fwd: Installation problems - Unable to configure Apache 1.3.26 [gkrackow@bellsouth.net]
In-Reply-To: <20020917131446.A21056@compaq450>; from gkrackow@bellsouth.net on Tue, Sep 17, 2002 at 13:14:46 -0400
References: <20020917131446.A21056@compaq450>
Message-ID: <20020917132610.C21056@compaq450>

Hi guys, I am new to the mod_python mailing list.

I have tried for more than 4 days to get the mod_python working with apache
1.3.26

I followed the Mod_python manual instructions, and had spent lots of times
looking in the mailing list for a clue.

This is what I have :

RedHat 7.2 (Enigma), Kernel 2.4.7-10
gcc 2.96
Python 2.2.1 compiled with no threads.
Apache 1.3.26
mod_python 2.7.8


Making mod_python was no problem. I have apache installed under
/usr/local/apache, so I used ./configure
with --with-apache and --with-python options.

I used make, and make static, as well as (root) make install and make
install_static. It made no difference, the Apache 
recompilation failed with the same errors.

From gkrackow at bellsouth.net  Tue Sep 17 13:32:22 2002
From: gkrackow at bellsouth.net (Dr . Unix Software Inc .)
Date: Fri Jan  9 22:03:30 2004
Subject: [mod_python] Installation problems - Unable to configure Apache 1.3.26
In-Reply-To: <20020917132610.C21056@compaq450>; from gkrackow@bellsouth.net on Tue, Sep 17, 2002 at 13:26:10 -0400
References: <20020917131446.A21056@compaq450> <20020917132610.C21056@compaq450>
Message-ID: <20020917133222.A22983@compaq450>

Hi guys, I am new to the mod_python mailing list.

I have tried for more than 4 days to get the mod_python working with apache
1.3.26

I followed the Mod_python manual instructions, and had spent lots of times
looking in the mailing list for a clue.

This is what I have :

RedHat 7.2 (Enigma), Kernel 2.4.7-10
gcc 2.96
Python 2.2.1 compiled with no threads.
Apache 1.3.26
mod_python 2.7.8


Making mod_python was no problem. I have apache installed under
/usr/local/apache, so I used ./configure
with --with-apache and --with-python options.

I used make, and make static, as well as (root) make install and make
install_static. It made no difference, the Apache 
recompilation failed with the same errors.

From jack_diederich at email.com  Wed Sep 18 01:42:43 2002
From: jack_diederich at email.com (Jack Diederich)
Date: Fri Jan  9 22:03:30 2004
Subject: [mod_python] Installation problems - Unable to configure
    Apache 1.3.26
Message-ID: <20020918064243.3864.qmail@email.com>

I've had this problem before, I ended up using a DSO install instead.

here is my mod_python ./configure
./configure  --with-apxs=/home/apache_python/bin/apxs

and my apache ./configure
./configure --with-layout=Apache --prefix=/home/apache_python --enable-module=so --enable-rule=SHARED_CORE

----- Original Message -----
From: "Dr . Unix Software Inc ." <gkrackow@bellsouth.net>
Date: Tue, 17 Sep 2002 13:32:22 -0400 
To: mod_python@modpython.org
Subject: [mod_python] Installation problems - Unable to configure Apache 1.3.26


> 
> Hi guys, I am new to the mod_python mailing list.
> 
> I have tried for more than 4 days to get the mod_python working with apache
> 1.3.26
> 
> I followed the Mod_python manual instructions, and had spent lots of times
> looking in the mailing list for a clue.
> 
> This is what I have :
> 
> RedHat 7.2 (Enigma), Kernel 2.4.7-10
> gcc 2.96
> Python 2.2.1 compiled with no threads.
> Apache 1.3.26
> mod_python 2.7.8
> 
> 
> Making mod_python was no problem. I have apache installed under
> /usr/local/apache, so I used ./configure
> with --with-apache and --with-python options.
> 
> I used make, and make static, as well as (root) make install and make
> install_static. It made no difference, the Apache 
> recompilation failed with the same errors.
> 
> From the Apache source directory I issued the command :
> 
> ./configure --activate-module=src/modules/python/libpython.a
> 
> which gave : 
> 
> Configuring for Apache, Version 1.3.26
>  + using installation path layout: Apache (config.layout)
>  + activated python module (modules/python/libpython.a)
> Creating Makefile
> Creating Configuration.apaci in src
> Creating Makefile in src
>  + configured for Linux platform
>  + setting C compiler to gcc
>  + setting C pre-processor to gcc -E
>  + checking for system header files
>  + adding selected modules
>     o python_module uses ConfigStart/End
>  + using system Expat
>  + checking sizeof various data types
>  + doing sanity check on compiler and options
> Creating Makefile in src/support
> Creating Makefile in src/regex
> Creating Makefile in src/os/unix
> Creating Makefile in src/ap
> Creating Makefile in src/main
> Creating Makefile in src/modules/standard
> Creating Makefile in src/modules/python
> 
> then issued make
> 
> This is the last part of the Apache compilation that shows the errors :
> 
> 
> gcc -c -I/usr/drunix/webservers/apache/mod_python-2.7.8/src/include
> -I/usr/drunix/webservers/apache/apache_1.3.26/src/include
> -I/usr/drunix/webservers/apache/apache_1.3.26/src/os/unix
> -I/usr/drunix/programming/python/Python-2.2.1
> -I/usr/drunix/programming/python/Python-2.2.1/Include -I./os/unix
> -I./include   -DLINUX=22 -DUSE_HSREGEX -DNO_DL_NEEDED `./apaci` buildmark.c
> gcc  -DLINUX=22 -DUSE_HSREGEX -DNO_DL_NEEDED `./apaci` -Xlinker
> -export-dynamic       \
>       -o httpd buildmark.o modules.o modules/standard/libstandard.a
> modules/python/libpython.a main/libmain.a ./os/unix/libos.a ap/libap.a
> regex/libregex.a   -lm -lcrypt -lm  /usr/drunix/programming/python/Python-2.2.1/libpython2.2.a
> -lexpat
> 
> --->> This is my note : Up to here everything seems to be okay, but then
> ...  --->>
> 
> /usr/drunix/programming/python/Python-2.2.1/libpython2.2.a(posixmodule.o):
> In function `posix_tmpnam':
> /usr/drunix/programming/python/Python-2.2.1/./Modules/posixmodule.c:4503:
> the use of `tmpnam' is dangerous, better use `mkstemp'
> /usr/drunix/programming/python/Python-2.2.1/libpython2.2.a(posixmodule.o):
> In function `posix_tempnam':
> /usr/drunix/programming/python/Python-2.2.1/./Modules/posixmodule.c:4451:
> the use of `tempnam' is dangerous, better use `mkstemp'
> 
> /usr/drunix/programming/python/Python-2.2.1/libpython2.2.a(dynload_shlib.o):
> In function `_PyImport_GetDynLoadFunc':
> /usr/drunix/programming/python/Python-2.2.1/Python/dynload_shlib.c:90:
> undefined reference to `dlopen'
> /usr/drunix/programming/python/Python-2.2.1/Python/dynload_shlib.c:93:
> undefined reference to `dlerror'
> /usr/drunix/programming/python/Python-2.2.1/Python/dynload_shlib.c:74:
> undefined reference to `dlsym'
> /usr/drunix/programming/python/Python-2.2.1/Python/dynload_shlib.c:98:
> undefined reference to `dlsym'
> /usr/drunix/programming/python/Python-2.2.1/libpython2.2.a(posixmodule.o):
> In function `posix_openpty':
> /usr/drunix/programming/python/Python-2.2.1/./Modules/posixmodule.c:1934:
> undefined reference to `openpty'
> /usr/drunix/programming/python/Python-2.2.1/libpython2.2.a(posixmodule.o):
> In function `posix_forkpty':
> /usr/drunix/programming/python/Python-2.2.1/./Modules/posixmodule.c:1965:
> undefined reference to `forkpty'
> collect2: ld returned 1 exit status
> make[2]: *** [target_static] Error 1
> make[2]: Leaving directory `/usr/drunix/webservers/apache/apache_1.3.26/src'
> make[1]: *** [build-std] Error 2
> make[1]: Leaving directory `/usr/drunix/webservers/apache/apache_1.3.26'
> make: *** [build] Error 2
> 
> I have been stuck here for days, found no similar errors in the mailing
> list, I scanned them form January to September (2002).
> 
> Any susgestions would be greatly appreciated.
> 
> G.K.
> 
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://www.modpython.org/mailman/listinfo/mod_python
> 
> 

-- 
__________________________________________________________
Sign-up for your own FREE Personalized E-mail at Mail.com
http://www.mail.com/?sr=signup


From bryan at eevolved.com  Tue Sep 17 21:06:52 2002
From: bryan at eevolved.com (Bryan Mongeau)
Date: Fri Jan  9 22:03:30 2004
Subject: [mod_python] Mod_python and Sub-Interpreter segregation
In-Reply-To: <001401c25b9b$e97f0770$0400a8c0@clapton>
References: <001401c25b9b$e97f0770$0400a8c0@clapton>
Message-ID: <200209172106.52339.bryan@eevolved.com>

On September 14, 2002 03:07 am, Michael Neel wrote:
> Thank will work great, until you hit the 65th concurrent connection, at
> wich point apache will give you another child.

Thanks Mike. It seems as if even when MaxClients is set to 64 apache will fork 
another child anyway on the 65th concurrent connection... Why? Do you know 
what is going on here? I would like to simply work around the issue by 
limiting the amount of concurrent clients.

> (just a side note, to test a web server I use the ab tool
> that comes with apache; it will let you set the concurrent number of
> theard to try and get at once).

Thanks alot, ab is my newest friend :)
-- 
Bryan Mongeau
eEvolved Inc. - IT Consulting & Custom Software
http://eevolved.com/
--
"10^38 machine instructions would simulate ALL the brains (non-humans 
included) that ever existed, ever since brains were invented in the Cambrian 
Explosion 570 million years ago." -- K. Eric Drexler


From neel at mediapulse.com  Wed Sep 18 13:57:35 2002
From: neel at mediapulse.com (Michael C. Neel)
Date: Fri Jan  9 22:03:30 2004
Subject: [mod_python] Mod_python and Sub-Interpreter segregation
Message-ID: <C0FC22C08B82074A88B50061764157775BAE@johnson.mediapulse.net>

I think you might be able to get the effect you want with the
ServerLimit setting, although I still don't recommend constraining
apache.  To do a hit counter, bumping a number in a flat file would
probably be best.  I'm not sure what the overall goal is, but there are
also other options for managing state.

Yea, ever since I met ab we have been very close.

Mike
--
Michael C. Neel
There are only 10 types of people in the world;
those who understand binary and those who don't.


-----Original Message-----
From: Bryan Mongeau [mailto:bryan@eevolved.com] 
Sent: Tuesday, September 17, 2002 5:07 PM
To: mod_python@modpython.org
Subject: Re: [mod_python] Mod_python and Sub-Interpreter segregation


On September 14, 2002 03:07 am, Michael Neel wrote:
> Thank will work great, until you hit the 65th concurrent connection,
at
> wich point apache will give you another child.

Thanks Mike. It seems as if even when MaxClients is set to 64 apache
will fork 
another child anyway on the 65th concurrent connection... Why? Do you
know 
what is going on here? I would like to simply work around the issue by 
limiting the amount of concurrent clients.

> (just a side note, to test a web server I use the ab tool
> that comes with apache; it will let you set the concurrent number of
> theard to try and get at once).

Thanks alot, ab is my newest friend :)
-- 
Bryan Mongeau
eEvolved Inc. - IT Consulting & Custom Software
http://eevolved.com/
--
"10^38 machine instructions would simulate ALL the brains (non-humans 
included) that ever existed, ever since brains were invented in the
Cambrian 
Explosion 570 million years ago." -- K. Eric Drexler

_______________________________________________
Mod_python mailing list
Mod_python@modpython.org
http://www.modpython.org/mailman/listinfo/mod_python


From pk1u at yahoo.com  Wed Sep 18 13:31:29 2002
From: pk1u at yahoo.com (Praveen Kumar)
Date: Fri Jan  9 22:03:30 2004
Subject: [mod_python] multithreading support
Message-ID: <20020918203129.71020.qmail@web80305.mail.yahoo.com>

I've found messages on various lists that have stated
that it's a myth that threads don't work w/
mod_python, it works fine on most platforms, etc. Can
anyone comment on that ( I *really* want to use
threads ) ? Has anyone encountered problems w/ threads
on a RH7.2 + Apache 1.3.26 + mod_python 2.7.8 + Python
2.1.3 config ?

pk


__________________________________________________
Do you Yahoo!?
Yahoo! News - Today's headlines
http://news.yahoo.com

From bryan at eevolved.com  Fri Sep 20 16:58:08 2002
From: bryan at eevolved.com (Bryan Mongeau)
Date: Fri Jan  9 22:03:31 2004
Subject: [mod_python] multithreading support
In-Reply-To: <20020918203129.71020.qmail@web80305.mail.yahoo.com>
References: <20020918203129.71020.qmail@web80305.mail.yahoo.com>
Message-ID: <200209201658.08726.bryan@eevolved.com>

On September 18, 2002 08:31 pm, Praveen Kumar wrote:
> I've found messages on various lists that have stated
> that it's a myth that threads don't work w/
> mod_python, it works fine on most platforms, etc. Can
> anyone comment on that ( I *really* want to use
> threads ) ? Has anyone encountered problems w/ threads
> on a RH7.2 + Apache 1.3.26 + mod_python 2.7.8 + Python
> 2.1.3 config ?

I have successfully used threads to implement a "Janitor" that periodically 
deletes expired sessions. It is (re)started when the module is imported. It 
is part of a session module that handles cookie based user session variables. 
Usage:

from mod_python import apache
from session import CookieSession

def handler(req):
	sess = CookieSession(req)
	req.content_type="text/html"
	req.send_http_header()
	try:
		sess['hits'] += 1
	except KeyError:
		sess['hits'] = 1
	req.write("Session hits: "+str(sess['hits']))
	return apache.OK

Anyone interested in such a beast can drop me a line. I have not yet tested it 
extensively but Threads and Events definitely *seem* to work.

My setup:
apache 2.0.40
mod_python 3.0 BETA ( patched )
python 2.2.1
-- 
Bryan Mongeau
eEvolved Inc. - IT Consulting & Custom Software
http://eevolved.com/
--
"The only thing that I'd rather own than Windows is English, because then I 
could charge you two hundred and forty-nine dollars for the right to speak 
it." -- Scott McNealy


From jack_diederich at email.com  Fri Sep 20 22:41:08 2002
From: jack_diederich at email.com (Jack Diederich)
Date: Fri Jan  9 22:03:31 2004
Subject: [mod_python] multithreading support
Message-ID: <20020921034108.10532.qmail@email.com>

Re: Threads & mod_python

Grisha can give the final +1/-1 ...

I've read through the mod_python source, and the python embedding HOWTO here http://www.python.org/doc/current/api/threads.html
and in my opinion mod_python will only not work with threads if there is a bug in mod_python interpreter locking, which I doubt is the case because there's really only two places where we call the interpreter (to get the python callback, and to make the callback) and the code would shit the bed if it wasn't 100% right in the first place.  

I run mod_python without threads because I use it in a production environment, so I want to be safe. I don't require threads for the app, so I don't lose anything.

My only minor /but/ is that the python documentation defines a couple of the functions mod_python calls as unavailable functions if python is compiled without threads. (from the link above, read PyEval_AcquireThread).  I think this is documentation dissonace, but just maybe it means that a macro does nothing when it should be doing something.  Bizzarly enough, maybe that means that compiling _without_ threads is the wrong thing to do!

-jackdied
-- 
__________________________________________________________
Sign-up for your own FREE Personalized E-mail at Mail.com
http://www.mail.com/?sr=signup


From jack_diederich at email.com  Sat Sep 21 17:04:10 2002
From: jack_diederich at email.com (Jack Diederich)
Date: Fri Jan  9 22:03:31 2004
Subject: [mod_python] python-dev down?
Message-ID: <20020921220410.562.qmail@email.com>

Is the python-dev list down, or is it simply smart enough not to relay something I sent back to me?

-jack
-- 
__________________________________________________________
Sign-up for your own FREE Personalized E-mail at Mail.com
http://www.mail.com/?sr=signup


From grisha at ispol.com  Tue Sep 24 13:20:59 2002
From: grisha at ispol.com (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 22:03:31 2004
Subject: [mod_python] another beta tarball
Message-ID: <Pine.BSF.4.32.0209241317520.53347-100000@eden.ispol.com>

You can get the latest 3.0 Beta tarball from
http://www.apache.org/dist/httpd/modpython/dev/

Note the new location. It also has all the other dist files, and will be
the main distribution point moving forward. Port, rpm and package
maintainers should probably update their files to fetch from there.

Grisha



From mbp at samba.org  Wed Sep 25 18:26:47 2002
From: mbp at samba.org (Martin Pool)
Date: Fri Jan  9 22:03:31 2004
Subject: [mod_python] [patch] Make mod_python work with NTLM authentication
Message-ID: <20020925082645.GG8296@samba.org>

The mod_python 2.7.8 Publisher assumes that it will only ever be used
with Basic authentication.  It always returns "400 Bad Request" if it
is ever used inside a directory authenticated by Apache's mod_ntlm,
which uses the Authorization header with a different format.   I
suspect it would fail with digest authentication as well.

This patch makes the publisher adhere more closely to the RFC2617
specification by checking the authentication scheme name before trying
to parse the header.

If this could go into 2.7.9 I would be happy.

Index: publisher.py
===================================================================
--- publisher.py
+++ publisher.py	2002-09-25 17:23:05.000000000 +1000
@@ -189,6 +189,29 @@
     else:
         return apache.HTTP_INTERNAL_SERVER_ERROR
 
+
+def _parse_authentication(req):
+    """Return (username, password) from the Authorization header.
+
+    This only handles HTTP Basic (RFC2617) authentication.  In at
+    least two other interesting cases, it is not possible for
+    mod_python to know the password, because it is not included in the
+    request.  For authentication schemes other than Basic, (None,
+    None) is returned.
+
+    May raise an exception if the authorization is invalid in some way.
+    """
+    s = req.headers_in["Authorization"]
+    scheme, rest = string.split(s, None, 1)
+    if string.lower(scheme) != 'basic':
+        return None, None
+
+    s = base64.decodestring(rest)
+    user, passwd = string.split(s, ":", 1)
+    return user, passwd
+    
+    
+
 def process_auth(req, object, realm="unknown", user=None, passwd=None):
 
     found_auth, found_access = 0, 0
@@ -202,9 +225,7 @@
     # once and the are received as arguments
     if not user and req.headers_in.has_key("Authorization"):
         try:
-            s = req.headers_in["Authorization"][6:]
-            s = base64.decodestring(s)
-            user, passwd = string.split(s, ":", 1)
+            user, passwd = _parse_authentication(req)
         except:
             raise apache.SERVER_RETURN, apache.HTTP_BAD_REQUEST
 

-- 
Martin 



From mbp at samba.org  Wed Sep 25 18:33:50 2002
From: mbp at samba.org (Martin Pool)
Date: Fri Jan  9 22:03:31 2004
Subject: [mod_python] Mod_python and Sub-Interpreter segregation
In-Reply-To: <200209172106.52339.bryan@eevolved.com>
References: <001401c25b9b$e97f0770$0400a8c0@clapton> <200209172106.52339.bryan@eevolved.com>
Message-ID: <20020925083348.GH8296@samba.org>

On 17 Sep 2002, Bryan Mongeau <bryan@eevolved.com> wrote:
> On September 14, 2002 03:07 am, Michael Neel wrote:
> > Thank will work great, until you hit the 65th concurrent connection, at
> > wich point apache will give you another child.
> 
> Thanks Mike. It seems as if even when MaxClients is set to 64 apache will fork 
> another child anyway on the 65th concurrent connection... Why? Do you know 
> what is going on here? I would like to simply work around the issue by 
> limiting the amount of concurrent clients.

I think if you go down the path of relying on data kept inside an
Apache instance you will regret it.  The right way to retain state on
the server is to keep it in some kind of external database. 

Here are a few reasons:

 - If you reconfigure apache (e.g. apachectl graceful) or need to
   restart it, the data in memory will be irretrievably lost.
   Perhaps at the moment you don't need strong persistence but most
   web apps find their storage needs grow, so you will in the future. 

 - Having multiple children is an important robustness feature of
   Apache.

 - Keeping shared data separate is a "safer" design -- if you need to  
   coordinate access between threads then there is a risk of race
   conditions or lockups.  For example, if one thread abnormally
   terminates, it might leave internal data structures in an
   inconsistent state.  If you use an external database things are
   more isolated and easier to debug.

 - Using something like Python's shelve module is nearly as easy as an
   in-memory variable.

This is a dead horse; there are plenty of other discussions of it on
the web.  Don't repeat mistakes that were learnt by others six years
ago.

-- 
Martin 

From grisha at modpython.org  Wed Sep 25 09:31:05 2002
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 22:03:31 2004
Subject: [mod_python] [patch] Make mod_python work with NTLM authentication
In-Reply-To: <20020925082645.GG8296@samba.org>
Message-ID: <Pine.BSF.4.32.0209250929120.64042-100000@eden.ispol.com>

On Wed, 25 Sep 2002, Martin Pool wrote:

> If this could go into 2.7.9 I would be happy.

I will add it to 3.0. 2.7.9 won't happen unless there are some serious
problems (like security).

Grisha


From wilk-ml at flibuste.net  Wed Sep 25 22:48:14 2002
From: wilk-ml at flibuste.net (William Dode)
Date: Fri Jan  9 22:03:31 2004
Subject: [mod_python] suexec setuid
Message-ID: <87fzvxn6cx.fsf@flibuste.net>

hi,

Is it possible to change the uid of the interpreter like suexec, in
different virtual host ?

thanks

-- 
William - http://wikipython.tuxfamily.org

From grisha at modpython.org  Wed Sep 25 19:42:51 2002
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 22:03:31 2004
Subject: [mod_python] suexec setuid
In-Reply-To: <87fzvxn6cx.fsf@flibuste.net>
Message-ID: <Pine.BSF.4.32.0209251941120.70644-100000@eden.ispol.com>

It should be possible on Apache 2.0 using the perchild MPM. I haven't
tried this. The latest mp 3.0 beta should be pretty stable - give it a try
:)

On 25 Sep 2002, William Dode wrote:

> hi,
>
> Is it possible to change the uid of the interpreter like suexec, in
> different virtual host ?
>
> thanks
>
> --
> William - http://wikipython.tuxfamily.org
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://www.modpython.org/mailman/listinfo/mod_python
>


From neo at https.ru  Thu Sep 26 19:39:29 2002
From: neo at https.ru (Neo Eureka)
Date: Fri Jan  9 22:03:31 2004
Subject: [mod_python] BETA2: problems with configure and make !
In-Reply-To: <Pine.BSF.4.32.0209251941120.70644-100000@eden.ispol.com>
References: <Pine.BSF.4.32.0209251941120.70644-100000@eden.ispol.com>
Message-ID: <5721418898.20020926193929@https.ru>

  Hello !

  I have just tried to configure and make the "BETA2" of mod_python3.
The results are below.
  I was not completely sure to which of 2 lists I should post this,
but it seems I act as a user rather than a developer, so...

  My server runs Linux 7.2 (Enigma), I have just downloaded the latest
release of Apache -- httpd-2.0.42, and was playing with it to see how
things work with it. I have three different versions of Python
installed: 1.5(native), 2.1.3 and 2.2.1. The latter two are installed
as packages (rpm) with corresponding "-devel" packages.

  It seems, all preconditions for successful build of mod_python are
met, but the problems started once I had run 'configure'.

Firstly, it found Python-1.5 and was happy though it requires 2.2.1.
So I tried "./configure --with-python=...". But here, again, it
behaved odd. It was trying to find Python executable, some "Makefile"
and "Include" source directory. Unsuccessfully.

Below is the directory tree of the Python installation:

-- BEGIN --
/usr/local/python-2.2.1/:
total 28
drwxr-sr-x    7 root     root         4096 Sep 10 15:46 ./
drwxr-sr-x   26 root     root         4096 Sep 10 15:46 ../
drwxr-sr-x    2 root     root         4096 Sep 26 17:24 bin/
drwxr-sr-x    3 root     root         4096 Sep 10 15:46 include/
drwxr-sr-x    3 root     root         4096 Sep 10 15:46 lib/
drwxr-sr-x    3 root     root         4096 Sep 10 15:46 man/
drwxr-sr-x    3 root     root         4096 Sep 10 15:46 share/

/usr/local/python-2.2.1/bin:
total 836
drwxr-sr-x    2 root     root         4096 Sep 26 17:24 ./
drwxr-sr-x    7 root     root         4096 Sep 10 15:46 ../
-rwxr-xr-x    1 root     root           49 Apr  9 23:16 pydoc2*
-rwxr-xr-x    1 root     root       838114 Apr  9 23:16 python2*

/usr/local/python-2.2.1/include:
total 12
drwxr-sr-x    3 root     root         4096 Sep 10 15:46 ./
drwxr-sr-x    7 root     root         4096 Sep 10 15:46 ../
drwxr-xr-x    2 root     root         4096 Sep 10 15:47 python2.2/

/usr/local/python-2.2.1/include/python2.2:
[... skipped ...]

/usr/local/python-2.2.1/lib:
total 20
drwxr-sr-x    3 root     root         4096 Sep 10 15:46 ./
drwxr-sr-x    7 root     root         4096 Sep 10 15:46 ../
drwxr-xr-x   14 root     root        12288 Sep 10 15:47 python2.2/

/usr/local/python-2.2.1/lib/python2.2:
[... skipped ...]

/usr/local/python-2.2.1/man:
[... skipped ...]

/usr/local/python-2.2.1/share:
[... skipped ...]
-- END --

It's obvious that "configure" script expects different layout and
filenames. When I added these symlinks to the
"/usr/local/python-2.2.1/bin" directory:

lrwxrwxrwx    1 root     root           20 Sep 26 17:24 Include -> ../include/python2.2/
lrwxrwxrwx    1 root     root            7 Sep 26 17:15 python -> python2*

... "configure" seemed to succeed, though it failed to find "Makefile"
and "Modules" directory.

I also have problems with "make dso" after the above, but I think I
should first investigate the issue myself.

Am I missing something? May be I did something dumb? I still have poor
experience of Linux etc.

Thanks.

---
Neo Eureka / mailto:neo@https.ru


