From grisha at ispol.com  Mon Oct  2 23:26:40 2000
From: grisha at ispol.com (Gregory Trubetskoy)
Date: Fri Jan  9 21:46:02 2004
Subject: [mod_python] retaining state between handlers
Message-ID: <Pine.LNX.4.21.0010022321510.12796-100000@saturn.ispol.com>

For those of you handy with CVS - I've checked in the new version, where
the request object is a real Python object (as opposed to a built-in),
which you can modify.

This allows passing information between handlers by simply doing something
like:

req.myvariable = "something"

in one handler and then using that value in another. 

Note that different subinterpreters will have different requests objects,
even though the underlying built-in (now req._req) is still the same.

--
  Gregory (Grisha) Trubetskoy
       grisha@ispol.com


From bmueller at creotech.com  Tue Oct  3 03:18:07 2000
From: bmueller at creotech.com (Brian Mueller)
Date: Fri Jan  9 21:46:02 2004
Subject: [mod_python] Apache 1.3.12 + mod_python + ??? = segfault
Message-ID: <003101c02d23$3a1ba750$0100a8c0@darkstar>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

Hello,

Recently I installed mod_python on my Apache 1.3.12 setup:

- -----

[root@shiva speedy]# httpd -l
Compiled-in modules:
  http_core.c
  mod_so.c
suexec: enabled; valid wrapper /usr/sbin/suexec
[root@shiva speedy]# httpd -v
Server version: Apache-AdvancedExtranetServer/1.3.12
(NetRevolution/Linux-Mandrake)
Server build: May 8 2000 04:59:44
Performance Tuned by SGI http://www.sgi.com/

- -----

Once I installed it I placed the LoadModule and AddModule at the top of
their respective sections within the httpd.conf file.  I reloaded apache
and checked the error log and the output was as follows:

[Sun Oct  1 04:02:02 2000] [notice] Apache-AdvancedExtranetServer/1.3.12 
(NetRevolution/Linux-Mandrake) mod_ssl/2.6.4 OpenSSL/0.9.5a mod_perl/1.22
mod_python/2.4.1 Python/1.5.2 configured -- resuming normal operations
[Sun Oct  1 04:02:02 2000] [notice] suEXEC mechanism enabled (wrapper:
/usr/sbin/suexec)

- -----


all was well, then I installed the following items.

CURL
PSPELL
mhash 0.8.2
mcrypt 2.5.4
libmcrypt 2.4.4
mcal
php4 4.0.2 (with the above supported + mySQL and PostrgreSQL support)

Once I did this I added the php4 stuff to the httpd.conf file and attempted
to restart.  Nothing happened, httpd -X shows a segmentation fault (core
dumped).  I removed php4 from my httpd.conf file and tried again with the
same results.  I readded php4 to my httpd.conf file and commented out the
mod_python references and now it works, though without mod_python.  

I am hoping that someone can shed some light on this as it appears that
something I installed above has caused mod_python to cease working.  Here
is my most recent error_log entry from after I removed mod_python

- -----

[Tue Oct  3 02:36:38 2000] [notice] Apache-AdvancedExtranetServer/1.3.12 
(NetRevolution/Linux-Mandrake) mod_ssl/2.6.4 OpenSSL/0.9.5a mod_perl/1.22
PHP/4.0.2 configured -- resuming normal operations
[Tue Oct  3 02:36:38 2000] [notice] suEXEC mechanism enabled (wrapper:
/usr/sbin/suexec)

- -----

and here is relavent sections from my httpd.conf file.

- -----

##
## httpd.conf -- Apache HTTP server configuration file
##
# This is the main server configuration file. See URL
http://www.apache.org/
# for instructions.
# Do NOT simply read the instructions in here without understanding
# what they do, if you are unsure consult the online docs. You have been
# warned.  
# Originally by Rob McCool
#---------------------- Use *ONLY* httpd.conf ---------------------------
#
# With all new apache versions, use of access.conf and srm.conf are
# deprecated. We only use httpd.conf.
#
# These 2 directives are needed by some modules, for example FrontPage

#ResourceConfig /dev/null
#AccessConfig /dev/null

#---------------- Dynamic Shared Object (DSO) Support ---------------------
#
# To be able to use the functionality of a module which was built as a DSO
you
# have to place corresponding `LoadModule' lines at this location so the
# directives contained in it are actually available _before_ they are used.
# Please read the file README.DSO in the Apache 1.3 distribution for more
# details about the DSO mechanism and run `httpd -l' for the list of
already
# built-in (statically linked and thus always available) modules in your
httpd
# binary.
#
# Example:
# LoadModule foo_module libexec/mod_foo.so
#
# Documentation for modules is in "/home/httpd/manual/mod" in HTML format.

#LoadModule mmap_static_module modules/mod_mmap_static.so
#LoadModule python_module        modules/mod_python.so
LoadModule env_module         modules/mod_env.so
LoadModule config_log_module  modules/mod_log_config.so
LoadModule agent_log_module   modules/mod_log_agent.so
LoadModule referer_log_module modules/mod_log_referer.so
#LoadModule mime_magic_module  modules/mod_mime_magic.so
LoadModule mime_module        modules/mod_mime.so
LoadModule negotiation_module modules/mod_negotiation.so
LoadModule status_module      modules/mod_status.so
LoadModule info_module        modules/mod_info.so

### You have the choice between mod_include and mod_include_xssi
### Choose only one! mod_include is more secure, while 
### the xssi module has a lot more features
LoadModule includes_module    modules/mod_include.so
#LoadModule includes_module    modules/mod_include_xssi.so

LoadModule autoindex_module   modules/mod_autoindex.so
LoadModule dir_module         modules/mod_dir.so
LoadModule cgi_module         modules/mod_cgi.so
LoadModule asis_module        modules/mod_asis.so
LoadModule imap_module        modules/mod_imap.so
LoadModule action_module      modules/mod_actions.so
#LoadModule speling_module     modules/mod_speling.so
LoadModule userdir_module     modules/mod_userdir.so
LoadModule proxy_module       modules/libproxy.so
LoadModule alias_module       modules/mod_alias.so
LoadModule rewrite_module     modules/mod_rewrite.so
LoadModule access_module      modules/mod_access.so
LoadModule auth_module        modules/mod_auth.so
LoadModule anon_auth_module   modules/mod_auth_anon.so
#LoadModule dbm_auth_module    modules/mod_auth_dbm.so
#LoadModule db_auth_module     modules/mod_auth_db.so
LoadModule digest_module      modules/mod_digest.so
#LoadModule cern_meta_module   modules/mod_cern_meta.so
LoadModule expires_module     modules/mod_expires.so
LoadModule headers_module     modules/mod_headers.so
LoadModule usertrack_module   modules/mod_usertrack.so
#LoadModule example_module     modules/mod_example.so
#LoadModule unique_id_module   modules/mod_unique_id.so
LoadModule setenvif_module    modules/mod_setenvif.so

#  Reconstruction of the complete module list from all available modules
#  (static and shared ones) to achieve correct module execution order.
#  [WHENEVER YOU CHANGE THE LOADMODULE SECTION ABOVE UPDATE THIS, TOO]
ClearModuleList
#AddModule mod_mmap_static.c
#AddModule mod_python.c
AddModule mod_env.c
AddModule mod_log_config.c
AddModule mod_log_agent.c
AddModule mod_log_referer.c
#AddModule mod_mime_magic.c
AddModule mod_mime.c
AddModule mod_negotiation.c
AddModule mod_status.c
AddModule mod_info.c
AddModule mod_include.c
#AdModule mod_include_xssi.c
AddModule mod_autoindex.c
AddModule mod_dir.c
AddModule mod_cgi.c
AddModule mod_asis.c
AddModule mod_imap.c
AddModule mod_actions.c
#AddModule mod_speling.c
AddModule mod_userdir.c
AddModule mod_proxy.c
AddModule mod_alias.c
AddModule mod_rewrite.c
AddModule mod_access.c
AddModule mod_auth.c
AddModule mod_auth_anon.c
#AddModule mod_auth_dbm.c
#AddModule mod_auth_db.c
AddModule mod_digest.c
#AddModule mod_cern_meta.c
AddModule mod_expires.c
AddModule mod_headers.c
AddModule mod_usertrack.c
#AddModule mod_example.c
#AddModule mod_unique_id.c
AddModule mod_so.c
AddModule mod_setenvif.c




####################################
# Add-on Modules and Virtual Hosts #
####################################
#
# Each time we install an add-on module , the post-install script of the
RPM
# adds an "Include" line to read the configuration for that module. When we
# remove the module, we keep the Include line, but we zero out the config 
# file so Apache doesn't complain.
#
# We also put virtual hosts "Includes" in this section. This will be used
by
# administration scripts. Instead of parsing all httpd.conf to modify a
# vhost, we just include the config file. Each type of vhosting has its own
# config file.
#

Include conf/vhosts/Vhosts.conf

Include conf/addon-modules/mod_php4.conf
Include conf/addon-modules/mod_perl.conf
Include conf/ssl/mod_ssl.conf
Include conf/ssl/ssl.default-vhost.conf

- -----

This is in it's currently usable format with mod_python commented out.

Any help would be most appreciated as we had expected to have this new
server online by the end of October.

Thank you,

Brian Mueller


==============================================================
Brian R. Mueller          President and CEO
  CreoTech                "We are the future"

WEB: www.creotech.com     EMAIL: bmueller@creotech.com
PHONE: 513.722.8645       TOLL FREE: 800-972-5290
MOBILE: 513.258.9614      FAX: 419.735.7405
ICQ: 63821393             ICQ Pager: 63821393@pager.icq.com
WIRELESS WEB PAGING: 5132589614@messaging.sprintpcs.com

PGP Key available at http://www.creotech.com/pgp/bmueller.asc
fingerprint:
9AEE DE48 5D4A 1814 996A
5EAA 315B FF76 30CC 159B
ID: 0xF19B87E8

Network Development & Design,
Custom Programming for the desktop and the web
Traditional Print Media, CD-ROM Prototyping - more
==============================================================

-----BEGIN PGP SIGNATURE-----
Version: 6.5.1ckt http://irfaiad.virtualave.net/
Comment: KeyID: 0x315BFF7630CC159B
Comment: Fingerprint: 9AEE DE48 5D4A 1814 996A  5EAA 315B FF76 30CC 159B

iQA/AwUBOdmyXjFb/3YwzBWbEQLfJACgpiQHWdEVTrBztyvZMe/QQhuEU4QAnRcl
qaLUz5eMBrawOVx7jXhiuLWL
=ljD8
-----END PGP SIGNATURE-----



From jeff.schenk at continuumnetworks.com  Wed Oct  4 10:13:59 2000
From: jeff.schenk at continuumnetworks.com (Jeff Schenk)
Date: Fri Jan  9 21:46:02 2004
Subject: [mod_python] Issue with mod_python Fatal Python error
Message-ID: <NEBBKNHPCLJIOJCKGBCIGEIHCCAA.Jeff.Schenk@continuumnetworks.com>

I have built mod_python and configured and made apache, the apache server
comes up fine, however I see several
Fatal Python error: PyThreadState_Get: no current thread

Messages in my error_log file.  Also, when I stop apache it cores.

I am running apache 1.3.12, mod_ssl 2.6.5.1.3.12, mod_perl 1.24 and
mod_python 2.5
I performed a static build.

Please advise, if anyone has suggestions or has run into this problem.

Thanks,
Jeff Schenk
Continuum Networks
Chief Architect of Software Development
805-927-3886

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mailman.modpython.org/pipermail/mod_python/attachments/20001004/e1a5815e/attachment.htm
From miguel at yorku.ca  Wed Oct  4 14:19:15 2000
From: miguel at yorku.ca (Miguel Marques)
Date: Fri Jan  9 21:46:02 2004
Subject: [mod_python] Issue with mod_python Fatal Python error
In-Reply-To: <NEBBKNHPCLJIOJCKGBCIGEIHCCAA.Jeff.Schenk@continuumnetworks.com>
References: <NEBBKNHPCLJIOJCKGBCIGEIHCCAA.Jeff.Schenk@continuumnetworks.com>
Message-ID: <20001004141915N.miguel@yorku.ca>

On Wed, 4 Oct 2000 10:13:59 -0700, "Jeff Schenk" <jeff.schenk@continuumnetworks.com> wrote:
> I have built mod_python and configured and made apache, the apache server
> comes up fine, however I see several
> Fatal Python error: PyThreadState_Get: no current thread
> 
> Messages in my error_log file.  Also, when I stop apache it cores.
> 
> I am running apache 1.3.12, mod_ssl 2.6.5.1.3.12, mod_perl 1.24 and
> mod_python 2.5
> I performed a static build.
> 
> Please advise, if anyone has suggestions or has run into this problem.

I have no suggestion but I'm also experiencing this problem.
Occasionally I see all of apache's children core dump after those
messages.

I've seen the same problem (error message) mentioned in relation to an
earlier version of wxPython.

I'm running SunOS 5.7 with Apache/1.3.12, mod_python/2.5 and
Python/1.5.2 (happens with python 1.6 too).  mod_python is compiled as
a DSO.
A friend of mine mentioned that he has seen the same messages under
Debian as well but I'm not sure of his versions.

							Miguel

C. Miguel Marques, York University, Computing & Network Services
e-mail: miguel@yorku.ca, voice: (416)736-2100x22684, fax: (416)736-5830



From grisha at ispol.com  Wed Oct  4 17:24:50 2000
From: grisha at ispol.com (Gregory Trubetskoy)
Date: Fri Jan  9 21:46:02 2004
Subject: [mod_python] Issue with mod_python Fatal Python error
In-Reply-To: <20001004141915N.miguel@yorku.ca>
Message-ID: <Pine.LNX.4.21.0010041724110.14807-100000@saturn.ispol.com>

Interesting. Is Python built with threads?

--
  Gregory (Grisha) Trubetskoy
       grisha@ispol.com

On Wed, 4 Oct 2000, Miguel Marques wrote:

> On Wed, 4 Oct 2000 10:13:59 -0700, "Jeff Schenk" <jeff.schenk@continuumnetworks.com> wrote:
> > I have built mod_python and configured and made apache, the apache server
> > comes up fine, however I see several
> > Fatal Python error: PyThreadState_Get: no current thread
> > 
> > Messages in my error_log file.  Also, when I stop apache it cores.
> > 
> > I am running apache 1.3.12, mod_ssl 2.6.5.1.3.12, mod_perl 1.24 and
> > mod_python 2.5
> > I performed a static build.
> > 
> > Please advise, if anyone has suggestions or has run into this problem.
> 
> I have no suggestion but I'm also experiencing this problem.
> Occasionally I see all of apache's children core dump after those
> messages.
> 
> I've seen the same problem (error message) mentioned in relation to an
> earlier version of wxPython.
> 
> I'm running SunOS 5.7 with Apache/1.3.12, mod_python/2.5 and
> Python/1.5.2 (happens with python 1.6 too).  mod_python is compiled as
> a DSO.
> A friend of mine mentioned that he has seen the same messages under
> Debian as well but I'm not sure of his versions.
> 
> 							Miguel
> 
> C. Miguel Marques, York University, Computing & Network Services
> e-mail: miguel@yorku.ca, voice: (416)736-2100x22684, fax: (416)736-5830
> 
> 
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://www.modpython.org/mailman/listinfo/mod_python
> 


From jeff.schenk at continuumnetworks.com  Wed Oct  4 14:44:59 2000
From: jeff.schenk at continuumnetworks.com (Jeff Schenk)
Date: Fri Jan  9 21:46:03 2004
Subject: [mod_python] Issue with mod_python Fatal Python error
In-Reply-To: <Pine.LNX.4.21.0010041724110.14807-100000@saturn.ispol.com>
Message-ID: <NEBBKNHPCLJIOJCKGBCIOEIICCAA.Jeff.Schenk@continuumnetworks.com>

Yes, Python 1.5.2 on LINUX was built with threads.  I noticed the Makefile
that was configure to include the mod_python has the correct python libs
and -lpthread specified.

Jeff Schenk
Continuum Networks
Chief Architect of Software Development
805-927-3886


-----Original Message-----
From: mod_python-admin@modpython.org
[mailto:mod_python-admin@modpython.org]On Behalf Of Gregory Trubetskoy
Sent: Wednesday, October 04, 2000 2:25 PM
To: Miguel Marques
Cc: mod_python@modpython.org
Subject: Re: [mod_python] Issue with mod_python Fatal Python error



Interesting. Is Python built with threads?

--
  Gregory (Grisha) Trubetskoy
       grisha@ispol.com

On Wed, 4 Oct 2000, Miguel Marques wrote:

> On Wed, 4 Oct 2000 10:13:59 -0700, "Jeff Schenk"
<jeff.schenk@continuumnetworks.com> wrote:
> > I have built mod_python and configured and made apache, the apache
server
> > comes up fine, however I see several
> > Fatal Python error: PyThreadState_Get: no current thread
> >
> > Messages in my error_log file.  Also, when I stop apache it cores.
> >
> > I am running apache 1.3.12, mod_ssl 2.6.5.1.3.12, mod_perl 1.24 and
> > mod_python 2.5
> > I performed a static build.
> >
> > Please advise, if anyone has suggestions or has run into this problem.
>
> I have no suggestion but I'm also experiencing this problem.
> Occasionally I see all of apache's children core dump after those
> messages.
>
> I've seen the same problem (error message) mentioned in relation to an
> earlier version of wxPython.
>
> I'm running SunOS 5.7 with Apache/1.3.12, mod_python/2.5 and
> Python/1.5.2 (happens with python 1.6 too).  mod_python is compiled as
> a DSO.
> A friend of mine mentioned that he has seen the same messages under
> Debian as well but I'm not sure of his versions.
>
> 							Miguel
>
> C. Miguel Marques, York University, Computing & Network Services
> e-mail: miguel@yorku.ca, voice: (416)736-2100x22684, fax: (416)736-5830
>
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://www.modpython.org/mailman/listinfo/mod_python
>

_______________________________________________
Mod_python mailing list
Mod_python@modpython.org
http://www.modpython.org/mailman/listinfo/mod_python


From grisha at ispol.com  Wed Oct  4 17:59:35 2000
From: grisha at ispol.com (Gregory Trubetskoy)
Date: Fri Jan  9 21:46:03 2004
Subject: [mod_python] Issue with mod_python Fatal Python error
In-Reply-To: <NEBBKNHPCLJIOJCKGBCIOEIICCAA.Jeff.Schenk@continuumnetworks.com>
Message-ID: <Pine.LNX.4.21.0010041756500.14807-100000@saturn.ispol.com>

That may be the problem. I think Apache is built without threads by
default. I've got a redhat box now and I'll see if I can replicate these
problems, but in the meantime, I would try compiling a fresh copy of
Python from sources (it should build without threads by default) and
linking against that for mod_python. (I describe this procedure for
FreeBSD in the install section of the docs)

--
  Gregory (Grisha) Trubetskoy
       grisha@ispol.com

On Wed, 4 Oct 2000, Jeff Schenk wrote:

> Yes, Python 1.5.2 on LINUX was built with threads.  I noticed the Makefile
> that was configure to include the mod_python has the correct python libs
> and -lpthread specified.
> 
> Jeff Schenk
> Continuum Networks
> Chief Architect of Software Development
> 805-927-3886
> 
> 
> -----Original Message-----
> From: mod_python-admin@modpython.org
> [mailto:mod_python-admin@modpython.org]On Behalf Of Gregory Trubetskoy
> Sent: Wednesday, October 04, 2000 2:25 PM
> To: Miguel Marques
> Cc: mod_python@modpython.org
> Subject: Re: [mod_python] Issue with mod_python Fatal Python error
> 
> 
> 
> Interesting. Is Python built with threads?
> 
> --
>   Gregory (Grisha) Trubetskoy
>        grisha@ispol.com
> 
> On Wed, 4 Oct 2000, Miguel Marques wrote:
> 
> > On Wed, 4 Oct 2000 10:13:59 -0700, "Jeff Schenk"
> <jeff.schenk@continuumnetworks.com> wrote:
> > > I have built mod_python and configured and made apache, the apache
> server
> > > comes up fine, however I see several
> > > Fatal Python error: PyThreadState_Get: no current thread
> > >
> > > Messages in my error_log file.  Also, when I stop apache it cores.
> > >
> > > I am running apache 1.3.12, mod_ssl 2.6.5.1.3.12, mod_perl 1.24 and
> > > mod_python 2.5
> > > I performed a static build.
> > >
> > > Please advise, if anyone has suggestions or has run into this problem.
> >
> > I have no suggestion but I'm also experiencing this problem.
> > Occasionally I see all of apache's children core dump after those
> > messages.
> >
> > I've seen the same problem (error message) mentioned in relation to an
> > earlier version of wxPython.
> >
> > I'm running SunOS 5.7 with Apache/1.3.12, mod_python/2.5 and
> > Python/1.5.2 (happens with python 1.6 too).  mod_python is compiled as
> > a DSO.
> > A friend of mine mentioned that he has seen the same messages under
> > Debian as well but I'm not sure of his versions.
> >
> > 							Miguel
> >
> > C. Miguel Marques, York University, Computing & Network Services
> > e-mail: miguel@yorku.ca, voice: (416)736-2100x22684, fax: (416)736-5830
> >
> >
> > _______________________________________________
> > Mod_python mailing list
> > Mod_python@modpython.org
> > http://www.modpython.org/mailman/listinfo/mod_python
> >
> 
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://www.modpython.org/mailman/listinfo/mod_python
> 


From miguel at yorku.ca  Thu Oct  5 11:13:09 2000
From: miguel at yorku.ca (Miguel Marques)
Date: Fri Jan  9 21:46:03 2004
Subject: [mod_python] Issue with mod_python Fatal Python error
In-Reply-To: <Pine.LNX.4.21.0010041724110.14807-100000@saturn.ispol.com>
References: <20001004141915N.miguel@yorku.ca>
	<Pine.LNX.4.21.0010041724110.14807-100000@saturn.ispol.com>
Message-ID: <20001005111309S.miguel@yorku.ca>

On Wed, 4 Oct 2000 17:24:50 -0400 (EDT), Gregory Trubetskoy <grisha@ispol.com> wrote:
> 
> Interesting. Is Python built with threads?
> 
Yes.  Without threads that problem doesn't occur.
Unfortunately I then encounter a intermittent problem with restricted
mode and DocumentTemplate which I use in my application which is even
worse.

							Miguel

C. Miguel Marques, York University, Computing & Network Services
e-mail: miguel@yorku.ca, voice: (416)736-2100x22684, fax: (416)736-5830


From benno at sesgroup.net  Fri Oct  6 19:56:41 2000
From: benno at sesgroup.net (Ben Leslie)
Date: Fri Jan  9 21:46:03 2004
Subject: [mod_python] Issue with mod_python Fatal Python error
In-Reply-To: <Pine.LNX.4.21.0010041756500.14807-100000@saturn.ispol.com>; from grisha@ispol.com on Wed, Oct 04, 2000 at 05:59:35PM -0400
References: <NEBBKNHPCLJIOJCKGBCIOEIICCAA.Jeff.Schenk@continuumnetworks.com> <Pine.LNX.4.21.0010041756500.14807-100000@saturn.ispol.com>
Message-ID: <20001006195641.I1892@bob.sesgroup.net>

Hi Gregory!

On Wed, 04 Oct 2000, Gregory Trubetskoy wrote:

> 
> That may be the problem. I think Apache is built without threads by
> default. I've got a redhat box now and I'll see if I can replicate these
> problems, but in the meantime, I would try compiling a fresh copy of
> Python from sources (it should build without threads by default) and
> linking against that for mod_python. (I describe this procedure for
> FreeBSD in the install section of the docs)
> 

This is strange. I see the same problem in error.log, however it
only seems to occur when apache is stopped. I compiled as a DSO
an mod_python works wonderfully (and so damn fast! (well after coming
from Zope it should be hard ;)). I have been developing on it without
a problem.

Since everything was working i assumed that this was just "normal" but
if its not then i thought i better let you know that it also occurs on
Debian Potato, Python1.5.2, compiled as a DSO.

Cheers,

Benno

From benno at sesgroup.net  Mon Oct  9 11:15:46 2000
From: benno at sesgroup.net (Ben Leslie)
Date: Fri Jan  9 21:46:03 2004
Subject: [mod_python] Apache Segfault
In-Reply-To: <39D457F0.8DF53FC1@LivingLogic.de>; from Matthias.Bauer@livinglogic.de on Fri, Sep 29, 2000 at 10:50:56AM +0200
References: <39D457F0.8DF53FC1@LivingLogic.de>
Message-ID: <20001009111546.A18792@bob.sesgroup.net>

Moin Matthias!

Matthias Bauer schrieb am Freitag, den 29. September 2000:

> Hi everybody,
> 
> I'm having some severe trouble installing mod_python 2.5 with the
> following environment:
> 	SuSE Linux 7.0
> 	Python 2.0b1 with threads
> 	Apache 1.3.12 
> 
> I compiled mod_python.so with the following command:
> 


<snip a bunch of details about apache segfaulting>

I think I _may_ know what the problem is.

I have installed mod_python on my laptop with no problems, very easy
(once I actually read the instructions ;), anyway needed this on one
of the servers, so I asked my sysadmin to install. 

This turned out to be harder than I would have expected, we started 
with apache-ssl and couldn't get the thing working, kept segfaulting.

I said maybe it is a conflict with ssl extensions so we uninstalled 
acpache-ssl and installed apache standard, tried same thing happened.

After much swearing and cursing it turns out that the position of 
mod_python in the LoadModule section is very important.

By placing mod_python as the first Module imported things are good and
work fine, having mod_python as the last module to load causes segfault.

</boring story>

So the moral is:

make sure you load mod_python before other modules.

Gregory: Is this an expected problem? Should I patch the docs? 
(I don't think I have the time or ability to patch the code ;)

Cheers,

Benno

From aiglauer at yahoo.com  Mon Oct  9 01:59:20 2000
From: aiglauer at yahoo.com (Alexis Iglauer)
Date: Fri Jan  9 21:46:03 2004
Subject: [mod_python] Apache Segfault
Message-ID: <20001009085920.28910.qmail@web2204.mail.yahoo.com>

This is (at least used to be) in the docs/FAQ/archives
somewhere - the mod_python module must be the first
module loaded for some unknown and untraceable reason.
 This problem and its solution seems to be appearing
on the list often, perhaps the answer to it should be
highlighted in the docs.

Ciao
Alexis

--- Ben Leslie <benno@sesgroup.net> wrote:
> Moin Matthias!
> 
> Matthias Bauer schrieb am Freitag, den 29. September
> 2000:
> 
> > Hi everybody,
> > 
> > I'm having some severe trouble installing
> mod_python 2.5 with the
> > following environment:
> > 	SuSE Linux 7.0
> > 	Python 2.0b1 with threads
> > 	Apache 1.3.12 
> > 
> > I compiled mod_python.so with the following
> command:
> > 
> 
> 
> <snip a bunch of details about apache segfaulting>
> 
> I think I _may_ know what the problem is.
> 
> I have installed mod_python on my laptop with no
> problems, very easy
> (once I actually read the instructions ;), anyway
> needed this on one
> of the servers, so I asked my sysadmin to install. 
> 
> This turned out to be harder than I would have
> expected, we started 
> with apache-ssl and couldn't get the thing working,
> kept segfaulting.
> 
> I said maybe it is a conflict with ssl extensions so
> we uninstalled 
> acpache-ssl and installed apache standard, tried
> same thing happened.
> 
> After much swearing and cursing it turns out that
> the position of 
> mod_python in the LoadModule section is very
> important.
> 
> By placing mod_python as the first Module imported
> things are good and
> work fine, having mod_python as the last module to
> load causes segfault.
> 
> </boring story>
> 
> So the moral is:
> 
> make sure you load mod_python before other modules.
> 
> Gregory: Is this an expected problem? Should I patch
> the docs? 
> (I don't think I have the time or ability to patch
> the code ;)
> 
> Cheers,
> 
> Benno
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://www.modpython.org/mailman/listinfo/mod_python


__________________________________________________
Do You Yahoo!?
Yahoo! Photos - 35mm Quality Prints, Now Get 15 Free!
http://photos.yahoo.com/

From Matthias.Bauer at LivingLogic.de  Mon Oct  9 11:35:41 2000
From: Matthias.Bauer at LivingLogic.de (Matthias Bauer)
Date: Fri Jan  9 21:46:03 2004
Subject: [mod_python] Apache Segfault
References: <20001009085920.28910.qmail@web2204.mail.yahoo.com>
Message-ID: <39E1916D.7F1BD3A@LivingLogic.de>

Alexis, Benno,

thanks for your input.

I already read about this proposal in the FAQ and tried it out.
Unfortunately, this did not help at all :-((

I also sent email to Erno Kuusela (who added the relevant FAQ entry) and
asked if he could give some additional hints. He did not have any
additional ideas either. But from his answer I learned, that the
segfault he encountered, only showed up, when a request was served. My
problem seems to be different: The segfault already occurs during
startup of the apache httpd daemon.

Benno,
the problems you described when trying to install mod_python on one of
your servers: Did the segfault happen when a request to mod_python came
in or already during startup of the httpd daemon?

--- Matthias



Alexis Iglauer wrote:
> 
> This is (at least used to be) in the docs/FAQ/archives
> somewhere - the mod_python module must be the first
> module loaded for some unknown and untraceable reason.
>  This problem and its solution seems to be appearing
> on the list often, perhaps the answer to it should be
> highlighted in the docs.
> 
> Ciao
> Alexis
-------------- next part --------------
A non-text attachment was scrubbed...
Name: smime.p7s
Type: application/x-pkcs7-signature
Size: 2054 bytes
Desc: S/MIME Cryptographic Signature
Url : http://mailman.modpython.org/pipermail/mod_python/attachments/20001009/82656c2f/smime.bin
From helink at sandia.gov  Mon Oct  9 13:16:11 2000
From: helink at sandia.gov (Hamilton Link)
Date: Fri Jan  9 21:46:03 2004
Subject: [mod_python] mod_python 2.5 error on fresh install
Message-ID: <39E2197B.75988619@sandia.gov>

I sent this to comp.lang.python as well... I'd go the RPM route or the
DSO route but if someone can point me in the right direction I'd just as
soon use the latest version of mod_python (i.e. 2.5). Is there some
problem with the installation file in the (rather limited) online docs?

thanks,
hamilton


> I should probably add that I have the following in my httpd.conf, and that the
> mptest.py file is in $APACHEDIR/htdocs/test -- I wouldn't be overly surprised if
> this is a configuration problem, I'm just not sure what to do to fix it (I'm trying
> a few things though). How am I supposed to tell it where to look for python files
> with such handlers? Am I just supposed to put them in the python directory structure
> -- that doesn't seem right either...
>
>  AddHandler python-program .py
>  PythonHandler mptest
>  PythonDebug On
>
> I'm trying to set up mod_python in Apache. I've built Apache before
and
> everything works fine, but this time I included mod_python amongst the

> statically linked mods (I figured I'd try that and then go back and
try
> the seemingly more complicated process of building mod_python as a
DSO,
> just to compare). Apache still works fine, except for mod_python.
> I RTFM'ed and did what the instructions from modpython.org said,
> modified my httpd.conf etc. but when I try to actually reference a .py

> file I get the following instead:
>
> Mod_python error: "PythonHandler mptest"
>
> Traceback (innermost last):
>
>   File "/usr/lib/python1.5/site-packages/mod_python/apache.py", line
> 135, in Dispatch
>     module = import_module(module_name, req)
>
>   File "/usr/lib/python1.5/site-packages/mod_python/apache.py", line
> 276, in import_module
>     module = __import__(module_name)
>
> ImportError: No module named mptest
>
> I'm new to python, so I'm not crazy about debugging apache.py -- has
> anyone had this problem or does anyone know what I f...ed up?
>
> thanks,
> hamilton



From okamoto at xfiles.intercon.hp.com  Mon Oct  9 12:57:27 2000
From: okamoto at xfiles.intercon.hp.com (Jeff Okamoto)
Date: Fri Jan  9 21:46:03 2004
Subject: [mod_python] mod_python 2.5 error on fresh install
In-Reply-To: <39E2197B.75988619@sandia.gov>; from "Hamilton Link" at Oct 09, 100 1:16 pm
Message-ID: <200010091957.MAA27537@xfiles.intercon.hp.com>

> I sent this to comp.lang.python as well... I'd go the RPM route or the
> DSO route but if someone can point me in the right direction I'd just as
> soon use the latest version of mod_python (i.e. 2.5). Is there some
> problem with the installation file in the (rather limited) online docs?

Yes, the INSTALL file and Tutorial (from the web site) are both incorrect
in describing the installation and test procedures.

To get things working with how you've set them up, you will need to wrap
your three-line section to look like:

<Directory /path/to/apache/htdocs/test>
	AddHandler python-program .py
	PythonHandler mptest
	PythonDebug On
</Directory>

Then simply access any URI on your system and just make sure that it has
a .py suffix.  Instead of a 404, you should get the test output from
mptest.py.  If you do see a 404, then something is still broken.

Jeff

From grisha at ispol.com  Mon Oct  9 15:55:47 2000
From: grisha at ispol.com (Gregory Trubetskoy)
Date: Fri Jan  9 21:46:03 2004
Subject: [mod_python] mod_python 2.5 error on fresh install
In-Reply-To: <39E2197B.75988619@sandia.gov>
Message-ID: <Pine.LNX.4.21.0010091554160.18580-100000@saturn.ispol.com>

There is a bug in the documentation. Either put the directives below in an
.htaccess file, or wrap them inside <Directory> tags, like this

<Directory /full/path/to/mptest.py>
  SetHandler blah blah....
</Directory>

--
  Gregory (Grisha) Trubetskoy
       grisha@ispol.com

On Mon, 9 Oct 2000, Hamilton Link wrote:

> I sent this to comp.lang.python as well... I'd go the RPM route or the
> DSO route but if someone can point me in the right direction I'd just as
> soon use the latest version of mod_python (i.e. 2.5). Is there some
> problem with the installation file in the (rather limited) online docs?
> 
> thanks,
> hamilton
> 
> 
> > I should probably add that I have the following in my httpd.conf, and that the
> > mptest.py file is in $APACHEDIR/htdocs/test -- I wouldn't be overly surprised if
> > this is a configuration problem, I'm just not sure what to do to fix it (I'm trying
> > a few things though). How am I supposed to tell it where to look for python files
> > with such handlers? Am I just supposed to put them in the python directory structure
> > -- that doesn't seem right either...
> >
> >  AddHandler python-program .py
> >  PythonHandler mptest
> >  PythonDebug On
> >
> > I'm trying to set up mod_python in Apache. I've built Apache before
> and
> > everything works fine, but this time I included mod_python amongst the
> 
> > statically linked mods (I figured I'd try that and then go back and
> try
> > the seemingly more complicated process of building mod_python as a
> DSO,
> > just to compare). Apache still works fine, except for mod_python.
> > I RTFM'ed and did what the instructions from modpython.org said,
> > modified my httpd.conf etc. but when I try to actually reference a .py
> 
> > file I get the following instead:
> >
> > Mod_python error: "PythonHandler mptest"
> >
> > Traceback (innermost last):
> >
> >   File "/usr/lib/python1.5/site-packages/mod_python/apache.py", line
> > 135, in Dispatch
> >     module = import_module(module_name, req)
> >
> >   File "/usr/lib/python1.5/site-packages/mod_python/apache.py", line
> > 276, in import_module
> >     module = __import__(module_name)
> >
> > ImportError: No module named mptest
> >
> > I'm new to python, so I'm not crazy about debugging apache.py -- has
> > anyone had this problem or does anyone know what I f...ed up?
> >
> > thanks,
> > hamilton
> 
> 
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://www.modpython.org/mailman/listinfo/mod_python
> 


From jon+modpython at unequivocal.co.uk  Tue Oct 10 14:43:52 2000
From: jon+modpython at unequivocal.co.uk (Jon Ribbens)
Date: Fri Jan  9 21:46:03 2004
Subject: [mod_python] Compile failure - init_socket multiply defined
Message-ID: <20001010144352.B22656@snowy.squish.net>

I'm trying to compile mod_python 2.5 as a DSO with Apache 1.3.12 and
Python 2.0c1 on OpenBSD 2.7-ish.

I do:

apxs -I /usr/local/include/python2.0 -c mod_python.c /usr/local/lib/python2.0/config/libpython2.0.a

It says:

gcc -DDEV_RANDOM=/dev/arandom -DMOD_SSL=206102 -DEAPI -DUSE_EXPAT -I../lib/expat-lite -g -fPIC -DSHARED_MODULE -I/usr/lib/apache/include -pthread -I/usr/local/include/python2.0  -c mod_python.c
ld -Bforcearchive -Bshareable -o mod_python.so mod_python.o /usr/local/lib/python2.0/config/libpython2.0.a -lc_r
./socketmodule.c:2377: Definition of symbol `_init_socket' (multiply defined)
./socketmodule.c:2377: Definition of symbol `_init_socket' (multiply defined)
apxs:Break: Command failed with rc=65536

I am completely mystified as to why it says that init_socket is multiply
defined. I can't see more than one definition anywhere. Does anyone have
any suggestions?

From jon+modpython at unequivocal.co.uk  Tue Oct 10 14:59:32 2000
From: jon+modpython at unequivocal.co.uk (Jon Ribbens)
Date: Fri Jan  9 21:46:03 2004
Subject: [mod_python] Compile failure - init_socket multiply defined
In-Reply-To: <20001010144352.B22656@snowy.squish.net>; from jon+modpython@unequivocal.co.uk on Tue, Oct 10, 2000 at 02:43:52PM +0100
References: <20001010144352.B22656@snowy.squish.net>
Message-ID: <20001010145932.C22656@snowy.squish.net>

Jon Ribbens <jon+modpython@unequivocal.co.uk> wrote:
> I am completely mystified as to why it says that init_socket is multiply
> defined.

Hmm, ok, fixed that one. Compiled Python wrong with two _socket modules.

Next problem. ld gives thousands of:

ld: /usr/local/lib/python2.0/config/libpython2.0.a(main.o): RRS text relocation at 0x114bc6 for "___sF"
ld: /usr/local/lib/python2.0/config/libpython2.0.a(main.o): RRS text relocation at 0x114bb8 for "_fprintf"
ld: /usr/local/lib/python2.0/config/libpython2.0.a(main.o): RRS text relocation at 0x114bb3 for "___sF"
ld: /usr/local/lib/python2.0/config/libpython2.0.a(getbuildinfo.o): RRS text relocation at 0x115308 for "_sprintf"

etc. I have no idea what this means either ;-)

From arhiv at freemail.org.mk  Tue Oct 10 18:55:39 2000
From: arhiv at freemail.org.mk (Damjan)
Date: Fri Jan  9 21:46:03 2004
Subject: [mod_python] Session managment for mod_python
Message-ID: <Pine.LNX.4.21.0010101853340.229-100000@localhost.localdomain>

Is there some sollution for session managment in mod_python. I actually
have some ideas how to build this, but wanted to check first, if someone
else has solved this problem.  Thanks.


-- 
damjan

    Linux is like a vigwam, no windows, no gates, just apache inside.


From grisha at ispol.com  Tue Oct 10 14:54:10 2000
From: grisha at ispol.com (Gregory Trubetskoy)
Date: Fri Jan  9 21:46:03 2004
Subject: [mod_python] Session managment for mod_python
In-Reply-To: <Pine.LNX.4.21.0010101853340.229-100000@localhost.localdomain>
Message-ID: <Pine.LNX.4.21.0010101453430.19865-100000@saturn.ispol.com>

what do you mean by session management?


On Tue, 10 Oct 2000, Damjan wrote:

> Is there some sollution for session managment in mod_python. I actually
> have some ideas how to build this, but wanted to check first, if someone
> else has solved this problem.  Thanks.
> 
> 
> -- 
> damjan
> 
>     Linux is like a vigwam, no windows, no gates, just apache inside.
> 
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://www.modpython.org/mailman/listinfo/mod_python
> 


From benno at sesgroup.net  Wed Oct 11 09:33:58 2000
From: benno at sesgroup.net (Ben Leslie)
Date: Fri Jan  9 21:46:03 2004
Subject: [mod_python] Session managment for mod_python
In-Reply-To: <Pine.LNX.4.21.0010101853340.229-100000@localhost.localdomain>; from arhiv@freemail.org.mk on Tue, Oct 10, 2000 at 06:55:39PM +0200
References: <Pine.LNX.4.21.0010101853340.229-100000@localhost.localdomain>
Message-ID: <20001011093358.A4501@bob.sesgroup.net>

Hi Damjan!

On Tue, 10 Oct 2000, Damjan wrote:

> Is there some sollution for session managment in mod_python. I actually
> have some ideas how to build this, but wanted to check first, if someone
> else has solved this problem.  Thanks.
> 


It is pretty easy todo, and really depends a lot on the application you 
are using no how you would want to implement it, and what level of security
you want to build into it.

There are many many things potentially involved in session management.

Firstly, do you want to store the session key as a cookie or as part of
the url (eg ?key=12331232 ).

Secondly, do you want to store keys in a database, in memory, in a file
system.

Thirdly, what data do you want to store between sessions? Simlpy what
user is logged in, other 'simple' information or complex stuff like
class objects in memory.

Finally, how long is a session, when does it end, do you rely on client
 side expiring cookies, do you allow the session cookie to be used for
multiple requests, or do you issue a new cookie each time to reduce the
change of someone stealing the cookie and using it to login as the 
correct user?

I have done a session management for my first project in mod_python, 
using a backend postgres database. I use it simply to track the user
that is logged in. I am using cookies to store the session key. 
Each new page the client is issued with a new cookie, the cookie is 
checked server side that it is still valid (I have a ten minute
time-out on the cookie).

Hope this helps,

Benno

From gdamjan at freemail.org.mk  Wed Oct 11 23:15:35 2000
From: gdamjan at freemail.org.mk (Damjan Georgievski)
Date: Fri Jan  9 21:46:03 2004
Subject: [mod_python] Session managment for mod_python
In-Reply-To: <20001011093358.A4501@bob.sesgroup.net>
Message-ID: <Pine.LNX.4.21.0010112306550.691-100000@localhost.localdomain>

> Hi Damjan!
> > Is there some sollution for session managment in mod_python. I actually
> > have some ideas how to build this, but wanted to check first, if someone
> > else has solved this problem.  Thanks.
> 
> It is pretty easy todo, and really depends a lot on the application you 
> are using no how you would want to implement it, and what level of security
> you want to build into it.
> 
> There are many many things potentially involved in session management.
> 
> Firstly, do you want to store the session key as a cookie or as part of
> the url (eg ?key=12331232 ).
> 
> Secondly, do you want to store keys in a database, in memory, in a file
> system.
> 
> Thirdly, what data do you want to store between sessions? Simlpy what
> user is logged in, other 'simple' information or complex stuff like
> class objects in memory.

I know there are many possible ways of doing this, but I can't say which
way is better (key or cookie , memory/database/file). But for sure I
would like to store a whole object.
 
> Finally, how long is a session, when does it end, do you rely on client
>  side expiring cookies, do you allow the session cookie to be used for
> multiple requests, or do you issue a new cookie each time to reduce the
> change of someone stealing the cookie and using it to login as the 
> correct user?
> 
> I have done a session management for my first project in mod_python, 
> using a backend postgres database. I use it simply to track the user
> that is logged in. I am using cookies to store the session key. 
> Each new page the client is issued with a new cookie, the cookie is 
> checked server side that it is still valid (I have a ten minute
> time-out on the cookie).

Mainly this is what I thought I would do, but many thanks for the cookie
expiration hint.
 
I just think, there should be a standrard mod_python module, with
a simple interface that automates the hard work. This (and embeded
Python support) will finnish-up mod_python to be much more stronger
compared to mod_perl.

Thanks.


-- 
damjan




From arhiv at freemail.org.mk  Wed Oct 11 23:19:08 2000
From: arhiv at freemail.org.mk (Damjan)
Date: Fri Jan  9 21:46:03 2004
Subject: [mod_python] Session managment for mod_python
Message-ID: <Pine.LNX.4.21.0010112317150.691-100000@localhost.localdomain>

> Hi Damjan!
> > Is there some sollution for session managment in mod_python. I actually
> > have some ideas how to build this, but wanted to check first, if someone
> > else has solved this problem.  Thanks.
> 
> It is pretty easy todo, and really depends a lot on the application you 
> are using no how you would want to implement it, and what level of security
> you want to build into it.
> 
> There are many many things potentially involved in session management.
> 
> Firstly, do you want to store the session key as a cookie or as part of
> the url (eg ?key=12331232 ).
> 
> Secondly, do you want to store keys in a database, in memory, in a file
> system.
> 
> Thirdly, what data do you want to store between sessions? Simlpy what
> user is logged in, other 'simple' information or complex stuff like
> class objects in memory.

I know there are many possible ways of doing this, but I can't say which
way is better (key or cookie , memory/database/file). But for sure I
would like to store a whole object.
 
> Finally, how long is a session, when does it end, do you rely on client
>  side expiring cookies, do you allow the session cookie to be used for
> multiple requests, or do you issue a new cookie each time to reduce the
> change of someone stealing the cookie and using it to login as the 
> correct user?
> 
> I have done a session management for my first project in mod_python, 
> using a backend postgres database. I use it simply to track the user
> that is logged in. I am using cookies to store the session key. 
> Each new page the client is issued with a new cookie, the cookie is 
> checked server side that it is still valid (I have a ten minute
> time-out on the cookie).

Mainly this is what I thought I would do, but many thanks for the cookie
expiration hint.
 
I just think, there should be a standard mod_python.session module, with
a simple interface that automates the hard work. This (and embeded
Python support) will finnish-up mod_python to be much more stronger
compared to mod_perl.

Thanks.


-- 
damjan





From python at ragnark.vestdata.no  Thu Oct 12 18:57:47 2000
From: python at ragnark.vestdata.no (=?iso-8859-1?Q?Ragnar_Kj=F8rstad?=)
Date: Fri Jan  9 21:46:03 2004
Subject: [mod_python] Apache configuration
Message-ID: <20001012185747.A27459@vestdata.no>

Hi

The tutorial explains how to set up Apache to run myscript.py to handle
all requests to .py URL's, and points out that it does not actually use
the URL.

However, it does not explain how to configure Apache to run the files
themselves!?

Thanks


-- 
Ragnar Kj?rstad

From benno at sesgroup.net  Fri Oct 13 09:17:07 2000
From: benno at sesgroup.net (Ben Leslie)
Date: Fri Jan  9 21:46:03 2004
Subject: [mod_python] Apache configuration
In-Reply-To: <20001012185747.A27459@vestdata.no>; from python@ragnark.vestdata.no on Thu, Oct 12, 2000 at 06:57:47PM +0200
References: <20001012185747.A27459@vestdata.no>
Message-ID: <20001013091707.B22482@bob.sesgroup.net>

Hi Ragnar!

On Thu, 12 Oct 2000, Ragnar Kj?rstad wrote:

> Hi
> 
> The tutorial explains how to set up Apache to run myscript.py to handle
> all requests to .py URL's, and points out that it does not actually use
> the URL.
> 
> However, it does not explain how to configure Apache to run the files
> themselves!?
> 

Well that is up to your request_handler and what you actually want it to do.

If you want to use traditional cgi-like python scripts then you probably should
use the cgihandler.py as your request_handler. However there is often processing
that you wish to occur with each requst, this is where you would write you
own request_handler. You are able to get access to the uri passed by using the 
req.uri variable.

Hope that helps,

Benno

From sitongia at cgd.ucar.edu  Fri Oct 13 14:33:19 2000
From: sitongia at cgd.ucar.edu (Leonard Sitongia)
Date: Fri Jan  9 21:46:03 2004
Subject: [mod_python] DSO: __muldi3: referenced symbol
Message-ID: <200010132033.OAA28768@bearmtn-e0.cgd.ucar.edu>

Hi,

I'm trying to build mod_python as a DSO on
SunOS goldhill 5.6 Generic_105181-17 sun4u sparc SUNW,Ultra-1
with apache-1.3.12, using the following command:

apxs -a -i -I /opt/local/python/include/python1.5 -c mod_python.c 
/opt/local/python/lib/python1.5/config/libpython1.5.a 
/opt/local/tcl/lib/libtcl8.3.so /opt/local/tk/lib/libtk8.3.so -lm

The result from starting Apache is:

starting Apache
Syntax error on line 228 of /web/apache/conf/httpd.conf:
Cannot load /opt/local/apache-1.3.12/libexec/mod_python.so into server: ld.so.1: 
/opt/local/apache/bin/httpd: fatal: relocation error: file 
/opt/local/apache-1.3.12/libexec/mod_python.so: symbol __muldi3: referenced 
symbol not found

I can only find this symbol in the python library, but cannot find any
information about it via a google search or via the Python web sites.

Looks like some kind of multiply and divide routines.  Anyone recognize
this and can give me a tip on what to do from here (short of compiling
this into Apache).

Thanks.

==Leonard E. Sitongia           
--Information Systems Group / Climate and Global Dynamics
  National Center for Atmospheric Research
  P.O. Box 3000 Boulder CO 80307  USA
  sitongia@ucar.edu    voice: (303)497-1338   fax: (303)497-2699


From jeremy at beopen.com  Fri Oct 13 19:18:34 2000
From: jeremy at beopen.com (Jeremy Hylton)
Date: Fri Jan  9 21:46:03 2004
Subject: [mod_python] [ANNOUNCE] Ninth International Python Conference
Message-ID: <14823.38986.426523.88704@bitdiddle.concentric.net>

CALL FOR PAPERS, POSTERS, AND PARTICIPATION
Ninth International Python Conference
March 5-8, 2001
Long Beach, California
Web site: http://python9.org

The 9th International Python Conference (Python 9) is a forum for
Python users, software developers, and researchers to present current
work, discuss future plans for the language and commercial
applications, and learn about interesting uses of Python. The
conference will consist of a day of tutorials, two days of refereed
paper and application tracks -- including a Zope track and a
multi-technology Python Applications Track, a developers' day, a small
exhibition, demonstrations, and posters.

Paper submission deadline: Monday, November 6, 2000 
Notification of acceptance: Monday, December 11, 2000 
Final papers due: Monday, January 15, 2001 

Authors are invited to submit papers for the Refereed Paper Track
that: 

* Present new and useful applications and tools that utilize Python 
* Describe the use of Python in large, mission-critical or unusual
  applications  
* Address practical programming problems, and provide lessons based on
  experience for Python programmers  

Full information is available on the website, http://python9.org 


From brad at kk208.ocsstud.gu.edu.au  Sat Oct 14 15:20:01 2000
From: brad at kk208.ocsstud.gu.edu.au (Brad Dick)
Date: Fri Jan  9 21:46:03 2004
Subject: [mod_python] undefined symbol: openpty
Message-ID: <20001014152001.A6317@kk208.ocsstud.gu.edu.au>

Umm... can anyone explain to me why I get undefined symbol errors when I start up Apache.

I'm running Python 2.0b2, Apache 1.3.12, PHP 4.0.3, on a Red Hat 6.2. Everything mentioned was built from source on this machine.

I was actually getting an undefined symbol: dbopen error. However, its now changed to an undefined symbol: openpty. This is getting frustrating to say the least. If someone can help, please respond

Brad

From arhiv at freemail.org.mk  Sun Oct 15 15:10:06 2000
From: arhiv at freemail.org.mk (Damjan)
Date: Fri Jan  9 21:46:03 2004
Subject: [mod_python] Session managment for mod_python
In-Reply-To: <Pine.LNX.4.21.0010101453430.19865-100000@saturn.ispol.com>
Message-ID: <Pine.LNX.4.21.0010151452160.542-100000@localhost.localdomain>

> what do you mean by session management?
> 
The best session managment would be a Python dictionary, that is global
to all subinterpreters, and all Apache processes, and that retains its
state across handlers and requests.

Let me illustrate what can be done with this. For example you have
people log-in to your site and you first create a "User" object, set
some attributes to it (ex. preferences). Then you create a semi-random
string, you send that string as a cookie to the users browser, and use
the string as a key in the session managment dictionary. Later when that
user accesses another page on your site, the only thing you do is:

		from mod_python.session_managment import SM
		cookie = getcookie("something")
		user = SM[cookie]
		buf = "Hello " + user.real_name
		if user.show_folders
			# do stuff
		if user.something
			# do other stuff
		...
		etc.

Of course you could do this with a database and pickle-ing the user
object. Or you could do this with a shared memory.

Do you think there should be a standard mod_python module that does all
of this?  

-- 
damjan



From grisha at ispol.com  Sun Oct 15 17:16:53 2000
From: grisha at ispol.com (Gregory Trubetskoy)
Date: Fri Jan  9 21:46:03 2004
Subject: [mod_python] Session managment for mod_python
In-Reply-To: <Pine.LNX.4.21.0010151452160.542-100000@localhost.localdomain>
Message-ID: <Pine.LNX.4.21.0010151706400.24269-100000@saturn.ispol.com>

On Sun, 15 Oct 2000, Damjan wrote:

> > what do you mean by session management?
> > 
> The best session managment would be a Python dictionary, that is global
> to all subinterpreters, and all Apache processes, and that retains its
> state across handlers and requests.

Let me guess - if Apache process is restarted, you would like the state to
be retained througout the restart?

> Let me illustrate what can be done with this. 

[snip]

> Of course you could do this with a database and pickle-ing the user
> object. Or you could do this with a shared memory.

I think you answered your own question - this sort of thing is best done
with a database.

I see Apache (and mod_python, which is just an interface to it) as a
process responsible for serving requests, but not a database, data storage
is not one of its functions, and it is well suited for delegating that
function to a database. 

If you think about it carefully, there is a slew of issues one has to
consider to implement something like this. Locking alone could be pretty
complicated. Why bother with any of this, if something like MySQL already
does all of those things very efficiently.

Hope this doesn't dicourage you from using of mod_python. In fact writing
a mod_python handler that would provide a framework that would use a
database and work as you describe could be a very interesting project.

Grisha


From benno at sesgroup.net  Mon Oct 16 08:46:55 2000
From: benno at sesgroup.net (Ben Leslie)
Date: Fri Jan  9 21:46:03 2004
Subject: [mod_python] Session managment for mod_python
In-Reply-To: <Pine.LNX.4.21.0010151706400.24269-100000@saturn.ispol.com>; from grisha@ispol.com on Sun, Oct 15, 2000 at 05:16:53PM -0400
References: <Pine.LNX.4.21.0010151452160.542-100000@localhost.localdomain> <Pine.LNX.4.21.0010151706400.24269-100000@saturn.ispol.com>
Message-ID: <20001016084655.A6193@bob.sesgroup.net>

On Sun, 15 Oct 2000, Gregory Trubetskoy wrote:

> 
> On Sun, 15 Oct 2000, Damjan wrote:
> 
> > > what do you mean by session management?
> > > 
> > The best session managment would be a Python dictionary, that is global
> > to all subinterpreters, and all Apache processes, and that retains its
> > state across handlers and requests.
> 
> Let me guess - if Apache process is restarted, you would like the state to
> be retained througout the restart?

I would count it as dynamic data that can be lost. I am thinking this thing
would be great as a cache mainly for expensive database lookups, caching files
into memory for faster loading.

 
> > Let me illustrate what can be done with this. 
> 
> [snip]
> 
> > Of course you could do this with a database and pickle-ing the user
> > object. Or you could do this with a shared memory.
> 
> I think you answered your own question - this sort of thing is best done
> with a database.
> 
> I see Apache (and mod_python, which is just an interface to it) as a
> process responsible for serving requests, but not a database, data storage
> is not one of its functions, and it is well suited for delegating that
> function to a database. 

Data storage no, caching yes.

 
> If you think about it carefully, there is a slew of issues one has to
> consider to implement something like this. Locking alone could be pretty
> complicated. Why bother with any of this, if something like MySQL already
> does all of those things very efficiently.

There are a lot of issues, however squeezing some more performance out of
my application by caching files and the like would be extremely useful.
 
The question is the implemenation, afaict apache does not have a global shared
memroy by default, although there seems to be optional patches that can be
compiled in to give you access to to this memory, from what I can tell if we
had access to this interface it would be possible to create a global dictionary
in mod_python to suppport this. Is it worth creating extensions to mod_python
which rely on patches to the apache core?

If anyone with more apache experience than i have could make any comments I would
appreciate it.


Regards,

Ben Leslie

From grisha at ispol.com  Sun Oct 15 21:58:05 2000
From: grisha at ispol.com (Gregory Trubetskoy)
Date: Fri Jan  9 21:46:03 2004
Subject: [mod_python] Session managment for mod_python
In-Reply-To: <20001016084655.A6193@bob.sesgroup.net>
Message-ID: <Pine.LNX.4.21.0010152142581.24379-100000@saturn.ispol.com>

On Mon, 16 Oct 2000, Ben Leslie wrote:

> On Sun, 15 Oct 2000, Gregory Trubetskoy wrote:
> 
> > Let me guess - if Apache process is restarted, you would like the state to
> > be retained througout the restart?
> 
> I would count it as dynamic data that can be lost. I am thinking this thing
> would be great as a cache mainly for expensive database lookups, caching files
> into memory for faster loading.

The only example of dynamic data that can be lost that I can think of is
static, e.g. a list of zipcodes or a cached file, but that doesn't need to
be shared between apache processes - each process can have its own copy.

On the other hand database lookups are probably a lot cheaper than you
think. A simple retrival on a keyed table is not all that far from a
Python dictionary lookup, and most databases will do a great job at
caching queries in memory. The thing I don't like about databases is that
Python still lacks a consistent database API like perl's DBI, but that's a
different issue altogether...

There *are* some cases where shared memory is a must. In particular,
things relating to encryption where keys are exchanged at connection
initiation time. Apache 2.0 addresses those problems, I think there is not
a lot of sense in trying to solve this on 1.3.... I'd rather spend the
time porting mod_python to 2.0.

Grisha



From benno at sesgroup.net  Mon Oct 16 13:35:33 2000
From: benno at sesgroup.net (Ben Leslie)
Date: Fri Jan  9 21:46:03 2004
Subject: [mod_python] Session managment for mod_python
In-Reply-To: <Pine.LNX.4.21.0010152142581.24379-100000@saturn.ispol.com>; from grisha@ispol.com on Sun, Oct 15, 2000 at 09:58:05PM -0400
References: <20001016084655.A6193@bob.sesgroup.net> <Pine.LNX.4.21.0010152142581.24379-100000@saturn.ispol.com>
Message-ID: <20001016133533.A6990@bob.sesgroup.net>

On Sun, 15 Oct 2000, Gregory Trubetskoy wrote:

> 
> On Mon, 16 Oct 2000, Ben Leslie wrote:
> 
> > On Sun, 15 Oct 2000, Gregory Trubetskoy wrote:
> > 
> > > Let me guess - if Apache process is restarted, you would like the state to
> > > be retained througout the restart?
> > 
> > I would count it as dynamic data that can be lost. I am thinking this thing
> > would be great as a cache mainly for expensive database lookups, caching files
> > into memory for faster loading.
> 
> The only example of dynamic data that can be lost that I can think of is
> static, e.g. a list of zipcodes or a cached file, but that doesn't need to
> be shared between apache processes - each process can have its own copy.

This is true but if you have 100 connection you then have 100 times the 
memory. Then again, memory is cheap and programmer time isn't ;)
 
> On the other hand database lookups are probably a lot cheaper than you
> think. A simple retrival on a keyed table is not all that far from a
> Python dictionary lookup, and most databases will do a great job at
> caching queries in memory.

This is true, and since you can have a persistent connection to the DB for
each thread this works quite well. It is more the expensive functions that 
I've worried about, but again these could be cached on a per thread basis.

> The thing I don't like about databases is that
> Python still lacks a consistent database API like perl's DBI, but that's a
> different issue altogether...

Not entriely true there is the DBAPI from the DB-SIG:

http://www.python.org/topics/database/DatabaseAPI-2.0.html
 
> There *are* some cases where shared memory is a must. In particular,
> things relating to encryption where keys are exchanged at connection
> initiation time. Apache 2.0 addresses those problems, I think there is not
> a lot of sense in trying to solve this on 1.3.... I'd rather spend the
> time porting mod_python to 2.0.

Yep, that makes a lot of sense. I didn't know wether apache 2.0 solved this
or not (and couldn't find the answer after looking at the docs).

Cheers,

Benno

From Matthias.Bauer at LivingLogic.de  Mon Oct 16 07:48:24 2000
From: Matthias.Bauer at LivingLogic.de (Matthias Bauer)
Date: Fri Jan  9 21:46:03 2004
Subject: [mod_python] undefined symbol: openpty
References: <20001014152001.A6317@kk208.ocsstud.gu.edu.au>
Message-ID: <39EA96A8.D99DC3DF@LivingLogic.de>

Hi Brad,

I ran into some similar problems, when I started out with mod_python.

I had to include lots of shared libraries until I did no longer get
these undefined symbol errors. If I remember it right, openpty is
defined in libutil.a. But after you include that you may run into some
more undefined symbols. You just have to include all the necessary
libraries until it works.

However I never got mod_python to run after I underwent this lengthy
process - I finally ran into some Segfault, where I got stuck and simply
stopped wasting time.

Please let me know about your experience after you finally manage to get
rid of all these unresolved symbol errors.

Good luck,

--- Matthias

Brad Dick wrote:
> 
> Umm... can anyone explain to me why I get undefined symbol errors when I start up Apache.
> 
> I'm running Python 2.0b2, Apache 1.3.12, PHP 4.0.3, on a Red Hat 6.2. Everything mentioned was built from source on this machine.
> 
> I was actually getting an undefined symbol: dbopen error. However, its now changed to an undefined symbol: openpty. This is getting frustrating to say the least. If someone can help, please respond
> 
> Brad
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://www.modpython.org/mailman/listinfo/mod_python
-------------- next part --------------
A non-text attachment was scrubbed...
Name: smime.p7s
Type: application/x-pkcs7-signature
Size: 2054 bytes
Desc: S/MIME Cryptographic Signature
Url : http://mailman.modpython.org/pipermail/mod_python/attachments/20001016/9b49d361/smime.bin
From michael at stroeder.com  Mon Oct 16 08:44:19 2000
From: michael at stroeder.com (Michael =?iso-8859-1?Q?Str=F6der?=)
Date: Fri Jan  9 21:46:03 2004
Subject: [mod_python] Session managment for mod_python
References: <Pine.LNX.4.21.0010152142581.24379-100000@saturn.ispol.com>
Message-ID: <39EAA3C3.211E2B92@stroeder.com>

Gregory Trubetskoy wrote:
> 
> There *are* some cases where shared memory is a must.
> [..]
> Apache 2.0 addresses those problems, I think there is not
> a lot of sense in trying to solve this on 1.3.... I'd rather spend the
> time porting mod_python to 2.0.

Yes, you're right. Don't waste your time working around problems
which are solved in Apache 2.0.

Ciao, Michael.

From michael at stroeder.com  Mon Oct 16 08:41:48 2000
From: michael at stroeder.com (Michael =?iso-8859-1?Q?Str=F6der?=)
Date: Fri Jan  9 21:46:03 2004
Subject: [mod_python] Session managment for mod_python
References: <Pine.LNX.4.21.0010151706400.24269-100000@saturn.ispol.com>
Message-ID: <39EAA32C.861524CB@stroeder.com>

Gregory Trubetskoy wrote:
> 
> On Sun, 15 Oct 2000, Damjan wrote:
> 
> > > what do you mean by session management?
> > >
> > The best session managment would be a Python dictionary, that is global
> > to all subinterpreters, and all Apache processes, and that retains its
> > state across handlers and requests.
> 
> Let me guess - if Apache process is restarted, you would like the state to
> be retained througout the restart?

If Apache starts session data can be lost.

> > Of course you could do this with a database and pickle-ing the user
> > object. Or you could do this with a shared memory.
> 
> I think you answered your own question - this sort of thing is best done
> with a database.

Some objects are not pickeable but worth to be kept in a session
cache. E.g. connection objects of a database access.

Nevertheless most web applications could provide a session managment
themselves. There are some projects which implement this for Python
(e.g. webware etc.)

Ciao, Michael.

From artrussia at newmail.ru  Sat Oct 14 11:54:51 2000
From: artrussia at newmail.ru (Boris Lipner)
Date: Fri Jan  9 21:46:04 2004
Subject: [mod_python] Art
Message-ID: <421256896.20001014115451@newmail.ru>

Dear Madam and Sir,

The Art Gallery  Gallery-Ainvites you to the new exhibitions.
Today on our page you can see more than 200 new wonderful paintings. We hope you will like them.

Our company, "GALLERY-A"  www.gallery-a.ru  , offer both modern and classical
art, deals in a line of pieces of art by talented artists. Their works  include original
paintings, sculptures, etc., copies of masterpieces of various styles, countries and epochs,
portraits made to order. These
professional artists are high-skilled graduates of educational institutions such as the Academy
of Fine Arts, High School for Arts and Design and other art colleges. 

You establish contact and find out new customers who would like to buy a masterpiece of
realistic Art.

SITE: www.gallery-a.ru
E-MAIL: gallery-a@peterlink.ru

Best regards
Boris Lipner, General Manager.

If you want to REMOVE your E-maiIL from our Post List PLEASE send letter to artrussia@newmail.ru



From grisha at verio.net  Mon Oct 16 10:13:13 2000
From: grisha at verio.net (Gregory Trubetskoy)
Date: Fri Jan  9 21:46:04 2004
Subject: [mod_python] Session managment for mod_python
References: <Pine.LNX.4.21.0010151706400.24269-100000@saturn.ispol.com> <39EAA32C.861524CB@stroeder.com>
Message-ID: <39EB1B09.AF8E61DF@verio.net>

Michael Str?der wrote:
> 
> Some objects are not pickeable but worth to be kept in a session
> cache. E.g. connection objects of a database access.

And mod_python will do a great job of keeping your connection object.
You will just have to have a connection object per child process (and
you'll need to make sure that MaxClients is not greater than the number
of allowed connections to your database server)

Grisha

From geoff at infostreet.com  Tue Oct 17 09:19:57 2000
From: geoff at infostreet.com (Geoff Cadien)
Date: Fri Jan  9 21:46:04 2004
Subject: [mod_python] Problem setting cookie and then redirecting
Message-ID: <39EC7C2D.F007C922@infostreet.com>

From jj at echobridge.com  Tue Oct 17 14:31:34 2000
From: jj at echobridge.com (Shannon -jj Behrens)
Date: Fri Jan  9 21:46:04 2004
Subject: [mod_python] FAQ or list archives
Message-ID: <39ECC536.1E121809@echobridge.com>

Dear Sirs,

Is there a FAQ or a mailing list archive that I can refer to?  I can't
seem to get mod_python to work in CGI mode using Python 1.6.  It keeps
complaining about:

File  File "/usr/local/apache/htdocs/aquarium/htdocs/index.py", line 35,
in ?
    Aquarium().handleRequest()
  File "/usr/local/apache/htdocs/aquarium/aquarium/util/Aquarium.py",
line 60, in handleRequest
    import cgi
  File "/usr/local/devel/lib/python1.6/cgi.py", line 747, in ?
    class FieldStorage:
  File "/usr/local/devel/lib/python1.6/cgi.py", line 991, in
FieldStorage
    bufsize = 8*1024            # I/O buffering size for copy to file
OverflowError: integer multiplication

Thanks,
-jj

-- 
Using a program to write a program to test a program has high leverage.
Kernigan and Pike, "The Practice of Programming."

From grisha at ispol.com  Tue Oct 17 16:35:22 2000
From: grisha at ispol.com (Gregory Trubetskoy)
Date: Fri Jan  9 21:46:04 2004
Subject: [mod_python] FAQ or list archives
In-Reply-To: <39ECC536.1E121809@echobridge.com>
Message-ID: <Pine.LNX.4.21.0010171633240.579-100000@saturn.ispol.com>

I saw something on usenet about this and glibc 2.1.93, it is reportedly a
glibc bug. What glibc are you using?

Grisha

On Tue, 17 Oct 2000, Shannon -jj Behrens wrote:

> Dear Sirs,
> 
> Is there a FAQ or a mailing list archive that I can refer to?  I can't
> seem to get mod_python to work in CGI mode using Python 1.6.  It keeps
> complaining about:
> 
> File  File "/usr/local/apache/htdocs/aquarium/htdocs/index.py", line 35,
> in ?
>     Aquarium().handleRequest()
>   File "/usr/local/apache/htdocs/aquarium/aquarium/util/Aquarium.py",
> line 60, in handleRequest
>     import cgi
>   File "/usr/local/devel/lib/python1.6/cgi.py", line 747, in ?
>     class FieldStorage:
>   File "/usr/local/devel/lib/python1.6/cgi.py", line 991, in
> FieldStorage
>     bufsize = 8*1024            # I/O buffering size for copy to file
> OverflowError: integer multiplication
> 
> Thanks,
> -jj
> 
> -- 
> Using a program to write a program to test a program has high leverage.
> Kernigan and Pike, "The Practice of Programming."
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://www.modpython.org/mailman/listinfo/mod_python
> 


From geoff at infostreet.com  Tue Oct 17 13:35:29 2000
From: geoff at infostreet.com (Geoff Cadien)
Date: Fri Jan  9 21:46:04 2004
Subject: [mod_python] Problem setting cookie and then redirecting
References: <Pine.LNX.4.21.0010171617090.579-100000@saturn.ispol.com>
Message-ID: <39ECB811.AEA563B4@infostreet.com>

That did the trick.  Thanks!

-geoff

Gregory Trubetskoy wrote:
> 
> Do this:
> 
> req.headers_out['Set-Cookie']='key=value'
> req.headers_out['location'] = 'http://localhost/index.html'
> req.status = apache.HTTP_MOVED_TEMPORARILY
> req.send_http_header()
> return apache.OK
> 
> The last line doesn't really matter since req.status is set and headers
> already went out.
> 
> Grisha
> 
> On Tue, 17 Oct 2000, Geoff Cadien wrote:
> 
> > >From a PythonHandler I'm trying to set a cookie and then do a redirect
> > and it is not working.  I'm doing:
> >
> > req.headers_out['Set-Cookie']='key=value'
> > req.headers_out['location'] = 'http://localhost/index.html'
> > return apache.HTTP_MOVED_TEMPORARILY
> >
> > The problem seems to be that if I don't do req.send_http_header() the
> > Set-Cookie doesn't get sent so the cookie doesn't get set.  If I do call
> > req.send_http_header() the cookie does get set but it seems as though
> > two sets of headers are sent and the response code is 200.  Any ideas?
> >
> > Geoff Cadien
> > geoff@infostreet.com
> > _______________________________________________
> > Mod_python mailing list
> > Mod_python@modpython.org
> > http://www.modpython.org/mailman/listinfo/mod_python
> >

From grisha at ispol.com  Tue Oct 17 16:30:12 2000
From: grisha at ispol.com (Gregory Trubetskoy)
Date: Fri Jan  9 21:46:04 2004
Subject: [mod_python] Problem setting cookie and then redirecting
In-Reply-To: <39EC7C2D.F007C922@infostreet.com>
Message-ID: <Pine.LNX.4.21.0010171617090.579-100000@saturn.ispol.com>

Do this:

req.headers_out['Set-Cookie']='key=value'
req.headers_out['location'] = 'http://localhost/index.html'
req.status = apache.HTTP_MOVED_TEMPORARILY
req.send_http_header()
return apache.OK

The last line doesn't really matter since req.status is set and headers
already went out.
 
Grisha

On Tue, 17 Oct 2000, Geoff Cadien wrote:

> >From a PythonHandler I'm trying to set a cookie and then do a redirect
> and it is not working.  I'm doing:
> 
> req.headers_out['Set-Cookie']='key=value'
> req.headers_out['location'] = 'http://localhost/index.html'
> return apache.HTTP_MOVED_TEMPORARILY
> 
> The problem seems to be that if I don't do req.send_http_header() the
> Set-Cookie doesn't get sent so the cookie doesn't get set.  If I do call
> req.send_http_header() the cookie does get set but it seems as though
> two sets of headers are sent and the response code is 200.  Any ideas?
> 
> Geoff Cadien
> geoff@infostreet.com
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://www.modpython.org/mailman/listinfo/mod_python
> 


From grisha at ispol.com  Wed Oct 18 23:31:04 2000
From: grisha at ispol.com (Gregory Trubetskoy)
Date: Fri Jan  9 21:46:04 2004
Subject: [mod_python] [ANNOUNCE] Mod_python 2.6
Message-ID: <Pine.LNX.4.21.0010182330290.5966-100000@saturn.ispol.com>

Mod_python is an Apache module that embeds Python within the server. For
information on mod_python go to http://www.modpython.org/

Installation is now greatly simplified through the use of autoconf
(./configure). Some new features were added, a few bugs fixed,
documentation improved. Many changes under the hood, improving
performance, organizing better code.

Enjoy!

--
  Gregory (Grisha) Trubetskoy
       grisha@ispol.com



From miguel at yorku.ca  Thu Oct 19 15:08:15 2000
From: miguel at yorku.ca (Miguel Marques)
Date: Fri Jan  9 21:46:04 2004
Subject: [mod_python] retaining state between handlers
In-Reply-To: <Pine.LNX.4.21.0010022321510.12796-100000@saturn.ispol.com>
References: <Pine.LNX.4.21.0010022321510.12796-100000@saturn.ispol.com>
Message-ID: <20001019150815S.miguel@yorku.ca>

On Mon, 2 Oct 2000 23:26:40 -0400 (EDT), Gregory Trubetskoy <grisha@ispol.com> wrote:
> 
> For those of you handy with CVS - I've checked in the new version, where
> the request object is a real Python object (as opposed to a built-in),
> which you can modify.
> 
> This allows passing information between handlers by simply doing something
> like:
> 
> req.myvariable = "something"
> 
> in one handler and then using that value in another. 
> 
> Note that different subinterpreters will have different requests objects,
> even though the underlying built-in (now req._req) is still the same.
> 
> --
Was this included in 2.6?  I just tried to do this between my Access Handler and
my Handler and it didn't work.

						Miguel

C. Miguel Marques, York University, Computing & Network Services
e-mail: miguel@yorku.ca, voice: (416)736-2100x22684, fax: (416)736-5830

From rsalz at CaveoSystems.com  Fri Oct 20 12:05:23 2000
From: rsalz at CaveoSystems.com (rsalz@CaveoSystems.com)
Date: Fri Jan  9 21:46:04 2004
Subject: [mod_python] Must I configure apache first?
Message-ID: <200010201605.MAA30030@os390.caveosystems.com>

It's not convenient to disable 'make dependencies' I have to do this:
	ac_cv_path_MKDEP=/bin/echo ./configure ...flags...
I'd rather see "--without-mkdep" or some such flag.

The reason for not wanting mkdep is that it needs ap_config_pool.h or some
such file, and since I haven't yet configured apache I don't have that file.

I don't want to configure apache because mod_ssl wants to do some things,
and doing mod_python apache and mod_ssl is all getting me confused. :)
(I keep the unconfig'd sources in my CVS tree and do product builds
from those virgin sources on a couple of platforms.)

More importantly, I'd rather the mod_python sources were just inserted
into the Apache tree and built as part of building apache.  I.e., the old
way.

thanks.
	/r$

From rsalz at CaveoSystems.com  Fri Oct 20 13:07:25 2000
From: rsalz at CaveoSystems.com (rsalz@CaveoSystems.com)
Date: Fri Jan  9 21:46:04 2004
Subject: [mod_python] Error in install_static in Makefile.in
Message-ID: <200010201707.NAA05411@os390.caveosystems.com>

	$(INSTALL) src/libpython.a $(AP_SRC)/src/modules/python/libmod_python.a
				 I had to add these four characters^^^^


From grisha at ispol.com  Fri Oct 20 13:03:28 2000
From: grisha at ispol.com (Gregory Trubetskoy)
Date: Fri Jan  9 21:46:04 2004
Subject: [mod_python] Must I configure apache first?
In-Reply-To: <200010201605.MAA30030@os390.caveosystems.com>
Message-ID: <Pine.LNX.4.21.0010201255180.12128-100000@saturn.ispol.com>

But you have to have Apache configured. Things like file locations,
OS-specific headers, etc, are all not there before configuration. I think
the fact that it compiles and works for you with unconfigured Apache is
pure luck.

You should let SSL do its thing, then compile and install mod_python. Or
you can do it the other way around. There shouldn't be any problems with
that.

--
  Gregory (Grisha) Trubetskoy
       grisha@ispol.com

On Fri, 20 Oct 2000 rsalz@caveosystems.com wrote:

> It's not convenient to disable 'make dependencies' I have to do this:
> 	ac_cv_path_MKDEP=/bin/echo ./configure ...flags...
> I'd rather see "--without-mkdep" or some such flag.
> 
> The reason for not wanting mkdep is that it needs ap_config_pool.h or some
> such file, and since I haven't yet configured apache I don't have that file.
> 
> I don't want to configure apache because mod_ssl wants to do some things,
> and doing mod_python apache and mod_ssl is all getting me confused. :)
> (I keep the unconfig'd sources in my CVS tree and do product builds
> from those virgin sources on a couple of platforms.)
> 
> More importantly, I'd rather the mod_python sources were just inserted
> into the Apache tree and built as part of building apache.  I.e., the old
> way.
> 
> thanks.
> 	/r$
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://www.modpython.org/mailman/listinfo/mod_python
> 


From jj at echobridge.com  Fri Oct 20 12:35:40 2000
From: jj at echobridge.com (Shannon -jj Behrens)
Date: Fri Jan  9 21:46:04 2004
Subject: [mod_python] cgihandler module reloads
Message-ID: <39F09E8C.BFD7EFC@echobridge.com>

The cgihandler documenation states that:

"The cgihandler reloads the module for every hit. However, the modules
imported by the main module do not get reloaded. This is good for
performance, but if your CGI scripts relied on this functionality, they
will be broken."

Is there any way I can force it to reload the modules?  By the way, if
this is documented elsewhere, please send me there, and I'll stop
bugging you guys ;)

-jj

-- 
Using a program to write a program to test a program has high leverage.
Kernigan and Pike, "The Practice of Programming."

From grisha at ispol.com  Fri Oct 20 15:22:15 2000
From: grisha at ispol.com (Gregory Trubetskoy)
Date: Fri Jan  9 21:46:04 2004
Subject: [mod_python] cgihandler module reloads
In-Reply-To: <39F09E8C.BFD7EFC@echobridge.com>
Message-ID: <Pine.LNX.4.21.0010201520010.12793-100000@saturn.ispol.com>

On Fri, 20 Oct 2000, Shannon -jj Behrens wrote:

> Is there any way I can force it to reload the modules?  By the way, if
> this is documented elsewhere, please send me there, and I'll stop
> bugging you guys ;)

well... to change your script to have somthing like

import mymodule
mymodule = reload(mymodule)

is about your only option...

Grisha



From dave_lambert at ev1.net  Fri Oct 20 14:46:59 2000
From: dave_lambert at ev1.net (David Lambert)
Date: Fri Jan  9 21:46:04 2004
Subject: [mod_python] Problems building apache 1.3.14 with mod_python2.6
Message-ID: <39F0A133.AEE8F92F@ev1.net>

If I attempt to build a static version of mod_python2.6 with
apache1.3.14. I get the following error. The DSO version seems to build
fine.

Any ideas?

Thanks,

David Lambert.


===> src/modules/python
make[4]: *** No rule to make target `libmod_python.a', needed by `lib'. 
Stop.
make[3]: *** [all] Error 1
make[2]: *** [subdirs] Error 1
make[2]: Leaving directory `/home/dlambert/lawnet/apache_1.3.14/src'
make[1]: *** [build-std] Error 2
make[1]: Leaving directory `/home/dlambert/lawnet/apache_1.3.14'
make: *** [build] Error 2

From grisha at ispol.com  Sat Oct 21 16:52:08 2000
From: grisha at ispol.com (Gregory Trubetskoy)
Date: Fri Jan  9 21:46:04 2004
Subject: [mod_python] 2.6.1 is out
Message-ID: <Pine.LNX.4.21.0010211650430.16840-100000@saturn.ispol.com>

2.6.1 only fixes a coule of issues related installation on some
platforms.

Enjoy,

--
  Gregory (Grisha) Trubetskoy
       grisha@ispol.com


From grisha at ispol.com  Sun Oct 22 00:05:13 2000
From: grisha at ispol.com (Gregory Trubetskoy)
Date: Fri Jan  9 21:46:04 2004
Subject: [mod_python] 2.6.2
Message-ID: <Pine.LNX.4.21.0010220003220.17894-100000@saturn.ispol.com>

...Some more installation isues were found. So there is 2.6.2 now.

Particularly the problem about "openpty" should go away now. Also the "No
current thread state" issue at apache exit should now be resolved.

Grisha


From kitezh at dol.ru  Mon Oct 23 16:27:33 2000
From: kitezh at dol.ru (kitezh)
Date: Fri Jan  9 21:46:04 2004
Subject: [mod_python] mod_python don't work on NT4.0
Message-ID: <35279115345.20001023162733@dol.ru>

Hello mod,

- Apache 1.3.9
- WinNT 4 SP 4

I do as instruction says:
LoadModule python_module modules/mod_python.dll

At start Apache says:
:
Cannot load ....\mod_python.dll into server:

Help pls!

SY Kitezh



From evaamo at loquesea.com  Mon Oct 23 11:39:32 2000
From: evaamo at loquesea.com (Enrique Vaamonde)
Date: Fri Jan  9 21:46:04 2004
Subject: [mod_python] mod_python don't work on NT4.0
In-Reply-To: <35279115345.20001023162733@dol.ru>
Message-ID: <000301c03d07$70bf6230$41dea8c0@wormhole>

dumb question but...did you copy the mod_python.dll into your modules
directory in Apache?

-E

-----Original Message-----
From: mod_python-admin@modpython.org
[mailto:mod_python-admin@modpython.org]On Behalf Of kitezh
Sent: Monday, October 23, 2000 8:28 AM
To: mod_python@modpython.org
Subject: [mod_python] mod_python don't work on NT4.0


Hello mod,

- Apache 1.3.9
- WinNT 4 SP 4

I do as instruction says:
LoadModule python_module modules/mod_python.dll

At start Apache says:
:
Cannot load ....\mod_python.dll into server:

Help pls!

SY Kitezh


_______________________________________________
Mod_python mailing list
Mod_python@modpython.org
http://www.modpython.org/mailman/listinfo/mod_python


From sbi at acse.be  Mon Oct 23 18:28:23 2000
From: sbi at acse.be (Stephane Bidoul)
Date: Fri Jan  9 21:46:04 2004
Subject: [mod_python] mod_python don't work on NT4.0
References: <35279115345.20001023162733@dol.ru>
Message-ID: <006501c03d0e$43590d80$caa679c1@spirou>

What python version do you use?
mod_python.dll is for python 1.5.2 only at the moment
(just a matter of recompiling).

-sbi

----- Original Message -----
From: "kitezh" <kitezh@dol.ru>
To: <mod_python@modpython.org>
Sent: Monday, 23 October, 2000 14:27
Subject: [mod_python] mod_python don't work on NT4.0


> Hello mod,
>
> - Apache 1.3.9
> - WinNT 4 SP 4
>
> I do as instruction says:
> LoadModule python_module modules/mod_python.dll
>
> At start Apache says:
> :
> Cannot load ....\mod_python.dll into server:
>
> Help pls!
>
> SY Kitezh
>
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://www.modpython.org/mailman/listinfo/mod_python
>



From kitezh at dol.ru  Tue Oct 24 13:02:53 2000
From: kitezh at dol.ru (kitezh)
Date: Fri Jan  9 21:46:04 2004
Subject: [mod_python] mod_python don't work on NT4.0
In-Reply-To: <000301c03d07$70bf6230$41dea8c0@wormhole>
References: <000301c03d07$70bf6230$41dea8c0@wormhole>
Message-ID: <160353238871.20001024130253@dol.ru>

Hello Enrique,

???????????, 23 ??????? 2000 ?., you wrote to me:

EV> dumb question but...did you copy the mod_python.dll into your modules
EV> directory in Apache?
sure :)



Best regards,
 kitezh                            mailto:kitezh@dol.ru



From sbi at acse.be  Tue Oct 24 14:49:58 2000
From: sbi at acse.be (Stephane Bidoul)
Date: Fri Jan  9 21:46:04 2004
Subject: [mod_python] mod_python don't work on NT4.0
References: <35279115345.20001023162733@dol.ru> <006501c03d0e$43590d80$caa679c1@spirou> <174353632607.20001024130927@dol.ru>
Message-ID: <002101c03db8$ea838ae0$caa679c1@spirou>

>I use 1.5.2
>But where can I write a path to my Python directory?

You don't need to do that; python15.dll is in your windows/system32
directory.
However the mod_python,'s own .py package must be in your PYTHONPATH
(if your have a mod_python subdir in your python directory, it should be
ok).

If everything it's ok, you'll need to be more specific about your issue
(maybe try to start apache on the command line and look at
the messages there).

'hope this helps.

-Stephane




From rsalz at CaveoSystems.com  Tue Oct 24 10:16:26 2000
From: rsalz at CaveoSystems.com (rsalz@CaveoSystems.com)
Date: Fri Jan  9 21:46:04 2004
Subject: [mod_python] Replacement for libmod_python.module
Message-ID: <200010241416.KAA16356@os390.caveosystems.com>

I was trying to build a statically-linked Apache from
	Apache 1.3.14
	mod_ssl
	mod_python 2.6.2

After spending some time with Appendix C of "Writing Apache Modules with
Perl and C," I got something to work.  (Or at least compile.  Not done
much testing yet.)

First, I had to create my own libmod_python.module; the distribution
has a libpython.module.  I don't understand which name and why, but so
be it.  Next, the INCLUDES flag doesn't need to be there since there is no
compiling from source.  The LDFLAGS doesn't need to be there since Apache
has its own rules for figuring out how to link itself.  Finally the LIBS
line was wrong -- it needed to *add* to the LIBS variable, not replace it.

So, in my case, I ended up with the following libmod_python.module.
Since this is part of my nightly build script, and since I didn't want
to muck with mod_python sources (I hate CVS merging :), I just this:
	cd $APACHE
	rm src/modules/python/*.module
	cat <<'EOF' > src/modules/python/libmod_python.module
Name: python_module
ConfigStart
    LIBS="/usr/local/lib/python2.0/config/libpython2.0.a $LIBS -lpthread -ldl -l util -ldb"
ConfigEnd
EOF

I suppose the distribution's .in file could be
    Name: python_module
    ConfigStart
	LIBS="$LIBS @LIBS@"
    ConfigEnd
But I haven't tested that.

I would rather see mod_python just figure out the Python headers and
extra libraries and dump source into the Apache tree.  That way configure
wouldn't need to do or notice anything about Apache.  But this works.
On a related issue, I'd like to see the install target(s) split into
two parts -- one that requires root access (the .py files in site_config)
and one that doesn't.  This could be handled with a Makefile trick, if
it's important to preserve the current scheme.
	INSTALL_PY_LIB	= install_py_lib
		...
	@$(MAKE) $(INSTALL_PY_LIB)

	NO: ; @echo not installing .py files...

Then I could do
	make install INSTALL_PY_LIB=NO

Hope others find this useful.  Thanks to Grisha for putting up with my
email gripes.
	/r$

From jcea at argo.es  Tue Oct 24 17:29:15 2000
From: jcea at argo.es (Jesus Cea Avion)
Date: Fri Jan  9 21:46:04 2004
Subject: [mod_python] BUG compiling Python 2.0 with dinamic modules in Solaris, with GCC
Message-ID: <39F5AACB.1501EF5F@argo.es>

(I can't post the patch in sourceforge since the SSL login seems to be
down in the last three hours)

Python 2.0 (dinamic modules)
Mod_Python 2.6.2 (dinamic module)
GCC 2.95.2
Apache 1.3.14 (dinamic modules)
SunOS5 (Solaris 2.x)

I send the email also to "mod_python" mailing list since I detect the
problem using this package. Other developers could see the very same
problem!.


Mod_python runs smoothly until I do a "import zlib", for example, in a
handler. In this case, the request is aborted with the following log:

>>>>>
[Tue Oct 24 16:27:40 2000] [error] PythonHandler cache: Traceback (most
recent call last):
[Tue Oct 24 16:27:40 2000] [error] PythonHandler cache:   File
"/usr/local/lib/python2.0/site-packages/mod_python/apache.py", line 185,
in Dispatch
    result = object(self.req)
[Tue Oct 24 16:27:40 2000] [error] PythonHandler cache:   File
"/export/home/webmaster/www.argo.es/servicios/cache.py", line 47, in
handler
    exec(cache[f][1])
[Tue Oct 24 16:27:40 2000] [error] PythonHandler cache:   File
"/export/home/webmaster/www.argo.es/servicios/borra_email", line 183, in
?
    req2=wrap(req)
[Tue Oct 24 16:27:40 2000] [error] PythonHandler cache:   File
"/export/home/webmaster/www.argo.es/servicios/borra_email", line 159, in
__init__
    import zlib
[Tue Oct 24 16:27:40 2000] [error] PythonHandler cache: ImportError:
ld.so.1: /opt/local/apache/bin/httpd: fatal: relocation error: file
/usr/local/lib/python2.0/lib-dynload/zlibmodule.so: symbol main:
referenced symbol not found
<<<<<

That is, "zlibmodule.so" tries to link to a function called "main".

Doing a "nm object|grep main", I see the unresolved reference in
"zlibmodule.so", but not in "zlibmodule.o". So, the problem seems to be
the creation of the shared library.

I tracked down the problem to the "configure" script: "cc -G" is (I
think) the right thing to do to create a shared library if you are using
the Sun compiler, but if you are using GCC (like me), the right command
is "gcc -shared".

Patch for Python 2.0:

>>>>>
Index: configure
===================================================================
RCS file: /opt/src/cvsroot/python/configure,v
retrieving revision 1.1.1.2
retrieving revision 1.1.1.2.2.1
diff -c -r1.1.1.2 -r1.1.1.2.2.1
*** configure   2000/10/18 19:06:44     1.1.1.2
--- configure   2000/10/24 14:19:01     1.1.1.2.2.1
***************
*** 2650,2656 ****
        SunOS/4*) LDSHARED="ld";;
        SunOS/5*) 
                if test "$GCC" = "yes"
!               then LDSHARED='$(CC) -G'
                else LDSHARED="ld -G";
                fi ;;
        hp*|HP*) LDSHARED="ld -b";;
--- 2650,2656 ----
        SunOS/4*) LDSHARED="ld";;
        SunOS/5*) 
                if test "$GCC" = "yes"
!               then LDSHARED='$(CC) -shared'
                else LDSHARED="ld -G";
                fi ;;
        hp*|HP*) LDSHARED="ld -b";;
Index: configure.in
===================================================================
RCS file: /opt/src/cvsroot/python/configure.in,v
retrieving revision 1.1.1.2
retrieving revision 1.1.1.2.2.1
diff -c -r1.1.1.2 -r1.1.1.2.2.1
*** configure.in        2000/10/18 19:06:45     1.1.1.2
--- configure.in        2000/10/24 14:19:03     1.1.1.2.2.1
***************
*** 564,570 ****
        SunOS/4*) LDSHARED="ld";;
        SunOS/5*) 
                if test "$GCC" = "yes"
!               then LDSHARED='$(CC) -G'
                else LDSHARED="ld -G";
                fi ;;
        hp*|HP*) LDSHARED="ld -b";;
--- 564,570 ----
        SunOS/4*) LDSHARED="ld";;
        SunOS/5*) 
                if test "$GCC" = "yes"
!               then LDSHARED='$(CC) -shared'
                else LDSHARED="ld -G";
                fi ;;
        hp*|HP*) LDSHARED="ld -b";;
<<<<<

-- 
Jesus Cea Avion                         _/_/      _/_/_/        _/_/_/
jcea@argo.es http://www.argo.es/~jcea/ _/_/    _/_/  _/_/    _/_/  _/_/
                                      _/_/    _/_/          _/_/_/_/_/
PGP Key Available at KeyServ   _/_/  _/_/    _/_/          _/_/  _/_/
"Things are not so easy"      _/_/  _/_/    _/_/  _/_/    _/_/  _/_/
"My name is Dump, Core Dump"   _/_/_/        _/_/_/      _/_/  _/_/
"El amor es poner tu felicidad en la felicidad de otro" - Leibniz

From cameron at infostreet.com  Tue Oct 24 14:49:23 2000
From: cameron at infostreet.com (Cameron La Rue)
Date: Fri Jan  9 21:46:04 2004
Subject: [mod_python] bug in PythonAuthenHandler?
Message-ID: <39F603E3.A38CBBD0@infostreet.com>

Hi all,
        I'm having trouble with an authentication script using
PythonAuthenHandler. First of all, we're running RedHat Linux 6.2,
Apache 1.3.9, mod_python 2.5, and python 1.5.2.

In my httpd.conf, I have the following:
#-------------------------------------------
AddHandler python-program .py
PythonHandler base2
<Location /test_enduser>
   AuthType auth
   AuthName PythonHosting
   AddHandler python-program .py
   PythonAuthenHandler base2::authenticate
   require valid-user
</Location>
#-------------------------------------------


I've got a script, base2.py, that looks like this:
#-------------------------------------------
def authenticate(req):
    e, si, so = apache.setup_cgi(req)
    apache.restore_nocgi(e, si, so)
    apache.log_error('here we are')
    return apache.OK

def handler(req):
    apache.log_error('handler works')
    e, si, so = apache.setup_cgi(req)
    apache.restore_nocgi(e, si, so)
    return apache.OK
#-------------------------------------------

Finally, I have an html page (test.html) that looks like this:
#-------------------------------------------
<html>
<body>
<a href='/test_enduser/enduser.html'>go man</a>
</body>
</html>
#-------------------------------------------

I am running apache in single process mode, like so:
/infostreet/apache/bin/httpd -X -f
~/projects/_current_/apache/httpd.conf

If I click the "go man" link in test.html, the base2::authenticate
method is called, and I am allowed to access /test_enduser/enduser.html.
Then, I click the back button on my browser. I click the "go man" link a
second time, base2:authenticate is called again, and apache segfaults.
It does print 'here we are' in the error log, so it gets that far.

I also noticed something else. If, after starting apache, I first access
a python script using PythonHandler, I can then access the
PythonAuthenHandler as many times as I want without apache segfaulting.
Is this a bug in the PythonAuthenHandler? Thanks in advance...

Cameron

From kitezh at dol.ru  Wed Oct 25 13:57:29 2000
From: kitezh at dol.ru (kitezh)
Date: Fri Jan  9 21:46:04 2004
Subject: [mod_python] mod_python don't work on NT4.0
In-Reply-To: <002101c03db8$ea838ae0$caa679c1@spirou>
References: <35279115345.20001023162733@dol.ru>
 <006501c03d0e$43590d80$caa679c1@spirou> <174353632607.20001024130927@dol.ru>
 <002101c03db8$ea838ae0$caa679c1@spirou>
Message-ID: <1727260936.20001025135729@dol.ru>

Hello Stephane,

???????, 24 ??????? 2000 ?., you wrote to me:

SB> You don't need to do that; python15.dll is in your windows/system32
SB> directory.
SB> However the mod_python,'s own .py package must be in your PYTHONPATH
SB> (if your have a mod_python subdir in your python directory, it should be
SB> ok).

SB> If everything it's ok, you'll need to be more specific about your issue
SB> (maybe try to start apache on the command line and look at
SB> the messages there).
More specific:
Error when starting from command line:
Syntax error on line 176 of c:/program files/apache group/apache/conf/httpd.conf
:
Cannot load c:/program files/apache group/apache/modules/mod_python.dll into ser
ver:

Error when starting from Services:
The application or DLL c:\program files\apache group\apache\mod_python.dll
is not a valid Windows NT image. Please chek this against your
installation diskette.


Best regards,
 kitezh                            mailto:kitezh@dol.ru



From mtiwari0 at cs.sc.edu  Thu Oct 26 12:44:53 2000
From: mtiwari0 at cs.sc.edu (Mayank Tiwari)
Date: Fri Jan  9 21:46:04 2004
Subject: [mod_python] make_obcallback returned no obCallBack!
Message-ID: <4.1.20001026124002.00a91c60@usceast.cs.sc.edu>

greetings all,

I am new to python, I tried to configure mod_python and ran into problems : 
here are the specifics:

Apache version : 1.3.12 Win32
Python 	: 1.52
mod_python 	:2.6.2

when ever i try to test the installation by the following python prog (
test.py) it doesn't work and the following error is generated ( from apache
errorlog)

[Thu Oct 26 12:34:20 2000] [error] [client xxx.xxx.xxx.xxx] python_handler:
make_obcallback returned no obCallBack!

(* i cahnged the ipaddress to x's )

Any help would be most appreciated. 

	-Mayank
Q.) God.. root.. What's the difference?       
A.) God is forgiving...


From mtiwari0 at cs.sc.edu  Thu Oct 26 12:47:27 2000
From: mtiwari0 at cs.sc.edu (Mayank Tiwari)
Date: Fri Jan  9 21:46:04 2004
Subject: [mod_python] make_obcallback returned no obCallBack!
Message-ID: <4.1.20001026124617.00a90b20@usceast.cs.sc.edu>

i forgot test .py... here it is


from mod_python import apache
def handler(req):
  req.content_type = "text/plain" 
  req.send_http_header()
  req.write("Hello World!")
  return apache.OK
  
I believe i have not missed nay required info, if i did, kindly poitn out.

	-mayank     
Q.) God.. root.. What's the difference?       
A.) God is forgiving...


From arhiv at freemail.org.mk  Fri Oct 27 16:32:21 2000
From: arhiv at freemail.org.mk (Damjan)
Date: Fri Jan  9 21:46:04 2004
Subject: [mod_python] make_obcallback returned no obCallBack!
In-Reply-To: <4.1.20001026124617.00a90b20@usceast.cs.sc.edu>
Message-ID: <Pine.LNX.4.21.0010271631080.1224-100000@localhost.localdomain>

> i forgot test .py... here it is

Try renaming 'test.pu' to something else, 
there already is a test package in Python.


-- 
Damjan Georgievski		|           ?????? ???????????
Skopje, Macedonia		|           ??????, ??????????


From grisha at ispol.com  Fri Oct 27 20:48:50 2000
From: grisha at ispol.com (Gregory Trubetskoy)
Date: Fri Jan  9 21:46:04 2004
Subject: [mod_python] Replacement for libmod_python.module
In-Reply-To: <200010241416.KAA16356@os390.caveosystems.com>
Message-ID: <Pine.LNX.4.21.0010272048050.17916-100000@saturn.ispol.com>

Exactly. this will be fixed in the next release.

On Tue, 24 Oct 2000 rsalz@caveosystems.com wrote:

> I suppose the distribution's .in file could be
>     Name: python_module
>     ConfigStart
> 	LIBS="$LIBS @LIBS@"
>     ConfigEnd


From grisha at ispol.com  Fri Oct 27 20:57:35 2000
From: grisha at ispol.com (Gregory Trubetskoy)
Date: Fri Jan  9 21:46:04 2004
Subject: [mod_python] make_obcallback returned no obCallBack!
In-Reply-To: <4.1.20001026124002.00a91c60@usceast.cs.sc.edu>
Message-ID: <Pine.LNX.4.21.0010272052590.18103-100000@saturn.ispol.com>

This error is ususally caused by the mod_python package not being in the
pythonpath of the Apache process.

There is a typo in the windows installation instructions:

 Move the files in the folder lib inside the mod_python folder (C:\Program
 Files\Python\lib\mod_python-2.x\lib\mod_python ) to the C:\Program
 Files\Python\lib\mod_python-2.x folder. 
                            ^^^^

The target should really just be "C:\Program
Files\Python\lib\mod_python". This could be the source fo your problem.

--
  Gregory (Grisha) Trubetskoy
       grisha@ispol.com

On Thu, 26 Oct 2000, Mayank Tiwari wrote:

> greetings all,
> 
> I am new to python, I tried to configure mod_python and ran into problems : 
> here are the specifics:
> 
> Apache version : 1.3.12 Win32
> Python 	: 1.52
> mod_python 	:2.6.2
> 
> when ever i try to test the installation by the following python prog (
> test.py) it doesn't work and the following error is generated ( from apache
> errorlog)
> 
> [Thu Oct 26 12:34:20 2000] [error] [client xxx.xxx.xxx.xxx] python_handler:
> make_obcallback returned no obCallBack!
> 
> (* i cahnged the ipaddress to x's )
> 
> Any help would be most appreciated. 
> 
> 	-Mayank
> Q.) God.. root.. What's the difference?       
> A.) God is forgiving...
> 
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://www.modpython.org/mailman/listinfo/mod_python
> 


From aiglauer at iname.com  Sun Oct 29 13:43:21 2000
From: aiglauer at iname.com (Alexis Iglauer)
Date: Fri Jan  9 21:46:04 2004
Subject: [mod_python] Output from C functions
Message-ID: <007c01c041a5$d213dbe0$0401a8c0@iglauer.UUCP>

I am running a long calculation using a web interface, and am having the
problem that the web client times out before the results come back.  I fixed
this by first printing a valid HTTP header and then having the Python script
print a counter, which the web browser picks up and prints - and then
doesn't time out.  Works very well.

BUT - I have now recoded the central calculation routine in C (all the
control/UI stuff is still Python), and placed a printf routine in there to
output the iterations like I did in the Python, but it doesn't get to the
webbrowser.  Any ideas why?  It prints to stdout if I just run the script
from the console, but not if I call it from apache.  Is there some buffering
when calling a C routine?

I am using mod_python 2.6.2 and I wrapped the C function using SWIG.

Grateful for any pointers.

Thanks
Alexis


From jwseo at philemon.co.kr  Mon Oct 30 04:38:12 2000
From: jwseo at philemon.co.kr (Seo jun won)
Date: Fri Jan  9 21:46:05 2004
Subject: [mod_python] =?euc-kr?B?SSBkb24ndCBrbm93IG1vZF9weXRob24gc3R5bGUgcHJvZ3JhbW1pbmcu?=
Message-ID: <20001030.AAA972848292@philemon.co.kr>

Skipped content of type multipart/alternative
From grisha at ispol.com  Sun Oct 29 17:30:43 2000
From: grisha at ispol.com (Gregory Trubetskoy)
Date: Fri Jan  9 21:46:05 2004
Subject: [mod_python] Output from C functions
In-Reply-To: <007c01c041a5$d213dbe0$0401a8c0@iglauer.UUCP>
Message-ID: <Pine.LNX.4.21.0010291725420.1950-100000@saturn.ispol.com>


The cgihandler redirects the sys.stdout to the client. Anything that uses
the real (non python) stdout will just print somewhere just like you
describe.

If you want to do this in C, you should use the req.write function. Here
is what a handler written in C might look like (skipping all the regular
python module stuff. Kids don't try this at home):

#include mod_python.h

static PyObject * handler(PyObject *self, PyObject *args)
{
	PyObject *r;
	requestobject *req = NULL;

	if (!PyArg_ParseTuple(args, "O", &r))
	    return NULL;

	req = (requestobject *)PyObject_GetAttrString(r, "_req");

	ap_send_http_header(req->request_rec);
	req->header_sent = 1;

	ap_table_set(req->request_rec->headers_out, "content-type", 
		     "text/plain");

	PyObject_CallMethod((PyObject *)req, "write", "s", "Hello World!\n");
	
	return PyInt_FromLong(OK);
}


--
  Gregory (Grisha) Trubetskoy
       grisha@ispol.com

On Sun, 29 Oct 2000, Alexis Iglauer wrote:

> I am running a long calculation using a web interface, and am having the
> problem that the web client times out before the results come back.  I fixed
> this by first printing a valid HTTP header and then having the Python script
> print a counter, which the web browser picks up and prints - and then
> doesn't time out.  Works very well.
> 
> BUT - I have now recoded the central calculation routine in C (all the
> control/UI stuff is still Python), and placed a printf routine in there to
> output the iterations like I did in the Python, but it doesn't get to the
> webbrowser.  Any ideas why?  It prints to stdout if I just run the script
> from the console, but not if I call it from apache.  Is there some buffering
> when calling a C routine?
> 
> I am using mod_python 2.6.2 and I wrapped the C function using SWIG.
> 
> Grateful for any pointers.
> 
> Thanks
> Alexis
> 
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://www.modpython.org/mailman/listinfo/mod_python
> 


From aiglauer at iname.com  Mon Oct 30 00:43:49 2000
From: aiglauer at iname.com (Alexis Iglauer)
Date: Fri Jan  9 21:46:05 2004
Subject: [mod_python] Output from C functions
References: <Pine.LNX.4.21.0010291725420.1950-100000@saturn.ispol.com>
Message-ID: <013501c04202$50e497a0$0401a8c0@iglauer.UUCP>

I'm doing this from inside a cgi script, would that make the solution any
easier?  Seems like a mightily complex way to do a printf :)  I would like
to stay entirely inside C for my loop, for speed purposes.  Can I maybe pass
the file handle of stdout to my function and then write to that?

aei
----- Original Message -----
From: "Gregory Trubetskoy" <grisha@ispol.com>
To: "Alexis Iglauer" <aiglauer@iname.com>
Cc: <mod_python@modpython.org>
Sent: Sunday, October 29, 2000 11:30 PM
Subject: Re: [mod_python] Output from C functions


>
>
> The cgihandler redirects the sys.stdout to the client. Anything that uses
> the real (non python) stdout will just print somewhere just like you
> describe.
>
> If you want to do this in C, you should use the req.write function. Here
> is what a handler written in C might look like (skipping all the regular
> python module stuff. Kids don't try this at home):
>
> #include mod_python.h
>
> static PyObject * handler(PyObject *self, PyObject *args)
> {
> PyObject *r;
> requestobject *req = NULL;
>
> if (!PyArg_ParseTuple(args, "O", &r))
>     return NULL;
>
> req = (requestobject *)PyObject_GetAttrString(r, "_req");
>
> ap_send_http_header(req->request_rec);
> req->header_sent = 1;
>
> ap_table_set(req->request_rec->headers_out, "content-type",
>      "text/plain");
>
> PyObject_CallMethod((PyObject *)req, "write", "s", "Hello World!\n");
>
> return PyInt_FromLong(OK);
> }
>
>
> --
>   Gregory (Grisha) Trubetskoy
>        grisha@ispol.com
>
> On Sun, 29 Oct 2000, Alexis Iglauer wrote:
>
> > I am running a long calculation using a web interface, and am having the
> > problem that the web client times out before the results come back.  I
fixed
> > this by first printing a valid HTTP header and then having the Python
script
> > print a counter, which the web browser picks up and prints - and then
> > doesn't time out.  Works very well.
> >
> > BUT - I have now recoded the central calculation routine in C (all the
> > control/UI stuff is still Python), and placed a printf routine in there
to
> > output the iterations like I did in the Python, but it doesn't get to
the
> > webbrowser.  Any ideas why?  It prints to stdout if I just run the
script
> > from the console, but not if I call it from apache.  Is there some
buffering
> > when calling a C routine?
> >
> > I am using mod_python 2.6.2 and I wrapped the C function using SWIG.
> >
> > Grateful for any pointers.
> >
> > Thanks
> > Alexis
> >
> > _______________________________________________
> > Mod_python mailing list
> > Mod_python@modpython.org
> > http://www.modpython.org/mailman/listinfo/mod_python
> >
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://www.modpython.org/mailman/listinfo/mod_python


From grisha at ispol.com  Sun Oct 29 21:12:49 2000
From: grisha at ispol.com (Gregory Trubetskoy)
Date: Fri Jan  9 21:46:05 2004
Subject: [mod_python] Output from C functions
In-Reply-To: <013501c04202$50e497a0$0401a8c0@iglauer.UUCP>
Message-ID: <Pine.LNX.4.21.0010292046530.2437-100000@saturn.ispol.com>

On Mon, 30 Oct 2000, Alexis Iglauer wrote:

> I'm doing this from inside a cgi script, would that make the solution any
> easier?  Seems like a mightily complex way to do a printf :)  

Actually, the CGI "printf" results into something that is indeed fairly
complex - there is at least three layers of networking protocols
underneath it.

> I would like to stay entirely inside C for my loop, for speed
> purposes.  Can I maybe pass the file handle of stdout to my function
> and then write to that?

Well, not really. That stdout is not a C file handle, nor does it contain
a reference to one. It's a Python object that implements the Python file
interface, that's all.

I think your problem is thinking in terms of CGI. If you are after speed,
then CGI is hardly the answer anyway. If I were you, I would start getting
confortable with the idea of abandoning the cute CGI printf way of
outputting things. ;-)

HTH -

Grisha



From aiglauer at yahoo.com  Mon Oct 30 00:40:46 2000
From: aiglauer at yahoo.com (Alexis Iglauer)
Date: Fri Jan  9 21:46:05 2004
Subject: [mod_python] Output from C functions
Message-ID: <20001030084046.21028.qmail@web2202.mail.yahoo.com>

> I think your problem is thinking in terms of CGI. If
> you are after speed,
> then CGI is hardly the answer anyway. If I were you,
> I would start getting
> confortable with the idea of abandoning the cute CGI
> printf way of
> outputting things. ;-)

I know, I know - and I am busy writing another app by
implementing my own handler, but after reading the
above sentence I am now no longer sure that I am doing
the right thing there.  I am essentially creating my
webpage dynamically by doing a whole bunch of
req.write('<Stick HTML in here>') calls.  Is this
efficient, and if not, what is?

My calculation app will be rewritten as a handler
sometime soon, but I think I will still have the same
problem - how do I output to the web client (or find
another way to keep the web client's attention) from
inside my speed-optimised C loop?

> 
> HTH -

Grisha,  if MS help were 1% as effective as yours,
Linux wouldn't be where it is today.

Regards
Alexis

> 
> Grisha




__________________________________________________
Do You Yahoo!?
Yahoo! Messenger - Talk while you surf!  It's FREE.
http://im.yahoo.com/

From grisha at ispol.com  Mon Oct 30 09:56:54 2000
From: grisha at ispol.com (Gregory Trubetskoy)
Date: Fri Jan  9 21:46:05 2004
Subject: [mod_python] Output from C functions
In-Reply-To: <20001030084046.21028.qmail@web2202.mail.yahoo.com>
Message-ID: <Pine.LNX.4.21.0010300955010.4713-100000@saturn.ispol.com>

On Mon, 30 Oct 2000, Alexis Iglauer wrote:

> > I think your problem is thinking in terms of CGI. If
> > you are after speed,
> > then CGI is hardly the answer anyway. If I were you,
> > I would start getting
> > confortable with the idea of abandoning the cute CGI
> > printf way of
> > outputting things. ;-)
> 
> I know, I know - and I am busy writing another app by
> implementing my own handler, but after reading the
> above sentence I am now no longer sure that I am doing
> the right thing there.  I am essentially creating my
> webpage dynamically by doing a whole bunch of
> req.write('<Stick HTML in here>') calls.  Is this
> efficient, and if not, what is?

Yes, very efficient.

> My calculation app will be rewritten as a handler
> sometime soon, but I think I will still have the same
> problem - how do I output to the web client (or find
> another way to keep the web client's attention) from
> inside my speed-optimised C loop?

You use the same req.write function except you call it from C (see the
code I sent in previous e-mail), or you can study the req.write() code and
use the Apache calls directly.

Grisha


From jwseo at ns.philemon.co.kr  Mon Oct 30 23:24:02 2000
From: jwseo at ns.philemon.co.kr (Seo jun won)
Date: Fri Jan  9 21:46:05 2004
Subject: [mod_python] I don't know mod_python style programming.
Message-ID: <Pine.LNX.4.21.0010302321490.27003-100000@ns.philemon.co.kr>

I'm a mod_python beginner. 
Supposing that I'll make web bbsboard using mod_python. 
Maybe, general Web bbsboard is consist of post, delete, reply.. etc
function. 
Following my handler example. 
-------------------- 
def handler(req): 
  if req.uri == 'post.py': 
    import post 
    mypost = post.postclass 
    mypost.post(some data) 
            . 
            . 
  elif req.uri == 'delete.py': 
    import delete 
    mydelete = delete.deleteclass 
            . 
            . 
            . 
  return apache.OK 
------------------- 
expatiation) Each post.py, delete.py are my definition class module. 

Is my handler's source mod_python style? 

Addition, 
If It's be right, my dbconnection clause('import mysqldb') that where
locate in? 

Thanks 
I'm using




From jjp at connix.com  Tue Oct 31 11:21:11 2000
From: jjp at connix.com (John Posner)
Date: Fri Jan  9 21:46:05 2004
Subject: [mod_python] need Windows version of mod_python compiled for extended API
Message-ID: <003101c04356$96fcc410$6e64fea9@jake>

On Windows NT 4.0 SP6, I'm trying to use mod_python.dll according to the
standard installation instructions. When I start Apache, I get this console
message:


  Loaded DSO modules/mod_python uses plain Apache 1.3 API,
  this module might crash under EAPI! (please recompile it with -DEAPI)

  Apache/1.3.12 (Win32) mod_python/2.6 Python/1.5.2 mod_perl/1.23 running...

I don't have an Apache development environment set up, so it would be great
to get a version of mod_python.dll compiled with -DEAPI, as suggested in the
message.

Tx,
John

--
John Posner, Editor           jjp@oreilly.com
O'Reilly & Associates         860-663-3147


From grisha at ispol.com  Mon Oct  2 23:26:40 2000
From: grisha at ispol.com (Gregory Trubetskoy)
Date: Fri Jan  9 21:52:07 2004
Subject: [mod_python] retaining state between handlers
Message-ID: <Pine.LNX.4.21.0010022321510.12796-100000@saturn.ispol.com>

For those of you handy with CVS - I've checked in the new version, where
the request object is a real Python object (as opposed to a built-in),
which you can modify.

This allows passing information between handlers by simply doing something
like:

req.myvariable = "something"

in one handler and then using that value in another. 

Note that different subinterpreters will have different requests objects,
even though the underlying built-in (now req._req) is still the same.

--
  Gregory (Grisha) Trubetskoy
       grisha@ispol.com


From bmueller at creotech.com  Tue Oct  3 03:18:07 2000
From: bmueller at creotech.com (Brian Mueller)
Date: Fri Jan  9 21:52:07 2004
Subject: [mod_python] Apache 1.3.12 + mod_python + ??? = segfault
Message-ID: <003101c02d23$3a1ba750$0100a8c0@darkstar>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

Hello,

Recently I installed mod_python on my Apache 1.3.12 setup:

- -----

[root@shiva speedy]# httpd -l
Compiled-in modules:
  http_core.c
  mod_so.c
suexec: enabled; valid wrapper /usr/sbin/suexec
[root@shiva speedy]# httpd -v
Server version: Apache-AdvancedExtranetServer/1.3.12
(NetRevolution/Linux-Mandrake)
Server build: May 8 2000 04:59:44
Performance Tuned by SGI http://www.sgi.com/

- -----

Once I installed it I placed the LoadModule and AddModule at the top of
their respective sections within the httpd.conf file.  I reloaded apache
and checked the error log and the output was as follows:

[Sun Oct  1 04:02:02 2000] [notice] Apache-AdvancedExtranetServer/1.3.12 
(NetRevolution/Linux-Mandrake) mod_ssl/2.6.4 OpenSSL/0.9.5a mod_perl/1.22
mod_python/2.4.1 Python/1.5.2 configured -- resuming normal operations
[Sun Oct  1 04:02:02 2000] [notice] suEXEC mechanism enabled (wrapper:
/usr/sbin/suexec)

- -----


all was well, then I installed the following items.

CURL
PSPELL
mhash 0.8.2
mcrypt 2.5.4
libmcrypt 2.4.4
mcal
php4 4.0.2 (with the above supported + mySQL and PostrgreSQL support)

Once I did this I added the php4 stuff to the httpd.conf file and attempted
to restart.  Nothing happened, httpd -X shows a segmentation fault (core
dumped).  I removed php4 from my httpd.conf file and tried again with the
same results.  I readded php4 to my httpd.conf file and commented out the
mod_python references and now it works, though without mod_python.  

I am hoping that someone can shed some light on this as it appears that
something I installed above has caused mod_python to cease working.  Here
is my most recent error_log entry from after I removed mod_python

- -----

[Tue Oct  3 02:36:38 2000] [notice] Apache-AdvancedExtranetServer/1.3.12 
(NetRevolution/Linux-Mandrake) mod_ssl/2.6.4 OpenSSL/0.9.5a mod_perl/1.22
PHP/4.0.2 configured -- resuming normal operations
[Tue Oct  3 02:36:38 2000] [notice] suEXEC mechanism enabled (wrapper:
/usr/sbin/suexec)

- -----

and here is relavent sections from my httpd.conf file.

- -----

##
## httpd.conf -- Apache HTTP server configuration file
##
# This is the main server configuration file. See URL
http://www.apache.org/
# for instructions.
# Do NOT simply read the instructions in here without understanding
# what they do, if you are unsure consult the online docs. You have been
# warned.  
# Originally by Rob McCool
#---------------------- Use *ONLY* httpd.conf ---------------------------
#
# With all new apache versions, use of access.conf and srm.conf are
# deprecated. We only use httpd.conf.
#
# These 2 directives are needed by some modules, for example FrontPage

#ResourceConfig /dev/null
#AccessConfig /dev/null

#---------------- Dynamic Shared Object (DSO) Support ---------------------
#
# To be able to use the functionality of a module which was built as a DSO
you
# have to place corresponding `LoadModule' lines at this location so the
# directives contained in it are actually available _before_ they are used.
# Please read the file README.DSO in the Apache 1.3 distribution for more
# details about the DSO mechanism and run `httpd -l' for the list of
already
# built-in (statically linked and thus always available) modules in your
httpd
# binary.
#
# Example:
# LoadModule foo_module libexec/mod_foo.so
#
# Documentation for modules is in "/home/httpd/manual/mod" in HTML format.

#LoadModule mmap_static_module modules/mod_mmap_static.so
#LoadModule python_module        modules/mod_python.so
LoadModule env_module         modules/mod_env.so
LoadModule config_log_module  modules/mod_log_config.so
LoadModule agent_log_module   modules/mod_log_agent.so
LoadModule referer_log_module modules/mod_log_referer.so
#LoadModule mime_magic_module  modules/mod_mime_magic.so
LoadModule mime_module        modules/mod_mime.so
LoadModule negotiation_module modules/mod_negotiation.so
LoadModule status_module      modules/mod_status.so
LoadModule info_module        modules/mod_info.so

### You have the choice between mod_include and mod_include_xssi
### Choose only one! mod_include is more secure, while 
### the xssi module has a lot more features
LoadModule includes_module    modules/mod_include.so
#LoadModule includes_module    modules/mod_include_xssi.so

LoadModule autoindex_module   modules/mod_autoindex.so
LoadModule dir_module         modules/mod_dir.so
LoadModule cgi_module         modules/mod_cgi.so
LoadModule asis_module        modules/mod_asis.so
LoadModule imap_module        modules/mod_imap.so
LoadModule action_module      modules/mod_actions.so
#LoadModule speling_module     modules/mod_speling.so
LoadModule userdir_module     modules/mod_userdir.so
LoadModule proxy_module       modules/libproxy.so
LoadModule alias_module       modules/mod_alias.so
LoadModule rewrite_module     modules/mod_rewrite.so
LoadModule access_module      modules/mod_access.so
LoadModule auth_module        modules/mod_auth.so
LoadModule anon_auth_module   modules/mod_auth_anon.so
#LoadModule dbm_auth_module    modules/mod_auth_dbm.so
#LoadModule db_auth_module     modules/mod_auth_db.so
LoadModule digest_module      modules/mod_digest.so
#LoadModule cern_meta_module   modules/mod_cern_meta.so
LoadModule expires_module     modules/mod_expires.so
LoadModule headers_module     modules/mod_headers.so
LoadModule usertrack_module   modules/mod_usertrack.so
#LoadModule example_module     modules/mod_example.so
#LoadModule unique_id_module   modules/mod_unique_id.so
LoadModule setenvif_module    modules/mod_setenvif.so

#  Reconstruction of the complete module list from all available modules
#  (static and shared ones) to achieve correct module execution order.
#  [WHENEVER YOU CHANGE THE LOADMODULE SECTION ABOVE UPDATE THIS, TOO]
ClearModuleList
#AddModule mod_mmap_static.c
#AddModule mod_python.c
AddModule mod_env.c
AddModule mod_log_config.c
AddModule mod_log_agent.c
AddModule mod_log_referer.c
#AddModule mod_mime_magic.c
AddModule mod_mime.c
AddModule mod_negotiation.c
AddModule mod_status.c
AddModule mod_info.c
AddModule mod_include.c
#AdModule mod_include_xssi.c
AddModule mod_autoindex.c
AddModule mod_dir.c
AddModule mod_cgi.c
AddModule mod_asis.c
AddModule mod_imap.c
AddModule mod_actions.c
#AddModule mod_speling.c
AddModule mod_userdir.c
AddModule mod_proxy.c
AddModule mod_alias.c
AddModule mod_rewrite.c
AddModule mod_access.c
AddModule mod_auth.c
AddModule mod_auth_anon.c
#AddModule mod_auth_dbm.c
#AddModule mod_auth_db.c
AddModule mod_digest.c
#AddModule mod_cern_meta.c
AddModule mod_expires.c
AddModule mod_headers.c
AddModule mod_usertrack.c
#AddModule mod_example.c
#AddModule mod_unique_id.c
AddModule mod_so.c
AddModule mod_setenvif.c




####################################
# Add-on Modules and Virtual Hosts #
####################################
#
# Each time we install an add-on module , the post-install script of the
RPM
# adds an "Include" line to read the configuration for that module. When we
# remove the module, we keep the Include line, but we zero out the config 
# file so Apache doesn't complain.
#
# We also put virtual hosts "Includes" in this section. This will be used
by
# administration scripts. Instead of parsing all httpd.conf to modify a
# vhost, we just include the config file. Each type of vhosting has its own
# config file.
#

Include conf/vhosts/Vhosts.conf

Include conf/addon-modules/mod_php4.conf
Include conf/addon-modules/mod_perl.conf
Include conf/ssl/mod_ssl.conf
Include conf/ssl/ssl.default-vhost.conf

- -----

This is in it's currently usable format with mod_python commented out.

Any help would be most appreciated as we had expected to have this new
server online by the end of October.

Thank you,

Brian Mueller


==============================================================
Brian R. Mueller          President and CEO
  CreoTech                "We are the future"

WEB: www.creotech.com     EMAIL: bmueller@creotech.com
PHONE: 513.722.8645       TOLL FREE: 800-972-5290
MOBILE: 513.258.9614      FAX: 419.735.7405
ICQ: 63821393             ICQ Pager: 63821393@pager.icq.com
WIRELESS WEB PAGING: 5132589614@messaging.sprintpcs.com

PGP Key available at http://www.creotech.com/pgp/bmueller.asc
fingerprint:
9AEE DE48 5D4A 1814 996A
5EAA 315B FF76 30CC 159B
ID: 0xF19B87E8

Network Development & Design,
Custom Programming for the desktop and the web
Traditional Print Media, CD-ROM Prototyping - more
==============================================================

-----BEGIN PGP SIGNATURE-----
Version: 6.5.1ckt http://irfaiad.virtualave.net/
Comment: KeyID: 0x315BFF7630CC159B
Comment: Fingerprint: 9AEE DE48 5D4A 1814 996A  5EAA 315B FF76 30CC 159B

iQA/AwUBOdmyXjFb/3YwzBWbEQLfJACgpiQHWdEVTrBztyvZMe/QQhuEU4QAnRcl
qaLUz5eMBrawOVx7jXhiuLWL
=ljD8
-----END PGP SIGNATURE-----



From jeff.schenk at continuumnetworks.com  Wed Oct  4 10:13:59 2000
From: jeff.schenk at continuumnetworks.com (Jeff Schenk)
Date: Fri Jan  9 21:52:07 2004
Subject: [mod_python] Issue with mod_python Fatal Python error
Message-ID: <NEBBKNHPCLJIOJCKGBCIGEIHCCAA.Jeff.Schenk@continuumnetworks.com>

I have built mod_python and configured and made apache, the apache server
comes up fine, however I see several
Fatal Python error: PyThreadState_Get: no current thread

Messages in my error_log file.  Also, when I stop apache it cores.

I am running apache 1.3.12, mod_ssl 2.6.5.1.3.12, mod_perl 1.24 and
mod_python 2.5
I performed a static build.

Please advise, if anyone has suggestions or has run into this problem.

Thanks,
Jeff Schenk
Continuum Networks
Chief Architect of Software Development
805-927-3886

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mailman.modpython.org/pipermail/mod_python/attachments/20001004/e1a5815e/attachment-0001.htm
From miguel at yorku.ca  Wed Oct  4 14:19:15 2000
From: miguel at yorku.ca (Miguel Marques)
Date: Fri Jan  9 21:52:07 2004
Subject: [mod_python] Issue with mod_python Fatal Python error
In-Reply-To: <NEBBKNHPCLJIOJCKGBCIGEIHCCAA.Jeff.Schenk@continuumnetworks.com>
References: <NEBBKNHPCLJIOJCKGBCIGEIHCCAA.Jeff.Schenk@continuumnetworks.com>
Message-ID: <20001004141915N.miguel@yorku.ca>

On Wed, 4 Oct 2000 10:13:59 -0700, "Jeff Schenk" <jeff.schenk@continuumnetworks.com> wrote:
> I have built mod_python and configured and made apache, the apache server
> comes up fine, however I see several
> Fatal Python error: PyThreadState_Get: no current thread
> 
> Messages in my error_log file.  Also, when I stop apache it cores.
> 
> I am running apache 1.3.12, mod_ssl 2.6.5.1.3.12, mod_perl 1.24 and
> mod_python 2.5
> I performed a static build.
> 
> Please advise, if anyone has suggestions or has run into this problem.

I have no suggestion but I'm also experiencing this problem.
Occasionally I see all of apache's children core dump after those
messages.

I've seen the same problem (error message) mentioned in relation to an
earlier version of wxPython.

I'm running SunOS 5.7 with Apache/1.3.12, mod_python/2.5 and
Python/1.5.2 (happens with python 1.6 too).  mod_python is compiled as
a DSO.
A friend of mine mentioned that he has seen the same messages under
Debian as well but I'm not sure of his versions.

							Miguel

C. Miguel Marques, York University, Computing & Network Services
e-mail: miguel@yorku.ca, voice: (416)736-2100x22684, fax: (416)736-5830



From grisha at ispol.com  Wed Oct  4 17:24:50 2000
From: grisha at ispol.com (Gregory Trubetskoy)
Date: Fri Jan  9 21:52:07 2004
Subject: [mod_python] Issue with mod_python Fatal Python error
In-Reply-To: <20001004141915N.miguel@yorku.ca>
Message-ID: <Pine.LNX.4.21.0010041724110.14807-100000@saturn.ispol.com>

Interesting. Is Python built with threads?

--
  Gregory (Grisha) Trubetskoy
       grisha@ispol.com

On Wed, 4 Oct 2000, Miguel Marques wrote:

> On Wed, 4 Oct 2000 10:13:59 -0700, "Jeff Schenk" <jeff.schenk@continuumnetworks.com> wrote:
> > I have built mod_python and configured and made apache, the apache server
> > comes up fine, however I see several
> > Fatal Python error: PyThreadState_Get: no current thread
> > 
> > Messages in my error_log file.  Also, when I stop apache it cores.
> > 
> > I am running apache 1.3.12, mod_ssl 2.6.5.1.3.12, mod_perl 1.24 and
> > mod_python 2.5
> > I performed a static build.
> > 
> > Please advise, if anyone has suggestions or has run into this problem.
> 
> I have no suggestion but I'm also experiencing this problem.
> Occasionally I see all of apache's children core dump after those
> messages.
> 
> I've seen the same problem (error message) mentioned in relation to an
> earlier version of wxPython.
> 
> I'm running SunOS 5.7 with Apache/1.3.12, mod_python/2.5 and
> Python/1.5.2 (happens with python 1.6 too).  mod_python is compiled as
> a DSO.
> A friend of mine mentioned that he has seen the same messages under
> Debian as well but I'm not sure of his versions.
> 
> 							Miguel
> 
> C. Miguel Marques, York University, Computing & Network Services
> e-mail: miguel@yorku.ca, voice: (416)736-2100x22684, fax: (416)736-5830
> 
> 
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://www.modpython.org/mailman/listinfo/mod_python
> 


From jeff.schenk at continuumnetworks.com  Wed Oct  4 14:44:59 2000
From: jeff.schenk at continuumnetworks.com (Jeff Schenk)
Date: Fri Jan  9 21:52:07 2004
Subject: [mod_python] Issue with mod_python Fatal Python error
In-Reply-To: <Pine.LNX.4.21.0010041724110.14807-100000@saturn.ispol.com>
Message-ID: <NEBBKNHPCLJIOJCKGBCIOEIICCAA.Jeff.Schenk@continuumnetworks.com>

Yes, Python 1.5.2 on LINUX was built with threads.  I noticed the Makefile
that was configure to include the mod_python has the correct python libs
and -lpthread specified.

Jeff Schenk
Continuum Networks
Chief Architect of Software Development
805-927-3886


-----Original Message-----
From: mod_python-admin@modpython.org
[mailto:mod_python-admin@modpython.org]On Behalf Of Gregory Trubetskoy
Sent: Wednesday, October 04, 2000 2:25 PM
To: Miguel Marques
Cc: mod_python@modpython.org
Subject: Re: [mod_python] Issue with mod_python Fatal Python error



Interesting. Is Python built with threads?

--
  Gregory (Grisha) Trubetskoy
       grisha@ispol.com

On Wed, 4 Oct 2000, Miguel Marques wrote:

> On Wed, 4 Oct 2000 10:13:59 -0700, "Jeff Schenk"
<jeff.schenk@continuumnetworks.com> wrote:
> > I have built mod_python and configured and made apache, the apache
server
> > comes up fine, however I see several
> > Fatal Python error: PyThreadState_Get: no current thread
> >
> > Messages in my error_log file.  Also, when I stop apache it cores.
> >
> > I am running apache 1.3.12, mod_ssl 2.6.5.1.3.12, mod_perl 1.24 and
> > mod_python 2.5
> > I performed a static build.
> >
> > Please advise, if anyone has suggestions or has run into this problem.
>
> I have no suggestion but I'm also experiencing this problem.
> Occasionally I see all of apache's children core dump after those
> messages.
>
> I've seen the same problem (error message) mentioned in relation to an
> earlier version of wxPython.
>
> I'm running SunOS 5.7 with Apache/1.3.12, mod_python/2.5 and
> Python/1.5.2 (happens with python 1.6 too).  mod_python is compiled as
> a DSO.
> A friend of mine mentioned that he has seen the same messages under
> Debian as well but I'm not sure of his versions.
>
> 							Miguel
>
> C. Miguel Marques, York University, Computing & Network Services
> e-mail: miguel@yorku.ca, voice: (416)736-2100x22684, fax: (416)736-5830
>
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://www.modpython.org/mailman/listinfo/mod_python
>

_______________________________________________
Mod_python mailing list
Mod_python@modpython.org
http://www.modpython.org/mailman/listinfo/mod_python


From grisha at ispol.com  Wed Oct  4 17:59:35 2000
From: grisha at ispol.com (Gregory Trubetskoy)
Date: Fri Jan  9 21:52:07 2004
Subject: [mod_python] Issue with mod_python Fatal Python error
In-Reply-To: <NEBBKNHPCLJIOJCKGBCIOEIICCAA.Jeff.Schenk@continuumnetworks.com>
Message-ID: <Pine.LNX.4.21.0010041756500.14807-100000@saturn.ispol.com>

That may be the problem. I think Apache is built without threads by
default. I've got a redhat box now and I'll see if I can replicate these
problems, but in the meantime, I would try compiling a fresh copy of
Python from sources (it should build without threads by default) and
linking against that for mod_python. (I describe this procedure for
FreeBSD in the install section of the docs)

--
  Gregory (Grisha) Trubetskoy
       grisha@ispol.com

On Wed, 4 Oct 2000, Jeff Schenk wrote:

> Yes, Python 1.5.2 on LINUX was built with threads.  I noticed the Makefile
> that was configure to include the mod_python has the correct python libs
> and -lpthread specified.
> 
> Jeff Schenk
> Continuum Networks
> Chief Architect of Software Development
> 805-927-3886
> 
> 
> -----Original Message-----
> From: mod_python-admin@modpython.org
> [mailto:mod_python-admin@modpython.org]On Behalf Of Gregory Trubetskoy
> Sent: Wednesday, October 04, 2000 2:25 PM
> To: Miguel Marques
> Cc: mod_python@modpython.org
> Subject: Re: [mod_python] Issue with mod_python Fatal Python error
> 
> 
> 
> Interesting. Is Python built with threads?
> 
> --
>   Gregory (Grisha) Trubetskoy
>        grisha@ispol.com
> 
> On Wed, 4 Oct 2000, Miguel Marques wrote:
> 
> > On Wed, 4 Oct 2000 10:13:59 -0700, "Jeff Schenk"
> <jeff.schenk@continuumnetworks.com> wrote:
> > > I have built mod_python and configured and made apache, the apache
> server
> > > comes up fine, however I see several
> > > Fatal Python error: PyThreadState_Get: no current thread
> > >
> > > Messages in my error_log file.  Also, when I stop apache it cores.
> > >
> > > I am running apache 1.3.12, mod_ssl 2.6.5.1.3.12, mod_perl 1.24 and
> > > mod_python 2.5
> > > I performed a static build.
> > >
> > > Please advise, if anyone has suggestions or has run into this problem.
> >
> > I have no suggestion but I'm also experiencing this problem.
> > Occasionally I see all of apache's children core dump after those
> > messages.
> >
> > I've seen the same problem (error message) mentioned in relation to an
> > earlier version of wxPython.
> >
> > I'm running SunOS 5.7 with Apache/1.3.12, mod_python/2.5 and
> > Python/1.5.2 (happens with python 1.6 too).  mod_python is compiled as
> > a DSO.
> > A friend of mine mentioned that he has seen the same messages under
> > Debian as well but I'm not sure of his versions.
> >
> > 							Miguel
> >
> > C. Miguel Marques, York University, Computing & Network Services
> > e-mail: miguel@yorku.ca, voice: (416)736-2100x22684, fax: (416)736-5830
> >
> >
> > _______________________________________________
> > Mod_python mailing list
> > Mod_python@modpython.org
> > http://www.modpython.org/mailman/listinfo/mod_python
> >
> 
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://www.modpython.org/mailman/listinfo/mod_python
> 


From miguel at yorku.ca  Thu Oct  5 11:13:09 2000
From: miguel at yorku.ca (Miguel Marques)
Date: Fri Jan  9 21:52:07 2004
Subject: [mod_python] Issue with mod_python Fatal Python error
In-Reply-To: <Pine.LNX.4.21.0010041724110.14807-100000@saturn.ispol.com>
References: <20001004141915N.miguel@yorku.ca>
	<Pine.LNX.4.21.0010041724110.14807-100000@saturn.ispol.com>
Message-ID: <20001005111309S.miguel@yorku.ca>

On Wed, 4 Oct 2000 17:24:50 -0400 (EDT), Gregory Trubetskoy <grisha@ispol.com> wrote:
> 
> Interesting. Is Python built with threads?
> 
Yes.  Without threads that problem doesn't occur.
Unfortunately I then encounter a intermittent problem with restricted
mode and DocumentTemplate which I use in my application which is even
worse.

							Miguel

C. Miguel Marques, York University, Computing & Network Services
e-mail: miguel@yorku.ca, voice: (416)736-2100x22684, fax: (416)736-5830


From benno at sesgroup.net  Fri Oct  6 19:56:41 2000
From: benno at sesgroup.net (Ben Leslie)
Date: Fri Jan  9 21:52:07 2004
Subject: [mod_python] Issue with mod_python Fatal Python error
In-Reply-To: <Pine.LNX.4.21.0010041756500.14807-100000@saturn.ispol.com>; from grisha@ispol.com on Wed, Oct 04, 2000 at 05:59:35PM -0400
References: <NEBBKNHPCLJIOJCKGBCIOEIICCAA.Jeff.Schenk@continuumnetworks.com> <Pine.LNX.4.21.0010041756500.14807-100000@saturn.ispol.com>
Message-ID: <20001006195641.I1892@bob.sesgroup.net>

Hi Gregory!

On Wed, 04 Oct 2000, Gregory Trubetskoy wrote:

> 
> That may be the problem. I think Apache is built without threads by
> default. I've got a redhat box now and I'll see if I can replicate these
> problems, but in the meantime, I would try compiling a fresh copy of
> Python from sources (it should build without threads by default) and
> linking against that for mod_python. (I describe this procedure for
> FreeBSD in the install section of the docs)
> 

This is strange. I see the same problem in error.log, however it
only seems to occur when apache is stopped. I compiled as a DSO
an mod_python works wonderfully (and so damn fast! (well after coming
from Zope it should be hard ;)). I have been developing on it without
a problem.

Since everything was working i assumed that this was just "normal" but
if its not then i thought i better let you know that it also occurs on
Debian Potato, Python1.5.2, compiled as a DSO.

Cheers,

Benno

From benno at sesgroup.net  Mon Oct  9 11:15:46 2000
From: benno at sesgroup.net (Ben Leslie)
Date: Fri Jan  9 21:52:07 2004
Subject: [mod_python] Apache Segfault
In-Reply-To: <39D457F0.8DF53FC1@LivingLogic.de>; from Matthias.Bauer@livinglogic.de on Fri, Sep 29, 2000 at 10:50:56AM +0200
References: <39D457F0.8DF53FC1@LivingLogic.de>
Message-ID: <20001009111546.A18792@bob.sesgroup.net>

Moin Matthias!

Matthias Bauer schrieb am Freitag, den 29. September 2000:

> Hi everybody,
> 
> I'm having some severe trouble installing mod_python 2.5 with the
> following environment:
> 	SuSE Linux 7.0
> 	Python 2.0b1 with threads
> 	Apache 1.3.12 
> 
> I compiled mod_python.so with the following command:
> 


<snip a bunch of details about apache segfaulting>

I think I _may_ know what the problem is.

I have installed mod_python on my laptop with no problems, very easy
(once I actually read the instructions ;), anyway needed this on one
of the servers, so I asked my sysadmin to install. 

This turned out to be harder than I would have expected, we started 
with apache-ssl and couldn't get the thing working, kept segfaulting.

I said maybe it is a conflict with ssl extensions so we uninstalled 
acpache-ssl and installed apache standard, tried same thing happened.

After much swearing and cursing it turns out that the position of 
mod_python in the LoadModule section is very important.

By placing mod_python as the first Module imported things are good and
work fine, having mod_python as the last module to load causes segfault.

</boring story>

So the moral is:

make sure you load mod_python before other modules.

Gregory: Is this an expected problem? Should I patch the docs? 
(I don't think I have the time or ability to patch the code ;)

Cheers,

Benno

From aiglauer at yahoo.com  Mon Oct  9 01:59:20 2000
From: aiglauer at yahoo.com (Alexis Iglauer)
Date: Fri Jan  9 21:52:07 2004
Subject: [mod_python] Apache Segfault
Message-ID: <20001009085920.28910.qmail@web2204.mail.yahoo.com>

This is (at least used to be) in the docs/FAQ/archives
somewhere - the mod_python module must be the first
module loaded for some unknown and untraceable reason.
 This problem and its solution seems to be appearing
on the list often, perhaps the answer to it should be
highlighted in the docs.

Ciao
Alexis

--- Ben Leslie <benno@sesgroup.net> wrote:
> Moin Matthias!
> 
> Matthias Bauer schrieb am Freitag, den 29. September
> 2000:
> 
> > Hi everybody,
> > 
> > I'm having some severe trouble installing
> mod_python 2.5 with the
> > following environment:
> > 	SuSE Linux 7.0
> > 	Python 2.0b1 with threads
> > 	Apache 1.3.12 
> > 
> > I compiled mod_python.so with the following
> command:
> > 
> 
> 
> <snip a bunch of details about apache segfaulting>
> 
> I think I _may_ know what the problem is.
> 
> I have installed mod_python on my laptop with no
> problems, very easy
> (once I actually read the instructions ;), anyway
> needed this on one
> of the servers, so I asked my sysadmin to install. 
> 
> This turned out to be harder than I would have
> expected, we started 
> with apache-ssl and couldn't get the thing working,
> kept segfaulting.
> 
> I said maybe it is a conflict with ssl extensions so
> we uninstalled 
> acpache-ssl and installed apache standard, tried
> same thing happened.
> 
> After much swearing and cursing it turns out that
> the position of 
> mod_python in the LoadModule section is very
> important.
> 
> By placing mod_python as the first Module imported
> things are good and
> work fine, having mod_python as the last module to
> load causes segfault.
> 
> </boring story>
> 
> So the moral is:
> 
> make sure you load mod_python before other modules.
> 
> Gregory: Is this an expected problem? Should I patch
> the docs? 
> (I don't think I have the time or ability to patch
> the code ;)
> 
> Cheers,
> 
> Benno
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://www.modpython.org/mailman/listinfo/mod_python


__________________________________________________
Do You Yahoo!?
Yahoo! Photos - 35mm Quality Prints, Now Get 15 Free!
http://photos.yahoo.com/

From Matthias.Bauer at LivingLogic.de  Mon Oct  9 11:35:41 2000
From: Matthias.Bauer at LivingLogic.de (Matthias Bauer)
Date: Fri Jan  9 21:52:07 2004
Subject: [mod_python] Apache Segfault
References: <20001009085920.28910.qmail@web2204.mail.yahoo.com>
Message-ID: <39E1916D.7F1BD3A@LivingLogic.de>

Alexis, Benno,

thanks for your input.

I already read about this proposal in the FAQ and tried it out.
Unfortunately, this did not help at all :-((

I also sent email to Erno Kuusela (who added the relevant FAQ entry) and
asked if he could give some additional hints. He did not have any
additional ideas either. But from his answer I learned, that the
segfault he encountered, only showed up, when a request was served. My
problem seems to be different: The segfault already occurs during
startup of the apache httpd daemon.

Benno,
the problems you described when trying to install mod_python on one of
your servers: Did the segfault happen when a request to mod_python came
in or already during startup of the httpd daemon?

--- Matthias



Alexis Iglauer wrote:
> 
> This is (at least used to be) in the docs/FAQ/archives
> somewhere - the mod_python module must be the first
> module loaded for some unknown and untraceable reason.
>  This problem and its solution seems to be appearing
> on the list often, perhaps the answer to it should be
> highlighted in the docs.
> 
> Ciao
> Alexis
-------------- next part --------------
A non-text attachment was scrubbed...
Name: smime.p7s
Type: application/x-pkcs7-signature
Size: 2054 bytes
Desc: S/MIME Cryptographic Signature
Url : http://mailman.modpython.org/pipermail/mod_python/attachments/20001009/82656c2f/smime-0001.bin
From helink at sandia.gov  Mon Oct  9 13:16:11 2000
From: helink at sandia.gov (Hamilton Link)
Date: Fri Jan  9 21:52:08 2004
Subject: [mod_python] mod_python 2.5 error on fresh install
Message-ID: <39E2197B.75988619@sandia.gov>

I sent this to comp.lang.python as well... I'd go the RPM route or the
DSO route but if someone can point me in the right direction I'd just as
soon use the latest version of mod_python (i.e. 2.5). Is there some
problem with the installation file in the (rather limited) online docs?

thanks,
hamilton


> I should probably add that I have the following in my httpd.conf, and that the
> mptest.py file is in $APACHEDIR/htdocs/test -- I wouldn't be overly surprised if
> this is a configuration problem, I'm just not sure what to do to fix it (I'm trying
> a few things though). How am I supposed to tell it where to look for python files
> with such handlers? Am I just supposed to put them in the python directory structure
> -- that doesn't seem right either...
>
>  AddHandler python-program .py
>  PythonHandler mptest
>  PythonDebug On
>
> I'm trying to set up mod_python in Apache. I've built Apache before
and
> everything works fine, but this time I included mod_python amongst the

> statically linked mods (I figured I'd try that and then go back and
try
> the seemingly more complicated process of building mod_python as a
DSO,
> just to compare). Apache still works fine, except for mod_python.
> I RTFM'ed and did what the instructions from modpython.org said,
> modified my httpd.conf etc. but when I try to actually reference a .py

> file I get the following instead:
>
> Mod_python error: "PythonHandler mptest"
>
> Traceback (innermost last):
>
>   File "/usr/lib/python1.5/site-packages/mod_python/apache.py", line
> 135, in Dispatch
>     module = import_module(module_name, req)
>
>   File "/usr/lib/python1.5/site-packages/mod_python/apache.py", line
> 276, in import_module
>     module = __import__(module_name)
>
> ImportError: No module named mptest
>
> I'm new to python, so I'm not crazy about debugging apache.py -- has
> anyone had this problem or does anyone know what I f...ed up?
>
> thanks,
> hamilton



From okamoto at xfiles.intercon.hp.com  Mon Oct  9 12:57:27 2000
From: okamoto at xfiles.intercon.hp.com (Jeff Okamoto)
Date: Fri Jan  9 21:52:08 2004
Subject: [mod_python] mod_python 2.5 error on fresh install
In-Reply-To: <39E2197B.75988619@sandia.gov>; from "Hamilton Link" at Oct 09, 100 1:16 pm
Message-ID: <200010091957.MAA27537@xfiles.intercon.hp.com>

> I sent this to comp.lang.python as well... I'd go the RPM route or the
> DSO route but if someone can point me in the right direction I'd just as
> soon use the latest version of mod_python (i.e. 2.5). Is there some
> problem with the installation file in the (rather limited) online docs?

Yes, the INSTALL file and Tutorial (from the web site) are both incorrect
in describing the installation and test procedures.

To get things working with how you've set them up, you will need to wrap
your three-line section to look like:

<Directory /path/to/apache/htdocs/test>
	AddHandler python-program .py
	PythonHandler mptest
	PythonDebug On
</Directory>

Then simply access any URI on your system and just make sure that it has
a .py suffix.  Instead of a 404, you should get the test output from
mptest.py.  If you do see a 404, then something is still broken.

Jeff

From grisha at ispol.com  Mon Oct  9 15:55:47 2000
From: grisha at ispol.com (Gregory Trubetskoy)
Date: Fri Jan  9 21:52:08 2004
Subject: [mod_python] mod_python 2.5 error on fresh install
In-Reply-To: <39E2197B.75988619@sandia.gov>
Message-ID: <Pine.LNX.4.21.0010091554160.18580-100000@saturn.ispol.com>

There is a bug in the documentation. Either put the directives below in an
.htaccess file, or wrap them inside <Directory> tags, like this

<Directory /full/path/to/mptest.py>
  SetHandler blah blah....
</Directory>

--
  Gregory (Grisha) Trubetskoy
       grisha@ispol.com

On Mon, 9 Oct 2000, Hamilton Link wrote:

> I sent this to comp.lang.python as well... I'd go the RPM route or the
> DSO route but if someone can point me in the right direction I'd just as
> soon use the latest version of mod_python (i.e. 2.5). Is there some
> problem with the installation file in the (rather limited) online docs?
> 
> thanks,
> hamilton
> 
> 
> > I should probably add that I have the following in my httpd.conf, and that the
> > mptest.py file is in $APACHEDIR/htdocs/test -- I wouldn't be overly surprised if
> > this is a configuration problem, I'm just not sure what to do to fix it (I'm trying
> > a few things though). How am I supposed to tell it where to look for python files
> > with such handlers? Am I just supposed to put them in the python directory structure
> > -- that doesn't seem right either...
> >
> >  AddHandler python-program .py
> >  PythonHandler mptest
> >  PythonDebug On
> >
> > I'm trying to set up mod_python in Apache. I've built Apache before
> and
> > everything works fine, but this time I included mod_python amongst the
> 
> > statically linked mods (I figured I'd try that and then go back and
> try
> > the seemingly more complicated process of building mod_python as a
> DSO,
> > just to compare). Apache still works fine, except for mod_python.
> > I RTFM'ed and did what the instructions from modpython.org said,
> > modified my httpd.conf etc. but when I try to actually reference a .py
> 
> > file I get the following instead:
> >
> > Mod_python error: "PythonHandler mptest"
> >
> > Traceback (innermost last):
> >
> >   File "/usr/lib/python1.5/site-packages/mod_python/apache.py", line
> > 135, in Dispatch
> >     module = import_module(module_name, req)
> >
> >   File "/usr/lib/python1.5/site-packages/mod_python/apache.py", line
> > 276, in import_module
> >     module = __import__(module_name)
> >
> > ImportError: No module named mptest
> >
> > I'm new to python, so I'm not crazy about debugging apache.py -- has
> > anyone had this problem or does anyone know what I f...ed up?
> >
> > thanks,
> > hamilton
> 
> 
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://www.modpython.org/mailman/listinfo/mod_python
> 


From jon+modpython at unequivocal.co.uk  Tue Oct 10 14:43:52 2000
From: jon+modpython at unequivocal.co.uk (Jon Ribbens)
Date: Fri Jan  9 21:52:08 2004
Subject: [mod_python] Compile failure - init_socket multiply defined
Message-ID: <20001010144352.B22656@snowy.squish.net>

I'm trying to compile mod_python 2.5 as a DSO with Apache 1.3.12 and
Python 2.0c1 on OpenBSD 2.7-ish.

I do:

apxs -I /usr/local/include/python2.0 -c mod_python.c /usr/local/lib/python2.0/config/libpython2.0.a

It says:

gcc -DDEV_RANDOM=/dev/arandom -DMOD_SSL=206102 -DEAPI -DUSE_EXPAT -I../lib/expat-lite -g -fPIC -DSHARED_MODULE -I/usr/lib/apache/include -pthread -I/usr/local/include/python2.0  -c mod_python.c
ld -Bforcearchive -Bshareable -o mod_python.so mod_python.o /usr/local/lib/python2.0/config/libpython2.0.a -lc_r
./socketmodule.c:2377: Definition of symbol `_init_socket' (multiply defined)
./socketmodule.c:2377: Definition of symbol `_init_socket' (multiply defined)
apxs:Break: Command failed with rc=65536

I am completely mystified as to why it says that init_socket is multiply
defined. I can't see more than one definition anywhere. Does anyone have
any suggestions?

From jon+modpython at unequivocal.co.uk  Tue Oct 10 14:59:32 2000
From: jon+modpython at unequivocal.co.uk (Jon Ribbens)
Date: Fri Jan  9 21:52:08 2004
Subject: [mod_python] Compile failure - init_socket multiply defined
In-Reply-To: <20001010144352.B22656@snowy.squish.net>; from jon+modpython@unequivocal.co.uk on Tue, Oct 10, 2000 at 02:43:52PM +0100
References: <20001010144352.B22656@snowy.squish.net>
Message-ID: <20001010145932.C22656@snowy.squish.net>

Jon Ribbens <jon+modpython@unequivocal.co.uk> wrote:
> I am completely mystified as to why it says that init_socket is multiply
> defined.

Hmm, ok, fixed that one. Compiled Python wrong with two _socket modules.

Next problem. ld gives thousands of:

ld: /usr/local/lib/python2.0/config/libpython2.0.a(main.o): RRS text relocation at 0x114bc6 for "___sF"
ld: /usr/local/lib/python2.0/config/libpython2.0.a(main.o): RRS text relocation at 0x114bb8 for "_fprintf"
ld: /usr/local/lib/python2.0/config/libpython2.0.a(main.o): RRS text relocation at 0x114bb3 for "___sF"
ld: /usr/local/lib/python2.0/config/libpython2.0.a(getbuildinfo.o): RRS text relocation at 0x115308 for "_sprintf"

etc. I have no idea what this means either ;-)

From arhiv at freemail.org.mk  Tue Oct 10 18:55:39 2000
From: arhiv at freemail.org.mk (Damjan)
Date: Fri Jan  9 21:52:08 2004
Subject: [mod_python] Session managment for mod_python
Message-ID: <Pine.LNX.4.21.0010101853340.229-100000@localhost.localdomain>

Is there some sollution for session managment in mod_python. I actually
have some ideas how to build this, but wanted to check first, if someone
else has solved this problem.  Thanks.


-- 
damjan

    Linux is like a vigwam, no windows, no gates, just apache inside.


From grisha at ispol.com  Tue Oct 10 14:54:10 2000
From: grisha at ispol.com (Gregory Trubetskoy)
Date: Fri Jan  9 21:52:08 2004
Subject: [mod_python] Session managment for mod_python
In-Reply-To: <Pine.LNX.4.21.0010101853340.229-100000@localhost.localdomain>
Message-ID: <Pine.LNX.4.21.0010101453430.19865-100000@saturn.ispol.com>

what do you mean by session management?


On Tue, 10 Oct 2000, Damjan wrote:

> Is there some sollution for session managment in mod_python. I actually
> have some ideas how to build this, but wanted to check first, if someone
> else has solved this problem.  Thanks.
> 
> 
> -- 
> damjan
> 
>     Linux is like a vigwam, no windows, no gates, just apache inside.
> 
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://www.modpython.org/mailman/listinfo/mod_python
> 


From benno at sesgroup.net  Wed Oct 11 09:33:58 2000
From: benno at sesgroup.net (Ben Leslie)
Date: Fri Jan  9 21:52:08 2004
Subject: [mod_python] Session managment for mod_python
In-Reply-To: <Pine.LNX.4.21.0010101853340.229-100000@localhost.localdomain>; from arhiv@freemail.org.mk on Tue, Oct 10, 2000 at 06:55:39PM +0200
References: <Pine.LNX.4.21.0010101853340.229-100000@localhost.localdomain>
Message-ID: <20001011093358.A4501@bob.sesgroup.net>

Hi Damjan!

On Tue, 10 Oct 2000, Damjan wrote:

> Is there some sollution for session managment in mod_python. I actually
> have some ideas how to build this, but wanted to check first, if someone
> else has solved this problem.  Thanks.
> 


It is pretty easy todo, and really depends a lot on the application you 
are using no how you would want to implement it, and what level of security
you want to build into it.

There are many many things potentially involved in session management.

Firstly, do you want to store the session key as a cookie or as part of
the url (eg ?key=12331232 ).

Secondly, do you want to store keys in a database, in memory, in a file
system.

Thirdly, what data do you want to store between sessions? Simlpy what
user is logged in, other 'simple' information or complex stuff like
class objects in memory.

Finally, how long is a session, when does it end, do you rely on client
 side expiring cookies, do you allow the session cookie to be used for
multiple requests, or do you issue a new cookie each time to reduce the
change of someone stealing the cookie and using it to login as the 
correct user?

I have done a session management for my first project in mod_python, 
using a backend postgres database. I use it simply to track the user
that is logged in. I am using cookies to store the session key. 
Each new page the client is issued with a new cookie, the cookie is 
checked server side that it is still valid (I have a ten minute
time-out on the cookie).

Hope this helps,

Benno

From gdamjan at freemail.org.mk  Wed Oct 11 23:15:35 2000
From: gdamjan at freemail.org.mk (Damjan Georgievski)
Date: Fri Jan  9 21:52:08 2004
Subject: [mod_python] Session managment for mod_python
In-Reply-To: <20001011093358.A4501@bob.sesgroup.net>
Message-ID: <Pine.LNX.4.21.0010112306550.691-100000@localhost.localdomain>

> Hi Damjan!
> > Is there some sollution for session managment in mod_python. I actually
> > have some ideas how to build this, but wanted to check first, if someone
> > else has solved this problem.  Thanks.
> 
> It is pretty easy todo, and really depends a lot on the application you 
> are using no how you would want to implement it, and what level of security
> you want to build into it.
> 
> There are many many things potentially involved in session management.
> 
> Firstly, do you want to store the session key as a cookie or as part of
> the url (eg ?key=12331232 ).
> 
> Secondly, do you want to store keys in a database, in memory, in a file
> system.
> 
> Thirdly, what data do you want to store between sessions? Simlpy what
> user is logged in, other 'simple' information or complex stuff like
> class objects in memory.

I know there are many possible ways of doing this, but I can't say which
way is better (key or cookie , memory/database/file). But for sure I
would like to store a whole object.
 
> Finally, how long is a session, when does it end, do you rely on client
>  side expiring cookies, do you allow the session cookie to be used for
> multiple requests, or do you issue a new cookie each time to reduce the
> change of someone stealing the cookie and using it to login as the 
> correct user?
> 
> I have done a session management for my first project in mod_python, 
> using a backend postgres database. I use it simply to track the user
> that is logged in. I am using cookies to store the session key. 
> Each new page the client is issued with a new cookie, the cookie is 
> checked server side that it is still valid (I have a ten minute
> time-out on the cookie).

Mainly this is what I thought I would do, but many thanks for the cookie
expiration hint.
 
I just think, there should be a standrard mod_python module, with
a simple interface that automates the hard work. This (and embeded
Python support) will finnish-up mod_python to be much more stronger
compared to mod_perl.

Thanks.


-- 
damjan




From arhiv at freemail.org.mk  Wed Oct 11 23:19:08 2000
From: arhiv at freemail.org.mk (Damjan)
Date: Fri Jan  9 21:52:08 2004
Subject: [mod_python] Session managment for mod_python
Message-ID: <Pine.LNX.4.21.0010112317150.691-100000@localhost.localdomain>

> Hi Damjan!
> > Is there some sollution for session managment in mod_python. I actually
> > have some ideas how to build this, but wanted to check first, if someone
> > else has solved this problem.  Thanks.
> 
> It is pretty easy todo, and really depends a lot on the application you 
> are using no how you would want to implement it, and what level of security
> you want to build into it.
> 
> There are many many things potentially involved in session management.
> 
> Firstly, do you want to store the session key as a cookie or as part of
> the url (eg ?key=12331232 ).
> 
> Secondly, do you want to store keys in a database, in memory, in a file
> system.
> 
> Thirdly, what data do you want to store between sessions? Simlpy what
> user is logged in, other 'simple' information or complex stuff like
> class objects in memory.

I know there are many possible ways of doing this, but I can't say which
way is better (key or cookie , memory/database/file). But for sure I
would like to store a whole object.
 
> Finally, how long is a session, when does it end, do you rely on client
>  side expiring cookies, do you allow the session cookie to be used for
> multiple requests, or do you issue a new cookie each time to reduce the
> change of someone stealing the cookie and using it to login as the 
> correct user?
> 
> I have done a session management for my first project in mod_python, 
> using a backend postgres database. I use it simply to track the user
> that is logged in. I am using cookies to store the session key. 
> Each new page the client is issued with a new cookie, the cookie is 
> checked server side that it is still valid (I have a ten minute
> time-out on the cookie).

Mainly this is what I thought I would do, but many thanks for the cookie
expiration hint.
 
I just think, there should be a standard mod_python.session module, with
a simple interface that automates the hard work. This (and embeded
Python support) will finnish-up mod_python to be much more stronger
compared to mod_perl.

Thanks.


-- 
damjan





From python at ragnark.vestdata.no  Thu Oct 12 18:57:47 2000
From: python at ragnark.vestdata.no (=?iso-8859-1?Q?Ragnar_Kj=F8rstad?=)
Date: Fri Jan  9 21:52:08 2004
Subject: [mod_python] Apache configuration
Message-ID: <20001012185747.A27459@vestdata.no>

Hi

The tutorial explains how to set up Apache to run myscript.py to handle
all requests to .py URL's, and points out that it does not actually use
the URL.

However, it does not explain how to configure Apache to run the files
themselves!?

Thanks


-- 
Ragnar Kj?rstad

From benno at sesgroup.net  Fri Oct 13 09:17:07 2000
From: benno at sesgroup.net (Ben Leslie)
Date: Fri Jan  9 21:52:08 2004
Subject: [mod_python] Apache configuration
In-Reply-To: <20001012185747.A27459@vestdata.no>; from python@ragnark.vestdata.no on Thu, Oct 12, 2000 at 06:57:47PM +0200
References: <20001012185747.A27459@vestdata.no>
Message-ID: <20001013091707.B22482@bob.sesgroup.net>

Hi Ragnar!

On Thu, 12 Oct 2000, Ragnar Kj?rstad wrote:

> Hi
> 
> The tutorial explains how to set up Apache to run myscript.py to handle
> all requests to .py URL's, and points out that it does not actually use
> the URL.
> 
> However, it does not explain how to configure Apache to run the files
> themselves!?
> 

Well that is up to your request_handler and what you actually want it to do.

If you want to use traditional cgi-like python scripts then you probably should
use the cgihandler.py as your request_handler. However there is often processing
that you wish to occur with each requst, this is where you would write you
own request_handler. You are able to get access to the uri passed by using the 
req.uri variable.

Hope that helps,

Benno

From sitongia at cgd.ucar.edu  Fri Oct 13 14:33:19 2000
From: sitongia at cgd.ucar.edu (Leonard Sitongia)
Date: Fri Jan  9 21:52:08 2004
Subject: [mod_python] DSO: __muldi3: referenced symbol
Message-ID: <200010132033.OAA28768@bearmtn-e0.cgd.ucar.edu>

Hi,

I'm trying to build mod_python as a DSO on
SunOS goldhill 5.6 Generic_105181-17 sun4u sparc SUNW,Ultra-1
with apache-1.3.12, using the following command:

apxs -a -i -I /opt/local/python/include/python1.5 -c mod_python.c 
/opt/local/python/lib/python1.5/config/libpython1.5.a 
/opt/local/tcl/lib/libtcl8.3.so /opt/local/tk/lib/libtk8.3.so -lm

The result from starting Apache is:

starting Apache
Syntax error on line 228 of /web/apache/conf/httpd.conf:
Cannot load /opt/local/apache-1.3.12/libexec/mod_python.so into server: ld.so.1: 
/opt/local/apache/bin/httpd: fatal: relocation error: file 
/opt/local/apache-1.3.12/libexec/mod_python.so: symbol __muldi3: referenced 
symbol not found

I can only find this symbol in the python library, but cannot find any
information about it via a google search or via the Python web sites.

Looks like some kind of multiply and divide routines.  Anyone recognize
this and can give me a tip on what to do from here (short of compiling
this into Apache).

Thanks.

==Leonard E. Sitongia           
--Information Systems Group / Climate and Global Dynamics
  National Center for Atmospheric Research
  P.O. Box 3000 Boulder CO 80307  USA
  sitongia@ucar.edu    voice: (303)497-1338   fax: (303)497-2699


From jeremy at beopen.com  Fri Oct 13 19:18:34 2000
From: jeremy at beopen.com (Jeremy Hylton)
Date: Fri Jan  9 21:52:08 2004
Subject: [mod_python] [ANNOUNCE] Ninth International Python Conference
Message-ID: <14823.38986.426523.88704@bitdiddle.concentric.net>

CALL FOR PAPERS, POSTERS, AND PARTICIPATION
Ninth International Python Conference
March 5-8, 2001
Long Beach, California
Web site: http://python9.org

The 9th International Python Conference (Python 9) is a forum for
Python users, software developers, and researchers to present current
work, discuss future plans for the language and commercial
applications, and learn about interesting uses of Python. The
conference will consist of a day of tutorials, two days of refereed
paper and application tracks -- including a Zope track and a
multi-technology Python Applications Track, a developers' day, a small
exhibition, demonstrations, and posters.

Paper submission deadline: Monday, November 6, 2000 
Notification of acceptance: Monday, December 11, 2000 
Final papers due: Monday, January 15, 2001 

Authors are invited to submit papers for the Refereed Paper Track
that: 

* Present new and useful applications and tools that utilize Python 
* Describe the use of Python in large, mission-critical or unusual
  applications  
* Address practical programming problems, and provide lessons based on
  experience for Python programmers  

Full information is available on the website, http://python9.org 


From brad at kk208.ocsstud.gu.edu.au  Sat Oct 14 15:20:01 2000
From: brad at kk208.ocsstud.gu.edu.au (Brad Dick)
Date: Fri Jan  9 21:52:08 2004
Subject: [mod_python] undefined symbol: openpty
Message-ID: <20001014152001.A6317@kk208.ocsstud.gu.edu.au>

Umm... can anyone explain to me why I get undefined symbol errors when I start up Apache.

I'm running Python 2.0b2, Apache 1.3.12, PHP 4.0.3, on a Red Hat 6.2. Everything mentioned was built from source on this machine.

I was actually getting an undefined symbol: dbopen error. However, its now changed to an undefined symbol: openpty. This is getting frustrating to say the least. If someone can help, please respond

Brad

From arhiv at freemail.org.mk  Sun Oct 15 15:10:06 2000
From: arhiv at freemail.org.mk (Damjan)
Date: Fri Jan  9 21:52:08 2004
Subject: [mod_python] Session managment for mod_python
In-Reply-To: <Pine.LNX.4.21.0010101453430.19865-100000@saturn.ispol.com>
Message-ID: <Pine.LNX.4.21.0010151452160.542-100000@localhost.localdomain>

> what do you mean by session management?
> 
The best session managment would be a Python dictionary, that is global
to all subinterpreters, and all Apache processes, and that retains its
state across handlers and requests.

Let me illustrate what can be done with this. For example you have
people log-in to your site and you first create a "User" object, set
some attributes to it (ex. preferences). Then you create a semi-random
string, you send that string as a cookie to the users browser, and use
the string as a key in the session managment dictionary. Later when that
user accesses another page on your site, the only thing you do is:

		from mod_python.session_managment import SM
		cookie = getcookie("something")
		user = SM[cookie]
		buf = "Hello " + user.real_name
		if user.show_folders
			# do stuff
		if user.something
			# do other stuff
		...
		etc.

Of course you could do this with a database and pickle-ing the user
object. Or you could do this with a shared memory.

Do you think there should be a standard mod_python module that does all
of this?  

-- 
damjan



From grisha at ispol.com  Sun Oct 15 17:16:53 2000
From: grisha at ispol.com (Gregory Trubetskoy)
Date: Fri Jan  9 21:52:08 2004
Subject: [mod_python] Session managment for mod_python
In-Reply-To: <Pine.LNX.4.21.0010151452160.542-100000@localhost.localdomain>
Message-ID: <Pine.LNX.4.21.0010151706400.24269-100000@saturn.ispol.com>

On Sun, 15 Oct 2000, Damjan wrote:

> > what do you mean by session management?
> > 
> The best session managment would be a Python dictionary, that is global
> to all subinterpreters, and all Apache processes, and that retains its
> state across handlers and requests.

Let me guess - if Apache process is restarted, you would like the state to
be retained througout the restart?

> Let me illustrate what can be done with this. 

[snip]

> Of course you could do this with a database and pickle-ing the user
> object. Or you could do this with a shared memory.

I think you answered your own question - this sort of thing is best done
with a database.

I see Apache (and mod_python, which is just an interface to it) as a
process responsible for serving requests, but not a database, data storage
is not one of its functions, and it is well suited for delegating that
function to a database. 

If you think about it carefully, there is a slew of issues one has to
consider to implement something like this. Locking alone could be pretty
complicated. Why bother with any of this, if something like MySQL already
does all of those things very efficiently.

Hope this doesn't dicourage you from using of mod_python. In fact writing
a mod_python handler that would provide a framework that would use a
database and work as you describe could be a very interesting project.

Grisha


From benno at sesgroup.net  Mon Oct 16 08:46:55 2000
From: benno at sesgroup.net (Ben Leslie)
Date: Fri Jan  9 21:52:08 2004
Subject: [mod_python] Session managment for mod_python
In-Reply-To: <Pine.LNX.4.21.0010151706400.24269-100000@saturn.ispol.com>; from grisha@ispol.com on Sun, Oct 15, 2000 at 05:16:53PM -0400
References: <Pine.LNX.4.21.0010151452160.542-100000@localhost.localdomain> <Pine.LNX.4.21.0010151706400.24269-100000@saturn.ispol.com>
Message-ID: <20001016084655.A6193@bob.sesgroup.net>

On Sun, 15 Oct 2000, Gregory Trubetskoy wrote:

> 
> On Sun, 15 Oct 2000, Damjan wrote:
> 
> > > what do you mean by session management?
> > > 
> > The best session managment would be a Python dictionary, that is global
> > to all subinterpreters, and all Apache processes, and that retains its
> > state across handlers and requests.
> 
> Let me guess - if Apache process is restarted, you would like the state to
> be retained througout the restart?

I would count it as dynamic data that can be lost. I am thinking this thing
would be great as a cache mainly for expensive database lookups, caching files
into memory for faster loading.

 
> > Let me illustrate what can be done with this. 
> 
> [snip]
> 
> > Of course you could do this with a database and pickle-ing the user
> > object. Or you could do this with a shared memory.
> 
> I think you answered your own question - this sort of thing is best done
> with a database.
> 
> I see Apache (and mod_python, which is just an interface to it) as a
> process responsible for serving requests, but not a database, data storage
> is not one of its functions, and it is well suited for delegating that
> function to a database. 

Data storage no, caching yes.

 
> If you think about it carefully, there is a slew of issues one has to
> consider to implement something like this. Locking alone could be pretty
> complicated. Why bother with any of this, if something like MySQL already
> does all of those things very efficiently.

There are a lot of issues, however squeezing some more performance out of
my application by caching files and the like would be extremely useful.
 
The question is the implemenation, afaict apache does not have a global shared
memroy by default, although there seems to be optional patches that can be
compiled in to give you access to to this memory, from what I can tell if we
had access to this interface it would be possible to create a global dictionary
in mod_python to suppport this. Is it worth creating extensions to mod_python
which rely on patches to the apache core?

If anyone with more apache experience than i have could make any comments I would
appreciate it.


Regards,

Ben Leslie

From grisha at ispol.com  Sun Oct 15 21:58:05 2000
From: grisha at ispol.com (Gregory Trubetskoy)
Date: Fri Jan  9 21:52:08 2004
Subject: [mod_python] Session managment for mod_python
In-Reply-To: <20001016084655.A6193@bob.sesgroup.net>
Message-ID: <Pine.LNX.4.21.0010152142581.24379-100000@saturn.ispol.com>

On Mon, 16 Oct 2000, Ben Leslie wrote:

> On Sun, 15 Oct 2000, Gregory Trubetskoy wrote:
> 
> > Let me guess - if Apache process is restarted, you would like the state to
> > be retained througout the restart?
> 
> I would count it as dynamic data that can be lost. I am thinking this thing
> would be great as a cache mainly for expensive database lookups, caching files
> into memory for faster loading.

The only example of dynamic data that can be lost that I can think of is
static, e.g. a list of zipcodes or a cached file, but that doesn't need to
be shared between apache processes - each process can have its own copy.

On the other hand database lookups are probably a lot cheaper than you
think. A simple retrival on a keyed table is not all that far from a
Python dictionary lookup, and most databases will do a great job at
caching queries in memory. The thing I don't like about databases is that
Python still lacks a consistent database API like perl's DBI, but that's a
different issue altogether...

There *are* some cases where shared memory is a must. In particular,
things relating to encryption where keys are exchanged at connection
initiation time. Apache 2.0 addresses those problems, I think there is not
a lot of sense in trying to solve this on 1.3.... I'd rather spend the
time porting mod_python to 2.0.

Grisha



From benno at sesgroup.net  Mon Oct 16 13:35:33 2000
From: benno at sesgroup.net (Ben Leslie)
Date: Fri Jan  9 21:52:08 2004
Subject: [mod_python] Session managment for mod_python
In-Reply-To: <Pine.LNX.4.21.0010152142581.24379-100000@saturn.ispol.com>; from grisha@ispol.com on Sun, Oct 15, 2000 at 09:58:05PM -0400
References: <20001016084655.A6193@bob.sesgroup.net> <Pine.LNX.4.21.0010152142581.24379-100000@saturn.ispol.com>
Message-ID: <20001016133533.A6990@bob.sesgroup.net>

On Sun, 15 Oct 2000, Gregory Trubetskoy wrote:

> 
> On Mon, 16 Oct 2000, Ben Leslie wrote:
> 
> > On Sun, 15 Oct 2000, Gregory Trubetskoy wrote:
> > 
> > > Let me guess - if Apache process is restarted, you would like the state to
> > > be retained througout the restart?
> > 
> > I would count it as dynamic data that can be lost. I am thinking this thing
> > would be great as a cache mainly for expensive database lookups, caching files
> > into memory for faster loading.
> 
> The only example of dynamic data that can be lost that I can think of is
> static, e.g. a list of zipcodes or a cached file, but that doesn't need to
> be shared between apache processes - each process can have its own copy.

This is true but if you have 100 connection you then have 100 times the 
memory. Then again, memory is cheap and programmer time isn't ;)
 
> On the other hand database lookups are probably a lot cheaper than you
> think. A simple retrival on a keyed table is not all that far from a
> Python dictionary lookup, and most databases will do a great job at
> caching queries in memory.

This is true, and since you can have a persistent connection to the DB for
each thread this works quite well. It is more the expensive functions that 
I've worried about, but again these could be cached on a per thread basis.

> The thing I don't like about databases is that
> Python still lacks a consistent database API like perl's DBI, but that's a
> different issue altogether...

Not entriely true there is the DBAPI from the DB-SIG:

http://www.python.org/topics/database/DatabaseAPI-2.0.html
 
> There *are* some cases where shared memory is a must. In particular,
> things relating to encryption where keys are exchanged at connection
> initiation time. Apache 2.0 addresses those problems, I think there is not
> a lot of sense in trying to solve this on 1.3.... I'd rather spend the
> time porting mod_python to 2.0.

Yep, that makes a lot of sense. I didn't know wether apache 2.0 solved this
or not (and couldn't find the answer after looking at the docs).

Cheers,

Benno

From Matthias.Bauer at LivingLogic.de  Mon Oct 16 07:48:24 2000
From: Matthias.Bauer at LivingLogic.de (Matthias Bauer)
Date: Fri Jan  9 21:52:08 2004
Subject: [mod_python] undefined symbol: openpty
References: <20001014152001.A6317@kk208.ocsstud.gu.edu.au>
Message-ID: <39EA96A8.D99DC3DF@LivingLogic.de>

Hi Brad,

I ran into some similar problems, when I started out with mod_python.

I had to include lots of shared libraries until I did no longer get
these undefined symbol errors. If I remember it right, openpty is
defined in libutil.a. But after you include that you may run into some
more undefined symbols. You just have to include all the necessary
libraries until it works.

However I never got mod_python to run after I underwent this lengthy
process - I finally ran into some Segfault, where I got stuck and simply
stopped wasting time.

Please let me know about your experience after you finally manage to get
rid of all these unresolved symbol errors.

Good luck,

--- Matthias

Brad Dick wrote:
> 
> Umm... can anyone explain to me why I get undefined symbol errors when I start up Apache.
> 
> I'm running Python 2.0b2, Apache 1.3.12, PHP 4.0.3, on a Red Hat 6.2. Everything mentioned was built from source on this machine.
> 
> I was actually getting an undefined symbol: dbopen error. However, its now changed to an undefined symbol: openpty. This is getting frustrating to say the least. If someone can help, please respond
> 
> Brad
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://www.modpython.org/mailman/listinfo/mod_python
-------------- next part --------------
A non-text attachment was scrubbed...
Name: smime.p7s
Type: application/x-pkcs7-signature
Size: 2054 bytes
Desc: S/MIME Cryptographic Signature
Url : http://mailman.modpython.org/pipermail/mod_python/attachments/20001016/9b49d361/smime-0001.bin
From michael at stroeder.com  Mon Oct 16 08:44:19 2000
From: michael at stroeder.com (Michael =?iso-8859-1?Q?Str=F6der?=)
Date: Fri Jan  9 21:52:08 2004
Subject: [mod_python] Session managment for mod_python
References: <Pine.LNX.4.21.0010152142581.24379-100000@saturn.ispol.com>
Message-ID: <39EAA3C3.211E2B92@stroeder.com>

Gregory Trubetskoy wrote:
> 
> There *are* some cases where shared memory is a must.
> [..]
> Apache 2.0 addresses those problems, I think there is not
> a lot of sense in trying to solve this on 1.3.... I'd rather spend the
> time porting mod_python to 2.0.

Yes, you're right. Don't waste your time working around problems
which are solved in Apache 2.0.

Ciao, Michael.

From michael at stroeder.com  Mon Oct 16 08:41:48 2000
From: michael at stroeder.com (Michael =?iso-8859-1?Q?Str=F6der?=)
Date: Fri Jan  9 21:52:08 2004
Subject: [mod_python] Session managment for mod_python
References: <Pine.LNX.4.21.0010151706400.24269-100000@saturn.ispol.com>
Message-ID: <39EAA32C.861524CB@stroeder.com>

Gregory Trubetskoy wrote:
> 
> On Sun, 15 Oct 2000, Damjan wrote:
> 
> > > what do you mean by session management?
> > >
> > The best session managment would be a Python dictionary, that is global
> > to all subinterpreters, and all Apache processes, and that retains its
> > state across handlers and requests.
> 
> Let me guess - if Apache process is restarted, you would like the state to
> be retained througout the restart?

If Apache starts session data can be lost.

> > Of course you could do this with a database and pickle-ing the user
> > object. Or you could do this with a shared memory.
> 
> I think you answered your own question - this sort of thing is best done
> with a database.

Some objects are not pickeable but worth to be kept in a session
cache. E.g. connection objects of a database access.

Nevertheless most web applications could provide a session managment
themselves. There are some projects which implement this for Python
(e.g. webware etc.)

Ciao, Michael.

From artrussia at newmail.ru  Sat Oct 14 11:54:51 2000
From: artrussia at newmail.ru (Boris Lipner)
Date: Fri Jan  9 21:52:08 2004
Subject: [mod_python] Art
Message-ID: <421256896.20001014115451@newmail.ru>

Dear Madam and Sir,

The Art Gallery  Gallery-Ainvites you to the new exhibitions.
Today on our page you can see more than 200 new wonderful paintings. We hope you will like them.

Our company, "GALLERY-A"  www.gallery-a.ru  , offer both modern and classical
art, deals in a line of pieces of art by talented artists. Their works  include original
paintings, sculptures, etc., copies of masterpieces of various styles, countries and epochs,
portraits made to order. These
professional artists are high-skilled graduates of educational institutions such as the Academy
of Fine Arts, High School for Arts and Design and other art colleges. 

You establish contact and find out new customers who would like to buy a masterpiece of
realistic Art.

SITE: www.gallery-a.ru
E-MAIL: gallery-a@peterlink.ru

Best regards
Boris Lipner, General Manager.

If you want to REMOVE your E-maiIL from our Post List PLEASE send letter to artrussia@newmail.ru



From grisha at verio.net  Mon Oct 16 10:13:13 2000
From: grisha at verio.net (Gregory Trubetskoy)
Date: Fri Jan  9 21:52:08 2004
Subject: [mod_python] Session managment for mod_python
References: <Pine.LNX.4.21.0010151706400.24269-100000@saturn.ispol.com> <39EAA32C.861524CB@stroeder.com>
Message-ID: <39EB1B09.AF8E61DF@verio.net>

Michael Str?der wrote:
> 
> Some objects are not pickeable but worth to be kept in a session
> cache. E.g. connection objects of a database access.

And mod_python will do a great job of keeping your connection object.
You will just have to have a connection object per child process (and
you'll need to make sure that MaxClients is not greater than the number
of allowed connections to your database server)

Grisha

From geoff at infostreet.com  Tue Oct 17 09:19:57 2000
From: geoff at infostreet.com (Geoff Cadien)
Date: Fri Jan  9 21:52:08 2004
Subject: [mod_python] Problem setting cookie and then redirecting
Message-ID: <39EC7C2D.F007C922@infostreet.com>

From jj at echobridge.com  Tue Oct 17 14:31:34 2000
From: jj at echobridge.com (Shannon -jj Behrens)
Date: Fri Jan  9 21:52:08 2004
Subject: [mod_python] FAQ or list archives
Message-ID: <39ECC536.1E121809@echobridge.com>

Dear Sirs,

Is there a FAQ or a mailing list archive that I can refer to?  I can't
seem to get mod_python to work in CGI mode using Python 1.6.  It keeps
complaining about:

File  File "/usr/local/apache/htdocs/aquarium/htdocs/index.py", line 35,
in ?
    Aquarium().handleRequest()
  File "/usr/local/apache/htdocs/aquarium/aquarium/util/Aquarium.py",
line 60, in handleRequest
    import cgi
  File "/usr/local/devel/lib/python1.6/cgi.py", line 747, in ?
    class FieldStorage:
  File "/usr/local/devel/lib/python1.6/cgi.py", line 991, in
FieldStorage
    bufsize = 8*1024            # I/O buffering size for copy to file
OverflowError: integer multiplication

Thanks,
-jj

-- 
Using a program to write a program to test a program has high leverage.
Kernigan and Pike, "The Practice of Programming."

From grisha at ispol.com  Tue Oct 17 16:35:22 2000
From: grisha at ispol.com (Gregory Trubetskoy)
Date: Fri Jan  9 21:52:08 2004
Subject: [mod_python] FAQ or list archives
In-Reply-To: <39ECC536.1E121809@echobridge.com>
Message-ID: <Pine.LNX.4.21.0010171633240.579-100000@saturn.ispol.com>

I saw something on usenet about this and glibc 2.1.93, it is reportedly a
glibc bug. What glibc are you using?

Grisha

On Tue, 17 Oct 2000, Shannon -jj Behrens wrote:

> Dear Sirs,
> 
> Is there a FAQ or a mailing list archive that I can refer to?  I can't
> seem to get mod_python to work in CGI mode using Python 1.6.  It keeps
> complaining about:
> 
> File  File "/usr/local/apache/htdocs/aquarium/htdocs/index.py", line 35,
> in ?
>     Aquarium().handleRequest()
>   File "/usr/local/apache/htdocs/aquarium/aquarium/util/Aquarium.py",
> line 60, in handleRequest
>     import cgi
>   File "/usr/local/devel/lib/python1.6/cgi.py", line 747, in ?
>     class FieldStorage:
>   File "/usr/local/devel/lib/python1.6/cgi.py", line 991, in
> FieldStorage
>     bufsize = 8*1024            # I/O buffering size for copy to file
> OverflowError: integer multiplication
> 
> Thanks,
> -jj
> 
> -- 
> Using a program to write a program to test a program has high leverage.
> Kernigan and Pike, "The Practice of Programming."
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://www.modpython.org/mailman/listinfo/mod_python
> 


From geoff at infostreet.com  Tue Oct 17 13:35:29 2000
From: geoff at infostreet.com (Geoff Cadien)
Date: Fri Jan  9 21:52:09 2004
Subject: [mod_python] Problem setting cookie and then redirecting
References: <Pine.LNX.4.21.0010171617090.579-100000@saturn.ispol.com>
Message-ID: <39ECB811.AEA563B4@infostreet.com>

That did the trick.  Thanks!

-geoff

Gregory Trubetskoy wrote:
> 
> Do this:
> 
> req.headers_out['Set-Cookie']='key=value'
> req.headers_out['location'] = 'http://localhost/index.html'
> req.status = apache.HTTP_MOVED_TEMPORARILY
> req.send_http_header()
> return apache.OK
> 
> The last line doesn't really matter since req.status is set and headers
> already went out.
> 
> Grisha
> 
> On Tue, 17 Oct 2000, Geoff Cadien wrote:
> 
> > >From a PythonHandler I'm trying to set a cookie and then do a redirect
> > and it is not working.  I'm doing:
> >
> > req.headers_out['Set-Cookie']='key=value'
> > req.headers_out['location'] = 'http://localhost/index.html'
> > return apache.HTTP_MOVED_TEMPORARILY
> >
> > The problem seems to be that if I don't do req.send_http_header() the
> > Set-Cookie doesn't get sent so the cookie doesn't get set.  If I do call
> > req.send_http_header() the cookie does get set but it seems as though
> > two sets of headers are sent and the response code is 200.  Any ideas?
> >
> > Geoff Cadien
> > geoff@infostreet.com
> > _______________________________________________
> > Mod_python mailing list
> > Mod_python@modpython.org
> > http://www.modpython.org/mailman/listinfo/mod_python
> >

From grisha at ispol.com  Tue Oct 17 16:30:12 2000
From: grisha at ispol.com (Gregory Trubetskoy)
Date: Fri Jan  9 21:52:09 2004
Subject: [mod_python] Problem setting cookie and then redirecting
In-Reply-To: <39EC7C2D.F007C922@infostreet.com>
Message-ID: <Pine.LNX.4.21.0010171617090.579-100000@saturn.ispol.com>

Do this:

req.headers_out['Set-Cookie']='key=value'
req.headers_out['location'] = 'http://localhost/index.html'
req.status = apache.HTTP_MOVED_TEMPORARILY
req.send_http_header()
return apache.OK

The last line doesn't really matter since req.status is set and headers
already went out.
 
Grisha

On Tue, 17 Oct 2000, Geoff Cadien wrote:

> >From a PythonHandler I'm trying to set a cookie and then do a redirect
> and it is not working.  I'm doing:
> 
> req.headers_out['Set-Cookie']='key=value'
> req.headers_out['location'] = 'http://localhost/index.html'
> return apache.HTTP_MOVED_TEMPORARILY
> 
> The problem seems to be that if I don't do req.send_http_header() the
> Set-Cookie doesn't get sent so the cookie doesn't get set.  If I do call
> req.send_http_header() the cookie does get set but it seems as though
> two sets of headers are sent and the response code is 200.  Any ideas?
> 
> Geoff Cadien
> geoff@infostreet.com
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://www.modpython.org/mailman/listinfo/mod_python
> 


From grisha at ispol.com  Wed Oct 18 23:31:04 2000
From: grisha at ispol.com (Gregory Trubetskoy)
Date: Fri Jan  9 21:52:09 2004
Subject: [mod_python] [ANNOUNCE] Mod_python 2.6
Message-ID: <Pine.LNX.4.21.0010182330290.5966-100000@saturn.ispol.com>

Mod_python is an Apache module that embeds Python within the server. For
information on mod_python go to http://www.modpython.org/

Installation is now greatly simplified through the use of autoconf
(./configure). Some new features were added, a few bugs fixed,
documentation improved. Many changes under the hood, improving
performance, organizing better code.

Enjoy!

--
  Gregory (Grisha) Trubetskoy
       grisha@ispol.com



From miguel at yorku.ca  Thu Oct 19 15:08:15 2000
From: miguel at yorku.ca (Miguel Marques)
Date: Fri Jan  9 21:52:09 2004
Subject: [mod_python] retaining state between handlers
In-Reply-To: <Pine.LNX.4.21.0010022321510.12796-100000@saturn.ispol.com>
References: <Pine.LNX.4.21.0010022321510.12796-100000@saturn.ispol.com>
Message-ID: <20001019150815S.miguel@yorku.ca>

On Mon, 2 Oct 2000 23:26:40 -0400 (EDT), Gregory Trubetskoy <grisha@ispol.com> wrote:
> 
> For those of you handy with CVS - I've checked in the new version, where
> the request object is a real Python object (as opposed to a built-in),
> which you can modify.
> 
> This allows passing information between handlers by simply doing something
> like:
> 
> req.myvariable = "something"
> 
> in one handler and then using that value in another. 
> 
> Note that different subinterpreters will have different requests objects,
> even though the underlying built-in (now req._req) is still the same.
> 
> --
Was this included in 2.6?  I just tried to do this between my Access Handler and
my Handler and it didn't work.

						Miguel

C. Miguel Marques, York University, Computing & Network Services
e-mail: miguel@yorku.ca, voice: (416)736-2100x22684, fax: (416)736-5830

From rsalz at CaveoSystems.com  Fri Oct 20 12:05:23 2000
From: rsalz at CaveoSystems.com (rsalz@CaveoSystems.com)
Date: Fri Jan  9 21:52:09 2004
Subject: [mod_python] Must I configure apache first?
Message-ID: <200010201605.MAA30030@os390.caveosystems.com>

It's not convenient to disable 'make dependencies' I have to do this:
	ac_cv_path_MKDEP=/bin/echo ./configure ...flags...
I'd rather see "--without-mkdep" or some such flag.

The reason for not wanting mkdep is that it needs ap_config_pool.h or some
such file, and since I haven't yet configured apache I don't have that file.

I don't want to configure apache because mod_ssl wants to do some things,
and doing mod_python apache and mod_ssl is all getting me confused. :)
(I keep the unconfig'd sources in my CVS tree and do product builds
from those virgin sources on a couple of platforms.)

More importantly, I'd rather the mod_python sources were just inserted
into the Apache tree and built as part of building apache.  I.e., the old
way.

thanks.
	/r$

From rsalz at CaveoSystems.com  Fri Oct 20 13:07:25 2000
From: rsalz at CaveoSystems.com (rsalz@CaveoSystems.com)
Date: Fri Jan  9 21:52:09 2004
Subject: [mod_python] Error in install_static in Makefile.in
Message-ID: <200010201707.NAA05411@os390.caveosystems.com>

	$(INSTALL) src/libpython.a $(AP_SRC)/src/modules/python/libmod_python.a
				 I had to add these four characters^^^^


From grisha at ispol.com  Fri Oct 20 13:03:28 2000
From: grisha at ispol.com (Gregory Trubetskoy)
Date: Fri Jan  9 21:52:09 2004
Subject: [mod_python] Must I configure apache first?
In-Reply-To: <200010201605.MAA30030@os390.caveosystems.com>
Message-ID: <Pine.LNX.4.21.0010201255180.12128-100000@saturn.ispol.com>

But you have to have Apache configured. Things like file locations,
OS-specific headers, etc, are all not there before configuration. I think
the fact that it compiles and works for you with unconfigured Apache is
pure luck.

You should let SSL do its thing, then compile and install mod_python. Or
you can do it the other way around. There shouldn't be any problems with
that.

--
  Gregory (Grisha) Trubetskoy
       grisha@ispol.com

On Fri, 20 Oct 2000 rsalz@caveosystems.com wrote:

> It's not convenient to disable 'make dependencies' I have to do this:
> 	ac_cv_path_MKDEP=/bin/echo ./configure ...flags...
> I'd rather see "--without-mkdep" or some such flag.
> 
> The reason for not wanting mkdep is that it needs ap_config_pool.h or some
> such file, and since I haven't yet configured apache I don't have that file.
> 
> I don't want to configure apache because mod_ssl wants to do some things,
> and doing mod_python apache and mod_ssl is all getting me confused. :)
> (I keep the unconfig'd sources in my CVS tree and do product builds
> from those virgin sources on a couple of platforms.)
> 
> More importantly, I'd rather the mod_python sources were just inserted
> into the Apache tree and built as part of building apache.  I.e., the old
> way.
> 
> thanks.
> 	/r$
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://www.modpython.org/mailman/listinfo/mod_python
> 


From jj at echobridge.com  Fri Oct 20 12:35:40 2000
From: jj at echobridge.com (Shannon -jj Behrens)
Date: Fri Jan  9 21:52:09 2004
Subject: [mod_python] cgihandler module reloads
Message-ID: <39F09E8C.BFD7EFC@echobridge.com>

The cgihandler documenation states that:

"The cgihandler reloads the module for every hit. However, the modules
imported by the main module do not get reloaded. This is good for
performance, but if your CGI scripts relied on this functionality, they
will be broken."

Is there any way I can force it to reload the modules?  By the way, if
this is documented elsewhere, please send me there, and I'll stop
bugging you guys ;)

-jj

-- 
Using a program to write a program to test a program has high leverage.
Kernigan and Pike, "The Practice of Programming."

From grisha at ispol.com  Fri Oct 20 15:22:15 2000
From: grisha at ispol.com (Gregory Trubetskoy)
Date: Fri Jan  9 21:52:09 2004
Subject: [mod_python] cgihandler module reloads
In-Reply-To: <39F09E8C.BFD7EFC@echobridge.com>
Message-ID: <Pine.LNX.4.21.0010201520010.12793-100000@saturn.ispol.com>

On Fri, 20 Oct 2000, Shannon -jj Behrens wrote:

> Is there any way I can force it to reload the modules?  By the way, if
> this is documented elsewhere, please send me there, and I'll stop
> bugging you guys ;)

well... to change your script to have somthing like

import mymodule
mymodule = reload(mymodule)

is about your only option...

Grisha



From dave_lambert at ev1.net  Fri Oct 20 14:46:59 2000
From: dave_lambert at ev1.net (David Lambert)
Date: Fri Jan  9 21:52:09 2004
Subject: [mod_python] Problems building apache 1.3.14 with mod_python2.6
Message-ID: <39F0A133.AEE8F92F@ev1.net>

If I attempt to build a static version of mod_python2.6 with
apache1.3.14. I get the following error. The DSO version seems to build
fine.

Any ideas?

Thanks,

David Lambert.


===> src/modules/python
make[4]: *** No rule to make target `libmod_python.a', needed by `lib'. 
Stop.
make[3]: *** [all] Error 1
make[2]: *** [subdirs] Error 1
make[2]: Leaving directory `/home/dlambert/lawnet/apache_1.3.14/src'
make[1]: *** [build-std] Error 2
make[1]: Leaving directory `/home/dlambert/lawnet/apache_1.3.14'
make: *** [build] Error 2

From grisha at ispol.com  Sat Oct 21 16:52:08 2000
From: grisha at ispol.com (Gregory Trubetskoy)
Date: Fri Jan  9 21:52:09 2004
Subject: [mod_python] 2.6.1 is out
Message-ID: <Pine.LNX.4.21.0010211650430.16840-100000@saturn.ispol.com>

2.6.1 only fixes a coule of issues related installation on some
platforms.

Enjoy,

--
  Gregory (Grisha) Trubetskoy
       grisha@ispol.com


From grisha at ispol.com  Sun Oct 22 00:05:13 2000
From: grisha at ispol.com (Gregory Trubetskoy)
Date: Fri Jan  9 21:52:09 2004
Subject: [mod_python] 2.6.2
Message-ID: <Pine.LNX.4.21.0010220003220.17894-100000@saturn.ispol.com>

...Some more installation isues were found. So there is 2.6.2 now.

Particularly the problem about "openpty" should go away now. Also the "No
current thread state" issue at apache exit should now be resolved.

Grisha


From kitezh at dol.ru  Mon Oct 23 16:27:33 2000
From: kitezh at dol.ru (kitezh)
Date: Fri Jan  9 21:52:09 2004
Subject: [mod_python] mod_python don't work on NT4.0
Message-ID: <35279115345.20001023162733@dol.ru>

Hello mod,

- Apache 1.3.9
- WinNT 4 SP 4

I do as instruction says:
LoadModule python_module modules/mod_python.dll

At start Apache says:
:
Cannot load ....\mod_python.dll into server:

Help pls!

SY Kitezh



From evaamo at loquesea.com  Mon Oct 23 11:39:32 2000
From: evaamo at loquesea.com (Enrique Vaamonde)
Date: Fri Jan  9 21:52:09 2004
Subject: [mod_python] mod_python don't work on NT4.0
In-Reply-To: <35279115345.20001023162733@dol.ru>
Message-ID: <000301c03d07$70bf6230$41dea8c0@wormhole>

dumb question but...did you copy the mod_python.dll into your modules
directory in Apache?

-E

-----Original Message-----
From: mod_python-admin@modpython.org
[mailto:mod_python-admin@modpython.org]On Behalf Of kitezh
Sent: Monday, October 23, 2000 8:28 AM
To: mod_python@modpython.org
Subject: [mod_python] mod_python don't work on NT4.0


Hello mod,

- Apache 1.3.9
- WinNT 4 SP 4

I do as instruction says:
LoadModule python_module modules/mod_python.dll

At start Apache says:
:
Cannot load ....\mod_python.dll into server:

Help pls!

SY Kitezh


_______________________________________________
Mod_python mailing list
Mod_python@modpython.org
http://www.modpython.org/mailman/listinfo/mod_python


From sbi at acse.be  Mon Oct 23 18:28:23 2000
From: sbi at acse.be (Stephane Bidoul)
Date: Fri Jan  9 21:52:09 2004
Subject: [mod_python] mod_python don't work on NT4.0
References: <35279115345.20001023162733@dol.ru>
Message-ID: <006501c03d0e$43590d80$caa679c1@spirou>

What python version do you use?
mod_python.dll is for python 1.5.2 only at the moment
(just a matter of recompiling).

-sbi

----- Original Message -----
From: "kitezh" <kitezh@dol.ru>
To: <mod_python@modpython.org>
Sent: Monday, 23 October, 2000 14:27
Subject: [mod_python] mod_python don't work on NT4.0


> Hello mod,
>
> - Apache 1.3.9
> - WinNT 4 SP 4
>
> I do as instruction says:
> LoadModule python_module modules/mod_python.dll
>
> At start Apache says:
> :
> Cannot load ....\mod_python.dll into server:
>
> Help pls!
>
> SY Kitezh
>
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://www.modpython.org/mailman/listinfo/mod_python
>



From kitezh at dol.ru  Tue Oct 24 13:02:53 2000
From: kitezh at dol.ru (kitezh)
Date: Fri Jan  9 21:52:09 2004
Subject: [mod_python] mod_python don't work on NT4.0
In-Reply-To: <000301c03d07$70bf6230$41dea8c0@wormhole>
References: <000301c03d07$70bf6230$41dea8c0@wormhole>
Message-ID: <160353238871.20001024130253@dol.ru>

Hello Enrique,

???????????, 23 ??????? 2000 ?., you wrote to me:

EV> dumb question but...did you copy the mod_python.dll into your modules
EV> directory in Apache?
sure :)



Best regards,
 kitezh                            mailto:kitezh@dol.ru



From sbi at acse.be  Tue Oct 24 14:49:58 2000
From: sbi at acse.be (Stephane Bidoul)
Date: Fri Jan  9 21:52:09 2004
Subject: [mod_python] mod_python don't work on NT4.0
References: <35279115345.20001023162733@dol.ru> <006501c03d0e$43590d80$caa679c1@spirou> <174353632607.20001024130927@dol.ru>
Message-ID: <002101c03db8$ea838ae0$caa679c1@spirou>

>I use 1.5.2
>But where can I write a path to my Python directory?

You don't need to do that; python15.dll is in your windows/system32
directory.
However the mod_python,'s own .py package must be in your PYTHONPATH
(if your have a mod_python subdir in your python directory, it should be
ok).

If everything it's ok, you'll need to be more specific about your issue
(maybe try to start apache on the command line and look at
the messages there).

'hope this helps.

-Stephane




From rsalz at CaveoSystems.com  Tue Oct 24 10:16:26 2000
From: rsalz at CaveoSystems.com (rsalz@CaveoSystems.com)
Date: Fri Jan  9 21:52:09 2004
Subject: [mod_python] Replacement for libmod_python.module
Message-ID: <200010241416.KAA16356@os390.caveosystems.com>

I was trying to build a statically-linked Apache from
	Apache 1.3.14
	mod_ssl
	mod_python 2.6.2

After spending some time with Appendix C of "Writing Apache Modules with
Perl and C," I got something to work.  (Or at least compile.  Not done
much testing yet.)

First, I had to create my own libmod_python.module; the distribution
has a libpython.module.  I don't understand which name and why, but so
be it.  Next, the INCLUDES flag doesn't need to be there since there is no
compiling from source.  The LDFLAGS doesn't need to be there since Apache
has its own rules for figuring out how to link itself.  Finally the LIBS
line was wrong -- it needed to *add* to the LIBS variable, not replace it.

So, in my case, I ended up with the following libmod_python.module.
Since this is part of my nightly build script, and since I didn't want
to muck with mod_python sources (I hate CVS merging :), I just this:
	cd $APACHE
	rm src/modules/python/*.module
	cat <<'EOF' > src/modules/python/libmod_python.module
Name: python_module
ConfigStart
    LIBS="/usr/local/lib/python2.0/config/libpython2.0.a $LIBS -lpthread -ldl -l util -ldb"
ConfigEnd
EOF

I suppose the distribution's .in file could be
    Name: python_module
    ConfigStart
	LIBS="$LIBS @LIBS@"
    ConfigEnd
But I haven't tested that.

I would rather see mod_python just figure out the Python headers and
extra libraries and dump source into the Apache tree.  That way configure
wouldn't need to do or notice anything about Apache.  But this works.
On a related issue, I'd like to see the install target(s) split into
two parts -- one that requires root access (the .py files in site_config)
and one that doesn't.  This could be handled with a Makefile trick, if
it's important to preserve the current scheme.
	INSTALL_PY_LIB	= install_py_lib
		...
	@$(MAKE) $(INSTALL_PY_LIB)

	NO: ; @echo not installing .py files...

Then I could do
	make install INSTALL_PY_LIB=NO

Hope others find this useful.  Thanks to Grisha for putting up with my
email gripes.
	/r$

From jcea at argo.es  Tue Oct 24 17:29:15 2000
From: jcea at argo.es (Jesus Cea Avion)
Date: Fri Jan  9 21:52:09 2004
Subject: [mod_python] BUG compiling Python 2.0 with dinamic modules in Solaris, with GCC
Message-ID: <39F5AACB.1501EF5F@argo.es>

(I can't post the patch in sourceforge since the SSL login seems to be
down in the last three hours)

Python 2.0 (dinamic modules)
Mod_Python 2.6.2 (dinamic module)
GCC 2.95.2
Apache 1.3.14 (dinamic modules)
SunOS5 (Solaris 2.x)

I send the email also to "mod_python" mailing list since I detect the
problem using this package. Other developers could see the very same
problem!.


Mod_python runs smoothly until I do a "import zlib", for example, in a
handler. In this case, the request is aborted with the following log:

>>>>>
[Tue Oct 24 16:27:40 2000] [error] PythonHandler cache: Traceback (most
recent call last):
[Tue Oct 24 16:27:40 2000] [error] PythonHandler cache:   File
"/usr/local/lib/python2.0/site-packages/mod_python/apache.py", line 185,
in Dispatch
    result = object(self.req)
[Tue Oct 24 16:27:40 2000] [error] PythonHandler cache:   File
"/export/home/webmaster/www.argo.es/servicios/cache.py", line 47, in
handler
    exec(cache[f][1])
[Tue Oct 24 16:27:40 2000] [error] PythonHandler cache:   File
"/export/home/webmaster/www.argo.es/servicios/borra_email", line 183, in
?
    req2=wrap(req)
[Tue Oct 24 16:27:40 2000] [error] PythonHandler cache:   File
"/export/home/webmaster/www.argo.es/servicios/borra_email", line 159, in
__init__
    import zlib
[Tue Oct 24 16:27:40 2000] [error] PythonHandler cache: ImportError:
ld.so.1: /opt/local/apache/bin/httpd: fatal: relocation error: file
/usr/local/lib/python2.0/lib-dynload/zlibmodule.so: symbol main:
referenced symbol not found
<<<<<

That is, "zlibmodule.so" tries to link to a function called "main".

Doing a "nm object|grep main", I see the unresolved reference in
"zlibmodule.so", but not in "zlibmodule.o". So, the problem seems to be
the creation of the shared library.

I tracked down the problem to the "configure" script: "cc -G" is (I
think) the right thing to do to create a shared library if you are using
the Sun compiler, but if you are using GCC (like me), the right command
is "gcc -shared".

Patch for Python 2.0:

>>>>>
Index: configure
===================================================================
RCS file: /opt/src/cvsroot/python/configure,v
retrieving revision 1.1.1.2
retrieving revision 1.1.1.2.2.1
diff -c -r1.1.1.2 -r1.1.1.2.2.1
*** configure   2000/10/18 19:06:44     1.1.1.2
--- configure   2000/10/24 14:19:01     1.1.1.2.2.1
***************
*** 2650,2656 ****
        SunOS/4*) LDSHARED="ld";;
        SunOS/5*) 
                if test "$GCC" = "yes"
!               then LDSHARED='$(CC) -G'
                else LDSHARED="ld -G";
                fi ;;
        hp*|HP*) LDSHARED="ld -b";;
--- 2650,2656 ----
        SunOS/4*) LDSHARED="ld";;
        SunOS/5*) 
                if test "$GCC" = "yes"
!               then LDSHARED='$(CC) -shared'
                else LDSHARED="ld -G";
                fi ;;
        hp*|HP*) LDSHARED="ld -b";;
Index: configure.in
===================================================================
RCS file: /opt/src/cvsroot/python/configure.in,v
retrieving revision 1.1.1.2
retrieving revision 1.1.1.2.2.1
diff -c -r1.1.1.2 -r1.1.1.2.2.1
*** configure.in        2000/10/18 19:06:45     1.1.1.2
--- configure.in        2000/10/24 14:19:03     1.1.1.2.2.1
***************
*** 564,570 ****
        SunOS/4*) LDSHARED="ld";;
        SunOS/5*) 
                if test "$GCC" = "yes"
!               then LDSHARED='$(CC) -G'
                else LDSHARED="ld -G";
                fi ;;
        hp*|HP*) LDSHARED="ld -b";;
--- 564,570 ----
        SunOS/4*) LDSHARED="ld";;
        SunOS/5*) 
                if test "$GCC" = "yes"
!               then LDSHARED='$(CC) -shared'
                else LDSHARED="ld -G";
                fi ;;
        hp*|HP*) LDSHARED="ld -b";;
<<<<<

-- 
Jesus Cea Avion                         _/_/      _/_/_/        _/_/_/
jcea@argo.es http://www.argo.es/~jcea/ _/_/    _/_/  _/_/    _/_/  _/_/
                                      _/_/    _/_/          _/_/_/_/_/
PGP Key Available at KeyServ   _/_/  _/_/    _/_/          _/_/  _/_/
"Things are not so easy"      _/_/  _/_/    _/_/  _/_/    _/_/  _/_/
"My name is Dump, Core Dump"   _/_/_/        _/_/_/      _/_/  _/_/
"El amor es poner tu felicidad en la felicidad de otro" - Leibniz

From cameron at infostreet.com  Tue Oct 24 14:49:23 2000
From: cameron at infostreet.com (Cameron La Rue)
Date: Fri Jan  9 21:52:09 2004
Subject: [mod_python] bug in PythonAuthenHandler?
Message-ID: <39F603E3.A38CBBD0@infostreet.com>

Hi all,
        I'm having trouble with an authentication script using
PythonAuthenHandler. First of all, we're running RedHat Linux 6.2,
Apache 1.3.9, mod_python 2.5, and python 1.5.2.

In my httpd.conf, I have the following:
#-------------------------------------------
AddHandler python-program .py
PythonHandler base2
<Location /test_enduser>
   AuthType auth
   AuthName PythonHosting
   AddHandler python-program .py
   PythonAuthenHandler base2::authenticate
   require valid-user
</Location>
#-------------------------------------------


I've got a script, base2.py, that looks like this:
#-------------------------------------------
def authenticate(req):
    e, si, so = apache.setup_cgi(req)
    apache.restore_nocgi(e, si, so)
    apache.log_error('here we are')
    return apache.OK

def handler(req):
    apache.log_error('handler works')
    e, si, so = apache.setup_cgi(req)
    apache.restore_nocgi(e, si, so)
    return apache.OK
#-------------------------------------------

Finally, I have an html page (test.html) that looks like this:
#-------------------------------------------
<html>
<body>
<a href='/test_enduser/enduser.html'>go man</a>
</body>
</html>
#-------------------------------------------

I am running apache in single process mode, like so:
/infostreet/apache/bin/httpd -X -f
~/projects/_current_/apache/httpd.conf

If I click the "go man" link in test.html, the base2::authenticate
method is called, and I am allowed to access /test_enduser/enduser.html.
Then, I click the back button on my browser. I click the "go man" link a
second time, base2:authenticate is called again, and apache segfaults.
It does print 'here we are' in the error log, so it gets that far.

I also noticed something else. If, after starting apache, I first access
a python script using PythonHandler, I can then access the
PythonAuthenHandler as many times as I want without apache segfaulting.
Is this a bug in the PythonAuthenHandler? Thanks in advance...

Cameron

From kitezh at dol.ru  Wed Oct 25 13:57:29 2000
From: kitezh at dol.ru (kitezh)
Date: Fri Jan  9 21:52:09 2004
Subject: [mod_python] mod_python don't work on NT4.0
In-Reply-To: <002101c03db8$ea838ae0$caa679c1@spirou>
References: <35279115345.20001023162733@dol.ru>
 <006501c03d0e$43590d80$caa679c1@spirou> <174353632607.20001024130927@dol.ru>
 <002101c03db8$ea838ae0$caa679c1@spirou>
Message-ID: <1727260936.20001025135729@dol.ru>

Hello Stephane,

???????, 24 ??????? 2000 ?., you wrote to me:

SB> You don't need to do that; python15.dll is in your windows/system32
SB> directory.
SB> However the mod_python,'s own .py package must be in your PYTHONPATH
SB> (if your have a mod_python subdir in your python directory, it should be
SB> ok).

SB> If everything it's ok, you'll need to be more specific about your issue
SB> (maybe try to start apache on the command line and look at
SB> the messages there).
More specific:
Error when starting from command line:
Syntax error on line 176 of c:/program files/apache group/apache/conf/httpd.conf
:
Cannot load c:/program files/apache group/apache/modules/mod_python.dll into ser
ver:

Error when starting from Services:
The application or DLL c:\program files\apache group\apache\mod_python.dll
is not a valid Windows NT image. Please chek this against your
installation diskette.


Best regards,
 kitezh                            mailto:kitezh@dol.ru



From mtiwari0 at cs.sc.edu  Thu Oct 26 12:44:53 2000
From: mtiwari0 at cs.sc.edu (Mayank Tiwari)
Date: Fri Jan  9 21:52:09 2004
Subject: [mod_python] make_obcallback returned no obCallBack!
Message-ID: <4.1.20001026124002.00a91c60@usceast.cs.sc.edu>

greetings all,

I am new to python, I tried to configure mod_python and ran into problems : 
here are the specifics:

Apache version : 1.3.12 Win32
Python 	: 1.52
mod_python 	:2.6.2

when ever i try to test the installation by the following python prog (
test.py) it doesn't work and the following error is generated ( from apache
errorlog)

[Thu Oct 26 12:34:20 2000] [error] [client xxx.xxx.xxx.xxx] python_handler:
make_obcallback returned no obCallBack!

(* i cahnged the ipaddress to x's )

Any help would be most appreciated. 

	-Mayank
Q.) God.. root.. What's the difference?       
A.) God is forgiving...


From mtiwari0 at cs.sc.edu  Thu Oct 26 12:47:27 2000
From: mtiwari0 at cs.sc.edu (Mayank Tiwari)
Date: Fri Jan  9 21:52:09 2004
Subject: [mod_python] make_obcallback returned no obCallBack!
Message-ID: <4.1.20001026124617.00a90b20@usceast.cs.sc.edu>

i forgot test .py... here it is


from mod_python import apache
def handler(req):
  req.content_type = "text/plain" 
  req.send_http_header()
  req.write("Hello World!")
  return apache.OK
  
I believe i have not missed nay required info, if i did, kindly poitn out.

	-mayank     
Q.) God.. root.. What's the difference?       
A.) God is forgiving...


From arhiv at freemail.org.mk  Fri Oct 27 16:32:21 2000
From: arhiv at freemail.org.mk (Damjan)
Date: Fri Jan  9 21:52:09 2004
Subject: [mod_python] make_obcallback returned no obCallBack!
In-Reply-To: <4.1.20001026124617.00a90b20@usceast.cs.sc.edu>
Message-ID: <Pine.LNX.4.21.0010271631080.1224-100000@localhost.localdomain>

> i forgot test .py... here it is

Try renaming 'test.pu' to something else, 
there already is a test package in Python.


-- 
Damjan Georgievski		|           ?????? ???????????
Skopje, Macedonia		|           ??????, ??????????


From grisha at ispol.com  Fri Oct 27 20:48:50 2000
From: grisha at ispol.com (Gregory Trubetskoy)
Date: Fri Jan  9 21:52:09 2004
Subject: [mod_python] Replacement for libmod_python.module
In-Reply-To: <200010241416.KAA16356@os390.caveosystems.com>
Message-ID: <Pine.LNX.4.21.0010272048050.17916-100000@saturn.ispol.com>

Exactly. this will be fixed in the next release.

On Tue, 24 Oct 2000 rsalz@caveosystems.com wrote:

> I suppose the distribution's .in file could be
>     Name: python_module
>     ConfigStart
> 	LIBS="$LIBS @LIBS@"
>     ConfigEnd


From grisha at ispol.com  Fri Oct 27 20:57:35 2000
From: grisha at ispol.com (Gregory Trubetskoy)
Date: Fri Jan  9 21:52:09 2004
Subject: [mod_python] make_obcallback returned no obCallBack!
In-Reply-To: <4.1.20001026124002.00a91c60@usceast.cs.sc.edu>
Message-ID: <Pine.LNX.4.21.0010272052590.18103-100000@saturn.ispol.com>

This error is ususally caused by the mod_python package not being in the
pythonpath of the Apache process.

There is a typo in the windows installation instructions:

 Move the files in the folder lib inside the mod_python folder (C:\Program
 Files\Python\lib\mod_python-2.x\lib\mod_python ) to the C:\Program
 Files\Python\lib\mod_python-2.x folder. 
                            ^^^^

The target should really just be "C:\Program
Files\Python\lib\mod_python". This could be the source fo your problem.

--
  Gregory (Grisha) Trubetskoy
       grisha@ispol.com

On Thu, 26 Oct 2000, Mayank Tiwari wrote:

> greetings all,
> 
> I am new to python, I tried to configure mod_python and ran into problems : 
> here are the specifics:
> 
> Apache version : 1.3.12 Win32
> Python 	: 1.52
> mod_python 	:2.6.2
> 
> when ever i try to test the installation by the following python prog (
> test.py) it doesn't work and the following error is generated ( from apache
> errorlog)
> 
> [Thu Oct 26 12:34:20 2000] [error] [client xxx.xxx.xxx.xxx] python_handler:
> make_obcallback returned no obCallBack!
> 
> (* i cahnged the ipaddress to x's )
> 
> Any help would be most appreciated. 
> 
> 	-Mayank
> Q.) God.. root.. What's the difference?       
> A.) God is forgiving...
> 
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://www.modpython.org/mailman/listinfo/mod_python
> 


From aiglauer at iname.com  Sun Oct 29 13:43:21 2000
From: aiglauer at iname.com (Alexis Iglauer)
Date: Fri Jan  9 21:52:09 2004
Subject: [mod_python] Output from C functions
Message-ID: <007c01c041a5$d213dbe0$0401a8c0@iglauer.UUCP>

I am running a long calculation using a web interface, and am having the
problem that the web client times out before the results come back.  I fixed
this by first printing a valid HTTP header and then having the Python script
print a counter, which the web browser picks up and prints - and then
doesn't time out.  Works very well.

BUT - I have now recoded the central calculation routine in C (all the
control/UI stuff is still Python), and placed a printf routine in there to
output the iterations like I did in the Python, but it doesn't get to the
webbrowser.  Any ideas why?  It prints to stdout if I just run the script
from the console, but not if I call it from apache.  Is there some buffering
when calling a C routine?

I am using mod_python 2.6.2 and I wrapped the C function using SWIG.

Grateful for any pointers.

Thanks
Alexis


From jwseo at philemon.co.kr  Mon Oct 30 04:38:12 2000
From: jwseo at philemon.co.kr (Seo jun won)
Date: Fri Jan  9 21:52:09 2004
Subject: [mod_python] =?euc-kr?B?SSBkb24ndCBrbm93IG1vZF9weXRob24gc3R5bGUgcHJvZ3JhbW1pbmcu?=
Message-ID: <20001030.AAA972848292@philemon.co.kr>

Skipped content of type multipart/alternative
From grisha at ispol.com  Sun Oct 29 17:30:43 2000
From: grisha at ispol.com (Gregory Trubetskoy)
Date: Fri Jan  9 21:52:09 2004
Subject: [mod_python] Output from C functions
In-Reply-To: <007c01c041a5$d213dbe0$0401a8c0@iglauer.UUCP>
Message-ID: <Pine.LNX.4.21.0010291725420.1950-100000@saturn.ispol.com>


The cgihandler redirects the sys.stdout to the client. Anything that uses
the real (non python) stdout will just print somewhere just like you
describe.

If you want to do this in C, you should use the req.write function. Here
is what a handler written in C might look like (skipping all the regular
python module stuff. Kids don't try this at home):

#include mod_python.h

static PyObject * handler(PyObject *self, PyObject *args)
{
	PyObject *r;
	requestobject *req = NULL;

	if (!PyArg_ParseTuple(args, "O", &r))
	    return NULL;

	req = (requestobject *)PyObject_GetAttrString(r, "_req");

	ap_send_http_header(req->request_rec);
	req->header_sent = 1;

	ap_table_set(req->request_rec->headers_out, "content-type", 
		     "text/plain");

	PyObject_CallMethod((PyObject *)req, "write", "s", "Hello World!\n");
	
	return PyInt_FromLong(OK);
}


--
  Gregory (Grisha) Trubetskoy
       grisha@ispol.com

On Sun, 29 Oct 2000, Alexis Iglauer wrote:

> I am running a long calculation using a web interface, and am having the
> problem that the web client times out before the results come back.  I fixed
> this by first printing a valid HTTP header and then having the Python script
> print a counter, which the web browser picks up and prints - and then
> doesn't time out.  Works very well.
> 
> BUT - I have now recoded the central calculation routine in C (all the
> control/UI stuff is still Python), and placed a printf routine in there to
> output the iterations like I did in the Python, but it doesn't get to the
> webbrowser.  Any ideas why?  It prints to stdout if I just run the script
> from the console, but not if I call it from apache.  Is there some buffering
> when calling a C routine?
> 
> I am using mod_python 2.6.2 and I wrapped the C function using SWIG.
> 
> Grateful for any pointers.
> 
> Thanks
> Alexis
> 
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://www.modpython.org/mailman/listinfo/mod_python
> 


From aiglauer at iname.com  Mon Oct 30 00:43:49 2000
From: aiglauer at iname.com (Alexis Iglauer)
Date: Fri Jan  9 21:52:09 2004
Subject: [mod_python] Output from C functions
References: <Pine.LNX.4.21.0010291725420.1950-100000@saturn.ispol.com>
Message-ID: <013501c04202$50e497a0$0401a8c0@iglauer.UUCP>

I'm doing this from inside a cgi script, would that make the solution any
easier?  Seems like a mightily complex way to do a printf :)  I would like
to stay entirely inside C for my loop, for speed purposes.  Can I maybe pass
the file handle of stdout to my function and then write to that?

aei
----- Original Message -----
From: "Gregory Trubetskoy" <grisha@ispol.com>
To: "Alexis Iglauer" <aiglauer@iname.com>
Cc: <mod_python@modpython.org>
Sent: Sunday, October 29, 2000 11:30 PM
Subject: Re: [mod_python] Output from C functions


>
>
> The cgihandler redirects the sys.stdout to the client. Anything that uses
> the real (non python) stdout will just print somewhere just like you
> describe.
>
> If you want to do this in C, you should use the req.write function. Here
> is what a handler written in C might look like (skipping all the regular
> python module stuff. Kids don't try this at home):
>
> #include mod_python.h
>
> static PyObject * handler(PyObject *self, PyObject *args)
> {
> PyObject *r;
> requestobject *req = NULL;
>
> if (!PyArg_ParseTuple(args, "O", &r))
>     return NULL;
>
> req = (requestobject *)PyObject_GetAttrString(r, "_req");
>
> ap_send_http_header(req->request_rec);
> req->header_sent = 1;
>
> ap_table_set(req->request_rec->headers_out, "content-type",
>      "text/plain");
>
> PyObject_CallMethod((PyObject *)req, "write", "s", "Hello World!\n");
>
> return PyInt_FromLong(OK);
> }
>
>
> --
>   Gregory (Grisha) Trubetskoy
>        grisha@ispol.com
>
> On Sun, 29 Oct 2000, Alexis Iglauer wrote:
>
> > I am running a long calculation using a web interface, and am having the
> > problem that the web client times out before the results come back.  I
fixed
> > this by first printing a valid HTTP header and then having the Python
script
> > print a counter, which the web browser picks up and prints - and then
> > doesn't time out.  Works very well.
> >
> > BUT - I have now recoded the central calculation routine in C (all the
> > control/UI stuff is still Python), and placed a printf routine in there
to
> > output the iterations like I did in the Python, but it doesn't get to
the
> > webbrowser.  Any ideas why?  It prints to stdout if I just run the
script
> > from the console, but not if I call it from apache.  Is there some
buffering
> > when calling a C routine?
> >
> > I am using mod_python 2.6.2 and I wrapped the C function using SWIG.
> >
> > Grateful for any pointers.
> >
> > Thanks
> > Alexis
> >
> > _______________________________________________
> > Mod_python mailing list
> > Mod_python@modpython.org
> > http://www.modpython.org/mailman/listinfo/mod_python
> >
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://www.modpython.org/mailman/listinfo/mod_python


From grisha at ispol.com  Sun Oct 29 21:12:49 2000
From: grisha at ispol.com (Gregory Trubetskoy)
Date: Fri Jan  9 21:52:09 2004
Subject: [mod_python] Output from C functions
In-Reply-To: <013501c04202$50e497a0$0401a8c0@iglauer.UUCP>
Message-ID: <Pine.LNX.4.21.0010292046530.2437-100000@saturn.ispol.com>

On Mon, 30 Oct 2000, Alexis Iglauer wrote:

> I'm doing this from inside a cgi script, would that make the solution any
> easier?  Seems like a mightily complex way to do a printf :)  

Actually, the CGI "printf" results into something that is indeed fairly
complex - there is at least three layers of networking protocols
underneath it.

> I would like to stay entirely inside C for my loop, for speed
> purposes.  Can I maybe pass the file handle of stdout to my function
> and then write to that?

Well, not really. That stdout is not a C file handle, nor does it contain
a reference to one. It's a Python object that implements the Python file
interface, that's all.

I think your problem is thinking in terms of CGI. If you are after speed,
then CGI is hardly the answer anyway. If I were you, I would start getting
confortable with the idea of abandoning the cute CGI printf way of
outputting things. ;-)

HTH -

Grisha



From aiglauer at yahoo.com  Mon Oct 30 00:40:46 2000
From: aiglauer at yahoo.com (Alexis Iglauer)
Date: Fri Jan  9 21:52:09 2004
Subject: [mod_python] Output from C functions
Message-ID: <20001030084046.21028.qmail@web2202.mail.yahoo.com>

> I think your problem is thinking in terms of CGI. If
> you are after speed,
> then CGI is hardly the answer anyway. If I were you,
> I would start getting
> confortable with the idea of abandoning the cute CGI
> printf way of
> outputting things. ;-)

I know, I know - and I am busy writing another app by
implementing my own handler, but after reading the
above sentence I am now no longer sure that I am doing
the right thing there.  I am essentially creating my
webpage dynamically by doing a whole bunch of
req.write('<Stick HTML in here>') calls.  Is this
efficient, and if not, what is?

My calculation app will be rewritten as a handler
sometime soon, but I think I will still have the same
problem - how do I output to the web client (or find
another way to keep the web client's attention) from
inside my speed-optimised C loop?

> 
> HTH -

Grisha,  if MS help were 1% as effective as yours,
Linux wouldn't be where it is today.

Regards
Alexis

> 
> Grisha




__________________________________________________
Do You Yahoo!?
Yahoo! Messenger - Talk while you surf!  It's FREE.
http://im.yahoo.com/

From grisha at ispol.com  Mon Oct 30 09:56:54 2000
From: grisha at ispol.com (Gregory Trubetskoy)
Date: Fri Jan  9 21:52:09 2004
Subject: [mod_python] Output from C functions
In-Reply-To: <20001030084046.21028.qmail@web2202.mail.yahoo.com>
Message-ID: <Pine.LNX.4.21.0010300955010.4713-100000@saturn.ispol.com>

On Mon, 30 Oct 2000, Alexis Iglauer wrote:

> > I think your problem is thinking in terms of CGI. If
> > you are after speed,
> > then CGI is hardly the answer anyway. If I were you,
> > I would start getting
> > confortable with the idea of abandoning the cute CGI
> > printf way of
> > outputting things. ;-)
> 
> I know, I know - and I am busy writing another app by
> implementing my own handler, but after reading the
> above sentence I am now no longer sure that I am doing
> the right thing there.  I am essentially creating my
> webpage dynamically by doing a whole bunch of
> req.write('<Stick HTML in here>') calls.  Is this
> efficient, and if not, what is?

Yes, very efficient.

> My calculation app will be rewritten as a handler
> sometime soon, but I think I will still have the same
> problem - how do I output to the web client (or find
> another way to keep the web client's attention) from
> inside my speed-optimised C loop?

You use the same req.write function except you call it from C (see the
code I sent in previous e-mail), or you can study the req.write() code and
use the Apache calls directly.

Grisha


From jwseo at ns.philemon.co.kr  Mon Oct 30 23:24:02 2000
From: jwseo at ns.philemon.co.kr (Seo jun won)
Date: Fri Jan  9 21:52:10 2004
Subject: [mod_python] I don't know mod_python style programming.
Message-ID: <Pine.LNX.4.21.0010302321490.27003-100000@ns.philemon.co.kr>

I'm a mod_python beginner. 
Supposing that I'll make web bbsboard using mod_python. 
Maybe, general Web bbsboard is consist of post, delete, reply.. etc
function. 
Following my handler example. 
-------------------- 
def handler(req): 
  if req.uri == 'post.py': 
    import post 
    mypost = post.postclass 
    mypost.post(some data) 
            . 
            . 
  elif req.uri == 'delete.py': 
    import delete 
    mydelete = delete.deleteclass 
            . 
            . 
            . 
  return apache.OK 
------------------- 
expatiation) Each post.py, delete.py are my definition class module. 

Is my handler's source mod_python style? 

Addition, 
If It's be right, my dbconnection clause('import mysqldb') that where
locate in? 

Thanks 
I'm using




From jjp at connix.com  Tue Oct 31 11:21:11 2000
From: jjp at connix.com (John Posner)
Date: Fri Jan  9 21:52:10 2004
Subject: [mod_python] need Windows version of mod_python compiled for extended API
Message-ID: <003101c04356$96fcc410$6e64fea9@jake>

On Windows NT 4.0 SP6, I'm trying to use mod_python.dll according to the
standard installation instructions. When I start Apache, I get this console
message:


  Loaded DSO modules/mod_python uses plain Apache 1.3 API,
  this module might crash under EAPI! (please recompile it with -DEAPI)

  Apache/1.3.12 (Win32) mod_python/2.6 Python/1.5.2 mod_perl/1.23 running...

I don't have an Apache development environment set up, so it would be great
to get a version of mod_python.dll compiled with -DEAPI, as suggested in the
message.

Tx,
John

--
John Posner, Editor           jjp@oreilly.com
O'Reilly & Associates         860-663-3147


From grisha at ispol.com  Mon Oct  2 23:26:40 2000
From: grisha at ispol.com (Gregory Trubetskoy)
Date: Fri Jan  9 21:58:39 2004
Subject: [mod_python] retaining state between handlers
Message-ID: <Pine.LNX.4.21.0010022321510.12796-100000@saturn.ispol.com>

For those of you handy with CVS - I've checked in the new version, where
the request object is a real Python object (as opposed to a built-in),
which you can modify.

This allows passing information between handlers by simply doing something
like:

req.myvariable = "something"

in one handler and then using that value in another. 

Note that different subinterpreters will have different requests objects,
even though the underlying built-in (now req._req) is still the same.

--
  Gregory (Grisha) Trubetskoy
       grisha@ispol.com


From bmueller at creotech.com  Tue Oct  3 03:18:07 2000
From: bmueller at creotech.com (Brian Mueller)
Date: Fri Jan  9 21:58:39 2004
Subject: [mod_python] Apache 1.3.12 + mod_python + ??? = segfault
Message-ID: <003101c02d23$3a1ba750$0100a8c0@darkstar>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

Hello,

Recently I installed mod_python on my Apache 1.3.12 setup:

- -----

[root@shiva speedy]# httpd -l
Compiled-in modules:
  http_core.c
  mod_so.c
suexec: enabled; valid wrapper /usr/sbin/suexec
[root@shiva speedy]# httpd -v
Server version: Apache-AdvancedExtranetServer/1.3.12
(NetRevolution/Linux-Mandrake)
Server build: May 8 2000 04:59:44
Performance Tuned by SGI http://www.sgi.com/

- -----

Once I installed it I placed the LoadModule and AddModule at the top of
their respective sections within the httpd.conf file.  I reloaded apache
and checked the error log and the output was as follows:

[Sun Oct  1 04:02:02 2000] [notice] Apache-AdvancedExtranetServer/1.3.12 
(NetRevolution/Linux-Mandrake) mod_ssl/2.6.4 OpenSSL/0.9.5a mod_perl/1.22
mod_python/2.4.1 Python/1.5.2 configured -- resuming normal operations
[Sun Oct  1 04:02:02 2000] [notice] suEXEC mechanism enabled (wrapper:
/usr/sbin/suexec)

- -----


all was well, then I installed the following items.

CURL
PSPELL
mhash 0.8.2
mcrypt 2.5.4
libmcrypt 2.4.4
mcal
php4 4.0.2 (with the above supported + mySQL and PostrgreSQL support)

Once I did this I added the php4 stuff to the httpd.conf file and attempted
to restart.  Nothing happened, httpd -X shows a segmentation fault (core
dumped).  I removed php4 from my httpd.conf file and tried again with the
same results.  I readded php4 to my httpd.conf file and commented out the
mod_python references and now it works, though without mod_python.  

I am hoping that someone can shed some light on this as it appears that
something I installed above has caused mod_python to cease working.  Here
is my most recent error_log entry from after I removed mod_python

- -----

[Tue Oct  3 02:36:38 2000] [notice] Apache-AdvancedExtranetServer/1.3.12 
(NetRevolution/Linux-Mandrake) mod_ssl/2.6.4 OpenSSL/0.9.5a mod_perl/1.22
PHP/4.0.2 configured -- resuming normal operations
[Tue Oct  3 02:36:38 2000] [notice] suEXEC mechanism enabled (wrapper:
/usr/sbin/suexec)

- -----

and here is relavent sections from my httpd.conf file.

- -----

##
## httpd.conf -- Apache HTTP server configuration file
##
# This is the main server configuration file. See URL
http://www.apache.org/
# for instructions.
# Do NOT simply read the instructions in here without understanding
# what they do, if you are unsure consult the online docs. You have been
# warned.  
# Originally by Rob McCool
#---------------------- Use *ONLY* httpd.conf ---------------------------
#
# With all new apache versions, use of access.conf and srm.conf are
# deprecated. We only use httpd.conf.
#
# These 2 directives are needed by some modules, for example FrontPage

#ResourceConfig /dev/null
#AccessConfig /dev/null

#---------------- Dynamic Shared Object (DSO) Support ---------------------
#
# To be able to use the functionality of a module which was built as a DSO
you
# have to place corresponding `LoadModule' lines at this location so the
# directives contained in it are actually available _before_ they are used.
# Please read the file README.DSO in the Apache 1.3 distribution for more
# details about the DSO mechanism and run `httpd -l' for the list of
already
# built-in (statically linked and thus always available) modules in your
httpd
# binary.
#
# Example:
# LoadModule foo_module libexec/mod_foo.so
#
# Documentation for modules is in "/home/httpd/manual/mod" in HTML format.

#LoadModule mmap_static_module modules/mod_mmap_static.so
#LoadModule python_module        modules/mod_python.so
LoadModule env_module         modules/mod_env.so
LoadModule config_log_module  modules/mod_log_config.so
LoadModule agent_log_module   modules/mod_log_agent.so
LoadModule referer_log_module modules/mod_log_referer.so
#LoadModule mime_magic_module  modules/mod_mime_magic.so
LoadModule mime_module        modules/mod_mime.so
LoadModule negotiation_module modules/mod_negotiation.so
LoadModule status_module      modules/mod_status.so
LoadModule info_module        modules/mod_info.so

### You have the choice between mod_include and mod_include_xssi
### Choose only one! mod_include is more secure, while 
### the xssi module has a lot more features
LoadModule includes_module    modules/mod_include.so
#LoadModule includes_module    modules/mod_include_xssi.so

LoadModule autoindex_module   modules/mod_autoindex.so
LoadModule dir_module         modules/mod_dir.so
LoadModule cgi_module         modules/mod_cgi.so
LoadModule asis_module        modules/mod_asis.so
LoadModule imap_module        modules/mod_imap.so
LoadModule action_module      modules/mod_actions.so
#LoadModule speling_module     modules/mod_speling.so
LoadModule userdir_module     modules/mod_userdir.so
LoadModule proxy_module       modules/libproxy.so
LoadModule alias_module       modules/mod_alias.so
LoadModule rewrite_module     modules/mod_rewrite.so
LoadModule access_module      modules/mod_access.so
LoadModule auth_module        modules/mod_auth.so
LoadModule anon_auth_module   modules/mod_auth_anon.so
#LoadModule dbm_auth_module    modules/mod_auth_dbm.so
#LoadModule db_auth_module     modules/mod_auth_db.so
LoadModule digest_module      modules/mod_digest.so
#LoadModule cern_meta_module   modules/mod_cern_meta.so
LoadModule expires_module     modules/mod_expires.so
LoadModule headers_module     modules/mod_headers.so
LoadModule usertrack_module   modules/mod_usertrack.so
#LoadModule example_module     modules/mod_example.so
#LoadModule unique_id_module   modules/mod_unique_id.so
LoadModule setenvif_module    modules/mod_setenvif.so

#  Reconstruction of the complete module list from all available modules
#  (static and shared ones) to achieve correct module execution order.
#  [WHENEVER YOU CHANGE THE LOADMODULE SECTION ABOVE UPDATE THIS, TOO]
ClearModuleList
#AddModule mod_mmap_static.c
#AddModule mod_python.c
AddModule mod_env.c
AddModule mod_log_config.c
AddModule mod_log_agent.c
AddModule mod_log_referer.c
#AddModule mod_mime_magic.c
AddModule mod_mime.c
AddModule mod_negotiation.c
AddModule mod_status.c
AddModule mod_info.c
AddModule mod_include.c
#AdModule mod_include_xssi.c
AddModule mod_autoindex.c
AddModule mod_dir.c
AddModule mod_cgi.c
AddModule mod_asis.c
AddModule mod_imap.c
AddModule mod_actions.c
#AddModule mod_speling.c
AddModule mod_userdir.c
AddModule mod_proxy.c
AddModule mod_alias.c
AddModule mod_rewrite.c
AddModule mod_access.c
AddModule mod_auth.c
AddModule mod_auth_anon.c
#AddModule mod_auth_dbm.c
#AddModule mod_auth_db.c
AddModule mod_digest.c
#AddModule mod_cern_meta.c
AddModule mod_expires.c
AddModule mod_headers.c
AddModule mod_usertrack.c
#AddModule mod_example.c
#AddModule mod_unique_id.c
AddModule mod_so.c
AddModule mod_setenvif.c




####################################
# Add-on Modules and Virtual Hosts #
####################################
#
# Each time we install an add-on module , the post-install script of the
RPM
# adds an "Include" line to read the configuration for that module. When we
# remove the module, we keep the Include line, but we zero out the config 
# file so Apache doesn't complain.
#
# We also put virtual hosts "Includes" in this section. This will be used
by
# administration scripts. Instead of parsing all httpd.conf to modify a
# vhost, we just include the config file. Each type of vhosting has its own
# config file.
#

Include conf/vhosts/Vhosts.conf

Include conf/addon-modules/mod_php4.conf
Include conf/addon-modules/mod_perl.conf
Include conf/ssl/mod_ssl.conf
Include conf/ssl/ssl.default-vhost.conf

- -----

This is in it's currently usable format with mod_python commented out.

Any help would be most appreciated as we had expected to have this new
server online by the end of October.

Thank you,

Brian Mueller


==============================================================
Brian R. Mueller          President and CEO
  CreoTech                "We are the future"

WEB: www.creotech.com     EMAIL: bmueller@creotech.com
PHONE: 513.722.8645       TOLL FREE: 800-972-5290
MOBILE: 513.258.9614      FAX: 419.735.7405
ICQ: 63821393             ICQ Pager: 63821393@pager.icq.com
WIRELESS WEB PAGING: 5132589614@messaging.sprintpcs.com

PGP Key available at http://www.creotech.com/pgp/bmueller.asc
fingerprint:
9AEE DE48 5D4A 1814 996A
5EAA 315B FF76 30CC 159B
ID: 0xF19B87E8

Network Development & Design,
Custom Programming for the desktop and the web
Traditional Print Media, CD-ROM Prototyping - more
==============================================================

-----BEGIN PGP SIGNATURE-----
Version: 6.5.1ckt http://irfaiad.virtualave.net/
Comment: KeyID: 0x315BFF7630CC159B
Comment: Fingerprint: 9AEE DE48 5D4A 1814 996A  5EAA 315B FF76 30CC 159B

iQA/AwUBOdmyXjFb/3YwzBWbEQLfJACgpiQHWdEVTrBztyvZMe/QQhuEU4QAnRcl
qaLUz5eMBrawOVx7jXhiuLWL
=ljD8
-----END PGP SIGNATURE-----



From jeff.schenk at continuumnetworks.com  Wed Oct  4 10:13:59 2000
From: jeff.schenk at continuumnetworks.com (Jeff Schenk)
Date: Fri Jan  9 21:58:39 2004
Subject: [mod_python] Issue with mod_python Fatal Python error
Message-ID: <NEBBKNHPCLJIOJCKGBCIGEIHCCAA.Jeff.Schenk@continuumnetworks.com>

I have built mod_python and configured and made apache, the apache server
comes up fine, however I see several
Fatal Python error: PyThreadState_Get: no current thread

Messages in my error_log file.  Also, when I stop apache it cores.

I am running apache 1.3.12, mod_ssl 2.6.5.1.3.12, mod_perl 1.24 and
mod_python 2.5
I performed a static build.

Please advise, if anyone has suggestions or has run into this problem.

Thanks,
Jeff Schenk
Continuum Networks
Chief Architect of Software Development
805-927-3886

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mailman.modpython.org/pipermail/mod_python/attachments/20001004/e1a5815e/attachment-0002.htm
From miguel at yorku.ca  Wed Oct  4 14:19:15 2000
From: miguel at yorku.ca (Miguel Marques)
Date: Fri Jan  9 21:58:39 2004
Subject: [mod_python] Issue with mod_python Fatal Python error
In-Reply-To: <NEBBKNHPCLJIOJCKGBCIGEIHCCAA.Jeff.Schenk@continuumnetworks.com>
References: <NEBBKNHPCLJIOJCKGBCIGEIHCCAA.Jeff.Schenk@continuumnetworks.com>
Message-ID: <20001004141915N.miguel@yorku.ca>

On Wed, 4 Oct 2000 10:13:59 -0700, "Jeff Schenk" <jeff.schenk@continuumnetworks.com> wrote:
> I have built mod_python and configured and made apache, the apache server
> comes up fine, however I see several
> Fatal Python error: PyThreadState_Get: no current thread
> 
> Messages in my error_log file.  Also, when I stop apache it cores.
> 
> I am running apache 1.3.12, mod_ssl 2.6.5.1.3.12, mod_perl 1.24 and
> mod_python 2.5
> I performed a static build.
> 
> Please advise, if anyone has suggestions or has run into this problem.

I have no suggestion but I'm also experiencing this problem.
Occasionally I see all of apache's children core dump after those
messages.

I've seen the same problem (error message) mentioned in relation to an
earlier version of wxPython.

I'm running SunOS 5.7 with Apache/1.3.12, mod_python/2.5 and
Python/1.5.2 (happens with python 1.6 too).  mod_python is compiled as
a DSO.
A friend of mine mentioned that he has seen the same messages under
Debian as well but I'm not sure of his versions.

							Miguel

C. Miguel Marques, York University, Computing & Network Services
e-mail: miguel@yorku.ca, voice: (416)736-2100x22684, fax: (416)736-5830



From grisha at ispol.com  Wed Oct  4 17:24:50 2000
From: grisha at ispol.com (Gregory Trubetskoy)
Date: Fri Jan  9 21:58:39 2004
Subject: [mod_python] Issue with mod_python Fatal Python error
In-Reply-To: <20001004141915N.miguel@yorku.ca>
Message-ID: <Pine.LNX.4.21.0010041724110.14807-100000@saturn.ispol.com>

Interesting. Is Python built with threads?

--
  Gregory (Grisha) Trubetskoy
       grisha@ispol.com

On Wed, 4 Oct 2000, Miguel Marques wrote:

> On Wed, 4 Oct 2000 10:13:59 -0700, "Jeff Schenk" <jeff.schenk@continuumnetworks.com> wrote:
> > I have built mod_python and configured and made apache, the apache server
> > comes up fine, however I see several
> > Fatal Python error: PyThreadState_Get: no current thread
> > 
> > Messages in my error_log file.  Also, when I stop apache it cores.
> > 
> > I am running apache 1.3.12, mod_ssl 2.6.5.1.3.12, mod_perl 1.24 and
> > mod_python 2.5
> > I performed a static build.
> > 
> > Please advise, if anyone has suggestions or has run into this problem.
> 
> I have no suggestion but I'm also experiencing this problem.
> Occasionally I see all of apache's children core dump after those
> messages.
> 
> I've seen the same problem (error message) mentioned in relation to an
> earlier version of wxPython.
> 
> I'm running SunOS 5.7 with Apache/1.3.12, mod_python/2.5 and
> Python/1.5.2 (happens with python 1.6 too).  mod_python is compiled as
> a DSO.
> A friend of mine mentioned that he has seen the same messages under
> Debian as well but I'm not sure of his versions.
> 
> 							Miguel
> 
> C. Miguel Marques, York University, Computing & Network Services
> e-mail: miguel@yorku.ca, voice: (416)736-2100x22684, fax: (416)736-5830
> 
> 
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://www.modpython.org/mailman/listinfo/mod_python
> 


From jeff.schenk at continuumnetworks.com  Wed Oct  4 14:44:59 2000
From: jeff.schenk at continuumnetworks.com (Jeff Schenk)
Date: Fri Jan  9 21:58:39 2004
Subject: [mod_python] Issue with mod_python Fatal Python error
In-Reply-To: <Pine.LNX.4.21.0010041724110.14807-100000@saturn.ispol.com>
Message-ID: <NEBBKNHPCLJIOJCKGBCIOEIICCAA.Jeff.Schenk@continuumnetworks.com>

Yes, Python 1.5.2 on LINUX was built with threads.  I noticed the Makefile
that was configure to include the mod_python has the correct python libs
and -lpthread specified.

Jeff Schenk
Continuum Networks
Chief Architect of Software Development
805-927-3886


-----Original Message-----
From: mod_python-admin@modpython.org
[mailto:mod_python-admin@modpython.org]On Behalf Of Gregory Trubetskoy
Sent: Wednesday, October 04, 2000 2:25 PM
To: Miguel Marques
Cc: mod_python@modpython.org
Subject: Re: [mod_python] Issue with mod_python Fatal Python error



Interesting. Is Python built with threads?

--
  Gregory (Grisha) Trubetskoy
       grisha@ispol.com

On Wed, 4 Oct 2000, Miguel Marques wrote:

> On Wed, 4 Oct 2000 10:13:59 -0700, "Jeff Schenk"
<jeff.schenk@continuumnetworks.com> wrote:
> > I have built mod_python and configured and made apache, the apache
server
> > comes up fine, however I see several
> > Fatal Python error: PyThreadState_Get: no current thread
> >
> > Messages in my error_log file.  Also, when I stop apache it cores.
> >
> > I am running apache 1.3.12, mod_ssl 2.6.5.1.3.12, mod_perl 1.24 and
> > mod_python 2.5
> > I performed a static build.
> >
> > Please advise, if anyone has suggestions or has run into this problem.
>
> I have no suggestion but I'm also experiencing this problem.
> Occasionally I see all of apache's children core dump after those
> messages.
>
> I've seen the same problem (error message) mentioned in relation to an
> earlier version of wxPython.
>
> I'm running SunOS 5.7 with Apache/1.3.12, mod_python/2.5 and
> Python/1.5.2 (happens with python 1.6 too).  mod_python is compiled as
> a DSO.
> A friend of mine mentioned that he has seen the same messages under
> Debian as well but I'm not sure of his versions.
>
> 							Miguel
>
> C. Miguel Marques, York University, Computing & Network Services
> e-mail: miguel@yorku.ca, voice: (416)736-2100x22684, fax: (416)736-5830
>
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://www.modpython.org/mailman/listinfo/mod_python
>

_______________________________________________
Mod_python mailing list
Mod_python@modpython.org
http://www.modpython.org/mailman/listinfo/mod_python


From grisha at ispol.com  Wed Oct  4 17:59:35 2000
From: grisha at ispol.com (Gregory Trubetskoy)
Date: Fri Jan  9 21:58:39 2004
Subject: [mod_python] Issue with mod_python Fatal Python error
In-Reply-To: <NEBBKNHPCLJIOJCKGBCIOEIICCAA.Jeff.Schenk@continuumnetworks.com>
Message-ID: <Pine.LNX.4.21.0010041756500.14807-100000@saturn.ispol.com>

That may be the problem. I think Apache is built without threads by
default. I've got a redhat box now and I'll see if I can replicate these
problems, but in the meantime, I would try compiling a fresh copy of
Python from sources (it should build without threads by default) and
linking against that for mod_python. (I describe this procedure for
FreeBSD in the install section of the docs)

--
  Gregory (Grisha) Trubetskoy
       grisha@ispol.com

On Wed, 4 Oct 2000, Jeff Schenk wrote:

> Yes, Python 1.5.2 on LINUX was built with threads.  I noticed the Makefile
> that was configure to include the mod_python has the correct python libs
> and -lpthread specified.
> 
> Jeff Schenk
> Continuum Networks
> Chief Architect of Software Development
> 805-927-3886
> 
> 
> -----Original Message-----
> From: mod_python-admin@modpython.org
> [mailto:mod_python-admin@modpython.org]On Behalf Of Gregory Trubetskoy
> Sent: Wednesday, October 04, 2000 2:25 PM
> To: Miguel Marques
> Cc: mod_python@modpython.org
> Subject: Re: [mod_python] Issue with mod_python Fatal Python error
> 
> 
> 
> Interesting. Is Python built with threads?
> 
> --
>   Gregory (Grisha) Trubetskoy
>        grisha@ispol.com
> 
> On Wed, 4 Oct 2000, Miguel Marques wrote:
> 
> > On Wed, 4 Oct 2000 10:13:59 -0700, "Jeff Schenk"
> <jeff.schenk@continuumnetworks.com> wrote:
> > > I have built mod_python and configured and made apache, the apache
> server
> > > comes up fine, however I see several
> > > Fatal Python error: PyThreadState_Get: no current thread
> > >
> > > Messages in my error_log file.  Also, when I stop apache it cores.
> > >
> > > I am running apache 1.3.12, mod_ssl 2.6.5.1.3.12, mod_perl 1.24 and
> > > mod_python 2.5
> > > I performed a static build.
> > >
> > > Please advise, if anyone has suggestions or has run into this problem.
> >
> > I have no suggestion but I'm also experiencing this problem.
> > Occasionally I see all of apache's children core dump after those
> > messages.
> >
> > I've seen the same problem (error message) mentioned in relation to an
> > earlier version of wxPython.
> >
> > I'm running SunOS 5.7 with Apache/1.3.12, mod_python/2.5 and
> > Python/1.5.2 (happens with python 1.6 too).  mod_python is compiled as
> > a DSO.
> > A friend of mine mentioned that he has seen the same messages under
> > Debian as well but I'm not sure of his versions.
> >
> > 							Miguel
> >
> > C. Miguel Marques, York University, Computing & Network Services
> > e-mail: miguel@yorku.ca, voice: (416)736-2100x22684, fax: (416)736-5830
> >
> >
> > _______________________________________________
> > Mod_python mailing list
> > Mod_python@modpython.org
> > http://www.modpython.org/mailman/listinfo/mod_python
> >
> 
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://www.modpython.org/mailman/listinfo/mod_python
> 


From miguel at yorku.ca  Thu Oct  5 11:13:09 2000
From: miguel at yorku.ca (Miguel Marques)
Date: Fri Jan  9 21:58:39 2004
Subject: [mod_python] Issue with mod_python Fatal Python error
In-Reply-To: <Pine.LNX.4.21.0010041724110.14807-100000@saturn.ispol.com>
References: <20001004141915N.miguel@yorku.ca>
	<Pine.LNX.4.21.0010041724110.14807-100000@saturn.ispol.com>
Message-ID: <20001005111309S.miguel@yorku.ca>

On Wed, 4 Oct 2000 17:24:50 -0400 (EDT), Gregory Trubetskoy <grisha@ispol.com> wrote:
> 
> Interesting. Is Python built with threads?
> 
Yes.  Without threads that problem doesn't occur.
Unfortunately I then encounter a intermittent problem with restricted
mode and DocumentTemplate which I use in my application which is even
worse.

							Miguel

C. Miguel Marques, York University, Computing & Network Services
e-mail: miguel@yorku.ca, voice: (416)736-2100x22684, fax: (416)736-5830


From benno at sesgroup.net  Fri Oct  6 19:56:41 2000
From: benno at sesgroup.net (Ben Leslie)
Date: Fri Jan  9 21:58:39 2004
Subject: [mod_python] Issue with mod_python Fatal Python error
In-Reply-To: <Pine.LNX.4.21.0010041756500.14807-100000@saturn.ispol.com>; from grisha@ispol.com on Wed, Oct 04, 2000 at 05:59:35PM -0400
References: <NEBBKNHPCLJIOJCKGBCIOEIICCAA.Jeff.Schenk@continuumnetworks.com> <Pine.LNX.4.21.0010041756500.14807-100000@saturn.ispol.com>
Message-ID: <20001006195641.I1892@bob.sesgroup.net>

Hi Gregory!

On Wed, 04 Oct 2000, Gregory Trubetskoy wrote:

> 
> That may be the problem. I think Apache is built without threads by
> default. I've got a redhat box now and I'll see if I can replicate these
> problems, but in the meantime, I would try compiling a fresh copy of
> Python from sources (it should build without threads by default) and
> linking against that for mod_python. (I describe this procedure for
> FreeBSD in the install section of the docs)
> 

This is strange. I see the same problem in error.log, however it
only seems to occur when apache is stopped. I compiled as a DSO
an mod_python works wonderfully (and so damn fast! (well after coming
from Zope it should be hard ;)). I have been developing on it without
a problem.

Since everything was working i assumed that this was just "normal" but
if its not then i thought i better let you know that it also occurs on
Debian Potato, Python1.5.2, compiled as a DSO.

Cheers,

Benno

From benno at sesgroup.net  Mon Oct  9 11:15:46 2000
From: benno at sesgroup.net (Ben Leslie)
Date: Fri Jan  9 21:58:39 2004
Subject: [mod_python] Apache Segfault
In-Reply-To: <39D457F0.8DF53FC1@LivingLogic.de>; from Matthias.Bauer@livinglogic.de on Fri, Sep 29, 2000 at 10:50:56AM +0200
References: <39D457F0.8DF53FC1@LivingLogic.de>
Message-ID: <20001009111546.A18792@bob.sesgroup.net>

Moin Matthias!

Matthias Bauer schrieb am Freitag, den 29. September 2000:

> Hi everybody,
> 
> I'm having some severe trouble installing mod_python 2.5 with the
> following environment:
> 	SuSE Linux 7.0
> 	Python 2.0b1 with threads
> 	Apache 1.3.12 
> 
> I compiled mod_python.so with the following command:
> 


<snip a bunch of details about apache segfaulting>

I think I _may_ know what the problem is.

I have installed mod_python on my laptop with no problems, very easy
(once I actually read the instructions ;), anyway needed this on one
of the servers, so I asked my sysadmin to install. 

This turned out to be harder than I would have expected, we started 
with apache-ssl and couldn't get the thing working, kept segfaulting.

I said maybe it is a conflict with ssl extensions so we uninstalled 
acpache-ssl and installed apache standard, tried same thing happened.

After much swearing and cursing it turns out that the position of 
mod_python in the LoadModule section is very important.

By placing mod_python as the first Module imported things are good and
work fine, having mod_python as the last module to load causes segfault.

</boring story>

So the moral is:

make sure you load mod_python before other modules.

Gregory: Is this an expected problem? Should I patch the docs? 
(I don't think I have the time or ability to patch the code ;)

Cheers,

Benno

From aiglauer at yahoo.com  Mon Oct  9 01:59:20 2000
From: aiglauer at yahoo.com (Alexis Iglauer)
Date: Fri Jan  9 21:58:39 2004
Subject: [mod_python] Apache Segfault
Message-ID: <20001009085920.28910.qmail@web2204.mail.yahoo.com>

This is (at least used to be) in the docs/FAQ/archives
somewhere - the mod_python module must be the first
module loaded for some unknown and untraceable reason.
 This problem and its solution seems to be appearing
on the list often, perhaps the answer to it should be
highlighted in the docs.

Ciao
Alexis

--- Ben Leslie <benno@sesgroup.net> wrote:
> Moin Matthias!
> 
> Matthias Bauer schrieb am Freitag, den 29. September
> 2000:
> 
> > Hi everybody,
> > 
> > I'm having some severe trouble installing
> mod_python 2.5 with the
> > following environment:
> > 	SuSE Linux 7.0
> > 	Python 2.0b1 with threads
> > 	Apache 1.3.12 
> > 
> > I compiled mod_python.so with the following
> command:
> > 
> 
> 
> <snip a bunch of details about apache segfaulting>
> 
> I think I _may_ know what the problem is.
> 
> I have installed mod_python on my laptop with no
> problems, very easy
> (once I actually read the instructions ;), anyway
> needed this on one
> of the servers, so I asked my sysadmin to install. 
> 
> This turned out to be harder than I would have
> expected, we started 
> with apache-ssl and couldn't get the thing working,
> kept segfaulting.
> 
> I said maybe it is a conflict with ssl extensions so
> we uninstalled 
> acpache-ssl and installed apache standard, tried
> same thing happened.
> 
> After much swearing and cursing it turns out that
> the position of 
> mod_python in the LoadModule section is very
> important.
> 
> By placing mod_python as the first Module imported
> things are good and
> work fine, having mod_python as the last module to
> load causes segfault.
> 
> </boring story>
> 
> So the moral is:
> 
> make sure you load mod_python before other modules.
> 
> Gregory: Is this an expected problem? Should I patch
> the docs? 
> (I don't think I have the time or ability to patch
> the code ;)
> 
> Cheers,
> 
> Benno
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://www.modpython.org/mailman/listinfo/mod_python


__________________________________________________
Do You Yahoo!?
Yahoo! Photos - 35mm Quality Prints, Now Get 15 Free!
http://photos.yahoo.com/

From Matthias.Bauer at LivingLogic.de  Mon Oct  9 11:35:41 2000
From: Matthias.Bauer at LivingLogic.de (Matthias Bauer)
Date: Fri Jan  9 21:58:39 2004
Subject: [mod_python] Apache Segfault
References: <20001009085920.28910.qmail@web2204.mail.yahoo.com>
Message-ID: <39E1916D.7F1BD3A@LivingLogic.de>

Alexis, Benno,

thanks for your input.

I already read about this proposal in the FAQ and tried it out.
Unfortunately, this did not help at all :-((

I also sent email to Erno Kuusela (who added the relevant FAQ entry) and
asked if he could give some additional hints. He did not have any
additional ideas either. But from his answer I learned, that the
segfault he encountered, only showed up, when a request was served. My
problem seems to be different: The segfault already occurs during
startup of the apache httpd daemon.

Benno,
the problems you described when trying to install mod_python on one of
your servers: Did the segfault happen when a request to mod_python came
in or already during startup of the httpd daemon?

--- Matthias



Alexis Iglauer wrote:
> 
> This is (at least used to be) in the docs/FAQ/archives
> somewhere - the mod_python module must be the first
> module loaded for some unknown and untraceable reason.
>  This problem and its solution seems to be appearing
> on the list often, perhaps the answer to it should be
> highlighted in the docs.
> 
> Ciao
> Alexis
-------------- next part --------------
A non-text attachment was scrubbed...
Name: smime.p7s
Type: application/x-pkcs7-signature
Size: 2054 bytes
Desc: S/MIME Cryptographic Signature
Url : http://mailman.modpython.org/pipermail/mod_python/attachments/20001009/82656c2f/smime-0002.bin
From helink at sandia.gov  Mon Oct  9 13:16:11 2000
From: helink at sandia.gov (Hamilton Link)
Date: Fri Jan  9 21:58:39 2004
Subject: [mod_python] mod_python 2.5 error on fresh install
Message-ID: <39E2197B.75988619@sandia.gov>

I sent this to comp.lang.python as well... I'd go the RPM route or the
DSO route but if someone can point me in the right direction I'd just as
soon use the latest version of mod_python (i.e. 2.5). Is there some
problem with the installation file in the (rather limited) online docs?

thanks,
hamilton


> I should probably add that I have the following in my httpd.conf, and that the
> mptest.py file is in $APACHEDIR/htdocs/test -- I wouldn't be overly surprised if
> this is a configuration problem, I'm just not sure what to do to fix it (I'm trying
> a few things though). How am I supposed to tell it where to look for python files
> with such handlers? Am I just supposed to put them in the python directory structure
> -- that doesn't seem right either...
>
>  AddHandler python-program .py
>  PythonHandler mptest
>  PythonDebug On
>
> I'm trying to set up mod_python in Apache. I've built Apache before
and
> everything works fine, but this time I included mod_python amongst the

> statically linked mods (I figured I'd try that and then go back and
try
> the seemingly more complicated process of building mod_python as a
DSO,
> just to compare). Apache still works fine, except for mod_python.
> I RTFM'ed and did what the instructions from modpython.org said,
> modified my httpd.conf etc. but when I try to actually reference a .py

> file I get the following instead:
>
> Mod_python error: "PythonHandler mptest"
>
> Traceback (innermost last):
>
>   File "/usr/lib/python1.5/site-packages/mod_python/apache.py", line
> 135, in Dispatch
>     module = import_module(module_name, req)
>
>   File "/usr/lib/python1.5/site-packages/mod_python/apache.py", line
> 276, in import_module
>     module = __import__(module_name)
>
> ImportError: No module named mptest
>
> I'm new to python, so I'm not crazy about debugging apache.py -- has
> anyone had this problem or does anyone know what I f...ed up?
>
> thanks,
> hamilton



From okamoto at xfiles.intercon.hp.com  Mon Oct  9 12:57:27 2000
From: okamoto at xfiles.intercon.hp.com (Jeff Okamoto)
Date: Fri Jan  9 21:58:39 2004
Subject: [mod_python] mod_python 2.5 error on fresh install
In-Reply-To: <39E2197B.75988619@sandia.gov>; from "Hamilton Link" at Oct 09, 100 1:16 pm
Message-ID: <200010091957.MAA27537@xfiles.intercon.hp.com>

> I sent this to comp.lang.python as well... I'd go the RPM route or the
> DSO route but if someone can point me in the right direction I'd just as
> soon use the latest version of mod_python (i.e. 2.5). Is there some
> problem with the installation file in the (rather limited) online docs?

Yes, the INSTALL file and Tutorial (from the web site) are both incorrect
in describing the installation and test procedures.

To get things working with how you've set them up, you will need to wrap
your three-line section to look like:

<Directory /path/to/apache/htdocs/test>
	AddHandler python-program .py
	PythonHandler mptest
	PythonDebug On
</Directory>

Then simply access any URI on your system and just make sure that it has
a .py suffix.  Instead of a 404, you should get the test output from
mptest.py.  If you do see a 404, then something is still broken.

Jeff

From grisha at ispol.com  Mon Oct  9 15:55:47 2000
From: grisha at ispol.com (Gregory Trubetskoy)
Date: Fri Jan  9 21:58:39 2004
Subject: [mod_python] mod_python 2.5 error on fresh install
In-Reply-To: <39E2197B.75988619@sandia.gov>
Message-ID: <Pine.LNX.4.21.0010091554160.18580-100000@saturn.ispol.com>

There is a bug in the documentation. Either put the directives below in an
.htaccess file, or wrap them inside <Directory> tags, like this

<Directory /full/path/to/mptest.py>
  SetHandler blah blah....
</Directory>

--
  Gregory (Grisha) Trubetskoy
       grisha@ispol.com

On Mon, 9 Oct 2000, Hamilton Link wrote:

> I sent this to comp.lang.python as well... I'd go the RPM route or the
> DSO route but if someone can point me in the right direction I'd just as
> soon use the latest version of mod_python (i.e. 2.5). Is there some
> problem with the installation file in the (rather limited) online docs?
> 
> thanks,
> hamilton
> 
> 
> > I should probably add that I have the following in my httpd.conf, and that the
> > mptest.py file is in $APACHEDIR/htdocs/test -- I wouldn't be overly surprised if
> > this is a configuration problem, I'm just not sure what to do to fix it (I'm trying
> > a few things though). How am I supposed to tell it where to look for python files
> > with such handlers? Am I just supposed to put them in the python directory structure
> > -- that doesn't seem right either...
> >
> >  AddHandler python-program .py
> >  PythonHandler mptest
> >  PythonDebug On
> >
> > I'm trying to set up mod_python in Apache. I've built Apache before
> and
> > everything works fine, but this time I included mod_python amongst the
> 
> > statically linked mods (I figured I'd try that and then go back and
> try
> > the seemingly more complicated process of building mod_python as a
> DSO,
> > just to compare). Apache still works fine, except for mod_python.
> > I RTFM'ed and did what the instructions from modpython.org said,
> > modified my httpd.conf etc. but when I try to actually reference a .py
> 
> > file I get the following instead:
> >
> > Mod_python error: "PythonHandler mptest"
> >
> > Traceback (innermost last):
> >
> >   File "/usr/lib/python1.5/site-packages/mod_python/apache.py", line
> > 135, in Dispatch
> >     module = import_module(module_name, req)
> >
> >   File "/usr/lib/python1.5/site-packages/mod_python/apache.py", line
> > 276, in import_module
> >     module = __import__(module_name)
> >
> > ImportError: No module named mptest
> >
> > I'm new to python, so I'm not crazy about debugging apache.py -- has
> > anyone had this problem or does anyone know what I f...ed up?
> >
> > thanks,
> > hamilton
> 
> 
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://www.modpython.org/mailman/listinfo/mod_python
> 


From jon+modpython at unequivocal.co.uk  Tue Oct 10 14:43:52 2000
From: jon+modpython at unequivocal.co.uk (Jon Ribbens)
Date: Fri Jan  9 21:58:39 2004
Subject: [mod_python] Compile failure - init_socket multiply defined
Message-ID: <20001010144352.B22656@snowy.squish.net>

I'm trying to compile mod_python 2.5 as a DSO with Apache 1.3.12 and
Python 2.0c1 on OpenBSD 2.7-ish.

I do:

apxs -I /usr/local/include/python2.0 -c mod_python.c /usr/local/lib/python2.0/config/libpython2.0.a

It says:

gcc -DDEV_RANDOM=/dev/arandom -DMOD_SSL=206102 -DEAPI -DUSE_EXPAT -I../lib/expat-lite -g -fPIC -DSHARED_MODULE -I/usr/lib/apache/include -pthread -I/usr/local/include/python2.0  -c mod_python.c
ld -Bforcearchive -Bshareable -o mod_python.so mod_python.o /usr/local/lib/python2.0/config/libpython2.0.a -lc_r
./socketmodule.c:2377: Definition of symbol `_init_socket' (multiply defined)
./socketmodule.c:2377: Definition of symbol `_init_socket' (multiply defined)
apxs:Break: Command failed with rc=65536

I am completely mystified as to why it says that init_socket is multiply
defined. I can't see more than one definition anywhere. Does anyone have
any suggestions?

From jon+modpython at unequivocal.co.uk  Tue Oct 10 14:59:32 2000
From: jon+modpython at unequivocal.co.uk (Jon Ribbens)
Date: Fri Jan  9 21:58:39 2004
Subject: [mod_python] Compile failure - init_socket multiply defined
In-Reply-To: <20001010144352.B22656@snowy.squish.net>; from jon+modpython@unequivocal.co.uk on Tue, Oct 10, 2000 at 02:43:52PM +0100
References: <20001010144352.B22656@snowy.squish.net>
Message-ID: <20001010145932.C22656@snowy.squish.net>

Jon Ribbens <jon+modpython@unequivocal.co.uk> wrote:
> I am completely mystified as to why it says that init_socket is multiply
> defined.

Hmm, ok, fixed that one. Compiled Python wrong with two _socket modules.

Next problem. ld gives thousands of:

ld: /usr/local/lib/python2.0/config/libpython2.0.a(main.o): RRS text relocation at 0x114bc6 for "___sF"
ld: /usr/local/lib/python2.0/config/libpython2.0.a(main.o): RRS text relocation at 0x114bb8 for "_fprintf"
ld: /usr/local/lib/python2.0/config/libpython2.0.a(main.o): RRS text relocation at 0x114bb3 for "___sF"
ld: /usr/local/lib/python2.0/config/libpython2.0.a(getbuildinfo.o): RRS text relocation at 0x115308 for "_sprintf"

etc. I have no idea what this means either ;-)

From arhiv at freemail.org.mk  Tue Oct 10 18:55:39 2000
From: arhiv at freemail.org.mk (Damjan)
Date: Fri Jan  9 21:58:39 2004
Subject: [mod_python] Session managment for mod_python
Message-ID: <Pine.LNX.4.21.0010101853340.229-100000@localhost.localdomain>

Is there some sollution for session managment in mod_python. I actually
have some ideas how to build this, but wanted to check first, if someone
else has solved this problem.  Thanks.


-- 
damjan

    Linux is like a vigwam, no windows, no gates, just apache inside.


From grisha at ispol.com  Tue Oct 10 14:54:10 2000
From: grisha at ispol.com (Gregory Trubetskoy)
Date: Fri Jan  9 21:58:39 2004
Subject: [mod_python] Session managment for mod_python
In-Reply-To: <Pine.LNX.4.21.0010101853340.229-100000@localhost.localdomain>
Message-ID: <Pine.LNX.4.21.0010101453430.19865-100000@saturn.ispol.com>

what do you mean by session management?


On Tue, 10 Oct 2000, Damjan wrote:

> Is there some sollution for session managment in mod_python. I actually
> have some ideas how to build this, but wanted to check first, if someone
> else has solved this problem.  Thanks.
> 
> 
> -- 
> damjan
> 
>     Linux is like a vigwam, no windows, no gates, just apache inside.
> 
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://www.modpython.org/mailman/listinfo/mod_python
> 


From benno at sesgroup.net  Wed Oct 11 09:33:58 2000
From: benno at sesgroup.net (Ben Leslie)
Date: Fri Jan  9 21:58:39 2004
Subject: [mod_python] Session managment for mod_python
In-Reply-To: <Pine.LNX.4.21.0010101853340.229-100000@localhost.localdomain>; from arhiv@freemail.org.mk on Tue, Oct 10, 2000 at 06:55:39PM +0200
References: <Pine.LNX.4.21.0010101853340.229-100000@localhost.localdomain>
Message-ID: <20001011093358.A4501@bob.sesgroup.net>

Hi Damjan!

On Tue, 10 Oct 2000, Damjan wrote:

> Is there some sollution for session managment in mod_python. I actually
> have some ideas how to build this, but wanted to check first, if someone
> else has solved this problem.  Thanks.
> 


It is pretty easy todo, and really depends a lot on the application you 
are using no how you would want to implement it, and what level of security
you want to build into it.

There are many many things potentially involved in session management.

Firstly, do you want to store the session key as a cookie or as part of
the url (eg ?key=12331232 ).

Secondly, do you want to store keys in a database, in memory, in a file
system.

Thirdly, what data do you want to store between sessions? Simlpy what
user is logged in, other 'simple' information or complex stuff like
class objects in memory.

Finally, how long is a session, when does it end, do you rely on client
 side expiring cookies, do you allow the session cookie to be used for
multiple requests, or do you issue a new cookie each time to reduce the
change of someone stealing the cookie and using it to login as the 
correct user?

I have done a session management for my first project in mod_python, 
using a backend postgres database. I use it simply to track the user
that is logged in. I am using cookies to store the session key. 
Each new page the client is issued with a new cookie, the cookie is 
checked server side that it is still valid (I have a ten minute
time-out on the cookie).

Hope this helps,

Benno

From gdamjan at freemail.org.mk  Wed Oct 11 23:15:35 2000
From: gdamjan at freemail.org.mk (Damjan Georgievski)
Date: Fri Jan  9 21:58:39 2004
Subject: [mod_python] Session managment for mod_python
In-Reply-To: <20001011093358.A4501@bob.sesgroup.net>
Message-ID: <Pine.LNX.4.21.0010112306550.691-100000@localhost.localdomain>

> Hi Damjan!
> > Is there some sollution for session managment in mod_python. I actually
> > have some ideas how to build this, but wanted to check first, if someone
> > else has solved this problem.  Thanks.
> 
> It is pretty easy todo, and really depends a lot on the application you 
> are using no how you would want to implement it, and what level of security
> you want to build into it.
> 
> There are many many things potentially involved in session management.
> 
> Firstly, do you want to store the session key as a cookie or as part of
> the url (eg ?key=12331232 ).
> 
> Secondly, do you want to store keys in a database, in memory, in a file
> system.
> 
> Thirdly, what data do you want to store between sessions? Simlpy what
> user is logged in, other 'simple' information or complex stuff like
> class objects in memory.

I know there are many possible ways of doing this, but I can't say which
way is better (key or cookie , memory/database/file). But for sure I
would like to store a whole object.
 
> Finally, how long is a session, when does it end, do you rely on client
>  side expiring cookies, do you allow the session cookie to be used for
> multiple requests, or do you issue a new cookie each time to reduce the
> change of someone stealing the cookie and using it to login as the 
> correct user?
> 
> I have done a session management for my first project in mod_python, 
> using a backend postgres database. I use it simply to track the user
> that is logged in. I am using cookies to store the session key. 
> Each new page the client is issued with a new cookie, the cookie is 
> checked server side that it is still valid (I have a ten minute
> time-out on the cookie).

Mainly this is what I thought I would do, but many thanks for the cookie
expiration hint.
 
I just think, there should be a standrard mod_python module, with
a simple interface that automates the hard work. This (and embeded
Python support) will finnish-up mod_python to be much more stronger
compared to mod_perl.

Thanks.


-- 
damjan




From arhiv at freemail.org.mk  Wed Oct 11 23:19:08 2000
From: arhiv at freemail.org.mk (Damjan)
Date: Fri Jan  9 21:58:39 2004
Subject: [mod_python] Session managment for mod_python
Message-ID: <Pine.LNX.4.21.0010112317150.691-100000@localhost.localdomain>

> Hi Damjan!
> > Is there some sollution for session managment in mod_python. I actually
> > have some ideas how to build this, but wanted to check first, if someone
> > else has solved this problem.  Thanks.
> 
> It is pretty easy todo, and really depends a lot on the application you 
> are using no how you would want to implement it, and what level of security
> you want to build into it.
> 
> There are many many things potentially involved in session management.
> 
> Firstly, do you want to store the session key as a cookie or as part of
> the url (eg ?key=12331232 ).
> 
> Secondly, do you want to store keys in a database, in memory, in a file
> system.
> 
> Thirdly, what data do you want to store between sessions? Simlpy what
> user is logged in, other 'simple' information or complex stuff like
> class objects in memory.

I know there are many possible ways of doing this, but I can't say which
way is better (key or cookie , memory/database/file). But for sure I
would like to store a whole object.
 
> Finally, how long is a session, when does it end, do you rely on client
>  side expiring cookies, do you allow the session cookie to be used for
> multiple requests, or do you issue a new cookie each time to reduce the
> change of someone stealing the cookie and using it to login as the 
> correct user?
> 
> I have done a session management for my first project in mod_python, 
> using a backend postgres database. I use it simply to track the user
> that is logged in. I am using cookies to store the session key. 
> Each new page the client is issued with a new cookie, the cookie is 
> checked server side that it is still valid (I have a ten minute
> time-out on the cookie).

Mainly this is what I thought I would do, but many thanks for the cookie
expiration hint.
 
I just think, there should be a standard mod_python.session module, with
a simple interface that automates the hard work. This (and embeded
Python support) will finnish-up mod_python to be much more stronger
compared to mod_perl.

Thanks.


-- 
damjan





From python at ragnark.vestdata.no  Thu Oct 12 18:57:47 2000
From: python at ragnark.vestdata.no (=?iso-8859-1?Q?Ragnar_Kj=F8rstad?=)
Date: Fri Jan  9 21:58:39 2004
Subject: [mod_python] Apache configuration
Message-ID: <20001012185747.A27459@vestdata.no>

Hi

The tutorial explains how to set up Apache to run myscript.py to handle
all requests to .py URL's, and points out that it does not actually use
the URL.

However, it does not explain how to configure Apache to run the files
themselves!?

Thanks


-- 
Ragnar Kj?rstad

From benno at sesgroup.net  Fri Oct 13 09:17:07 2000
From: benno at sesgroup.net (Ben Leslie)
Date: Fri Jan  9 21:58:39 2004
Subject: [mod_python] Apache configuration
In-Reply-To: <20001012185747.A27459@vestdata.no>; from python@ragnark.vestdata.no on Thu, Oct 12, 2000 at 06:57:47PM +0200
References: <20001012185747.A27459@vestdata.no>
Message-ID: <20001013091707.B22482@bob.sesgroup.net>

Hi Ragnar!

On Thu, 12 Oct 2000, Ragnar Kj?rstad wrote:

> Hi
> 
> The tutorial explains how to set up Apache to run myscript.py to handle
> all requests to .py URL's, and points out that it does not actually use
> the URL.
> 
> However, it does not explain how to configure Apache to run the files
> themselves!?
> 

Well that is up to your request_handler and what you actually want it to do.

If you want to use traditional cgi-like python scripts then you probably should
use the cgihandler.py as your request_handler. However there is often processing
that you wish to occur with each requst, this is where you would write you
own request_handler. You are able to get access to the uri passed by using the 
req.uri variable.

Hope that helps,

Benno

From sitongia at cgd.ucar.edu  Fri Oct 13 14:33:19 2000
From: sitongia at cgd.ucar.edu (Leonard Sitongia)
Date: Fri Jan  9 21:58:39 2004
Subject: [mod_python] DSO: __muldi3: referenced symbol
Message-ID: <200010132033.OAA28768@bearmtn-e0.cgd.ucar.edu>

Hi,

I'm trying to build mod_python as a DSO on
SunOS goldhill 5.6 Generic_105181-17 sun4u sparc SUNW,Ultra-1
with apache-1.3.12, using the following command:

apxs -a -i -I /opt/local/python/include/python1.5 -c mod_python.c 
/opt/local/python/lib/python1.5/config/libpython1.5.a 
/opt/local/tcl/lib/libtcl8.3.so /opt/local/tk/lib/libtk8.3.so -lm

The result from starting Apache is:

starting Apache
Syntax error on line 228 of /web/apache/conf/httpd.conf:
Cannot load /opt/local/apache-1.3.12/libexec/mod_python.so into server: ld.so.1: 
/opt/local/apache/bin/httpd: fatal: relocation error: file 
/opt/local/apache-1.3.12/libexec/mod_python.so: symbol __muldi3: referenced 
symbol not found

I can only find this symbol in the python library, but cannot find any
information about it via a google search or via the Python web sites.

Looks like some kind of multiply and divide routines.  Anyone recognize
this and can give me a tip on what to do from here (short of compiling
this into Apache).

Thanks.

==Leonard E. Sitongia           
--Information Systems Group / Climate and Global Dynamics
  National Center for Atmospheric Research
  P.O. Box 3000 Boulder CO 80307  USA
  sitongia@ucar.edu    voice: (303)497-1338   fax: (303)497-2699


From jeremy at beopen.com  Fri Oct 13 19:18:34 2000
From: jeremy at beopen.com (Jeremy Hylton)
Date: Fri Jan  9 21:58:39 2004
Subject: [mod_python] [ANNOUNCE] Ninth International Python Conference
Message-ID: <14823.38986.426523.88704@bitdiddle.concentric.net>

CALL FOR PAPERS, POSTERS, AND PARTICIPATION
Ninth International Python Conference
March 5-8, 2001
Long Beach, California
Web site: http://python9.org

The 9th International Python Conference (Python 9) is a forum for
Python users, software developers, and researchers to present current
work, discuss future plans for the language and commercial
applications, and learn about interesting uses of Python. The
conference will consist of a day of tutorials, two days of refereed
paper and application tracks -- including a Zope track and a
multi-technology Python Applications Track, a developers' day, a small
exhibition, demonstrations, and posters.

Paper submission deadline: Monday, November 6, 2000 
Notification of acceptance: Monday, December 11, 2000 
Final papers due: Monday, January 15, 2001 

Authors are invited to submit papers for the Refereed Paper Track
that: 

* Present new and useful applications and tools that utilize Python 
* Describe the use of Python in large, mission-critical or unusual
  applications  
* Address practical programming problems, and provide lessons based on
  experience for Python programmers  

Full information is available on the website, http://python9.org 


From brad at kk208.ocsstud.gu.edu.au  Sat Oct 14 15:20:01 2000
From: brad at kk208.ocsstud.gu.edu.au (Brad Dick)
Date: Fri Jan  9 21:58:39 2004
Subject: [mod_python] undefined symbol: openpty
Message-ID: <20001014152001.A6317@kk208.ocsstud.gu.edu.au>

Umm... can anyone explain to me why I get undefined symbol errors when I start up Apache.

I'm running Python 2.0b2, Apache 1.3.12, PHP 4.0.3, on a Red Hat 6.2. Everything mentioned was built from source on this machine.

I was actually getting an undefined symbol: dbopen error. However, its now changed to an undefined symbol: openpty. This is getting frustrating to say the least. If someone can help, please respond

Brad

From arhiv at freemail.org.mk  Sun Oct 15 15:10:06 2000
From: arhiv at freemail.org.mk (Damjan)
Date: Fri Jan  9 21:58:39 2004
Subject: [mod_python] Session managment for mod_python
In-Reply-To: <Pine.LNX.4.21.0010101453430.19865-100000@saturn.ispol.com>
Message-ID: <Pine.LNX.4.21.0010151452160.542-100000@localhost.localdomain>

> what do you mean by session management?
> 
The best session managment would be a Python dictionary, that is global
to all subinterpreters, and all Apache processes, and that retains its
state across handlers and requests.

Let me illustrate what can be done with this. For example you have
people log-in to your site and you first create a "User" object, set
some attributes to it (ex. preferences). Then you create a semi-random
string, you send that string as a cookie to the users browser, and use
the string as a key in the session managment dictionary. Later when that
user accesses another page on your site, the only thing you do is:

		from mod_python.session_managment import SM
		cookie = getcookie("something")
		user = SM[cookie]
		buf = "Hello " + user.real_name
		if user.show_folders
			# do stuff
		if user.something
			# do other stuff
		...
		etc.

Of course you could do this with a database and pickle-ing the user
object. Or you could do this with a shared memory.

Do you think there should be a standard mod_python module that does all
of this?  

-- 
damjan



From grisha at ispol.com  Sun Oct 15 17:16:53 2000
From: grisha at ispol.com (Gregory Trubetskoy)
Date: Fri Jan  9 21:58:40 2004
Subject: [mod_python] Session managment for mod_python
In-Reply-To: <Pine.LNX.4.21.0010151452160.542-100000@localhost.localdomain>
Message-ID: <Pine.LNX.4.21.0010151706400.24269-100000@saturn.ispol.com>

On Sun, 15 Oct 2000, Damjan wrote:

> > what do you mean by session management?
> > 
> The best session managment would be a Python dictionary, that is global
> to all subinterpreters, and all Apache processes, and that retains its
> state across handlers and requests.

Let me guess - if Apache process is restarted, you would like the state to
be retained througout the restart?

> Let me illustrate what can be done with this. 

[snip]

> Of course you could do this with a database and pickle-ing the user
> object. Or you could do this with a shared memory.

I think you answered your own question - this sort of thing is best done
with a database.

I see Apache (and mod_python, which is just an interface to it) as a
process responsible for serving requests, but not a database, data storage
is not one of its functions, and it is well suited for delegating that
function to a database. 

If you think about it carefully, there is a slew of issues one has to
consider to implement something like this. Locking alone could be pretty
complicated. Why bother with any of this, if something like MySQL already
does all of those things very efficiently.

Hope this doesn't dicourage you from using of mod_python. In fact writing
a mod_python handler that would provide a framework that would use a
database and work as you describe could be a very interesting project.

Grisha


From benno at sesgroup.net  Mon Oct 16 08:46:55 2000
From: benno at sesgroup.net (Ben Leslie)
Date: Fri Jan  9 21:58:40 2004
Subject: [mod_python] Session managment for mod_python
In-Reply-To: <Pine.LNX.4.21.0010151706400.24269-100000@saturn.ispol.com>; from grisha@ispol.com on Sun, Oct 15, 2000 at 05:16:53PM -0400
References: <Pine.LNX.4.21.0010151452160.542-100000@localhost.localdomain> <Pine.LNX.4.21.0010151706400.24269-100000@saturn.ispol.com>
Message-ID: <20001016084655.A6193@bob.sesgroup.net>

On Sun, 15 Oct 2000, Gregory Trubetskoy wrote:

> 
> On Sun, 15 Oct 2000, Damjan wrote:
> 
> > > what do you mean by session management?
> > > 
> > The best session managment would be a Python dictionary, that is global
> > to all subinterpreters, and all Apache processes, and that retains its
> > state across handlers and requests.
> 
> Let me guess - if Apache process is restarted, you would like the state to
> be retained througout the restart?

I would count it as dynamic data that can be lost. I am thinking this thing
would be great as a cache mainly for expensive database lookups, caching files
into memory for faster loading.

 
> > Let me illustrate what can be done with this. 
> 
> [snip]
> 
> > Of course you could do this with a database and pickle-ing the user
> > object. Or you could do this with a shared memory.
> 
> I think you answered your own question - this sort of thing is best done
> with a database.
> 
> I see Apache (and mod_python, which is just an interface to it) as a
> process responsible for serving requests, but not a database, data storage
> is not one of its functions, and it is well suited for delegating that
> function to a database. 

Data storage no, caching yes.

 
> If you think about it carefully, there is a slew of issues one has to
> consider to implement something like this. Locking alone could be pretty
> complicated. Why bother with any of this, if something like MySQL already
> does all of those things very efficiently.

There are a lot of issues, however squeezing some more performance out of
my application by caching files and the like would be extremely useful.
 
The question is the implemenation, afaict apache does not have a global shared
memroy by default, although there seems to be optional patches that can be
compiled in to give you access to to this memory, from what I can tell if we
had access to this interface it would be possible to create a global dictionary
in mod_python to suppport this. Is it worth creating extensions to mod_python
which rely on patches to the apache core?

If anyone with more apache experience than i have could make any comments I would
appreciate it.


Regards,

Ben Leslie

From grisha at ispol.com  Sun Oct 15 21:58:05 2000
From: grisha at ispol.com (Gregory Trubetskoy)
Date: Fri Jan  9 21:58:40 2004
Subject: [mod_python] Session managment for mod_python
In-Reply-To: <20001016084655.A6193@bob.sesgroup.net>
Message-ID: <Pine.LNX.4.21.0010152142581.24379-100000@saturn.ispol.com>

On Mon, 16 Oct 2000, Ben Leslie wrote:

> On Sun, 15 Oct 2000, Gregory Trubetskoy wrote:
> 
> > Let me guess - if Apache process is restarted, you would like the state to
> > be retained througout the restart?
> 
> I would count it as dynamic data that can be lost. I am thinking this thing
> would be great as a cache mainly for expensive database lookups, caching files
> into memory for faster loading.

The only example of dynamic data that can be lost that I can think of is
static, e.g. a list of zipcodes or a cached file, but that doesn't need to
be shared between apache processes - each process can have its own copy.

On the other hand database lookups are probably a lot cheaper than you
think. A simple retrival on a keyed table is not all that far from a
Python dictionary lookup, and most databases will do a great job at
caching queries in memory. The thing I don't like about databases is that
Python still lacks a consistent database API like perl's DBI, but that's a
different issue altogether...

There *are* some cases where shared memory is a must. In particular,
things relating to encryption where keys are exchanged at connection
initiation time. Apache 2.0 addresses those problems, I think there is not
a lot of sense in trying to solve this on 1.3.... I'd rather spend the
time porting mod_python to 2.0.

Grisha



From benno at sesgroup.net  Mon Oct 16 13:35:33 2000
From: benno at sesgroup.net (Ben Leslie)
Date: Fri Jan  9 21:58:40 2004
Subject: [mod_python] Session managment for mod_python
In-Reply-To: <Pine.LNX.4.21.0010152142581.24379-100000@saturn.ispol.com>; from grisha@ispol.com on Sun, Oct 15, 2000 at 09:58:05PM -0400
References: <20001016084655.A6193@bob.sesgroup.net> <Pine.LNX.4.21.0010152142581.24379-100000@saturn.ispol.com>
Message-ID: <20001016133533.A6990@bob.sesgroup.net>

On Sun, 15 Oct 2000, Gregory Trubetskoy wrote:

> 
> On Mon, 16 Oct 2000, Ben Leslie wrote:
> 
> > On Sun, 15 Oct 2000, Gregory Trubetskoy wrote:
> > 
> > > Let me guess - if Apache process is restarted, you would like the state to
> > > be retained througout the restart?
> > 
> > I would count it as dynamic data that can be lost. I am thinking this thing
> > would be great as a cache mainly for expensive database lookups, caching files
> > into memory for faster loading.
> 
> The only example of dynamic data that can be lost that I can think of is
> static, e.g. a list of zipcodes or a cached file, but that doesn't need to
> be shared between apache processes - each process can have its own copy.

This is true but if you have 100 connection you then have 100 times the 
memory. Then again, memory is cheap and programmer time isn't ;)
 
> On the other hand database lookups are probably a lot cheaper than you
> think. A simple retrival on a keyed table is not all that far from a
> Python dictionary lookup, and most databases will do a great job at
> caching queries in memory.

This is true, and since you can have a persistent connection to the DB for
each thread this works quite well. It is more the expensive functions that 
I've worried about, but again these could be cached on a per thread basis.

> The thing I don't like about databases is that
> Python still lacks a consistent database API like perl's DBI, but that's a
> different issue altogether...

Not entriely true there is the DBAPI from the DB-SIG:

http://www.python.org/topics/database/DatabaseAPI-2.0.html
 
> There *are* some cases where shared memory is a must. In particular,
> things relating to encryption where keys are exchanged at connection
> initiation time. Apache 2.0 addresses those problems, I think there is not
> a lot of sense in trying to solve this on 1.3.... I'd rather spend the
> time porting mod_python to 2.0.

Yep, that makes a lot of sense. I didn't know wether apache 2.0 solved this
or not (and couldn't find the answer after looking at the docs).

Cheers,

Benno

From Matthias.Bauer at LivingLogic.de  Mon Oct 16 07:48:24 2000
From: Matthias.Bauer at LivingLogic.de (Matthias Bauer)
Date: Fri Jan  9 21:58:40 2004
Subject: [mod_python] undefined symbol: openpty
References: <20001014152001.A6317@kk208.ocsstud.gu.edu.au>
Message-ID: <39EA96A8.D99DC3DF@LivingLogic.de>

Hi Brad,

I ran into some similar problems, when I started out with mod_python.

I had to include lots of shared libraries until I did no longer get
these undefined symbol errors. If I remember it right, openpty is
defined in libutil.a. But after you include that you may run into some
more undefined symbols. You just have to include all the necessary
libraries until it works.

However I never got mod_python to run after I underwent this lengthy
process - I finally ran into some Segfault, where I got stuck and simply
stopped wasting time.

Please let me know about your experience after you finally manage to get
rid of all these unresolved symbol errors.

Good luck,

--- Matthias

Brad Dick wrote:
> 
> Umm... can anyone explain to me why I get undefined symbol errors when I start up Apache.
> 
> I'm running Python 2.0b2, Apache 1.3.12, PHP 4.0.3, on a Red Hat 6.2. Everything mentioned was built from source on this machine.
> 
> I was actually getting an undefined symbol: dbopen error. However, its now changed to an undefined symbol: openpty. This is getting frustrating to say the least. If someone can help, please respond
> 
> Brad
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://www.modpython.org/mailman/listinfo/mod_python
-------------- next part --------------
A non-text attachment was scrubbed...
Name: smime.p7s
Type: application/x-pkcs7-signature
Size: 2054 bytes
Desc: S/MIME Cryptographic Signature
Url : http://mailman.modpython.org/pipermail/mod_python/attachments/20001016/9b49d361/smime-0002.bin
From michael at stroeder.com  Mon Oct 16 08:44:19 2000
From: michael at stroeder.com (Michael =?iso-8859-1?Q?Str=F6der?=)
Date: Fri Jan  9 21:58:40 2004
Subject: [mod_python] Session managment for mod_python
References: <Pine.LNX.4.21.0010152142581.24379-100000@saturn.ispol.com>
Message-ID: <39EAA3C3.211E2B92@stroeder.com>

Gregory Trubetskoy wrote:
> 
> There *are* some cases where shared memory is a must.
> [..]
> Apache 2.0 addresses those problems, I think there is not
> a lot of sense in trying to solve this on 1.3.... I'd rather spend the
> time porting mod_python to 2.0.

Yes, you're right. Don't waste your time working around problems
which are solved in Apache 2.0.

Ciao, Michael.

From michael at stroeder.com  Mon Oct 16 08:41:48 2000
From: michael at stroeder.com (Michael =?iso-8859-1?Q?Str=F6der?=)
Date: Fri Jan  9 21:58:40 2004
Subject: [mod_python] Session managment for mod_python
References: <Pine.LNX.4.21.0010151706400.24269-100000@saturn.ispol.com>
Message-ID: <39EAA32C.861524CB@stroeder.com>

Gregory Trubetskoy wrote:
> 
> On Sun, 15 Oct 2000, Damjan wrote:
> 
> > > what do you mean by session management?
> > >
> > The best session managment would be a Python dictionary, that is global
> > to all subinterpreters, and all Apache processes, and that retains its
> > state across handlers and requests.
> 
> Let me guess - if Apache process is restarted, you would like the state to
> be retained througout the restart?

If Apache starts session data can be lost.

> > Of course you could do this with a database and pickle-ing the user
> > object. Or you could do this with a shared memory.
> 
> I think you answered your own question - this sort of thing is best done
> with a database.

Some objects are not pickeable but worth to be kept in a session
cache. E.g. connection objects of a database access.

Nevertheless most web applications could provide a session managment
themselves. There are some projects which implement this for Python
(e.g. webware etc.)

Ciao, Michael.

From artrussia at newmail.ru  Sat Oct 14 11:54:51 2000
From: artrussia at newmail.ru (Boris Lipner)
Date: Fri Jan  9 21:58:40 2004
Subject: [mod_python] Art
Message-ID: <421256896.20001014115451@newmail.ru>

Dear Madam and Sir,

The Art Gallery  Gallery-Ainvites you to the new exhibitions.
Today on our page you can see more than 200 new wonderful paintings. We hope you will like them.

Our company, "GALLERY-A"  www.gallery-a.ru  , offer both modern and classical
art, deals in a line of pieces of art by talented artists. Their works  include original
paintings, sculptures, etc., copies of masterpieces of various styles, countries and epochs,
portraits made to order. These
professional artists are high-skilled graduates of educational institutions such as the Academy
of Fine Arts, High School for Arts and Design and other art colleges. 

You establish contact and find out new customers who would like to buy a masterpiece of
realistic Art.

SITE: www.gallery-a.ru
E-MAIL: gallery-a@peterlink.ru

Best regards
Boris Lipner, General Manager.

If you want to REMOVE your E-maiIL from our Post List PLEASE send letter to artrussia@newmail.ru



From grisha at verio.net  Mon Oct 16 10:13:13 2000
From: grisha at verio.net (Gregory Trubetskoy)
Date: Fri Jan  9 21:58:40 2004
Subject: [mod_python] Session managment for mod_python
References: <Pine.LNX.4.21.0010151706400.24269-100000@saturn.ispol.com> <39EAA32C.861524CB@stroeder.com>
Message-ID: <39EB1B09.AF8E61DF@verio.net>

Michael Str?der wrote:
> 
> Some objects are not pickeable but worth to be kept in a session
> cache. E.g. connection objects of a database access.

And mod_python will do a great job of keeping your connection object.
You will just have to have a connection object per child process (and
you'll need to make sure that MaxClients is not greater than the number
of allowed connections to your database server)

Grisha

From geoff at infostreet.com  Tue Oct 17 09:19:57 2000
From: geoff at infostreet.com (Geoff Cadien)
Date: Fri Jan  9 21:58:40 2004
Subject: [mod_python] Problem setting cookie and then redirecting
Message-ID: <39EC7C2D.F007C922@infostreet.com>

From jj at echobridge.com  Tue Oct 17 14:31:34 2000
From: jj at echobridge.com (Shannon -jj Behrens)
Date: Fri Jan  9 21:58:40 2004
Subject: [mod_python] FAQ or list archives
Message-ID: <39ECC536.1E121809@echobridge.com>

Dear Sirs,

Is there a FAQ or a mailing list archive that I can refer to?  I can't
seem to get mod_python to work in CGI mode using Python 1.6.  It keeps
complaining about:

File  File "/usr/local/apache/htdocs/aquarium/htdocs/index.py", line 35,
in ?
    Aquarium().handleRequest()
  File "/usr/local/apache/htdocs/aquarium/aquarium/util/Aquarium.py",
line 60, in handleRequest
    import cgi
  File "/usr/local/devel/lib/python1.6/cgi.py", line 747, in ?
    class FieldStorage:
  File "/usr/local/devel/lib/python1.6/cgi.py", line 991, in
FieldStorage
    bufsize = 8*1024            # I/O buffering size for copy to file
OverflowError: integer multiplication

Thanks,
-jj

-- 
Using a program to write a program to test a program has high leverage.
Kernigan and Pike, "The Practice of Programming."

From grisha at ispol.com  Tue Oct 17 16:35:22 2000
From: grisha at ispol.com (Gregory Trubetskoy)
Date: Fri Jan  9 21:58:40 2004
Subject: [mod_python] FAQ or list archives
In-Reply-To: <39ECC536.1E121809@echobridge.com>
Message-ID: <Pine.LNX.4.21.0010171633240.579-100000@saturn.ispol.com>

I saw something on usenet about this and glibc 2.1.93, it is reportedly a
glibc bug. What glibc are you using?

Grisha

On Tue, 17 Oct 2000, Shannon -jj Behrens wrote:

> Dear Sirs,
> 
> Is there a FAQ or a mailing list archive that I can refer to?  I can't
> seem to get mod_python to work in CGI mode using Python 1.6.  It keeps
> complaining about:
> 
> File  File "/usr/local/apache/htdocs/aquarium/htdocs/index.py", line 35,
> in ?
>     Aquarium().handleRequest()
>   File "/usr/local/apache/htdocs/aquarium/aquarium/util/Aquarium.py",
> line 60, in handleRequest
>     import cgi
>   File "/usr/local/devel/lib/python1.6/cgi.py", line 747, in ?
>     class FieldStorage:
>   File "/usr/local/devel/lib/python1.6/cgi.py", line 991, in
> FieldStorage
>     bufsize = 8*1024            # I/O buffering size for copy to file
> OverflowError: integer multiplication
> 
> Thanks,
> -jj
> 
> -- 
> Using a program to write a program to test a program has high leverage.
> Kernigan and Pike, "The Practice of Programming."
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://www.modpython.org/mailman/listinfo/mod_python
> 


From geoff at infostreet.com  Tue Oct 17 13:35:29 2000
From: geoff at infostreet.com (Geoff Cadien)
Date: Fri Jan  9 21:58:40 2004
Subject: [mod_python] Problem setting cookie and then redirecting
References: <Pine.LNX.4.21.0010171617090.579-100000@saturn.ispol.com>
Message-ID: <39ECB811.AEA563B4@infostreet.com>

That did the trick.  Thanks!

-geoff

Gregory Trubetskoy wrote:
> 
> Do this:
> 
> req.headers_out['Set-Cookie']='key=value'
> req.headers_out['location'] = 'http://localhost/index.html'
> req.status = apache.HTTP_MOVED_TEMPORARILY
> req.send_http_header()
> return apache.OK
> 
> The last line doesn't really matter since req.status is set and headers
> already went out.
> 
> Grisha
> 
> On Tue, 17 Oct 2000, Geoff Cadien wrote:
> 
> > >From a PythonHandler I'm trying to set a cookie and then do a redirect
> > and it is not working.  I'm doing:
> >
> > req.headers_out['Set-Cookie']='key=value'
> > req.headers_out['location'] = 'http://localhost/index.html'
> > return apache.HTTP_MOVED_TEMPORARILY
> >
> > The problem seems to be that if I don't do req.send_http_header() the
> > Set-Cookie doesn't get sent so the cookie doesn't get set.  If I do call
> > req.send_http_header() the cookie does get set but it seems as though
> > two sets of headers are sent and the response code is 200.  Any ideas?
> >
> > Geoff Cadien
> > geoff@infostreet.com
> > _______________________________________________
> > Mod_python mailing list
> > Mod_python@modpython.org
> > http://www.modpython.org/mailman/listinfo/mod_python
> >

From grisha at ispol.com  Tue Oct 17 16:30:12 2000
From: grisha at ispol.com (Gregory Trubetskoy)
Date: Fri Jan  9 21:58:40 2004
Subject: [mod_python] Problem setting cookie and then redirecting
In-Reply-To: <39EC7C2D.F007C922@infostreet.com>
Message-ID: <Pine.LNX.4.21.0010171617090.579-100000@saturn.ispol.com>

Do this:

req.headers_out['Set-Cookie']='key=value'
req.headers_out['location'] = 'http://localhost/index.html'
req.status = apache.HTTP_MOVED_TEMPORARILY
req.send_http_header()
return apache.OK

The last line doesn't really matter since req.status is set and headers
already went out.
 
Grisha

On Tue, 17 Oct 2000, Geoff Cadien wrote:

> >From a PythonHandler I'm trying to set a cookie and then do a redirect
> and it is not working.  I'm doing:
> 
> req.headers_out['Set-Cookie']='key=value'
> req.headers_out['location'] = 'http://localhost/index.html'
> return apache.HTTP_MOVED_TEMPORARILY
> 
> The problem seems to be that if I don't do req.send_http_header() the
> Set-Cookie doesn't get sent so the cookie doesn't get set.  If I do call
> req.send_http_header() the cookie does get set but it seems as though
> two sets of headers are sent and the response code is 200.  Any ideas?
> 
> Geoff Cadien
> geoff@infostreet.com
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://www.modpython.org/mailman/listinfo/mod_python
> 


From grisha at ispol.com  Wed Oct 18 23:31:04 2000
From: grisha at ispol.com (Gregory Trubetskoy)
Date: Fri Jan  9 21:58:40 2004
Subject: [mod_python] [ANNOUNCE] Mod_python 2.6
Message-ID: <Pine.LNX.4.21.0010182330290.5966-100000@saturn.ispol.com>

Mod_python is an Apache module that embeds Python within the server. For
information on mod_python go to http://www.modpython.org/

Installation is now greatly simplified through the use of autoconf
(./configure). Some new features were added, a few bugs fixed,
documentation improved. Many changes under the hood, improving
performance, organizing better code.

Enjoy!

--
  Gregory (Grisha) Trubetskoy
       grisha@ispol.com



From miguel at yorku.ca  Thu Oct 19 15:08:15 2000
From: miguel at yorku.ca (Miguel Marques)
Date: Fri Jan  9 21:58:40 2004
Subject: [mod_python] retaining state between handlers
In-Reply-To: <Pine.LNX.4.21.0010022321510.12796-100000@saturn.ispol.com>
References: <Pine.LNX.4.21.0010022321510.12796-100000@saturn.ispol.com>
Message-ID: <20001019150815S.miguel@yorku.ca>

On Mon, 2 Oct 2000 23:26:40 -0400 (EDT), Gregory Trubetskoy <grisha@ispol.com> wrote:
> 
> For those of you handy with CVS - I've checked in the new version, where
> the request object is a real Python object (as opposed to a built-in),
> which you can modify.
> 
> This allows passing information between handlers by simply doing something
> like:
> 
> req.myvariable = "something"
> 
> in one handler and then using that value in another. 
> 
> Note that different subinterpreters will have different requests objects,
> even though the underlying built-in (now req._req) is still the same.
> 
> --
Was this included in 2.6?  I just tried to do this between my Access Handler and
my Handler and it didn't work.

						Miguel

C. Miguel Marques, York University, Computing & Network Services
e-mail: miguel@yorku.ca, voice: (416)736-2100x22684, fax: (416)736-5830

From rsalz at CaveoSystems.com  Fri Oct 20 12:05:23 2000
From: rsalz at CaveoSystems.com (rsalz@CaveoSystems.com)
Date: Fri Jan  9 21:58:40 2004
Subject: [mod_python] Must I configure apache first?
Message-ID: <200010201605.MAA30030@os390.caveosystems.com>

It's not convenient to disable 'make dependencies' I have to do this:
	ac_cv_path_MKDEP=/bin/echo ./configure ...flags...
I'd rather see "--without-mkdep" or some such flag.

The reason for not wanting mkdep is that it needs ap_config_pool.h or some
such file, and since I haven't yet configured apache I don't have that file.

I don't want to configure apache because mod_ssl wants to do some things,
and doing mod_python apache and mod_ssl is all getting me confused. :)
(I keep the unconfig'd sources in my CVS tree and do product builds
from those virgin sources on a couple of platforms.)

More importantly, I'd rather the mod_python sources were just inserted
into the Apache tree and built as part of building apache.  I.e., the old
way.

thanks.
	/r$

From rsalz at CaveoSystems.com  Fri Oct 20 13:07:25 2000
From: rsalz at CaveoSystems.com (rsalz@CaveoSystems.com)
Date: Fri Jan  9 21:58:40 2004
Subject: [mod_python] Error in install_static in Makefile.in
Message-ID: <200010201707.NAA05411@os390.caveosystems.com>

	$(INSTALL) src/libpython.a $(AP_SRC)/src/modules/python/libmod_python.a
				 I had to add these four characters^^^^


From grisha at ispol.com  Fri Oct 20 13:03:28 2000
From: grisha at ispol.com (Gregory Trubetskoy)
Date: Fri Jan  9 21:58:40 2004
Subject: [mod_python] Must I configure apache first?
In-Reply-To: <200010201605.MAA30030@os390.caveosystems.com>
Message-ID: <Pine.LNX.4.21.0010201255180.12128-100000@saturn.ispol.com>

But you have to have Apache configured. Things like file locations,
OS-specific headers, etc, are all not there before configuration. I think
the fact that it compiles and works for you with unconfigured Apache is
pure luck.

You should let SSL do its thing, then compile and install mod_python. Or
you can do it the other way around. There shouldn't be any problems with
that.

--
  Gregory (Grisha) Trubetskoy
       grisha@ispol.com

On Fri, 20 Oct 2000 rsalz@caveosystems.com wrote:

> It's not convenient to disable 'make dependencies' I have to do this:
> 	ac_cv_path_MKDEP=/bin/echo ./configure ...flags...
> I'd rather see "--without-mkdep" or some such flag.
> 
> The reason for not wanting mkdep is that it needs ap_config_pool.h or some
> such file, and since I haven't yet configured apache I don't have that file.
> 
> I don't want to configure apache because mod_ssl wants to do some things,
> and doing mod_python apache and mod_ssl is all getting me confused. :)
> (I keep the unconfig'd sources in my CVS tree and do product builds
> from those virgin sources on a couple of platforms.)
> 
> More importantly, I'd rather the mod_python sources were just inserted
> into the Apache tree and built as part of building apache.  I.e., the old
> way.
> 
> thanks.
> 	/r$
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://www.modpython.org/mailman/listinfo/mod_python
> 


From jj at echobridge.com  Fri Oct 20 12:35:40 2000
From: jj at echobridge.com (Shannon -jj Behrens)
Date: Fri Jan  9 21:58:40 2004
Subject: [mod_python] cgihandler module reloads
Message-ID: <39F09E8C.BFD7EFC@echobridge.com>

The cgihandler documenation states that:

"The cgihandler reloads the module for every hit. However, the modules
imported by the main module do not get reloaded. This is good for
performance, but if your CGI scripts relied on this functionality, they
will be broken."

Is there any way I can force it to reload the modules?  By the way, if
this is documented elsewhere, please send me there, and I'll stop
bugging you guys ;)

-jj

-- 
Using a program to write a program to test a program has high leverage.
Kernigan and Pike, "The Practice of Programming."

From grisha at ispol.com  Fri Oct 20 15:22:15 2000
From: grisha at ispol.com (Gregory Trubetskoy)
Date: Fri Jan  9 21:58:40 2004
Subject: [mod_python] cgihandler module reloads
In-Reply-To: <39F09E8C.BFD7EFC@echobridge.com>
Message-ID: <Pine.LNX.4.21.0010201520010.12793-100000@saturn.ispol.com>

On Fri, 20 Oct 2000, Shannon -jj Behrens wrote:

> Is there any way I can force it to reload the modules?  By the way, if
> this is documented elsewhere, please send me there, and I'll stop
> bugging you guys ;)

well... to change your script to have somthing like

import mymodule
mymodule = reload(mymodule)

is about your only option...

Grisha



From dave_lambert at ev1.net  Fri Oct 20 14:46:59 2000
From: dave_lambert at ev1.net (David Lambert)
Date: Fri Jan  9 21:58:40 2004
Subject: [mod_python] Problems building apache 1.3.14 with mod_python2.6
Message-ID: <39F0A133.AEE8F92F@ev1.net>

If I attempt to build a static version of mod_python2.6 with
apache1.3.14. I get the following error. The DSO version seems to build
fine.

Any ideas?

Thanks,

David Lambert.


===> src/modules/python
make[4]: *** No rule to make target `libmod_python.a', needed by `lib'. 
Stop.
make[3]: *** [all] Error 1
make[2]: *** [subdirs] Error 1
make[2]: Leaving directory `/home/dlambert/lawnet/apache_1.3.14/src'
make[1]: *** [build-std] Error 2
make[1]: Leaving directory `/home/dlambert/lawnet/apache_1.3.14'
make: *** [build] Error 2

From grisha at ispol.com  Sat Oct 21 16:52:08 2000
From: grisha at ispol.com (Gregory Trubetskoy)
Date: Fri Jan  9 21:58:40 2004
Subject: [mod_python] 2.6.1 is out
Message-ID: <Pine.LNX.4.21.0010211650430.16840-100000@saturn.ispol.com>

2.6.1 only fixes a coule of issues related installation on some
platforms.

Enjoy,

--
  Gregory (Grisha) Trubetskoy
       grisha@ispol.com


From grisha at ispol.com  Sun Oct 22 00:05:13 2000
From: grisha at ispol.com (Gregory Trubetskoy)
Date: Fri Jan  9 21:58:40 2004
Subject: [mod_python] 2.6.2
Message-ID: <Pine.LNX.4.21.0010220003220.17894-100000@saturn.ispol.com>

...Some more installation isues were found. So there is 2.6.2 now.

Particularly the problem about "openpty" should go away now. Also the "No
current thread state" issue at apache exit should now be resolved.

Grisha


From kitezh at dol.ru  Mon Oct 23 16:27:33 2000
From: kitezh at dol.ru (kitezh)
Date: Fri Jan  9 21:58:40 2004
Subject: [mod_python] mod_python don't work on NT4.0
Message-ID: <35279115345.20001023162733@dol.ru>

Hello mod,

- Apache 1.3.9
- WinNT 4 SP 4

I do as instruction says:
LoadModule python_module modules/mod_python.dll

At start Apache says:
:
Cannot load ....\mod_python.dll into server:

Help pls!

SY Kitezh



From evaamo at loquesea.com  Mon Oct 23 11:39:32 2000
From: evaamo at loquesea.com (Enrique Vaamonde)
Date: Fri Jan  9 21:58:40 2004
Subject: [mod_python] mod_python don't work on NT4.0
In-Reply-To: <35279115345.20001023162733@dol.ru>
Message-ID: <000301c03d07$70bf6230$41dea8c0@wormhole>

dumb question but...did you copy the mod_python.dll into your modules
directory in Apache?

-E

-----Original Message-----
From: mod_python-admin@modpython.org
[mailto:mod_python-admin@modpython.org]On Behalf Of kitezh
Sent: Monday, October 23, 2000 8:28 AM
To: mod_python@modpython.org
Subject: [mod_python] mod_python don't work on NT4.0


Hello mod,

- Apache 1.3.9
- WinNT 4 SP 4

I do as instruction says:
LoadModule python_module modules/mod_python.dll

At start Apache says:
:
Cannot load ....\mod_python.dll into server:

Help pls!

SY Kitezh


_______________________________________________
Mod_python mailing list
Mod_python@modpython.org
http://www.modpython.org/mailman/listinfo/mod_python


From sbi at acse.be  Mon Oct 23 18:28:23 2000
From: sbi at acse.be (Stephane Bidoul)
Date: Fri Jan  9 21:58:40 2004
Subject: [mod_python] mod_python don't work on NT4.0
References: <35279115345.20001023162733@dol.ru>
Message-ID: <006501c03d0e$43590d80$caa679c1@spirou>

What python version do you use?
mod_python.dll is for python 1.5.2 only at the moment
(just a matter of recompiling).

-sbi

----- Original Message -----
From: "kitezh" <kitezh@dol.ru>
To: <mod_python@modpython.org>
Sent: Monday, 23 October, 2000 14:27
Subject: [mod_python] mod_python don't work on NT4.0


> Hello mod,
>
> - Apache 1.3.9
> - WinNT 4 SP 4
>
> I do as instruction says:
> LoadModule python_module modules/mod_python.dll
>
> At start Apache says:
> :
> Cannot load ....\mod_python.dll into server:
>
> Help pls!
>
> SY Kitezh
>
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://www.modpython.org/mailman/listinfo/mod_python
>



From kitezh at dol.ru  Tue Oct 24 13:02:53 2000
From: kitezh at dol.ru (kitezh)
Date: Fri Jan  9 21:58:40 2004
Subject: [mod_python] mod_python don't work on NT4.0
In-Reply-To: <000301c03d07$70bf6230$41dea8c0@wormhole>
References: <000301c03d07$70bf6230$41dea8c0@wormhole>
Message-ID: <160353238871.20001024130253@dol.ru>

Hello Enrique,

???????????, 23 ??????? 2000 ?., you wrote to me:

EV> dumb question but...did you copy the mod_python.dll into your modules
EV> directory in Apache?
sure :)



Best regards,
 kitezh                            mailto:kitezh@dol.ru



From sbi at acse.be  Tue Oct 24 14:49:58 2000
From: sbi at acse.be (Stephane Bidoul)
Date: Fri Jan  9 21:58:40 2004
Subject: [mod_python] mod_python don't work on NT4.0
References: <35279115345.20001023162733@dol.ru> <006501c03d0e$43590d80$caa679c1@spirou> <174353632607.20001024130927@dol.ru>
Message-ID: <002101c03db8$ea838ae0$caa679c1@spirou>

>I use 1.5.2
>But where can I write a path to my Python directory?

You don't need to do that; python15.dll is in your windows/system32
directory.
However the mod_python,'s own .py package must be in your PYTHONPATH
(if your have a mod_python subdir in your python directory, it should be
ok).

If everything it's ok, you'll need to be more specific about your issue
(maybe try to start apache on the command line and look at
the messages there).

'hope this helps.

-Stephane




From rsalz at CaveoSystems.com  Tue Oct 24 10:16:26 2000
From: rsalz at CaveoSystems.com (rsalz@CaveoSystems.com)
Date: Fri Jan  9 21:58:41 2004
Subject: [mod_python] Replacement for libmod_python.module
Message-ID: <200010241416.KAA16356@os390.caveosystems.com>

I was trying to build a statically-linked Apache from
	Apache 1.3.14
	mod_ssl
	mod_python 2.6.2

After spending some time with Appendix C of "Writing Apache Modules with
Perl and C," I got something to work.  (Or at least compile.  Not done
much testing yet.)

First, I had to create my own libmod_python.module; the distribution
has a libpython.module.  I don't understand which name and why, but so
be it.  Next, the INCLUDES flag doesn't need to be there since there is no
compiling from source.  The LDFLAGS doesn't need to be there since Apache
has its own rules for figuring out how to link itself.  Finally the LIBS
line was wrong -- it needed to *add* to the LIBS variable, not replace it.

So, in my case, I ended up with the following libmod_python.module.
Since this is part of my nightly build script, and since I didn't want
to muck with mod_python sources (I hate CVS merging :), I just this:
	cd $APACHE
	rm src/modules/python/*.module
	cat <<'EOF' > src/modules/python/libmod_python.module
Name: python_module
ConfigStart
    LIBS="/usr/local/lib/python2.0/config/libpython2.0.a $LIBS -lpthread -ldl -l util -ldb"
ConfigEnd
EOF

I suppose the distribution's .in file could be
    Name: python_module
    ConfigStart
	LIBS="$LIBS @LIBS@"
    ConfigEnd
But I haven't tested that.

I would rather see mod_python just figure out the Python headers and
extra libraries and dump source into the Apache tree.  That way configure
wouldn't need to do or notice anything about Apache.  But this works.
On a related issue, I'd like to see the install target(s) split into
two parts -- one that requires root access (the .py files in site_config)
and one that doesn't.  This could be handled with a Makefile trick, if
it's important to preserve the current scheme.
	INSTALL_PY_LIB	= install_py_lib
		...
	@$(MAKE) $(INSTALL_PY_LIB)

	NO: ; @echo not installing .py files...

Then I could do
	make install INSTALL_PY_LIB=NO

Hope others find this useful.  Thanks to Grisha for putting up with my
email gripes.
	/r$

From jcea at argo.es  Tue Oct 24 17:29:15 2000
From: jcea at argo.es (Jesus Cea Avion)
Date: Fri Jan  9 21:58:41 2004
Subject: [mod_python] BUG compiling Python 2.0 with dinamic modules in Solaris, with GCC
Message-ID: <39F5AACB.1501EF5F@argo.es>

(I can't post the patch in sourceforge since the SSL login seems to be
down in the last three hours)

Python 2.0 (dinamic modules)
Mod_Python 2.6.2 (dinamic module)
GCC 2.95.2
Apache 1.3.14 (dinamic modules)
SunOS5 (Solaris 2.x)

I send the email also to "mod_python" mailing list since I detect the
problem using this package. Other developers could see the very same
problem!.


Mod_python runs smoothly until I do a "import zlib", for example, in a
handler. In this case, the request is aborted with the following log:

>>>>>
[Tue Oct 24 16:27:40 2000] [error] PythonHandler cache: Traceback (most
recent call last):
[Tue Oct 24 16:27:40 2000] [error] PythonHandler cache:   File
"/usr/local/lib/python2.0/site-packages/mod_python/apache.py", line 185,
in Dispatch
    result = object(self.req)
[Tue Oct 24 16:27:40 2000] [error] PythonHandler cache:   File
"/export/home/webmaster/www.argo.es/servicios/cache.py", line 47, in
handler
    exec(cache[f][1])
[Tue Oct 24 16:27:40 2000] [error] PythonHandler cache:   File
"/export/home/webmaster/www.argo.es/servicios/borra_email", line 183, in
?
    req2=wrap(req)
[Tue Oct 24 16:27:40 2000] [error] PythonHandler cache:   File
"/export/home/webmaster/www.argo.es/servicios/borra_email", line 159, in
__init__
    import zlib
[Tue Oct 24 16:27:40 2000] [error] PythonHandler cache: ImportError:
ld.so.1: /opt/local/apache/bin/httpd: fatal: relocation error: file
/usr/local/lib/python2.0/lib-dynload/zlibmodule.so: symbol main:
referenced symbol not found
<<<<<

That is, "zlibmodule.so" tries to link to a function called "main".

Doing a "nm object|grep main", I see the unresolved reference in
"zlibmodule.so", but not in "zlibmodule.o". So, the problem seems to be
the creation of the shared library.

I tracked down the problem to the "configure" script: "cc -G" is (I
think) the right thing to do to create a shared library if you are using
the Sun compiler, but if you are using GCC (like me), the right command
is "gcc -shared".

Patch for Python 2.0:

>>>>>
Index: configure
===================================================================
RCS file: /opt/src/cvsroot/python/configure,v
retrieving revision 1.1.1.2
retrieving revision 1.1.1.2.2.1
diff -c -r1.1.1.2 -r1.1.1.2.2.1
*** configure   2000/10/18 19:06:44     1.1.1.2
--- configure   2000/10/24 14:19:01     1.1.1.2.2.1
***************
*** 2650,2656 ****
        SunOS/4*) LDSHARED="ld";;
        SunOS/5*) 
                if test "$GCC" = "yes"
!               then LDSHARED='$(CC) -G'
                else LDSHARED="ld -G";
                fi ;;
        hp*|HP*) LDSHARED="ld -b";;
--- 2650,2656 ----
        SunOS/4*) LDSHARED="ld";;
        SunOS/5*) 
                if test "$GCC" = "yes"
!               then LDSHARED='$(CC) -shared'
                else LDSHARED="ld -G";
                fi ;;
        hp*|HP*) LDSHARED="ld -b";;
Index: configure.in
===================================================================
RCS file: /opt/src/cvsroot/python/configure.in,v
retrieving revision 1.1.1.2
retrieving revision 1.1.1.2.2.1
diff -c -r1.1.1.2 -r1.1.1.2.2.1
*** configure.in        2000/10/18 19:06:45     1.1.1.2
--- configure.in        2000/10/24 14:19:03     1.1.1.2.2.1
***************
*** 564,570 ****
        SunOS/4*) LDSHARED="ld";;
        SunOS/5*) 
                if test "$GCC" = "yes"
!               then LDSHARED='$(CC) -G'
                else LDSHARED="ld -G";
                fi ;;
        hp*|HP*) LDSHARED="ld -b";;
--- 564,570 ----
        SunOS/4*) LDSHARED="ld";;
        SunOS/5*) 
                if test "$GCC" = "yes"
!               then LDSHARED='$(CC) -shared'
                else LDSHARED="ld -G";
                fi ;;
        hp*|HP*) LDSHARED="ld -b";;
<<<<<

-- 
Jesus Cea Avion                         _/_/      _/_/_/        _/_/_/
jcea@argo.es http://www.argo.es/~jcea/ _/_/    _/_/  _/_/    _/_/  _/_/
                                      _/_/    _/_/          _/_/_/_/_/
PGP Key Available at KeyServ   _/_/  _/_/    _/_/          _/_/  _/_/
"Things are not so easy"      _/_/  _/_/    _/_/  _/_/    _/_/  _/_/
"My name is Dump, Core Dump"   _/_/_/        _/_/_/      _/_/  _/_/
"El amor es poner tu felicidad en la felicidad de otro" - Leibniz

From cameron at infostreet.com  Tue Oct 24 14:49:23 2000
From: cameron at infostreet.com (Cameron La Rue)
Date: Fri Jan  9 21:58:41 2004
Subject: [mod_python] bug in PythonAuthenHandler?
Message-ID: <39F603E3.A38CBBD0@infostreet.com>

Hi all,
        I'm having trouble with an authentication script using
PythonAuthenHandler. First of all, we're running RedHat Linux 6.2,
Apache 1.3.9, mod_python 2.5, and python 1.5.2.

In my httpd.conf, I have the following:
#-------------------------------------------
AddHandler python-program .py
PythonHandler base2
<Location /test_enduser>
   AuthType auth
   AuthName PythonHosting
   AddHandler python-program .py
   PythonAuthenHandler base2::authenticate
   require valid-user
</Location>
#-------------------------------------------


I've got a script, base2.py, that looks like this:
#-------------------------------------------
def authenticate(req):
    e, si, so = apache.setup_cgi(req)
    apache.restore_nocgi(e, si, so)
    apache.log_error('here we are')
    return apache.OK

def handler(req):
    apache.log_error('handler works')
    e, si, so = apache.setup_cgi(req)
    apache.restore_nocgi(e, si, so)
    return apache.OK
#-------------------------------------------

Finally, I have an html page (test.html) that looks like this:
#-------------------------------------------
<html>
<body>
<a href='/test_enduser/enduser.html'>go man</a>
</body>
</html>
#-------------------------------------------

I am running apache in single process mode, like so:
/infostreet/apache/bin/httpd -X -f
~/projects/_current_/apache/httpd.conf

If I click the "go man" link in test.html, the base2::authenticate
method is called, and I am allowed to access /test_enduser/enduser.html.
Then, I click the back button on my browser. I click the "go man" link a
second time, base2:authenticate is called again, and apache segfaults.
It does print 'here we are' in the error log, so it gets that far.

I also noticed something else. If, after starting apache, I first access
a python script using PythonHandler, I can then access the
PythonAuthenHandler as many times as I want without apache segfaulting.
Is this a bug in the PythonAuthenHandler? Thanks in advance...

Cameron

From kitezh at dol.ru  Wed Oct 25 13:57:29 2000
From: kitezh at dol.ru (kitezh)
Date: Fri Jan  9 21:58:41 2004
Subject: [mod_python] mod_python don't work on NT4.0
In-Reply-To: <002101c03db8$ea838ae0$caa679c1@spirou>
References: <35279115345.20001023162733@dol.ru>
 <006501c03d0e$43590d80$caa679c1@spirou> <174353632607.20001024130927@dol.ru>
 <002101c03db8$ea838ae0$caa679c1@spirou>
Message-ID: <1727260936.20001025135729@dol.ru>

Hello Stephane,

???????, 24 ??????? 2000 ?., you wrote to me:

SB> You don't need to do that; python15.dll is in your windows/system32
SB> directory.
SB> However the mod_python,'s own .py package must be in your PYTHONPATH
SB> (if your have a mod_python subdir in your python directory, it should be
SB> ok).

SB> If everything it's ok, you'll need to be more specific about your issue
SB> (maybe try to start apache on the command line and look at
SB> the messages there).
More specific:
Error when starting from command line:
Syntax error on line 176 of c:/program files/apache group/apache/conf/httpd.conf
:
Cannot load c:/program files/apache group/apache/modules/mod_python.dll into ser
ver:

Error when starting from Services:
The application or DLL c:\program files\apache group\apache\mod_python.dll
is not a valid Windows NT image. Please chek this against your
installation diskette.


Best regards,
 kitezh                            mailto:kitezh@dol.ru



From mtiwari0 at cs.sc.edu  Thu Oct 26 12:44:53 2000
From: mtiwari0 at cs.sc.edu (Mayank Tiwari)
Date: Fri Jan  9 21:58:41 2004
Subject: [mod_python] make_obcallback returned no obCallBack!
Message-ID: <4.1.20001026124002.00a91c60@usceast.cs.sc.edu>

greetings all,

I am new to python, I tried to configure mod_python and ran into problems : 
here are the specifics:

Apache version : 1.3.12 Win32
Python 	: 1.52
mod_python 	:2.6.2

when ever i try to test the installation by the following python prog (
test.py) it doesn't work and the following error is generated ( from apache
errorlog)

[Thu Oct 26 12:34:20 2000] [error] [client xxx.xxx.xxx.xxx] python_handler:
make_obcallback returned no obCallBack!

(* i cahnged the ipaddress to x's )

Any help would be most appreciated. 

	-Mayank
Q.) God.. root.. What's the difference?       
A.) God is forgiving...


From mtiwari0 at cs.sc.edu  Thu Oct 26 12:47:27 2000
From: mtiwari0 at cs.sc.edu (Mayank Tiwari)
Date: Fri Jan  9 21:58:41 2004
Subject: [mod_python] make_obcallback returned no obCallBack!
Message-ID: <4.1.20001026124617.00a90b20@usceast.cs.sc.edu>

i forgot test .py... here it is


from mod_python import apache
def handler(req):
  req.content_type = "text/plain" 
  req.send_http_header()
  req.write("Hello World!")
  return apache.OK
  
I believe i have not missed nay required info, if i did, kindly poitn out.

	-mayank     
Q.) God.. root.. What's the difference?       
A.) God is forgiving...


From arhiv at freemail.org.mk  Fri Oct 27 16:32:21 2000
From: arhiv at freemail.org.mk (Damjan)
Date: Fri Jan  9 21:58:41 2004
Subject: [mod_python] make_obcallback returned no obCallBack!
In-Reply-To: <4.1.20001026124617.00a90b20@usceast.cs.sc.edu>
Message-ID: <Pine.LNX.4.21.0010271631080.1224-100000@localhost.localdomain>

> i forgot test .py... here it is

Try renaming 'test.pu' to something else, 
there already is a test package in Python.


-- 
Damjan Georgievski		|           ?????? ???????????
Skopje, Macedonia		|           ??????, ??????????


From grisha at ispol.com  Fri Oct 27 20:48:50 2000
From: grisha at ispol.com (Gregory Trubetskoy)
Date: Fri Jan  9 21:58:41 2004
Subject: [mod_python] Replacement for libmod_python.module
In-Reply-To: <200010241416.KAA16356@os390.caveosystems.com>
Message-ID: <Pine.LNX.4.21.0010272048050.17916-100000@saturn.ispol.com>

Exactly. this will be fixed in the next release.

On Tue, 24 Oct 2000 rsalz@caveosystems.com wrote:

> I suppose the distribution's .in file could be
>     Name: python_module
>     ConfigStart
> 	LIBS="$LIBS @LIBS@"
>     ConfigEnd


From grisha at ispol.com  Fri Oct 27 20:57:35 2000
From: grisha at ispol.com (Gregory Trubetskoy)
Date: Fri Jan  9 21:58:41 2004
Subject: [mod_python] make_obcallback returned no obCallBack!
In-Reply-To: <4.1.20001026124002.00a91c60@usceast.cs.sc.edu>
Message-ID: <Pine.LNX.4.21.0010272052590.18103-100000@saturn.ispol.com>

This error is ususally caused by the mod_python package not being in the
pythonpath of the Apache process.

There is a typo in the windows installation instructions:

 Move the files in the folder lib inside the mod_python folder (C:\Program
 Files\Python\lib\mod_python-2.x\lib\mod_python ) to the C:\Program
 Files\Python\lib\mod_python-2.x folder. 
                            ^^^^

The target should really just be "C:\Program
Files\Python\lib\mod_python". This could be the source fo your problem.

--
  Gregory (Grisha) Trubetskoy
       grisha@ispol.com

On Thu, 26 Oct 2000, Mayank Tiwari wrote:

> greetings all,
> 
> I am new to python, I tried to configure mod_python and ran into problems : 
> here are the specifics:
> 
> Apache version : 1.3.12 Win32
> Python 	: 1.52
> mod_python 	:2.6.2
> 
> when ever i try to test the installation by the following python prog (
> test.py) it doesn't work and the following error is generated ( from apache
> errorlog)
> 
> [Thu Oct 26 12:34:20 2000] [error] [client xxx.xxx.xxx.xxx] python_handler:
> make_obcallback returned no obCallBack!
> 
> (* i cahnged the ipaddress to x's )
> 
> Any help would be most appreciated. 
> 
> 	-Mayank
> Q.) God.. root.. What's the difference?       
> A.) God is forgiving...
> 
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://www.modpython.org/mailman/listinfo/mod_python
> 


From aiglauer at iname.com  Sun Oct 29 13:43:21 2000
From: aiglauer at iname.com (Alexis Iglauer)
Date: Fri Jan  9 21:58:41 2004
Subject: [mod_python] Output from C functions
Message-ID: <007c01c041a5$d213dbe0$0401a8c0@iglauer.UUCP>

I am running a long calculation using a web interface, and am having the
problem that the web client times out before the results come back.  I fixed
this by first printing a valid HTTP header and then having the Python script
print a counter, which the web browser picks up and prints - and then
doesn't time out.  Works very well.

BUT - I have now recoded the central calculation routine in C (all the
control/UI stuff is still Python), and placed a printf routine in there to
output the iterations like I did in the Python, but it doesn't get to the
webbrowser.  Any ideas why?  It prints to stdout if I just run the script
from the console, but not if I call it from apache.  Is there some buffering
when calling a C routine?

I am using mod_python 2.6.2 and I wrapped the C function using SWIG.

Grateful for any pointers.

Thanks
Alexis


From jwseo at philemon.co.kr  Mon Oct 30 04:38:12 2000
From: jwseo at philemon.co.kr (Seo jun won)
Date: Fri Jan  9 21:58:41 2004
Subject: [mod_python] =?euc-kr?B?SSBkb24ndCBrbm93IG1vZF9weXRob24gc3R5bGUgcHJvZ3JhbW1pbmcu?=
Message-ID: <20001030.AAA972848292@philemon.co.kr>

Skipped content of type multipart/alternative
From grisha at ispol.com  Sun Oct 29 17:30:43 2000
From: grisha at ispol.com (Gregory Trubetskoy)
Date: Fri Jan  9 21:58:41 2004
Subject: [mod_python] Output from C functions
In-Reply-To: <007c01c041a5$d213dbe0$0401a8c0@iglauer.UUCP>
Message-ID: <Pine.LNX.4.21.0010291725420.1950-100000@saturn.ispol.com>


The cgihandler redirects the sys.stdout to the client. Anything that uses
the real (non python) stdout will just print somewhere just like you
describe.

If you want to do this in C, you should use the req.write function. Here
is what a handler written in C might look like (skipping all the regular
python module stuff. Kids don't try this at home):

#include mod_python.h

static PyObject * handler(PyObject *self, PyObject *args)
{
	PyObject *r;
	requestobject *req = NULL;

	if (!PyArg_ParseTuple(args, "O", &r))
	    return NULL;

	req = (requestobject *)PyObject_GetAttrString(r, "_req");

	ap_send_http_header(req->request_rec);
	req->header_sent = 1;

	ap_table_set(req->request_rec->headers_out, "content-type", 
		     "text/plain");

	PyObject_CallMethod((PyObject *)req, "write", "s", "Hello World!\n");
	
	return PyInt_FromLong(OK);
}


--
  Gregory (Grisha) Trubetskoy
       grisha@ispol.com

On Sun, 29 Oct 2000, Alexis Iglauer wrote:

> I am running a long calculation using a web interface, and am having the
> problem that the web client times out before the results come back.  I fixed
> this by first printing a valid HTTP header and then having the Python script
> print a counter, which the web browser picks up and prints - and then
> doesn't time out.  Works very well.
> 
> BUT - I have now recoded the central calculation routine in C (all the
> control/UI stuff is still Python), and placed a printf routine in there to
> output the iterations like I did in the Python, but it doesn't get to the
> webbrowser.  Any ideas why?  It prints to stdout if I just run the script
> from the console, but not if I call it from apache.  Is there some buffering
> when calling a C routine?
> 
> I am using mod_python 2.6.2 and I wrapped the C function using SWIG.
> 
> Grateful for any pointers.
> 
> Thanks
> Alexis
> 
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://www.modpython.org/mailman/listinfo/mod_python
> 


From aiglauer at iname.com  Mon Oct 30 00:43:49 2000
From: aiglauer at iname.com (Alexis Iglauer)
Date: Fri Jan  9 21:58:41 2004
Subject: [mod_python] Output from C functions
References: <Pine.LNX.4.21.0010291725420.1950-100000@saturn.ispol.com>
Message-ID: <013501c04202$50e497a0$0401a8c0@iglauer.UUCP>

I'm doing this from inside a cgi script, would that make the solution any
easier?  Seems like a mightily complex way to do a printf :)  I would like
to stay entirely inside C for my loop, for speed purposes.  Can I maybe pass
the file handle of stdout to my function and then write to that?

aei
----- Original Message -----
From: "Gregory Trubetskoy" <grisha@ispol.com>
To: "Alexis Iglauer" <aiglauer@iname.com>
Cc: <mod_python@modpython.org>
Sent: Sunday, October 29, 2000 11:30 PM
Subject: Re: [mod_python] Output from C functions


>
>
> The cgihandler redirects the sys.stdout to the client. Anything that uses
> the real (non python) stdout will just print somewhere just like you
> describe.
>
> If you want to do this in C, you should use the req.write function. Here
> is what a handler written in C might look like (skipping all the regular
> python module stuff. Kids don't try this at home):
>
> #include mod_python.h
>
> static PyObject * handler(PyObject *self, PyObject *args)
> {
> PyObject *r;
> requestobject *req = NULL;
>
> if (!PyArg_ParseTuple(args, "O", &r))
>     return NULL;
>
> req = (requestobject *)PyObject_GetAttrString(r, "_req");
>
> ap_send_http_header(req->request_rec);
> req->header_sent = 1;
>
> ap_table_set(req->request_rec->headers_out, "content-type",
>      "text/plain");
>
> PyObject_CallMethod((PyObject *)req, "write", "s", "Hello World!\n");
>
> return PyInt_FromLong(OK);
> }
>
>
> --
>   Gregory (Grisha) Trubetskoy
>        grisha@ispol.com
>
> On Sun, 29 Oct 2000, Alexis Iglauer wrote:
>
> > I am running a long calculation using a web interface, and am having the
> > problem that the web client times out before the results come back.  I
fixed
> > this by first printing a valid HTTP header and then having the Python
script
> > print a counter, which the web browser picks up and prints - and then
> > doesn't time out.  Works very well.
> >
> > BUT - I have now recoded the central calculation routine in C (all the
> > control/UI stuff is still Python), and placed a printf routine in there
to
> > output the iterations like I did in the Python, but it doesn't get to
the
> > webbrowser.  Any ideas why?  It prints to stdout if I just run the
script
> > from the console, but not if I call it from apache.  Is there some
buffering
> > when calling a C routine?
> >
> > I am using mod_python 2.6.2 and I wrapped the C function using SWIG.
> >
> > Grateful for any pointers.
> >
> > Thanks
> > Alexis
> >
> > _______________________________________________
> > Mod_python mailing list
> > Mod_python@modpython.org
> > http://www.modpython.org/mailman/listinfo/mod_python
> >
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://www.modpython.org/mailman/listinfo/mod_python


From grisha at ispol.com  Sun Oct 29 21:12:49 2000
From: grisha at ispol.com (Gregory Trubetskoy)
Date: Fri Jan  9 21:58:41 2004
Subject: [mod_python] Output from C functions
In-Reply-To: <013501c04202$50e497a0$0401a8c0@iglauer.UUCP>
Message-ID: <Pine.LNX.4.21.0010292046530.2437-100000@saturn.ispol.com>

On Mon, 30 Oct 2000, Alexis Iglauer wrote:

> I'm doing this from inside a cgi script, would that make the solution any
> easier?  Seems like a mightily complex way to do a printf :)  

Actually, the CGI "printf" results into something that is indeed fairly
complex - there is at least three layers of networking protocols
underneath it.

> I would like to stay entirely inside C for my loop, for speed
> purposes.  Can I maybe pass the file handle of stdout to my function
> and then write to that?

Well, not really. That stdout is not a C file handle, nor does it contain
a reference to one. It's a Python object that implements the Python file
interface, that's all.

I think your problem is thinking in terms of CGI. If you are after speed,
then CGI is hardly the answer anyway. If I were you, I would start getting
confortable with the idea of abandoning the cute CGI printf way of
outputting things. ;-)

HTH -

Grisha



From aiglauer at yahoo.com  Mon Oct 30 00:40:46 2000
From: aiglauer at yahoo.com (Alexis Iglauer)
Date: Fri Jan  9 21:58:41 2004
Subject: [mod_python] Output from C functions
Message-ID: <20001030084046.21028.qmail@web2202.mail.yahoo.com>

> I think your problem is thinking in terms of CGI. If
> you are after speed,
> then CGI is hardly the answer anyway. If I were you,
> I would start getting
> confortable with the idea of abandoning the cute CGI
> printf way of
> outputting things. ;-)

I know, I know - and I am busy writing another app by
implementing my own handler, but after reading the
above sentence I am now no longer sure that I am doing
the right thing there.  I am essentially creating my
webpage dynamically by doing a whole bunch of
req.write('<Stick HTML in here>') calls.  Is this
efficient, and if not, what is?

My calculation app will be rewritten as a handler
sometime soon, but I think I will still have the same
problem - how do I output to the web client (or find
another way to keep the web client's attention) from
inside my speed-optimised C loop?

> 
> HTH -

Grisha,  if MS help were 1% as effective as yours,
Linux wouldn't be where it is today.

Regards
Alexis

> 
> Grisha




__________________________________________________
Do You Yahoo!?
Yahoo! Messenger - Talk while you surf!  It's FREE.
http://im.yahoo.com/

From grisha at ispol.com  Mon Oct 30 09:56:54 2000
From: grisha at ispol.com (Gregory Trubetskoy)
Date: Fri Jan  9 21:58:41 2004
Subject: [mod_python] Output from C functions
In-Reply-To: <20001030084046.21028.qmail@web2202.mail.yahoo.com>
Message-ID: <Pine.LNX.4.21.0010300955010.4713-100000@saturn.ispol.com>

On Mon, 30 Oct 2000, Alexis Iglauer wrote:

> > I think your problem is thinking in terms of CGI. If
> > you are after speed,
> > then CGI is hardly the answer anyway. If I were you,
> > I would start getting
> > confortable with the idea of abandoning the cute CGI
> > printf way of
> > outputting things. ;-)
> 
> I know, I know - and I am busy writing another app by
> implementing my own handler, but after reading the
> above sentence I am now no longer sure that I am doing
> the right thing there.  I am essentially creating my
> webpage dynamically by doing a whole bunch of
> req.write('<Stick HTML in here>') calls.  Is this
> efficient, and if not, what is?

Yes, very efficient.

> My calculation app will be rewritten as a handler
> sometime soon, but I think I will still have the same
> problem - how do I output to the web client (or find
> another way to keep the web client's attention) from
> inside my speed-optimised C loop?

You use the same req.write function except you call it from C (see the
code I sent in previous e-mail), or you can study the req.write() code and
use the Apache calls directly.

Grisha


From jwseo at ns.philemon.co.kr  Mon Oct 30 23:24:02 2000
From: jwseo at ns.philemon.co.kr (Seo jun won)
Date: Fri Jan  9 21:58:41 2004
Subject: [mod_python] I don't know mod_python style programming.
Message-ID: <Pine.LNX.4.21.0010302321490.27003-100000@ns.philemon.co.kr>

I'm a mod_python beginner. 
Supposing that I'll make web bbsboard using mod_python. 
Maybe, general Web bbsboard is consist of post, delete, reply.. etc
function. 
Following my handler example. 
-------------------- 
def handler(req): 
  if req.uri == 'post.py': 
    import post 
    mypost = post.postclass 
    mypost.post(some data) 
            . 
            . 
  elif req.uri == 'delete.py': 
    import delete 
    mydelete = delete.deleteclass 
            . 
            . 
            . 
  return apache.OK 
------------------- 
expatiation) Each post.py, delete.py are my definition class module. 

Is my handler's source mod_python style? 

Addition, 
If It's be right, my dbconnection clause('import mysqldb') that where
locate in? 

Thanks 
I'm using




From jjp at connix.com  Tue Oct 31 11:21:11 2000
From: jjp at connix.com (John Posner)
Date: Fri Jan  9 21:58:41 2004
Subject: [mod_python] need Windows version of mod_python compiled for extended API
Message-ID: <003101c04356$96fcc410$6e64fea9@jake>

On Windows NT 4.0 SP6, I'm trying to use mod_python.dll according to the
standard installation instructions. When I start Apache, I get this console
message:


  Loaded DSO modules/mod_python uses plain Apache 1.3 API,
  this module might crash under EAPI! (please recompile it with -DEAPI)

  Apache/1.3.12 (Win32) mod_python/2.6 Python/1.5.2 mod_perl/1.23 running...

I don't have an Apache development environment set up, so it would be great
to get a version of mod_python.dll compiled with -DEAPI, as suggested in the
message.

Tx,
John

--
John Posner, Editor           jjp@oreilly.com
O'Reilly & Associates         860-663-3147


From grisha at ispol.com  Mon Oct  2 23:26:40 2000
From: grisha at ispol.com (Gregory Trubetskoy)
Date: Fri Jan  9 22:02:28 2004
Subject: [mod_python] retaining state between handlers
Message-ID: <Pine.LNX.4.21.0010022321510.12796-100000@saturn.ispol.com>

For those of you handy with CVS - I've checked in the new version, where
the request object is a real Python object (as opposed to a built-in),
which you can modify.

This allows passing information between handlers by simply doing something
like:

req.myvariable = "something"

in one handler and then using that value in another. 

Note that different subinterpreters will have different requests objects,
even though the underlying built-in (now req._req) is still the same.

--
  Gregory (Grisha) Trubetskoy
       grisha@ispol.com


From bmueller at creotech.com  Tue Oct  3 03:18:07 2000
From: bmueller at creotech.com (Brian Mueller)
Date: Fri Jan  9 22:02:28 2004
Subject: [mod_python] Apache 1.3.12 + mod_python + ??? = segfault
Message-ID: <003101c02d23$3a1ba750$0100a8c0@darkstar>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

Hello,

Recently I installed mod_python on my Apache 1.3.12 setup:

- -----

[root@shiva speedy]# httpd -l
Compiled-in modules:
  http_core.c
  mod_so.c
suexec: enabled; valid wrapper /usr/sbin/suexec
[root@shiva speedy]# httpd -v
Server version: Apache-AdvancedExtranetServer/1.3.12
(NetRevolution/Linux-Mandrake)
Server build: May 8 2000 04:59:44
Performance Tuned by SGI http://www.sgi.com/

- -----

Once I installed it I placed the LoadModule and AddModule at the top of
their respective sections within the httpd.conf file.  I reloaded apache
and checked the error log and the output was as follows:

[Sun Oct  1 04:02:02 2000] [notice] Apache-AdvancedExtranetServer/1.3.12 
(NetRevolution/Linux-Mandrake) mod_ssl/2.6.4 OpenSSL/0.9.5a mod_perl/1.22
mod_python/2.4.1 Python/1.5.2 configured -- resuming normal operations
[Sun Oct  1 04:02:02 2000] [notice] suEXEC mechanism enabled (wrapper:
/usr/sbin/suexec)

- -----


all was well, then I installed the following items.

CURL
PSPELL
mhash 0.8.2
mcrypt 2.5.4
libmcrypt 2.4.4
mcal
php4 4.0.2 (with the above supported + mySQL and PostrgreSQL support)

Once I did this I added the php4 stuff to the httpd.conf file and attempted
to restart.  Nothing happened, httpd -X shows a segmentation fault (core
dumped).  I removed php4 from my httpd.conf file and tried again with the
same results.  I readded php4 to my httpd.conf file and commented out the
mod_python references and now it works, though without mod_python.  

I am hoping that someone can shed some light on this as it appears that
something I installed above has caused mod_python to cease working.  Here
is my most recent error_log entry from after I removed mod_python

- -----

[Tue Oct  3 02:36:38 2000] [notice] Apache-AdvancedExtranetServer/1.3.12 
(NetRevolution/Linux-Mandrake) mod_ssl/2.6.4 OpenSSL/0.9.5a mod_perl/1.22
PHP/4.0.2 configured -- resuming normal operations
[Tue Oct  3 02:36:38 2000] [notice] suEXEC mechanism enabled (wrapper:
/usr/sbin/suexec)

- -----

and here is relavent sections from my httpd.conf file.

- -----

##
## httpd.conf -- Apache HTTP server configuration file
##
# This is the main server configuration file. See URL
http://www.apache.org/
# for instructions.
# Do NOT simply read the instructions in here without understanding
# what they do, if you are unsure consult the online docs. You have been
# warned.  
# Originally by Rob McCool
#---------------------- Use *ONLY* httpd.conf ---------------------------
#
# With all new apache versions, use of access.conf and srm.conf are
# deprecated. We only use httpd.conf.
#
# These 2 directives are needed by some modules, for example FrontPage

#ResourceConfig /dev/null
#AccessConfig /dev/null

#---------------- Dynamic Shared Object (DSO) Support ---------------------
#
# To be able to use the functionality of a module which was built as a DSO
you
# have to place corresponding `LoadModule' lines at this location so the
# directives contained in it are actually available _before_ they are used.
# Please read the file README.DSO in the Apache 1.3 distribution for more
# details about the DSO mechanism and run `httpd -l' for the list of
already
# built-in (statically linked and thus always available) modules in your
httpd
# binary.
#
# Example:
# LoadModule foo_module libexec/mod_foo.so
#
# Documentation for modules is in "/home/httpd/manual/mod" in HTML format.

#LoadModule mmap_static_module modules/mod_mmap_static.so
#LoadModule python_module        modules/mod_python.so
LoadModule env_module         modules/mod_env.so
LoadModule config_log_module  modules/mod_log_config.so
LoadModule agent_log_module   modules/mod_log_agent.so
LoadModule referer_log_module modules/mod_log_referer.so
#LoadModule mime_magic_module  modules/mod_mime_magic.so
LoadModule mime_module        modules/mod_mime.so
LoadModule negotiation_module modules/mod_negotiation.so
LoadModule status_module      modules/mod_status.so
LoadModule info_module        modules/mod_info.so

### You have the choice between mod_include and mod_include_xssi
### Choose only one! mod_include is more secure, while 
### the xssi module has a lot more features
LoadModule includes_module    modules/mod_include.so
#LoadModule includes_module    modules/mod_include_xssi.so

LoadModule autoindex_module   modules/mod_autoindex.so
LoadModule dir_module         modules/mod_dir.so
LoadModule cgi_module         modules/mod_cgi.so
LoadModule asis_module        modules/mod_asis.so
LoadModule imap_module        modules/mod_imap.so
LoadModule action_module      modules/mod_actions.so
#LoadModule speling_module     modules/mod_speling.so
LoadModule userdir_module     modules/mod_userdir.so
LoadModule proxy_module       modules/libproxy.so
LoadModule alias_module       modules/mod_alias.so
LoadModule rewrite_module     modules/mod_rewrite.so
LoadModule access_module      modules/mod_access.so
LoadModule auth_module        modules/mod_auth.so
LoadModule anon_auth_module   modules/mod_auth_anon.so
#LoadModule dbm_auth_module    modules/mod_auth_dbm.so
#LoadModule db_auth_module     modules/mod_auth_db.so
LoadModule digest_module      modules/mod_digest.so
#LoadModule cern_meta_module   modules/mod_cern_meta.so
LoadModule expires_module     modules/mod_expires.so
LoadModule headers_module     modules/mod_headers.so
LoadModule usertrack_module   modules/mod_usertrack.so
#LoadModule example_module     modules/mod_example.so
#LoadModule unique_id_module   modules/mod_unique_id.so
LoadModule setenvif_module    modules/mod_setenvif.so

#  Reconstruction of the complete module list from all available modules
#  (static and shared ones) to achieve correct module execution order.
#  [WHENEVER YOU CHANGE THE LOADMODULE SECTION ABOVE UPDATE THIS, TOO]
ClearModuleList
#AddModule mod_mmap_static.c
#AddModule mod_python.c
AddModule mod_env.c
AddModule mod_log_config.c
AddModule mod_log_agent.c
AddModule mod_log_referer.c
#AddModule mod_mime_magic.c
AddModule mod_mime.c
AddModule mod_negotiation.c
AddModule mod_status.c
AddModule mod_info.c
AddModule mod_include.c
#AdModule mod_include_xssi.c
AddModule mod_autoindex.c
AddModule mod_dir.c
AddModule mod_cgi.c
AddModule mod_asis.c
AddModule mod_imap.c
AddModule mod_actions.c
#AddModule mod_speling.c
AddModule mod_userdir.c
AddModule mod_proxy.c
AddModule mod_alias.c
AddModule mod_rewrite.c
AddModule mod_access.c
AddModule mod_auth.c
AddModule mod_auth_anon.c
#AddModule mod_auth_dbm.c
#AddModule mod_auth_db.c
AddModule mod_digest.c
#AddModule mod_cern_meta.c
AddModule mod_expires.c
AddModule mod_headers.c
AddModule mod_usertrack.c
#AddModule mod_example.c
#AddModule mod_unique_id.c
AddModule mod_so.c
AddModule mod_setenvif.c




####################################
# Add-on Modules and Virtual Hosts #
####################################
#
# Each time we install an add-on module , the post-install script of the
RPM
# adds an "Include" line to read the configuration for that module. When we
# remove the module, we keep the Include line, but we zero out the config 
# file so Apache doesn't complain.
#
# We also put virtual hosts "Includes" in this section. This will be used
by
# administration scripts. Instead of parsing all httpd.conf to modify a
# vhost, we just include the config file. Each type of vhosting has its own
# config file.
#

Include conf/vhosts/Vhosts.conf

Include conf/addon-modules/mod_php4.conf
Include conf/addon-modules/mod_perl.conf
Include conf/ssl/mod_ssl.conf
Include conf/ssl/ssl.default-vhost.conf

- -----

This is in it's currently usable format with mod_python commented out.

Any help would be most appreciated as we had expected to have this new
server online by the end of October.

Thank you,

Brian Mueller


==============================================================
Brian R. Mueller          President and CEO
  CreoTech                "We are the future"

WEB: www.creotech.com     EMAIL: bmueller@creotech.com
PHONE: 513.722.8645       TOLL FREE: 800-972-5290
MOBILE: 513.258.9614      FAX: 419.735.7405
ICQ: 63821393             ICQ Pager: 63821393@pager.icq.com
WIRELESS WEB PAGING: 5132589614@messaging.sprintpcs.com

PGP Key available at http://www.creotech.com/pgp/bmueller.asc
fingerprint:
9AEE DE48 5D4A 1814 996A
5EAA 315B FF76 30CC 159B
ID: 0xF19B87E8

Network Development & Design,
Custom Programming for the desktop and the web
Traditional Print Media, CD-ROM Prototyping - more
==============================================================

-----BEGIN PGP SIGNATURE-----
Version: 6.5.1ckt http://irfaiad.virtualave.net/
Comment: KeyID: 0x315BFF7630CC159B
Comment: Fingerprint: 9AEE DE48 5D4A 1814 996A  5EAA 315B FF76 30CC 159B

iQA/AwUBOdmyXjFb/3YwzBWbEQLfJACgpiQHWdEVTrBztyvZMe/QQhuEU4QAnRcl
qaLUz5eMBrawOVx7jXhiuLWL
=ljD8
-----END PGP SIGNATURE-----



From jeff.schenk at continuumnetworks.com  Wed Oct  4 10:13:59 2000
From: jeff.schenk at continuumnetworks.com (Jeff Schenk)
Date: Fri Jan  9 22:02:28 2004
Subject: [mod_python] Issue with mod_python Fatal Python error
Message-ID: <NEBBKNHPCLJIOJCKGBCIGEIHCCAA.Jeff.Schenk@continuumnetworks.com>

I have built mod_python and configured and made apache, the apache server
comes up fine, however I see several
Fatal Python error: PyThreadState_Get: no current thread

Messages in my error_log file.  Also, when I stop apache it cores.

I am running apache 1.3.12, mod_ssl 2.6.5.1.3.12, mod_perl 1.24 and
mod_python 2.5
I performed a static build.

Please advise, if anyone has suggestions or has run into this problem.

Thanks,
Jeff Schenk
Continuum Networks
Chief Architect of Software Development
805-927-3886

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mailman.modpython.org/pipermail/mod_python/attachments/20001004/e1a5815e/attachment-0003.htm
From miguel at yorku.ca  Wed Oct  4 14:19:15 2000
From: miguel at yorku.ca (Miguel Marques)
Date: Fri Jan  9 22:02:28 2004
Subject: [mod_python] Issue with mod_python Fatal Python error
In-Reply-To: <NEBBKNHPCLJIOJCKGBCIGEIHCCAA.Jeff.Schenk@continuumnetworks.com>
References: <NEBBKNHPCLJIOJCKGBCIGEIHCCAA.Jeff.Schenk@continuumnetworks.com>
Message-ID: <20001004141915N.miguel@yorku.ca>

On Wed, 4 Oct 2000 10:13:59 -0700, "Jeff Schenk" <jeff.schenk@continuumnetworks.com> wrote:
> I have built mod_python and configured and made apache, the apache server
> comes up fine, however I see several
> Fatal Python error: PyThreadState_Get: no current thread
> 
> Messages in my error_log file.  Also, when I stop apache it cores.
> 
> I am running apache 1.3.12, mod_ssl 2.6.5.1.3.12, mod_perl 1.24 and
> mod_python 2.5
> I performed a static build.
> 
> Please advise, if anyone has suggestions or has run into this problem.

I have no suggestion but I'm also experiencing this problem.
Occasionally I see all of apache's children core dump after those
messages.

I've seen the same problem (error message) mentioned in relation to an
earlier version of wxPython.

I'm running SunOS 5.7 with Apache/1.3.12, mod_python/2.5 and
Python/1.5.2 (happens with python 1.6 too).  mod_python is compiled as
a DSO.
A friend of mine mentioned that he has seen the same messages under
Debian as well but I'm not sure of his versions.

							Miguel

C. Miguel Marques, York University, Computing & Network Services
e-mail: miguel@yorku.ca, voice: (416)736-2100x22684, fax: (416)736-5830



From grisha at ispol.com  Wed Oct  4 17:24:50 2000
From: grisha at ispol.com (Gregory Trubetskoy)
Date: Fri Jan  9 22:02:28 2004
Subject: [mod_python] Issue with mod_python Fatal Python error
In-Reply-To: <20001004141915N.miguel@yorku.ca>
Message-ID: <Pine.LNX.4.21.0010041724110.14807-100000@saturn.ispol.com>

Interesting. Is Python built with threads?

--
  Gregory (Grisha) Trubetskoy
       grisha@ispol.com

On Wed, 4 Oct 2000, Miguel Marques wrote:

> On Wed, 4 Oct 2000 10:13:59 -0700, "Jeff Schenk" <jeff.schenk@continuumnetworks.com> wrote:
> > I have built mod_python and configured and made apache, the apache server
> > comes up fine, however I see several
> > Fatal Python error: PyThreadState_Get: no current thread
> > 
> > Messages in my error_log file.  Also, when I stop apache it cores.
> > 
> > I am running apache 1.3.12, mod_ssl 2.6.5.1.3.12, mod_perl 1.24 and
> > mod_python 2.5
> > I performed a static build.
> > 
> > Please advise, if anyone has suggestions or has run into this problem.
> 
> I have no suggestion but I'm also experiencing this problem.
> Occasionally I see all of apache's children core dump after those
> messages.
> 
> I've seen the same problem (error message) mentioned in relation to an
> earlier version of wxPython.
> 
> I'm running SunOS 5.7 with Apache/1.3.12, mod_python/2.5 and
> Python/1.5.2 (happens with python 1.6 too).  mod_python is compiled as
> a DSO.
> A friend of mine mentioned that he has seen the same messages under
> Debian as well but I'm not sure of his versions.
> 
> 							Miguel
> 
> C. Miguel Marques, York University, Computing & Network Services
> e-mail: miguel@yorku.ca, voice: (416)736-2100x22684, fax: (416)736-5830
> 
> 
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://www.modpython.org/mailman/listinfo/mod_python
> 


From jeff.schenk at continuumnetworks.com  Wed Oct  4 14:44:59 2000
From: jeff.schenk at continuumnetworks.com (Jeff Schenk)
Date: Fri Jan  9 22:02:28 2004
Subject: [mod_python] Issue with mod_python Fatal Python error
In-Reply-To: <Pine.LNX.4.21.0010041724110.14807-100000@saturn.ispol.com>
Message-ID: <NEBBKNHPCLJIOJCKGBCIOEIICCAA.Jeff.Schenk@continuumnetworks.com>

Yes, Python 1.5.2 on LINUX was built with threads.  I noticed the Makefile
that was configure to include the mod_python has the correct python libs
and -lpthread specified.

Jeff Schenk
Continuum Networks
Chief Architect of Software Development
805-927-3886


-----Original Message-----
From: mod_python-admin@modpython.org
[mailto:mod_python-admin@modpython.org]On Behalf Of Gregory Trubetskoy
Sent: Wednesday, October 04, 2000 2:25 PM
To: Miguel Marques
Cc: mod_python@modpython.org
Subject: Re: [mod_python] Issue with mod_python Fatal Python error



Interesting. Is Python built with threads?

--
  Gregory (Grisha) Trubetskoy
       grisha@ispol.com

On Wed, 4 Oct 2000, Miguel Marques wrote:

> On Wed, 4 Oct 2000 10:13:59 -0700, "Jeff Schenk"
<jeff.schenk@continuumnetworks.com> wrote:
> > I have built mod_python and configured and made apache, the apache
server
> > comes up fine, however I see several
> > Fatal Python error: PyThreadState_Get: no current thread
> >
> > Messages in my error_log file.  Also, when I stop apache it cores.
> >
> > I am running apache 1.3.12, mod_ssl 2.6.5.1.3.12, mod_perl 1.24 and
> > mod_python 2.5
> > I performed a static build.
> >
> > Please advise, if anyone has suggestions or has run into this problem.
>
> I have no suggestion but I'm also experiencing this problem.
> Occasionally I see all of apache's children core dump after those
> messages.
>
> I've seen the same problem (error message) mentioned in relation to an
> earlier version of wxPython.
>
> I'm running SunOS 5.7 with Apache/1.3.12, mod_python/2.5 and
> Python/1.5.2 (happens with python 1.6 too).  mod_python is compiled as
> a DSO.
> A friend of mine mentioned that he has seen the same messages under
> Debian as well but I'm not sure of his versions.
>
> 							Miguel
>
> C. Miguel Marques, York University, Computing & Network Services
> e-mail: miguel@yorku.ca, voice: (416)736-2100x22684, fax: (416)736-5830
>
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://www.modpython.org/mailman/listinfo/mod_python
>

_______________________________________________
Mod_python mailing list
Mod_python@modpython.org
http://www.modpython.org/mailman/listinfo/mod_python


From grisha at ispol.com  Wed Oct  4 17:59:35 2000
From: grisha at ispol.com (Gregory Trubetskoy)
Date: Fri Jan  9 22:02:28 2004
Subject: [mod_python] Issue with mod_python Fatal Python error
In-Reply-To: <NEBBKNHPCLJIOJCKGBCIOEIICCAA.Jeff.Schenk@continuumnetworks.com>
Message-ID: <Pine.LNX.4.21.0010041756500.14807-100000@saturn.ispol.com>

That may be the problem. I think Apache is built without threads by
default. I've got a redhat box now and I'll see if I can replicate these
problems, but in the meantime, I would try compiling a fresh copy of
Python from sources (it should build without threads by default) and
linking against that for mod_python. (I describe this procedure for
FreeBSD in the install section of the docs)

--
  Gregory (Grisha) Trubetskoy
       grisha@ispol.com

On Wed, 4 Oct 2000, Jeff Schenk wrote:

> Yes, Python 1.5.2 on LINUX was built with threads.  I noticed the Makefile
> that was configure to include the mod_python has the correct python libs
> and -lpthread specified.
> 
> Jeff Schenk
> Continuum Networks
> Chief Architect of Software Development
> 805-927-3886
> 
> 
> -----Original Message-----
> From: mod_python-admin@modpython.org
> [mailto:mod_python-admin@modpython.org]On Behalf Of Gregory Trubetskoy
> Sent: Wednesday, October 04, 2000 2:25 PM
> To: Miguel Marques
> Cc: mod_python@modpython.org
> Subject: Re: [mod_python] Issue with mod_python Fatal Python error
> 
> 
> 
> Interesting. Is Python built with threads?
> 
> --
>   Gregory (Grisha) Trubetskoy
>        grisha@ispol.com
> 
> On Wed, 4 Oct 2000, Miguel Marques wrote:
> 
> > On Wed, 4 Oct 2000 10:13:59 -0700, "Jeff Schenk"
> <jeff.schenk@continuumnetworks.com> wrote:
> > > I have built mod_python and configured and made apache, the apache
> server
> > > comes up fine, however I see several
> > > Fatal Python error: PyThreadState_Get: no current thread
> > >
> > > Messages in my error_log file.  Also, when I stop apache it cores.
> > >
> > > I am running apache 1.3.12, mod_ssl 2.6.5.1.3.12, mod_perl 1.24 and
> > > mod_python 2.5
> > > I performed a static build.
> > >
> > > Please advise, if anyone has suggestions or has run into this problem.
> >
> > I have no suggestion but I'm also experiencing this problem.
> > Occasionally I see all of apache's children core dump after those
> > messages.
> >
> > I've seen the same problem (error message) mentioned in relation to an
> > earlier version of wxPython.
> >
> > I'm running SunOS 5.7 with Apache/1.3.12, mod_python/2.5 and
> > Python/1.5.2 (happens with python 1.6 too).  mod_python is compiled as
> > a DSO.
> > A friend of mine mentioned that he has seen the same messages under
> > Debian as well but I'm not sure of his versions.
> >
> > 							Miguel
> >
> > C. Miguel Marques, York University, Computing & Network Services
> > e-mail: miguel@yorku.ca, voice: (416)736-2100x22684, fax: (416)736-5830
> >
> >
> > _______________________________________________
> > Mod_python mailing list
> > Mod_python@modpython.org
> > http://www.modpython.org/mailman/listinfo/mod_python
> >
> 
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://www.modpython.org/mailman/listinfo/mod_python
> 


From miguel at yorku.ca  Thu Oct  5 11:13:09 2000
From: miguel at yorku.ca (Miguel Marques)
Date: Fri Jan  9 22:02:28 2004
Subject: [mod_python] Issue with mod_python Fatal Python error
In-Reply-To: <Pine.LNX.4.21.0010041724110.14807-100000@saturn.ispol.com>
References: <20001004141915N.miguel@yorku.ca>
	<Pine.LNX.4.21.0010041724110.14807-100000@saturn.ispol.com>
Message-ID: <20001005111309S.miguel@yorku.ca>

On Wed, 4 Oct 2000 17:24:50 -0400 (EDT), Gregory Trubetskoy <grisha@ispol.com> wrote:
> 
> Interesting. Is Python built with threads?
> 
Yes.  Without threads that problem doesn't occur.
Unfortunately I then encounter a intermittent problem with restricted
mode and DocumentTemplate which I use in my application which is even
worse.

							Miguel

C. Miguel Marques, York University, Computing & Network Services
e-mail: miguel@yorku.ca, voice: (416)736-2100x22684, fax: (416)736-5830


From benno at sesgroup.net  Fri Oct  6 19:56:41 2000
From: benno at sesgroup.net (Ben Leslie)
Date: Fri Jan  9 22:02:28 2004
Subject: [mod_python] Issue with mod_python Fatal Python error
In-Reply-To: <Pine.LNX.4.21.0010041756500.14807-100000@saturn.ispol.com>; from grisha@ispol.com on Wed, Oct 04, 2000 at 05:59:35PM -0400
References: <NEBBKNHPCLJIOJCKGBCIOEIICCAA.Jeff.Schenk@continuumnetworks.com> <Pine.LNX.4.21.0010041756500.14807-100000@saturn.ispol.com>
Message-ID: <20001006195641.I1892@bob.sesgroup.net>

Hi Gregory!

On Wed, 04 Oct 2000, Gregory Trubetskoy wrote:

> 
> That may be the problem. I think Apache is built without threads by
> default. I've got a redhat box now and I'll see if I can replicate these
> problems, but in the meantime, I would try compiling a fresh copy of
> Python from sources (it should build without threads by default) and
> linking against that for mod_python. (I describe this procedure for
> FreeBSD in the install section of the docs)
> 

This is strange. I see the same problem in error.log, however it
only seems to occur when apache is stopped. I compiled as a DSO
an mod_python works wonderfully (and so damn fast! (well after coming
from Zope it should be hard ;)). I have been developing on it without
a problem.

Since everything was working i assumed that this was just "normal" but
if its not then i thought i better let you know that it also occurs on
Debian Potato, Python1.5.2, compiled as a DSO.

Cheers,

Benno

From benno at sesgroup.net  Mon Oct  9 11:15:46 2000
From: benno at sesgroup.net (Ben Leslie)
Date: Fri Jan  9 22:02:28 2004
Subject: [mod_python] Apache Segfault
In-Reply-To: <39D457F0.8DF53FC1@LivingLogic.de>; from Matthias.Bauer@livinglogic.de on Fri, Sep 29, 2000 at 10:50:56AM +0200
References: <39D457F0.8DF53FC1@LivingLogic.de>
Message-ID: <20001009111546.A18792@bob.sesgroup.net>

Moin Matthias!

Matthias Bauer schrieb am Freitag, den 29. September 2000:

> Hi everybody,
> 
> I'm having some severe trouble installing mod_python 2.5 with the
> following environment:
> 	SuSE Linux 7.0
> 	Python 2.0b1 with threads
> 	Apache 1.3.12 
> 
> I compiled mod_python.so with the following command:
> 


<snip a bunch of details about apache segfaulting>

I think I _may_ know what the problem is.

I have installed mod_python on my laptop with no problems, very easy
(once I actually read the instructions ;), anyway needed this on one
of the servers, so I asked my sysadmin to install. 

This turned out to be harder than I would have expected, we started 
with apache-ssl and couldn't get the thing working, kept segfaulting.

I said maybe it is a conflict with ssl extensions so we uninstalled 
acpache-ssl and installed apache standard, tried same thing happened.

After much swearing and cursing it turns out that the position of 
mod_python in the LoadModule section is very important.

By placing mod_python as the first Module imported things are good and
work fine, having mod_python as the last module to load causes segfault.

</boring story>

So the moral is:

make sure you load mod_python before other modules.

Gregory: Is this an expected problem? Should I patch the docs? 
(I don't think I have the time or ability to patch the code ;)

Cheers,

Benno

From aiglauer at yahoo.com  Mon Oct  9 01:59:20 2000
From: aiglauer at yahoo.com (Alexis Iglauer)
Date: Fri Jan  9 22:02:28 2004
Subject: [mod_python] Apache Segfault
Message-ID: <20001009085920.28910.qmail@web2204.mail.yahoo.com>

This is (at least used to be) in the docs/FAQ/archives
somewhere - the mod_python module must be the first
module loaded for some unknown and untraceable reason.
 This problem and its solution seems to be appearing
on the list often, perhaps the answer to it should be
highlighted in the docs.

Ciao
Alexis

--- Ben Leslie <benno@sesgroup.net> wrote:
> Moin Matthias!
> 
> Matthias Bauer schrieb am Freitag, den 29. September
> 2000:
> 
> > Hi everybody,
> > 
> > I'm having some severe trouble installing
> mod_python 2.5 with the
> > following environment:
> > 	SuSE Linux 7.0
> > 	Python 2.0b1 with threads
> > 	Apache 1.3.12 
> > 
> > I compiled mod_python.so with the following
> command:
> > 
> 
> 
> <snip a bunch of details about apache segfaulting>
> 
> I think I _may_ know what the problem is.
> 
> I have installed mod_python on my laptop with no
> problems, very easy
> (once I actually read the instructions ;), anyway
> needed this on one
> of the servers, so I asked my sysadmin to install. 
> 
> This turned out to be harder than I would have
> expected, we started 
> with apache-ssl and couldn't get the thing working,
> kept segfaulting.
> 
> I said maybe it is a conflict with ssl extensions so
> we uninstalled 
> acpache-ssl and installed apache standard, tried
> same thing happened.
> 
> After much swearing and cursing it turns out that
> the position of 
> mod_python in the LoadModule section is very
> important.
> 
> By placing mod_python as the first Module imported
> things are good and
> work fine, having mod_python as the last module to
> load causes segfault.
> 
> </boring story>
> 
> So the moral is:
> 
> make sure you load mod_python before other modules.
> 
> Gregory: Is this an expected problem? Should I patch
> the docs? 
> (I don't think I have the time or ability to patch
> the code ;)
> 
> Cheers,
> 
> Benno
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://www.modpython.org/mailman/listinfo/mod_python


__________________________________________________
Do You Yahoo!?
Yahoo! Photos - 35mm Quality Prints, Now Get 15 Free!
http://photos.yahoo.com/

From Matthias.Bauer at LivingLogic.de  Mon Oct  9 11:35:41 2000
From: Matthias.Bauer at LivingLogic.de (Matthias Bauer)
Date: Fri Jan  9 22:02:29 2004
Subject: [mod_python] Apache Segfault
References: <20001009085920.28910.qmail@web2204.mail.yahoo.com>
Message-ID: <39E1916D.7F1BD3A@LivingLogic.de>

Alexis, Benno,

thanks for your input.

I already read about this proposal in the FAQ and tried it out.
Unfortunately, this did not help at all :-((

I also sent email to Erno Kuusela (who added the relevant FAQ entry) and
asked if he could give some additional hints. He did not have any
additional ideas either. But from his answer I learned, that the
segfault he encountered, only showed up, when a request was served. My
problem seems to be different: The segfault already occurs during
startup of the apache httpd daemon.

Benno,
the problems you described when trying to install mod_python on one of
your servers: Did the segfault happen when a request to mod_python came
in or already during startup of the httpd daemon?

--- Matthias



Alexis Iglauer wrote:
> 
> This is (at least used to be) in the docs/FAQ/archives
> somewhere - the mod_python module must be the first
> module loaded for some unknown and untraceable reason.
>  This problem and its solution seems to be appearing
> on the list often, perhaps the answer to it should be
> highlighted in the docs.
> 
> Ciao
> Alexis
-------------- next part --------------
A non-text attachment was scrubbed...
Name: smime.p7s
Type: application/x-pkcs7-signature
Size: 2054 bytes
Desc: S/MIME Cryptographic Signature
Url : http://mailman.modpython.org/pipermail/mod_python/attachments/20001009/82656c2f/smime-0003.bin
From helink at sandia.gov  Mon Oct  9 13:16:11 2000
From: helink at sandia.gov (Hamilton Link)
Date: Fri Jan  9 22:02:29 2004
Subject: [mod_python] mod_python 2.5 error on fresh install
Message-ID: <39E2197B.75988619@sandia.gov>

I sent this to comp.lang.python as well... I'd go the RPM route or the
DSO route but if someone can point me in the right direction I'd just as
soon use the latest version of mod_python (i.e. 2.5). Is there some
problem with the installation file in the (rather limited) online docs?

thanks,
hamilton


> I should probably add that I have the following in my httpd.conf, and that the
> mptest.py file is in $APACHEDIR/htdocs/test -- I wouldn't be overly surprised if
> this is a configuration problem, I'm just not sure what to do to fix it (I'm trying
> a few things though). How am I supposed to tell it where to look for python files
> with such handlers? Am I just supposed to put them in the python directory structure
> -- that doesn't seem right either...
>
>  AddHandler python-program .py
>  PythonHandler mptest
>  PythonDebug On
>
> I'm trying to set up mod_python in Apache. I've built Apache before
and
> everything works fine, but this time I included mod_python amongst the

> statically linked mods (I figured I'd try that and then go back and
try
> the seemingly more complicated process of building mod_python as a
DSO,
> just to compare). Apache still works fine, except for mod_python.
> I RTFM'ed and did what the instructions from modpython.org said,
> modified my httpd.conf etc. but when I try to actually reference a .py

> file I get the following instead:
>
> Mod_python error: "PythonHandler mptest"
>
> Traceback (innermost last):
>
>   File "/usr/lib/python1.5/site-packages/mod_python/apache.py", line
> 135, in Dispatch
>     module = import_module(module_name, req)
>
>   File "/usr/lib/python1.5/site-packages/mod_python/apache.py", line
> 276, in import_module
>     module = __import__(module_name)
>
> ImportError: No module named mptest
>
> I'm new to python, so I'm not crazy about debugging apache.py -- has
> anyone had this problem or does anyone know what I f...ed up?
>
> thanks,
> hamilton



From okamoto at xfiles.intercon.hp.com  Mon Oct  9 12:57:27 2000
From: okamoto at xfiles.intercon.hp.com (Jeff Okamoto)
Date: Fri Jan  9 22:02:29 2004
Subject: [mod_python] mod_python 2.5 error on fresh install
In-Reply-To: <39E2197B.75988619@sandia.gov>; from "Hamilton Link" at Oct 09, 100 1:16 pm
Message-ID: <200010091957.MAA27537@xfiles.intercon.hp.com>

> I sent this to comp.lang.python as well... I'd go the RPM route or the
> DSO route but if someone can point me in the right direction I'd just as
> soon use the latest version of mod_python (i.e. 2.5). Is there some
> problem with the installation file in the (rather limited) online docs?

Yes, the INSTALL file and Tutorial (from the web site) are both incorrect
in describing the installation and test procedures.

To get things working with how you've set them up, you will need to wrap
your three-line section to look like:

<Directory /path/to/apache/htdocs/test>
	AddHandler python-program .py
	PythonHandler mptest
	PythonDebug On
</Directory>

Then simply access any URI on your system and just make sure that it has
a .py suffix.  Instead of a 404, you should get the test output from
mptest.py.  If you do see a 404, then something is still broken.

Jeff

From grisha at ispol.com  Mon Oct  9 15:55:47 2000
From: grisha at ispol.com (Gregory Trubetskoy)
Date: Fri Jan  9 22:02:29 2004
Subject: [mod_python] mod_python 2.5 error on fresh install
In-Reply-To: <39E2197B.75988619@sandia.gov>
Message-ID: <Pine.LNX.4.21.0010091554160.18580-100000@saturn.ispol.com>

There is a bug in the documentation. Either put the directives below in an
.htaccess file, or wrap them inside <Directory> tags, like this

<Directory /full/path/to/mptest.py>
  SetHandler blah blah....
</Directory>

--
  Gregory (Grisha) Trubetskoy
       grisha@ispol.com

On Mon, 9 Oct 2000, Hamilton Link wrote:

> I sent this to comp.lang.python as well... I'd go the RPM route or the
> DSO route but if someone can point me in the right direction I'd just as
> soon use the latest version of mod_python (i.e. 2.5). Is there some
> problem with the installation file in the (rather limited) online docs?
> 
> thanks,
> hamilton
> 
> 
> > I should probably add that I have the following in my httpd.conf, and that the
> > mptest.py file is in $APACHEDIR/htdocs/test -- I wouldn't be overly surprised if
> > this is a configuration problem, I'm just not sure what to do to fix it (I'm trying
> > a few things though). How am I supposed to tell it where to look for python files
> > with such handlers? Am I just supposed to put them in the python directory structure
> > -- that doesn't seem right either...
> >
> >  AddHandler python-program .py
> >  PythonHandler mptest
> >  PythonDebug On
> >
> > I'm trying to set up mod_python in Apache. I've built Apache before
> and
> > everything works fine, but this time I included mod_python amongst the
> 
> > statically linked mods (I figured I'd try that and then go back and
> try
> > the seemingly more complicated process of building mod_python as a
> DSO,
> > just to compare). Apache still works fine, except for mod_python.
> > I RTFM'ed and did what the instructions from modpython.org said,
> > modified my httpd.conf etc. but when I try to actually reference a .py
> 
> > file I get the following instead:
> >
> > Mod_python error: "PythonHandler mptest"
> >
> > Traceback (innermost last):
> >
> >   File "/usr/lib/python1.5/site-packages/mod_python/apache.py", line
> > 135, in Dispatch
> >     module = import_module(module_name, req)
> >
> >   File "/usr/lib/python1.5/site-packages/mod_python/apache.py", line
> > 276, in import_module
> >     module = __import__(module_name)
> >
> > ImportError: No module named mptest
> >
> > I'm new to python, so I'm not crazy about debugging apache.py -- has
> > anyone had this problem or does anyone know what I f...ed up?
> >
> > thanks,
> > hamilton
> 
> 
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://www.modpython.org/mailman/listinfo/mod_python
> 


From jon+modpython at unequivocal.co.uk  Tue Oct 10 14:43:52 2000
From: jon+modpython at unequivocal.co.uk (Jon Ribbens)
Date: Fri Jan  9 22:02:29 2004
Subject: [mod_python] Compile failure - init_socket multiply defined
Message-ID: <20001010144352.B22656@snowy.squish.net>

I'm trying to compile mod_python 2.5 as a DSO with Apache 1.3.12 and
Python 2.0c1 on OpenBSD 2.7-ish.

I do:

apxs -I /usr/local/include/python2.0 -c mod_python.c /usr/local/lib/python2.0/config/libpython2.0.a

It says:

gcc -DDEV_RANDOM=/dev/arandom -DMOD_SSL=206102 -DEAPI -DUSE_EXPAT -I../lib/expat-lite -g -fPIC -DSHARED_MODULE -I/usr/lib/apache/include -pthread -I/usr/local/include/python2.0  -c mod_python.c
ld -Bforcearchive -Bshareable -o mod_python.so mod_python.o /usr/local/lib/python2.0/config/libpython2.0.a -lc_r
./socketmodule.c:2377: Definition of symbol `_init_socket' (multiply defined)
./socketmodule.c:2377: Definition of symbol `_init_socket' (multiply defined)
apxs:Break: Command failed with rc=65536

I am completely mystified as to why it says that init_socket is multiply
defined. I can't see more than one definition anywhere. Does anyone have
any suggestions?

From jon+modpython at unequivocal.co.uk  Tue Oct 10 14:59:32 2000
From: jon+modpython at unequivocal.co.uk (Jon Ribbens)
Date: Fri Jan  9 22:02:29 2004
Subject: [mod_python] Compile failure - init_socket multiply defined
In-Reply-To: <20001010144352.B22656@snowy.squish.net>; from jon+modpython@unequivocal.co.uk on Tue, Oct 10, 2000 at 02:43:52PM +0100
References: <20001010144352.B22656@snowy.squish.net>
Message-ID: <20001010145932.C22656@snowy.squish.net>

Jon Ribbens <jon+modpython@unequivocal.co.uk> wrote:
> I am completely mystified as to why it says that init_socket is multiply
> defined.

Hmm, ok, fixed that one. Compiled Python wrong with two _socket modules.

Next problem. ld gives thousands of:

ld: /usr/local/lib/python2.0/config/libpython2.0.a(main.o): RRS text relocation at 0x114bc6 for "___sF"
ld: /usr/local/lib/python2.0/config/libpython2.0.a(main.o): RRS text relocation at 0x114bb8 for "_fprintf"
ld: /usr/local/lib/python2.0/config/libpython2.0.a(main.o): RRS text relocation at 0x114bb3 for "___sF"
ld: /usr/local/lib/python2.0/config/libpython2.0.a(getbuildinfo.o): RRS text relocation at 0x115308 for "_sprintf"

etc. I have no idea what this means either ;-)

From arhiv at freemail.org.mk  Tue Oct 10 18:55:39 2000
From: arhiv at freemail.org.mk (Damjan)
Date: Fri Jan  9 22:02:29 2004
Subject: [mod_python] Session managment for mod_python
Message-ID: <Pine.LNX.4.21.0010101853340.229-100000@localhost.localdomain>

Is there some sollution for session managment in mod_python. I actually
have some ideas how to build this, but wanted to check first, if someone
else has solved this problem.  Thanks.


-- 
damjan

    Linux is like a vigwam, no windows, no gates, just apache inside.


From grisha at ispol.com  Tue Oct 10 14:54:10 2000
From: grisha at ispol.com (Gregory Trubetskoy)
Date: Fri Jan  9 22:02:29 2004
Subject: [mod_python] Session managment for mod_python
In-Reply-To: <Pine.LNX.4.21.0010101853340.229-100000@localhost.localdomain>
Message-ID: <Pine.LNX.4.21.0010101453430.19865-100000@saturn.ispol.com>

what do you mean by session management?


On Tue, 10 Oct 2000, Damjan wrote:

> Is there some sollution for session managment in mod_python. I actually
> have some ideas how to build this, but wanted to check first, if someone
> else has solved this problem.  Thanks.
> 
> 
> -- 
> damjan
> 
>     Linux is like a vigwam, no windows, no gates, just apache inside.
> 
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://www.modpython.org/mailman/listinfo/mod_python
> 


From benno at sesgroup.net  Wed Oct 11 09:33:58 2000
From: benno at sesgroup.net (Ben Leslie)
Date: Fri Jan  9 22:02:29 2004
Subject: [mod_python] Session managment for mod_python
In-Reply-To: <Pine.LNX.4.21.0010101853340.229-100000@localhost.localdomain>; from arhiv@freemail.org.mk on Tue, Oct 10, 2000 at 06:55:39PM +0200
References: <Pine.LNX.4.21.0010101853340.229-100000@localhost.localdomain>
Message-ID: <20001011093358.A4501@bob.sesgroup.net>

Hi Damjan!

On Tue, 10 Oct 2000, Damjan wrote:

> Is there some sollution for session managment in mod_python. I actually
> have some ideas how to build this, but wanted to check first, if someone
> else has solved this problem.  Thanks.
> 


It is pretty easy todo, and really depends a lot on the application you 
are using no how you would want to implement it, and what level of security
you want to build into it.

There are many many things potentially involved in session management.

Firstly, do you want to store the session key as a cookie or as part of
the url (eg ?key=12331232 ).

Secondly, do you want to store keys in a database, in memory, in a file
system.

Thirdly, what data do you want to store between sessions? Simlpy what
user is logged in, other 'simple' information or complex stuff like
class objects in memory.

Finally, how long is a session, when does it end, do you rely on client
 side expiring cookies, do you allow the session cookie to be used for
multiple requests, or do you issue a new cookie each time to reduce the
change of someone stealing the cookie and using it to login as the 
correct user?

I have done a session management for my first project in mod_python, 
using a backend postgres database. I use it simply to track the user
that is logged in. I am using cookies to store the session key. 
Each new page the client is issued with a new cookie, the cookie is 
checked server side that it is still valid (I have a ten minute
time-out on the cookie).

Hope this helps,

Benno

From gdamjan at freemail.org.mk  Wed Oct 11 23:15:35 2000
From: gdamjan at freemail.org.mk (Damjan Georgievski)
Date: Fri Jan  9 22:02:29 2004
Subject: [mod_python] Session managment for mod_python
In-Reply-To: <20001011093358.A4501@bob.sesgroup.net>
Message-ID: <Pine.LNX.4.21.0010112306550.691-100000@localhost.localdomain>

> Hi Damjan!
> > Is there some sollution for session managment in mod_python. I actually
> > have some ideas how to build this, but wanted to check first, if someone
> > else has solved this problem.  Thanks.
> 
> It is pretty easy todo, and really depends a lot on the application you 
> are using no how you would want to implement it, and what level of security
> you want to build into it.
> 
> There are many many things potentially involved in session management.
> 
> Firstly, do you want to store the session key as a cookie or as part of
> the url (eg ?key=12331232 ).
> 
> Secondly, do you want to store keys in a database, in memory, in a file
> system.
> 
> Thirdly, what data do you want to store between sessions? Simlpy what
> user is logged in, other 'simple' information or complex stuff like
> class objects in memory.

I know there are many possible ways of doing this, but I can't say which
way is better (key or cookie , memory/database/file). But for sure I
would like to store a whole object.
 
> Finally, how long is a session, when does it end, do you rely on client
>  side expiring cookies, do you allow the session cookie to be used for
> multiple requests, or do you issue a new cookie each time to reduce the
> change of someone stealing the cookie and using it to login as the 
> correct user?
> 
> I have done a session management for my first project in mod_python, 
> using a backend postgres database. I use it simply to track the user
> that is logged in. I am using cookies to store the session key. 
> Each new page the client is issued with a new cookie, the cookie is 
> checked server side that it is still valid (I have a ten minute
> time-out on the cookie).

Mainly this is what I thought I would do, but many thanks for the cookie
expiration hint.
 
I just think, there should be a standrard mod_python module, with
a simple interface that automates the hard work. This (and embeded
Python support) will finnish-up mod_python to be much more stronger
compared to mod_perl.

Thanks.


-- 
damjan




From arhiv at freemail.org.mk  Wed Oct 11 23:19:08 2000
From: arhiv at freemail.org.mk (Damjan)
Date: Fri Jan  9 22:02:29 2004
Subject: [mod_python] Session managment for mod_python
Message-ID: <Pine.LNX.4.21.0010112317150.691-100000@localhost.localdomain>

> Hi Damjan!
> > Is there some sollution for session managment in mod_python. I actually
> > have some ideas how to build this, but wanted to check first, if someone
> > else has solved this problem.  Thanks.
> 
> It is pretty easy todo, and really depends a lot on the application you 
> are using no how you would want to implement it, and what level of security
> you want to build into it.
> 
> There are many many things potentially involved in session management.
> 
> Firstly, do you want to store the session key as a cookie or as part of
> the url (eg ?key=12331232 ).
> 
> Secondly, do you want to store keys in a database, in memory, in a file
> system.
> 
> Thirdly, what data do you want to store between sessions? Simlpy what
> user is logged in, other 'simple' information or complex stuff like
> class objects in memory.

I know there are many possible ways of doing this, but I can't say which
way is better (key or cookie , memory/database/file). But for sure I
would like to store a whole object.
 
> Finally, how long is a session, when does it end, do you rely on client
>  side expiring cookies, do you allow the session cookie to be used for
> multiple requests, or do you issue a new cookie each time to reduce the
> change of someone stealing the cookie and using it to login as the 
> correct user?
> 
> I have done a session management for my first project in mod_python, 
> using a backend postgres database. I use it simply to track the user
> that is logged in. I am using cookies to store the session key. 
> Each new page the client is issued with a new cookie, the cookie is 
> checked server side that it is still valid (I have a ten minute
> time-out on the cookie).

Mainly this is what I thought I would do, but many thanks for the cookie
expiration hint.
 
I just think, there should be a standard mod_python.session module, with
a simple interface that automates the hard work. This (and embeded
Python support) will finnish-up mod_python to be much more stronger
compared to mod_perl.

Thanks.


-- 
damjan





From python at ragnark.vestdata.no  Thu Oct 12 18:57:47 2000
From: python at ragnark.vestdata.no (=?iso-8859-1?Q?Ragnar_Kj=F8rstad?=)
Date: Fri Jan  9 22:02:29 2004
Subject: [mod_python] Apache configuration
Message-ID: <20001012185747.A27459@vestdata.no>

Hi

The tutorial explains how to set up Apache to run myscript.py to handle
all requests to .py URL's, and points out that it does not actually use
the URL.

However, it does not explain how to configure Apache to run the files
themselves!?

Thanks


-- 
Ragnar Kj?rstad

From benno at sesgroup.net  Fri Oct 13 09:17:07 2000
From: benno at sesgroup.net (Ben Leslie)
Date: Fri Jan  9 22:02:29 2004
Subject: [mod_python] Apache configuration
In-Reply-To: <20001012185747.A27459@vestdata.no>; from python@ragnark.vestdata.no on Thu, Oct 12, 2000 at 06:57:47PM +0200
References: <20001012185747.A27459@vestdata.no>
Message-ID: <20001013091707.B22482@bob.sesgroup.net>

Hi Ragnar!

On Thu, 12 Oct 2000, Ragnar Kj?rstad wrote:

> Hi
> 
> The tutorial explains how to set up Apache to run myscript.py to handle
> all requests to .py URL's, and points out that it does not actually use
> the URL.
> 
> However, it does not explain how to configure Apache to run the files
> themselves!?
> 

Well that is up to your request_handler and what you actually want it to do.

If you want to use traditional cgi-like python scripts then you probably should
use the cgihandler.py as your request_handler. However there is often processing
that you wish to occur with each requst, this is where you would write you
own request_handler. You are able to get access to the uri passed by using the 
req.uri variable.

Hope that helps,

Benno

From sitongia at cgd.ucar.edu  Fri Oct 13 14:33:19 2000
From: sitongia at cgd.ucar.edu (Leonard Sitongia)
Date: Fri Jan  9 22:02:29 2004
Subject: [mod_python] DSO: __muldi3: referenced symbol
Message-ID: <200010132033.OAA28768@bearmtn-e0.cgd.ucar.edu>

Hi,

I'm trying to build mod_python as a DSO on
SunOS goldhill 5.6 Generic_105181-17 sun4u sparc SUNW,Ultra-1
with apache-1.3.12, using the following command:

apxs -a -i -I /opt/local/python/include/python1.5 -c mod_python.c 
/opt/local/python/lib/python1.5/config/libpython1.5.a 
/opt/local/tcl/lib/libtcl8.3.so /opt/local/tk/lib/libtk8.3.so -lm

The result from starting Apache is:

starting Apache
Syntax error on line 228 of /web/apache/conf/httpd.conf:
Cannot load /opt/local/apache-1.3.12/libexec/mod_python.so into server: ld.so.1: 
/opt/local/apache/bin/httpd: fatal: relocation error: file 
/opt/local/apache-1.3.12/libexec/mod_python.so: symbol __muldi3: referenced 
symbol not found

I can only find this symbol in the python library, but cannot find any
information about it via a google search or via the Python web sites.

Looks like some kind of multiply and divide routines.  Anyone recognize
this and can give me a tip on what to do from here (short of compiling
this into Apache).

Thanks.

==Leonard E. Sitongia           
--Information Systems Group / Climate and Global Dynamics
  National Center for Atmospheric Research
  P.O. Box 3000 Boulder CO 80307  USA
  sitongia@ucar.edu    voice: (303)497-1338   fax: (303)497-2699


From jeremy at beopen.com  Fri Oct 13 19:18:34 2000
From: jeremy at beopen.com (Jeremy Hylton)
Date: Fri Jan  9 22:02:29 2004
Subject: [mod_python] [ANNOUNCE] Ninth International Python Conference
Message-ID: <14823.38986.426523.88704@bitdiddle.concentric.net>

CALL FOR PAPERS, POSTERS, AND PARTICIPATION
Ninth International Python Conference
March 5-8, 2001
Long Beach, California
Web site: http://python9.org

The 9th International Python Conference (Python 9) is a forum for
Python users, software developers, and researchers to present current
work, discuss future plans for the language and commercial
applications, and learn about interesting uses of Python. The
conference will consist of a day of tutorials, two days of refereed
paper and application tracks -- including a Zope track and a
multi-technology Python Applications Track, a developers' day, a small
exhibition, demonstrations, and posters.

Paper submission deadline: Monday, November 6, 2000 
Notification of acceptance: Monday, December 11, 2000 
Final papers due: Monday, January 15, 2001 

Authors are invited to submit papers for the Refereed Paper Track
that: 

* Present new and useful applications and tools that utilize Python 
* Describe the use of Python in large, mission-critical or unusual
  applications  
* Address practical programming problems, and provide lessons based on
  experience for Python programmers  

Full information is available on the website, http://python9.org 


From brad at kk208.ocsstud.gu.edu.au  Sat Oct 14 15:20:01 2000
From: brad at kk208.ocsstud.gu.edu.au (Brad Dick)
Date: Fri Jan  9 22:02:29 2004
Subject: [mod_python] undefined symbol: openpty
Message-ID: <20001014152001.A6317@kk208.ocsstud.gu.edu.au>

Umm... can anyone explain to me why I get undefined symbol errors when I start up Apache.

I'm running Python 2.0b2, Apache 1.3.12, PHP 4.0.3, on a Red Hat 6.2. Everything mentioned was built from source on this machine.

I was actually getting an undefined symbol: dbopen error. However, its now changed to an undefined symbol: openpty. This is getting frustrating to say the least. If someone can help, please respond

Brad

From arhiv at freemail.org.mk  Sun Oct 15 15:10:06 2000
From: arhiv at freemail.org.mk (Damjan)
Date: Fri Jan  9 22:02:29 2004
Subject: [mod_python] Session managment for mod_python
In-Reply-To: <Pine.LNX.4.21.0010101453430.19865-100000@saturn.ispol.com>
Message-ID: <Pine.LNX.4.21.0010151452160.542-100000@localhost.localdomain>

> what do you mean by session management?
> 
The best session managment would be a Python dictionary, that is global
to all subinterpreters, and all Apache processes, and that retains its
state across handlers and requests.

Let me illustrate what can be done with this. For example you have
people log-in to your site and you first create a "User" object, set
some attributes to it (ex. preferences). Then you create a semi-random
string, you send that string as a cookie to the users browser, and use
the string as a key in the session managment dictionary. Later when that
user accesses another page on your site, the only thing you do is:

		from mod_python.session_managment import SM
		cookie = getcookie("something")
		user = SM[cookie]
		buf = "Hello " + user.real_name
		if user.show_folders
			# do stuff
		if user.something
			# do other stuff
		...
		etc.

Of course you could do this with a database and pickle-ing the user
object. Or you could do this with a shared memory.

Do you think there should be a standard mod_python module that does all
of this?  

-- 
damjan



From grisha at ispol.com  Sun Oct 15 17:16:53 2000
From: grisha at ispol.com (Gregory Trubetskoy)
Date: Fri Jan  9 22:02:29 2004
Subject: [mod_python] Session managment for mod_python
In-Reply-To: <Pine.LNX.4.21.0010151452160.542-100000@localhost.localdomain>
Message-ID: <Pine.LNX.4.21.0010151706400.24269-100000@saturn.ispol.com>

On Sun, 15 Oct 2000, Damjan wrote:

> > what do you mean by session management?
> > 
> The best session managment would be a Python dictionary, that is global
> to all subinterpreters, and all Apache processes, and that retains its
> state across handlers and requests.

Let me guess - if Apache process is restarted, you would like the state to
be retained througout the restart?

> Let me illustrate what can be done with this. 

[snip]

> Of course you could do this with a database and pickle-ing the user
> object. Or you could do this with a shared memory.

I think you answered your own question - this sort of thing is best done
with a database.

I see Apache (and mod_python, which is just an interface to it) as a
process responsible for serving requests, but not a database, data storage
is not one of its functions, and it is well suited for delegating that
function to a database. 

If you think about it carefully, there is a slew of issues one has to
consider to implement something like this. Locking alone could be pretty
complicated. Why bother with any of this, if something like MySQL already
does all of those things very efficiently.

Hope this doesn't dicourage you from using of mod_python. In fact writing
a mod_python handler that would provide a framework that would use a
database and work as you describe could be a very interesting project.

Grisha


From benno at sesgroup.net  Mon Oct 16 08:46:55 2000
From: benno at sesgroup.net (Ben Leslie)
Date: Fri Jan  9 22:02:29 2004
Subject: [mod_python] Session managment for mod_python
In-Reply-To: <Pine.LNX.4.21.0010151706400.24269-100000@saturn.ispol.com>; from grisha@ispol.com on Sun, Oct 15, 2000 at 05:16:53PM -0400
References: <Pine.LNX.4.21.0010151452160.542-100000@localhost.localdomain> <Pine.LNX.4.21.0010151706400.24269-100000@saturn.ispol.com>
Message-ID: <20001016084655.A6193@bob.sesgroup.net>

On Sun, 15 Oct 2000, Gregory Trubetskoy wrote:

> 
> On Sun, 15 Oct 2000, Damjan wrote:
> 
> > > what do you mean by session management?
> > > 
> > The best session managment would be a Python dictionary, that is global
> > to all subinterpreters, and all Apache processes, and that retains its
> > state across handlers and requests.
> 
> Let me guess - if Apache process is restarted, you would like the state to
> be retained througout the restart?

I would count it as dynamic data that can be lost. I am thinking this thing
would be great as a cache mainly for expensive database lookups, caching files
into memory for faster loading.

 
> > Let me illustrate what can be done with this. 
> 
> [snip]
> 
> > Of course you could do this with a database and pickle-ing the user
> > object. Or you could do this with a shared memory.
> 
> I think you answered your own question - this sort of thing is best done
> with a database.
> 
> I see Apache (and mod_python, which is just an interface to it) as a
> process responsible for serving requests, but not a database, data storage
> is not one of its functions, and it is well suited for delegating that
> function to a database. 

Data storage no, caching yes.

 
> If you think about it carefully, there is a slew of issues one has to
> consider to implement something like this. Locking alone could be pretty
> complicated. Why bother with any of this, if something like MySQL already
> does all of those things very efficiently.

There are a lot of issues, however squeezing some more performance out of
my application by caching files and the like would be extremely useful.
 
The question is the implemenation, afaict apache does not have a global shared
memroy by default, although there seems to be optional patches that can be
compiled in to give you access to to this memory, from what I can tell if we
had access to this interface it would be possible to create a global dictionary
in mod_python to suppport this. Is it worth creating extensions to mod_python
which rely on patches to the apache core?

If anyone with more apache experience than i have could make any comments I would
appreciate it.


Regards,

Ben Leslie

From grisha at ispol.com  Sun Oct 15 21:58:05 2000
From: grisha at ispol.com (Gregory Trubetskoy)
Date: Fri Jan  9 22:02:29 2004
Subject: [mod_python] Session managment for mod_python
In-Reply-To: <20001016084655.A6193@bob.sesgroup.net>
Message-ID: <Pine.LNX.4.21.0010152142581.24379-100000@saturn.ispol.com>

On Mon, 16 Oct 2000, Ben Leslie wrote:

> On Sun, 15 Oct 2000, Gregory Trubetskoy wrote:
> 
> > Let me guess - if Apache process is restarted, you would like the state to
> > be retained througout the restart?
> 
> I would count it as dynamic data that can be lost. I am thinking this thing
> would be great as a cache mainly for expensive database lookups, caching files
> into memory for faster loading.

The only example of dynamic data that can be lost that I can think of is
static, e.g. a list of zipcodes or a cached file, but that doesn't need to
be shared between apache processes - each process can have its own copy.

On the other hand database lookups are probably a lot cheaper than you
think. A simple retrival on a keyed table is not all that far from a
Python dictionary lookup, and most databases will do a great job at
caching queries in memory. The thing I don't like about databases is that
Python still lacks a consistent database API like perl's DBI, but that's a
different issue altogether...

There *are* some cases where shared memory is a must. In particular,
things relating to encryption where keys are exchanged at connection
initiation time. Apache 2.0 addresses those problems, I think there is not
a lot of sense in trying to solve this on 1.3.... I'd rather spend the
time porting mod_python to 2.0.

Grisha



From benno at sesgroup.net  Mon Oct 16 13:35:33 2000
From: benno at sesgroup.net (Ben Leslie)
Date: Fri Jan  9 22:02:29 2004
Subject: [mod_python] Session managment for mod_python
In-Reply-To: <Pine.LNX.4.21.0010152142581.24379-100000@saturn.ispol.com>; from grisha@ispol.com on Sun, Oct 15, 2000 at 09:58:05PM -0400
References: <20001016084655.A6193@bob.sesgroup.net> <Pine.LNX.4.21.0010152142581.24379-100000@saturn.ispol.com>
Message-ID: <20001016133533.A6990@bob.sesgroup.net>

On Sun, 15 Oct 2000, Gregory Trubetskoy wrote:

> 
> On Mon, 16 Oct 2000, Ben Leslie wrote:
> 
> > On Sun, 15 Oct 2000, Gregory Trubetskoy wrote:
> > 
> > > Let me guess - if Apache process is restarted, you would like the state to
> > > be retained througout the restart?
> > 
> > I would count it as dynamic data that can be lost. I am thinking this thing
> > would be great as a cache mainly for expensive database lookups, caching files
> > into memory for faster loading.
> 
> The only example of dynamic data that can be lost that I can think of is
> static, e.g. a list of zipcodes or a cached file, but that doesn't need to
> be shared between apache processes - each process can have its own copy.

This is true but if you have 100 connection you then have 100 times the 
memory. Then again, memory is cheap and programmer time isn't ;)
 
> On the other hand database lookups are probably a lot cheaper than you
> think. A simple retrival on a keyed table is not all that far from a
> Python dictionary lookup, and most databases will do a great job at
> caching queries in memory.

This is true, and since you can have a persistent connection to the DB for
each thread this works quite well. It is more the expensive functions that 
I've worried about, but again these could be cached on a per thread basis.

> The thing I don't like about databases is that
> Python still lacks a consistent database API like perl's DBI, but that's a
> different issue altogether...

Not entriely true there is the DBAPI from the DB-SIG:

http://www.python.org/topics/database/DatabaseAPI-2.0.html
 
> There *are* some cases where shared memory is a must. In particular,
> things relating to encryption where keys are exchanged at connection
> initiation time. Apache 2.0 addresses those problems, I think there is not
> a lot of sense in trying to solve this on 1.3.... I'd rather spend the
> time porting mod_python to 2.0.

Yep, that makes a lot of sense. I didn't know wether apache 2.0 solved this
or not (and couldn't find the answer after looking at the docs).

Cheers,

Benno

From Matthias.Bauer at LivingLogic.de  Mon Oct 16 07:48:24 2000
From: Matthias.Bauer at LivingLogic.de (Matthias Bauer)
Date: Fri Jan  9 22:02:29 2004
Subject: [mod_python] undefined symbol: openpty
References: <20001014152001.A6317@kk208.ocsstud.gu.edu.au>
Message-ID: <39EA96A8.D99DC3DF@LivingLogic.de>

Hi Brad,

I ran into some similar problems, when I started out with mod_python.

I had to include lots of shared libraries until I did no longer get
these undefined symbol errors. If I remember it right, openpty is
defined in libutil.a. But after you include that you may run into some
more undefined symbols. You just have to include all the necessary
libraries until it works.

However I never got mod_python to run after I underwent this lengthy
process - I finally ran into some Segfault, where I got stuck and simply
stopped wasting time.

Please let me know about your experience after you finally manage to get
rid of all these unresolved symbol errors.

Good luck,

--- Matthias

Brad Dick wrote:
> 
> Umm... can anyone explain to me why I get undefined symbol errors when I start up Apache.
> 
> I'm running Python 2.0b2, Apache 1.3.12, PHP 4.0.3, on a Red Hat 6.2. Everything mentioned was built from source on this machine.
> 
> I was actually getting an undefined symbol: dbopen error. However, its now changed to an undefined symbol: openpty. This is getting frustrating to say the least. If someone can help, please respond
> 
> Brad
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://www.modpython.org/mailman/listinfo/mod_python
-------------- next part --------------
A non-text attachment was scrubbed...
Name: smime.p7s
Type: application/x-pkcs7-signature
Size: 2054 bytes
Desc: S/MIME Cryptographic Signature
Url : http://mailman.modpython.org/pipermail/mod_python/attachments/20001016/9b49d361/smime-0003.bin
From michael at stroeder.com  Mon Oct 16 08:44:19 2000
From: michael at stroeder.com (Michael =?iso-8859-1?Q?Str=F6der?=)
Date: Fri Jan  9 22:02:29 2004
Subject: [mod_python] Session managment for mod_python
References: <Pine.LNX.4.21.0010152142581.24379-100000@saturn.ispol.com>
Message-ID: <39EAA3C3.211E2B92@stroeder.com>

Gregory Trubetskoy wrote:
> 
> There *are* some cases where shared memory is a must.
> [..]
> Apache 2.0 addresses those problems, I think there is not
> a lot of sense in trying to solve this on 1.3.... I'd rather spend the
> time porting mod_python to 2.0.

Yes, you're right. Don't waste your time working around problems
which are solved in Apache 2.0.

Ciao, Michael.

From michael at stroeder.com  Mon Oct 16 08:41:48 2000
From: michael at stroeder.com (Michael =?iso-8859-1?Q?Str=F6der?=)
Date: Fri Jan  9 22:02:29 2004
Subject: [mod_python] Session managment for mod_python
References: <Pine.LNX.4.21.0010151706400.24269-100000@saturn.ispol.com>
Message-ID: <39EAA32C.861524CB@stroeder.com>

Gregory Trubetskoy wrote:
> 
> On Sun, 15 Oct 2000, Damjan wrote:
> 
> > > what do you mean by session management?
> > >
> > The best session managment would be a Python dictionary, that is global
> > to all subinterpreters, and all Apache processes, and that retains its
> > state across handlers and requests.
> 
> Let me guess - if Apache process is restarted, you would like the state to
> be retained througout the restart?

If Apache starts session data can be lost.

> > Of course you could do this with a database and pickle-ing the user
> > object. Or you could do this with a shared memory.
> 
> I think you answered your own question - this sort of thing is best done
> with a database.

Some objects are not pickeable but worth to be kept in a session
cache. E.g. connection objects of a database access.

Nevertheless most web applications could provide a session managment
themselves. There are some projects which implement this for Python
(e.g. webware etc.)

Ciao, Michael.

From artrussia at newmail.ru  Sat Oct 14 11:54:51 2000
From: artrussia at newmail.ru (Boris Lipner)
Date: Fri Jan  9 22:02:29 2004
Subject: [mod_python] Art
Message-ID: <421256896.20001014115451@newmail.ru>

Dear Madam and Sir,

The Art Gallery  Gallery-Ainvites you to the new exhibitions.
Today on our page you can see more than 200 new wonderful paintings. We hope you will like them.

Our company, "GALLERY-A"  www.gallery-a.ru  , offer both modern and classical
art, deals in a line of pieces of art by talented artists. Their works  include original
paintings, sculptures, etc., copies of masterpieces of various styles, countries and epochs,
portraits made to order. These
professional artists are high-skilled graduates of educational institutions such as the Academy
of Fine Arts, High School for Arts and Design and other art colleges. 

You establish contact and find out new customers who would like to buy a masterpiece of
realistic Art.

SITE: www.gallery-a.ru
E-MAIL: gallery-a@peterlink.ru

Best regards
Boris Lipner, General Manager.

If you want to REMOVE your E-maiIL from our Post List PLEASE send letter to artrussia@newmail.ru



From grisha at verio.net  Mon Oct 16 10:13:13 2000
From: grisha at verio.net (Gregory Trubetskoy)
Date: Fri Jan  9 22:02:29 2004
Subject: [mod_python] Session managment for mod_python
References: <Pine.LNX.4.21.0010151706400.24269-100000@saturn.ispol.com> <39EAA32C.861524CB@stroeder.com>
Message-ID: <39EB1B09.AF8E61DF@verio.net>

Michael Str?der wrote:
> 
> Some objects are not pickeable but worth to be kept in a session
> cache. E.g. connection objects of a database access.

And mod_python will do a great job of keeping your connection object.
You will just have to have a connection object per child process (and
you'll need to make sure that MaxClients is not greater than the number
of allowed connections to your database server)

Grisha

From geoff at infostreet.com  Tue Oct 17 09:19:57 2000
From: geoff at infostreet.com (Geoff Cadien)
Date: Fri Jan  9 22:02:29 2004
Subject: [mod_python] Problem setting cookie and then redirecting
Message-ID: <39EC7C2D.F007C922@infostreet.com>

From jj at echobridge.com  Tue Oct 17 14:31:34 2000
From: jj at echobridge.com (Shannon -jj Behrens)
Date: Fri Jan  9 22:02:29 2004
Subject: [mod_python] FAQ or list archives
Message-ID: <39ECC536.1E121809@echobridge.com>

Dear Sirs,

Is there a FAQ or a mailing list archive that I can refer to?  I can't
seem to get mod_python to work in CGI mode using Python 1.6.  It keeps
complaining about:

File  File "/usr/local/apache/htdocs/aquarium/htdocs/index.py", line 35,
in ?
    Aquarium().handleRequest()
  File "/usr/local/apache/htdocs/aquarium/aquarium/util/Aquarium.py",
line 60, in handleRequest
    import cgi
  File "/usr/local/devel/lib/python1.6/cgi.py", line 747, in ?
    class FieldStorage:
  File "/usr/local/devel/lib/python1.6/cgi.py", line 991, in
FieldStorage
    bufsize = 8*1024            # I/O buffering size for copy to file
OverflowError: integer multiplication

Thanks,
-jj

-- 
Using a program to write a program to test a program has high leverage.
Kernigan and Pike, "The Practice of Programming."

From grisha at ispol.com  Tue Oct 17 16:35:22 2000
From: grisha at ispol.com (Gregory Trubetskoy)
Date: Fri Jan  9 22:02:30 2004
Subject: [mod_python] FAQ or list archives
In-Reply-To: <39ECC536.1E121809@echobridge.com>
Message-ID: <Pine.LNX.4.21.0010171633240.579-100000@saturn.ispol.com>

I saw something on usenet about this and glibc 2.1.93, it is reportedly a
glibc bug. What glibc are you using?

Grisha

On Tue, 17 Oct 2000, Shannon -jj Behrens wrote:

> Dear Sirs,
> 
> Is there a FAQ or a mailing list archive that I can refer to?  I can't
> seem to get mod_python to work in CGI mode using Python 1.6.  It keeps
> complaining about:
> 
> File  File "/usr/local/apache/htdocs/aquarium/htdocs/index.py", line 35,
> in ?
>     Aquarium().handleRequest()
>   File "/usr/local/apache/htdocs/aquarium/aquarium/util/Aquarium.py",
> line 60, in handleRequest
>     import cgi
>   File "/usr/local/devel/lib/python1.6/cgi.py", line 747, in ?
>     class FieldStorage:
>   File "/usr/local/devel/lib/python1.6/cgi.py", line 991, in
> FieldStorage
>     bufsize = 8*1024            # I/O buffering size for copy to file
> OverflowError: integer multiplication
> 
> Thanks,
> -jj
> 
> -- 
> Using a program to write a program to test a program has high leverage.
> Kernigan and Pike, "The Practice of Programming."
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://www.modpython.org/mailman/listinfo/mod_python
> 


From geoff at infostreet.com  Tue Oct 17 13:35:29 2000
From: geoff at infostreet.com (Geoff Cadien)
Date: Fri Jan  9 22:02:30 2004
Subject: [mod_python] Problem setting cookie and then redirecting
References: <Pine.LNX.4.21.0010171617090.579-100000@saturn.ispol.com>
Message-ID: <39ECB811.AEA563B4@infostreet.com>

That did the trick.  Thanks!

-geoff

Gregory Trubetskoy wrote:
> 
> Do this:
> 
> req.headers_out['Set-Cookie']='key=value'
> req.headers_out['location'] = 'http://localhost/index.html'
> req.status = apache.HTTP_MOVED_TEMPORARILY
> req.send_http_header()
> return apache.OK
> 
> The last line doesn't really matter since req.status is set and headers
> already went out.
> 
> Grisha
> 
> On Tue, 17 Oct 2000, Geoff Cadien wrote:
> 
> > >From a PythonHandler I'm trying to set a cookie and then do a redirect
> > and it is not working.  I'm doing:
> >
> > req.headers_out['Set-Cookie']='key=value'
> > req.headers_out['location'] = 'http://localhost/index.html'
> > return apache.HTTP_MOVED_TEMPORARILY
> >
> > The problem seems to be that if I don't do req.send_http_header() the
> > Set-Cookie doesn't get sent so the cookie doesn't get set.  If I do call
> > req.send_http_header() the cookie does get set but it seems as though
> > two sets of headers are sent and the response code is 200.  Any ideas?
> >
> > Geoff Cadien
> > geoff@infostreet.com
> > _______________________________________________
> > Mod_python mailing list
> > Mod_python@modpython.org
> > http://www.modpython.org/mailman/listinfo/mod_python
> >

From grisha at ispol.com  Tue Oct 17 16:30:12 2000
From: grisha at ispol.com (Gregory Trubetskoy)
Date: Fri Jan  9 22:02:30 2004
Subject: [mod_python] Problem setting cookie and then redirecting
In-Reply-To: <39EC7C2D.F007C922@infostreet.com>
Message-ID: <Pine.LNX.4.21.0010171617090.579-100000@saturn.ispol.com>

Do this:

req.headers_out['Set-Cookie']='key=value'
req.headers_out['location'] = 'http://localhost/index.html'
req.status = apache.HTTP_MOVED_TEMPORARILY
req.send_http_header()
return apache.OK

The last line doesn't really matter since req.status is set and headers
already went out.
 
Grisha

On Tue, 17 Oct 2000, Geoff Cadien wrote:

> >From a PythonHandler I'm trying to set a cookie and then do a redirect
> and it is not working.  I'm doing:
> 
> req.headers_out['Set-Cookie']='key=value'
> req.headers_out['location'] = 'http://localhost/index.html'
> return apache.HTTP_MOVED_TEMPORARILY
> 
> The problem seems to be that if I don't do req.send_http_header() the
> Set-Cookie doesn't get sent so the cookie doesn't get set.  If I do call
> req.send_http_header() the cookie does get set but it seems as though
> two sets of headers are sent and the response code is 200.  Any ideas?
> 
> Geoff Cadien
> geoff@infostreet.com
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://www.modpython.org/mailman/listinfo/mod_python
> 


From grisha at ispol.com  Wed Oct 18 23:31:04 2000
From: grisha at ispol.com (Gregory Trubetskoy)
Date: Fri Jan  9 22:02:30 2004
Subject: [mod_python] [ANNOUNCE] Mod_python 2.6
Message-ID: <Pine.LNX.4.21.0010182330290.5966-100000@saturn.ispol.com>

Mod_python is an Apache module that embeds Python within the server. For
information on mod_python go to http://www.modpython.org/

Installation is now greatly simplified through the use of autoconf
(./configure). Some new features were added, a few bugs fixed,
documentation improved. Many changes under the hood, improving
performance, organizing better code.

Enjoy!

--
  Gregory (Grisha) Trubetskoy
       grisha@ispol.com



From miguel at yorku.ca  Thu Oct 19 15:08:15 2000
From: miguel at yorku.ca (Miguel Marques)
Date: Fri Jan  9 22:02:30 2004
Subject: [mod_python] retaining state between handlers
In-Reply-To: <Pine.LNX.4.21.0010022321510.12796-100000@saturn.ispol.com>
References: <Pine.LNX.4.21.0010022321510.12796-100000@saturn.ispol.com>
Message-ID: <20001019150815S.miguel@yorku.ca>

On Mon, 2 Oct 2000 23:26:40 -0400 (EDT), Gregory Trubetskoy <grisha@ispol.com> wrote:
> 
> For those of you handy with CVS - I've checked in the new version, where
> the request object is a real Python object (as opposed to a built-in),
> which you can modify.
> 
> This allows passing information between handlers by simply doing something
> like:
> 
> req.myvariable = "something"
> 
> in one handler and then using that value in another. 
> 
> Note that different subinterpreters will have different requests objects,
> even though the underlying built-in (now req._req) is still the same.
> 
> --
Was this included in 2.6?  I just tried to do this between my Access Handler and
my Handler and it didn't work.

						Miguel

C. Miguel Marques, York University, Computing & Network Services
e-mail: miguel@yorku.ca, voice: (416)736-2100x22684, fax: (416)736-5830

From rsalz at CaveoSystems.com  Fri Oct 20 12:05:23 2000
From: rsalz at CaveoSystems.com (rsalz@CaveoSystems.com)
Date: Fri Jan  9 22:02:30 2004
Subject: [mod_python] Must I configure apache first?
Message-ID: <200010201605.MAA30030@os390.caveosystems.com>

It's not convenient to disable 'make dependencies' I have to do this:
	ac_cv_path_MKDEP=/bin/echo ./configure ...flags...
I'd rather see "--without-mkdep" or some such flag.

The reason for not wanting mkdep is that it needs ap_config_pool.h or some
such file, and since I haven't yet configured apache I don't have that file.

I don't want to configure apache because mod_ssl wants to do some things,
and doing mod_python apache and mod_ssl is all getting me confused. :)
(I keep the unconfig'd sources in my CVS tree and do product builds
from those virgin sources on a couple of platforms.)

More importantly, I'd rather the mod_python sources were just inserted
into the Apache tree and built as part of building apache.  I.e., the old
way.

thanks.
	/r$

From rsalz at CaveoSystems.com  Fri Oct 20 13:07:25 2000
From: rsalz at CaveoSystems.com (rsalz@CaveoSystems.com)
Date: Fri Jan  9 22:02:30 2004
Subject: [mod_python] Error in install_static in Makefile.in
Message-ID: <200010201707.NAA05411@os390.caveosystems.com>

	$(INSTALL) src/libpython.a $(AP_SRC)/src/modules/python/libmod_python.a
				 I had to add these four characters^^^^


From grisha at ispol.com  Fri Oct 20 13:03:28 2000
From: grisha at ispol.com (Gregory Trubetskoy)
Date: Fri Jan  9 22:02:30 2004
Subject: [mod_python] Must I configure apache first?
In-Reply-To: <200010201605.MAA30030@os390.caveosystems.com>
Message-ID: <Pine.LNX.4.21.0010201255180.12128-100000@saturn.ispol.com>

But you have to have Apache configured. Things like file locations,
OS-specific headers, etc, are all not there before configuration. I think
the fact that it compiles and works for you with unconfigured Apache is
pure luck.

You should let SSL do its thing, then compile and install mod_python. Or
you can do it the other way around. There shouldn't be any problems with
that.

--
  Gregory (Grisha) Trubetskoy
       grisha@ispol.com

On Fri, 20 Oct 2000 rsalz@caveosystems.com wrote:

> It's not convenient to disable 'make dependencies' I have to do this:
> 	ac_cv_path_MKDEP=/bin/echo ./configure ...flags...
> I'd rather see "--without-mkdep" or some such flag.
> 
> The reason for not wanting mkdep is that it needs ap_config_pool.h or some
> such file, and since I haven't yet configured apache I don't have that file.
> 
> I don't want to configure apache because mod_ssl wants to do some things,
> and doing mod_python apache and mod_ssl is all getting me confused. :)
> (I keep the unconfig'd sources in my CVS tree and do product builds
> from those virgin sources on a couple of platforms.)
> 
> More importantly, I'd rather the mod_python sources were just inserted
> into the Apache tree and built as part of building apache.  I.e., the old
> way.
> 
> thanks.
> 	/r$
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://www.modpython.org/mailman/listinfo/mod_python
> 


From jj at echobridge.com  Fri Oct 20 12:35:40 2000
From: jj at echobridge.com (Shannon -jj Behrens)
Date: Fri Jan  9 22:02:30 2004
Subject: [mod_python] cgihandler module reloads
Message-ID: <39F09E8C.BFD7EFC@echobridge.com>

The cgihandler documenation states that:

"The cgihandler reloads the module for every hit. However, the modules
imported by the main module do not get reloaded. This is good for
performance, but if your CGI scripts relied on this functionality, they
will be broken."

Is there any way I can force it to reload the modules?  By the way, if
this is documented elsewhere, please send me there, and I'll stop
bugging you guys ;)

-jj

-- 
Using a program to write a program to test a program has high leverage.
Kernigan and Pike, "The Practice of Programming."

From grisha at ispol.com  Fri Oct 20 15:22:15 2000
From: grisha at ispol.com (Gregory Trubetskoy)
Date: Fri Jan  9 22:02:30 2004
Subject: [mod_python] cgihandler module reloads
In-Reply-To: <39F09E8C.BFD7EFC@echobridge.com>
Message-ID: <Pine.LNX.4.21.0010201520010.12793-100000@saturn.ispol.com>

On Fri, 20 Oct 2000, Shannon -jj Behrens wrote:

> Is there any way I can force it to reload the modules?  By the way, if
> this is documented elsewhere, please send me there, and I'll stop
> bugging you guys ;)

well... to change your script to have somthing like

import mymodule
mymodule = reload(mymodule)

is about your only option...

Grisha



From dave_lambert at ev1.net  Fri Oct 20 14:46:59 2000
From: dave_lambert at ev1.net (David Lambert)
Date: Fri Jan  9 22:02:30 2004
Subject: [mod_python] Problems building apache 1.3.14 with mod_python2.6
Message-ID: <39F0A133.AEE8F92F@ev1.net>

If I attempt to build a static version of mod_python2.6 with
apache1.3.14. I get the following error. The DSO version seems to build
fine.

Any ideas?

Thanks,

David Lambert.


===> src/modules/python
make[4]: *** No rule to make target `libmod_python.a', needed by `lib'. 
Stop.
make[3]: *** [all] Error 1
make[2]: *** [subdirs] Error 1
make[2]: Leaving directory `/home/dlambert/lawnet/apache_1.3.14/src'
make[1]: *** [build-std] Error 2
make[1]: Leaving directory `/home/dlambert/lawnet/apache_1.3.14'
make: *** [build] Error 2

From grisha at ispol.com  Sat Oct 21 16:52:08 2000
From: grisha at ispol.com (Gregory Trubetskoy)
Date: Fri Jan  9 22:02:30 2004
Subject: [mod_python] 2.6.1 is out
Message-ID: <Pine.LNX.4.21.0010211650430.16840-100000@saturn.ispol.com>

2.6.1 only fixes a coule of issues related installation on some
platforms.

Enjoy,

--
  Gregory (Grisha) Trubetskoy
       grisha@ispol.com


From grisha at ispol.com  Sun Oct 22 00:05:13 2000
From: grisha at ispol.com (Gregory Trubetskoy)
Date: Fri Jan  9 22:02:30 2004
Subject: [mod_python] 2.6.2
Message-ID: <Pine.LNX.4.21.0010220003220.17894-100000@saturn.ispol.com>

...Some more installation isues were found. So there is 2.6.2 now.

Particularly the problem about "openpty" should go away now. Also the "No
current thread state" issue at apache exit should now be resolved.

Grisha


From kitezh at dol.ru  Mon Oct 23 16:27:33 2000
From: kitezh at dol.ru (kitezh)
Date: Fri Jan  9 22:02:30 2004
Subject: [mod_python] mod_python don't work on NT4.0
Message-ID: <35279115345.20001023162733@dol.ru>

Hello mod,

- Apache 1.3.9
- WinNT 4 SP 4

I do as instruction says:
LoadModule python_module modules/mod_python.dll

At start Apache says:
:
Cannot load ....\mod_python.dll into server:

Help pls!

SY Kitezh



From evaamo at loquesea.com  Mon Oct 23 11:39:32 2000
From: evaamo at loquesea.com (Enrique Vaamonde)
Date: Fri Jan  9 22:02:30 2004
Subject: [mod_python] mod_python don't work on NT4.0
In-Reply-To: <35279115345.20001023162733@dol.ru>
Message-ID: <000301c03d07$70bf6230$41dea8c0@wormhole>

dumb question but...did you copy the mod_python.dll into your modules
directory in Apache?

-E

-----Original Message-----
From: mod_python-admin@modpython.org
[mailto:mod_python-admin@modpython.org]On Behalf Of kitezh
Sent: Monday, October 23, 2000 8:28 AM
To: mod_python@modpython.org
Subject: [mod_python] mod_python don't work on NT4.0


Hello mod,

- Apache 1.3.9
- WinNT 4 SP 4

I do as instruction says:
LoadModule python_module modules/mod_python.dll

At start Apache says:
:
Cannot load ....\mod_python.dll into server:

Help pls!

SY Kitezh


_______________________________________________
Mod_python mailing list
Mod_python@modpython.org
http://www.modpython.org/mailman/listinfo/mod_python


From sbi at acse.be  Mon Oct 23 18:28:23 2000
From: sbi at acse.be (Stephane Bidoul)
Date: Fri Jan  9 22:02:30 2004
Subject: [mod_python] mod_python don't work on NT4.0
References: <35279115345.20001023162733@dol.ru>
Message-ID: <006501c03d0e$43590d80$caa679c1@spirou>

What python version do you use?
mod_python.dll is for python 1.5.2 only at the moment
(just a matter of recompiling).

-sbi

----- Original Message -----
From: "kitezh" <kitezh@dol.ru>
To: <mod_python@modpython.org>
Sent: Monday, 23 October, 2000 14:27
Subject: [mod_python] mod_python don't work on NT4.0


> Hello mod,
>
> - Apache 1.3.9
> - WinNT 4 SP 4
>
> I do as instruction says:
> LoadModule python_module modules/mod_python.dll
>
> At start Apache says:
> :
> Cannot load ....\mod_python.dll into server:
>
> Help pls!
>
> SY Kitezh
>
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://www.modpython.org/mailman/listinfo/mod_python
>



From kitezh at dol.ru  Tue Oct 24 13:02:53 2000
From: kitezh at dol.ru (kitezh)
Date: Fri Jan  9 22:02:30 2004
Subject: [mod_python] mod_python don't work on NT4.0
In-Reply-To: <000301c03d07$70bf6230$41dea8c0@wormhole>
References: <000301c03d07$70bf6230$41dea8c0@wormhole>
Message-ID: <160353238871.20001024130253@dol.ru>

Hello Enrique,

???????????, 23 ??????? 2000 ?., you wrote to me:

EV> dumb question but...did you copy the mod_python.dll into your modules
EV> directory in Apache?
sure :)



Best regards,
 kitezh                            mailto:kitezh@dol.ru



From sbi at acse.be  Tue Oct 24 14:49:58 2000
From: sbi at acse.be (Stephane Bidoul)
Date: Fri Jan  9 22:02:30 2004
Subject: [mod_python] mod_python don't work on NT4.0
References: <35279115345.20001023162733@dol.ru> <006501c03d0e$43590d80$caa679c1@spirou> <174353632607.20001024130927@dol.ru>
Message-ID: <002101c03db8$ea838ae0$caa679c1@spirou>

>I use 1.5.2
>But where can I write a path to my Python directory?

You don't need to do that; python15.dll is in your windows/system32
directory.
However the mod_python,'s own .py package must be in your PYTHONPATH
(if your have a mod_python subdir in your python directory, it should be
ok).

If everything it's ok, you'll need to be more specific about your issue
(maybe try to start apache on the command line and look at
the messages there).

'hope this helps.

-Stephane




From rsalz at CaveoSystems.com  Tue Oct 24 10:16:26 2000
From: rsalz at CaveoSystems.com (rsalz@CaveoSystems.com)
Date: Fri Jan  9 22:02:30 2004
Subject: [mod_python] Replacement for libmod_python.module
Message-ID: <200010241416.KAA16356@os390.caveosystems.com>

I was trying to build a statically-linked Apache from
	Apache 1.3.14
	mod_ssl
	mod_python 2.6.2

After spending some time with Appendix C of "Writing Apache Modules with
Perl and C," I got something to work.  (Or at least compile.  Not done
much testing yet.)

First, I had to create my own libmod_python.module; the distribution
has a libpython.module.  I don't understand which name and why, but so
be it.  Next, the INCLUDES flag doesn't need to be there since there is no
compiling from source.  The LDFLAGS doesn't need to be there since Apache
has its own rules for figuring out how to link itself.  Finally the LIBS
line was wrong -- it needed to *add* to the LIBS variable, not replace it.

So, in my case, I ended up with the following libmod_python.module.
Since this is part of my nightly build script, and since I didn't want
to muck with mod_python sources (I hate CVS merging :), I just this:
	cd $APACHE
	rm src/modules/python/*.module
	cat <<'EOF' > src/modules/python/libmod_python.module
Name: python_module
ConfigStart
    LIBS="/usr/local/lib/python2.0/config/libpython2.0.a $LIBS -lpthread -ldl -l util -ldb"
ConfigEnd
EOF

I suppose the distribution's .in file could be
    Name: python_module
    ConfigStart
	LIBS="$LIBS @LIBS@"
    ConfigEnd
But I haven't tested that.

I would rather see mod_python just figure out the Python headers and
extra libraries and dump source into the Apache tree.  That way configure
wouldn't need to do or notice anything about Apache.  But this works.
On a related issue, I'd like to see the install target(s) split into
two parts -- one that requires root access (the .py files in site_config)
and one that doesn't.  This could be handled with a Makefile trick, if
it's important to preserve the current scheme.
	INSTALL_PY_LIB	= install_py_lib
		...
	@$(MAKE) $(INSTALL_PY_LIB)

	NO: ; @echo not installing .py files...

Then I could do
	make install INSTALL_PY_LIB=NO

Hope others find this useful.  Thanks to Grisha for putting up with my
email gripes.
	/r$

From jcea at argo.es  Tue Oct 24 17:29:15 2000
From: jcea at argo.es (Jesus Cea Avion)
Date: Fri Jan  9 22:02:30 2004
Subject: [mod_python] BUG compiling Python 2.0 with dinamic modules in Solaris, with GCC
Message-ID: <39F5AACB.1501EF5F@argo.es>

(I can't post the patch in sourceforge since the SSL login seems to be
down in the last three hours)

Python 2.0 (dinamic modules)
Mod_Python 2.6.2 (dinamic module)
GCC 2.95.2
Apache 1.3.14 (dinamic modules)
SunOS5 (Solaris 2.x)

I send the email also to "mod_python" mailing list since I detect the
problem using this package. Other developers could see the very same
problem!.


Mod_python runs smoothly until I do a "import zlib", for example, in a
handler. In this case, the request is aborted with the following log:

>>>>>
[Tue Oct 24 16:27:40 2000] [error] PythonHandler cache: Traceback (most
recent call last):
[Tue Oct 24 16:27:40 2000] [error] PythonHandler cache:   File
"/usr/local/lib/python2.0/site-packages/mod_python/apache.py", line 185,
in Dispatch
    result = object(self.req)
[Tue Oct 24 16:27:40 2000] [error] PythonHandler cache:   File
"/export/home/webmaster/www.argo.es/servicios/cache.py", line 47, in
handler
    exec(cache[f][1])
[Tue Oct 24 16:27:40 2000] [error] PythonHandler cache:   File
"/export/home/webmaster/www.argo.es/servicios/borra_email", line 183, in
?
    req2=wrap(req)
[Tue Oct 24 16:27:40 2000] [error] PythonHandler cache:   File
"/export/home/webmaster/www.argo.es/servicios/borra_email", line 159, in
__init__
    import zlib
[Tue Oct 24 16:27:40 2000] [error] PythonHandler cache: ImportError:
ld.so.1: /opt/local/apache/bin/httpd: fatal: relocation error: file
/usr/local/lib/python2.0/lib-dynload/zlibmodule.so: symbol main:
referenced symbol not found
<<<<<

That is, "zlibmodule.so" tries to link to a function called "main".

Doing a "nm object|grep main", I see the unresolved reference in
"zlibmodule.so", but not in "zlibmodule.o". So, the problem seems to be
the creation of the shared library.

I tracked down the problem to the "configure" script: "cc -G" is (I
think) the right thing to do to create a shared library if you are using
the Sun compiler, but if you are using GCC (like me), the right command
is "gcc -shared".

Patch for Python 2.0:

>>>>>
Index: configure
===================================================================
RCS file: /opt/src/cvsroot/python/configure,v
retrieving revision 1.1.1.2
retrieving revision 1.1.1.2.2.1
diff -c -r1.1.1.2 -r1.1.1.2.2.1
*** configure   2000/10/18 19:06:44     1.1.1.2
--- configure   2000/10/24 14:19:01     1.1.1.2.2.1
***************
*** 2650,2656 ****
        SunOS/4*) LDSHARED="ld";;
        SunOS/5*) 
                if test "$GCC" = "yes"
!               then LDSHARED='$(CC) -G'
                else LDSHARED="ld -G";
                fi ;;
        hp*|HP*) LDSHARED="ld -b";;
--- 2650,2656 ----
        SunOS/4*) LDSHARED="ld";;
        SunOS/5*) 
                if test "$GCC" = "yes"
!               then LDSHARED='$(CC) -shared'
                else LDSHARED="ld -G";
                fi ;;
        hp*|HP*) LDSHARED="ld -b";;
Index: configure.in
===================================================================
RCS file: /opt/src/cvsroot/python/configure.in,v
retrieving revision 1.1.1.2
retrieving revision 1.1.1.2.2.1
diff -c -r1.1.1.2 -r1.1.1.2.2.1
*** configure.in        2000/10/18 19:06:45     1.1.1.2
--- configure.in        2000/10/24 14:19:03     1.1.1.2.2.1
***************
*** 564,570 ****
        SunOS/4*) LDSHARED="ld";;
        SunOS/5*) 
                if test "$GCC" = "yes"
!               then LDSHARED='$(CC) -G'
                else LDSHARED="ld -G";
                fi ;;
        hp*|HP*) LDSHARED="ld -b";;
--- 564,570 ----
        SunOS/4*) LDSHARED="ld";;
        SunOS/5*) 
                if test "$GCC" = "yes"
!               then LDSHARED='$(CC) -shared'
                else LDSHARED="ld -G";
                fi ;;
        hp*|HP*) LDSHARED="ld -b";;
<<<<<

-- 
Jesus Cea Avion                         _/_/      _/_/_/        _/_/_/
jcea@argo.es http://www.argo.es/~jcea/ _/_/    _/_/  _/_/    _/_/  _/_/
                                      _/_/    _/_/          _/_/_/_/_/
PGP Key Available at KeyServ   _/_/  _/_/    _/_/          _/_/  _/_/
"Things are not so easy"      _/_/  _/_/    _/_/  _/_/    _/_/  _/_/
"My name is Dump, Core Dump"   _/_/_/        _/_/_/      _/_/  _/_/
"El amor es poner tu felicidad en la felicidad de otro" - Leibniz

From cameron at infostreet.com  Tue Oct 24 14:49:23 2000
From: cameron at infostreet.com (Cameron La Rue)
Date: Fri Jan  9 22:02:30 2004
Subject: [mod_python] bug in PythonAuthenHandler?
Message-ID: <39F603E3.A38CBBD0@infostreet.com>

Hi all,
        I'm having trouble with an authentication script using
PythonAuthenHandler. First of all, we're running RedHat Linux 6.2,
Apache 1.3.9, mod_python 2.5, and python 1.5.2.

In my httpd.conf, I have the following:
#-------------------------------------------
AddHandler python-program .py
PythonHandler base2
<Location /test_enduser>
   AuthType auth
   AuthName PythonHosting
   AddHandler python-program .py
   PythonAuthenHandler base2::authenticate
   require valid-user
</Location>
#-------------------------------------------


I've got a script, base2.py, that looks like this:
#-------------------------------------------
def authenticate(req):
    e, si, so = apache.setup_cgi(req)
    apache.restore_nocgi(e, si, so)
    apache.log_error('here we are')
    return apache.OK

def handler(req):
    apache.log_error('handler works')
    e, si, so = apache.setup_cgi(req)
    apache.restore_nocgi(e, si, so)
    return apache.OK
#-------------------------------------------

Finally, I have an html page (test.html) that looks like this:
#-------------------------------------------
<html>
<body>
<a href='/test_enduser/enduser.html'>go man</a>
</body>
</html>
#-------------------------------------------

I am running apache in single process mode, like so:
/infostreet/apache/bin/httpd -X -f
~/projects/_current_/apache/httpd.conf

If I click the "go man" link in test.html, the base2::authenticate
method is called, and I am allowed to access /test_enduser/enduser.html.
Then, I click the back button on my browser. I click the "go man" link a
second time, base2:authenticate is called again, and apache segfaults.
It does print 'here we are' in the error log, so it gets that far.

I also noticed something else. If, after starting apache, I first access
a python script using PythonHandler, I can then access the
PythonAuthenHandler as many times as I want without apache segfaulting.
Is this a bug in the PythonAuthenHandler? Thanks in advance...

Cameron

From kitezh at dol.ru  Wed Oct 25 13:57:29 2000
From: kitezh at dol.ru (kitezh)
Date: Fri Jan  9 22:02:30 2004
Subject: [mod_python] mod_python don't work on NT4.0
In-Reply-To: <002101c03db8$ea838ae0$caa679c1@spirou>
References: <35279115345.20001023162733@dol.ru>
 <006501c03d0e$43590d80$caa679c1@spirou> <174353632607.20001024130927@dol.ru>
 <002101c03db8$ea838ae0$caa679c1@spirou>
Message-ID: <1727260936.20001025135729@dol.ru>

Hello Stephane,

???????, 24 ??????? 2000 ?., you wrote to me:

SB> You don't need to do that; python15.dll is in your windows/system32
SB> directory.
SB> However the mod_python,'s own .py package must be in your PYTHONPATH
SB> (if your have a mod_python subdir in your python directory, it should be
SB> ok).

SB> If everything it's ok, you'll need to be more specific about your issue
SB> (maybe try to start apache on the command line and look at
SB> the messages there).
More specific:
Error when starting from command line:
Syntax error on line 176 of c:/program files/apache group/apache/conf/httpd.conf
:
Cannot load c:/program files/apache group/apache/modules/mod_python.dll into ser
ver:

Error when starting from Services:
The application or DLL c:\program files\apache group\apache\mod_python.dll
is not a valid Windows NT image. Please chek this against your
installation diskette.


Best regards,
 kitezh                            mailto:kitezh@dol.ru



From mtiwari0 at cs.sc.edu  Thu Oct 26 12:44:53 2000
From: mtiwari0 at cs.sc.edu (Mayank Tiwari)
Date: Fri Jan  9 22:02:30 2004
Subject: [mod_python] make_obcallback returned no obCallBack!
Message-ID: <4.1.20001026124002.00a91c60@usceast.cs.sc.edu>

greetings all,

I am new to python, I tried to configure mod_python and ran into problems : 
here are the specifics:

Apache version : 1.3.12 Win32
Python 	: 1.52
mod_python 	:2.6.2

when ever i try to test the installation by the following python prog (
test.py) it doesn't work and the following error is generated ( from apache
errorlog)

[Thu Oct 26 12:34:20 2000] [error] [client xxx.xxx.xxx.xxx] python_handler:
make_obcallback returned no obCallBack!

(* i cahnged the ipaddress to x's )

Any help would be most appreciated. 

	-Mayank
Q.) God.. root.. What's the difference?       
A.) God is forgiving...


From mtiwari0 at cs.sc.edu  Thu Oct 26 12:47:27 2000
From: mtiwari0 at cs.sc.edu (Mayank Tiwari)
Date: Fri Jan  9 22:02:30 2004
Subject: [mod_python] make_obcallback returned no obCallBack!
Message-ID: <4.1.20001026124617.00a90b20@usceast.cs.sc.edu>

i forgot test .py... here it is


from mod_python import apache
def handler(req):
  req.content_type = "text/plain" 
  req.send_http_header()
  req.write("Hello World!")
  return apache.OK
  
I believe i have not missed nay required info, if i did, kindly poitn out.

	-mayank     
Q.) God.. root.. What's the difference?       
A.) God is forgiving...


From arhiv at freemail.org.mk  Fri Oct 27 16:32:21 2000
From: arhiv at freemail.org.mk (Damjan)
Date: Fri Jan  9 22:02:30 2004
Subject: [mod_python] make_obcallback returned no obCallBack!
In-Reply-To: <4.1.20001026124617.00a90b20@usceast.cs.sc.edu>
Message-ID: <Pine.LNX.4.21.0010271631080.1224-100000@localhost.localdomain>

> i forgot test .py... here it is

Try renaming 'test.pu' to something else, 
there already is a test package in Python.


-- 
Damjan Georgievski		|           ?????? ???????????
Skopje, Macedonia		|           ??????, ??????????


From grisha at ispol.com  Fri Oct 27 20:48:50 2000
From: grisha at ispol.com (Gregory Trubetskoy)
Date: Fri Jan  9 22:02:30 2004
Subject: [mod_python] Replacement for libmod_python.module
In-Reply-To: <200010241416.KAA16356@os390.caveosystems.com>
Message-ID: <Pine.LNX.4.21.0010272048050.17916-100000@saturn.ispol.com>

Exactly. this will be fixed in the next release.

On Tue, 24 Oct 2000 rsalz@caveosystems.com wrote:

> I suppose the distribution's .in file could be
>     Name: python_module
>     ConfigStart
> 	LIBS="$LIBS @LIBS@"
>     ConfigEnd


From grisha at ispol.com  Fri Oct 27 20:57:35 2000
From: grisha at ispol.com (Gregory Trubetskoy)
Date: Fri Jan  9 22:02:30 2004
Subject: [mod_python] make_obcallback returned no obCallBack!
In-Reply-To: <4.1.20001026124002.00a91c60@usceast.cs.sc.edu>
Message-ID: <Pine.LNX.4.21.0010272052590.18103-100000@saturn.ispol.com>

This error is ususally caused by the mod_python package not being in the
pythonpath of the Apache process.

There is a typo in the windows installation instructions:

 Move the files in the folder lib inside the mod_python folder (C:\Program
 Files\Python\lib\mod_python-2.x\lib\mod_python ) to the C:\Program
 Files\Python\lib\mod_python-2.x folder. 
                            ^^^^

The target should really just be "C:\Program
Files\Python\lib\mod_python". This could be the source fo your problem.

--
  Gregory (Grisha) Trubetskoy
       grisha@ispol.com

On Thu, 26 Oct 2000, Mayank Tiwari wrote:

> greetings all,
> 
> I am new to python, I tried to configure mod_python and ran into problems : 
> here are the specifics:
> 
> Apache version : 1.3.12 Win32
> Python 	: 1.52
> mod_python 	:2.6.2
> 
> when ever i try to test the installation by the following python prog (
> test.py) it doesn't work and the following error is generated ( from apache
> errorlog)
> 
> [Thu Oct 26 12:34:20 2000] [error] [client xxx.xxx.xxx.xxx] python_handler:
> make_obcallback returned no obCallBack!
> 
> (* i cahnged the ipaddress to x's )
> 
> Any help would be most appreciated. 
> 
> 	-Mayank
> Q.) God.. root.. What's the difference?       
> A.) God is forgiving...
> 
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://www.modpython.org/mailman/listinfo/mod_python
> 


From aiglauer at iname.com  Sun Oct 29 13:43:21 2000
From: aiglauer at iname.com (Alexis Iglauer)
Date: Fri Jan  9 22:02:30 2004
Subject: [mod_python] Output from C functions
Message-ID: <007c01c041a5$d213dbe0$0401a8c0@iglauer.UUCP>

I am running a long calculation using a web interface, and am having the
problem that the web client times out before the results come back.  I fixed
this by first printing a valid HTTP header and then having the Python script
print a counter, which the web browser picks up and prints - and then
doesn't time out.  Works very well.

BUT - I have now recoded the central calculation routine in C (all the
control/UI stuff is still Python), and placed a printf routine in there to
output the iterations like I did in the Python, but it doesn't get to the
webbrowser.  Any ideas why?  It prints to stdout if I just run the script
from the console, but not if I call it from apache.  Is there some buffering
when calling a C routine?

I am using mod_python 2.6.2 and I wrapped the C function using SWIG.

Grateful for any pointers.

Thanks
Alexis


From jwseo at philemon.co.kr  Mon Oct 30 04:38:12 2000
From: jwseo at philemon.co.kr (Seo jun won)
Date: Fri Jan  9 22:02:30 2004
Subject: [mod_python] =?euc-kr?B?SSBkb24ndCBrbm93IG1vZF9weXRob24gc3R5bGUgcHJvZ3JhbW1pbmcu?=
Message-ID: <20001030.AAA972848292@philemon.co.kr>

Skipped content of type multipart/alternative
From grisha at ispol.com  Sun Oct 29 17:30:43 2000
From: grisha at ispol.com (Gregory Trubetskoy)
Date: Fri Jan  9 22:02:30 2004
Subject: [mod_python] Output from C functions
In-Reply-To: <007c01c041a5$d213dbe0$0401a8c0@iglauer.UUCP>
Message-ID: <Pine.LNX.4.21.0010291725420.1950-100000@saturn.ispol.com>


The cgihandler redirects the sys.stdout to the client. Anything that uses
the real (non python) stdout will just print somewhere just like you
describe.

If you want to do this in C, you should use the req.write function. Here
is what a handler written in C might look like (skipping all the regular
python module stuff. Kids don't try this at home):

#include mod_python.h

static PyObject * handler(PyObject *self, PyObject *args)
{
	PyObject *r;
	requestobject *req = NULL;

	if (!PyArg_ParseTuple(args, "O", &r))
	    return NULL;

	req = (requestobject *)PyObject_GetAttrString(r, "_req");

	ap_send_http_header(req->request_rec);
	req->header_sent = 1;

	ap_table_set(req->request_rec->headers_out, "content-type", 
		     "text/plain");

	PyObject_CallMethod((PyObject *)req, "write", "s", "Hello World!\n");
	
	return PyInt_FromLong(OK);
}


--
  Gregory (Grisha) Trubetskoy
       grisha@ispol.com

On Sun, 29 Oct 2000, Alexis Iglauer wrote:

> I am running a long calculation using a web interface, and am having the
> problem that the web client times out before the results come back.  I fixed
> this by first printing a valid HTTP header and then having the Python script
> print a counter, which the web browser picks up and prints - and then
> doesn't time out.  Works very well.
> 
> BUT - I have now recoded the central calculation routine in C (all the
> control/UI stuff is still Python), and placed a printf routine in there to
> output the iterations like I did in the Python, but it doesn't get to the
> webbrowser.  Any ideas why?  It prints to stdout if I just run the script
> from the console, but not if I call it from apache.  Is there some buffering
> when calling a C routine?
> 
> I am using mod_python 2.6.2 and I wrapped the C function using SWIG.
> 
> Grateful for any pointers.
> 
> Thanks
> Alexis
> 
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://www.modpython.org/mailman/listinfo/mod_python
> 


From aiglauer at iname.com  Mon Oct 30 00:43:49 2000
From: aiglauer at iname.com (Alexis Iglauer)
Date: Fri Jan  9 22:02:30 2004
Subject: [mod_python] Output from C functions
References: <Pine.LNX.4.21.0010291725420.1950-100000@saturn.ispol.com>
Message-ID: <013501c04202$50e497a0$0401a8c0@iglauer.UUCP>

I'm doing this from inside a cgi script, would that make the solution any
easier?  Seems like a mightily complex way to do a printf :)  I would like
to stay entirely inside C for my loop, for speed purposes.  Can I maybe pass
the file handle of stdout to my function and then write to that?

aei
----- Original Message -----
From: "Gregory Trubetskoy" <grisha@ispol.com>
To: "Alexis Iglauer" <aiglauer@iname.com>
Cc: <mod_python@modpython.org>
Sent: Sunday, October 29, 2000 11:30 PM
Subject: Re: [mod_python] Output from C functions


>
>
> The cgihandler redirects the sys.stdout to the client. Anything that uses
> the real (non python) stdout will just print somewhere just like you
> describe.
>
> If you want to do this in C, you should use the req.write function. Here
> is what a handler written in C might look like (skipping all the regular
> python module stuff. Kids don't try this at home):
>
> #include mod_python.h
>
> static PyObject * handler(PyObject *self, PyObject *args)
> {
> PyObject *r;
> requestobject *req = NULL;
>
> if (!PyArg_ParseTuple(args, "O", &r))
>     return NULL;
>
> req = (requestobject *)PyObject_GetAttrString(r, "_req");
>
> ap_send_http_header(req->request_rec);
> req->header_sent = 1;
>
> ap_table_set(req->request_rec->headers_out, "content-type",
>      "text/plain");
>
> PyObject_CallMethod((PyObject *)req, "write", "s", "Hello World!\n");
>
> return PyInt_FromLong(OK);
> }
>
>
> --
>   Gregory (Grisha) Trubetskoy
>        grisha@ispol.com
>
> On Sun, 29 Oct 2000, Alexis Iglauer wrote:
>
> > I am running a long calculation using a web interface, and am having the
> > problem that the web client times out before the results come back.  I
fixed
> > this by first printing a valid HTTP header and then having the Python
script
> > print a counter, which the web browser picks up and prints - and then
> > doesn't time out.  Works very well.
> >
> > BUT - I have now recoded the central calculation routine in C (all the
> > control/UI stuff is still Python), and placed a printf routine in there
to
> > output the iterations like I did in the Python, but it doesn't get to
the
> > webbrowser.  Any ideas why?  It prints to stdout if I just run the
script
> > from the console, but not if I call it from apache.  Is there some
buffering
> > when calling a C routine?
> >
> > I am using mod_python 2.6.2 and I wrapped the C function using SWIG.
> >
> > Grateful for any pointers.
> >
> > Thanks
> > Alexis
> >
> > _______________________________________________
> > Mod_python mailing list
> > Mod_python@modpython.org
> > http://www.modpython.org/mailman/listinfo/mod_python
> >
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://www.modpython.org/mailman/listinfo/mod_python


From grisha at ispol.com  Sun Oct 29 21:12:49 2000
From: grisha at ispol.com (Gregory Trubetskoy)
Date: Fri Jan  9 22:02:30 2004
Subject: [mod_python] Output from C functions
In-Reply-To: <013501c04202$50e497a0$0401a8c0@iglauer.UUCP>
Message-ID: <Pine.LNX.4.21.0010292046530.2437-100000@saturn.ispol.com>

On Mon, 30 Oct 2000, Alexis Iglauer wrote:

> I'm doing this from inside a cgi script, would that make the solution any
> easier?  Seems like a mightily complex way to do a printf :)  

Actually, the CGI "printf" results into something that is indeed fairly
complex - there is at least three layers of networking protocols
underneath it.

> I would like to stay entirely inside C for my loop, for speed
> purposes.  Can I maybe pass the file handle of stdout to my function
> and then write to that?

Well, not really. That stdout is not a C file handle, nor does it contain
a reference to one. It's a Python object that implements the Python file
interface, that's all.

I think your problem is thinking in terms of CGI. If you are after speed,
then CGI is hardly the answer anyway. If I were you, I would start getting
confortable with the idea of abandoning the cute CGI printf way of
outputting things. ;-)

HTH -

Grisha



From aiglauer at yahoo.com  Mon Oct 30 00:40:46 2000
From: aiglauer at yahoo.com (Alexis Iglauer)
Date: Fri Jan  9 22:02:30 2004
Subject: [mod_python] Output from C functions
Message-ID: <20001030084046.21028.qmail@web2202.mail.yahoo.com>

> I think your problem is thinking in terms of CGI. If
> you are after speed,
> then CGI is hardly the answer anyway. If I were you,
> I would start getting
> confortable with the idea of abandoning the cute CGI
> printf way of
> outputting things. ;-)

I know, I know - and I am busy writing another app by
implementing my own handler, but after reading the
above sentence I am now no longer sure that I am doing
the right thing there.  I am essentially creating my
webpage dynamically by doing a whole bunch of
req.write('<Stick HTML in here>') calls.  Is this
efficient, and if not, what is?

My calculation app will be rewritten as a handler
sometime soon, but I think I will still have the same
problem - how do I output to the web client (or find
another way to keep the web client's attention) from
inside my speed-optimised C loop?

> 
> HTH -

Grisha,  if MS help were 1% as effective as yours,
Linux wouldn't be where it is today.

Regards
Alexis

> 
> Grisha




__________________________________________________
Do You Yahoo!?
Yahoo! Messenger - Talk while you surf!  It's FREE.
http://im.yahoo.com/

From grisha at ispol.com  Mon Oct 30 09:56:54 2000
From: grisha at ispol.com (Gregory Trubetskoy)
Date: Fri Jan  9 22:02:31 2004
Subject: [mod_python] Output from C functions
In-Reply-To: <20001030084046.21028.qmail@web2202.mail.yahoo.com>
Message-ID: <Pine.LNX.4.21.0010300955010.4713-100000@saturn.ispol.com>

On Mon, 30 Oct 2000, Alexis Iglauer wrote:

> > I think your problem is thinking in terms of CGI. If
> > you are after speed,
> > then CGI is hardly the answer anyway. If I were you,
> > I would start getting
> > confortable with the idea of abandoning the cute CGI
> > printf way of
> > outputting things. ;-)
> 
> I know, I know - and I am busy writing another app by
> implementing my own handler, but after reading the
> above sentence I am now no longer sure that I am doing
> the right thing there.  I am essentially creating my
> webpage dynamically by doing a whole bunch of
> req.write('<Stick HTML in here>') calls.  Is this
> efficient, and if not, what is?

Yes, very efficient.

> My calculation app will be rewritten as a handler
> sometime soon, but I think I will still have the same
> problem - how do I output to the web client (or find
> another way to keep the web client's attention) from
> inside my speed-optimised C loop?

You use the same req.write function except you call it from C (see the
code I sent in previous e-mail), or you can study the req.write() code and
use the Apache calls directly.

Grisha


From jwseo at ns.philemon.co.kr  Mon Oct 30 23:24:02 2000
From: jwseo at ns.philemon.co.kr (Seo jun won)
Date: Fri Jan  9 22:02:31 2004
Subject: [mod_python] I don't know mod_python style programming.
Message-ID: <Pine.LNX.4.21.0010302321490.27003-100000@ns.philemon.co.kr>

I'm a mod_python beginner. 
Supposing that I'll make web bbsboard using mod_python. 
Maybe, general Web bbsboard is consist of post, delete, reply.. etc
function. 
Following my handler example. 
-------------------- 
def handler(req): 
  if req.uri == 'post.py': 
    import post 
    mypost = post.postclass 
    mypost.post(some data) 
            . 
            . 
  elif req.uri == 'delete.py': 
    import delete 
    mydelete = delete.deleteclass 
            . 
            . 
            . 
  return apache.OK 
------------------- 
expatiation) Each post.py, delete.py are my definition class module. 

Is my handler's source mod_python style? 

Addition, 
If It's be right, my dbconnection clause('import mysqldb') that where
locate in? 

Thanks 
I'm using




From jjp at connix.com  Tue Oct 31 11:21:11 2000
From: jjp at connix.com (John Posner)
Date: Fri Jan  9 22:02:31 2004
Subject: [mod_python] need Windows version of mod_python compiled for extended API
Message-ID: <003101c04356$96fcc410$6e64fea9@jake>

On Windows NT 4.0 SP6, I'm trying to use mod_python.dll according to the
standard installation instructions. When I start Apache, I get this console
message:


  Loaded DSO modules/mod_python uses plain Apache 1.3 API,
  this module might crash under EAPI! (please recompile it with -DEAPI)

  Apache/1.3.12 (Win32) mod_python/2.6 Python/1.5.2 mod_perl/1.23 running...

I don't have an Apache development environment set up, so it would be great
to get a version of mod_python.dll compiled with -DEAPI, as suggested in the
message.

Tx,
John

--
John Posner, Editor           jjp@oreilly.com
O'Reilly & Associates         860-663-3147


