From christoph at cocon-seide.com  Thu Aug  1 09:33:47 2002
From: christoph at cocon-seide.com (Christoph Fritzsch)
Date: Fri Jan  9 21:46:51 2004
Subject: [mod_python] Configuring Apache
In-Reply-To: <3055.1028048088@www55.gmx.net>
Message-ID: <200208010737.g717bms59462@eden.ispol.com>

Hi Peter,

I tried it with Suse 7.3 some time ago and found it only workable by 

1) uncommenting all <Ifmodule python>  </if..>

#<IfDefine Python>
LoadModule python_module      /usr/lib/apache/mod_python.so
#</IfDefine>
#<IfDefine Python>
AddModule mod_python.c
#</IfDefine>

so the module is loaded for sure, as I couldnt get it to work with the Suse supplied 
starting parameters

2) Then I put this in there

#Python
#<IfModule mod_python.c>
<Directory "/usr/local/httpd/htdocs/test">
AddHandler python-program .py
PythonHandler mptest
PythonDebug On
</Directory>
#</IfModule>

as you did it

and  I also had to put in a  link 
/usr/lib/python2.1/site-packages/mod_python 
->/usr/lib/apache/lib/python2.1/site-packages/mod_python/

maybe you hv to replace the 2.1 to 2.2

reload apache and any file you call in the test directory will execute the mptest program

This is what the mod_python should do. That is as far as I got. I think next step is to 
expand the mptest program so you can call subroutines in it which presumaly do more 
usefull stuff than "Hello World!" !!

BR Christoph




From peter.bittner at gmx.net  Thu Aug  1 10:46:03 2002
From: peter.bittner at gmx.net (Peter Bittner)
Date: Fri Jan  9 21:46:51 2004
Subject: [mod_python] Re: Configuring Apache - It works!
References: <200208010737.g717bms59462@eden.ispol.com>
Message-ID: <18131.1028191563@www63.gmx.net>

Finally it works!
I had to create a symbolc link, as proposed by Christoph:

# ln -s /usr/lib/apache/lib/python2.2/site-packages/mod_python
/usr/lib/python2.2/site-packages/mod_python

Thank you very much!! - (I was at the end of my wisdom!)
Cheers, Peter


"Christoph Fritzsch" scripsit:
>
> and  I also had to put in a  link 
> /usr/lib/python2.1/site-packages/mod_python 
> ->/usr/lib/apache/lib/python2.1/site-packages/mod_python/

-- 
Peter Bittner
mobil: +43/(0)650/4151545
web: http://www.bittner.at.tf - http://beam.to/htmlkurs
mail: peter.bittner@gmx.net

"Free software is like free speech, not free beer" (Richard Stallman)

GMX - Die Kommunikationsplattform im Internet.
http://www.gmx.net


From rclilly at lvcm.com  Sat Aug  3 22:04:45 2002
From: rclilly at lvcm.com (Robert Lilly)
Date: Fri Jan  9 21:46:51 2004
Subject: [mod_python] Mod_python and Apache problems
Message-ID: <JBEILMCCPJDCPPHHKPFJCEDDCAAA.rclilly@lvcm.com>

Hello all,

I'm trying to get Mod_python to work with Apache/1.3.26 (Win32)
mod_python/2.7.6 Python/2.2.1 PHP/4.22 on Windows 2000 Professional.

I get the following error when I try to access the mptest.py page:

--
 [Sat Aug 03 21:19:55 2002] [warn] Loaded DSO modules/mod_python.dll uses
plain Apache 1.3 API, this module might crash  under EAPI! (please recompile
it with -DEAPI)
 make_obcallback(): could not import mod_python.apache.
 make_obcallback(): could not call init.
 make_obcallback(): could not import mod_python.apache.
 make_obcallback(): could not call init.
 make_obcallback(): could not import mod_python.apache.
 make_obcallback(): could not call init.
 make_obcallback(): could not import mod_python.apache.
 make_obcallback(): could not call init.
 make_obcallback(): could not import mod_python.apache.
 make_obcallback(): could not call init.
 [Sat Aug 03 21:20:07 2002] [error] [client 192.168.123.116] python_handler:
make_obcallback returned no obCallBack!
--

My httpd.conf contains the following:

    LoadModule python_module modules/mod_python.dll

    AddModule mod_python.c

    <Directory "E:/My Documents/RCL Enterprises/Web/htdocs/python">
            AddHandler python-program .py
            PythonHandler mptest
            PythonDebug on
    </Directory>


I try to access it using http://localhost/python/mptest.py and I get a 505
Internal Server Error. The error log contains the above.

Any clues about what I'm doing wrong? Does anyone have any pointers on
getting Python to work under Apache on Windows 2000?

TIA,

Robert Lilly
Apache/Python/PHP newbie!
---
Outgoing mail is certified Virus Free.
Checked by AVG anti-virus system (http://www.grisoft.com).
Version: 6.0.381 / Virus Database: 214 - Release Date: 8/2/2002


From Bryn.Davies at AirLiquide.com  Tue Aug  6 11:15:25 2002
From: Bryn.Davies at AirLiquide.com (Davies, Bryn)
Date: Fri Jan  9 21:46:51 2004
Subject: [mod_python] Win32 Installs: import _apache
Message-ID: <82E2D0C417E81A4CB94A56AD625FE4366BDD38@au-hokrypton.as.corp.airliquide.com>

 First, I apologise for jumping in straight away with a question, instead of
lurking around and possibly trying to help some others, but I'm a bit
puzzled as how to get around the problem I'm facing.

 I've run mod_python on Linux servers before, but for various reasons, work
wants this one deployed on Win32 for the moment.  Apache deployed fine, I
added mod_python.dll to LoadModules, performed the AddModule mod_python.c
etc, and Apache starts fine.  The problem arises when I try to execute the
example python script as shown in the Win32 Installation Guide ( App. A ):

 Here is an excerpt from the error log:

[Tue Aug 06 10:03:35 2002] [error] [client 172.17.1.39]   File "C:\program
files\python22\lib\mod_python\apache.py", line 55, in ?
[Tue Aug 06 10:03:35 2002] [error] [client 172.17.1.39]     import _apache
[Tue Aug 06 10:03:35 2002] [error] [client 172.17.1.39] ImportError: No
module named _apache

 At the expense of sounding like a dimwit, can anyone inform me of where
this module lives?  It doesn't seem to be in the distributions I downloaded.
If it is a code object, can someone likewise inform me of a source for a
precompiled version?  Decent compilers are rather scarce here.  It would be
great if I could get this project up on its legs, because ( irony ) if I can
get all this jumping on Win32, apparently I'll be able to use Linux servers
for the final deployment. :-P

 If anyone can give me any advice, I would be most greatful to them. :-)

 Regards, and happy pythoning,
  Bryn Davies.

-- 
Bryn Davies, Systems Administrator.
Air Liquide Healthcare Australia.

From rclilly at lvcm.com  Tue Aug  6 18:49:53 2002
From: rclilly at lvcm.com (Robert Lilly)
Date: Fri Jan  9 21:46:51 2004
Subject: [mod_python] Mod_python and Apache problems
In-Reply-To: <JBEILMCCPJDCPPHHKPFJCEDDCAAA.rclilly@lvcm.com>
Message-ID: <EGEMLKBGPBCGGGFNPMGNKECBCDAA.rclilly@lvcm.com>

I figured it out! So, for the sake of the archives, here's what I did.

It turns out that there's a second mod_python folder buried several levels
down inside the first one. THIS is the one that needs to go into python/Lib,
as it contains the necessary libraries. I moved it out from it's hiding
place and put it into python/Lib and it's "Hello world!"

I've decided to ignore the EAPI warning, since I can't figure out how to
re-compile mod_python.dll for Windows. The source code I downloaded from
modpython.org compiles for *nix and Cygwin.

Thanks,

Robert

-----Original Message-----
From: mod_python-admin@modpython.org
[mailto:mod_python-admin@modpython.org]On Behalf Of Robert Lilly
Sent: Saturday, August 03, 2002 10:05 PM
To: Mod_python List
Subject: [mod_python] Mod_python and Apache problems


Hello all,

I'm trying to get Mod_python to work with Apache/1.3.26 (Win32)
mod_python/2.7.6 Python/2.2.1 PHP/4.22 on Windows 2000 Professional.

I get the following error when I try to access the mptest.py page:

--
 [Sat Aug 03 21:19:55 2002] [warn] Loaded DSO modules/mod_python.dll uses
plain Apache 1.3 API, this module might crash  under EAPI! (please recompile
it with -DEAPI)
 make_obcallback(): could not import mod_python.apache.
 make_obcallback(): could not call init.
 make_obcallback(): could not import mod_python.apache.
 make_obcallback(): could not call init.
 make_obcallback(): could not import mod_python.apache.
 make_obcallback(): could not call init.
 make_obcallback(): could not import mod_python.apache.
 make_obcallback(): could not call init.
 make_obcallback(): could not import mod_python.apache.
 make_obcallback(): could not call init.
 [Sat Aug 03 21:20:07 2002] [error] [client 192.168.123.116] python_handler:
make_obcallback returned no obCallBack!
--

My httpd.conf contains the following:

    LoadModule python_module modules/mod_python.dll

    AddModule mod_python.c

    <Directory "E:/My Documents/RCL Enterprises/Web/htdocs/python">
            AddHandler python-program .py
            PythonHandler mptest
            PythonDebug on
    </Directory>


I try to access it using http://localhost/python/mptest.py and I get a 505
Internal Server Error. The error log contains the above.

Any clues about what I'm doing wrong? Does anyone have any pointers on
getting Python to work under Apache on Windows 2000?

TIA,

Robert Lilly
Apache/Python/PHP newbie!
---
Outgoing mail is certified Virus Free.
Checked by AVG anti-virus system (http://www.grisoft.com).
Version: 6.0.381 / Virus Database: 214 - Release Date: 8/2/2002

_______________________________________________
Mod_python mailing list
Mod_python@modpython.org
http://www.modpython.org/mailman/listinfo/mod_python
---
Incoming mail is certified Virus Free.
Checked by AVG anti-virus system (http://www.grisoft.com).
Version: 6.0.381 / Virus Database: 214 - Release Date: 8/2/2002

---
Outgoing mail is certified Virus Free.
Checked by AVG anti-virus system (http://www.grisoft.com).
Version: 6.0.381 / Virus Database: 214 - Release Date: 8/2/2002


From gharris at centauri.mb.ca  Wed Aug  7 00:22:33 2002
From: gharris at centauri.mb.ca (George Harrison)
Date: Fri Jan  9 21:46:51 2004
Subject: [mod_python] Win32 Installs: import _apache
In-Reply-To: <82E2D0C417E81A4CB94A56AD625FE4366BDD38@au-hokrypton.as.cor
 p.airliquide.com>
Message-ID: <5.1.0.14.2.20020807001652.00a4f900@pop.mb.sympatico.ca>

Sorry for the length of this post, but this is a list of the mod-python 
folder in my Python22 directory. This is working as far as responding 
"Hello World". On my installation, the .py files were not in the root of 
mod_python, and until I moved them, I was getting the same sort of errors 
as you are reporting.

I don't know enough about either python or apache to explain why these 
work, and I kind of forget where the files were after the install, so YMMV.

gh

TreePrint listing of: D:\Program Files\python22\Lib\mod_python

D:\Program Files\python22\Lib\mod_python
|   COPYRIGHT
|   CREDITS
|   Makefile.in
|   NEWS
|   README
|   configure
|   configure.in
|   install-sh
|   __init__.py
|   apache.py
|   cgihandler.py
|   httpdapi.py
|   publisher.py
|   util.py
|   zhandler.py
|   __init__.pyc
|   apache.pyc
|
+---doc-html
....html files
|   \---icons
|           icons2
|           up.gif
|           previous.png
|           previous.gif
|           next.png
|           next.gif
|           modules.png
|           modules.gif
|           index.png
|           index.gif
|           contents.png
|           contents.gif
|           blank.png
|           up.png
|           blank.gif
|
+---src
|       Makefile.in
|       Makefile.libdir
|       Makefile.tmpl
|       Version.rc
|       _apachemodule.c
|       arrayobject.c
|       connobject.c
|       libpython.module.in
|       mod_python.c
|       mod_python.dsp
|       mod_python.mak
|       requestobject.c
|       serverobject.c
|       tableobject.c
|       util.c
|
\---Doc
        ...tex files



>[Tue Aug 06 10:03:35 2002] [error] [client 172.17.1.39]   File "C:\program
>files\python22\lib\mod_python\apache.py", line 55, in ?
>[Tue Aug 06 10:03:35 2002] [error] [client 172.17.1.39]     import _apache
>[Tue Aug 06 10:03:35 2002] [error] [client 172.17.1.39] ImportError: No
>module named _apache


From rclilly at lvcm.com  Mon Aug 12 08:51:50 2002
From: rclilly at lvcm.com (Robert Lilly)
Date: Fri Jan  9 21:46:52 2004
Subject: [mod_python] make_obcallback(): could not import mod_python.apache
In-Reply-To: <28386.1028130053@www30.gmx.net>
Message-ID: <EGEMLKBGPBCGGGFNPMGNEEFKCDAA.rclilly@lvcm.com>

> -----Original Message-----
> From: mod_python-admin@modpython.org
> [mailto:mod_python-admin@modpython.org]On Behalf Of Peter Bittner
> Sent: Wednesday, July 31, 2002 08:41 AM
> To: mod_python@modpython.org
> Subject: [mod_python] make_obcallback(): could not import
> mod_python.apache
>
>
> I have mod_python installed on SuSE Linux 8.0 and I have set up my
> httpd.conf according to the mod_python documentation, but
> unfortunately I get the
> following error message in my error log:
>
> make_obcallback(): could not import mod_python.apache.
> make_obcallback(): could not call init.

Hi Peter,

I had a similar problem under Windows 2000. In my case in turned out that
there was a second mod_python folder buried several levels inside the first.
THAT is the one that needs to go into python/Lib. Once I did that then it
was "Hello World!"

Hope this helps,

Robert Lilly
---
Outgoing mail is certified Virus Free.
Checked by AVG anti-virus system (http://www.grisoft.com).
Version: 6.0.381 / Virus Database: 214 - Release Date: 8/2/2002


From declosmadeuce at logica.com  Tue Aug 13 11:49:55 2002
From: declosmadeuce at logica.com (De Closmadeuc, Etienne)
Date: Fri Jan  9 21:46:52 2004
Subject: [mod_python] Got error : "python_handler: Dispatch() returned nothing"
Message-ID: <A5290EF4F8CBD211BBA20090273A7E4A039780A9@descartes.fr.logica.com>

> Here is the configuration :
> 
> * Windows NT4 SP6
> * Apache 1.3.20 (Got the message "Apache/1.3.20 (Win32) mod_python/2.7.6
> Python/2.2.1 running..." in the Apache window)
> * Apache configuration file (httpd.conf) (dll correctly installed in
> modules directory) :
> ...
> Port 81
> ...
> LoadModule python_module modules/mod_python.dll
> ...
> <Directory "C:/Program Files/Apache Group/Apache_1_3_20/htdocs/Python">
> 	AddHandler python-program .py
> 	PythonHandler Hello
> 	PythonDebug On
> </Directory>
> 
> * Files in D:\Python22\Lib\mod_python :
> 
> 06/12/00  04:05                  2 411 __init__.py
> 13/08/02  11:26                    237 __init__.pyc
> 19/08/01  00:43                 27 728 apache.py
> 13/08/02  11:26                 26 984 apache.pyc
> 06/12/00  04:05                  5 099 cgihandler.py
> 19/08/01  00:43                 15 103 httpdapi.py
> 19/08/01  00:43                 11 092 publisher.py
> 14/12/00  00:45                 10 831 util.py
> 06/12/00  04:05                  3 360 zhandler.py
> 
> Note that "__init__.py" and "apache.py" have been automatically compiled
> by python after the url invocation.
> 
> * File in C:/Program Files/Apache Group/Apache_1_3_20/htdocs/Python
> 
> Hello.py : 
> 
> from mod_python import apache
> 
> def handler(req):
> 	req.content_type = "text/plain"
> 	req.send_http_header()
> 	req.write("Hello world !")
> 	return apache.OK
> 
> * Error message in error.log after url invocation
> (http://localhost:81/Python/Hello.py) :
> 
> [Tue Aug 13 11:26:26 2002] [error] [client 127.0.0.1] python_handler:
> Dispatch() returned nothing.
> 
> 
> Can you help me to fix that problem ? Thanks.
> 
> Etienne de Closmadeuc (declosmadeuce@logica.com)
> Logica SA
> 183, route de Can?jan 33173 GRADIGNAN CEDEX
> T?l : 05.56.75.77.00
> 
> 

This e-mail and any attachment is for authorised use by the intended recipient(s) only.  It may contain proprietary material, confidential information and/or be subject to legal privilege.  It should not be copied, disclosed to, retained or used by, any other party.  If you are not an intended recipient then please promptly delete this e-mail and any attachment and all copies and inform the sender.  Thank you.

From mateusz at ant.gliwice.pl  Wed Aug 14 23:10:50 2002
From: mateusz at ant.gliwice.pl (Mateusz Korniak)
Date: Fri Jan  9 21:46:52 2004
Subject: [mod_python] All power of mod_python in publisher handler ?
Message-ID: <200208142310.50497.mateusz@ant.gliwice.pl>

I'm in process of converting some 'pure' mod_python handlers to publishers 
one.
Basically my handlers looks like

def mod_python_handler(req):
	req.status = mod_python.apache.OK
	req.content_type = ....
	req.send_http_header()
	req.write(content_parts) 
	# many writes like above ...

	return mod_python.apache.OK

so I suppsed to proper equivalent publisher handler should look like:

def publisher_handler(req):
	mod_python_handler(req):

But any call of request.write() results an 500 Internal Server Error.
1) What I'm doing wrong ?
2) What I'm suposed to return from publisher_handler() when all what already 
send do browser via request.write() calls ?

Something opposite is cleanly stated in docs:
"And last, but not the least, note how all the power of mod_python is still 
available to this function, since it has access to the Request object. You 
can do all the same things you can do with a "native" mod_python handler, 
e.g. set custom headers via req.headers_out, return errors by raising 
apache.SERVER_ERROR exceptions, write or read directly to and from the client 
via req.write and req.read, etc. "

TIA
-- 
Mateusz Korniak



From mk at lrn.ru  Wed Aug 14 23:25:49 2002
From: mk at lrn.ru (Michael Krasnovsky)
Date: Fri Jan  9 21:46:52 2004
Subject: [mod_python] Publisher Handler and redirect
Message-ID: <20020814232549.30e7817e.mk@lrn.ru>

Hello!

I have a problem. I need redirection inside a publisher handler. I try
using req.headers_out["Location"] = "http://www.example.com", but it
doesn't work.
Here is the example:

def test(req):
	"""
	"""
	req.headers_out["Location"] = "http://www.example.com"
	req.send_http_header()
	
	return "Going to Example.com..."


What's wrong?
I use the latest mod_python version and 1.3.26 Apache running on Linux.

Thanks.

With best regards,
Michael.


From grisha at modpython.org  Wed Aug 14 18:45:57 2002
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 21:46:52 2004
Subject: [mod_python] Publisher Handler and redirect
In-Reply-To: <20020814232549.30e7817e.mk@lrn.ru>
Message-ID: <Pine.BSF.4.32.0208141845290.56606-100000@localhost>

Try something like:

 def test(req):
       req.headers_out["Location"] = "http://www.example.com"
       req.status = apache.HTTP_MOVED_TEMPORARILY
       return "Going to Example.com..."



On Wed, 14 Aug 2002, Michael Krasnovsky wrote:

> Hello!
>
> I have a problem. I need redirection inside a publisher handler. I try
> using req.headers_out["Location"] = "http://www.example.com", but it
> doesn't work.
> Here is the example:
>
> def test(req):
> 	"""
> 	"""
> 	req.headers_out["Location"] = "http://www.example.com"
> 	req.send_http_header()
>
> 	return "Going to Example.com..."
>
>
> What's wrong?
> I use the latest mod_python version and 1.3.26 Apache running on Linux.
>
> Thanks.
>
> With best regards,
> Michael.
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://www.modpython.org/mailman/listinfo/mod_python
>


From mk at lrn.ru  Thu Aug 15 12:16:48 2002
From: mk at lrn.ru (Michael Krasnovsky)
Date: Fri Jan  9 21:46:52 2004
Subject: [mod_python] Publisher Handler and redirect
In-Reply-To: <Pine.BSF.4.32.0208141845290.56606-100000@localhost>
References: <20020814232549.30e7817e.mk@lrn.ru>
	<Pine.BSF.4.32.0208141845290.56606-100000@localhost>
Message-ID: <20020815121648.4b7eb304.mk@lrn.ru>

Hi, Gregory!

Thanks a lot. It works.
I also think that  this case should be described somewhere in FAQ.
Mateusz is right.

Michael.

On Wed, 14 Aug 2002 18:45:57 -0400 (EDT)
"Gregory (Grisha) Trubetskoy" <grisha@modpython.org> wrote:

> 
> Try something like:
> 
>  def test(req):
>        req.headers_out["Location"] = "http://www.example.com"
>        req.status = apache.HTTP_MOVED_TEMPORARILY
>        return "Going to Example.com..."
> 
> 
> 
> On Wed, 14 Aug 2002, Michael Krasnovsky wrote:
> 
> > Hello!
> >
> > I have a problem. I need redirection inside a publisher handler. I
> > try using req.headers_out["Location"] = "http://www.example.com",
> > but it doesn't work.
> > Here is the example:
> >
> > def test(req):
> > 	"""
> > 	"""
> > 	req.headers_out["Location"] = "http://www.example.com"
> > 	req.send_http_header()
> >
> > 	return "Going to Example.com..."
> >
> >
> > What's wrong?
> > I use the latest mod_python version and 1.3.26 Apache running on
> > Linux.
> >
> > Thanks.
> >
> > With best regards,
> > Michael.
> >
> > _______________________________________________
> > Mod_python mailing list
> > Mod_python@modpython.org
> > http://www.modpython.org/mailman/listinfo/mod_python
> >
> 
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://www.modpython.org/mailman/listinfo/mod_python

From gbeasley at tsa.ac.za  Thu Aug 15 12:19:30 2002
From: gbeasley at tsa.ac.za (Grant Beasley)
Date: Fri Jan  9 21:46:52 2004
Subject: [mod_python] Internal redirect (to the same server)
Message-ID: <OOENKCHGJGHILGPAGHGOEEPOCDAA.gbeasley@tsa.ac.za>

Hi

If I want to redirect the browser to another URL on my server, I can use a
HTTP redirect, but as I understand it, the redirect gets sent to the
browser, which then goes to the new URL, i.e. comes back to my server. I
want to be able to tell apache to serve another URL, without the useless
loop back to the browser.

Is this possible? And if so, could you give me a few pointers?

Secondly, what is the difference between HTTP_MOVED_TEMPORARILY and
HTTP_TEMPORARY_REDIRECT?

Thanks
Grant Beasley


From mk at lrn.ru  Thu Aug 15 13:10:18 2002
From: mk at lrn.ru (Michael Krasnovsky)
Date: Fri Jan  9 21:46:52 2004
Subject: Fw: Re: [mod_python] Publisher Handler and redirect
Message-ID: <20020815131018.1bed9908.mk@lrn.ru>


Begin forwarded message:

Date: Thu, 15 Aug 2002 00:18:39 +0200
From: Mateusz Korniak <mateusz@ant.gliwice.pl>
To: mk@lrn.ru
Subject: Re: [mod_python] Publisher Handler and redirect


On Wednesday 14 August 2002 23:25, Michael Krasnovsky wrote:
> Hello!
>
> I have a problem. I need redirection inside a publisher handler. I try
> using req.headers_out["Location"] = "http://www.example.com", but it
> doesn't work.
> Here is the example:
>
> def test(req):
> 	"""
> 	"""
> 	req.headers_out["Location"] = "http://www.example.com"
> 	req.send_http_header()
> 	return "Going to Example.com..."
>
> What's wrong?
Missing req.status set to mod_python.apache.HTTP_*_REDIRECT
 
def redirect(req):
	req.status = mod_python.apache.HTTP_TEMPORARY_REDIRECT
	req.headers_out["Location"] = "http://www.ant.gliwice.pl"
	req.send_http_header()


P.S. This should go to FAQ ;)

-- 
Mateusz Korniak
"Black holes are where God divided by zero." - Steven Wright


-- 
Michael Krasnovsky

Partner
Project Leader

bisoft s.r.o., Prague, Czech Republic

T +420 [0]2  51 61 42 21
M +420 [0]724  13 33 80
E michael.krasnovsky@bisoft.cz

From fabbe at paniq.net  Thu Aug 15 16:04:58 2002
From: fabbe at paniq.net (Fabian Fagerholm)
Date: Fri Jan  9 21:46:52 2004
Subject: [mod_python] Questions for the FAQ - please check and confirm (req.write() and
 return)
Message-ID: <1029416698.982.40.camel@kernel>

I have FAQ entries that I wish to add, but I thought it would be best to
post them here first for review. I'd like you to
        * confirm that the text it correct and
        * provide any additional information you think would be
          appropriate.

I will then submit this information to the FAQ Wizard.

Here goes:

--8<--
Using req.write() and return statements in the Publisher Handler

You may only call req.write() once. If you call it several times, you'll
get strange results.

If you use req.write() in a function called by the Publisher Handler,
you must still return a string at the end of the function. An empty
string is not enough.
--8<--

Thanks,
Fabian

-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 240 bytes
Desc: This is a digitally signed message part
Url : http://mailman.modpython.org/pipermail/mod_python/attachments/20020815/a3eb7b4f/attachment.bin
From fabbe at paniq.net  Thu Aug 15 16:04:58 2002
From: fabbe at paniq.net (Fabian Fagerholm)
Date: Fri Jan  9 21:46:52 2004
Subject: [mod_python] Questions for the FAQ - please check and confirm (req.write() and
 return)
Message-ID: <1029416698.982.40.camel@kernel>

I have FAQ entries that I wish to add, but I thought it would be best to
post them here first for review. I'd like you to
        * confirm that the text it correct and
        * provide any additional information you think would be
          appropriate.

I will then submit this information to the FAQ Wizard.

Here goes:

--8<--
Using req.write() and return statements in the Publisher Handler

You may only call req.write() once. If you call it several times, you'll
get strange results.

If you use req.write() in a function called by the Publisher Handler,
you must still return a string at the end of the function. An empty
string is not enough.
--8<--

Thanks,
Fabian

-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 240 bytes
Desc: This is a digitally signed message part
Url : http://mailman.modpython.org/pipermail/mod_python/attachments/20020815/a3eb7b4f/attachment-0001.bin
From vmilitaru at sympatico.ca  Thu Aug 15 13:38:50 2002
From: vmilitaru at sympatico.ca (vio)
Date: Fri Jan  9 21:46:52 2004
Subject: [mod_python] Publisher Handler and redirect
In-Reply-To: <20020815121648.4b7eb304.mk@lrn.ru>; from mk@lrn.ru on Thu, Aug 15, 2002 at 12:16:48PM +0200
References: <20020814232549.30e7817e.mk@lrn.ru> <Pine.BSF.4.32.0208141845290.56606-100000@localhost> <20020815121648.4b7eb304.mk@lrn.ru>
Message-ID: <20020815133850.A338@eye.neb>

I believe the defining docs on mod_python redirection live in the FAQ (already).
http://www.modpython.org/FAQ/faqw.py?req=show&file=faq03.002.htp

Cheers, 
Vio


* Michael Krasnovsky <mk@lrn.ru> [020815 13:26]:
> Hi, Gregory!
> 
> Thanks a lot. It works.
> I also think that  this case should be described somewhere in FAQ.
> Mateusz is right.
> 
> Michael.
> 
> On Wed, 14 Aug 2002 18:45:57 -0400 (EDT)
> "Gregory (Grisha) Trubetskoy" <grisha@modpython.org> wrote:
> 
> > 
> > Try something like:
> > 
> >  def test(req):
> >        req.headers_out["Location"] = "http://www.example.com"
> >        req.status = apache.HTTP_MOVED_TEMPORARILY
> >        return "Going to Example.com..."
> > 
> > 
> > 
> > On Wed, 14 Aug 2002, Michael Krasnovsky wrote:
> > 
> > > Hello!
> > >
> > > I have a problem. I need redirection inside a publisher handler. I
> > > try using req.headers_out["Location"] = "http://www.example.com",
> > > but it doesn't work.
> > > Here is the example:
> > >
> > > def test(req):
> > > 	"""
> > > 	"""
> > > 	req.headers_out["Location"] = "http://www.example.com"
> > > 	req.send_http_header()
> > >
> > > 	return "Going to Example.com..."
> > >
> > >
> > > What's wrong?
> > > I use the latest mod_python version and 1.3.26 Apache running on
> > > Linux.
> > >
> > > Thanks.
> > >
> > > With best regards,
> > > Michael.
> > >
> > > _______________________________________________
> > > Mod_python mailing list
> > > Mod_python@modpython.org
> > > http://www.modpython.org/mailman/listinfo/mod_python
> > >
> > 
> > _______________________________________________
> > Mod_python mailing list
> > Mod_python@modpython.org
> > http://www.modpython.org/mailman/listinfo/mod_python
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://www.modpython.org/mailman/listinfo/mod_python

From vmilitaru at sympatico.ca  Thu Aug 15 13:38:50 2002
From: vmilitaru at sympatico.ca (vio)
Date: Fri Jan  9 21:46:52 2004
Subject: [mod_python] Publisher Handler and redirect
In-Reply-To: <20020815121648.4b7eb304.mk@lrn.ru>; from mk@lrn.ru on Thu, Aug 15, 2002 at 12:16:48PM +0200
References: <20020814232549.30e7817e.mk@lrn.ru> <Pine.BSF.4.32.0208141845290.56606-100000@localhost> <20020815121648.4b7eb304.mk@lrn.ru>
Message-ID: <20020815133850.A338@eye.neb>

I believe the defining docs on mod_python redirection live in the FAQ (already).
http://www.modpython.org/FAQ/faqw.py?req=show&file=faq03.002.htp

Cheers, 
Vio


* Michael Krasnovsky <mk@lrn.ru> [020815 13:26]:
> Hi, Gregory!
> 
> Thanks a lot. It works.
> I also think that  this case should be described somewhere in FAQ.
> Mateusz is right.
> 
> Michael.
> 
> On Wed, 14 Aug 2002 18:45:57 -0400 (EDT)
> "Gregory (Grisha) Trubetskoy" <grisha@modpython.org> wrote:
> 
> > 
> > Try something like:
> > 
> >  def test(req):
> >        req.headers_out["Location"] = "http://www.example.com"
> >        req.status = apache.HTTP_MOVED_TEMPORARILY
> >        return "Going to Example.com..."
> > 
> > 
> > 
> > On Wed, 14 Aug 2002, Michael Krasnovsky wrote:
> > 
> > > Hello!
> > >
> > > I have a problem. I need redirection inside a publisher handler. I
> > > try using req.headers_out["Location"] = "http://www.example.com",
> > > but it doesn't work.
> > > Here is the example:
> > >
> > > def test(req):
> > > 	"""
> > > 	"""
> > > 	req.headers_out["Location"] = "http://www.example.com"
> > > 	req.send_http_header()
> > >
> > > 	return "Going to Example.com..."
> > >
> > >
> > > What's wrong?
> > > I use the latest mod_python version and 1.3.26 Apache running on
> > > Linux.
> > >
> > > Thanks.
> > >
> > > With best regards,
> > > Michael.
> > >
> > > _______________________________________________
> > > Mod_python mailing list
> > > Mod_python@modpython.org
> > > http://www.modpython.org/mailman/listinfo/mod_python
> > >
> > 
> > _______________________________________________
> > Mod_python mailing list
> > Mod_python@modpython.org
> > http://www.modpython.org/mailman/listinfo/mod_python
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://www.modpython.org/mailman/listinfo/mod_python

From vmilitaru at sympatico.ca  Thu Aug 15 14:02:27 2002
From: vmilitaru at sympatico.ca (vio)
Date: Fri Jan  9 21:46:52 2004
Subject: [mod_python] Internal redirect (to the same server)
In-Reply-To: <OOENKCHGJGHILGPAGHGOEEPOCDAA.gbeasley@tsa.ac.za>; from gbeasley@tsa.ac.za on Thu, Aug 15, 2002 at 12:19:30PM +0200
References: <OOENKCHGJGHILGPAGHGOEEPOCDAA.gbeasley@tsa.ac.za>
Message-ID: <20020815140226.B338@eye.neb>

I believe that each browser handles the redirect HTTP messages a little 
differently, so redirection is browser-dependant.
But the question is rather how to by-pass the redirect altogether.
I believe you can do that by writing directly to the browser.

So instead of something like:
 _REQUEST.headers_out['location'] = 'http://' + your_other_virtual_server
 _REQUEST.status = apache.HTTP_MOVED_PERMANENTLY
 _REQUEST.send_http_header()
 raise apache.SERVER_RETURN, apache.OK

you would do something like:
 _REQUEST.headers_out.add('Pragma','no-cache')
 _REQUEST.headers_out.add( your other headers here)
 _REQUEST.send_http_header()

 _REQUEST.write(some_html_document)
 raise apache.SERVER_RETURN, apache.OK

where :
 some_html_document = """\
 <HTML>
 <HEAD><TITLE> Hello </TITLE></HEAD>
 <BODY>
 ...
 </BODY>
 </HTML>
 """

Hope this helps,
Vio


* Grant Beasley <gbeasley@tsa.ac.za> [020815 13:26]:
> Hi
> 
> If I want to redirect the browser to another URL on my server, I can use a
> HTTP redirect, but as I understand it, the redirect gets sent to the
> browser, which then goes to the new URL, i.e. comes back to my server. I
> want to be able to tell apache to serve another URL, without the useless
> loop back to the browser.
> 
> Is this possible? And if so, could you give me a few pointers?
> 
> Secondly, what is the difference between HTTP_MOVED_TEMPORARILY and
> HTTP_TEMPORARY_REDIRECT?
> 
> Thanks
> Grant Beasley
> 
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://www.modpython.org/mailman/listinfo/mod_python

From fabbe at paniq.net  Thu Aug 15 23:03:40 2002
From: fabbe at paniq.net (Fabian Fagerholm)
Date: Fri Jan  9 21:46:52 2004
Subject: [mod_python] Messages not getting through to list server?
Message-ID: <1029441820.982.225.camel@kernel>

Hi all,
Sorry to bother the list with this question, but has anyone noticed that
the mailing list seems to be extremely slow (or even not working at
all)?

Are there some network problems or is the server under too much load?

I'm hereby offering to host a backup MX for the modpython.org domain if
that would help at all. I might be in a position to offer to host the
mailing list as well if needed. Hardware and network connections are
sufficient to handle at least a few hundred messages per day.

Cheers,
Fabian



From ian at veryfresh.com  Thu Aug 15 15:37:04 2002
From: ian at veryfresh.com (Ian Clelland)
Date: Fri Jan  9 21:46:52 2004
Subject: [mod_python] Internal redirect (to the same server)
In-Reply-To: <OOENKCHGJGHILGPAGHGOEEPOCDAA.gbeasley@tsa.ac.za>
References: <OOENKCHGJGHILGPAGHGOEEPOCDAA.gbeasley@tsa.ac.za>
Message-ID: <20020815223704.GC11141@fullfactor.com>

On Thu, Aug 15, 2002 at 12:19:30PM +0200, Grant Beasley wrote:
> Hi
> 
> If I want to redirect the browser to another URL on my server, I can use a
> HTTP redirect, but as I understand it, the redirect gets sent to the
> browser, which then goes to the new URL, i.e. comes back to my server.

Yep. An HTTP redirect is a (usually) 301 status code sent back to the 
browser to tell it to request a different document. This allows for a 
great deal of flexibility on the server side -- you can go as far as 
redirecting clients to a completely different server, or to a different 
protocol (ftp: or mailto:, even).

> I
> want to be able to tell apache to serve another URL, without the useless
> loop back to the browser.
> 
> Is this possible? And if so, could you give me a few pointers?

If the extra messages really are useless, then the way to eliminate 
them is to change the URL on the server before Apache handles it. The 
simplest method is probably to use mod_alias (or mod_rewrite if you 
need something more powerful).

If you want to do this completely in mod_python, then you can write a 
PythonTransHandler, which will receive all requests, and has the chance 
to modify the URL before Apache passes the request to your main handler.

Remember, though, that in these cases, the client software has no idea 
that the URL has been changed, and will continue to request the old URL 
every time. This can be very useful if you are trying to create a 
'virtual' server layout which is different than your actualy filesystem 
layout, but at other times, you just want to tell the client 'sorry, 
this document has moved; please look for it here now.' That's when the 
HTTP redirects are useful.


> Secondly, what is the difference between HTTP_MOVED_TEMPORARILY and
> HTTP_TEMPORARY_REDIRECT?

HTTP/1.0 only had two redirection status codes: 301 (Moved Permanently) 
and 302 (Moved Temporarily). 302 was used for any situation where the 
client shouldn't remember the response, and should continue to request 
the original URL every time.

In HTTP/1.1, the 302 status code has been split into three different 
codes: 302 (now called 'Found'), 303 (See Other) and 307 (Temporary 
Redirect).

The idea behind this is that a 302 tells the client "I looked for the 
URL which you requested, and this is where I found it." It is not 
necessarily the case that the URL has changed, just that the document 
you want is somewhere else.

A 307 tells the client "The URL you requested has been temporarily 
moved. Please get it from this location, for now." This should be 
returned when the document used to be in one locaion, and probably will 
be back there again, but it has been moved out of the way for a while.

For all practical purposes, these two responses are exactly the same. 
The only difference (besides the semantics) is that HTTP/1.0 clients 
don't understand the 307 code at all, so if you want to use it, you'll 
have to check the protocol version (in mod_python, test req.proto_num 
>= 1001) and fall back to 302 if the client is using HTTP/1.0.


Neither of these status codes should usually be returned in response to 
a POST request, by the way. If a client receives a 302 or 307 from a 
POST request, then it is supposed to confirm the redirect with the 
user, and (after confirmation) repeat the POST to the new URL. A 303 
code can be returned to tell the client "I've processed your POST 
request, and the results you want are at this URL. Please use a GET 
query to access it."


--
Ian Clelland
<ian@veryfresh.com>

From sa at sfsu.edu  Thu Aug  1 17:00:00 2002
From: sa at sfsu.edu (Sean Abrahams)
Date: Fri Jan  9 21:46:53 2004
Subject: [mod_python] Session Handling Help + Writing a Guide On It
Message-ID: <73110242590.20020801170000@sfsu.edu>

I currently find myself having to create a web application using
session management (without cookies). I know there has been some
discussion in the past about adding a session handler to mod_python,
but I was hoping to get some help or get pointed in some directions
for my development.

I've heard that Apache 2.x has a shared memory space? I'm assuming
session data can be temporarily stored there for quick creation,
access, destruction?

I'm new to mod_python and apache handlers, so I'm currently going
through some learning curves.

Anyone willing to share their session development experience?

Here's my base idea (comments encouraged!):
1. I'll have a base directory that requires authorization
(/var/www/apps) which is accessed via the web at htts://foo.bar/apps

2. Any URL pointing to /var/www/apps and its subdirectories will be
handled by a central login script. It will store the initial URL the
user hit, so it can output the user to where he/she wished to go after
authorization. Thus, I can give people a direct link to an application
that's located somewhere inside /var/www/apps and it will prompt them
with the universal HTML login screen, then take them back to the URL
they originally entered.

3. When they login, their user/pass will be checked against a
database, with a positive ID creating a session. Throughout the
session, I can add/remove/modify data stored in the session data,
between pages, etc. (I'm not sure if it's fastest to store session
data in the file system or a DB, but I'm assuming being able to store
it in the system RAM would be most ideal. This is where the Apache 2.x
share memory comes in?)

4. Session ends when user clicks "logout", leaves my domain, or closes
the browser. Thus, if the user leaves the domain, then hits back in
their browser, he/she will get a "user authentication required" error,
or something similar.

I'm definitely excited about putting this together, just a little
disappointed in not being able to find a guide that helps me do this.
Thus, as a side effect to my development of this, and the help I
receive from this list, I will write and publish a guide detailing how
to create this functionality, providing the source code as well.

Thank you!
Sean


From sa at sfsu.edu  Mon Aug  5 09:38:58 2002
From: sa at sfsu.edu (Sean Abrahams)
Date: Fri Jan  9 21:46:53 2004
Subject: [mod_python] Session Handling Help + Writing a Guide On It
Message-ID: <15429380376.20020805093858@sfsu.edu>

I currently find myself having to create a web application using
session management (without cookies). I know there has been some
discussion in the past about adding a session handler to mod_python,
but I was hoping to get some help or get pointed in some directions
for my development.

I've heard that Apache 2.x has a shared memory space? I'm assuming
session data can be temporarily stored there for quick creation,
access, destruction?

I'm new to mod_python and apache handlers, so I'm currently going
through some learning curves.

Anyone willing to share their session development experience?

Here's my base idea (comments encouraged!):
1. I'll have a base directory that requires authorization
(/var/www/apps) which is accessed via the web at htts://foo.bar/apps

2. Any URL pointing to /var/www/apps and its subdirectories will be
handled by a central login script. It will store the initial URL the
user hit, so it can output the user to where he/she wished to go after
authorization. Thus, I can give people a direct link to an application
that's located somewhere inside /var/www/apps and it will prompt them
with the universal HTML login screen, then take them back to the URL
they originally entered.

3. When they login, their user/pass will be checked against a
database, with a positive ID creating a session. Throughout the
session, I can add/remove/modify data stored in the session data,
between pages, etc. (I'm not sure if it's fastest to store session
data in the file system or a DB, but I'm assuming being able to store
it in the system RAM would be most ideal. This is where the Apache 2.x
share memory comes in?)

4. Session ends when user clicks "logout", leaves my domain, or closes
the browser. Thus, if the user leaves the domain, then hits back in
their browser, he/she will get a "user authentication required" error,
or something similar.

I'm definitely excited about putting this together, just a little
disappointed in not being able to find a guide that helps me do this.
Thus, as a side effect to my development of this, and the help I
receive from this list, I will write and publish a guide detailing how
to create this functionality, providing the source code as well.

Thank you!
Sean


From dirkLeas at mac.com  Wed Aug  7 06:48:12 2002
From: dirkLeas at mac.com (Dirk Leas)
Date: Fri Jan  9 21:46:53 2004
Subject: [mod_python] 3.0.0 alpha binaries for Win32
In-Reply-To: <200208061611.g76GB4s39439@eden.ispol.com>
Message-ID: <000001c23dff$ef985d50$9865fea9@leasCray>

Anybody have 3.0.0 binaries available for download?

TIA,
D



From rien at yeepa.org  Wed Aug  7 23:05:30 2002
From: rien at yeepa.org (Adrien Plisson)
Date: Fri Jan  9 21:46:53 2004
Subject: [mod_python] Win32, Apache and mod_python
References: <EGEMLKBGPBCGGGFNPMGNKECBCDAA.rclilly@lvcm.com>
Message-ID: <004f01c23e56$2a6b4d60$2cee4cd4@RANDOM>

Hello,

I see a lot of posts concerning mod_pythonh under win32.
So, here is my own experience:
the first time i tried to install mod_python under windows 2000 i had to
tweak a bit with the install. I posted something about that some months ago.
Here is what you should do:

- install apache, you can find precompiled binaries at www.apache.org
- install python. ActiveState is giving a very good distribution of python
for windows for free called ActivePython (www.activestate.com)
- install mod_python. this means you have to download any distribution of
mod_python AND the precompiled mod_python.dll. then follow the instructions
in the mod_python manual (appendix A: Windows installation) except for those
points :

- point 1:
  * "Move (or just drag & drop) the mod python-x folder into the Python lib
     folder (i.e C:\ Program Files\ Python\ lib)."
    the mod_python-x folder should also be renamed 'mod_python'

  * "Move the files in the folder lib inside the mod python folder (C:\
     Program Files\ Python\ lib\ mod_python-x\ lib\ mod python) to the
     C:\ Program Files\ Python\ lib\ mod_python folder. It's safe to delete
these folders we just emptied."
   the first path is incorrect: it's
'...\lib\mod_python-x\python\mod_python\'

- point 2:
  * it talks about adding the LoadModule directive, but on my installation,
i
    had also to add a AddModule directive.

then it should run.

be aware that:

- if mod_python scripts are not in a folder covered by PYTHON_PATH then it
won't be found. on Win32, PYTHON_PATH is stored in the registry at
HKLM\SOFTWARE\PYTHON\PYTHONCORE\<version>\PYTHONPATH

- the warning about EAPI is an apache warning, not a mod_python warning, so
you have to recompile apache with -DEAPI, or download another precompiled
version from the apache website.

- the mod_ython documentation talks about python 1.5.2 or 2.0 and apache
1.3: for me, it runs with python 2.1, apache 1.3.23 and mod_python 2.7.4

- you simply CAN'T do a 'from mod_python import apache' in a python shell.
you HAVE TO be running under apache.

- included with apache are 2 modules named mod_info and mod_status which are
great tools to know if mod_python is running fine or was just ignored.

- the precompiled binaries of all stuffs you have to install are perfect
enough, don't try to compile them on your own unless you really know your
compiler (knowing it is much harder than anyone can think of)

So this is the most i can remember for the moment. i hope it will help... if
some points are not clear enough, just tell me, i will try to be more
precise.

--
rien



From Bryn.Davies at AirLiquide.com  Thu Aug  8 11:12:23 2002
From: Bryn.Davies at AirLiquide.com (Davies, Bryn)
Date: Fri Jan  9 21:46:53 2004
Subject: [mod_python] Humble pie, plus an apology.
Message-ID: <82E2D0C417E81A4CB94A56AD625FE4366DC532@au-hokrypton.as.corp.airliquide.com>

 First, I'd like to apologise for wasting all of your time.  The bug was due
to a typo in the Directory clause in httpd.conf, relating to where the
example python script was kept.  Fixing this, and removing the shebang from
the top of the python script ( hence returning its execution responsibilites
to Apache itself ) resolved my problem.  I shouldn't have assumed the
problem was modpython itself.

 Sorry! *blush*

-- 
Bryn Davies, IT Administrator, Air Liquide Healthcare.
"And journeyed up the mountainside, over the clouds...
 and nothing was ever heard of him again."

From vmilitaru at sympatico.ca  Thu Aug 15 23:45:42 2002
From: vmilitaru at sympatico.ca (vio)
Date: Fri Jan  9 21:46:53 2004
Subject: [Fwd: [mod_python] Messages not getting through to list server?]
In-Reply-To: <3D5C6A14.4B123BA5@sympatico.ca>; from vmilitaru@sympatico.ca on Thu, Aug 15, 2002 at 10:57:24PM -0400
References: <3D5C6A14.4B123BA5@sympatico.ca>
Message-ID: <20020815234542.A626@eye.neb>

I'd dare to say the mod_python list server has been quite terrible for the 
couple of months i've been subscribed to it. But I think the right move
here would rather be to simply move the list to 'sourceforge', and let them
take care of it. They have all the bandwidth and hardware to handle incredible
loads. Totally cheapo free for open source projects. Just have a look at:
http://sourceforge.net/docman/display_doc.php?docid=753&group_id=1#top
There is also a link with all their current (impressive!) hardware, 
but I can't seem to find it.

My 2 c.
Vio

Fabian Fagerholm wrote:
> 
> > Hi all,
> > Sorry to bother the list with this question, but has anyone noticed that
> > the mailing list seems to be extremely slow (or even not working at
> > all)?
> >
> > Are there some network problems or is the server under too much load?
> >
> > I'm hereby offering to host a backup MX for the modpython.org domain if
> > that would help at all. I might be in a position to offer to host the
> > mailing list as well if needed. Hardware and network connections are
> > sufficient to handle at least a few hundred messages per day.
> >
> > Cheers,
> > Fabian
> >
> > _______________________________________________
> > Mod_python mailing list
> > Mod_python@modpython.org
> > http://www.modpython.org/mailman/listinfo/mod_python

From fabbe at paniq.net  Fri Aug 16 10:52:53 2002
From: fabbe at paniq.net (Fabian Fagerholm)
Date: Fri Jan  9 21:46:53 2004
Subject: [Fwd: [mod_python] Messages not getting through to list server?]
In-Reply-To: <20020815234542.A626@eye.neb>
References: <3D5C6A14.4B123BA5@sympatico.ca>  <20020815234542.A626@eye.neb>
Message-ID: <1029484374.2093.10.camel@kernel>

On Fri, 2002-08-16 at 07:45, vio wrote:
> I'd dare to say the mod_python list server has been quite terrible for the 
> couple of months i've been subscribed to it. But I think the right move
> here would rather be to simply move the list to 'sourceforge', and let them
> take care of it. They have all the bandwidth and hardware to handle incredible
> loads. Totally cheapo free for open source projects. Just have a look at:
> http://sourceforge.net/docman/display_doc.php?docid=753&group_id=1#top
> There is also a link with all their current (impressive!) hardware, 
> but I can't seem to find it.

Wherever it ends up being hosted, I hope that these issues will be
resolved soon. I just got a bunch of messages from the list, some which
were sent back in July!

There can never be a thriving mod_python community if the basic means of
communication is cut off.

Without knowing anything about how the mod_python list server is set up,
I see no network problems with it. Connections to port 25 on the server
that is set up as MX for the domain modpython.org work just fine. So the
issue must be with the list software. Or perhaps the mail is transferred
to elsewhere and processed?

In any case, it would we nice if the list server admins could comment on
this. There are plenty of hands to use if help is needed, and there has
been an offer for a backup MX and a suggestion to use Sourceforge, which
should both be taken into consideration.

I'm don't want to offend anyone, but if the list will go on in this
shape, then perhaps the community should arrange for an alternative list
to use?

Cheers,
Fabian



From ian at veryfresh.com  Fri Aug 16 01:08:18 2002
From: ian at veryfresh.com (Ian Clelland)
Date: Fri Jan  9 21:46:53 2004
Subject: Fw: Re: [mod_python] Publisher Handler and redirect
In-Reply-To: <20020815131018.1bed9908.mk@lrn.ru>
References: <20020815131018.1bed9908.mk@lrn.ru>
Message-ID: <20020816080818.GD11141@fullfactor.com>

On Thu, Aug 15, 2002 at 01:10:18PM +0200, Michael Krasnovsky wrote:
> Missing req.status set to mod_python.apache.HTTP_*_REDIRECT
>  
> def redirect(req):
> 	req.status = mod_python.apache.HTTP_TEMPORARY_REDIRECT
> 	req.headers_out["Location"] = "http://www.ant.gliwice.pl"
> 	req.send_http_header()
> 
> 
> P.S. This should go to FAQ ;)

Your first line should probably be something like this:

  req.status = req.proto_num >= 1001 and \
      mod_python.apache.HTTP_TEMPORARY_REDIRECT or \
      mod_python.apache.HTTP_MOVED_TEMPORARILY

since older clients (Pre-HTTP/1.1) won't understand the
HTTP_TEMPORARY_REDIRECT status code.

--
Ian Clelland
<ian@veryfresh.com>

From fabbe at paniq.net  Fri Aug 16 15:17:14 2002
From: fabbe at paniq.net (Fabian Fagerholm)
Date: Fri Jan  9 21:46:53 2004
Subject: [mod_python] Questions for the FAQ - please check and confirm
	(req.write() and return) also docs update ...
In-Reply-To: <200208161351.42466.mateusz@ant.gliwice.pl>
References: <1029416698.982.40.camel@kernel> 
	<200208161351.42466.mateusz@ant.gliwice.pl>
Message-ID: <1029500235.2093.18.camel@kernel>

On Fri, 2002-08-16 at 14:51, Mateusz Korniak wrote:
> > --8<--
> > Using req.write() and return statements in the Publisher Handler
> >
> > You may only call req.write() once. If you call it several times, you'll
> > get strange results.
> >
> > If you use req.write() in a function called by the Publisher Handler,
> > you must still return a string at the end of the function. An empty
> > string is not enough.
> > --8<--
> >
> If it's so, mod_python docs 
> (http://www.modpython.org/live/mod_python-2.7.8/doc-html/tut-pub.html)
> needs update becouse I understand it quite opposite to text stated above.
> 
> """
> And last, but not the least, note how all the power of mod_python is still 
> available to this function, since it has access to the Request object. You 
> can do all the same things you can do with a "native" mod_python handler, 
> e.g. set custom headers via req.headers_out, return errors by raising 
> apache.SERVER_ERROR exceptions, write or read directly to and from the client 
> via req.write and req.read, etc. 
> """

Well, it doesn't explicitly say anywhere *how many times* the
req.write() function can be called.

I may very well be wrong, but if my tests are correct, you can only use
req.write() once in a regular mod_python handler. If you're using the
Publisher handler, you can use req.write() once, but then you *have* to
return something at the end of your function, or things won't work.

I agree though that the documentation needs updating. I've sent a
documentation patch (mostly touch-ups and a little rewording here and
there) to Gregory Trubetskoy some time ago, but received no reply.

Cheers,
Fabian



From grisha at modpython.org  Fri Aug 16 08:46:08 2002
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 21:46:53 2004
Subject: [Fwd: [mod_python] Messages not getting through to list server?]
In-Reply-To: <1029484374.2093.10.camel@kernel>
Message-ID: <Pine.BSF.4.32.0208160840230.89789-100000@localhost>

My appologies - the list indeed seemed to have had a problem. I'm getting
increasingly more dissatisfied with mailman - it has this "feature" where
messages to domains whose MX's cannot be looked up (probably because the
domain is no longer registered or DNS is down) clog up the entire list.

I've upgraded to 2.0.12 version of mailman, of this doesn't make it
better, I will look for other software.

Thanks to all who made offers to host - so far hosting is not a problem.
I'm not very keen on having the list at Sourceforge - I'd rather have more
control over it, also I don't know how long Sourceforge will be around -
these days nothing is certain. So far only CVS is hosted there.

Grisha

On 16 Aug 2002, Fabian Fagerholm wrote:

> On Fri, 2002-08-16 at 07:45, vio wrote:
> > I'd dare to say the mod_python list server has been quite terrible for the
> > couple of months i've been subscribed to it. But I think the right move
> > here would rather be to simply move the list to 'sourceforge', and let them
> > take care of it. They have all the bandwidth and hardware to handle incredible
> > loads. Totally cheapo free for open source projects. Just have a look at:
> > http://sourceforge.net/docman/display_doc.php?docid=753&group_id=1#top
> > There is also a link with all their current (impressive!) hardware,
> > but I can't seem to find it.
>
> Wherever it ends up being hosted, I hope that these issues will be
> resolved soon. I just got a bunch of messages from the list, some which
> were sent back in July!
>
> There can never be a thriving mod_python community if the basic means of
> communication is cut off.
>
> Without knowing anything about how the mod_python list server is set up,
> I see no network problems with it. Connections to port 25 on the server
> that is set up as MX for the domain modpython.org work just fine. So the
> issue must be with the list software. Or perhaps the mail is transferred
> to elsewhere and processed?
>
> In any case, it would we nice if the list server admins could comment on
> this. There are plenty of hands to use if help is needed, and there has
> been an offer for a backup MX and a suggestion to use Sourceforge, which
> should both be taken into consideration.
>
> I'm don't want to offend anyone, but if the list will go on in this
> shape, then perhaps the community should arrange for an alternative list
> to use?
>
> Cheers,
> Fabian
>
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://www.modpython.org/mailman/listinfo/mod_python
>


From grisha at modpython.org  Fri Aug 16 08:48:46 2002
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 21:46:53 2004
Subject: [mod_python] compiled code execution
In-Reply-To: <003301c22bd1$0ac2e820$0301a8c0@pentium>
Message-ID: <Pine.BSF.4.32.0208160848190.89789-100000@localhost>


On Mon, 15 Jul 2002, [iso-8859-2] Ji?? Kastner wrote:

> i'm interested about possibility to execute .pyc code by adding line to
> httpd.conf:
>
> AddHandler python-program .pyc
>
> or if this is nonsense, because python is executing it directly, if is .pyc
> present?

You just asnwered your own question :)

Grisha


From clee at spiralis.merseine.nu  Fri Aug 16 07:55:36 2002
From: clee at spiralis.merseine.nu (clee@spiralis.merseine.nu)
Date: Fri Jan  9 21:46:53 2004
Subject: [mod_python] Ping?
In-Reply-To: <20020714135537.A278@eye.neb>
References: <Pine.LNX.4.44.0207131250410.31967-100000@slippy.wire.rat>
	<20020714135537.A278@eye.neb>
Message-ID: <15708.63048.276061.704633@spiralis.merseine.nu>

>>>>> "vmilitaru" == vmilitaru  <vio> writes:

    vmilitaru> Same here. But even more problematic seems that some
    vmilitaru> messages never make it to the list (at least some of my
    vmilitaru> messages never did).  Possible solution (provided this
    vmilitaru> message make it to the list): how about migrating
    vmilitaru> modpython to 'sourceforge'? It's totally free and they
    vmilitaru> do an outstanding hosting job.

Sourceforge is great, but I would vote against this idea for one
reason: in my past experience, I have always prefered using the Mailman web
interface for browsing list archives over sourceforge's GeoCrawler
mail system.

Is it possible to use Mailman with sourceforge?

-chris

From grisha at modpython.org  Fri Aug 16 09:00:14 2002
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 21:46:53 2004
Subject: [mod_python] Questions for the FAQ - please check and confirm
 (req.write() and return) also docs update ...
In-Reply-To: <1029500235.2093.18.camel@kernel>
Message-ID: <Pine.BSF.4.32.0208160856250.89789-100000@localhost>


On 16 Aug 2002, Fabian Fagerholm wrote:

> If you're using the Publisher handler, you can use req.write() once,
> but then you *have* to return something at the end of your function,
> or things won't work.

You should be able to use write() many times as you like. It should also
be ok to return an empty string *if* you have written something with
write(), otherwise returning an empty document will cause a problem with
Netscape at least.

Grisha




From fabbe at paniq.net  Fri Aug 16 16:14:36 2002
From: fabbe at paniq.net (Fabian Fagerholm)
Date: Fri Jan  9 21:46:53 2004
Subject: [Fwd: [mod_python] Messages not getting through to list server?]
In-Reply-To: <Pine.BSF.4.32.0208160840230.89789-100000@localhost>
References: <Pine.BSF.4.32.0208160840230.89789-100000@localhost>
Message-ID: <1029503676.2028.41.camel@kernel>

On Fri, 2002-08-16 at 15:46, Gregory (Grisha) Trubetskoy wrote:
> My appologies - the list indeed seemed to have had a problem. I'm getting
> increasingly more dissatisfied with mailman - it has this "feature" where
> messages to domains whose MX's cannot be looked up (probably because the
> domain is no longer registered or DNS is down) clog up the entire list.
> 
> I've upgraded to 2.0.12 version of mailman, of this doesn't make it
> better, I will look for other software.

Let's hope that version works better. If not, I would suggest opening a
bug report (http://www.gnu.org/software/mailman/bugs.html).

> Thanks to all who made offers to host - so far hosting is not a problem.
> I'm not very keen on having the list at Sourceforge - I'd rather have more
> control over it, also I don't know how long Sourceforge will be around -
> these days nothing is certain. So far only CVS is hosted there.

I share this opinion on Sourceforge, and since we now know that the list
software had locked up, people can always yell if it happens again :)

Thanks for the clarification!

Cheers,
Fabian



From gbenson at redhat.com  Fri Aug 16 15:15:14 2002
From: gbenson at redhat.com (Gary Benson)
Date: Fri Jan  9 21:46:53 2004
Subject: [mod_python] How to make m_p handle everything
Message-ID: <20020816151513.B8120@redhat.com>

Hi,

Is it possible to make a mod_python script handle every request below a
certain path without using mod_rewrite or similar?

Cheers,
Gary

[ gbenson@redhat.com ][ GnuPG 85A8F78B ][ http://inauspicious.org/ ]

From grisha at modpython.org  Fri Aug 16 11:00:11 2002
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 21:46:53 2004
Subject: [mod_python] How to make m_p handle everything
In-Reply-To: <20020816151513.B8120@redhat.com>
Message-ID: <Pine.BSF.4.32.0208161059190.90085-100000@localhost>

Sure - if the script is in the python path somwhere that's how it would
work (unless I'm missing something in your question).

Grisha

On Fri, 16 Aug 2002, Gary Benson wrote:

> Hi,
>
> Is it possible to make a mod_python script handle every request below a
> certain path without using mod_rewrite or similar?
>
> Cheers,
> Gary
>
> [ gbenson@redhat.com ][ GnuPG 85A8F78B ][ http://inauspicious.org/ ]
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://www.modpython.org/mailman/listinfo/mod_python
>


From gbenson at redhat.com  Fri Aug 16 16:24:21 2002
From: gbenson at redhat.com (Gary Benson)
Date: Fri Jan  9 21:46:53 2004
Subject: [mod_python] How to make m_p handle everything
In-Reply-To: <Pine.BSF.4.32.0208161059190.90085-100000@localhost>; from grisha@modpython.org on Fri, Aug 16, 2002 at 11:00:11AM -0400
References: <20020816151513.B8120@redhat.com> <Pine.BSF.4.32.0208161059190.90085-100000@localhost>
Message-ID: <20020816162421.C8120@redhat.com>

On Fri, Aug 16, 2002 at 11:00:11AM -0400, Gregory (Grisha) Trubetskoy wrote:

> Sure - if the script is in the python path somwhere that's how it would
> work (unless I'm missing something in your question).

Erm, I'm probably not being very clear.  What I meant was, if I have a
server is there any way to map all requests inside http://foo.bar/webapp
to the same Python script such that http://foo.bar/webapp/baz and
http://foo.bar/webapp/quux both get served by (say) script.py.

Cheers,
Gary

[ gbenson@redhat.com ][ GnuPG 85A8F78B ][ http://inauspicious.org/ ]

From grisha at modpython.org  Fri Aug 16 11:56:44 2002
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 21:46:53 2004
Subject: [mod_python] How to make m_p handle everything
In-Reply-To: <20020816162421.C8120@redhat.com>
Message-ID: <Pine.BSF.4.32.0208161155110.92319-100000@localhost>

Yes, if for the document root directory you have

SetHandler python-program
PythonHandler script

then every single request on that server will be handled by script.py


On Fri, 16 Aug 2002, Gary Benson wrote:

> On Fri, Aug 16, 2002 at 11:00:11AM -0400, Gregory (Grisha) Trubetskoy wrote:
>
> > Sure - if the script is in the python path somwhere that's how it would
> > work (unless I'm missing something in your question).
>
> Erm, I'm probably not being very clear.  What I meant was, if I have a
> server is there any way to map all requests inside http://foo.bar/webapp
> to the same Python script such that http://foo.bar/webapp/baz and
> http://foo.bar/webapp/quux both get served by (say) script.py.
>
> Cheers,
> Gary
>
> [ gbenson@redhat.com ][ GnuPG 85A8F78B ][ http://inauspicious.org/ ]
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://www.modpython.org/mailman/listinfo/mod_python
>


From gbenson at redhat.com  Fri Aug 16 17:30:37 2002
From: gbenson at redhat.com (Gary Benson)
Date: Fri Jan  9 21:46:53 2004
Subject: [mod_python] How to make m_p handle everything
In-Reply-To: <Pine.BSF.4.32.0208161155110.92319-100000@localhost>; from grisha@modpython.org on Fri, Aug 16, 2002 at 11:56:44AM -0400
References: <20020816162421.C8120@redhat.com> <Pine.BSF.4.32.0208161155110.92319-100000@localhost>
Message-ID: <20020816173037.D8120@redhat.com>

On Fri, Aug 16, 2002 at 11:56:44AM -0400, Gregory (Grisha) Trubetskoy wrote:

> Yes, if for the document root directory you have
> 
> SetHandler python-program
> PythonHandler script
> 
> then every single request on that server will be handled by script.py

Oh yeah, I so should have been able to work that one out. /me slaps head.

Thanks for the help,
Gary

[ gbenson@redhat.com ][ GnuPG 85A8F78B ][ http://inauspicious.org/ ]

From thm at duke.edu  Fri Aug 16 13:22:30 2002
From: thm at duke.edu (Hunter Matthews)
Date: Fri Jan  9 21:46:53 2004
Subject: [mod_python] Complicated GET configuration
Message-ID: <1029518551.1517.29.camel@jade.biology.duke.edu>

I've got a configuration requirement for mod_python that I'm not sure
how to fill. I think I'm about 90% of the way there, but...

Basically I'm writing a server for a client I don't control. The client
can put out 2 kinds of requests.

POST requests that are simple XMLRPC calls. 
One of the idiosyncrases of the client is that the URL that is requested
is ALWAYS just /XMLRPC  - there is no script name or whatever.
I can handler these fine with the following config snippet:

<Location /XMLRPC>
    SetHandler python-program
    PythonHandler current_apache
</Location>


The GET requests have me stymied - to transfer big files, the client
uses GET requests. I'd like to have apache itself do the actual shifting
of bits, and just let my server application handle the authentication
that is required.

What I had as a first attempt was:
<Location /XMLRPC/$RHN>
    SetHandler python-program
    PythonAuthzHandler current_apache
</Location>

But this is clearly wrong (and it doesn't work, either :) 
Because I have the SetHandler, mod_python tries to handle ALL the
different parts of the request, when I only want it to handle the Authz
stage: if that PythonAuthzHandler returns  apache.OK, then I would like 
apache to pick up the URL and just fling it back at the client - the
python part is done.

If any other information is needed, please let me know.

Please note I can't change the client.

-- 
Hunter Matthews                          Unix / Network Administrator
Office: BioScience 145/244               Duke Univ. Biology Department
Key: F0F88438 / FFB5 34C0 B350 99A4 BB02  9779 A5DB 8B09 F0F8 8438
Never take candy from strangers. Especially on the internet.


From vmilitaru at sympatico.ca  Fri Aug 16 14:47:17 2002
From: vmilitaru at sympatico.ca (vio)
Date: Fri Jan  9 21:46:53 2004
Subject: [mod_python] Questions for the FAQ - please check and confirm (req.write() and return) also docs update ...
In-Reply-To: <Pine.BSF.4.32.0208160856250.89789-100000@localhost>; from grisha@modpython.org on Fri, Aug 16, 2002 at 09:00:14AM -0400
References: <1029500235.2093.18.camel@kernel> <Pine.BSF.4.32.0208160856250.89789-100000@localhost>
Message-ID: <20020816144717.A345@eye.neb>

Same here. My handler builds dynamic pages using successive calls to
req.write() with no problems. In fact, the only issue here might rather be 
whether it is better (as in 'less expensive') to 'assemble' the document in 
memory and send it in one swoop to the client, as opposed to sending it 
in many calls to req.write().
In other words, whether it's preferable to assemble a dynamic document at
the server level, or at the client level. I would tend to believe 
the former is better, because it reduces network traffic. Though I could be
mistaking. But mod_python definitely allows both strategies.

Vio

* Gregory (Grisha) Trubetskoy <grisha@modpython.org> [020816 14:23]:
> 
> 
> On 16 Aug 2002, Fabian Fagerholm wrote:
> 
> > If you're using the Publisher handler, you can use req.write() once,
> > but then you *have* to return something at the end of your function,
> > or things won't work.
> 
> You should be able to use write() many times as you like. It should also
> be ok to return an empty string *if* you have written something with
> write(), otherwise returning an empty document will cause a problem with
> Netscape at least.
> 
> Grisha
> 
> 
> 
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://www.modpython.org/mailman/listinfo/mod_python

From vmilitaru at sympatico.ca  Fri Aug 16 15:26:07 2002
From: vmilitaru at sympatico.ca (vio)
Date: Fri Jan  9 21:46:53 2004
Subject: [mod_python] Complicated GET configuration
In-Reply-To: <1029518551.1517.29.camel@jade.biology.duke.edu>; from thm@duke.edu on Fri, Aug 16, 2002 at 01:22:30PM -0400
References: <1029518551.1517.29.camel@jade.biology.duke.edu>
Message-ID: <20020816152607.B345@eye.neb>

* Hunter Matthews <thm@duke.edu> [020816 14:24]:
> 
> (...)
>
> What I had as a first attempt was:
> <Location /XMLRPC/$RHN>
>     SetHandler python-program
>     PythonAuthzHandler current_apache
> </Location>
> 
> But this is clearly wrong (and it doesn't work, either :) 
> Because I have the SetHandler, mod_python tries to handle ALL the
> different parts of the request, when I only want it to handle the Authz
> stage: if that PythonAuthzHandler returns  apache.OK, then I would like 
> apache to pick up the URL and just fling it back at the client - the
> python part is done.

My recalling of the mod_python manual reading (at least over a month old now,
so I might be wrong here) is that Apache handles requests in stages. And
with mod_python you pick and choose which stages you want to handle. 
But you never have to handle ALL stages.
Have you checked the tutorial file 'tut-more-complicated.html'?
I see there talk about 'PythonAuthenHandler', but nothing about
'PythonAuthzHandler' you are referring to here (a typo?).

I don't know if this is of any help, but an example of the different way 
GET and POST are handled, which I found quite useful, is illustrated in 
'util.py/class FieldStorage/__init__'.

Hope this helps,
Vio

From thm at duke.edu  Fri Aug 16 15:58:10 2002
From: thm at duke.edu (Hunter Matthews)
Date: Fri Jan  9 21:46:53 2004
Subject: [mod_python] Complicated GET configuration
In-Reply-To: <20020816152607.B345@eye.neb>
References: <1029518551.1517.29.camel@jade.biology.duke.edu> 
	<20020816152607.B345@eye.neb>
Message-ID: <1029527890.1312.9.camel@jade.biology.duke.edu>

On Fri, 2002-08-16 at 16:26, vio wrote:
> * Hunter Matthews <thm@duke.edu> [020816 14:24]:
> > 
> > (...)
> >
> > What I had as a first attempt was:
> > <Location /XMLRPC/$RHN>
> >     SetHandler python-program
> >     PythonAuthzHandler current_apache
> > </Location>
> > 
> > But this is clearly wrong (and it doesn't work, either :) 
> > Because I have the SetHandler, mod_python tries to handle ALL the
> > different parts of the request, when I only want it to handle the Authz
> > stage: if that PythonAuthzHandler returns  apache.OK, then I would like 
> > apache to pick up the URL and just fling it back at the client - the
> > python part is done.
> 
> My recalling of the mod_python manual reading (at least over a month old now,
> so I might be wrong here) is that Apache handles requests in stages. And
> with mod_python you pick and choose which stages you want to handle. 

Thats what I need to know here - how to choose to handle the Authz
stage, without choosing to handle the main default stage (throwing bits
down the socket).

> But you never have to handle ALL stages.
> Have you checked the tutorial file 'tut-more-complicated.html'?
> I see there talk about 'PythonAuthenHandler', but nothing about
> 'PythonAuthzHandler' you are referring to here (a typo?).

There is a reference to it on:
http://www.modpython.org/live/mod_python-2.7.8/doc-html/dir-handlers-syn.html

and running strings on the mod_python.so shows that it is there. There
is a reference to it in the mailing list archives.



> I don't know if this is of any help, but an example of the different way 
> GET and POST are handled, which I found quite useful, is illustrated in 
> 'util.py/class FieldStorage/__init__'.

The goal here is that if the URL is 
/XMLRPC/$RHN/anything

that we always run the Authz handler, and nothing else.

But since the requests aren't to a specific script 
(like /XMLRPC/$RHN/redhat-7.3-i386/listPackages/200208142123/script.py)

but are instead 
/XMLRPC/$RHN/redhat-7.3-i386/listPackages/200208142123

I'm not at all certain how to say

'''
For all URLs under /XMLRPC/$RHN
Please use the Authz handler to make sure the client is authorized,
and if so,
apache please send the client the file that was requested.
'''


> 
> Hope this helps,
> Vio
> 
> 
-- 
Hunter Matthews                          Unix / Network Administrator
Office: BioScience 145/244               Duke Univ. Biology Department
Key: F0F88438 / FFB5 34C0 B350 99A4 BB02  9779 A5DB 8B09 F0F8 8438
Never take candy from strangers. Especially on the internet.


From johannes at erdfelt.com  Fri Aug 16 16:09:07 2002
From: johannes at erdfelt.com (Johannes Erdfelt)
Date: Fri Jan  9 21:46:53 2004
Subject: [mod_python] Complicated GET configuration
In-Reply-To: <1029518551.1517.29.camel@jade.biology.duke.edu>; from thm@duke.edu on Fri, Aug 16, 2002 at 01:22:30PM -0400
References: <1029518551.1517.29.camel@jade.biology.duke.edu>
Message-ID: <20020816160907.J3414@sventech.com>

On Fri, Aug 16, 2002, Hunter Matthews <thm@duke.edu> wrote:
> 
> I've got a configuration requirement for mod_python that I'm not sure
> how to fill. I think I'm about 90% of the way there, but...
> 
> Basically I'm writing a server for a client I don't control. The client
> can put out 2 kinds of requests.
> 
> POST requests that are simple XMLRPC calls. 
> One of the idiosyncrases of the client is that the URL that is requested
> is ALWAYS just /XMLRPC  - there is no script name or whatever.
> I can handler these fine with the following config snippet:
> 
> <Location /XMLRPC>
>     SetHandler python-program
>     PythonHandler current_apache
> </Location>
> 
> The GET requests have me stymied - to transfer big files, the client
> uses GET requests. I'd like to have apache itself do the actual shifting
> of bits, and just let my server application handle the authentication
> that is required.
> 
> What I had as a first attempt was:
> <Location /XMLRPC/$RHN>
>     SetHandler python-program
>     PythonAuthzHandler current_apache
> </Location>
> 
> But this is clearly wrong (and it doesn't work, either :) 
> Because I have the SetHandler, mod_python tries to handle ALL the
> different parts of the request, when I only want it to handle the Authz
> stage: if that PythonAuthzHandler returns  apache.OK, then I would like 
> apache to pick up the URL and just fling it back at the client - the
> python part is done.
> 
> If any other information is needed, please let me know.

Drop the SetHandler then. All you need is the PythonAuthzHandler portion
and it'll do the right thing.

I do something like this:

  <FilesMatch "\.(m3u|mp3)$">
    PythonPath "sys.path+['/web/americandnb.com/python']"
    PythonAccessHandler m3u
  </FilesMatch>

And the m3u module does referer checking so people don't link directly
to the mp3's. If the Referer fails, we redirect to the main HTML for
that file (specific to our setup).

JE


From vmilitaru at sympatico.ca  Fri Aug 16 15:58:59 2002
From: vmilitaru at sympatico.ca (vio)
Date: Fri Jan  9 21:46:53 2004
Subject: [mod_python] Questions for the FAQ - please check and confirm (req.write() and return) also docs update ...
In-Reply-To: <200208162131.33048.mateusz@ant.gliwice.pl>; from mateusz@ant.gliwice.pl on Fri, Aug 16, 2002 at 09:31:33PM +0200
References: <1029500235.2093.18.camel@kernel> <Pine.BSF.4.32.0208160856250.89789-100000@localhost> <20020816144717.A345@eye.neb> <200208162131.33048.mateusz@ant.gliwice.pl>
Message-ID: <20020816155859.A419@eye.neb>

* Mateusz Korniak <mateusz@ant.gliwice.pl> [020816 15:26]:
> On Friday 16 August 2002 21:47, vio wrote:
> > Same here. My handler builds dynamic pages using successive calls to
> > req.write() with no problems. In fact, the only issue here might rather be
> > whether it is better (as in 'less expensive') to 'assemble' the document in
> > memory and send it in one swoop to the client, as opposed to sending it
> > in many calls to req.write().
> > In other words, whether it's preferable to assemble a dynamic document at
> > the server level, or at the client level. I would tend to believe
> > the former is better, because it reduces network traffic. Though I could be
> > mistaking. But mod_python definitely allows both strategies.
> >
> 
> Yes. But what in publisher handler case ?
> Can you use req.write() instead of returning page ?
> I get Internal server error in that case ... :(

I don't quite understand your question. req.write() IS the returning page.
But I think I know where the bobo is: it's the Internal server error message.

Try the following:
I am assuming you are using the out-of-the-box publisher. I suspect the problem
is not necessarily the 'req.write(), calls, so I suggest you try the following
debugging technique to find out your 'real' bug (you will have to modify the 
publisher.py like following):

somewhere before beginning of the handler() routine, add:
"""
# debugging LOG file - use this instead of '_REQUEST.write()' for debugging
LOG = open('/path/to/.../LOG', "a")
"""

then, find each line in publisher.py:
"""
return apache.HTTP_INTERNAL_SERVER_ERROR
"""

and modify it like this:
"""
LOG.write('line ...\n') # current line number in publisher.py
LOG.flush()
return apache.HTTP_INTERNAL_SERVER_ERROR
"""

This will help you pinpoint exactly who/what throws that Server Error message.
(just read the LOG file). Then work your way from there. I bet your problem
is not your req.write() calls, but something you don't even expect.

Debugging mod_python scripts is tricky, because you can not always write 
debugging messages to the browser. My solution is to use a LOG file.

Hope this helps. (It sure helped me a lot this far).
Vio

From ian at veryfresh.com  Fri Aug 16 13:27:45 2002
From: ian at veryfresh.com (Ian Clelland)
Date: Fri Jan  9 21:46:53 2004
Subject: [mod_python] Complicated GET configuration
In-Reply-To: <1029518551.1517.29.camel@jade.biology.duke.edu>
References: <1029518551.1517.29.camel@jade.biology.duke.edu>
Message-ID: <20020816202745.GE11141@fullfactor.com>

On Fri, Aug 16, 2002 at 01:22:30PM -0400, Hunter Matthews wrote:
> POST requests that are simple XMLRPC calls. 
> One of the idiosyncrases of the client is that the URL that is requested
> is ALWAYS just /XMLRPC  - there is no script name or whatever.
> I can handler these fine with the following config snippet:
> 
> <Location /XMLRPC>
>     SetHandler python-program
>     PythonHandler current_apache
> </Location>
> 
> 
> The GET requests have me stymied - to transfer big files, the client
> uses GET requests. I'd like to have apache itself do the actual shifting
> of bits, and just let my server application handle the authentication
> that is required.
> 
> What I had as a first attempt was:
> <Location /XMLRPC/$RHN>
>     SetHandler python-program
>     PythonAuthzHandler current_apache
> </Location>
> 
> But this is clearly wrong (and it doesn't work, either :) 
> Because I have the SetHandler, mod_python tries to handle ALL the
> different parts of the request, when I only want it to handle the Authz
> stage: if that PythonAuthzHandler returns  apache.OK, then I would like 
> apache to pick up the URL and just fling it back at the client - the
> python part is done.

Because of the <Location> directive, Apache will hand all requests for 
/XMLRPC and any URL below that to your python module. If you don't want 
mod_python to handle the GET requests underneath /XMLRPC, then your 
handler should return apache.DECLINED if req.uri != '/XMLRPC'.

Also, as far as I understand it, the SetHandler directive shouldn't be 
required in order to invoke a PythonAuthzHandler, but I could be wrong. 
(Not that it will make a difference in your case; the SetHandler for 
/XMLRPC will also affect the /XMLRPC/$RHN subdirectory anyway)


Ian Clelland
<ian@veryfresh.com>

From vmilitaru at sympatico.ca  Fri Aug 16 16:27:01 2002
From: vmilitaru at sympatico.ca (vio)
Date: Fri Jan  9 21:46:53 2004
Subject: [mod_python] Complicated GET configuration
In-Reply-To: <1029527890.1312.9.camel@jade.biology.duke.edu>; from thm@duke.edu on Fri, Aug 16, 2002 at 03:58:10PM -0400
References: <1029518551.1517.29.camel@jade.biology.duke.edu> <20020816152607.B345@eye.neb> <1029527890.1312.9.camel@jade.biology.duke.edu>
Message-ID: <20020816162701.A456@eye.neb>

* Hunter Matthews <thm@duke.edu> [020816 15:59]:
> ...
> There is a reference to it on:
> http://www.modpython.org/live/mod_python-2.7.8/doc-html/dir-handlers-syn.html

I see it. But I don't see 'PythonAuthzHandler' referenced anywhere in the 
main docs at
http://www.modpython.org/live/mod_python-2.7.8/doc-html/
I wonder why it's not documented?

> The goal here is that if the URL is 
> /XMLRPC/$RHN/anything
> 
> that we always run the Authz handler, and nothing else.
> 
> But since the requests aren't to a specific script 
> (like /XMLRPC/$RHN/redhat-7.3-i386/listPackages/200208142123/script.py)
> 
> but are instead 
> /XMLRPC/$RHN/redhat-7.3-i386/listPackages/200208142123
> 
> I'm not at all certain how to say
> 
> '''
> For all URLs under /XMLRPC/$RHN
> Please use the Authz handler to make sure the client is authorized,
> and if so,
> apache please send the client the file that was requested.
> '''

If I understand correctly, you only want to use the Authz handler from
mod_python, and nothing else.
I don't see a problem here, except for the undocumented Authz.
The way I would handle your problem whould be to just follow the instructions
in 'tut-more-complicated.html', see if it flies:

<Directory /XMLRPC/$RHN>
    AddHandler python-program .py
#    PythonHandler myscript - comment out to let Apache handle it
    PythonAuthenHandler yourAuthenScript
    AuthType Basic
    AuthName "Restricted Area"
    require valid-user
</Directory>


Have you tried something like this? (you'll have to write your own Authen 
handler, as described in 'tut-more-complicated.html')

Vio

From thm at duke.edu  Fri Aug 16 16:40:43 2002
From: thm at duke.edu (Hunter Matthews)
Date: Fri Jan  9 21:46:53 2004
Subject: [mod_python] Complicated GET configuration
In-Reply-To: <20020816202745.GE11141@fullfactor.com>
References: <1029518551.1517.29.camel@jade.biology.duke.edu> 
	<20020816202745.GE11141@fullfactor.com>
Message-ID: <1029530494.1195.22.camel@jade.biology.duke.edu>

On Fri, 2002-08-16 at 16:27, Ian Clelland wrote:

> Because of the <Location> directive, Apache will hand all requests for 
> /XMLRPC and any URL below that to your python module. If you don't want 
> mod_python to handle the GET requests underneath /XMLRPC, then your 
> handler should return apache.DECLINED if req.uri != '/XMLRPC'.

I switched to <Location ~ "/XMLRPC$">

So right now my apache config looks like: 

Alias /XMLRPC/$RHN/ /local/linux/current/www/

<Directory /local/linux>
    # I realize that the default config is to have symlinks on, but the 
    # current part should stand on its own.
    Options FollowSymLinks
    AllowOverride None
</Directory>

<Location ~ "/XMLRPC$">
    PythonPath "sys.path+['/usr/share/current']"
    SetHandler python-program
    PythonHandler current_apache
</Location>

<Location /XMLRPC/$RHN>
    PythonPath "sys.path+['/usr/share/current']"
    PythonAuthzHandler current_apache
</Location>



> 
> Also, as far as I understand it, the SetHandler directive shouldn't be 
> required in order to invoke a PythonAuthzHandler, but I could be wrong. 
> (Not that it will make a difference in your case; the SetHandler for 
> /XMLRPC will also affect the /XMLRPC/$RHN subdirectory anyway)

That would be ideal. However, with the following code in 
/usr/share/current/current_apache.py:

def authzhandler(req):
    """ temp function for testing"""

    apache.log_error("Inside the authzhandler!")
    apache.log_error("method = %s" % req.method)
    apache.log_error("headers = %s" % pprint.pprint(req.headers_in))

    return apache.OK


After an apache restart (to make sure all the updated modules get
reloaded) I'm not seeing any of those log_errors in the error file.
Once I see something (anything) I'll replace that code with the real
thing.

I appreciate the help from the list.





-- 
Hunter Matthews                          Unix / Network Administrator
Office: BioScience 145/244               Duke Univ. Biology Department
Key: F0F88438 / FFB5 34C0 B350 99A4 BB02  9779 A5DB 8B09 F0F8 8438
Never take candy from strangers. Especially on the internet.


From thm at duke.edu  Fri Aug 16 17:05:28 2002
From: thm at duke.edu (Hunter Matthews)
Date: Fri Jan  9 21:46:54 2004
Subject: [mod_python] Complicated GET configuration
In-Reply-To: <1029530494.1195.22.camel@jade.biology.duke.edu>
References: <1029518551.1517.29.camel@jade.biology.duke.edu> 
	<20020816202745.GE11141@fullfactor.com> 
	<1029530494.1195.22.camel@jade.biology.duke.edu>
Message-ID: <1029531928.1195.28.camel@jade.biology.duke.edu>

On Fri, 2002-08-16 at 16:40, Hunter Matthews wrote:
> On Fri, 2002-08-16 at 16:27, Ian Clelland wrote:
> 
> > Because of the <Location> directive, Apache will hand all requests for 
> > /XMLRPC and any URL below that to your python module. If you don't want 
> > mod_python to handle the GET requests underneath /XMLRPC, then your 
> > handler should return apache.DECLINED if req.uri != '/XMLRPC'.
> 
> I switched to <Location ~ "/XMLRPC$">
> 
> So right now my apache config looks like: 
> 
> Alias /XMLRPC/$RHN/ /local/linux/current/www/
> 
> <Directory /local/linux>
>     # I realize that the default config is to have symlinks on, but the 
>     # current part should stand on its own.
>     Options FollowSymLinks
>     AllowOverride None
> </Directory>
> 
> <Location ~ "/XMLRPC$">
>     PythonPath "sys.path+['/usr/share/current']"
>     SetHandler python-program
>     PythonHandler current_apache
> </Location>
> 
> <Location /XMLRPC/$RHN>
>     PythonPath "sys.path+['/usr/share/current']"
>     PythonAuthzHandler current_apache
> </Location>
> 
> 
> 
> > 
> > Also, as far as I understand it, the SetHandler directive shouldn't be 
> > required in order to invoke a PythonAuthzHandler, but I could be wrong. 
> > (Not that it will make a difference in your case; the SetHandler for 
> > /XMLRPC will also affect the /XMLRPC/$RHN subdirectory anyway)
> 
> That would be ideal. However, with the following code in 
> /usr/share/current/current_apache.py:
> 
> def authzhandler(req):
>     """ temp function for testing"""
> 
>     apache.log_error("Inside the authzhandler!")
>     apache.log_error("method = %s" % req.method)
>     apache.log_error("headers = %s" % pprint.pprint(req.headers_in))
> 
>     return apache.OK
> 
> 
> After an apache restart (to make sure all the updated modules get
> reloaded) I'm not seeing any of those log_errors in the error file.
> Once I see something (anything) I'll replace that code with the real
> thing.
> 
> I appreciate the help from the list.

Sorry to spam the list so hard today, but I've figured one piece of it
out:

def authzhandler(req):
    """ temp function for testing"""
 
    apache.log_error("Inside the authzhandler!")
    apache.log_error("method = %s" % req.method)
    apache.log_error("headers = %s" % pprint.pprint(req.headers_in))

    return apache.OK

This code still results in nothing in my logs. On the theory that
perhaps it was undocumented for a reason, I tried a different (nearly
random) handler:


def headerparserhandler(req):
    """ temp function for testing"""

    apache.log_error("Inside the headerparserhandler!")
    apache.log_error("method = %s" % req.method)
#    apache.log_error("headers = %s" % pprint.pprint(req.headers_in))
    for key in req.headers_in.keys():
        apache.log_error("hdr[%s] = %s" % (key, req.headers_in[key]))
    return apache.HTTP_UNAUTHORIZED                      

AND THIS WORKS JUST FINE!

If anyone on the list has any ideas why the authz handler, which
_looked_ like the handler I should use (using HTTP request headers to
determine if a client was authorized to make this request), isn't
working, I'd still appreciate knowing. 

However, I should be able to use this handler or maybe even
PythonAuthenHandler, so its not a critical issue for me now.

THanks everyone.

-- 
Hunter Matthews                          Unix / Network Administrator
Office: BioScience 145/244               Duke Univ. Biology Department
Key: F0F88438 / FFB5 34C0 B350 99A4 BB02  9779 A5DB 8B09 F0F8 8438
Never take candy from strangers. Especially on the internet.


From mateusz at ant.gliwice.pl  Fri Aug 16 23:22:37 2002
From: mateusz at ant.gliwice.pl (Mateusz Korniak)
Date: Fri Jan  9 21:46:54 2004
Subject: [mod_python] req.write() in publisher_handler
In-Reply-To: <20020816155859.A419@eye.neb>
References: <1029500235.2093.18.camel@kernel> <200208162131.33048.mateusz@ant.gliwice.pl> <20020816155859.A419@eye.neb>
Message-ID: <200208162322.37479.mateusz@ant.gliwice.pl>

On Friday 16 August 2002 22:58, vio wrote:
> * Mateusz Korniak <mateusz@ant.gliwice.pl> [020816 15:26]:
> > Yes. But what in publisher handler case ?
> > Can you use req.write() instead of returning page ?
> > I get Internal server error in that case ... :(
>
> I don't quite understand your question. req.write() IS the returning page.
> But I think I know where the bobo is: it's the Internal server error
> message.

So let me be ( I hope) much more clear: Below my publisher handler:

import mod_python.apache
page = """<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<html><head><title>Test page</title></head>
<body> Test </body> </html>"""

def req_write(req):
	req.status = mod_python.apache.OK
	req.content_type = "text/html; charset=utf-8"
	req.send_http_header()
	req.write(page)
	open("/tmp/marker","w") # Test if we have exceptions 
		#before returning from handler

def req_return(req):
	req.status = mod_python.apache.OK
	req.content_type = "text/html; charset=utf-8"
	req.send_http_header()
	return page

http://abbon.ant.vpn/test.py/req_return - returns what expected
while 
http://abbon.ant.vpn/test.py/req_write returns more some additional data 
(reaching marker):

<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<html><head><title>Test page</title></head>
<body> Test </body> </html>HTTP/1.1 500 Internal Server Error
Date: Fri, 16 Aug 2002 21:11:31 GMT
Server: Apache/1.3.26 (Unix)  (PLD/Linux) mod_python/2.7.8 Python/2.2.1
Transfer-Encoding: chunked
Content-Type: text/html; charset=iso-8859-1

<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML 2.0//EN">
<HTML><HEAD>
<TITLE>500 Internal Server Error</TITLE>
</HEAD><BODY>
<H1>Internal Server Error</H1>
The server encountered an internal error or
misconfiguration and was unable to complete
your request.<P>
Please contact the server administrator,
 matkor@ant.gliwice.pl and inform them of the time the error occurred,
and anything you might have done that may have
caused the error.<P>
More information about this error may be available
in the server error log.<P>
<P>Additionally, a 500 Internal Server Error
error was encountered while trying to use an ErrorDocument to handle the 
request.
<HR>
<ADDRESS>Apache/1.3.26 Server at <A 
HREF="mailto:matkor@ant.gliwice.pl">abbon.ant.vpn</A> Port 80</ADDRESS>
</BODY></HTML>


As far I understand publisher both results should be the same ...
Perhaps my mod_python /apache are broken ?

-- 
Mateusz Korniak



From johannes at erdfelt.com  Fri Aug 16 17:25:45 2002
From: johannes at erdfelt.com (Johannes Erdfelt)
Date: Fri Jan  9 21:46:54 2004
Subject: [mod_python] req.write() in publisher_handler
In-Reply-To: <200208162322.37479.mateusz@ant.gliwice.pl>; from mateusz@ant.gliwice.pl on Fri, Aug 16, 2002 at 11:22:37PM +0200
References: <1029500235.2093.18.camel@kernel> <200208162131.33048.mateusz@ant.gliwice.pl> <20020816155859.A419@eye.neb> <200208162322.37479.mateusz@ant.gliwice.pl>
Message-ID: <20020816172545.K3414@sventech.com>

On Fri, Aug 16, 2002, Mateusz Korniak <mateusz@ant.gliwice.pl> wrote:
> On Friday 16 August 2002 22:58, vio wrote:
> > * Mateusz Korniak <mateusz@ant.gliwice.pl> [020816 15:26]:
> > > Yes. But what in publisher handler case ?
> > > Can you use req.write() instead of returning page ?
> > > I get Internal server error in that case ... :(
> >
> > I don't quite understand your question. req.write() IS the returning page.
> > But I think I know where the bobo is: it's the Internal server error
> > message.
> 
> So let me be ( I hope) much more clear: Below my publisher handler:
> 
> import mod_python.apache
> page = """<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
> <html><head><title>Test page</title></head>
> <body> Test </body> </html>"""
> 
> def req_write(req):
> 	req.status = mod_python.apache.OK
> 	req.content_type = "text/html; charset=utf-8"
> 	req.send_http_header()
> 	req.write(page)
> 	open("/tmp/marker","w") # Test if we have exceptions 
> 		#before returning from handler
	return ""

Add that.

JE


From mateusz at ant.gliwice.pl  Fri Aug 16 23:30:04 2002
From: mateusz at ant.gliwice.pl (Mateusz Korniak)
Date: Fri Jan  9 21:46:54 2004
Subject: [mod_python] req.write() in publisher_handler
In-Reply-To: <20020816172545.K3414@sventech.com>
References: <1029500235.2093.18.camel@kernel> <200208162322.37479.mateusz@ant.gliwice.pl> <20020816172545.K3414@sventech.com>
Message-ID: <200208162330.04157.mateusz@ant.gliwice.pl>

On Friday 16 August 2002 23:25, Johannes Erdfelt wrote:
> On Fri, Aug 16, 2002, Mateusz Korniak <mateusz@ant.gliwice.pl> wrote:
> > On Friday 16 August 2002 22:58, vio wrote:
> > > * Mateusz Korniak <mateusz@ant.gliwice.pl> [020816 15:26]:
> > > > Yes. But what in publisher handler case ?
> > > > Can you use req.write() instead of returning page ?
> > > > I get Internal server error in that case ... :(
> > >
> > > I don't quite understand your question. req.write() IS the returning
> > > page. But I think I know where the bobo is: it's the Internal server
> > > error message.
> >
> > So let me be ( I hope) much more clear: Below my publisher handler:
> >
> > import mod_python.apache
> > page = """<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
> > <html><head><title>Test page</title></head>
> > <body> Test </body> </html>"""
> >
> > def req_write(req):
> > 	req.status = mod_python.apache.OK
> > 	req.content_type = "text/html; charset=utf-8"
> > 	req.send_http_header()
> > 	req.write(page)
> > 	open("/tmp/marker","w") # Test if we have exceptions
> > 		#before returning from handler
>
> 	return ""
>
> Add that.
>
In my enviroment it doesn't change a thing :(

-- 
Mateusz Korniak



From johannes at erdfelt.com  Fri Aug 16 17:31:53 2002
From: johannes at erdfelt.com (Johannes Erdfelt)
Date: Fri Jan  9 21:46:54 2004
Subject: [mod_python] req.write() in publisher_handler
In-Reply-To: <200208162330.04157.mateusz@ant.gliwice.pl>; from mateusz@ant.gliwice.pl on Fri, Aug 16, 2002 at 11:30:04PM +0200
References: <1029500235.2093.18.camel@kernel> <200208162322.37479.mateusz@ant.gliwice.pl> <20020816172545.K3414@sventech.com> <200208162330.04157.mateusz@ant.gliwice.pl>
Message-ID: <20020816173153.L3414@sventech.com>

On Fri, Aug 16, 2002, Mateusz Korniak <mateusz@ant.gliwice.pl> wrote:
> On Friday 16 August 2002 23:25, Johannes Erdfelt wrote:
> > On Fri, Aug 16, 2002, Mateusz Korniak <mateusz@ant.gliwice.pl> wrote:
> > > On Friday 16 August 2002 22:58, vio wrote:
> > > > * Mateusz Korniak <mateusz@ant.gliwice.pl> [020816 15:26]:
> > > > > Yes. But what in publisher handler case ?
> > > > > Can you use req.write() instead of returning page ?
> > > > > I get Internal server error in that case ... :(
> > > >
> > > > I don't quite understand your question. req.write() IS the returning
> > > > page. But I think I know where the bobo is: it's the Internal server
> > > > error message.
> > >
> > > So let me be ( I hope) much more clear: Below my publisher handler:
> > >
> > > import mod_python.apache
> > > page = """<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
> > > <html><head><title>Test page</title></head>
> > > <body> Test </body> </html>"""
> > >
> > > def req_write(req):
> > > 	req.status = mod_python.apache.OK
> > > 	req.content_type = "text/html; charset=utf-8"
> > > 	req.send_http_header()
> > > 	req.write(page)
> > > 	open("/tmp/marker","w") # Test if we have exceptions
> > > 		#before returning from handler
> >
> > 	return ""
> >
> > Add that.
>
> In my enviroment it doesn't change a thing :(

Are you sure that open call isn't causing any exceptions?

Try commenting it out and testing.

Also, are you restarting the server when you're testing?

JE


From mateusz at ant.gliwice.pl  Fri Aug 16 23:35:56 2002
From: mateusz at ant.gliwice.pl (Mateusz Korniak)
Date: Fri Jan  9 21:46:54 2004
Subject: [mod_python] req.write() in publisher_handler
In-Reply-To: <20020816173153.L3414@sventech.com>
References: <1029500235.2093.18.camel@kernel> <200208162330.04157.mateusz@ant.gliwice.pl> <20020816173153.L3414@sventech.com>
Message-ID: <200208162335.56958.mateusz@ant.gliwice.pl>

On Friday 16 August 2002 23:31, Johannes Erdfelt wrote:
> On Fri, Aug 16, 2002, Mateusz Korniak <mateusz@ant.gliwice.pl> wrote:
> > On Friday 16 August 2002 23:25, Johannes Erdfelt wrote:
> > > On Fri, Aug 16, 2002, Mateusz Korniak <mateusz@ant.gliwice.pl> wrote:
> > > > On Friday 16 August 2002 22:58, vio wrote:
> > > > > * Mateusz Korniak <mateusz@ant.gliwice.pl> [020816 15:26]:
> > > > > > Yes. But what in publisher handler case ?
> > > > > > Can you use req.write() instead of returning page ?
> > > > > > I get Internal server error in that case ... :(
> > > > >
> > > > > I don't quite understand your question. req.write() IS the
> > > > > returning page. But I think I know where the bobo is: it's the
> > > > > Internal server error message.
> > > >
> > > > So let me be ( I hope) much more clear: Below my publisher handler:
> > > >
> > > > import mod_python.apache
> > > > page = """<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0
> > > > Transitional//EN"> <html><head><title>Test page</title></head>
> > > > <body> Test </body> </html>"""
> > > >
> > > > def req_write(req):
> > > > 	req.status = mod_python.apache.OK
> > > > 	req.content_type = "text/html; charset=utf-8"
> > > > 	req.send_http_header()
> > > > 	req.write(page)
> > > > 	open("/tmp/marker","w") # Test if we have exceptions
> > > > 		#before returning from handler
> > >
> > > 	return ""
> > >
> > > Add that.
> >
> > In my enviroment it doesn't change a thing :(
>
> Are you sure that open call isn't causing any exceptions?
> Try commenting it out and testing.

Nope - it works the same with or wihout it
( I added it due Vio's suggestion).

> Also, are you restarting the server when you're testing?

I think it's not neccessary as I change main file of publisher handler - but 
to be absolutely sure - I do hard reset of apache after every change. Result 
remains same.

So it turns out that my apche/mod_python is broken ?

-- 
Mateusz Korniak
"Black holes are where God divided by zero." - Steven Wright


From ian at veryfresh.com  Fri Aug 16 14:37:22 2002
From: ian at veryfresh.com (Ian Clelland)
Date: Fri Jan  9 21:46:54 2004
Subject: [ian@veryfresh.com: Re: [mod_python] Complicated GET configuration]
Message-ID: <20020816213722.GG11141@fullfactor.com>

----- Forwarded message from Ian Clelland <ian@veryfresh.com> -----

Date: Fri, 16 Aug 2002 14:24:39 -0700
From: Ian Clelland <ian@veryfresh.com>
To: Hunter Matthews <thm@duke.edu>
Cc: mod_python@mod_python.org
Subject: Re: [mod_python] Complicated GET configuration
In-Reply-To: <1029531928.1195.28.camel@jade.biology.duke.edu>
User-Agent: Mutt/1.3.27i

On Fri, Aug 16, 2002 at 05:05:28PM -0400, Hunter Matthews wrote:
> If anyone on the list has any ideas why the authz handler, which
> _looked_ like the handler I should use (using HTTP request headers to
> determine if a client was authorized to make this request), isn't
> working, I'd still appreciate knowing. 

Is it possible that Apache doesn't call an Authz handler unless some 
other conditions are present? From your sample configuration, I see 
that you haven't set up any AuthType, AuthName, or AuthenHandler (not 
even the standard mod_auth). Apache may have decided that there's no 
way to get a username:password from the client, and so isn't running 
the AuthzHandler.

Just a thought.. I'm running some quick tests here on your 
configuration to see why it doesn't work (and it doesn't, even here). I 
have had PythonAuthenHandlers and PythonAuthzHandlers working in the 
past, though.


----- End forwarded message -----

From ian at veryfresh.com  Fri Aug 16 14:51:37 2002
From: ian at veryfresh.com (Ian Clelland)
Date: Fri Jan  9 21:46:54 2004
Subject: [mod_python] Complicated GET configuration
In-Reply-To: <1029531928.1195.28.camel@jade.biology.duke.edu>
References: <1029518551.1517.29.camel@jade.biology.duke.edu> <20020816202745.GE11141@fullfactor.com> <1029530494.1195.22.camel@jade.biology.duke.edu> <1029531928.1195.28.camel@jade.biology.duke.edu>
Message-ID: <20020816215137.GH11141@fullfactor.com>

On Fri, Aug 16, 2002 at 05:05:28PM -0400, Hunter Matthews wrote:
> If anyone on the list has any ideas why the authz handler, which
> _looked_ like the handler I should use (using HTTP request headers to
> determine if a client was authorized to make this request), isn't
> working, I'd still appreciate knowing. 
 
After playing with it for about 20 minutes, I managed to get your authorization handler to run on my machine. This appears to be a minimal configuration:

Apache http.conf:

<VirtualHost *:80>
  ServerName pytest.zoostation
  DocumentRoot /var/local/apache/htdocs/pytest
  Alias /XMLRPC/$RHN /home/ian/pytest

  <Directory /home/pytest>
    Options FollowSymLinks
    AllowOverride None
  </Directory>

  <Location ~ "/XMLRPC$">
    PythonPath "sys.path+['/home/ian/src/pytest']"
    SetHandler python-program
    PythonHandler current_apache
  </Location>

  <Location /XMLRPC/$RHN>
    AuthName 'Restricted Area'
    AuthType Basic
    PythonPath "sys.path+['/home/ian/src/pytest']"
    PythonAuthenHandler current_apache
    PythonAuthzHandler current_apache
    require valid-user
  </Location>

</VirtualHost>


current_apache.py:

from mod_python import apache

def authenhandler(req):
    """ temp function for testing.
        this version accepts any username and password
    """

    apache.log_error("Inside the authenhandler!", apache.APLOG_NOERRNO & apache.APLOG_ERR)
    apache.log_error("method = %s" % req.method, apache.APLOG_NOERRNO & apache.APLOG_ERR)
    apache.log_error("headers = %s" % `req.headers_in`, apache.APLOG_NOERRNO & apache.APLOG_ERR)

    pw = req.get_basic_auth_pw()
    if req.connection.user == None:
      return apache.HTTP_UNAUTHORIZED

    return apache.OK

def authzhandler(req):
    """ temp function for testing
        this version accepts all users for all uris
    """

    apache.log_error("Inside the authzhandler!", apache.APLOG_NOERRNO & apache.APLOG_ERR)
    apache.log_error("method = %s" % req.method, apache.APLOG_NOERRNO & apache.APLOG_ERR)
    apache.log_error("headers = %s" % `req.headers_in`, apache.APLOG_NOERRNO & apache.APLOG_ERR)

    return apache.OK

def handler(req):
    """ temp function for testing"""

    req.content_type = 'text/html'
    req.send_http_header()
    req.write("<html><body><h1>Testing</h1></body></html>")

    return apache.OK


Explanation:

In the Apache configuration, the line which triggers all of the 
authentication/authorization is the 'require' line. Without this line, 
the AuthenHandler and AuthzHandler will not be called. 'require 
valid-user' seems to be sufficient for most cases, since your 
AuthenHandler can decide who a valid user is, and your AuthzHandler can 
filter out anyone unauthorized.

As soon as you add that line, Apache will report an internal server 
error until you give it an AuthName, AuthType, and some sort of 
Authentication handler. I added a stub handler which accepts any 
username and password.

Once those are all present, then Apache will happily run the 
AuthzHandler whenever the AuthenHandler returns OK.


Hope this helps,

Ian
<ian@veryfresh.com>

From grisha at modpython.org  Fri Aug 16 17:53:13 2002
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 21:46:54 2004
Subject: [mod_python] Complicated GET configuration
In-Reply-To: <1029530494.1195.22.camel@jade.biology.duke.edu>
Message-ID: <Pine.BSF.4.32.0208161751360.96507-100000@localhost>


On 16 Aug 2002, Hunter Matthews wrote:

> def authzhandler(req):
>     """ temp function for testing"""
>
>     apache.log_error("Inside the authzhandler!")
>     apache.log_error("method = %s" % req.method)
>     apache.log_error("headers = %s" % pprint.pprint(req.headers_in))
>
>     return apache.OK
>
>

It's possible that Apache ignores the authz handler unless you have
AuthType, AuthName and require specified. This is definitely true with
respect to authen handler.

BTW, the fact that authz is undocumented is a bug.

Grisha


From vmilitaru at sympatico.ca  Fri Aug 16 18:17:27 2002
From: vmilitaru at sympatico.ca (vio)
Date: Fri Jan  9 21:46:54 2004
Subject: [mod_python] Re: req.write() in publisher_handler
In-Reply-To: <200208162322.37479.mateusz@ant.gliwice.pl>; from mateusz@ant.gliwice.pl on Fri, Aug 16, 2002 at 11:22:37PM +0200
References: <1029500235.2093.18.camel@kernel> <200208162131.33048.mateusz@ant.gliwice.pl> <20020816155859.A419@eye.neb> <200208162322.37479.mateusz@ant.gliwice.pl>
Message-ID: <20020816181726.A590@eye.neb>

Try it like this:

import mod_python.apache
#from mod_python import apache
pageA = """<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<html><head><title>Test page</title></head>
<body>  Page A <br>"""
pageB = "Page B</body> </html>"

def req_write(REQUEST):
  REQUEST.status = mod_python.apache.OK
  REQUEST.content_type = "text/html; charset=utf-8"
  REQUEST.send_http_header()
  REQUEST.write(pageA)
  REQUEST.write(pageB)
  raise mod_python.apache.SERVER_RETURN, mod_python.apache.OK

As you can see, we do multiple writes to the browser.
I tested it on my snake, and it works as advertised.
Vio

* Mateusz Korniak <mateusz@ant.gliwice.pl> [020816 17:31]:
> On Friday 16 August 2002 22:58, vio wrote:
> > * Mateusz Korniak <mateusz@ant.gliwice.pl> [020816 15:26]:
> > > Yes. But what in publisher handler case ?
> > > Can you use req.write() instead of returning page ?
> > > I get Internal server error in that case ... :(
> >
> > I don't quite understand your question. req.write() IS the returning page.
> > But I think I know where the bobo is: it's the Internal server error
> > message.
> 
> So let me be ( I hope) much more clear: Below my publisher handler:
> 
> import mod_python.apache
> page = """<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
> <html><head><title>Test page</title></head>
> <body> Test </body> </html>"""
> 
> def req_write(req):
> 	req.status = mod_python.apache.OK
> 	req.content_type = "text/html; charset=utf-8"
> 	req.send_http_header()
> 	req.write(page)
> 	open("/tmp/marker","w") # Test if we have exceptions 
> 		#before returning from handler
> 
> def req_return(req):
> 	req.status = mod_python.apache.OK
> 	req.content_type = "text/html; charset=utf-8"
> 	req.send_http_header()
> 	return page
> 
> http://abbon.ant.vpn/test.py/req_return - returns what expected
> while 
> http://abbon.ant.vpn/test.py/req_write returns more some additional data 
> (reaching marker):
> 
> <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
> <html><head><title>Test page</title></head>
> <body> Test </body> </html>HTTP/1.1 500 Internal Server Error
> Date: Fri, 16 Aug 2002 21:11:31 GMT
> Server: Apache/1.3.26 (Unix)  (PLD/Linux) mod_python/2.7.8 Python/2.2.1
> Transfer-Encoding: chunked
> Content-Type: text/html; charset=iso-8859-1
> 
> <!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML 2.0//EN">
> <HTML><HEAD>
> <TITLE>500 Internal Server Error</TITLE>
> </HEAD><BODY>
> <H1>Internal Server Error</H1>
> The server encountered an internal error or
> misconfiguration and was unable to complete
> your request.<P>
> Please contact the server administrator,
>  matkor@ant.gliwice.pl and inform them of the time the error occurred,
> and anything you might have done that may have
> caused the error.<P>
> More information about this error may be available
> in the server error log.<P>
> <P>Additionally, a 500 Internal Server Error
> error was encountered while trying to use an ErrorDocument to handle the 
> request.
> <HR>
> <ADDRESS>Apache/1.3.26 Server at <A 
> HREF="mailto:matkor@ant.gliwice.pl">abbon.ant.vpn</A> Port 80</ADDRESS>
> </BODY></HTML>
> 
> 
> As far I understand publisher both results should be the same ...
> Perhaps my mod_python /apache are broken ?
> 
> -- 
> Mateusz Korniak
> 

From mateusz at ant.gliwice.pl  Sat Aug 17 00:59:51 2002
From: mateusz at ant.gliwice.pl (Mateusz Korniak)
Date: Fri Jan  9 21:46:54 2004
Subject: [mod_python] Re: req.write() in publisher_handler
In-Reply-To: <20020816181726.A590@eye.neb>
References: <1029500235.2093.18.camel@kernel> <200208162322.37479.mateusz@ant.gliwice.pl> <20020816181726.A590@eye.neb>
Message-ID: <200208170059.51538.mateusz@ant.gliwice.pl>

On Saturday 17 August 2002 01:17, vio wrote:
> Try it like this:
>
> import mod_python.apache
> #from mod_python import apache
> pageA = """<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
> <html><head><title>Test page</title></head>
> <body>  Page A <br>"""
> pageB = "Page B</body> </html>"
>
> def req_write(REQUEST):
>   REQUEST.status = mod_python.apache.OK
>   REQUEST.content_type = "text/html; charset=utf-8"
>   REQUEST.send_http_header()
>   REQUEST.write(pageA)
>   REQUEST.write(pageB)
>   raise mod_python.apache.SERVER_RETURN, mod_python.apache.OK

Yop :) raising  mod_python.apache.SERVER_RETURN instead of returning does the 
trick.

Also making req.write(d1)  ___and__ returning d2 sth sensible makes both 
(d1+d2) send to browser without error. I would guess that code runed after 
returning from handler gets confused by ""/None value returned by handler ...

-- 
Mateusz Korniak



From thm at duke.edu  Fri Aug 16 20:12:01 2002
From: thm at duke.edu (Hunter Matthews)
Date: Fri Jan  9 21:46:54 2004
Subject: [mod_python] Complicated GET configuration
In-Reply-To: <20020816215137.GH11141@fullfactor.com>
References: <1029518551.1517.29.camel@jade.biology.duke.edu>
	<20020816202745.GE11141@fullfactor.com>
	<1029530494.1195.22.camel@jade.biology.duke.edu>
	<1029531928.1195.28.camel@jade.biology.duke.edu> 
	<20020816215137.GH11141@fullfactor.com>
Message-ID: <1029543172.1195.39.camel@jade.biology.duke.edu>

On Fri, 2002-08-16 at 17:51, Ian Clelland wrote:
> On Fri, Aug 16, 2002 at 05:05:28PM -0400, Hunter Matthews wrote:
> > If anyone on the list has any ideas why the authz handler, which
> > _looked_ like the handler I should use (using HTTP request headers to
> > determine if a client was authorized to make this request), isn't
> > working, I'd still appreciate knowing. 
>  
> After playing with it for about 20 minutes, I managed to get your authorization handler to run on my machine. This appears to be a minimal configuration:
> 
> Apache http.conf:
> 
> <VirtualHost *:80>
>   ServerName pytest.zoostation
>   DocumentRoot /var/local/apache/htdocs/pytest
>   Alias /XMLRPC/$RHN /home/ian/pytest
> 
>   <Directory /home/pytest>
>     Options FollowSymLinks
>     AllowOverride None
>   </Directory>
> 
>   <Location ~ "/XMLRPC$">
>     PythonPath "sys.path+['/home/ian/src/pytest']"
>     SetHandler python-program
>     PythonHandler current_apache
>   </Location>
> 
>   <Location /XMLRPC/$RHN>
>     AuthName 'Restricted Area'
>     AuthType Basic
>     PythonPath "sys.path+['/home/ian/src/pytest']"
>     PythonAuthenHandler current_apache
>     PythonAuthzHandler current_apache
>     require valid-user
>   </Location>
> 
> </VirtualHost>
> 
> 
> current_apache.py:
> 
> from mod_python import apache
> 
> def authenhandler(req):
>     """ temp function for testing.
>         this version accepts any username and password
>     """
> 
>     apache.log_error("Inside the authenhandler!", apache.APLOG_NOERRNO & apache.APLOG_ERR)
>     apache.log_error("method = %s" % req.method, apache.APLOG_NOERRNO & apache.APLOG_ERR)
>     apache.log_error("headers = %s" % `req.headers_in`, apache.APLOG_NOERRNO & apache.APLOG_ERR)
> 
>     pw = req.get_basic_auth_pw()
>     if req.connection.user == None:
>       return apache.HTTP_UNAUTHORIZED
> 
>     return apache.OK
> 
> def authzhandler(req):
>     """ temp function for testing
>         this version accepts all users for all uris
>     """
> 
>     apache.log_error("Inside the authzhandler!", apache.APLOG_NOERRNO & apache.APLOG_ERR)
>     apache.log_error("method = %s" % req.method, apache.APLOG_NOERRNO & apache.APLOG_ERR)
>     apache.log_error("headers = %s" % `req.headers_in`, apache.APLOG_NOERRNO & apache.APLOG_ERR)
> 
>     return apache.OK
> 
> def handler(req):
>     """ temp function for testing"""
> 
>     req.content_type = 'text/html'
>     req.send_http_header()
>     req.write("<html><body><h1>Testing</h1></body></html>")
> 
>     return apache.OK
> 
> 
> Explanation:
> 
> In the Apache configuration, the line which triggers all of the 
> authentication/authorization is the 'require' line. Without this line, 
> the AuthenHandler and AuthzHandler will not be called. 'require 
> valid-user' seems to be sufficient for most cases, since your 
> AuthenHandler can decide who a valid user is, and your AuthzHandler can 
> filter out anyone unauthorized.
> 
> As soon as you add that line, Apache will report an internal server 
> error until you give it an AuthName, AuthType, and some sort of 
> Authentication handler. I added a stub handler which accepts any 
> username and password.
> 
> Once those are all present, then Apache will happily run the 
> AuthzHandler whenever the AuthenHandler returns OK.

Wow. You are amazing. Thank you.

In this particular application, I don't think the authorization will
work quite like that: 

I don't get a user:password from a browser, this is an xmlrpc client
that sends authentication/authorization information in custom HTTP
headers. 

If you are deciding to allow or deny access based just on the contents
of headers, which Handler would you pick?

In testing here, it appears that PythonHeaderParserHandler works - it
can look at the headers in req.headers_in, and simply return apache.OK
or apache.HTTP_UNAUTHORIZED.

Again, wow. Thank you for deciphering this for me: this is my first
mod_python app.


> 
> 
> Hope this helps,
> 
> Ian
> <ian@veryfresh.com>
> 
> 
-- 
Hunter Matthews                          Unix / Network Administrator
Office: BioScience 145/244               Duke Univ. Biology Department
Key: F0F88438 / FFB5 34C0 B350 99A4 BB02  9779 A5DB 8B09 F0F8 8438
Never take candy from strangers. Especially on the internet.


From thm at duke.edu  Fri Aug 16 20:59:42 2002
From: thm at duke.edu (Hunter Matthews)
Date: Fri Jan  9 21:46:54 2004
Subject: [mod_python] Complicated GET configuration
In-Reply-To: <1029543172.1195.39.camel@jade.biology.duke.edu>
References: <1029518551.1517.29.camel@jade.biology.duke.edu>
	<20020816202745.GE11141@fullfactor.com>
	<1029530494.1195.22.camel@jade.biology.duke.edu>
	<1029531928.1195.28.camel@jade.biology.duke.edu> 
	<20020816215137.GH11141@fullfactor.com> 
	<1029543172.1195.39.camel@jade.biology.duke.edu>
Message-ID: <1029545983.1312.44.camel@jade.biology.duke.edu>

On Fri, 2002-08-16 at 20:12, Hunter Matthews wrote:
> > As soon as you add that line, Apache will report an internal server 
> > error until you give it an AuthName, AuthType, and some sort of 
> > Authentication handler. I added a stub handler which accepts any 
> > username and password.
> > 
> > Once those are all present, then Apache will happily run the 
> > AuthzHandler whenever the AuthenHandler returns OK.

Answered my own question - 

> In this particular application, I don't think the authorization will
> work quite like that: 
> 
> I don't get a user:password from a browser, this is an xmlrpc client
> that sends authentication/authorization information in custom HTTP
> headers. 
> 
> If you are deciding to allow or deny access based just on the contents
> of headers, which Handler would you pick?

Authen and Authz - you simply do whatever authentication and
authorization you want - if you're not doing user/password, don't call
those apache methods - roll your own.

Again, thanks to everyone on the list, esp Ian, who helped me understand
just how this works.

-- 
Hunter Matthews                          Unix / Network Administrator
Office: BioScience 145/244               Duke Univ. Biology Department
Key: F0F88438 / FFB5 34C0 B350 99A4 BB02  9779 A5DB 8B09 F0F8 8438
Never take candy from strangers. Especially on the internet.


From grisha at modpython.org  Fri Aug 16 22:25:58 2002
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 21:46:54 2004
Subject: [mod_python] Complicated GET configuration
In-Reply-To: <1029543172.1195.39.camel@jade.biology.duke.edu>
Message-ID: <Pine.BSF.4.32.0208162223250.202-100000@localhost>


On 16 Aug 2002, Hunter Matthews wrote:

> In testing here, it appears that PythonHeaderParserHandler works - it
> can look at the headers in req.headers_in, and simply return apache.OK
> or apache.HTTP_UNAUTHORIZED.

Consider having it return apache.DECLINED instead of apache.OK to let the
default handler and other modules parse headers as well.

Grisha


From alex at morrison.king.net.nz  Sat Aug 17 16:29:15 2002
From: alex at morrison.king.net.nz (Alex King)
Date: Fri Jan  9 21:46:54 2004
Subject: [mod_python] How do I use PythonTransHandler?
Message-ID: <20020817042915.GB1172@morrison.king.net.nz>

Quoting a previos post, by Ian Clelland:

>PythonTransHandler, which will receive all requests, and has the chance 
>to modify the URL before Apache passes the request to your main
>handler.

How do I use this?

From peter.bittner at gmx.net  Sat Aug 17 08:06:26 2002
From: peter.bittner at gmx.net (Peter Bittner)
Date: Fri Jan  9 21:46:54 2004
Subject: [Fwd: [mod_python] Messages not getting through to list server?]
References: <Pine.BSF.4.32.0208160840230.89789-100000@localhost>
Message-ID: <27256.1029564386@www40.gmx.net>

Why not move to a newsgroup solution completely? (Say,
comp.lang.python.modpython)

I would really appreciate that. I'd really prefer that.

These days it's simple and straightforward for everyone to read newsgroups
using http://groups.google.com - even if you don't have a newsreader.

Peter

"Gregory (Grisha) Trubetskoy" wrote:
> 
> My appologies - the list indeed seemed to have had a problem. I'm getting
> increasingly more dissatisfied with mailman - it has this "feature" where
> messages to domains whose MX's cannot be looked up (probably because the
> domain is no longer registered or DNS is down) clog up the entire list.
> 
> I've upgraded to 2.0.12 version of mailman, of this doesn't make it
> better, I will look for other software.
> 
> Thanks to all who made offers to host - so far hosting is not a problem.
> I'm not very keen on having the list at Sourceforge - I'd rather have more
> control over it, also I don't know how long Sourceforge will be around -
> these days nothing is certain. So far only CVS is hosted there.
> 
> Grisha
> 

-- 
GMX - Die Kommunikationsplattform im Internet.
http://www.gmx.net


From ian at veryfresh.com  Sat Aug 17 00:11:33 2002
From: ian at veryfresh.com (Ian Clelland)
Date: Fri Jan  9 21:46:54 2004
Subject: [mod_python] Complicated GET configuration
In-Reply-To: <1029543172.1195.39.camel@jade.biology.duke.edu>
References: <1029518551.1517.29.camel@jade.biology.duke.edu> <20020816202745.GE11141@fullfactor.com> <1029530494.1195.22.camel@jade.biology.duke.edu> <1029531928.1195.28.camel@jade.biology.duke.edu> <20020816215137.GH11141@fullfactor.com> <1029543172.1195.39.camel@jade.biology.duke.edu>
Message-ID: <20020817071133.GI11141@fullfactor.com>

On Fri, Aug 16, 2002 at 08:12:01PM -0400, Hunter Matthews wrote:
> In this particular application, I don't think the authorization will
> work quite like that: 
> 
> I don't get a user:password from a browser, this is an xmlrpc client
> that sends authentication/authorization information in custom HTTP
> headers. 
> 
> If you are deciding to allow or deny access based just on the contents
> of headers, which Handler would you pick?
> 
> In testing here, it appears that PythonHeaderParserHandler works - it
> can look at the headers in req.headers_in, and simply return apache.OK
> or apache.HTTP_UNAUTHORIZED.

Well, if you're not using standard HTTP authentication (specifically, if
you're not using the WWW-Authenticate and Authorization headers,) then
maybe the best handler to use would be a PythonAccessHandler. Access
control handlers are generally free to deny access to a resource based
on any criteria you want. They will usually return an apache.HTTP_FORBIDDEN
(403) if access is denied, but you can make it return whatever you want.

Technically, you are not supposed to return a 401 (Unauthorized) status
code unless you are also including a WWW-Authenticate header, but it
really comes down to doing what the client expects, especially if the
client is non-interactive.

> Again, wow. Thank you for deciphering this for me: this is my first
> mod_python app.

You're welcome -- I'm just glad I could be of help


Ian
<ian@veryfresh.com>

From ian at veryfresh.com  Sat Aug 17 00:44:09 2002
From: ian at veryfresh.com (Ian Clelland)
Date: Fri Jan  9 21:46:54 2004
Subject: [mod_python] How do I use PythonTransHandler?
In-Reply-To: <20020817042915.GB1172@morrison.king.net.nz>
References: <20020817042915.GB1172@morrison.king.net.nz>
Message-ID: <20020817074409.GJ11141@fullfactor.com>

On Sat, Aug 17, 2002 at 04:29:15PM +1200, Alex King wrote:
> Quoting a previos post, by Ian Clelland:
> 
> >PythonTransHandler, which will receive all requests, and has the chance 
> >to modify the URL before Apache passes the request to your main
> >handler.
> 
> How do I use this?
 
The same way you would set a regular PythonHandler, you can set up 
Apache to use a PythonTransHandler:

<VirtualHost *:80>
  ServerName pytest.zoostation
  DocumentRoot /var/local/apache/htdocs/pytest
  PythonPath "sys.path+['/home/ian/src/pytest']"
  PythonTransHandler translate_test
</VirtualHost>

And then just write the python module to set the filename attribute:

def transhandler(req):
    req.filename = '/var/local/apache/htdocs/pytest/test2.html'
    return apache.OK

> My problem is that the request object members such as filename and the
> like are read-only, so how do I pass the new filename back to apache?

Well, req.filename is definitely _not_ read-only. This may be another
bug in the documentation, but the code is there in requestobject.c to
set that attribute. I just ran a couple of tests, and I can set the
filename for a request, and Apache will return that file.

The problem I can see right now is that there appears to be no way to
get the DocumentRoot for the current request. You shouldn't have a 
problem if your cached files are completly outside of your DocumentRoot 
(and you have the absolute path available to your handler,) but you 
might have a hard time if you want to translate a URL to another file 
within your DocumentRoot, and don't want to put the full path inside 
your source files.


Ian Clelland
<ian@veryfresh.com>

From alex at morrison.king.net.nz  Sat Aug 17 20:37:43 2002
From: alex at morrison.king.net.nz (Alex King)
Date: Fri Jan  9 21:46:54 2004
Subject: [mod_python] How do I use PythonTransHandler?
In-Reply-To: <20020817074409.GJ11141@fullfactor.com>
References: <20020817042915.GB1172@morrison.king.net.nz> <20020817074409.GJ11141@fullfactor.com>
Message-ID: <20020817083743.GA5349@morrison.king.net.nz>

On Sat, Aug 17, 2002 at 12:44:09AM -0700, Ian Clelland wrote:
> On Sat, Aug 17, 2002 at 04:29:15PM +1200, Alex King wrote:
> > Quoting a previos post, by Ian Clelland:
> > 
> > >PythonTransHandler, which will receive all requests, and has the chance 
> > >to modify the URL before Apache passes the request to your main
> > >handler.
> > 
> > How do I use this?
>  
> The same way you would set a regular PythonHandler, you can set up 
> Apache to use a PythonTransHandler:
> 
> <VirtualHost *:80>
>   ServerName pytest.zoostation
>   DocumentRoot /var/local/apache/htdocs/pytest
>   PythonPath "sys.path+['/home/ian/src/pytest']"

ahh - that's how you do it.  I expected the DocumentRoot to be added to
the sys.path by mod_python, but it wasn't  I ended up putting my script
in /usr/local/lib/python2.1/site-packages/ to get it in the path.  I
overlooked PythonPath for some reason...

>   PythonTransHandler translate_test
> </VirtualHost>
> 
> And then just write the python module to set the filename attribute:
> 
> def transhandler(req):
>     req.filename = '/var/local/apache/htdocs/pytest/test2.html'
>     return apache.OK
> 
> > My problem is that the request object members such as filename and the
> > like are read-only, so how do I pass the new filename back to apache?
> 
> Well, req.filename is definitely _not_ read-only. This may be another
> bug in the documentation, but the code is there in requestobject.c to
> set that attribute. I just ran a couple of tests, and I can set the
> filename for a request, and Apache will return that file.
> 
OK, cool that's how I expected it to work.  The read-only note beside
the req.filename in the docs put me off though and I didn't actually try
it.  Perhaps the request filename is read-only by the time it get to the
main request handler?  In the docs I have, all the members of the rquest
structure are noted to be read-only except for content_type, headers_in,
headers_out, and err_headers_out.  Perhaps those read-only notes in the
docs are all in relation to the main request handler, not to all
handlers in general.

Anyway this makes me much happier :)

> The problem I can see right now is that there appears to be no way to
> get the DocumentRoot for the current request. You shouldn't have a 
> problem if your cached files are completly outside of your DocumentRoot 
> (and you have the absolute path available to your handler,) but you 
> might have a hard time if you want to translate a URL to another file 
> within your DocumentRoot, and don't want to put the full path inside 
> your source files.

Yeah, I discovered that.  I was looking at req.get_config() to see what
it returned, it only seems to return module specific configs.  If it
returned all the configs I would have picked DocumentRoot out of that.
Instead I'm going to ignore DocumentRoot and set various directories to
be used for the cache etc. with PythonOption directives in the apache
config.

Another problem I'm having is not understanding req.add_handler().  I
thought I'd have code to determince whether to take special action in
the PythonTransHandler (ie. download a file not in cache).  If a
download is needed, the transhandler runs
req.add_handler("PythonHandler","padcache") where padcache.py is my
script in /usr/local/lib/python2.1/site-packages/.

I'm probably not understanding the second argument to the function, or
perhaps it's a path problem again, but I keep getting a traceback:
[Sat Aug 17 20:29:48 2002] [error] PythonHandler padcache: Traceback (most recent call last):
[Sat Aug 17 20:29:48 2002] [error] PythonHandler padcache:   File "/usr/lib/python2.1/site-packages/mod_python/apache.py", line 176, in Dispatch
    dir = _req.get_all_dirs()[htype]
[Sat Aug 17 20:29:48 2002] [error] PythonHandler padcache: KeyError: PythonHandler

What I am wanting to achieve is to normally not have a python handler
run for the main handler, so no PythonHandler is specified in the
config, but in cases when transhandler determines that it does need to
be run, it is added with add_handler()

> 
> 
> Ian Clelland

Thanks for your quick response :)

Alex

From alex at morrison.king.net.nz  Sat Aug 17 20:46:45 2002
From: alex at morrison.king.net.nz (Alex King)
Date: Fri Jan  9 21:46:54 2004
Subject: [mod_python] How do I use PythonTransHandler?
In-Reply-To: <20020817074409.GJ11141@fullfactor.com>
References: <20020817042915.GB1172@morrison.king.net.nz> <20020817074409.GJ11141@fullfactor.com>
Message-ID: <20020817084645.GA5534@morrison.king.net.nz>

> 
> Well, req.filename is definitely _not_ read-only. This may be another
> bug in the documentation, but the code is there in requestobject.c to
> set that attribute. I just ran a couple of tests, and I can set the
> filename for a request, and Apache will return that file.
> 
I forgot to mention I was using debian woody (stable), with mod_python
version 2.7.8

From ian at veryfresh.com  Sat Aug 17 03:36:06 2002
From: ian at veryfresh.com (Ian Clelland)
Date: Fri Jan  9 21:46:54 2004
Subject: [mod_python] How do I use PythonTransHandler?
In-Reply-To: <20020817083743.GA5349@morrison.king.net.nz>
References: <20020817042915.GB1172@morrison.king.net.nz> <20020817074409.GJ11141@fullfactor.com> <20020817083743.GA5349@morrison.king.net.nz>
Message-ID: <20020817103606.GK11141@fullfactor.com>

On Sat, Aug 17, 2002 at 08:37:43PM +1200, Alex King wrote:
> > The problem I can see right now is that there appears to be no way to
> > get the DocumentRoot for the current request. You shouldn't have a 
> > problem if your cached files are completly outside of your DocumentRoot 
> > (and you have the absolute path available to your handler,) but you 
> > might have a hard time if you want to translate a URL to another file 
> > within your DocumentRoot, and don't want to put the full path inside 
> > your source files.
> 
> Yeah, I discovered that.  I was looking at req.get_config() to see what
> it returned, it only seems to return module specific configs.  If it
> returned all the configs I would have picked DocumentRoot out of that.
> Instead I'm going to ignore DocumentRoot and set various directories to
> be used for the cache etc. with PythonOption directives in the apache
> config.

That's what I'd suggest -- if you really need to use your document root,
then add a PythonOption with the same value to your server config. I
looked at get_config (and the less-documented get_all_config) and it
only gets the configuration directives which are specific to mod_python.

mod_perl seems to have a document_root() method for its request object;
I haven't looked too closely at how it gets that from Apache, though. It
would be a nice addition to mod_python (hint, hint :) )


> Another problem I'm having is not understanding req.add_handler().  I
> thought I'd have code to determince whether to take special action in
> the PythonTransHandler (ie. download a file not in cache).  If a
> download is needed, the transhandler runs
> req.add_handler("PythonHandler","padcache") where padcache.py is my
> script in /usr/local/lib/python2.1/site-packages/.
> 
> I'm probably not understanding the second argument to the function, or
> perhaps it's a path problem again, but I keep getting a traceback:
> [Sat Aug 17 20:29:48 2002] [error] PythonHandler padcache: Traceback (most recent call last):
> [Sat Aug 17 20:29:48 2002] [error] PythonHandler padcache:   File "/usr/lib/python2.1/site-packages/mod_python/apache.py", line 176, in Dispatch
>     dir = _req.get_all_dirs()[htype]
> [Sat Aug 17 20:29:48 2002] [error] PythonHandler padcache: KeyError: PythonHandler


Try using req.add_handler("PythonHandler", "padcache::handler"). I'm not
sure where the "::" notation comes from -- it appears to be internal to
mod_python, or perhaps to python itself. Either way, I think you need to
specify both the module name (padcache) and the handler function
(usually just 'handler' for content handlers).

Note: I haven't tried this one myself; that's just what I can glean from
the documentation.

> Thanks for your quick response :)

No problem -- but now I've got to get some sleep :)

Later,

Ian
<ian@veryfresh.com>

From alain at onesite.org  Sat Aug 17 20:32:49 2002
From: alain at onesite.org (Alain Tesio)
Date: Fri Jan  9 21:46:54 2004
Subject: [mod_python] Ping?
In-Reply-To: <20020714135537.A278@eye.neb>
References: <Pine.LNX.4.44.0207131250410.31967-100000@slippy.wire.rat>
	<20020714135537.A278@eye.neb>
Message-ID: <20020817203249.5363f531.alain@onesite.org>

On Sun, 14 Jul 2002 13:55:37 -0500
vio <vmilitaru@sympatico.ca> wrote:

> Possible solution (provided this message make it to the list): how about 
> migrating modpython to 'sourceforge'? It's totally
> free and they do an outstanding hosting job.


Sourceforge is moving progressively from free (as in free speech) to
proprietary, read this on lwn : http://lwn.net/Articles/7480/

It makes it hard to move a project out of sourceforge if you change
your mind.

Savannah is a free clone of sourceforge : http://savannah.gnu.org/

For the mailing list, I could host it, I already have some mailman lists,
the administrator can contact me if needed.

Alain

From daniel at copyleft.no  Sat Aug 17 21:18:52 2002
From: daniel at copyleft.no (Hr. Daniel Mikkelsen)
Date: Fri Jan  9 21:46:54 2004
Subject: [mod_python] Ping?
In-Reply-To: <20020817203249.5363f531.alain@onesite.org>
Message-ID: <20020817211821.W1331-100000@unity.copyleft.no>

On Sat, 17 Aug 2002, Alain Tesio wrote:

> Sourceforge is moving progressively from free (as in free speech) to
> proprietary, read this on lwn : http://lwn.net/Articles/7480/

> It makes it hard to move a project out of sourceforge if you change
> your mind.

I agree. We should stay away from sourceforge.

-- Daniel


From mk at lrn.ru  Sat Aug 17 21:46:04 2002
From: mk at lrn.ru (Michael Krasnovsky)
Date: Fri Jan  9 21:46:54 2004
Subject: [mod_python] encodings (codecs)
Message-ID: <20020817214604.30f73b6b.mk@lrn.ru>

Hi!

I have a problem using encode() method of a string object inside my
publisher handlers. I get LookupError: unknown encoding. 
Here is the sample.

def test(req):
	cnt = "Hello, World Wide!"
	return cnt.encode("utf-8")

BTW, this function works fine being called not from mod_python handler.

How could it be fixed?

Thanks.

Michael.

From tree at basistech.com  Sat Aug 17 17:14:19 2002
From: tree at basistech.com (Tom Emerson)
Date: Fri Jan  9 21:46:54 2004
Subject: [mod_python] encodings (codecs)
In-Reply-To: <20020817214604.30f73b6b.mk@lrn.ru>
References: <20020817214604.30f73b6b.mk@lrn.ru>
Message-ID: <15710.48299.723199.361687@magrathea.basistech.com>

Michael Krasnovsky writes:
> I have a problem using encode() method of a string object inside my
> publisher handlers. I get LookupError: unknown encoding. 
> Here is the sample.

Are you sure the version of Python that is being used by mod_python is
the same as the version that is running from the shell? UTF-8 i one of
the built-in encodings, so I don't think you'll get exception unless
the encoding support isn't there at all.

FWIW I use this functionality all the time from the Publisher and it
works fine.

    -tree

-- 
Tom Emerson                                          Basis Technology Corp.
Software Architect                                 http://www.basistech.com
  "Beware the lollipop of mediocrity: lick it once and you suck forever"

From mk at lrn.ru  Sun Aug 18 12:29:34 2002
From: mk at lrn.ru (Michael Krasnovsky)
Date: Fri Jan  9 21:46:55 2004
Subject: [mod_python] encodings (codecs)
In-Reply-To: <15710.48299.723199.361687@magrathea.basistech.com>
References: <20020817214604.30f73b6b.mk@lrn.ru>
	<15710.48299.723199.361687@magrathea.basistech.com>
Message-ID: <20020818122934.43c707be.mk@lrn.ru>

> Are you sure the version of Python that is being used by mod_python is
> the same as the version that is running from the shell? UTF-8 i one of
> the built-in encodings, so I don't think you'll get exception unless
> the encoding support isn't there at all.

Yes, I'm sure. I have only one version of Python installed - 2.2.1. I
suppose the problem is related somehow to paths resolving during
proceeding my module by mod_python.
But I cannot say how. 
By the way, if I add in sitecustomize.py the line:
sys.path.append('/usr/lib/python2.2/encodings'), I get the next error
message:

  File "/home/mk/tests/biprojects/bisoft/www/test4.py", line 5, in test
    return cnt.encode("utf-8")

  File "/usr/lib/python2.2/encodings/__init__.py", line 51, in
search_function
    mod = __import__(modname,globals(),locals(),'*')

  RuntimeError: cannot unmarshal code objects in restricted execution
mode


> 
> FWIW I use this functionality all the time from the Publisher and it
> works fine.

So, may be something wrong in my apache configuration? Could you show
the fragment of your httpd.conf, which  describes mod_python conf.?

Thank you for your help.
Michael.

From mk at lrn.ru  Sun Aug 18 21:46:27 2002
From: mk at lrn.ru (Michael Krasnovsky)
Date: Fri Jan  9 21:46:55 2004
Subject: [mod_python] encodings (codecs)
In-Reply-To: <15710.48299.723199.361687@magrathea.basistech.com>
References: <20020817214604.30f73b6b.mk@lrn.ru>
	<15710.48299.723199.361687@magrathea.basistech.com>
Message-ID: <20020818214627.1f21a41d.mk@lrn.ru>

Hi, Tom!
> 
> FWIW I use this functionality all the time from the Publisher and it
> works fine.

Do you have Python compiled with or without thread support?

From fabbe at paniq.net  Mon Aug 19 11:53:01 2002
From: fabbe at paniq.net (Fabian Fagerholm)
Date: Fri Jan  9 21:46:55 2004
Subject: [mod_python] Questions for the FAQ - please check and confirm
	(req.write() and return) also docs update ...
In-Reply-To: <Pine.BSF.4.32.0208160856250.89789-100000@localhost>
References: <Pine.BSF.4.32.0208160856250.89789-100000@localhost>
Message-ID: <1029747182.1111.17.camel@kernel>

On Fri, 2002-08-16 at 16:00, Gregory (Grisha) Trubetskoy wrote:
> On 16 Aug 2002, Fabian Fagerholm wrote:
> > If you're using the Publisher handler, you can use req.write() once,
> > but then you *have* to return something at the end of your function,
> > or things won't work.
> 
> You should be able to use write() many times as you like. It should also
> be ok to return an empty string *if* you have written something with
> write(), otherwise returning an empty document will cause a problem with
> Netscape at least.

Right, now I have it working. I see now why I was confused. It seems to
me that mod_python is behaving differently at different times. For
example:

If I follow the Tutorial section in the mod_python docs, and create a
directory /home/fabbe/public_html/mod_python/temp_test_1 for my tests,
and in this directory, I place a .htaccess file with the following
contents:

    AddHandler python-program .py
    PythonHandler myscript

just like in the tutorial. Then, I write myscript.py in the same
directory:

    from mod_python import apache
    
    def handler(req):
        req.content_type = "text/plain"
        req.send_http_header()
        req.write("Hello, World!")
    
        return apache.OK
    
I then load ~fabbe/mod_python/temp_test_1/myscript.py from the web
server, and I get the following:

    Hello, World!
    <p>/home/fabbe/public_html/mod_python/temp_test_1/myscript.py</p>
    
which is not what I expected. But when I press reload on my browser, the
last line disappears and everything works as expected *even if I remove
those files and rewrite them, or change 'myscript' to 'fooscript'*!

I don't get it... :)

The apache logs show the following:

First access:
    212.226.163.85 - - [19/Aug/2002:11:34:33 +0300]
     "GET /~fabbe/mod_python/temp_test_1/myscript.py HTTP/1.1" 200 99
     "https://no.paniq.net/~fabbe/mod_python/temp_test_1/" "Mozilla/5.0
     Galeon/1.2.5 (X11; Linux i686; U;) Gecko/20020610 Debian/1.2.5-1"

Subsequent accesses:
    212.226.163.85 - - [19/Aug/2002:11:41:52 +0300]
     "GET /~fabbe/mod_python/temp_test_1/myscript.py HTTP/1.1" 200 25
     "-"
     "Mozilla/5.0 Galeon/1.2.5 (X11; Linux i686; U;) Gecko/20020610
     Debian/1.2.5-1"

The only difference I see compared to the tutorial is that I'm using
https. But that shouldn't affect mod_python, should it?

Could someone clarify?

Cheers,
Fabian



From fabbe at paniq.net  Mon Aug 19 12:21:43 2002
From: fabbe at paniq.net (Fabian Fagerholm)
Date: Fri Jan  9 21:46:55 2004
Subject: [mod_python] Package notation in PythonHandler directive
Message-ID: <1029748903.1111.27.camel@kernel>

Continuing to explore mod_python, I'm having trouble with package
notation in the PythonHandler directive.

I'm looking at the mod_python docs, and the Tutorial section 3.2 in
particular. It suggests that you could have a directory structure as
follows:

<your base dir>
  |
  +- .htaccess (file)
  +- subdir (directory)
      |
      +- myscript.py (file)

The .htaccess file would look as follows:

    AddHandler python-program .py
    PythonHandler subdir.myscript
    
and the myscript.py file in the 'subdir' subdirectory would look as
follows:

    from mod_python import apache
    
    def handler(req):
        req.content_type = "text/plain"
        req.send_http_header()
        req.write("Hello, World!")
    
        return apache.OK

If I do this, I get a 500 Internal Server Error and the following
appears in the apache logs:

    [Mon Aug 19 12:12:57 2002] [error] PythonHandler subdir.myscript:
    Traceback (most recent call last):
    [Mon Aug 19 12:12:57 2002] [error] PythonHandler subdir.myscript:  
    File "/usr/lib/python2.1/site-packages/mod_python/apache.py", line
    181, in Dispatch
        module = import_module(module_name, _req)
    [Mon Aug 19 12:12:57 2002] [error] PythonHandler subdir.myscript:  
    File "/usr/lib/python2.1/site-packages/mod_python/apache.py", line
    332, in import_module
        f, p, d = imp.find_module(parts[i], path)
    [Mon Aug 19 12:12:57 2002] [error] PythonHandler subdir.myscript:
    ImportError: No module named subdir
    
What am I doing wrong?

Cheers,
Fabian



From tree at basistech.com  Mon Aug 19 06:39:54 2002
From: tree at basistech.com (Tom Emerson)
Date: Fri Jan  9 21:46:55 2004
Subject: [mod_python] encodings (codecs)
In-Reply-To: <20020818214627.1f21a41d.mk@lrn.ru>
References: <20020817214604.30f73b6b.mk@lrn.ru>
	<15710.48299.723199.361687@magrathea.basistech.com>
	<20020818214627.1f21a41d.mk@lrn.ru>
Message-ID: <15712.51962.189948.95477@magrathea.basistech.com>

Michael Krasnovsky writes:
> > FWIW I use this functionality all the time from the Publisher and it
> > works fine.
> 
> Do you have Python compiled with or without thread support?

Without: on FreeBSD thread support doesn't work, at least with Apache 1.3.26.

    -tree

-- 
Tom Emerson                                          Basis Technology Corp.
Software Architect                                 http://www.basistech.com
  "Beware the lollipop of mediocrity: lick it once and you suck forever"

From grisha at modpython.org  Mon Aug 19 08:32:26 2002
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 21:46:55 2004
Subject: [mod_python] Package notation in PythonHandler directive
In-Reply-To: <1029748903.1111.27.camel@kernel>
Message-ID: <Pine.BSF.4.32.0208190831110.34551-100000@localhost>

You might need an __init__.py file in subdir in order for this to work.

On 19 Aug 2002, Fabian Fagerholm wrote:

> Continuing to explore mod_python, I'm having trouble with package
> notation in the PythonHandler directive.
>
> I'm looking at the mod_python docs, and the Tutorial section 3.2 in
> particular. It suggests that you could have a directory structure as
> follows:
>
> <your base dir>
>   |
>   +- .htaccess (file)
>   +- subdir (directory)
>       |
>       +- myscript.py (file)
>
> The .htaccess file would look as follows:
>
>     AddHandler python-program .py
>     PythonHandler subdir.myscript
>
> and the myscript.py file in the 'subdir' subdirectory would look as
> follows:
>
>     from mod_python import apache
>
>     def handler(req):
>         req.content_type = "text/plain"
>         req.send_http_header()
>         req.write("Hello, World!")
>
>         return apache.OK
>
> If I do this, I get a 500 Internal Server Error and the following
> appears in the apache logs:
>
>     [Mon Aug 19 12:12:57 2002] [error] PythonHandler subdir.myscript:
>     Traceback (most recent call last):
>     [Mon Aug 19 12:12:57 2002] [error] PythonHandler subdir.myscript:
>     File "/usr/lib/python2.1/site-packages/mod_python/apache.py", line
>     181, in Dispatch
>         module = import_module(module_name, _req)
>     [Mon Aug 19 12:12:57 2002] [error] PythonHandler subdir.myscript:
>     File "/usr/lib/python2.1/site-packages/mod_python/apache.py", line
>     332, in import_module
>         f, p, d = imp.find_module(parts[i], path)
>     [Mon Aug 19 12:12:57 2002] [error] PythonHandler subdir.myscript:
>     ImportError: No module named subdir
>
> What am I doing wrong?
>
> Cheers,
> Fabian
>
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://www.modpython.org/mailman/listinfo/mod_python
>


From grisha at modpython.org  Mon Aug 19 08:37:44 2002
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 21:46:55 2004
Subject: [mod_python] encodings (codecs)
In-Reply-To: <15712.51962.189948.95477@magrathea.basistech.com>
Message-ID: <Pine.BSF.4.32.0208190834120.34551-100000@localhost>

This is just a theory:

If the .so file which provides this functionality was compiled against a
Python different than the one you're using for mod_python, there may be a
problem ("different" could mean that one has thread support and the other
does not, even though they are the same version). Especially on FreeBSD,
where as far as I know thread support implies using a whole different
libc. Try recompiling *and* reinstalling Python without threads and see if
it fixes the problem.

Grisha


On Mon, 19 Aug 2002, Tom Emerson wrote:

> Michael Krasnovsky writes:
> > > FWIW I use this functionality all the time from the Publisher and it
> > > works fine.
> >
> > Do you have Python compiled with or without thread support?
>
> Without: on FreeBSD thread support doesn't work, at least with Apache 1.3.26.
>
>     -tree


From fabbe at paniq.net  Mon Aug 19 16:07:02 2002
From: fabbe at paniq.net (Fabian Fagerholm)
Date: Fri Jan  9 21:46:55 2004
Subject: [mod_python] Package notation in PythonHandler directive
In-Reply-To: <Pine.BSF.4.32.0208190831110.34551-100000@localhost>
References: <Pine.BSF.4.32.0208190831110.34551-100000@localhost>
Message-ID: <1029762422.1111.33.camel@kernel>

> > On 19 Aug 2002, Fabian Fagerholm wrote:
> > Continuing to explore mod_python, I'm having trouble with package
> > notation in the PythonHandler directive.
...
> >     AddHandler python-program .py
> >     PythonHandler subdir.myscript

On Mon, 2002-08-19 at 15:32, Gregory (Grisha) Trubetskoy wrote:
> 
> You might need an __init__.py file in subdir in order for this to work.

You're quite right. Many thanks for this pointer!

For the list archives (and this could be a FAQ item as well):

Since Python 1.5b1, just any directory doesn't qualify as a package. A
package is a directory *with* the __init__.py file.

So my error was entirely Python-related and didn't actually concern
mod_python at all.

Cheers,
Fabian



From jack_diederich at email.com  Tue Aug 20 11:29:17 2002
From: jack_diederich at email.com (Jack Diederich)
Date: Fri Jan  9 21:46:55 2004
Subject: [mod_python] Using non-global python with mod_python
Message-ID: <20020820162917.28271.qmail@email.com>

I just ran into a problem like this previously posted one:
  http://www.modpython.org/pipermail/mod_python/2002-July/002218.html

which gives you the 'could not import mod_python.apache, could not call init'
type of error.  After playing around I figured out that it was looking at
my globally installed copy of Python (/usr/local/python2.2) and NOT the copy I had
passed in to ./configure (/home/www/python2.2)

mod_python properly installed the py's in /home/www/python2.2 tree but it would
never get picked up by apache.  Even adding the home tree with the PythonPath
directive didn't work.  I had to symlink the site-packages directory from
/usr/local to the /home tree.

I couldn't find any reference to the /usr/local directory anywhere in the configured
mod_python tree.

Any guesses where it is getting the idea that everything is under /usr/local?

thanks,

-jack
-- 
__________________________________________________________
Sign-up for your own FREE Personalized E-mail at Mail.com
http://www.mail.com/?sr=signup


From jack_diederich at email.com  Tue Aug 20 11:29:17 2002
From: jack_diederich at email.com (Jack Diederich)
Date: Fri Jan  9 21:46:55 2004
Subject: [mod_python] Using non-global python with mod_python
Message-ID: <20020820162917.28271.qmail@email.com>

I just ran into a problem like this previously posted one:
  http://www.modpython.org/pipermail/mod_python/2002-July/002218.html

which gives you the 'could not import mod_python.apache, could not call init'
type of error.  After playing around I figured out that it was looking at
my globally installed copy of Python (/usr/local/python2.2) and NOT the copy I had
passed in to ./configure (/home/www/python2.2)

mod_python properly installed the py's in /home/www/python2.2 tree but it would
never get picked up by apache.  Even adding the home tree with the PythonPath
directive didn't work.  I had to symlink the site-packages directory from
/usr/local to the /home tree.

I couldn't find any reference to the /usr/local directory anywhere in the configured
mod_python tree.

Any guesses where it is getting the idea that everything is under /usr/local?

thanks,

-jack
-- 
__________________________________________________________
Sign-up for your own FREE Personalized E-mail at Mail.com
http://www.mail.com/?sr=signup


From grisha at modpython.org  Tue Aug 20 13:40:09 2002
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 21:46:55 2004
Subject: [mod_python] Using non-global python with mod_python
In-Reply-To: <20020820162917.28271.qmail@email.com>
Message-ID: <Pine.BSF.4.32.0208201329590.73876-100000@eden.ispol.com>

On Tue, 20 Aug 2002, Jack Diederich wrote:

> I just ran into a problem like this previously posted one:
>   http://www.modpython.org/pipermail/mod_python/2002-July/002218.html

[snip]

> I couldn't find any reference to the /usr/local directory anywhere in the configured
> mod_python tree.
>
> Any guesses where it is getting the idea that everything is under /usr/local?

I think ./configure is getting this idea from the first python it can find
in the path.

Try to run configure like with something like this:

$ PATH=/home/www/python2.2:$PATH ./configure --[your-args]

Grisha



From kevin at vap.org  Tue Aug 20 13:45:25 2002
From: kevin at vap.org (kevin@vap.org)
Date: Fri Jan  9 21:46:55 2004
Subject: [mod_python] IOError: [Errno 2] No such file or directory...(etc)
Message-ID: <291760-220028220174525100@vap.org>

Okay, I know this has been discussed many times before, and I am
aware of the fix on the FAQ.  However, I have a few issues:

1) My error says "IOError" instead of the "OSError" that everyone
else has reported.
2) using Python 2.2.1, Apache 1.3.26, Modpython 2.7.8, on WinXP
3) Since the python patch for this was closed in Aug-2001, any idea
why it isn't in Python 2.2.1, released Apr-2002?  
4) I went ahead & patched pythonrun.c and recompiled my Python 2.2.1.
The FAQ says to rebuild mod_python, but I don't know how to on
Windows, and I suspect 2.7.8 might already have the fix?.  

Can anyone assist with rebuilding mod_python on Windows?  What effect
would that have since it doesn't include pythonrun.c in the
mod_python build?  Any other ideas regarding the problem? (output is
below)

-Kevin

**** output ****

Mod_python error: "PythonHandler mod_python.publisher"

Traceback (most recent call last):

  File "C:\...\python\Lib\mod_python\apache.py", line 193, in Dispatch
    result = object(req)

  File "C:\...\python\Lib\mod_python\publisher.py", line 171, in
handler
    result = apply(object, (), args)

  File "c:/.../mywww\imgsvr.py", line 77, in get
    fd = open( filenm, "rb" )

IOError: [Errno 2] No such file or directory:
'z:\\FILES\\up\\oak_20020730\\01638764.BCK.jpg'

**** end of output ****

Notes:
I'm trying to access a file on my local network.  I have tried
different drive letters on my local network (& UNC paths instead of
drive letters).  The only time it works is when I use the local "C:"
for the path.  Even if I do a "subst e: c:\" and try that (E:\...),
it fails.  I even tried messing with <Directory> entries in Apache to
no avail.

And yes, the code works fine when outside of Apache/Mod_python.


From grisha at modpython.org  Tue Aug 20 14:36:51 2002
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 21:46:55 2004
Subject: [mod_python] IOError: [Errno 2] No such file or directory...(etc)
In-Reply-To: <291760-220028220174525100@vap.org>
Message-ID: <Pine.BSF.4.32.0208201436120.73876-100000@eden.ispol.com>

Might it be that the Z: mapping doesn't exist for whatever user id the
apache service is running under?

Grisha

On Tue, 20 Aug 2002 kevin@vap.org wrote:

> Okay, I know this has been discussed many times before, and I am
> aware of the fix on the FAQ.  However, I have a few issues:
>
> 1) My error says "IOError" instead of the "OSError" that everyone
> else has reported.
> 2) using Python 2.2.1, Apache 1.3.26, Modpython 2.7.8, on WinXP
> 3) Since the python patch for this was closed in Aug-2001, any idea
> why it isn't in Python 2.2.1, released Apr-2002?
> 4) I went ahead & patched pythonrun.c and recompiled my Python 2.2.1.
> The FAQ says to rebuild mod_python, but I don't know how to on
> Windows, and I suspect 2.7.8 might already have the fix?.
>
> Can anyone assist with rebuilding mod_python on Windows?  What effect
> would that have since it doesn't include pythonrun.c in the
> mod_python build?  Any other ideas regarding the problem? (output is
> below)
>
> -Kevin
>
> **** output ****
>
> Mod_python error: "PythonHandler mod_python.publisher"
>
> Traceback (most recent call last):
>
>   File "C:\...\python\Lib\mod_python\apache.py", line 193, in Dispatch
>     result = object(req)
>
>   File "C:\...\python\Lib\mod_python\publisher.py", line 171, in
> handler
>     result = apply(object, (), args)
>
>   File "c:/.../mywww\imgsvr.py", line 77, in get
>     fd = open( filenm, "rb" )
>
> IOError: [Errno 2] No such file or directory:
> 'z:\\FILES\\up\\oak_20020730\\01638764.BCK.jpg'
>
> **** end of output ****
>
> Notes:
> I'm trying to access a file on my local network.  I have tried
> different drive letters on my local network (& UNC paths instead of
> drive letters).  The only time it works is when I use the local "C:"
> for the path.  Even if I do a "subst e: c:\" and try that (E:\...),
> it fails.  I even tried messing with <Directory> entries in Apache to
> no avail.
>
> And yes, the code works fine when outside of Apache/Mod_python.
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://www.modpython.org/mailman/listinfo/mod_python
>


From kevin at vap.org  Tue Aug 20 17:09:46 2002
From: kevin at vap.org (kevin@vap.org)
Date: Fri Jan  9 21:46:55 2004
Subject: [mod_python] IOError: [Errno 2] No such file or directory...(etc)
Message-ID: <35720-22002822021946661@vap.org>

That sounds like a possibility, but it didn't help.  Here is some
more information:

- I changed the Apache service to logon with my username (which also
logs on to our Windows Domain).  No improvement.
- If I just return an HTML tag to have the browser open the graphic
(like <img src="z:\...jpg" />), then access works (probably since it
is under my user id via the browser application).
- I tried the code as a CGI called from Apache and I get the same
error (so I guess it doesn't have anything to do with modpython).


I guess I'll redirect this to an Apache group since it doesn't look
to be caused by modpython.

Any ideas are appreciated, though.

-Kevin



---- Original Message ----
From: grisha@modpython.org
To: kevin@vap.org, 
Subject: Re: [mod_python] IOError: [Errno 2] No such file or
directory...(etc)
Date: Tue, 20 Aug 2002 14:36:51 -0400 (EDT)

>
>Might it be that the Z: mapping doesn't exist for whatever user id 
>the
>apache service is running under?
>
>Grisha
>
>On Tue, 20 Aug 2002 kevin@vap.org wrote:
>
>> Okay, I know this has been discussed many times before, and I am
>> aware of the fix on the FAQ.  However, I have a few issues:
>>
>> 1) My error says "IOError" instead of the "OSError" that everyone
>> else has reported.
>> 2) using Python 2.2.1, Apache 1.3.26, Modpython 2.7.8, on WinXP
>> 3) Since the python patch for this was closed in Aug-2001, any idea
>> why it isn't in Python 2.2.1, released Apr-2002?
>> 4) I went ahead & patched pythonrun.c and recompiled my Python 
>2.2.1.
>> The FAQ says to rebuild mod_python, but I don't know how to on
>> Windows, and I suspect 2.7.8 might already have the fix?.
>>
>> Can anyone assist with rebuilding mod_python on Windows?  What 
>effect
>> would that have since it doesn't include pythonrun.c in the
>> mod_python build?  Any other ideas regarding the problem? (output 
>is
>> below)
>>
>> -Kevin
>>
>> **** output ****
>>
>> Mod_python error: "PythonHandler mod_python.publisher"
>>
>> Traceback (most recent call last):
>>
>>   File "C:\...\python\Lib\mod_python\apache.py", line 193, in 
>Dispatch
>>     result = object(req)
>>
>>   File "C:\...\python\Lib\mod_python\publisher.py", line 171, in
>> handler
>>     result = apply(object, (), args)
>>
>>   File "c:/.../mywww\imgsvr.py", line 77, in get
>>     fd = open( filenm, "rb" )
>>
>> IOError: [Errno 2] No such file or directory:
>> 'z:\\FILES\\up\\oak_20020730\\01638764.BCK.jpg'
>>
>> **** end of output ****
>>
>> Notes:
>> I'm trying to access a file on my local network.  I have tried
>> different drive letters on my local network (& UNC paths instead of
>> drive letters).  The only time it works is when I use the local 
>"C:"
>> for the path.  Even if I do a "subst e: c:\" and try that (E:\...),
>> it fails.  I even tried messing with <Directory> entries in Apache 
>to
>> no avail.
>>
>> And yes, the code works fine when outside of Apache/Mod_python.



From rclilly at lvcm.com  Wed Aug 21 10:44:13 2002
From: rclilly at lvcm.com (Robert Lilly)
Date: Fri Jan  9 21:46:55 2004
Subject: [mod_python] mod_python for Apache 2? (Cross-posted to mod_python & Apache users lists)
Message-ID: <EGEMLKBGPBCGGGFNPMGNGEOFCDAA.rclilly@lvcm.com>

Is there a mod_python.dll for Apache 2? Is it possible to run mod_python
with Apache 2 under Windows 2000? If so, how do I do it.

Currently I've tried adding:

LoadModule python_module modules/mod_python.dll

and

<Directory "E:/My Documents/RCL Enterprises/Web/htdocs/python">
   AddHandler python-program .py
   PythonHandler mptest
   PythonDebug on
</Directory>

to my httpd.conf file, but I get the following error:

Cannot load D:/Program Files/Apache Group/Apache2/modules/mod_python.dll
into server: The specified module could not be found. I put the latest
mod_python.dll I could find into my modules folder.

TIA,

Robert

---
Outgoing mail is certified Virus Free.
Checked by AVG anti-virus system (http://www.grisoft.com).
Version: 6.0.381 / Virus Database: 214 - Release Date: 8/2/2002


From grisha at modpython.org  Wed Aug 21 14:24:46 2002
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 21:46:55 2004
Subject: [mod_python] mod_python for Apache 2? (Cross-posted to mod_python
 & Apache users lists)
In-Reply-To: <EGEMLKBGPBCGGGFNPMGNGEOFCDAA.rclilly@lvcm.com>
Message-ID: <Pine.BSF.4.32.0208211420220.9601-100000@eden.ispol.com>

There is no mod_python.dll for Apache 2 as of yet. Mod_python 3.0 is
approaching beta status rapidly, and I expect to put the beta out in a
week or so, and perhaps someone will care to compile a DLL of it, though I
must admit I've done 0 testing on Windows yet.

Grisha

On Wed, 21 Aug 2002, Robert Lilly wrote:

> Is there a mod_python.dll for Apache 2? Is it possible to run mod_python
> with Apache 2 under Windows 2000? If so, how do I do it.


From rclilly at lvcm.com  Wed Aug 21 13:29:42 2002
From: rclilly at lvcm.com (Robert Lilly)
Date: Fri Jan  9 21:46:55 2004
Subject: [mod_python] mod_python for Apache 2? (Cross-posted to mod_python & Apache users lists)
In-Reply-To: <Pine.BSF.4.32.0208211420220.9601-100000@eden.ispol.com>
Message-ID: <EGEMLKBGPBCGGGFNPMGNGEOJCDAA.rclilly@lvcm.com>

Thanks Grisha! Will you be announcing to the list when it's released?

> -----Original Message-----
> From: Gregory (Grisha) Trubetskoy [mailto:grisha@modpython.org]
> Sent: Wednesday, August 21, 2002 11:25 AM
> To: Robert Lilly
> Cc: mod_python@modpython.org
> Subject: Re: [mod_python] mod_python for Apache 2? (Cross-posted to
> mod_python & Apache users lists)
>
>
>
> There is no mod_python.dll for Apache 2 as of yet. Mod_python 3.0 is
> approaching beta status rapidly, and I expect to put the beta out in a
> week or so, and perhaps someone will care to compile a DLL of it, though I
> must admit I've done 0 testing on Windows yet.
>
> Grisha
>
> On Wed, 21 Aug 2002, Robert Lilly wrote:
>
> > Is there a mod_python.dll for Apache 2? Is it possible to run mod_python
> > with Apache 2 under Windows 2000? If so, how do I do it.
>
> ---
> Incoming mail is certified Virus Free.
> Checked by AVG anti-virus system (http://www.grisoft.com).
> Version: 6.0.381 / Virus Database: 214 - Release Date: 8/2/2002
>
---
Outgoing mail is certified Virus Free.
Checked by AVG anti-virus system (http://www.grisoft.com).
Version: 6.0.381 / Virus Database: 214 - Release Date: 8/2/2002


From fabbe at paniq.net  Thu Aug 22 09:25:08 2002
From: fabbe at paniq.net (Fabian Fagerholm)
Date: Fri Jan  9 21:46:55 2004
Subject: [mod_python] mod_python link on Apache web page?
Message-ID: <1029997509.1695.8.camel@kernel>

I was browsing around the Apache web pages when it struck me that
mod_python is definitely not getting the exposure it could on those
pages. There is perl.apache.org, php.apache.org and tcl.apache.org, but
there is no python.apache.org. There isn't even a mod_python link under
the "Sister Projects" section.

I think this is quite sad, because why shouldn't Python be an equally
good choice as web app development language as Perl, PHP or TCL?

What I would like to do is get a link to the mod_python web site under
the "Sister Projects" section of http://www.apache.org/, or (preferably)
find out how a python.apache.org could be created, either as a general
Python-Apache site or as a direct link to the mod_python web site
(perl.apache.org is actually the mod_perl site).

Are there any opinions or further information on this matter that anyone
would like to share? Is anyone interested in this?

Cheers,
Fabian

-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 240 bytes
Desc: This is a digitally signed message part
Url : http://mailman.modpython.org/pipermail/mod_python/attachments/20020822/d1651147/attachment.bin
From vmilitaru at sympatico.ca  Thu Aug 22 04:11:47 2002
From: vmilitaru at sympatico.ca (vio)
Date: Fri Jan  9 21:46:55 2004
Subject: [mod_python] mod_python link on Apache web page?
In-Reply-To: <1029997509.1695.8.camel@kernel>; from fabbe@paniq.net on Thu, Aug 22, 2002 at 09:25:08AM +0300
References: <1029997509.1695.8.camel@kernel>
Message-ID: <20020822041146.A281@eye.neb>

Since mod_python is so totally dependent on apache, warming up this 
symbiotic relationship to similar levels as mod_perl and such would make a lot
of sense. Though from my selfish user's point of view, as long as I can make 
apache sing python songs, and doing it faster than in Zope, I don't much care 
more than that. Languages is kind of a religious experience, with hugely 
various followings. As in real religions, it's seldom the best religion who is 
the most popular (no offense, but unfortunately it's always the better 
marketing who wins crowds, rarely the technically better product 
... howdy Bill !).

Apologies to the list for my misplaced religious bull. But I am quite surprized
to hear that mod_python is not referenced by apache web site. I believe that's
the place to be if mod_python wants to recruit a bigger audience/following.
Cause if you only meter in the programming experience, Python is way better
than Perl or PHP or Java or C/Cpp or what have you (I don't know TCL, so can't
compare it). I mean, Python's competition. 
Why am I so damn sure? Cause else, I'd be 
out of here in a hurry, as well as each and every one of you reading this.
We're here because we've seen what else is there, and for the time being,
mod_python + apache is pretty much the best there is.

python.apache.org sounds great. Provided the owners of the apache.org domain 
agree. Though as much as I'm concerned, I wouldn't waste much sleep if it 
doesn't happen.
My opinion.

Vio

PS. What would be quite intriguing would be to meter the mod_python's installed
base. I mean, apache now runs over 60% of all web servers worldwide. I'd be 
curious to know what segment of this market also runs mod_python ? Not that
it matters a great deal (the fact that mod_perl's stats would probably beat
the pants out of mod_python's won't make me run back to the former anythime
soon).

PS2. Sorry about my huge crap. I's definitely been too long a day.


* Fabian Fagerholm <fabbe@paniq.net> [020822 03:02]:
> I was browsing around the Apache web pages when it struck me that
> mod_python is definitely not getting the exposure it could on those
> pages. There is perl.apache.org, php.apache.org and tcl.apache.org, but
> there is no python.apache.org. There isn't even a mod_python link under
> the "Sister Projects" section.
> 
> I think this is quite sad, because why shouldn't Python be an equally
> good choice as web app development language as Perl, PHP or TCL?
> 
> What I would like to do is get a link to the mod_python web site under
> the "Sister Projects" section of http://www.apache.org/, or (preferably)
> find out how a python.apache.org could be created, either as a general
> Python-Apache site or as a direct link to the mod_python web site
> (perl.apache.org is actually the mod_perl site).
> 
> Are there any opinions or further information on this matter that anyone
> would like to share? Is anyone interested in this?
> 
> Cheers,
> Fabian
> 



From fabbe at paniq.net  Thu Aug 22 12:56:46 2002
From: fabbe at paniq.net (Fabian Fagerholm)
Date: Fri Jan  9 21:46:55 2004
Subject: [mod_python] mod_python link on Apache web page?
In-Reply-To: <20020822041146.A281@eye.neb>
References: <1029997509.1695.8.camel@kernel>  <20020822041146.A281@eye.neb>
Message-ID: <1030010207.1694.127.camel@kernel>

On Thu, 2002-08-22 at 12:11, vio wrote:
> Since mod_python is so totally dependent on apache, warming up this 
> symbiotic relationship to similar levels as mod_perl and such would
> make a lot of sense.

Well put.

> Apologies to the list for my misplaced religious bull.

:)
If so, my apologies for bringing up the subject in the first place. But
I do not think there is any reasons for apologies - if there are
objections against this type of discussions on this list, there should
be a separate list for purely technical discussions and a separate list
for "mod_python politics". ;)

> python.apache.org sounds great. Provided the owners of the apache.org
> domain agree. Though as much as I'm concerned, I wouldn't waste much
> sleep if it doesn't happen.
> My opinion.

Ok. Are there other opinions? I would especially like to hear if there
are any objections.

What I think needs to be done is something this:
The issue needs blessing from Grisha. Without him being in on this, I
see no point in trying to achieve a tighter connection to the Apache
project.
        * The Python web development community outside mod_python should
          be heard. There are probably lots of people using Zope, not to
          mention those using Python as a language for cgi-bin scripts.
          Their opinion needs to be asked for. There is nothing to say
          that python.apache.org should equal mod_python, like
          perl.apache.org equals mod_perl. Perhaps python.apache.org
          should be a trimmed site with Apache-Python-related links.
          mod_python could be prominent there. The Web-Python community
          at large needs to discuss this.
        * The Apache people need to be contacted. Before this, however,
          there needs to be consensus among the people willing to
          contribute.

I'm willing to contribute some time to contacting all these different
groups of people. But I would like some more feedback from the readers
of this mailing list first.

> PS. What would be quite intriguing would be to meter the mod_python's 
> installed base.

I'll look into this as well as a separate matter.

Cheers,
Fabian

-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 240 bytes
Desc: This is a digitally signed message part
Url : http://mailman.modpython.org/pipermail/mod_python/attachments/20020822/159300e8/attachment.bin
From kevin at vap.org  Thu Aug 22 10:45:07 2002
From: kevin at vap.org (kevin@vap.org)
Date: Fri Jan  9 21:46:55 2004
Subject: [mod_python] Re: IOError: [Errno 2] No such file or directory...(etc)
Message-ID: <6610-22002842214457888@vap.org>

I finally got it to work.  It was definitely just an Apache on
Windows problem.

For those interested:  It was a combination of using a User ID with
enough local rights/privileges for the services logon, combined with
using UNC pathnames instead of drive letters ("//remotesvr/files" vs
"z:/files").

Apparently the drive letter mappings (beyond any physical devices)
are only available during an interactive login, not an NT service
login (even though it was the same User ID login).

-Kevin


From grisha at modpython.org  Thu Aug 22 11:26:41 2002
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 21:46:55 2004
Subject: [mod_python] mod_python link on Apache web page?
In-Reply-To: <1030010207.1694.127.camel@kernel>
Message-ID: <Pine.BSF.4.32.0208221118260.22715-100000@eden.ispol.com>

As far as I understand, the *.apache.org domains are for projects
sponsored by Apache Software Foundation, and mod_perl happens to be one of
them. Since mod_python isn't sponsored by the Apache Software Foundation,
I don't really see it a problem that there isn't an *.apache.org site.

As far as the general exposure - we could use a little more of it, but so
could Python in genral I think.

Grisha

On 22 Aug 2002, Fabian Fagerholm wrote:

> On Thu, 2002-08-22 at 12:11, vio wrote:
> > Since mod_python is so totally dependent on apache, warming up this
> > symbiotic relationship to similar levels as mod_perl and such would
> > make a lot of sense.


From grisha at modpython.org  Thu Aug 22 17:35:07 2002
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 21:46:55 2004
Subject: [mod_python] mod_python 3 beta
In-Reply-To: <6610-22002842214457888@vap.org>
Message-ID: <Pine.BSF.4.32.0208221722190.27115-100000@eden.ispol.com>

You can grab the latest CVS snapshot at
http://www.modpython.org/dist/dev/mod_python-3.0.0-BETA.tgz

First off a warning: this is NOT production quality software, use at your
own risk!

A few notes:

1. It requires Python 2.2.1. Earlier versions of Python will not work
(though 2.2 might). The reason is that some of the objects (table and
request) are now the new Python classes as described here:
http://www.python.org/2.2.1/descrintro.html

2. It requires Apache 2.0.40, earlier versions won't compile.

3. There is no static compilation support, only DSO.

4. I've only tested it on RedHat Linux 7.3. I don't even know if it will
compile on other platforms.

5. Python*Handler directives can now take an additional argument - "|"
followed by a list of extensions. This will limit execution of the handler
to those extensions, e.g.:

PythonHandler myhandler | .pyhtml

6. There is now support for filters via PythonInputFilter and
PythonOutputFilter directives. This is kind of new and raw, so YMMV.

7. The documentation has been updated to reflect new features and changes,
though filter docs are still kind of skimpy.

There is more changes, but I can't remember them now....

Please give it a spin and send feedback to me or to the list.

Grisha


From fabbe at paniq.net  Fri Aug 23 10:10:32 2002
From: fabbe at paniq.net (Fabian Fagerholm)
Date: Fri Jan  9 21:46:55 2004
Subject: [mod_python] mod_python link on Apache web page?
In-Reply-To: <Pine.BSF.4.32.0208221118260.22715-100000@eden.ispol.com>
References: <Pine.BSF.4.32.0208221118260.22715-100000@eden.ispol.com>
Message-ID: <1030086632.969.28.camel@kernel>

On Thu, 2002-08-22 at 18:26, Gregory (Grisha) Trubetskoy wrote:
> 
> As far as I understand, the *.apache.org domains are for projects
> sponsored by Apache Software Foundation, and mod_perl happens to be one of
> them. Since mod_python isn't sponsored by the Apache Software Foundation,
> I don't really see it a problem that there isn't an *.apache.org site.

I'm not entirely sure but I don't think PHP is "sponsored" by the ASF. I
think the "projects" listed on www.apache.org are highly different in
their level of integration with the ASF. For example, PHP is largely a
separate project while mod_perl seems to be more integrated.

On the Apache Projects page
(http://www.apache.org/foundation/projects.html), I found the following:

    "The Apache Software Foundation is always looking for new or
    existing collaborative software development projects that are in
    need of a home. This includes both projects related and unrelated to
    the existing ASF projects."

mod_python does have the infrastructure in place - there's a web page
and a mailing list - so there is no need for that kind of collaboration.
But I do think the project could benefit from more exposure, and that
Apache could benefit from having closer ties with Python. You say:

> As far as the general exposure - we could use a little more of it, but so
> could Python in genral I think.

Could this be an opportunity to adress the issue?

Or to put it another way: Why should there *not* be a python.apache.org?

Cheers,
Fabian

-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 240 bytes
Desc: This is a digitally signed message part
Url : http://mailman.modpython.org/pipermail/mod_python/attachments/20020823/8117e663/attachment.bin
From vmilitaru at sympatico.ca  Fri Aug 23 03:41:41 2002
From: vmilitaru at sympatico.ca (vio)
Date: Fri Jan  9 21:46:55 2004
Subject: [mod_python] mod_python link on Apache web page?
In-Reply-To: <3D65DE58.EEC33098@sympatico.ca>; from vmilitaru@sympatico.ca on Fri, Aug 23, 2002 at 03:03:53AM -0400
References: <3D65DE58.EEC33098@sympatico.ca>
Message-ID: <20020823034140.A672@eye.neb>

Fabian, I think you should just shoot the 'python.apache.org' question on the
appropriate apache mailing lists and see what happens. If something interesting
comes your way, maybe forward it to the mod_python list. But if too much shit
comes your way, maybe have a pair of scissors close by (to cut your modem line,
of course). Anyway, it's the only way to really answer your query, and seems 
to me the key resides much more on the apache side than on the mod_python side (I mean Grisha). 

Don't have to ask so many permissions. Just do it. See what happens.
Vio

> Fabian Fagerholm wrote:
> 
> > On Thu, 2002-08-22 at 18:26, Gregory (Grisha) Trubetskoy wrote:
> > >
> > > As far as I understand, the *.apache.org domains are for projects
> > > sponsored by Apache Software Foundation, and mod_perl happens to be one of
> > > them. Since mod_python isn't sponsored by the Apache Software Foundation,
> > > I don't really see it a problem that there isn't an *.apache.org site.
> >
> > I'm not entirely sure but I don't think PHP is "sponsored" by the ASF. I
> > think the "projects" listed on www.apache.org are highly different in
> > their level of integration with the ASF. For example, PHP is largely a
> > separate project while mod_perl seems to be more integrated.
> >
> > On the Apache Projects page
> > (http://www.apache.org/foundation/projects.html), I found the following:
> >
> >     "The Apache Software Foundation is always looking for new or
> >     existing collaborative software development projects that are in
> >     need of a home. This includes both projects related and unrelated to
> >     the existing ASF projects."
> >
> > mod_python does have the infrastructure in place - there's a web page
> > and a mailing list - so there is no need for that kind of collaboration.
> > But I do think the project could benefit from more exposure, and that
> > Apache could benefit from having closer ties with Python. You say:
> >
> > > As far as the general exposure - we could use a little more of it, but so
> > > could Python in genral I think.
> >
> > Could this be an opportunity to adress the issue?
> >
> > Or to put it another way: Why should there *not* be a python.apache.org?
> >
> > Cheers,
> > Fabian
> >
> >   ------------------------------------------------------------------------
> >                        Name: signature.asc
> >    signature.asc       Type: application/pgp-signature
> >                 Description: This is a digitally signed message part

From fabbe at paniq.net  Fri Aug 23 12:05:21 2002
From: fabbe at paniq.net (Fabian Fagerholm)
Date: Fri Jan  9 21:46:55 2004
Subject: [mod_python] mod_python link on Apache web page?
In-Reply-To: <20020823034140.A672@eye.neb>
References: <3D65DE58.EEC33098@sympatico.ca>  <20020823034140.A672@eye.neb>
Message-ID: <1030093521.969.47.camel@kernel>

On Fri, 2002-08-23 at 11:41, vio wrote:
> Fabian, I think you should just shoot the 'python.apache.org' question on the
> appropriate apache mailing lists and see what happens. If something interesting
> comes your way, maybe forward it to the mod_python list. But if too much shit
> comes your way, maybe have a pair of scissors close by (to cut your modem line,
> of course). Anyway, it's the only way to really answer your query, and seems 
> to me the key resides much more on the apache side than on the mod_python side
> (I mean Grisha).
>
> Don't have to ask so many permissions. Just do it. See what happens.

I agree that doing something is the only way of doing it :)

I do think there are different ways of doing things, though. Some of the
ways will inevitably lead to failure - and I'd like to avoid those.

Specifically, I want to approach the Apache Software Foundation in the
correct manner. Bargning in, yelling the name of an arbitrary reptile,
is hardly the way to go. I also want the opinion of the people currently
using the Python-Apache combination. If nobody is interested in this,
then what is the use of it?

In addition, I want to avoid making things worse for people in the
future. It might be that the issue cannot be adressed right now, but
could be adressed in the future. In that case, a previous negative
experience will not be beneficial.

But rest assured that something will be done. I have already aquired
information on the correct procedures to contact the ASF. Before I do
that, however, I will try to reach a larger part of the Python Web
community and listen to some opinions there. For all I know, someone
else might be doing this as we speak - in which case we should join
forces.

I'd welcome further discussion on this topic, and I'll post more
information when I have it.

Cheers,
Fabian

-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 240 bytes
Desc: This is a digitally signed message part
Url : http://mailman.modpython.org/pipermail/mod_python/attachments/20020823/99f0dfbc/attachment.bin
From fabbe at paniq.net  Fri Aug 23 12:51:32 2002
From: fabbe at paniq.net (Fabian Fagerholm)
Date: Fri Jan  9 21:46:55 2004
Subject: [mod_python] Promoting Python as web application development language
Message-ID: <1030096292.969.85.camel@kernel>

Hello, World!

In a recent thread [0] on the mod_python [1] mailing list, I'm wondering
why there isn't a Python link on the main Apache web site. There are
PHP, Perl and Tcl links but Python is nowhere present.

It is of course evident that the lack of a link is due to the lack of
perceived usage of Python as a web application development language.
That, in turn, is due to the lack of exposure on sites like the Apache
one.

I would like to see this change. Specifically, as I write in my post on
the mod_python mailing list,

    "What I would like to do is get a link to the mod_python web site
    under the "Sister Projects" section of http://www.apache.org/, or
    (preferably) find out how a python.apache.org could be created,
    either as a general Python-Apache site or as a direct link to the
    mod_python web site (perl.apache.org is actually the mod_perl
    site)."
    
I have concluded that before any such thing can be done, the opinions of
the people currently using the Python-Apache combination (which I
suspect is no small number) need to be solicited to some degree.

I would like to hear what you think about the creation of a
"python.apache.org" (or equivalent) that would focus on the topic of web
app development with Python and Apache. I imagine the site itself being
quite slim with some essential information and links to other projects,
particularly to the mod_python site.

Also, I would like to hear about any related projects or any previous
contact to the Apache Software Foundation.


I apologise for the cross-post but I feel it is warranted in this case.
I'm only subscribed to the mod_python mailing list so please keep me or
that list Cc'ed if you reply.

Cheers,
Fabian Fagerholm

[0] http://www.modpython.org/pipermail/mod_python/2002-August/002360.html

[1] http://www.modpython.org/

-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 240 bytes
Desc: This is a digitally signed message part
Url : http://mailman.modpython.org/pipermail/mod_python/attachments/20020823/a9e059e7/attachment.bin
From vmilitaru at sympatico.ca  Fri Aug 23 06:08:09 2002
From: vmilitaru at sympatico.ca (vmilitaru@sympatico.ca)
Date: Fri Jan  9 21:46:56 2004
Subject: [mod_python] mod_python link on Apache web page?
In-Reply-To: <1030093521.969.47.camel@kernel>; from fabbe@paniq.net on Fri, Aug 23, 2002 at 12:05:21PM +0300
References: <3D65DE58.EEC33098@sympatico.ca> <20020823034140.A672@eye.neb> <1030093521.969.47.camel@kernel>
Message-ID: <20020823060809.A744@eye.neb>

My reaction: all mod_python actually needs from the apache bunch is more 
'exposure', and somehow their official blessing and recognition, which is
what 'python.apache.org' or some other pointer from the 'official'
apache site gives you. 
I'm not saying you should not ask them politely for their reaction to this
request, rather something like:

"Greetings,
I'm from mod_python. We have this great apache module, but sadly we don't see
a pointer on the apache site towards our module. Since it is so similar to 
other great apache modules like mod_perl and mod_php, what would it take to
have a pointer to the mod_python site on the official apache site, alongsite
mod_perl and such ? Something like 'python.apache.org' redirecting to
'www.modpython.org' sounds quite appealing to us. Any feedback on this topic
would be appreciated.
Regards,
xxx"

Simple, direct, cutting the bull to a minimum. If that's feasible, or not,
you'll know, and why, and won't waste your time further if it's a no no. 
You don't need all this consulting the greater Python community for some link
on a web page. 
Too much politics. My little experience in 'managing an
open source project through consensus' has not been that great so far (too much
talk, too few results: each has a different opinion, so everybody
discusses ad noseam on the best way to cut the cheese). Grisha developped
mod_python on his own, and though I may be mistaken, I don't recall him 
talking about doing much consulting previous to starting that project.

Furthermore, I'm pretty sure the 'Apache Software Foundation' people is aware
of mod_python's existence, and won't confuse python to its reptilian cousin
(nor the famous british comedy group). These are pretty bright people.

My opinion (again). In case nobody else has one on this specific political 
topic, or don't agree with you, just do it anyway, and share your results 
with the list. What's the worst that can happen? Yo'll get flamed ? 

You only live once :-)
Vio


* Fabian Fagerholm <fabbe@paniq.net> [020823 05:10]:
> On Fri, 2002-08-23 at 11:41, vio wrote:
> > Fabian, I think you should just shoot the 'python.apache.org' question on the
> > appropriate apache mailing lists and see what happens. If something interesting
> > comes your way, maybe forward it to the mod_python list. But if too much shit
> > comes your way, maybe have a pair of scissors close by (to cut your modem line,
> > of course). Anyway, it's the only way to really answer your query, and seems 
> > to me the key resides much more on the apache side than on the mod_python side
> > (I mean Grisha).
> >
> > Don't have to ask so many permissions. Just do it. See what happens.
> 
> I agree that doing something is the only way of doing it :)
> 
> I do think there are different ways of doing things, though. Some of the
> ways will inevitably lead to failure - and I'd like to avoid those.
> 
> Specifically, I want to approach the Apache Software Foundation in the
> correct manner. Bargning in, yelling the name of an arbitrary reptile,
> is hardly the way to go. I also want the opinion of the people currently
> using the Python-Apache combination. If nobody is interested in this,
> then what is the use of it?
> 
> In addition, I want to avoid making things worse for people in the
> future. It might be that the issue cannot be adressed right now, but
> could be adressed in the future. In that case, a previous negative
> experience will not be beneficial.
> 
> But rest assured that something will be done. I have already aquired
> information on the correct procedures to contact the ASF. Before I do
> that, however, I will try to reach a larger part of the Python Web
> community and listen to some opinions there. For all I know, someone
> else might be doing this as we speak - in which case we should join
> forces.
> 
> I'd welcome further discussion on this topic, and I'll post more
> information when I have it.
> 
> Cheers,
> Fabian
> 



From fabbe at paniq.net  Fri Aug 23 14:01:55 2002
From: fabbe at paniq.net (Fabian Fagerholm)
Date: Fri Jan  9 21:46:56 2004
Subject: [mod_python] mod_python link on Apache web page?
In-Reply-To: <20020823060809.A744@eye.neb>
References: <3D65DE58.EEC33098@sympatico.ca> <20020823034140.A672@eye.neb>
	<1030093521.969.47.camel@kernel>  <20020823060809.A744@eye.neb>
Message-ID: <1030100515.969.106.camel@kernel>

On Fri, 2002-08-23 at 14:08, vmilitaru@sympatico.ca wrote:
[on approaching the ASF]
> Simple, direct, cutting the bull to a minimum. If that's feasible, or not,
> you'll know, and why, and won't waste your time further if it's a no no. 
> You don't need all this consulting the greater Python community for some link
> on a web page. 

I disagree. Cutting the bull to a minimum is of course desirable, but I
think you're underestimating the impact of a "python.apache.org". It's
not just "some link on a web page". It's an endorsement by an
organisation that has become quite influential over the years.

This is not to say that one should come crawling on one's knees, begging
for a "link on your web page". Instead, one should show some sign of
being a good partner with some organisational skills.

> Grisha developped
> mod_python on his own, and though I may be mistaken, I don't recall him 
> talking about doing much consulting previous to starting that project.

Grisha's contribution should definately be valued very highly. This is
the exact reason that I choose to discuss things first instead of
heading off in some unannounced direction. Since Grisha is the author of
mod_python, he should have a say in this. For instance, he might've said
that he wants to continue development in peace and quiet for a while,
and I would've backed off on this. I think asking was the least I could
do to show some respect.

> My opinion (again). In case nobody else has one on this specific political 
> topic, or don't agree with you, just do it anyway, and share your results 
> with the list. What's the worst that can happen? Yo'll get flamed ? 

Flame away :)

As you'll notice, I posted a message to python-list and the
marketing-python list, with Cc to this list. We'll see what happens and
if I feel it is the right thing to do, I'll continue with this project.

Basically, I think there's no reason to rush. If something can be done
today, it can probably be done tomorrow as well - and you'll get a
chance to think it over one more time. If tomorrow it turns out it can't
be done after all, then you'll be lucky you didn't waste time on it
today.

Cheers,
Fabian

-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 240 bytes
Desc: This is a digitally signed message part
Url : http://mailman.modpython.org/pipermail/mod_python/attachments/20020823/80c2ccad/attachment.bin
From grisha at modpython.org  Fri Aug 23 08:39:33 2002
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 21:46:56 2004
Subject: [mod_python] mod_python link on Apache web page?
In-Reply-To: <1030100515.969.106.camel@kernel>
Message-ID: <Pine.BSF.4.32.0208230834550.35718-100000@eden.ispol.com>

My "official" position on this is that I don't have strong feelings one
way or the other. Being concerned with these matters is something that I
at the moment do not have a lot of time for. If someone wants to take up
the task of promoting mp, God bless'em.

Grisha

On 23 Aug 2002, Fabian Fagerholm wrote:

> On Fri, 2002-08-23 at 14:08, vmilitaru@sympatico.ca wrote:
>
> Basically, I think there's no reason to rush. If something can be done
> today, it can probably be done tomorrow as well - and you'll get a
> chance to think it over one more time. If tomorrow it turns out it can't
> be done after all, then you'll be lucky you didn't waste time on it
> today.


From neel at mediapulse.com  Fri Aug 23 11:29:53 2002
From: neel at mediapulse.com (Michael C. Neel)
Date: Fri Jan  9 21:46:56 2004
Subject: [mod_python] Promoting Python as web application development language
Message-ID: <C0FC22C08B82074A88B50061764157775B94@johnson.mediapulse.net>

Well, what a day to join the mod_python list!

I believe that mod_python needs to be more featured on the apache
website, just as mod_perl and PHP.  As a developer who has worked with
perl for quite sometime, I have run into perl's limitations in a large
scale applications.  I began to seek out other choices that offered both
performance and a strong OO base from which management of large scale
applications.  I had looked at python before, but didn't know of
mod_python - and running something in the CGI space is sooo 1996 =D

Though another project I came to find mailman, and though the mailman
docs I came to find out about mod_python.  Mailman IMHO is a strong
reason why python can compete as a "web language", offering the OO of
Java without the performance hit or running a separate server just for
Java (ala Tomcat).

I also think mod_python will begin to gain a larger following as Apache
2.0 is deployed.  Python just strikes me as a much better language to
fit in with the new format and concepts of the Apache 2.0 modules.

Perl, Python, and PHP each have their own strengths and faults when used
under Apache.  Not one of them will ever replace the need for the other,
and I hope they never try to.  Different application have different
goals and require different approaches.  I feel all warm and fuzzy
inside thinking about how the open source community has provided me with
a solution for every need.  Python is one of those solutions, and every
bit as worthy of python.apache.org as the rest.

Mike
--
Michael C. Neel
There are only 10 types of people in the world;
those who understand binary and those who don't.


-----Original Message-----
From: Fabian Fagerholm [mailto:fabbe@paniq.net] 
Sent: Friday, August 23, 2002 5:52 AM
To: marketing-python@wingide.com; python-list@python.org
Cc: mod_python@modpython.org
Subject: [mod_python] Promoting Python as web application development
language


Hello, World!

In a recent thread [0] on the mod_python [1] mailing list, I'm wondering
why there isn't a Python link on the main Apache web site. There are
PHP, Perl and Tcl links but Python is nowhere present.

It is of course evident that the lack of a link is due to the lack of
perceived usage of Python as a web application development language.
That, in turn, is due to the lack of exposure on sites like the Apache
one.

I would like to see this change. Specifically, as I write in my post on
the mod_python mailing list,

    "What I would like to do is get a link to the mod_python web site
    under the "Sister Projects" section of http://www.apache.org/, or
    (preferably) find out how a python.apache.org could be created,
    either as a general Python-Apache site or as a direct link to the
    mod_python web site (perl.apache.org is actually the mod_perl
    site)."
    
I have concluded that before any such thing can be done, the opinions of
the people currently using the Python-Apache combination (which I
suspect is no small number) need to be solicited to some degree.

I would like to hear what you think about the creation of a
"python.apache.org" (or equivalent) that would focus on the topic of web
app development with Python and Apache. I imagine the site itself being
quite slim with some essential information and links to other projects,
particularly to the mod_python site.

Also, I would like to hear about any related projects or any previous
contact to the Apache Software Foundation.


I apologise for the cross-post but I feel it is warranted in this case.
I'm only subscribed to the mod_python mailing list so please keep me or
that list Cc'ed if you reply.

Cheers,
Fabian Fagerholm

[0]
http://www.modpython.org/pipermail/mod_python/2002-August/002360.html

[1] http://www.modpython.org/



From grisha at modpython.org  Fri Aug 23 11:32:13 2002
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 21:46:56 2004
Subject: [mod_python] 3.0 beta dll now available
In-Reply-To: <1030100515.969.106.camel@kernel>
Message-ID: <Pine.BSF.4.32.0208231129430.37364-100000@eden.ispol.com>

For Windows users, I managed to compile a DLL, and the "hello world" test
passed OK on Win2K.

You can get it at

http://www.modpython.org/dist/dev/3.0.0-BETA-python2.2.1-apache2.0.40.zip

Grisha


From rien at yeepa.org  Fri Aug 23 18:43:12 2002
From: rien at yeepa.org (Adrien Plisson)
Date: Fri Jan  9 21:46:56 2004
Subject: [mod_python] 3.0 beta dll now available
References: <Pine.BSF.4.32.0208231129430.37364-100000@eden.ispol.com>
Message-ID: <002e01c24ac4$2e6a7790$0a020101@skynet.be>

From: "Gregory (Grisha) Trubetskoy" <grisha@modpython.org>
> For Windows users, I managed to compile a DLL, and the "hello world" test
> passed OK on Win2K.

cooooool ! I won't have to do it on my own, though it could be of great
experience...

that's too bad i don't have time to look further at it, but the new apache
2.0 features looks great and will surely enable me to meet my goals sooner
than expected. it's great that mod_python is getting this way.

btw, i would like to thank you, grisha, for all the work you're doing, and
all the time you spend on mod_python. it ruuuules !

--
rien


From vmilitaru at sympatico.ca  Fri Aug 23 18:22:19 2002
From: vmilitaru at sympatico.ca (vio)
Date: Fri Jan  9 21:46:56 2004
Subject: [mod_python] Promoting Python as web application development language
Message-ID: <20020823182218.A304@eye.neb>

Greetings to Apache Board Members,

Apoligies to Fabian Fagerholm for short-cutting his efforts with this message.
But I just wanted to cut the bull and go straight to the point: we have this
great apache module called mod_python, thanks to Gregory (Grisha) Trubetskoy, 
suffering from a big lack of exposure. We strongly believe this great piece 
of technology (which is the marriage of apache + python) deserves a place 
alongside mod_perl and mod_ssl 'on the main apache site'. Understanbably,
mod_python is not an Apache Foundation project (rather it's Grisha's project).
Yet, there is such a symbiotic relationship between apache and mod_python,
what would it take to have a link on the main apache side to the 'python'
web-app alternative, in the Apache Projects section of the 
LEFT SIDE NAVIGATION ?

   Apache Projects
     HTTP Server
     APR
     Jakarta
     Perl
     Python    <-- something like this, linking to www.mod_python.org,
     PHP           or to 'python.apache.org' which would redirect to
     TCL           www.mod_python.org (or something along those lines)
     XML
     Conferences
     Foundation

In conclusion, I believe this is a great opportunity for greater integration
between the main apache movement, and the independent mod_python effort.
In my view, Apache needs a strong python alternative alongside Perl and such, 
while mod_python gains greater exposure and 'official blessing' from the Apache
Software Foundation.

Please send your reactions, comments, suggestions on this topic directly to the
mod_python mailing list at 'mod_python@modpython.org'.
If this is not the appropriate forum to discuss this topic, please redirect
my message as appropriate.

Thank You kindly for your time,
Vio


PS. Included 2 recent messages from the mod_python list outlining the need for
a direct link between apache main site and mod_python:

* Michael C. Neel <neel@mediapulse.com> wrote:
> Well, what a day to join the mod_python list!
> 
> I believe that mod_python needs to be more featured on the apache
> website, just as mod_perl and PHP.  As a developer who has worked with
> perl for quite sometime, I have run into perl's limitations in a large
> scale applications.  I began to seek out other choices that offered both
> performance and a strong OO base from which management of large scale
> applications.  I had looked at python before, but didn't know of
> mod_python - and running something in the CGI space is sooo 1996 =D
> 
> Though another project I came to find mailman, and though the mailman
> docs I came to find out about mod_python.  Mailman IMHO is a strong
> reason why python can compete as a "web language", offering the OO of
> Java without the performance hit or running a separate server just for
> Java (ala Tomcat).
> 
> I also think mod_python will begin to gain a larger following as Apache
> 2.0 is deployed.  Python just strikes me as a much better language to
> fit in with the new format and concepts of the Apache 2.0 modules.
> 
> Perl, Python, and PHP each have their own strengths and faults when used
> under Apache.  Not one of them will ever replace the need for the other,
> and I hope they never try to.  Different application have different
> goals and require different approaches.  I feel all warm and fuzzy
> inside thinking about how the open source community has provided me with
> a solution for every need.  Python is one of those solutions, and every
> bit as worthy of python.apache.org as the rest.
> 
> Mike
> --
> Michael C. Neel
> There are only 10 types of people in the world;
> those who understand binary and those who don't.
> 
> 
> -----Original Message-----
> From: Fabian Fagerholm [mailto:fabbe@paniq.net] 
> Sent: Friday, August 23, 2002 5:52 AM
> To: marketing-python@wingide.com; python-list@python.org
> Cc: mod_python@modpython.org
> Subject: [mod_python] Promoting Python as web application development
> language
> 
> 
> Hello, World!
> 
> In a recent thread [0] on the mod_python [1] mailing list, I'm wondering
> why there isn't a Python link on the main Apache web site. There are
> PHP, Perl and Tcl links but Python is nowhere present.
> 
> It is of course evident that the lack of a link is due to the lack of
> perceived usage of Python as a web application development language.
> That, in turn, is due to the lack of exposure on sites like the Apache
> one.
> 
> I would like to see this change. Specifically, as I write in my post on
> the mod_python mailing list,
> 
>     "What I would like to do is get a link to the mod_python web site
>     under the "Sister Projects" section of http://www.apache.org/, or
>     (preferably) find out how a python.apache.org could be created,
>     either as a general Python-Apache site or as a direct link to the
>     mod_python web site (perl.apache.org is actually the mod_perl
>     site)."
>     
> I have concluded that before any such thing can be done, the opinions of
> the people currently using the Python-Apache combination (which I
> suspect is no small number) need to be solicited to some degree.
> 
> I would like to hear what you think about the creation of a
> "python.apache.org" (or equivalent) that would focus on the topic of web
> app development with Python and Apache. I imagine the site itself being
> quite slim with some essential information and links to other projects,
> particularly to the mod_python site.
> 
> Also, I would like to hear about any related projects or any previous
> contact to the Apache Software Foundation.
> 
> 
> I apologise for the cross-post but I feel it is warranted in this case.
> I'm only subscribed to the mod_python mailing list so please keep me or
> that list Cc'ed if you reply.
> 
> Cheers,
> Fabian Fagerholm
> 
> [0]
> http://www.modpython.org/pipermail/mod_python/2002-August/002360.html
> 
> [1] http://www.modpython.org/
> 
> 
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://www.modpython.org/mailman/listinfo/mod_python



From jfk at metation.com  Sat Aug 24 10:16:42 2002
From: jfk at metation.com (=?iso-8859-1?q?J=F8rgen=20Fr=F8jk=20Kj=E6rsgaard=20{Metation}?=)
Date: Fri Jan  9 21:46:56 2004
Subject: [mod_python] Promoting Python as web application development language
In-Reply-To: <20020823182218.A304@eye.neb>
References: <20020823182218.A304@eye.neb>
Message-ID: <02082410164204.00306@grace.metation.com>

L?rdag 24. August 2002 01:22 skrev du:
> Yet, there is such a symbiotic relationship between
> apache and mod_python, what would it take to have a link on the main apache
> side to the 'python' web-app alternative, in the Apache Projects section of
> the
> LEFT SIDE NAVIGATION ?
>
>    Apache Projects
>      HTTP Server
>      APR
>      Jakarta
>      Perl
>      Python    <-- something like this, linking to www.mod_python.org,
>      PHP           or to 'python.apache.org' which would redirect to
>      TCL           www.mod_python.org (or something along those lines)
>      XML
>      Conferences
>      Foundation

As Fabian Fagerholm wrote aug 22nd, I believe python.apache.org shouldn't 
equal mod_python. Although mod_python is a great product, it isn't the only 
way to use Python with Apache.

The community around mod_dtcl took the initial initiative to move to 
tcl.apache.org and invited the other Tcl alternatives to join in. This has 
now resulted in a new module, Apache Rivet, which combines the efforts of 
mod_dtcl and neowebscript.

If a similar symbiosis can be archived in the Python web community, I believe 
it we benefit all of us. On the other hand, if python.apache.org == 
mod_python, it may split the Python web community.

/jfk

-- 
J?rgen Fr?jk Kj?rsgaard, direkt?r og systemkonsulent
Metation aps - Kystvejen 29, DK-8000 ?rhus C
Web: www.metation.com  - Tlf: +45 8625 0038 - Mobil: +45 2925 6693

From vmilitaru at sympatico.ca  Sat Aug 24 05:36:26 2002
From: vmilitaru at sympatico.ca (vio)
Date: Fri Jan  9 21:46:56 2004
Subject: [mod_python] Promoting Python as web application development language
In-Reply-To: <02082410164204.00306@grace.metation.com>; from jfk@metation.com on Sat, Aug 24, 2002 at 10:16:42AM +0200
References: <20020823182218.A304@eye.neb> <02082410164204.00306@grace.metation.com>
Message-ID: <20020824053625.A685@eye.neb>

Hi Jorgen,
Thanks for your feedback and info on the interesting Rivet history.

Please note that I am speaking entirely from a user's perspective, and my 
little initiative was entirely triggered by Fabian's on the mod_python list, 
which has such a great and obvious point: one way or the other, 
apache misses a 'python play', alongside perl and tcl and such. 
I don't want to offend any egoes, but as a user, I don't really care whether 
apache's python play embraces mod_python or zope, or some other I don't know
about. I'm just a web app coder.

I do disagree with your point that if python.apache.org == mod_python, 
it may split the Python web community. For a simple but obvious reason:
the community is already split as it stands right now. For example, I don't 
see any cooperation whatsoever between the mod_python users and the zope people
(being an old zope user myself who switched to mod_python). From my perspective
python.apache.org == mod_python looks like a ralying point (an analogy which 
comes to mind as I write this being Bill Gate's Pearl Harbor Day speech, which
managed to totally shifted MS on its head, towards the Internet). A ralying
point is hugely powerful.

If I read your Rivet analogy correctly, apache might be interested in giving 
its 'official' blessing (i.e. the powerful 'python.apache.org') to the python 
project who will manage to rally support from the web-python community at 
large. In this regard, Fabian's latest PR makes a lot of sense. 

But again speaking from a user's perspective, if I consider the 2 web-python
packages I know a little about - zope and mod_python - I don't see those code 
bases integrating anytime soon (simply because they serve 2 quite different 
audiences, and I would think they are rather entrenched). Because of this, 
should there be no 'python.apache.org' ?

I disagree. As long as there will be no official ralying point to attract
python+apache afficionados on a 'single point of effort', parallel efforts 
will continue to florish, each more or less re-inventing the proverbial 
wheel. And not cooperating very much, I would think.

In conclusion, whatever the politics behind this topic, apache needs a python
play. I believe this is Fabian's main point, and I am totally sold on it.
But from a web app coder's perspective, give me a great tool to program 
apache in python, and I'll embrace it, whatever it's called. 
It just happened that, though I may be wrong, for the time being the best tool 
available is mod_python.

Regards,
Vio

* J?rgen Fr?jk Kj?rsgaard {Metation} <jfk@metation.com> [020824 04:29]:
> L?rdag 24. August 2002 01:22 skrev du:
> > Yet, there is such a symbiotic relationship between
> > apache and mod_python, what would it take to have a link on the main apache
> > side to the 'python' web-app alternative, in the Apache Projects section of
> > the
> > LEFT SIDE NAVIGATION ?
> >
> >    Apache Projects
> >      HTTP Server
> >      APR
> >      Jakarta
> >      Perl
> >      Python    <-- something like this, linking to www.mod_python.org,
> >      PHP           or to 'python.apache.org' which would redirect to
> >      TCL           www.mod_python.org (or something along those lines)
> >      XML
> >      Conferences
> >      Foundation
> 
> As Fabian Fagerholm wrote aug 22nd, I believe python.apache.org shouldn't 
> equal mod_python. Although mod_python is a great product, it isn't the only 
> way to use Python with Apache.
> 
> The community around mod_dtcl took the initial initiative to move to 
> tcl.apache.org and invited the other Tcl alternatives to join in. This has 
> now resulted in a new module, Apache Rivet, which combines the efforts of 
> mod_dtcl and neowebscript.
> 
> If a similar symbiosis can be archived in the Python web community, I believe 
> it we benefit all of us. On the other hand, if python.apache.org == 
> mod_python, it may split the Python web community.
> 
> /jfk
> 
> -- 
> J?rgen Fr?jk Kj?rsgaard, direkt?r og systemkonsulent
> Metation aps - Kystvejen 29, DK-8000 ?rhus C
> Web: www.metation.com  - Tlf: +45 8625 0038 - Mobil: +45 2925 6693
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://www.modpython.org/mailman/listinfo/mod_python

From vmilitaru at sympatico.ca  Sat Aug 24 09:15:59 2002
From: vmilitaru at sympatico.ca (vio)
Date: Fri Jan  9 21:46:56 2004
Subject: [mod_python] Promoting Python as web application development language
In-Reply-To: <02082413555205.00306@grace.metation.com>; from jfk@metation.com on Sat, Aug 24, 2002 at 01:55:52PM +0200
References: <20020823182218.A304@eye.neb> <02082410164204.00306@grace.metation.com> <20020824053625.A685@eye.neb> <02082413555205.00306@grace.metation.com>
Message-ID: <20020824091559.A956@eye.neb>

Again Jorgen, many thanks for your reply. In a couple of emails you outlined
the framework of a possible 'python.apache.org' project. Its goals, both 
strategic (to promote a unified effort in making Python a language of choice 
on the Apache server) and tactical or technical (to integrate the main 
python_on_apache codebases, while maintaining an open door to alternatives)
are quite clear. The writing on the wall is "cooperation". I would take it 
that your views more or less reflect those of the apache board. Excellent.

Well, Fabian, I hope this would be of some help for your PR efforts, so best
of luck and hopefully you'll keep us in touch of your progress on the 
mod_python list. I guess it's your call from now on.

Warm regards,
Vio

* J?rgen Fr?jk Kj?rsgaard {Metation} <jfk@metation.com> [020824 08:39]:
> L?rdag 24. August 2002 12:36 skrev du:
> > If I read your Rivet analogy correctly, apache might be interested in
> > giving its 'official' blessing (i.e. the powerful 'python.apache.org') to
> > the python project who will manage to rally support from the web-python
> > community at large. In this regard, Fabian's latest PR makes a lot of
> > sense.
> 
> Exactly.
> 
> > But again speaking from a user's perspective, if I consider the 2
> > web-python packages I know a little about - zope and mod_python - I don't
> > see those code bases integrating anytime soon (simply because they serve 2
> > quite different audiences, and I would think they are rather entrenched).
> > Because of this, should there be no 'python.apache.org' ?
> 
> There should be a python.apache.org. The question is who should be part of 
> it? mod_python and Zope are very unlikely to integrate, but some cooperation 
> may be possible. In the open source desktop area, KDE and Gnome actually use 
> some common code today (KDE depends on the GNOME XML core libraries), even 
> though the groups couldn't stand eachother a few years ago.
> 
> On the other hand, you are right when you say that Zope doesn't fit very well 
> in. Zope is not very tightly integrated with Apache. A "zope.apache.org" 
> would be very unlikely.
> 
> I think python.apache.org should consist of mod_python, mod_snake, CGI Python 
> and maybe a few others that I haven't even head about yet. Some time in the 
> future, mod_python and mod_snake may integrate, though it may not seem 
> possible today. A couple of years ago Rivet didn't seem possible either!
> 
> tcl.apache.org succeeded because it is open to alternatives, it isn't one 
> mod_*.
> 
> > I disagree. As long as there will be no official ralying point to attract
> > python+apache afficionados on a 'single point of effort', parallel efforts
> > will continue to florish, each more or less re-inventing the proverbial
> > wheel. And not cooperating very much, I would think.
> 
> Maybe our thoughts are not that different at all... The purpose of 
> python.apache.org should be to expose Python more _and_ to promote a more 
> unified effort in making Python a language of choice on the Apache server.
> 
> regards, J?rgen
> 
> -- 
> J?rgen Fr?jk Kj?rsgaard, direkt?r og systemkonsulent
> Metation aps - Kystvejen 29, DK-8000 ?rhus C
> Web: www.metation.com  - Tlf: +45 8625 0038 - Mobil: +45 2925 6693

From neel at mediapulse.com  Sat Aug 24 16:29:39 2002
From: neel at mediapulse.com (Michael Neel)
Date: Fri Jan  9 21:46:56 2004
Subject: [mod_python] Promoting Python as web application development language
In-Reply-To: <20020824091559.A956@eye.neb>
Message-ID: <000401c24bac$f967e930$0400a8c0@clapton>

Would it make since to have python.apache.org work the same as
jakarta.apache.org?  Then have mod_python, mod_snake, and any other
efforts listed as sub-projects.  Zope could be related link, but it
really does fit in with what I think of when I think "mod_python".  I
want mod_python to provide 2 very key parts; 1. provided an embedded
interperter so I can speed up a existing python code with little effort
and 2. provide a python API version of the Apache API. (I'm not saying
we don't have these bases covered, just say what I'm looking for in a
mod python project).  Zope is a tool for a different job.

If the sticking point is wether python.apache.org jumps to mod_python or
mod_snake, then just solve that now by linking to both as the java pages
do.  Once python has a higher visibility, the community will help it
become whatever it needs to become with reguards to apache.

BTW anyone want to make RedHat stop shipping python 1.5 as default and
giving you mod_python built against 1.5 as well? I can dream can't I?

Anyone ask Guido if he would make a phone call? =D

Mike
--
Michael C. Neel
There are only 10 types of people in the world;
those who understand binary and those who don't.


-----Original Message-----
From: mod_python-admin@modpython.org
[mailto:mod_python-admin@modpython.org] On Behalf Of vio
Sent: Saturday, August 24, 2002 10:16 AM
To: J?rgen Fr?jk Kj?rsgaard {Metation}
Cc: mod_python@modpython.org
Subject: Re: [mod_python] Promoting Python as web application
development language


Again Jorgen, many thanks for your reply. In a couple of emails you
outlined the framework of a possible 'python.apache.org' project. Its
goals, both 
strategic (to promote a unified effort in making Python a language of
choice 
on the Apache server) and tactical or technical (to integrate the main 
python_on_apache codebases, while maintaining an open door to
alternatives) are quite clear. The writing on the wall is "cooperation".
I would take it 
that your views more or less reflect those of the apache board.
Excellent.

Well, Fabian, I hope this would be of some help for your PR efforts, so
best of luck and hopefully you'll keep us in touch of your progress on
the 
mod_python list. I guess it's your call from now on.

Warm regards,
Vio

* J?rgen Fr?jk Kj?rsgaard {Metation} <jfk@metation.com> [020824 08:39]:
> L?rdag 24. August 2002 12:36 skrev du:
> > If I read your Rivet analogy correctly, apache might be interested 
> > in giving its 'official' blessing (i.e. the powerful 
> > 'python.apache.org') to the python project who will manage to rally 
> > support from the web-python community at large. In this regard, 
> > Fabian's latest PR makes a lot of sense.
> 
> Exactly.
> 
> > But again speaking from a user's perspective, if I consider the 2 
> > web-python packages I know a little about - zope and mod_python - I 
> > don't see those code bases integrating anytime soon (simply because 
> > they serve 2 quite different audiences, and I would think they are 
> > rather entrenched). Because of this, should there be no 
> > 'python.apache.org' ?
> 
> There should be a python.apache.org. The question is who should be 
> part of
> it? mod_python and Zope are very unlikely to integrate, but some
cooperation 
> may be possible. In the open source desktop area, KDE and Gnome
actually use 
> some common code today (KDE depends on the GNOME XML core libraries),
even 
> though the groups couldn't stand eachother a few years ago.
> 
> On the other hand, you are right when you say that Zope doesn't fit 
> very well
> in. Zope is not very tightly integrated with Apache. A
"zope.apache.org" 
> would be very unlikely.
> 
> I think python.apache.org should consist of mod_python, mod_snake, CGI

> Python
> and maybe a few others that I haven't even head about yet. Some time
in the 
> future, mod_python and mod_snake may integrate, though it may not seem

> possible today. A couple of years ago Rivet didn't seem possible
either!
> 
> tcl.apache.org succeeded because it is open to alternatives, it isn't 
> one
> mod_*.
> 
> > I disagree. As long as there will be no official ralying point to 
> > attract
> > python+apache afficionados on a 'single point of effort', parallel 
> > python+efforts
> > will continue to florish, each more or less re-inventing the 
> > proverbial wheel. And not cooperating very much, I would think.
> 
> Maybe our thoughts are not that different at all... The purpose of
> python.apache.org should be to expose Python more _and_ to promote a
more 
> unified effort in making Python a language of choice on the Apache
server.
> 
> regards, J?rgen
> 
> --
> J?rgen Fr?jk Kj?rsgaard, direkt?r og systemkonsulent
> Metation aps - Kystvejen 29, DK-8000 ?rhus C
> Web: www.metation.com  - Tlf: +45 8625 0038 - Mobil: +45 2925 6693
_______________________________________________
Mod_python mailing list
Mod_python@modpython.org
http://www.modpython.org/mailman/listinfo/mod_python



From vmilitaru at sympatico.ca  Sat Aug 24 22:24:38 2002
From: vmilitaru at sympatico.ca (vio)
Date: Fri Jan  9 21:46:56 2004
Subject: [mod_python] Promoting Python as web application development language
In-Reply-To: <000401c24bac$f967e930$0400a8c0@clapton>; from neel@mediapulse.com on Sat, Aug 24, 2002 at 04:29:39PM -0400
References: <20020824091559.A956@eye.neb> <000401c24bac$f967e930$0400a8c0@clapton>
Message-ID: <20020824222438.A313@eye.neb>

* Michael Neel <neel@mediapulse.com> [020824 21:18]:
> Would it make since to have python.apache.org work the same as
> jakarta.apache.org?  Then have mod_python, mod_snake, and any other
> efforts listed as sub-projects.  

Yes, sounds interesting. Though I also agree with Jorgen's point in 
consolidating efforts. I haven't really touched mod_snake, but if it 
essentially duplicates the mod_python functionality, what's the point of
having 2 siamese twins consuming programmers' cycles? 
In such a situation, I'd say let's put them both on some serious neutral 
benchmark tests, choose the best of the breed, then focus all efforts on it 
(and sidestep the other in the name of the common good). Egoes will be bruised
in the process, but as Spock said in 'the Wrath of Khan': ... 

> Zope could be related link, but it
> really does fit in with what I think of when I think "mod_python".  I
> want mod_python to provide 2 very key parts; 1. provided an embedded
> interperter so I can speed up a existing python code with little effort
> and 2. provide a python API version of the Apache API. (I'm not saying
> we don't have these bases covered, just say what I'm looking for in a
> mod python project).  Zope is a tool for a different job.

Zope is not an apache module. Hence, Zope almost jumps out of topic.

My vision of a python.apache.org is a lot closer to perl.apache.org.
I'm an old user of mod_perl... until I discovered python couple of years ago. 
And never looked back since.
How can I put it? I want to do mod_perl, but while writing in python.
So I'm rather leaning towards Jorgen's vision of a consolidated effort
and cooperation between projects, eventually merging somewhere down the line.
I'd want the Apache Foundation to give the same treatment to python it now
gives perl (java, tcl, ...). Nothing more, nothing less.
Then eventually I'd want O'Reilly to update their 'Writing Apache Modules with 
Perl and C' to something like 'Writing Apache Modules with Perl, Python and C'.

I have this weird feeling python is one of those totally underestimated jewels
of the open source movement. Guido achieved a jewel of a programming language.
This should definitely put python on the (web programming) map,
give it the visibility it (rightfully!) deserves. AND democratize web 
programming (python is so easy and clean, my grandmother could write web apps).

Vio

From jack_diederich at email.com  Sat Aug 24 22:29:59 2002
From: jack_diederich at email.com (Jack Diederich)
Date: Fri Jan  9 21:46:56 2004
Subject: [mod_python] Promoting Python as web application development
    language
Message-ID: <20020825032959.12775.qmail@email.com>

> * Michael Neel <neel@mediapulse.com> [020824 21:18]:
> > Would it make since to have python.apache.org work the same as
> > jakarta.apache.org?  Then have mod_python, mod_snake, and any other
> > efforts listed as sub-projects.  
> 

mod_snake is dead [modsnake.sourceforge.net] according to the author
zope is well ... zope and has as much to with with Apache as it does IIS,
or squid, or freecell.

python.apache.org seems like a good pragmatic idea, I think the possibility
of a holy war or bruised egos has been over hyped in this discussion.
mod_python is the apache integration that serves the small but growing group
of people writing python web apps with apache.  There isn't much else to
say, lets not lose perspective - it's a sub-domain name (domain sub-name?).

I haven't had time to go over the mod_snake sources yet, but there may
be some good stuff in there.  I don't think that changes anything.
(as a terrible metric, the mod_snake tarball is 100k larger than
mod_python).  If people ressurect some of the code by patching mod_python,
great.

-jackdied

.sig
There is a fine line between being The Man, and being That Guy

-- 
__________________________________________________________
Sign-up for your own FREE Personalized E-mail at Mail.com
http://www.mail.com/?sr=signup


From alain at onesite.org  Sun Aug 25 05:37:37 2002
From: alain at onesite.org (Alain Tesio)
Date: Fri Jan  9 21:46:56 2004
Subject: [mod_python] Promoting Python as web application development language
In-Reply-To: <20020824222438.A313@eye.neb>
References: <20020824091559.A956@eye.neb>
	<000401c24bac$f967e930$0400a8c0@clapton>
	<20020824222438.A313@eye.neb>
Message-ID: <20020825053737.5ce9a280.alain@onesite.org>

On Sat, 24 Aug 2002 22:24:38 -0500
vio <vmilitaru@sympatico.ca> wrote:

> I haven't really touched mod_snake, but if it 
> essentially duplicates the mod_python functionality, what's the point of
> having 2 siamese twins consuming programmers' cycles? 

mod_snake died some months ago

http://modsnake.sourceforge.net/
http://apache.slashdot.org/apache/02/05/12/0419208.shtml?tid=148

Alain

From alain at onesite.org  Sun Aug 25 05:57:48 2002
From: alain at onesite.org (Alain Tesio)
Date: Fri Jan  9 21:46:56 2004
Subject: [mod_python] Promoting Python as web application development language
In-Reply-To: <20020825032959.12775.qmail@email.com>
References: <20020825032959.12775.qmail@email.com>
Message-ID: <20020825055748.04878b30.alain@onesite.org>

On Sat, 24 Aug 2002 22:29:59 -0500
"Jack Diederich" <jack_diederich@email.com> wrote:

> 
> I haven't had time to go over the mod_snake sources yet, but there may
> be some good stuff in there.  I don't think that changes anything.
> (as a terrible metric, the mod_snake tarball is 100k larger than
> mod_python).  If people ressurect some of the code by patching mod_python,
> great.

Here is an interesting comment in the slashdot dicussion, no idea if all points
are valid though.

Alain


bye bye (Score:3, Informative) 
by DrSkwid (`moc.elbbubtnuc' `ta' `mapshsals') on Sunday May 12, @06:23AM (#3505266) 
(User #118965 Info | http://www.hardlight.couk.com/) 


I was one of the people bugging him for updates, I could never get it to compile of
FreeBSD for me.

I ended up going over to mod_python.

Shame because one of the premises of mod_snake was the concept of nested python
interpreters. Like Apache itself mod_snake had one thread and then passed the request
on to another python interpreterrunning as a sub thread so that you could maintain
state between requests by using the same interpreter.

It sounded interesting, but I never got the chance to find out.

mod_python has the annoying attribute of requiring the whole python installation to
be compiled as single threaded which means some modules don't work (urllib for
instance - so you have to roll your own url en/decoder). Which then leaves you in the
stick world of two python installations of you want to use sockets and threads in
other applications.

I've still not sussed out how to easily manage two installations :(

mod_python does rule though, I much prefer using it to php or standard CGI and I'm
so glad I dont have to learn any more of mod_perl than the rudimentrary stuff I
picked from reading the O'Reilly mod_perl book.

From barr at cs.cornell.edu  Sun Aug 25 00:13:56 2002
From: barr at cs.cornell.edu (Rimon Barr)
Date: Fri Jan  9 21:46:56 2004
Subject: [mod_python] python.apache.org
In-Reply-To: <20020825053737.5ce9a280.alain@onesite.org>
Message-ID: <Pine.LNX.4.44.0208250008190.11744-100000@pompom.u.cs.cornell.edu>

A suggestion... The following list (+Spyce!) [1] could be a useful
starting point as a list to prune from for projects for python.apache.org.
I believe python.apache.org is a great idea, and will give the Python
community additional visibility and users. I also think that it should be
an inclusive site (like java.apache.org and xml.apache.org) that serves as
a registry of mature web-related python-based projects.

[1] - http://spyce.sourceforge.net/doc_related.html

All the best,
Rimon.
-- 
 * Rimon Barr       Ph.D. candidate, Computer Science, Cornell University
 | barr@cs.cornell.edu - http://www.cs.cornell.edu/barr - Y!IM: batripler
 |
 | Understanding is a kind of ecstasy.
 +----                                   -- Carl Sagan


From vmilitaru at sympatico.ca  Sun Aug 25 00:37:51 2002
From: vmilitaru at sympatico.ca (vio)
Date: Fri Jan  9 21:46:56 2004
Subject: [mod_python] Promoting Python as web application development language
In-Reply-To: <20020825032959.12775.qmail@email.com>; from jack_diederich@email.com on Sat, Aug 24, 2002 at 10:29:59PM -0500
References: <20020825032959.12775.qmail@email.com>
Message-ID: <20020825003751.A388@eye.neb>

* Jack Diederich <jack_diederich@email.com> [020824 23:47]:
> mod_snake is dead [modsnake.sourceforge.net] according to the author

Sounds to me like a step towards 'python.apache.org == mod_python'. 
Perhaps Jorgen's fears that such a move may split the 'web python community' 
may have been a little premature. Perhaps the current 'web python community' 
may not be as big as initially estimated (a fact that python.apache.org is
intended to remedy).

> zope is well ... zope and has as much to with with Apache as it does IIS,
> or squid, or freecell.

I agree. It's quite big and getting bigger. Though my main issue with zope was 
that it simply didn't scale well for projects with more than a few hundred 
objects (at least from my experience). Perhaps because it uses a python-based
object database, which is not very performant for large scale projects. 
But I will recommend it nevertheless as an introductory environment to web 
programming (I really learned a lot in my zope days).

Vio

> python.apache.org seems like a good pragmatic idea, I think the possibility
> of a holy war or bruised egos has been over hyped in this discussion.
> mod_python is the apache integration that serves the small but growing group
> of people writing python web apps with apache.  There isn't much else to
> say, lets not lose perspective - it's a sub-domain name (domain sub-name?).
> 
> I haven't had time to go over the mod_snake sources yet, but there may
> be some good stuff in there.  I don't think that changes anything.
> (as a terrible metric, the mod_snake tarball is 100k larger than
> mod_python).  If people ressurect some of the code by patching mod_python,
> great.
> 
> -jackdied

From jfk at metation.com  Sun Aug 25 19:29:06 2002
From: jfk at metation.com (=?iso-8859-1?q?J=F8rgen=20Fr=F8jk=20Kj=E6rsgaard=20{Metation}?=)
Date: Fri Jan  9 21:46:56 2004
Subject: [mod_python] Promoting Python as web application development language
In-Reply-To: <20020825003751.A388@eye.neb>
References: <20020825032959.12775.qmail@email.com> <20020825003751.A388@eye.neb>
Message-ID: <02082519290602.00315@grace.metation.com>

S?ndag 25. August 2002 07:37 skrev vio:
> * Jack Diederich <jack_diederich@email.com> [020824 23:47]:
> > mod_snake is dead [modsnake.sourceforge.net] according to the author
>
> Sounds to me like a step towards 'python.apache.org == mod_python'.
> Perhaps Jorgen's fears that such a move may split the 'web python
> community' may have been a little premature. Perhaps the current 'web
> python community' may not be as big as initially estimated (a fact that
> python.apache.org is intended to remedy).

If there really is nothing but Zope, which isn't an Apache module, and 
mod_python, there is no reason not to go ahead with python.apache.org == 
mod_python. I wasn't aware that mod_snake was dead (I never even bothered to 
try it - mod_python works fine ;-). Just keep the door open to other existing 
or new Pyton+Apache projects. The main reason for Apaches huge success is its 
openness - this openness should be kept in subprojects like python.apache.org,


regards, J?rgen

-- 
J?rgen Fr?jk Kj?rsgaard, direkt?r og systemkonsulent
Metation aps - Kystvejen 29, DK-8000 ?rhus C
Web: www.metation.com  - Tlf: +45 8625 0038 - Mobil: +45 2925 6693

From fabbe at paniq.net  Sun Aug 25 21:31:46 2002
From: fabbe at paniq.net (Fabian Fagerholm)
Date: Fri Jan  9 21:46:56 2004
Subject: [mod_python] Promoting Python as web application development
	language
In-Reply-To: <20020824091559.A956@eye.neb>
References: <20020823182218.A304@eye.neb>
	<02082410164204.00306@grace.metation.com> <20020824053625.A685@eye.neb>
	<02082413555205.00306@grace.metation.com>  <20020824091559.A956@eye.neb>
Message-ID: <1030300307.1041.29.camel@kernel>

On Sat, 2002-08-24 at 17:15, vio wrote:
> Well, Fabian, I hope this would be of some help for your PR efforts, so best
> of luck and hopefully you'll keep us in touch of your progress on the 
> mod_python list. I guess it's your call from now on.

Actually, no.

You decided to pursue a different course of action than I - a direct
mailing to the Apache Software Foundation Board - at this point. I
clearly stated that I wanted some discussion on this topic first. There
has been some discussion and some valuable points have been raised, but
I was not yet ready to proceed to the next stage.

Therefore, I regard your actions as your own, and you must take
responsibility for them. I hope you will relay any response from the ASF
Board to this mailing list. I also hope you come up with a good way of
redirecting any future correspondence to me or this list if you do not
wish to take over this effort.

I suggest the next time you have an urge to spill your beans, do it in
your own house where there are people to help you clean up your mess.


This effort will now have to be put on hold until we know whether or not
the ASF Board is going to respond to Mr. Vio's message.


Meanwhile, there are things to do. Interested parties please send me
private e-mail.

Fabian

-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 240 bytes
Desc: This is a digitally signed message part
Url : http://mailman.modpython.org/pipermail/mod_python/attachments/20020825/2e1d4cca/attachment.bin
From fabbe at paniq.net  Sun Aug 25 21:34:37 2002
From: fabbe at paniq.net (Fabian Fagerholm)
Date: Fri Jan  9 21:46:56 2004
Subject: [mod_python] mod_python link on Apache web page?
In-Reply-To: <Pine.BSF.4.32.0208230834550.35718-100000@eden.ispol.com>
References: <Pine.BSF.4.32.0208230834550.35718-100000@eden.ispol.com>
Message-ID: <1030300477.972.32.camel@kernel>

On Fri, 2002-08-23 at 15:39, Gregory (Grisha) Trubetskoy wrote:
> 
> My "official" position on this is that I don't have strong feelings one
> way or the other. Being concerned with these matters is something that I
> at the moment do not have a lot of time for. If someone wants to take up
> the task of promoting mp, God bless'em.

Grisha, thank you for these words. They explain your position very
clearly.

I'm looking forward to seeing further mod_python development from you!

Cheers,
Fabian

-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 240 bytes
Desc: This is a digitally signed message part
Url : http://mailman.modpython.org/pipermail/mod_python/attachments/20020825/57e2b739/attachment.bin
From vmilitaru at sympatico.ca  Sun Aug 25 20:32:58 2002
From: vmilitaru at sympatico.ca (vio)
Date: Fri Jan  9 21:46:56 2004
Subject: [mod_python] Promoting Python as web application development language
Message-ID: <20020825203258.A304@eye.neb>

Well, sorry about this. But listen, Fabian, just accept that other people have
different views on this than your own, and different ways of doing things. 
Additionally, I do have serious problems with all this 'privacy' in your 
procedure. I think this is a public issue where everybody is concerned, and 
all communications on this topic should be in a 'public' forum, not private
emails. You'll notice that I took great care in CC-ing everything I received
on this to this public list, with the exception of couple of mails from you
and Rimon.

I consider my somewhat direct message to the ASF and related messages have been
successful: they established what the criteria for a 'python.apache.org'
are (check out Jorgen's replies). Additional messages on this topic 
established that the way to a 'python.apache.org == mod_python' is a rather 
clear and straight path.

The main issue now seems to be whether the 'python.apache.org' brand should be
only used for apache 'modules' (like mod_perl and mod_python) - which is what
I am promoting, or a more general link to all kind of packages more or less 
related to apache and python. This is what Rimon promotes. 

From fabbe at paniq.net  Mon Aug 26 09:59:33 2002
From: fabbe at paniq.net (Fabian Fagerholm)
Date: Fri Jan  9 21:46:56 2004
Subject: [mod_python] Promoting Python as web application development
	language
In-Reply-To: <20020825203258.A304@eye.neb>
References: <20020825203258.A304@eye.neb>
Message-ID: <1030345173.976.72.camel@kernel>

On Mon, 2002-08-26 at 04:32, vio wrote:
> Well, sorry about this. But listen, Fabian, just accept that other people have
> different views on this than your own, and different ways of doing things.

I certainly do. As long as their actions don't impede on mine, everyone
is free to do as they please.
 
> Additionally, I do have serious problems with all this 'privacy' in your 
> procedure. I think this is a public issue where everybody is concerned, and 
> all communications on this topic should be in a 'public' forum, not private
> emails. You'll notice that I took great care in CC-ing everything I received
> on this to this public list, with the exception of couple of mails from you
> and Rimon.

This is not a public issue. It's an issue for interested parties - which
is why I have been prepared to spend my own and others' bandwidth and
time to solicit opinions and volunteers from the appropriate forums.

> I consider my somewhat direct message to the ASF and related messages have been
> successful: they established what the criteria for a 'python.apache.org'
> are (check out Jorgen's replies). Additional messages on this topic 
> established that the way to a 'python.apache.org == mod_python' is a rather 
> clear and straight path.

Is Jorgen a member of the ASF?

www.apache.org is the property of the ASF, and as such the ultimate
decision of what python.apache.org should be (and whether it should be
at all) is theirs. All we can do is come with proposals.

I'm trying to work on something that extends to a broader area.
python.apache.org is admittedly an important part of this, but it is
still only a part.

> The main issue now seems to be whether the 'python.apache.org' brand should be
> only used for apache 'modules' (like mod_perl and mod_python) - which is what
> I am promoting, or a more general link to all kind of packages more or less 
> related to apache and python. This is what Rimon promotes. 
[...]

This is certainly a valid question, but I'm afraid it's not a decision
to be made by us at this forum. Also, these are not the only options.

> This is wrong: apache is one of the core successes of the open source model,
> it should be handled with extreme care and foresight.

Care and foresight have certainly been key words in your handling of
this issue.

> I have nothing to promote on the apache site and nothing to gain
> from seeing 'mod_python == python.apache.org'. It's just the right thing to do.

Well, this discussion has been going on for long enough and I thank
Grisha for letting it happen on this mailing list. What follows now is
work, work, work, and hopefully there will be something to announce in
the coming weeks.

Vio, could you please let us know if the ASF board has replied?

Cheers,
Fabian

-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 240 bytes
Desc: This is a digitally signed message part
Url : http://mailman.modpython.org/pipermail/mod_python/attachments/20020826/009a97b8/attachment.bin
From vmilitaru at sympatico.ca  Mon Aug 26 03:25:08 2002
From: vmilitaru at sympatico.ca (vio)
Date: Fri Jan  9 21:46:56 2004
Subject: [mod_python] Promoting Python as web application development language
In-Reply-To: <1030345173.976.72.camel@kernel>; from fabbe@paniq.net on Mon, Aug 26, 2002 at 09:59:33AM +0300
References: <20020825203258.A304@eye.neb> <1030345173.976.72.camel@kernel>
Message-ID: <20020826032508.A658@eye.neb>

* Fabian Fagerholm <fabbe@paniq.net> [020826 02:59]:
>  ...
> > Additionally, I do have serious problems with all this 'privacy' in your 
> > procedure. I think this is a public issue where everybody is concerned, and 
> > all communications on this topic should be in a 'public' forum, not private
> > emails. You'll notice that I took great care in CC-ing everything I received
> > on this to this public list, with the exception of couple of mails from you
> > and Rimon.
> 
> This is not a public issue. It's an issue for interested parties - which
> is why I have been prepared to spend my own and others' bandwidth and
> time to solicit opinions and volunteers from the appropriate forums.

Sounds like we have a big difference of views here. Let's agree to disagree.

> ...
> Care and foresight have certainly been key words in your handling of
> this issue.

Touche :-)

> 
> Well, this discussion has been going on for long enough and I thank
> Grisha for letting it happen on this mailing list. 

Here we're in total agreement, so I'd like to join you in thanking Gregory.
Though, since mod_python is a core element of this topic (as far as I'm
concerned) I think it's only natural that such discussions take place on
precisely this public forum.

> 
> Vio, could you please let us know if the ASF board has replied?

Obviously. As previously mentionned, as far as I'm concerned, all emails 
related to this topic will be CC-ed to the mod_python list, for all to see
and have a chance to react to. This topic is of public interest.

Regards,
Vio

From jfk at metation.com  Mon Aug 26 12:03:20 2002
From: jfk at metation.com (=?iso-8859-1?q?J=F8rgen=20Fr=F8jk=20Kj=E6rsgaard=20{Metation}?=)
Date: Fri Jan  9 21:46:56 2004
Subject: [mod_python] Promoting Python as web application development language
In-Reply-To: <1030345173.976.72.camel@kernel>
References: <20020825203258.A304@eye.neb> <1030345173.976.72.camel@kernel>
Message-ID: <02082612032001.00310@grace.metation.com>

Mandag 26. August 2002 08:59 skrev du:
> > I consider my somewhat direct message to the ASF and related messages
> > have been successful: they established what the criteria for a
> > 'python.apache.org' are (check out Jorgen's replies). Additional messages
> > on this topic established that the way to a 'python.apache.org ==
> > mod_python' is a rather clear and straight path.
>
> Is Jorgen a member of the ASF?

I'm not. I'm a long-time mod_python user with an opinion about this issue. I 
followed the process of moving mod_dtcl to apache.org from the sideline as I 
was a contributor to that module at the time. My intension now is to try to 
ensure that a move of mod_python to apache.org succeeds.

In my opinion the message to ASF was sent way too early in the discussion. I 
think somebody - preferably Grisha, if he'd had the time for it - should 
contact other groups who have moved to apache.org and learn from their 
experience. A good candidate to contact is David Welton of the mod_dtcl 
project. He can be contacted at davidw@apache.org. Davis Welton is also a 
Python user, though I don't think he uses it for web.

regards, J?rgen

-- 
J?rgen Fr?jk Kj?rsgaard, direkt?r og systemkonsulent
Metation aps - Kystvejen 29, DK-8000 ?rhus C
Web: www.metation.com  - Tlf: +45 8625 0038 - Mobil: +45 2925 6693

From fabbe at paniq.net  Mon Aug 26 13:04:03 2002
From: fabbe at paniq.net (Fabian Fagerholm)
Date: Fri Jan  9 21:46:57 2004
Subject: [mod_python] Promoting Python as web application development
	language
In-Reply-To: <02082612032001.00310@grace.metation.com>
References: <20020825203258.A304@eye.neb> <1030345173.976.72.camel@kernel> 
	<02082612032001.00310@grace.metation.com>
Message-ID: <1030356244.1029.96.camel@kernel>

On Mon, 2002-08-26 at 13:03, J?rgen Fr?jk Kj?rsgaard {Metation} wrote:
> > Is Jorgen a member of the ASF?
> 
> I'm not. I'm a long-time mod_python user with an opinion about this issue. I 
> followed the process of moving mod_dtcl to apache.org from the sideline as I 
> was a contributor to that module at the time. My intension now is to try to 
> ensure that a move of mod_python to apache.org succeeds.

Excellent.

> In my opinion the message to ASF was sent way too early in the discussion. I 
> think somebody - preferably Grisha, if he'd had the time for it - should 
> contact other groups who have moved to apache.org and learn from their 
> experience.

I think everyone who has followed this thread knows my take on the
message to ASF so no more on that from me.

I would also be happy to see Grisha push this issue, but in
http://www.modpython.org/pipermail/mod_python/2002-August/002372.html,
he explains that he doesn't have time for this effort at the moment,
which I think should be respected. Therefore, as the initiator of this
thread, I feel compelled to do this instead.

I have made some progress but I urge you all to be patient. There really
isn't much use of everyone sending random mails all over the place. I'm
going to be in touch with several groups and individuals and as you
know, it takes a few days to get replies.

Rest assured that I'll post when there's something to tell.

> A good candidate to contact is David Welton of the mod_dtcl 
> project. He can be contacted at davidw@apache.org. Davis Welton is also a 
> Python user, though I don't think he uses it for web.

Now this is the type of information I'm after. Many thanks for this
pointer - I shall contact David and ask for his views and advice.

Cheers,
Fabian

-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 240 bytes
Desc: This is a digitally signed message part
Url : http://mailman.modpython.org/pipermail/mod_python/attachments/20020826/662db266/attachment.bin
From fabbe at paniq.net  Mon Aug 26 13:30:30 2002
From: fabbe at paniq.net (Fabian Fagerholm)
Date: Fri Jan  9 21:46:57 2004
Subject: [mod_python] Promoting Python as web application development
	language
In-Reply-To: <02082612032001.00310@grace.metation.com>
References: <20020825203258.A304@eye.neb> <1030345173.976.72.camel@kernel> 
	<02082612032001.00310@grace.metation.com>
Message-ID: <1030357830.1029.113.camel@kernel>

On Mon, 2002-08-26 at 13:03, J?rgen Fr?jk Kj?rsgaard {Metation} wrote:
> My intension now is to try to 
> ensure that a move of mod_python to apache.org succeeds.

Oh yes, a small clarification here.

My intent is not to *move* mod_python to apache.org - that is a call for
Grisha to make in the future. My intent is to provide means for
communication between Apache users and Python users (and thus create
some "Apache-Python" users), to promote the needs of Apache-Python
users, and promote Python as a web application development language in
general.

The topic of this thread reflects this intent.

Cheers,
Fabian

-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 240 bytes
Desc: This is a digitally signed message part
Url : http://mailman.modpython.org/pipermail/mod_python/attachments/20020826/e93d3039/attachment.bin
From vmilitaru at sympatico.ca  Mon Aug 26 08:15:52 2002
From: vmilitaru at sympatico.ca (vio)
Date: Fri Jan  9 21:46:57 2004
Subject: [mod_python] Promoting Python as web application development language
In-Reply-To: <1030356244.1029.96.camel@kernel>; from fabbe@paniq.net on Mon, Aug 26, 2002 at 01:04:03PM +0300
References: <20020825203258.A304@eye.neb> <1030345173.976.72.camel@kernel> <02082612032001.00310@grace.metation.com> <1030356244.1029.96.camel@kernel>
Message-ID: <20020826081552.A951@eye.neb>

* Fabian Fagerholm <fabbe@paniq.net> [020826 07:50]:
> ...
> I have made some progress but I urge you all to be patient. There really
> isn't much use of everyone sending random mails all over the place. I'm
> going to be in touch with several groups and individuals and as you
> know, it takes a few days to get replies.
> 
> Rest assured that I'll post when there's something to tell.

I hear you. Anyways, on my side I've pretty much exhausted the topic, and I
have no intention to go beyond exchanging points of view on this list (if I
have something I consider of interest to add, that is). 
Still, for me it was a fun, though heated, little exchange of strong opinions
and beliefs, a few sparks flying here and there, no harm intended.
So best of luck, and looking foreword to your posts.

Cheers,
Vio

From fabbe at paniq.net  Mon Aug 26 17:27:32 2002
From: fabbe at paniq.net (Fabian Fagerholm)
Date: Fri Jan  9 21:46:57 2004
Subject: [mod_python] Status report: Promoting Python as web application development
 language
Message-ID: <1030372052.976.211.camel@kernel>

FYI,

I have sent a Python SIG proposal to the Python Meta-SIG mailing list in
accordance with the SIG creation guidelines. I feel a Python SIG would
be most useful in co-ordinating this effort.

Those interested can view the SIG proposal in the Meta-SIG mailing list
archives:

    http://mail.python.org/pipermail/meta-sig/2002-August/001233.html

If you want to comment on this proposal, please send your comments
primarily to the Meta-SIG mailing list. You may of course Cc me if you
like.

Before you post, I suggest you read some of the messages in the archives
and observe the netiquette of that list:

    http://mail.python.org/pipermail/meta-sig/

The outcome of the discussion will be relayed to this list in a
subsequent post. Thus there is no need for cross-posting.

Cheers,
Fabian

-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 240 bytes
Desc: This is a digitally signed message part
Url : http://mailman.modpython.org/pipermail/mod_python/attachments/20020826/17f4fefb/attachment.bin
From mbp at samba.org  Tue Aug 27 12:27:33 2002
From: mbp at samba.org (Martin Pool)
Date: Fri Jan  9 21:46:57 2004
Subject: [mod_python] Promoting Python as web application development language
In-Reply-To: <1030357830.1029.113.camel@kernel>
References: <20020825203258.A304@eye.neb> <1030345173.976.72.camel@kernel> <02082612032001.00310@grace.metation.com> <1030357830.1029.113.camel@kernel>
Message-ID: <20020827022730.GD29095@samba.org>

On 26 Aug 2002, Fabian Fagerholm <fabbe@paniq.net> wrote:

> My intent is not to *move* mod_python to apache.org - that is a call for
> Grisha to make in the future. My intent is to provide means for
> communication between Apache users and Python users (and thus create
> some "Apache-Python" users), to promote the needs of Apache-Python
> users, and promote Python as a web application development language in
> general.

I think it would make sense for there to be *something* on
python.apache.org that answers the question of "I've got Apache and I
like Python; now what?"  

To start with just a really simple page linking to projects such as
mod_python, Cheetah (and other templating/html systems) could be
really good.  A lot more could possibly done in the future, but I
think this would be useful and hopefully not controversial.

Perhaps a few paragraphs explaining broadly how to do web development
in Python would be good.  What are the architectural decisions you
have to make (in-line vs templates vs DOM,...) and that sort of
thing.  I know I found it a bit confusing when looking at DTML vs
Cheetah vs everything else.

-- 
Martin 

From vmilitaru at sympatico.ca  Tue Aug 27 05:28:20 2002
From: vmilitaru at sympatico.ca (vio)
Date: Fri Jan  9 21:46:57 2004
Subject: [mod_python] Promoting Python as web application development language
In-Reply-To: <20020826151930.A4908@lyra.org>; from gstein@lyra.org on Mon, Aug 26, 2002 at 03:19:30PM -0700
References: <20020823182218.A304@eye.neb> <3D6A6A52.45D2EE84@Golux.Com> <20020826151930.A4908@lyra.org>
Message-ID: <20020827052817.B301@eye.neb>

First of all, thanks for your reply.

Why mod_python on the apache.org site?
I'm a web apps coder. And I love my python. Why mod_python? Because I want to
code apache apps in python. Also because of mod_perl: as a python afficionado, 
I feel left out (as the rest of the python community): why doesn't the ASF also
promote python on the same level as perl, java et al.

Why mod_python? It just so happens that there are not that many options out
there to write apache apps in python. This particular package seems to do the
job well, is very close and integrated with the apache program itself, and 
that's about all there is to it. 
We (I) 'need' a mod_perl for python programmers.

I hope this answers Ken's question, though imperfectly.

I would like to add that I am not a programmer of this mod_python package. I
am just a (heavy) user of both apache and python, and this question of the lack
of a python alternative on the main apache web site came out on our mailing 
list recently. And I personally took the liberty to writing to the apache board.

To Greg's argument that there is no ASF Python project, my question is WHY?
It's obvious to me there should be one.

Though I am obviously not an ASF member, and am not aware of how things work
at ASF, interestingly, through discussions on this topic on the mod_python
list, I came to the same conclusion as Greg: from my user's point of view
I would expect the apache site to feature only the core package itself,
and then only 'direct' extensions of the core: the modules (mod_perl, mod_ssl,
and yes, a python module - be it mod_python or something else). Anything else
would appear as an unhealthy overextension of the 'apache' brand. It's just my 
very personal opinion.

Gregory (Grisha) Trubetskoy is the author of mod_python. I hope he gets a 
chance to react to your post, especially Greg Stein's last 2 paragraphs.

Regards,
Vio

* Greg Stein <gstein@lyra.org> [020827 03:54]:
> On Mon, Aug 26, 2002 at 01:50:10PM -0400, Rodent of Unusual Size wrote:
> > vio wrote:
> > > But I just wanted to cut the bull and go straight to the point:
> > > we have this great apache module called mod_python, thanks to
> > > Gregory (Grisha) Trubetskoy, suffering from a big lack of exposure.
> > > We strongly believe this great piece of technology (which is the
> > > marriage of apache + python) deserves a place alongside mod_perl
> > > and mod_ssl 'on the main apache site'.
> > 
> > It might be possible to list it under the 'Sister Project' section,
> > but the question becomes: why mod_python and not mod_*?  What
> > makes mod_python stand out above the hundreds of other modules
> > in order to warrant this?  (Not being facetious; it's a serious
> > question.)
> 
> Ken also missed pointing out that the Perl, PHP, and Tcl projects that
> you're seeing in that list are all ASF projects. As there is no "Python"
> project, you don't see a Python listed there :-)
> 
> Personally, I have (recently) been advocating a move away from
> language-specific ASF Projects. In my ideal world, mod_perl, mod_(d)tcl, and
> mod_php would all be "sub projects" of the Apache HTTP Server project, and
> the Perl, Tcl, PHP projects would disappear. IMO, that is their natural,
> functional grouping.
> 
> To that extent, I would very much love to see mod_python become a subproject
> of the HTTP server. It would reside alongside mod_ldap, mod_mbox, mod_pop3,
> etc. From there, it could gain exposure through a number of venues on the
> ASF website.
> 
> To become an ASF project, the owners/committers of the code would need to
> agree to donate the codebase to the ASF and be willing to maintain it within
> our framework (along with other ASF committers and members who are also
> interested). Ideally, the community that comes with it would also follow
> some of the philosophy of the ASF in terms of being a friendly community,
> open source code, etc.
> 
> Cheers,
> -g
> 
> -- 
> Greg Stein, http://www.lyra.org/

From fabbe at paniq.net  Tue Aug 27 17:41:08 2002
From: fabbe at paniq.net (Fabian Fagerholm)
Date: Fri Jan  9 21:46:57 2004
Subject: [mod_python] Promoting Python as web application development
	language
In-Reply-To: <20020827052817.B301@eye.neb>
References: <20020823182218.A304@eye.neb> <3D6A6A52.45D2EE84@Golux.Com>
	<20020826151930.A4908@lyra.org>  <20020827052817.B301@eye.neb>
Message-ID: <1030459269.12012.70.camel@kernel>

As the initiator of the original discussion, I'd like to jump in with a
little comment right now before this heads off in a random direction.

I've been discussing these matters with David Welton of the Apache Tcl
Project (who has kindly agreed to assist me in this effort) and it seems
the mod_python community is lacking some vital understanding of exactly
what the Apache Software Foundation is.

Please read carefully:

> * Greg Stein <gstein@lyra.org> [020827 03:54]:
> > To become an ASF project, the owners/committers of the code would need to
> > agree to donate the codebase to the ASF and be willing to maintain it within
> > our framework (along with other ASF committers and members who are also
> > interested). Ideally, the community that comes with it would also follow
> > some of the philosophy of the ASF in terms of being a friendly community,
> > open source code, etc.

The mod_python software is written by Gregory Trubetskoy and a number of
contributors [0]. It already has a working infrastructure with a web
site, cvs (via sourceforge), and a mailing list.

ASF projects seem to have the general requirement that the copyright of
the software is to be assigned to the ASF.

This is not a decision that can be made by consensus on this mailing
list. It is the decision of the current copyright owner(s).

Gregory Trubetskoy has already expressed that he doesn't view the lack
of python.apache.org to be a problem [1] and that he doesn't have time
to spend on this effort [2] at the moment.

In order for anything to happen, Gregory must either be interested in
making mod_python an ASF project, or the mod_python community must come
up with an alternative arrangement with the ASF (such as a "Sister
Projects" link or whatever the ASF prefers).

In the former case, I'm sure communication can proceed directly between
Gregory and the ASF now that a contact has been established. I'll be
happy to share all information that I have gathered so far.

I invite everyone to continue this discussion with these facts in mind.
I also invite anyone to endorse the Python Special Interest Group
Proposal [3] that was sent to the Python Meta-SIG mailing list.

Regards,
Fabian Fagerholm

[0] http://www.modpython.org/live/mod_python-2.7.8/CREDITS

[1] http://www.modpython.org/pipermail/mod_python/2002-August/002364.html

[2] http://www.modpython.org/pipermail/mod_python/2002-August/002372.html

[3] http://mail.python.org/pipermail/meta-sig/2002-August/001233.html

-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 240 bytes
Desc: This is a digitally signed message part
Url : http://mailman.modpython.org/pipermail/mod_python/attachments/20020827/69694b4b/attachment.bin
From vmilitaru at sympatico.ca  Tue Aug 27 11:28:14 2002
From: vmilitaru at sympatico.ca (vio)
Date: Fri Jan  9 21:46:57 2004
Subject: [mod_python] Promoting Python as web application development language
In-Reply-To: <3D6B87F6.9709C80E@Golux.Com>; from Ken.Coar@Golux.Com on Tue, Aug 27, 2002 at 10:08:54AM -0400
References: <20020823182218.A304@eye.neb> <3D6A6A52.45D2EE84@Golux.Com> <20020826151930.A4908@lyra.org> <3D6B87F6.9709C80E@Golux.Com>
Message-ID: <20020827112814.A756@eye.neb>

I just received a message from Grisha adressing the first part of yours, 
I hope to your satisfaction. 

For the second part, I totally agree that enthousiasm is not a good metric 
in this (most!) issues. But I would like to add that
the essence of my posts was not as much about Grisha's code, as about the need
of a good framework to write apache apps in python. Give me any other package
which accomplishes this task as good or better than Grisha's code, and I'll
embrace that, and champion it instead. My point was not 'mod_python' as
Grisha's code, but mod_python as a sister module to mod_perl, a solid module
to write apache apps in python. That's the core source of my enthousiasm.
To avoid any confusion: I'm simply  championning Grisha's code out of a lack 
of a better alternative. The fact that it does the job it's supposed to doesn't
hurt, though :)

More particularily regarding Grisha's code, I disagree with your assessment 
that installed base should be considered as a metric in this instance.
For the simple reason that, in my personal opinion, 
lack of exposure is its main overall problem. Though I'm
not a marketing expert, and I have no particular interest in seeing this
precise piece of code exposed on the apache site more than any other who
could accomplish the same tasks, my gut feeling is that
once people will see and 'tip their toe' in it, they will share my enthousiasm
(to various degrees, obviously). The core truth is that python is an extremely
easy, clean and powerful programming language. Combining it with the most
popular web server out there might open the door to 'democratizing' the 
web application development.
In my opinion :)

Regards,
Vio


* Rodent of Unusual Size <Ken.Coar@Golux.Com> [020827 10:41]:
> Greg Stein wrote:
> > 
> > To become an ASF project, the owners/committers of the code
> > would need to agree to donate the codebase to the ASF and
> > be willing to maintain it within our framework (along with
> > other ASF committers and members who are also interested).
> 
> Also,
> 
> o assign the copyright and 
> o licence it under the Apache licence
> 
> You've said several times that mod_python is Grisha's
> project.  ASF projects have *no* individual owners.
> I don't know if Grisha is willing to give up ownership
> in order for mod_python to become an ASF project, which
> is why I suggested the 'sister projects' section.
> 
> I'm afraid that I can't see individual enthusiasm as a valid
> metric for whether to include mod_python on the Apache page.
> Usefulness to and penetration in the user community are more
> appropriate, I think.
> -- 
> #ken	P-)}
> 
> Ken Coar, Sanagendamgagwedweinini  http://Golux.Com/coar/
> Author, developer, opinionist      http://Apache-Server.Com/
> 
> "Millennium hand and shrimp!"

From neel at mediapulse.com  Tue Aug 27 15:57:10 2002
From: neel at mediapulse.com (Michael C. Neel)
Date: Fri Jan  9 21:46:57 2004
Subject: [mod_python] Promoting Python as web application developmentlanguage
Message-ID: <C0FC22C08B82074A88B50061764157775B97@johnson.mediapulse.net>

Just chipping in my thoughts here, mostly on the copyright issues.

As mod_python stands now (and as I understand it), it is solely under
the copyright of Gregory Trubetskoy
(http://www.modpython.org/live/mod_python-2.7.8/doc-html/front.html).
So unless Gregory has reasons to not do so, moving mod_python to an ASF
license shouldn't be much of an issue.  I'd also say that as a developer
I almost need to see mod_python placed under a "standard" open source
license like ASF, GNU, or Artistic (or even python's own PSF).  This
will give me the assurance that I won't find out one day that all the
mod_python releases are commercial and closed source.  I have been
burned in the past by this table cloth switching, and it wasn't fun.

The other thing I'd like to say is that python.apache.org should just be
mod_python.  It servers the same purpose as mod_perl, to allow apache
development in python.  Catering the section to template modules,
application servers, or others projects just dilutes what a developer is
looking for.  I do think a "sister sites" link area is a good idea, as
well as some kind of mod_python CPAN.

The community does need this, badly.  Python itself needs this.  I
recently did 20 interviews for the position of internet developer, and
not one person knew of python when I asked.  I figure there are two
reasons for this: python sucks, or it doesn't have enough exposure.
I've written code in python before, so I know it can't be number one...

Mike
--
Michael C. Neel
There are only 10 types of people in the world;
those who understand binary and those who don't.


-----Original Message-----
From: Fabian Fagerholm [mailto:fabbe@paniq.net] 
Sent: Tuesday, August 27, 2002 10:41 AM
To: vio
Cc: mod_python@modpython.org; Greg Stein; Ken.Coar@Golux.Com;
davidw@dedasys.com; grisha@modpython.org
Subject: Re: [mod_python] Promoting Python as web application
developmentlanguage


As the initiator of the original discussion, I'd like to jump in with a
little comment right now before this heads off in a random direction.

I've been discussing these matters with David Welton of the Apache Tcl
Project (who has kindly agreed to assist me in this effort) and it seems
the mod_python community is lacking some vital understanding of exactly
what the Apache Software Foundation is.

Please read carefully:

> * Greg Stein <gstein@lyra.org> [020827 03:54]:
> > To become an ASF project, the owners/committers of the code would
need to
> > agree to donate the codebase to the ASF and be willing to maintain
it within
> > our framework (along with other ASF committers and members who are
also
> > interested). Ideally, the community that comes with it would also
follow
> > some of the philosophy of the ASF in terms of being a friendly
community,
> > open source code, etc.

The mod_python software is written by Gregory Trubetskoy and a number of
contributors [0]. It already has a working infrastructure with a web
site, cvs (via sourceforge), and a mailing list.

ASF projects seem to have the general requirement that the copyright of
the software is to be assigned to the ASF.

This is not a decision that can be made by consensus on this mailing
list. It is the decision of the current copyright owner(s).

Gregory Trubetskoy has already expressed that he doesn't view the lack
of python.apache.org to be a problem [1] and that he doesn't have time
to spend on this effort [2] at the moment.

In order for anything to happen, Gregory must either be interested in
making mod_python an ASF project, or the mod_python community must come
up with an alternative arrangement with the ASF (such as a "Sister
Projects" link or whatever the ASF prefers).

In the former case, I'm sure communication can proceed directly between
Gregory and the ASF now that a contact has been established. I'll be
happy to share all information that I have gathered so far.

I invite everyone to continue this discussion with these facts in mind.
I also invite anyone to endorse the Python Special Interest Group
Proposal [3] that was sent to the Python Meta-SIG mailing list.

Regards,
Fabian Fagerholm

[0] http://www.modpython.org/live/mod_python-2.7.8/CREDITS

[1]
http://www.modpython.org/pipermail/mod_python/2002-August/002364.html

[2]
http://www.modpython.org/pipermail/mod_python/2002-August/002372.html

[3] http://mail.python.org/pipermail/meta-sig/2002-August/001233.html



From tree at basistech.com  Tue Aug 27 18:38:36 2002
From: tree at basistech.com (Tom Emerson)
Date: Fri Jan  9 21:46:57 2004
Subject: [mod_python] Promoting Python as web application developmentlanguage
In-Reply-To: <C0FC22C08B82074A88B50061764157775B97@johnson.mediapulse.net>
References: <C0FC22C08B82074A88B50061764157775B97@johnson.mediapulse.net>
Message-ID: <15723.65388.98630.19463@magrathea.basistech.com>

Michael C. Neel writes:
> The other thing I'd like to say is that python.apache.org should
> just be mod_python.  It servers the same purpose as mod_perl, to
> allow apache development in python.

Look though at http://tcl.apache.org/, which includes pointers to
several projects for integrating Tcl into Apache. I don't see why
mod_snake shouldn't be included with mod_python. Developers would be
coming to python.apache.org to find out how to interface to Apache
with Python...

> Catering the section to template modules, application servers, or
> others projects just dilutes what a developer is looking for.

... but the next question many will ask is, "so now what? Where are
the template packages?"

> I do think a "sister sites" link area is a good idea, as well as
> some kind of mod_python CPAN.

Indeed!

    -tree

-- 
Tom Emerson                                          Basis Technology Corp.
Software Architect                                 http://www.basistech.com
  "Beware the lollipop of mediocrity: lick it once and you suck forever"

From jack_diederich at email.com  Tue Aug 27 17:45:30 2002
From: jack_diederich at email.com (Jack Diederich)
Date: Fri Jan  9 21:46:57 2004
Subject: [OT] RE: [mod_python] Promoting Python as web application
    developmentlanguage
Message-ID: <20020827224530.25352.qmail@email.com>

> The community does need this, badly.  Python itself needs this.  I
> recently did 20 interviews for the position of internet developer, and
> not one person knew of python when I asked.  I figure there are two
> reasons for this: python sucks, or it doesn't have enough exposure.

I don't think it is crucial to hire a developer who knows the language. If someone knows a few languages (one or more being OO) learning python just takes a month of reading your existing code base to learn reasonably, and a few months more in the group environment to master.  Even in Boston with its largish perl community, a place I worked previously didn't discriminate on knowledge of perl.  A good developer is a good developer (most of the people were C++ heavies first, perl second), they have to learn the ins and outs of the company's development environment & coding style anyway, a different language is just one aspect of that. (All things being equal, hire the guy who already knows python, but that isn't the most important thing.).  If they can ace an interview in another language (or preferably a couple) then it is a good hire.  If they are a jack of all trades [master of none: why does everyone forget that part of the phrase?] just say 'thank you for your time' and walk away.

-jackdied

ps, my first name being 'Jack' I get 'Jack of all trades' meant as a complement frequently.  I've stopped taking offense becuase 99% of the people who say it are ignorant of the full phrase 'Jack [apprentice] of all trades, master of none' [http://www.bartleby.com/66/6/1706.html]

pps, 'jackdied' is frequently my email/login on jobs, it is typically the shortest thing to type into MS exchange or similar to uniquely pull my name out of the employee database ('died' being the first 4 letters of my last name).  Nothing morbid implied, just a good mnemonic.
-- 
__________________________________________________________
Sign-up for your own FREE Personalized E-mail at Mail.com
http://www.mail.com/?sr=signup


From vmilitaru at sympatico.ca  Wed Aug 28 01:47:38 2002
From: vmilitaru at sympatico.ca (vio)
Date: Fri Jan  9 21:46:57 2004
Subject: [mod_python] Promoting Python as web application developmentlanguage
In-Reply-To: <15723.65388.98630.19463@magrathea.basistech.com>; from tree@basistech.com on Tue, Aug 27, 2002 at 06:38:36PM -0400
References: <C0FC22C08B82074A88B50061764157775B97@johnson.mediapulse.net> <15723.65388.98630.19463@magrathea.basistech.com>
Message-ID: <20020828014738.B325@eye.neb>

* Tom Emerson <tree@basistech.com> [020828 00:45]:
> Michael C. Neel writes:
> > The other thing I'd like to say is that python.apache.org should
> > just be mod_python.  It servers the same purpose as mod_perl, to
> > allow apache development in python.
> 
> Look though at http://tcl.apache.org/, which includes pointers to
> several projects for integrating Tcl into Apache. I don't see why
> mod_snake shouldn't be included with mod_python. Developers would be
> coming to python.apache.org to find out how to interface to Apache
> with Python...

I'm a total ignorant about mod_snake, but in principle, promoting two siamese
twins accomplishing pretty much the same tricks implies a good waste of 
developer cycles (and other less valuable resources). Additionally, I wonder
about the efforts required to merge the two code bases (provided such might be
a goal). It is not unheard of that the result of such merges comes out 
over budget, over schedule, more instable and less performant than either of 
its (incestuous?) parents. In this light, I personally would question 
the logic of such a move, as opposed to simply
consolidating all efforts on the one we determined is the 'Best of Breed'.
By the same token, why is there no 'mod_camel' alongsite 'mod_perl' ?
Just a thought.

> 
> > Catering the section to template modules, application servers, or
> > others projects just dilutes what a developer is looking for.
> 
> ... but the next question many will ask is, "so now what? Where are
> the template packages?"
> 
> > I do think a "sister sites" link area is a good idea, as well as
> > some kind of mod_python CPAN.
> 
> Indeed!

This makes a lot of sense.
So the 'functional' hierarchy Greg Stein is promoting for the apache site
might look something like:

HTTP Server > modules > sister sites 

Looks to me much more consistent that what we have now, 
... while making (most) everyone happy :)

Cheers,
Vio

From fabbe at paniq.net  Wed Aug 28 09:49:49 2002
From: fabbe at paniq.net (Fabian Fagerholm)
Date: Fri Jan  9 21:46:57 2004
Subject: [mod_python] Promoting Python as web application
	developmentlanguage
In-Reply-To: <87it1vncv5.fsf@dedasys.com>
References: <C0FC22C08B82074A88B50061764157775B97@johnson.mediapulse.net>
	<15723.65388.98630.19463@magrathea.basistech.com> 
	<87it1vncv5.fsf@dedasys.com>
Message-ID: <1030517390.1596.50.camel@kernel>

On Wed, 2002-08-28 at 01:41, David N. Welton wrote:
> > I don't see why mod_snake shouldn't be included with
> > mod_python. Developers would be coming to python.apache.org to find
> > out how to interface to Apache with Python...
> 
> That would definitely make sense, if the author of mod_snake agreed to
> turn over the project to the ASF.

FYI, I just emailed the author asking for his opinion. I'll let you know
when I receive a reply.

Would the ASF consider adopting this "dead" codebase even if the
principal author would not be interested in continuing the project?


Meanwhile, I'd like to point out that the mod_python mailing list is now
a subscribe-before-posting list. From www.modpython.org:

    Sorry, due to exessive spam, you now must subscribe to be able to
    post to the list.
    
I strongly recommend that we move this discussion somewhere more
appropriate. The amount of off-topic mail on the mod_python list has
been large lately.

I ask again that any interested parties review the Python SIG proposal
[0] and endorse it by sending an email to the Meta-SIG mailing list.
Look at [1] for an example. That way we would have a mailing list for
discussions.

Apologies for Cc'ing anyone who's not interested, please let me know if
you don't want to be a part of this.

Regards,
Fabian

[0] http://mail.python.org/pipermail/meta-sig/2002-August/001233.html

[1] http://mail.python.org/pipermail/meta-sig/2002-August/001234.html

-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 240 bytes
Desc: This is a digitally signed message part
Url : http://mailman.modpython.org/pipermail/mod_python/attachments/20020828/482cd0f7/attachment.bin
From vmilitaru at sympatico.ca  Wed Aug 28 03:04:58 2002
From: vmilitaru at sympatico.ca (vio)
Date: Fri Jan  9 21:46:57 2004
Subject: [mod_python] Promoting Python as web application developmentlanguage
In-Reply-To: <1030517390.1596.50.camel@kernel>; from fabbe@paniq.net on Wed, Aug 28, 2002 at 09:49:49AM +0300
References: <C0FC22C08B82074A88B50061764157775B97@johnson.mediapulse.net> <15723.65388.98630.19463@magrathea.basistech.com> <87it1vncv5.fsf@dedasys.com> <1030517390.1596.50.camel@kernel>
Message-ID: <20020828030457.A444@eye.neb>

* Fabian Fagerholm <fabbe@paniq.net> [020828 02:44]:
> ...
> I strongly recommend that we move this discussion somewhere more
> appropriate. The amount of off-topic mail on the mod_python list has
> been large lately.

I partially agree, but only to the extent that not technical issues are 
discussed in this thread. On the other hand, I believe a piece of mod_perl's
history is in the process of being written (perhaps) under our eyes.
Considering that the list is not currently flooded with technical issues,
I believe it's nice to document what is happening, with this thread/topic.
Perhaps for those who are 'out of the loop', and are just curious of what's
going on. I for one certainly find it quite interesting.

On a more personal note, being compulsively lazy, I'd much rather CC to
a single address (mod_python@modpython.org) than 10 individual addresses.
In 'mutt' on a laptop, this makes for a depressingly lot of cut&paste with a
weird 'button' mouse.

Just my opinion. (and Sorry for all the noise!)
Vio

From gstein at lyra.org  Wed Aug 28 01:42:41 2002
From: gstein at lyra.org (Greg Stein)
Date: Fri Jan  9 21:46:57 2004
Subject: [mod_python] Promoting Python as web application developmentlanguage
In-Reply-To: <20020828014738.B325@eye.neb>; from vmilitaru@sympatico.ca on Wed, Aug 28, 2002 at 01:47:38AM -0500
References: <C0FC22C08B82074A88B50061764157775B97@johnson.mediapulse.net> <15723.65388.98630.19463@magrathea.basistech.com> <20020828014738.B325@eye.neb>
Message-ID: <20020828014240.A8187@lyra.org>

On Wed, Aug 28, 2002 at 01:47:38AM -0500, vio wrote:
> * Tom Emerson <tree@basistech.com> [020828 00:45]:
> > Michael C. Neel writes:
>...
> > Look though at http://tcl.apache.org/, which includes pointers to
> > several projects for integrating Tcl into Apache. I don't see why
> > mod_snake shouldn't be included with mod_python. Developers would be
> > coming to python.apache.org to find out how to interface to Apache
> > with Python...

Note that "Apache" is beginning to mean a lot more than just "the Apache
http server". You've now got projects such as Tomcat, Xerces, and Cocoon all
under the Apache banner. Arguably, they have nothing to do with the web
server :-)

My point is just that people won't arrive at the ASF simply for "how to
interface to Apache with Python." Minor point to be sure, but hey :-)

> I'm a total ignorant about mod_snake, but in principle, promoting two siamese
> twins accomplishing pretty much the same tricks implies a good waste of 
> developer cycles (and other less valuable resources).

Each developer has the *right to choose* what they work on. You might call
it a waste, but those developers have a bunch of other reasons for why they
may work on duplicative code. For example, the Apache Tomcat guys have got a
web server built into their code. I ask, "what the hell? use Apache httpd!"
But even though that is a valid answer, some developers want a pure Java
solution, so they build a Java-based HTTP server. Even though (*IMO*) it is
a huge waste of effort. But it's their choice.

>...
> > > I do think a "sister sites" link area is a good idea, as well as
> > > some kind of mod_python CPAN.

More on this in a sec.

> > Indeed!
> 
> This makes a lot of sense.
> So the 'functional' hierarchy Greg Stein is promoting for the apache site
> might look something like:
> 
> HTTP Server > modules > sister sites 
> 
> Looks to me much more consistent that what we have now, 
> ... while making (most) everyone happy :)

I'd like to clarify my thoughts here (I've said this elsewhere, but not to
this forum, nor in a very public forum). Currently, the ASF has projects
aligned along *language* boundaries. For a certain selection of developer
and goal, this can be quite fine. "I need a Java-based MTA."

However, it starts to fall down when a question such as "I want a Java-based
XML parser." Is that in the ASF Jakarta Project, or the ASF XML Project?
Hunh. If everything were organized along *functional* lines, then the
question could always be answered properly. "An MTA? Go to the server
project. It will be in there." "An XML Parser? Go to the XML project." Of
course, you'd then select for the language of choice. But that is a
secondary criteria after the initial project selection.

Thus, I would not advocate something along the lines of python.apache.org.
"All things Python" doesn't help users looking for functionality, and it
tends to end up as a mish-mash of unrelated (Python) projects.

As a result, I would advocate mod_python as part of the Apache HTTP Server
Project itself. You've got a web server, and (hey!) here is the Python
connector. I would even advocate that mod_perl, mod_(d)tcl, and mod_php move
to this same organization (and whack those language specific projects).
Jakarta is just too frickin' huge to axe so easily :-), but there are lines
of functionality for that project, too.

In this view, vio is correct on my suggestion: the Apache HTTP Server
Project is the parent. Sub-projects include things like mod_python. And as a
matter of course, we simply refer people to other locations for other
httpd-related software.

[ and to clarify: I'm speaking of my opinion on ASF organization, rather
  than thru any official capacity ]

Back to the CPAN-like thing. Given the above view, how does this work?
Well... consider having some kind of "indexing" or "cataloging" project.
Language neutral. Sure, you could select by language, but why would it be
limited to just Perl or just Python? Why not both and Java and Tcl and Ruby
software?

*That* would be interesting. The trouble with such a beast, though, is
simply that it is such a hard problem to put together well. If it was easy,
it would have been done. And the ASF generally prefers to avoid the "dead
SourceForge project" syndrome. We're much more about *communities* than even
the software that is produced. The end result is that a certain bar needs to
be raised to ensure that an ASF project will succeed. That it will have a
healthy community. If there is no code and no community, then there better
be a lot of trust in the (few) developers who are proposing such a beast :-)

mod_python obviously comes with a large user base and a vibrant community.
There are certainly no issues there. Mostly, I'm speaking to the concepts of
"more Python stuff at the ASF."

[ and don't get me wrong; I'm a *huge* Python supporter; Google reports
  "about 12,900" pages for "greg stein python"  :-) ]

Cheers,
-g

-- 
Greg Stein, http://www.lyra.org/

From mbp at samba.org  Wed Aug 28 18:49:43 2002
From: mbp at samba.org (Martin Pool)
Date: Fri Jan  9 21:46:57 2004
Subject: [mod_python] Promoting Python as web application developmentlanguage
In-Reply-To: <20020828014240.A8187@lyra.org>
References: <C0FC22C08B82074A88B50061764157775B97@johnson.mediapulse.net> <15723.65388.98630.19463@magrathea.basistech.com> <20020828014738.B325@eye.neb> <20020828014240.A8187@lyra.org>
Message-ID: <20020828084941.GX2340@samba.org>

On 28 Aug 2002, Greg Stein <gstein@lyra.org> wrote:

> Note that "Apache" is beginning to mean a lot more than just "the Apache
> http server". You've now got projects such as Tomcat, Xerces, and Cocoon all
> under the Apache banner. Arguably, they have nothing to do with the web
> server :-)
> 
> My point is just that people won't arrive at the ASF simply for "how to
> interface to Apache with Python." Minor point to be sure, but hey
> :-)

I see the distinction, but I think at the moment most people new to
Python/Apache will not.  To a novice, Apache is a web server, and
python.apache.org is the obvious place to look.  

I think many people will be in that category and it would be nice to
help them as much as possible without confusion.

> As a result, I would advocate mod_python as part of the Apache HTTP Server
> Project itself. You've got a web server, and (hey!) here is the Python
> connector. I would even advocate that mod_perl, mod_(d)tcl, and mod_php move
> to this same organization (and whack those language specific
> projects).

OK, so python.httpd.apache.org, or (more reasonably?)
apache.org/httpd/python.  At any rate it would be nice if there was
some kind of official pointer rather than making people search.

> Back to the CPAN-like thing. Given the above view, how does this work?
> Well... consider having some kind of "indexing" or "cataloging" project.
> Language neutral. Sure, you could select by language, but why would it be
> limited to just Perl or just Python? Why not both and Java and Tcl and Ruby
> software?

I'm not sure if ASF needs to solve that whole problem.  Just search
Freshmeat or Google or the new GNU software map for "apache python".

> *That* would be interesting. The trouble with such a beast, though, is
> simply that it is such a hard problem to put together well. If it was easy,
> it would have been done. And the ASF generally prefers to avoid the "dead
> SourceForge project" syndrome. We're much more about *communities* than even
> the software that is produced. The end result is that a certain bar needs to
> be raised to ensure that an ASF project will succeed. That it will have a
> healthy community. If there is no code and no community, then there better
> be a lot of trust in the (few) developers who are proposing such a
> beast :-)

I think one of the problems for somebody starting to do web
programming in Python at the moment is that this "editorial control"
is not really present: it's hard to find out what is a good tool to
use.  For example, a web search tends to throw up references to
mod_snake, which on closer inspection turns out to be currently dead.
Similarly for templating.  

It would be nice if the authority of the ASF could help steer people
in the write direction.  I guess it wouldn't want to get into saying
"templating system X is better than Y", but it might at least provide
that minimum bar of activity/functionality.

-- 
Martin 

From vmilitaru at sympatico.ca  Wed Aug 28 05:05:05 2002
From: vmilitaru at sympatico.ca (vio)
Date: Fri Jan  9 21:46:57 2004
Subject: [mod_python] Re: mod_python sample code
In-Reply-To: <783.1030517956@www33.gmx.net>; from peter.bittner@gmx.net on Wed, Aug 28, 2002 at 08:59:16AM +0200
References: <20020827052817.B301@eye.neb> <783.1030517956@www33.gmx.net>
Message-ID: <20020828050505.A468@eye.neb>

Hi Peter,
I didn't do much (any) CGI, but I did something along those lines: a 
combination apache+oracle+mod_python. So maybe I'll describe that a little,
hopefully it will give you some pointers (just replace any references to oracle
with your database of choice.) I hope it's not too verbose for you.
If you don't mind, I'll CC this to the list so others may give you much better 
tips on this topic than I,
(... and hopefully lift up a little the technical vs. non-technical threads :-)
Verbose example coming up:

I'm assuming that you've installed mod_python, and run successfully the
sample code and examples.

So what I did - basically I took the publisher.py file which came with 
my mod_python copy, and modified it to fit my needs. Things like

import ...
# my database settings
import DCOracle2
os.environ['ORACLE_SID'] = '...'
os.environ['ORACLE_HOME'] = '...'
my_connect_string='...'

# a fast function (in C) to parse query string
parse_qsl = apache.parse_qsl

# I also changed all 'req' to 'REQUEST' for better clarity, so keep this
# in mind when you are reading my code (Zope influence).

def handler(REQUEST):
    _REQUEST = REQUEST._req
    _REQUEST.content_type = "text/html"

    # at this point, I want to check if user's browser has sent 
    # a cookie which I'm expecting (is he authenticated or not?)

    ########
    # if No Cookie Sent by Client
    #
    if not _REQUEST.headers_in.has_key("Cookie"):
        #
        # substract 'requested_URL' and 'requested_vars'
        #
        requested_URL = str(_REQUEST.server.server_hostname) + str(_REQUEST.uri)        requested_vars = '' # handle GET requests
        if _REQUEST.headers_in.has_key("content-length"):
            requested_vars = _REQUEST.read(int(_REQUEST.headers_in["content-length"]))
        #
        # save 'requested URL and variables' in a cookie on client
        #  - a cheezy way to do this I guess, but what I want to do is
        #    save the URL the user requested, because I will redirect him
        #    to my 'login' page, and this info will be lost.
        #   
        rURLlen = ('000' + str(len(requested_URL)))[-3:]
        _REQUEST.headers_out.add('Set-Cookie',
'v=L' # my internal token indicating it's a Login cookie
+ rURLlen 
+ requested_URL 
+ requested_vars 
+ '; '
+ 'path=/; ' # without the 'path', Netscape|Lynx won't store the cookie
)
        # now I'm sending the user the login page:
        #
        _REQUEST.headers_out.add('Pragma','no-cache')
        _REQUEST.send_http_header()
        #
        # send login form
        #
        _REQUEST.write(login_form1) # 'login_form1' being simple html
        raise apache.SERVER_RETURN, apache.OK
    #
    # /if No Cookie Sent by Client
    ########

    ########
    # Process Login Form data
    #
    elif str(_REQUEST.uri) == '/login/login_action':
        requested_vars = _REQUEST.read(int(_REQUEST.headers_in["content-length"]        #
        # parse query string
        #
        keep_blank_values=0
        pairs = parse_qsl(requested_vars, keep_blank_values)
        """ 
'pairs' now looks like this (yours will obviously vary, depending on what 
values you had in your form's html code):
[('username', '...'),('password', '...'), ('submit', 'Continue')]

But this is basically how I retrieve all data send by user in my html forms.
        """
        #
        # process 'missing Login field data' --> send 'Data missing' login form
        #
        if len(pairs) != 3:
            _REQUEST.write(login_form2)
            raise apache.SERVER_RETURN, apache.OK
        #
        # put Login data in local vars (for processing)
        #
        items = []
        for item in pairs[:-1]: # skip last item 'submit'
            if item[0] not in ('username','persistent', 'password'):
                _REQUEST.write(login_form2) # --> send 'Data missing' login form                raise apache.SERVER_RETURN, apache.OK
            items.append(item[1])
        username,ac_password = items

        #
        # get database login data
        #  - obviously this code is database-dependent
        #  - 'users' is a table where I've put all my user data
        SQL =  "SELECT * FROM users WHERE username = '%s'" % username
        try:
            connection = DCOracle2.connect(connect_string)
            cursor = connection.cursor()
            cursor.prepare(SQL)
            cursor.execute()
            cursor.arraysize = 20
            db_result = cursor.fetchall()
        except (DCOracle2.DatabaseError,TypeError), e:
            # I am logging the error to some dedicated LOG file
            LOG.write(timestamp + 'SQL: >' + SQL + '<   ' + str(e) + '\n')
            LOG.flush()
            raise apache.SERVER_RETURN, apache.HTTP_INTERNAL_SERVER_ERROR
        if db_result == []:
            _REQUEST.write(login_form3) # --> send 'Wrong Data' login form
            raise apache.SERVER_RETURN, apache.OK
            """ 
'db_result[0]' looks like this:
['user_id','username', 'password', OracleDate("2002-07-10 02:20:31")]

This obviously will depend on your table schema.
            """
        db_userID,db_Username,db_Pword,db_Created = db_result[0]
        #
        # check Login Form data against Database data
        #
        if (password != db_Pword):
            _REQUEST.write(login_form3) # --> send 'Wrong Data' login form
            raise apache.SERVER_RETURN, apache.OK
        #
        # set session in database
        # - here I'm basically repeating the db code of earlier
        #
        #  then I'm created a session token, which I'm sending to the user
        #  and will retrieve using the cookie mechanism (seen earlier).

From davidw at dedasys.com  Tue Aug 27 15:41:34 2002
From: davidw at dedasys.com (David N. Welton)
Date: Fri Jan  9 21:46:57 2004
Subject: [mod_python] Promoting Python as web application developmentlanguage
In-Reply-To: <15723.65388.98630.19463@magrathea.basistech.com>
References: <C0FC22C08B82074A88B50061764157775B97@johnson.mediapulse.net>
	<15723.65388.98630.19463@magrathea.basistech.com>
Message-ID: <87it1vncv5.fsf@dedasys.com>

Tom Emerson <tree@basistech.com> writes:

> Michael C. Neel writes:

> > The other thing I'd like to say is that python.apache.org should
> > just be mod_python.  It servers the same purpose as mod_perl, to
> > allow apache development in python.
 
> Look though at http://tcl.apache.org/, which includes pointers to
> several projects for integrating Tcl into Apache.

They aren't just pointers.  The projects belong to the Apache Software
Foundation, and are all part of the Apache Tcl group.

> I don't see why mod_snake shouldn't be included with
> mod_python. Developers would be coming to python.apache.org to find
> out how to interface to Apache with Python...

That would definitely make sense, if the author of mod_snake agreed to
turn over the project to the ASF.

-- 
David N. Welton
   Consulting: http://www.dedasys.com/
     Personal: http://www.dedasys.com/davidw/
Free Software: http://www.dedasys.com/freesoftware/
   Apache Tcl: http://tcl.apache.org/

From sa at sfsu.edu  Wed Aug 28 16:55:45 2002
From: sa at sfsu.edu (Sean Abrahams)
Date: Fri Jan  9 21:46:57 2004
Subject: [mod_python] PDF Documentation Corrupt?
Message-ID: <741140276070.20020828165545@sfsu.edu>

I've tried to print the mod_python PDF documentation from multiple
different machines running Adobe Acrobat 5.0 reader and keep getting a
"The document could not be printed." error after Page 2. Running
Windows XP. Anyone else having this issue?

Thanks,
--Sean


From kevin at vap.org  Thu Aug 29 13:26:46 2002
From: kevin at vap.org (kevin@vap.org)
Date: Fri Jan  9 21:46:57 2004
Subject: [mod_python] Re: PDF Documentation Corrupt?
Message-ID: <67120-220028429172646629@vap.org>

I tried it (Acro 5.0 & WinXP) and had the same problem.

This seems like a similar problem that I had with the Python 2.1 (or
2.2, I don't remember) PDF files with Acro 5.0 & Win98.  I worked
around it by getting the PS files, finding a Linux box & running the
PS files through PS2PDF.  You lose the hyperlinks, but at least they
were printable on Windows with Acro 5.0.

I don't know if there is a PS version of mod_python.pdf available,
but maybe someone could get you a version that will print under Acro
5.0/Windows.

As an alternative, you could locate Ghostscript for Windows & use the
GSView program to print it (I just tried it on my W2K box & it
worked, but was a bit slower).

-Kevin


>Date: Wed, 28 Aug 2002 16:55:45 -0700
>From: Sean Abrahams <sa@sfsu.edu>
>Reply-To: Sean Abrahams <sa@sfsu.edu>
>Organization: SFSU : Fiscal Affairs Business Systems
>To: mod_python@modpython.org
>Subject: [mod_python] PDF Documentation Corrupt?
>
>I've tried to print the mod_python PDF documentation from multiple
>different machines running Adobe Acrobat 5.0 reader and keep getting 
>a
>"The document could not be printed." error after Page 2. Running
>Windows XP. Anyone else having this issue?
>
>Thanks,
>--Sean



From kai at keliikuli.com  Thu Aug 29 14:40:19 2002
From: kai at keliikuli.com (kai@keliikuli.com)
Date: Fri Jan  9 21:46:57 2004
Subject: [mod_python] mod_python.publisher
Message-ID: <20020829144019.A1020@jki2.com>

Hi All, 
I had an authentication header problem with opera 6.0.2 
on Linux (Slackware 8.1).  I traced it to Lines 250 
and/or 263 of mod_python.publisher...

This line 
s = 'Basic realm = "%s"' % realm
produces this header line ( as sent to client)
WWW-Authenticate: Basic realm = "Members Only"\r\n


opera doesn't like the spaces between realm,=, and "%s"' % realm
it seems happy with.

s = 'Basic realm="%s"' % realm
which produces this header line
WWW-Authenticate: Basic realm = "Members Only"\r\n



I then tested it on a few others with the above change:

MSIE 6.0.2600.0000 ( what's with that version numbering? ): OK
Mozilla 1.0: OK

I'm going to test on some more but being lazy I thought I'd 
ask if anybody knows of any browsers and the versions thereof
which are fussy about the WWW-Authenticate line
Kai

From grisha at modpython.org  Thu Aug 29 15:35:32 2002
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 21:46:57 2004
Subject: [mod_python] Re: PDF Documentation Corrupt?
In-Reply-To: <67120-220028429172646629@vap.org>
Message-ID: <Pine.BSF.4.32.0208291532440.8000-100000@eden.ispol.com>

It seems to be some kind of a problem with pdflatex - there are some
references out on usenet about it. May be I was using a version that was
too old when generating the files. Sorry, I'm not exactly sure how to fix
this one :-(

On Thu, 29 Aug 2002 kevin@vap.org wrote:

> I tried it (Acro 5.0 & WinXP) and had the same problem.
>
> This seems like a similar problem that I had with the Python 2.1 (or
> 2.2, I don't remember) PDF files with Acro 5.0 & Win98.  I worked
> around it by getting the PS files, finding a Linux box & running the
> PS files through PS2PDF.  You lose the hyperlinks, but at least they
> were printable on Windows with Acro 5.0.
>
> I don't know if there is a PS version of mod_python.pdf available,
> but maybe someone could get you a version that will print under Acro
> 5.0/Windows.
>
> As an alternative, you could locate Ghostscript for Windows & use the
> GSView program to print it (I just tried it on my W2K box & it
> worked, but was a bit slower).
>
> -Kevin
>
>
> >Date: Wed, 28 Aug 2002 16:55:45 -0700
> >From: Sean Abrahams <sa@sfsu.edu>
> >Reply-To: Sean Abrahams <sa@sfsu.edu>
> >Organization: SFSU : Fiscal Affairs Business Systems
> >To: mod_python@modpython.org
> >Subject: [mod_python] PDF Documentation Corrupt?
> >
> >I've tried to print the mod_python PDF documentation from multiple
> >different machines running Adobe Acrobat 5.0 reader and keep getting
> >a
> >"The document could not be printed." error after Page 2. Running
> >Windows XP. Anyone else having this issue?
> >
> >Thanks,
> >--Sean
>
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://www.modpython.org/mailman/listinfo/mod_python
>


From woodm at Colorado.EDU  Thu Aug 29 13:51:37 2002
From: woodm at Colorado.EDU (WOOD MATTHEW DAVID)
Date: Fri Jan  9 21:46:57 2004
Subject: [mod_python] It all started with that -DEAPI error...
Message-ID: <Pine.GSO.4.40.0208291337450.7388-100000@ucsu.colorado.edu>

Hello everyone.  I would love to say that I'm not a newbie to mod_python,
but I've never successfully installed it.

My latest attempt is on an OpenBSD-3.1 box.

this server has both python2.1 and python2.2 on it.  (I didn't
particularly want python2.1, but the OpenBSD ports tree decided that I
would get both python versions.  :-) )

Regardless, I uncompressed the mod_python tarball, and went to work,
eventually recieving the standard -DEAPI error:

   > sudo apachectl start
   [Thu Aug 29 13:20:35 2002] [warn] Loaded DSO
   /usr/lib/apache/modules/mod_python.so uses plain Apache 1.3 API, this
   module might crash under EAPI! (please recompile it with -DEAPI)
   /usr/sbin/apachectl start: httpd could not be started


At first, I thought it was the -DEAPI problem that was preventing me from
starting the httpd altogether, but after searching around on the
mod_python webpage, I (think I) fixed that error.  Now, I just can't start
the httpd deamon:

    > sudo apachectl start
    /usr/sbin/apachectl start: httpd could not be started


I can start the deamon when I comment out the "LoadModule
python_module..." line, but that's clearly not the goal.

I'm hoping that I'm not reporting something stupid (other than me), but I
just can't get this to work.  I've asked several of my "better at UNIX
than I am" friends, and they have no ideas either.

What do you guys suggest?

Oh, and by the way, my system is using the standard apache1.3 that comes
"out of the box" with OpenBSD-3.1 .

Again, thanks for any time that you may have to spare.



Matthew D. Wood


From mk at lrn.ru  Thu Aug 29 21:59:50 2002
From: mk at lrn.ru (Michael Krasnovsky)
Date: Fri Jan  9 21:46:57 2004
Subject: [mod_python] PythonInitHandler questions
Message-ID: <20020829215950.66c764ec.mk@lrn.ru>

Hi!

What should return inithandler(req) function? Does PythonInitHandler
work with mod_python.pyblisher? 

When I try use it together, I got 404 error - Handler not found... 

Thanks.

Michael.

From sa at sfsu.edu  Thu Aug 29 13:20:35 2002
From: sa at sfsu.edu (Sean Abrahams)
Date: Fri Jan  9 21:46:57 2004
Subject: [mod_python] It all started with that -DEAPI error...
In-Reply-To: <Pine.GSO.4.40.0208291337450.7388-100000@ucsu.colorado.edu>
References: <Pine.GSO.4.40.0208291337450.7388-100000@ucsu.colorado.edu>
Message-ID: <41213765622.20020829132035@sfsu.edu>

Matthew,

I had the DEAPI error yesterday. Running Debian (level testing).

This is what I did.

"""
./configure

edit src/Makefile and change the OPT= line to read OPT=-DEAPI

then run "make dso"

then run "make install_dso"
"""

Hope this works for you.

--Sean

Thursday, August 29, 2002, 12:51:37 PM, you wrote:

WMD> Hello everyone.  I would love to say that I'm not a newbie to mod_python,
WMD> but I've never successfully installed it.

WMD> My latest attempt is on an OpenBSD-3.1 box.

WMD> this server has both python2.1 and python2.2 on it.  (I didn't
WMD> particularly want python2.1, but the OpenBSD ports tree decided that I
WMD> would get both python versions.  :-) )

WMD> Regardless, I uncompressed the mod_python tarball, and went to work,
WMD> eventually recieving the standard -DEAPI error:

WMD>    > sudo apachectl start
WMD>    [Thu Aug 29 13:20:35 2002] [warn] Loaded DSO
WMD>    /usr/lib/apache/modules/mod_python.so uses plain Apache 1.3 API, this
WMD>    module might crash under EAPI! (please recompile it with -DEAPI)
WMD>    /usr/sbin/apachectl start: httpd could not be started


WMD> At first, I thought it was the -DEAPI problem that was preventing me from
WMD> starting the httpd altogether, but after searching around on the
WMD> mod_python webpage, I (think I) fixed that error.  Now, I just can't start
WMD> the httpd deamon:

WMD>     > sudo apachectl start
WMD>     /usr/sbin/apachectl start: httpd could not be started


WMD> I can start the deamon when I comment out the "LoadModule
WMD> python_module..." line, but that's clearly not the goal.

WMD> I'm hoping that I'm not reporting something stupid (other than me), but I
WMD> just can't get this to work.  I've asked several of my "better at UNIX
WMD> than I am" friends, and they have no ideas either.

WMD> What do you guys suggest?

WMD> Oh, and by the way, my system is using the standard apache1.3 that comes
WMD> "out of the box" with OpenBSD-3.1 .

WMD> Again, thanks for any time that you may have to spare.



WMD> Matthew D. Wood

WMD> _______________________________________________
WMD> Mod_python mailing list
WMD> Mod_python@modpython.org
WMD> http://www.modpython.org/mailman/listinfo/mod_python


From woodm at Colorado.EDU  Thu Aug 29 14:44:44 2002
From: woodm at Colorado.EDU (WOOD MATTHEW DAVID)
Date: Fri Jan  9 21:46:57 2004
Subject: [mod_python] It all started with that -DEAPI error...
In-Reply-To: <41213765622.20020829132035@sfsu.edu>
Message-ID: <Pine.GSO.4.40.0208291444050.27511-100000@ucsu.colorado.edu>

I did not see that.  However, it didn't help me either.  But thanks
regardless.  I really appreciate the help.

Matthew D. Wood, University of Colorado

On Thu, 29 Aug 2002, Sean Abrahams wrote:

> Matthew,
>
> I had the DEAPI error yesterday. Running Debian (level testing).
>
> This is what I did.
>
> """
> ./configure
>
> edit src/Makefile and change the OPT= line to read OPT=-DEAPI
>
> then run "make dso"
>
> then run "make install_dso"
> """
>
> Hope this works for you.
>
> --Sean
>
> Thursday, August 29, 2002, 12:51:37 PM, you wrote:
>
> WMD> Hello everyone.  I would love to say that I'm not a newbie to mod_python,
> WMD> but I've never successfully installed it.
>
> WMD> My latest attempt is on an OpenBSD-3.1 box.
>
> WMD> this server has both python2.1 and python2.2 on it.  (I didn't
> WMD> particularly want python2.1, but the OpenBSD ports tree decided that I
> WMD> would get both python versions.  :-) )
>
> WMD> Regardless, I uncompressed the mod_python tarball, and went to work,
> WMD> eventually recieving the standard -DEAPI error:
>
> WMD>    > sudo apachectl start
> WMD>    [Thu Aug 29 13:20:35 2002] [warn] Loaded DSO
> WMD>    /usr/lib/apache/modules/mod_python.so uses plain Apache 1.3 API, this
> WMD>    module might crash under EAPI! (please recompile it with -DEAPI)
> WMD>    /usr/sbin/apachectl start: httpd could not be started
>
>
> WMD> At first, I thought it was the -DEAPI problem that was preventing me from
> WMD> starting the httpd altogether, but after searching around on the
> WMD> mod_python webpage, I (think I) fixed that error.  Now, I just can't start
> WMD> the httpd deamon:
>
> WMD>     > sudo apachectl start
> WMD>     /usr/sbin/apachectl start: httpd could not be started
>
>
> WMD> I can start the deamon when I comment out the "LoadModule
> WMD> python_module..." line, but that's clearly not the goal.
>
> WMD> I'm hoping that I'm not reporting something stupid (other than me), but I
> WMD> just can't get this to work.  I've asked several of my "better at UNIX
> WMD> than I am" friends, and they have no ideas either.
>
> WMD> What do you guys suggest?
>
> WMD> Oh, and by the way, my system is using the standard apache1.3 that comes
> WMD> "out of the box" with OpenBSD-3.1 .
>
> WMD> Again, thanks for any time that you may have to spare.
>
>
>
> WMD> Matthew D. Wood
>
> WMD> _______________________________________________
> WMD> Mod_python mailing list
> WMD> Mod_python@modpython.org
> WMD> http://www.modpython.org/mailman/listinfo/mod_python
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://www.modpython.org/mailman/listinfo/mod_python
>


From conrad at hep.caltech.edu  Thu Aug 29 13:59:14 2002
From: conrad at hep.caltech.edu (Conrad Steenberg)
Date: Fri Jan  9 21:46:58 2004
Subject: [mod_python] It all started with that -DEAPI error...
In-Reply-To: <Pine.GSO.4.40.0208291444050.27511-100000@ucsu.colorado.edu>
References: <Pine.GSO.4.40.0208291444050.27511-100000@ucsu.colorado.edu>
Message-ID: <1030654755.14778.152.camel@heppc22.cithep.caltech.edu>

Hi Matthew

Another thing you may check is to run 'strace httpd -X' to show where
mod_python looks for libraries etc. It may be that it picks up python
libraries from the wrong python version.

Cheers!

Conrad

On Thu, 2002-08-29 at 13:44, WOOD MATTHEW DAVID wrote:
> I did not see that.  However, it didn't help me either.  But thanks
> regardless.  I really appreciate the help.
> 
> Matthew D. Wood, University of Colorado
> 
> On Thu, 29 Aug 2002, Sean Abrahams wrote:
> 
> > Matthew,
> >
> > I had the DEAPI error yesterday. Running Debian (level testing).
> >
> > This is what I did.
> >
> > """
> > ./configure
> >
> > edit src/Makefile and change the OPT= line to read OPT=-DEAPI
> >
> > then run "make dso"
> >
> > then run "make install_dso"
> > """
> >
> > Hope this works for you.
> >
> > --Sean
> >
> > Thursday, August 29, 2002, 12:51:37 PM, you wrote:
> >
> > WMD> Hello everyone.  I would love to say that I'm not a newbie to mod_python,
> > WMD> but I've never successfully installed it.
> >
> > WMD> My latest attempt is on an OpenBSD-3.1 box.
> >
> > WMD> this server has both python2.1 and python2.2 on it.  (I didn't
> > WMD> particularly want python2.1, but the OpenBSD ports tree decided that I
> > WMD> would get both python versions.  :-) )
> >
> > WMD> Regardless, I uncompressed the mod_python tarball, and went to work,
> > WMD> eventually recieving the standard -DEAPI error:
> >
> > WMD>    > sudo apachectl start
> > WMD>    [Thu Aug 29 13:20:35 2002] [warn] Loaded DSO
> > WMD>    /usr/lib/apache/modules/mod_python.so uses plain Apache 1.3 API, this
> > WMD>    module might crash under EAPI! (please recompile it with -DEAPI)
> > WMD>    /usr/sbin/apachectl start: httpd could not be started
> >
> >
> > WMD> At first, I thought it was the -DEAPI problem that was preventing me from
> > WMD> starting the httpd altogether, but after searching around on the
> > WMD> mod_python webpage, I (think I) fixed that error.  Now, I just can't start
> > WMD> the httpd deamon:
> >
> > WMD>     > sudo apachectl start
> > WMD>     /usr/sbin/apachectl start: httpd could not be started
> >
> >
> > WMD> I can start the deamon when I comment out the "LoadModule
> > WMD> python_module..." line, but that's clearly not the goal.
> >
> > WMD> I'm hoping that I'm not reporting something stupid (other than me), but I
> > WMD> just can't get this to work.  I've asked several of my "better at UNIX
> > WMD> than I am" friends, and they have no ideas either.
> >
> > WMD> What do you guys suggest?
> >
> > WMD> Oh, and by the way, my system is using the standard apache1.3 that comes
> > WMD> "out of the box" with OpenBSD-3.1 .
> >
> > WMD> Again, thanks for any time that you may have to spare.
> >
> >
> >
> > WMD> Matthew D. Wood
> >
> > WMD> _______________________________________________
> > WMD> Mod_python mailing list
> > WMD> Mod_python@modpython.org
> > WMD> http://www.modpython.org/mailman/listinfo/mod_python
> >
> > _______________________________________________
> > Mod_python mailing list
> > Mod_python@modpython.org
> > http://www.modpython.org/mailman/listinfo/mod_python
> >
> 
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://www.modpython.org/mailman/listinfo/mod_python
-- 
*-----------------------------------------*
| Conrad Steenberg                        |
| Caltech, Mail Code 356-48               |
| Pasadena, CA, 91125                     |
| e-mail: conrad@hep.caltech.edu          |
| Tel: (626) 395-8758                     |
*-----------------------------------------*


From ian at veryfresh.com  Thu Aug 29 14:29:40 2002
From: ian at veryfresh.com (Ian Clelland)
Date: Fri Jan  9 21:46:58 2004
Subject: [mod_python] mod_python.publisher
In-Reply-To: <20020829144019.A1020@jki2.com>
References: <20020829144019.A1020@jki2.com>
Message-ID: <20020829212940.GB5501@fullfactor.com>

On Thu, Aug 29, 2002 at 02:40:19PM -0700, kai@keliikuli.com wrote:
> I had an authentication header problem with opera 6.0.2 
> on Linux (Slackware 8.1).  I traced it to Lines 250 
> and/or 263 of mod_python.publisher...

> opera doesn't like the spaces between realm,=, and "%s"' % realm

Interesting; sounds like Opera is broken in this respect. The spec is quite 
clear in that white space is allowed between tokens and separators. (Of 
course, none of the WWW-Authenticate examples ever use any spaces, so I can 
see where this might have been missed.)

> s = 'Basic realm="%s"' % realm
> which produces this header line
> WWW-Authenticate: Basic realm = "Members Only"\r\n

In the spirit of 'be conservative in what you send, and liberal in what you 
accept', I think that this change should be made to the Publisher source, 
at least for the next release. In the meantime, perhaps someone should file 
a bug report with the Opera team about this. They should be accepting the 
header with spaces in the formatting.

> I then tested it on a few others with the above change:
> 
> MSIE 6.0.2600.0000 ( what's with that version numbering? ): OK
> Mozilla 1.0: OK
> 
> I'm going to test on some more but being lazy I thought I'd 
> ask if anybody knows of any browsers and the versions thereof
> which are fussy about the WWW-Authenticate line

I don't think that any other browsers will have problems with the terser 
format 'realm="name"', since that's what Apache uses by default, and I've 
never heard of a browser not understanding Apache's basic authentication.


Ian Clelland
<ian@veryfresh.com>

From peter.bittner at gmx.net  Fri Aug 30 11:39:27 2002
From: peter.bittner at gmx.net (Peter Bittner)
Date: Fri Jan  9 21:46:58 2004
Subject: [mod_python] Code Sample Collection would be helpful
Message-ID: <28957.1030700367@www15.gmx.net>

Hi there Python friends!

I think this has already been proposed once, but still it is a very
important issue:

The mod_python manual is great, sure. It even contains some sample code to
get started. But what is missing for the the (Python-)mod_python community is
a pool of sample code where one can see how different things have been
tackled by different people.

I am sure mod_python would be much more attactive then since it would be
easier to get right into it, to see working code, to adapt working code to one's
needs.

When I say pool I'm thinking of something like http://www.hotscripts.com
(BTW: I'm just seeing there is some python stuff on there already. Though
not really much, and even less about mod_python.) :-(

I'm sure there are a couple of guys out there in the mod_python community
that would be willing to share some of their code (for a GPL-license, as
shareware or freeware) if there were something like a "Sample Code Pool" on the
mod_python website. - Not all the code we all are writing is "for internal use
only" and some among us would be happy to publish their code. (I know from
myself how much useful code in C, PHP and JavaScript I've coded and it's okay
for me to know someone is using it and finding it helpful.)

Anyone out there who finds this idea good enough to be realized?
Who of you would like to help contributing to such a sample code pool?

Peter

-- 
Peter Bittner
mobil: +43/(0)650/4151545
web: http://www.bittner.at.tf - http://beam.to/htmlkurs
mail: peter.bittner@gmx.net

"Free software is like free speech, not free beer" (Richard Stallman)

GMX - Die Kommunikationsplattform im Internet.
http://www.gmx.net


From fabbe at paniq.net  Fri Aug 30 13:54:27 2002
From: fabbe at paniq.net (Fabian Fagerholm)
Date: Fri Jan  9 21:46:58 2004
Subject: [mod_python] Code Sample Collection would be helpful
In-Reply-To: <28957.1030700367@www15.gmx.net>
References: <28957.1030700367@www15.gmx.net>
Message-ID: <1030704868.11126.12.camel@kernel>

On Fri, 2002-08-30 at 12:39, Peter Bittner wrote:
> ...
> Anyone out there who finds this idea good enough to be realized?
> Who of you would like to help contributing to such a sample code pool?

See this thread that recently formed on this very list:
http://www.modpython.org/pipermail/mod_python/2002-August/002369.html
There's been a lot of discussion, so see the archives [0].

That thread spawned several things, one of which is a Python SIG
proposal [1]. The purpose of the SIG would be, among other things, to
create a web site with sample code and articles. The initial proposal
only talks about creation of the site, but in the process, some starting
documents would have to be written and a sample code pool could be built
over time.

The proposal hasn't received very many comments so it's doubtful if it
will happen. Post to the Meta-SIG list [2] if you'd like to comment or
endorse the proposal.

Cheers,
Fabian

[0] http://www.modpython.org/pipermail/mod_python/
[1] http://mail.python.org/pipermail/meta-sig/2002-August/001233.html
[2] http://mail.python.org/mailman/listinfo/meta-sig

-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 240 bytes
Desc: This is a digitally signed message part
Url : http://mailman.modpython.org/pipermail/mod_python/attachments/20020830/eef598e0/attachment.bin
From drh9296 at ritvax.rit.edu  Sat Aug 31 16:18:53 2002
From: drh9296 at ritvax.rit.edu (David Higgs)
Date: Fri Jan  9 21:46:58 2004
Subject: [mod_python] Re: It all started with that -DEAPI error
References: <20020830160001.20573.1501.Mailman@eden.ispol.com>
Message-ID: <3D7124AD.10208@rit.edu>

I run an OpenBSD install here.  Never had any luck w/ the static 
install, but the DSO works fine with a bit of work.

1. You can install just python 2.2.
Change to the 2.2 directory before you 'make; make install'.  You can 
pkg_delete the 2.1 if you like.

2. I never made mod_python work with thread support compiled.  There is 
no 'no_threads' flavor on the ports tree that I can determine.  Download 
the python 2.2 source and manually compile it without threads and 
install to a separate location.  I used /usr/www_python/ as an install 
directory.

3. Change the OPT as shown in the other response to get rid of the DEAPI 
error.  No biggie.

4. Make sure your PATH is setup correctly so when you compile 
mod_python, it finds the non-threaded python binaries first.  See 
http://www.modpython.org/pipermail/mod_python/2002-August/002353.html 
for details.

5. Make a DSO.  I tried for several days to get static working, without 
any luck at a stable httpd.  At some point I should probably provide the 
mailing list with the symptoms, so it can be resolved.

As for your error, check your default httpd log.  Even since apache 
couldn't start up, it will have more details on what went wrong.

--david


From christoph at cocon-seide.com  Thu Aug  1 09:33:47 2002
From: christoph at cocon-seide.com (Christoph Fritzsch)
Date: Fri Jan  9 21:52:56 2004
Subject: [mod_python] Configuring Apache
In-Reply-To: <3055.1028048088@www55.gmx.net>
Message-ID: <200208010737.g717bms59462@eden.ispol.com>

Hi Peter,

I tried it with Suse 7.3 some time ago and found it only workable by 

1) uncommenting all <Ifmodule python>  </if..>

#<IfDefine Python>
LoadModule python_module      /usr/lib/apache/mod_python.so
#</IfDefine>
#<IfDefine Python>
AddModule mod_python.c
#</IfDefine>

so the module is loaded for sure, as I couldnt get it to work with the Suse supplied 
starting parameters

2) Then I put this in there

#Python
#<IfModule mod_python.c>
<Directory "/usr/local/httpd/htdocs/test">
AddHandler python-program .py
PythonHandler mptest
PythonDebug On
</Directory>
#</IfModule>

as you did it

and  I also had to put in a  link 
/usr/lib/python2.1/site-packages/mod_python 
->/usr/lib/apache/lib/python2.1/site-packages/mod_python/

maybe you hv to replace the 2.1 to 2.2

reload apache and any file you call in the test directory will execute the mptest program

This is what the mod_python should do. That is as far as I got. I think next step is to 
expand the mptest program so you can call subroutines in it which presumaly do more 
usefull stuff than "Hello World!" !!

BR Christoph




From peter.bittner at gmx.net  Thu Aug  1 10:46:03 2002
From: peter.bittner at gmx.net (Peter Bittner)
Date: Fri Jan  9 21:52:56 2004
Subject: [mod_python] Re: Configuring Apache - It works!
References: <200208010737.g717bms59462@eden.ispol.com>
Message-ID: <18131.1028191563@www63.gmx.net>

Finally it works!
I had to create a symbolc link, as proposed by Christoph:

# ln -s /usr/lib/apache/lib/python2.2/site-packages/mod_python
/usr/lib/python2.2/site-packages/mod_python

Thank you very much!! - (I was at the end of my wisdom!)
Cheers, Peter


"Christoph Fritzsch" scripsit:
>
> and  I also had to put in a  link 
> /usr/lib/python2.1/site-packages/mod_python 
> ->/usr/lib/apache/lib/python2.1/site-packages/mod_python/

-- 
Peter Bittner
mobil: +43/(0)650/4151545
web: http://www.bittner.at.tf - http://beam.to/htmlkurs
mail: peter.bittner@gmx.net

"Free software is like free speech, not free beer" (Richard Stallman)

GMX - Die Kommunikationsplattform im Internet.
http://www.gmx.net


From rclilly at lvcm.com  Sat Aug  3 22:04:45 2002
From: rclilly at lvcm.com (Robert Lilly)
Date: Fri Jan  9 21:52:56 2004
Subject: [mod_python] Mod_python and Apache problems
Message-ID: <JBEILMCCPJDCPPHHKPFJCEDDCAAA.rclilly@lvcm.com>

Hello all,

I'm trying to get Mod_python to work with Apache/1.3.26 (Win32)
mod_python/2.7.6 Python/2.2.1 PHP/4.22 on Windows 2000 Professional.

I get the following error when I try to access the mptest.py page:

--
 [Sat Aug 03 21:19:55 2002] [warn] Loaded DSO modules/mod_python.dll uses
plain Apache 1.3 API, this module might crash  under EAPI! (please recompile
it with -DEAPI)
 make_obcallback(): could not import mod_python.apache.
 make_obcallback(): could not call init.
 make_obcallback(): could not import mod_python.apache.
 make_obcallback(): could not call init.
 make_obcallback(): could not import mod_python.apache.
 make_obcallback(): could not call init.
 make_obcallback(): could not import mod_python.apache.
 make_obcallback(): could not call init.
 make_obcallback(): could not import mod_python.apache.
 make_obcallback(): could not call init.
 [Sat Aug 03 21:20:07 2002] [error] [client 192.168.123.116] python_handler:
make_obcallback returned no obCallBack!
--

My httpd.conf contains the following:

    LoadModule python_module modules/mod_python.dll

    AddModule mod_python.c

    <Directory "E:/My Documents/RCL Enterprises/Web/htdocs/python">
            AddHandler python-program .py
            PythonHandler mptest
            PythonDebug on
    </Directory>


I try to access it using http://localhost/python/mptest.py and I get a 505
Internal Server Error. The error log contains the above.

Any clues about what I'm doing wrong? Does anyone have any pointers on
getting Python to work under Apache on Windows 2000?

TIA,

Robert Lilly
Apache/Python/PHP newbie!
---
Outgoing mail is certified Virus Free.
Checked by AVG anti-virus system (http://www.grisoft.com).
Version: 6.0.381 / Virus Database: 214 - Release Date: 8/2/2002


From Bryn.Davies at AirLiquide.com  Tue Aug  6 11:15:25 2002
From: Bryn.Davies at AirLiquide.com (Davies, Bryn)
Date: Fri Jan  9 21:52:57 2004
Subject: [mod_python] Win32 Installs: import _apache
Message-ID: <82E2D0C417E81A4CB94A56AD625FE4366BDD38@au-hokrypton.as.corp.airliquide.com>

 First, I apologise for jumping in straight away with a question, instead of
lurking around and possibly trying to help some others, but I'm a bit
puzzled as how to get around the problem I'm facing.

 I've run mod_python on Linux servers before, but for various reasons, work
wants this one deployed on Win32 for the moment.  Apache deployed fine, I
added mod_python.dll to LoadModules, performed the AddModule mod_python.c
etc, and Apache starts fine.  The problem arises when I try to execute the
example python script as shown in the Win32 Installation Guide ( App. A ):

 Here is an excerpt from the error log:

[Tue Aug 06 10:03:35 2002] [error] [client 172.17.1.39]   File "C:\program
files\python22\lib\mod_python\apache.py", line 55, in ?
[Tue Aug 06 10:03:35 2002] [error] [client 172.17.1.39]     import _apache
[Tue Aug 06 10:03:35 2002] [error] [client 172.17.1.39] ImportError: No
module named _apache

 At the expense of sounding like a dimwit, can anyone inform me of where
this module lives?  It doesn't seem to be in the distributions I downloaded.
If it is a code object, can someone likewise inform me of a source for a
precompiled version?  Decent compilers are rather scarce here.  It would be
great if I could get this project up on its legs, because ( irony ) if I can
get all this jumping on Win32, apparently I'll be able to use Linux servers
for the final deployment. :-P

 If anyone can give me any advice, I would be most greatful to them. :-)

 Regards, and happy pythoning,
  Bryn Davies.

-- 
Bryn Davies, Systems Administrator.
Air Liquide Healthcare Australia.

From rclilly at lvcm.com  Tue Aug  6 18:49:53 2002
From: rclilly at lvcm.com (Robert Lilly)
Date: Fri Jan  9 21:52:57 2004
Subject: [mod_python] Mod_python and Apache problems
In-Reply-To: <JBEILMCCPJDCPPHHKPFJCEDDCAAA.rclilly@lvcm.com>
Message-ID: <EGEMLKBGPBCGGGFNPMGNKECBCDAA.rclilly@lvcm.com>

I figured it out! So, for the sake of the archives, here's what I did.

It turns out that there's a second mod_python folder buried several levels
down inside the first one. THIS is the one that needs to go into python/Lib,
as it contains the necessary libraries. I moved it out from it's hiding
place and put it into python/Lib and it's "Hello world!"

I've decided to ignore the EAPI warning, since I can't figure out how to
re-compile mod_python.dll for Windows. The source code I downloaded from
modpython.org compiles for *nix and Cygwin.

Thanks,

Robert

-----Original Message-----
From: mod_python-admin@modpython.org
[mailto:mod_python-admin@modpython.org]On Behalf Of Robert Lilly
Sent: Saturday, August 03, 2002 10:05 PM
To: Mod_python List
Subject: [mod_python] Mod_python and Apache problems


Hello all,

I'm trying to get Mod_python to work with Apache/1.3.26 (Win32)
mod_python/2.7.6 Python/2.2.1 PHP/4.22 on Windows 2000 Professional.

I get the following error when I try to access the mptest.py page:

--
 [Sat Aug 03 21:19:55 2002] [warn] Loaded DSO modules/mod_python.dll uses
plain Apache 1.3 API, this module might crash  under EAPI! (please recompile
it with -DEAPI)
 make_obcallback(): could not import mod_python.apache.
 make_obcallback(): could not call init.
 make_obcallback(): could not import mod_python.apache.
 make_obcallback(): could not call init.
 make_obcallback(): could not import mod_python.apache.
 make_obcallback(): could not call init.
 make_obcallback(): could not import mod_python.apache.
 make_obcallback(): could not call init.
 make_obcallback(): could not import mod_python.apache.
 make_obcallback(): could not call init.
 [Sat Aug 03 21:20:07 2002] [error] [client 192.168.123.116] python_handler:
make_obcallback returned no obCallBack!
--

My httpd.conf contains the following:

    LoadModule python_module modules/mod_python.dll

    AddModule mod_python.c

    <Directory "E:/My Documents/RCL Enterprises/Web/htdocs/python">
            AddHandler python-program .py
            PythonHandler mptest
            PythonDebug on
    </Directory>


I try to access it using http://localhost/python/mptest.py and I get a 505
Internal Server Error. The error log contains the above.

Any clues about what I'm doing wrong? Does anyone have any pointers on
getting Python to work under Apache on Windows 2000?

TIA,

Robert Lilly
Apache/Python/PHP newbie!
---
Outgoing mail is certified Virus Free.
Checked by AVG anti-virus system (http://www.grisoft.com).
Version: 6.0.381 / Virus Database: 214 - Release Date: 8/2/2002

_______________________________________________
Mod_python mailing list
Mod_python@modpython.org
http://www.modpython.org/mailman/listinfo/mod_python
---
Incoming mail is certified Virus Free.
Checked by AVG anti-virus system (http://www.grisoft.com).
Version: 6.0.381 / Virus Database: 214 - Release Date: 8/2/2002

---
Outgoing mail is certified Virus Free.
Checked by AVG anti-virus system (http://www.grisoft.com).
Version: 6.0.381 / Virus Database: 214 - Release Date: 8/2/2002


From gharris at centauri.mb.ca  Wed Aug  7 00:22:33 2002
From: gharris at centauri.mb.ca (George Harrison)
Date: Fri Jan  9 21:52:57 2004
Subject: [mod_python] Win32 Installs: import _apache
In-Reply-To: <82E2D0C417E81A4CB94A56AD625FE4366BDD38@au-hokrypton.as.cor
 p.airliquide.com>
Message-ID: <5.1.0.14.2.20020807001652.00a4f900@pop.mb.sympatico.ca>

Sorry for the length of this post, but this is a list of the mod-python 
folder in my Python22 directory. This is working as far as responding 
"Hello World". On my installation, the .py files were not in the root of 
mod_python, and until I moved them, I was getting the same sort of errors 
as you are reporting.

I don't know enough about either python or apache to explain why these 
work, and I kind of forget where the files were after the install, so YMMV.

gh

TreePrint listing of: D:\Program Files\python22\Lib\mod_python

D:\Program Files\python22\Lib\mod_python
|   COPYRIGHT
|   CREDITS
|   Makefile.in
|   NEWS
|   README
|   configure
|   configure.in
|   install-sh
|   __init__.py
|   apache.py
|   cgihandler.py
|   httpdapi.py
|   publisher.py
|   util.py
|   zhandler.py
|   __init__.pyc
|   apache.pyc
|
+---doc-html
....html files
|   \---icons
|           icons2
|           up.gif
|           previous.png
|           previous.gif
|           next.png
|           next.gif
|           modules.png
|           modules.gif
|           index.png
|           index.gif
|           contents.png
|           contents.gif
|           blank.png
|           up.png
|           blank.gif
|
+---src
|       Makefile.in
|       Makefile.libdir
|       Makefile.tmpl
|       Version.rc
|       _apachemodule.c
|       arrayobject.c
|       connobject.c
|       libpython.module.in
|       mod_python.c
|       mod_python.dsp
|       mod_python.mak
|       requestobject.c
|       serverobject.c
|       tableobject.c
|       util.c
|
\---Doc
        ...tex files



>[Tue Aug 06 10:03:35 2002] [error] [client 172.17.1.39]   File "C:\program
>files\python22\lib\mod_python\apache.py", line 55, in ?
>[Tue Aug 06 10:03:35 2002] [error] [client 172.17.1.39]     import _apache
>[Tue Aug 06 10:03:35 2002] [error] [client 172.17.1.39] ImportError: No
>module named _apache


From rclilly at lvcm.com  Mon Aug 12 08:51:50 2002
From: rclilly at lvcm.com (Robert Lilly)
Date: Fri Jan  9 21:52:57 2004
Subject: [mod_python] make_obcallback(): could not import mod_python.apache
In-Reply-To: <28386.1028130053@www30.gmx.net>
Message-ID: <EGEMLKBGPBCGGGFNPMGNEEFKCDAA.rclilly@lvcm.com>

> -----Original Message-----
> From: mod_python-admin@modpython.org
> [mailto:mod_python-admin@modpython.org]On Behalf Of Peter Bittner
> Sent: Wednesday, July 31, 2002 08:41 AM
> To: mod_python@modpython.org
> Subject: [mod_python] make_obcallback(): could not import
> mod_python.apache
>
>
> I have mod_python installed on SuSE Linux 8.0 and I have set up my
> httpd.conf according to the mod_python documentation, but
> unfortunately I get the
> following error message in my error log:
>
> make_obcallback(): could not import mod_python.apache.
> make_obcallback(): could not call init.

Hi Peter,

I had a similar problem under Windows 2000. In my case in turned out that
there was a second mod_python folder buried several levels inside the first.
THAT is the one that needs to go into python/Lib. Once I did that then it
was "Hello World!"

Hope this helps,

Robert Lilly
---
Outgoing mail is certified Virus Free.
Checked by AVG anti-virus system (http://www.grisoft.com).
Version: 6.0.381 / Virus Database: 214 - Release Date: 8/2/2002


From declosmadeuce at logica.com  Tue Aug 13 11:49:55 2002
From: declosmadeuce at logica.com (De Closmadeuc, Etienne)
Date: Fri Jan  9 21:52:57 2004
Subject: [mod_python] Got error : "python_handler: Dispatch() returned nothing"
Message-ID: <A5290EF4F8CBD211BBA20090273A7E4A039780A9@descartes.fr.logica.com>

> Here is the configuration :
> 
> * Windows NT4 SP6
> * Apache 1.3.20 (Got the message "Apache/1.3.20 (Win32) mod_python/2.7.6
> Python/2.2.1 running..." in the Apache window)
> * Apache configuration file (httpd.conf) (dll correctly installed in
> modules directory) :
> ...
> Port 81
> ...
> LoadModule python_module modules/mod_python.dll
> ...
> <Directory "C:/Program Files/Apache Group/Apache_1_3_20/htdocs/Python">
> 	AddHandler python-program .py
> 	PythonHandler Hello
> 	PythonDebug On
> </Directory>
> 
> * Files in D:\Python22\Lib\mod_python :
> 
> 06/12/00  04:05                  2 411 __init__.py
> 13/08/02  11:26                    237 __init__.pyc
> 19/08/01  00:43                 27 728 apache.py
> 13/08/02  11:26                 26 984 apache.pyc
> 06/12/00  04:05                  5 099 cgihandler.py
> 19/08/01  00:43                 15 103 httpdapi.py
> 19/08/01  00:43                 11 092 publisher.py
> 14/12/00  00:45                 10 831 util.py
> 06/12/00  04:05                  3 360 zhandler.py
> 
> Note that "__init__.py" and "apache.py" have been automatically compiled
> by python after the url invocation.
> 
> * File in C:/Program Files/Apache Group/Apache_1_3_20/htdocs/Python
> 
> Hello.py : 
> 
> from mod_python import apache
> 
> def handler(req):
> 	req.content_type = "text/plain"
> 	req.send_http_header()
> 	req.write("Hello world !")
> 	return apache.OK
> 
> * Error message in error.log after url invocation
> (http://localhost:81/Python/Hello.py) :
> 
> [Tue Aug 13 11:26:26 2002] [error] [client 127.0.0.1] python_handler:
> Dispatch() returned nothing.
> 
> 
> Can you help me to fix that problem ? Thanks.
> 
> Etienne de Closmadeuc (declosmadeuce@logica.com)
> Logica SA
> 183, route de Can?jan 33173 GRADIGNAN CEDEX
> T?l : 05.56.75.77.00
> 
> 

This e-mail and any attachment is for authorised use by the intended recipient(s) only.  It may contain proprietary material, confidential information and/or be subject to legal privilege.  It should not be copied, disclosed to, retained or used by, any other party.  If you are not an intended recipient then please promptly delete this e-mail and any attachment and all copies and inform the sender.  Thank you.

From mateusz at ant.gliwice.pl  Wed Aug 14 23:10:50 2002
From: mateusz at ant.gliwice.pl (Mateusz Korniak)
Date: Fri Jan  9 21:52:57 2004
Subject: [mod_python] All power of mod_python in publisher handler ?
Message-ID: <200208142310.50497.mateusz@ant.gliwice.pl>

I'm in process of converting some 'pure' mod_python handlers to publishers 
one.
Basically my handlers looks like

def mod_python_handler(req):
	req.status = mod_python.apache.OK
	req.content_type = ....
	req.send_http_header()
	req.write(content_parts) 
	# many writes like above ...

	return mod_python.apache.OK

so I suppsed to proper equivalent publisher handler should look like:

def publisher_handler(req):
	mod_python_handler(req):

But any call of request.write() results an 500 Internal Server Error.
1) What I'm doing wrong ?
2) What I'm suposed to return from publisher_handler() when all what already 
send do browser via request.write() calls ?

Something opposite is cleanly stated in docs:
"And last, but not the least, note how all the power of mod_python is still 
available to this function, since it has access to the Request object. You 
can do all the same things you can do with a "native" mod_python handler, 
e.g. set custom headers via req.headers_out, return errors by raising 
apache.SERVER_ERROR exceptions, write or read directly to and from the client 
via req.write and req.read, etc. "

TIA
-- 
Mateusz Korniak



From mk at lrn.ru  Wed Aug 14 23:25:49 2002
From: mk at lrn.ru (Michael Krasnovsky)
Date: Fri Jan  9 21:52:57 2004
Subject: [mod_python] Publisher Handler and redirect
Message-ID: <20020814232549.30e7817e.mk@lrn.ru>

Hello!

I have a problem. I need redirection inside a publisher handler. I try
using req.headers_out["Location"] = "http://www.example.com", but it
doesn't work.
Here is the example:

def test(req):
	"""
	"""
	req.headers_out["Location"] = "http://www.example.com"
	req.send_http_header()
	
	return "Going to Example.com..."


What's wrong?
I use the latest mod_python version and 1.3.26 Apache running on Linux.

Thanks.

With best regards,
Michael.


From grisha at modpython.org  Wed Aug 14 18:45:57 2002
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 21:52:58 2004
Subject: [mod_python] Publisher Handler and redirect
In-Reply-To: <20020814232549.30e7817e.mk@lrn.ru>
Message-ID: <Pine.BSF.4.32.0208141845290.56606-100000@localhost>

Try something like:

 def test(req):
       req.headers_out["Location"] = "http://www.example.com"
       req.status = apache.HTTP_MOVED_TEMPORARILY
       return "Going to Example.com..."



On Wed, 14 Aug 2002, Michael Krasnovsky wrote:

> Hello!
>
> I have a problem. I need redirection inside a publisher handler. I try
> using req.headers_out["Location"] = "http://www.example.com", but it
> doesn't work.
> Here is the example:
>
> def test(req):
> 	"""
> 	"""
> 	req.headers_out["Location"] = "http://www.example.com"
> 	req.send_http_header()
>
> 	return "Going to Example.com..."
>
>
> What's wrong?
> I use the latest mod_python version and 1.3.26 Apache running on Linux.
>
> Thanks.
>
> With best regards,
> Michael.
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://www.modpython.org/mailman/listinfo/mod_python
>


From mk at lrn.ru  Thu Aug 15 12:16:48 2002
From: mk at lrn.ru (Michael Krasnovsky)
Date: Fri Jan  9 21:52:58 2004
Subject: [mod_python] Publisher Handler and redirect
In-Reply-To: <Pine.BSF.4.32.0208141845290.56606-100000@localhost>
References: <20020814232549.30e7817e.mk@lrn.ru>
	<Pine.BSF.4.32.0208141845290.56606-100000@localhost>
Message-ID: <20020815121648.4b7eb304.mk@lrn.ru>

Hi, Gregory!

Thanks a lot. It works.
I also think that  this case should be described somewhere in FAQ.
Mateusz is right.

Michael.

On Wed, 14 Aug 2002 18:45:57 -0400 (EDT)
"Gregory (Grisha) Trubetskoy" <grisha@modpython.org> wrote:

> 
> Try something like:
> 
>  def test(req):
>        req.headers_out["Location"] = "http://www.example.com"
>        req.status = apache.HTTP_MOVED_TEMPORARILY
>        return "Going to Example.com..."
> 
> 
> 
> On Wed, 14 Aug 2002, Michael Krasnovsky wrote:
> 
> > Hello!
> >
> > I have a problem. I need redirection inside a publisher handler. I
> > try using req.headers_out["Location"] = "http://www.example.com",
> > but it doesn't work.
> > Here is the example:
> >
> > def test(req):
> > 	"""
> > 	"""
> > 	req.headers_out["Location"] = "http://www.example.com"
> > 	req.send_http_header()
> >
> > 	return "Going to Example.com..."
> >
> >
> > What's wrong?
> > I use the latest mod_python version and 1.3.26 Apache running on
> > Linux.
> >
> > Thanks.
> >
> > With best regards,
> > Michael.
> >
> > _______________________________________________
> > Mod_python mailing list
> > Mod_python@modpython.org
> > http://www.modpython.org/mailman/listinfo/mod_python
> >
> 
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://www.modpython.org/mailman/listinfo/mod_python

From gbeasley at tsa.ac.za  Thu Aug 15 12:19:30 2002
From: gbeasley at tsa.ac.za (Grant Beasley)
Date: Fri Jan  9 21:52:58 2004
Subject: [mod_python] Internal redirect (to the same server)
Message-ID: <OOENKCHGJGHILGPAGHGOEEPOCDAA.gbeasley@tsa.ac.za>

Hi

If I want to redirect the browser to another URL on my server, I can use a
HTTP redirect, but as I understand it, the redirect gets sent to the
browser, which then goes to the new URL, i.e. comes back to my server. I
want to be able to tell apache to serve another URL, without the useless
loop back to the browser.

Is this possible? And if so, could you give me a few pointers?

Secondly, what is the difference between HTTP_MOVED_TEMPORARILY and
HTTP_TEMPORARY_REDIRECT?

Thanks
Grant Beasley


From mk at lrn.ru  Thu Aug 15 13:10:18 2002
From: mk at lrn.ru (Michael Krasnovsky)
Date: Fri Jan  9 21:52:58 2004
Subject: Fw: Re: [mod_python] Publisher Handler and redirect
Message-ID: <20020815131018.1bed9908.mk@lrn.ru>


Begin forwarded message:

Date: Thu, 15 Aug 2002 00:18:39 +0200
From: Mateusz Korniak <mateusz@ant.gliwice.pl>
To: mk@lrn.ru
Subject: Re: [mod_python] Publisher Handler and redirect


On Wednesday 14 August 2002 23:25, Michael Krasnovsky wrote:
> Hello!
>
> I have a problem. I need redirection inside a publisher handler. I try
> using req.headers_out["Location"] = "http://www.example.com", but it
> doesn't work.
> Here is the example:
>
> def test(req):
> 	"""
> 	"""
> 	req.headers_out["Location"] = "http://www.example.com"
> 	req.send_http_header()
> 	return "Going to Example.com..."
>
> What's wrong?
Missing req.status set to mod_python.apache.HTTP_*_REDIRECT
 
def redirect(req):
	req.status = mod_python.apache.HTTP_TEMPORARY_REDIRECT
	req.headers_out["Location"] = "http://www.ant.gliwice.pl"
	req.send_http_header()


P.S. This should go to FAQ ;)

-- 
Mateusz Korniak
"Black holes are where God divided by zero." - Steven Wright


-- 
Michael Krasnovsky

Partner
Project Leader

bisoft s.r.o., Prague, Czech Republic

T +420 [0]2  51 61 42 21
M +420 [0]724  13 33 80
E michael.krasnovsky@bisoft.cz

From fabbe at paniq.net  Thu Aug 15 16:04:58 2002
From: fabbe at paniq.net (Fabian Fagerholm)
Date: Fri Jan  9 21:52:58 2004
Subject: [mod_python] Questions for the FAQ - please check and confirm (req.write() and
 return)
Message-ID: <1029416698.982.40.camel@kernel>

I have FAQ entries that I wish to add, but I thought it would be best to
post them here first for review. I'd like you to
        * confirm that the text it correct and
        * provide any additional information you think would be
          appropriate.

I will then submit this information to the FAQ Wizard.

Here goes:

--8<--
Using req.write() and return statements in the Publisher Handler

You may only call req.write() once. If you call it several times, you'll
get strange results.

If you use req.write() in a function called by the Publisher Handler,
you must still return a string at the end of the function. An empty
string is not enough.
--8<--

Thanks,
Fabian

-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 240 bytes
Desc: This is a digitally signed message part
Url : http://mailman.modpython.org/pipermail/mod_python/attachments/20020815/a3eb7b4f/attachment-0002.bin
From fabbe at paniq.net  Thu Aug 15 16:04:58 2002
From: fabbe at paniq.net (Fabian Fagerholm)
Date: Fri Jan  9 21:52:58 2004
Subject: [mod_python] Questions for the FAQ - please check and confirm (req.write() and
 return)
Message-ID: <1029416698.982.40.camel@kernel>

I have FAQ entries that I wish to add, but I thought it would be best to
post them here first for review. I'd like you to
        * confirm that the text it correct and
        * provide any additional information you think would be
          appropriate.

I will then submit this information to the FAQ Wizard.

Here goes:

--8<--
Using req.write() and return statements in the Publisher Handler

You may only call req.write() once. If you call it several times, you'll
get strange results.

If you use req.write() in a function called by the Publisher Handler,
you must still return a string at the end of the function. An empty
string is not enough.
--8<--

Thanks,
Fabian

-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 240 bytes
Desc: This is a digitally signed message part
Url : http://mailman.modpython.org/pipermail/mod_python/attachments/20020815/a3eb7b4f/attachment-0003.bin
From vmilitaru at sympatico.ca  Thu Aug 15 13:38:50 2002
From: vmilitaru at sympatico.ca (vio)
Date: Fri Jan  9 21:52:58 2004
Subject: [mod_python] Publisher Handler and redirect
In-Reply-To: <20020815121648.4b7eb304.mk@lrn.ru>; from mk@lrn.ru on Thu, Aug 15, 2002 at 12:16:48PM +0200
References: <20020814232549.30e7817e.mk@lrn.ru> <Pine.BSF.4.32.0208141845290.56606-100000@localhost> <20020815121648.4b7eb304.mk@lrn.ru>
Message-ID: <20020815133850.A338@eye.neb>

I believe the defining docs on mod_python redirection live in the FAQ (already).
http://www.modpython.org/FAQ/faqw.py?req=show&file=faq03.002.htp

Cheers, 
Vio


* Michael Krasnovsky <mk@lrn.ru> [020815 13:26]:
> Hi, Gregory!
> 
> Thanks a lot. It works.
> I also think that  this case should be described somewhere in FAQ.
> Mateusz is right.
> 
> Michael.
> 
> On Wed, 14 Aug 2002 18:45:57 -0400 (EDT)
> "Gregory (Grisha) Trubetskoy" <grisha@modpython.org> wrote:
> 
> > 
> > Try something like:
> > 
> >  def test(req):
> >        req.headers_out["Location"] = "http://www.example.com"
> >        req.status = apache.HTTP_MOVED_TEMPORARILY
> >        return "Going to Example.com..."
> > 
> > 
> > 
> > On Wed, 14 Aug 2002, Michael Krasnovsky wrote:
> > 
> > > Hello!
> > >
> > > I have a problem. I need redirection inside a publisher handler. I
> > > try using req.headers_out["Location"] = "http://www.example.com",
> > > but it doesn't work.
> > > Here is the example:
> > >
> > > def test(req):
> > > 	"""
> > > 	"""
> > > 	req.headers_out["Location"] = "http://www.example.com"
> > > 	req.send_http_header()
> > >
> > > 	return "Going to Example.com..."
> > >
> > >
> > > What's wrong?
> > > I use the latest mod_python version and 1.3.26 Apache running on
> > > Linux.
> > >
> > > Thanks.
> > >
> > > With best regards,
> > > Michael.
> > >
> > > _______________________________________________
> > > Mod_python mailing list
> > > Mod_python@modpython.org
> > > http://www.modpython.org/mailman/listinfo/mod_python
> > >
> > 
> > _______________________________________________
> > Mod_python mailing list
> > Mod_python@modpython.org
> > http://www.modpython.org/mailman/listinfo/mod_python
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://www.modpython.org/mailman/listinfo/mod_python

From vmilitaru at sympatico.ca  Thu Aug 15 13:38:50 2002
From: vmilitaru at sympatico.ca (vio)
Date: Fri Jan  9 21:52:58 2004
Subject: [mod_python] Publisher Handler and redirect
In-Reply-To: <20020815121648.4b7eb304.mk@lrn.ru>; from mk@lrn.ru on Thu, Aug 15, 2002 at 12:16:48PM +0200
References: <20020814232549.30e7817e.mk@lrn.ru> <Pine.BSF.4.32.0208141845290.56606-100000@localhost> <20020815121648.4b7eb304.mk@lrn.ru>
Message-ID: <20020815133850.A338@eye.neb>

I believe the defining docs on mod_python redirection live in the FAQ (already).
http://www.modpython.org/FAQ/faqw.py?req=show&file=faq03.002.htp

Cheers, 
Vio


* Michael Krasnovsky <mk@lrn.ru> [020815 13:26]:
> Hi, Gregory!
> 
> Thanks a lot. It works.
> I also think that  this case should be described somewhere in FAQ.
> Mateusz is right.
> 
> Michael.
> 
> On Wed, 14 Aug 2002 18:45:57 -0400 (EDT)
> "Gregory (Grisha) Trubetskoy" <grisha@modpython.org> wrote:
> 
> > 
> > Try something like:
> > 
> >  def test(req):
> >        req.headers_out["Location"] = "http://www.example.com"
> >        req.status = apache.HTTP_MOVED_TEMPORARILY
> >        return "Going to Example.com..."
> > 
> > 
> > 
> > On Wed, 14 Aug 2002, Michael Krasnovsky wrote:
> > 
> > > Hello!
> > >
> > > I have a problem. I need redirection inside a publisher handler. I
> > > try using req.headers_out["Location"] = "http://www.example.com",
> > > but it doesn't work.
> > > Here is the example:
> > >
> > > def test(req):
> > > 	"""
> > > 	"""
> > > 	req.headers_out["Location"] = "http://www.example.com"
> > > 	req.send_http_header()
> > >
> > > 	return "Going to Example.com..."
> > >
> > >
> > > What's wrong?
> > > I use the latest mod_python version and 1.3.26 Apache running on
> > > Linux.
> > >
> > > Thanks.
> > >
> > > With best regards,
> > > Michael.
> > >
> > > _______________________________________________
> > > Mod_python mailing list
> > > Mod_python@modpython.org
> > > http://www.modpython.org/mailman/listinfo/mod_python
> > >
> > 
> > _______________________________________________
> > Mod_python mailing list
> > Mod_python@modpython.org
> > http://www.modpython.org/mailman/listinfo/mod_python
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://www.modpython.org/mailman/listinfo/mod_python

From vmilitaru at sympatico.ca  Thu Aug 15 14:02:27 2002
From: vmilitaru at sympatico.ca (vio)
Date: Fri Jan  9 21:52:58 2004
Subject: [mod_python] Internal redirect (to the same server)
In-Reply-To: <OOENKCHGJGHILGPAGHGOEEPOCDAA.gbeasley@tsa.ac.za>; from gbeasley@tsa.ac.za on Thu, Aug 15, 2002 at 12:19:30PM +0200
References: <OOENKCHGJGHILGPAGHGOEEPOCDAA.gbeasley@tsa.ac.za>
Message-ID: <20020815140226.B338@eye.neb>

I believe that each browser handles the redirect HTTP messages a little 
differently, so redirection is browser-dependant.
But the question is rather how to by-pass the redirect altogether.
I believe you can do that by writing directly to the browser.

So instead of something like:
 _REQUEST.headers_out['location'] = 'http://' + your_other_virtual_server
 _REQUEST.status = apache.HTTP_MOVED_PERMANENTLY
 _REQUEST.send_http_header()
 raise apache.SERVER_RETURN, apache.OK

you would do something like:
 _REQUEST.headers_out.add('Pragma','no-cache')
 _REQUEST.headers_out.add( your other headers here)
 _REQUEST.send_http_header()

 _REQUEST.write(some_html_document)
 raise apache.SERVER_RETURN, apache.OK

where :
 some_html_document = """\
 <HTML>
 <HEAD><TITLE> Hello </TITLE></HEAD>
 <BODY>
 ...
 </BODY>
 </HTML>
 """

Hope this helps,
Vio


* Grant Beasley <gbeasley@tsa.ac.za> [020815 13:26]:
> Hi
> 
> If I want to redirect the browser to another URL on my server, I can use a
> HTTP redirect, but as I understand it, the redirect gets sent to the
> browser, which then goes to the new URL, i.e. comes back to my server. I
> want to be able to tell apache to serve another URL, without the useless
> loop back to the browser.
> 
> Is this possible? And if so, could you give me a few pointers?
> 
> Secondly, what is the difference between HTTP_MOVED_TEMPORARILY and
> HTTP_TEMPORARY_REDIRECT?
> 
> Thanks
> Grant Beasley
> 
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://www.modpython.org/mailman/listinfo/mod_python

From fabbe at paniq.net  Thu Aug 15 23:03:40 2002
From: fabbe at paniq.net (Fabian Fagerholm)
Date: Fri Jan  9 21:52:58 2004
Subject: [mod_python] Messages not getting through to list server?
Message-ID: <1029441820.982.225.camel@kernel>

Hi all,
Sorry to bother the list with this question, but has anyone noticed that
the mailing list seems to be extremely slow (or even not working at
all)?

Are there some network problems or is the server under too much load?

I'm hereby offering to host a backup MX for the modpython.org domain if
that would help at all. I might be in a position to offer to host the
mailing list as well if needed. Hardware and network connections are
sufficient to handle at least a few hundred messages per day.

Cheers,
Fabian



From ian at veryfresh.com  Thu Aug 15 15:37:04 2002
From: ian at veryfresh.com (Ian Clelland)
Date: Fri Jan  9 21:52:58 2004
Subject: [mod_python] Internal redirect (to the same server)
In-Reply-To: <OOENKCHGJGHILGPAGHGOEEPOCDAA.gbeasley@tsa.ac.za>
References: <OOENKCHGJGHILGPAGHGOEEPOCDAA.gbeasley@tsa.ac.za>
Message-ID: <20020815223704.GC11141@fullfactor.com>

On Thu, Aug 15, 2002 at 12:19:30PM +0200, Grant Beasley wrote:
> Hi
> 
> If I want to redirect the browser to another URL on my server, I can use a
> HTTP redirect, but as I understand it, the redirect gets sent to the
> browser, which then goes to the new URL, i.e. comes back to my server.

Yep. An HTTP redirect is a (usually) 301 status code sent back to the 
browser to tell it to request a different document. This allows for a 
great deal of flexibility on the server side -- you can go as far as 
redirecting clients to a completely different server, or to a different 
protocol (ftp: or mailto:, even).

> I
> want to be able to tell apache to serve another URL, without the useless
> loop back to the browser.
> 
> Is this possible? And if so, could you give me a few pointers?

If the extra messages really are useless, then the way to eliminate 
them is to change the URL on the server before Apache handles it. The 
simplest method is probably to use mod_alias (or mod_rewrite if you 
need something more powerful).

If you want to do this completely in mod_python, then you can write a 
PythonTransHandler, which will receive all requests, and has the chance 
to modify the URL before Apache passes the request to your main handler.

Remember, though, that in these cases, the client software has no idea 
that the URL has been changed, and will continue to request the old URL 
every time. This can be very useful if you are trying to create a 
'virtual' server layout which is different than your actualy filesystem 
layout, but at other times, you just want to tell the client 'sorry, 
this document has moved; please look for it here now.' That's when the 
HTTP redirects are useful.


> Secondly, what is the difference between HTTP_MOVED_TEMPORARILY and
> HTTP_TEMPORARY_REDIRECT?

HTTP/1.0 only had two redirection status codes: 301 (Moved Permanently) 
and 302 (Moved Temporarily). 302 was used for any situation where the 
client shouldn't remember the response, and should continue to request 
the original URL every time.

In HTTP/1.1, the 302 status code has been split into three different 
codes: 302 (now called 'Found'), 303 (See Other) and 307 (Temporary 
Redirect).

The idea behind this is that a 302 tells the client "I looked for the 
URL which you requested, and this is where I found it." It is not 
necessarily the case that the URL has changed, just that the document 
you want is somewhere else.

A 307 tells the client "The URL you requested has been temporarily 
moved. Please get it from this location, for now." This should be 
returned when the document used to be in one locaion, and probably will 
be back there again, but it has been moved out of the way for a while.

For all practical purposes, these two responses are exactly the same. 
The only difference (besides the semantics) is that HTTP/1.0 clients 
don't understand the 307 code at all, so if you want to use it, you'll 
have to check the protocol version (in mod_python, test req.proto_num 
>= 1001) and fall back to 302 if the client is using HTTP/1.0.


Neither of these status codes should usually be returned in response to 
a POST request, by the way. If a client receives a 302 or 307 from a 
POST request, then it is supposed to confirm the redirect with the 
user, and (after confirmation) repeat the POST to the new URL. A 303 
code can be returned to tell the client "I've processed your POST 
request, and the results you want are at this URL. Please use a GET 
query to access it."


--
Ian Clelland
<ian@veryfresh.com>

From sa at sfsu.edu  Thu Aug  1 17:00:00 2002
From: sa at sfsu.edu (Sean Abrahams)
Date: Fri Jan  9 21:52:59 2004
Subject: [mod_python] Session Handling Help + Writing a Guide On It
Message-ID: <73110242590.20020801170000@sfsu.edu>

I currently find myself having to create a web application using
session management (without cookies). I know there has been some
discussion in the past about adding a session handler to mod_python,
but I was hoping to get some help or get pointed in some directions
for my development.

I've heard that Apache 2.x has a shared memory space? I'm assuming
session data can be temporarily stored there for quick creation,
access, destruction?

I'm new to mod_python and apache handlers, so I'm currently going
through some learning curves.

Anyone willing to share their session development experience?

Here's my base idea (comments encouraged!):
1. I'll have a base directory that requires authorization
(/var/www/apps) which is accessed via the web at htts://foo.bar/apps

2. Any URL pointing to /var/www/apps and its subdirectories will be
handled by a central login script. It will store the initial URL the
user hit, so it can output the user to where he/she wished to go after
authorization. Thus, I can give people a direct link to an application
that's located somewhere inside /var/www/apps and it will prompt them
with the universal HTML login screen, then take them back to the URL
they originally entered.

3. When they login, their user/pass will be checked against a
database, with a positive ID creating a session. Throughout the
session, I can add/remove/modify data stored in the session data,
between pages, etc. (I'm not sure if it's fastest to store session
data in the file system or a DB, but I'm assuming being able to store
it in the system RAM would be most ideal. This is where the Apache 2.x
share memory comes in?)

4. Session ends when user clicks "logout", leaves my domain, or closes
the browser. Thus, if the user leaves the domain, then hits back in
their browser, he/she will get a "user authentication required" error,
or something similar.

I'm definitely excited about putting this together, just a little
disappointed in not being able to find a guide that helps me do this.
Thus, as a side effect to my development of this, and the help I
receive from this list, I will write and publish a guide detailing how
to create this functionality, providing the source code as well.

Thank you!
Sean


From sa at sfsu.edu  Mon Aug  5 09:38:58 2002
From: sa at sfsu.edu (Sean Abrahams)
Date: Fri Jan  9 21:52:59 2004
Subject: [mod_python] Session Handling Help + Writing a Guide On It
Message-ID: <15429380376.20020805093858@sfsu.edu>

I currently find myself having to create a web application using
session management (without cookies). I know there has been some
discussion in the past about adding a session handler to mod_python,
but I was hoping to get some help or get pointed in some directions
for my development.

I've heard that Apache 2.x has a shared memory space? I'm assuming
session data can be temporarily stored there for quick creation,
access, destruction?

I'm new to mod_python and apache handlers, so I'm currently going
through some learning curves.

Anyone willing to share their session development experience?

Here's my base idea (comments encouraged!):
1. I'll have a base directory that requires authorization
(/var/www/apps) which is accessed via the web at htts://foo.bar/apps

2. Any URL pointing to /var/www/apps and its subdirectories will be
handled by a central login script. It will store the initial URL the
user hit, so it can output the user to where he/she wished to go after
authorization. Thus, I can give people a direct link to an application
that's located somewhere inside /var/www/apps and it will prompt them
with the universal HTML login screen, then take them back to the URL
they originally entered.

3. When they login, their user/pass will be checked against a
database, with a positive ID creating a session. Throughout the
session, I can add/remove/modify data stored in the session data,
between pages, etc. (I'm not sure if it's fastest to store session
data in the file system or a DB, but I'm assuming being able to store
it in the system RAM would be most ideal. This is where the Apache 2.x
share memory comes in?)

4. Session ends when user clicks "logout", leaves my domain, or closes
the browser. Thus, if the user leaves the domain, then hits back in
their browser, he/she will get a "user authentication required" error,
or something similar.

I'm definitely excited about putting this together, just a little
disappointed in not being able to find a guide that helps me do this.
Thus, as a side effect to my development of this, and the help I
receive from this list, I will write and publish a guide detailing how
to create this functionality, providing the source code as well.

Thank you!
Sean


From dirkLeas at mac.com  Wed Aug  7 06:48:12 2002
From: dirkLeas at mac.com (Dirk Leas)
Date: Fri Jan  9 21:52:59 2004
Subject: [mod_python] 3.0.0 alpha binaries for Win32
In-Reply-To: <200208061611.g76GB4s39439@eden.ispol.com>
Message-ID: <000001c23dff$ef985d50$9865fea9@leasCray>

Anybody have 3.0.0 binaries available for download?

TIA,
D



From rien at yeepa.org  Wed Aug  7 23:05:30 2002
From: rien at yeepa.org (Adrien Plisson)
Date: Fri Jan  9 21:52:59 2004
Subject: [mod_python] Win32, Apache and mod_python
References: <EGEMLKBGPBCGGGFNPMGNKECBCDAA.rclilly@lvcm.com>
Message-ID: <004f01c23e56$2a6b4d60$2cee4cd4@RANDOM>

Hello,

I see a lot of posts concerning mod_pythonh under win32.
So, here is my own experience:
the first time i tried to install mod_python under windows 2000 i had to
tweak a bit with the install. I posted something about that some months ago.
Here is what you should do:

- install apache, you can find precompiled binaries at www.apache.org
- install python. ActiveState is giving a very good distribution of python
for windows for free called ActivePython (www.activestate.com)
- install mod_python. this means you have to download any distribution of
mod_python AND the precompiled mod_python.dll. then follow the instructions
in the mod_python manual (appendix A: Windows installation) except for those
points :

- point 1:
  * "Move (or just drag & drop) the mod python-x folder into the Python lib
     folder (i.e C:\ Program Files\ Python\ lib)."
    the mod_python-x folder should also be renamed 'mod_python'

  * "Move the files in the folder lib inside the mod python folder (C:\
     Program Files\ Python\ lib\ mod_python-x\ lib\ mod python) to the
     C:\ Program Files\ Python\ lib\ mod_python folder. It's safe to delete
these folders we just emptied."
   the first path is incorrect: it's
'...\lib\mod_python-x\python\mod_python\'

- point 2:
  * it talks about adding the LoadModule directive, but on my installation,
i
    had also to add a AddModule directive.

then it should run.

be aware that:

- if mod_python scripts are not in a folder covered by PYTHON_PATH then it
won't be found. on Win32, PYTHON_PATH is stored in the registry at
HKLM\SOFTWARE\PYTHON\PYTHONCORE\<version>\PYTHONPATH

- the warning about EAPI is an apache warning, not a mod_python warning, so
you have to recompile apache with -DEAPI, or download another precompiled
version from the apache website.

- the mod_ython documentation talks about python 1.5.2 or 2.0 and apache
1.3: for me, it runs with python 2.1, apache 1.3.23 and mod_python 2.7.4

- you simply CAN'T do a 'from mod_python import apache' in a python shell.
you HAVE TO be running under apache.

- included with apache are 2 modules named mod_info and mod_status which are
great tools to know if mod_python is running fine or was just ignored.

- the precompiled binaries of all stuffs you have to install are perfect
enough, don't try to compile them on your own unless you really know your
compiler (knowing it is much harder than anyone can think of)

So this is the most i can remember for the moment. i hope it will help... if
some points are not clear enough, just tell me, i will try to be more
precise.

--
rien



From Bryn.Davies at AirLiquide.com  Thu Aug  8 11:12:23 2002
From: Bryn.Davies at AirLiquide.com (Davies, Bryn)
Date: Fri Jan  9 21:52:59 2004
Subject: [mod_python] Humble pie, plus an apology.
Message-ID: <82E2D0C417E81A4CB94A56AD625FE4366DC532@au-hokrypton.as.corp.airliquide.com>

 First, I'd like to apologise for wasting all of your time.  The bug was due
to a typo in the Directory clause in httpd.conf, relating to where the
example python script was kept.  Fixing this, and removing the shebang from
the top of the python script ( hence returning its execution responsibilites
to Apache itself ) resolved my problem.  I shouldn't have assumed the
problem was modpython itself.

 Sorry! *blush*

-- 
Bryn Davies, IT Administrator, Air Liquide Healthcare.
"And journeyed up the mountainside, over the clouds...
 and nothing was ever heard of him again."

From vmilitaru at sympatico.ca  Thu Aug 15 23:45:42 2002
From: vmilitaru at sympatico.ca (vio)
Date: Fri Jan  9 21:52:59 2004
Subject: [Fwd: [mod_python] Messages not getting through to list server?]
In-Reply-To: <3D5C6A14.4B123BA5@sympatico.ca>; from vmilitaru@sympatico.ca on Thu, Aug 15, 2002 at 10:57:24PM -0400
References: <3D5C6A14.4B123BA5@sympatico.ca>
Message-ID: <20020815234542.A626@eye.neb>

I'd dare to say the mod_python list server has been quite terrible for the 
couple of months i've been subscribed to it. But I think the right move
here would rather be to simply move the list to 'sourceforge', and let them
take care of it. They have all the bandwidth and hardware to handle incredible
loads. Totally cheapo free for open source projects. Just have a look at:
http://sourceforge.net/docman/display_doc.php?docid=753&group_id=1#top
There is also a link with all their current (impressive!) hardware, 
but I can't seem to find it.

My 2 c.
Vio

Fabian Fagerholm wrote:
> 
> > Hi all,
> > Sorry to bother the list with this question, but has anyone noticed that
> > the mailing list seems to be extremely slow (or even not working at
> > all)?
> >
> > Are there some network problems or is the server under too much load?
> >
> > I'm hereby offering to host a backup MX for the modpython.org domain if
> > that would help at all. I might be in a position to offer to host the
> > mailing list as well if needed. Hardware and network connections are
> > sufficient to handle at least a few hundred messages per day.
> >
> > Cheers,
> > Fabian
> >
> > _______________________________________________
> > Mod_python mailing list
> > Mod_python@modpython.org
> > http://www.modpython.org/mailman/listinfo/mod_python

From fabbe at paniq.net  Fri Aug 16 10:52:53 2002
From: fabbe at paniq.net (Fabian Fagerholm)
Date: Fri Jan  9 21:52:59 2004
Subject: [Fwd: [mod_python] Messages not getting through to list server?]
In-Reply-To: <20020815234542.A626@eye.neb>
References: <3D5C6A14.4B123BA5@sympatico.ca>  <20020815234542.A626@eye.neb>
Message-ID: <1029484374.2093.10.camel@kernel>

On Fri, 2002-08-16 at 07:45, vio wrote:
> I'd dare to say the mod_python list server has been quite terrible for the 
> couple of months i've been subscribed to it. But I think the right move
> here would rather be to simply move the list to 'sourceforge', and let them
> take care of it. They have all the bandwidth and hardware to handle incredible
> loads. Totally cheapo free for open source projects. Just have a look at:
> http://sourceforge.net/docman/display_doc.php?docid=753&group_id=1#top
> There is also a link with all their current (impressive!) hardware, 
> but I can't seem to find it.

Wherever it ends up being hosted, I hope that these issues will be
resolved soon. I just got a bunch of messages from the list, some which
were sent back in July!

There can never be a thriving mod_python community if the basic means of
communication is cut off.

Without knowing anything about how the mod_python list server is set up,
I see no network problems with it. Connections to port 25 on the server
that is set up as MX for the domain modpython.org work just fine. So the
issue must be with the list software. Or perhaps the mail is transferred
to elsewhere and processed?

In any case, it would we nice if the list server admins could comment on
this. There are plenty of hands to use if help is needed, and there has
been an offer for a backup MX and a suggestion to use Sourceforge, which
should both be taken into consideration.

I'm don't want to offend anyone, but if the list will go on in this
shape, then perhaps the community should arrange for an alternative list
to use?

Cheers,
Fabian



From ian at veryfresh.com  Fri Aug 16 01:08:18 2002
From: ian at veryfresh.com (Ian Clelland)
Date: Fri Jan  9 21:52:59 2004
Subject: Fw: Re: [mod_python] Publisher Handler and redirect
In-Reply-To: <20020815131018.1bed9908.mk@lrn.ru>
References: <20020815131018.1bed9908.mk@lrn.ru>
Message-ID: <20020816080818.GD11141@fullfactor.com>

On Thu, Aug 15, 2002 at 01:10:18PM +0200, Michael Krasnovsky wrote:
> Missing req.status set to mod_python.apache.HTTP_*_REDIRECT
>  
> def redirect(req):
> 	req.status = mod_python.apache.HTTP_TEMPORARY_REDIRECT
> 	req.headers_out["Location"] = "http://www.ant.gliwice.pl"
> 	req.send_http_header()
> 
> 
> P.S. This should go to FAQ ;)

Your first line should probably be something like this:

  req.status = req.proto_num >= 1001 and \
      mod_python.apache.HTTP_TEMPORARY_REDIRECT or \
      mod_python.apache.HTTP_MOVED_TEMPORARILY

since older clients (Pre-HTTP/1.1) won't understand the
HTTP_TEMPORARY_REDIRECT status code.

--
Ian Clelland
<ian@veryfresh.com>

From fabbe at paniq.net  Fri Aug 16 15:17:14 2002
From: fabbe at paniq.net (Fabian Fagerholm)
Date: Fri Jan  9 21:52:59 2004
Subject: [mod_python] Questions for the FAQ - please check and confirm
	(req.write() and return) also docs update ...
In-Reply-To: <200208161351.42466.mateusz@ant.gliwice.pl>
References: <1029416698.982.40.camel@kernel> 
	<200208161351.42466.mateusz@ant.gliwice.pl>
Message-ID: <1029500235.2093.18.camel@kernel>

On Fri, 2002-08-16 at 14:51, Mateusz Korniak wrote:
> > --8<--
> > Using req.write() and return statements in the Publisher Handler
> >
> > You may only call req.write() once. If you call it several times, you'll
> > get strange results.
> >
> > If you use req.write() in a function called by the Publisher Handler,
> > you must still return a string at the end of the function. An empty
> > string is not enough.
> > --8<--
> >
> If it's so, mod_python docs 
> (http://www.modpython.org/live/mod_python-2.7.8/doc-html/tut-pub.html)
> needs update becouse I understand it quite opposite to text stated above.
> 
> """
> And last, but not the least, note how all the power of mod_python is still 
> available to this function, since it has access to the Request object. You 
> can do all the same things you can do with a "native" mod_python handler, 
> e.g. set custom headers via req.headers_out, return errors by raising 
> apache.SERVER_ERROR exceptions, write or read directly to and from the client 
> via req.write and req.read, etc. 
> """

Well, it doesn't explicitly say anywhere *how many times* the
req.write() function can be called.

I may very well be wrong, but if my tests are correct, you can only use
req.write() once in a regular mod_python handler. If you're using the
Publisher handler, you can use req.write() once, but then you *have* to
return something at the end of your function, or things won't work.

I agree though that the documentation needs updating. I've sent a
documentation patch (mostly touch-ups and a little rewording here and
there) to Gregory Trubetskoy some time ago, but received no reply.

Cheers,
Fabian



From grisha at modpython.org  Fri Aug 16 08:46:08 2002
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 21:52:59 2004
Subject: [Fwd: [mod_python] Messages not getting through to list server?]
In-Reply-To: <1029484374.2093.10.camel@kernel>
Message-ID: <Pine.BSF.4.32.0208160840230.89789-100000@localhost>

My appologies - the list indeed seemed to have had a problem. I'm getting
increasingly more dissatisfied with mailman - it has this "feature" where
messages to domains whose MX's cannot be looked up (probably because the
domain is no longer registered or DNS is down) clog up the entire list.

I've upgraded to 2.0.12 version of mailman, of this doesn't make it
better, I will look for other software.

Thanks to all who made offers to host - so far hosting is not a problem.
I'm not very keen on having the list at Sourceforge - I'd rather have more
control over it, also I don't know how long Sourceforge will be around -
these days nothing is certain. So far only CVS is hosted there.

Grisha

On 16 Aug 2002, Fabian Fagerholm wrote:

> On Fri, 2002-08-16 at 07:45, vio wrote:
> > I'd dare to say the mod_python list server has been quite terrible for the
> > couple of months i've been subscribed to it. But I think the right move
> > here would rather be to simply move the list to 'sourceforge', and let them
> > take care of it. They have all the bandwidth and hardware to handle incredible
> > loads. Totally cheapo free for open source projects. Just have a look at:
> > http://sourceforge.net/docman/display_doc.php?docid=753&group_id=1#top
> > There is also a link with all their current (impressive!) hardware,
> > but I can't seem to find it.
>
> Wherever it ends up being hosted, I hope that these issues will be
> resolved soon. I just got a bunch of messages from the list, some which
> were sent back in July!
>
> There can never be a thriving mod_python community if the basic means of
> communication is cut off.
>
> Without knowing anything about how the mod_python list server is set up,
> I see no network problems with it. Connections to port 25 on the server
> that is set up as MX for the domain modpython.org work just fine. So the
> issue must be with the list software. Or perhaps the mail is transferred
> to elsewhere and processed?
>
> In any case, it would we nice if the list server admins could comment on
> this. There are plenty of hands to use if help is needed, and there has
> been an offer for a backup MX and a suggestion to use Sourceforge, which
> should both be taken into consideration.
>
> I'm don't want to offend anyone, but if the list will go on in this
> shape, then perhaps the community should arrange for an alternative list
> to use?
>
> Cheers,
> Fabian
>
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://www.modpython.org/mailman/listinfo/mod_python
>


From grisha at modpython.org  Fri Aug 16 08:48:46 2002
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 21:52:59 2004
Subject: [mod_python] compiled code execution
In-Reply-To: <003301c22bd1$0ac2e820$0301a8c0@pentium>
Message-ID: <Pine.BSF.4.32.0208160848190.89789-100000@localhost>


On Mon, 15 Jul 2002, [iso-8859-2] Ji?? Kastner wrote:

> i'm interested about possibility to execute .pyc code by adding line to
> httpd.conf:
>
> AddHandler python-program .pyc
>
> or if this is nonsense, because python is executing it directly, if is .pyc
> present?

You just asnwered your own question :)

Grisha


From clee at spiralis.merseine.nu  Fri Aug 16 07:55:36 2002
From: clee at spiralis.merseine.nu (clee@spiralis.merseine.nu)
Date: Fri Jan  9 21:52:59 2004
Subject: [mod_python] Ping?
In-Reply-To: <20020714135537.A278@eye.neb>
References: <Pine.LNX.4.44.0207131250410.31967-100000@slippy.wire.rat>
	<20020714135537.A278@eye.neb>
Message-ID: <15708.63048.276061.704633@spiralis.merseine.nu>

>>>>> "vmilitaru" == vmilitaru  <vio> writes:

    vmilitaru> Same here. But even more problematic seems that some
    vmilitaru> messages never make it to the list (at least some of my
    vmilitaru> messages never did).  Possible solution (provided this
    vmilitaru> message make it to the list): how about migrating
    vmilitaru> modpython to 'sourceforge'? It's totally free and they
    vmilitaru> do an outstanding hosting job.

Sourceforge is great, but I would vote against this idea for one
reason: in my past experience, I have always prefered using the Mailman web
interface for browsing list archives over sourceforge's GeoCrawler
mail system.

Is it possible to use Mailman with sourceforge?

-chris

From grisha at modpython.org  Fri Aug 16 09:00:14 2002
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 21:52:59 2004
Subject: [mod_python] Questions for the FAQ - please check and confirm
 (req.write() and return) also docs update ...
In-Reply-To: <1029500235.2093.18.camel@kernel>
Message-ID: <Pine.BSF.4.32.0208160856250.89789-100000@localhost>


On 16 Aug 2002, Fabian Fagerholm wrote:

> If you're using the Publisher handler, you can use req.write() once,
> but then you *have* to return something at the end of your function,
> or things won't work.

You should be able to use write() many times as you like. It should also
be ok to return an empty string *if* you have written something with
write(), otherwise returning an empty document will cause a problem with
Netscape at least.

Grisha




From fabbe at paniq.net  Fri Aug 16 16:14:36 2002
From: fabbe at paniq.net (Fabian Fagerholm)
Date: Fri Jan  9 21:52:59 2004
Subject: [Fwd: [mod_python] Messages not getting through to list server?]
In-Reply-To: <Pine.BSF.4.32.0208160840230.89789-100000@localhost>
References: <Pine.BSF.4.32.0208160840230.89789-100000@localhost>
Message-ID: <1029503676.2028.41.camel@kernel>

On Fri, 2002-08-16 at 15:46, Gregory (Grisha) Trubetskoy wrote:
> My appologies - the list indeed seemed to have had a problem. I'm getting
> increasingly more dissatisfied with mailman - it has this "feature" where
> messages to domains whose MX's cannot be looked up (probably because the
> domain is no longer registered or DNS is down) clog up the entire list.
> 
> I've upgraded to 2.0.12 version of mailman, of this doesn't make it
> better, I will look for other software.

Let's hope that version works better. If not, I would suggest opening a
bug report (http://www.gnu.org/software/mailman/bugs.html).

> Thanks to all who made offers to host - so far hosting is not a problem.
> I'm not very keen on having the list at Sourceforge - I'd rather have more
> control over it, also I don't know how long Sourceforge will be around -
> these days nothing is certain. So far only CVS is hosted there.

I share this opinion on Sourceforge, and since we now know that the list
software had locked up, people can always yell if it happens again :)

Thanks for the clarification!

Cheers,
Fabian



From gbenson at redhat.com  Fri Aug 16 15:15:14 2002
From: gbenson at redhat.com (Gary Benson)
Date: Fri Jan  9 21:52:59 2004
Subject: [mod_python] How to make m_p handle everything
Message-ID: <20020816151513.B8120@redhat.com>

Hi,

Is it possible to make a mod_python script handle every request below a
certain path without using mod_rewrite or similar?

Cheers,
Gary

[ gbenson@redhat.com ][ GnuPG 85A8F78B ][ http://inauspicious.org/ ]

From grisha at modpython.org  Fri Aug 16 11:00:11 2002
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 21:52:59 2004
Subject: [mod_python] How to make m_p handle everything
In-Reply-To: <20020816151513.B8120@redhat.com>
Message-ID: <Pine.BSF.4.32.0208161059190.90085-100000@localhost>

Sure - if the script is in the python path somwhere that's how it would
work (unless I'm missing something in your question).

Grisha

On Fri, 16 Aug 2002, Gary Benson wrote:

> Hi,
>
> Is it possible to make a mod_python script handle every request below a
> certain path without using mod_rewrite or similar?
>
> Cheers,
> Gary
>
> [ gbenson@redhat.com ][ GnuPG 85A8F78B ][ http://inauspicious.org/ ]
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://www.modpython.org/mailman/listinfo/mod_python
>


From gbenson at redhat.com  Fri Aug 16 16:24:21 2002
From: gbenson at redhat.com (Gary Benson)
Date: Fri Jan  9 21:52:59 2004
Subject: [mod_python] How to make m_p handle everything
In-Reply-To: <Pine.BSF.4.32.0208161059190.90085-100000@localhost>; from grisha@modpython.org on Fri, Aug 16, 2002 at 11:00:11AM -0400
References: <20020816151513.B8120@redhat.com> <Pine.BSF.4.32.0208161059190.90085-100000@localhost>
Message-ID: <20020816162421.C8120@redhat.com>

On Fri, Aug 16, 2002 at 11:00:11AM -0400, Gregory (Grisha) Trubetskoy wrote:

> Sure - if the script is in the python path somwhere that's how it would
> work (unless I'm missing something in your question).

Erm, I'm probably not being very clear.  What I meant was, if I have a
server is there any way to map all requests inside http://foo.bar/webapp
to the same Python script such that http://foo.bar/webapp/baz and
http://foo.bar/webapp/quux both get served by (say) script.py.

Cheers,
Gary

[ gbenson@redhat.com ][ GnuPG 85A8F78B ][ http://inauspicious.org/ ]

From grisha at modpython.org  Fri Aug 16 11:56:44 2002
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 21:52:59 2004
Subject: [mod_python] How to make m_p handle everything
In-Reply-To: <20020816162421.C8120@redhat.com>
Message-ID: <Pine.BSF.4.32.0208161155110.92319-100000@localhost>

Yes, if for the document root directory you have

SetHandler python-program
PythonHandler script

then every single request on that server will be handled by script.py


On Fri, 16 Aug 2002, Gary Benson wrote:

> On Fri, Aug 16, 2002 at 11:00:11AM -0400, Gregory (Grisha) Trubetskoy wrote:
>
> > Sure - if the script is in the python path somwhere that's how it would
> > work (unless I'm missing something in your question).
>
> Erm, I'm probably not being very clear.  What I meant was, if I have a
> server is there any way to map all requests inside http://foo.bar/webapp
> to the same Python script such that http://foo.bar/webapp/baz and
> http://foo.bar/webapp/quux both get served by (say) script.py.
>
> Cheers,
> Gary
>
> [ gbenson@redhat.com ][ GnuPG 85A8F78B ][ http://inauspicious.org/ ]
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://www.modpython.org/mailman/listinfo/mod_python
>


From gbenson at redhat.com  Fri Aug 16 17:30:37 2002
From: gbenson at redhat.com (Gary Benson)
Date: Fri Jan  9 21:52:59 2004
Subject: [mod_python] How to make m_p handle everything
In-Reply-To: <Pine.BSF.4.32.0208161155110.92319-100000@localhost>; from grisha@modpython.org on Fri, Aug 16, 2002 at 11:56:44AM -0400
References: <20020816162421.C8120@redhat.com> <Pine.BSF.4.32.0208161155110.92319-100000@localhost>
Message-ID: <20020816173037.D8120@redhat.com>

On Fri, Aug 16, 2002 at 11:56:44AM -0400, Gregory (Grisha) Trubetskoy wrote:

> Yes, if for the document root directory you have
> 
> SetHandler python-program
> PythonHandler script
> 
> then every single request on that server will be handled by script.py

Oh yeah, I so should have been able to work that one out. /me slaps head.

Thanks for the help,
Gary

[ gbenson@redhat.com ][ GnuPG 85A8F78B ][ http://inauspicious.org/ ]

From thm at duke.edu  Fri Aug 16 13:22:30 2002
From: thm at duke.edu (Hunter Matthews)
Date: Fri Jan  9 21:52:59 2004
Subject: [mod_python] Complicated GET configuration
Message-ID: <1029518551.1517.29.camel@jade.biology.duke.edu>

I've got a configuration requirement for mod_python that I'm not sure
how to fill. I think I'm about 90% of the way there, but...

Basically I'm writing a server for a client I don't control. The client
can put out 2 kinds of requests.

POST requests that are simple XMLRPC calls. 
One of the idiosyncrases of the client is that the URL that is requested
is ALWAYS just /XMLRPC  - there is no script name or whatever.
I can handler these fine with the following config snippet:

<Location /XMLRPC>
    SetHandler python-program
    PythonHandler current_apache
</Location>


The GET requests have me stymied - to transfer big files, the client
uses GET requests. I'd like to have apache itself do the actual shifting
of bits, and just let my server application handle the authentication
that is required.

What I had as a first attempt was:
<Location /XMLRPC/$RHN>
    SetHandler python-program
    PythonAuthzHandler current_apache
</Location>

But this is clearly wrong (and it doesn't work, either :) 
Because I have the SetHandler, mod_python tries to handle ALL the
different parts of the request, when I only want it to handle the Authz
stage: if that PythonAuthzHandler returns  apache.OK, then I would like 
apache to pick up the URL and just fling it back at the client - the
python part is done.

If any other information is needed, please let me know.

Please note I can't change the client.

-- 
Hunter Matthews                          Unix / Network Administrator
Office: BioScience 145/244               Duke Univ. Biology Department
Key: F0F88438 / FFB5 34C0 B350 99A4 BB02  9779 A5DB 8B09 F0F8 8438
Never take candy from strangers. Especially on the internet.


From vmilitaru at sympatico.ca  Fri Aug 16 14:47:17 2002
From: vmilitaru at sympatico.ca (vio)
Date: Fri Jan  9 21:53:00 2004
Subject: [mod_python] Questions for the FAQ - please check and confirm (req.write() and return) also docs update ...
In-Reply-To: <Pine.BSF.4.32.0208160856250.89789-100000@localhost>; from grisha@modpython.org on Fri, Aug 16, 2002 at 09:00:14AM -0400
References: <1029500235.2093.18.camel@kernel> <Pine.BSF.4.32.0208160856250.89789-100000@localhost>
Message-ID: <20020816144717.A345@eye.neb>

Same here. My handler builds dynamic pages using successive calls to
req.write() with no problems. In fact, the only issue here might rather be 
whether it is better (as in 'less expensive') to 'assemble' the document in 
memory and send it in one swoop to the client, as opposed to sending it 
in many calls to req.write().
In other words, whether it's preferable to assemble a dynamic document at
the server level, or at the client level. I would tend to believe 
the former is better, because it reduces network traffic. Though I could be
mistaking. But mod_python definitely allows both strategies.

Vio

* Gregory (Grisha) Trubetskoy <grisha@modpython.org> [020816 14:23]:
> 
> 
> On 16 Aug 2002, Fabian Fagerholm wrote:
> 
> > If you're using the Publisher handler, you can use req.write() once,
> > but then you *have* to return something at the end of your function,
> > or things won't work.
> 
> You should be able to use write() many times as you like. It should also
> be ok to return an empty string *if* you have written something with
> write(), otherwise returning an empty document will cause a problem with
> Netscape at least.
> 
> Grisha
> 
> 
> 
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://www.modpython.org/mailman/listinfo/mod_python

From vmilitaru at sympatico.ca  Fri Aug 16 15:26:07 2002
From: vmilitaru at sympatico.ca (vio)
Date: Fri Jan  9 21:53:00 2004
Subject: [mod_python] Complicated GET configuration
In-Reply-To: <1029518551.1517.29.camel@jade.biology.duke.edu>; from thm@duke.edu on Fri, Aug 16, 2002 at 01:22:30PM -0400
References: <1029518551.1517.29.camel@jade.biology.duke.edu>
Message-ID: <20020816152607.B345@eye.neb>

* Hunter Matthews <thm@duke.edu> [020816 14:24]:
> 
> (...)
>
> What I had as a first attempt was:
> <Location /XMLRPC/$RHN>
>     SetHandler python-program
>     PythonAuthzHandler current_apache
> </Location>
> 
> But this is clearly wrong (and it doesn't work, either :) 
> Because I have the SetHandler, mod_python tries to handle ALL the
> different parts of the request, when I only want it to handle the Authz
> stage: if that PythonAuthzHandler returns  apache.OK, then I would like 
> apache to pick up the URL and just fling it back at the client - the
> python part is done.

My recalling of the mod_python manual reading (at least over a month old now,
so I might be wrong here) is that Apache handles requests in stages. And
with mod_python you pick and choose which stages you want to handle. 
But you never have to handle ALL stages.
Have you checked the tutorial file 'tut-more-complicated.html'?
I see there talk about 'PythonAuthenHandler', but nothing about
'PythonAuthzHandler' you are referring to here (a typo?).

I don't know if this is of any help, but an example of the different way 
GET and POST are handled, which I found quite useful, is illustrated in 
'util.py/class FieldStorage/__init__'.

Hope this helps,
Vio

From thm at duke.edu  Fri Aug 16 15:58:10 2002
From: thm at duke.edu (Hunter Matthews)
Date: Fri Jan  9 21:53:00 2004
Subject: [mod_python] Complicated GET configuration
In-Reply-To: <20020816152607.B345@eye.neb>
References: <1029518551.1517.29.camel@jade.biology.duke.edu> 
	<20020816152607.B345@eye.neb>
Message-ID: <1029527890.1312.9.camel@jade.biology.duke.edu>

On Fri, 2002-08-16 at 16:26, vio wrote:
> * Hunter Matthews <thm@duke.edu> [020816 14:24]:
> > 
> > (...)
> >
> > What I had as a first attempt was:
> > <Location /XMLRPC/$RHN>
> >     SetHandler python-program
> >     PythonAuthzHandler current_apache
> > </Location>
> > 
> > But this is clearly wrong (and it doesn't work, either :) 
> > Because I have the SetHandler, mod_python tries to handle ALL the
> > different parts of the request, when I only want it to handle the Authz
> > stage: if that PythonAuthzHandler returns  apache.OK, then I would like 
> > apache to pick up the URL and just fling it back at the client - the
> > python part is done.
> 
> My recalling of the mod_python manual reading (at least over a month old now,
> so I might be wrong here) is that Apache handles requests in stages. And
> with mod_python you pick and choose which stages you want to handle. 

Thats what I need to know here - how to choose to handle the Authz
stage, without choosing to handle the main default stage (throwing bits
down the socket).

> But you never have to handle ALL stages.
> Have you checked the tutorial file 'tut-more-complicated.html'?
> I see there talk about 'PythonAuthenHandler', but nothing about
> 'PythonAuthzHandler' you are referring to here (a typo?).

There is a reference to it on:
http://www.modpython.org/live/mod_python-2.7.8/doc-html/dir-handlers-syn.html

and running strings on the mod_python.so shows that it is there. There
is a reference to it in the mailing list archives.



> I don't know if this is of any help, but an example of the different way 
> GET and POST are handled, which I found quite useful, is illustrated in 
> 'util.py/class FieldStorage/__init__'.

The goal here is that if the URL is 
/XMLRPC/$RHN/anything

that we always run the Authz handler, and nothing else.

But since the requests aren't to a specific script 
(like /XMLRPC/$RHN/redhat-7.3-i386/listPackages/200208142123/script.py)

but are instead 
/XMLRPC/$RHN/redhat-7.3-i386/listPackages/200208142123

I'm not at all certain how to say

'''
For all URLs under /XMLRPC/$RHN
Please use the Authz handler to make sure the client is authorized,
and if so,
apache please send the client the file that was requested.
'''


> 
> Hope this helps,
> Vio
> 
> 
-- 
Hunter Matthews                          Unix / Network Administrator
Office: BioScience 145/244               Duke Univ. Biology Department
Key: F0F88438 / FFB5 34C0 B350 99A4 BB02  9779 A5DB 8B09 F0F8 8438
Never take candy from strangers. Especially on the internet.


From johannes at erdfelt.com  Fri Aug 16 16:09:07 2002
From: johannes at erdfelt.com (Johannes Erdfelt)
Date: Fri Jan  9 21:53:00 2004
Subject: [mod_python] Complicated GET configuration
In-Reply-To: <1029518551.1517.29.camel@jade.biology.duke.edu>; from thm@duke.edu on Fri, Aug 16, 2002 at 01:22:30PM -0400
References: <1029518551.1517.29.camel@jade.biology.duke.edu>
Message-ID: <20020816160907.J3414@sventech.com>

On Fri, Aug 16, 2002, Hunter Matthews <thm@duke.edu> wrote:
> 
> I've got a configuration requirement for mod_python that I'm not sure
> how to fill. I think I'm about 90% of the way there, but...
> 
> Basically I'm writing a server for a client I don't control. The client
> can put out 2 kinds of requests.
> 
> POST requests that are simple XMLRPC calls. 
> One of the idiosyncrases of the client is that the URL that is requested
> is ALWAYS just /XMLRPC  - there is no script name or whatever.
> I can handler these fine with the following config snippet:
> 
> <Location /XMLRPC>
>     SetHandler python-program
>     PythonHandler current_apache
> </Location>
> 
> The GET requests have me stymied - to transfer big files, the client
> uses GET requests. I'd like to have apache itself do the actual shifting
> of bits, and just let my server application handle the authentication
> that is required.
> 
> What I had as a first attempt was:
> <Location /XMLRPC/$RHN>
>     SetHandler python-program
>     PythonAuthzHandler current_apache
> </Location>
> 
> But this is clearly wrong (and it doesn't work, either :) 
> Because I have the SetHandler, mod_python tries to handle ALL the
> different parts of the request, when I only want it to handle the Authz
> stage: if that PythonAuthzHandler returns  apache.OK, then I would like 
> apache to pick up the URL and just fling it back at the client - the
> python part is done.
> 
> If any other information is needed, please let me know.

Drop the SetHandler then. All you need is the PythonAuthzHandler portion
and it'll do the right thing.

I do something like this:

  <FilesMatch "\.(m3u|mp3)$">
    PythonPath "sys.path+['/web/americandnb.com/python']"
    PythonAccessHandler m3u
  </FilesMatch>

And the m3u module does referer checking so people don't link directly
to the mp3's. If the Referer fails, we redirect to the main HTML for
that file (specific to our setup).

JE


From vmilitaru at sympatico.ca  Fri Aug 16 15:58:59 2002
From: vmilitaru at sympatico.ca (vio)
Date: Fri Jan  9 21:53:00 2004
Subject: [mod_python] Questions for the FAQ - please check and confirm (req.write() and return) also docs update ...
In-Reply-To: <200208162131.33048.mateusz@ant.gliwice.pl>; from mateusz@ant.gliwice.pl on Fri, Aug 16, 2002 at 09:31:33PM +0200
References: <1029500235.2093.18.camel@kernel> <Pine.BSF.4.32.0208160856250.89789-100000@localhost> <20020816144717.A345@eye.neb> <200208162131.33048.mateusz@ant.gliwice.pl>
Message-ID: <20020816155859.A419@eye.neb>

* Mateusz Korniak <mateusz@ant.gliwice.pl> [020816 15:26]:
> On Friday 16 August 2002 21:47, vio wrote:
> > Same here. My handler builds dynamic pages using successive calls to
> > req.write() with no problems. In fact, the only issue here might rather be
> > whether it is better (as in 'less expensive') to 'assemble' the document in
> > memory and send it in one swoop to the client, as opposed to sending it
> > in many calls to req.write().
> > In other words, whether it's preferable to assemble a dynamic document at
> > the server level, or at the client level. I would tend to believe
> > the former is better, because it reduces network traffic. Though I could be
> > mistaking. But mod_python definitely allows both strategies.
> >
> 
> Yes. But what in publisher handler case ?
> Can you use req.write() instead of returning page ?
> I get Internal server error in that case ... :(

I don't quite understand your question. req.write() IS the returning page.
But I think I know where the bobo is: it's the Internal server error message.

Try the following:
I am assuming you are using the out-of-the-box publisher. I suspect the problem
is not necessarily the 'req.write(), calls, so I suggest you try the following
debugging technique to find out your 'real' bug (you will have to modify the 
publisher.py like following):

somewhere before beginning of the handler() routine, add:
"""
# debugging LOG file - use this instead of '_REQUEST.write()' for debugging
LOG = open('/path/to/.../LOG', "a")
"""

then, find each line in publisher.py:
"""
return apache.HTTP_INTERNAL_SERVER_ERROR
"""

and modify it like this:
"""
LOG.write('line ...\n') # current line number in publisher.py
LOG.flush()
return apache.HTTP_INTERNAL_SERVER_ERROR
"""

This will help you pinpoint exactly who/what throws that Server Error message.
(just read the LOG file). Then work your way from there. I bet your problem
is not your req.write() calls, but something you don't even expect.

Debugging mod_python scripts is tricky, because you can not always write 
debugging messages to the browser. My solution is to use a LOG file.

Hope this helps. (It sure helped me a lot this far).
Vio

From ian at veryfresh.com  Fri Aug 16 13:27:45 2002
From: ian at veryfresh.com (Ian Clelland)
Date: Fri Jan  9 21:53:00 2004
Subject: [mod_python] Complicated GET configuration
In-Reply-To: <1029518551.1517.29.camel@jade.biology.duke.edu>
References: <1029518551.1517.29.camel@jade.biology.duke.edu>
Message-ID: <20020816202745.GE11141@fullfactor.com>

On Fri, Aug 16, 2002 at 01:22:30PM -0400, Hunter Matthews wrote:
> POST requests that are simple XMLRPC calls. 
> One of the idiosyncrases of the client is that the URL that is requested
> is ALWAYS just /XMLRPC  - there is no script name or whatever.
> I can handler these fine with the following config snippet:
> 
> <Location /XMLRPC>
>     SetHandler python-program
>     PythonHandler current_apache
> </Location>
> 
> 
> The GET requests have me stymied - to transfer big files, the client
> uses GET requests. I'd like to have apache itself do the actual shifting
> of bits, and just let my server application handle the authentication
> that is required.
> 
> What I had as a first attempt was:
> <Location /XMLRPC/$RHN>
>     SetHandler python-program
>     PythonAuthzHandler current_apache
> </Location>
> 
> But this is clearly wrong (and it doesn't work, either :) 
> Because I have the SetHandler, mod_python tries to handle ALL the
> different parts of the request, when I only want it to handle the Authz
> stage: if that PythonAuthzHandler returns  apache.OK, then I would like 
> apache to pick up the URL and just fling it back at the client - the
> python part is done.

Because of the <Location> directive, Apache will hand all requests for 
/XMLRPC and any URL below that to your python module. If you don't want 
mod_python to handle the GET requests underneath /XMLRPC, then your 
handler should return apache.DECLINED if req.uri != '/XMLRPC'.

Also, as far as I understand it, the SetHandler directive shouldn't be 
required in order to invoke a PythonAuthzHandler, but I could be wrong. 
(Not that it will make a difference in your case; the SetHandler for 
/XMLRPC will also affect the /XMLRPC/$RHN subdirectory anyway)


Ian Clelland
<ian@veryfresh.com>

From vmilitaru at sympatico.ca  Fri Aug 16 16:27:01 2002
From: vmilitaru at sympatico.ca (vio)
Date: Fri Jan  9 21:53:00 2004
Subject: [mod_python] Complicated GET configuration
In-Reply-To: <1029527890.1312.9.camel@jade.biology.duke.edu>; from thm@duke.edu on Fri, Aug 16, 2002 at 03:58:10PM -0400
References: <1029518551.1517.29.camel@jade.biology.duke.edu> <20020816152607.B345@eye.neb> <1029527890.1312.9.camel@jade.biology.duke.edu>
Message-ID: <20020816162701.A456@eye.neb>

* Hunter Matthews <thm@duke.edu> [020816 15:59]:
> ...
> There is a reference to it on:
> http://www.modpython.org/live/mod_python-2.7.8/doc-html/dir-handlers-syn.html

I see it. But I don't see 'PythonAuthzHandler' referenced anywhere in the 
main docs at
http://www.modpython.org/live/mod_python-2.7.8/doc-html/
I wonder why it's not documented?

> The goal here is that if the URL is 
> /XMLRPC/$RHN/anything
> 
> that we always run the Authz handler, and nothing else.
> 
> But since the requests aren't to a specific script 
> (like /XMLRPC/$RHN/redhat-7.3-i386/listPackages/200208142123/script.py)
> 
> but are instead 
> /XMLRPC/$RHN/redhat-7.3-i386/listPackages/200208142123
> 
> I'm not at all certain how to say
> 
> '''
> For all URLs under /XMLRPC/$RHN
> Please use the Authz handler to make sure the client is authorized,
> and if so,
> apache please send the client the file that was requested.
> '''

If I understand correctly, you only want to use the Authz handler from
mod_python, and nothing else.
I don't see a problem here, except for the undocumented Authz.
The way I would handle your problem whould be to just follow the instructions
in 'tut-more-complicated.html', see if it flies:

<Directory /XMLRPC/$RHN>
    AddHandler python-program .py
#    PythonHandler myscript - comment out to let Apache handle it
    PythonAuthenHandler yourAuthenScript
    AuthType Basic
    AuthName "Restricted Area"
    require valid-user
</Directory>


Have you tried something like this? (you'll have to write your own Authen 
handler, as described in 'tut-more-complicated.html')

Vio

From thm at duke.edu  Fri Aug 16 16:40:43 2002
From: thm at duke.edu (Hunter Matthews)
Date: Fri Jan  9 21:53:00 2004
Subject: [mod_python] Complicated GET configuration
In-Reply-To: <20020816202745.GE11141@fullfactor.com>
References: <1029518551.1517.29.camel@jade.biology.duke.edu> 
	<20020816202745.GE11141@fullfactor.com>
Message-ID: <1029530494.1195.22.camel@jade.biology.duke.edu>

On Fri, 2002-08-16 at 16:27, Ian Clelland wrote:

> Because of the <Location> directive, Apache will hand all requests for 
> /XMLRPC and any URL below that to your python module. If you don't want 
> mod_python to handle the GET requests underneath /XMLRPC, then your 
> handler should return apache.DECLINED if req.uri != '/XMLRPC'.

I switched to <Location ~ "/XMLRPC$">

So right now my apache config looks like: 

Alias /XMLRPC/$RHN/ /local/linux/current/www/

<Directory /local/linux>
    # I realize that the default config is to have symlinks on, but the 
    # current part should stand on its own.
    Options FollowSymLinks
    AllowOverride None
</Directory>

<Location ~ "/XMLRPC$">
    PythonPath "sys.path+['/usr/share/current']"
    SetHandler python-program
    PythonHandler current_apache
</Location>

<Location /XMLRPC/$RHN>
    PythonPath "sys.path+['/usr/share/current']"
    PythonAuthzHandler current_apache
</Location>



> 
> Also, as far as I understand it, the SetHandler directive shouldn't be 
> required in order to invoke a PythonAuthzHandler, but I could be wrong. 
> (Not that it will make a difference in your case; the SetHandler for 
> /XMLRPC will also affect the /XMLRPC/$RHN subdirectory anyway)

That would be ideal. However, with the following code in 
/usr/share/current/current_apache.py:

def authzhandler(req):
    """ temp function for testing"""

    apache.log_error("Inside the authzhandler!")
    apache.log_error("method = %s" % req.method)
    apache.log_error("headers = %s" % pprint.pprint(req.headers_in))

    return apache.OK


After an apache restart (to make sure all the updated modules get
reloaded) I'm not seeing any of those log_errors in the error file.
Once I see something (anything) I'll replace that code with the real
thing.

I appreciate the help from the list.





-- 
Hunter Matthews                          Unix / Network Administrator
Office: BioScience 145/244               Duke Univ. Biology Department
Key: F0F88438 / FFB5 34C0 B350 99A4 BB02  9779 A5DB 8B09 F0F8 8438
Never take candy from strangers. Especially on the internet.


From thm at duke.edu  Fri Aug 16 17:05:28 2002
From: thm at duke.edu (Hunter Matthews)
Date: Fri Jan  9 21:53:00 2004
Subject: [mod_python] Complicated GET configuration
In-Reply-To: <1029530494.1195.22.camel@jade.biology.duke.edu>
References: <1029518551.1517.29.camel@jade.biology.duke.edu> 
	<20020816202745.GE11141@fullfactor.com> 
	<1029530494.1195.22.camel@jade.biology.duke.edu>
Message-ID: <1029531928.1195.28.camel@jade.biology.duke.edu>

On Fri, 2002-08-16 at 16:40, Hunter Matthews wrote:
> On Fri, 2002-08-16 at 16:27, Ian Clelland wrote:
> 
> > Because of the <Location> directive, Apache will hand all requests for 
> > /XMLRPC and any URL below that to your python module. If you don't want 
> > mod_python to handle the GET requests underneath /XMLRPC, then your 
> > handler should return apache.DECLINED if req.uri != '/XMLRPC'.
> 
> I switched to <Location ~ "/XMLRPC$">
> 
> So right now my apache config looks like: 
> 
> Alias /XMLRPC/$RHN/ /local/linux/current/www/
> 
> <Directory /local/linux>
>     # I realize that the default config is to have symlinks on, but the 
>     # current part should stand on its own.
>     Options FollowSymLinks
>     AllowOverride None
> </Directory>
> 
> <Location ~ "/XMLRPC$">
>     PythonPath "sys.path+['/usr/share/current']"
>     SetHandler python-program
>     PythonHandler current_apache
> </Location>
> 
> <Location /XMLRPC/$RHN>
>     PythonPath "sys.path+['/usr/share/current']"
>     PythonAuthzHandler current_apache
> </Location>
> 
> 
> 
> > 
> > Also, as far as I understand it, the SetHandler directive shouldn't be 
> > required in order to invoke a PythonAuthzHandler, but I could be wrong. 
> > (Not that it will make a difference in your case; the SetHandler for 
> > /XMLRPC will also affect the /XMLRPC/$RHN subdirectory anyway)
> 
> That would be ideal. However, with the following code in 
> /usr/share/current/current_apache.py:
> 
> def authzhandler(req):
>     """ temp function for testing"""
> 
>     apache.log_error("Inside the authzhandler!")
>     apache.log_error("method = %s" % req.method)
>     apache.log_error("headers = %s" % pprint.pprint(req.headers_in))
> 
>     return apache.OK
> 
> 
> After an apache restart (to make sure all the updated modules get
> reloaded) I'm not seeing any of those log_errors in the error file.
> Once I see something (anything) I'll replace that code with the real
> thing.
> 
> I appreciate the help from the list.

Sorry to spam the list so hard today, but I've figured one piece of it
out:

def authzhandler(req):
    """ temp function for testing"""
 
    apache.log_error("Inside the authzhandler!")
    apache.log_error("method = %s" % req.method)
    apache.log_error("headers = %s" % pprint.pprint(req.headers_in))

    return apache.OK

This code still results in nothing in my logs. On the theory that
perhaps it was undocumented for a reason, I tried a different (nearly
random) handler:


def headerparserhandler(req):
    """ temp function for testing"""

    apache.log_error("Inside the headerparserhandler!")
    apache.log_error("method = %s" % req.method)
#    apache.log_error("headers = %s" % pprint.pprint(req.headers_in))
    for key in req.headers_in.keys():
        apache.log_error("hdr[%s] = %s" % (key, req.headers_in[key]))
    return apache.HTTP_UNAUTHORIZED                      

AND THIS WORKS JUST FINE!

If anyone on the list has any ideas why the authz handler, which
_looked_ like the handler I should use (using HTTP request headers to
determine if a client was authorized to make this request), isn't
working, I'd still appreciate knowing. 

However, I should be able to use this handler or maybe even
PythonAuthenHandler, so its not a critical issue for me now.

THanks everyone.

-- 
Hunter Matthews                          Unix / Network Administrator
Office: BioScience 145/244               Duke Univ. Biology Department
Key: F0F88438 / FFB5 34C0 B350 99A4 BB02  9779 A5DB 8B09 F0F8 8438
Never take candy from strangers. Especially on the internet.


From mateusz at ant.gliwice.pl  Fri Aug 16 23:22:37 2002
From: mateusz at ant.gliwice.pl (Mateusz Korniak)
Date: Fri Jan  9 21:53:00 2004
Subject: [mod_python] req.write() in publisher_handler
In-Reply-To: <20020816155859.A419@eye.neb>
References: <1029500235.2093.18.camel@kernel> <200208162131.33048.mateusz@ant.gliwice.pl> <20020816155859.A419@eye.neb>
Message-ID: <200208162322.37479.mateusz@ant.gliwice.pl>

On Friday 16 August 2002 22:58, vio wrote:
> * Mateusz Korniak <mateusz@ant.gliwice.pl> [020816 15:26]:
> > Yes. But what in publisher handler case ?
> > Can you use req.write() instead of returning page ?
> > I get Internal server error in that case ... :(
>
> I don't quite understand your question. req.write() IS the returning page.
> But I think I know where the bobo is: it's the Internal server error
> message.

So let me be ( I hope) much more clear: Below my publisher handler:

import mod_python.apache
page = """<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<html><head><title>Test page</title></head>
<body> Test </body> </html>"""

def req_write(req):
	req.status = mod_python.apache.OK
	req.content_type = "text/html; charset=utf-8"
	req.send_http_header()
	req.write(page)
	open("/tmp/marker","w") # Test if we have exceptions 
		#before returning from handler

def req_return(req):
	req.status = mod_python.apache.OK
	req.content_type = "text/html; charset=utf-8"
	req.send_http_header()
	return page

http://abbon.ant.vpn/test.py/req_return - returns what expected
while 
http://abbon.ant.vpn/test.py/req_write returns more some additional data 
(reaching marker):

<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<html><head><title>Test page</title></head>
<body> Test </body> </html>HTTP/1.1 500 Internal Server Error
Date: Fri, 16 Aug 2002 21:11:31 GMT
Server: Apache/1.3.26 (Unix)  (PLD/Linux) mod_python/2.7.8 Python/2.2.1
Transfer-Encoding: chunked
Content-Type: text/html; charset=iso-8859-1

<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML 2.0//EN">
<HTML><HEAD>
<TITLE>500 Internal Server Error</TITLE>
</HEAD><BODY>
<H1>Internal Server Error</H1>
The server encountered an internal error or
misconfiguration and was unable to complete
your request.<P>
Please contact the server administrator,
 matkor@ant.gliwice.pl and inform them of the time the error occurred,
and anything you might have done that may have
caused the error.<P>
More information about this error may be available
in the server error log.<P>
<P>Additionally, a 500 Internal Server Error
error was encountered while trying to use an ErrorDocument to handle the 
request.
<HR>
<ADDRESS>Apache/1.3.26 Server at <A 
HREF="mailto:matkor@ant.gliwice.pl">abbon.ant.vpn</A> Port 80</ADDRESS>
</BODY></HTML>


As far I understand publisher both results should be the same ...
Perhaps my mod_python /apache are broken ?

-- 
Mateusz Korniak



From johannes at erdfelt.com  Fri Aug 16 17:25:45 2002
From: johannes at erdfelt.com (Johannes Erdfelt)
Date: Fri Jan  9 21:53:00 2004
Subject: [mod_python] req.write() in publisher_handler
In-Reply-To: <200208162322.37479.mateusz@ant.gliwice.pl>; from mateusz@ant.gliwice.pl on Fri, Aug 16, 2002 at 11:22:37PM +0200
References: <1029500235.2093.18.camel@kernel> <200208162131.33048.mateusz@ant.gliwice.pl> <20020816155859.A419@eye.neb> <200208162322.37479.mateusz@ant.gliwice.pl>
Message-ID: <20020816172545.K3414@sventech.com>

On Fri, Aug 16, 2002, Mateusz Korniak <mateusz@ant.gliwice.pl> wrote:
> On Friday 16 August 2002 22:58, vio wrote:
> > * Mateusz Korniak <mateusz@ant.gliwice.pl> [020816 15:26]:
> > > Yes. But what in publisher handler case ?
> > > Can you use req.write() instead of returning page ?
> > > I get Internal server error in that case ... :(
> >
> > I don't quite understand your question. req.write() IS the returning page.
> > But I think I know where the bobo is: it's the Internal server error
> > message.
> 
> So let me be ( I hope) much more clear: Below my publisher handler:
> 
> import mod_python.apache
> page = """<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
> <html><head><title>Test page</title></head>
> <body> Test </body> </html>"""
> 
> def req_write(req):
> 	req.status = mod_python.apache.OK
> 	req.content_type = "text/html; charset=utf-8"
> 	req.send_http_header()
> 	req.write(page)
> 	open("/tmp/marker","w") # Test if we have exceptions 
> 		#before returning from handler
	return ""

Add that.

JE


From mateusz at ant.gliwice.pl  Fri Aug 16 23:30:04 2002
From: mateusz at ant.gliwice.pl (Mateusz Korniak)
Date: Fri Jan  9 21:53:00 2004
Subject: [mod_python] req.write() in publisher_handler
In-Reply-To: <20020816172545.K3414@sventech.com>
References: <1029500235.2093.18.camel@kernel> <200208162322.37479.mateusz@ant.gliwice.pl> <20020816172545.K3414@sventech.com>
Message-ID: <200208162330.04157.mateusz@ant.gliwice.pl>

On Friday 16 August 2002 23:25, Johannes Erdfelt wrote:
> On Fri, Aug 16, 2002, Mateusz Korniak <mateusz@ant.gliwice.pl> wrote:
> > On Friday 16 August 2002 22:58, vio wrote:
> > > * Mateusz Korniak <mateusz@ant.gliwice.pl> [020816 15:26]:
> > > > Yes. But what in publisher handler case ?
> > > > Can you use req.write() instead of returning page ?
> > > > I get Internal server error in that case ... :(
> > >
> > > I don't quite understand your question. req.write() IS the returning
> > > page. But I think I know where the bobo is: it's the Internal server
> > > error message.
> >
> > So let me be ( I hope) much more clear: Below my publisher handler:
> >
> > import mod_python.apache
> > page = """<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
> > <html><head><title>Test page</title></head>
> > <body> Test </body> </html>"""
> >
> > def req_write(req):
> > 	req.status = mod_python.apache.OK
> > 	req.content_type = "text/html; charset=utf-8"
> > 	req.send_http_header()
> > 	req.write(page)
> > 	open("/tmp/marker","w") # Test if we have exceptions
> > 		#before returning from handler
>
> 	return ""
>
> Add that.
>
In my enviroment it doesn't change a thing :(

-- 
Mateusz Korniak



From johannes at erdfelt.com  Fri Aug 16 17:31:53 2002
From: johannes at erdfelt.com (Johannes Erdfelt)
Date: Fri Jan  9 21:53:00 2004
Subject: [mod_python] req.write() in publisher_handler
In-Reply-To: <200208162330.04157.mateusz@ant.gliwice.pl>; from mateusz@ant.gliwice.pl on Fri, Aug 16, 2002 at 11:30:04PM +0200
References: <1029500235.2093.18.camel@kernel> <200208162322.37479.mateusz@ant.gliwice.pl> <20020816172545.K3414@sventech.com> <200208162330.04157.mateusz@ant.gliwice.pl>
Message-ID: <20020816173153.L3414@sventech.com>

On Fri, Aug 16, 2002, Mateusz Korniak <mateusz@ant.gliwice.pl> wrote:
> On Friday 16 August 2002 23:25, Johannes Erdfelt wrote:
> > On Fri, Aug 16, 2002, Mateusz Korniak <mateusz@ant.gliwice.pl> wrote:
> > > On Friday 16 August 2002 22:58, vio wrote:
> > > > * Mateusz Korniak <mateusz@ant.gliwice.pl> [020816 15:26]:
> > > > > Yes. But what in publisher handler case ?
> > > > > Can you use req.write() instead of returning page ?
> > > > > I get Internal server error in that case ... :(
> > > >
> > > > I don't quite understand your question. req.write() IS the returning
> > > > page. But I think I know where the bobo is: it's the Internal server
> > > > error message.
> > >
> > > So let me be ( I hope) much more clear: Below my publisher handler:
> > >
> > > import mod_python.apache
> > > page = """<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
> > > <html><head><title>Test page</title></head>
> > > <body> Test </body> </html>"""
> > >
> > > def req_write(req):
> > > 	req.status = mod_python.apache.OK
> > > 	req.content_type = "text/html; charset=utf-8"
> > > 	req.send_http_header()
> > > 	req.write(page)
> > > 	open("/tmp/marker","w") # Test if we have exceptions
> > > 		#before returning from handler
> >
> > 	return ""
> >
> > Add that.
>
> In my enviroment it doesn't change a thing :(

Are you sure that open call isn't causing any exceptions?

Try commenting it out and testing.

Also, are you restarting the server when you're testing?

JE


From mateusz at ant.gliwice.pl  Fri Aug 16 23:35:56 2002
From: mateusz at ant.gliwice.pl (Mateusz Korniak)
Date: Fri Jan  9 21:53:00 2004
Subject: [mod_python] req.write() in publisher_handler
In-Reply-To: <20020816173153.L3414@sventech.com>
References: <1029500235.2093.18.camel@kernel> <200208162330.04157.mateusz@ant.gliwice.pl> <20020816173153.L3414@sventech.com>
Message-ID: <200208162335.56958.mateusz@ant.gliwice.pl>

On Friday 16 August 2002 23:31, Johannes Erdfelt wrote:
> On Fri, Aug 16, 2002, Mateusz Korniak <mateusz@ant.gliwice.pl> wrote:
> > On Friday 16 August 2002 23:25, Johannes Erdfelt wrote:
> > > On Fri, Aug 16, 2002, Mateusz Korniak <mateusz@ant.gliwice.pl> wrote:
> > > > On Friday 16 August 2002 22:58, vio wrote:
> > > > > * Mateusz Korniak <mateusz@ant.gliwice.pl> [020816 15:26]:
> > > > > > Yes. But what in publisher handler case ?
> > > > > > Can you use req.write() instead of returning page ?
> > > > > > I get Internal server error in that case ... :(
> > > > >
> > > > > I don't quite understand your question. req.write() IS the
> > > > > returning page. But I think I know where the bobo is: it's the
> > > > > Internal server error message.
> > > >
> > > > So let me be ( I hope) much more clear: Below my publisher handler:
> > > >
> > > > import mod_python.apache
> > > > page = """<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0
> > > > Transitional//EN"> <html><head><title>Test page</title></head>
> > > > <body> Test </body> </html>"""
> > > >
> > > > def req_write(req):
> > > > 	req.status = mod_python.apache.OK
> > > > 	req.content_type = "text/html; charset=utf-8"
> > > > 	req.send_http_header()
> > > > 	req.write(page)
> > > > 	open("/tmp/marker","w") # Test if we have exceptions
> > > > 		#before returning from handler
> > >
> > > 	return ""
> > >
> > > Add that.
> >
> > In my enviroment it doesn't change a thing :(
>
> Are you sure that open call isn't causing any exceptions?
> Try commenting it out and testing.

Nope - it works the same with or wihout it
( I added it due Vio's suggestion).

> Also, are you restarting the server when you're testing?

I think it's not neccessary as I change main file of publisher handler - but 
to be absolutely sure - I do hard reset of apache after every change. Result 
remains same.

So it turns out that my apche/mod_python is broken ?

-- 
Mateusz Korniak
"Black holes are where God divided by zero." - Steven Wright


From ian at veryfresh.com  Fri Aug 16 14:37:22 2002
From: ian at veryfresh.com (Ian Clelland)
Date: Fri Jan  9 21:53:00 2004
Subject: [ian@veryfresh.com: Re: [mod_python] Complicated GET configuration]
Message-ID: <20020816213722.GG11141@fullfactor.com>

----- Forwarded message from Ian Clelland <ian@veryfresh.com> -----

Date: Fri, 16 Aug 2002 14:24:39 -0700
From: Ian Clelland <ian@veryfresh.com>
To: Hunter Matthews <thm@duke.edu>
Cc: mod_python@mod_python.org
Subject: Re: [mod_python] Complicated GET configuration
In-Reply-To: <1029531928.1195.28.camel@jade.biology.duke.edu>
User-Agent: Mutt/1.3.27i

On Fri, Aug 16, 2002 at 05:05:28PM -0400, Hunter Matthews wrote:
> If anyone on the list has any ideas why the authz handler, which
> _looked_ like the handler I should use (using HTTP request headers to
> determine if a client was authorized to make this request), isn't
> working, I'd still appreciate knowing. 

Is it possible that Apache doesn't call an Authz handler unless some 
other conditions are present? From your sample configuration, I see 
that you haven't set up any AuthType, AuthName, or AuthenHandler (not 
even the standard mod_auth). Apache may have decided that there's no 
way to get a username:password from the client, and so isn't running 
the AuthzHandler.

Just a thought.. I'm running some quick tests here on your 
configuration to see why it doesn't work (and it doesn't, even here). I 
have had PythonAuthenHandlers and PythonAuthzHandlers working in the 
past, though.


----- End forwarded message -----

From ian at veryfresh.com  Fri Aug 16 14:51:37 2002
From: ian at veryfresh.com (Ian Clelland)
Date: Fri Jan  9 21:53:00 2004
Subject: [mod_python] Complicated GET configuration
In-Reply-To: <1029531928.1195.28.camel@jade.biology.duke.edu>
References: <1029518551.1517.29.camel@jade.biology.duke.edu> <20020816202745.GE11141@fullfactor.com> <1029530494.1195.22.camel@jade.biology.duke.edu> <1029531928.1195.28.camel@jade.biology.duke.edu>
Message-ID: <20020816215137.GH11141@fullfactor.com>

On Fri, Aug 16, 2002 at 05:05:28PM -0400, Hunter Matthews wrote:
> If anyone on the list has any ideas why the authz handler, which
> _looked_ like the handler I should use (using HTTP request headers to
> determine if a client was authorized to make this request), isn't
> working, I'd still appreciate knowing. 
 
After playing with it for about 20 minutes, I managed to get your authorization handler to run on my machine. This appears to be a minimal configuration:

Apache http.conf:

<VirtualHost *:80>
  ServerName pytest.zoostation
  DocumentRoot /var/local/apache/htdocs/pytest
  Alias /XMLRPC/$RHN /home/ian/pytest

  <Directory /home/pytest>
    Options FollowSymLinks
    AllowOverride None
  </Directory>

  <Location ~ "/XMLRPC$">
    PythonPath "sys.path+['/home/ian/src/pytest']"
    SetHandler python-program
    PythonHandler current_apache
  </Location>

  <Location /XMLRPC/$RHN>
    AuthName 'Restricted Area'
    AuthType Basic
    PythonPath "sys.path+['/home/ian/src/pytest']"
    PythonAuthenHandler current_apache
    PythonAuthzHandler current_apache
    require valid-user
  </Location>

</VirtualHost>


current_apache.py:

from mod_python import apache

def authenhandler(req):
    """ temp function for testing.
        this version accepts any username and password
    """

    apache.log_error("Inside the authenhandler!", apache.APLOG_NOERRNO & apache.APLOG_ERR)
    apache.log_error("method = %s" % req.method, apache.APLOG_NOERRNO & apache.APLOG_ERR)
    apache.log_error("headers = %s" % `req.headers_in`, apache.APLOG_NOERRNO & apache.APLOG_ERR)

    pw = req.get_basic_auth_pw()
    if req.connection.user == None:
      return apache.HTTP_UNAUTHORIZED

    return apache.OK

def authzhandler(req):
    """ temp function for testing
        this version accepts all users for all uris
    """

    apache.log_error("Inside the authzhandler!", apache.APLOG_NOERRNO & apache.APLOG_ERR)
    apache.log_error("method = %s" % req.method, apache.APLOG_NOERRNO & apache.APLOG_ERR)
    apache.log_error("headers = %s" % `req.headers_in`, apache.APLOG_NOERRNO & apache.APLOG_ERR)

    return apache.OK

def handler(req):
    """ temp function for testing"""

    req.content_type = 'text/html'
    req.send_http_header()
    req.write("<html><body><h1>Testing</h1></body></html>")

    return apache.OK


Explanation:

In the Apache configuration, the line which triggers all of the 
authentication/authorization is the 'require' line. Without this line, 
the AuthenHandler and AuthzHandler will not be called. 'require 
valid-user' seems to be sufficient for most cases, since your 
AuthenHandler can decide who a valid user is, and your AuthzHandler can 
filter out anyone unauthorized.

As soon as you add that line, Apache will report an internal server 
error until you give it an AuthName, AuthType, and some sort of 
Authentication handler. I added a stub handler which accepts any 
username and password.

Once those are all present, then Apache will happily run the 
AuthzHandler whenever the AuthenHandler returns OK.


Hope this helps,

Ian
<ian@veryfresh.com>

From grisha at modpython.org  Fri Aug 16 17:53:13 2002
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 21:53:00 2004
Subject: [mod_python] Complicated GET configuration
In-Reply-To: <1029530494.1195.22.camel@jade.biology.duke.edu>
Message-ID: <Pine.BSF.4.32.0208161751360.96507-100000@localhost>


On 16 Aug 2002, Hunter Matthews wrote:

> def authzhandler(req):
>     """ temp function for testing"""
>
>     apache.log_error("Inside the authzhandler!")
>     apache.log_error("method = %s" % req.method)
>     apache.log_error("headers = %s" % pprint.pprint(req.headers_in))
>
>     return apache.OK
>
>

It's possible that Apache ignores the authz handler unless you have
AuthType, AuthName and require specified. This is definitely true with
respect to authen handler.

BTW, the fact that authz is undocumented is a bug.

Grisha


From vmilitaru at sympatico.ca  Fri Aug 16 18:17:27 2002
From: vmilitaru at sympatico.ca (vio)
Date: Fri Jan  9 21:53:00 2004
Subject: [mod_python] Re: req.write() in publisher_handler
In-Reply-To: <200208162322.37479.mateusz@ant.gliwice.pl>; from mateusz@ant.gliwice.pl on Fri, Aug 16, 2002 at 11:22:37PM +0200
References: <1029500235.2093.18.camel@kernel> <200208162131.33048.mateusz@ant.gliwice.pl> <20020816155859.A419@eye.neb> <200208162322.37479.mateusz@ant.gliwice.pl>
Message-ID: <20020816181726.A590@eye.neb>

Try it like this:

import mod_python.apache
#from mod_python import apache
pageA = """<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<html><head><title>Test page</title></head>
<body>  Page A <br>"""
pageB = "Page B</body> </html>"

def req_write(REQUEST):
  REQUEST.status = mod_python.apache.OK
  REQUEST.content_type = "text/html; charset=utf-8"
  REQUEST.send_http_header()
  REQUEST.write(pageA)
  REQUEST.write(pageB)
  raise mod_python.apache.SERVER_RETURN, mod_python.apache.OK

As you can see, we do multiple writes to the browser.
I tested it on my snake, and it works as advertised.
Vio

* Mateusz Korniak <mateusz@ant.gliwice.pl> [020816 17:31]:
> On Friday 16 August 2002 22:58, vio wrote:
> > * Mateusz Korniak <mateusz@ant.gliwice.pl> [020816 15:26]:
> > > Yes. But what in publisher handler case ?
> > > Can you use req.write() instead of returning page ?
> > > I get Internal server error in that case ... :(
> >
> > I don't quite understand your question. req.write() IS the returning page.
> > But I think I know where the bobo is: it's the Internal server error
> > message.
> 
> So let me be ( I hope) much more clear: Below my publisher handler:
> 
> import mod_python.apache
> page = """<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
> <html><head><title>Test page</title></head>
> <body> Test </body> </html>"""
> 
> def req_write(req):
> 	req.status = mod_python.apache.OK
> 	req.content_type = "text/html; charset=utf-8"
> 	req.send_http_header()
> 	req.write(page)
> 	open("/tmp/marker","w") # Test if we have exceptions 
> 		#before returning from handler
> 
> def req_return(req):
> 	req.status = mod_python.apache.OK
> 	req.content_type = "text/html; charset=utf-8"
> 	req.send_http_header()
> 	return page
> 
> http://abbon.ant.vpn/test.py/req_return - returns what expected
> while 
> http://abbon.ant.vpn/test.py/req_write returns more some additional data 
> (reaching marker):
> 
> <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
> <html><head><title>Test page</title></head>
> <body> Test </body> </html>HTTP/1.1 500 Internal Server Error
> Date: Fri, 16 Aug 2002 21:11:31 GMT
> Server: Apache/1.3.26 (Unix)  (PLD/Linux) mod_python/2.7.8 Python/2.2.1
> Transfer-Encoding: chunked
> Content-Type: text/html; charset=iso-8859-1
> 
> <!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML 2.0//EN">
> <HTML><HEAD>
> <TITLE>500 Internal Server Error</TITLE>
> </HEAD><BODY>
> <H1>Internal Server Error</H1>
> The server encountered an internal error or
> misconfiguration and was unable to complete
> your request.<P>
> Please contact the server administrator,
>  matkor@ant.gliwice.pl and inform them of the time the error occurred,
> and anything you might have done that may have
> caused the error.<P>
> More information about this error may be available
> in the server error log.<P>
> <P>Additionally, a 500 Internal Server Error
> error was encountered while trying to use an ErrorDocument to handle the 
> request.
> <HR>
> <ADDRESS>Apache/1.3.26 Server at <A 
> HREF="mailto:matkor@ant.gliwice.pl">abbon.ant.vpn</A> Port 80</ADDRESS>
> </BODY></HTML>
> 
> 
> As far I understand publisher both results should be the same ...
> Perhaps my mod_python /apache are broken ?
> 
> -- 
> Mateusz Korniak
> 

From mateusz at ant.gliwice.pl  Sat Aug 17 00:59:51 2002
From: mateusz at ant.gliwice.pl (Mateusz Korniak)
Date: Fri Jan  9 21:53:00 2004
Subject: [mod_python] Re: req.write() in publisher_handler
In-Reply-To: <20020816181726.A590@eye.neb>
References: <1029500235.2093.18.camel@kernel> <200208162322.37479.mateusz@ant.gliwice.pl> <20020816181726.A590@eye.neb>
Message-ID: <200208170059.51538.mateusz@ant.gliwice.pl>

On Saturday 17 August 2002 01:17, vio wrote:
> Try it like this:
>
> import mod_python.apache
> #from mod_python import apache
> pageA = """<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
> <html><head><title>Test page</title></head>
> <body>  Page A <br>"""
> pageB = "Page B</body> </html>"
>
> def req_write(REQUEST):
>   REQUEST.status = mod_python.apache.OK
>   REQUEST.content_type = "text/html; charset=utf-8"
>   REQUEST.send_http_header()
>   REQUEST.write(pageA)
>   REQUEST.write(pageB)
>   raise mod_python.apache.SERVER_RETURN, mod_python.apache.OK

Yop :) raising  mod_python.apache.SERVER_RETURN instead of returning does the 
trick.

Also making req.write(d1)  ___and__ returning d2 sth sensible makes both 
(d1+d2) send to browser without error. I would guess that code runed after 
returning from handler gets confused by ""/None value returned by handler ...

-- 
Mateusz Korniak



From thm at duke.edu  Fri Aug 16 20:12:01 2002
From: thm at duke.edu (Hunter Matthews)
Date: Fri Jan  9 21:53:00 2004
Subject: [mod_python] Complicated GET configuration
In-Reply-To: <20020816215137.GH11141@fullfactor.com>
References: <1029518551.1517.29.camel@jade.biology.duke.edu>
	<20020816202745.GE11141@fullfactor.com>
	<1029530494.1195.22.camel@jade.biology.duke.edu>
	<1029531928.1195.28.camel@jade.biology.duke.edu> 
	<20020816215137.GH11141@fullfactor.com>
Message-ID: <1029543172.1195.39.camel@jade.biology.duke.edu>

On Fri, 2002-08-16 at 17:51, Ian Clelland wrote:
> On Fri, Aug 16, 2002 at 05:05:28PM -0400, Hunter Matthews wrote:
> > If anyone on the list has any ideas why the authz handler, which
> > _looked_ like the handler I should use (using HTTP request headers to
> > determine if a client was authorized to make this request), isn't
> > working, I'd still appreciate knowing. 
>  
> After playing with it for about 20 minutes, I managed to get your authorization handler to run on my machine. This appears to be a minimal configuration:
> 
> Apache http.conf:
> 
> <VirtualHost *:80>
>   ServerName pytest.zoostation
>   DocumentRoot /var/local/apache/htdocs/pytest
>   Alias /XMLRPC/$RHN /home/ian/pytest
> 
>   <Directory /home/pytest>
>     Options FollowSymLinks
>     AllowOverride None
>   </Directory>
> 
>   <Location ~ "/XMLRPC$">
>     PythonPath "sys.path+['/home/ian/src/pytest']"
>     SetHandler python-program
>     PythonHandler current_apache
>   </Location>
> 
>   <Location /XMLRPC/$RHN>
>     AuthName 'Restricted Area'
>     AuthType Basic
>     PythonPath "sys.path+['/home/ian/src/pytest']"
>     PythonAuthenHandler current_apache
>     PythonAuthzHandler current_apache
>     require valid-user
>   </Location>
> 
> </VirtualHost>
> 
> 
> current_apache.py:
> 
> from mod_python import apache
> 
> def authenhandler(req):
>     """ temp function for testing.
>         this version accepts any username and password
>     """
> 
>     apache.log_error("Inside the authenhandler!", apache.APLOG_NOERRNO & apache.APLOG_ERR)
>     apache.log_error("method = %s" % req.method, apache.APLOG_NOERRNO & apache.APLOG_ERR)
>     apache.log_error("headers = %s" % `req.headers_in`, apache.APLOG_NOERRNO & apache.APLOG_ERR)
> 
>     pw = req.get_basic_auth_pw()
>     if req.connection.user == None:
>       return apache.HTTP_UNAUTHORIZED
> 
>     return apache.OK
> 
> def authzhandler(req):
>     """ temp function for testing
>         this version accepts all users for all uris
>     """
> 
>     apache.log_error("Inside the authzhandler!", apache.APLOG_NOERRNO & apache.APLOG_ERR)
>     apache.log_error("method = %s" % req.method, apache.APLOG_NOERRNO & apache.APLOG_ERR)
>     apache.log_error("headers = %s" % `req.headers_in`, apache.APLOG_NOERRNO & apache.APLOG_ERR)
> 
>     return apache.OK
> 
> def handler(req):
>     """ temp function for testing"""
> 
>     req.content_type = 'text/html'
>     req.send_http_header()
>     req.write("<html><body><h1>Testing</h1></body></html>")
> 
>     return apache.OK
> 
> 
> Explanation:
> 
> In the Apache configuration, the line which triggers all of the 
> authentication/authorization is the 'require' line. Without this line, 
> the AuthenHandler and AuthzHandler will not be called. 'require 
> valid-user' seems to be sufficient for most cases, since your 
> AuthenHandler can decide who a valid user is, and your AuthzHandler can 
> filter out anyone unauthorized.
> 
> As soon as you add that line, Apache will report an internal server 
> error until you give it an AuthName, AuthType, and some sort of 
> Authentication handler. I added a stub handler which accepts any 
> username and password.
> 
> Once those are all present, then Apache will happily run the 
> AuthzHandler whenever the AuthenHandler returns OK.

Wow. You are amazing. Thank you.

In this particular application, I don't think the authorization will
work quite like that: 

I don't get a user:password from a browser, this is an xmlrpc client
that sends authentication/authorization information in custom HTTP
headers. 

If you are deciding to allow or deny access based just on the contents
of headers, which Handler would you pick?

In testing here, it appears that PythonHeaderParserHandler works - it
can look at the headers in req.headers_in, and simply return apache.OK
or apache.HTTP_UNAUTHORIZED.

Again, wow. Thank you for deciphering this for me: this is my first
mod_python app.


> 
> 
> Hope this helps,
> 
> Ian
> <ian@veryfresh.com>
> 
> 
-- 
Hunter Matthews                          Unix / Network Administrator
Office: BioScience 145/244               Duke Univ. Biology Department
Key: F0F88438 / FFB5 34C0 B350 99A4 BB02  9779 A5DB 8B09 F0F8 8438
Never take candy from strangers. Especially on the internet.


From thm at duke.edu  Fri Aug 16 20:59:42 2002
From: thm at duke.edu (Hunter Matthews)
Date: Fri Jan  9 21:53:00 2004
Subject: [mod_python] Complicated GET configuration
In-Reply-To: <1029543172.1195.39.camel@jade.biology.duke.edu>
References: <1029518551.1517.29.camel@jade.biology.duke.edu>
	<20020816202745.GE11141@fullfactor.com>
	<1029530494.1195.22.camel@jade.biology.duke.edu>
	<1029531928.1195.28.camel@jade.biology.duke.edu> 
	<20020816215137.GH11141@fullfactor.com> 
	<1029543172.1195.39.camel@jade.biology.duke.edu>
Message-ID: <1029545983.1312.44.camel@jade.biology.duke.edu>

On Fri, 2002-08-16 at 20:12, Hunter Matthews wrote:
> > As soon as you add that line, Apache will report an internal server 
> > error until you give it an AuthName, AuthType, and some sort of 
> > Authentication handler. I added a stub handler which accepts any 
> > username and password.
> > 
> > Once those are all present, then Apache will happily run the 
> > AuthzHandler whenever the AuthenHandler returns OK.

Answered my own question - 

> In this particular application, I don't think the authorization will
> work quite like that: 
> 
> I don't get a user:password from a browser, this is an xmlrpc client
> that sends authentication/authorization information in custom HTTP
> headers. 
> 
> If you are deciding to allow or deny access based just on the contents
> of headers, which Handler would you pick?

Authen and Authz - you simply do whatever authentication and
authorization you want - if you're not doing user/password, don't call
those apache methods - roll your own.

Again, thanks to everyone on the list, esp Ian, who helped me understand
just how this works.

-- 
Hunter Matthews                          Unix / Network Administrator
Office: BioScience 145/244               Duke Univ. Biology Department
Key: F0F88438 / FFB5 34C0 B350 99A4 BB02  9779 A5DB 8B09 F0F8 8438
Never take candy from strangers. Especially on the internet.


From grisha at modpython.org  Fri Aug 16 22:25:58 2002
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 21:53:00 2004
Subject: [mod_python] Complicated GET configuration
In-Reply-To: <1029543172.1195.39.camel@jade.biology.duke.edu>
Message-ID: <Pine.BSF.4.32.0208162223250.202-100000@localhost>


On 16 Aug 2002, Hunter Matthews wrote:

> In testing here, it appears that PythonHeaderParserHandler works - it
> can look at the headers in req.headers_in, and simply return apache.OK
> or apache.HTTP_UNAUTHORIZED.

Consider having it return apache.DECLINED instead of apache.OK to let the
default handler and other modules parse headers as well.

Grisha


From alex at morrison.king.net.nz  Sat Aug 17 16:29:15 2002
From: alex at morrison.king.net.nz (Alex King)
Date: Fri Jan  9 21:53:00 2004
Subject: [mod_python] How do I use PythonTransHandler?
Message-ID: <20020817042915.GB1172@morrison.king.net.nz>

Quoting a previos post, by Ian Clelland:

>PythonTransHandler, which will receive all requests, and has the chance 
>to modify the URL before Apache passes the request to your main
>handler.

How do I use this?

From peter.bittner at gmx.net  Sat Aug 17 08:06:26 2002
From: peter.bittner at gmx.net (Peter Bittner)
Date: Fri Jan  9 21:53:01 2004
Subject: [Fwd: [mod_python] Messages not getting through to list server?]
References: <Pine.BSF.4.32.0208160840230.89789-100000@localhost>
Message-ID: <27256.1029564386@www40.gmx.net>

Why not move to a newsgroup solution completely? (Say,
comp.lang.python.modpython)

I would really appreciate that. I'd really prefer that.

These days it's simple and straightforward for everyone to read newsgroups
using http://groups.google.com - even if you don't have a newsreader.

Peter

"Gregory (Grisha) Trubetskoy" wrote:
> 
> My appologies - the list indeed seemed to have had a problem. I'm getting
> increasingly more dissatisfied with mailman - it has this "feature" where
> messages to domains whose MX's cannot be looked up (probably because the
> domain is no longer registered or DNS is down) clog up the entire list.
> 
> I've upgraded to 2.0.12 version of mailman, of this doesn't make it
> better, I will look for other software.
> 
> Thanks to all who made offers to host - so far hosting is not a problem.
> I'm not very keen on having the list at Sourceforge - I'd rather have more
> control over it, also I don't know how long Sourceforge will be around -
> these days nothing is certain. So far only CVS is hosted there.
> 
> Grisha
> 

-- 
GMX - Die Kommunikationsplattform im Internet.
http://www.gmx.net


From ian at veryfresh.com  Sat Aug 17 00:11:33 2002
From: ian at veryfresh.com (Ian Clelland)
Date: Fri Jan  9 21:53:01 2004
Subject: [mod_python] Complicated GET configuration
In-Reply-To: <1029543172.1195.39.camel@jade.biology.duke.edu>
References: <1029518551.1517.29.camel@jade.biology.duke.edu> <20020816202745.GE11141@fullfactor.com> <1029530494.1195.22.camel@jade.biology.duke.edu> <1029531928.1195.28.camel@jade.biology.duke.edu> <20020816215137.GH11141@fullfactor.com> <1029543172.1195.39.camel@jade.biology.duke.edu>
Message-ID: <20020817071133.GI11141@fullfactor.com>

On Fri, Aug 16, 2002 at 08:12:01PM -0400, Hunter Matthews wrote:
> In this particular application, I don't think the authorization will
> work quite like that: 
> 
> I don't get a user:password from a browser, this is an xmlrpc client
> that sends authentication/authorization information in custom HTTP
> headers. 
> 
> If you are deciding to allow or deny access based just on the contents
> of headers, which Handler would you pick?
> 
> In testing here, it appears that PythonHeaderParserHandler works - it
> can look at the headers in req.headers_in, and simply return apache.OK
> or apache.HTTP_UNAUTHORIZED.

Well, if you're not using standard HTTP authentication (specifically, if
you're not using the WWW-Authenticate and Authorization headers,) then
maybe the best handler to use would be a PythonAccessHandler. Access
control handlers are generally free to deny access to a resource based
on any criteria you want. They will usually return an apache.HTTP_FORBIDDEN
(403) if access is denied, but you can make it return whatever you want.

Technically, you are not supposed to return a 401 (Unauthorized) status
code unless you are also including a WWW-Authenticate header, but it
really comes down to doing what the client expects, especially if the
client is non-interactive.

> Again, wow. Thank you for deciphering this for me: this is my first
> mod_python app.

You're welcome -- I'm just glad I could be of help


Ian
<ian@veryfresh.com>

From ian at veryfresh.com  Sat Aug 17 00:44:09 2002
From: ian at veryfresh.com (Ian Clelland)
Date: Fri Jan  9 21:53:01 2004
Subject: [mod_python] How do I use PythonTransHandler?
In-Reply-To: <20020817042915.GB1172@morrison.king.net.nz>
References: <20020817042915.GB1172@morrison.king.net.nz>
Message-ID: <20020817074409.GJ11141@fullfactor.com>

On Sat, Aug 17, 2002 at 04:29:15PM +1200, Alex King wrote:
> Quoting a previos post, by Ian Clelland:
> 
> >PythonTransHandler, which will receive all requests, and has the chance 
> >to modify the URL before Apache passes the request to your main
> >handler.
> 
> How do I use this?
 
The same way you would set a regular PythonHandler, you can set up 
Apache to use a PythonTransHandler:

<VirtualHost *:80>
  ServerName pytest.zoostation
  DocumentRoot /var/local/apache/htdocs/pytest
  PythonPath "sys.path+['/home/ian/src/pytest']"
  PythonTransHandler translate_test
</VirtualHost>

And then just write the python module to set the filename attribute:

def transhandler(req):
    req.filename = '/var/local/apache/htdocs/pytest/test2.html'
    return apache.OK

> My problem is that the request object members such as filename and the
> like are read-only, so how do I pass the new filename back to apache?

Well, req.filename is definitely _not_ read-only. This may be another
bug in the documentation, but the code is there in requestobject.c to
set that attribute. I just ran a couple of tests, and I can set the
filename for a request, and Apache will return that file.

The problem I can see right now is that there appears to be no way to
get the DocumentRoot for the current request. You shouldn't have a 
problem if your cached files are completly outside of your DocumentRoot 
(and you have the absolute path available to your handler,) but you 
might have a hard time if you want to translate a URL to another file 
within your DocumentRoot, and don't want to put the full path inside 
your source files.


Ian Clelland
<ian@veryfresh.com>

From alex at morrison.king.net.nz  Sat Aug 17 20:37:43 2002
From: alex at morrison.king.net.nz (Alex King)
Date: Fri Jan  9 21:53:01 2004
Subject: [mod_python] How do I use PythonTransHandler?
In-Reply-To: <20020817074409.GJ11141@fullfactor.com>
References: <20020817042915.GB1172@morrison.king.net.nz> <20020817074409.GJ11141@fullfactor.com>
Message-ID: <20020817083743.GA5349@morrison.king.net.nz>

On Sat, Aug 17, 2002 at 12:44:09AM -0700, Ian Clelland wrote:
> On Sat, Aug 17, 2002 at 04:29:15PM +1200, Alex King wrote:
> > Quoting a previos post, by Ian Clelland:
> > 
> > >PythonTransHandler, which will receive all requests, and has the chance 
> > >to modify the URL before Apache passes the request to your main
> > >handler.
> > 
> > How do I use this?
>  
> The same way you would set a regular PythonHandler, you can set up 
> Apache to use a PythonTransHandler:
> 
> <VirtualHost *:80>
>   ServerName pytest.zoostation
>   DocumentRoot /var/local/apache/htdocs/pytest
>   PythonPath "sys.path+['/home/ian/src/pytest']"

ahh - that's how you do it.  I expected the DocumentRoot to be added to
the sys.path by mod_python, but it wasn't  I ended up putting my script
in /usr/local/lib/python2.1/site-packages/ to get it in the path.  I
overlooked PythonPath for some reason...

>   PythonTransHandler translate_test
> </VirtualHost>
> 
> And then just write the python module to set the filename attribute:
> 
> def transhandler(req):
>     req.filename = '/var/local/apache/htdocs/pytest/test2.html'
>     return apache.OK
> 
> > My problem is that the request object members such as filename and the
> > like are read-only, so how do I pass the new filename back to apache?
> 
> Well, req.filename is definitely _not_ read-only. This may be another
> bug in the documentation, but the code is there in requestobject.c to
> set that attribute. I just ran a couple of tests, and I can set the
> filename for a request, and Apache will return that file.
> 
OK, cool that's how I expected it to work.  The read-only note beside
the req.filename in the docs put me off though and I didn't actually try
it.  Perhaps the request filename is read-only by the time it get to the
main request handler?  In the docs I have, all the members of the rquest
structure are noted to be read-only except for content_type, headers_in,
headers_out, and err_headers_out.  Perhaps those read-only notes in the
docs are all in relation to the main request handler, not to all
handlers in general.

Anyway this makes me much happier :)

> The problem I can see right now is that there appears to be no way to
> get the DocumentRoot for the current request. You shouldn't have a 
> problem if your cached files are completly outside of your DocumentRoot 
> (and you have the absolute path available to your handler,) but you 
> might have a hard time if you want to translate a URL to another file 
> within your DocumentRoot, and don't want to put the full path inside 
> your source files.

Yeah, I discovered that.  I was looking at req.get_config() to see what
it returned, it only seems to return module specific configs.  If it
returned all the configs I would have picked DocumentRoot out of that.
Instead I'm going to ignore DocumentRoot and set various directories to
be used for the cache etc. with PythonOption directives in the apache
config.

Another problem I'm having is not understanding req.add_handler().  I
thought I'd have code to determince whether to take special action in
the PythonTransHandler (ie. download a file not in cache).  If a
download is needed, the transhandler runs
req.add_handler("PythonHandler","padcache") where padcache.py is my
script in /usr/local/lib/python2.1/site-packages/.

I'm probably not understanding the second argument to the function, or
perhaps it's a path problem again, but I keep getting a traceback:
[Sat Aug 17 20:29:48 2002] [error] PythonHandler padcache: Traceback (most recent call last):
[Sat Aug 17 20:29:48 2002] [error] PythonHandler padcache:   File "/usr/lib/python2.1/site-packages/mod_python/apache.py", line 176, in Dispatch
    dir = _req.get_all_dirs()[htype]
[Sat Aug 17 20:29:48 2002] [error] PythonHandler padcache: KeyError: PythonHandler

What I am wanting to achieve is to normally not have a python handler
run for the main handler, so no PythonHandler is specified in the
config, but in cases when transhandler determines that it does need to
be run, it is added with add_handler()

> 
> 
> Ian Clelland

Thanks for your quick response :)

Alex

From alex at morrison.king.net.nz  Sat Aug 17 20:46:45 2002
From: alex at morrison.king.net.nz (Alex King)
Date: Fri Jan  9 21:53:01 2004
Subject: [mod_python] How do I use PythonTransHandler?
In-Reply-To: <20020817074409.GJ11141@fullfactor.com>
References: <20020817042915.GB1172@morrison.king.net.nz> <20020817074409.GJ11141@fullfactor.com>
Message-ID: <20020817084645.GA5534@morrison.king.net.nz>

> 
> Well, req.filename is definitely _not_ read-only. This may be another
> bug in the documentation, but the code is there in requestobject.c to
> set that attribute. I just ran a couple of tests, and I can set the
> filename for a request, and Apache will return that file.
> 
I forgot to mention I was using debian woody (stable), with mod_python
version 2.7.8

From ian at veryfresh.com  Sat Aug 17 03:36:06 2002
From: ian at veryfresh.com (Ian Clelland)
Date: Fri Jan  9 21:53:01 2004
Subject: [mod_python] How do I use PythonTransHandler?
In-Reply-To: <20020817083743.GA5349@morrison.king.net.nz>
References: <20020817042915.GB1172@morrison.king.net.nz> <20020817074409.GJ11141@fullfactor.com> <20020817083743.GA5349@morrison.king.net.nz>
Message-ID: <20020817103606.GK11141@fullfactor.com>

On Sat, Aug 17, 2002 at 08:37:43PM +1200, Alex King wrote:
> > The problem I can see right now is that there appears to be no way to
> > get the DocumentRoot for the current request. You shouldn't have a 
> > problem if your cached files are completly outside of your DocumentRoot 
> > (and you have the absolute path available to your handler,) but you 
> > might have a hard time if you want to translate a URL to another file 
> > within your DocumentRoot, and don't want to put the full path inside 
> > your source files.
> 
> Yeah, I discovered that.  I was looking at req.get_config() to see what
> it returned, it only seems to return module specific configs.  If it
> returned all the configs I would have picked DocumentRoot out of that.
> Instead I'm going to ignore DocumentRoot and set various directories to
> be used for the cache etc. with PythonOption directives in the apache
> config.

That's what I'd suggest -- if you really need to use your document root,
then add a PythonOption with the same value to your server config. I
looked at get_config (and the less-documented get_all_config) and it
only gets the configuration directives which are specific to mod_python.

mod_perl seems to have a document_root() method for its request object;
I haven't looked too closely at how it gets that from Apache, though. It
would be a nice addition to mod_python (hint, hint :) )


> Another problem I'm having is not understanding req.add_handler().  I
> thought I'd have code to determince whether to take special action in
> the PythonTransHandler (ie. download a file not in cache).  If a
> download is needed, the transhandler runs
> req.add_handler("PythonHandler","padcache") where padcache.py is my
> script in /usr/local/lib/python2.1/site-packages/.
> 
> I'm probably not understanding the second argument to the function, or
> perhaps it's a path problem again, but I keep getting a traceback:
> [Sat Aug 17 20:29:48 2002] [error] PythonHandler padcache: Traceback (most recent call last):
> [Sat Aug 17 20:29:48 2002] [error] PythonHandler padcache:   File "/usr/lib/python2.1/site-packages/mod_python/apache.py", line 176, in Dispatch
>     dir = _req.get_all_dirs()[htype]
> [Sat Aug 17 20:29:48 2002] [error] PythonHandler padcache: KeyError: PythonHandler


Try using req.add_handler("PythonHandler", "padcache::handler"). I'm not
sure where the "::" notation comes from -- it appears to be internal to
mod_python, or perhaps to python itself. Either way, I think you need to
specify both the module name (padcache) and the handler function
(usually just 'handler' for content handlers).

Note: I haven't tried this one myself; that's just what I can glean from
the documentation.

> Thanks for your quick response :)

No problem -- but now I've got to get some sleep :)

Later,

Ian
<ian@veryfresh.com>

From alain at onesite.org  Sat Aug 17 20:32:49 2002
From: alain at onesite.org (Alain Tesio)
Date: Fri Jan  9 21:53:01 2004
Subject: [mod_python] Ping?
In-Reply-To: <20020714135537.A278@eye.neb>
References: <Pine.LNX.4.44.0207131250410.31967-100000@slippy.wire.rat>
	<20020714135537.A278@eye.neb>
Message-ID: <20020817203249.5363f531.alain@onesite.org>

On Sun, 14 Jul 2002 13:55:37 -0500
vio <vmilitaru@sympatico.ca> wrote:

> Possible solution (provided this message make it to the list): how about 
> migrating modpython to 'sourceforge'? It's totally
> free and they do an outstanding hosting job.


Sourceforge is moving progressively from free (as in free speech) to
proprietary, read this on lwn : http://lwn.net/Articles/7480/

It makes it hard to move a project out of sourceforge if you change
your mind.

Savannah is a free clone of sourceforge : http://savannah.gnu.org/

For the mailing list, I could host it, I already have some mailman lists,
the administrator can contact me if needed.

Alain

From daniel at copyleft.no  Sat Aug 17 21:18:52 2002
From: daniel at copyleft.no (Hr. Daniel Mikkelsen)
Date: Fri Jan  9 21:53:01 2004
Subject: [mod_python] Ping?
In-Reply-To: <20020817203249.5363f531.alain@onesite.org>
Message-ID: <20020817211821.W1331-100000@unity.copyleft.no>

On Sat, 17 Aug 2002, Alain Tesio wrote:

> Sourceforge is moving progressively from free (as in free speech) to
> proprietary, read this on lwn : http://lwn.net/Articles/7480/

> It makes it hard to move a project out of sourceforge if you change
> your mind.

I agree. We should stay away from sourceforge.

-- Daniel


From mk at lrn.ru  Sat Aug 17 21:46:04 2002
From: mk at lrn.ru (Michael Krasnovsky)
Date: Fri Jan  9 21:53:01 2004
Subject: [mod_python] encodings (codecs)
Message-ID: <20020817214604.30f73b6b.mk@lrn.ru>

Hi!

I have a problem using encode() method of a string object inside my
publisher handlers. I get LookupError: unknown encoding. 
Here is the sample.

def test(req):
	cnt = "Hello, World Wide!"
	return cnt.encode("utf-8")

BTW, this function works fine being called not from mod_python handler.

How could it be fixed?

Thanks.

Michael.

From tree at basistech.com  Sat Aug 17 17:14:19 2002
From: tree at basistech.com (Tom Emerson)
Date: Fri Jan  9 21:53:01 2004
Subject: [mod_python] encodings (codecs)
In-Reply-To: <20020817214604.30f73b6b.mk@lrn.ru>
References: <20020817214604.30f73b6b.mk@lrn.ru>
Message-ID: <15710.48299.723199.361687@magrathea.basistech.com>

Michael Krasnovsky writes:
> I have a problem using encode() method of a string object inside my
> publisher handlers. I get LookupError: unknown encoding. 
> Here is the sample.

Are you sure the version of Python that is being used by mod_python is
the same as the version that is running from the shell? UTF-8 i one of
the built-in encodings, so I don't think you'll get exception unless
the encoding support isn't there at all.

FWIW I use this functionality all the time from the Publisher and it
works fine.

    -tree

-- 
Tom Emerson                                          Basis Technology Corp.
Software Architect                                 http://www.basistech.com
  "Beware the lollipop of mediocrity: lick it once and you suck forever"

From mk at lrn.ru  Sun Aug 18 12:29:34 2002
From: mk at lrn.ru (Michael Krasnovsky)
Date: Fri Jan  9 21:53:01 2004
Subject: [mod_python] encodings (codecs)
In-Reply-To: <15710.48299.723199.361687@magrathea.basistech.com>
References: <20020817214604.30f73b6b.mk@lrn.ru>
	<15710.48299.723199.361687@magrathea.basistech.com>
Message-ID: <20020818122934.43c707be.mk@lrn.ru>

> Are you sure the version of Python that is being used by mod_python is
> the same as the version that is running from the shell? UTF-8 i one of
> the built-in encodings, so I don't think you'll get exception unless
> the encoding support isn't there at all.

Yes, I'm sure. I have only one version of Python installed - 2.2.1. I
suppose the problem is related somehow to paths resolving during
proceeding my module by mod_python.
But I cannot say how. 
By the way, if I add in sitecustomize.py the line:
sys.path.append('/usr/lib/python2.2/encodings'), I get the next error
message:

  File "/home/mk/tests/biprojects/bisoft/www/test4.py", line 5, in test
    return cnt.encode("utf-8")

  File "/usr/lib/python2.2/encodings/__init__.py", line 51, in
search_function
    mod = __import__(modname,globals(),locals(),'*')

  RuntimeError: cannot unmarshal code objects in restricted execution
mode


> 
> FWIW I use this functionality all the time from the Publisher and it
> works fine.

So, may be something wrong in my apache configuration? Could you show
the fragment of your httpd.conf, which  describes mod_python conf.?

Thank you for your help.
Michael.

From mk at lrn.ru  Sun Aug 18 21:46:27 2002
From: mk at lrn.ru (Michael Krasnovsky)
Date: Fri Jan  9 21:53:01 2004
Subject: [mod_python] encodings (codecs)
In-Reply-To: <15710.48299.723199.361687@magrathea.basistech.com>
References: <20020817214604.30f73b6b.mk@lrn.ru>
	<15710.48299.723199.361687@magrathea.basistech.com>
Message-ID: <20020818214627.1f21a41d.mk@lrn.ru>

Hi, Tom!
> 
> FWIW I use this functionality all the time from the Publisher and it
> works fine.

Do you have Python compiled with or without thread support?

From fabbe at paniq.net  Mon Aug 19 11:53:01 2002
From: fabbe at paniq.net (Fabian Fagerholm)
Date: Fri Jan  9 21:53:01 2004
Subject: [mod_python] Questions for the FAQ - please check and confirm
	(req.write() and return) also docs update ...
In-Reply-To: <Pine.BSF.4.32.0208160856250.89789-100000@localhost>
References: <Pine.BSF.4.32.0208160856250.89789-100000@localhost>
Message-ID: <1029747182.1111.17.camel@kernel>

On Fri, 2002-08-16 at 16:00, Gregory (Grisha) Trubetskoy wrote:
> On 16 Aug 2002, Fabian Fagerholm wrote:
> > If you're using the Publisher handler, you can use req.write() once,
> > but then you *have* to return something at the end of your function,
> > or things won't work.
> 
> You should be able to use write() many times as you like. It should also
> be ok to return an empty string *if* you have written something with
> write(), otherwise returning an empty document will cause a problem with
> Netscape at least.

Right, now I have it working. I see now why I was confused. It seems to
me that mod_python is behaving differently at different times. For
example:

If I follow the Tutorial section in the mod_python docs, and create a
directory /home/fabbe/public_html/mod_python/temp_test_1 for my tests,
and in this directory, I place a .htaccess file with the following
contents:

    AddHandler python-program .py
    PythonHandler myscript

just like in the tutorial. Then, I write myscript.py in the same
directory:

    from mod_python import apache
    
    def handler(req):
        req.content_type = "text/plain"
        req.send_http_header()
        req.write("Hello, World!")
    
        return apache.OK
    
I then load ~fabbe/mod_python/temp_test_1/myscript.py from the web
server, and I get the following:

    Hello, World!
    <p>/home/fabbe/public_html/mod_python/temp_test_1/myscript.py</p>
    
which is not what I expected. But when I press reload on my browser, the
last line disappears and everything works as expected *even if I remove
those files and rewrite them, or change 'myscript' to 'fooscript'*!

I don't get it... :)

The apache logs show the following:

First access:
    212.226.163.85 - - [19/Aug/2002:11:34:33 +0300]
     "GET /~fabbe/mod_python/temp_test_1/myscript.py HTTP/1.1" 200 99
     "https://no.paniq.net/~fabbe/mod_python/temp_test_1/" "Mozilla/5.0
     Galeon/1.2.5 (X11; Linux i686; U;) Gecko/20020610 Debian/1.2.5-1"

Subsequent accesses:
    212.226.163.85 - - [19/Aug/2002:11:41:52 +0300]
     "GET /~fabbe/mod_python/temp_test_1/myscript.py HTTP/1.1" 200 25
     "-"
     "Mozilla/5.0 Galeon/1.2.5 (X11; Linux i686; U;) Gecko/20020610
     Debian/1.2.5-1"

The only difference I see compared to the tutorial is that I'm using
https. But that shouldn't affect mod_python, should it?

Could someone clarify?

Cheers,
Fabian



From fabbe at paniq.net  Mon Aug 19 12:21:43 2002
From: fabbe at paniq.net (Fabian Fagerholm)
Date: Fri Jan  9 21:53:01 2004
Subject: [mod_python] Package notation in PythonHandler directive
Message-ID: <1029748903.1111.27.camel@kernel>

Continuing to explore mod_python, I'm having trouble with package
notation in the PythonHandler directive.

I'm looking at the mod_python docs, and the Tutorial section 3.2 in
particular. It suggests that you could have a directory structure as
follows:

<your base dir>
  |
  +- .htaccess (file)
  +- subdir (directory)
      |
      +- myscript.py (file)

The .htaccess file would look as follows:

    AddHandler python-program .py
    PythonHandler subdir.myscript
    
and the myscript.py file in the 'subdir' subdirectory would look as
follows:

    from mod_python import apache
    
    def handler(req):
        req.content_type = "text/plain"
        req.send_http_header()
        req.write("Hello, World!")
    
        return apache.OK

If I do this, I get a 500 Internal Server Error and the following
appears in the apache logs:

    [Mon Aug 19 12:12:57 2002] [error] PythonHandler subdir.myscript:
    Traceback (most recent call last):
    [Mon Aug 19 12:12:57 2002] [error] PythonHandler subdir.myscript:  
    File "/usr/lib/python2.1/site-packages/mod_python/apache.py", line
    181, in Dispatch
        module = import_module(module_name, _req)
    [Mon Aug 19 12:12:57 2002] [error] PythonHandler subdir.myscript:  
    File "/usr/lib/python2.1/site-packages/mod_python/apache.py", line
    332, in import_module
        f, p, d = imp.find_module(parts[i], path)
    [Mon Aug 19 12:12:57 2002] [error] PythonHandler subdir.myscript:
    ImportError: No module named subdir
    
What am I doing wrong?

Cheers,
Fabian



From tree at basistech.com  Mon Aug 19 06:39:54 2002
From: tree at basistech.com (Tom Emerson)
Date: Fri Jan  9 21:53:01 2004
Subject: [mod_python] encodings (codecs)
In-Reply-To: <20020818214627.1f21a41d.mk@lrn.ru>
References: <20020817214604.30f73b6b.mk@lrn.ru>
	<15710.48299.723199.361687@magrathea.basistech.com>
	<20020818214627.1f21a41d.mk@lrn.ru>
Message-ID: <15712.51962.189948.95477@magrathea.basistech.com>

Michael Krasnovsky writes:
> > FWIW I use this functionality all the time from the Publisher and it
> > works fine.
> 
> Do you have Python compiled with or without thread support?

Without: on FreeBSD thread support doesn't work, at least with Apache 1.3.26.

    -tree

-- 
Tom Emerson                                          Basis Technology Corp.
Software Architect                                 http://www.basistech.com
  "Beware the lollipop of mediocrity: lick it once and you suck forever"

From grisha at modpython.org  Mon Aug 19 08:32:26 2002
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 21:53:01 2004
Subject: [mod_python] Package notation in PythonHandler directive
In-Reply-To: <1029748903.1111.27.camel@kernel>
Message-ID: <Pine.BSF.4.32.0208190831110.34551-100000@localhost>

You might need an __init__.py file in subdir in order for this to work.

On 19 Aug 2002, Fabian Fagerholm wrote:

> Continuing to explore mod_python, I'm having trouble with package
> notation in the PythonHandler directive.
>
> I'm looking at the mod_python docs, and the Tutorial section 3.2 in
> particular. It suggests that you could have a directory structure as
> follows:
>
> <your base dir>
>   |
>   +- .htaccess (file)
>   +- subdir (directory)
>       |
>       +- myscript.py (file)
>
> The .htaccess file would look as follows:
>
>     AddHandler python-program .py
>     PythonHandler subdir.myscript
>
> and the myscript.py file in the 'subdir' subdirectory would look as
> follows:
>
>     from mod_python import apache
>
>     def handler(req):
>         req.content_type = "text/plain"
>         req.send_http_header()
>         req.write("Hello, World!")
>
>         return apache.OK
>
> If I do this, I get a 500 Internal Server Error and the following
> appears in the apache logs:
>
>     [Mon Aug 19 12:12:57 2002] [error] PythonHandler subdir.myscript:
>     Traceback (most recent call last):
>     [Mon Aug 19 12:12:57 2002] [error] PythonHandler subdir.myscript:
>     File "/usr/lib/python2.1/site-packages/mod_python/apache.py", line
>     181, in Dispatch
>         module = import_module(module_name, _req)
>     [Mon Aug 19 12:12:57 2002] [error] PythonHandler subdir.myscript:
>     File "/usr/lib/python2.1/site-packages/mod_python/apache.py", line
>     332, in import_module
>         f, p, d = imp.find_module(parts[i], path)
>     [Mon Aug 19 12:12:57 2002] [error] PythonHandler subdir.myscript:
>     ImportError: No module named subdir
>
> What am I doing wrong?
>
> Cheers,
> Fabian
>
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://www.modpython.org/mailman/listinfo/mod_python
>


From grisha at modpython.org  Mon Aug 19 08:37:44 2002
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 21:53:01 2004
Subject: [mod_python] encodings (codecs)
In-Reply-To: <15712.51962.189948.95477@magrathea.basistech.com>
Message-ID: <Pine.BSF.4.32.0208190834120.34551-100000@localhost>

This is just a theory:

If the .so file which provides this functionality was compiled against a
Python different than the one you're using for mod_python, there may be a
problem ("different" could mean that one has thread support and the other
does not, even though they are the same version). Especially on FreeBSD,
where as far as I know thread support implies using a whole different
libc. Try recompiling *and* reinstalling Python without threads and see if
it fixes the problem.

Grisha


On Mon, 19 Aug 2002, Tom Emerson wrote:

> Michael Krasnovsky writes:
> > > FWIW I use this functionality all the time from the Publisher and it
> > > works fine.
> >
> > Do you have Python compiled with or without thread support?
>
> Without: on FreeBSD thread support doesn't work, at least with Apache 1.3.26.
>
>     -tree


From fabbe at paniq.net  Mon Aug 19 16:07:02 2002
From: fabbe at paniq.net (Fabian Fagerholm)
Date: Fri Jan  9 21:53:01 2004
Subject: [mod_python] Package notation in PythonHandler directive
In-Reply-To: <Pine.BSF.4.32.0208190831110.34551-100000@localhost>
References: <Pine.BSF.4.32.0208190831110.34551-100000@localhost>
Message-ID: <1029762422.1111.33.camel@kernel>

> > On 19 Aug 2002, Fabian Fagerholm wrote:
> > Continuing to explore mod_python, I'm having trouble with package
> > notation in the PythonHandler directive.
...
> >     AddHandler python-program .py
> >     PythonHandler subdir.myscript

On Mon, 2002-08-19 at 15:32, Gregory (Grisha) Trubetskoy wrote:
> 
> You might need an __init__.py file in subdir in order for this to work.

You're quite right. Many thanks for this pointer!

For the list archives (and this could be a FAQ item as well):

Since Python 1.5b1, just any directory doesn't qualify as a package. A
package is a directory *with* the __init__.py file.

So my error was entirely Python-related and didn't actually concern
mod_python at all.

Cheers,
Fabian



From jack_diederich at email.com  Tue Aug 20 11:29:17 2002
From: jack_diederich at email.com (Jack Diederich)
Date: Fri Jan  9 21:53:01 2004
Subject: [mod_python] Using non-global python with mod_python
Message-ID: <20020820162917.28271.qmail@email.com>

I just ran into a problem like this previously posted one:
  http://www.modpython.org/pipermail/mod_python/2002-July/002218.html

which gives you the 'could not import mod_python.apache, could not call init'
type of error.  After playing around I figured out that it was looking at
my globally installed copy of Python (/usr/local/python2.2) and NOT the copy I had
passed in to ./configure (/home/www/python2.2)

mod_python properly installed the py's in /home/www/python2.2 tree but it would
never get picked up by apache.  Even adding the home tree with the PythonPath
directive didn't work.  I had to symlink the site-packages directory from
/usr/local to the /home tree.

I couldn't find any reference to the /usr/local directory anywhere in the configured
mod_python tree.

Any guesses where it is getting the idea that everything is under /usr/local?

thanks,

-jack
-- 
__________________________________________________________
Sign-up for your own FREE Personalized E-mail at Mail.com
http://www.mail.com/?sr=signup


From jack_diederich at email.com  Tue Aug 20 11:29:17 2002
From: jack_diederich at email.com (Jack Diederich)
Date: Fri Jan  9 21:53:01 2004
Subject: [mod_python] Using non-global python with mod_python
Message-ID: <20020820162917.28271.qmail@email.com>

I just ran into a problem like this previously posted one:
  http://www.modpython.org/pipermail/mod_python/2002-July/002218.html

which gives you the 'could not import mod_python.apache, could not call init'
type of error.  After playing around I figured out that it was looking at
my globally installed copy of Python (/usr/local/python2.2) and NOT the copy I had
passed in to ./configure (/home/www/python2.2)

mod_python properly installed the py's in /home/www/python2.2 tree but it would
never get picked up by apache.  Even adding the home tree with the PythonPath
directive didn't work.  I had to symlink the site-packages directory from
/usr/local to the /home tree.

I couldn't find any reference to the /usr/local directory anywhere in the configured
mod_python tree.

Any guesses where it is getting the idea that everything is under /usr/local?

thanks,

-jack
-- 
__________________________________________________________
Sign-up for your own FREE Personalized E-mail at Mail.com
http://www.mail.com/?sr=signup


From grisha at modpython.org  Tue Aug 20 13:40:09 2002
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 21:53:01 2004
Subject: [mod_python] Using non-global python with mod_python
In-Reply-To: <20020820162917.28271.qmail@email.com>
Message-ID: <Pine.BSF.4.32.0208201329590.73876-100000@eden.ispol.com>

On Tue, 20 Aug 2002, Jack Diederich wrote:

> I just ran into a problem like this previously posted one:
>   http://www.modpython.org/pipermail/mod_python/2002-July/002218.html

[snip]

> I couldn't find any reference to the /usr/local directory anywhere in the configured
> mod_python tree.
>
> Any guesses where it is getting the idea that everything is under /usr/local?

I think ./configure is getting this idea from the first python it can find
in the path.

Try to run configure like with something like this:

$ PATH=/home/www/python2.2:$PATH ./configure --[your-args]

Grisha



From kevin at vap.org  Tue Aug 20 13:45:25 2002
From: kevin at vap.org (kevin@vap.org)
Date: Fri Jan  9 21:53:02 2004
Subject: [mod_python] IOError: [Errno 2] No such file or directory...(etc)
Message-ID: <291760-220028220174525100@vap.org>

Okay, I know this has been discussed many times before, and I am
aware of the fix on the FAQ.  However, I have a few issues:

1) My error says "IOError" instead of the "OSError" that everyone
else has reported.
2) using Python 2.2.1, Apache 1.3.26, Modpython 2.7.8, on WinXP
3) Since the python patch for this was closed in Aug-2001, any idea
why it isn't in Python 2.2.1, released Apr-2002?  
4) I went ahead & patched pythonrun.c and recompiled my Python 2.2.1.
The FAQ says to rebuild mod_python, but I don't know how to on
Windows, and I suspect 2.7.8 might already have the fix?.  

Can anyone assist with rebuilding mod_python on Windows?  What effect
would that have since it doesn't include pythonrun.c in the
mod_python build?  Any other ideas regarding the problem? (output is
below)

-Kevin

**** output ****

Mod_python error: "PythonHandler mod_python.publisher"

Traceback (most recent call last):

  File "C:\...\python\Lib\mod_python\apache.py", line 193, in Dispatch
    result = object(req)

  File "C:\...\python\Lib\mod_python\publisher.py", line 171, in
handler
    result = apply(object, (), args)

  File "c:/.../mywww\imgsvr.py", line 77, in get
    fd = open( filenm, "rb" )

IOError: [Errno 2] No such file or directory:
'z:\\FILES\\up\\oak_20020730\\01638764.BCK.jpg'

**** end of output ****

Notes:
I'm trying to access a file on my local network.  I have tried
different drive letters on my local network (& UNC paths instead of
drive letters).  The only time it works is when I use the local "C:"
for the path.  Even if I do a "subst e: c:\" and try that (E:\...),
it fails.  I even tried messing with <Directory> entries in Apache to
no avail.

And yes, the code works fine when outside of Apache/Mod_python.


From grisha at modpython.org  Tue Aug 20 14:36:51 2002
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 21:53:02 2004
Subject: [mod_python] IOError: [Errno 2] No such file or directory...(etc)
In-Reply-To: <291760-220028220174525100@vap.org>
Message-ID: <Pine.BSF.4.32.0208201436120.73876-100000@eden.ispol.com>

Might it be that the Z: mapping doesn't exist for whatever user id the
apache service is running under?

Grisha

On Tue, 20 Aug 2002 kevin@vap.org wrote:

> Okay, I know this has been discussed many times before, and I am
> aware of the fix on the FAQ.  However, I have a few issues:
>
> 1) My error says "IOError" instead of the "OSError" that everyone
> else has reported.
> 2) using Python 2.2.1, Apache 1.3.26, Modpython 2.7.8, on WinXP
> 3) Since the python patch for this was closed in Aug-2001, any idea
> why it isn't in Python 2.2.1, released Apr-2002?
> 4) I went ahead & patched pythonrun.c and recompiled my Python 2.2.1.
> The FAQ says to rebuild mod_python, but I don't know how to on
> Windows, and I suspect 2.7.8 might already have the fix?.
>
> Can anyone assist with rebuilding mod_python on Windows?  What effect
> would that have since it doesn't include pythonrun.c in the
> mod_python build?  Any other ideas regarding the problem? (output is
> below)
>
> -Kevin
>
> **** output ****
>
> Mod_python error: "PythonHandler mod_python.publisher"
>
> Traceback (most recent call last):
>
>   File "C:\...\python\Lib\mod_python\apache.py", line 193, in Dispatch
>     result = object(req)
>
>   File "C:\...\python\Lib\mod_python\publisher.py", line 171, in
> handler
>     result = apply(object, (), args)
>
>   File "c:/.../mywww\imgsvr.py", line 77, in get
>     fd = open( filenm, "rb" )
>
> IOError: [Errno 2] No such file or directory:
> 'z:\\FILES\\up\\oak_20020730\\01638764.BCK.jpg'
>
> **** end of output ****
>
> Notes:
> I'm trying to access a file on my local network.  I have tried
> different drive letters on my local network (& UNC paths instead of
> drive letters).  The only time it works is when I use the local "C:"
> for the path.  Even if I do a "subst e: c:\" and try that (E:\...),
> it fails.  I even tried messing with <Directory> entries in Apache to
> no avail.
>
> And yes, the code works fine when outside of Apache/Mod_python.
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://www.modpython.org/mailman/listinfo/mod_python
>


From kevin at vap.org  Tue Aug 20 17:09:46 2002
From: kevin at vap.org (kevin@vap.org)
Date: Fri Jan  9 21:53:02 2004
Subject: [mod_python] IOError: [Errno 2] No such file or directory...(etc)
Message-ID: <35720-22002822021946661@vap.org>

That sounds like a possibility, but it didn't help.  Here is some
more information:

- I changed the Apache service to logon with my username (which also
logs on to our Windows Domain).  No improvement.
- If I just return an HTML tag to have the browser open the graphic
(like <img src="z:\...jpg" />), then access works (probably since it
is under my user id via the browser application).
- I tried the code as a CGI called from Apache and I get the same
error (so I guess it doesn't have anything to do with modpython).


I guess I'll redirect this to an Apache group since it doesn't look
to be caused by modpython.

Any ideas are appreciated, though.

-Kevin



---- Original Message ----
From: grisha@modpython.org
To: kevin@vap.org, 
Subject: Re: [mod_python] IOError: [Errno 2] No such file or
directory...(etc)
Date: Tue, 20 Aug 2002 14:36:51 -0400 (EDT)

>
>Might it be that the Z: mapping doesn't exist for whatever user id 
>the
>apache service is running under?
>
>Grisha
>
>On Tue, 20 Aug 2002 kevin@vap.org wrote:
>
>> Okay, I know this has been discussed many times before, and I am
>> aware of the fix on the FAQ.  However, I have a few issues:
>>
>> 1) My error says "IOError" instead of the "OSError" that everyone
>> else has reported.
>> 2) using Python 2.2.1, Apache 1.3.26, Modpython 2.7.8, on WinXP
>> 3) Since the python patch for this was closed in Aug-2001, any idea
>> why it isn't in Python 2.2.1, released Apr-2002?
>> 4) I went ahead & patched pythonrun.c and recompiled my Python 
>2.2.1.
>> The FAQ says to rebuild mod_python, but I don't know how to on
>> Windows, and I suspect 2.7.8 might already have the fix?.
>>
>> Can anyone assist with rebuilding mod_python on Windows?  What 
>effect
>> would that have since it doesn't include pythonrun.c in the
>> mod_python build?  Any other ideas regarding the problem? (output 
>is
>> below)
>>
>> -Kevin
>>
>> **** output ****
>>
>> Mod_python error: "PythonHandler mod_python.publisher"
>>
>> Traceback (most recent call last):
>>
>>   File "C:\...\python\Lib\mod_python\apache.py", line 193, in 
>Dispatch
>>     result = object(req)
>>
>>   File "C:\...\python\Lib\mod_python\publisher.py", line 171, in
>> handler
>>     result = apply(object, (), args)
>>
>>   File "c:/.../mywww\imgsvr.py", line 77, in get
>>     fd = open( filenm, "rb" )
>>
>> IOError: [Errno 2] No such file or directory:
>> 'z:\\FILES\\up\\oak_20020730\\01638764.BCK.jpg'
>>
>> **** end of output ****
>>
>> Notes:
>> I'm trying to access a file on my local network.  I have tried
>> different drive letters on my local network (& UNC paths instead of
>> drive letters).  The only time it works is when I use the local 
>"C:"
>> for the path.  Even if I do a "subst e: c:\" and try that (E:\...),
>> it fails.  I even tried messing with <Directory> entries in Apache 
>to
>> no avail.
>>
>> And yes, the code works fine when outside of Apache/Mod_python.



From rclilly at lvcm.com  Wed Aug 21 10:44:13 2002
From: rclilly at lvcm.com (Robert Lilly)
Date: Fri Jan  9 21:53:02 2004
Subject: [mod_python] mod_python for Apache 2? (Cross-posted to mod_python & Apache users lists)
Message-ID: <EGEMLKBGPBCGGGFNPMGNGEOFCDAA.rclilly@lvcm.com>

Is there a mod_python.dll for Apache 2? Is it possible to run mod_python
with Apache 2 under Windows 2000? If so, how do I do it.

Currently I've tried adding:

LoadModule python_module modules/mod_python.dll

and

<Directory "E:/My Documents/RCL Enterprises/Web/htdocs/python">
   AddHandler python-program .py
   PythonHandler mptest
   PythonDebug on
</Directory>

to my httpd.conf file, but I get the following error:

Cannot load D:/Program Files/Apache Group/Apache2/modules/mod_python.dll
into server: The specified module could not be found. I put the latest
mod_python.dll I could find into my modules folder.

TIA,

Robert

---
Outgoing mail is certified Virus Free.
Checked by AVG anti-virus system (http://www.grisoft.com).
Version: 6.0.381 / Virus Database: 214 - Release Date: 8/2/2002


From grisha at modpython.org  Wed Aug 21 14:24:46 2002
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 21:53:02 2004
Subject: [mod_python] mod_python for Apache 2? (Cross-posted to mod_python
 & Apache users lists)
In-Reply-To: <EGEMLKBGPBCGGGFNPMGNGEOFCDAA.rclilly@lvcm.com>
Message-ID: <Pine.BSF.4.32.0208211420220.9601-100000@eden.ispol.com>

There is no mod_python.dll for Apache 2 as of yet. Mod_python 3.0 is
approaching beta status rapidly, and I expect to put the beta out in a
week or so, and perhaps someone will care to compile a DLL of it, though I
must admit I've done 0 testing on Windows yet.

Grisha

On Wed, 21 Aug 2002, Robert Lilly wrote:

> Is there a mod_python.dll for Apache 2? Is it possible to run mod_python
> with Apache 2 under Windows 2000? If so, how do I do it.


From rclilly at lvcm.com  Wed Aug 21 13:29:42 2002
From: rclilly at lvcm.com (Robert Lilly)
Date: Fri Jan  9 21:53:02 2004
Subject: [mod_python] mod_python for Apache 2? (Cross-posted to mod_python & Apache users lists)
In-Reply-To: <Pine.BSF.4.32.0208211420220.9601-100000@eden.ispol.com>
Message-ID: <EGEMLKBGPBCGGGFNPMGNGEOJCDAA.rclilly@lvcm.com>

Thanks Grisha! Will you be announcing to the list when it's released?

> -----Original Message-----
> From: Gregory (Grisha) Trubetskoy [mailto:grisha@modpython.org]
> Sent: Wednesday, August 21, 2002 11:25 AM
> To: Robert Lilly
> Cc: mod_python@modpython.org
> Subject: Re: [mod_python] mod_python for Apache 2? (Cross-posted to
> mod_python & Apache users lists)
>
>
>
> There is no mod_python.dll for Apache 2 as of yet. Mod_python 3.0 is
> approaching beta status rapidly, and I expect to put the beta out in a
> week or so, and perhaps someone will care to compile a DLL of it, though I
> must admit I've done 0 testing on Windows yet.
>
> Grisha
>
> On Wed, 21 Aug 2002, Robert Lilly wrote:
>
> > Is there a mod_python.dll for Apache 2? Is it possible to run mod_python
> > with Apache 2 under Windows 2000? If so, how do I do it.
>
> ---
> Incoming mail is certified Virus Free.
> Checked by AVG anti-virus system (http://www.grisoft.com).
> Version: 6.0.381 / Virus Database: 214 - Release Date: 8/2/2002
>
---
Outgoing mail is certified Virus Free.
Checked by AVG anti-virus system (http://www.grisoft.com).
Version: 6.0.381 / Virus Database: 214 - Release Date: 8/2/2002


From fabbe at paniq.net  Thu Aug 22 09:25:08 2002
From: fabbe at paniq.net (Fabian Fagerholm)
Date: Fri Jan  9 21:53:02 2004
Subject: [mod_python] mod_python link on Apache web page?
Message-ID: <1029997509.1695.8.camel@kernel>

I was browsing around the Apache web pages when it struck me that
mod_python is definitely not getting the exposure it could on those
pages. There is perl.apache.org, php.apache.org and tcl.apache.org, but
there is no python.apache.org. There isn't even a mod_python link under
the "Sister Projects" section.

I think this is quite sad, because why shouldn't Python be an equally
good choice as web app development language as Perl, PHP or TCL?

What I would like to do is get a link to the mod_python web site under
the "Sister Projects" section of http://www.apache.org/, or (preferably)
find out how a python.apache.org could be created, either as a general
Python-Apache site or as a direct link to the mod_python web site
(perl.apache.org is actually the mod_perl site).

Are there any opinions or further information on this matter that anyone
would like to share? Is anyone interested in this?

Cheers,
Fabian

-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 240 bytes
Desc: This is a digitally signed message part
Url : http://mailman.modpython.org/pipermail/mod_python/attachments/20020822/d1651147/attachment-0001.bin
From vmilitaru at sympatico.ca  Thu Aug 22 04:11:47 2002
From: vmilitaru at sympatico.ca (vio)
Date: Fri Jan  9 21:53:02 2004
Subject: [mod_python] mod_python link on Apache web page?
In-Reply-To: <1029997509.1695.8.camel@kernel>; from fabbe@paniq.net on Thu, Aug 22, 2002 at 09:25:08AM +0300
References: <1029997509.1695.8.camel@kernel>
Message-ID: <20020822041146.A281@eye.neb>

Since mod_python is so totally dependent on apache, warming up this 
symbiotic relationship to similar levels as mod_perl and such would make a lot
of sense. Though from my selfish user's point of view, as long as I can make 
apache sing python songs, and doing it faster than in Zope, I don't much care 
more than that. Languages is kind of a religious experience, with hugely 
various followings. As in real religions, it's seldom the best religion who is 
the most popular (no offense, but unfortunately it's always the better 
marketing who wins crowds, rarely the technically better product 
... howdy Bill !).

Apologies to the list for my misplaced religious bull. But I am quite surprized
to hear that mod_python is not referenced by apache web site. I believe that's
the place to be if mod_python wants to recruit a bigger audience/following.
Cause if you only meter in the programming experience, Python is way better
than Perl or PHP or Java or C/Cpp or what have you (I don't know TCL, so can't
compare it). I mean, Python's competition. 
Why am I so damn sure? Cause else, I'd be 
out of here in a hurry, as well as each and every one of you reading this.
We're here because we've seen what else is there, and for the time being,
mod_python + apache is pretty much the best there is.

python.apache.org sounds great. Provided the owners of the apache.org domain 
agree. Though as much as I'm concerned, I wouldn't waste much sleep if it 
doesn't happen.
My opinion.

Vio

PS. What would be quite intriguing would be to meter the mod_python's installed
base. I mean, apache now runs over 60% of all web servers worldwide. I'd be 
curious to know what segment of this market also runs mod_python ? Not that
it matters a great deal (the fact that mod_perl's stats would probably beat
the pants out of mod_python's won't make me run back to the former anythime
soon).

PS2. Sorry about my huge crap. I's definitely been too long a day.


* Fabian Fagerholm <fabbe@paniq.net> [020822 03:02]:
> I was browsing around the Apache web pages when it struck me that
> mod_python is definitely not getting the exposure it could on those
> pages. There is perl.apache.org, php.apache.org and tcl.apache.org, but
> there is no python.apache.org. There isn't even a mod_python link under
> the "Sister Projects" section.
> 
> I think this is quite sad, because why shouldn't Python be an equally
> good choice as web app development language as Perl, PHP or TCL?
> 
> What I would like to do is get a link to the mod_python web site under
> the "Sister Projects" section of http://www.apache.org/, or (preferably)
> find out how a python.apache.org could be created, either as a general
> Python-Apache site or as a direct link to the mod_python web site
> (perl.apache.org is actually the mod_perl site).
> 
> Are there any opinions or further information on this matter that anyone
> would like to share? Is anyone interested in this?
> 
> Cheers,
> Fabian
> 



From fabbe at paniq.net  Thu Aug 22 12:56:46 2002
From: fabbe at paniq.net (Fabian Fagerholm)
Date: Fri Jan  9 21:53:02 2004
Subject: [mod_python] mod_python link on Apache web page?
In-Reply-To: <20020822041146.A281@eye.neb>
References: <1029997509.1695.8.camel@kernel>  <20020822041146.A281@eye.neb>
Message-ID: <1030010207.1694.127.camel@kernel>

On Thu, 2002-08-22 at 12:11, vio wrote:
> Since mod_python is so totally dependent on apache, warming up this 
> symbiotic relationship to similar levels as mod_perl and such would
> make a lot of sense.

Well put.

> Apologies to the list for my misplaced religious bull.

:)
If so, my apologies for bringing up the subject in the first place. But
I do not think there is any reasons for apologies - if there are
objections against this type of discussions on this list, there should
be a separate list for purely technical discussions and a separate list
for "mod_python politics". ;)

> python.apache.org sounds great. Provided the owners of the apache.org
> domain agree. Though as much as I'm concerned, I wouldn't waste much
> sleep if it doesn't happen.
> My opinion.

Ok. Are there other opinions? I would especially like to hear if there
are any objections.

What I think needs to be done is something this:
The issue needs blessing from Grisha. Without him being in on this, I
see no point in trying to achieve a tighter connection to the Apache
project.
        * The Python web development community outside mod_python should
          be heard. There are probably lots of people using Zope, not to
          mention those using Python as a language for cgi-bin scripts.
          Their opinion needs to be asked for. There is nothing to say
          that python.apache.org should equal mod_python, like
          perl.apache.org equals mod_perl. Perhaps python.apache.org
          should be a trimmed site with Apache-Python-related links.
          mod_python could be prominent there. The Web-Python community
          at large needs to discuss this.
        * The Apache people need to be contacted. Before this, however,
          there needs to be consensus among the people willing to
          contribute.

I'm willing to contribute some time to contacting all these different
groups of people. But I would like some more feedback from the readers
of this mailing list first.

> PS. What would be quite intriguing would be to meter the mod_python's 
> installed base.

I'll look into this as well as a separate matter.

Cheers,
Fabian

-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 240 bytes
Desc: This is a digitally signed message part
Url : http://mailman.modpython.org/pipermail/mod_python/attachments/20020822/159300e8/attachment-0001.bin
From kevin at vap.org  Thu Aug 22 10:45:07 2002
From: kevin at vap.org (kevin@vap.org)
Date: Fri Jan  9 21:53:02 2004
Subject: [mod_python] Re: IOError: [Errno 2] No such file or directory...(etc)
Message-ID: <6610-22002842214457888@vap.org>

I finally got it to work.  It was definitely just an Apache on
Windows problem.

For those interested:  It was a combination of using a User ID with
enough local rights/privileges for the services logon, combined with
using UNC pathnames instead of drive letters ("//remotesvr/files" vs
"z:/files").

Apparently the drive letter mappings (beyond any physical devices)
are only available during an interactive login, not an NT service
login (even though it was the same User ID login).

-Kevin


From grisha at modpython.org  Thu Aug 22 11:26:41 2002
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 21:53:02 2004
Subject: [mod_python] mod_python link on Apache web page?
In-Reply-To: <1030010207.1694.127.camel@kernel>
Message-ID: <Pine.BSF.4.32.0208221118260.22715-100000@eden.ispol.com>

As far as I understand, the *.apache.org domains are for projects
sponsored by Apache Software Foundation, and mod_perl happens to be one of
them. Since mod_python isn't sponsored by the Apache Software Foundation,
I don't really see it a problem that there isn't an *.apache.org site.

As far as the general exposure - we could use a little more of it, but so
could Python in genral I think.

Grisha

On 22 Aug 2002, Fabian Fagerholm wrote:

> On Thu, 2002-08-22 at 12:11, vio wrote:
> > Since mod_python is so totally dependent on apache, warming up this
> > symbiotic relationship to similar levels as mod_perl and such would
> > make a lot of sense.


From grisha at modpython.org  Thu Aug 22 17:35:07 2002
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 21:53:02 2004
Subject: [mod_python] mod_python 3 beta
In-Reply-To: <6610-22002842214457888@vap.org>
Message-ID: <Pine.BSF.4.32.0208221722190.27115-100000@eden.ispol.com>

You can grab the latest CVS snapshot at
http://www.modpython.org/dist/dev/mod_python-3.0.0-BETA.tgz

First off a warning: this is NOT production quality software, use at your
own risk!

A few notes:

1. It requires Python 2.2.1. Earlier versions of Python will not work
(though 2.2 might). The reason is that some of the objects (table and
request) are now the new Python classes as described here:
http://www.python.org/2.2.1/descrintro.html

2. It requires Apache 2.0.40, earlier versions won't compile.

3. There is no static compilation support, only DSO.

4. I've only tested it on RedHat Linux 7.3. I don't even know if it will
compile on other platforms.

5. Python*Handler directives can now take an additional argument - "|"
followed by a list of extensions. This will limit execution of the handler
to those extensions, e.g.:

PythonHandler myhandler | .pyhtml

6. There is now support for filters via PythonInputFilter and
PythonOutputFilter directives. This is kind of new and raw, so YMMV.

7. The documentation has been updated to reflect new features and changes,
though filter docs are still kind of skimpy.

There is more changes, but I can't remember them now....

Please give it a spin and send feedback to me or to the list.

Grisha


From fabbe at paniq.net  Fri Aug 23 10:10:32 2002
From: fabbe at paniq.net (Fabian Fagerholm)
Date: Fri Jan  9 21:53:02 2004
Subject: [mod_python] mod_python link on Apache web page?
In-Reply-To: <Pine.BSF.4.32.0208221118260.22715-100000@eden.ispol.com>
References: <Pine.BSF.4.32.0208221118260.22715-100000@eden.ispol.com>
Message-ID: <1030086632.969.28.camel@kernel>

On Thu, 2002-08-22 at 18:26, Gregory (Grisha) Trubetskoy wrote:
> 
> As far as I understand, the *.apache.org domains are for projects
> sponsored by Apache Software Foundation, and mod_perl happens to be one of
> them. Since mod_python isn't sponsored by the Apache Software Foundation,
> I don't really see it a problem that there isn't an *.apache.org site.

I'm not entirely sure but I don't think PHP is "sponsored" by the ASF. I
think the "projects" listed on www.apache.org are highly different in
their level of integration with the ASF. For example, PHP is largely a
separate project while mod_perl seems to be more integrated.

On the Apache Projects page
(http://www.apache.org/foundation/projects.html), I found the following:

    "The Apache Software Foundation is always looking for new or
    existing collaborative software development projects that are in
    need of a home. This includes both projects related and unrelated to
    the existing ASF projects."

mod_python does have the infrastructure in place - there's a web page
and a mailing list - so there is no need for that kind of collaboration.
But I do think the project could benefit from more exposure, and that
Apache could benefit from having closer ties with Python. You say:

> As far as the general exposure - we could use a little more of it, but so
> could Python in genral I think.

Could this be an opportunity to adress the issue?

Or to put it another way: Why should there *not* be a python.apache.org?

Cheers,
Fabian

-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 240 bytes
Desc: This is a digitally signed message part
Url : http://mailman.modpython.org/pipermail/mod_python/attachments/20020823/8117e663/attachment-0001.bin
From vmilitaru at sympatico.ca  Fri Aug 23 03:41:41 2002
From: vmilitaru at sympatico.ca (vio)
Date: Fri Jan  9 21:53:02 2004
Subject: [mod_python] mod_python link on Apache web page?
In-Reply-To: <3D65DE58.EEC33098@sympatico.ca>; from vmilitaru@sympatico.ca on Fri, Aug 23, 2002 at 03:03:53AM -0400
References: <3D65DE58.EEC33098@sympatico.ca>
Message-ID: <20020823034140.A672@eye.neb>

Fabian, I think you should just shoot the 'python.apache.org' question on the
appropriate apache mailing lists and see what happens. If something interesting
comes your way, maybe forward it to the mod_python list. But if too much shit
comes your way, maybe have a pair of scissors close by (to cut your modem line,
of course). Anyway, it's the only way to really answer your query, and seems 
to me the key resides much more on the apache side than on the mod_python side (I mean Grisha). 

Don't have to ask so many permissions. Just do it. See what happens.
Vio

> Fabian Fagerholm wrote:
> 
> > On Thu, 2002-08-22 at 18:26, Gregory (Grisha) Trubetskoy wrote:
> > >
> > > As far as I understand, the *.apache.org domains are for projects
> > > sponsored by Apache Software Foundation, and mod_perl happens to be one of
> > > them. Since mod_python isn't sponsored by the Apache Software Foundation,
> > > I don't really see it a problem that there isn't an *.apache.org site.
> >
> > I'm not entirely sure but I don't think PHP is "sponsored" by the ASF. I
> > think the "projects" listed on www.apache.org are highly different in
> > their level of integration with the ASF. For example, PHP is largely a
> > separate project while mod_perl seems to be more integrated.
> >
> > On the Apache Projects page
> > (http://www.apache.org/foundation/projects.html), I found the following:
> >
> >     "The Apache Software Foundation is always looking for new or
> >     existing collaborative software development projects that are in
> >     need of a home. This includes both projects related and unrelated to
> >     the existing ASF projects."
> >
> > mod_python does have the infrastructure in place - there's a web page
> > and a mailing list - so there is no need for that kind of collaboration.
> > But I do think the project could benefit from more exposure, and that
> > Apache could benefit from having closer ties with Python. You say:
> >
> > > As far as the general exposure - we could use a little more of it, but so
> > > could Python in genral I think.
> >
> > Could this be an opportunity to adress the issue?
> >
> > Or to put it another way: Why should there *not* be a python.apache.org?
> >
> > Cheers,
> > Fabian
> >
> >   ------------------------------------------------------------------------
> >                        Name: signature.asc
> >    signature.asc       Type: application/pgp-signature
> >                 Description: This is a digitally signed message part

From fabbe at paniq.net  Fri Aug 23 12:05:21 2002
From: fabbe at paniq.net (Fabian Fagerholm)
Date: Fri Jan  9 21:53:02 2004
Subject: [mod_python] mod_python link on Apache web page?
In-Reply-To: <20020823034140.A672@eye.neb>
References: <3D65DE58.EEC33098@sympatico.ca>  <20020823034140.A672@eye.neb>
Message-ID: <1030093521.969.47.camel@kernel>

On Fri, 2002-08-23 at 11:41, vio wrote:
> Fabian, I think you should just shoot the 'python.apache.org' question on the
> appropriate apache mailing lists and see what happens. If something interesting
> comes your way, maybe forward it to the mod_python list. But if too much shit
> comes your way, maybe have a pair of scissors close by (to cut your modem line,
> of course). Anyway, it's the only way to really answer your query, and seems 
> to me the key resides much more on the apache side than on the mod_python side
> (I mean Grisha).
>
> Don't have to ask so many permissions. Just do it. See what happens.

I agree that doing something is the only way of doing it :)

I do think there are different ways of doing things, though. Some of the
ways will inevitably lead to failure - and I'd like to avoid those.

Specifically, I want to approach the Apache Software Foundation in the
correct manner. Bargning in, yelling the name of an arbitrary reptile,
is hardly the way to go. I also want the opinion of the people currently
using the Python-Apache combination. If nobody is interested in this,
then what is the use of it?

In addition, I want to avoid making things worse for people in the
future. It might be that the issue cannot be adressed right now, but
could be adressed in the future. In that case, a previous negative
experience will not be beneficial.

But rest assured that something will be done. I have already aquired
information on the correct procedures to contact the ASF. Before I do
that, however, I will try to reach a larger part of the Python Web
community and listen to some opinions there. For all I know, someone
else might be doing this as we speak - in which case we should join
forces.

I'd welcome further discussion on this topic, and I'll post more
information when I have it.

Cheers,
Fabian

-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 240 bytes
Desc: This is a digitally signed message part
Url : http://mailman.modpython.org/pipermail/mod_python/attachments/20020823/99f0dfbc/attachment-0001.bin
From fabbe at paniq.net  Fri Aug 23 12:51:32 2002
From: fabbe at paniq.net (Fabian Fagerholm)
Date: Fri Jan  9 21:53:02 2004
Subject: [mod_python] Promoting Python as web application development language
Message-ID: <1030096292.969.85.camel@kernel>

Hello, World!

In a recent thread [0] on the mod_python [1] mailing list, I'm wondering
why there isn't a Python link on the main Apache web site. There are
PHP, Perl and Tcl links but Python is nowhere present.

It is of course evident that the lack of a link is due to the lack of
perceived usage of Python as a web application development language.
That, in turn, is due to the lack of exposure on sites like the Apache
one.

I would like to see this change. Specifically, as I write in my post on
the mod_python mailing list,

    "What I would like to do is get a link to the mod_python web site
    under the "Sister Projects" section of http://www.apache.org/, or
    (preferably) find out how a python.apache.org could be created,
    either as a general Python-Apache site or as a direct link to the
    mod_python web site (perl.apache.org is actually the mod_perl
    site)."
    
I have concluded that before any such thing can be done, the opinions of
the people currently using the Python-Apache combination (which I
suspect is no small number) need to be solicited to some degree.

I would like to hear what you think about the creation of a
"python.apache.org" (or equivalent) that would focus on the topic of web
app development with Python and Apache. I imagine the site itself being
quite slim with some essential information and links to other projects,
particularly to the mod_python site.

Also, I would like to hear about any related projects or any previous
contact to the Apache Software Foundation.


I apologise for the cross-post but I feel it is warranted in this case.
I'm only subscribed to the mod_python mailing list so please keep me or
that list Cc'ed if you reply.

Cheers,
Fabian Fagerholm

[0] http://www.modpython.org/pipermail/mod_python/2002-August/002360.html

[1] http://www.modpython.org/

-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 240 bytes
Desc: This is a digitally signed message part
Url : http://mailman.modpython.org/pipermail/mod_python/attachments/20020823/a9e059e7/attachment-0001.bin
From vmilitaru at sympatico.ca  Fri Aug 23 06:08:09 2002
From: vmilitaru at sympatico.ca (vmilitaru@sympatico.ca)
Date: Fri Jan  9 21:53:02 2004
Subject: [mod_python] mod_python link on Apache web page?
In-Reply-To: <1030093521.969.47.camel@kernel>; from fabbe@paniq.net on Fri, Aug 23, 2002 at 12:05:21PM +0300
References: <3D65DE58.EEC33098@sympatico.ca> <20020823034140.A672@eye.neb> <1030093521.969.47.camel@kernel>
Message-ID: <20020823060809.A744@eye.neb>

My reaction: all mod_python actually needs from the apache bunch is more 
'exposure', and somehow their official blessing and recognition, which is
what 'python.apache.org' or some other pointer from the 'official'
apache site gives you. 
I'm not saying you should not ask them politely for their reaction to this
request, rather something like:

"Greetings,
I'm from mod_python. We have this great apache module, but sadly we don't see
a pointer on the apache site towards our module. Since it is so similar to 
other great apache modules like mod_perl and mod_php, what would it take to
have a pointer to the mod_python site on the official apache site, alongsite
mod_perl and such ? Something like 'python.apache.org' redirecting to
'www.modpython.org' sounds quite appealing to us. Any feedback on this topic
would be appreciated.
Regards,
xxx"

Simple, direct, cutting the bull to a minimum. If that's feasible, or not,
you'll know, and why, and won't waste your time further if it's a no no. 
You don't need all this consulting the greater Python community for some link
on a web page. 
Too much politics. My little experience in 'managing an
open source project through consensus' has not been that great so far (too much
talk, too few results: each has a different opinion, so everybody
discusses ad noseam on the best way to cut the cheese). Grisha developped
mod_python on his own, and though I may be mistaken, I don't recall him 
talking about doing much consulting previous to starting that project.

Furthermore, I'm pretty sure the 'Apache Software Foundation' people is aware
of mod_python's existence, and won't confuse python to its reptilian cousin
(nor the famous british comedy group). These are pretty bright people.

My opinion (again). In case nobody else has one on this specific political 
topic, or don't agree with you, just do it anyway, and share your results 
with the list. What's the worst that can happen? Yo'll get flamed ? 

You only live once :-)
Vio


* Fabian Fagerholm <fabbe@paniq.net> [020823 05:10]:
> On Fri, 2002-08-23 at 11:41, vio wrote:
> > Fabian, I think you should just shoot the 'python.apache.org' question on the
> > appropriate apache mailing lists and see what happens. If something interesting
> > comes your way, maybe forward it to the mod_python list. But if too much shit
> > comes your way, maybe have a pair of scissors close by (to cut your modem line,
> > of course). Anyway, it's the only way to really answer your query, and seems 
> > to me the key resides much more on the apache side than on the mod_python side
> > (I mean Grisha).
> >
> > Don't have to ask so many permissions. Just do it. See what happens.
> 
> I agree that doing something is the only way of doing it :)
> 
> I do think there are different ways of doing things, though. Some of the
> ways will inevitably lead to failure - and I'd like to avoid those.
> 
> Specifically, I want to approach the Apache Software Foundation in the
> correct manner. Bargning in, yelling the name of an arbitrary reptile,
> is hardly the way to go. I also want the opinion of the people currently
> using the Python-Apache combination. If nobody is interested in this,
> then what is the use of it?
> 
> In addition, I want to avoid making things worse for people in the
> future. It might be that the issue cannot be adressed right now, but
> could be adressed in the future. In that case, a previous negative
> experience will not be beneficial.
> 
> But rest assured that something will be done. I have already aquired
> information on the correct procedures to contact the ASF. Before I do
> that, however, I will try to reach a larger part of the Python Web
> community and listen to some opinions there. For all I know, someone
> else might be doing this as we speak - in which case we should join
> forces.
> 
> I'd welcome further discussion on this topic, and I'll post more
> information when I have it.
> 
> Cheers,
> Fabian
> 



From fabbe at paniq.net  Fri Aug 23 14:01:55 2002
From: fabbe at paniq.net (Fabian Fagerholm)
Date: Fri Jan  9 21:53:02 2004
Subject: [mod_python] mod_python link on Apache web page?
In-Reply-To: <20020823060809.A744@eye.neb>
References: <3D65DE58.EEC33098@sympatico.ca> <20020823034140.A672@eye.neb>
	<1030093521.969.47.camel@kernel>  <20020823060809.A744@eye.neb>
Message-ID: <1030100515.969.106.camel@kernel>

On Fri, 2002-08-23 at 14:08, vmilitaru@sympatico.ca wrote:
[on approaching the ASF]
> Simple, direct, cutting the bull to a minimum. If that's feasible, or not,
> you'll know, and why, and won't waste your time further if it's a no no. 
> You don't need all this consulting the greater Python community for some link
> on a web page. 

I disagree. Cutting the bull to a minimum is of course desirable, but I
think you're underestimating the impact of a "python.apache.org". It's
not just "some link on a web page". It's an endorsement by an
organisation that has become quite influential over the years.

This is not to say that one should come crawling on one's knees, begging
for a "link on your web page". Instead, one should show some sign of
being a good partner with some organisational skills.

> Grisha developped
> mod_python on his own, and though I may be mistaken, I don't recall him 
> talking about doing much consulting previous to starting that project.

Grisha's contribution should definately be valued very highly. This is
the exact reason that I choose to discuss things first instead of
heading off in some unannounced direction. Since Grisha is the author of
mod_python, he should have a say in this. For instance, he might've said
that he wants to continue development in peace and quiet for a while,
and I would've backed off on this. I think asking was the least I could
do to show some respect.

> My opinion (again). In case nobody else has one on this specific political 
> topic, or don't agree with you, just do it anyway, and share your results 
> with the list. What's the worst that can happen? Yo'll get flamed ? 

Flame away :)

As you'll notice, I posted a message to python-list and the
marketing-python list, with Cc to this list. We'll see what happens and
if I feel it is the right thing to do, I'll continue with this project.

Basically, I think there's no reason to rush. If something can be done
today, it can probably be done tomorrow as well - and you'll get a
chance to think it over one more time. If tomorrow it turns out it can't
be done after all, then you'll be lucky you didn't waste time on it
today.

Cheers,
Fabian

-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 240 bytes
Desc: This is a digitally signed message part
Url : http://mailman.modpython.org/pipermail/mod_python/attachments/20020823/80c2ccad/attachment-0001.bin
From grisha at modpython.org  Fri Aug 23 08:39:33 2002
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 21:53:02 2004
Subject: [mod_python] mod_python link on Apache web page?
In-Reply-To: <1030100515.969.106.camel@kernel>
Message-ID: <Pine.BSF.4.32.0208230834550.35718-100000@eden.ispol.com>

My "official" position on this is that I don't have strong feelings one
way or the other. Being concerned with these matters is something that I
at the moment do not have a lot of time for. If someone wants to take up
the task of promoting mp, God bless'em.

Grisha

On 23 Aug 2002, Fabian Fagerholm wrote:

> On Fri, 2002-08-23 at 14:08, vmilitaru@sympatico.ca wrote:
>
> Basically, I think there's no reason to rush. If something can be done
> today, it can probably be done tomorrow as well - and you'll get a
> chance to think it over one more time. If tomorrow it turns out it can't
> be done after all, then you'll be lucky you didn't waste time on it
> today.


From neel at mediapulse.com  Fri Aug 23 11:29:53 2002
From: neel at mediapulse.com (Michael C. Neel)
Date: Fri Jan  9 21:53:02 2004
Subject: [mod_python] Promoting Python as web application development language
Message-ID: <C0FC22C08B82074A88B50061764157775B94@johnson.mediapulse.net>

Well, what a day to join the mod_python list!

I believe that mod_python needs to be more featured on the apache
website, just as mod_perl and PHP.  As a developer who has worked with
perl for quite sometime, I have run into perl's limitations in a large
scale applications.  I began to seek out other choices that offered both
performance and a strong OO base from which management of large scale
applications.  I had looked at python before, but didn't know of
mod_python - and running something in the CGI space is sooo 1996 =D

Though another project I came to find mailman, and though the mailman
docs I came to find out about mod_python.  Mailman IMHO is a strong
reason why python can compete as a "web language", offering the OO of
Java without the performance hit or running a separate server just for
Java (ala Tomcat).

I also think mod_python will begin to gain a larger following as Apache
2.0 is deployed.  Python just strikes me as a much better language to
fit in with the new format and concepts of the Apache 2.0 modules.

Perl, Python, and PHP each have their own strengths and faults when used
under Apache.  Not one of them will ever replace the need for the other,
and I hope they never try to.  Different application have different
goals and require different approaches.  I feel all warm and fuzzy
inside thinking about how the open source community has provided me with
a solution for every need.  Python is one of those solutions, and every
bit as worthy of python.apache.org as the rest.

Mike
--
Michael C. Neel
There are only 10 types of people in the world;
those who understand binary and those who don't.


-----Original Message-----
From: Fabian Fagerholm [mailto:fabbe@paniq.net] 
Sent: Friday, August 23, 2002 5:52 AM
To: marketing-python@wingide.com; python-list@python.org
Cc: mod_python@modpython.org
Subject: [mod_python] Promoting Python as web application development
language


Hello, World!

In a recent thread [0] on the mod_python [1] mailing list, I'm wondering
why there isn't a Python link on the main Apache web site. There are
PHP, Perl and Tcl links but Python is nowhere present.

It is of course evident that the lack of a link is due to the lack of
perceived usage of Python as a web application development language.
That, in turn, is due to the lack of exposure on sites like the Apache
one.

I would like to see this change. Specifically, as I write in my post on
the mod_python mailing list,

    "What I would like to do is get a link to the mod_python web site
    under the "Sister Projects" section of http://www.apache.org/, or
    (preferably) find out how a python.apache.org could be created,
    either as a general Python-Apache site or as a direct link to the
    mod_python web site (perl.apache.org is actually the mod_perl
    site)."
    
I have concluded that before any such thing can be done, the opinions of
the people currently using the Python-Apache combination (which I
suspect is no small number) need to be solicited to some degree.

I would like to hear what you think about the creation of a
"python.apache.org" (or equivalent) that would focus on the topic of web
app development with Python and Apache. I imagine the site itself being
quite slim with some essential information and links to other projects,
particularly to the mod_python site.

Also, I would like to hear about any related projects or any previous
contact to the Apache Software Foundation.


I apologise for the cross-post but I feel it is warranted in this case.
I'm only subscribed to the mod_python mailing list so please keep me or
that list Cc'ed if you reply.

Cheers,
Fabian Fagerholm

[0]
http://www.modpython.org/pipermail/mod_python/2002-August/002360.html

[1] http://www.modpython.org/



From grisha at modpython.org  Fri Aug 23 11:32:13 2002
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 21:53:02 2004
Subject: [mod_python] 3.0 beta dll now available
In-Reply-To: <1030100515.969.106.camel@kernel>
Message-ID: <Pine.BSF.4.32.0208231129430.37364-100000@eden.ispol.com>

For Windows users, I managed to compile a DLL, and the "hello world" test
passed OK on Win2K.

You can get it at

http://www.modpython.org/dist/dev/3.0.0-BETA-python2.2.1-apache2.0.40.zip

Grisha


From rien at yeepa.org  Fri Aug 23 18:43:12 2002
From: rien at yeepa.org (Adrien Plisson)
Date: Fri Jan  9 21:53:02 2004
Subject: [mod_python] 3.0 beta dll now available
References: <Pine.BSF.4.32.0208231129430.37364-100000@eden.ispol.com>
Message-ID: <002e01c24ac4$2e6a7790$0a020101@skynet.be>

From: "Gregory (Grisha) Trubetskoy" <grisha@modpython.org>
> For Windows users, I managed to compile a DLL, and the "hello world" test
> passed OK on Win2K.

cooooool ! I won't have to do it on my own, though it could be of great
experience...

that's too bad i don't have time to look further at it, but the new apache
2.0 features looks great and will surely enable me to meet my goals sooner
than expected. it's great that mod_python is getting this way.

btw, i would like to thank you, grisha, for all the work you're doing, and
all the time you spend on mod_python. it ruuuules !

--
rien


From vmilitaru at sympatico.ca  Fri Aug 23 18:22:19 2002
From: vmilitaru at sympatico.ca (vio)
Date: Fri Jan  9 21:53:02 2004
Subject: [mod_python] Promoting Python as web application development language
Message-ID: <20020823182218.A304@eye.neb>

Greetings to Apache Board Members,

Apoligies to Fabian Fagerholm for short-cutting his efforts with this message.
But I just wanted to cut the bull and go straight to the point: we have this
great apache module called mod_python, thanks to Gregory (Grisha) Trubetskoy, 
suffering from a big lack of exposure. We strongly believe this great piece 
of technology (which is the marriage of apache + python) deserves a place 
alongside mod_perl and mod_ssl 'on the main apache site'. Understanbably,
mod_python is not an Apache Foundation project (rather it's Grisha's project).
Yet, there is such a symbiotic relationship between apache and mod_python,
what would it take to have a link on the main apache side to the 'python'
web-app alternative, in the Apache Projects section of the 
LEFT SIDE NAVIGATION ?

   Apache Projects
     HTTP Server
     APR
     Jakarta
     Perl
     Python    <-- something like this, linking to www.mod_python.org,
     PHP           or to 'python.apache.org' which would redirect to
     TCL           www.mod_python.org (or something along those lines)
     XML
     Conferences
     Foundation

In conclusion, I believe this is a great opportunity for greater integration
between the main apache movement, and the independent mod_python effort.
In my view, Apache needs a strong python alternative alongside Perl and such, 
while mod_python gains greater exposure and 'official blessing' from the Apache
Software Foundation.

Please send your reactions, comments, suggestions on this topic directly to the
mod_python mailing list at 'mod_python@modpython.org'.
If this is not the appropriate forum to discuss this topic, please redirect
my message as appropriate.

Thank You kindly for your time,
Vio


PS. Included 2 recent messages from the mod_python list outlining the need for
a direct link between apache main site and mod_python:

* Michael C. Neel <neel@mediapulse.com> wrote:
> Well, what a day to join the mod_python list!
> 
> I believe that mod_python needs to be more featured on the apache
> website, just as mod_perl and PHP.  As a developer who has worked with
> perl for quite sometime, I have run into perl's limitations in a large
> scale applications.  I began to seek out other choices that offered both
> performance and a strong OO base from which management of large scale
> applications.  I had looked at python before, but didn't know of
> mod_python - and running something in the CGI space is sooo 1996 =D
> 
> Though another project I came to find mailman, and though the mailman
> docs I came to find out about mod_python.  Mailman IMHO is a strong
> reason why python can compete as a "web language", offering the OO of
> Java without the performance hit or running a separate server just for
> Java (ala Tomcat).
> 
> I also think mod_python will begin to gain a larger following as Apache
> 2.0 is deployed.  Python just strikes me as a much better language to
> fit in with the new format and concepts of the Apache 2.0 modules.
> 
> Perl, Python, and PHP each have their own strengths and faults when used
> under Apache.  Not one of them will ever replace the need for the other,
> and I hope they never try to.  Different application have different
> goals and require different approaches.  I feel all warm and fuzzy
> inside thinking about how the open source community has provided me with
> a solution for every need.  Python is one of those solutions, and every
> bit as worthy of python.apache.org as the rest.
> 
> Mike
> --
> Michael C. Neel
> There are only 10 types of people in the world;
> those who understand binary and those who don't.
> 
> 
> -----Original Message-----
> From: Fabian Fagerholm [mailto:fabbe@paniq.net] 
> Sent: Friday, August 23, 2002 5:52 AM
> To: marketing-python@wingide.com; python-list@python.org
> Cc: mod_python@modpython.org
> Subject: [mod_python] Promoting Python as web application development
> language
> 
> 
> Hello, World!
> 
> In a recent thread [0] on the mod_python [1] mailing list, I'm wondering
> why there isn't a Python link on the main Apache web site. There are
> PHP, Perl and Tcl links but Python is nowhere present.
> 
> It is of course evident that the lack of a link is due to the lack of
> perceived usage of Python as a web application development language.
> That, in turn, is due to the lack of exposure on sites like the Apache
> one.
> 
> I would like to see this change. Specifically, as I write in my post on
> the mod_python mailing list,
> 
>     "What I would like to do is get a link to the mod_python web site
>     under the "Sister Projects" section of http://www.apache.org/, or
>     (preferably) find out how a python.apache.org could be created,
>     either as a general Python-Apache site or as a direct link to the
>     mod_python web site (perl.apache.org is actually the mod_perl
>     site)."
>     
> I have concluded that before any such thing can be done, the opinions of
> the people currently using the Python-Apache combination (which I
> suspect is no small number) need to be solicited to some degree.
> 
> I would like to hear what you think about the creation of a
> "python.apache.org" (or equivalent) that would focus on the topic of web
> app development with Python and Apache. I imagine the site itself being
> quite slim with some essential information and links to other projects,
> particularly to the mod_python site.
> 
> Also, I would like to hear about any related projects or any previous
> contact to the Apache Software Foundation.
> 
> 
> I apologise for the cross-post but I feel it is warranted in this case.
> I'm only subscribed to the mod_python mailing list so please keep me or
> that list Cc'ed if you reply.
> 
> Cheers,
> Fabian Fagerholm
> 
> [0]
> http://www.modpython.org/pipermail/mod_python/2002-August/002360.html
> 
> [1] http://www.modpython.org/
> 
> 
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://www.modpython.org/mailman/listinfo/mod_python



From jfk at metation.com  Sat Aug 24 10:16:42 2002
From: jfk at metation.com (=?iso-8859-1?q?J=F8rgen=20Fr=F8jk=20Kj=E6rsgaard=20{Metation}?=)
Date: Fri Jan  9 21:53:02 2004
Subject: [mod_python] Promoting Python as web application development language
In-Reply-To: <20020823182218.A304@eye.neb>
References: <20020823182218.A304@eye.neb>
Message-ID: <02082410164204.00306@grace.metation.com>

L?rdag 24. August 2002 01:22 skrev du:
> Yet, there is such a symbiotic relationship between
> apache and mod_python, what would it take to have a link on the main apache
> side to the 'python' web-app alternative, in the Apache Projects section of
> the
> LEFT SIDE NAVIGATION ?
>
>    Apache Projects
>      HTTP Server
>      APR
>      Jakarta
>      Perl
>      Python    <-- something like this, linking to www.mod_python.org,
>      PHP           or to 'python.apache.org' which would redirect to
>      TCL           www.mod_python.org (or something along those lines)
>      XML
>      Conferences
>      Foundation

As Fabian Fagerholm wrote aug 22nd, I believe python.apache.org shouldn't 
equal mod_python. Although mod_python is a great product, it isn't the only 
way to use Python with Apache.

The community around mod_dtcl took the initial initiative to move to 
tcl.apache.org and invited the other Tcl alternatives to join in. This has 
now resulted in a new module, Apache Rivet, which combines the efforts of 
mod_dtcl and neowebscript.

If a similar symbiosis can be archived in the Python web community, I believe 
it we benefit all of us. On the other hand, if python.apache.org == 
mod_python, it may split the Python web community.

/jfk

-- 
J?rgen Fr?jk Kj?rsgaard, direkt?r og systemkonsulent
Metation aps - Kystvejen 29, DK-8000 ?rhus C
Web: www.metation.com  - Tlf: +45 8625 0038 - Mobil: +45 2925 6693

From vmilitaru at sympatico.ca  Sat Aug 24 05:36:26 2002
From: vmilitaru at sympatico.ca (vio)
Date: Fri Jan  9 21:53:03 2004
Subject: [mod_python] Promoting Python as web application development language
In-Reply-To: <02082410164204.00306@grace.metation.com>; from jfk@metation.com on Sat, Aug 24, 2002 at 10:16:42AM +0200
References: <20020823182218.A304@eye.neb> <02082410164204.00306@grace.metation.com>
Message-ID: <20020824053625.A685@eye.neb>

Hi Jorgen,
Thanks for your feedback and info on the interesting Rivet history.

Please note that I am speaking entirely from a user's perspective, and my 
little initiative was entirely triggered by Fabian's on the mod_python list, 
which has such a great and obvious point: one way or the other, 
apache misses a 'python play', alongside perl and tcl and such. 
I don't want to offend any egoes, but as a user, I don't really care whether 
apache's python play embraces mod_python or zope, or some other I don't know
about. I'm just a web app coder.

I do disagree with your point that if python.apache.org == mod_python, 
it may split the Python web community. For a simple but obvious reason:
the community is already split as it stands right now. For example, I don't 
see any cooperation whatsoever between the mod_python users and the zope people
(being an old zope user myself who switched to mod_python). From my perspective
python.apache.org == mod_python looks like a ralying point (an analogy which 
comes to mind as I write this being Bill Gate's Pearl Harbor Day speech, which
managed to totally shifted MS on its head, towards the Internet). A ralying
point is hugely powerful.

If I read your Rivet analogy correctly, apache might be interested in giving 
its 'official' blessing (i.e. the powerful 'python.apache.org') to the python 
project who will manage to rally support from the web-python community at 
large. In this regard, Fabian's latest PR makes a lot of sense. 

But again speaking from a user's perspective, if I consider the 2 web-python
packages I know a little about - zope and mod_python - I don't see those code 
bases integrating anytime soon (simply because they serve 2 quite different 
audiences, and I would think they are rather entrenched). Because of this, 
should there be no 'python.apache.org' ?

I disagree. As long as there will be no official ralying point to attract
python+apache afficionados on a 'single point of effort', parallel efforts 
will continue to florish, each more or less re-inventing the proverbial 
wheel. And not cooperating very much, I would think.

In conclusion, whatever the politics behind this topic, apache needs a python
play. I believe this is Fabian's main point, and I am totally sold on it.
But from a web app coder's perspective, give me a great tool to program 
apache in python, and I'll embrace it, whatever it's called. 
It just happened that, though I may be wrong, for the time being the best tool 
available is mod_python.

Regards,
Vio

* J?rgen Fr?jk Kj?rsgaard {Metation} <jfk@metation.com> [020824 04:29]:
> L?rdag 24. August 2002 01:22 skrev du:
> > Yet, there is such a symbiotic relationship between
> > apache and mod_python, what would it take to have a link on the main apache
> > side to the 'python' web-app alternative, in the Apache Projects section of
> > the
> > LEFT SIDE NAVIGATION ?
> >
> >    Apache Projects
> >      HTTP Server
> >      APR
> >      Jakarta
> >      Perl
> >      Python    <-- something like this, linking to www.mod_python.org,
> >      PHP           or to 'python.apache.org' which would redirect to
> >      TCL           www.mod_python.org (or something along those lines)
> >      XML
> >      Conferences
> >      Foundation
> 
> As Fabian Fagerholm wrote aug 22nd, I believe python.apache.org shouldn't 
> equal mod_python. Although mod_python is a great product, it isn't the only 
> way to use Python with Apache.
> 
> The community around mod_dtcl took the initial initiative to move to 
> tcl.apache.org and invited the other Tcl alternatives to join in. This has 
> now resulted in a new module, Apache Rivet, which combines the efforts of 
> mod_dtcl and neowebscript.
> 
> If a similar symbiosis can be archived in the Python web community, I believe 
> it we benefit all of us. On the other hand, if python.apache.org == 
> mod_python, it may split the Python web community.
> 
> /jfk
> 
> -- 
> J?rgen Fr?jk Kj?rsgaard, direkt?r og systemkonsulent
> Metation aps - Kystvejen 29, DK-8000 ?rhus C
> Web: www.metation.com  - Tlf: +45 8625 0038 - Mobil: +45 2925 6693
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://www.modpython.org/mailman/listinfo/mod_python

From vmilitaru at sympatico.ca  Sat Aug 24 09:15:59 2002
From: vmilitaru at sympatico.ca (vio)
Date: Fri Jan  9 21:53:03 2004
Subject: [mod_python] Promoting Python as web application development language
In-Reply-To: <02082413555205.00306@grace.metation.com>; from jfk@metation.com on Sat, Aug 24, 2002 at 01:55:52PM +0200
References: <20020823182218.A304@eye.neb> <02082410164204.00306@grace.metation.com> <20020824053625.A685@eye.neb> <02082413555205.00306@grace.metation.com>
Message-ID: <20020824091559.A956@eye.neb>

Again Jorgen, many thanks for your reply. In a couple of emails you outlined
the framework of a possible 'python.apache.org' project. Its goals, both 
strategic (to promote a unified effort in making Python a language of choice 
on the Apache server) and tactical or technical (to integrate the main 
python_on_apache codebases, while maintaining an open door to alternatives)
are quite clear. The writing on the wall is "cooperation". I would take it 
that your views more or less reflect those of the apache board. Excellent.

Well, Fabian, I hope this would be of some help for your PR efforts, so best
of luck and hopefully you'll keep us in touch of your progress on the 
mod_python list. I guess it's your call from now on.

Warm regards,
Vio

* J?rgen Fr?jk Kj?rsgaard {Metation} <jfk@metation.com> [020824 08:39]:
> L?rdag 24. August 2002 12:36 skrev du:
> > If I read your Rivet analogy correctly, apache might be interested in
> > giving its 'official' blessing (i.e. the powerful 'python.apache.org') to
> > the python project who will manage to rally support from the web-python
> > community at large. In this regard, Fabian's latest PR makes a lot of
> > sense.
> 
> Exactly.
> 
> > But again speaking from a user's perspective, if I consider the 2
> > web-python packages I know a little about - zope and mod_python - I don't
> > see those code bases integrating anytime soon (simply because they serve 2
> > quite different audiences, and I would think they are rather entrenched).
> > Because of this, should there be no 'python.apache.org' ?
> 
> There should be a python.apache.org. The question is who should be part of 
> it? mod_python and Zope are very unlikely to integrate, but some cooperation 
> may be possible. In the open source desktop area, KDE and Gnome actually use 
> some common code today (KDE depends on the GNOME XML core libraries), even 
> though the groups couldn't stand eachother a few years ago.
> 
> On the other hand, you are right when you say that Zope doesn't fit very well 
> in. Zope is not very tightly integrated with Apache. A "zope.apache.org" 
> would be very unlikely.
> 
> I think python.apache.org should consist of mod_python, mod_snake, CGI Python 
> and maybe a few others that I haven't even head about yet. Some time in the 
> future, mod_python and mod_snake may integrate, though it may not seem 
> possible today. A couple of years ago Rivet didn't seem possible either!
> 
> tcl.apache.org succeeded because it is open to alternatives, it isn't one 
> mod_*.
> 
> > I disagree. As long as there will be no official ralying point to attract
> > python+apache afficionados on a 'single point of effort', parallel efforts
> > will continue to florish, each more or less re-inventing the proverbial
> > wheel. And not cooperating very much, I would think.
> 
> Maybe our thoughts are not that different at all... The purpose of 
> python.apache.org should be to expose Python more _and_ to promote a more 
> unified effort in making Python a language of choice on the Apache server.
> 
> regards, J?rgen
> 
> -- 
> J?rgen Fr?jk Kj?rsgaard, direkt?r og systemkonsulent
> Metation aps - Kystvejen 29, DK-8000 ?rhus C
> Web: www.metation.com  - Tlf: +45 8625 0038 - Mobil: +45 2925 6693

From neel at mediapulse.com  Sat Aug 24 16:29:39 2002
From: neel at mediapulse.com (Michael Neel)
Date: Fri Jan  9 21:53:03 2004
Subject: [mod_python] Promoting Python as web application development language
In-Reply-To: <20020824091559.A956@eye.neb>
Message-ID: <000401c24bac$f967e930$0400a8c0@clapton>

Would it make since to have python.apache.org work the same as
jakarta.apache.org?  Then have mod_python, mod_snake, and any other
efforts listed as sub-projects.  Zope could be related link, but it
really does fit in with what I think of when I think "mod_python".  I
want mod_python to provide 2 very key parts; 1. provided an embedded
interperter so I can speed up a existing python code with little effort
and 2. provide a python API version of the Apache API. (I'm not saying
we don't have these bases covered, just say what I'm looking for in a
mod python project).  Zope is a tool for a different job.

If the sticking point is wether python.apache.org jumps to mod_python or
mod_snake, then just solve that now by linking to both as the java pages
do.  Once python has a higher visibility, the community will help it
become whatever it needs to become with reguards to apache.

BTW anyone want to make RedHat stop shipping python 1.5 as default and
giving you mod_python built against 1.5 as well? I can dream can't I?

Anyone ask Guido if he would make a phone call? =D

Mike
--
Michael C. Neel
There are only 10 types of people in the world;
those who understand binary and those who don't.


-----Original Message-----
From: mod_python-admin@modpython.org
[mailto:mod_python-admin@modpython.org] On Behalf Of vio
Sent: Saturday, August 24, 2002 10:16 AM
To: J?rgen Fr?jk Kj?rsgaard {Metation}
Cc: mod_python@modpython.org
Subject: Re: [mod_python] Promoting Python as web application
development language


Again Jorgen, many thanks for your reply. In a couple of emails you
outlined the framework of a possible 'python.apache.org' project. Its
goals, both 
strategic (to promote a unified effort in making Python a language of
choice 
on the Apache server) and tactical or technical (to integrate the main 
python_on_apache codebases, while maintaining an open door to
alternatives) are quite clear. The writing on the wall is "cooperation".
I would take it 
that your views more or less reflect those of the apache board.
Excellent.

Well, Fabian, I hope this would be of some help for your PR efforts, so
best of luck and hopefully you'll keep us in touch of your progress on
the 
mod_python list. I guess it's your call from now on.

Warm regards,
Vio

* J?rgen Fr?jk Kj?rsgaard {Metation} <jfk@metation.com> [020824 08:39]:
> L?rdag 24. August 2002 12:36 skrev du:
> > If I read your Rivet analogy correctly, apache might be interested 
> > in giving its 'official' blessing (i.e. the powerful 
> > 'python.apache.org') to the python project who will manage to rally 
> > support from the web-python community at large. In this regard, 
> > Fabian's latest PR makes a lot of sense.
> 
> Exactly.
> 
> > But again speaking from a user's perspective, if I consider the 2 
> > web-python packages I know a little about - zope and mod_python - I 
> > don't see those code bases integrating anytime soon (simply because 
> > they serve 2 quite different audiences, and I would think they are 
> > rather entrenched). Because of this, should there be no 
> > 'python.apache.org' ?
> 
> There should be a python.apache.org. The question is who should be 
> part of
> it? mod_python and Zope are very unlikely to integrate, but some
cooperation 
> may be possible. In the open source desktop area, KDE and Gnome
actually use 
> some common code today (KDE depends on the GNOME XML core libraries),
even 
> though the groups couldn't stand eachother a few years ago.
> 
> On the other hand, you are right when you say that Zope doesn't fit 
> very well
> in. Zope is not very tightly integrated with Apache. A
"zope.apache.org" 
> would be very unlikely.
> 
> I think python.apache.org should consist of mod_python, mod_snake, CGI

> Python
> and maybe a few others that I haven't even head about yet. Some time
in the 
> future, mod_python and mod_snake may integrate, though it may not seem

> possible today. A couple of years ago Rivet didn't seem possible
either!
> 
> tcl.apache.org succeeded because it is open to alternatives, it isn't 
> one
> mod_*.
> 
> > I disagree. As long as there will be no official ralying point to 
> > attract
> > python+apache afficionados on a 'single point of effort', parallel 
> > python+efforts
> > will continue to florish, each more or less re-inventing the 
> > proverbial wheel. And not cooperating very much, I would think.
> 
> Maybe our thoughts are not that different at all... The purpose of
> python.apache.org should be to expose Python more _and_ to promote a
more 
> unified effort in making Python a language of choice on the Apache
server.
> 
> regards, J?rgen
> 
> --
> J?rgen Fr?jk Kj?rsgaard, direkt?r og systemkonsulent
> Metation aps - Kystvejen 29, DK-8000 ?rhus C
> Web: www.metation.com  - Tlf: +45 8625 0038 - Mobil: +45 2925 6693
_______________________________________________
Mod_python mailing list
Mod_python@modpython.org
http://www.modpython.org/mailman/listinfo/mod_python



From vmilitaru at sympatico.ca  Sat Aug 24 22:24:38 2002
From: vmilitaru at sympatico.ca (vio)
Date: Fri Jan  9 21:53:03 2004
Subject: [mod_python] Promoting Python as web application development language
In-Reply-To: <000401c24bac$f967e930$0400a8c0@clapton>; from neel@mediapulse.com on Sat, Aug 24, 2002 at 04:29:39PM -0400
References: <20020824091559.A956@eye.neb> <000401c24bac$f967e930$0400a8c0@clapton>
Message-ID: <20020824222438.A313@eye.neb>

* Michael Neel <neel@mediapulse.com> [020824 21:18]:
> Would it make since to have python.apache.org work the same as
> jakarta.apache.org?  Then have mod_python, mod_snake, and any other
> efforts listed as sub-projects.  

Yes, sounds interesting. Though I also agree with Jorgen's point in 
consolidating efforts. I haven't really touched mod_snake, but if it 
essentially duplicates the mod_python functionality, what's the point of
having 2 siamese twins consuming programmers' cycles? 
In such a situation, I'd say let's put them both on some serious neutral 
benchmark tests, choose the best of the breed, then focus all efforts on it 
(and sidestep the other in the name of the common good). Egoes will be bruised
in the process, but as Spock said in 'the Wrath of Khan': ... 

> Zope could be related link, but it
> really does fit in with what I think of when I think "mod_python".  I
> want mod_python to provide 2 very key parts; 1. provided an embedded
> interperter so I can speed up a existing python code with little effort
> and 2. provide a python API version of the Apache API. (I'm not saying
> we don't have these bases covered, just say what I'm looking for in a
> mod python project).  Zope is a tool for a different job.

Zope is not an apache module. Hence, Zope almost jumps out of topic.

My vision of a python.apache.org is a lot closer to perl.apache.org.
I'm an old user of mod_perl... until I discovered python couple of years ago. 
And never looked back since.
How can I put it? I want to do mod_perl, but while writing in python.
So I'm rather leaning towards Jorgen's vision of a consolidated effort
and cooperation between projects, eventually merging somewhere down the line.
I'd want the Apache Foundation to give the same treatment to python it now
gives perl (java, tcl, ...). Nothing more, nothing less.
Then eventually I'd want O'Reilly to update their 'Writing Apache Modules with 
Perl and C' to something like 'Writing Apache Modules with Perl, Python and C'.

I have this weird feeling python is one of those totally underestimated jewels
of the open source movement. Guido achieved a jewel of a programming language.
This should definitely put python on the (web programming) map,
give it the visibility it (rightfully!) deserves. AND democratize web 
programming (python is so easy and clean, my grandmother could write web apps).

Vio

From jack_diederich at email.com  Sat Aug 24 22:29:59 2002
From: jack_diederich at email.com (Jack Diederich)
Date: Fri Jan  9 21:53:03 2004
Subject: [mod_python] Promoting Python as web application development
    language
Message-ID: <20020825032959.12775.qmail@email.com>

> * Michael Neel <neel@mediapulse.com> [020824 21:18]:
> > Would it make since to have python.apache.org work the same as
> > jakarta.apache.org?  Then have mod_python, mod_snake, and any other
> > efforts listed as sub-projects.  
> 

mod_snake is dead [modsnake.sourceforge.net] according to the author
zope is well ... zope and has as much to with with Apache as it does IIS,
or squid, or freecell.

python.apache.org seems like a good pragmatic idea, I think the possibility
of a holy war or bruised egos has been over hyped in this discussion.
mod_python is the apache integration that serves the small but growing group
of people writing python web apps with apache.  There isn't much else to
say, lets not lose perspective - it's a sub-domain name (domain sub-name?).

I haven't had time to go over the mod_snake sources yet, but there may
be some good stuff in there.  I don't think that changes anything.
(as a terrible metric, the mod_snake tarball is 100k larger than
mod_python).  If people ressurect some of the code by patching mod_python,
great.

-jackdied

.sig
There is a fine line between being The Man, and being That Guy

-- 
__________________________________________________________
Sign-up for your own FREE Personalized E-mail at Mail.com
http://www.mail.com/?sr=signup


From alain at onesite.org  Sun Aug 25 05:37:37 2002
From: alain at onesite.org (Alain Tesio)
Date: Fri Jan  9 21:53:03 2004
Subject: [mod_python] Promoting Python as web application development language
In-Reply-To: <20020824222438.A313@eye.neb>
References: <20020824091559.A956@eye.neb>
	<000401c24bac$f967e930$0400a8c0@clapton>
	<20020824222438.A313@eye.neb>
Message-ID: <20020825053737.5ce9a280.alain@onesite.org>

On Sat, 24 Aug 2002 22:24:38 -0500
vio <vmilitaru@sympatico.ca> wrote:

> I haven't really touched mod_snake, but if it 
> essentially duplicates the mod_python functionality, what's the point of
> having 2 siamese twins consuming programmers' cycles? 

mod_snake died some months ago

http://modsnake.sourceforge.net/
http://apache.slashdot.org/apache/02/05/12/0419208.shtml?tid=148

Alain

From alain at onesite.org  Sun Aug 25 05:57:48 2002
From: alain at onesite.org (Alain Tesio)
Date: Fri Jan  9 21:53:03 2004
Subject: [mod_python] Promoting Python as web application development language
In-Reply-To: <20020825032959.12775.qmail@email.com>
References: <20020825032959.12775.qmail@email.com>
Message-ID: <20020825055748.04878b30.alain@onesite.org>

On Sat, 24 Aug 2002 22:29:59 -0500
"Jack Diederich" <jack_diederich@email.com> wrote:

> 
> I haven't had time to go over the mod_snake sources yet, but there may
> be some good stuff in there.  I don't think that changes anything.
> (as a terrible metric, the mod_snake tarball is 100k larger than
> mod_python).  If people ressurect some of the code by patching mod_python,
> great.

Here is an interesting comment in the slashdot dicussion, no idea if all points
are valid though.

Alain


bye bye (Score:3, Informative) 
by DrSkwid (`moc.elbbubtnuc' `ta' `mapshsals') on Sunday May 12, @06:23AM (#3505266) 
(User #118965 Info | http://www.hardlight.couk.com/) 


I was one of the people bugging him for updates, I could never get it to compile of
FreeBSD for me.

I ended up going over to mod_python.

Shame because one of the premises of mod_snake was the concept of nested python
interpreters. Like Apache itself mod_snake had one thread and then passed the request
on to another python interpreterrunning as a sub thread so that you could maintain
state between requests by using the same interpreter.

It sounded interesting, but I never got the chance to find out.

mod_python has the annoying attribute of requiring the whole python installation to
be compiled as single threaded which means some modules don't work (urllib for
instance - so you have to roll your own url en/decoder). Which then leaves you in the
stick world of two python installations of you want to use sockets and threads in
other applications.

I've still not sussed out how to easily manage two installations :(

mod_python does rule though, I much prefer using it to php or standard CGI and I'm
so glad I dont have to learn any more of mod_perl than the rudimentrary stuff I
picked from reading the O'Reilly mod_perl book.

From barr at cs.cornell.edu  Sun Aug 25 00:13:56 2002
From: barr at cs.cornell.edu (Rimon Barr)
Date: Fri Jan  9 21:53:03 2004
Subject: [mod_python] python.apache.org
In-Reply-To: <20020825053737.5ce9a280.alain@onesite.org>
Message-ID: <Pine.LNX.4.44.0208250008190.11744-100000@pompom.u.cs.cornell.edu>

A suggestion... The following list (+Spyce!) [1] could be a useful
starting point as a list to prune from for projects for python.apache.org.
I believe python.apache.org is a great idea, and will give the Python
community additional visibility and users. I also think that it should be
an inclusive site (like java.apache.org and xml.apache.org) that serves as
a registry of mature web-related python-based projects.

[1] - http://spyce.sourceforge.net/doc_related.html

All the best,
Rimon.
-- 
 * Rimon Barr       Ph.D. candidate, Computer Science, Cornell University
 | barr@cs.cornell.edu - http://www.cs.cornell.edu/barr - Y!IM: batripler
 |
 | Understanding is a kind of ecstasy.
 +----                                   -- Carl Sagan


From vmilitaru at sympatico.ca  Sun Aug 25 00:37:51 2002
From: vmilitaru at sympatico.ca (vio)
Date: Fri Jan  9 21:53:03 2004
Subject: [mod_python] Promoting Python as web application development language
In-Reply-To: <20020825032959.12775.qmail@email.com>; from jack_diederich@email.com on Sat, Aug 24, 2002 at 10:29:59PM -0500
References: <20020825032959.12775.qmail@email.com>
Message-ID: <20020825003751.A388@eye.neb>

* Jack Diederich <jack_diederich@email.com> [020824 23:47]:
> mod_snake is dead [modsnake.sourceforge.net] according to the author

Sounds to me like a step towards 'python.apache.org == mod_python'. 
Perhaps Jorgen's fears that such a move may split the 'web python community' 
may have been a little premature. Perhaps the current 'web python community' 
may not be as big as initially estimated (a fact that python.apache.org is
intended to remedy).

> zope is well ... zope and has as much to with with Apache as it does IIS,
> or squid, or freecell.

I agree. It's quite big and getting bigger. Though my main issue with zope was 
that it simply didn't scale well for projects with more than a few hundred 
objects (at least from my experience). Perhaps because it uses a python-based
object database, which is not very performant for large scale projects. 
But I will recommend it nevertheless as an introductory environment to web 
programming (I really learned a lot in my zope days).

Vio

> python.apache.org seems like a good pragmatic idea, I think the possibility
> of a holy war or bruised egos has been over hyped in this discussion.
> mod_python is the apache integration that serves the small but growing group
> of people writing python web apps with apache.  There isn't much else to
> say, lets not lose perspective - it's a sub-domain name (domain sub-name?).
> 
> I haven't had time to go over the mod_snake sources yet, but there may
> be some good stuff in there.  I don't think that changes anything.
> (as a terrible metric, the mod_snake tarball is 100k larger than
> mod_python).  If people ressurect some of the code by patching mod_python,
> great.
> 
> -jackdied

From jfk at metation.com  Sun Aug 25 19:29:06 2002
From: jfk at metation.com (=?iso-8859-1?q?J=F8rgen=20Fr=F8jk=20Kj=E6rsgaard=20{Metation}?=)
Date: Fri Jan  9 21:53:03 2004
Subject: [mod_python] Promoting Python as web application development language
In-Reply-To: <20020825003751.A388@eye.neb>
References: <20020825032959.12775.qmail@email.com> <20020825003751.A388@eye.neb>
Message-ID: <02082519290602.00315@grace.metation.com>

S?ndag 25. August 2002 07:37 skrev vio:
> * Jack Diederich <jack_diederich@email.com> [020824 23:47]:
> > mod_snake is dead [modsnake.sourceforge.net] according to the author
>
> Sounds to me like a step towards 'python.apache.org == mod_python'.
> Perhaps Jorgen's fears that such a move may split the 'web python
> community' may have been a little premature. Perhaps the current 'web
> python community' may not be as big as initially estimated (a fact that
> python.apache.org is intended to remedy).

If there really is nothing but Zope, which isn't an Apache module, and 
mod_python, there is no reason not to go ahead with python.apache.org == 
mod_python. I wasn't aware that mod_snake was dead (I never even bothered to 
try it - mod_python works fine ;-). Just keep the door open to other existing 
or new Pyton+Apache projects. The main reason for Apaches huge success is its 
openness - this openness should be kept in subprojects like python.apache.org,


regards, J?rgen

-- 
J?rgen Fr?jk Kj?rsgaard, direkt?r og systemkonsulent
Metation aps - Kystvejen 29, DK-8000 ?rhus C
Web: www.metation.com  - Tlf: +45 8625 0038 - Mobil: +45 2925 6693

From fabbe at paniq.net  Sun Aug 25 21:31:46 2002
From: fabbe at paniq.net (Fabian Fagerholm)
Date: Fri Jan  9 21:53:03 2004
Subject: [mod_python] Promoting Python as web application development
	language
In-Reply-To: <20020824091559.A956@eye.neb>
References: <20020823182218.A304@eye.neb>
	<02082410164204.00306@grace.metation.com> <20020824053625.A685@eye.neb>
	<02082413555205.00306@grace.metation.com>  <20020824091559.A956@eye.neb>
Message-ID: <1030300307.1041.29.camel@kernel>

On Sat, 2002-08-24 at 17:15, vio wrote:
> Well, Fabian, I hope this would be of some help for your PR efforts, so best
> of luck and hopefully you'll keep us in touch of your progress on the 
> mod_python list. I guess it's your call from now on.

Actually, no.

You decided to pursue a different course of action than I - a direct
mailing to the Apache Software Foundation Board - at this point. I
clearly stated that I wanted some discussion on this topic first. There
has been some discussion and some valuable points have been raised, but
I was not yet ready to proceed to the next stage.

Therefore, I regard your actions as your own, and you must take
responsibility for them. I hope you will relay any response from the ASF
Board to this mailing list. I also hope you come up with a good way of
redirecting any future correspondence to me or this list if you do not
wish to take over this effort.

I suggest the next time you have an urge to spill your beans, do it in
your own house where there are people to help you clean up your mess.


This effort will now have to be put on hold until we know whether or not
the ASF Board is going to respond to Mr. Vio's message.


Meanwhile, there are things to do. Interested parties please send me
private e-mail.

Fabian

-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 240 bytes
Desc: This is a digitally signed message part
Url : http://mailman.modpython.org/pipermail/mod_python/attachments/20020825/2e1d4cca/attachment-0001.bin
From fabbe at paniq.net  Sun Aug 25 21:34:37 2002
From: fabbe at paniq.net (Fabian Fagerholm)
Date: Fri Jan  9 21:53:03 2004
Subject: [mod_python] mod_python link on Apache web page?
In-Reply-To: <Pine.BSF.4.32.0208230834550.35718-100000@eden.ispol.com>
References: <Pine.BSF.4.32.0208230834550.35718-100000@eden.ispol.com>
Message-ID: <1030300477.972.32.camel@kernel>

On Fri, 2002-08-23 at 15:39, Gregory (Grisha) Trubetskoy wrote:
> 
> My "official" position on this is that I don't have strong feelings one
> way or the other. Being concerned with these matters is something that I
> at the moment do not have a lot of time for. If someone wants to take up
> the task of promoting mp, God bless'em.

Grisha, thank you for these words. They explain your position very
clearly.

I'm looking forward to seeing further mod_python development from you!

Cheers,
Fabian

-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 240 bytes
Desc: This is a digitally signed message part
Url : http://mailman.modpython.org/pipermail/mod_python/attachments/20020825/57e2b739/attachment-0001.bin
From vmilitaru at sympatico.ca  Sun Aug 25 20:32:58 2002
From: vmilitaru at sympatico.ca (vio)
Date: Fri Jan  9 21:53:03 2004
Subject: [mod_python] Promoting Python as web application development language
Message-ID: <20020825203258.A304@eye.neb>

Well, sorry about this. But listen, Fabian, just accept that other people have
different views on this than your own, and different ways of doing things. 
Additionally, I do have serious problems with all this 'privacy' in your 
procedure. I think this is a public issue where everybody is concerned, and 
all communications on this topic should be in a 'public' forum, not private
emails. You'll notice that I took great care in CC-ing everything I received
on this to this public list, with the exception of couple of mails from you
and Rimon.

I consider my somewhat direct message to the ASF and related messages have been
successful: they established what the criteria for a 'python.apache.org'
are (check out Jorgen's replies). Additional messages on this topic 
established that the way to a 'python.apache.org == mod_python' is a rather 
clear and straight path.

The main issue now seems to be whether the 'python.apache.org' brand should be
only used for apache 'modules' (like mod_perl and mod_python) - which is what
I am promoting, or a more general link to all kind of packages more or less 
related to apache and python. This is what Rimon promotes. 

From fabbe at paniq.net  Mon Aug 26 09:59:33 2002
From: fabbe at paniq.net (Fabian Fagerholm)
Date: Fri Jan  9 21:53:03 2004
Subject: [mod_python] Promoting Python as web application development
	language
In-Reply-To: <20020825203258.A304@eye.neb>
References: <20020825203258.A304@eye.neb>
Message-ID: <1030345173.976.72.camel@kernel>

On Mon, 2002-08-26 at 04:32, vio wrote:
> Well, sorry about this. But listen, Fabian, just accept that other people have
> different views on this than your own, and different ways of doing things.

I certainly do. As long as their actions don't impede on mine, everyone
is free to do as they please.
 
> Additionally, I do have serious problems with all this 'privacy' in your 
> procedure. I think this is a public issue where everybody is concerned, and 
> all communications on this topic should be in a 'public' forum, not private
> emails. You'll notice that I took great care in CC-ing everything I received
> on this to this public list, with the exception of couple of mails from you
> and Rimon.

This is not a public issue. It's an issue for interested parties - which
is why I have been prepared to spend my own and others' bandwidth and
time to solicit opinions and volunteers from the appropriate forums.

> I consider my somewhat direct message to the ASF and related messages have been
> successful: they established what the criteria for a 'python.apache.org'
> are (check out Jorgen's replies). Additional messages on this topic 
> established that the way to a 'python.apache.org == mod_python' is a rather 
> clear and straight path.

Is Jorgen a member of the ASF?

www.apache.org is the property of the ASF, and as such the ultimate
decision of what python.apache.org should be (and whether it should be
at all) is theirs. All we can do is come with proposals.

I'm trying to work on something that extends to a broader area.
python.apache.org is admittedly an important part of this, but it is
still only a part.

> The main issue now seems to be whether the 'python.apache.org' brand should be
> only used for apache 'modules' (like mod_perl and mod_python) - which is what
> I am promoting, or a more general link to all kind of packages more or less 
> related to apache and python. This is what Rimon promotes. 
[...]

This is certainly a valid question, but I'm afraid it's not a decision
to be made by us at this forum. Also, these are not the only options.

> This is wrong: apache is one of the core successes of the open source model,
> it should be handled with extreme care and foresight.

Care and foresight have certainly been key words in your handling of
this issue.

> I have nothing to promote on the apache site and nothing to gain
> from seeing 'mod_python == python.apache.org'. It's just the right thing to do.

Well, this discussion has been going on for long enough and I thank
Grisha for letting it happen on this mailing list. What follows now is
work, work, work, and hopefully there will be something to announce in
the coming weeks.

Vio, could you please let us know if the ASF board has replied?

Cheers,
Fabian

-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 240 bytes
Desc: This is a digitally signed message part
Url : http://mailman.modpython.org/pipermail/mod_python/attachments/20020826/009a97b8/attachment-0001.bin
From vmilitaru at sympatico.ca  Mon Aug 26 03:25:08 2002
From: vmilitaru at sympatico.ca (vio)
Date: Fri Jan  9 21:53:03 2004
Subject: [mod_python] Promoting Python as web application development language
In-Reply-To: <1030345173.976.72.camel@kernel>; from fabbe@paniq.net on Mon, Aug 26, 2002 at 09:59:33AM +0300
References: <20020825203258.A304@eye.neb> <1030345173.976.72.camel@kernel>
Message-ID: <20020826032508.A658@eye.neb>

* Fabian Fagerholm <fabbe@paniq.net> [020826 02:59]:
>  ...
> > Additionally, I do have serious problems with all this 'privacy' in your 
> > procedure. I think this is a public issue where everybody is concerned, and 
> > all communications on this topic should be in a 'public' forum, not private
> > emails. You'll notice that I took great care in CC-ing everything I received
> > on this to this public list, with the exception of couple of mails from you
> > and Rimon.
> 
> This is not a public issue. It's an issue for interested parties - which
> is why I have been prepared to spend my own and others' bandwidth and
> time to solicit opinions and volunteers from the appropriate forums.

Sounds like we have a big difference of views here. Let's agree to disagree.

> ...
> Care and foresight have certainly been key words in your handling of
> this issue.

Touche :-)

> 
> Well, this discussion has been going on for long enough and I thank
> Grisha for letting it happen on this mailing list. 

Here we're in total agreement, so I'd like to join you in thanking Gregory.
Though, since mod_python is a core element of this topic (as far as I'm
concerned) I think it's only natural that such discussions take place on
precisely this public forum.

> 
> Vio, could you please let us know if the ASF board has replied?

Obviously. As previously mentionned, as far as I'm concerned, all emails 
related to this topic will be CC-ed to the mod_python list, for all to see
and have a chance to react to. This topic is of public interest.

Regards,
Vio

From jfk at metation.com  Mon Aug 26 12:03:20 2002
From: jfk at metation.com (=?iso-8859-1?q?J=F8rgen=20Fr=F8jk=20Kj=E6rsgaard=20{Metation}?=)
Date: Fri Jan  9 21:53:03 2004
Subject: [mod_python] Promoting Python as web application development language
In-Reply-To: <1030345173.976.72.camel@kernel>
References: <20020825203258.A304@eye.neb> <1030345173.976.72.camel@kernel>
Message-ID: <02082612032001.00310@grace.metation.com>

Mandag 26. August 2002 08:59 skrev du:
> > I consider my somewhat direct message to the ASF and related messages
> > have been successful: they established what the criteria for a
> > 'python.apache.org' are (check out Jorgen's replies). Additional messages
> > on this topic established that the way to a 'python.apache.org ==
> > mod_python' is a rather clear and straight path.
>
> Is Jorgen a member of the ASF?

I'm not. I'm a long-time mod_python user with an opinion about this issue. I 
followed the process of moving mod_dtcl to apache.org from the sideline as I 
was a contributor to that module at the time. My intension now is to try to 
ensure that a move of mod_python to apache.org succeeds.

In my opinion the message to ASF was sent way too early in the discussion. I 
think somebody - preferably Grisha, if he'd had the time for it - should 
contact other groups who have moved to apache.org and learn from their 
experience. A good candidate to contact is David Welton of the mod_dtcl 
project. He can be contacted at davidw@apache.org. Davis Welton is also a 
Python user, though I don't think he uses it for web.

regards, J?rgen

-- 
J?rgen Fr?jk Kj?rsgaard, direkt?r og systemkonsulent
Metation aps - Kystvejen 29, DK-8000 ?rhus C
Web: www.metation.com  - Tlf: +45 8625 0038 - Mobil: +45 2925 6693

From fabbe at paniq.net  Mon Aug 26 13:04:03 2002
From: fabbe at paniq.net (Fabian Fagerholm)
Date: Fri Jan  9 21:53:03 2004
Subject: [mod_python] Promoting Python as web application development
	language
In-Reply-To: <02082612032001.00310@grace.metation.com>
References: <20020825203258.A304@eye.neb> <1030345173.976.72.camel@kernel> 
	<02082612032001.00310@grace.metation.com>
Message-ID: <1030356244.1029.96.camel@kernel>

On Mon, 2002-08-26 at 13:03, J?rgen Fr?jk Kj?rsgaard {Metation} wrote:
> > Is Jorgen a member of the ASF?
> 
> I'm not. I'm a long-time mod_python user with an opinion about this issue. I 
> followed the process of moving mod_dtcl to apache.org from the sideline as I 
> was a contributor to that module at the time. My intension now is to try to 
> ensure that a move of mod_python to apache.org succeeds.

Excellent.

> In my opinion the message to ASF was sent way too early in the discussion. I 
> think somebody - preferably Grisha, if he'd had the time for it - should 
> contact other groups who have moved to apache.org and learn from their 
> experience.

I think everyone who has followed this thread knows my take on the
message to ASF so no more on that from me.

I would also be happy to see Grisha push this issue, but in
http://www.modpython.org/pipermail/mod_python/2002-August/002372.html,
he explains that he doesn't have time for this effort at the moment,
which I think should be respected. Therefore, as the initiator of this
thread, I feel compelled to do this instead.

I have made some progress but I urge you all to be patient. There really
isn't much use of everyone sending random mails all over the place. I'm
going to be in touch with several groups and individuals and as you
know, it takes a few days to get replies.

Rest assured that I'll post when there's something to tell.

> A good candidate to contact is David Welton of the mod_dtcl 
> project. He can be contacted at davidw@apache.org. Davis Welton is also a 
> Python user, though I don't think he uses it for web.

Now this is the type of information I'm after. Many thanks for this
pointer - I shall contact David and ask for his views and advice.

Cheers,
Fabian

-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 240 bytes
Desc: This is a digitally signed message part
Url : http://mailman.modpython.org/pipermail/mod_python/attachments/20020826/662db266/attachment-0001.bin
From fabbe at paniq.net  Mon Aug 26 13:30:30 2002
From: fabbe at paniq.net (Fabian Fagerholm)
Date: Fri Jan  9 21:53:03 2004
Subject: [mod_python] Promoting Python as web application development
	language
In-Reply-To: <02082612032001.00310@grace.metation.com>
References: <20020825203258.A304@eye.neb> <1030345173.976.72.camel@kernel> 
	<02082612032001.00310@grace.metation.com>
Message-ID: <1030357830.1029.113.camel@kernel>

On Mon, 2002-08-26 at 13:03, J?rgen Fr?jk Kj?rsgaard {Metation} wrote:
> My intension now is to try to 
> ensure that a move of mod_python to apache.org succeeds.

Oh yes, a small clarification here.

My intent is not to *move* mod_python to apache.org - that is a call for
Grisha to make in the future. My intent is to provide means for
communication between Apache users and Python users (and thus create
some "Apache-Python" users), to promote the needs of Apache-Python
users, and promote Python as a web application development language in
general.

The topic of this thread reflects this intent.

Cheers,
Fabian

-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 240 bytes
Desc: This is a digitally signed message part
Url : http://mailman.modpython.org/pipermail/mod_python/attachments/20020826/e93d3039/attachment-0001.bin
From vmilitaru at sympatico.ca  Mon Aug 26 08:15:52 2002
From: vmilitaru at sympatico.ca (vio)
Date: Fri Jan  9 21:53:03 2004
Subject: [mod_python] Promoting Python as web application development language
In-Reply-To: <1030356244.1029.96.camel@kernel>; from fabbe@paniq.net on Mon, Aug 26, 2002 at 01:04:03PM +0300
References: <20020825203258.A304@eye.neb> <1030345173.976.72.camel@kernel> <02082612032001.00310@grace.metation.com> <1030356244.1029.96.camel@kernel>
Message-ID: <20020826081552.A951@eye.neb>

* Fabian Fagerholm <fabbe@paniq.net> [020826 07:50]:
> ...
> I have made some progress but I urge you all to be patient. There really
> isn't much use of everyone sending random mails all over the place. I'm
> going to be in touch with several groups and individuals and as you
> know, it takes a few days to get replies.
> 
> Rest assured that I'll post when there's something to tell.

I hear you. Anyways, on my side I've pretty much exhausted the topic, and I
have no intention to go beyond exchanging points of view on this list (if I
have something I consider of interest to add, that is). 
Still, for me it was a fun, though heated, little exchange of strong opinions
and beliefs, a few sparks flying here and there, no harm intended.
So best of luck, and looking foreword to your posts.

Cheers,
Vio

From fabbe at paniq.net  Mon Aug 26 17:27:32 2002
From: fabbe at paniq.net (Fabian Fagerholm)
Date: Fri Jan  9 21:53:03 2004
Subject: [mod_python] Status report: Promoting Python as web application development
 language
Message-ID: <1030372052.976.211.camel@kernel>

FYI,

I have sent a Python SIG proposal to the Python Meta-SIG mailing list in
accordance with the SIG creation guidelines. I feel a Python SIG would
be most useful in co-ordinating this effort.

Those interested can view the SIG proposal in the Meta-SIG mailing list
archives:

    http://mail.python.org/pipermail/meta-sig/2002-August/001233.html

If you want to comment on this proposal, please send your comments
primarily to the Meta-SIG mailing list. You may of course Cc me if you
like.

Before you post, I suggest you read some of the messages in the archives
and observe the netiquette of that list:

    http://mail.python.org/pipermail/meta-sig/

The outcome of the discussion will be relayed to this list in a
subsequent post. Thus there is no need for cross-posting.

Cheers,
Fabian

-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 240 bytes
Desc: This is a digitally signed message part
Url : http://mailman.modpython.org/pipermail/mod_python/attachments/20020826/17f4fefb/attachment-0001.bin
From mbp at samba.org  Tue Aug 27 12:27:33 2002
From: mbp at samba.org (Martin Pool)
Date: Fri Jan  9 21:53:03 2004
Subject: [mod_python] Promoting Python as web application development language
In-Reply-To: <1030357830.1029.113.camel@kernel>
References: <20020825203258.A304@eye.neb> <1030345173.976.72.camel@kernel> <02082612032001.00310@grace.metation.com> <1030357830.1029.113.camel@kernel>
Message-ID: <20020827022730.GD29095@samba.org>

On 26 Aug 2002, Fabian Fagerholm <fabbe@paniq.net> wrote:

> My intent is not to *move* mod_python to apache.org - that is a call for
> Grisha to make in the future. My intent is to provide means for
> communication between Apache users and Python users (and thus create
> some "Apache-Python" users), to promote the needs of Apache-Python
> users, and promote Python as a web application development language in
> general.

I think it would make sense for there to be *something* on
python.apache.org that answers the question of "I've got Apache and I
like Python; now what?"  

To start with just a really simple page linking to projects such as
mod_python, Cheetah (and other templating/html systems) could be
really good.  A lot more could possibly done in the future, but I
think this would be useful and hopefully not controversial.

Perhaps a few paragraphs explaining broadly how to do web development
in Python would be good.  What are the architectural decisions you
have to make (in-line vs templates vs DOM,...) and that sort of
thing.  I know I found it a bit confusing when looking at DTML vs
Cheetah vs everything else.

-- 
Martin 

From vmilitaru at sympatico.ca  Tue Aug 27 05:28:20 2002
From: vmilitaru at sympatico.ca (vio)
Date: Fri Jan  9 21:53:03 2004
Subject: [mod_python] Promoting Python as web application development language
In-Reply-To: <20020826151930.A4908@lyra.org>; from gstein@lyra.org on Mon, Aug 26, 2002 at 03:19:30PM -0700
References: <20020823182218.A304@eye.neb> <3D6A6A52.45D2EE84@Golux.Com> <20020826151930.A4908@lyra.org>
Message-ID: <20020827052817.B301@eye.neb>

First of all, thanks for your reply.

Why mod_python on the apache.org site?
I'm a web apps coder. And I love my python. Why mod_python? Because I want to
code apache apps in python. Also because of mod_perl: as a python afficionado, 
I feel left out (as the rest of the python community): why doesn't the ASF also
promote python on the same level as perl, java et al.

Why mod_python? It just so happens that there are not that many options out
there to write apache apps in python. This particular package seems to do the
job well, is very close and integrated with the apache program itself, and 
that's about all there is to it. 
We (I) 'need' a mod_perl for python programmers.

I hope this answers Ken's question, though imperfectly.

I would like to add that I am not a programmer of this mod_python package. I
am just a (heavy) user of both apache and python, and this question of the lack
of a python alternative on the main apache web site came out on our mailing 
list recently. And I personally took the liberty to writing to the apache board.

To Greg's argument that there is no ASF Python project, my question is WHY?
It's obvious to me there should be one.

Though I am obviously not an ASF member, and am not aware of how things work
at ASF, interestingly, through discussions on this topic on the mod_python
list, I came to the same conclusion as Greg: from my user's point of view
I would expect the apache site to feature only the core package itself,
and then only 'direct' extensions of the core: the modules (mod_perl, mod_ssl,
and yes, a python module - be it mod_python or something else). Anything else
would appear as an unhealthy overextension of the 'apache' brand. It's just my 
very personal opinion.

Gregory (Grisha) Trubetskoy is the author of mod_python. I hope he gets a 
chance to react to your post, especially Greg Stein's last 2 paragraphs.

Regards,
Vio

* Greg Stein <gstein@lyra.org> [020827 03:54]:
> On Mon, Aug 26, 2002 at 01:50:10PM -0400, Rodent of Unusual Size wrote:
> > vio wrote:
> > > But I just wanted to cut the bull and go straight to the point:
> > > we have this great apache module called mod_python, thanks to
> > > Gregory (Grisha) Trubetskoy, suffering from a big lack of exposure.
> > > We strongly believe this great piece of technology (which is the
> > > marriage of apache + python) deserves a place alongside mod_perl
> > > and mod_ssl 'on the main apache site'.
> > 
> > It might be possible to list it under the 'Sister Project' section,
> > but the question becomes: why mod_python and not mod_*?  What
> > makes mod_python stand out above the hundreds of other modules
> > in order to warrant this?  (Not being facetious; it's a serious
> > question.)
> 
> Ken also missed pointing out that the Perl, PHP, and Tcl projects that
> you're seeing in that list are all ASF projects. As there is no "Python"
> project, you don't see a Python listed there :-)
> 
> Personally, I have (recently) been advocating a move away from
> language-specific ASF Projects. In my ideal world, mod_perl, mod_(d)tcl, and
> mod_php would all be "sub projects" of the Apache HTTP Server project, and
> the Perl, Tcl, PHP projects would disappear. IMO, that is their natural,
> functional grouping.
> 
> To that extent, I would very much love to see mod_python become a subproject
> of the HTTP server. It would reside alongside mod_ldap, mod_mbox, mod_pop3,
> etc. From there, it could gain exposure through a number of venues on the
> ASF website.
> 
> To become an ASF project, the owners/committers of the code would need to
> agree to donate the codebase to the ASF and be willing to maintain it within
> our framework (along with other ASF committers and members who are also
> interested). Ideally, the community that comes with it would also follow
> some of the philosophy of the ASF in terms of being a friendly community,
> open source code, etc.
> 
> Cheers,
> -g
> 
> -- 
> Greg Stein, http://www.lyra.org/

From fabbe at paniq.net  Tue Aug 27 17:41:08 2002
From: fabbe at paniq.net (Fabian Fagerholm)
Date: Fri Jan  9 21:53:03 2004
Subject: [mod_python] Promoting Python as web application development
	language
In-Reply-To: <20020827052817.B301@eye.neb>
References: <20020823182218.A304@eye.neb> <3D6A6A52.45D2EE84@Golux.Com>
	<20020826151930.A4908@lyra.org>  <20020827052817.B301@eye.neb>
Message-ID: <1030459269.12012.70.camel@kernel>

As the initiator of the original discussion, I'd like to jump in with a
little comment right now before this heads off in a random direction.

I've been discussing these matters with David Welton of the Apache Tcl
Project (who has kindly agreed to assist me in this effort) and it seems
the mod_python community is lacking some vital understanding of exactly
what the Apache Software Foundation is.

Please read carefully:

> * Greg Stein <gstein@lyra.org> [020827 03:54]:
> > To become an ASF project, the owners/committers of the code would need to
> > agree to donate the codebase to the ASF and be willing to maintain it within
> > our framework (along with other ASF committers and members who are also
> > interested). Ideally, the community that comes with it would also follow
> > some of the philosophy of the ASF in terms of being a friendly community,
> > open source code, etc.

The mod_python software is written by Gregory Trubetskoy and a number of
contributors [0]. It already has a working infrastructure with a web
site, cvs (via sourceforge), and a mailing list.

ASF projects seem to have the general requirement that the copyright of
the software is to be assigned to the ASF.

This is not a decision that can be made by consensus on this mailing
list. It is the decision of the current copyright owner(s).

Gregory Trubetskoy has already expressed that he doesn't view the lack
of python.apache.org to be a problem [1] and that he doesn't have time
to spend on this effort [2] at the moment.

In order for anything to happen, Gregory must either be interested in
making mod_python an ASF project, or the mod_python community must come
up with an alternative arrangement with the ASF (such as a "Sister
Projects" link or whatever the ASF prefers).

In the former case, I'm sure communication can proceed directly between
Gregory and the ASF now that a contact has been established. I'll be
happy to share all information that I have gathered so far.

I invite everyone to continue this discussion with these facts in mind.
I also invite anyone to endorse the Python Special Interest Group
Proposal [3] that was sent to the Python Meta-SIG mailing list.

Regards,
Fabian Fagerholm

[0] http://www.modpython.org/live/mod_python-2.7.8/CREDITS

[1] http://www.modpython.org/pipermail/mod_python/2002-August/002364.html

[2] http://www.modpython.org/pipermail/mod_python/2002-August/002372.html

[3] http://mail.python.org/pipermail/meta-sig/2002-August/001233.html

-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 240 bytes
Desc: This is a digitally signed message part
Url : http://mailman.modpython.org/pipermail/mod_python/attachments/20020827/69694b4b/attachment-0001.bin
From vmilitaru at sympatico.ca  Tue Aug 27 11:28:14 2002
From: vmilitaru at sympatico.ca (vio)
Date: Fri Jan  9 21:53:04 2004
Subject: [mod_python] Promoting Python as web application development language
In-Reply-To: <3D6B87F6.9709C80E@Golux.Com>; from Ken.Coar@Golux.Com on Tue, Aug 27, 2002 at 10:08:54AM -0400
References: <20020823182218.A304@eye.neb> <3D6A6A52.45D2EE84@Golux.Com> <20020826151930.A4908@lyra.org> <3D6B87F6.9709C80E@Golux.Com>
Message-ID: <20020827112814.A756@eye.neb>

I just received a message from Grisha adressing the first part of yours, 
I hope to your satisfaction. 

For the second part, I totally agree that enthousiasm is not a good metric 
in this (most!) issues. But I would like to add that
the essence of my posts was not as much about Grisha's code, as about the need
of a good framework to write apache apps in python. Give me any other package
which accomplishes this task as good or better than Grisha's code, and I'll
embrace that, and champion it instead. My point was not 'mod_python' as
Grisha's code, but mod_python as a sister module to mod_perl, a solid module
to write apache apps in python. That's the core source of my enthousiasm.
To avoid any confusion: I'm simply  championning Grisha's code out of a lack 
of a better alternative. The fact that it does the job it's supposed to doesn't
hurt, though :)

More particularily regarding Grisha's code, I disagree with your assessment 
that installed base should be considered as a metric in this instance.
For the simple reason that, in my personal opinion, 
lack of exposure is its main overall problem. Though I'm
not a marketing expert, and I have no particular interest in seeing this
precise piece of code exposed on the apache site more than any other who
could accomplish the same tasks, my gut feeling is that
once people will see and 'tip their toe' in it, they will share my enthousiasm
(to various degrees, obviously). The core truth is that python is an extremely
easy, clean and powerful programming language. Combining it with the most
popular web server out there might open the door to 'democratizing' the 
web application development.
In my opinion :)

Regards,
Vio


* Rodent of Unusual Size <Ken.Coar@Golux.Com> [020827 10:41]:
> Greg Stein wrote:
> > 
> > To become an ASF project, the owners/committers of the code
> > would need to agree to donate the codebase to the ASF and
> > be willing to maintain it within our framework (along with
> > other ASF committers and members who are also interested).
> 
> Also,
> 
> o assign the copyright and 
> o licence it under the Apache licence
> 
> You've said several times that mod_python is Grisha's
> project.  ASF projects have *no* individual owners.
> I don't know if Grisha is willing to give up ownership
> in order for mod_python to become an ASF project, which
> is why I suggested the 'sister projects' section.
> 
> I'm afraid that I can't see individual enthusiasm as a valid
> metric for whether to include mod_python on the Apache page.
> Usefulness to and penetration in the user community are more
> appropriate, I think.
> -- 
> #ken	P-)}
> 
> Ken Coar, Sanagendamgagwedweinini  http://Golux.Com/coar/
> Author, developer, opinionist      http://Apache-Server.Com/
> 
> "Millennium hand and shrimp!"

From neel at mediapulse.com  Tue Aug 27 15:57:10 2002
From: neel at mediapulse.com (Michael C. Neel)
Date: Fri Jan  9 21:53:04 2004
Subject: [mod_python] Promoting Python as web application developmentlanguage
Message-ID: <C0FC22C08B82074A88B50061764157775B97@johnson.mediapulse.net>

Just chipping in my thoughts here, mostly on the copyright issues.

As mod_python stands now (and as I understand it), it is solely under
the copyright of Gregory Trubetskoy
(http://www.modpython.org/live/mod_python-2.7.8/doc-html/front.html).
So unless Gregory has reasons to not do so, moving mod_python to an ASF
license shouldn't be much of an issue.  I'd also say that as a developer
I almost need to see mod_python placed under a "standard" open source
license like ASF, GNU, or Artistic (or even python's own PSF).  This
will give me the assurance that I won't find out one day that all the
mod_python releases are commercial and closed source.  I have been
burned in the past by this table cloth switching, and it wasn't fun.

The other thing I'd like to say is that python.apache.org should just be
mod_python.  It servers the same purpose as mod_perl, to allow apache
development in python.  Catering the section to template modules,
application servers, or others projects just dilutes what a developer is
looking for.  I do think a "sister sites" link area is a good idea, as
well as some kind of mod_python CPAN.

The community does need this, badly.  Python itself needs this.  I
recently did 20 interviews for the position of internet developer, and
not one person knew of python when I asked.  I figure there are two
reasons for this: python sucks, or it doesn't have enough exposure.
I've written code in python before, so I know it can't be number one...

Mike
--
Michael C. Neel
There are only 10 types of people in the world;
those who understand binary and those who don't.


-----Original Message-----
From: Fabian Fagerholm [mailto:fabbe@paniq.net] 
Sent: Tuesday, August 27, 2002 10:41 AM
To: vio
Cc: mod_python@modpython.org; Greg Stein; Ken.Coar@Golux.Com;
davidw@dedasys.com; grisha@modpython.org
Subject: Re: [mod_python] Promoting Python as web application
developmentlanguage


As the initiator of the original discussion, I'd like to jump in with a
little comment right now before this heads off in a random direction.

I've been discussing these matters with David Welton of the Apache Tcl
Project (who has kindly agreed to assist me in this effort) and it seems
the mod_python community is lacking some vital understanding of exactly
what the Apache Software Foundation is.

Please read carefully:

> * Greg Stein <gstein@lyra.org> [020827 03:54]:
> > To become an ASF project, the owners/committers of the code would
need to
> > agree to donate the codebase to the ASF and be willing to maintain
it within
> > our framework (along with other ASF committers and members who are
also
> > interested). Ideally, the community that comes with it would also
follow
> > some of the philosophy of the ASF in terms of being a friendly
community,
> > open source code, etc.

The mod_python software is written by Gregory Trubetskoy and a number of
contributors [0]. It already has a working infrastructure with a web
site, cvs (via sourceforge), and a mailing list.

ASF projects seem to have the general requirement that the copyright of
the software is to be assigned to the ASF.

This is not a decision that can be made by consensus on this mailing
list. It is the decision of the current copyright owner(s).

Gregory Trubetskoy has already expressed that he doesn't view the lack
of python.apache.org to be a problem [1] and that he doesn't have time
to spend on this effort [2] at the moment.

In order for anything to happen, Gregory must either be interested in
making mod_python an ASF project, or the mod_python community must come
up with an alternative arrangement with the ASF (such as a "Sister
Projects" link or whatever the ASF prefers).

In the former case, I'm sure communication can proceed directly between
Gregory and the ASF now that a contact has been established. I'll be
happy to share all information that I have gathered so far.

I invite everyone to continue this discussion with these facts in mind.
I also invite anyone to endorse the Python Special Interest Group
Proposal [3] that was sent to the Python Meta-SIG mailing list.

Regards,
Fabian Fagerholm

[0] http://www.modpython.org/live/mod_python-2.7.8/CREDITS

[1]
http://www.modpython.org/pipermail/mod_python/2002-August/002364.html

[2]
http://www.modpython.org/pipermail/mod_python/2002-August/002372.html

[3] http://mail.python.org/pipermail/meta-sig/2002-August/001233.html



From tree at basistech.com  Tue Aug 27 18:38:36 2002
From: tree at basistech.com (Tom Emerson)
Date: Fri Jan  9 21:53:04 2004
Subject: [mod_python] Promoting Python as web application developmentlanguage
In-Reply-To: <C0FC22C08B82074A88B50061764157775B97@johnson.mediapulse.net>
References: <C0FC22C08B82074A88B50061764157775B97@johnson.mediapulse.net>
Message-ID: <15723.65388.98630.19463@magrathea.basistech.com>

Michael C. Neel writes:
> The other thing I'd like to say is that python.apache.org should
> just be mod_python.  It servers the same purpose as mod_perl, to
> allow apache development in python.

Look though at http://tcl.apache.org/, which includes pointers to
several projects for integrating Tcl into Apache. I don't see why
mod_snake shouldn't be included with mod_python. Developers would be
coming to python.apache.org to find out how to interface to Apache
with Python...

> Catering the section to template modules, application servers, or
> others projects just dilutes what a developer is looking for.

... but the next question many will ask is, "so now what? Where are
the template packages?"

> I do think a "sister sites" link area is a good idea, as well as
> some kind of mod_python CPAN.

Indeed!

    -tree

-- 
Tom Emerson                                          Basis Technology Corp.
Software Architect                                 http://www.basistech.com
  "Beware the lollipop of mediocrity: lick it once and you suck forever"

From jack_diederich at email.com  Tue Aug 27 17:45:30 2002
From: jack_diederich at email.com (Jack Diederich)
Date: Fri Jan  9 21:53:04 2004
Subject: [OT] RE: [mod_python] Promoting Python as web application
    developmentlanguage
Message-ID: <20020827224530.25352.qmail@email.com>

> The community does need this, badly.  Python itself needs this.  I
> recently did 20 interviews for the position of internet developer, and
> not one person knew of python when I asked.  I figure there are two
> reasons for this: python sucks, or it doesn't have enough exposure.

I don't think it is crucial to hire a developer who knows the language. If someone knows a few languages (one or more being OO) learning python just takes a month of reading your existing code base to learn reasonably, and a few months more in the group environment to master.  Even in Boston with its largish perl community, a place I worked previously didn't discriminate on knowledge of perl.  A good developer is a good developer (most of the people were C++ heavies first, perl second), they have to learn the ins and outs of the company's development environment & coding style anyway, a different language is just one aspect of that. (All things being equal, hire the guy who already knows python, but that isn't the most important thing.).  If they can ace an interview in another language (or preferably a couple) then it is a good hire.  If they are a jack of all trades [master of none: why does everyone forget that part of the phrase?] just say 'thank you for your time' and walk away.

-jackdied

ps, my first name being 'Jack' I get 'Jack of all trades' meant as a complement frequently.  I've stopped taking offense becuase 99% of the people who say it are ignorant of the full phrase 'Jack [apprentice] of all trades, master of none' [http://www.bartleby.com/66/6/1706.html]

pps, 'jackdied' is frequently my email/login on jobs, it is typically the shortest thing to type into MS exchange or similar to uniquely pull my name out of the employee database ('died' being the first 4 letters of my last name).  Nothing morbid implied, just a good mnemonic.
-- 
__________________________________________________________
Sign-up for your own FREE Personalized E-mail at Mail.com
http://www.mail.com/?sr=signup


From vmilitaru at sympatico.ca  Wed Aug 28 01:47:38 2002
From: vmilitaru at sympatico.ca (vio)
Date: Fri Jan  9 21:53:04 2004
Subject: [mod_python] Promoting Python as web application developmentlanguage
In-Reply-To: <15723.65388.98630.19463@magrathea.basistech.com>; from tree@basistech.com on Tue, Aug 27, 2002 at 06:38:36PM -0400
References: <C0FC22C08B82074A88B50061764157775B97@johnson.mediapulse.net> <15723.65388.98630.19463@magrathea.basistech.com>
Message-ID: <20020828014738.B325@eye.neb>

* Tom Emerson <tree@basistech.com> [020828 00:45]:
> Michael C. Neel writes:
> > The other thing I'd like to say is that python.apache.org should
> > just be mod_python.  It servers the same purpose as mod_perl, to
> > allow apache development in python.
> 
> Look though at http://tcl.apache.org/, which includes pointers to
> several projects for integrating Tcl into Apache. I don't see why
> mod_snake shouldn't be included with mod_python. Developers would be
> coming to python.apache.org to find out how to interface to Apache
> with Python...

I'm a total ignorant about mod_snake, but in principle, promoting two siamese
twins accomplishing pretty much the same tricks implies a good waste of 
developer cycles (and other less valuable resources). Additionally, I wonder
about the efforts required to merge the two code bases (provided such might be
a goal). It is not unheard of that the result of such merges comes out 
over budget, over schedule, more instable and less performant than either of 
its (incestuous?) parents. In this light, I personally would question 
the logic of such a move, as opposed to simply
consolidating all efforts on the one we determined is the 'Best of Breed'.
By the same token, why is there no 'mod_camel' alongsite 'mod_perl' ?
Just a thought.

> 
> > Catering the section to template modules, application servers, or
> > others projects just dilutes what a developer is looking for.
> 
> ... but the next question many will ask is, "so now what? Where are
> the template packages?"
> 
> > I do think a "sister sites" link area is a good idea, as well as
> > some kind of mod_python CPAN.
> 
> Indeed!

This makes a lot of sense.
So the 'functional' hierarchy Greg Stein is promoting for the apache site
might look something like:

HTTP Server > modules > sister sites 

Looks to me much more consistent that what we have now, 
... while making (most) everyone happy :)

Cheers,
Vio

From fabbe at paniq.net  Wed Aug 28 09:49:49 2002
From: fabbe at paniq.net (Fabian Fagerholm)
Date: Fri Jan  9 21:53:04 2004
Subject: [mod_python] Promoting Python as web application
	developmentlanguage
In-Reply-To: <87it1vncv5.fsf@dedasys.com>
References: <C0FC22C08B82074A88B50061764157775B97@johnson.mediapulse.net>
	<15723.65388.98630.19463@magrathea.basistech.com> 
	<87it1vncv5.fsf@dedasys.com>
Message-ID: <1030517390.1596.50.camel@kernel>

On Wed, 2002-08-28 at 01:41, David N. Welton wrote:
> > I don't see why mod_snake shouldn't be included with
> > mod_python. Developers would be coming to python.apache.org to find
> > out how to interface to Apache with Python...
> 
> That would definitely make sense, if the author of mod_snake agreed to
> turn over the project to the ASF.

FYI, I just emailed the author asking for his opinion. I'll let you know
when I receive a reply.

Would the ASF consider adopting this "dead" codebase even if the
principal author would not be interested in continuing the project?


Meanwhile, I'd like to point out that the mod_python mailing list is now
a subscribe-before-posting list. From www.modpython.org:

    Sorry, due to exessive spam, you now must subscribe to be able to
    post to the list.
    
I strongly recommend that we move this discussion somewhere more
appropriate. The amount of off-topic mail on the mod_python list has
been large lately.

I ask again that any interested parties review the Python SIG proposal
[0] and endorse it by sending an email to the Meta-SIG mailing list.
Look at [1] for an example. That way we would have a mailing list for
discussions.

Apologies for Cc'ing anyone who's not interested, please let me know if
you don't want to be a part of this.

Regards,
Fabian

[0] http://mail.python.org/pipermail/meta-sig/2002-August/001233.html

[1] http://mail.python.org/pipermail/meta-sig/2002-August/001234.html

-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 240 bytes
Desc: This is a digitally signed message part
Url : http://mailman.modpython.org/pipermail/mod_python/attachments/20020828/482cd0f7/attachment-0001.bin
From vmilitaru at sympatico.ca  Wed Aug 28 03:04:58 2002
From: vmilitaru at sympatico.ca (vio)
Date: Fri Jan  9 21:53:04 2004
Subject: [mod_python] Promoting Python as web application developmentlanguage
In-Reply-To: <1030517390.1596.50.camel@kernel>; from fabbe@paniq.net on Wed, Aug 28, 2002 at 09:49:49AM +0300
References: <C0FC22C08B82074A88B50061764157775B97@johnson.mediapulse.net> <15723.65388.98630.19463@magrathea.basistech.com> <87it1vncv5.fsf@dedasys.com> <1030517390.1596.50.camel@kernel>
Message-ID: <20020828030457.A444@eye.neb>

* Fabian Fagerholm <fabbe@paniq.net> [020828 02:44]:
> ...
> I strongly recommend that we move this discussion somewhere more
> appropriate. The amount of off-topic mail on the mod_python list has
> been large lately.

I partially agree, but only to the extent that not technical issues are 
discussed in this thread. On the other hand, I believe a piece of mod_perl's
history is in the process of being written (perhaps) under our eyes.
Considering that the list is not currently flooded with technical issues,
I believe it's nice to document what is happening, with this thread/topic.
Perhaps for those who are 'out of the loop', and are just curious of what's
going on. I for one certainly find it quite interesting.

On a more personal note, being compulsively lazy, I'd much rather CC to
a single address (mod_python@modpython.org) than 10 individual addresses.
In 'mutt' on a laptop, this makes for a depressingly lot of cut&paste with a
weird 'button' mouse.

Just my opinion. (and Sorry for all the noise!)
Vio

From gstein at lyra.org  Wed Aug 28 01:42:41 2002
From: gstein at lyra.org (Greg Stein)
Date: Fri Jan  9 21:53:04 2004
Subject: [mod_python] Promoting Python as web application developmentlanguage
In-Reply-To: <20020828014738.B325@eye.neb>; from vmilitaru@sympatico.ca on Wed, Aug 28, 2002 at 01:47:38AM -0500
References: <C0FC22C08B82074A88B50061764157775B97@johnson.mediapulse.net> <15723.65388.98630.19463@magrathea.basistech.com> <20020828014738.B325@eye.neb>
Message-ID: <20020828014240.A8187@lyra.org>

On Wed, Aug 28, 2002 at 01:47:38AM -0500, vio wrote:
> * Tom Emerson <tree@basistech.com> [020828 00:45]:
> > Michael C. Neel writes:
>...
> > Look though at http://tcl.apache.org/, which includes pointers to
> > several projects for integrating Tcl into Apache. I don't see why
> > mod_snake shouldn't be included with mod_python. Developers would be
> > coming to python.apache.org to find out how to interface to Apache
> > with Python...

Note that "Apache" is beginning to mean a lot more than just "the Apache
http server". You've now got projects such as Tomcat, Xerces, and Cocoon all
under the Apache banner. Arguably, they have nothing to do with the web
server :-)

My point is just that people won't arrive at the ASF simply for "how to
interface to Apache with Python." Minor point to be sure, but hey :-)

> I'm a total ignorant about mod_snake, but in principle, promoting two siamese
> twins accomplishing pretty much the same tricks implies a good waste of 
> developer cycles (and other less valuable resources).

Each developer has the *right to choose* what they work on. You might call
it a waste, but those developers have a bunch of other reasons for why they
may work on duplicative code. For example, the Apache Tomcat guys have got a
web server built into their code. I ask, "what the hell? use Apache httpd!"
But even though that is a valid answer, some developers want a pure Java
solution, so they build a Java-based HTTP server. Even though (*IMO*) it is
a huge waste of effort. But it's their choice.

>...
> > > I do think a "sister sites" link area is a good idea, as well as
> > > some kind of mod_python CPAN.

More on this in a sec.

> > Indeed!
> 
> This makes a lot of sense.
> So the 'functional' hierarchy Greg Stein is promoting for the apache site
> might look something like:
> 
> HTTP Server > modules > sister sites 
> 
> Looks to me much more consistent that what we have now, 
> ... while making (most) everyone happy :)

I'd like to clarify my thoughts here (I've said this elsewhere, but not to
this forum, nor in a very public forum). Currently, the ASF has projects
aligned along *language* boundaries. For a certain selection of developer
and goal, this can be quite fine. "I need a Java-based MTA."

However, it starts to fall down when a question such as "I want a Java-based
XML parser." Is that in the ASF Jakarta Project, or the ASF XML Project?
Hunh. If everything were organized along *functional* lines, then the
question could always be answered properly. "An MTA? Go to the server
project. It will be in there." "An XML Parser? Go to the XML project." Of
course, you'd then select for the language of choice. But that is a
secondary criteria after the initial project selection.

Thus, I would not advocate something along the lines of python.apache.org.
"All things Python" doesn't help users looking for functionality, and it
tends to end up as a mish-mash of unrelated (Python) projects.

As a result, I would advocate mod_python as part of the Apache HTTP Server
Project itself. You've got a web server, and (hey!) here is the Python
connector. I would even advocate that mod_perl, mod_(d)tcl, and mod_php move
to this same organization (and whack those language specific projects).
Jakarta is just too frickin' huge to axe so easily :-), but there are lines
of functionality for that project, too.

In this view, vio is correct on my suggestion: the Apache HTTP Server
Project is the parent. Sub-projects include things like mod_python. And as a
matter of course, we simply refer people to other locations for other
httpd-related software.

[ and to clarify: I'm speaking of my opinion on ASF organization, rather
  than thru any official capacity ]

Back to the CPAN-like thing. Given the above view, how does this work?
Well... consider having some kind of "indexing" or "cataloging" project.
Language neutral. Sure, you could select by language, but why would it be
limited to just Perl or just Python? Why not both and Java and Tcl and Ruby
software?

*That* would be interesting. The trouble with such a beast, though, is
simply that it is such a hard problem to put together well. If it was easy,
it would have been done. And the ASF generally prefers to avoid the "dead
SourceForge project" syndrome. We're much more about *communities* than even
the software that is produced. The end result is that a certain bar needs to
be raised to ensure that an ASF project will succeed. That it will have a
healthy community. If there is no code and no community, then there better
be a lot of trust in the (few) developers who are proposing such a beast :-)

mod_python obviously comes with a large user base and a vibrant community.
There are certainly no issues there. Mostly, I'm speaking to the concepts of
"more Python stuff at the ASF."

[ and don't get me wrong; I'm a *huge* Python supporter; Google reports
  "about 12,900" pages for "greg stein python"  :-) ]

Cheers,
-g

-- 
Greg Stein, http://www.lyra.org/

From mbp at samba.org  Wed Aug 28 18:49:43 2002
From: mbp at samba.org (Martin Pool)
Date: Fri Jan  9 21:53:04 2004
Subject: [mod_python] Promoting Python as web application developmentlanguage
In-Reply-To: <20020828014240.A8187@lyra.org>
References: <C0FC22C08B82074A88B50061764157775B97@johnson.mediapulse.net> <15723.65388.98630.19463@magrathea.basistech.com> <20020828014738.B325@eye.neb> <20020828014240.A8187@lyra.org>
Message-ID: <20020828084941.GX2340@samba.org>

On 28 Aug 2002, Greg Stein <gstein@lyra.org> wrote:

> Note that "Apache" is beginning to mean a lot more than just "the Apache
> http server". You've now got projects such as Tomcat, Xerces, and Cocoon all
> under the Apache banner. Arguably, they have nothing to do with the web
> server :-)
> 
> My point is just that people won't arrive at the ASF simply for "how to
> interface to Apache with Python." Minor point to be sure, but hey
> :-)

I see the distinction, but I think at the moment most people new to
Python/Apache will not.  To a novice, Apache is a web server, and
python.apache.org is the obvious place to look.  

I think many people will be in that category and it would be nice to
help them as much as possible without confusion.

> As a result, I would advocate mod_python as part of the Apache HTTP Server
> Project itself. You've got a web server, and (hey!) here is the Python
> connector. I would even advocate that mod_perl, mod_(d)tcl, and mod_php move
> to this same organization (and whack those language specific
> projects).

OK, so python.httpd.apache.org, or (more reasonably?)
apache.org/httpd/python.  At any rate it would be nice if there was
some kind of official pointer rather than making people search.

> Back to the CPAN-like thing. Given the above view, how does this work?
> Well... consider having some kind of "indexing" or "cataloging" project.
> Language neutral. Sure, you could select by language, but why would it be
> limited to just Perl or just Python? Why not both and Java and Tcl and Ruby
> software?

I'm not sure if ASF needs to solve that whole problem.  Just search
Freshmeat or Google or the new GNU software map for "apache python".

> *That* would be interesting. The trouble with such a beast, though, is
> simply that it is such a hard problem to put together well. If it was easy,
> it would have been done. And the ASF generally prefers to avoid the "dead
> SourceForge project" syndrome. We're much more about *communities* than even
> the software that is produced. The end result is that a certain bar needs to
> be raised to ensure that an ASF project will succeed. That it will have a
> healthy community. If there is no code and no community, then there better
> be a lot of trust in the (few) developers who are proposing such a
> beast :-)

I think one of the problems for somebody starting to do web
programming in Python at the moment is that this "editorial control"
is not really present: it's hard to find out what is a good tool to
use.  For example, a web search tends to throw up references to
mod_snake, which on closer inspection turns out to be currently dead.
Similarly for templating.  

It would be nice if the authority of the ASF could help steer people
in the write direction.  I guess it wouldn't want to get into saying
"templating system X is better than Y", but it might at least provide
that minimum bar of activity/functionality.

-- 
Martin 

From vmilitaru at sympatico.ca  Wed Aug 28 05:05:05 2002
From: vmilitaru at sympatico.ca (vio)
Date: Fri Jan  9 21:53:04 2004
Subject: [mod_python] Re: mod_python sample code
In-Reply-To: <783.1030517956@www33.gmx.net>; from peter.bittner@gmx.net on Wed, Aug 28, 2002 at 08:59:16AM +0200
References: <20020827052817.B301@eye.neb> <783.1030517956@www33.gmx.net>
Message-ID: <20020828050505.A468@eye.neb>

Hi Peter,
I didn't do much (any) CGI, but I did something along those lines: a 
combination apache+oracle+mod_python. So maybe I'll describe that a little,
hopefully it will give you some pointers (just replace any references to oracle
with your database of choice.) I hope it's not too verbose for you.
If you don't mind, I'll CC this to the list so others may give you much better 
tips on this topic than I,
(... and hopefully lift up a little the technical vs. non-technical threads :-)
Verbose example coming up:

I'm assuming that you've installed mod_python, and run successfully the
sample code and examples.

So what I did - basically I took the publisher.py file which came with 
my mod_python copy, and modified it to fit my needs. Things like

import ...
# my database settings
import DCOracle2
os.environ['ORACLE_SID'] = '...'
os.environ['ORACLE_HOME'] = '...'
my_connect_string='...'

# a fast function (in C) to parse query string
parse_qsl = apache.parse_qsl

# I also changed all 'req' to 'REQUEST' for better clarity, so keep this
# in mind when you are reading my code (Zope influence).

def handler(REQUEST):
    _REQUEST = REQUEST._req
    _REQUEST.content_type = "text/html"

    # at this point, I want to check if user's browser has sent 
    # a cookie which I'm expecting (is he authenticated or not?)

    ########
    # if No Cookie Sent by Client
    #
    if not _REQUEST.headers_in.has_key("Cookie"):
        #
        # substract 'requested_URL' and 'requested_vars'
        #
        requested_URL = str(_REQUEST.server.server_hostname) + str(_REQUEST.uri)        requested_vars = '' # handle GET requests
        if _REQUEST.headers_in.has_key("content-length"):
            requested_vars = _REQUEST.read(int(_REQUEST.headers_in["content-length"]))
        #
        # save 'requested URL and variables' in a cookie on client
        #  - a cheezy way to do this I guess, but what I want to do is
        #    save the URL the user requested, because I will redirect him
        #    to my 'login' page, and this info will be lost.
        #   
        rURLlen = ('000' + str(len(requested_URL)))[-3:]
        _REQUEST.headers_out.add('Set-Cookie',
'v=L' # my internal token indicating it's a Login cookie
+ rURLlen 
+ requested_URL 
+ requested_vars 
+ '; '
+ 'path=/; ' # without the 'path', Netscape|Lynx won't store the cookie
)
        # now I'm sending the user the login page:
        #
        _REQUEST.headers_out.add('Pragma','no-cache')
        _REQUEST.send_http_header()
        #
        # send login form
        #
        _REQUEST.write(login_form1) # 'login_form1' being simple html
        raise apache.SERVER_RETURN, apache.OK
    #
    # /if No Cookie Sent by Client
    ########

    ########
    # Process Login Form data
    #
    elif str(_REQUEST.uri) == '/login/login_action':
        requested_vars = _REQUEST.read(int(_REQUEST.headers_in["content-length"]        #
        # parse query string
        #
        keep_blank_values=0
        pairs = parse_qsl(requested_vars, keep_blank_values)
        """ 
'pairs' now looks like this (yours will obviously vary, depending on what 
values you had in your form's html code):
[('username', '...'),('password', '...'), ('submit', 'Continue')]

But this is basically how I retrieve all data send by user in my html forms.
        """
        #
        # process 'missing Login field data' --> send 'Data missing' login form
        #
        if len(pairs) != 3:
            _REQUEST.write(login_form2)
            raise apache.SERVER_RETURN, apache.OK
        #
        # put Login data in local vars (for processing)
        #
        items = []
        for item in pairs[:-1]: # skip last item 'submit'
            if item[0] not in ('username','persistent', 'password'):
                _REQUEST.write(login_form2) # --> send 'Data missing' login form                raise apache.SERVER_RETURN, apache.OK
            items.append(item[1])
        username,ac_password = items

        #
        # get database login data
        #  - obviously this code is database-dependent
        #  - 'users' is a table where I've put all my user data
        SQL =  "SELECT * FROM users WHERE username = '%s'" % username
        try:
            connection = DCOracle2.connect(connect_string)
            cursor = connection.cursor()
            cursor.prepare(SQL)
            cursor.execute()
            cursor.arraysize = 20
            db_result = cursor.fetchall()
        except (DCOracle2.DatabaseError,TypeError), e:
            # I am logging the error to some dedicated LOG file
            LOG.write(timestamp + 'SQL: >' + SQL + '<   ' + str(e) + '\n')
            LOG.flush()
            raise apache.SERVER_RETURN, apache.HTTP_INTERNAL_SERVER_ERROR
        if db_result == []:
            _REQUEST.write(login_form3) # --> send 'Wrong Data' login form
            raise apache.SERVER_RETURN, apache.OK
            """ 
'db_result[0]' looks like this:
['user_id','username', 'password', OracleDate("2002-07-10 02:20:31")]

This obviously will depend on your table schema.
            """
        db_userID,db_Username,db_Pword,db_Created = db_result[0]
        #
        # check Login Form data against Database data
        #
        if (password != db_Pword):
            _REQUEST.write(login_form3) # --> send 'Wrong Data' login form
            raise apache.SERVER_RETURN, apache.OK
        #
        # set session in database
        # - here I'm basically repeating the db code of earlier
        #
        #  then I'm created a session token, which I'm sending to the user
        #  and will retrieve using the cookie mechanism (seen earlier).

From davidw at dedasys.com  Tue Aug 27 15:41:34 2002
From: davidw at dedasys.com (David N. Welton)
Date: Fri Jan  9 21:53:04 2004
Subject: [mod_python] Promoting Python as web application developmentlanguage
In-Reply-To: <15723.65388.98630.19463@magrathea.basistech.com>
References: <C0FC22C08B82074A88B50061764157775B97@johnson.mediapulse.net>
	<15723.65388.98630.19463@magrathea.basistech.com>
Message-ID: <87it1vncv5.fsf@dedasys.com>

Tom Emerson <tree@basistech.com> writes:

> Michael C. Neel writes:

> > The other thing I'd like to say is that python.apache.org should
> > just be mod_python.  It servers the same purpose as mod_perl, to
> > allow apache development in python.
 
> Look though at http://tcl.apache.org/, which includes pointers to
> several projects for integrating Tcl into Apache.

They aren't just pointers.  The projects belong to the Apache Software
Foundation, and are all part of the Apache Tcl group.

> I don't see why mod_snake shouldn't be included with
> mod_python. Developers would be coming to python.apache.org to find
> out how to interface to Apache with Python...

That would definitely make sense, if the author of mod_snake agreed to
turn over the project to the ASF.

-- 
David N. Welton
   Consulting: http://www.dedasys.com/
     Personal: http://www.dedasys.com/davidw/
Free Software: http://www.dedasys.com/freesoftware/
   Apache Tcl: http://tcl.apache.org/

From sa at sfsu.edu  Wed Aug 28 16:55:45 2002
From: sa at sfsu.edu (Sean Abrahams)
Date: Fri Jan  9 21:53:04 2004
Subject: [mod_python] PDF Documentation Corrupt?
Message-ID: <741140276070.20020828165545@sfsu.edu>

I've tried to print the mod_python PDF documentation from multiple
different machines running Adobe Acrobat 5.0 reader and keep getting a
"The document could not be printed." error after Page 2. Running
Windows XP. Anyone else having this issue?

Thanks,
--Sean


From kevin at vap.org  Thu Aug 29 13:26:46 2002
From: kevin at vap.org (kevin@vap.org)
Date: Fri Jan  9 21:53:04 2004
Subject: [mod_python] Re: PDF Documentation Corrupt?
Message-ID: <67120-220028429172646629@vap.org>

I tried it (Acro 5.0 & WinXP) and had the same problem.

This seems like a similar problem that I had with the Python 2.1 (or
2.2, I don't remember) PDF files with Acro 5.0 & Win98.  I worked
around it by getting the PS files, finding a Linux box & running the
PS files through PS2PDF.  You lose the hyperlinks, but at least they
were printable on Windows with Acro 5.0.

I don't know if there is a PS version of mod_python.pdf available,
but maybe someone could get you a version that will print under Acro
5.0/Windows.

As an alternative, you could locate Ghostscript for Windows & use the
GSView program to print it (I just tried it on my W2K box & it
worked, but was a bit slower).

-Kevin


>Date: Wed, 28 Aug 2002 16:55:45 -0700
>From: Sean Abrahams <sa@sfsu.edu>
>Reply-To: Sean Abrahams <sa@sfsu.edu>
>Organization: SFSU : Fiscal Affairs Business Systems
>To: mod_python@modpython.org
>Subject: [mod_python] PDF Documentation Corrupt?
>
>I've tried to print the mod_python PDF documentation from multiple
>different machines running Adobe Acrobat 5.0 reader and keep getting 
>a
>"The document could not be printed." error after Page 2. Running
>Windows XP. Anyone else having this issue?
>
>Thanks,
>--Sean



From kai at keliikuli.com  Thu Aug 29 14:40:19 2002
From: kai at keliikuli.com (kai@keliikuli.com)
Date: Fri Jan  9 21:53:04 2004
Subject: [mod_python] mod_python.publisher
Message-ID: <20020829144019.A1020@jki2.com>

Hi All, 
I had an authentication header problem with opera 6.0.2 
on Linux (Slackware 8.1).  I traced it to Lines 250 
and/or 263 of mod_python.publisher...

This line 
s = 'Basic realm = "%s"' % realm
produces this header line ( as sent to client)
WWW-Authenticate: Basic realm = "Members Only"\r\n


opera doesn't like the spaces between realm,=, and "%s"' % realm
it seems happy with.

s = 'Basic realm="%s"' % realm
which produces this header line
WWW-Authenticate: Basic realm = "Members Only"\r\n



I then tested it on a few others with the above change:

MSIE 6.0.2600.0000 ( what's with that version numbering? ): OK
Mozilla 1.0: OK

I'm going to test on some more but being lazy I thought I'd 
ask if anybody knows of any browsers and the versions thereof
which are fussy about the WWW-Authenticate line
Kai

From grisha at modpython.org  Thu Aug 29 15:35:32 2002
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 21:53:04 2004
Subject: [mod_python] Re: PDF Documentation Corrupt?
In-Reply-To: <67120-220028429172646629@vap.org>
Message-ID: <Pine.BSF.4.32.0208291532440.8000-100000@eden.ispol.com>

It seems to be some kind of a problem with pdflatex - there are some
references out on usenet about it. May be I was using a version that was
too old when generating the files. Sorry, I'm not exactly sure how to fix
this one :-(

On Thu, 29 Aug 2002 kevin@vap.org wrote:

> I tried it (Acro 5.0 & WinXP) and had the same problem.
>
> This seems like a similar problem that I had with the Python 2.1 (or
> 2.2, I don't remember) PDF files with Acro 5.0 & Win98.  I worked
> around it by getting the PS files, finding a Linux box & running the
> PS files through PS2PDF.  You lose the hyperlinks, but at least they
> were printable on Windows with Acro 5.0.
>
> I don't know if there is a PS version of mod_python.pdf available,
> but maybe someone could get you a version that will print under Acro
> 5.0/Windows.
>
> As an alternative, you could locate Ghostscript for Windows & use the
> GSView program to print it (I just tried it on my W2K box & it
> worked, but was a bit slower).
>
> -Kevin
>
>
> >Date: Wed, 28 Aug 2002 16:55:45 -0700
> >From: Sean Abrahams <sa@sfsu.edu>
> >Reply-To: Sean Abrahams <sa@sfsu.edu>
> >Organization: SFSU : Fiscal Affairs Business Systems
> >To: mod_python@modpython.org
> >Subject: [mod_python] PDF Documentation Corrupt?
> >
> >I've tried to print the mod_python PDF documentation from multiple
> >different machines running Adobe Acrobat 5.0 reader and keep getting
> >a
> >"The document could not be printed." error after Page 2. Running
> >Windows XP. Anyone else having this issue?
> >
> >Thanks,
> >--Sean
>
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://www.modpython.org/mailman/listinfo/mod_python
>


From woodm at Colorado.EDU  Thu Aug 29 13:51:37 2002
From: woodm at Colorado.EDU (WOOD MATTHEW DAVID)
Date: Fri Jan  9 21:53:04 2004
Subject: [mod_python] It all started with that -DEAPI error...
Message-ID: <Pine.GSO.4.40.0208291337450.7388-100000@ucsu.colorado.edu>

Hello everyone.  I would love to say that I'm not a newbie to mod_python,
but I've never successfully installed it.

My latest attempt is on an OpenBSD-3.1 box.

this server has both python2.1 and python2.2 on it.  (I didn't
particularly want python2.1, but the OpenBSD ports tree decided that I
would get both python versions.  :-) )

Regardless, I uncompressed the mod_python tarball, and went to work,
eventually recieving the standard -DEAPI error:

   > sudo apachectl start
   [Thu Aug 29 13:20:35 2002] [warn] Loaded DSO
   /usr/lib/apache/modules/mod_python.so uses plain Apache 1.3 API, this
   module might crash under EAPI! (please recompile it with -DEAPI)
   /usr/sbin/apachectl start: httpd could not be started


At first, I thought it was the -DEAPI problem that was preventing me from
starting the httpd altogether, but after searching around on the
mod_python webpage, I (think I) fixed that error.  Now, I just can't start
the httpd deamon:

    > sudo apachectl start
    /usr/sbin/apachectl start: httpd could not be started


I can start the deamon when I comment out the "LoadModule
python_module..." line, but that's clearly not the goal.

I'm hoping that I'm not reporting something stupid (other than me), but I
just can't get this to work.  I've asked several of my "better at UNIX
than I am" friends, and they have no ideas either.

What do you guys suggest?

Oh, and by the way, my system is using the standard apache1.3 that comes
"out of the box" with OpenBSD-3.1 .

Again, thanks for any time that you may have to spare.



Matthew D. Wood


From mk at lrn.ru  Thu Aug 29 21:59:50 2002
From: mk at lrn.ru (Michael Krasnovsky)
Date: Fri Jan  9 21:53:04 2004
Subject: [mod_python] PythonInitHandler questions
Message-ID: <20020829215950.66c764ec.mk@lrn.ru>

Hi!

What should return inithandler(req) function? Does PythonInitHandler
work with mod_python.pyblisher? 

When I try use it together, I got 404 error - Handler not found... 

Thanks.

Michael.

From sa at sfsu.edu  Thu Aug 29 13:20:35 2002
From: sa at sfsu.edu (Sean Abrahams)
Date: Fri Jan  9 21:53:04 2004
Subject: [mod_python] It all started with that -DEAPI error...
In-Reply-To: <Pine.GSO.4.40.0208291337450.7388-100000@ucsu.colorado.edu>
References: <Pine.GSO.4.40.0208291337450.7388-100000@ucsu.colorado.edu>
Message-ID: <41213765622.20020829132035@sfsu.edu>

Matthew,

I had the DEAPI error yesterday. Running Debian (level testing).

This is what I did.

"""
./configure

edit src/Makefile and change the OPT= line to read OPT=-DEAPI

then run "make dso"

then run "make install_dso"
"""

Hope this works for you.

--Sean

Thursday, August 29, 2002, 12:51:37 PM, you wrote:

WMD> Hello everyone.  I would love to say that I'm not a newbie to mod_python,
WMD> but I've never successfully installed it.

WMD> My latest attempt is on an OpenBSD-3.1 box.

WMD> this server has both python2.1 and python2.2 on it.  (I didn't
WMD> particularly want python2.1, but the OpenBSD ports tree decided that I
WMD> would get both python versions.  :-) )

WMD> Regardless, I uncompressed the mod_python tarball, and went to work,
WMD> eventually recieving the standard -DEAPI error:

WMD>    > sudo apachectl start
WMD>    [Thu Aug 29 13:20:35 2002] [warn] Loaded DSO
WMD>    /usr/lib/apache/modules/mod_python.so uses plain Apache 1.3 API, this
WMD>    module might crash under EAPI! (please recompile it with -DEAPI)
WMD>    /usr/sbin/apachectl start: httpd could not be started


WMD> At first, I thought it was the -DEAPI problem that was preventing me from
WMD> starting the httpd altogether, but after searching around on the
WMD> mod_python webpage, I (think I) fixed that error.  Now, I just can't start
WMD> the httpd deamon:

WMD>     > sudo apachectl start
WMD>     /usr/sbin/apachectl start: httpd could not be started


WMD> I can start the deamon when I comment out the "LoadModule
WMD> python_module..." line, but that's clearly not the goal.

WMD> I'm hoping that I'm not reporting something stupid (other than me), but I
WMD> just can't get this to work.  I've asked several of my "better at UNIX
WMD> than I am" friends, and they have no ideas either.

WMD> What do you guys suggest?

WMD> Oh, and by the way, my system is using the standard apache1.3 that comes
WMD> "out of the box" with OpenBSD-3.1 .

WMD> Again, thanks for any time that you may have to spare.



WMD> Matthew D. Wood

WMD> _______________________________________________
WMD> Mod_python mailing list
WMD> Mod_python@modpython.org
WMD> http://www.modpython.org/mailman/listinfo/mod_python


From woodm at Colorado.EDU  Thu Aug 29 14:44:44 2002
From: woodm at Colorado.EDU (WOOD MATTHEW DAVID)
Date: Fri Jan  9 21:53:04 2004
Subject: [mod_python] It all started with that -DEAPI error...
In-Reply-To: <41213765622.20020829132035@sfsu.edu>
Message-ID: <Pine.GSO.4.40.0208291444050.27511-100000@ucsu.colorado.edu>

I did not see that.  However, it didn't help me either.  But thanks
regardless.  I really appreciate the help.

Matthew D. Wood, University of Colorado

On Thu, 29 Aug 2002, Sean Abrahams wrote:

> Matthew,
>
> I had the DEAPI error yesterday. Running Debian (level testing).
>
> This is what I did.
>
> """
> ./configure
>
> edit src/Makefile and change the OPT= line to read OPT=-DEAPI
>
> then run "make dso"
>
> then run "make install_dso"
> """
>
> Hope this works for you.
>
> --Sean
>
> Thursday, August 29, 2002, 12:51:37 PM, you wrote:
>
> WMD> Hello everyone.  I would love to say that I'm not a newbie to mod_python,
> WMD> but I've never successfully installed it.
>
> WMD> My latest attempt is on an OpenBSD-3.1 box.
>
> WMD> this server has both python2.1 and python2.2 on it.  (I didn't
> WMD> particularly want python2.1, but the OpenBSD ports tree decided that I
> WMD> would get both python versions.  :-) )
>
> WMD> Regardless, I uncompressed the mod_python tarball, and went to work,
> WMD> eventually recieving the standard -DEAPI error:
>
> WMD>    > sudo apachectl start
> WMD>    [Thu Aug 29 13:20:35 2002] [warn] Loaded DSO
> WMD>    /usr/lib/apache/modules/mod_python.so uses plain Apache 1.3 API, this
> WMD>    module might crash under EAPI! (please recompile it with -DEAPI)
> WMD>    /usr/sbin/apachectl start: httpd could not be started
>
>
> WMD> At first, I thought it was the -DEAPI problem that was preventing me from
> WMD> starting the httpd altogether, but after searching around on the
> WMD> mod_python webpage, I (think I) fixed that error.  Now, I just can't start
> WMD> the httpd deamon:
>
> WMD>     > sudo apachectl start
> WMD>     /usr/sbin/apachectl start: httpd could not be started
>
>
> WMD> I can start the deamon when I comment out the "LoadModule
> WMD> python_module..." line, but that's clearly not the goal.
>
> WMD> I'm hoping that I'm not reporting something stupid (other than me), but I
> WMD> just can't get this to work.  I've asked several of my "better at UNIX
> WMD> than I am" friends, and they have no ideas either.
>
> WMD> What do you guys suggest?
>
> WMD> Oh, and by the way, my system is using the standard apache1.3 that comes
> WMD> "out of the box" with OpenBSD-3.1 .
>
> WMD> Again, thanks for any time that you may have to spare.
>
>
>
> WMD> Matthew D. Wood
>
> WMD> _______________________________________________
> WMD> Mod_python mailing list
> WMD> Mod_python@modpython.org
> WMD> http://www.modpython.org/mailman/listinfo/mod_python
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://www.modpython.org/mailman/listinfo/mod_python
>


From conrad at hep.caltech.edu  Thu Aug 29 13:59:14 2002
From: conrad at hep.caltech.edu (Conrad Steenberg)
Date: Fri Jan  9 21:53:04 2004
Subject: [mod_python] It all started with that -DEAPI error...
In-Reply-To: <Pine.GSO.4.40.0208291444050.27511-100000@ucsu.colorado.edu>
References: <Pine.GSO.4.40.0208291444050.27511-100000@ucsu.colorado.edu>
Message-ID: <1030654755.14778.152.camel@heppc22.cithep.caltech.edu>

Hi Matthew

Another thing you may check is to run 'strace httpd -X' to show where
mod_python looks for libraries etc. It may be that it picks up python
libraries from the wrong python version.

Cheers!

Conrad

On Thu, 2002-08-29 at 13:44, WOOD MATTHEW DAVID wrote:
> I did not see that.  However, it didn't help me either.  But thanks
> regardless.  I really appreciate the help.
> 
> Matthew D. Wood, University of Colorado
> 
> On Thu, 29 Aug 2002, Sean Abrahams wrote:
> 
> > Matthew,
> >
> > I had the DEAPI error yesterday. Running Debian (level testing).
> >
> > This is what I did.
> >
> > """
> > ./configure
> >
> > edit src/Makefile and change the OPT= line to read OPT=-DEAPI
> >
> > then run "make dso"
> >
> > then run "make install_dso"
> > """
> >
> > Hope this works for you.
> >
> > --Sean
> >
> > Thursday, August 29, 2002, 12:51:37 PM, you wrote:
> >
> > WMD> Hello everyone.  I would love to say that I'm not a newbie to mod_python,
> > WMD> but I've never successfully installed it.
> >
> > WMD> My latest attempt is on an OpenBSD-3.1 box.
> >
> > WMD> this server has both python2.1 and python2.2 on it.  (I didn't
> > WMD> particularly want python2.1, but the OpenBSD ports tree decided that I
> > WMD> would get both python versions.  :-) )
> >
> > WMD> Regardless, I uncompressed the mod_python tarball, and went to work,
> > WMD> eventually recieving the standard -DEAPI error:
> >
> > WMD>    > sudo apachectl start
> > WMD>    [Thu Aug 29 13:20:35 2002] [warn] Loaded DSO
> > WMD>    /usr/lib/apache/modules/mod_python.so uses plain Apache 1.3 API, this
> > WMD>    module might crash under EAPI! (please recompile it with -DEAPI)
> > WMD>    /usr/sbin/apachectl start: httpd could not be started
> >
> >
> > WMD> At first, I thought it was the -DEAPI problem that was preventing me from
> > WMD> starting the httpd altogether, but after searching around on the
> > WMD> mod_python webpage, I (think I) fixed that error.  Now, I just can't start
> > WMD> the httpd deamon:
> >
> > WMD>     > sudo apachectl start
> > WMD>     /usr/sbin/apachectl start: httpd could not be started
> >
> >
> > WMD> I can start the deamon when I comment out the "LoadModule
> > WMD> python_module..." line, but that's clearly not the goal.
> >
> > WMD> I'm hoping that I'm not reporting something stupid (other than me), but I
> > WMD> just can't get this to work.  I've asked several of my "better at UNIX
> > WMD> than I am" friends, and they have no ideas either.
> >
> > WMD> What do you guys suggest?
> >
> > WMD> Oh, and by the way, my system is using the standard apache1.3 that comes
> > WMD> "out of the box" with OpenBSD-3.1 .
> >
> > WMD> Again, thanks for any time that you may have to spare.
> >
> >
> >
> > WMD> Matthew D. Wood
> >
> > WMD> _______________________________________________
> > WMD> Mod_python mailing list
> > WMD> Mod_python@modpython.org
> > WMD> http://www.modpython.org/mailman/listinfo/mod_python
> >
> > _______________________________________________
> > Mod_python mailing list
> > Mod_python@modpython.org
> > http://www.modpython.org/mailman/listinfo/mod_python
> >
> 
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://www.modpython.org/mailman/listinfo/mod_python
-- 
*-----------------------------------------*
| Conrad Steenberg                        |
| Caltech, Mail Code 356-48               |
| Pasadena, CA, 91125                     |
| e-mail: conrad@hep.caltech.edu          |
| Tel: (626) 395-8758                     |
*-----------------------------------------*


From ian at veryfresh.com  Thu Aug 29 14:29:40 2002
From: ian at veryfresh.com (Ian Clelland)
Date: Fri Jan  9 21:53:04 2004
Subject: [mod_python] mod_python.publisher
In-Reply-To: <20020829144019.A1020@jki2.com>
References: <20020829144019.A1020@jki2.com>
Message-ID: <20020829212940.GB5501@fullfactor.com>

On Thu, Aug 29, 2002 at 02:40:19PM -0700, kai@keliikuli.com wrote:
> I had an authentication header problem with opera 6.0.2 
> on Linux (Slackware 8.1).  I traced it to Lines 250 
> and/or 263 of mod_python.publisher...

> opera doesn't like the spaces between realm,=, and "%s"' % realm

Interesting; sounds like Opera is broken in this respect. The spec is quite 
clear in that white space is allowed between tokens and separators. (Of 
course, none of the WWW-Authenticate examples ever use any spaces, so I can 
see where this might have been missed.)

> s = 'Basic realm="%s"' % realm
> which produces this header line
> WWW-Authenticate: Basic realm = "Members Only"\r\n

In the spirit of 'be conservative in what you send, and liberal in what you 
accept', I think that this change should be made to the Publisher source, 
at least for the next release. In the meantime, perhaps someone should file 
a bug report with the Opera team about this. They should be accepting the 
header with spaces in the formatting.

> I then tested it on a few others with the above change:
> 
> MSIE 6.0.2600.0000 ( what's with that version numbering? ): OK
> Mozilla 1.0: OK
> 
> I'm going to test on some more but being lazy I thought I'd 
> ask if anybody knows of any browsers and the versions thereof
> which are fussy about the WWW-Authenticate line

I don't think that any other browsers will have problems with the terser 
format 'realm="name"', since that's what Apache uses by default, and I've 
never heard of a browser not understanding Apache's basic authentication.


Ian Clelland
<ian@veryfresh.com>

From peter.bittner at gmx.net  Fri Aug 30 11:39:27 2002
From: peter.bittner at gmx.net (Peter Bittner)
Date: Fri Jan  9 21:53:04 2004
Subject: [mod_python] Code Sample Collection would be helpful
Message-ID: <28957.1030700367@www15.gmx.net>

Hi there Python friends!

I think this has already been proposed once, but still it is a very
important issue:

The mod_python manual is great, sure. It even contains some sample code to
get started. But what is missing for the the (Python-)mod_python community is
a pool of sample code where one can see how different things have been
tackled by different people.

I am sure mod_python would be much more attactive then since it would be
easier to get right into it, to see working code, to adapt working code to one's
needs.

When I say pool I'm thinking of something like http://www.hotscripts.com
(BTW: I'm just seeing there is some python stuff on there already. Though
not really much, and even less about mod_python.) :-(

I'm sure there are a couple of guys out there in the mod_python community
that would be willing to share some of their code (for a GPL-license, as
shareware or freeware) if there were something like a "Sample Code Pool" on the
mod_python website. - Not all the code we all are writing is "for internal use
only" and some among us would be happy to publish their code. (I know from
myself how much useful code in C, PHP and JavaScript I've coded and it's okay
for me to know someone is using it and finding it helpful.)

Anyone out there who finds this idea good enough to be realized?
Who of you would like to help contributing to such a sample code pool?

Peter

-- 
Peter Bittner
mobil: +43/(0)650/4151545
web: http://www.bittner.at.tf - http://beam.to/htmlkurs
mail: peter.bittner@gmx.net

"Free software is like free speech, not free beer" (Richard Stallman)

GMX - Die Kommunikationsplattform im Internet.
http://www.gmx.net


From fabbe at paniq.net  Fri Aug 30 13:54:27 2002
From: fabbe at paniq.net (Fabian Fagerholm)
Date: Fri Jan  9 21:53:04 2004
Subject: [mod_python] Code Sample Collection would be helpful
In-Reply-To: <28957.1030700367@www15.gmx.net>
References: <28957.1030700367@www15.gmx.net>
Message-ID: <1030704868.11126.12.camel@kernel>

On Fri, 2002-08-30 at 12:39, Peter Bittner wrote:
> ...
> Anyone out there who finds this idea good enough to be realized?
> Who of you would like to help contributing to such a sample code pool?

See this thread that recently formed on this very list:
http://www.modpython.org/pipermail/mod_python/2002-August/002369.html
There's been a lot of discussion, so see the archives [0].

That thread spawned several things, one of which is a Python SIG
proposal [1]. The purpose of the SIG would be, among other things, to
create a web site with sample code and articles. The initial proposal
only talks about creation of the site, but in the process, some starting
documents would have to be written and a sample code pool could be built
over time.

The proposal hasn't received very many comments so it's doubtful if it
will happen. Post to the Meta-SIG list [2] if you'd like to comment or
endorse the proposal.

Cheers,
Fabian

[0] http://www.modpython.org/pipermail/mod_python/
[1] http://mail.python.org/pipermail/meta-sig/2002-August/001233.html
[2] http://mail.python.org/mailman/listinfo/meta-sig

-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 240 bytes
Desc: This is a digitally signed message part
Url : http://mailman.modpython.org/pipermail/mod_python/attachments/20020830/eef598e0/attachment-0001.bin
From drh9296 at ritvax.rit.edu  Sat Aug 31 16:18:53 2002
From: drh9296 at ritvax.rit.edu (David Higgs)
Date: Fri Jan  9 21:53:04 2004
Subject: [mod_python] Re: It all started with that -DEAPI error
References: <20020830160001.20573.1501.Mailman@eden.ispol.com>
Message-ID: <3D7124AD.10208@rit.edu>

I run an OpenBSD install here.  Never had any luck w/ the static 
install, but the DSO works fine with a bit of work.

1. You can install just python 2.2.
Change to the 2.2 directory before you 'make; make install'.  You can 
pkg_delete the 2.1 if you like.

2. I never made mod_python work with thread support compiled.  There is 
no 'no_threads' flavor on the ports tree that I can determine.  Download 
the python 2.2 source and manually compile it without threads and 
install to a separate location.  I used /usr/www_python/ as an install 
directory.

3. Change the OPT as shown in the other response to get rid of the DEAPI 
error.  No biggie.

4. Make sure your PATH is setup correctly so when you compile 
mod_python, it finds the non-threaded python binaries first.  See 
http://www.modpython.org/pipermail/mod_python/2002-August/002353.html 
for details.

5. Make a DSO.  I tried for several days to get static working, without 
any luck at a stable httpd.  At some point I should probably provide the 
mailing list with the symptoms, so it can be resolved.

As for your error, check your default httpd log.  Even since apache 
couldn't start up, it will have more details on what went wrong.

--david


From christoph at cocon-seide.com  Thu Aug  1 09:33:47 2002
From: christoph at cocon-seide.com (Christoph Fritzsch)
Date: Fri Jan  9 21:59:27 2004
Subject: [mod_python] Configuring Apache
In-Reply-To: <3055.1028048088@www55.gmx.net>
Message-ID: <200208010737.g717bms59462@eden.ispol.com>

Hi Peter,

I tried it with Suse 7.3 some time ago and found it only workable by 

1) uncommenting all <Ifmodule python>  </if..>

#<IfDefine Python>
LoadModule python_module      /usr/lib/apache/mod_python.so
#</IfDefine>
#<IfDefine Python>
AddModule mod_python.c
#</IfDefine>

so the module is loaded for sure, as I couldnt get it to work with the Suse supplied 
starting parameters

2) Then I put this in there

#Python
#<IfModule mod_python.c>
<Directory "/usr/local/httpd/htdocs/test">
AddHandler python-program .py
PythonHandler mptest
PythonDebug On
</Directory>
#</IfModule>

as you did it

and  I also had to put in a  link 
/usr/lib/python2.1/site-packages/mod_python 
->/usr/lib/apache/lib/python2.1/site-packages/mod_python/

maybe you hv to replace the 2.1 to 2.2

reload apache and any file you call in the test directory will execute the mptest program

This is what the mod_python should do. That is as far as I got. I think next step is to 
expand the mptest program so you can call subroutines in it which presumaly do more 
usefull stuff than "Hello World!" !!

BR Christoph




From peter.bittner at gmx.net  Thu Aug  1 10:46:03 2002
From: peter.bittner at gmx.net (Peter Bittner)
Date: Fri Jan  9 21:59:27 2004
Subject: [mod_python] Re: Configuring Apache - It works!
References: <200208010737.g717bms59462@eden.ispol.com>
Message-ID: <18131.1028191563@www63.gmx.net>

Finally it works!
I had to create a symbolc link, as proposed by Christoph:

# ln -s /usr/lib/apache/lib/python2.2/site-packages/mod_python
/usr/lib/python2.2/site-packages/mod_python

Thank you very much!! - (I was at the end of my wisdom!)
Cheers, Peter


"Christoph Fritzsch" scripsit:
>
> and  I also had to put in a  link 
> /usr/lib/python2.1/site-packages/mod_python 
> ->/usr/lib/apache/lib/python2.1/site-packages/mod_python/

-- 
Peter Bittner
mobil: +43/(0)650/4151545
web: http://www.bittner.at.tf - http://beam.to/htmlkurs
mail: peter.bittner@gmx.net

"Free software is like free speech, not free beer" (Richard Stallman)

GMX - Die Kommunikationsplattform im Internet.
http://www.gmx.net


From rclilly at lvcm.com  Sat Aug  3 22:04:45 2002
From: rclilly at lvcm.com (Robert Lilly)
Date: Fri Jan  9 21:59:27 2004
Subject: [mod_python] Mod_python and Apache problems
Message-ID: <JBEILMCCPJDCPPHHKPFJCEDDCAAA.rclilly@lvcm.com>

Hello all,

I'm trying to get Mod_python to work with Apache/1.3.26 (Win32)
mod_python/2.7.6 Python/2.2.1 PHP/4.22 on Windows 2000 Professional.

I get the following error when I try to access the mptest.py page:

--
 [Sat Aug 03 21:19:55 2002] [warn] Loaded DSO modules/mod_python.dll uses
plain Apache 1.3 API, this module might crash  under EAPI! (please recompile
it with -DEAPI)
 make_obcallback(): could not import mod_python.apache.
 make_obcallback(): could not call init.
 make_obcallback(): could not import mod_python.apache.
 make_obcallback(): could not call init.
 make_obcallback(): could not import mod_python.apache.
 make_obcallback(): could not call init.
 make_obcallback(): could not import mod_python.apache.
 make_obcallback(): could not call init.
 make_obcallback(): could not import mod_python.apache.
 make_obcallback(): could not call init.
 [Sat Aug 03 21:20:07 2002] [error] [client 192.168.123.116] python_handler:
make_obcallback returned no obCallBack!
--

My httpd.conf contains the following:

    LoadModule python_module modules/mod_python.dll

    AddModule mod_python.c

    <Directory "E:/My Documents/RCL Enterprises/Web/htdocs/python">
            AddHandler python-program .py
            PythonHandler mptest
            PythonDebug on
    </Directory>


I try to access it using http://localhost/python/mptest.py and I get a 505
Internal Server Error. The error log contains the above.

Any clues about what I'm doing wrong? Does anyone have any pointers on
getting Python to work under Apache on Windows 2000?

TIA,

Robert Lilly
Apache/Python/PHP newbie!
---
Outgoing mail is certified Virus Free.
Checked by AVG anti-virus system (http://www.grisoft.com).
Version: 6.0.381 / Virus Database: 214 - Release Date: 8/2/2002


From Bryn.Davies at AirLiquide.com  Tue Aug  6 11:15:25 2002
From: Bryn.Davies at AirLiquide.com (Davies, Bryn)
Date: Fri Jan  9 21:59:28 2004
Subject: [mod_python] Win32 Installs: import _apache
Message-ID: <82E2D0C417E81A4CB94A56AD625FE4366BDD38@au-hokrypton.as.corp.airliquide.com>

 First, I apologise for jumping in straight away with a question, instead of
lurking around and possibly trying to help some others, but I'm a bit
puzzled as how to get around the problem I'm facing.

 I've run mod_python on Linux servers before, but for various reasons, work
wants this one deployed on Win32 for the moment.  Apache deployed fine, I
added mod_python.dll to LoadModules, performed the AddModule mod_python.c
etc, and Apache starts fine.  The problem arises when I try to execute the
example python script as shown in the Win32 Installation Guide ( App. A ):

 Here is an excerpt from the error log:

[Tue Aug 06 10:03:35 2002] [error] [client 172.17.1.39]   File "C:\program
files\python22\lib\mod_python\apache.py", line 55, in ?
[Tue Aug 06 10:03:35 2002] [error] [client 172.17.1.39]     import _apache
[Tue Aug 06 10:03:35 2002] [error] [client 172.17.1.39] ImportError: No
module named _apache

 At the expense of sounding like a dimwit, can anyone inform me of where
this module lives?  It doesn't seem to be in the distributions I downloaded.
If it is a code object, can someone likewise inform me of a source for a
precompiled version?  Decent compilers are rather scarce here.  It would be
great if I could get this project up on its legs, because ( irony ) if I can
get all this jumping on Win32, apparently I'll be able to use Linux servers
for the final deployment. :-P

 If anyone can give me any advice, I would be most greatful to them. :-)

 Regards, and happy pythoning,
  Bryn Davies.

-- 
Bryn Davies, Systems Administrator.
Air Liquide Healthcare Australia.

From rclilly at lvcm.com  Tue Aug  6 18:49:53 2002
From: rclilly at lvcm.com (Robert Lilly)
Date: Fri Jan  9 21:59:28 2004
Subject: [mod_python] Mod_python and Apache problems
In-Reply-To: <JBEILMCCPJDCPPHHKPFJCEDDCAAA.rclilly@lvcm.com>
Message-ID: <EGEMLKBGPBCGGGFNPMGNKECBCDAA.rclilly@lvcm.com>

I figured it out! So, for the sake of the archives, here's what I did.

It turns out that there's a second mod_python folder buried several levels
down inside the first one. THIS is the one that needs to go into python/Lib,
as it contains the necessary libraries. I moved it out from it's hiding
place and put it into python/Lib and it's "Hello world!"

I've decided to ignore the EAPI warning, since I can't figure out how to
re-compile mod_python.dll for Windows. The source code I downloaded from
modpython.org compiles for *nix and Cygwin.

Thanks,

Robert

-----Original Message-----
From: mod_python-admin@modpython.org
[mailto:mod_python-admin@modpython.org]On Behalf Of Robert Lilly
Sent: Saturday, August 03, 2002 10:05 PM
To: Mod_python List
Subject: [mod_python] Mod_python and Apache problems


Hello all,

I'm trying to get Mod_python to work with Apache/1.3.26 (Win32)
mod_python/2.7.6 Python/2.2.1 PHP/4.22 on Windows 2000 Professional.

I get the following error when I try to access the mptest.py page:

--
 [Sat Aug 03 21:19:55 2002] [warn] Loaded DSO modules/mod_python.dll uses
plain Apache 1.3 API, this module might crash  under EAPI! (please recompile
it with -DEAPI)
 make_obcallback(): could not import mod_python.apache.
 make_obcallback(): could not call init.
 make_obcallback(): could not import mod_python.apache.
 make_obcallback(): could not call init.
 make_obcallback(): could not import mod_python.apache.
 make_obcallback(): could not call init.
 make_obcallback(): could not import mod_python.apache.
 make_obcallback(): could not call init.
 make_obcallback(): could not import mod_python.apache.
 make_obcallback(): could not call init.
 [Sat Aug 03 21:20:07 2002] [error] [client 192.168.123.116] python_handler:
make_obcallback returned no obCallBack!
--

My httpd.conf contains the following:

    LoadModule python_module modules/mod_python.dll

    AddModule mod_python.c

    <Directory "E:/My Documents/RCL Enterprises/Web/htdocs/python">
            AddHandler python-program .py
            PythonHandler mptest
            PythonDebug on
    </Directory>


I try to access it using http://localhost/python/mptest.py and I get a 505
Internal Server Error. The error log contains the above.

Any clues about what I'm doing wrong? Does anyone have any pointers on
getting Python to work under Apache on Windows 2000?

TIA,

Robert Lilly
Apache/Python/PHP newbie!
---
Outgoing mail is certified Virus Free.
Checked by AVG anti-virus system (http://www.grisoft.com).
Version: 6.0.381 / Virus Database: 214 - Release Date: 8/2/2002

_______________________________________________
Mod_python mailing list
Mod_python@modpython.org
http://www.modpython.org/mailman/listinfo/mod_python
---
Incoming mail is certified Virus Free.
Checked by AVG anti-virus system (http://www.grisoft.com).
Version: 6.0.381 / Virus Database: 214 - Release Date: 8/2/2002

---
Outgoing mail is certified Virus Free.
Checked by AVG anti-virus system (http://www.grisoft.com).
Version: 6.0.381 / Virus Database: 214 - Release Date: 8/2/2002


From gharris at centauri.mb.ca  Wed Aug  7 00:22:33 2002
From: gharris at centauri.mb.ca (George Harrison)
Date: Fri Jan  9 21:59:28 2004
Subject: [mod_python] Win32 Installs: import _apache
In-Reply-To: <82E2D0C417E81A4CB94A56AD625FE4366BDD38@au-hokrypton.as.cor
 p.airliquide.com>
Message-ID: <5.1.0.14.2.20020807001652.00a4f900@pop.mb.sympatico.ca>

Sorry for the length of this post, but this is a list of the mod-python 
folder in my Python22 directory. This is working as far as responding 
"Hello World". On my installation, the .py files were not in the root of 
mod_python, and until I moved them, I was getting the same sort of errors 
as you are reporting.

I don't know enough about either python or apache to explain why these 
work, and I kind of forget where the files were after the install, so YMMV.

gh

TreePrint listing of: D:\Program Files\python22\Lib\mod_python

D:\Program Files\python22\Lib\mod_python
|   COPYRIGHT
|   CREDITS
|   Makefile.in
|   NEWS
|   README
|   configure
|   configure.in
|   install-sh
|   __init__.py
|   apache.py
|   cgihandler.py
|   httpdapi.py
|   publisher.py
|   util.py
|   zhandler.py
|   __init__.pyc
|   apache.pyc
|
+---doc-html
....html files
|   \---icons
|           icons2
|           up.gif
|           previous.png
|           previous.gif
|           next.png
|           next.gif
|           modules.png
|           modules.gif
|           index.png
|           index.gif
|           contents.png
|           contents.gif
|           blank.png
|           up.png
|           blank.gif
|
+---src
|       Makefile.in
|       Makefile.libdir
|       Makefile.tmpl
|       Version.rc
|       _apachemodule.c
|       arrayobject.c
|       connobject.c
|       libpython.module.in
|       mod_python.c
|       mod_python.dsp
|       mod_python.mak
|       requestobject.c
|       serverobject.c
|       tableobject.c
|       util.c
|
\---Doc
        ...tex files



>[Tue Aug 06 10:03:35 2002] [error] [client 172.17.1.39]   File "C:\program
>files\python22\lib\mod_python\apache.py", line 55, in ?
>[Tue Aug 06 10:03:35 2002] [error] [client 172.17.1.39]     import _apache
>[Tue Aug 06 10:03:35 2002] [error] [client 172.17.1.39] ImportError: No
>module named _apache


From rclilly at lvcm.com  Mon Aug 12 08:51:50 2002
From: rclilly at lvcm.com (Robert Lilly)
Date: Fri Jan  9 21:59:29 2004
Subject: [mod_python] make_obcallback(): could not import mod_python.apache
In-Reply-To: <28386.1028130053@www30.gmx.net>
Message-ID: <EGEMLKBGPBCGGGFNPMGNEEFKCDAA.rclilly@lvcm.com>

> -----Original Message-----
> From: mod_python-admin@modpython.org
> [mailto:mod_python-admin@modpython.org]On Behalf Of Peter Bittner
> Sent: Wednesday, July 31, 2002 08:41 AM
> To: mod_python@modpython.org
> Subject: [mod_python] make_obcallback(): could not import
> mod_python.apache
>
>
> I have mod_python installed on SuSE Linux 8.0 and I have set up my
> httpd.conf according to the mod_python documentation, but
> unfortunately I get the
> following error message in my error log:
>
> make_obcallback(): could not import mod_python.apache.
> make_obcallback(): could not call init.

Hi Peter,

I had a similar problem under Windows 2000. In my case in turned out that
there was a second mod_python folder buried several levels inside the first.
THAT is the one that needs to go into python/Lib. Once I did that then it
was "Hello World!"

Hope this helps,

Robert Lilly
---
Outgoing mail is certified Virus Free.
Checked by AVG anti-virus system (http://www.grisoft.com).
Version: 6.0.381 / Virus Database: 214 - Release Date: 8/2/2002


From declosmadeuce at logica.com  Tue Aug 13 11:49:55 2002
From: declosmadeuce at logica.com (De Closmadeuc, Etienne)
Date: Fri Jan  9 21:59:29 2004
Subject: [mod_python] Got error : "python_handler: Dispatch() returned nothing"
Message-ID: <A5290EF4F8CBD211BBA20090273A7E4A039780A9@descartes.fr.logica.com>

> Here is the configuration :
> 
> * Windows NT4 SP6
> * Apache 1.3.20 (Got the message "Apache/1.3.20 (Win32) mod_python/2.7.6
> Python/2.2.1 running..." in the Apache window)
> * Apache configuration file (httpd.conf) (dll correctly installed in
> modules directory) :
> ...
> Port 81
> ...
> LoadModule python_module modules/mod_python.dll
> ...
> <Directory "C:/Program Files/Apache Group/Apache_1_3_20/htdocs/Python">
> 	AddHandler python-program .py
> 	PythonHandler Hello
> 	PythonDebug On
> </Directory>
> 
> * Files in D:\Python22\Lib\mod_python :
> 
> 06/12/00  04:05                  2 411 __init__.py
> 13/08/02  11:26                    237 __init__.pyc
> 19/08/01  00:43                 27 728 apache.py
> 13/08/02  11:26                 26 984 apache.pyc
> 06/12/00  04:05                  5 099 cgihandler.py
> 19/08/01  00:43                 15 103 httpdapi.py
> 19/08/01  00:43                 11 092 publisher.py
> 14/12/00  00:45                 10 831 util.py
> 06/12/00  04:05                  3 360 zhandler.py
> 
> Note that "__init__.py" and "apache.py" have been automatically compiled
> by python after the url invocation.
> 
> * File in C:/Program Files/Apache Group/Apache_1_3_20/htdocs/Python
> 
> Hello.py : 
> 
> from mod_python import apache
> 
> def handler(req):
> 	req.content_type = "text/plain"
> 	req.send_http_header()
> 	req.write("Hello world !")
> 	return apache.OK
> 
> * Error message in error.log after url invocation
> (http://localhost:81/Python/Hello.py) :
> 
> [Tue Aug 13 11:26:26 2002] [error] [client 127.0.0.1] python_handler:
> Dispatch() returned nothing.
> 
> 
> Can you help me to fix that problem ? Thanks.
> 
> Etienne de Closmadeuc (declosmadeuce@logica.com)
> Logica SA
> 183, route de Can?jan 33173 GRADIGNAN CEDEX
> T?l : 05.56.75.77.00
> 
> 

This e-mail and any attachment is for authorised use by the intended recipient(s) only.  It may contain proprietary material, confidential information and/or be subject to legal privilege.  It should not be copied, disclosed to, retained or used by, any other party.  If you are not an intended recipient then please promptly delete this e-mail and any attachment and all copies and inform the sender.  Thank you.

From mateusz at ant.gliwice.pl  Wed Aug 14 23:10:50 2002
From: mateusz at ant.gliwice.pl (Mateusz Korniak)
Date: Fri Jan  9 21:59:29 2004
Subject: [mod_python] All power of mod_python in publisher handler ?
Message-ID: <200208142310.50497.mateusz@ant.gliwice.pl>

I'm in process of converting some 'pure' mod_python handlers to publishers 
one.
Basically my handlers looks like

def mod_python_handler(req):
	req.status = mod_python.apache.OK
	req.content_type = ....
	req.send_http_header()
	req.write(content_parts) 
	# many writes like above ...

	return mod_python.apache.OK

so I suppsed to proper equivalent publisher handler should look like:

def publisher_handler(req):
	mod_python_handler(req):

But any call of request.write() results an 500 Internal Server Error.
1) What I'm doing wrong ?
2) What I'm suposed to return from publisher_handler() when all what already 
send do browser via request.write() calls ?

Something opposite is cleanly stated in docs:
"And last, but not the least, note how all the power of mod_python is still 
available to this function, since it has access to the Request object. You 
can do all the same things you can do with a "native" mod_python handler, 
e.g. set custom headers via req.headers_out, return errors by raising 
apache.SERVER_ERROR exceptions, write or read directly to and from the client 
via req.write and req.read, etc. "

TIA
-- 
Mateusz Korniak



From mk at lrn.ru  Wed Aug 14 23:25:49 2002
From: mk at lrn.ru (Michael Krasnovsky)
Date: Fri Jan  9 21:59:29 2004
Subject: [mod_python] Publisher Handler and redirect
Message-ID: <20020814232549.30e7817e.mk@lrn.ru>

Hello!

I have a problem. I need redirection inside a publisher handler. I try
using req.headers_out["Location"] = "http://www.example.com", but it
doesn't work.
Here is the example:

def test(req):
	"""
	"""
	req.headers_out["Location"] = "http://www.example.com"
	req.send_http_header()
	
	return "Going to Example.com..."


What's wrong?
I use the latest mod_python version and 1.3.26 Apache running on Linux.

Thanks.

With best regards,
Michael.


From grisha at modpython.org  Wed Aug 14 18:45:57 2002
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 21:59:29 2004
Subject: [mod_python] Publisher Handler and redirect
In-Reply-To: <20020814232549.30e7817e.mk@lrn.ru>
Message-ID: <Pine.BSF.4.32.0208141845290.56606-100000@localhost>

Try something like:

 def test(req):
       req.headers_out["Location"] = "http://www.example.com"
       req.status = apache.HTTP_MOVED_TEMPORARILY
       return "Going to Example.com..."



On Wed, 14 Aug 2002, Michael Krasnovsky wrote:

> Hello!
>
> I have a problem. I need redirection inside a publisher handler. I try
> using req.headers_out["Location"] = "http://www.example.com", but it
> doesn't work.
> Here is the example:
>
> def test(req):
> 	"""
> 	"""
> 	req.headers_out["Location"] = "http://www.example.com"
> 	req.send_http_header()
>
> 	return "Going to Example.com..."
>
>
> What's wrong?
> I use the latest mod_python version and 1.3.26 Apache running on Linux.
>
> Thanks.
>
> With best regards,
> Michael.
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://www.modpython.org/mailman/listinfo/mod_python
>


From mk at lrn.ru  Thu Aug 15 12:16:48 2002
From: mk at lrn.ru (Michael Krasnovsky)
Date: Fri Jan  9 21:59:29 2004
Subject: [mod_python] Publisher Handler and redirect
In-Reply-To: <Pine.BSF.4.32.0208141845290.56606-100000@localhost>
References: <20020814232549.30e7817e.mk@lrn.ru>
	<Pine.BSF.4.32.0208141845290.56606-100000@localhost>
Message-ID: <20020815121648.4b7eb304.mk@lrn.ru>

Hi, Gregory!

Thanks a lot. It works.
I also think that  this case should be described somewhere in FAQ.
Mateusz is right.

Michael.

On Wed, 14 Aug 2002 18:45:57 -0400 (EDT)
"Gregory (Grisha) Trubetskoy" <grisha@modpython.org> wrote:

> 
> Try something like:
> 
>  def test(req):
>        req.headers_out["Location"] = "http://www.example.com"
>        req.status = apache.HTTP_MOVED_TEMPORARILY
>        return "Going to Example.com..."
> 
> 
> 
> On Wed, 14 Aug 2002, Michael Krasnovsky wrote:
> 
> > Hello!
> >
> > I have a problem. I need redirection inside a publisher handler. I
> > try using req.headers_out["Location"] = "http://www.example.com",
> > but it doesn't work.
> > Here is the example:
> >
> > def test(req):
> > 	"""
> > 	"""
> > 	req.headers_out["Location"] = "http://www.example.com"
> > 	req.send_http_header()
> >
> > 	return "Going to Example.com..."
> >
> >
> > What's wrong?
> > I use the latest mod_python version and 1.3.26 Apache running on
> > Linux.
> >
> > Thanks.
> >
> > With best regards,
> > Michael.
> >
> > _______________________________________________
> > Mod_python mailing list
> > Mod_python@modpython.org
> > http://www.modpython.org/mailman/listinfo/mod_python
> >
> 
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://www.modpython.org/mailman/listinfo/mod_python

From gbeasley at tsa.ac.za  Thu Aug 15 12:19:30 2002
From: gbeasley at tsa.ac.za (Grant Beasley)
Date: Fri Jan  9 21:59:29 2004
Subject: [mod_python] Internal redirect (to the same server)
Message-ID: <OOENKCHGJGHILGPAGHGOEEPOCDAA.gbeasley@tsa.ac.za>

Hi

If I want to redirect the browser to another URL on my server, I can use a
HTTP redirect, but as I understand it, the redirect gets sent to the
browser, which then goes to the new URL, i.e. comes back to my server. I
want to be able to tell apache to serve another URL, without the useless
loop back to the browser.

Is this possible? And if so, could you give me a few pointers?

Secondly, what is the difference between HTTP_MOVED_TEMPORARILY and
HTTP_TEMPORARY_REDIRECT?

Thanks
Grant Beasley


From mk at lrn.ru  Thu Aug 15 13:10:18 2002
From: mk at lrn.ru (Michael Krasnovsky)
Date: Fri Jan  9 21:59:29 2004
Subject: Fw: Re: [mod_python] Publisher Handler and redirect
Message-ID: <20020815131018.1bed9908.mk@lrn.ru>


Begin forwarded message:

Date: Thu, 15 Aug 2002 00:18:39 +0200
From: Mateusz Korniak <mateusz@ant.gliwice.pl>
To: mk@lrn.ru
Subject: Re: [mod_python] Publisher Handler and redirect


On Wednesday 14 August 2002 23:25, Michael Krasnovsky wrote:
> Hello!
>
> I have a problem. I need redirection inside a publisher handler. I try
> using req.headers_out["Location"] = "http://www.example.com", but it
> doesn't work.
> Here is the example:
>
> def test(req):
> 	"""
> 	"""
> 	req.headers_out["Location"] = "http://www.example.com"
> 	req.send_http_header()
> 	return "Going to Example.com..."
>
> What's wrong?
Missing req.status set to mod_python.apache.HTTP_*_REDIRECT
 
def redirect(req):
	req.status = mod_python.apache.HTTP_TEMPORARY_REDIRECT
	req.headers_out["Location"] = "http://www.ant.gliwice.pl"
	req.send_http_header()


P.S. This should go to FAQ ;)

-- 
Mateusz Korniak
"Black holes are where God divided by zero." - Steven Wright


-- 
Michael Krasnovsky

Partner
Project Leader

bisoft s.r.o., Prague, Czech Republic

T +420 [0]2  51 61 42 21
M +420 [0]724  13 33 80
E michael.krasnovsky@bisoft.cz

From fabbe at paniq.net  Thu Aug 15 16:04:58 2002
From: fabbe at paniq.net (Fabian Fagerholm)
Date: Fri Jan  9 21:59:29 2004
Subject: [mod_python] Questions for the FAQ - please check and confirm (req.write() and
 return)
Message-ID: <1029416698.982.40.camel@kernel>

I have FAQ entries that I wish to add, but I thought it would be best to
post them here first for review. I'd like you to
        * confirm that the text it correct and
        * provide any additional information you think would be
          appropriate.

I will then submit this information to the FAQ Wizard.

Here goes:

--8<--
Using req.write() and return statements in the Publisher Handler

You may only call req.write() once. If you call it several times, you'll
get strange results.

If you use req.write() in a function called by the Publisher Handler,
you must still return a string at the end of the function. An empty
string is not enough.
--8<--

Thanks,
Fabian

-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 240 bytes
Desc: This is a digitally signed message part
Url : http://mailman.modpython.org/pipermail/mod_python/attachments/20020815/a3eb7b4f/attachment-0004.bin
From fabbe at paniq.net  Thu Aug 15 16:04:58 2002
From: fabbe at paniq.net (Fabian Fagerholm)
Date: Fri Jan  9 21:59:29 2004
Subject: [mod_python] Questions for the FAQ - please check and confirm (req.write() and
 return)
Message-ID: <1029416698.982.40.camel@kernel>

I have FAQ entries that I wish to add, but I thought it would be best to
post them here first for review. I'd like you to
        * confirm that the text it correct and
        * provide any additional information you think would be
          appropriate.

I will then submit this information to the FAQ Wizard.

Here goes:

--8<--
Using req.write() and return statements in the Publisher Handler

You may only call req.write() once. If you call it several times, you'll
get strange results.

If you use req.write() in a function called by the Publisher Handler,
you must still return a string at the end of the function. An empty
string is not enough.
--8<--

Thanks,
Fabian

-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 240 bytes
Desc: This is a digitally signed message part
Url : http://mailman.modpython.org/pipermail/mod_python/attachments/20020815/a3eb7b4f/attachment-0005.bin
From vmilitaru at sympatico.ca  Thu Aug 15 13:38:50 2002
From: vmilitaru at sympatico.ca (vio)
Date: Fri Jan  9 21:59:29 2004
Subject: [mod_python] Publisher Handler and redirect
In-Reply-To: <20020815121648.4b7eb304.mk@lrn.ru>; from mk@lrn.ru on Thu, Aug 15, 2002 at 12:16:48PM +0200
References: <20020814232549.30e7817e.mk@lrn.ru> <Pine.BSF.4.32.0208141845290.56606-100000@localhost> <20020815121648.4b7eb304.mk@lrn.ru>
Message-ID: <20020815133850.A338@eye.neb>

I believe the defining docs on mod_python redirection live in the FAQ (already).
http://www.modpython.org/FAQ/faqw.py?req=show&file=faq03.002.htp

Cheers, 
Vio


* Michael Krasnovsky <mk@lrn.ru> [020815 13:26]:
> Hi, Gregory!
> 
> Thanks a lot. It works.
> I also think that  this case should be described somewhere in FAQ.
> Mateusz is right.
> 
> Michael.
> 
> On Wed, 14 Aug 2002 18:45:57 -0400 (EDT)
> "Gregory (Grisha) Trubetskoy" <grisha@modpython.org> wrote:
> 
> > 
> > Try something like:
> > 
> >  def test(req):
> >        req.headers_out["Location"] = "http://www.example.com"
> >        req.status = apache.HTTP_MOVED_TEMPORARILY
> >        return "Going to Example.com..."
> > 
> > 
> > 
> > On Wed, 14 Aug 2002, Michael Krasnovsky wrote:
> > 
> > > Hello!
> > >
> > > I have a problem. I need redirection inside a publisher handler. I
> > > try using req.headers_out["Location"] = "http://www.example.com",
> > > but it doesn't work.
> > > Here is the example:
> > >
> > > def test(req):
> > > 	"""
> > > 	"""
> > > 	req.headers_out["Location"] = "http://www.example.com"
> > > 	req.send_http_header()
> > >
> > > 	return "Going to Example.com..."
> > >
> > >
> > > What's wrong?
> > > I use the latest mod_python version and 1.3.26 Apache running on
> > > Linux.
> > >
> > > Thanks.
> > >
> > > With best regards,
> > > Michael.
> > >
> > > _______________________________________________
> > > Mod_python mailing list
> > > Mod_python@modpython.org
> > > http://www.modpython.org/mailman/listinfo/mod_python
> > >
> > 
> > _______________________________________________
> > Mod_python mailing list
> > Mod_python@modpython.org
> > http://www.modpython.org/mailman/listinfo/mod_python
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://www.modpython.org/mailman/listinfo/mod_python

From vmilitaru at sympatico.ca  Thu Aug 15 13:38:50 2002
From: vmilitaru at sympatico.ca (vio)
Date: Fri Jan  9 21:59:29 2004
Subject: [mod_python] Publisher Handler and redirect
In-Reply-To: <20020815121648.4b7eb304.mk@lrn.ru>; from mk@lrn.ru on Thu, Aug 15, 2002 at 12:16:48PM +0200
References: <20020814232549.30e7817e.mk@lrn.ru> <Pine.BSF.4.32.0208141845290.56606-100000@localhost> <20020815121648.4b7eb304.mk@lrn.ru>
Message-ID: <20020815133850.A338@eye.neb>

I believe the defining docs on mod_python redirection live in the FAQ (already).
http://www.modpython.org/FAQ/faqw.py?req=show&file=faq03.002.htp

Cheers, 
Vio


* Michael Krasnovsky <mk@lrn.ru> [020815 13:26]:
> Hi, Gregory!
> 
> Thanks a lot. It works.
> I also think that  this case should be described somewhere in FAQ.
> Mateusz is right.
> 
> Michael.
> 
> On Wed, 14 Aug 2002 18:45:57 -0400 (EDT)
> "Gregory (Grisha) Trubetskoy" <grisha@modpython.org> wrote:
> 
> > 
> > Try something like:
> > 
> >  def test(req):
> >        req.headers_out["Location"] = "http://www.example.com"
> >        req.status = apache.HTTP_MOVED_TEMPORARILY
> >        return "Going to Example.com..."
> > 
> > 
> > 
> > On Wed, 14 Aug 2002, Michael Krasnovsky wrote:
> > 
> > > Hello!
> > >
> > > I have a problem. I need redirection inside a publisher handler. I
> > > try using req.headers_out["Location"] = "http://www.example.com",
> > > but it doesn't work.
> > > Here is the example:
> > >
> > > def test(req):
> > > 	"""
> > > 	"""
> > > 	req.headers_out["Location"] = "http://www.example.com"
> > > 	req.send_http_header()
> > >
> > > 	return "Going to Example.com..."
> > >
> > >
> > > What's wrong?
> > > I use the latest mod_python version and 1.3.26 Apache running on
> > > Linux.
> > >
> > > Thanks.
> > >
> > > With best regards,
> > > Michael.
> > >
> > > _______________________________________________
> > > Mod_python mailing list
> > > Mod_python@modpython.org
> > > http://www.modpython.org/mailman/listinfo/mod_python
> > >
> > 
> > _______________________________________________
> > Mod_python mailing list
> > Mod_python@modpython.org
> > http://www.modpython.org/mailman/listinfo/mod_python
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://www.modpython.org/mailman/listinfo/mod_python

From vmilitaru at sympatico.ca  Thu Aug 15 14:02:27 2002
From: vmilitaru at sympatico.ca (vio)
Date: Fri Jan  9 21:59:29 2004
Subject: [mod_python] Internal redirect (to the same server)
In-Reply-To: <OOENKCHGJGHILGPAGHGOEEPOCDAA.gbeasley@tsa.ac.za>; from gbeasley@tsa.ac.za on Thu, Aug 15, 2002 at 12:19:30PM +0200
References: <OOENKCHGJGHILGPAGHGOEEPOCDAA.gbeasley@tsa.ac.za>
Message-ID: <20020815140226.B338@eye.neb>

I believe that each browser handles the redirect HTTP messages a little 
differently, so redirection is browser-dependant.
But the question is rather how to by-pass the redirect altogether.
I believe you can do that by writing directly to the browser.

So instead of something like:
 _REQUEST.headers_out['location'] = 'http://' + your_other_virtual_server
 _REQUEST.status = apache.HTTP_MOVED_PERMANENTLY
 _REQUEST.send_http_header()
 raise apache.SERVER_RETURN, apache.OK

you would do something like:
 _REQUEST.headers_out.add('Pragma','no-cache')
 _REQUEST.headers_out.add( your other headers here)
 _REQUEST.send_http_header()

 _REQUEST.write(some_html_document)
 raise apache.SERVER_RETURN, apache.OK

where :
 some_html_document = """\
 <HTML>
 <HEAD><TITLE> Hello </TITLE></HEAD>
 <BODY>
 ...
 </BODY>
 </HTML>
 """

Hope this helps,
Vio


* Grant Beasley <gbeasley@tsa.ac.za> [020815 13:26]:
> Hi
> 
> If I want to redirect the browser to another URL on my server, I can use a
> HTTP redirect, but as I understand it, the redirect gets sent to the
> browser, which then goes to the new URL, i.e. comes back to my server. I
> want to be able to tell apache to serve another URL, without the useless
> loop back to the browser.
> 
> Is this possible? And if so, could you give me a few pointers?
> 
> Secondly, what is the difference between HTTP_MOVED_TEMPORARILY and
> HTTP_TEMPORARY_REDIRECT?
> 
> Thanks
> Grant Beasley
> 
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://www.modpython.org/mailman/listinfo/mod_python

From fabbe at paniq.net  Thu Aug 15 23:03:40 2002
From: fabbe at paniq.net (Fabian Fagerholm)
Date: Fri Jan  9 21:59:29 2004
Subject: [mod_python] Messages not getting through to list server?
Message-ID: <1029441820.982.225.camel@kernel>

Hi all,
Sorry to bother the list with this question, but has anyone noticed that
the mailing list seems to be extremely slow (or even not working at
all)?

Are there some network problems or is the server under too much load?

I'm hereby offering to host a backup MX for the modpython.org domain if
that would help at all. I might be in a position to offer to host the
mailing list as well if needed. Hardware and network connections are
sufficient to handle at least a few hundred messages per day.

Cheers,
Fabian



From ian at veryfresh.com  Thu Aug 15 15:37:04 2002
From: ian at veryfresh.com (Ian Clelland)
Date: Fri Jan  9 21:59:29 2004
Subject: [mod_python] Internal redirect (to the same server)
In-Reply-To: <OOENKCHGJGHILGPAGHGOEEPOCDAA.gbeasley@tsa.ac.za>
References: <OOENKCHGJGHILGPAGHGOEEPOCDAA.gbeasley@tsa.ac.za>
Message-ID: <20020815223704.GC11141@fullfactor.com>

On Thu, Aug 15, 2002 at 12:19:30PM +0200, Grant Beasley wrote:
> Hi
> 
> If I want to redirect the browser to another URL on my server, I can use a
> HTTP redirect, but as I understand it, the redirect gets sent to the
> browser, which then goes to the new URL, i.e. comes back to my server.

Yep. An HTTP redirect is a (usually) 301 status code sent back to the 
browser to tell it to request a different document. This allows for a 
great deal of flexibility on the server side -- you can go as far as 
redirecting clients to a completely different server, or to a different 
protocol (ftp: or mailto:, even).

> I
> want to be able to tell apache to serve another URL, without the useless
> loop back to the browser.
> 
> Is this possible? And if so, could you give me a few pointers?

If the extra messages really are useless, then the way to eliminate 
them is to change the URL on the server before Apache handles it. The 
simplest method is probably to use mod_alias (or mod_rewrite if you 
need something more powerful).

If you want to do this completely in mod_python, then you can write a 
PythonTransHandler, which will receive all requests, and has the chance 
to modify the URL before Apache passes the request to your main handler.

Remember, though, that in these cases, the client software has no idea 
that the URL has been changed, and will continue to request the old URL 
every time. This can be very useful if you are trying to create a 
'virtual' server layout which is different than your actualy filesystem 
layout, but at other times, you just want to tell the client 'sorry, 
this document has moved; please look for it here now.' That's when the 
HTTP redirects are useful.


> Secondly, what is the difference between HTTP_MOVED_TEMPORARILY and
> HTTP_TEMPORARY_REDIRECT?

HTTP/1.0 only had two redirection status codes: 301 (Moved Permanently) 
and 302 (Moved Temporarily). 302 was used for any situation where the 
client shouldn't remember the response, and should continue to request 
the original URL every time.

In HTTP/1.1, the 302 status code has been split into three different 
codes: 302 (now called 'Found'), 303 (See Other) and 307 (Temporary 
Redirect).

The idea behind this is that a 302 tells the client "I looked for the 
URL which you requested, and this is where I found it." It is not 
necessarily the case that the URL has changed, just that the document 
you want is somewhere else.

A 307 tells the client "The URL you requested has been temporarily 
moved. Please get it from this location, for now." This should be 
returned when the document used to be in one locaion, and probably will 
be back there again, but it has been moved out of the way for a while.

For all practical purposes, these two responses are exactly the same. 
The only difference (besides the semantics) is that HTTP/1.0 clients 
don't understand the 307 code at all, so if you want to use it, you'll 
have to check the protocol version (in mod_python, test req.proto_num 
>= 1001) and fall back to 302 if the client is using HTTP/1.0.


Neither of these status codes should usually be returned in response to 
a POST request, by the way. If a client receives a 302 or 307 from a 
POST request, then it is supposed to confirm the redirect with the 
user, and (after confirmation) repeat the POST to the new URL. A 303 
code can be returned to tell the client "I've processed your POST 
request, and the results you want are at this URL. Please use a GET 
query to access it."


--
Ian Clelland
<ian@veryfresh.com>

From sa at sfsu.edu  Thu Aug  1 17:00:00 2002
From: sa at sfsu.edu (Sean Abrahams)
Date: Fri Jan  9 21:59:30 2004
Subject: [mod_python] Session Handling Help + Writing a Guide On It
Message-ID: <73110242590.20020801170000@sfsu.edu>

I currently find myself having to create a web application using
session management (without cookies). I know there has been some
discussion in the past about adding a session handler to mod_python,
but I was hoping to get some help or get pointed in some directions
for my development.

I've heard that Apache 2.x has a shared memory space? I'm assuming
session data can be temporarily stored there for quick creation,
access, destruction?

I'm new to mod_python and apache handlers, so I'm currently going
through some learning curves.

Anyone willing to share their session development experience?

Here's my base idea (comments encouraged!):
1. I'll have a base directory that requires authorization
(/var/www/apps) which is accessed via the web at htts://foo.bar/apps

2. Any URL pointing to /var/www/apps and its subdirectories will be
handled by a central login script. It will store the initial URL the
user hit, so it can output the user to where he/she wished to go after
authorization. Thus, I can give people a direct link to an application
that's located somewhere inside /var/www/apps and it will prompt them
with the universal HTML login screen, then take them back to the URL
they originally entered.

3. When they login, their user/pass will be checked against a
database, with a positive ID creating a session. Throughout the
session, I can add/remove/modify data stored in the session data,
between pages, etc. (I'm not sure if it's fastest to store session
data in the file system or a DB, but I'm assuming being able to store
it in the system RAM would be most ideal. This is where the Apache 2.x
share memory comes in?)

4. Session ends when user clicks "logout", leaves my domain, or closes
the browser. Thus, if the user leaves the domain, then hits back in
their browser, he/she will get a "user authentication required" error,
or something similar.

I'm definitely excited about putting this together, just a little
disappointed in not being able to find a guide that helps me do this.
Thus, as a side effect to my development of this, and the help I
receive from this list, I will write and publish a guide detailing how
to create this functionality, providing the source code as well.

Thank you!
Sean


From sa at sfsu.edu  Mon Aug  5 09:38:58 2002
From: sa at sfsu.edu (Sean Abrahams)
Date: Fri Jan  9 21:59:30 2004
Subject: [mod_python] Session Handling Help + Writing a Guide On It
Message-ID: <15429380376.20020805093858@sfsu.edu>

I currently find myself having to create a web application using
session management (without cookies). I know there has been some
discussion in the past about adding a session handler to mod_python,
but I was hoping to get some help or get pointed in some directions
for my development.

I've heard that Apache 2.x has a shared memory space? I'm assuming
session data can be temporarily stored there for quick creation,
access, destruction?

I'm new to mod_python and apache handlers, so I'm currently going
through some learning curves.

Anyone willing to share their session development experience?

Here's my base idea (comments encouraged!):
1. I'll have a base directory that requires authorization
(/var/www/apps) which is accessed via the web at htts://foo.bar/apps

2. Any URL pointing to /var/www/apps and its subdirectories will be
handled by a central login script. It will store the initial URL the
user hit, so it can output the user to where he/she wished to go after
authorization. Thus, I can give people a direct link to an application
that's located somewhere inside /var/www/apps and it will prompt them
with the universal HTML login screen, then take them back to the URL
they originally entered.

3. When they login, their user/pass will be checked against a
database, with a positive ID creating a session. Throughout the
session, I can add/remove/modify data stored in the session data,
between pages, etc. (I'm not sure if it's fastest to store session
data in the file system or a DB, but I'm assuming being able to store
it in the system RAM would be most ideal. This is where the Apache 2.x
share memory comes in?)

4. Session ends when user clicks "logout", leaves my domain, or closes
the browser. Thus, if the user leaves the domain, then hits back in
their browser, he/she will get a "user authentication required" error,
or something similar.

I'm definitely excited about putting this together, just a little
disappointed in not being able to find a guide that helps me do this.
Thus, as a side effect to my development of this, and the help I
receive from this list, I will write and publish a guide detailing how
to create this functionality, providing the source code as well.

Thank you!
Sean


From dirkLeas at mac.com  Wed Aug  7 06:48:12 2002
From: dirkLeas at mac.com (Dirk Leas)
Date: Fri Jan  9 21:59:30 2004
Subject: [mod_python] 3.0.0 alpha binaries for Win32
In-Reply-To: <200208061611.g76GB4s39439@eden.ispol.com>
Message-ID: <000001c23dff$ef985d50$9865fea9@leasCray>

Anybody have 3.0.0 binaries available for download?

TIA,
D



From rien at yeepa.org  Wed Aug  7 23:05:30 2002
From: rien at yeepa.org (Adrien Plisson)
Date: Fri Jan  9 21:59:30 2004
Subject: [mod_python] Win32, Apache and mod_python
References: <EGEMLKBGPBCGGGFNPMGNKECBCDAA.rclilly@lvcm.com>
Message-ID: <004f01c23e56$2a6b4d60$2cee4cd4@RANDOM>

Hello,

I see a lot of posts concerning mod_pythonh under win32.
So, here is my own experience:
the first time i tried to install mod_python under windows 2000 i had to
tweak a bit with the install. I posted something about that some months ago.
Here is what you should do:

- install apache, you can find precompiled binaries at www.apache.org
- install python. ActiveState is giving a very good distribution of python
for windows for free called ActivePython (www.activestate.com)
- install mod_python. this means you have to download any distribution of
mod_python AND the precompiled mod_python.dll. then follow the instructions
in the mod_python manual (appendix A: Windows installation) except for those
points :

- point 1:
  * "Move (or just drag & drop) the mod python-x folder into the Python lib
     folder (i.e C:\ Program Files\ Python\ lib)."
    the mod_python-x folder should also be renamed 'mod_python'

  * "Move the files in the folder lib inside the mod python folder (C:\
     Program Files\ Python\ lib\ mod_python-x\ lib\ mod python) to the
     C:\ Program Files\ Python\ lib\ mod_python folder. It's safe to delete
these folders we just emptied."
   the first path is incorrect: it's
'...\lib\mod_python-x\python\mod_python\'

- point 2:
  * it talks about adding the LoadModule directive, but on my installation,
i
    had also to add a AddModule directive.

then it should run.

be aware that:

- if mod_python scripts are not in a folder covered by PYTHON_PATH then it
won't be found. on Win32, PYTHON_PATH is stored in the registry at
HKLM\SOFTWARE\PYTHON\PYTHONCORE\<version>\PYTHONPATH

- the warning about EAPI is an apache warning, not a mod_python warning, so
you have to recompile apache with -DEAPI, or download another precompiled
version from the apache website.

- the mod_ython documentation talks about python 1.5.2 or 2.0 and apache
1.3: for me, it runs with python 2.1, apache 1.3.23 and mod_python 2.7.4

- you simply CAN'T do a 'from mod_python import apache' in a python shell.
you HAVE TO be running under apache.

- included with apache are 2 modules named mod_info and mod_status which are
great tools to know if mod_python is running fine or was just ignored.

- the precompiled binaries of all stuffs you have to install are perfect
enough, don't try to compile them on your own unless you really know your
compiler (knowing it is much harder than anyone can think of)

So this is the most i can remember for the moment. i hope it will help... if
some points are not clear enough, just tell me, i will try to be more
precise.

--
rien



From Bryn.Davies at AirLiquide.com  Thu Aug  8 11:12:23 2002
From: Bryn.Davies at AirLiquide.com (Davies, Bryn)
Date: Fri Jan  9 21:59:30 2004
Subject: [mod_python] Humble pie, plus an apology.
Message-ID: <82E2D0C417E81A4CB94A56AD625FE4366DC532@au-hokrypton.as.corp.airliquide.com>

 First, I'd like to apologise for wasting all of your time.  The bug was due
to a typo in the Directory clause in httpd.conf, relating to where the
example python script was kept.  Fixing this, and removing the shebang from
the top of the python script ( hence returning its execution responsibilites
to Apache itself ) resolved my problem.  I shouldn't have assumed the
problem was modpython itself.

 Sorry! *blush*

-- 
Bryn Davies, IT Administrator, Air Liquide Healthcare.
"And journeyed up the mountainside, over the clouds...
 and nothing was ever heard of him again."

From vmilitaru at sympatico.ca  Thu Aug 15 23:45:42 2002
From: vmilitaru at sympatico.ca (vio)
Date: Fri Jan  9 21:59:30 2004
Subject: [Fwd: [mod_python] Messages not getting through to list server?]
In-Reply-To: <3D5C6A14.4B123BA5@sympatico.ca>; from vmilitaru@sympatico.ca on Thu, Aug 15, 2002 at 10:57:24PM -0400
References: <3D5C6A14.4B123BA5@sympatico.ca>
Message-ID: <20020815234542.A626@eye.neb>

I'd dare to say the mod_python list server has been quite terrible for the 
couple of months i've been subscribed to it. But I think the right move
here would rather be to simply move the list to 'sourceforge', and let them
take care of it. They have all the bandwidth and hardware to handle incredible
loads. Totally cheapo free for open source projects. Just have a look at:
http://sourceforge.net/docman/display_doc.php?docid=753&group_id=1#top
There is also a link with all their current (impressive!) hardware, 
but I can't seem to find it.

My 2 c.
Vio

Fabian Fagerholm wrote:
> 
> > Hi all,
> > Sorry to bother the list with this question, but has anyone noticed that
> > the mailing list seems to be extremely slow (or even not working at
> > all)?
> >
> > Are there some network problems or is the server under too much load?
> >
> > I'm hereby offering to host a backup MX for the modpython.org domain if
> > that would help at all. I might be in a position to offer to host the
> > mailing list as well if needed. Hardware and network connections are
> > sufficient to handle at least a few hundred messages per day.
> >
> > Cheers,
> > Fabian
> >
> > _______________________________________________
> > Mod_python mailing list
> > Mod_python@modpython.org
> > http://www.modpython.org/mailman/listinfo/mod_python

From fabbe at paniq.net  Fri Aug 16 10:52:53 2002
From: fabbe at paniq.net (Fabian Fagerholm)
Date: Fri Jan  9 21:59:30 2004
Subject: [Fwd: [mod_python] Messages not getting through to list server?]
In-Reply-To: <20020815234542.A626@eye.neb>
References: <3D5C6A14.4B123BA5@sympatico.ca>  <20020815234542.A626@eye.neb>
Message-ID: <1029484374.2093.10.camel@kernel>

On Fri, 2002-08-16 at 07:45, vio wrote:
> I'd dare to say the mod_python list server has been quite terrible for the 
> couple of months i've been subscribed to it. But I think the right move
> here would rather be to simply move the list to 'sourceforge', and let them
> take care of it. They have all the bandwidth and hardware to handle incredible
> loads. Totally cheapo free for open source projects. Just have a look at:
> http://sourceforge.net/docman/display_doc.php?docid=753&group_id=1#top
> There is also a link with all their current (impressive!) hardware, 
> but I can't seem to find it.

Wherever it ends up being hosted, I hope that these issues will be
resolved soon. I just got a bunch of messages from the list, some which
were sent back in July!

There can never be a thriving mod_python community if the basic means of
communication is cut off.

Without knowing anything about how the mod_python list server is set up,
I see no network problems with it. Connections to port 25 on the server
that is set up as MX for the domain modpython.org work just fine. So the
issue must be with the list software. Or perhaps the mail is transferred
to elsewhere and processed?

In any case, it would we nice if the list server admins could comment on
this. There are plenty of hands to use if help is needed, and there has
been an offer for a backup MX and a suggestion to use Sourceforge, which
should both be taken into consideration.

I'm don't want to offend anyone, but if the list will go on in this
shape, then perhaps the community should arrange for an alternative list
to use?

Cheers,
Fabian



From ian at veryfresh.com  Fri Aug 16 01:08:18 2002
From: ian at veryfresh.com (Ian Clelland)
Date: Fri Jan  9 21:59:30 2004
Subject: Fw: Re: [mod_python] Publisher Handler and redirect
In-Reply-To: <20020815131018.1bed9908.mk@lrn.ru>
References: <20020815131018.1bed9908.mk@lrn.ru>
Message-ID: <20020816080818.GD11141@fullfactor.com>

On Thu, Aug 15, 2002 at 01:10:18PM +0200, Michael Krasnovsky wrote:
> Missing req.status set to mod_python.apache.HTTP_*_REDIRECT
>  
> def redirect(req):
> 	req.status = mod_python.apache.HTTP_TEMPORARY_REDIRECT
> 	req.headers_out["Location"] = "http://www.ant.gliwice.pl"
> 	req.send_http_header()
> 
> 
> P.S. This should go to FAQ ;)

Your first line should probably be something like this:

  req.status = req.proto_num >= 1001 and \
      mod_python.apache.HTTP_TEMPORARY_REDIRECT or \
      mod_python.apache.HTTP_MOVED_TEMPORARILY

since older clients (Pre-HTTP/1.1) won't understand the
HTTP_TEMPORARY_REDIRECT status code.

--
Ian Clelland
<ian@veryfresh.com>

From fabbe at paniq.net  Fri Aug 16 15:17:14 2002
From: fabbe at paniq.net (Fabian Fagerholm)
Date: Fri Jan  9 21:59:30 2004
Subject: [mod_python] Questions for the FAQ - please check and confirm
	(req.write() and return) also docs update ...
In-Reply-To: <200208161351.42466.mateusz@ant.gliwice.pl>
References: <1029416698.982.40.camel@kernel> 
	<200208161351.42466.mateusz@ant.gliwice.pl>
Message-ID: <1029500235.2093.18.camel@kernel>

On Fri, 2002-08-16 at 14:51, Mateusz Korniak wrote:
> > --8<--
> > Using req.write() and return statements in the Publisher Handler
> >
> > You may only call req.write() once. If you call it several times, you'll
> > get strange results.
> >
> > If you use req.write() in a function called by the Publisher Handler,
> > you must still return a string at the end of the function. An empty
> > string is not enough.
> > --8<--
> >
> If it's so, mod_python docs 
> (http://www.modpython.org/live/mod_python-2.7.8/doc-html/tut-pub.html)
> needs update becouse I understand it quite opposite to text stated above.
> 
> """
> And last, but not the least, note how all the power of mod_python is still 
> available to this function, since it has access to the Request object. You 
> can do all the same things you can do with a "native" mod_python handler, 
> e.g. set custom headers via req.headers_out, return errors by raising 
> apache.SERVER_ERROR exceptions, write or read directly to and from the client 
> via req.write and req.read, etc. 
> """

Well, it doesn't explicitly say anywhere *how many times* the
req.write() function can be called.

I may very well be wrong, but if my tests are correct, you can only use
req.write() once in a regular mod_python handler. If you're using the
Publisher handler, you can use req.write() once, but then you *have* to
return something at the end of your function, or things won't work.

I agree though that the documentation needs updating. I've sent a
documentation patch (mostly touch-ups and a little rewording here and
there) to Gregory Trubetskoy some time ago, but received no reply.

Cheers,
Fabian



From grisha at modpython.org  Fri Aug 16 08:46:08 2002
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 21:59:30 2004
Subject: [Fwd: [mod_python] Messages not getting through to list server?]
In-Reply-To: <1029484374.2093.10.camel@kernel>
Message-ID: <Pine.BSF.4.32.0208160840230.89789-100000@localhost>

My appologies - the list indeed seemed to have had a problem. I'm getting
increasingly more dissatisfied with mailman - it has this "feature" where
messages to domains whose MX's cannot be looked up (probably because the
domain is no longer registered or DNS is down) clog up the entire list.

I've upgraded to 2.0.12 version of mailman, of this doesn't make it
better, I will look for other software.

Thanks to all who made offers to host - so far hosting is not a problem.
I'm not very keen on having the list at Sourceforge - I'd rather have more
control over it, also I don't know how long Sourceforge will be around -
these days nothing is certain. So far only CVS is hosted there.

Grisha

On 16 Aug 2002, Fabian Fagerholm wrote:

> On Fri, 2002-08-16 at 07:45, vio wrote:
> > I'd dare to say the mod_python list server has been quite terrible for the
> > couple of months i've been subscribed to it. But I think the right move
> > here would rather be to simply move the list to 'sourceforge', and let them
> > take care of it. They have all the bandwidth and hardware to handle incredible
> > loads. Totally cheapo free for open source projects. Just have a look at:
> > http://sourceforge.net/docman/display_doc.php?docid=753&group_id=1#top
> > There is also a link with all their current (impressive!) hardware,
> > but I can't seem to find it.
>
> Wherever it ends up being hosted, I hope that these issues will be
> resolved soon. I just got a bunch of messages from the list, some which
> were sent back in July!
>
> There can never be a thriving mod_python community if the basic means of
> communication is cut off.
>
> Without knowing anything about how the mod_python list server is set up,
> I see no network problems with it. Connections to port 25 on the server
> that is set up as MX for the domain modpython.org work just fine. So the
> issue must be with the list software. Or perhaps the mail is transferred
> to elsewhere and processed?
>
> In any case, it would we nice if the list server admins could comment on
> this. There are plenty of hands to use if help is needed, and there has
> been an offer for a backup MX and a suggestion to use Sourceforge, which
> should both be taken into consideration.
>
> I'm don't want to offend anyone, but if the list will go on in this
> shape, then perhaps the community should arrange for an alternative list
> to use?
>
> Cheers,
> Fabian
>
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://www.modpython.org/mailman/listinfo/mod_python
>


From grisha at modpython.org  Fri Aug 16 08:48:46 2002
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 21:59:30 2004
Subject: [mod_python] compiled code execution
In-Reply-To: <003301c22bd1$0ac2e820$0301a8c0@pentium>
Message-ID: <Pine.BSF.4.32.0208160848190.89789-100000@localhost>


On Mon, 15 Jul 2002, [iso-8859-2] Ji?? Kastner wrote:

> i'm interested about possibility to execute .pyc code by adding line to
> httpd.conf:
>
> AddHandler python-program .pyc
>
> or if this is nonsense, because python is executing it directly, if is .pyc
> present?

You just asnwered your own question :)

Grisha


From clee at spiralis.merseine.nu  Fri Aug 16 07:55:36 2002
From: clee at spiralis.merseine.nu (clee@spiralis.merseine.nu)
Date: Fri Jan  9 21:59:30 2004
Subject: [mod_python] Ping?
In-Reply-To: <20020714135537.A278@eye.neb>
References: <Pine.LNX.4.44.0207131250410.31967-100000@slippy.wire.rat>
	<20020714135537.A278@eye.neb>
Message-ID: <15708.63048.276061.704633@spiralis.merseine.nu>

>>>>> "vmilitaru" == vmilitaru  <vio> writes:

    vmilitaru> Same here. But even more problematic seems that some
    vmilitaru> messages never make it to the list (at least some of my
    vmilitaru> messages never did).  Possible solution (provided this
    vmilitaru> message make it to the list): how about migrating
    vmilitaru> modpython to 'sourceforge'? It's totally free and they
    vmilitaru> do an outstanding hosting job.

Sourceforge is great, but I would vote against this idea for one
reason: in my past experience, I have always prefered using the Mailman web
interface for browsing list archives over sourceforge's GeoCrawler
mail system.

Is it possible to use Mailman with sourceforge?

-chris

From grisha at modpython.org  Fri Aug 16 09:00:14 2002
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 21:59:30 2004
Subject: [mod_python] Questions for the FAQ - please check and confirm
 (req.write() and return) also docs update ...
In-Reply-To: <1029500235.2093.18.camel@kernel>
Message-ID: <Pine.BSF.4.32.0208160856250.89789-100000@localhost>


On 16 Aug 2002, Fabian Fagerholm wrote:

> If you're using the Publisher handler, you can use req.write() once,
> but then you *have* to return something at the end of your function,
> or things won't work.

You should be able to use write() many times as you like. It should also
be ok to return an empty string *if* you have written something with
write(), otherwise returning an empty document will cause a problem with
Netscape at least.

Grisha




From fabbe at paniq.net  Fri Aug 16 16:14:36 2002
From: fabbe at paniq.net (Fabian Fagerholm)
Date: Fri Jan  9 21:59:30 2004
Subject: [Fwd: [mod_python] Messages not getting through to list server?]
In-Reply-To: <Pine.BSF.4.32.0208160840230.89789-100000@localhost>
References: <Pine.BSF.4.32.0208160840230.89789-100000@localhost>
Message-ID: <1029503676.2028.41.camel@kernel>

On Fri, 2002-08-16 at 15:46, Gregory (Grisha) Trubetskoy wrote:
> My appologies - the list indeed seemed to have had a problem. I'm getting
> increasingly more dissatisfied with mailman - it has this "feature" where
> messages to domains whose MX's cannot be looked up (probably because the
> domain is no longer registered or DNS is down) clog up the entire list.
> 
> I've upgraded to 2.0.12 version of mailman, of this doesn't make it
> better, I will look for other software.

Let's hope that version works better. If not, I would suggest opening a
bug report (http://www.gnu.org/software/mailman/bugs.html).

> Thanks to all who made offers to host - so far hosting is not a problem.
> I'm not very keen on having the list at Sourceforge - I'd rather have more
> control over it, also I don't know how long Sourceforge will be around -
> these days nothing is certain. So far only CVS is hosted there.

I share this opinion on Sourceforge, and since we now know that the list
software had locked up, people can always yell if it happens again :)

Thanks for the clarification!

Cheers,
Fabian



From gbenson at redhat.com  Fri Aug 16 15:15:14 2002
From: gbenson at redhat.com (Gary Benson)
Date: Fri Jan  9 21:59:31 2004
Subject: [mod_python] How to make m_p handle everything
Message-ID: <20020816151513.B8120@redhat.com>

Hi,

Is it possible to make a mod_python script handle every request below a
certain path without using mod_rewrite or similar?

Cheers,
Gary

[ gbenson@redhat.com ][ GnuPG 85A8F78B ][ http://inauspicious.org/ ]

From grisha at modpython.org  Fri Aug 16 11:00:11 2002
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 21:59:31 2004
Subject: [mod_python] How to make m_p handle everything
In-Reply-To: <20020816151513.B8120@redhat.com>
Message-ID: <Pine.BSF.4.32.0208161059190.90085-100000@localhost>

Sure - if the script is in the python path somwhere that's how it would
work (unless I'm missing something in your question).

Grisha

On Fri, 16 Aug 2002, Gary Benson wrote:

> Hi,
>
> Is it possible to make a mod_python script handle every request below a
> certain path without using mod_rewrite or similar?
>
> Cheers,
> Gary
>
> [ gbenson@redhat.com ][ GnuPG 85A8F78B ][ http://inauspicious.org/ ]
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://www.modpython.org/mailman/listinfo/mod_python
>


From gbenson at redhat.com  Fri Aug 16 16:24:21 2002
From: gbenson at redhat.com (Gary Benson)
Date: Fri Jan  9 21:59:31 2004
Subject: [mod_python] How to make m_p handle everything
In-Reply-To: <Pine.BSF.4.32.0208161059190.90085-100000@localhost>; from grisha@modpython.org on Fri, Aug 16, 2002 at 11:00:11AM -0400
References: <20020816151513.B8120@redhat.com> <Pine.BSF.4.32.0208161059190.90085-100000@localhost>
Message-ID: <20020816162421.C8120@redhat.com>

On Fri, Aug 16, 2002 at 11:00:11AM -0400, Gregory (Grisha) Trubetskoy wrote:

> Sure - if the script is in the python path somwhere that's how it would
> work (unless I'm missing something in your question).

Erm, I'm probably not being very clear.  What I meant was, if I have a
server is there any way to map all requests inside http://foo.bar/webapp
to the same Python script such that http://foo.bar/webapp/baz and
http://foo.bar/webapp/quux both get served by (say) script.py.

Cheers,
Gary

[ gbenson@redhat.com ][ GnuPG 85A8F78B ][ http://inauspicious.org/ ]

From grisha at modpython.org  Fri Aug 16 11:56:44 2002
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 21:59:31 2004
Subject: [mod_python] How to make m_p handle everything
In-Reply-To: <20020816162421.C8120@redhat.com>
Message-ID: <Pine.BSF.4.32.0208161155110.92319-100000@localhost>

Yes, if for the document root directory you have

SetHandler python-program
PythonHandler script

then every single request on that server will be handled by script.py


On Fri, 16 Aug 2002, Gary Benson wrote:

> On Fri, Aug 16, 2002 at 11:00:11AM -0400, Gregory (Grisha) Trubetskoy wrote:
>
> > Sure - if the script is in the python path somwhere that's how it would
> > work (unless I'm missing something in your question).
>
> Erm, I'm probably not being very clear.  What I meant was, if I have a
> server is there any way to map all requests inside http://foo.bar/webapp
> to the same Python script such that http://foo.bar/webapp/baz and
> http://foo.bar/webapp/quux both get served by (say) script.py.
>
> Cheers,
> Gary
>
> [ gbenson@redhat.com ][ GnuPG 85A8F78B ][ http://inauspicious.org/ ]
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://www.modpython.org/mailman/listinfo/mod_python
>


From gbenson at redhat.com  Fri Aug 16 17:30:37 2002
From: gbenson at redhat.com (Gary Benson)
Date: Fri Jan  9 21:59:31 2004
Subject: [mod_python] How to make m_p handle everything
In-Reply-To: <Pine.BSF.4.32.0208161155110.92319-100000@localhost>; from grisha@modpython.org on Fri, Aug 16, 2002 at 11:56:44AM -0400
References: <20020816162421.C8120@redhat.com> <Pine.BSF.4.32.0208161155110.92319-100000@localhost>
Message-ID: <20020816173037.D8120@redhat.com>

On Fri, Aug 16, 2002 at 11:56:44AM -0400, Gregory (Grisha) Trubetskoy wrote:

> Yes, if for the document root directory you have
> 
> SetHandler python-program
> PythonHandler script
> 
> then every single request on that server will be handled by script.py

Oh yeah, I so should have been able to work that one out. /me slaps head.

Thanks for the help,
Gary

[ gbenson@redhat.com ][ GnuPG 85A8F78B ][ http://inauspicious.org/ ]

From thm at duke.edu  Fri Aug 16 13:22:30 2002
From: thm at duke.edu (Hunter Matthews)
Date: Fri Jan  9 21:59:31 2004
Subject: [mod_python] Complicated GET configuration
Message-ID: <1029518551.1517.29.camel@jade.biology.duke.edu>

I've got a configuration requirement for mod_python that I'm not sure
how to fill. I think I'm about 90% of the way there, but...

Basically I'm writing a server for a client I don't control. The client
can put out 2 kinds of requests.

POST requests that are simple XMLRPC calls. 
One of the idiosyncrases of the client is that the URL that is requested
is ALWAYS just /XMLRPC  - there is no script name or whatever.
I can handler these fine with the following config snippet:

<Location /XMLRPC>
    SetHandler python-program
    PythonHandler current_apache
</Location>


The GET requests have me stymied - to transfer big files, the client
uses GET requests. I'd like to have apache itself do the actual shifting
of bits, and just let my server application handle the authentication
that is required.

What I had as a first attempt was:
<Location /XMLRPC/$RHN>
    SetHandler python-program
    PythonAuthzHandler current_apache
</Location>

But this is clearly wrong (and it doesn't work, either :) 
Because I have the SetHandler, mod_python tries to handle ALL the
different parts of the request, when I only want it to handle the Authz
stage: if that PythonAuthzHandler returns  apache.OK, then I would like 
apache to pick up the URL and just fling it back at the client - the
python part is done.

If any other information is needed, please let me know.

Please note I can't change the client.

-- 
Hunter Matthews                          Unix / Network Administrator
Office: BioScience 145/244               Duke Univ. Biology Department
Key: F0F88438 / FFB5 34C0 B350 99A4 BB02  9779 A5DB 8B09 F0F8 8438
Never take candy from strangers. Especially on the internet.


From vmilitaru at sympatico.ca  Fri Aug 16 14:47:17 2002
From: vmilitaru at sympatico.ca (vio)
Date: Fri Jan  9 21:59:31 2004
Subject: [mod_python] Questions for the FAQ - please check and confirm (req.write() and return) also docs update ...
In-Reply-To: <Pine.BSF.4.32.0208160856250.89789-100000@localhost>; from grisha@modpython.org on Fri, Aug 16, 2002 at 09:00:14AM -0400
References: <1029500235.2093.18.camel@kernel> <Pine.BSF.4.32.0208160856250.89789-100000@localhost>
Message-ID: <20020816144717.A345@eye.neb>

Same here. My handler builds dynamic pages using successive calls to
req.write() with no problems. In fact, the only issue here might rather be 
whether it is better (as in 'less expensive') to 'assemble' the document in 
memory and send it in one swoop to the client, as opposed to sending it 
in many calls to req.write().
In other words, whether it's preferable to assemble a dynamic document at
the server level, or at the client level. I would tend to believe 
the former is better, because it reduces network traffic. Though I could be
mistaking. But mod_python definitely allows both strategies.

Vio

* Gregory (Grisha) Trubetskoy <grisha@modpython.org> [020816 14:23]:
> 
> 
> On 16 Aug 2002, Fabian Fagerholm wrote:
> 
> > If you're using the Publisher handler, you can use req.write() once,
> > but then you *have* to return something at the end of your function,
> > or things won't work.
> 
> You should be able to use write() many times as you like. It should also
> be ok to return an empty string *if* you have written something with
> write(), otherwise returning an empty document will cause a problem with
> Netscape at least.
> 
> Grisha
> 
> 
> 
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://www.modpython.org/mailman/listinfo/mod_python

From vmilitaru at sympatico.ca  Fri Aug 16 15:26:07 2002
From: vmilitaru at sympatico.ca (vio)
Date: Fri Jan  9 21:59:31 2004
Subject: [mod_python] Complicated GET configuration
In-Reply-To: <1029518551.1517.29.camel@jade.biology.duke.edu>; from thm@duke.edu on Fri, Aug 16, 2002 at 01:22:30PM -0400
References: <1029518551.1517.29.camel@jade.biology.duke.edu>
Message-ID: <20020816152607.B345@eye.neb>

* Hunter Matthews <thm@duke.edu> [020816 14:24]:
> 
> (...)
>
> What I had as a first attempt was:
> <Location /XMLRPC/$RHN>
>     SetHandler python-program
>     PythonAuthzHandler current_apache
> </Location>
> 
> But this is clearly wrong (and it doesn't work, either :) 
> Because I have the SetHandler, mod_python tries to handle ALL the
> different parts of the request, when I only want it to handle the Authz
> stage: if that PythonAuthzHandler returns  apache.OK, then I would like 
> apache to pick up the URL and just fling it back at the client - the
> python part is done.

My recalling of the mod_python manual reading (at least over a month old now,
so I might be wrong here) is that Apache handles requests in stages. And
with mod_python you pick and choose which stages you want to handle. 
But you never have to handle ALL stages.
Have you checked the tutorial file 'tut-more-complicated.html'?
I see there talk about 'PythonAuthenHandler', but nothing about
'PythonAuthzHandler' you are referring to here (a typo?).

I don't know if this is of any help, but an example of the different way 
GET and POST are handled, which I found quite useful, is illustrated in 
'util.py/class FieldStorage/__init__'.

Hope this helps,
Vio

From thm at duke.edu  Fri Aug 16 15:58:10 2002
From: thm at duke.edu (Hunter Matthews)
Date: Fri Jan  9 21:59:31 2004
Subject: [mod_python] Complicated GET configuration
In-Reply-To: <20020816152607.B345@eye.neb>
References: <1029518551.1517.29.camel@jade.biology.duke.edu> 
	<20020816152607.B345@eye.neb>
Message-ID: <1029527890.1312.9.camel@jade.biology.duke.edu>

On Fri, 2002-08-16 at 16:26, vio wrote:
> * Hunter Matthews <thm@duke.edu> [020816 14:24]:
> > 
> > (...)
> >
> > What I had as a first attempt was:
> > <Location /XMLRPC/$RHN>
> >     SetHandler python-program
> >     PythonAuthzHandler current_apache
> > </Location>
> > 
> > But this is clearly wrong (and it doesn't work, either :) 
> > Because I have the SetHandler, mod_python tries to handle ALL the
> > different parts of the request, when I only want it to handle the Authz
> > stage: if that PythonAuthzHandler returns  apache.OK, then I would like 
> > apache to pick up the URL and just fling it back at the client - the
> > python part is done.
> 
> My recalling of the mod_python manual reading (at least over a month old now,
> so I might be wrong here) is that Apache handles requests in stages. And
> with mod_python you pick and choose which stages you want to handle. 

Thats what I need to know here - how to choose to handle the Authz
stage, without choosing to handle the main default stage (throwing bits
down the socket).

> But you never have to handle ALL stages.
> Have you checked the tutorial file 'tut-more-complicated.html'?
> I see there talk about 'PythonAuthenHandler', but nothing about
> 'PythonAuthzHandler' you are referring to here (a typo?).

There is a reference to it on:
http://www.modpython.org/live/mod_python-2.7.8/doc-html/dir-handlers-syn.html

and running strings on the mod_python.so shows that it is there. There
is a reference to it in the mailing list archives.



> I don't know if this is of any help, but an example of the different way 
> GET and POST are handled, which I found quite useful, is illustrated in 
> 'util.py/class FieldStorage/__init__'.

The goal here is that if the URL is 
/XMLRPC/$RHN/anything

that we always run the Authz handler, and nothing else.

But since the requests aren't to a specific script 
(like /XMLRPC/$RHN/redhat-7.3-i386/listPackages/200208142123/script.py)

but are instead 
/XMLRPC/$RHN/redhat-7.3-i386/listPackages/200208142123

I'm not at all certain how to say

'''
For all URLs under /XMLRPC/$RHN
Please use the Authz handler to make sure the client is authorized,
and if so,
apache please send the client the file that was requested.
'''


> 
> Hope this helps,
> Vio
> 
> 
-- 
Hunter Matthews                          Unix / Network Administrator
Office: BioScience 145/244               Duke Univ. Biology Department
Key: F0F88438 / FFB5 34C0 B350 99A4 BB02  9779 A5DB 8B09 F0F8 8438
Never take candy from strangers. Especially on the internet.


From johannes at erdfelt.com  Fri Aug 16 16:09:07 2002
From: johannes at erdfelt.com (Johannes Erdfelt)
Date: Fri Jan  9 21:59:31 2004
Subject: [mod_python] Complicated GET configuration
In-Reply-To: <1029518551.1517.29.camel@jade.biology.duke.edu>; from thm@duke.edu on Fri, Aug 16, 2002 at 01:22:30PM -0400
References: <1029518551.1517.29.camel@jade.biology.duke.edu>
Message-ID: <20020816160907.J3414@sventech.com>

On Fri, Aug 16, 2002, Hunter Matthews <thm@duke.edu> wrote:
> 
> I've got a configuration requirement for mod_python that I'm not sure
> how to fill. I think I'm about 90% of the way there, but...
> 
> Basically I'm writing a server for a client I don't control. The client
> can put out 2 kinds of requests.
> 
> POST requests that are simple XMLRPC calls. 
> One of the idiosyncrases of the client is that the URL that is requested
> is ALWAYS just /XMLRPC  - there is no script name or whatever.
> I can handler these fine with the following config snippet:
> 
> <Location /XMLRPC>
>     SetHandler python-program
>     PythonHandler current_apache
> </Location>
> 
> The GET requests have me stymied - to transfer big files, the client
> uses GET requests. I'd like to have apache itself do the actual shifting
> of bits, and just let my server application handle the authentication
> that is required.
> 
> What I had as a first attempt was:
> <Location /XMLRPC/$RHN>
>     SetHandler python-program
>     PythonAuthzHandler current_apache
> </Location>
> 
> But this is clearly wrong (and it doesn't work, either :) 
> Because I have the SetHandler, mod_python tries to handle ALL the
> different parts of the request, when I only want it to handle the Authz
> stage: if that PythonAuthzHandler returns  apache.OK, then I would like 
> apache to pick up the URL and just fling it back at the client - the
> python part is done.
> 
> If any other information is needed, please let me know.

Drop the SetHandler then. All you need is the PythonAuthzHandler portion
and it'll do the right thing.

I do something like this:

  <FilesMatch "\.(m3u|mp3)$">
    PythonPath "sys.path+['/web/americandnb.com/python']"
    PythonAccessHandler m3u
  </FilesMatch>

And the m3u module does referer checking so people don't link directly
to the mp3's. If the Referer fails, we redirect to the main HTML for
that file (specific to our setup).

JE


From vmilitaru at sympatico.ca  Fri Aug 16 15:58:59 2002
From: vmilitaru at sympatico.ca (vio)
Date: Fri Jan  9 21:59:31 2004
Subject: [mod_python] Questions for the FAQ - please check and confirm (req.write() and return) also docs update ...
In-Reply-To: <200208162131.33048.mateusz@ant.gliwice.pl>; from mateusz@ant.gliwice.pl on Fri, Aug 16, 2002 at 09:31:33PM +0200
References: <1029500235.2093.18.camel@kernel> <Pine.BSF.4.32.0208160856250.89789-100000@localhost> <20020816144717.A345@eye.neb> <200208162131.33048.mateusz@ant.gliwice.pl>
Message-ID: <20020816155859.A419@eye.neb>

* Mateusz Korniak <mateusz@ant.gliwice.pl> [020816 15:26]:
> On Friday 16 August 2002 21:47, vio wrote:
> > Same here. My handler builds dynamic pages using successive calls to
> > req.write() with no problems. In fact, the only issue here might rather be
> > whether it is better (as in 'less expensive') to 'assemble' the document in
> > memory and send it in one swoop to the client, as opposed to sending it
> > in many calls to req.write().
> > In other words, whether it's preferable to assemble a dynamic document at
> > the server level, or at the client level. I would tend to believe
> > the former is better, because it reduces network traffic. Though I could be
> > mistaking. But mod_python definitely allows both strategies.
> >
> 
> Yes. But what in publisher handler case ?
> Can you use req.write() instead of returning page ?
> I get Internal server error in that case ... :(

I don't quite understand your question. req.write() IS the returning page.
But I think I know where the bobo is: it's the Internal server error message.

Try the following:
I am assuming you are using the out-of-the-box publisher. I suspect the problem
is not necessarily the 'req.write(), calls, so I suggest you try the following
debugging technique to find out your 'real' bug (you will have to modify the 
publisher.py like following):

somewhere before beginning of the handler() routine, add:
"""
# debugging LOG file - use this instead of '_REQUEST.write()' for debugging
LOG = open('/path/to/.../LOG', "a")
"""

then, find each line in publisher.py:
"""
return apache.HTTP_INTERNAL_SERVER_ERROR
"""

and modify it like this:
"""
LOG.write('line ...\n') # current line number in publisher.py
LOG.flush()
return apache.HTTP_INTERNAL_SERVER_ERROR
"""

This will help you pinpoint exactly who/what throws that Server Error message.
(just read the LOG file). Then work your way from there. I bet your problem
is not your req.write() calls, but something you don't even expect.

Debugging mod_python scripts is tricky, because you can not always write 
debugging messages to the browser. My solution is to use a LOG file.

Hope this helps. (It sure helped me a lot this far).
Vio

From ian at veryfresh.com  Fri Aug 16 13:27:45 2002
From: ian at veryfresh.com (Ian Clelland)
Date: Fri Jan  9 21:59:31 2004
Subject: [mod_python] Complicated GET configuration
In-Reply-To: <1029518551.1517.29.camel@jade.biology.duke.edu>
References: <1029518551.1517.29.camel@jade.biology.duke.edu>
Message-ID: <20020816202745.GE11141@fullfactor.com>

On Fri, Aug 16, 2002 at 01:22:30PM -0400, Hunter Matthews wrote:
> POST requests that are simple XMLRPC calls. 
> One of the idiosyncrases of the client is that the URL that is requested
> is ALWAYS just /XMLRPC  - there is no script name or whatever.
> I can handler these fine with the following config snippet:
> 
> <Location /XMLRPC>
>     SetHandler python-program
>     PythonHandler current_apache
> </Location>
> 
> 
> The GET requests have me stymied - to transfer big files, the client
> uses GET requests. I'd like to have apache itself do the actual shifting
> of bits, and just let my server application handle the authentication
> that is required.
> 
> What I had as a first attempt was:
> <Location /XMLRPC/$RHN>
>     SetHandler python-program
>     PythonAuthzHandler current_apache
> </Location>
> 
> But this is clearly wrong (and it doesn't work, either :) 
> Because I have the SetHandler, mod_python tries to handle ALL the
> different parts of the request, when I only want it to handle the Authz
> stage: if that PythonAuthzHandler returns  apache.OK, then I would like 
> apache to pick up the URL and just fling it back at the client - the
> python part is done.

Because of the <Location> directive, Apache will hand all requests for 
/XMLRPC and any URL below that to your python module. If you don't want 
mod_python to handle the GET requests underneath /XMLRPC, then your 
handler should return apache.DECLINED if req.uri != '/XMLRPC'.

Also, as far as I understand it, the SetHandler directive shouldn't be 
required in order to invoke a PythonAuthzHandler, but I could be wrong. 
(Not that it will make a difference in your case; the SetHandler for 
/XMLRPC will also affect the /XMLRPC/$RHN subdirectory anyway)


Ian Clelland
<ian@veryfresh.com>

From vmilitaru at sympatico.ca  Fri Aug 16 16:27:01 2002
From: vmilitaru at sympatico.ca (vio)
Date: Fri Jan  9 21:59:31 2004
Subject: [mod_python] Complicated GET configuration
In-Reply-To: <1029527890.1312.9.camel@jade.biology.duke.edu>; from thm@duke.edu on Fri, Aug 16, 2002 at 03:58:10PM -0400
References: <1029518551.1517.29.camel@jade.biology.duke.edu> <20020816152607.B345@eye.neb> <1029527890.1312.9.camel@jade.biology.duke.edu>
Message-ID: <20020816162701.A456@eye.neb>

* Hunter Matthews <thm@duke.edu> [020816 15:59]:
> ...
> There is a reference to it on:
> http://www.modpython.org/live/mod_python-2.7.8/doc-html/dir-handlers-syn.html

I see it. But I don't see 'PythonAuthzHandler' referenced anywhere in the 
main docs at
http://www.modpython.org/live/mod_python-2.7.8/doc-html/
I wonder why it's not documented?

> The goal here is that if the URL is 
> /XMLRPC/$RHN/anything
> 
> that we always run the Authz handler, and nothing else.
> 
> But since the requests aren't to a specific script 
> (like /XMLRPC/$RHN/redhat-7.3-i386/listPackages/200208142123/script.py)
> 
> but are instead 
> /XMLRPC/$RHN/redhat-7.3-i386/listPackages/200208142123
> 
> I'm not at all certain how to say
> 
> '''
> For all URLs under /XMLRPC/$RHN
> Please use the Authz handler to make sure the client is authorized,
> and if so,
> apache please send the client the file that was requested.
> '''

If I understand correctly, you only want to use the Authz handler from
mod_python, and nothing else.
I don't see a problem here, except for the undocumented Authz.
The way I would handle your problem whould be to just follow the instructions
in 'tut-more-complicated.html', see if it flies:

<Directory /XMLRPC/$RHN>
    AddHandler python-program .py
#    PythonHandler myscript - comment out to let Apache handle it
    PythonAuthenHandler yourAuthenScript
    AuthType Basic
    AuthName "Restricted Area"
    require valid-user
</Directory>


Have you tried something like this? (you'll have to write your own Authen 
handler, as described in 'tut-more-complicated.html')

Vio

From thm at duke.edu  Fri Aug 16 16:40:43 2002
From: thm at duke.edu (Hunter Matthews)
Date: Fri Jan  9 21:59:31 2004
Subject: [mod_python] Complicated GET configuration
In-Reply-To: <20020816202745.GE11141@fullfactor.com>
References: <1029518551.1517.29.camel@jade.biology.duke.edu> 
	<20020816202745.GE11141@fullfactor.com>
Message-ID: <1029530494.1195.22.camel@jade.biology.duke.edu>

On Fri, 2002-08-16 at 16:27, Ian Clelland wrote:

> Because of the <Location> directive, Apache will hand all requests for 
> /XMLRPC and any URL below that to your python module. If you don't want 
> mod_python to handle the GET requests underneath /XMLRPC, then your 
> handler should return apache.DECLINED if req.uri != '/XMLRPC'.

I switched to <Location ~ "/XMLRPC$">

So right now my apache config looks like: 

Alias /XMLRPC/$RHN/ /local/linux/current/www/

<Directory /local/linux>
    # I realize that the default config is to have symlinks on, but the 
    # current part should stand on its own.
    Options FollowSymLinks
    AllowOverride None
</Directory>

<Location ~ "/XMLRPC$">
    PythonPath "sys.path+['/usr/share/current']"
    SetHandler python-program
    PythonHandler current_apache
</Location>

<Location /XMLRPC/$RHN>
    PythonPath "sys.path+['/usr/share/current']"
    PythonAuthzHandler current_apache
</Location>



> 
> Also, as far as I understand it, the SetHandler directive shouldn't be 
> required in order to invoke a PythonAuthzHandler, but I could be wrong. 
> (Not that it will make a difference in your case; the SetHandler for 
> /XMLRPC will also affect the /XMLRPC/$RHN subdirectory anyway)

That would be ideal. However, with the following code in 
/usr/share/current/current_apache.py:

def authzhandler(req):
    """ temp function for testing"""

    apache.log_error("Inside the authzhandler!")
    apache.log_error("method = %s" % req.method)
    apache.log_error("headers = %s" % pprint.pprint(req.headers_in))

    return apache.OK


After an apache restart (to make sure all the updated modules get
reloaded) I'm not seeing any of those log_errors in the error file.
Once I see something (anything) I'll replace that code with the real
thing.

I appreciate the help from the list.





-- 
Hunter Matthews                          Unix / Network Administrator
Office: BioScience 145/244               Duke Univ. Biology Department
Key: F0F88438 / FFB5 34C0 B350 99A4 BB02  9779 A5DB 8B09 F0F8 8438
Never take candy from strangers. Especially on the internet.


From thm at duke.edu  Fri Aug 16 17:05:28 2002
From: thm at duke.edu (Hunter Matthews)
Date: Fri Jan  9 21:59:31 2004
Subject: [mod_python] Complicated GET configuration
In-Reply-To: <1029530494.1195.22.camel@jade.biology.duke.edu>
References: <1029518551.1517.29.camel@jade.biology.duke.edu> 
	<20020816202745.GE11141@fullfactor.com> 
	<1029530494.1195.22.camel@jade.biology.duke.edu>
Message-ID: <1029531928.1195.28.camel@jade.biology.duke.edu>

On Fri, 2002-08-16 at 16:40, Hunter Matthews wrote:
> On Fri, 2002-08-16 at 16:27, Ian Clelland wrote:
> 
> > Because of the <Location> directive, Apache will hand all requests for 
> > /XMLRPC and any URL below that to your python module. If you don't want 
> > mod_python to handle the GET requests underneath /XMLRPC, then your 
> > handler should return apache.DECLINED if req.uri != '/XMLRPC'.
> 
> I switched to <Location ~ "/XMLRPC$">
> 
> So right now my apache config looks like: 
> 
> Alias /XMLRPC/$RHN/ /local/linux/current/www/
> 
> <Directory /local/linux>
>     # I realize that the default config is to have symlinks on, but the 
>     # current part should stand on its own.
>     Options FollowSymLinks
>     AllowOverride None
> </Directory>
> 
> <Location ~ "/XMLRPC$">
>     PythonPath "sys.path+['/usr/share/current']"
>     SetHandler python-program
>     PythonHandler current_apache
> </Location>
> 
> <Location /XMLRPC/$RHN>
>     PythonPath "sys.path+['/usr/share/current']"
>     PythonAuthzHandler current_apache
> </Location>
> 
> 
> 
> > 
> > Also, as far as I understand it, the SetHandler directive shouldn't be 
> > required in order to invoke a PythonAuthzHandler, but I could be wrong. 
> > (Not that it will make a difference in your case; the SetHandler for 
> > /XMLRPC will also affect the /XMLRPC/$RHN subdirectory anyway)
> 
> That would be ideal. However, with the following code in 
> /usr/share/current/current_apache.py:
> 
> def authzhandler(req):
>     """ temp function for testing"""
> 
>     apache.log_error("Inside the authzhandler!")
>     apache.log_error("method = %s" % req.method)
>     apache.log_error("headers = %s" % pprint.pprint(req.headers_in))
> 
>     return apache.OK
> 
> 
> After an apache restart (to make sure all the updated modules get
> reloaded) I'm not seeing any of those log_errors in the error file.
> Once I see something (anything) I'll replace that code with the real
> thing.
> 
> I appreciate the help from the list.

Sorry to spam the list so hard today, but I've figured one piece of it
out:

def authzhandler(req):
    """ temp function for testing"""
 
    apache.log_error("Inside the authzhandler!")
    apache.log_error("method = %s" % req.method)
    apache.log_error("headers = %s" % pprint.pprint(req.headers_in))

    return apache.OK

This code still results in nothing in my logs. On the theory that
perhaps it was undocumented for a reason, I tried a different (nearly
random) handler:


def headerparserhandler(req):
    """ temp function for testing"""

    apache.log_error("Inside the headerparserhandler!")
    apache.log_error("method = %s" % req.method)
#    apache.log_error("headers = %s" % pprint.pprint(req.headers_in))
    for key in req.headers_in.keys():
        apache.log_error("hdr[%s] = %s" % (key, req.headers_in[key]))
    return apache.HTTP_UNAUTHORIZED                      

AND THIS WORKS JUST FINE!

If anyone on the list has any ideas why the authz handler, which
_looked_ like the handler I should use (using HTTP request headers to
determine if a client was authorized to make this request), isn't
working, I'd still appreciate knowing. 

However, I should be able to use this handler or maybe even
PythonAuthenHandler, so its not a critical issue for me now.

THanks everyone.

-- 
Hunter Matthews                          Unix / Network Administrator
Office: BioScience 145/244               Duke Univ. Biology Department
Key: F0F88438 / FFB5 34C0 B350 99A4 BB02  9779 A5DB 8B09 F0F8 8438
Never take candy from strangers. Especially on the internet.


From mateusz at ant.gliwice.pl  Fri Aug 16 23:22:37 2002
From: mateusz at ant.gliwice.pl (Mateusz Korniak)
Date: Fri Jan  9 21:59:31 2004
Subject: [mod_python] req.write() in publisher_handler
In-Reply-To: <20020816155859.A419@eye.neb>
References: <1029500235.2093.18.camel@kernel> <200208162131.33048.mateusz@ant.gliwice.pl> <20020816155859.A419@eye.neb>
Message-ID: <200208162322.37479.mateusz@ant.gliwice.pl>

On Friday 16 August 2002 22:58, vio wrote:
> * Mateusz Korniak <mateusz@ant.gliwice.pl> [020816 15:26]:
> > Yes. But what in publisher handler case ?
> > Can you use req.write() instead of returning page ?
> > I get Internal server error in that case ... :(
>
> I don't quite understand your question. req.write() IS the returning page.
> But I think I know where the bobo is: it's the Internal server error
> message.

So let me be ( I hope) much more clear: Below my publisher handler:

import mod_python.apache
page = """<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<html><head><title>Test page</title></head>
<body> Test </body> </html>"""

def req_write(req):
	req.status = mod_python.apache.OK
	req.content_type = "text/html; charset=utf-8"
	req.send_http_header()
	req.write(page)
	open("/tmp/marker","w") # Test if we have exceptions 
		#before returning from handler

def req_return(req):
	req.status = mod_python.apache.OK
	req.content_type = "text/html; charset=utf-8"
	req.send_http_header()
	return page

http://abbon.ant.vpn/test.py/req_return - returns what expected
while 
http://abbon.ant.vpn/test.py/req_write returns more some additional data 
(reaching marker):

<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<html><head><title>Test page</title></head>
<body> Test </body> </html>HTTP/1.1 500 Internal Server Error
Date: Fri, 16 Aug 2002 21:11:31 GMT
Server: Apache/1.3.26 (Unix)  (PLD/Linux) mod_python/2.7.8 Python/2.2.1
Transfer-Encoding: chunked
Content-Type: text/html; charset=iso-8859-1

<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML 2.0//EN">
<HTML><HEAD>
<TITLE>500 Internal Server Error</TITLE>
</HEAD><BODY>
<H1>Internal Server Error</H1>
The server encountered an internal error or
misconfiguration and was unable to complete
your request.<P>
Please contact the server administrator,
 matkor@ant.gliwice.pl and inform them of the time the error occurred,
and anything you might have done that may have
caused the error.<P>
More information about this error may be available
in the server error log.<P>
<P>Additionally, a 500 Internal Server Error
error was encountered while trying to use an ErrorDocument to handle the 
request.
<HR>
<ADDRESS>Apache/1.3.26 Server at <A 
HREF="mailto:matkor@ant.gliwice.pl">abbon.ant.vpn</A> Port 80</ADDRESS>
</BODY></HTML>


As far I understand publisher both results should be the same ...
Perhaps my mod_python /apache are broken ?

-- 
Mateusz Korniak



From johannes at erdfelt.com  Fri Aug 16 17:25:45 2002
From: johannes at erdfelt.com (Johannes Erdfelt)
Date: Fri Jan  9 21:59:31 2004
Subject: [mod_python] req.write() in publisher_handler
In-Reply-To: <200208162322.37479.mateusz@ant.gliwice.pl>; from mateusz@ant.gliwice.pl on Fri, Aug 16, 2002 at 11:22:37PM +0200
References: <1029500235.2093.18.camel@kernel> <200208162131.33048.mateusz@ant.gliwice.pl> <20020816155859.A419@eye.neb> <200208162322.37479.mateusz@ant.gliwice.pl>
Message-ID: <20020816172545.K3414@sventech.com>

On Fri, Aug 16, 2002, Mateusz Korniak <mateusz@ant.gliwice.pl> wrote:
> On Friday 16 August 2002 22:58, vio wrote:
> > * Mateusz Korniak <mateusz@ant.gliwice.pl> [020816 15:26]:
> > > Yes. But what in publisher handler case ?
> > > Can you use req.write() instead of returning page ?
> > > I get Internal server error in that case ... :(
> >
> > I don't quite understand your question. req.write() IS the returning page.
> > But I think I know where the bobo is: it's the Internal server error
> > message.
> 
> So let me be ( I hope) much more clear: Below my publisher handler:
> 
> import mod_python.apache
> page = """<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
> <html><head><title>Test page</title></head>
> <body> Test </body> </html>"""
> 
> def req_write(req):
> 	req.status = mod_python.apache.OK
> 	req.content_type = "text/html; charset=utf-8"
> 	req.send_http_header()
> 	req.write(page)
> 	open("/tmp/marker","w") # Test if we have exceptions 
> 		#before returning from handler
	return ""

Add that.

JE


From mateusz at ant.gliwice.pl  Fri Aug 16 23:30:04 2002
From: mateusz at ant.gliwice.pl (Mateusz Korniak)
Date: Fri Jan  9 21:59:31 2004
Subject: [mod_python] req.write() in publisher_handler
In-Reply-To: <20020816172545.K3414@sventech.com>
References: <1029500235.2093.18.camel@kernel> <200208162322.37479.mateusz@ant.gliwice.pl> <20020816172545.K3414@sventech.com>
Message-ID: <200208162330.04157.mateusz@ant.gliwice.pl>

On Friday 16 August 2002 23:25, Johannes Erdfelt wrote:
> On Fri, Aug 16, 2002, Mateusz Korniak <mateusz@ant.gliwice.pl> wrote:
> > On Friday 16 August 2002 22:58, vio wrote:
> > > * Mateusz Korniak <mateusz@ant.gliwice.pl> [020816 15:26]:
> > > > Yes. But what in publisher handler case ?
> > > > Can you use req.write() instead of returning page ?
> > > > I get Internal server error in that case ... :(
> > >
> > > I don't quite understand your question. req.write() IS the returning
> > > page. But I think I know where the bobo is: it's the Internal server
> > > error message.
> >
> > So let me be ( I hope) much more clear: Below my publisher handler:
> >
> > import mod_python.apache
> > page = """<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
> > <html><head><title>Test page</title></head>
> > <body> Test </body> </html>"""
> >
> > def req_write(req):
> > 	req.status = mod_python.apache.OK
> > 	req.content_type = "text/html; charset=utf-8"
> > 	req.send_http_header()
> > 	req.write(page)
> > 	open("/tmp/marker","w") # Test if we have exceptions
> > 		#before returning from handler
>
> 	return ""
>
> Add that.
>
In my enviroment it doesn't change a thing :(

-- 
Mateusz Korniak



From johannes at erdfelt.com  Fri Aug 16 17:31:53 2002
From: johannes at erdfelt.com (Johannes Erdfelt)
Date: Fri Jan  9 21:59:31 2004
Subject: [mod_python] req.write() in publisher_handler
In-Reply-To: <200208162330.04157.mateusz@ant.gliwice.pl>; from mateusz@ant.gliwice.pl on Fri, Aug 16, 2002 at 11:30:04PM +0200
References: <1029500235.2093.18.camel@kernel> <200208162322.37479.mateusz@ant.gliwice.pl> <20020816172545.K3414@sventech.com> <200208162330.04157.mateusz@ant.gliwice.pl>
Message-ID: <20020816173153.L3414@sventech.com>

On Fri, Aug 16, 2002, Mateusz Korniak <mateusz@ant.gliwice.pl> wrote:
> On Friday 16 August 2002 23:25, Johannes Erdfelt wrote:
> > On Fri, Aug 16, 2002, Mateusz Korniak <mateusz@ant.gliwice.pl> wrote:
> > > On Friday 16 August 2002 22:58, vio wrote:
> > > > * Mateusz Korniak <mateusz@ant.gliwice.pl> [020816 15:26]:
> > > > > Yes. But what in publisher handler case ?
> > > > > Can you use req.write() instead of returning page ?
> > > > > I get Internal server error in that case ... :(
> > > >
> > > > I don't quite understand your question. req.write() IS the returning
> > > > page. But I think I know where the bobo is: it's the Internal server
> > > > error message.
> > >
> > > So let me be ( I hope) much more clear: Below my publisher handler:
> > >
> > > import mod_python.apache
> > > page = """<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
> > > <html><head><title>Test page</title></head>
> > > <body> Test </body> </html>"""
> > >
> > > def req_write(req):
> > > 	req.status = mod_python.apache.OK
> > > 	req.content_type = "text/html; charset=utf-8"
> > > 	req.send_http_header()
> > > 	req.write(page)
> > > 	open("/tmp/marker","w") # Test if we have exceptions
> > > 		#before returning from handler
> >
> > 	return ""
> >
> > Add that.
>
> In my enviroment it doesn't change a thing :(

Are you sure that open call isn't causing any exceptions?

Try commenting it out and testing.

Also, are you restarting the server when you're testing?

JE


From mateusz at ant.gliwice.pl  Fri Aug 16 23:35:56 2002
From: mateusz at ant.gliwice.pl (Mateusz Korniak)
Date: Fri Jan  9 21:59:31 2004
Subject: [mod_python] req.write() in publisher_handler
In-Reply-To: <20020816173153.L3414@sventech.com>
References: <1029500235.2093.18.camel@kernel> <200208162330.04157.mateusz@ant.gliwice.pl> <20020816173153.L3414@sventech.com>
Message-ID: <200208162335.56958.mateusz@ant.gliwice.pl>

On Friday 16 August 2002 23:31, Johannes Erdfelt wrote:
> On Fri, Aug 16, 2002, Mateusz Korniak <mateusz@ant.gliwice.pl> wrote:
> > On Friday 16 August 2002 23:25, Johannes Erdfelt wrote:
> > > On Fri, Aug 16, 2002, Mateusz Korniak <mateusz@ant.gliwice.pl> wrote:
> > > > On Friday 16 August 2002 22:58, vio wrote:
> > > > > * Mateusz Korniak <mateusz@ant.gliwice.pl> [020816 15:26]:
> > > > > > Yes. But what in publisher handler case ?
> > > > > > Can you use req.write() instead of returning page ?
> > > > > > I get Internal server error in that case ... :(
> > > > >
> > > > > I don't quite understand your question. req.write() IS the
> > > > > returning page. But I think I know where the bobo is: it's the
> > > > > Internal server error message.
> > > >
> > > > So let me be ( I hope) much more clear: Below my publisher handler:
> > > >
> > > > import mod_python.apache
> > > > page = """<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0
> > > > Transitional//EN"> <html><head><title>Test page</title></head>
> > > > <body> Test </body> </html>"""
> > > >
> > > > def req_write(req):
> > > > 	req.status = mod_python.apache.OK
> > > > 	req.content_type = "text/html; charset=utf-8"
> > > > 	req.send_http_header()
> > > > 	req.write(page)
> > > > 	open("/tmp/marker","w") # Test if we have exceptions
> > > > 		#before returning from handler
> > >
> > > 	return ""
> > >
> > > Add that.
> >
> > In my enviroment it doesn't change a thing :(
>
> Are you sure that open call isn't causing any exceptions?
> Try commenting it out and testing.

Nope - it works the same with or wihout it
( I added it due Vio's suggestion).

> Also, are you restarting the server when you're testing?

I think it's not neccessary as I change main file of publisher handler - but 
to be absolutely sure - I do hard reset of apache after every change. Result 
remains same.

So it turns out that my apche/mod_python is broken ?

-- 
Mateusz Korniak
"Black holes are where God divided by zero." - Steven Wright


From ian at veryfresh.com  Fri Aug 16 14:37:22 2002
From: ian at veryfresh.com (Ian Clelland)
Date: Fri Jan  9 21:59:31 2004
Subject: [ian@veryfresh.com: Re: [mod_python] Complicated GET configuration]
Message-ID: <20020816213722.GG11141@fullfactor.com>

----- Forwarded message from Ian Clelland <ian@veryfresh.com> -----

Date: Fri, 16 Aug 2002 14:24:39 -0700
From: Ian Clelland <ian@veryfresh.com>
To: Hunter Matthews <thm@duke.edu>
Cc: mod_python@mod_python.org
Subject: Re: [mod_python] Complicated GET configuration
In-Reply-To: <1029531928.1195.28.camel@jade.biology.duke.edu>
User-Agent: Mutt/1.3.27i

On Fri, Aug 16, 2002 at 05:05:28PM -0400, Hunter Matthews wrote:
> If anyone on the list has any ideas why the authz handler, which
> _looked_ like the handler I should use (using HTTP request headers to
> determine if a client was authorized to make this request), isn't
> working, I'd still appreciate knowing. 

Is it possible that Apache doesn't call an Authz handler unless some 
other conditions are present? From your sample configuration, I see 
that you haven't set up any AuthType, AuthName, or AuthenHandler (not 
even the standard mod_auth). Apache may have decided that there's no 
way to get a username:password from the client, and so isn't running 
the AuthzHandler.

Just a thought.. I'm running some quick tests here on your 
configuration to see why it doesn't work (and it doesn't, even here). I 
have had PythonAuthenHandlers and PythonAuthzHandlers working in the 
past, though.


----- End forwarded message -----

From ian at veryfresh.com  Fri Aug 16 14:51:37 2002
From: ian at veryfresh.com (Ian Clelland)
Date: Fri Jan  9 21:59:31 2004
Subject: [mod_python] Complicated GET configuration
In-Reply-To: <1029531928.1195.28.camel@jade.biology.duke.edu>
References: <1029518551.1517.29.camel@jade.biology.duke.edu> <20020816202745.GE11141@fullfactor.com> <1029530494.1195.22.camel@jade.biology.duke.edu> <1029531928.1195.28.camel@jade.biology.duke.edu>
Message-ID: <20020816215137.GH11141@fullfactor.com>

On Fri, Aug 16, 2002 at 05:05:28PM -0400, Hunter Matthews wrote:
> If anyone on the list has any ideas why the authz handler, which
> _looked_ like the handler I should use (using HTTP request headers to
> determine if a client was authorized to make this request), isn't
> working, I'd still appreciate knowing. 
 
After playing with it for about 20 minutes, I managed to get your authorization handler to run on my machine. This appears to be a minimal configuration:

Apache http.conf:

<VirtualHost *:80>
  ServerName pytest.zoostation
  DocumentRoot /var/local/apache/htdocs/pytest
  Alias /XMLRPC/$RHN /home/ian/pytest

  <Directory /home/pytest>
    Options FollowSymLinks
    AllowOverride None
  </Directory>

  <Location ~ "/XMLRPC$">
    PythonPath "sys.path+['/home/ian/src/pytest']"
    SetHandler python-program
    PythonHandler current_apache
  </Location>

  <Location /XMLRPC/$RHN>
    AuthName 'Restricted Area'
    AuthType Basic
    PythonPath "sys.path+['/home/ian/src/pytest']"
    PythonAuthenHandler current_apache
    PythonAuthzHandler current_apache
    require valid-user
  </Location>

</VirtualHost>


current_apache.py:

from mod_python import apache

def authenhandler(req):
    """ temp function for testing.
        this version accepts any username and password
    """

    apache.log_error("Inside the authenhandler!", apache.APLOG_NOERRNO & apache.APLOG_ERR)
    apache.log_error("method = %s" % req.method, apache.APLOG_NOERRNO & apache.APLOG_ERR)
    apache.log_error("headers = %s" % `req.headers_in`, apache.APLOG_NOERRNO & apache.APLOG_ERR)

    pw = req.get_basic_auth_pw()
    if req.connection.user == None:
      return apache.HTTP_UNAUTHORIZED

    return apache.OK

def authzhandler(req):
    """ temp function for testing
        this version accepts all users for all uris
    """

    apache.log_error("Inside the authzhandler!", apache.APLOG_NOERRNO & apache.APLOG_ERR)
    apache.log_error("method = %s" % req.method, apache.APLOG_NOERRNO & apache.APLOG_ERR)
    apache.log_error("headers = %s" % `req.headers_in`, apache.APLOG_NOERRNO & apache.APLOG_ERR)

    return apache.OK

def handler(req):
    """ temp function for testing"""

    req.content_type = 'text/html'
    req.send_http_header()
    req.write("<html><body><h1>Testing</h1></body></html>")

    return apache.OK


Explanation:

In the Apache configuration, the line which triggers all of the 
authentication/authorization is the 'require' line. Without this line, 
the AuthenHandler and AuthzHandler will not be called. 'require 
valid-user' seems to be sufficient for most cases, since your 
AuthenHandler can decide who a valid user is, and your AuthzHandler can 
filter out anyone unauthorized.

As soon as you add that line, Apache will report an internal server 
error until you give it an AuthName, AuthType, and some sort of 
Authentication handler. I added a stub handler which accepts any 
username and password.

Once those are all present, then Apache will happily run the 
AuthzHandler whenever the AuthenHandler returns OK.


Hope this helps,

Ian
<ian@veryfresh.com>

From grisha at modpython.org  Fri Aug 16 17:53:13 2002
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 21:59:31 2004
Subject: [mod_python] Complicated GET configuration
In-Reply-To: <1029530494.1195.22.camel@jade.biology.duke.edu>
Message-ID: <Pine.BSF.4.32.0208161751360.96507-100000@localhost>


On 16 Aug 2002, Hunter Matthews wrote:

> def authzhandler(req):
>     """ temp function for testing"""
>
>     apache.log_error("Inside the authzhandler!")
>     apache.log_error("method = %s" % req.method)
>     apache.log_error("headers = %s" % pprint.pprint(req.headers_in))
>
>     return apache.OK
>
>

It's possible that Apache ignores the authz handler unless you have
AuthType, AuthName and require specified. This is definitely true with
respect to authen handler.

BTW, the fact that authz is undocumented is a bug.

Grisha


From vmilitaru at sympatico.ca  Fri Aug 16 18:17:27 2002
From: vmilitaru at sympatico.ca (vio)
Date: Fri Jan  9 21:59:31 2004
Subject: [mod_python] Re: req.write() in publisher_handler
In-Reply-To: <200208162322.37479.mateusz@ant.gliwice.pl>; from mateusz@ant.gliwice.pl on Fri, Aug 16, 2002 at 11:22:37PM +0200
References: <1029500235.2093.18.camel@kernel> <200208162131.33048.mateusz@ant.gliwice.pl> <20020816155859.A419@eye.neb> <200208162322.37479.mateusz@ant.gliwice.pl>
Message-ID: <20020816181726.A590@eye.neb>

Try it like this:

import mod_python.apache
#from mod_python import apache
pageA = """<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<html><head><title>Test page</title></head>
<body>  Page A <br>"""
pageB = "Page B</body> </html>"

def req_write(REQUEST):
  REQUEST.status = mod_python.apache.OK
  REQUEST.content_type = "text/html; charset=utf-8"
  REQUEST.send_http_header()
  REQUEST.write(pageA)
  REQUEST.write(pageB)
  raise mod_python.apache.SERVER_RETURN, mod_python.apache.OK

As you can see, we do multiple writes to the browser.
I tested it on my snake, and it works as advertised.
Vio

* Mateusz Korniak <mateusz@ant.gliwice.pl> [020816 17:31]:
> On Friday 16 August 2002 22:58, vio wrote:
> > * Mateusz Korniak <mateusz@ant.gliwice.pl> [020816 15:26]:
> > > Yes. But what in publisher handler case ?
> > > Can you use req.write() instead of returning page ?
> > > I get Internal server error in that case ... :(
> >
> > I don't quite understand your question. req.write() IS the returning page.
> > But I think I know where the bobo is: it's the Internal server error
> > message.
> 
> So let me be ( I hope) much more clear: Below my publisher handler:
> 
> import mod_python.apache
> page = """<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
> <html><head><title>Test page</title></head>
> <body> Test </body> </html>"""
> 
> def req_write(req):
> 	req.status = mod_python.apache.OK
> 	req.content_type = "text/html; charset=utf-8"
> 	req.send_http_header()
> 	req.write(page)
> 	open("/tmp/marker","w") # Test if we have exceptions 
> 		#before returning from handler
> 
> def req_return(req):
> 	req.status = mod_python.apache.OK
> 	req.content_type = "text/html; charset=utf-8"
> 	req.send_http_header()
> 	return page
> 
> http://abbon.ant.vpn/test.py/req_return - returns what expected
> while 
> http://abbon.ant.vpn/test.py/req_write returns more some additional data 
> (reaching marker):
> 
> <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
> <html><head><title>Test page</title></head>
> <body> Test </body> </html>HTTP/1.1 500 Internal Server Error
> Date: Fri, 16 Aug 2002 21:11:31 GMT
> Server: Apache/1.3.26 (Unix)  (PLD/Linux) mod_python/2.7.8 Python/2.2.1
> Transfer-Encoding: chunked
> Content-Type: text/html; charset=iso-8859-1
> 
> <!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML 2.0//EN">
> <HTML><HEAD>
> <TITLE>500 Internal Server Error</TITLE>
> </HEAD><BODY>
> <H1>Internal Server Error</H1>
> The server encountered an internal error or
> misconfiguration and was unable to complete
> your request.<P>
> Please contact the server administrator,
>  matkor@ant.gliwice.pl and inform them of the time the error occurred,
> and anything you might have done that may have
> caused the error.<P>
> More information about this error may be available
> in the server error log.<P>
> <P>Additionally, a 500 Internal Server Error
> error was encountered while trying to use an ErrorDocument to handle the 
> request.
> <HR>
> <ADDRESS>Apache/1.3.26 Server at <A 
> HREF="mailto:matkor@ant.gliwice.pl">abbon.ant.vpn</A> Port 80</ADDRESS>
> </BODY></HTML>
> 
> 
> As far I understand publisher both results should be the same ...
> Perhaps my mod_python /apache are broken ?
> 
> -- 
> Mateusz Korniak
> 

From mateusz at ant.gliwice.pl  Sat Aug 17 00:59:51 2002
From: mateusz at ant.gliwice.pl (Mateusz Korniak)
Date: Fri Jan  9 21:59:31 2004
Subject: [mod_python] Re: req.write() in publisher_handler
In-Reply-To: <20020816181726.A590@eye.neb>
References: <1029500235.2093.18.camel@kernel> <200208162322.37479.mateusz@ant.gliwice.pl> <20020816181726.A590@eye.neb>
Message-ID: <200208170059.51538.mateusz@ant.gliwice.pl>

On Saturday 17 August 2002 01:17, vio wrote:
> Try it like this:
>
> import mod_python.apache
> #from mod_python import apache
> pageA = """<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
> <html><head><title>Test page</title></head>
> <body>  Page A <br>"""
> pageB = "Page B</body> </html>"
>
> def req_write(REQUEST):
>   REQUEST.status = mod_python.apache.OK
>   REQUEST.content_type = "text/html; charset=utf-8"
>   REQUEST.send_http_header()
>   REQUEST.write(pageA)
>   REQUEST.write(pageB)
>   raise mod_python.apache.SERVER_RETURN, mod_python.apache.OK

Yop :) raising  mod_python.apache.SERVER_RETURN instead of returning does the 
trick.

Also making req.write(d1)  ___and__ returning d2 sth sensible makes both 
(d1+d2) send to browser without error. I would guess that code runed after 
returning from handler gets confused by ""/None value returned by handler ...

-- 
Mateusz Korniak



From thm at duke.edu  Fri Aug 16 20:12:01 2002
From: thm at duke.edu (Hunter Matthews)
Date: Fri Jan  9 21:59:31 2004
Subject: [mod_python] Complicated GET configuration
In-Reply-To: <20020816215137.GH11141@fullfactor.com>
References: <1029518551.1517.29.camel@jade.biology.duke.edu>
	<20020816202745.GE11141@fullfactor.com>
	<1029530494.1195.22.camel@jade.biology.duke.edu>
	<1029531928.1195.28.camel@jade.biology.duke.edu> 
	<20020816215137.GH11141@fullfactor.com>
Message-ID: <1029543172.1195.39.camel@jade.biology.duke.edu>

On Fri, 2002-08-16 at 17:51, Ian Clelland wrote:
> On Fri, Aug 16, 2002 at 05:05:28PM -0400, Hunter Matthews wrote:
> > If anyone on the list has any ideas why the authz handler, which
> > _looked_ like the handler I should use (using HTTP request headers to
> > determine if a client was authorized to make this request), isn't
> > working, I'd still appreciate knowing. 
>  
> After playing with it for about 20 minutes, I managed to get your authorization handler to run on my machine. This appears to be a minimal configuration:
> 
> Apache http.conf:
> 
> <VirtualHost *:80>
>   ServerName pytest.zoostation
>   DocumentRoot /var/local/apache/htdocs/pytest
>   Alias /XMLRPC/$RHN /home/ian/pytest
> 
>   <Directory /home/pytest>
>     Options FollowSymLinks
>     AllowOverride None
>   </Directory>
> 
>   <Location ~ "/XMLRPC$">
>     PythonPath "sys.path+['/home/ian/src/pytest']"
>     SetHandler python-program
>     PythonHandler current_apache
>   </Location>
> 
>   <Location /XMLRPC/$RHN>
>     AuthName 'Restricted Area'
>     AuthType Basic
>     PythonPath "sys.path+['/home/ian/src/pytest']"
>     PythonAuthenHandler current_apache
>     PythonAuthzHandler current_apache
>     require valid-user
>   </Location>
> 
> </VirtualHost>
> 
> 
> current_apache.py:
> 
> from mod_python import apache
> 
> def authenhandler(req):
>     """ temp function for testing.
>         this version accepts any username and password
>     """
> 
>     apache.log_error("Inside the authenhandler!", apache.APLOG_NOERRNO & apache.APLOG_ERR)
>     apache.log_error("method = %s" % req.method, apache.APLOG_NOERRNO & apache.APLOG_ERR)
>     apache.log_error("headers = %s" % `req.headers_in`, apache.APLOG_NOERRNO & apache.APLOG_ERR)
> 
>     pw = req.get_basic_auth_pw()
>     if req.connection.user == None:
>       return apache.HTTP_UNAUTHORIZED
> 
>     return apache.OK
> 
> def authzhandler(req):
>     """ temp function for testing
>         this version accepts all users for all uris
>     """
> 
>     apache.log_error("Inside the authzhandler!", apache.APLOG_NOERRNO & apache.APLOG_ERR)
>     apache.log_error("method = %s" % req.method, apache.APLOG_NOERRNO & apache.APLOG_ERR)
>     apache.log_error("headers = %s" % `req.headers_in`, apache.APLOG_NOERRNO & apache.APLOG_ERR)
> 
>     return apache.OK
> 
> def handler(req):
>     """ temp function for testing"""
> 
>     req.content_type = 'text/html'
>     req.send_http_header()
>     req.write("<html><body><h1>Testing</h1></body></html>")
> 
>     return apache.OK
> 
> 
> Explanation:
> 
> In the Apache configuration, the line which triggers all of the 
> authentication/authorization is the 'require' line. Without this line, 
> the AuthenHandler and AuthzHandler will not be called. 'require 
> valid-user' seems to be sufficient for most cases, since your 
> AuthenHandler can decide who a valid user is, and your AuthzHandler can 
> filter out anyone unauthorized.
> 
> As soon as you add that line, Apache will report an internal server 
> error until you give it an AuthName, AuthType, and some sort of 
> Authentication handler. I added a stub handler which accepts any 
> username and password.
> 
> Once those are all present, then Apache will happily run the 
> AuthzHandler whenever the AuthenHandler returns OK.

Wow. You are amazing. Thank you.

In this particular application, I don't think the authorization will
work quite like that: 

I don't get a user:password from a browser, this is an xmlrpc client
that sends authentication/authorization information in custom HTTP
headers. 

If you are deciding to allow or deny access based just on the contents
of headers, which Handler would you pick?

In testing here, it appears that PythonHeaderParserHandler works - it
can look at the headers in req.headers_in, and simply return apache.OK
or apache.HTTP_UNAUTHORIZED.

Again, wow. Thank you for deciphering this for me: this is my first
mod_python app.


> 
> 
> Hope this helps,
> 
> Ian
> <ian@veryfresh.com>
> 
> 
-- 
Hunter Matthews                          Unix / Network Administrator
Office: BioScience 145/244               Duke Univ. Biology Department
Key: F0F88438 / FFB5 34C0 B350 99A4 BB02  9779 A5DB 8B09 F0F8 8438
Never take candy from strangers. Especially on the internet.


From thm at duke.edu  Fri Aug 16 20:59:42 2002
From: thm at duke.edu (Hunter Matthews)
Date: Fri Jan  9 21:59:31 2004
Subject: [mod_python] Complicated GET configuration
In-Reply-To: <1029543172.1195.39.camel@jade.biology.duke.edu>
References: <1029518551.1517.29.camel@jade.biology.duke.edu>
	<20020816202745.GE11141@fullfactor.com>
	<1029530494.1195.22.camel@jade.biology.duke.edu>
	<1029531928.1195.28.camel@jade.biology.duke.edu> 
	<20020816215137.GH11141@fullfactor.com> 
	<1029543172.1195.39.camel@jade.biology.duke.edu>
Message-ID: <1029545983.1312.44.camel@jade.biology.duke.edu>

On Fri, 2002-08-16 at 20:12, Hunter Matthews wrote:
> > As soon as you add that line, Apache will report an internal server 
> > error until you give it an AuthName, AuthType, and some sort of 
> > Authentication handler. I added a stub handler which accepts any 
> > username and password.
> > 
> > Once those are all present, then Apache will happily run the 
> > AuthzHandler whenever the AuthenHandler returns OK.

Answered my own question - 

> In this particular application, I don't think the authorization will
> work quite like that: 
> 
> I don't get a user:password from a browser, this is an xmlrpc client
> that sends authentication/authorization information in custom HTTP
> headers. 
> 
> If you are deciding to allow or deny access based just on the contents
> of headers, which Handler would you pick?

Authen and Authz - you simply do whatever authentication and
authorization you want - if you're not doing user/password, don't call
those apache methods - roll your own.

Again, thanks to everyone on the list, esp Ian, who helped me understand
just how this works.

-- 
Hunter Matthews                          Unix / Network Administrator
Office: BioScience 145/244               Duke Univ. Biology Department
Key: F0F88438 / FFB5 34C0 B350 99A4 BB02  9779 A5DB 8B09 F0F8 8438
Never take candy from strangers. Especially on the internet.


From grisha at modpython.org  Fri Aug 16 22:25:58 2002
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 21:59:32 2004
Subject: [mod_python] Complicated GET configuration
In-Reply-To: <1029543172.1195.39.camel@jade.biology.duke.edu>
Message-ID: <Pine.BSF.4.32.0208162223250.202-100000@localhost>


On 16 Aug 2002, Hunter Matthews wrote:

> In testing here, it appears that PythonHeaderParserHandler works - it
> can look at the headers in req.headers_in, and simply return apache.OK
> or apache.HTTP_UNAUTHORIZED.

Consider having it return apache.DECLINED instead of apache.OK to let the
default handler and other modules parse headers as well.

Grisha


From alex at morrison.king.net.nz  Sat Aug 17 16:29:15 2002
From: alex at morrison.king.net.nz (Alex King)
Date: Fri Jan  9 21:59:32 2004
Subject: [mod_python] How do I use PythonTransHandler?
Message-ID: <20020817042915.GB1172@morrison.king.net.nz>

Quoting a previos post, by Ian Clelland:

>PythonTransHandler, which will receive all requests, and has the chance 
>to modify the URL before Apache passes the request to your main
>handler.

How do I use this?

From peter.bittner at gmx.net  Sat Aug 17 08:06:26 2002
From: peter.bittner at gmx.net (Peter Bittner)
Date: Fri Jan  9 21:59:32 2004
Subject: [Fwd: [mod_python] Messages not getting through to list server?]
References: <Pine.BSF.4.32.0208160840230.89789-100000@localhost>
Message-ID: <27256.1029564386@www40.gmx.net>

Why not move to a newsgroup solution completely? (Say,
comp.lang.python.modpython)

I would really appreciate that. I'd really prefer that.

These days it's simple and straightforward for everyone to read newsgroups
using http://groups.google.com - even if you don't have a newsreader.

Peter

"Gregory (Grisha) Trubetskoy" wrote:
> 
> My appologies - the list indeed seemed to have had a problem. I'm getting
> increasingly more dissatisfied with mailman - it has this "feature" where
> messages to domains whose MX's cannot be looked up (probably because the
> domain is no longer registered or DNS is down) clog up the entire list.
> 
> I've upgraded to 2.0.12 version of mailman, of this doesn't make it
> better, I will look for other software.
> 
> Thanks to all who made offers to host - so far hosting is not a problem.
> I'm not very keen on having the list at Sourceforge - I'd rather have more
> control over it, also I don't know how long Sourceforge will be around -
> these days nothing is certain. So far only CVS is hosted there.
> 
> Grisha
> 

-- 
GMX - Die Kommunikationsplattform im Internet.
http://www.gmx.net


From ian at veryfresh.com  Sat Aug 17 00:11:33 2002
From: ian at veryfresh.com (Ian Clelland)
Date: Fri Jan  9 21:59:32 2004
Subject: [mod_python] Complicated GET configuration
In-Reply-To: <1029543172.1195.39.camel@jade.biology.duke.edu>
References: <1029518551.1517.29.camel@jade.biology.duke.edu> <20020816202745.GE11141@fullfactor.com> <1029530494.1195.22.camel@jade.biology.duke.edu> <1029531928.1195.28.camel@jade.biology.duke.edu> <20020816215137.GH11141@fullfactor.com> <1029543172.1195.39.camel@jade.biology.duke.edu>
Message-ID: <20020817071133.GI11141@fullfactor.com>

On Fri, Aug 16, 2002 at 08:12:01PM -0400, Hunter Matthews wrote:
> In this particular application, I don't think the authorization will
> work quite like that: 
> 
> I don't get a user:password from a browser, this is an xmlrpc client
> that sends authentication/authorization information in custom HTTP
> headers. 
> 
> If you are deciding to allow or deny access based just on the contents
> of headers, which Handler would you pick?
> 
> In testing here, it appears that PythonHeaderParserHandler works - it
> can look at the headers in req.headers_in, and simply return apache.OK
> or apache.HTTP_UNAUTHORIZED.

Well, if you're not using standard HTTP authentication (specifically, if
you're not using the WWW-Authenticate and Authorization headers,) then
maybe the best handler to use would be a PythonAccessHandler. Access
control handlers are generally free to deny access to a resource based
on any criteria you want. They will usually return an apache.HTTP_FORBIDDEN
(403) if access is denied, but you can make it return whatever you want.

Technically, you are not supposed to return a 401 (Unauthorized) status
code unless you are also including a WWW-Authenticate header, but it
really comes down to doing what the client expects, especially if the
client is non-interactive.

> Again, wow. Thank you for deciphering this for me: this is my first
> mod_python app.

You're welcome -- I'm just glad I could be of help


Ian
<ian@veryfresh.com>

From ian at veryfresh.com  Sat Aug 17 00:44:09 2002
From: ian at veryfresh.com (Ian Clelland)
Date: Fri Jan  9 21:59:32 2004
Subject: [mod_python] How do I use PythonTransHandler?
In-Reply-To: <20020817042915.GB1172@morrison.king.net.nz>
References: <20020817042915.GB1172@morrison.king.net.nz>
Message-ID: <20020817074409.GJ11141@fullfactor.com>

On Sat, Aug 17, 2002 at 04:29:15PM +1200, Alex King wrote:
> Quoting a previos post, by Ian Clelland:
> 
> >PythonTransHandler, which will receive all requests, and has the chance 
> >to modify the URL before Apache passes the request to your main
> >handler.
> 
> How do I use this?
 
The same way you would set a regular PythonHandler, you can set up 
Apache to use a PythonTransHandler:

<VirtualHost *:80>
  ServerName pytest.zoostation
  DocumentRoot /var/local/apache/htdocs/pytest
  PythonPath "sys.path+['/home/ian/src/pytest']"
  PythonTransHandler translate_test
</VirtualHost>

And then just write the python module to set the filename attribute:

def transhandler(req):
    req.filename = '/var/local/apache/htdocs/pytest/test2.html'
    return apache.OK

> My problem is that the request object members such as filename and the
> like are read-only, so how do I pass the new filename back to apache?

Well, req.filename is definitely _not_ read-only. This may be another
bug in the documentation, but the code is there in requestobject.c to
set that attribute. I just ran a couple of tests, and I can set the
filename for a request, and Apache will return that file.

The problem I can see right now is that there appears to be no way to
get the DocumentRoot for the current request. You shouldn't have a 
problem if your cached files are completly outside of your DocumentRoot 
(and you have the absolute path available to your handler,) but you 
might have a hard time if you want to translate a URL to another file 
within your DocumentRoot, and don't want to put the full path inside 
your source files.


Ian Clelland
<ian@veryfresh.com>

From alex at morrison.king.net.nz  Sat Aug 17 20:37:43 2002
From: alex at morrison.king.net.nz (Alex King)
Date: Fri Jan  9 21:59:32 2004
Subject: [mod_python] How do I use PythonTransHandler?
In-Reply-To: <20020817074409.GJ11141@fullfactor.com>
References: <20020817042915.GB1172@morrison.king.net.nz> <20020817074409.GJ11141@fullfactor.com>
Message-ID: <20020817083743.GA5349@morrison.king.net.nz>

On Sat, Aug 17, 2002 at 12:44:09AM -0700, Ian Clelland wrote:
> On Sat, Aug 17, 2002 at 04:29:15PM +1200, Alex King wrote:
> > Quoting a previos post, by Ian Clelland:
> > 
> > >PythonTransHandler, which will receive all requests, and has the chance 
> > >to modify the URL before Apache passes the request to your main
> > >handler.
> > 
> > How do I use this?
>  
> The same way you would set a regular PythonHandler, you can set up 
> Apache to use a PythonTransHandler:
> 
> <VirtualHost *:80>
>   ServerName pytest.zoostation
>   DocumentRoot /var/local/apache/htdocs/pytest
>   PythonPath "sys.path+['/home/ian/src/pytest']"

ahh - that's how you do it.  I expected the DocumentRoot to be added to
the sys.path by mod_python, but it wasn't  I ended up putting my script
in /usr/local/lib/python2.1/site-packages/ to get it in the path.  I
overlooked PythonPath for some reason...

>   PythonTransHandler translate_test
> </VirtualHost>
> 
> And then just write the python module to set the filename attribute:
> 
> def transhandler(req):
>     req.filename = '/var/local/apache/htdocs/pytest/test2.html'
>     return apache.OK
> 
> > My problem is that the request object members such as filename and the
> > like are read-only, so how do I pass the new filename back to apache?
> 
> Well, req.filename is definitely _not_ read-only. This may be another
> bug in the documentation, but the code is there in requestobject.c to
> set that attribute. I just ran a couple of tests, and I can set the
> filename for a request, and Apache will return that file.
> 
OK, cool that's how I expected it to work.  The read-only note beside
the req.filename in the docs put me off though and I didn't actually try
it.  Perhaps the request filename is read-only by the time it get to the
main request handler?  In the docs I have, all the members of the rquest
structure are noted to be read-only except for content_type, headers_in,
headers_out, and err_headers_out.  Perhaps those read-only notes in the
docs are all in relation to the main request handler, not to all
handlers in general.

Anyway this makes me much happier :)

> The problem I can see right now is that there appears to be no way to
> get the DocumentRoot for the current request. You shouldn't have a 
> problem if your cached files are completly outside of your DocumentRoot 
> (and you have the absolute path available to your handler,) but you 
> might have a hard time if you want to translate a URL to another file 
> within your DocumentRoot, and don't want to put the full path inside 
> your source files.

Yeah, I discovered that.  I was looking at req.get_config() to see what
it returned, it only seems to return module specific configs.  If it
returned all the configs I would have picked DocumentRoot out of that.
Instead I'm going to ignore DocumentRoot and set various directories to
be used for the cache etc. with PythonOption directives in the apache
config.

Another problem I'm having is not understanding req.add_handler().  I
thought I'd have code to determince whether to take special action in
the PythonTransHandler (ie. download a file not in cache).  If a
download is needed, the transhandler runs
req.add_handler("PythonHandler","padcache") where padcache.py is my
script in /usr/local/lib/python2.1/site-packages/.

I'm probably not understanding the second argument to the function, or
perhaps it's a path problem again, but I keep getting a traceback:
[Sat Aug 17 20:29:48 2002] [error] PythonHandler padcache: Traceback (most recent call last):
[Sat Aug 17 20:29:48 2002] [error] PythonHandler padcache:   File "/usr/lib/python2.1/site-packages/mod_python/apache.py", line 176, in Dispatch
    dir = _req.get_all_dirs()[htype]
[Sat Aug 17 20:29:48 2002] [error] PythonHandler padcache: KeyError: PythonHandler

What I am wanting to achieve is to normally not have a python handler
run for the main handler, so no PythonHandler is specified in the
config, but in cases when transhandler determines that it does need to
be run, it is added with add_handler()

> 
> 
> Ian Clelland

Thanks for your quick response :)

Alex

From alex at morrison.king.net.nz  Sat Aug 17 20:46:45 2002
From: alex at morrison.king.net.nz (Alex King)
Date: Fri Jan  9 21:59:32 2004
Subject: [mod_python] How do I use PythonTransHandler?
In-Reply-To: <20020817074409.GJ11141@fullfactor.com>
References: <20020817042915.GB1172@morrison.king.net.nz> <20020817074409.GJ11141@fullfactor.com>
Message-ID: <20020817084645.GA5534@morrison.king.net.nz>

> 
> Well, req.filename is definitely _not_ read-only. This may be another
> bug in the documentation, but the code is there in requestobject.c to
> set that attribute. I just ran a couple of tests, and I can set the
> filename for a request, and Apache will return that file.
> 
I forgot to mention I was using debian woody (stable), with mod_python
version 2.7.8

From ian at veryfresh.com  Sat Aug 17 03:36:06 2002
From: ian at veryfresh.com (Ian Clelland)
Date: Fri Jan  9 21:59:32 2004
Subject: [mod_python] How do I use PythonTransHandler?
In-Reply-To: <20020817083743.GA5349@morrison.king.net.nz>
References: <20020817042915.GB1172@morrison.king.net.nz> <20020817074409.GJ11141@fullfactor.com> <20020817083743.GA5349@morrison.king.net.nz>
Message-ID: <20020817103606.GK11141@fullfactor.com>

On Sat, Aug 17, 2002 at 08:37:43PM +1200, Alex King wrote:
> > The problem I can see right now is that there appears to be no way to
> > get the DocumentRoot for the current request. You shouldn't have a 
> > problem if your cached files are completly outside of your DocumentRoot 
> > (and you have the absolute path available to your handler,) but you 
> > might have a hard time if you want to translate a URL to another file 
> > within your DocumentRoot, and don't want to put the full path inside 
> > your source files.
> 
> Yeah, I discovered that.  I was looking at req.get_config() to see what
> it returned, it only seems to return module specific configs.  If it
> returned all the configs I would have picked DocumentRoot out of that.
> Instead I'm going to ignore DocumentRoot and set various directories to
> be used for the cache etc. with PythonOption directives in the apache
> config.

That's what I'd suggest -- if you really need to use your document root,
then add a PythonOption with the same value to your server config. I
looked at get_config (and the less-documented get_all_config) and it
only gets the configuration directives which are specific to mod_python.

mod_perl seems to have a document_root() method for its request object;
I haven't looked too closely at how it gets that from Apache, though. It
would be a nice addition to mod_python (hint, hint :) )


> Another problem I'm having is not understanding req.add_handler().  I
> thought I'd have code to determince whether to take special action in
> the PythonTransHandler (ie. download a file not in cache).  If a
> download is needed, the transhandler runs
> req.add_handler("PythonHandler","padcache") where padcache.py is my
> script in /usr/local/lib/python2.1/site-packages/.
> 
> I'm probably not understanding the second argument to the function, or
> perhaps it's a path problem again, but I keep getting a traceback:
> [Sat Aug 17 20:29:48 2002] [error] PythonHandler padcache: Traceback (most recent call last):
> [Sat Aug 17 20:29:48 2002] [error] PythonHandler padcache:   File "/usr/lib/python2.1/site-packages/mod_python/apache.py", line 176, in Dispatch
>     dir = _req.get_all_dirs()[htype]
> [Sat Aug 17 20:29:48 2002] [error] PythonHandler padcache: KeyError: PythonHandler


Try using req.add_handler("PythonHandler", "padcache::handler"). I'm not
sure where the "::" notation comes from -- it appears to be internal to
mod_python, or perhaps to python itself. Either way, I think you need to
specify both the module name (padcache) and the handler function
(usually just 'handler' for content handlers).

Note: I haven't tried this one myself; that's just what I can glean from
the documentation.

> Thanks for your quick response :)

No problem -- but now I've got to get some sleep :)

Later,

Ian
<ian@veryfresh.com>

From alain at onesite.org  Sat Aug 17 20:32:49 2002
From: alain at onesite.org (Alain Tesio)
Date: Fri Jan  9 21:59:32 2004
Subject: [mod_python] Ping?
In-Reply-To: <20020714135537.A278@eye.neb>
References: <Pine.LNX.4.44.0207131250410.31967-100000@slippy.wire.rat>
	<20020714135537.A278@eye.neb>
Message-ID: <20020817203249.5363f531.alain@onesite.org>

On Sun, 14 Jul 2002 13:55:37 -0500
vio <vmilitaru@sympatico.ca> wrote:

> Possible solution (provided this message make it to the list): how about 
> migrating modpython to 'sourceforge'? It's totally
> free and they do an outstanding hosting job.


Sourceforge is moving progressively from free (as in free speech) to
proprietary, read this on lwn : http://lwn.net/Articles/7480/

It makes it hard to move a project out of sourceforge if you change
your mind.

Savannah is a free clone of sourceforge : http://savannah.gnu.org/

For the mailing list, I could host it, I already have some mailman lists,
the administrator can contact me if needed.

Alain

From daniel at copyleft.no  Sat Aug 17 21:18:52 2002
From: daniel at copyleft.no (Hr. Daniel Mikkelsen)
Date: Fri Jan  9 21:59:32 2004
Subject: [mod_python] Ping?
In-Reply-To: <20020817203249.5363f531.alain@onesite.org>
Message-ID: <20020817211821.W1331-100000@unity.copyleft.no>

On Sat, 17 Aug 2002, Alain Tesio wrote:

> Sourceforge is moving progressively from free (as in free speech) to
> proprietary, read this on lwn : http://lwn.net/Articles/7480/

> It makes it hard to move a project out of sourceforge if you change
> your mind.

I agree. We should stay away from sourceforge.

-- Daniel


From mk at lrn.ru  Sat Aug 17 21:46:04 2002
From: mk at lrn.ru (Michael Krasnovsky)
Date: Fri Jan  9 21:59:32 2004
Subject: [mod_python] encodings (codecs)
Message-ID: <20020817214604.30f73b6b.mk@lrn.ru>

Hi!

I have a problem using encode() method of a string object inside my
publisher handlers. I get LookupError: unknown encoding. 
Here is the sample.

def test(req):
	cnt = "Hello, World Wide!"
	return cnt.encode("utf-8")

BTW, this function works fine being called not from mod_python handler.

How could it be fixed?

Thanks.

Michael.

From tree at basistech.com  Sat Aug 17 17:14:19 2002
From: tree at basistech.com (Tom Emerson)
Date: Fri Jan  9 21:59:32 2004
Subject: [mod_python] encodings (codecs)
In-Reply-To: <20020817214604.30f73b6b.mk@lrn.ru>
References: <20020817214604.30f73b6b.mk@lrn.ru>
Message-ID: <15710.48299.723199.361687@magrathea.basistech.com>

Michael Krasnovsky writes:
> I have a problem using encode() method of a string object inside my
> publisher handlers. I get LookupError: unknown encoding. 
> Here is the sample.

Are you sure the version of Python that is being used by mod_python is
the same as the version that is running from the shell? UTF-8 i one of
the built-in encodings, so I don't think you'll get exception unless
the encoding support isn't there at all.

FWIW I use this functionality all the time from the Publisher and it
works fine.

    -tree

-- 
Tom Emerson                                          Basis Technology Corp.
Software Architect                                 http://www.basistech.com
  "Beware the lollipop of mediocrity: lick it once and you suck forever"

From mk at lrn.ru  Sun Aug 18 12:29:34 2002
From: mk at lrn.ru (Michael Krasnovsky)
Date: Fri Jan  9 21:59:32 2004
Subject: [mod_python] encodings (codecs)
In-Reply-To: <15710.48299.723199.361687@magrathea.basistech.com>
References: <20020817214604.30f73b6b.mk@lrn.ru>
	<15710.48299.723199.361687@magrathea.basistech.com>
Message-ID: <20020818122934.43c707be.mk@lrn.ru>

> Are you sure the version of Python that is being used by mod_python is
> the same as the version that is running from the shell? UTF-8 i one of
> the built-in encodings, so I don't think you'll get exception unless
> the encoding support isn't there at all.

Yes, I'm sure. I have only one version of Python installed - 2.2.1. I
suppose the problem is related somehow to paths resolving during
proceeding my module by mod_python.
But I cannot say how. 
By the way, if I add in sitecustomize.py the line:
sys.path.append('/usr/lib/python2.2/encodings'), I get the next error
message:

  File "/home/mk/tests/biprojects/bisoft/www/test4.py", line 5, in test
    return cnt.encode("utf-8")

  File "/usr/lib/python2.2/encodings/__init__.py", line 51, in
search_function
    mod = __import__(modname,globals(),locals(),'*')

  RuntimeError: cannot unmarshal code objects in restricted execution
mode


> 
> FWIW I use this functionality all the time from the Publisher and it
> works fine.

So, may be something wrong in my apache configuration? Could you show
the fragment of your httpd.conf, which  describes mod_python conf.?

Thank you for your help.
Michael.

From mk at lrn.ru  Sun Aug 18 21:46:27 2002
From: mk at lrn.ru (Michael Krasnovsky)
Date: Fri Jan  9 21:59:32 2004
Subject: [mod_python] encodings (codecs)
In-Reply-To: <15710.48299.723199.361687@magrathea.basistech.com>
References: <20020817214604.30f73b6b.mk@lrn.ru>
	<15710.48299.723199.361687@magrathea.basistech.com>
Message-ID: <20020818214627.1f21a41d.mk@lrn.ru>

Hi, Tom!
> 
> FWIW I use this functionality all the time from the Publisher and it
> works fine.

Do you have Python compiled with or without thread support?

From fabbe at paniq.net  Mon Aug 19 11:53:01 2002
From: fabbe at paniq.net (Fabian Fagerholm)
Date: Fri Jan  9 21:59:32 2004
Subject: [mod_python] Questions for the FAQ - please check and confirm
	(req.write() and return) also docs update ...
In-Reply-To: <Pine.BSF.4.32.0208160856250.89789-100000@localhost>
References: <Pine.BSF.4.32.0208160856250.89789-100000@localhost>
Message-ID: <1029747182.1111.17.camel@kernel>

On Fri, 2002-08-16 at 16:00, Gregory (Grisha) Trubetskoy wrote:
> On 16 Aug 2002, Fabian Fagerholm wrote:
> > If you're using the Publisher handler, you can use req.write() once,
> > but then you *have* to return something at the end of your function,
> > or things won't work.
> 
> You should be able to use write() many times as you like. It should also
> be ok to return an empty string *if* you have written something with
> write(), otherwise returning an empty document will cause a problem with
> Netscape at least.

Right, now I have it working. I see now why I was confused. It seems to
me that mod_python is behaving differently at different times. For
example:

If I follow the Tutorial section in the mod_python docs, and create a
directory /home/fabbe/public_html/mod_python/temp_test_1 for my tests,
and in this directory, I place a .htaccess file with the following
contents:

    AddHandler python-program .py
    PythonHandler myscript

just like in the tutorial. Then, I write myscript.py in the same
directory:

    from mod_python import apache
    
    def handler(req):
        req.content_type = "text/plain"
        req.send_http_header()
        req.write("Hello, World!")
    
        return apache.OK
    
I then load ~fabbe/mod_python/temp_test_1/myscript.py from the web
server, and I get the following:

    Hello, World!
    <p>/home/fabbe/public_html/mod_python/temp_test_1/myscript.py</p>
    
which is not what I expected. But when I press reload on my browser, the
last line disappears and everything works as expected *even if I remove
those files and rewrite them, or change 'myscript' to 'fooscript'*!

I don't get it... :)

The apache logs show the following:

First access:
    212.226.163.85 - - [19/Aug/2002:11:34:33 +0300]
     "GET /~fabbe/mod_python/temp_test_1/myscript.py HTTP/1.1" 200 99
     "https://no.paniq.net/~fabbe/mod_python/temp_test_1/" "Mozilla/5.0
     Galeon/1.2.5 (X11; Linux i686; U;) Gecko/20020610 Debian/1.2.5-1"

Subsequent accesses:
    212.226.163.85 - - [19/Aug/2002:11:41:52 +0300]
     "GET /~fabbe/mod_python/temp_test_1/myscript.py HTTP/1.1" 200 25
     "-"
     "Mozilla/5.0 Galeon/1.2.5 (X11; Linux i686; U;) Gecko/20020610
     Debian/1.2.5-1"

The only difference I see compared to the tutorial is that I'm using
https. But that shouldn't affect mod_python, should it?

Could someone clarify?

Cheers,
Fabian



From fabbe at paniq.net  Mon Aug 19 12:21:43 2002
From: fabbe at paniq.net (Fabian Fagerholm)
Date: Fri Jan  9 21:59:32 2004
Subject: [mod_python] Package notation in PythonHandler directive
Message-ID: <1029748903.1111.27.camel@kernel>

Continuing to explore mod_python, I'm having trouble with package
notation in the PythonHandler directive.

I'm looking at the mod_python docs, and the Tutorial section 3.2 in
particular. It suggests that you could have a directory structure as
follows:

<your base dir>
  |
  +- .htaccess (file)
  +- subdir (directory)
      |
      +- myscript.py (file)

The .htaccess file would look as follows:

    AddHandler python-program .py
    PythonHandler subdir.myscript
    
and the myscript.py file in the 'subdir' subdirectory would look as
follows:

    from mod_python import apache
    
    def handler(req):
        req.content_type = "text/plain"
        req.send_http_header()
        req.write("Hello, World!")
    
        return apache.OK

If I do this, I get a 500 Internal Server Error and the following
appears in the apache logs:

    [Mon Aug 19 12:12:57 2002] [error] PythonHandler subdir.myscript:
    Traceback (most recent call last):
    [Mon Aug 19 12:12:57 2002] [error] PythonHandler subdir.myscript:  
    File "/usr/lib/python2.1/site-packages/mod_python/apache.py", line
    181, in Dispatch
        module = import_module(module_name, _req)
    [Mon Aug 19 12:12:57 2002] [error] PythonHandler subdir.myscript:  
    File "/usr/lib/python2.1/site-packages/mod_python/apache.py", line
    332, in import_module
        f, p, d = imp.find_module(parts[i], path)
    [Mon Aug 19 12:12:57 2002] [error] PythonHandler subdir.myscript:
    ImportError: No module named subdir
    
What am I doing wrong?

Cheers,
Fabian



From tree at basistech.com  Mon Aug 19 06:39:54 2002
From: tree at basistech.com (Tom Emerson)
Date: Fri Jan  9 21:59:32 2004
Subject: [mod_python] encodings (codecs)
In-Reply-To: <20020818214627.1f21a41d.mk@lrn.ru>
References: <20020817214604.30f73b6b.mk@lrn.ru>
	<15710.48299.723199.361687@magrathea.basistech.com>
	<20020818214627.1f21a41d.mk@lrn.ru>
Message-ID: <15712.51962.189948.95477@magrathea.basistech.com>

Michael Krasnovsky writes:
> > FWIW I use this functionality all the time from the Publisher and it
> > works fine.
> 
> Do you have Python compiled with or without thread support?

Without: on FreeBSD thread support doesn't work, at least with Apache 1.3.26.

    -tree

-- 
Tom Emerson                                          Basis Technology Corp.
Software Architect                                 http://www.basistech.com
  "Beware the lollipop of mediocrity: lick it once and you suck forever"

From grisha at modpython.org  Mon Aug 19 08:32:26 2002
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 21:59:33 2004
Subject: [mod_python] Package notation in PythonHandler directive
In-Reply-To: <1029748903.1111.27.camel@kernel>
Message-ID: <Pine.BSF.4.32.0208190831110.34551-100000@localhost>

You might need an __init__.py file in subdir in order for this to work.

On 19 Aug 2002, Fabian Fagerholm wrote:

> Continuing to explore mod_python, I'm having trouble with package
> notation in the PythonHandler directive.
>
> I'm looking at the mod_python docs, and the Tutorial section 3.2 in
> particular. It suggests that you could have a directory structure as
> follows:
>
> <your base dir>
>   |
>   +- .htaccess (file)
>   +- subdir (directory)
>       |
>       +- myscript.py (file)
>
> The .htaccess file would look as follows:
>
>     AddHandler python-program .py
>     PythonHandler subdir.myscript
>
> and the myscript.py file in the 'subdir' subdirectory would look as
> follows:
>
>     from mod_python import apache
>
>     def handler(req):
>         req.content_type = "text/plain"
>         req.send_http_header()
>         req.write("Hello, World!")
>
>         return apache.OK
>
> If I do this, I get a 500 Internal Server Error and the following
> appears in the apache logs:
>
>     [Mon Aug 19 12:12:57 2002] [error] PythonHandler subdir.myscript:
>     Traceback (most recent call last):
>     [Mon Aug 19 12:12:57 2002] [error] PythonHandler subdir.myscript:
>     File "/usr/lib/python2.1/site-packages/mod_python/apache.py", line
>     181, in Dispatch
>         module = import_module(module_name, _req)
>     [Mon Aug 19 12:12:57 2002] [error] PythonHandler subdir.myscript:
>     File "/usr/lib/python2.1/site-packages/mod_python/apache.py", line
>     332, in import_module
>         f, p, d = imp.find_module(parts[i], path)
>     [Mon Aug 19 12:12:57 2002] [error] PythonHandler subdir.myscript:
>     ImportError: No module named subdir
>
> What am I doing wrong?
>
> Cheers,
> Fabian
>
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://www.modpython.org/mailman/listinfo/mod_python
>


From grisha at modpython.org  Mon Aug 19 08:37:44 2002
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 21:59:33 2004
Subject: [mod_python] encodings (codecs)
In-Reply-To: <15712.51962.189948.95477@magrathea.basistech.com>
Message-ID: <Pine.BSF.4.32.0208190834120.34551-100000@localhost>

This is just a theory:

If the .so file which provides this functionality was compiled against a
Python different than the one you're using for mod_python, there may be a
problem ("different" could mean that one has thread support and the other
does not, even though they are the same version). Especially on FreeBSD,
where as far as I know thread support implies using a whole different
libc. Try recompiling *and* reinstalling Python without threads and see if
it fixes the problem.

Grisha


On Mon, 19 Aug 2002, Tom Emerson wrote:

> Michael Krasnovsky writes:
> > > FWIW I use this functionality all the time from the Publisher and it
> > > works fine.
> >
> > Do you have Python compiled with or without thread support?
>
> Without: on FreeBSD thread support doesn't work, at least with Apache 1.3.26.
>
>     -tree


From fabbe at paniq.net  Mon Aug 19 16:07:02 2002
From: fabbe at paniq.net (Fabian Fagerholm)
Date: Fri Jan  9 21:59:33 2004
Subject: [mod_python] Package notation in PythonHandler directive
In-Reply-To: <Pine.BSF.4.32.0208190831110.34551-100000@localhost>
References: <Pine.BSF.4.32.0208190831110.34551-100000@localhost>
Message-ID: <1029762422.1111.33.camel@kernel>

> > On 19 Aug 2002, Fabian Fagerholm wrote:
> > Continuing to explore mod_python, I'm having trouble with package
> > notation in the PythonHandler directive.
...
> >     AddHandler python-program .py
> >     PythonHandler subdir.myscript

On Mon, 2002-08-19 at 15:32, Gregory (Grisha) Trubetskoy wrote:
> 
> You might need an __init__.py file in subdir in order for this to work.

You're quite right. Many thanks for this pointer!

For the list archives (and this could be a FAQ item as well):

Since Python 1.5b1, just any directory doesn't qualify as a package. A
package is a directory *with* the __init__.py file.

So my error was entirely Python-related and didn't actually concern
mod_python at all.

Cheers,
Fabian



From jack_diederich at email.com  Tue Aug 20 11:29:17 2002
From: jack_diederich at email.com (Jack Diederich)
Date: Fri Jan  9 21:59:33 2004
Subject: [mod_python] Using non-global python with mod_python
Message-ID: <20020820162917.28271.qmail@email.com>

I just ran into a problem like this previously posted one:
  http://www.modpython.org/pipermail/mod_python/2002-July/002218.html

which gives you the 'could not import mod_python.apache, could not call init'
type of error.  After playing around I figured out that it was looking at
my globally installed copy of Python (/usr/local/python2.2) and NOT the copy I had
passed in to ./configure (/home/www/python2.2)

mod_python properly installed the py's in /home/www/python2.2 tree but it would
never get picked up by apache.  Even adding the home tree with the PythonPath
directive didn't work.  I had to symlink the site-packages directory from
/usr/local to the /home tree.

I couldn't find any reference to the /usr/local directory anywhere in the configured
mod_python tree.

Any guesses where it is getting the idea that everything is under /usr/local?

thanks,

-jack
-- 
__________________________________________________________
Sign-up for your own FREE Personalized E-mail at Mail.com
http://www.mail.com/?sr=signup


From jack_diederich at email.com  Tue Aug 20 11:29:17 2002
From: jack_diederich at email.com (Jack Diederich)
Date: Fri Jan  9 21:59:33 2004
Subject: [mod_python] Using non-global python with mod_python
Message-ID: <20020820162917.28271.qmail@email.com>

I just ran into a problem like this previously posted one:
  http://www.modpython.org/pipermail/mod_python/2002-July/002218.html

which gives you the 'could not import mod_python.apache, could not call init'
type of error.  After playing around I figured out that it was looking at
my globally installed copy of Python (/usr/local/python2.2) and NOT the copy I had
passed in to ./configure (/home/www/python2.2)

mod_python properly installed the py's in /home/www/python2.2 tree but it would
never get picked up by apache.  Even adding the home tree with the PythonPath
directive didn't work.  I had to symlink the site-packages directory from
/usr/local to the /home tree.

I couldn't find any reference to the /usr/local directory anywhere in the configured
mod_python tree.

Any guesses where it is getting the idea that everything is under /usr/local?

thanks,

-jack
-- 
__________________________________________________________
Sign-up for your own FREE Personalized E-mail at Mail.com
http://www.mail.com/?sr=signup


From grisha at modpython.org  Tue Aug 20 13:40:09 2002
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 21:59:33 2004
Subject: [mod_python] Using non-global python with mod_python
In-Reply-To: <20020820162917.28271.qmail@email.com>
Message-ID: <Pine.BSF.4.32.0208201329590.73876-100000@eden.ispol.com>

On Tue, 20 Aug 2002, Jack Diederich wrote:

> I just ran into a problem like this previously posted one:
>   http://www.modpython.org/pipermail/mod_python/2002-July/002218.html

[snip]

> I couldn't find any reference to the /usr/local directory anywhere in the configured
> mod_python tree.
>
> Any guesses where it is getting the idea that everything is under /usr/local?

I think ./configure is getting this idea from the first python it can find
in the path.

Try to run configure like with something like this:

$ PATH=/home/www/python2.2:$PATH ./configure --[your-args]

Grisha



From kevin at vap.org  Tue Aug 20 13:45:25 2002
From: kevin at vap.org (kevin@vap.org)
Date: Fri Jan  9 21:59:33 2004
Subject: [mod_python] IOError: [Errno 2] No such file or directory...(etc)
Message-ID: <291760-220028220174525100@vap.org>

Okay, I know this has been discussed many times before, and I am
aware of the fix on the FAQ.  However, I have a few issues:

1) My error says "IOError" instead of the "OSError" that everyone
else has reported.
2) using Python 2.2.1, Apache 1.3.26, Modpython 2.7.8, on WinXP
3) Since the python patch for this was closed in Aug-2001, any idea
why it isn't in Python 2.2.1, released Apr-2002?  
4) I went ahead & patched pythonrun.c and recompiled my Python 2.2.1.
The FAQ says to rebuild mod_python, but I don't know how to on
Windows, and I suspect 2.7.8 might already have the fix?.  

Can anyone assist with rebuilding mod_python on Windows?  What effect
would that have since it doesn't include pythonrun.c in the
mod_python build?  Any other ideas regarding the problem? (output is
below)

-Kevin

**** output ****

Mod_python error: "PythonHandler mod_python.publisher"

Traceback (most recent call last):

  File "C:\...\python\Lib\mod_python\apache.py", line 193, in Dispatch
    result = object(req)

  File "C:\...\python\Lib\mod_python\publisher.py", line 171, in
handler
    result = apply(object, (), args)

  File "c:/.../mywww\imgsvr.py", line 77, in get
    fd = open( filenm, "rb" )

IOError: [Errno 2] No such file or directory:
'z:\\FILES\\up\\oak_20020730\\01638764.BCK.jpg'

**** end of output ****

Notes:
I'm trying to access a file on my local network.  I have tried
different drive letters on my local network (& UNC paths instead of
drive letters).  The only time it works is when I use the local "C:"
for the path.  Even if I do a "subst e: c:\" and try that (E:\...),
it fails.  I even tried messing with <Directory> entries in Apache to
no avail.

And yes, the code works fine when outside of Apache/Mod_python.


From grisha at modpython.org  Tue Aug 20 14:36:51 2002
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 21:59:33 2004
Subject: [mod_python] IOError: [Errno 2] No such file or directory...(etc)
In-Reply-To: <291760-220028220174525100@vap.org>
Message-ID: <Pine.BSF.4.32.0208201436120.73876-100000@eden.ispol.com>

Might it be that the Z: mapping doesn't exist for whatever user id the
apache service is running under?

Grisha

On Tue, 20 Aug 2002 kevin@vap.org wrote:

> Okay, I know this has been discussed many times before, and I am
> aware of the fix on the FAQ.  However, I have a few issues:
>
> 1) My error says "IOError" instead of the "OSError" that everyone
> else has reported.
> 2) using Python 2.2.1, Apache 1.3.26, Modpython 2.7.8, on WinXP
> 3) Since the python patch for this was closed in Aug-2001, any idea
> why it isn't in Python 2.2.1, released Apr-2002?
> 4) I went ahead & patched pythonrun.c and recompiled my Python 2.2.1.
> The FAQ says to rebuild mod_python, but I don't know how to on
> Windows, and I suspect 2.7.8 might already have the fix?.
>
> Can anyone assist with rebuilding mod_python on Windows?  What effect
> would that have since it doesn't include pythonrun.c in the
> mod_python build?  Any other ideas regarding the problem? (output is
> below)
>
> -Kevin
>
> **** output ****
>
> Mod_python error: "PythonHandler mod_python.publisher"
>
> Traceback (most recent call last):
>
>   File "C:\...\python\Lib\mod_python\apache.py", line 193, in Dispatch
>     result = object(req)
>
>   File "C:\...\python\Lib\mod_python\publisher.py", line 171, in
> handler
>     result = apply(object, (), args)
>
>   File "c:/.../mywww\imgsvr.py", line 77, in get
>     fd = open( filenm, "rb" )
>
> IOError: [Errno 2] No such file or directory:
> 'z:\\FILES\\up\\oak_20020730\\01638764.BCK.jpg'
>
> **** end of output ****
>
> Notes:
> I'm trying to access a file on my local network.  I have tried
> different drive letters on my local network (& UNC paths instead of
> drive letters).  The only time it works is when I use the local "C:"
> for the path.  Even if I do a "subst e: c:\" and try that (E:\...),
> it fails.  I even tried messing with <Directory> entries in Apache to
> no avail.
>
> And yes, the code works fine when outside of Apache/Mod_python.
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://www.modpython.org/mailman/listinfo/mod_python
>


From kevin at vap.org  Tue Aug 20 17:09:46 2002
From: kevin at vap.org (kevin@vap.org)
Date: Fri Jan  9 21:59:33 2004
Subject: [mod_python] IOError: [Errno 2] No such file or directory...(etc)
Message-ID: <35720-22002822021946661@vap.org>

That sounds like a possibility, but it didn't help.  Here is some
more information:

- I changed the Apache service to logon with my username (which also
logs on to our Windows Domain).  No improvement.
- If I just return an HTML tag to have the browser open the graphic
(like <img src="z:\...jpg" />), then access works (probably since it
is under my user id via the browser application).
- I tried the code as a CGI called from Apache and I get the same
error (so I guess it doesn't have anything to do with modpython).


I guess I'll redirect this to an Apache group since it doesn't look
to be caused by modpython.

Any ideas are appreciated, though.

-Kevin



---- Original Message ----
From: grisha@modpython.org
To: kevin@vap.org, 
Subject: Re: [mod_python] IOError: [Errno 2] No such file or
directory...(etc)
Date: Tue, 20 Aug 2002 14:36:51 -0400 (EDT)

>
>Might it be that the Z: mapping doesn't exist for whatever user id 
>the
>apache service is running under?
>
>Grisha
>
>On Tue, 20 Aug 2002 kevin@vap.org wrote:
>
>> Okay, I know this has been discussed many times before, and I am
>> aware of the fix on the FAQ.  However, I have a few issues:
>>
>> 1) My error says "IOError" instead of the "OSError" that everyone
>> else has reported.
>> 2) using Python 2.2.1, Apache 1.3.26, Modpython 2.7.8, on WinXP
>> 3) Since the python patch for this was closed in Aug-2001, any idea
>> why it isn't in Python 2.2.1, released Apr-2002?
>> 4) I went ahead & patched pythonrun.c and recompiled my Python 
>2.2.1.
>> The FAQ says to rebuild mod_python, but I don't know how to on
>> Windows, and I suspect 2.7.8 might already have the fix?.
>>
>> Can anyone assist with rebuilding mod_python on Windows?  What 
>effect
>> would that have since it doesn't include pythonrun.c in the
>> mod_python build?  Any other ideas regarding the problem? (output 
>is
>> below)
>>
>> -Kevin
>>
>> **** output ****
>>
>> Mod_python error: "PythonHandler mod_python.publisher"
>>
>> Traceback (most recent call last):
>>
>>   File "C:\...\python\Lib\mod_python\apache.py", line 193, in 
>Dispatch
>>     result = object(req)
>>
>>   File "C:\...\python\Lib\mod_python\publisher.py", line 171, in
>> handler
>>     result = apply(object, (), args)
>>
>>   File "c:/.../mywww\imgsvr.py", line 77, in get
>>     fd = open( filenm, "rb" )
>>
>> IOError: [Errno 2] No such file or directory:
>> 'z:\\FILES\\up\\oak_20020730\\01638764.BCK.jpg'
>>
>> **** end of output ****
>>
>> Notes:
>> I'm trying to access a file on my local network.  I have tried
>> different drive letters on my local network (& UNC paths instead of
>> drive letters).  The only time it works is when I use the local 
>"C:"
>> for the path.  Even if I do a "subst e: c:\" and try that (E:\...),
>> it fails.  I even tried messing with <Directory> entries in Apache 
>to
>> no avail.
>>
>> And yes, the code works fine when outside of Apache/Mod_python.



From rclilly at lvcm.com  Wed Aug 21 10:44:13 2002
From: rclilly at lvcm.com (Robert Lilly)
Date: Fri Jan  9 21:59:33 2004
Subject: [mod_python] mod_python for Apache 2? (Cross-posted to mod_python & Apache users lists)
Message-ID: <EGEMLKBGPBCGGGFNPMGNGEOFCDAA.rclilly@lvcm.com>

Is there a mod_python.dll for Apache 2? Is it possible to run mod_python
with Apache 2 under Windows 2000? If so, how do I do it.

Currently I've tried adding:

LoadModule python_module modules/mod_python.dll

and

<Directory "E:/My Documents/RCL Enterprises/Web/htdocs/python">
   AddHandler python-program .py
   PythonHandler mptest
   PythonDebug on
</Directory>

to my httpd.conf file, but I get the following error:

Cannot load D:/Program Files/Apache Group/Apache2/modules/mod_python.dll
into server: The specified module could not be found. I put the latest
mod_python.dll I could find into my modules folder.

TIA,

Robert

---
Outgoing mail is certified Virus Free.
Checked by AVG anti-virus system (http://www.grisoft.com).
Version: 6.0.381 / Virus Database: 214 - Release Date: 8/2/2002


From grisha at modpython.org  Wed Aug 21 14:24:46 2002
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 21:59:33 2004
Subject: [mod_python] mod_python for Apache 2? (Cross-posted to mod_python
 & Apache users lists)
In-Reply-To: <EGEMLKBGPBCGGGFNPMGNGEOFCDAA.rclilly@lvcm.com>
Message-ID: <Pine.BSF.4.32.0208211420220.9601-100000@eden.ispol.com>

There is no mod_python.dll for Apache 2 as of yet. Mod_python 3.0 is
approaching beta status rapidly, and I expect to put the beta out in a
week or so, and perhaps someone will care to compile a DLL of it, though I
must admit I've done 0 testing on Windows yet.

Grisha

On Wed, 21 Aug 2002, Robert Lilly wrote:

> Is there a mod_python.dll for Apache 2? Is it possible to run mod_python
> with Apache 2 under Windows 2000? If so, how do I do it.


From rclilly at lvcm.com  Wed Aug 21 13:29:42 2002
From: rclilly at lvcm.com (Robert Lilly)
Date: Fri Jan  9 21:59:33 2004
Subject: [mod_python] mod_python for Apache 2? (Cross-posted to mod_python & Apache users lists)
In-Reply-To: <Pine.BSF.4.32.0208211420220.9601-100000@eden.ispol.com>
Message-ID: <EGEMLKBGPBCGGGFNPMGNGEOJCDAA.rclilly@lvcm.com>

Thanks Grisha! Will you be announcing to the list when it's released?

> -----Original Message-----
> From: Gregory (Grisha) Trubetskoy [mailto:grisha@modpython.org]
> Sent: Wednesday, August 21, 2002 11:25 AM
> To: Robert Lilly
> Cc: mod_python@modpython.org
> Subject: Re: [mod_python] mod_python for Apache 2? (Cross-posted to
> mod_python & Apache users lists)
>
>
>
> There is no mod_python.dll for Apache 2 as of yet. Mod_python 3.0 is
> approaching beta status rapidly, and I expect to put the beta out in a
> week or so, and perhaps someone will care to compile a DLL of it, though I
> must admit I've done 0 testing on Windows yet.
>
> Grisha
>
> On Wed, 21 Aug 2002, Robert Lilly wrote:
>
> > Is there a mod_python.dll for Apache 2? Is it possible to run mod_python
> > with Apache 2 under Windows 2000? If so, how do I do it.
>
> ---
> Incoming mail is certified Virus Free.
> Checked by AVG anti-virus system (http://www.grisoft.com).
> Version: 6.0.381 / Virus Database: 214 - Release Date: 8/2/2002
>
---
Outgoing mail is certified Virus Free.
Checked by AVG anti-virus system (http://www.grisoft.com).
Version: 6.0.381 / Virus Database: 214 - Release Date: 8/2/2002


From fabbe at paniq.net  Thu Aug 22 09:25:08 2002
From: fabbe at paniq.net (Fabian Fagerholm)
Date: Fri Jan  9 21:59:33 2004
Subject: [mod_python] mod_python link on Apache web page?
Message-ID: <1029997509.1695.8.camel@kernel>

I was browsing around the Apache web pages when it struck me that
mod_python is definitely not getting the exposure it could on those
pages. There is perl.apache.org, php.apache.org and tcl.apache.org, but
there is no python.apache.org. There isn't even a mod_python link under
the "Sister Projects" section.

I think this is quite sad, because why shouldn't Python be an equally
good choice as web app development language as Perl, PHP or TCL?

What I would like to do is get a link to the mod_python web site under
the "Sister Projects" section of http://www.apache.org/, or (preferably)
find out how a python.apache.org could be created, either as a general
Python-Apache site or as a direct link to the mod_python web site
(perl.apache.org is actually the mod_perl site).

Are there any opinions or further information on this matter that anyone
would like to share? Is anyone interested in this?

Cheers,
Fabian

-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 240 bytes
Desc: This is a digitally signed message part
Url : http://mailman.modpython.org/pipermail/mod_python/attachments/20020822/d1651147/attachment-0002.bin
From vmilitaru at sympatico.ca  Thu Aug 22 04:11:47 2002
From: vmilitaru at sympatico.ca (vio)
Date: Fri Jan  9 21:59:33 2004
Subject: [mod_python] mod_python link on Apache web page?
In-Reply-To: <1029997509.1695.8.camel@kernel>; from fabbe@paniq.net on Thu, Aug 22, 2002 at 09:25:08AM +0300
References: <1029997509.1695.8.camel@kernel>
Message-ID: <20020822041146.A281@eye.neb>

Since mod_python is so totally dependent on apache, warming up this 
symbiotic relationship to similar levels as mod_perl and such would make a lot
of sense. Though from my selfish user's point of view, as long as I can make 
apache sing python songs, and doing it faster than in Zope, I don't much care 
more than that. Languages is kind of a religious experience, with hugely 
various followings. As in real religions, it's seldom the best religion who is 
the most popular (no offense, but unfortunately it's always the better 
marketing who wins crowds, rarely the technically better product 
... howdy Bill !).

Apologies to the list for my misplaced religious bull. But I am quite surprized
to hear that mod_python is not referenced by apache web site. I believe that's
the place to be if mod_python wants to recruit a bigger audience/following.
Cause if you only meter in the programming experience, Python is way better
than Perl or PHP or Java or C/Cpp or what have you (I don't know TCL, so can't
compare it). I mean, Python's competition. 
Why am I so damn sure? Cause else, I'd be 
out of here in a hurry, as well as each and every one of you reading this.
We're here because we've seen what else is there, and for the time being,
mod_python + apache is pretty much the best there is.

python.apache.org sounds great. Provided the owners of the apache.org domain 
agree. Though as much as I'm concerned, I wouldn't waste much sleep if it 
doesn't happen.
My opinion.

Vio

PS. What would be quite intriguing would be to meter the mod_python's installed
base. I mean, apache now runs over 60% of all web servers worldwide. I'd be 
curious to know what segment of this market also runs mod_python ? Not that
it matters a great deal (the fact that mod_perl's stats would probably beat
the pants out of mod_python's won't make me run back to the former anythime
soon).

PS2. Sorry about my huge crap. I's definitely been too long a day.


* Fabian Fagerholm <fabbe@paniq.net> [020822 03:02]:
> I was browsing around the Apache web pages when it struck me that
> mod_python is definitely not getting the exposure it could on those
> pages. There is perl.apache.org, php.apache.org and tcl.apache.org, but
> there is no python.apache.org. There isn't even a mod_python link under
> the "Sister Projects" section.
> 
> I think this is quite sad, because why shouldn't Python be an equally
> good choice as web app development language as Perl, PHP or TCL?
> 
> What I would like to do is get a link to the mod_python web site under
> the "Sister Projects" section of http://www.apache.org/, or (preferably)
> find out how a python.apache.org could be created, either as a general
> Python-Apache site or as a direct link to the mod_python web site
> (perl.apache.org is actually the mod_perl site).
> 
> Are there any opinions or further information on this matter that anyone
> would like to share? Is anyone interested in this?
> 
> Cheers,
> Fabian
> 



From fabbe at paniq.net  Thu Aug 22 12:56:46 2002
From: fabbe at paniq.net (Fabian Fagerholm)
Date: Fri Jan  9 21:59:33 2004
Subject: [mod_python] mod_python link on Apache web page?
In-Reply-To: <20020822041146.A281@eye.neb>
References: <1029997509.1695.8.camel@kernel>  <20020822041146.A281@eye.neb>
Message-ID: <1030010207.1694.127.camel@kernel>

On Thu, 2002-08-22 at 12:11, vio wrote:
> Since mod_python is so totally dependent on apache, warming up this 
> symbiotic relationship to similar levels as mod_perl and such would
> make a lot of sense.

Well put.

> Apologies to the list for my misplaced religious bull.

:)
If so, my apologies for bringing up the subject in the first place. But
I do not think there is any reasons for apologies - if there are
objections against this type of discussions on this list, there should
be a separate list for purely technical discussions and a separate list
for "mod_python politics". ;)

> python.apache.org sounds great. Provided the owners of the apache.org
> domain agree. Though as much as I'm concerned, I wouldn't waste much
> sleep if it doesn't happen.
> My opinion.

Ok. Are there other opinions? I would especially like to hear if there
are any objections.

What I think needs to be done is something this:
The issue needs blessing from Grisha. Without him being in on this, I
see no point in trying to achieve a tighter connection to the Apache
project.
        * The Python web development community outside mod_python should
          be heard. There are probably lots of people using Zope, not to
          mention those using Python as a language for cgi-bin scripts.
          Their opinion needs to be asked for. There is nothing to say
          that python.apache.org should equal mod_python, like
          perl.apache.org equals mod_perl. Perhaps python.apache.org
          should be a trimmed site with Apache-Python-related links.
          mod_python could be prominent there. The Web-Python community
          at large needs to discuss this.
        * The Apache people need to be contacted. Before this, however,
          there needs to be consensus among the people willing to
          contribute.

I'm willing to contribute some time to contacting all these different
groups of people. But I would like some more feedback from the readers
of this mailing list first.

> PS. What would be quite intriguing would be to meter the mod_python's 
> installed base.

I'll look into this as well as a separate matter.

Cheers,
Fabian

-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 240 bytes
Desc: This is a digitally signed message part
Url : http://mailman.modpython.org/pipermail/mod_python/attachments/20020822/159300e8/attachment-0002.bin
From kevin at vap.org  Thu Aug 22 10:45:07 2002
From: kevin at vap.org (kevin@vap.org)
Date: Fri Jan  9 21:59:33 2004
Subject: [mod_python] Re: IOError: [Errno 2] No such file or directory...(etc)
Message-ID: <6610-22002842214457888@vap.org>

I finally got it to work.  It was definitely just an Apache on
Windows problem.

For those interested:  It was a combination of using a User ID with
enough local rights/privileges for the services logon, combined with
using UNC pathnames instead of drive letters ("//remotesvr/files" vs
"z:/files").

Apparently the drive letter mappings (beyond any physical devices)
are only available during an interactive login, not an NT service
login (even though it was the same User ID login).

-Kevin


From grisha at modpython.org  Thu Aug 22 11:26:41 2002
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 21:59:33 2004
Subject: [mod_python] mod_python link on Apache web page?
In-Reply-To: <1030010207.1694.127.camel@kernel>
Message-ID: <Pine.BSF.4.32.0208221118260.22715-100000@eden.ispol.com>

As far as I understand, the *.apache.org domains are for projects
sponsored by Apache Software Foundation, and mod_perl happens to be one of
them. Since mod_python isn't sponsored by the Apache Software Foundation,
I don't really see it a problem that there isn't an *.apache.org site.

As far as the general exposure - we could use a little more of it, but so
could Python in genral I think.

Grisha

On 22 Aug 2002, Fabian Fagerholm wrote:

> On Thu, 2002-08-22 at 12:11, vio wrote:
> > Since mod_python is so totally dependent on apache, warming up this
> > symbiotic relationship to similar levels as mod_perl and such would
> > make a lot of sense.


From grisha at modpython.org  Thu Aug 22 17:35:07 2002
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 21:59:33 2004
Subject: [mod_python] mod_python 3 beta
In-Reply-To: <6610-22002842214457888@vap.org>
Message-ID: <Pine.BSF.4.32.0208221722190.27115-100000@eden.ispol.com>

You can grab the latest CVS snapshot at
http://www.modpython.org/dist/dev/mod_python-3.0.0-BETA.tgz

First off a warning: this is NOT production quality software, use at your
own risk!

A few notes:

1. It requires Python 2.2.1. Earlier versions of Python will not work
(though 2.2 might). The reason is that some of the objects (table and
request) are now the new Python classes as described here:
http://www.python.org/2.2.1/descrintro.html

2. It requires Apache 2.0.40, earlier versions won't compile.

3. There is no static compilation support, only DSO.

4. I've only tested it on RedHat Linux 7.3. I don't even know if it will
compile on other platforms.

5. Python*Handler directives can now take an additional argument - "|"
followed by a list of extensions. This will limit execution of the handler
to those extensions, e.g.:

PythonHandler myhandler | .pyhtml

6. There is now support for filters via PythonInputFilter and
PythonOutputFilter directives. This is kind of new and raw, so YMMV.

7. The documentation has been updated to reflect new features and changes,
though filter docs are still kind of skimpy.

There is more changes, but I can't remember them now....

Please give it a spin and send feedback to me or to the list.

Grisha


From fabbe at paniq.net  Fri Aug 23 10:10:32 2002
From: fabbe at paniq.net (Fabian Fagerholm)
Date: Fri Jan  9 21:59:33 2004
Subject: [mod_python] mod_python link on Apache web page?
In-Reply-To: <Pine.BSF.4.32.0208221118260.22715-100000@eden.ispol.com>
References: <Pine.BSF.4.32.0208221118260.22715-100000@eden.ispol.com>
Message-ID: <1030086632.969.28.camel@kernel>

On Thu, 2002-08-22 at 18:26, Gregory (Grisha) Trubetskoy wrote:
> 
> As far as I understand, the *.apache.org domains are for projects
> sponsored by Apache Software Foundation, and mod_perl happens to be one of
> them. Since mod_python isn't sponsored by the Apache Software Foundation,
> I don't really see it a problem that there isn't an *.apache.org site.

I'm not entirely sure but I don't think PHP is "sponsored" by the ASF. I
think the "projects" listed on www.apache.org are highly different in
their level of integration with the ASF. For example, PHP is largely a
separate project while mod_perl seems to be more integrated.

On the Apache Projects page
(http://www.apache.org/foundation/projects.html), I found the following:

    "The Apache Software Foundation is always looking for new or
    existing collaborative software development projects that are in
    need of a home. This includes both projects related and unrelated to
    the existing ASF projects."

mod_python does have the infrastructure in place - there's a web page
and a mailing list - so there is no need for that kind of collaboration.
But I do think the project could benefit from more exposure, and that
Apache could benefit from having closer ties with Python. You say:

> As far as the general exposure - we could use a little more of it, but so
> could Python in genral I think.

Could this be an opportunity to adress the issue?

Or to put it another way: Why should there *not* be a python.apache.org?

Cheers,
Fabian

-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 240 bytes
Desc: This is a digitally signed message part
Url : http://mailman.modpython.org/pipermail/mod_python/attachments/20020823/8117e663/attachment-0002.bin
From vmilitaru at sympatico.ca  Fri Aug 23 03:41:41 2002
From: vmilitaru at sympatico.ca (vio)
Date: Fri Jan  9 21:59:33 2004
Subject: [mod_python] mod_python link on Apache web page?
In-Reply-To: <3D65DE58.EEC33098@sympatico.ca>; from vmilitaru@sympatico.ca on Fri, Aug 23, 2002 at 03:03:53AM -0400
References: <3D65DE58.EEC33098@sympatico.ca>
Message-ID: <20020823034140.A672@eye.neb>

Fabian, I think you should just shoot the 'python.apache.org' question on the
appropriate apache mailing lists and see what happens. If something interesting
comes your way, maybe forward it to the mod_python list. But if too much shit
comes your way, maybe have a pair of scissors close by (to cut your modem line,
of course). Anyway, it's the only way to really answer your query, and seems 
to me the key resides much more on the apache side than on the mod_python side (I mean Grisha). 

Don't have to ask so many permissions. Just do it. See what happens.
Vio

> Fabian Fagerholm wrote:
> 
> > On Thu, 2002-08-22 at 18:26, Gregory (Grisha) Trubetskoy wrote:
> > >
> > > As far as I understand, the *.apache.org domains are for projects
> > > sponsored by Apache Software Foundation, and mod_perl happens to be one of
> > > them. Since mod_python isn't sponsored by the Apache Software Foundation,
> > > I don't really see it a problem that there isn't an *.apache.org site.
> >
> > I'm not entirely sure but I don't think PHP is "sponsored" by the ASF. I
> > think the "projects" listed on www.apache.org are highly different in
> > their level of integration with the ASF. For example, PHP is largely a
> > separate project while mod_perl seems to be more integrated.
> >
> > On the Apache Projects page
> > (http://www.apache.org/foundation/projects.html), I found the following:
> >
> >     "The Apache Software Foundation is always looking for new or
> >     existing collaborative software development projects that are in
> >     need of a home. This includes both projects related and unrelated to
> >     the existing ASF projects."
> >
> > mod_python does have the infrastructure in place - there's a web page
> > and a mailing list - so there is no need for that kind of collaboration.
> > But I do think the project could benefit from more exposure, and that
> > Apache could benefit from having closer ties with Python. You say:
> >
> > > As far as the general exposure - we could use a little more of it, but so
> > > could Python in genral I think.
> >
> > Could this be an opportunity to adress the issue?
> >
> > Or to put it another way: Why should there *not* be a python.apache.org?
> >
> > Cheers,
> > Fabian
> >
> >   ------------------------------------------------------------------------
> >                        Name: signature.asc
> >    signature.asc       Type: application/pgp-signature
> >                 Description: This is a digitally signed message part

From fabbe at paniq.net  Fri Aug 23 12:05:21 2002
From: fabbe at paniq.net (Fabian Fagerholm)
Date: Fri Jan  9 21:59:33 2004
Subject: [mod_python] mod_python link on Apache web page?
In-Reply-To: <20020823034140.A672@eye.neb>
References: <3D65DE58.EEC33098@sympatico.ca>  <20020823034140.A672@eye.neb>
Message-ID: <1030093521.969.47.camel@kernel>

On Fri, 2002-08-23 at 11:41, vio wrote:
> Fabian, I think you should just shoot the 'python.apache.org' question on the
> appropriate apache mailing lists and see what happens. If something interesting
> comes your way, maybe forward it to the mod_python list. But if too much shit
> comes your way, maybe have a pair of scissors close by (to cut your modem line,
> of course). Anyway, it's the only way to really answer your query, and seems 
> to me the key resides much more on the apache side than on the mod_python side
> (I mean Grisha).
>
> Don't have to ask so many permissions. Just do it. See what happens.

I agree that doing something is the only way of doing it :)

I do think there are different ways of doing things, though. Some of the
ways will inevitably lead to failure - and I'd like to avoid those.

Specifically, I want to approach the Apache Software Foundation in the
correct manner. Bargning in, yelling the name of an arbitrary reptile,
is hardly the way to go. I also want the opinion of the people currently
using the Python-Apache combination. If nobody is interested in this,
then what is the use of it?

In addition, I want to avoid making things worse for people in the
future. It might be that the issue cannot be adressed right now, but
could be adressed in the future. In that case, a previous negative
experience will not be beneficial.

But rest assured that something will be done. I have already aquired
information on the correct procedures to contact the ASF. Before I do
that, however, I will try to reach a larger part of the Python Web
community and listen to some opinions there. For all I know, someone
else might be doing this as we speak - in which case we should join
forces.

I'd welcome further discussion on this topic, and I'll post more
information when I have it.

Cheers,
Fabian

-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 240 bytes
Desc: This is a digitally signed message part
Url : http://mailman.modpython.org/pipermail/mod_python/attachments/20020823/99f0dfbc/attachment-0002.bin
From fabbe at paniq.net  Fri Aug 23 12:51:32 2002
From: fabbe at paniq.net (Fabian Fagerholm)
Date: Fri Jan  9 21:59:33 2004
Subject: [mod_python] Promoting Python as web application development language
Message-ID: <1030096292.969.85.camel@kernel>

Hello, World!

In a recent thread [0] on the mod_python [1] mailing list, I'm wondering
why there isn't a Python link on the main Apache web site. There are
PHP, Perl and Tcl links but Python is nowhere present.

It is of course evident that the lack of a link is due to the lack of
perceived usage of Python as a web application development language.
That, in turn, is due to the lack of exposure on sites like the Apache
one.

I would like to see this change. Specifically, as I write in my post on
the mod_python mailing list,

    "What I would like to do is get a link to the mod_python web site
    under the "Sister Projects" section of http://www.apache.org/, or
    (preferably) find out how a python.apache.org could be created,
    either as a general Python-Apache site or as a direct link to the
    mod_python web site (perl.apache.org is actually the mod_perl
    site)."
    
I have concluded that before any such thing can be done, the opinions of
the people currently using the Python-Apache combination (which I
suspect is no small number) need to be solicited to some degree.

I would like to hear what you think about the creation of a
"python.apache.org" (or equivalent) that would focus on the topic of web
app development with Python and Apache. I imagine the site itself being
quite slim with some essential information and links to other projects,
particularly to the mod_python site.

Also, I would like to hear about any related projects or any previous
contact to the Apache Software Foundation.


I apologise for the cross-post but I feel it is warranted in this case.
I'm only subscribed to the mod_python mailing list so please keep me or
that list Cc'ed if you reply.

Cheers,
Fabian Fagerholm

[0] http://www.modpython.org/pipermail/mod_python/2002-August/002360.html

[1] http://www.modpython.org/

-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 240 bytes
Desc: This is a digitally signed message part
Url : http://mailman.modpython.org/pipermail/mod_python/attachments/20020823/a9e059e7/attachment-0002.bin
From vmilitaru at sympatico.ca  Fri Aug 23 06:08:09 2002
From: vmilitaru at sympatico.ca (vmilitaru@sympatico.ca)
Date: Fri Jan  9 21:59:33 2004
Subject: [mod_python] mod_python link on Apache web page?
In-Reply-To: <1030093521.969.47.camel@kernel>; from fabbe@paniq.net on Fri, Aug 23, 2002 at 12:05:21PM +0300
References: <3D65DE58.EEC33098@sympatico.ca> <20020823034140.A672@eye.neb> <1030093521.969.47.camel@kernel>
Message-ID: <20020823060809.A744@eye.neb>

My reaction: all mod_python actually needs from the apache bunch is more 
'exposure', and somehow their official blessing and recognition, which is
what 'python.apache.org' or some other pointer from the 'official'
apache site gives you. 
I'm not saying you should not ask them politely for their reaction to this
request, rather something like:

"Greetings,
I'm from mod_python. We have this great apache module, but sadly we don't see
a pointer on the apache site towards our module. Since it is so similar to 
other great apache modules like mod_perl and mod_php, what would it take to
have a pointer to the mod_python site on the official apache site, alongsite
mod_perl and such ? Something like 'python.apache.org' redirecting to
'www.modpython.org' sounds quite appealing to us. Any feedback on this topic
would be appreciated.
Regards,
xxx"

Simple, direct, cutting the bull to a minimum. If that's feasible, or not,
you'll know, and why, and won't waste your time further if it's a no no. 
You don't need all this consulting the greater Python community for some link
on a web page. 
Too much politics. My little experience in 'managing an
open source project through consensus' has not been that great so far (too much
talk, too few results: each has a different opinion, so everybody
discusses ad noseam on the best way to cut the cheese). Grisha developped
mod_python on his own, and though I may be mistaken, I don't recall him 
talking about doing much consulting previous to starting that project.

Furthermore, I'm pretty sure the 'Apache Software Foundation' people is aware
of mod_python's existence, and won't confuse python to its reptilian cousin
(nor the famous british comedy group). These are pretty bright people.

My opinion (again). In case nobody else has one on this specific political 
topic, or don't agree with you, just do it anyway, and share your results 
with the list. What's the worst that can happen? Yo'll get flamed ? 

You only live once :-)
Vio


* Fabian Fagerholm <fabbe@paniq.net> [020823 05:10]:
> On Fri, 2002-08-23 at 11:41, vio wrote:
> > Fabian, I think you should just shoot the 'python.apache.org' question on the
> > appropriate apache mailing lists and see what happens. If something interesting
> > comes your way, maybe forward it to the mod_python list. But if too much shit
> > comes your way, maybe have a pair of scissors close by (to cut your modem line,
> > of course). Anyway, it's the only way to really answer your query, and seems 
> > to me the key resides much more on the apache side than on the mod_python side
> > (I mean Grisha).
> >
> > Don't have to ask so many permissions. Just do it. See what happens.
> 
> I agree that doing something is the only way of doing it :)
> 
> I do think there are different ways of doing things, though. Some of the
> ways will inevitably lead to failure - and I'd like to avoid those.
> 
> Specifically, I want to approach the Apache Software Foundation in the
> correct manner. Bargning in, yelling the name of an arbitrary reptile,
> is hardly the way to go. I also want the opinion of the people currently
> using the Python-Apache combination. If nobody is interested in this,
> then what is the use of it?
> 
> In addition, I want to avoid making things worse for people in the
> future. It might be that the issue cannot be adressed right now, but
> could be adressed in the future. In that case, a previous negative
> experience will not be beneficial.
> 
> But rest assured that something will be done. I have already aquired
> information on the correct procedures to contact the ASF. Before I do
> that, however, I will try to reach a larger part of the Python Web
> community and listen to some opinions there. For all I know, someone
> else might be doing this as we speak - in which case we should join
> forces.
> 
> I'd welcome further discussion on this topic, and I'll post more
> information when I have it.
> 
> Cheers,
> Fabian
> 



From fabbe at paniq.net  Fri Aug 23 14:01:55 2002
From: fabbe at paniq.net (Fabian Fagerholm)
Date: Fri Jan  9 21:59:33 2004
Subject: [mod_python] mod_python link on Apache web page?
In-Reply-To: <20020823060809.A744@eye.neb>
References: <3D65DE58.EEC33098@sympatico.ca> <20020823034140.A672@eye.neb>
	<1030093521.969.47.camel@kernel>  <20020823060809.A744@eye.neb>
Message-ID: <1030100515.969.106.camel@kernel>

On Fri, 2002-08-23 at 14:08, vmilitaru@sympatico.ca wrote:
[on approaching the ASF]
> Simple, direct, cutting the bull to a minimum. If that's feasible, or not,
> you'll know, and why, and won't waste your time further if it's a no no. 
> You don't need all this consulting the greater Python community for some link
> on a web page. 

I disagree. Cutting the bull to a minimum is of course desirable, but I
think you're underestimating the impact of a "python.apache.org". It's
not just "some link on a web page". It's an endorsement by an
organisation that has become quite influential over the years.

This is not to say that one should come crawling on one's knees, begging
for a "link on your web page". Instead, one should show some sign of
being a good partner with some organisational skills.

> Grisha developped
> mod_python on his own, and though I may be mistaken, I don't recall him 
> talking about doing much consulting previous to starting that project.

Grisha's contribution should definately be valued very highly. This is
the exact reason that I choose to discuss things first instead of
heading off in some unannounced direction. Since Grisha is the author of
mod_python, he should have a say in this. For instance, he might've said
that he wants to continue development in peace and quiet for a while,
and I would've backed off on this. I think asking was the least I could
do to show some respect.

> My opinion (again). In case nobody else has one on this specific political 
> topic, or don't agree with you, just do it anyway, and share your results 
> with the list. What's the worst that can happen? Yo'll get flamed ? 

Flame away :)

As you'll notice, I posted a message to python-list and the
marketing-python list, with Cc to this list. We'll see what happens and
if I feel it is the right thing to do, I'll continue with this project.

Basically, I think there's no reason to rush. If something can be done
today, it can probably be done tomorrow as well - and you'll get a
chance to think it over one more time. If tomorrow it turns out it can't
be done after all, then you'll be lucky you didn't waste time on it
today.

Cheers,
Fabian

-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 240 bytes
Desc: This is a digitally signed message part
Url : http://mailman.modpython.org/pipermail/mod_python/attachments/20020823/80c2ccad/attachment-0002.bin
From grisha at modpython.org  Fri Aug 23 08:39:33 2002
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 21:59:33 2004
Subject: [mod_python] mod_python link on Apache web page?
In-Reply-To: <1030100515.969.106.camel@kernel>
Message-ID: <Pine.BSF.4.32.0208230834550.35718-100000@eden.ispol.com>

My "official" position on this is that I don't have strong feelings one
way or the other. Being concerned with these matters is something that I
at the moment do not have a lot of time for. If someone wants to take up
the task of promoting mp, God bless'em.

Grisha

On 23 Aug 2002, Fabian Fagerholm wrote:

> On Fri, 2002-08-23 at 14:08, vmilitaru@sympatico.ca wrote:
>
> Basically, I think there's no reason to rush. If something can be done
> today, it can probably be done tomorrow as well - and you'll get a
> chance to think it over one more time. If tomorrow it turns out it can't
> be done after all, then you'll be lucky you didn't waste time on it
> today.


From neel at mediapulse.com  Fri Aug 23 11:29:53 2002
From: neel at mediapulse.com (Michael C. Neel)
Date: Fri Jan  9 21:59:33 2004
Subject: [mod_python] Promoting Python as web application development language
Message-ID: <C0FC22C08B82074A88B50061764157775B94@johnson.mediapulse.net>

Well, what a day to join the mod_python list!

I believe that mod_python needs to be more featured on the apache
website, just as mod_perl and PHP.  As a developer who has worked with
perl for quite sometime, I have run into perl's limitations in a large
scale applications.  I began to seek out other choices that offered both
performance and a strong OO base from which management of large scale
applications.  I had looked at python before, but didn't know of
mod_python - and running something in the CGI space is sooo 1996 =D

Though another project I came to find mailman, and though the mailman
docs I came to find out about mod_python.  Mailman IMHO is a strong
reason why python can compete as a "web language", offering the OO of
Java without the performance hit or running a separate server just for
Java (ala Tomcat).

I also think mod_python will begin to gain a larger following as Apache
2.0 is deployed.  Python just strikes me as a much better language to
fit in with the new format and concepts of the Apache 2.0 modules.

Perl, Python, and PHP each have their own strengths and faults when used
under Apache.  Not one of them will ever replace the need for the other,
and I hope they never try to.  Different application have different
goals and require different approaches.  I feel all warm and fuzzy
inside thinking about how the open source community has provided me with
a solution for every need.  Python is one of those solutions, and every
bit as worthy of python.apache.org as the rest.

Mike
--
Michael C. Neel
There are only 10 types of people in the world;
those who understand binary and those who don't.


-----Original Message-----
From: Fabian Fagerholm [mailto:fabbe@paniq.net] 
Sent: Friday, August 23, 2002 5:52 AM
To: marketing-python@wingide.com; python-list@python.org
Cc: mod_python@modpython.org
Subject: [mod_python] Promoting Python as web application development
language


Hello, World!

In a recent thread [0] on the mod_python [1] mailing list, I'm wondering
why there isn't a Python link on the main Apache web site. There are
PHP, Perl and Tcl links but Python is nowhere present.

It is of course evident that the lack of a link is due to the lack of
perceived usage of Python as a web application development language.
That, in turn, is due to the lack of exposure on sites like the Apache
one.

I would like to see this change. Specifically, as I write in my post on
the mod_python mailing list,

    "What I would like to do is get a link to the mod_python web site
    under the "Sister Projects" section of http://www.apache.org/, or
    (preferably) find out how a python.apache.org could be created,
    either as a general Python-Apache site or as a direct link to the
    mod_python web site (perl.apache.org is actually the mod_perl
    site)."
    
I have concluded that before any such thing can be done, the opinions of
the people currently using the Python-Apache combination (which I
suspect is no small number) need to be solicited to some degree.

I would like to hear what you think about the creation of a
"python.apache.org" (or equivalent) that would focus on the topic of web
app development with Python and Apache. I imagine the site itself being
quite slim with some essential information and links to other projects,
particularly to the mod_python site.

Also, I would like to hear about any related projects or any previous
contact to the Apache Software Foundation.


I apologise for the cross-post but I feel it is warranted in this case.
I'm only subscribed to the mod_python mailing list so please keep me or
that list Cc'ed if you reply.

Cheers,
Fabian Fagerholm

[0]
http://www.modpython.org/pipermail/mod_python/2002-August/002360.html

[1] http://www.modpython.org/



From grisha at modpython.org  Fri Aug 23 11:32:13 2002
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 21:59:34 2004
Subject: [mod_python] 3.0 beta dll now available
In-Reply-To: <1030100515.969.106.camel@kernel>
Message-ID: <Pine.BSF.4.32.0208231129430.37364-100000@eden.ispol.com>

For Windows users, I managed to compile a DLL, and the "hello world" test
passed OK on Win2K.

You can get it at

http://www.modpython.org/dist/dev/3.0.0-BETA-python2.2.1-apache2.0.40.zip

Grisha


From rien at yeepa.org  Fri Aug 23 18:43:12 2002
From: rien at yeepa.org (Adrien Plisson)
Date: Fri Jan  9 21:59:34 2004
Subject: [mod_python] 3.0 beta dll now available
References: <Pine.BSF.4.32.0208231129430.37364-100000@eden.ispol.com>
Message-ID: <002e01c24ac4$2e6a7790$0a020101@skynet.be>

From: "Gregory (Grisha) Trubetskoy" <grisha@modpython.org>
> For Windows users, I managed to compile a DLL, and the "hello world" test
> passed OK on Win2K.

cooooool ! I won't have to do it on my own, though it could be of great
experience...

that's too bad i don't have time to look further at it, but the new apache
2.0 features looks great and will surely enable me to meet my goals sooner
than expected. it's great that mod_python is getting this way.

btw, i would like to thank you, grisha, for all the work you're doing, and
all the time you spend on mod_python. it ruuuules !

--
rien


From vmilitaru at sympatico.ca  Fri Aug 23 18:22:19 2002
From: vmilitaru at sympatico.ca (vio)
Date: Fri Jan  9 21:59:34 2004
Subject: [mod_python] Promoting Python as web application development language
Message-ID: <20020823182218.A304@eye.neb>

Greetings to Apache Board Members,

Apoligies to Fabian Fagerholm for short-cutting his efforts with this message.
But I just wanted to cut the bull and go straight to the point: we have this
great apache module called mod_python, thanks to Gregory (Grisha) Trubetskoy, 
suffering from a big lack of exposure. We strongly believe this great piece 
of technology (which is the marriage of apache + python) deserves a place 
alongside mod_perl and mod_ssl 'on the main apache site'. Understanbably,
mod_python is not an Apache Foundation project (rather it's Grisha's project).
Yet, there is such a symbiotic relationship between apache and mod_python,
what would it take to have a link on the main apache side to the 'python'
web-app alternative, in the Apache Projects section of the 
LEFT SIDE NAVIGATION ?

   Apache Projects
     HTTP Server
     APR
     Jakarta
     Perl
     Python    <-- something like this, linking to www.mod_python.org,
     PHP           or to 'python.apache.org' which would redirect to
     TCL           www.mod_python.org (or something along those lines)
     XML
     Conferences
     Foundation

In conclusion, I believe this is a great opportunity for greater integration
between the main apache movement, and the independent mod_python effort.
In my view, Apache needs a strong python alternative alongside Perl and such, 
while mod_python gains greater exposure and 'official blessing' from the Apache
Software Foundation.

Please send your reactions, comments, suggestions on this topic directly to the
mod_python mailing list at 'mod_python@modpython.org'.
If this is not the appropriate forum to discuss this topic, please redirect
my message as appropriate.

Thank You kindly for your time,
Vio


PS. Included 2 recent messages from the mod_python list outlining the need for
a direct link between apache main site and mod_python:

* Michael C. Neel <neel@mediapulse.com> wrote:
> Well, what a day to join the mod_python list!
> 
> I believe that mod_python needs to be more featured on the apache
> website, just as mod_perl and PHP.  As a developer who has worked with
> perl for quite sometime, I have run into perl's limitations in a large
> scale applications.  I began to seek out other choices that offered both
> performance and a strong OO base from which management of large scale
> applications.  I had looked at python before, but didn't know of
> mod_python - and running something in the CGI space is sooo 1996 =D
> 
> Though another project I came to find mailman, and though the mailman
> docs I came to find out about mod_python.  Mailman IMHO is a strong
> reason why python can compete as a "web language", offering the OO of
> Java without the performance hit or running a separate server just for
> Java (ala Tomcat).
> 
> I also think mod_python will begin to gain a larger following as Apache
> 2.0 is deployed.  Python just strikes me as a much better language to
> fit in with the new format and concepts of the Apache 2.0 modules.
> 
> Perl, Python, and PHP each have their own strengths and faults when used
> under Apache.  Not one of them will ever replace the need for the other,
> and I hope they never try to.  Different application have different
> goals and require different approaches.  I feel all warm and fuzzy
> inside thinking about how the open source community has provided me with
> a solution for every need.  Python is one of those solutions, and every
> bit as worthy of python.apache.org as the rest.
> 
> Mike
> --
> Michael C. Neel
> There are only 10 types of people in the world;
> those who understand binary and those who don't.
> 
> 
> -----Original Message-----
> From: Fabian Fagerholm [mailto:fabbe@paniq.net] 
> Sent: Friday, August 23, 2002 5:52 AM
> To: marketing-python@wingide.com; python-list@python.org
> Cc: mod_python@modpython.org
> Subject: [mod_python] Promoting Python as web application development
> language
> 
> 
> Hello, World!
> 
> In a recent thread [0] on the mod_python [1] mailing list, I'm wondering
> why there isn't a Python link on the main Apache web site. There are
> PHP, Perl and Tcl links but Python is nowhere present.
> 
> It is of course evident that the lack of a link is due to the lack of
> perceived usage of Python as a web application development language.
> That, in turn, is due to the lack of exposure on sites like the Apache
> one.
> 
> I would like to see this change. Specifically, as I write in my post on
> the mod_python mailing list,
> 
>     "What I would like to do is get a link to the mod_python web site
>     under the "Sister Projects" section of http://www.apache.org/, or
>     (preferably) find out how a python.apache.org could be created,
>     either as a general Python-Apache site or as a direct link to the
>     mod_python web site (perl.apache.org is actually the mod_perl
>     site)."
>     
> I have concluded that before any such thing can be done, the opinions of
> the people currently using the Python-Apache combination (which I
> suspect is no small number) need to be solicited to some degree.
> 
> I would like to hear what you think about the creation of a
> "python.apache.org" (or equivalent) that would focus on the topic of web
> app development with Python and Apache. I imagine the site itself being
> quite slim with some essential information and links to other projects,
> particularly to the mod_python site.
> 
> Also, I would like to hear about any related projects or any previous
> contact to the Apache Software Foundation.
> 
> 
> I apologise for the cross-post but I feel it is warranted in this case.
> I'm only subscribed to the mod_python mailing list so please keep me or
> that list Cc'ed if you reply.
> 
> Cheers,
> Fabian Fagerholm
> 
> [0]
> http://www.modpython.org/pipermail/mod_python/2002-August/002360.html
> 
> [1] http://www.modpython.org/
> 
> 
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://www.modpython.org/mailman/listinfo/mod_python



From jfk at metation.com  Sat Aug 24 10:16:42 2002
From: jfk at metation.com (=?iso-8859-1?q?J=F8rgen=20Fr=F8jk=20Kj=E6rsgaard=20{Metation}?=)
Date: Fri Jan  9 21:59:34 2004
Subject: [mod_python] Promoting Python as web application development language
In-Reply-To: <20020823182218.A304@eye.neb>
References: <20020823182218.A304@eye.neb>
Message-ID: <02082410164204.00306@grace.metation.com>

L?rdag 24. August 2002 01:22 skrev du:
> Yet, there is such a symbiotic relationship between
> apache and mod_python, what would it take to have a link on the main apache
> side to the 'python' web-app alternative, in the Apache Projects section of
> the
> LEFT SIDE NAVIGATION ?
>
>    Apache Projects
>      HTTP Server
>      APR
>      Jakarta
>      Perl
>      Python    <-- something like this, linking to www.mod_python.org,
>      PHP           or to 'python.apache.org' which would redirect to
>      TCL           www.mod_python.org (or something along those lines)
>      XML
>      Conferences
>      Foundation

As Fabian Fagerholm wrote aug 22nd, I believe python.apache.org shouldn't 
equal mod_python. Although mod_python is a great product, it isn't the only 
way to use Python with Apache.

The community around mod_dtcl took the initial initiative to move to 
tcl.apache.org and invited the other Tcl alternatives to join in. This has 
now resulted in a new module, Apache Rivet, which combines the efforts of 
mod_dtcl and neowebscript.

If a similar symbiosis can be archived in the Python web community, I believe 
it we benefit all of us. On the other hand, if python.apache.org == 
mod_python, it may split the Python web community.

/jfk

-- 
J?rgen Fr?jk Kj?rsgaard, direkt?r og systemkonsulent
Metation aps - Kystvejen 29, DK-8000 ?rhus C
Web: www.metation.com  - Tlf: +45 8625 0038 - Mobil: +45 2925 6693

From vmilitaru at sympatico.ca  Sat Aug 24 05:36:26 2002
From: vmilitaru at sympatico.ca (vio)
Date: Fri Jan  9 21:59:34 2004
Subject: [mod_python] Promoting Python as web application development language
In-Reply-To: <02082410164204.00306@grace.metation.com>; from jfk@metation.com on Sat, Aug 24, 2002 at 10:16:42AM +0200
References: <20020823182218.A304@eye.neb> <02082410164204.00306@grace.metation.com>
Message-ID: <20020824053625.A685@eye.neb>

Hi Jorgen,
Thanks for your feedback and info on the interesting Rivet history.

Please note that I am speaking entirely from a user's perspective, and my 
little initiative was entirely triggered by Fabian's on the mod_python list, 
which has such a great and obvious point: one way or the other, 
apache misses a 'python play', alongside perl and tcl and such. 
I don't want to offend any egoes, but as a user, I don't really care whether 
apache's python play embraces mod_python or zope, or some other I don't know
about. I'm just a web app coder.

I do disagree with your point that if python.apache.org == mod_python, 
it may split the Python web community. For a simple but obvious reason:
the community is already split as it stands right now. For example, I don't 
see any cooperation whatsoever between the mod_python users and the zope people
(being an old zope user myself who switched to mod_python). From my perspective
python.apache.org == mod_python looks like a ralying point (an analogy which 
comes to mind as I write this being Bill Gate's Pearl Harbor Day speech, which
managed to totally shifted MS on its head, towards the Internet). A ralying
point is hugely powerful.

If I read your Rivet analogy correctly, apache might be interested in giving 
its 'official' blessing (i.e. the powerful 'python.apache.org') to the python 
project who will manage to rally support from the web-python community at 
large. In this regard, Fabian's latest PR makes a lot of sense. 

But again speaking from a user's perspective, if I consider the 2 web-python
packages I know a little about - zope and mod_python - I don't see those code 
bases integrating anytime soon (simply because they serve 2 quite different 
audiences, and I would think they are rather entrenched). Because of this, 
should there be no 'python.apache.org' ?

I disagree. As long as there will be no official ralying point to attract
python+apache afficionados on a 'single point of effort', parallel efforts 
will continue to florish, each more or less re-inventing the proverbial 
wheel. And not cooperating very much, I would think.

In conclusion, whatever the politics behind this topic, apache needs a python
play. I believe this is Fabian's main point, and I am totally sold on it.
But from a web app coder's perspective, give me a great tool to program 
apache in python, and I'll embrace it, whatever it's called. 
It just happened that, though I may be wrong, for the time being the best tool 
available is mod_python.

Regards,
Vio

* J?rgen Fr?jk Kj?rsgaard {Metation} <jfk@metation.com> [020824 04:29]:
> L?rdag 24. August 2002 01:22 skrev du:
> > Yet, there is such a symbiotic relationship between
> > apache and mod_python, what would it take to have a link on the main apache
> > side to the 'python' web-app alternative, in the Apache Projects section of
> > the
> > LEFT SIDE NAVIGATION ?
> >
> >    Apache Projects
> >      HTTP Server
> >      APR
> >      Jakarta
> >      Perl
> >      Python    <-- something like this, linking to www.mod_python.org,
> >      PHP           or to 'python.apache.org' which would redirect to
> >      TCL           www.mod_python.org (or something along those lines)
> >      XML
> >      Conferences
> >      Foundation
> 
> As Fabian Fagerholm wrote aug 22nd, I believe python.apache.org shouldn't 
> equal mod_python. Although mod_python is a great product, it isn't the only 
> way to use Python with Apache.
> 
> The community around mod_dtcl took the initial initiative to move to 
> tcl.apache.org and invited the other Tcl alternatives to join in. This has 
> now resulted in a new module, Apache Rivet, which combines the efforts of 
> mod_dtcl and neowebscript.
> 
> If a similar symbiosis can be archived in the Python web community, I believe 
> it we benefit all of us. On the other hand, if python.apache.org == 
> mod_python, it may split the Python web community.
> 
> /jfk
> 
> -- 
> J?rgen Fr?jk Kj?rsgaard, direkt?r og systemkonsulent
> Metation aps - Kystvejen 29, DK-8000 ?rhus C
> Web: www.metation.com  - Tlf: +45 8625 0038 - Mobil: +45 2925 6693
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://www.modpython.org/mailman/listinfo/mod_python

From vmilitaru at sympatico.ca  Sat Aug 24 09:15:59 2002
From: vmilitaru at sympatico.ca (vio)
Date: Fri Jan  9 21:59:34 2004
Subject: [mod_python] Promoting Python as web application development language
In-Reply-To: <02082413555205.00306@grace.metation.com>; from jfk@metation.com on Sat, Aug 24, 2002 at 01:55:52PM +0200
References: <20020823182218.A304@eye.neb> <02082410164204.00306@grace.metation.com> <20020824053625.A685@eye.neb> <02082413555205.00306@grace.metation.com>
Message-ID: <20020824091559.A956@eye.neb>

Again Jorgen, many thanks for your reply. In a couple of emails you outlined
the framework of a possible 'python.apache.org' project. Its goals, both 
strategic (to promote a unified effort in making Python a language of choice 
on the Apache server) and tactical or technical (to integrate the main 
python_on_apache codebases, while maintaining an open door to alternatives)
are quite clear. The writing on the wall is "cooperation". I would take it 
that your views more or less reflect those of the apache board. Excellent.

Well, Fabian, I hope this would be of some help for your PR efforts, so best
of luck and hopefully you'll keep us in touch of your progress on the 
mod_python list. I guess it's your call from now on.

Warm regards,
Vio

* J?rgen Fr?jk Kj?rsgaard {Metation} <jfk@metation.com> [020824 08:39]:
> L?rdag 24. August 2002 12:36 skrev du:
> > If I read your Rivet analogy correctly, apache might be interested in
> > giving its 'official' blessing (i.e. the powerful 'python.apache.org') to
> > the python project who will manage to rally support from the web-python
> > community at large. In this regard, Fabian's latest PR makes a lot of
> > sense.
> 
> Exactly.
> 
> > But again speaking from a user's perspective, if I consider the 2
> > web-python packages I know a little about - zope and mod_python - I don't
> > see those code bases integrating anytime soon (simply because they serve 2
> > quite different audiences, and I would think they are rather entrenched).
> > Because of this, should there be no 'python.apache.org' ?
> 
> There should be a python.apache.org. The question is who should be part of 
> it? mod_python and Zope are very unlikely to integrate, but some cooperation 
> may be possible. In the open source desktop area, KDE and Gnome actually use 
> some common code today (KDE depends on the GNOME XML core libraries), even 
> though the groups couldn't stand eachother a few years ago.
> 
> On the other hand, you are right when you say that Zope doesn't fit very well 
> in. Zope is not very tightly integrated with Apache. A "zope.apache.org" 
> would be very unlikely.
> 
> I think python.apache.org should consist of mod_python, mod_snake, CGI Python 
> and maybe a few others that I haven't even head about yet. Some time in the 
> future, mod_python and mod_snake may integrate, though it may not seem 
> possible today. A couple of years ago Rivet didn't seem possible either!
> 
> tcl.apache.org succeeded because it is open to alternatives, it isn't one 
> mod_*.
> 
> > I disagree. As long as there will be no official ralying point to attract
> > python+apache afficionados on a 'single point of effort', parallel efforts
> > will continue to florish, each more or less re-inventing the proverbial
> > wheel. And not cooperating very much, I would think.
> 
> Maybe our thoughts are not that different at all... The purpose of 
> python.apache.org should be to expose Python more _and_ to promote a more 
> unified effort in making Python a language of choice on the Apache server.
> 
> regards, J?rgen
> 
> -- 
> J?rgen Fr?jk Kj?rsgaard, direkt?r og systemkonsulent
> Metation aps - Kystvejen 29, DK-8000 ?rhus C
> Web: www.metation.com  - Tlf: +45 8625 0038 - Mobil: +45 2925 6693

From neel at mediapulse.com  Sat Aug 24 16:29:39 2002
From: neel at mediapulse.com (Michael Neel)
Date: Fri Jan  9 21:59:34 2004
Subject: [mod_python] Promoting Python as web application development language
In-Reply-To: <20020824091559.A956@eye.neb>
Message-ID: <000401c24bac$f967e930$0400a8c0@clapton>

Would it make since to have python.apache.org work the same as
jakarta.apache.org?  Then have mod_python, mod_snake, and any other
efforts listed as sub-projects.  Zope could be related link, but it
really does fit in with what I think of when I think "mod_python".  I
want mod_python to provide 2 very key parts; 1. provided an embedded
interperter so I can speed up a existing python code with little effort
and 2. provide a python API version of the Apache API. (I'm not saying
we don't have these bases covered, just say what I'm looking for in a
mod python project).  Zope is a tool for a different job.

If the sticking point is wether python.apache.org jumps to mod_python or
mod_snake, then just solve that now by linking to both as the java pages
do.  Once python has a higher visibility, the community will help it
become whatever it needs to become with reguards to apache.

BTW anyone want to make RedHat stop shipping python 1.5 as default and
giving you mod_python built against 1.5 as well? I can dream can't I?

Anyone ask Guido if he would make a phone call? =D

Mike
--
Michael C. Neel
There are only 10 types of people in the world;
those who understand binary and those who don't.


-----Original Message-----
From: mod_python-admin@modpython.org
[mailto:mod_python-admin@modpython.org] On Behalf Of vio
Sent: Saturday, August 24, 2002 10:16 AM
To: J?rgen Fr?jk Kj?rsgaard {Metation}
Cc: mod_python@modpython.org
Subject: Re: [mod_python] Promoting Python as web application
development language


Again Jorgen, many thanks for your reply. In a couple of emails you
outlined the framework of a possible 'python.apache.org' project. Its
goals, both 
strategic (to promote a unified effort in making Python a language of
choice 
on the Apache server) and tactical or technical (to integrate the main 
python_on_apache codebases, while maintaining an open door to
alternatives) are quite clear. The writing on the wall is "cooperation".
I would take it 
that your views more or less reflect those of the apache board.
Excellent.

Well, Fabian, I hope this would be of some help for your PR efforts, so
best of luck and hopefully you'll keep us in touch of your progress on
the 
mod_python list. I guess it's your call from now on.

Warm regards,
Vio

* J?rgen Fr?jk Kj?rsgaard {Metation} <jfk@metation.com> [020824 08:39]:
> L?rdag 24. August 2002 12:36 skrev du:
> > If I read your Rivet analogy correctly, apache might be interested 
> > in giving its 'official' blessing (i.e. the powerful 
> > 'python.apache.org') to the python project who will manage to rally 
> > support from the web-python community at large. In this regard, 
> > Fabian's latest PR makes a lot of sense.
> 
> Exactly.
> 
> > But again speaking from a user's perspective, if I consider the 2 
> > web-python packages I know a little about - zope and mod_python - I 
> > don't see those code bases integrating anytime soon (simply because 
> > they serve 2 quite different audiences, and I would think they are 
> > rather entrenched). Because of this, should there be no 
> > 'python.apache.org' ?
> 
> There should be a python.apache.org. The question is who should be 
> part of
> it? mod_python and Zope are very unlikely to integrate, but some
cooperation 
> may be possible. In the open source desktop area, KDE and Gnome
actually use 
> some common code today (KDE depends on the GNOME XML core libraries),
even 
> though the groups couldn't stand eachother a few years ago.
> 
> On the other hand, you are right when you say that Zope doesn't fit 
> very well
> in. Zope is not very tightly integrated with Apache. A
"zope.apache.org" 
> would be very unlikely.
> 
> I think python.apache.org should consist of mod_python, mod_snake, CGI

> Python
> and maybe a few others that I haven't even head about yet. Some time
in the 
> future, mod_python and mod_snake may integrate, though it may not seem

> possible today. A couple of years ago Rivet didn't seem possible
either!
> 
> tcl.apache.org succeeded because it is open to alternatives, it isn't 
> one
> mod_*.
> 
> > I disagree. As long as there will be no official ralying point to 
> > attract
> > python+apache afficionados on a 'single point of effort', parallel 
> > python+efforts
> > will continue to florish, each more or less re-inventing the 
> > proverbial wheel. And not cooperating very much, I would think.
> 
> Maybe our thoughts are not that different at all... The purpose of
> python.apache.org should be to expose Python more _and_ to promote a
more 
> unified effort in making Python a language of choice on the Apache
server.
> 
> regards, J?rgen
> 
> --
> J?rgen Fr?jk Kj?rsgaard, direkt?r og systemkonsulent
> Metation aps - Kystvejen 29, DK-8000 ?rhus C
> Web: www.metation.com  - Tlf: +45 8625 0038 - Mobil: +45 2925 6693
_______________________________________________
Mod_python mailing list
Mod_python@modpython.org
http://www.modpython.org/mailman/listinfo/mod_python



From vmilitaru at sympatico.ca  Sat Aug 24 22:24:38 2002
From: vmilitaru at sympatico.ca (vio)
Date: Fri Jan  9 21:59:34 2004
Subject: [mod_python] Promoting Python as web application development language
In-Reply-To: <000401c24bac$f967e930$0400a8c0@clapton>; from neel@mediapulse.com on Sat, Aug 24, 2002 at 04:29:39PM -0400
References: <20020824091559.A956@eye.neb> <000401c24bac$f967e930$0400a8c0@clapton>
Message-ID: <20020824222438.A313@eye.neb>

* Michael Neel <neel@mediapulse.com> [020824 21:18]:
> Would it make since to have python.apache.org work the same as
> jakarta.apache.org?  Then have mod_python, mod_snake, and any other
> efforts listed as sub-projects.  

Yes, sounds interesting. Though I also agree with Jorgen's point in 
consolidating efforts. I haven't really touched mod_snake, but if it 
essentially duplicates the mod_python functionality, what's the point of
having 2 siamese twins consuming programmers' cycles? 
In such a situation, I'd say let's put them both on some serious neutral 
benchmark tests, choose the best of the breed, then focus all efforts on it 
(and sidestep the other in the name of the common good). Egoes will be bruised
in the process, but as Spock said in 'the Wrath of Khan': ... 

> Zope could be related link, but it
> really does fit in with what I think of when I think "mod_python".  I
> want mod_python to provide 2 very key parts; 1. provided an embedded
> interperter so I can speed up a existing python code with little effort
> and 2. provide a python API version of the Apache API. (I'm not saying
> we don't have these bases covered, just say what I'm looking for in a
> mod python project).  Zope is a tool for a different job.

Zope is not an apache module. Hence, Zope almost jumps out of topic.

My vision of a python.apache.org is a lot closer to perl.apache.org.
I'm an old user of mod_perl... until I discovered python couple of years ago. 
And never looked back since.
How can I put it? I want to do mod_perl, but while writing in python.
So I'm rather leaning towards Jorgen's vision of a consolidated effort
and cooperation between projects, eventually merging somewhere down the line.
I'd want the Apache Foundation to give the same treatment to python it now
gives perl (java, tcl, ...). Nothing more, nothing less.
Then eventually I'd want O'Reilly to update their 'Writing Apache Modules with 
Perl and C' to something like 'Writing Apache Modules with Perl, Python and C'.

I have this weird feeling python is one of those totally underestimated jewels
of the open source movement. Guido achieved a jewel of a programming language.
This should definitely put python on the (web programming) map,
give it the visibility it (rightfully!) deserves. AND democratize web 
programming (python is so easy and clean, my grandmother could write web apps).

Vio

From jack_diederich at email.com  Sat Aug 24 22:29:59 2002
From: jack_diederich at email.com (Jack Diederich)
Date: Fri Jan  9 21:59:34 2004
Subject: [mod_python] Promoting Python as web application development
    language
Message-ID: <20020825032959.12775.qmail@email.com>

> * Michael Neel <neel@mediapulse.com> [020824 21:18]:
> > Would it make since to have python.apache.org work the same as
> > jakarta.apache.org?  Then have mod_python, mod_snake, and any other
> > efforts listed as sub-projects.  
> 

mod_snake is dead [modsnake.sourceforge.net] according to the author
zope is well ... zope and has as much to with with Apache as it does IIS,
or squid, or freecell.

python.apache.org seems like a good pragmatic idea, I think the possibility
of a holy war or bruised egos has been over hyped in this discussion.
mod_python is the apache integration that serves the small but growing group
of people writing python web apps with apache.  There isn't much else to
say, lets not lose perspective - it's a sub-domain name (domain sub-name?).

I haven't had time to go over the mod_snake sources yet, but there may
be some good stuff in there.  I don't think that changes anything.
(as a terrible metric, the mod_snake tarball is 100k larger than
mod_python).  If people ressurect some of the code by patching mod_python,
great.

-jackdied

.sig
There is a fine line between being The Man, and being That Guy

-- 
__________________________________________________________
Sign-up for your own FREE Personalized E-mail at Mail.com
http://www.mail.com/?sr=signup


From alain at onesite.org  Sun Aug 25 05:37:37 2002
From: alain at onesite.org (Alain Tesio)
Date: Fri Jan  9 21:59:34 2004
Subject: [mod_python] Promoting Python as web application development language
In-Reply-To: <20020824222438.A313@eye.neb>
References: <20020824091559.A956@eye.neb>
	<000401c24bac$f967e930$0400a8c0@clapton>
	<20020824222438.A313@eye.neb>
Message-ID: <20020825053737.5ce9a280.alain@onesite.org>

On Sat, 24 Aug 2002 22:24:38 -0500
vio <vmilitaru@sympatico.ca> wrote:

> I haven't really touched mod_snake, but if it 
> essentially duplicates the mod_python functionality, what's the point of
> having 2 siamese twins consuming programmers' cycles? 

mod_snake died some months ago

http://modsnake.sourceforge.net/
http://apache.slashdot.org/apache/02/05/12/0419208.shtml?tid=148

Alain

From alain at onesite.org  Sun Aug 25 05:57:48 2002
From: alain at onesite.org (Alain Tesio)
Date: Fri Jan  9 21:59:34 2004
Subject: [mod_python] Promoting Python as web application development language
In-Reply-To: <20020825032959.12775.qmail@email.com>
References: <20020825032959.12775.qmail@email.com>
Message-ID: <20020825055748.04878b30.alain@onesite.org>

On Sat, 24 Aug 2002 22:29:59 -0500
"Jack Diederich" <jack_diederich@email.com> wrote:

> 
> I haven't had time to go over the mod_snake sources yet, but there may
> be some good stuff in there.  I don't think that changes anything.
> (as a terrible metric, the mod_snake tarball is 100k larger than
> mod_python).  If people ressurect some of the code by patching mod_python,
> great.

Here is an interesting comment in the slashdot dicussion, no idea if all points
are valid though.

Alain


bye bye (Score:3, Informative) 
by DrSkwid (`moc.elbbubtnuc' `ta' `mapshsals') on Sunday May 12, @06:23AM (#3505266) 
(User #118965 Info | http://www.hardlight.couk.com/) 


I was one of the people bugging him for updates, I could never get it to compile of
FreeBSD for me.

I ended up going over to mod_python.

Shame because one of the premises of mod_snake was the concept of nested python
interpreters. Like Apache itself mod_snake had one thread and then passed the request
on to another python interpreterrunning as a sub thread so that you could maintain
state between requests by using the same interpreter.

It sounded interesting, but I never got the chance to find out.

mod_python has the annoying attribute of requiring the whole python installation to
be compiled as single threaded which means some modules don't work (urllib for
instance - so you have to roll your own url en/decoder). Which then leaves you in the
stick world of two python installations of you want to use sockets and threads in
other applications.

I've still not sussed out how to easily manage two installations :(

mod_python does rule though, I much prefer using it to php or standard CGI and I'm
so glad I dont have to learn any more of mod_perl than the rudimentrary stuff I
picked from reading the O'Reilly mod_perl book.

From barr at cs.cornell.edu  Sun Aug 25 00:13:56 2002
From: barr at cs.cornell.edu (Rimon Barr)
Date: Fri Jan  9 21:59:34 2004
Subject: [mod_python] python.apache.org
In-Reply-To: <20020825053737.5ce9a280.alain@onesite.org>
Message-ID: <Pine.LNX.4.44.0208250008190.11744-100000@pompom.u.cs.cornell.edu>

A suggestion... The following list (+Spyce!) [1] could be a useful
starting point as a list to prune from for projects for python.apache.org.
I believe python.apache.org is a great idea, and will give the Python
community additional visibility and users. I also think that it should be
an inclusive site (like java.apache.org and xml.apache.org) that serves as
a registry of mature web-related python-based projects.

[1] - http://spyce.sourceforge.net/doc_related.html

All the best,
Rimon.
-- 
 * Rimon Barr       Ph.D. candidate, Computer Science, Cornell University
 | barr@cs.cornell.edu - http://www.cs.cornell.edu/barr - Y!IM: batripler
 |
 | Understanding is a kind of ecstasy.
 +----                                   -- Carl Sagan


From vmilitaru at sympatico.ca  Sun Aug 25 00:37:51 2002
From: vmilitaru at sympatico.ca (vio)
Date: Fri Jan  9 21:59:34 2004
Subject: [mod_python] Promoting Python as web application development language
In-Reply-To: <20020825032959.12775.qmail@email.com>; from jack_diederich@email.com on Sat, Aug 24, 2002 at 10:29:59PM -0500
References: <20020825032959.12775.qmail@email.com>
Message-ID: <20020825003751.A388@eye.neb>

* Jack Diederich <jack_diederich@email.com> [020824 23:47]:
> mod_snake is dead [modsnake.sourceforge.net] according to the author

Sounds to me like a step towards 'python.apache.org == mod_python'. 
Perhaps Jorgen's fears that such a move may split the 'web python community' 
may have been a little premature. Perhaps the current 'web python community' 
may not be as big as initially estimated (a fact that python.apache.org is
intended to remedy).

> zope is well ... zope and has as much to with with Apache as it does IIS,
> or squid, or freecell.

I agree. It's quite big and getting bigger. Though my main issue with zope was 
that it simply didn't scale well for projects with more than a few hundred 
objects (at least from my experience). Perhaps because it uses a python-based
object database, which is not very performant for large scale projects. 
But I will recommend it nevertheless as an introductory environment to web 
programming (I really learned a lot in my zope days).

Vio

> python.apache.org seems like a good pragmatic idea, I think the possibility
> of a holy war or bruised egos has been over hyped in this discussion.
> mod_python is the apache integration that serves the small but growing group
> of people writing python web apps with apache.  There isn't much else to
> say, lets not lose perspective - it's a sub-domain name (domain sub-name?).
> 
> I haven't had time to go over the mod_snake sources yet, but there may
> be some good stuff in there.  I don't think that changes anything.
> (as a terrible metric, the mod_snake tarball is 100k larger than
> mod_python).  If people ressurect some of the code by patching mod_python,
> great.
> 
> -jackdied

From jfk at metation.com  Sun Aug 25 19:29:06 2002
From: jfk at metation.com (=?iso-8859-1?q?J=F8rgen=20Fr=F8jk=20Kj=E6rsgaard=20{Metation}?=)
Date: Fri Jan  9 21:59:34 2004
Subject: [mod_python] Promoting Python as web application development language
In-Reply-To: <20020825003751.A388@eye.neb>
References: <20020825032959.12775.qmail@email.com> <20020825003751.A388@eye.neb>
Message-ID: <02082519290602.00315@grace.metation.com>

S?ndag 25. August 2002 07:37 skrev vio:
> * Jack Diederich <jack_diederich@email.com> [020824 23:47]:
> > mod_snake is dead [modsnake.sourceforge.net] according to the author
>
> Sounds to me like a step towards 'python.apache.org == mod_python'.
> Perhaps Jorgen's fears that such a move may split the 'web python
> community' may have been a little premature. Perhaps the current 'web
> python community' may not be as big as initially estimated (a fact that
> python.apache.org is intended to remedy).

If there really is nothing but Zope, which isn't an Apache module, and 
mod_python, there is no reason not to go ahead with python.apache.org == 
mod_python. I wasn't aware that mod_snake was dead (I never even bothered to 
try it - mod_python works fine ;-). Just keep the door open to other existing 
or new Pyton+Apache projects. The main reason for Apaches huge success is its 
openness - this openness should be kept in subprojects like python.apache.org,


regards, J?rgen

-- 
J?rgen Fr?jk Kj?rsgaard, direkt?r og systemkonsulent
Metation aps - Kystvejen 29, DK-8000 ?rhus C
Web: www.metation.com  - Tlf: +45 8625 0038 - Mobil: +45 2925 6693

From fabbe at paniq.net  Sun Aug 25 21:31:46 2002
From: fabbe at paniq.net (Fabian Fagerholm)
Date: Fri Jan  9 21:59:34 2004
Subject: [mod_python] Promoting Python as web application development
	language
In-Reply-To: <20020824091559.A956@eye.neb>
References: <20020823182218.A304@eye.neb>
	<02082410164204.00306@grace.metation.com> <20020824053625.A685@eye.neb>
	<02082413555205.00306@grace.metation.com>  <20020824091559.A956@eye.neb>
Message-ID: <1030300307.1041.29.camel@kernel>

On Sat, 2002-08-24 at 17:15, vio wrote:
> Well, Fabian, I hope this would be of some help for your PR efforts, so best
> of luck and hopefully you'll keep us in touch of your progress on the 
> mod_python list. I guess it's your call from now on.

Actually, no.

You decided to pursue a different course of action than I - a direct
mailing to the Apache Software Foundation Board - at this point. I
clearly stated that I wanted some discussion on this topic first. There
has been some discussion and some valuable points have been raised, but
I was not yet ready to proceed to the next stage.

Therefore, I regard your actions as your own, and you must take
responsibility for them. I hope you will relay any response from the ASF
Board to this mailing list. I also hope you come up with a good way of
redirecting any future correspondence to me or this list if you do not
wish to take over this effort.

I suggest the next time you have an urge to spill your beans, do it in
your own house where there are people to help you clean up your mess.


This effort will now have to be put on hold until we know whether or not
the ASF Board is going to respond to Mr. Vio's message.


Meanwhile, there are things to do. Interested parties please send me
private e-mail.

Fabian

-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 240 bytes
Desc: This is a digitally signed message part
Url : http://mailman.modpython.org/pipermail/mod_python/attachments/20020825/2e1d4cca/attachment-0002.bin
From fabbe at paniq.net  Sun Aug 25 21:34:37 2002
From: fabbe at paniq.net (Fabian Fagerholm)
Date: Fri Jan  9 21:59:34 2004
Subject: [mod_python] mod_python link on Apache web page?
In-Reply-To: <Pine.BSF.4.32.0208230834550.35718-100000@eden.ispol.com>
References: <Pine.BSF.4.32.0208230834550.35718-100000@eden.ispol.com>
Message-ID: <1030300477.972.32.camel@kernel>

On Fri, 2002-08-23 at 15:39, Gregory (Grisha) Trubetskoy wrote:
> 
> My "official" position on this is that I don't have strong feelings one
> way or the other. Being concerned with these matters is something that I
> at the moment do not have a lot of time for. If someone wants to take up
> the task of promoting mp, God bless'em.

Grisha, thank you for these words. They explain your position very
clearly.

I'm looking forward to seeing further mod_python development from you!

Cheers,
Fabian

-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 240 bytes
Desc: This is a digitally signed message part
Url : http://mailman.modpython.org/pipermail/mod_python/attachments/20020825/57e2b739/attachment-0002.bin
From vmilitaru at sympatico.ca  Sun Aug 25 20:32:58 2002
From: vmilitaru at sympatico.ca (vio)
Date: Fri Jan  9 21:59:34 2004
Subject: [mod_python] Promoting Python as web application development language
Message-ID: <20020825203258.A304@eye.neb>

Well, sorry about this. But listen, Fabian, just accept that other people have
different views on this than your own, and different ways of doing things. 
Additionally, I do have serious problems with all this 'privacy' in your 
procedure. I think this is a public issue where everybody is concerned, and 
all communications on this topic should be in a 'public' forum, not private
emails. You'll notice that I took great care in CC-ing everything I received
on this to this public list, with the exception of couple of mails from you
and Rimon.

I consider my somewhat direct message to the ASF and related messages have been
successful: they established what the criteria for a 'python.apache.org'
are (check out Jorgen's replies). Additional messages on this topic 
established that the way to a 'python.apache.org == mod_python' is a rather 
clear and straight path.

The main issue now seems to be whether the 'python.apache.org' brand should be
only used for apache 'modules' (like mod_perl and mod_python) - which is what
I am promoting, or a more general link to all kind of packages more or less 
related to apache and python. This is what Rimon promotes. 

From fabbe at paniq.net  Mon Aug 26 09:59:33 2002
From: fabbe at paniq.net (Fabian Fagerholm)
Date: Fri Jan  9 21:59:34 2004
Subject: [mod_python] Promoting Python as web application development
	language
In-Reply-To: <20020825203258.A304@eye.neb>
References: <20020825203258.A304@eye.neb>
Message-ID: <1030345173.976.72.camel@kernel>

On Mon, 2002-08-26 at 04:32, vio wrote:
> Well, sorry about this. But listen, Fabian, just accept that other people have
> different views on this than your own, and different ways of doing things.

I certainly do. As long as their actions don't impede on mine, everyone
is free to do as they please.
 
> Additionally, I do have serious problems with all this 'privacy' in your 
> procedure. I think this is a public issue where everybody is concerned, and 
> all communications on this topic should be in a 'public' forum, not private
> emails. You'll notice that I took great care in CC-ing everything I received
> on this to this public list, with the exception of couple of mails from you
> and Rimon.

This is not a public issue. It's an issue for interested parties - which
is why I have been prepared to spend my own and others' bandwidth and
time to solicit opinions and volunteers from the appropriate forums.

> I consider my somewhat direct message to the ASF and related messages have been
> successful: they established what the criteria for a 'python.apache.org'
> are (check out Jorgen's replies). Additional messages on this topic 
> established that the way to a 'python.apache.org == mod_python' is a rather 
> clear and straight path.

Is Jorgen a member of the ASF?

www.apache.org is the property of the ASF, and as such the ultimate
decision of what python.apache.org should be (and whether it should be
at all) is theirs. All we can do is come with proposals.

I'm trying to work on something that extends to a broader area.
python.apache.org is admittedly an important part of this, but it is
still only a part.

> The main issue now seems to be whether the 'python.apache.org' brand should be
> only used for apache 'modules' (like mod_perl and mod_python) - which is what
> I am promoting, or a more general link to all kind of packages more or less 
> related to apache and python. This is what Rimon promotes. 
[...]

This is certainly a valid question, but I'm afraid it's not a decision
to be made by us at this forum. Also, these are not the only options.

> This is wrong: apache is one of the core successes of the open source model,
> it should be handled with extreme care and foresight.

Care and foresight have certainly been key words in your handling of
this issue.

> I have nothing to promote on the apache site and nothing to gain
> from seeing 'mod_python == python.apache.org'. It's just the right thing to do.

Well, this discussion has been going on for long enough and I thank
Grisha for letting it happen on this mailing list. What follows now is
work, work, work, and hopefully there will be something to announce in
the coming weeks.

Vio, could you please let us know if the ASF board has replied?

Cheers,
Fabian

-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 240 bytes
Desc: This is a digitally signed message part
Url : http://mailman.modpython.org/pipermail/mod_python/attachments/20020826/009a97b8/attachment-0002.bin
From vmilitaru at sympatico.ca  Mon Aug 26 03:25:08 2002
From: vmilitaru at sympatico.ca (vio)
Date: Fri Jan  9 21:59:34 2004
Subject: [mod_python] Promoting Python as web application development language
In-Reply-To: <1030345173.976.72.camel@kernel>; from fabbe@paniq.net on Mon, Aug 26, 2002 at 09:59:33AM +0300
References: <20020825203258.A304@eye.neb> <1030345173.976.72.camel@kernel>
Message-ID: <20020826032508.A658@eye.neb>

* Fabian Fagerholm <fabbe@paniq.net> [020826 02:59]:
>  ...
> > Additionally, I do have serious problems with all this 'privacy' in your 
> > procedure. I think this is a public issue where everybody is concerned, and 
> > all communications on this topic should be in a 'public' forum, not private
> > emails. You'll notice that I took great care in CC-ing everything I received
> > on this to this public list, with the exception of couple of mails from you
> > and Rimon.
> 
> This is not a public issue. It's an issue for interested parties - which
> is why I have been prepared to spend my own and others' bandwidth and
> time to solicit opinions and volunteers from the appropriate forums.

Sounds like we have a big difference of views here. Let's agree to disagree.

> ...
> Care and foresight have certainly been key words in your handling of
> this issue.

Touche :-)

> 
> Well, this discussion has been going on for long enough and I thank
> Grisha for letting it happen on this mailing list. 

Here we're in total agreement, so I'd like to join you in thanking Gregory.
Though, since mod_python is a core element of this topic (as far as I'm
concerned) I think it's only natural that such discussions take place on
precisely this public forum.

> 
> Vio, could you please let us know if the ASF board has replied?

Obviously. As previously mentionned, as far as I'm concerned, all emails 
related to this topic will be CC-ed to the mod_python list, for all to see
and have a chance to react to. This topic is of public interest.

Regards,
Vio

From jfk at metation.com  Mon Aug 26 12:03:20 2002
From: jfk at metation.com (=?iso-8859-1?q?J=F8rgen=20Fr=F8jk=20Kj=E6rsgaard=20{Metation}?=)
Date: Fri Jan  9 21:59:34 2004
Subject: [mod_python] Promoting Python as web application development language
In-Reply-To: <1030345173.976.72.camel@kernel>
References: <20020825203258.A304@eye.neb> <1030345173.976.72.camel@kernel>
Message-ID: <02082612032001.00310@grace.metation.com>

Mandag 26. August 2002 08:59 skrev du:
> > I consider my somewhat direct message to the ASF and related messages
> > have been successful: they established what the criteria for a
> > 'python.apache.org' are (check out Jorgen's replies). Additional messages
> > on this topic established that the way to a 'python.apache.org ==
> > mod_python' is a rather clear and straight path.
>
> Is Jorgen a member of the ASF?

I'm not. I'm a long-time mod_python user with an opinion about this issue. I 
followed the process of moving mod_dtcl to apache.org from the sideline as I 
was a contributor to that module at the time. My intension now is to try to 
ensure that a move of mod_python to apache.org succeeds.

In my opinion the message to ASF was sent way too early in the discussion. I 
think somebody - preferably Grisha, if he'd had the time for it - should 
contact other groups who have moved to apache.org and learn from their 
experience. A good candidate to contact is David Welton of the mod_dtcl 
project. He can be contacted at davidw@apache.org. Davis Welton is also a 
Python user, though I don't think he uses it for web.

regards, J?rgen

-- 
J?rgen Fr?jk Kj?rsgaard, direkt?r og systemkonsulent
Metation aps - Kystvejen 29, DK-8000 ?rhus C
Web: www.metation.com  - Tlf: +45 8625 0038 - Mobil: +45 2925 6693

From fabbe at paniq.net  Mon Aug 26 13:04:03 2002
From: fabbe at paniq.net (Fabian Fagerholm)
Date: Fri Jan  9 21:59:34 2004
Subject: [mod_python] Promoting Python as web application development
	language
In-Reply-To: <02082612032001.00310@grace.metation.com>
References: <20020825203258.A304@eye.neb> <1030345173.976.72.camel@kernel> 
	<02082612032001.00310@grace.metation.com>
Message-ID: <1030356244.1029.96.camel@kernel>

On Mon, 2002-08-26 at 13:03, J?rgen Fr?jk Kj?rsgaard {Metation} wrote:
> > Is Jorgen a member of the ASF?
> 
> I'm not. I'm a long-time mod_python user with an opinion about this issue. I 
> followed the process of moving mod_dtcl to apache.org from the sideline as I 
> was a contributor to that module at the time. My intension now is to try to 
> ensure that a move of mod_python to apache.org succeeds.

Excellent.

> In my opinion the message to ASF was sent way too early in the discussion. I 
> think somebody - preferably Grisha, if he'd had the time for it - should 
> contact other groups who have moved to apache.org and learn from their 
> experience.

I think everyone who has followed this thread knows my take on the
message to ASF so no more on that from me.

I would also be happy to see Grisha push this issue, but in
http://www.modpython.org/pipermail/mod_python/2002-August/002372.html,
he explains that he doesn't have time for this effort at the moment,
which I think should be respected. Therefore, as the initiator of this
thread, I feel compelled to do this instead.

I have made some progress but I urge you all to be patient. There really
isn't much use of everyone sending random mails all over the place. I'm
going to be in touch with several groups and individuals and as you
know, it takes a few days to get replies.

Rest assured that I'll post when there's something to tell.

> A good candidate to contact is David Welton of the mod_dtcl 
> project. He can be contacted at davidw@apache.org. Davis Welton is also a 
> Python user, though I don't think he uses it for web.

Now this is the type of information I'm after. Many thanks for this
pointer - I shall contact David and ask for his views and advice.

Cheers,
Fabian

-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 240 bytes
Desc: This is a digitally signed message part
Url : http://mailman.modpython.org/pipermail/mod_python/attachments/20020826/662db266/attachment-0002.bin
From fabbe at paniq.net  Mon Aug 26 13:30:30 2002
From: fabbe at paniq.net (Fabian Fagerholm)
Date: Fri Jan  9 21:59:34 2004
Subject: [mod_python] Promoting Python as web application development
	language
In-Reply-To: <02082612032001.00310@grace.metation.com>
References: <20020825203258.A304@eye.neb> <1030345173.976.72.camel@kernel> 
	<02082612032001.00310@grace.metation.com>
Message-ID: <1030357830.1029.113.camel@kernel>

On Mon, 2002-08-26 at 13:03, J?rgen Fr?jk Kj?rsgaard {Metation} wrote:
> My intension now is to try to 
> ensure that a move of mod_python to apache.org succeeds.

Oh yes, a small clarification here.

My intent is not to *move* mod_python to apache.org - that is a call for
Grisha to make in the future. My intent is to provide means for
communication between Apache users and Python users (and thus create
some "Apache-Python" users), to promote the needs of Apache-Python
users, and promote Python as a web application development language in
general.

The topic of this thread reflects this intent.

Cheers,
Fabian

-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 240 bytes
Desc: This is a digitally signed message part
Url : http://mailman.modpython.org/pipermail/mod_python/attachments/20020826/e93d3039/attachment-0002.bin
From vmilitaru at sympatico.ca  Mon Aug 26 08:15:52 2002
From: vmilitaru at sympatico.ca (vio)
Date: Fri Jan  9 21:59:34 2004
Subject: [mod_python] Promoting Python as web application development language
In-Reply-To: <1030356244.1029.96.camel@kernel>; from fabbe@paniq.net on Mon, Aug 26, 2002 at 01:04:03PM +0300
References: <20020825203258.A304@eye.neb> <1030345173.976.72.camel@kernel> <02082612032001.00310@grace.metation.com> <1030356244.1029.96.camel@kernel>
Message-ID: <20020826081552.A951@eye.neb>

* Fabian Fagerholm <fabbe@paniq.net> [020826 07:50]:
> ...
> I have made some progress but I urge you all to be patient. There really
> isn't much use of everyone sending random mails all over the place. I'm
> going to be in touch with several groups and individuals and as you
> know, it takes a few days to get replies.
> 
> Rest assured that I'll post when there's something to tell.

I hear you. Anyways, on my side I've pretty much exhausted the topic, and I
have no intention to go beyond exchanging points of view on this list (if I
have something I consider of interest to add, that is). 
Still, for me it was a fun, though heated, little exchange of strong opinions
and beliefs, a few sparks flying here and there, no harm intended.
So best of luck, and looking foreword to your posts.

Cheers,
Vio

From fabbe at paniq.net  Mon Aug 26 17:27:32 2002
From: fabbe at paniq.net (Fabian Fagerholm)
Date: Fri Jan  9 21:59:34 2004
Subject: [mod_python] Status report: Promoting Python as web application development
 language
Message-ID: <1030372052.976.211.camel@kernel>

FYI,

I have sent a Python SIG proposal to the Python Meta-SIG mailing list in
accordance with the SIG creation guidelines. I feel a Python SIG would
be most useful in co-ordinating this effort.

Those interested can view the SIG proposal in the Meta-SIG mailing list
archives:

    http://mail.python.org/pipermail/meta-sig/2002-August/001233.html

If you want to comment on this proposal, please send your comments
primarily to the Meta-SIG mailing list. You may of course Cc me if you
like.

Before you post, I suggest you read some of the messages in the archives
and observe the netiquette of that list:

    http://mail.python.org/pipermail/meta-sig/

The outcome of the discussion will be relayed to this list in a
subsequent post. Thus there is no need for cross-posting.

Cheers,
Fabian

-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 240 bytes
Desc: This is a digitally signed message part
Url : http://mailman.modpython.org/pipermail/mod_python/attachments/20020826/17f4fefb/attachment-0002.bin
From mbp at samba.org  Tue Aug 27 12:27:33 2002
From: mbp at samba.org (Martin Pool)
Date: Fri Jan  9 21:59:35 2004
Subject: [mod_python] Promoting Python as web application development language
In-Reply-To: <1030357830.1029.113.camel@kernel>
References: <20020825203258.A304@eye.neb> <1030345173.976.72.camel@kernel> <02082612032001.00310@grace.metation.com> <1030357830.1029.113.camel@kernel>
Message-ID: <20020827022730.GD29095@samba.org>

On 26 Aug 2002, Fabian Fagerholm <fabbe@paniq.net> wrote:

> My intent is not to *move* mod_python to apache.org - that is a call for
> Grisha to make in the future. My intent is to provide means for
> communication between Apache users and Python users (and thus create
> some "Apache-Python" users), to promote the needs of Apache-Python
> users, and promote Python as a web application development language in
> general.

I think it would make sense for there to be *something* on
python.apache.org that answers the question of "I've got Apache and I
like Python; now what?"  

To start with just a really simple page linking to projects such as
mod_python, Cheetah (and other templating/html systems) could be
really good.  A lot more could possibly done in the future, but I
think this would be useful and hopefully not controversial.

Perhaps a few paragraphs explaining broadly how to do web development
in Python would be good.  What are the architectural decisions you
have to make (in-line vs templates vs DOM,...) and that sort of
thing.  I know I found it a bit confusing when looking at DTML vs
Cheetah vs everything else.

-- 
Martin 

From vmilitaru at sympatico.ca  Tue Aug 27 05:28:20 2002
From: vmilitaru at sympatico.ca (vio)
Date: Fri Jan  9 21:59:35 2004
Subject: [mod_python] Promoting Python as web application development language
In-Reply-To: <20020826151930.A4908@lyra.org>; from gstein@lyra.org on Mon, Aug 26, 2002 at 03:19:30PM -0700
References: <20020823182218.A304@eye.neb> <3D6A6A52.45D2EE84@Golux.Com> <20020826151930.A4908@lyra.org>
Message-ID: <20020827052817.B301@eye.neb>

First of all, thanks for your reply.

Why mod_python on the apache.org site?
I'm a web apps coder. And I love my python. Why mod_python? Because I want to
code apache apps in python. Also because of mod_perl: as a python afficionado, 
I feel left out (as the rest of the python community): why doesn't the ASF also
promote python on the same level as perl, java et al.

Why mod_python? It just so happens that there are not that many options out
there to write apache apps in python. This particular package seems to do the
job well, is very close and integrated with the apache program itself, and 
that's about all there is to it. 
We (I) 'need' a mod_perl for python programmers.

I hope this answers Ken's question, though imperfectly.

I would like to add that I am not a programmer of this mod_python package. I
am just a (heavy) user of both apache and python, and this question of the lack
of a python alternative on the main apache web site came out on our mailing 
list recently. And I personally took the liberty to writing to the apache board.

To Greg's argument that there is no ASF Python project, my question is WHY?
It's obvious to me there should be one.

Though I am obviously not an ASF member, and am not aware of how things work
at ASF, interestingly, through discussions on this topic on the mod_python
list, I came to the same conclusion as Greg: from my user's point of view
I would expect the apache site to feature only the core package itself,
and then only 'direct' extensions of the core: the modules (mod_perl, mod_ssl,
and yes, a python module - be it mod_python or something else). Anything else
would appear as an unhealthy overextension of the 'apache' brand. It's just my 
very personal opinion.

Gregory (Grisha) Trubetskoy is the author of mod_python. I hope he gets a 
chance to react to your post, especially Greg Stein's last 2 paragraphs.

Regards,
Vio

* Greg Stein <gstein@lyra.org> [020827 03:54]:
> On Mon, Aug 26, 2002 at 01:50:10PM -0400, Rodent of Unusual Size wrote:
> > vio wrote:
> > > But I just wanted to cut the bull and go straight to the point:
> > > we have this great apache module called mod_python, thanks to
> > > Gregory (Grisha) Trubetskoy, suffering from a big lack of exposure.
> > > We strongly believe this great piece of technology (which is the
> > > marriage of apache + python) deserves a place alongside mod_perl
> > > and mod_ssl 'on the main apache site'.
> > 
> > It might be possible to list it under the 'Sister Project' section,
> > but the question becomes: why mod_python and not mod_*?  What
> > makes mod_python stand out above the hundreds of other modules
> > in order to warrant this?  (Not being facetious; it's a serious
> > question.)
> 
> Ken also missed pointing out that the Perl, PHP, and Tcl projects that
> you're seeing in that list are all ASF projects. As there is no "Python"
> project, you don't see a Python listed there :-)
> 
> Personally, I have (recently) been advocating a move away from
> language-specific ASF Projects. In my ideal world, mod_perl, mod_(d)tcl, and
> mod_php would all be "sub projects" of the Apache HTTP Server project, and
> the Perl, Tcl, PHP projects would disappear. IMO, that is their natural,
> functional grouping.
> 
> To that extent, I would very much love to see mod_python become a subproject
> of the HTTP server. It would reside alongside mod_ldap, mod_mbox, mod_pop3,
> etc. From there, it could gain exposure through a number of venues on the
> ASF website.
> 
> To become an ASF project, the owners/committers of the code would need to
> agree to donate the codebase to the ASF and be willing to maintain it within
> our framework (along with other ASF committers and members who are also
> interested). Ideally, the community that comes with it would also follow
> some of the philosophy of the ASF in terms of being a friendly community,
> open source code, etc.
> 
> Cheers,
> -g
> 
> -- 
> Greg Stein, http://www.lyra.org/

From fabbe at paniq.net  Tue Aug 27 17:41:08 2002
From: fabbe at paniq.net (Fabian Fagerholm)
Date: Fri Jan  9 21:59:35 2004
Subject: [mod_python] Promoting Python as web application development
	language
In-Reply-To: <20020827052817.B301@eye.neb>
References: <20020823182218.A304@eye.neb> <3D6A6A52.45D2EE84@Golux.Com>
	<20020826151930.A4908@lyra.org>  <20020827052817.B301@eye.neb>
Message-ID: <1030459269.12012.70.camel@kernel>

As the initiator of the original discussion, I'd like to jump in with a
little comment right now before this heads off in a random direction.

I've been discussing these matters with David Welton of the Apache Tcl
Project (who has kindly agreed to assist me in this effort) and it seems
the mod_python community is lacking some vital understanding of exactly
what the Apache Software Foundation is.

Please read carefully:

> * Greg Stein <gstein@lyra.org> [020827 03:54]:
> > To become an ASF project, the owners/committers of the code would need to
> > agree to donate the codebase to the ASF and be willing to maintain it within
> > our framework (along with other ASF committers and members who are also
> > interested). Ideally, the community that comes with it would also follow
> > some of the philosophy of the ASF in terms of being a friendly community,
> > open source code, etc.

The mod_python software is written by Gregory Trubetskoy and a number of
contributors [0]. It already has a working infrastructure with a web
site, cvs (via sourceforge), and a mailing list.

ASF projects seem to have the general requirement that the copyright of
the software is to be assigned to the ASF.

This is not a decision that can be made by consensus on this mailing
list. It is the decision of the current copyright owner(s).

Gregory Trubetskoy has already expressed that he doesn't view the lack
of python.apache.org to be a problem [1] and that he doesn't have time
to spend on this effort [2] at the moment.

In order for anything to happen, Gregory must either be interested in
making mod_python an ASF project, or the mod_python community must come
up with an alternative arrangement with the ASF (such as a "Sister
Projects" link or whatever the ASF prefers).

In the former case, I'm sure communication can proceed directly between
Gregory and the ASF now that a contact has been established. I'll be
happy to share all information that I have gathered so far.

I invite everyone to continue this discussion with these facts in mind.
I also invite anyone to endorse the Python Special Interest Group
Proposal [3] that was sent to the Python Meta-SIG mailing list.

Regards,
Fabian Fagerholm

[0] http://www.modpython.org/live/mod_python-2.7.8/CREDITS

[1] http://www.modpython.org/pipermail/mod_python/2002-August/002364.html

[2] http://www.modpython.org/pipermail/mod_python/2002-August/002372.html

[3] http://mail.python.org/pipermail/meta-sig/2002-August/001233.html

-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 240 bytes
Desc: This is a digitally signed message part
Url : http://mailman.modpython.org/pipermail/mod_python/attachments/20020827/69694b4b/attachment-0002.bin
From vmilitaru at sympatico.ca  Tue Aug 27 11:28:14 2002
From: vmilitaru at sympatico.ca (vio)
Date: Fri Jan  9 21:59:35 2004
Subject: [mod_python] Promoting Python as web application development language
In-Reply-To: <3D6B87F6.9709C80E@Golux.Com>; from Ken.Coar@Golux.Com on Tue, Aug 27, 2002 at 10:08:54AM -0400
References: <20020823182218.A304@eye.neb> <3D6A6A52.45D2EE84@Golux.Com> <20020826151930.A4908@lyra.org> <3D6B87F6.9709C80E@Golux.Com>
Message-ID: <20020827112814.A756@eye.neb>

I just received a message from Grisha adressing the first part of yours, 
I hope to your satisfaction. 

For the second part, I totally agree that enthousiasm is not a good metric 
in this (most!) issues. But I would like to add that
the essence of my posts was not as much about Grisha's code, as about the need
of a good framework to write apache apps in python. Give me any other package
which accomplishes this task as good or better than Grisha's code, and I'll
embrace that, and champion it instead. My point was not 'mod_python' as
Grisha's code, but mod_python as a sister module to mod_perl, a solid module
to write apache apps in python. That's the core source of my enthousiasm.
To avoid any confusion: I'm simply  championning Grisha's code out of a lack 
of a better alternative. The fact that it does the job it's supposed to doesn't
hurt, though :)

More particularily regarding Grisha's code, I disagree with your assessment 
that installed base should be considered as a metric in this instance.
For the simple reason that, in my personal opinion, 
lack of exposure is its main overall problem. Though I'm
not a marketing expert, and I have no particular interest in seeing this
precise piece of code exposed on the apache site more than any other who
could accomplish the same tasks, my gut feeling is that
once people will see and 'tip their toe' in it, they will share my enthousiasm
(to various degrees, obviously). The core truth is that python is an extremely
easy, clean and powerful programming language. Combining it with the most
popular web server out there might open the door to 'democratizing' the 
web application development.
In my opinion :)

Regards,
Vio


* Rodent of Unusual Size <Ken.Coar@Golux.Com> [020827 10:41]:
> Greg Stein wrote:
> > 
> > To become an ASF project, the owners/committers of the code
> > would need to agree to donate the codebase to the ASF and
> > be willing to maintain it within our framework (along with
> > other ASF committers and members who are also interested).
> 
> Also,
> 
> o assign the copyright and 
> o licence it under the Apache licence
> 
> You've said several times that mod_python is Grisha's
> project.  ASF projects have *no* individual owners.
> I don't know if Grisha is willing to give up ownership
> in order for mod_python to become an ASF project, which
> is why I suggested the 'sister projects' section.
> 
> I'm afraid that I can't see individual enthusiasm as a valid
> metric for whether to include mod_python on the Apache page.
> Usefulness to and penetration in the user community are more
> appropriate, I think.
> -- 
> #ken	P-)}
> 
> Ken Coar, Sanagendamgagwedweinini  http://Golux.Com/coar/
> Author, developer, opinionist      http://Apache-Server.Com/
> 
> "Millennium hand and shrimp!"

From neel at mediapulse.com  Tue Aug 27 15:57:10 2002
From: neel at mediapulse.com (Michael C. Neel)
Date: Fri Jan  9 21:59:35 2004
Subject: [mod_python] Promoting Python as web application developmentlanguage
Message-ID: <C0FC22C08B82074A88B50061764157775B97@johnson.mediapulse.net>

Just chipping in my thoughts here, mostly on the copyright issues.

As mod_python stands now (and as I understand it), it is solely under
the copyright of Gregory Trubetskoy
(http://www.modpython.org/live/mod_python-2.7.8/doc-html/front.html).
So unless Gregory has reasons to not do so, moving mod_python to an ASF
license shouldn't be much of an issue.  I'd also say that as a developer
I almost need to see mod_python placed under a "standard" open source
license like ASF, GNU, or Artistic (or even python's own PSF).  This
will give me the assurance that I won't find out one day that all the
mod_python releases are commercial and closed source.  I have been
burned in the past by this table cloth switching, and it wasn't fun.

The other thing I'd like to say is that python.apache.org should just be
mod_python.  It servers the same purpose as mod_perl, to allow apache
development in python.  Catering the section to template modules,
application servers, or others projects just dilutes what a developer is
looking for.  I do think a "sister sites" link area is a good idea, as
well as some kind of mod_python CPAN.

The community does need this, badly.  Python itself needs this.  I
recently did 20 interviews for the position of internet developer, and
not one person knew of python when I asked.  I figure there are two
reasons for this: python sucks, or it doesn't have enough exposure.
I've written code in python before, so I know it can't be number one...

Mike
--
Michael C. Neel
There are only 10 types of people in the world;
those who understand binary and those who don't.


-----Original Message-----
From: Fabian Fagerholm [mailto:fabbe@paniq.net] 
Sent: Tuesday, August 27, 2002 10:41 AM
To: vio
Cc: mod_python@modpython.org; Greg Stein; Ken.Coar@Golux.Com;
davidw@dedasys.com; grisha@modpython.org
Subject: Re: [mod_python] Promoting Python as web application
developmentlanguage


As the initiator of the original discussion, I'd like to jump in with a
little comment right now before this heads off in a random direction.

I've been discussing these matters with David Welton of the Apache Tcl
Project (who has kindly agreed to assist me in this effort) and it seems
the mod_python community is lacking some vital understanding of exactly
what the Apache Software Foundation is.

Please read carefully:

> * Greg Stein <gstein@lyra.org> [020827 03:54]:
> > To become an ASF project, the owners/committers of the code would
need to
> > agree to donate the codebase to the ASF and be willing to maintain
it within
> > our framework (along with other ASF committers and members who are
also
> > interested). Ideally, the community that comes with it would also
follow
> > some of the philosophy of the ASF in terms of being a friendly
community,
> > open source code, etc.

The mod_python software is written by Gregory Trubetskoy and a number of
contributors [0]. It already has a working infrastructure with a web
site, cvs (via sourceforge), and a mailing list.

ASF projects seem to have the general requirement that the copyright of
the software is to be assigned to the ASF.

This is not a decision that can be made by consensus on this mailing
list. It is the decision of the current copyright owner(s).

Gregory Trubetskoy has already expressed that he doesn't view the lack
of python.apache.org to be a problem [1] and that he doesn't have time
to spend on this effort [2] at the moment.

In order for anything to happen, Gregory must either be interested in
making mod_python an ASF project, or the mod_python community must come
up with an alternative arrangement with the ASF (such as a "Sister
Projects" link or whatever the ASF prefers).

In the former case, I'm sure communication can proceed directly between
Gregory and the ASF now that a contact has been established. I'll be
happy to share all information that I have gathered so far.

I invite everyone to continue this discussion with these facts in mind.
I also invite anyone to endorse the Python Special Interest Group
Proposal [3] that was sent to the Python Meta-SIG mailing list.

Regards,
Fabian Fagerholm

[0] http://www.modpython.org/live/mod_python-2.7.8/CREDITS

[1]
http://www.modpython.org/pipermail/mod_python/2002-August/002364.html

[2]
http://www.modpython.org/pipermail/mod_python/2002-August/002372.html

[3] http://mail.python.org/pipermail/meta-sig/2002-August/001233.html



From tree at basistech.com  Tue Aug 27 18:38:36 2002
From: tree at basistech.com (Tom Emerson)
Date: Fri Jan  9 21:59:35 2004
Subject: [mod_python] Promoting Python as web application developmentlanguage
In-Reply-To: <C0FC22C08B82074A88B50061764157775B97@johnson.mediapulse.net>
References: <C0FC22C08B82074A88B50061764157775B97@johnson.mediapulse.net>
Message-ID: <15723.65388.98630.19463@magrathea.basistech.com>

Michael C. Neel writes:
> The other thing I'd like to say is that python.apache.org should
> just be mod_python.  It servers the same purpose as mod_perl, to
> allow apache development in python.

Look though at http://tcl.apache.org/, which includes pointers to
several projects for integrating Tcl into Apache. I don't see why
mod_snake shouldn't be included with mod_python. Developers would be
coming to python.apache.org to find out how to interface to Apache
with Python...

> Catering the section to template modules, application servers, or
> others projects just dilutes what a developer is looking for.

... but the next question many will ask is, "so now what? Where are
the template packages?"

> I do think a "sister sites" link area is a good idea, as well as
> some kind of mod_python CPAN.

Indeed!

    -tree

-- 
Tom Emerson                                          Basis Technology Corp.
Software Architect                                 http://www.basistech.com
  "Beware the lollipop of mediocrity: lick it once and you suck forever"

From jack_diederich at email.com  Tue Aug 27 17:45:30 2002
From: jack_diederich at email.com (Jack Diederich)
Date: Fri Jan  9 21:59:35 2004
Subject: [OT] RE: [mod_python] Promoting Python as web application
    developmentlanguage
Message-ID: <20020827224530.25352.qmail@email.com>

> The community does need this, badly.  Python itself needs this.  I
> recently did 20 interviews for the position of internet developer, and
> not one person knew of python when I asked.  I figure there are two
> reasons for this: python sucks, or it doesn't have enough exposure.

I don't think it is crucial to hire a developer who knows the language. If someone knows a few languages (one or more being OO) learning python just takes a month of reading your existing code base to learn reasonably, and a few months more in the group environment to master.  Even in Boston with its largish perl community, a place I worked previously didn't discriminate on knowledge of perl.  A good developer is a good developer (most of the people were C++ heavies first, perl second), they have to learn the ins and outs of the company's development environment & coding style anyway, a different language is just one aspect of that. (All things being equal, hire the guy who already knows python, but that isn't the most important thing.).  If they can ace an interview in another language (or preferably a couple) then it is a good hire.  If they are a jack of all trades [master of none: why does everyone forget that part of the phrase?] just say 'thank you for your time' and walk away.

-jackdied

ps, my first name being 'Jack' I get 'Jack of all trades' meant as a complement frequently.  I've stopped taking offense becuase 99% of the people who say it are ignorant of the full phrase 'Jack [apprentice] of all trades, master of none' [http://www.bartleby.com/66/6/1706.html]

pps, 'jackdied' is frequently my email/login on jobs, it is typically the shortest thing to type into MS exchange or similar to uniquely pull my name out of the employee database ('died' being the first 4 letters of my last name).  Nothing morbid implied, just a good mnemonic.
-- 
__________________________________________________________
Sign-up for your own FREE Personalized E-mail at Mail.com
http://www.mail.com/?sr=signup


From vmilitaru at sympatico.ca  Wed Aug 28 01:47:38 2002
From: vmilitaru at sympatico.ca (vio)
Date: Fri Jan  9 21:59:35 2004
Subject: [mod_python] Promoting Python as web application developmentlanguage
In-Reply-To: <15723.65388.98630.19463@magrathea.basistech.com>; from tree@basistech.com on Tue, Aug 27, 2002 at 06:38:36PM -0400
References: <C0FC22C08B82074A88B50061764157775B97@johnson.mediapulse.net> <15723.65388.98630.19463@magrathea.basistech.com>
Message-ID: <20020828014738.B325@eye.neb>

* Tom Emerson <tree@basistech.com> [020828 00:45]:
> Michael C. Neel writes:
> > The other thing I'd like to say is that python.apache.org should
> > just be mod_python.  It servers the same purpose as mod_perl, to
> > allow apache development in python.
> 
> Look though at http://tcl.apache.org/, which includes pointers to
> several projects for integrating Tcl into Apache. I don't see why
> mod_snake shouldn't be included with mod_python. Developers would be
> coming to python.apache.org to find out how to interface to Apache
> with Python...

I'm a total ignorant about mod_snake, but in principle, promoting two siamese
twins accomplishing pretty much the same tricks implies a good waste of 
developer cycles (and other less valuable resources). Additionally, I wonder
about the efforts required to merge the two code bases (provided such might be
a goal). It is not unheard of that the result of such merges comes out 
over budget, over schedule, more instable and less performant than either of 
its (incestuous?) parents. In this light, I personally would question 
the logic of such a move, as opposed to simply
consolidating all efforts on the one we determined is the 'Best of Breed'.
By the same token, why is there no 'mod_camel' alongsite 'mod_perl' ?
Just a thought.

> 
> > Catering the section to template modules, application servers, or
> > others projects just dilutes what a developer is looking for.
> 
> ... but the next question many will ask is, "so now what? Where are
> the template packages?"
> 
> > I do think a "sister sites" link area is a good idea, as well as
> > some kind of mod_python CPAN.
> 
> Indeed!

This makes a lot of sense.
So the 'functional' hierarchy Greg Stein is promoting for the apache site
might look something like:

HTTP Server > modules > sister sites 

Looks to me much more consistent that what we have now, 
... while making (most) everyone happy :)

Cheers,
Vio

From fabbe at paniq.net  Wed Aug 28 09:49:49 2002
From: fabbe at paniq.net (Fabian Fagerholm)
Date: Fri Jan  9 21:59:35 2004
Subject: [mod_python] Promoting Python as web application
	developmentlanguage
In-Reply-To: <87it1vncv5.fsf@dedasys.com>
References: <C0FC22C08B82074A88B50061764157775B97@johnson.mediapulse.net>
	<15723.65388.98630.19463@magrathea.basistech.com> 
	<87it1vncv5.fsf@dedasys.com>
Message-ID: <1030517390.1596.50.camel@kernel>

On Wed, 2002-08-28 at 01:41, David N. Welton wrote:
> > I don't see why mod_snake shouldn't be included with
> > mod_python. Developers would be coming to python.apache.org to find
> > out how to interface to Apache with Python...
> 
> That would definitely make sense, if the author of mod_snake agreed to
> turn over the project to the ASF.

FYI, I just emailed the author asking for his opinion. I'll let you know
when I receive a reply.

Would the ASF consider adopting this "dead" codebase even if the
principal author would not be interested in continuing the project?


Meanwhile, I'd like to point out that the mod_python mailing list is now
a subscribe-before-posting list. From www.modpython.org:

    Sorry, due to exessive spam, you now must subscribe to be able to
    post to the list.
    
I strongly recommend that we move this discussion somewhere more
appropriate. The amount of off-topic mail on the mod_python list has
been large lately.

I ask again that any interested parties review the Python SIG proposal
[0] and endorse it by sending an email to the Meta-SIG mailing list.
Look at [1] for an example. That way we would have a mailing list for
discussions.

Apologies for Cc'ing anyone who's not interested, please let me know if
you don't want to be a part of this.

Regards,
Fabian

[0] http://mail.python.org/pipermail/meta-sig/2002-August/001233.html

[1] http://mail.python.org/pipermail/meta-sig/2002-August/001234.html

-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 240 bytes
Desc: This is a digitally signed message part
Url : http://mailman.modpython.org/pipermail/mod_python/attachments/20020828/482cd0f7/attachment-0002.bin
From vmilitaru at sympatico.ca  Wed Aug 28 03:04:58 2002
From: vmilitaru at sympatico.ca (vio)
Date: Fri Jan  9 21:59:35 2004
Subject: [mod_python] Promoting Python as web application developmentlanguage
In-Reply-To: <1030517390.1596.50.camel@kernel>; from fabbe@paniq.net on Wed, Aug 28, 2002 at 09:49:49AM +0300
References: <C0FC22C08B82074A88B50061764157775B97@johnson.mediapulse.net> <15723.65388.98630.19463@magrathea.basistech.com> <87it1vncv5.fsf@dedasys.com> <1030517390.1596.50.camel@kernel>
Message-ID: <20020828030457.A444@eye.neb>

* Fabian Fagerholm <fabbe@paniq.net> [020828 02:44]:
> ...
> I strongly recommend that we move this discussion somewhere more
> appropriate. The amount of off-topic mail on the mod_python list has
> been large lately.

I partially agree, but only to the extent that not technical issues are 
discussed in this thread. On the other hand, I believe a piece of mod_perl's
history is in the process of being written (perhaps) under our eyes.
Considering that the list is not currently flooded with technical issues,
I believe it's nice to document what is happening, with this thread/topic.
Perhaps for those who are 'out of the loop', and are just curious of what's
going on. I for one certainly find it quite interesting.

On a more personal note, being compulsively lazy, I'd much rather CC to
a single address (mod_python@modpython.org) than 10 individual addresses.
In 'mutt' on a laptop, this makes for a depressingly lot of cut&paste with a
weird 'button' mouse.

Just my opinion. (and Sorry for all the noise!)
Vio

From gstein at lyra.org  Wed Aug 28 01:42:41 2002
From: gstein at lyra.org (Greg Stein)
Date: Fri Jan  9 21:59:35 2004
Subject: [mod_python] Promoting Python as web application developmentlanguage
In-Reply-To: <20020828014738.B325@eye.neb>; from vmilitaru@sympatico.ca on Wed, Aug 28, 2002 at 01:47:38AM -0500
References: <C0FC22C08B82074A88B50061764157775B97@johnson.mediapulse.net> <15723.65388.98630.19463@magrathea.basistech.com> <20020828014738.B325@eye.neb>
Message-ID: <20020828014240.A8187@lyra.org>

On Wed, Aug 28, 2002 at 01:47:38AM -0500, vio wrote:
> * Tom Emerson <tree@basistech.com> [020828 00:45]:
> > Michael C. Neel writes:
>...
> > Look though at http://tcl.apache.org/, which includes pointers to
> > several projects for integrating Tcl into Apache. I don't see why
> > mod_snake shouldn't be included with mod_python. Developers would be
> > coming to python.apache.org to find out how to interface to Apache
> > with Python...

Note that "Apache" is beginning to mean a lot more than just "the Apache
http server". You've now got projects such as Tomcat, Xerces, and Cocoon all
under the Apache banner. Arguably, they have nothing to do with the web
server :-)

My point is just that people won't arrive at the ASF simply for "how to
interface to Apache with Python." Minor point to be sure, but hey :-)

> I'm a total ignorant about mod_snake, but in principle, promoting two siamese
> twins accomplishing pretty much the same tricks implies a good waste of 
> developer cycles (and other less valuable resources).

Each developer has the *right to choose* what they work on. You might call
it a waste, but those developers have a bunch of other reasons for why they
may work on duplicative code. For example, the Apache Tomcat guys have got a
web server built into their code. I ask, "what the hell? use Apache httpd!"
But even though that is a valid answer, some developers want a pure Java
solution, so they build a Java-based HTTP server. Even though (*IMO*) it is
a huge waste of effort. But it's their choice.

>...
> > > I do think a "sister sites" link area is a good idea, as well as
> > > some kind of mod_python CPAN.

More on this in a sec.

> > Indeed!
> 
> This makes a lot of sense.
> So the 'functional' hierarchy Greg Stein is promoting for the apache site
> might look something like:
> 
> HTTP Server > modules > sister sites 
> 
> Looks to me much more consistent that what we have now, 
> ... while making (most) everyone happy :)

I'd like to clarify my thoughts here (I've said this elsewhere, but not to
this forum, nor in a very public forum). Currently, the ASF has projects
aligned along *language* boundaries. For a certain selection of developer
and goal, this can be quite fine. "I need a Java-based MTA."

However, it starts to fall down when a question such as "I want a Java-based
XML parser." Is that in the ASF Jakarta Project, or the ASF XML Project?
Hunh. If everything were organized along *functional* lines, then the
question could always be answered properly. "An MTA? Go to the server
project. It will be in there." "An XML Parser? Go to the XML project." Of
course, you'd then select for the language of choice. But that is a
secondary criteria after the initial project selection.

Thus, I would not advocate something along the lines of python.apache.org.
"All things Python" doesn't help users looking for functionality, and it
tends to end up as a mish-mash of unrelated (Python) projects.

As a result, I would advocate mod_python as part of the Apache HTTP Server
Project itself. You've got a web server, and (hey!) here is the Python
connector. I would even advocate that mod_perl, mod_(d)tcl, and mod_php move
to this same organization (and whack those language specific projects).
Jakarta is just too frickin' huge to axe so easily :-), but there are lines
of functionality for that project, too.

In this view, vio is correct on my suggestion: the Apache HTTP Server
Project is the parent. Sub-projects include things like mod_python. And as a
matter of course, we simply refer people to other locations for other
httpd-related software.

[ and to clarify: I'm speaking of my opinion on ASF organization, rather
  than thru any official capacity ]

Back to the CPAN-like thing. Given the above view, how does this work?
Well... consider having some kind of "indexing" or "cataloging" project.
Language neutral. Sure, you could select by language, but why would it be
limited to just Perl or just Python? Why not both and Java and Tcl and Ruby
software?

*That* would be interesting. The trouble with such a beast, though, is
simply that it is such a hard problem to put together well. If it was easy,
it would have been done. And the ASF generally prefers to avoid the "dead
SourceForge project" syndrome. We're much more about *communities* than even
the software that is produced. The end result is that a certain bar needs to
be raised to ensure that an ASF project will succeed. That it will have a
healthy community. If there is no code and no community, then there better
be a lot of trust in the (few) developers who are proposing such a beast :-)

mod_python obviously comes with a large user base and a vibrant community.
There are certainly no issues there. Mostly, I'm speaking to the concepts of
"more Python stuff at the ASF."

[ and don't get me wrong; I'm a *huge* Python supporter; Google reports
  "about 12,900" pages for "greg stein python"  :-) ]

Cheers,
-g

-- 
Greg Stein, http://www.lyra.org/

From mbp at samba.org  Wed Aug 28 18:49:43 2002
From: mbp at samba.org (Martin Pool)
Date: Fri Jan  9 21:59:35 2004
Subject: [mod_python] Promoting Python as web application developmentlanguage
In-Reply-To: <20020828014240.A8187@lyra.org>
References: <C0FC22C08B82074A88B50061764157775B97@johnson.mediapulse.net> <15723.65388.98630.19463@magrathea.basistech.com> <20020828014738.B325@eye.neb> <20020828014240.A8187@lyra.org>
Message-ID: <20020828084941.GX2340@samba.org>

On 28 Aug 2002, Greg Stein <gstein@lyra.org> wrote:

> Note that "Apache" is beginning to mean a lot more than just "the Apache
> http server". You've now got projects such as Tomcat, Xerces, and Cocoon all
> under the Apache banner. Arguably, they have nothing to do with the web
> server :-)
> 
> My point is just that people won't arrive at the ASF simply for "how to
> interface to Apache with Python." Minor point to be sure, but hey
> :-)

I see the distinction, but I think at the moment most people new to
Python/Apache will not.  To a novice, Apache is a web server, and
python.apache.org is the obvious place to look.  

I think many people will be in that category and it would be nice to
help them as much as possible without confusion.

> As a result, I would advocate mod_python as part of the Apache HTTP Server
> Project itself. You've got a web server, and (hey!) here is the Python
> connector. I would even advocate that mod_perl, mod_(d)tcl, and mod_php move
> to this same organization (and whack those language specific
> projects).

OK, so python.httpd.apache.org, or (more reasonably?)
apache.org/httpd/python.  At any rate it would be nice if there was
some kind of official pointer rather than making people search.

> Back to the CPAN-like thing. Given the above view, how does this work?
> Well... consider having some kind of "indexing" or "cataloging" project.
> Language neutral. Sure, you could select by language, but why would it be
> limited to just Perl or just Python? Why not both and Java and Tcl and Ruby
> software?

I'm not sure if ASF needs to solve that whole problem.  Just search
Freshmeat or Google or the new GNU software map for "apache python".

> *That* would be interesting. The trouble with such a beast, though, is
> simply that it is such a hard problem to put together well. If it was easy,
> it would have been done. And the ASF generally prefers to avoid the "dead
> SourceForge project" syndrome. We're much more about *communities* than even
> the software that is produced. The end result is that a certain bar needs to
> be raised to ensure that an ASF project will succeed. That it will have a
> healthy community. If there is no code and no community, then there better
> be a lot of trust in the (few) developers who are proposing such a
> beast :-)

I think one of the problems for somebody starting to do web
programming in Python at the moment is that this "editorial control"
is not really present: it's hard to find out what is a good tool to
use.  For example, a web search tends to throw up references to
mod_snake, which on closer inspection turns out to be currently dead.
Similarly for templating.  

It would be nice if the authority of the ASF could help steer people
in the write direction.  I guess it wouldn't want to get into saying
"templating system X is better than Y", but it might at least provide
that minimum bar of activity/functionality.

-- 
Martin 

From vmilitaru at sympatico.ca  Wed Aug 28 05:05:05 2002
From: vmilitaru at sympatico.ca (vio)
Date: Fri Jan  9 21:59:35 2004
Subject: [mod_python] Re: mod_python sample code
In-Reply-To: <783.1030517956@www33.gmx.net>; from peter.bittner@gmx.net on Wed, Aug 28, 2002 at 08:59:16AM +0200
References: <20020827052817.B301@eye.neb> <783.1030517956@www33.gmx.net>
Message-ID: <20020828050505.A468@eye.neb>

Hi Peter,
I didn't do much (any) CGI, but I did something along those lines: a 
combination apache+oracle+mod_python. So maybe I'll describe that a little,
hopefully it will give you some pointers (just replace any references to oracle
with your database of choice.) I hope it's not too verbose for you.
If you don't mind, I'll CC this to the list so others may give you much better 
tips on this topic than I,
(... and hopefully lift up a little the technical vs. non-technical threads :-)
Verbose example coming up:

I'm assuming that you've installed mod_python, and run successfully the
sample code and examples.

So what I did - basically I took the publisher.py file which came with 
my mod_python copy, and modified it to fit my needs. Things like

import ...
# my database settings
import DCOracle2
os.environ['ORACLE_SID'] = '...'
os.environ['ORACLE_HOME'] = '...'
my_connect_string='...'

# a fast function (in C) to parse query string
parse_qsl = apache.parse_qsl

# I also changed all 'req' to 'REQUEST' for better clarity, so keep this
# in mind when you are reading my code (Zope influence).

def handler(REQUEST):
    _REQUEST = REQUEST._req
    _REQUEST.content_type = "text/html"

    # at this point, I want to check if user's browser has sent 
    # a cookie which I'm expecting (is he authenticated or not?)

    ########
    # if No Cookie Sent by Client
    #
    if not _REQUEST.headers_in.has_key("Cookie"):
        #
        # substract 'requested_URL' and 'requested_vars'
        #
        requested_URL = str(_REQUEST.server.server_hostname) + str(_REQUEST.uri)        requested_vars = '' # handle GET requests
        if _REQUEST.headers_in.has_key("content-length"):
            requested_vars = _REQUEST.read(int(_REQUEST.headers_in["content-length"]))
        #
        # save 'requested URL and variables' in a cookie on client
        #  - a cheezy way to do this I guess, but what I want to do is
        #    save the URL the user requested, because I will redirect him
        #    to my 'login' page, and this info will be lost.
        #   
        rURLlen = ('000' + str(len(requested_URL)))[-3:]
        _REQUEST.headers_out.add('Set-Cookie',
'v=L' # my internal token indicating it's a Login cookie
+ rURLlen 
+ requested_URL 
+ requested_vars 
+ '; '
+ 'path=/; ' # without the 'path', Netscape|Lynx won't store the cookie
)
        # now I'm sending the user the login page:
        #
        _REQUEST.headers_out.add('Pragma','no-cache')
        _REQUEST.send_http_header()
        #
        # send login form
        #
        _REQUEST.write(login_form1) # 'login_form1' being simple html
        raise apache.SERVER_RETURN, apache.OK
    #
    # /if No Cookie Sent by Client
    ########

    ########
    # Process Login Form data
    #
    elif str(_REQUEST.uri) == '/login/login_action':
        requested_vars = _REQUEST.read(int(_REQUEST.headers_in["content-length"]        #
        # parse query string
        #
        keep_blank_values=0
        pairs = parse_qsl(requested_vars, keep_blank_values)
        """ 
'pairs' now looks like this (yours will obviously vary, depending on what 
values you had in your form's html code):
[('username', '...'),('password', '...'), ('submit', 'Continue')]

But this is basically how I retrieve all data send by user in my html forms.
        """
        #
        # process 'missing Login field data' --> send 'Data missing' login form
        #
        if len(pairs) != 3:
            _REQUEST.write(login_form2)
            raise apache.SERVER_RETURN, apache.OK
        #
        # put Login data in local vars (for processing)
        #
        items = []
        for item in pairs[:-1]: # skip last item 'submit'
            if item[0] not in ('username','persistent', 'password'):
                _REQUEST.write(login_form2) # --> send 'Data missing' login form                raise apache.SERVER_RETURN, apache.OK
            items.append(item[1])
        username,ac_password = items

        #
        # get database login data
        #  - obviously this code is database-dependent
        #  - 'users' is a table where I've put all my user data
        SQL =  "SELECT * FROM users WHERE username = '%s'" % username
        try:
            connection = DCOracle2.connect(connect_string)
            cursor = connection.cursor()
            cursor.prepare(SQL)
            cursor.execute()
            cursor.arraysize = 20
            db_result = cursor.fetchall()
        except (DCOracle2.DatabaseError,TypeError), e:
            # I am logging the error to some dedicated LOG file
            LOG.write(timestamp + 'SQL: >' + SQL + '<   ' + str(e) + '\n')
            LOG.flush()
            raise apache.SERVER_RETURN, apache.HTTP_INTERNAL_SERVER_ERROR
        if db_result == []:
            _REQUEST.write(login_form3) # --> send 'Wrong Data' login form
            raise apache.SERVER_RETURN, apache.OK
            """ 
'db_result[0]' looks like this:
['user_id','username', 'password', OracleDate("2002-07-10 02:20:31")]

This obviously will depend on your table schema.
            """
        db_userID,db_Username,db_Pword,db_Created = db_result[0]
        #
        # check Login Form data against Database data
        #
        if (password != db_Pword):
            _REQUEST.write(login_form3) # --> send 'Wrong Data' login form
            raise apache.SERVER_RETURN, apache.OK
        #
        # set session in database
        # - here I'm basically repeating the db code of earlier
        #
        #  then I'm created a session token, which I'm sending to the user
        #  and will retrieve using the cookie mechanism (seen earlier).

From davidw at dedasys.com  Tue Aug 27 15:41:34 2002
From: davidw at dedasys.com (David N. Welton)
Date: Fri Jan  9 21:59:35 2004
Subject: [mod_python] Promoting Python as web application developmentlanguage
In-Reply-To: <15723.65388.98630.19463@magrathea.basistech.com>
References: <C0FC22C08B82074A88B50061764157775B97@johnson.mediapulse.net>
	<15723.65388.98630.19463@magrathea.basistech.com>
Message-ID: <87it1vncv5.fsf@dedasys.com>

Tom Emerson <tree@basistech.com> writes:

> Michael C. Neel writes:

> > The other thing I'd like to say is that python.apache.org should
> > just be mod_python.  It servers the same purpose as mod_perl, to
> > allow apache development in python.
 
> Look though at http://tcl.apache.org/, which includes pointers to
> several projects for integrating Tcl into Apache.

They aren't just pointers.  The projects belong to the Apache Software
Foundation, and are all part of the Apache Tcl group.

> I don't see why mod_snake shouldn't be included with
> mod_python. Developers would be coming to python.apache.org to find
> out how to interface to Apache with Python...

That would definitely make sense, if the author of mod_snake agreed to
turn over the project to the ASF.

-- 
David N. Welton
   Consulting: http://www.dedasys.com/
     Personal: http://www.dedasys.com/davidw/
Free Software: http://www.dedasys.com/freesoftware/
   Apache Tcl: http://tcl.apache.org/

From sa at sfsu.edu  Wed Aug 28 16:55:45 2002
From: sa at sfsu.edu (Sean Abrahams)
Date: Fri Jan  9 21:59:35 2004
Subject: [mod_python] PDF Documentation Corrupt?
Message-ID: <741140276070.20020828165545@sfsu.edu>

I've tried to print the mod_python PDF documentation from multiple
different machines running Adobe Acrobat 5.0 reader and keep getting a
"The document could not be printed." error after Page 2. Running
Windows XP. Anyone else having this issue?

Thanks,
--Sean


From kevin at vap.org  Thu Aug 29 13:26:46 2002
From: kevin at vap.org (kevin@vap.org)
Date: Fri Jan  9 21:59:35 2004
Subject: [mod_python] Re: PDF Documentation Corrupt?
Message-ID: <67120-220028429172646629@vap.org>

I tried it (Acro 5.0 & WinXP) and had the same problem.

This seems like a similar problem that I had with the Python 2.1 (or
2.2, I don't remember) PDF files with Acro 5.0 & Win98.  I worked
around it by getting the PS files, finding a Linux box & running the
PS files through PS2PDF.  You lose the hyperlinks, but at least they
were printable on Windows with Acro 5.0.

I don't know if there is a PS version of mod_python.pdf available,
but maybe someone could get you a version that will print under Acro
5.0/Windows.

As an alternative, you could locate Ghostscript for Windows & use the
GSView program to print it (I just tried it on my W2K box & it
worked, but was a bit slower).

-Kevin


>Date: Wed, 28 Aug 2002 16:55:45 -0700
>From: Sean Abrahams <sa@sfsu.edu>
>Reply-To: Sean Abrahams <sa@sfsu.edu>
>Organization: SFSU : Fiscal Affairs Business Systems
>To: mod_python@modpython.org
>Subject: [mod_python] PDF Documentation Corrupt?
>
>I've tried to print the mod_python PDF documentation from multiple
>different machines running Adobe Acrobat 5.0 reader and keep getting 
>a
>"The document could not be printed." error after Page 2. Running
>Windows XP. Anyone else having this issue?
>
>Thanks,
>--Sean



From kai at keliikuli.com  Thu Aug 29 14:40:19 2002
From: kai at keliikuli.com (kai@keliikuli.com)
Date: Fri Jan  9 21:59:35 2004
Subject: [mod_python] mod_python.publisher
Message-ID: <20020829144019.A1020@jki2.com>

Hi All, 
I had an authentication header problem with opera 6.0.2 
on Linux (Slackware 8.1).  I traced it to Lines 250 
and/or 263 of mod_python.publisher...

This line 
s = 'Basic realm = "%s"' % realm
produces this header line ( as sent to client)
WWW-Authenticate: Basic realm = "Members Only"\r\n


opera doesn't like the spaces between realm,=, and "%s"' % realm
it seems happy with.

s = 'Basic realm="%s"' % realm
which produces this header line
WWW-Authenticate: Basic realm = "Members Only"\r\n



I then tested it on a few others with the above change:

MSIE 6.0.2600.0000 ( what's with that version numbering? ): OK
Mozilla 1.0: OK

I'm going to test on some more but being lazy I thought I'd 
ask if anybody knows of any browsers and the versions thereof
which are fussy about the WWW-Authenticate line
Kai

From grisha at modpython.org  Thu Aug 29 15:35:32 2002
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 21:59:35 2004
Subject: [mod_python] Re: PDF Documentation Corrupt?
In-Reply-To: <67120-220028429172646629@vap.org>
Message-ID: <Pine.BSF.4.32.0208291532440.8000-100000@eden.ispol.com>

It seems to be some kind of a problem with pdflatex - there are some
references out on usenet about it. May be I was using a version that was
too old when generating the files. Sorry, I'm not exactly sure how to fix
this one :-(

On Thu, 29 Aug 2002 kevin@vap.org wrote:

> I tried it (Acro 5.0 & WinXP) and had the same problem.
>
> This seems like a similar problem that I had with the Python 2.1 (or
> 2.2, I don't remember) PDF files with Acro 5.0 & Win98.  I worked
> around it by getting the PS files, finding a Linux box & running the
> PS files through PS2PDF.  You lose the hyperlinks, but at least they
> were printable on Windows with Acro 5.0.
>
> I don't know if there is a PS version of mod_python.pdf available,
> but maybe someone could get you a version that will print under Acro
> 5.0/Windows.
>
> As an alternative, you could locate Ghostscript for Windows & use the
> GSView program to print it (I just tried it on my W2K box & it
> worked, but was a bit slower).
>
> -Kevin
>
>
> >Date: Wed, 28 Aug 2002 16:55:45 -0700
> >From: Sean Abrahams <sa@sfsu.edu>
> >Reply-To: Sean Abrahams <sa@sfsu.edu>
> >Organization: SFSU : Fiscal Affairs Business Systems
> >To: mod_python@modpython.org
> >Subject: [mod_python] PDF Documentation Corrupt?
> >
> >I've tried to print the mod_python PDF documentation from multiple
> >different machines running Adobe Acrobat 5.0 reader and keep getting
> >a
> >"The document could not be printed." error after Page 2. Running
> >Windows XP. Anyone else having this issue?
> >
> >Thanks,
> >--Sean
>
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://www.modpython.org/mailman/listinfo/mod_python
>


From woodm at Colorado.EDU  Thu Aug 29 13:51:37 2002
From: woodm at Colorado.EDU (WOOD MATTHEW DAVID)
Date: Fri Jan  9 21:59:35 2004
Subject: [mod_python] It all started with that -DEAPI error...
Message-ID: <Pine.GSO.4.40.0208291337450.7388-100000@ucsu.colorado.edu>

Hello everyone.  I would love to say that I'm not a newbie to mod_python,
but I've never successfully installed it.

My latest attempt is on an OpenBSD-3.1 box.

this server has both python2.1 and python2.2 on it.  (I didn't
particularly want python2.1, but the OpenBSD ports tree decided that I
would get both python versions.  :-) )

Regardless, I uncompressed the mod_python tarball, and went to work,
eventually recieving the standard -DEAPI error:

   > sudo apachectl start
   [Thu Aug 29 13:20:35 2002] [warn] Loaded DSO
   /usr/lib/apache/modules/mod_python.so uses plain Apache 1.3 API, this
   module might crash under EAPI! (please recompile it with -DEAPI)
   /usr/sbin/apachectl start: httpd could not be started


At first, I thought it was the -DEAPI problem that was preventing me from
starting the httpd altogether, but after searching around on the
mod_python webpage, I (think I) fixed that error.  Now, I just can't start
the httpd deamon:

    > sudo apachectl start
    /usr/sbin/apachectl start: httpd could not be started


I can start the deamon when I comment out the "LoadModule
python_module..." line, but that's clearly not the goal.

I'm hoping that I'm not reporting something stupid (other than me), but I
just can't get this to work.  I've asked several of my "better at UNIX
than I am" friends, and they have no ideas either.

What do you guys suggest?

Oh, and by the way, my system is using the standard apache1.3 that comes
"out of the box" with OpenBSD-3.1 .

Again, thanks for any time that you may have to spare.



Matthew D. Wood


From mk at lrn.ru  Thu Aug 29 21:59:50 2002
From: mk at lrn.ru (Michael Krasnovsky)
Date: Fri Jan  9 21:59:35 2004
Subject: [mod_python] PythonInitHandler questions
Message-ID: <20020829215950.66c764ec.mk@lrn.ru>

Hi!

What should return inithandler(req) function? Does PythonInitHandler
work with mod_python.pyblisher? 

When I try use it together, I got 404 error - Handler not found... 

Thanks.

Michael.

From sa at sfsu.edu  Thu Aug 29 13:20:35 2002
From: sa at sfsu.edu (Sean Abrahams)
Date: Fri Jan  9 21:59:35 2004
Subject: [mod_python] It all started with that -DEAPI error...
In-Reply-To: <Pine.GSO.4.40.0208291337450.7388-100000@ucsu.colorado.edu>
References: <Pine.GSO.4.40.0208291337450.7388-100000@ucsu.colorado.edu>
Message-ID: <41213765622.20020829132035@sfsu.edu>

Matthew,

I had the DEAPI error yesterday. Running Debian (level testing).

This is what I did.

"""
./configure

edit src/Makefile and change the OPT= line to read OPT=-DEAPI

then run "make dso"

then run "make install_dso"
"""

Hope this works for you.

--Sean

Thursday, August 29, 2002, 12:51:37 PM, you wrote:

WMD> Hello everyone.  I would love to say that I'm not a newbie to mod_python,
WMD> but I've never successfully installed it.

WMD> My latest attempt is on an OpenBSD-3.1 box.

WMD> this server has both python2.1 and python2.2 on it.  (I didn't
WMD> particularly want python2.1, but the OpenBSD ports tree decided that I
WMD> would get both python versions.  :-) )

WMD> Regardless, I uncompressed the mod_python tarball, and went to work,
WMD> eventually recieving the standard -DEAPI error:

WMD>    > sudo apachectl start
WMD>    [Thu Aug 29 13:20:35 2002] [warn] Loaded DSO
WMD>    /usr/lib/apache/modules/mod_python.so uses plain Apache 1.3 API, this
WMD>    module might crash under EAPI! (please recompile it with -DEAPI)
WMD>    /usr/sbin/apachectl start: httpd could not be started


WMD> At first, I thought it was the -DEAPI problem that was preventing me from
WMD> starting the httpd altogether, but after searching around on the
WMD> mod_python webpage, I (think I) fixed that error.  Now, I just can't start
WMD> the httpd deamon:

WMD>     > sudo apachectl start
WMD>     /usr/sbin/apachectl start: httpd could not be started


WMD> I can start the deamon when I comment out the "LoadModule
WMD> python_module..." line, but that's clearly not the goal.

WMD> I'm hoping that I'm not reporting something stupid (other than me), but I
WMD> just can't get this to work.  I've asked several of my "better at UNIX
WMD> than I am" friends, and they have no ideas either.

WMD> What do you guys suggest?

WMD> Oh, and by the way, my system is using the standard apache1.3 that comes
WMD> "out of the box" with OpenBSD-3.1 .

WMD> Again, thanks for any time that you may have to spare.



WMD> Matthew D. Wood

WMD> _______________________________________________
WMD> Mod_python mailing list
WMD> Mod_python@modpython.org
WMD> http://www.modpython.org/mailman/listinfo/mod_python


From woodm at Colorado.EDU  Thu Aug 29 14:44:44 2002
From: woodm at Colorado.EDU (WOOD MATTHEW DAVID)
Date: Fri Jan  9 21:59:35 2004
Subject: [mod_python] It all started with that -DEAPI error...
In-Reply-To: <41213765622.20020829132035@sfsu.edu>
Message-ID: <Pine.GSO.4.40.0208291444050.27511-100000@ucsu.colorado.edu>

I did not see that.  However, it didn't help me either.  But thanks
regardless.  I really appreciate the help.

Matthew D. Wood, University of Colorado

On Thu, 29 Aug 2002, Sean Abrahams wrote:

> Matthew,
>
> I had the DEAPI error yesterday. Running Debian (level testing).
>
> This is what I did.
>
> """
> ./configure
>
> edit src/Makefile and change the OPT= line to read OPT=-DEAPI
>
> then run "make dso"
>
> then run "make install_dso"
> """
>
> Hope this works for you.
>
> --Sean
>
> Thursday, August 29, 2002, 12:51:37 PM, you wrote:
>
> WMD> Hello everyone.  I would love to say that I'm not a newbie to mod_python,
> WMD> but I've never successfully installed it.
>
> WMD> My latest attempt is on an OpenBSD-3.1 box.
>
> WMD> this server has both python2.1 and python2.2 on it.  (I didn't
> WMD> particularly want python2.1, but the OpenBSD ports tree decided that I
> WMD> would get both python versions.  :-) )
>
> WMD> Regardless, I uncompressed the mod_python tarball, and went to work,
> WMD> eventually recieving the standard -DEAPI error:
>
> WMD>    > sudo apachectl start
> WMD>    [Thu Aug 29 13:20:35 2002] [warn] Loaded DSO
> WMD>    /usr/lib/apache/modules/mod_python.so uses plain Apache 1.3 API, this
> WMD>    module might crash under EAPI! (please recompile it with -DEAPI)
> WMD>    /usr/sbin/apachectl start: httpd could not be started
>
>
> WMD> At first, I thought it was the -DEAPI problem that was preventing me from
> WMD> starting the httpd altogether, but after searching around on the
> WMD> mod_python webpage, I (think I) fixed that error.  Now, I just can't start
> WMD> the httpd deamon:
>
> WMD>     > sudo apachectl start
> WMD>     /usr/sbin/apachectl start: httpd could not be started
>
>
> WMD> I can start the deamon when I comment out the "LoadModule
> WMD> python_module..." line, but that's clearly not the goal.
>
> WMD> I'm hoping that I'm not reporting something stupid (other than me), but I
> WMD> just can't get this to work.  I've asked several of my "better at UNIX
> WMD> than I am" friends, and they have no ideas either.
>
> WMD> What do you guys suggest?
>
> WMD> Oh, and by the way, my system is using the standard apache1.3 that comes
> WMD> "out of the box" with OpenBSD-3.1 .
>
> WMD> Again, thanks for any time that you may have to spare.
>
>
>
> WMD> Matthew D. Wood
>
> WMD> _______________________________________________
> WMD> Mod_python mailing list
> WMD> Mod_python@modpython.org
> WMD> http://www.modpython.org/mailman/listinfo/mod_python
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://www.modpython.org/mailman/listinfo/mod_python
>


From conrad at hep.caltech.edu  Thu Aug 29 13:59:14 2002
From: conrad at hep.caltech.edu (Conrad Steenberg)
Date: Fri Jan  9 21:59:35 2004
Subject: [mod_python] It all started with that -DEAPI error...
In-Reply-To: <Pine.GSO.4.40.0208291444050.27511-100000@ucsu.colorado.edu>
References: <Pine.GSO.4.40.0208291444050.27511-100000@ucsu.colorado.edu>
Message-ID: <1030654755.14778.152.camel@heppc22.cithep.caltech.edu>

Hi Matthew

Another thing you may check is to run 'strace httpd -X' to show where
mod_python looks for libraries etc. It may be that it picks up python
libraries from the wrong python version.

Cheers!

Conrad

On Thu, 2002-08-29 at 13:44, WOOD MATTHEW DAVID wrote:
> I did not see that.  However, it didn't help me either.  But thanks
> regardless.  I really appreciate the help.
> 
> Matthew D. Wood, University of Colorado
> 
> On Thu, 29 Aug 2002, Sean Abrahams wrote:
> 
> > Matthew,
> >
> > I had the DEAPI error yesterday. Running Debian (level testing).
> >
> > This is what I did.
> >
> > """
> > ./configure
> >
> > edit src/Makefile and change the OPT= line to read OPT=-DEAPI
> >
> > then run "make dso"
> >
> > then run "make install_dso"
> > """
> >
> > Hope this works for you.
> >
> > --Sean
> >
> > Thursday, August 29, 2002, 12:51:37 PM, you wrote:
> >
> > WMD> Hello everyone.  I would love to say that I'm not a newbie to mod_python,
> > WMD> but I've never successfully installed it.
> >
> > WMD> My latest attempt is on an OpenBSD-3.1 box.
> >
> > WMD> this server has both python2.1 and python2.2 on it.  (I didn't
> > WMD> particularly want python2.1, but the OpenBSD ports tree decided that I
> > WMD> would get both python versions.  :-) )
> >
> > WMD> Regardless, I uncompressed the mod_python tarball, and went to work,
> > WMD> eventually recieving the standard -DEAPI error:
> >
> > WMD>    > sudo apachectl start
> > WMD>    [Thu Aug 29 13:20:35 2002] [warn] Loaded DSO
> > WMD>    /usr/lib/apache/modules/mod_python.so uses plain Apache 1.3 API, this
> > WMD>    module might crash under EAPI! (please recompile it with -DEAPI)
> > WMD>    /usr/sbin/apachectl start: httpd could not be started
> >
> >
> > WMD> At first, I thought it was the -DEAPI problem that was preventing me from
> > WMD> starting the httpd altogether, but after searching around on the
> > WMD> mod_python webpage, I (think I) fixed that error.  Now, I just can't start
> > WMD> the httpd deamon:
> >
> > WMD>     > sudo apachectl start
> > WMD>     /usr/sbin/apachectl start: httpd could not be started
> >
> >
> > WMD> I can start the deamon when I comment out the "LoadModule
> > WMD> python_module..." line, but that's clearly not the goal.
> >
> > WMD> I'm hoping that I'm not reporting something stupid (other than me), but I
> > WMD> just can't get this to work.  I've asked several of my "better at UNIX
> > WMD> than I am" friends, and they have no ideas either.
> >
> > WMD> What do you guys suggest?
> >
> > WMD> Oh, and by the way, my system is using the standard apache1.3 that comes
> > WMD> "out of the box" with OpenBSD-3.1 .
> >
> > WMD> Again, thanks for any time that you may have to spare.
> >
> >
> >
> > WMD> Matthew D. Wood
> >
> > WMD> _______________________________________________
> > WMD> Mod_python mailing list
> > WMD> Mod_python@modpython.org
> > WMD> http://www.modpython.org/mailman/listinfo/mod_python
> >
> > _______________________________________________
> > Mod_python mailing list
> > Mod_python@modpython.org
> > http://www.modpython.org/mailman/listinfo/mod_python
> >
> 
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://www.modpython.org/mailman/listinfo/mod_python
-- 
*-----------------------------------------*
| Conrad Steenberg                        |
| Caltech, Mail Code 356-48               |
| Pasadena, CA, 91125                     |
| e-mail: conrad@hep.caltech.edu          |
| Tel: (626) 395-8758                     |
*-----------------------------------------*


From ian at veryfresh.com  Thu Aug 29 14:29:40 2002
From: ian at veryfresh.com (Ian Clelland)
Date: Fri Jan  9 21:59:35 2004
Subject: [mod_python] mod_python.publisher
In-Reply-To: <20020829144019.A1020@jki2.com>
References: <20020829144019.A1020@jki2.com>
Message-ID: <20020829212940.GB5501@fullfactor.com>

On Thu, Aug 29, 2002 at 02:40:19PM -0700, kai@keliikuli.com wrote:
> I had an authentication header problem with opera 6.0.2 
> on Linux (Slackware 8.1).  I traced it to Lines 250 
> and/or 263 of mod_python.publisher...

> opera doesn't like the spaces between realm,=, and "%s"' % realm

Interesting; sounds like Opera is broken in this respect. The spec is quite 
clear in that white space is allowed between tokens and separators. (Of 
course, none of the WWW-Authenticate examples ever use any spaces, so I can 
see where this might have been missed.)

> s = 'Basic realm="%s"' % realm
> which produces this header line
> WWW-Authenticate: Basic realm = "Members Only"\r\n

In the spirit of 'be conservative in what you send, and liberal in what you 
accept', I think that this change should be made to the Publisher source, 
at least for the next release. In the meantime, perhaps someone should file 
a bug report with the Opera team about this. They should be accepting the 
header with spaces in the formatting.

> I then tested it on a few others with the above change:
> 
> MSIE 6.0.2600.0000 ( what's with that version numbering? ): OK
> Mozilla 1.0: OK
> 
> I'm going to test on some more but being lazy I thought I'd 
> ask if anybody knows of any browsers and the versions thereof
> which are fussy about the WWW-Authenticate line

I don't think that any other browsers will have problems with the terser 
format 'realm="name"', since that's what Apache uses by default, and I've 
never heard of a browser not understanding Apache's basic authentication.


Ian Clelland
<ian@veryfresh.com>

From peter.bittner at gmx.net  Fri Aug 30 11:39:27 2002
From: peter.bittner at gmx.net (Peter Bittner)
Date: Fri Jan  9 21:59:35 2004
Subject: [mod_python] Code Sample Collection would be helpful
Message-ID: <28957.1030700367@www15.gmx.net>

Hi there Python friends!

I think this has already been proposed once, but still it is a very
important issue:

The mod_python manual is great, sure. It even contains some sample code to
get started. But what is missing for the the (Python-)mod_python community is
a pool of sample code where one can see how different things have been
tackled by different people.

I am sure mod_python would be much more attactive then since it would be
easier to get right into it, to see working code, to adapt working code to one's
needs.

When I say pool I'm thinking of something like http://www.hotscripts.com
(BTW: I'm just seeing there is some python stuff on there already. Though
not really much, and even less about mod_python.) :-(

I'm sure there are a couple of guys out there in the mod_python community
that would be willing to share some of their code (for a GPL-license, as
shareware or freeware) if there were something like a "Sample Code Pool" on the
mod_python website. - Not all the code we all are writing is "for internal use
only" and some among us would be happy to publish their code. (I know from
myself how much useful code in C, PHP and JavaScript I've coded and it's okay
for me to know someone is using it and finding it helpful.)

Anyone out there who finds this idea good enough to be realized?
Who of you would like to help contributing to such a sample code pool?

Peter

-- 
Peter Bittner
mobil: +43/(0)650/4151545
web: http://www.bittner.at.tf - http://beam.to/htmlkurs
mail: peter.bittner@gmx.net

"Free software is like free speech, not free beer" (Richard Stallman)

GMX - Die Kommunikationsplattform im Internet.
http://www.gmx.net


From fabbe at paniq.net  Fri Aug 30 13:54:27 2002
From: fabbe at paniq.net (Fabian Fagerholm)
Date: Fri Jan  9 21:59:35 2004
Subject: [mod_python] Code Sample Collection would be helpful
In-Reply-To: <28957.1030700367@www15.gmx.net>
References: <28957.1030700367@www15.gmx.net>
Message-ID: <1030704868.11126.12.camel@kernel>

On Fri, 2002-08-30 at 12:39, Peter Bittner wrote:
> ...
> Anyone out there who finds this idea good enough to be realized?
> Who of you would like to help contributing to such a sample code pool?

See this thread that recently formed on this very list:
http://www.modpython.org/pipermail/mod_python/2002-August/002369.html
There's been a lot of discussion, so see the archives [0].

That thread spawned several things, one of which is a Python SIG
proposal [1]. The purpose of the SIG would be, among other things, to
create a web site with sample code and articles. The initial proposal
only talks about creation of the site, but in the process, some starting
documents would have to be written and a sample code pool could be built
over time.

The proposal hasn't received very many comments so it's doubtful if it
will happen. Post to the Meta-SIG list [2] if you'd like to comment or
endorse the proposal.

Cheers,
Fabian

[0] http://www.modpython.org/pipermail/mod_python/
[1] http://mail.python.org/pipermail/meta-sig/2002-August/001233.html
[2] http://mail.python.org/mailman/listinfo/meta-sig

-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 240 bytes
Desc: This is a digitally signed message part
Url : http://mailman.modpython.org/pipermail/mod_python/attachments/20020830/eef598e0/attachment-0002.bin
From drh9296 at ritvax.rit.edu  Sat Aug 31 16:18:53 2002
From: drh9296 at ritvax.rit.edu (David Higgs)
Date: Fri Jan  9 21:59:36 2004
Subject: [mod_python] Re: It all started with that -DEAPI error
References: <20020830160001.20573.1501.Mailman@eden.ispol.com>
Message-ID: <3D7124AD.10208@rit.edu>

I run an OpenBSD install here.  Never had any luck w/ the static 
install, but the DSO works fine with a bit of work.

1. You can install just python 2.2.
Change to the 2.2 directory before you 'make; make install'.  You can 
pkg_delete the 2.1 if you like.

2. I never made mod_python work with thread support compiled.  There is 
no 'no_threads' flavor on the ports tree that I can determine.  Download 
the python 2.2 source and manually compile it without threads and 
install to a separate location.  I used /usr/www_python/ as an install 
directory.

3. Change the OPT as shown in the other response to get rid of the DEAPI 
error.  No biggie.

4. Make sure your PATH is setup correctly so when you compile 
mod_python, it finds the non-threaded python binaries first.  See 
http://www.modpython.org/pipermail/mod_python/2002-August/002353.html 
for details.

5. Make a DSO.  I tried for several days to get static working, without 
any luck at a stable httpd.  At some point I should probably provide the 
mailing list with the symptoms, so it can be resolved.

As for your error, check your default httpd log.  Even since apache 
couldn't start up, it will have more details on what went wrong.

--david


From christoph at cocon-seide.com  Thu Aug  1 09:33:47 2002
From: christoph at cocon-seide.com (Christoph Fritzsch)
Date: Fri Jan  9 22:03:17 2004
Subject: [mod_python] Configuring Apache
In-Reply-To: <3055.1028048088@www55.gmx.net>
Message-ID: <200208010737.g717bms59462@eden.ispol.com>

Hi Peter,

I tried it with Suse 7.3 some time ago and found it only workable by 

1) uncommenting all <Ifmodule python>  </if..>

#<IfDefine Python>
LoadModule python_module      /usr/lib/apache/mod_python.so
#</IfDefine>
#<IfDefine Python>
AddModule mod_python.c
#</IfDefine>

so the module is loaded for sure, as I couldnt get it to work with the Suse supplied 
starting parameters

2) Then I put this in there

#Python
#<IfModule mod_python.c>
<Directory "/usr/local/httpd/htdocs/test">
AddHandler python-program .py
PythonHandler mptest
PythonDebug On
</Directory>
#</IfModule>

as you did it

and  I also had to put in a  link 
/usr/lib/python2.1/site-packages/mod_python 
->/usr/lib/apache/lib/python2.1/site-packages/mod_python/

maybe you hv to replace the 2.1 to 2.2

reload apache and any file you call in the test directory will execute the mptest program

This is what the mod_python should do. That is as far as I got. I think next step is to 
expand the mptest program so you can call subroutines in it which presumaly do more 
usefull stuff than "Hello World!" !!

BR Christoph




From peter.bittner at gmx.net  Thu Aug  1 10:46:03 2002
From: peter.bittner at gmx.net (Peter Bittner)
Date: Fri Jan  9 22:03:17 2004
Subject: [mod_python] Re: Configuring Apache - It works!
References: <200208010737.g717bms59462@eden.ispol.com>
Message-ID: <18131.1028191563@www63.gmx.net>

Finally it works!
I had to create a symbolc link, as proposed by Christoph:

# ln -s /usr/lib/apache/lib/python2.2/site-packages/mod_python
/usr/lib/python2.2/site-packages/mod_python

Thank you very much!! - (I was at the end of my wisdom!)
Cheers, Peter


"Christoph Fritzsch" scripsit:
>
> and  I also had to put in a  link 
> /usr/lib/python2.1/site-packages/mod_python 
> ->/usr/lib/apache/lib/python2.1/site-packages/mod_python/

-- 
Peter Bittner
mobil: +43/(0)650/4151545
web: http://www.bittner.at.tf - http://beam.to/htmlkurs
mail: peter.bittner@gmx.net

"Free software is like free speech, not free beer" (Richard Stallman)

GMX - Die Kommunikationsplattform im Internet.
http://www.gmx.net


From rclilly at lvcm.com  Sat Aug  3 22:04:45 2002
From: rclilly at lvcm.com (Robert Lilly)
Date: Fri Jan  9 22:03:17 2004
Subject: [mod_python] Mod_python and Apache problems
Message-ID: <JBEILMCCPJDCPPHHKPFJCEDDCAAA.rclilly@lvcm.com>

Hello all,

I'm trying to get Mod_python to work with Apache/1.3.26 (Win32)
mod_python/2.7.6 Python/2.2.1 PHP/4.22 on Windows 2000 Professional.

I get the following error when I try to access the mptest.py page:

--
 [Sat Aug 03 21:19:55 2002] [warn] Loaded DSO modules/mod_python.dll uses
plain Apache 1.3 API, this module might crash  under EAPI! (please recompile
it with -DEAPI)
 make_obcallback(): could not import mod_python.apache.
 make_obcallback(): could not call init.
 make_obcallback(): could not import mod_python.apache.
 make_obcallback(): could not call init.
 make_obcallback(): could not import mod_python.apache.
 make_obcallback(): could not call init.
 make_obcallback(): could not import mod_python.apache.
 make_obcallback(): could not call init.
 make_obcallback(): could not import mod_python.apache.
 make_obcallback(): could not call init.
 [Sat Aug 03 21:20:07 2002] [error] [client 192.168.123.116] python_handler:
make_obcallback returned no obCallBack!
--

My httpd.conf contains the following:

    LoadModule python_module modules/mod_python.dll

    AddModule mod_python.c

    <Directory "E:/My Documents/RCL Enterprises/Web/htdocs/python">
            AddHandler python-program .py
            PythonHandler mptest
            PythonDebug on
    </Directory>


I try to access it using http://localhost/python/mptest.py and I get a 505
Internal Server Error. The error log contains the above.

Any clues about what I'm doing wrong? Does anyone have any pointers on
getting Python to work under Apache on Windows 2000?

TIA,

Robert Lilly
Apache/Python/PHP newbie!
---
Outgoing mail is certified Virus Free.
Checked by AVG anti-virus system (http://www.grisoft.com).
Version: 6.0.381 / Virus Database: 214 - Release Date: 8/2/2002


From Bryn.Davies at AirLiquide.com  Tue Aug  6 11:15:25 2002
From: Bryn.Davies at AirLiquide.com (Davies, Bryn)
Date: Fri Jan  9 22:03:18 2004
Subject: [mod_python] Win32 Installs: import _apache
Message-ID: <82E2D0C417E81A4CB94A56AD625FE4366BDD38@au-hokrypton.as.corp.airliquide.com>

 First, I apologise for jumping in straight away with a question, instead of
lurking around and possibly trying to help some others, but I'm a bit
puzzled as how to get around the problem I'm facing.

 I've run mod_python on Linux servers before, but for various reasons, work
wants this one deployed on Win32 for the moment.  Apache deployed fine, I
added mod_python.dll to LoadModules, performed the AddModule mod_python.c
etc, and Apache starts fine.  The problem arises when I try to execute the
example python script as shown in the Win32 Installation Guide ( App. A ):

 Here is an excerpt from the error log:

[Tue Aug 06 10:03:35 2002] [error] [client 172.17.1.39]   File "C:\program
files\python22\lib\mod_python\apache.py", line 55, in ?
[Tue Aug 06 10:03:35 2002] [error] [client 172.17.1.39]     import _apache
[Tue Aug 06 10:03:35 2002] [error] [client 172.17.1.39] ImportError: No
module named _apache

 At the expense of sounding like a dimwit, can anyone inform me of where
this module lives?  It doesn't seem to be in the distributions I downloaded.
If it is a code object, can someone likewise inform me of a source for a
precompiled version?  Decent compilers are rather scarce here.  It would be
great if I could get this project up on its legs, because ( irony ) if I can
get all this jumping on Win32, apparently I'll be able to use Linux servers
for the final deployment. :-P

 If anyone can give me any advice, I would be most greatful to them. :-)

 Regards, and happy pythoning,
  Bryn Davies.

-- 
Bryn Davies, Systems Administrator.
Air Liquide Healthcare Australia.

From rclilly at lvcm.com  Tue Aug  6 18:49:53 2002
From: rclilly at lvcm.com (Robert Lilly)
Date: Fri Jan  9 22:03:18 2004
Subject: [mod_python] Mod_python and Apache problems
In-Reply-To: <JBEILMCCPJDCPPHHKPFJCEDDCAAA.rclilly@lvcm.com>
Message-ID: <EGEMLKBGPBCGGGFNPMGNKECBCDAA.rclilly@lvcm.com>

I figured it out! So, for the sake of the archives, here's what I did.

It turns out that there's a second mod_python folder buried several levels
down inside the first one. THIS is the one that needs to go into python/Lib,
as it contains the necessary libraries. I moved it out from it's hiding
place and put it into python/Lib and it's "Hello world!"

I've decided to ignore the EAPI warning, since I can't figure out how to
re-compile mod_python.dll for Windows. The source code I downloaded from
modpython.org compiles for *nix and Cygwin.

Thanks,

Robert

-----Original Message-----
From: mod_python-admin@modpython.org
[mailto:mod_python-admin@modpython.org]On Behalf Of Robert Lilly
Sent: Saturday, August 03, 2002 10:05 PM
To: Mod_python List
Subject: [mod_python] Mod_python and Apache problems


Hello all,

I'm trying to get Mod_python to work with Apache/1.3.26 (Win32)
mod_python/2.7.6 Python/2.2.1 PHP/4.22 on Windows 2000 Professional.

I get the following error when I try to access the mptest.py page:

--
 [Sat Aug 03 21:19:55 2002] [warn] Loaded DSO modules/mod_python.dll uses
plain Apache 1.3 API, this module might crash  under EAPI! (please recompile
it with -DEAPI)
 make_obcallback(): could not import mod_python.apache.
 make_obcallback(): could not call init.
 make_obcallback(): could not import mod_python.apache.
 make_obcallback(): could not call init.
 make_obcallback(): could not import mod_python.apache.
 make_obcallback(): could not call init.
 make_obcallback(): could not import mod_python.apache.
 make_obcallback(): could not call init.
 make_obcallback(): could not import mod_python.apache.
 make_obcallback(): could not call init.
 [Sat Aug 03 21:20:07 2002] [error] [client 192.168.123.116] python_handler:
make_obcallback returned no obCallBack!
--

My httpd.conf contains the following:

    LoadModule python_module modules/mod_python.dll

    AddModule mod_python.c

    <Directory "E:/My Documents/RCL Enterprises/Web/htdocs/python">
            AddHandler python-program .py
            PythonHandler mptest
            PythonDebug on
    </Directory>


I try to access it using http://localhost/python/mptest.py and I get a 505
Internal Server Error. The error log contains the above.

Any clues about what I'm doing wrong? Does anyone have any pointers on
getting Python to work under Apache on Windows 2000?

TIA,

Robert Lilly
Apache/Python/PHP newbie!
---
Outgoing mail is certified Virus Free.
Checked by AVG anti-virus system (http://www.grisoft.com).
Version: 6.0.381 / Virus Database: 214 - Release Date: 8/2/2002

_______________________________________________
Mod_python mailing list
Mod_python@modpython.org
http://www.modpython.org/mailman/listinfo/mod_python
---
Incoming mail is certified Virus Free.
Checked by AVG anti-virus system (http://www.grisoft.com).
Version: 6.0.381 / Virus Database: 214 - Release Date: 8/2/2002

---
Outgoing mail is certified Virus Free.
Checked by AVG anti-virus system (http://www.grisoft.com).
Version: 6.0.381 / Virus Database: 214 - Release Date: 8/2/2002


From gharris at centauri.mb.ca  Wed Aug  7 00:22:33 2002
From: gharris at centauri.mb.ca (George Harrison)
Date: Fri Jan  9 22:03:18 2004
Subject: [mod_python] Win32 Installs: import _apache
In-Reply-To: <82E2D0C417E81A4CB94A56AD625FE4366BDD38@au-hokrypton.as.cor
 p.airliquide.com>
Message-ID: <5.1.0.14.2.20020807001652.00a4f900@pop.mb.sympatico.ca>

Sorry for the length of this post, but this is a list of the mod-python 
folder in my Python22 directory. This is working as far as responding 
"Hello World". On my installation, the .py files were not in the root of 
mod_python, and until I moved them, I was getting the same sort of errors 
as you are reporting.

I don't know enough about either python or apache to explain why these 
work, and I kind of forget where the files were after the install, so YMMV.

gh

TreePrint listing of: D:\Program Files\python22\Lib\mod_python

D:\Program Files\python22\Lib\mod_python
|   COPYRIGHT
|   CREDITS
|   Makefile.in
|   NEWS
|   README
|   configure
|   configure.in
|   install-sh
|   __init__.py
|   apache.py
|   cgihandler.py
|   httpdapi.py
|   publisher.py
|   util.py
|   zhandler.py
|   __init__.pyc
|   apache.pyc
|
+---doc-html
....html files
|   \---icons
|           icons2
|           up.gif
|           previous.png
|           previous.gif
|           next.png
|           next.gif
|           modules.png
|           modules.gif
|           index.png
|           index.gif
|           contents.png
|           contents.gif
|           blank.png
|           up.png
|           blank.gif
|
+---src
|       Makefile.in
|       Makefile.libdir
|       Makefile.tmpl
|       Version.rc
|       _apachemodule.c
|       arrayobject.c
|       connobject.c
|       libpython.module.in
|       mod_python.c
|       mod_python.dsp
|       mod_python.mak
|       requestobject.c
|       serverobject.c
|       tableobject.c
|       util.c
|
\---Doc
        ...tex files



>[Tue Aug 06 10:03:35 2002] [error] [client 172.17.1.39]   File "C:\program
>files\python22\lib\mod_python\apache.py", line 55, in ?
>[Tue Aug 06 10:03:35 2002] [error] [client 172.17.1.39]     import _apache
>[Tue Aug 06 10:03:35 2002] [error] [client 172.17.1.39] ImportError: No
>module named _apache


From rclilly at lvcm.com  Mon Aug 12 08:51:50 2002
From: rclilly at lvcm.com (Robert Lilly)
Date: Fri Jan  9 22:03:18 2004
Subject: [mod_python] make_obcallback(): could not import mod_python.apache
In-Reply-To: <28386.1028130053@www30.gmx.net>
Message-ID: <EGEMLKBGPBCGGGFNPMGNEEFKCDAA.rclilly@lvcm.com>

> -----Original Message-----
> From: mod_python-admin@modpython.org
> [mailto:mod_python-admin@modpython.org]On Behalf Of Peter Bittner
> Sent: Wednesday, July 31, 2002 08:41 AM
> To: mod_python@modpython.org
> Subject: [mod_python] make_obcallback(): could not import
> mod_python.apache
>
>
> I have mod_python installed on SuSE Linux 8.0 and I have set up my
> httpd.conf according to the mod_python documentation, but
> unfortunately I get the
> following error message in my error log:
>
> make_obcallback(): could not import mod_python.apache.
> make_obcallback(): could not call init.

Hi Peter,

I had a similar problem under Windows 2000. In my case in turned out that
there was a second mod_python folder buried several levels inside the first.
THAT is the one that needs to go into python/Lib. Once I did that then it
was "Hello World!"

Hope this helps,

Robert Lilly
---
Outgoing mail is certified Virus Free.
Checked by AVG anti-virus system (http://www.grisoft.com).
Version: 6.0.381 / Virus Database: 214 - Release Date: 8/2/2002


From declosmadeuce at logica.com  Tue Aug 13 11:49:55 2002
From: declosmadeuce at logica.com (De Closmadeuc, Etienne)
Date: Fri Jan  9 22:03:18 2004
Subject: [mod_python] Got error : "python_handler: Dispatch() returned nothing"
Message-ID: <A5290EF4F8CBD211BBA20090273A7E4A039780A9@descartes.fr.logica.com>

> Here is the configuration :
> 
> * Windows NT4 SP6
> * Apache 1.3.20 (Got the message "Apache/1.3.20 (Win32) mod_python/2.7.6
> Python/2.2.1 running..." in the Apache window)
> * Apache configuration file (httpd.conf) (dll correctly installed in
> modules directory) :
> ...
> Port 81
> ...
> LoadModule python_module modules/mod_python.dll
> ...
> <Directory "C:/Program Files/Apache Group/Apache_1_3_20/htdocs/Python">
> 	AddHandler python-program .py
> 	PythonHandler Hello
> 	PythonDebug On
> </Directory>
> 
> * Files in D:\Python22\Lib\mod_python :
> 
> 06/12/00  04:05                  2 411 __init__.py
> 13/08/02  11:26                    237 __init__.pyc
> 19/08/01  00:43                 27 728 apache.py
> 13/08/02  11:26                 26 984 apache.pyc
> 06/12/00  04:05                  5 099 cgihandler.py
> 19/08/01  00:43                 15 103 httpdapi.py
> 19/08/01  00:43                 11 092 publisher.py
> 14/12/00  00:45                 10 831 util.py
> 06/12/00  04:05                  3 360 zhandler.py
> 
> Note that "__init__.py" and "apache.py" have been automatically compiled
> by python after the url invocation.
> 
> * File in C:/Program Files/Apache Group/Apache_1_3_20/htdocs/Python
> 
> Hello.py : 
> 
> from mod_python import apache
> 
> def handler(req):
> 	req.content_type = "text/plain"
> 	req.send_http_header()
> 	req.write("Hello world !")
> 	return apache.OK
> 
> * Error message in error.log after url invocation
> (http://localhost:81/Python/Hello.py) :
> 
> [Tue Aug 13 11:26:26 2002] [error] [client 127.0.0.1] python_handler:
> Dispatch() returned nothing.
> 
> 
> Can you help me to fix that problem ? Thanks.
> 
> Etienne de Closmadeuc (declosmadeuce@logica.com)
> Logica SA
> 183, route de Can?jan 33173 GRADIGNAN CEDEX
> T?l : 05.56.75.77.00
> 
> 

This e-mail and any attachment is for authorised use by the intended recipient(s) only.  It may contain proprietary material, confidential information and/or be subject to legal privilege.  It should not be copied, disclosed to, retained or used by, any other party.  If you are not an intended recipient then please promptly delete this e-mail and any attachment and all copies and inform the sender.  Thank you.

From mateusz at ant.gliwice.pl  Wed Aug 14 23:10:50 2002
From: mateusz at ant.gliwice.pl (Mateusz Korniak)
Date: Fri Jan  9 22:03:18 2004
Subject: [mod_python] All power of mod_python in publisher handler ?
Message-ID: <200208142310.50497.mateusz@ant.gliwice.pl>

I'm in process of converting some 'pure' mod_python handlers to publishers 
one.
Basically my handlers looks like

def mod_python_handler(req):
	req.status = mod_python.apache.OK
	req.content_type = ....
	req.send_http_header()
	req.write(content_parts) 
	# many writes like above ...

	return mod_python.apache.OK

so I suppsed to proper equivalent publisher handler should look like:

def publisher_handler(req):
	mod_python_handler(req):

But any call of request.write() results an 500 Internal Server Error.
1) What I'm doing wrong ?
2) What I'm suposed to return from publisher_handler() when all what already 
send do browser via request.write() calls ?

Something opposite is cleanly stated in docs:
"And last, but not the least, note how all the power of mod_python is still 
available to this function, since it has access to the Request object. You 
can do all the same things you can do with a "native" mod_python handler, 
e.g. set custom headers via req.headers_out, return errors by raising 
apache.SERVER_ERROR exceptions, write or read directly to and from the client 
via req.write and req.read, etc. "

TIA
-- 
Mateusz Korniak



From mk at lrn.ru  Wed Aug 14 23:25:49 2002
From: mk at lrn.ru (Michael Krasnovsky)
Date: Fri Jan  9 22:03:18 2004
Subject: [mod_python] Publisher Handler and redirect
Message-ID: <20020814232549.30e7817e.mk@lrn.ru>

Hello!

I have a problem. I need redirection inside a publisher handler. I try
using req.headers_out["Location"] = "http://www.example.com", but it
doesn't work.
Here is the example:

def test(req):
	"""
	"""
	req.headers_out["Location"] = "http://www.example.com"
	req.send_http_header()
	
	return "Going to Example.com..."


What's wrong?
I use the latest mod_python version and 1.3.26 Apache running on Linux.

Thanks.

With best regards,
Michael.


From grisha at modpython.org  Wed Aug 14 18:45:57 2002
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 22:03:18 2004
Subject: [mod_python] Publisher Handler and redirect
In-Reply-To: <20020814232549.30e7817e.mk@lrn.ru>
Message-ID: <Pine.BSF.4.32.0208141845290.56606-100000@localhost>

Try something like:

 def test(req):
       req.headers_out["Location"] = "http://www.example.com"
       req.status = apache.HTTP_MOVED_TEMPORARILY
       return "Going to Example.com..."



On Wed, 14 Aug 2002, Michael Krasnovsky wrote:

> Hello!
>
> I have a problem. I need redirection inside a publisher handler. I try
> using req.headers_out["Location"] = "http://www.example.com", but it
> doesn't work.
> Here is the example:
>
> def test(req):
> 	"""
> 	"""
> 	req.headers_out["Location"] = "http://www.example.com"
> 	req.send_http_header()
>
> 	return "Going to Example.com..."
>
>
> What's wrong?
> I use the latest mod_python version and 1.3.26 Apache running on Linux.
>
> Thanks.
>
> With best regards,
> Michael.
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://www.modpython.org/mailman/listinfo/mod_python
>


From mk at lrn.ru  Thu Aug 15 12:16:48 2002
From: mk at lrn.ru (Michael Krasnovsky)
Date: Fri Jan  9 22:03:18 2004
Subject: [mod_python] Publisher Handler and redirect
In-Reply-To: <Pine.BSF.4.32.0208141845290.56606-100000@localhost>
References: <20020814232549.30e7817e.mk@lrn.ru>
	<Pine.BSF.4.32.0208141845290.56606-100000@localhost>
Message-ID: <20020815121648.4b7eb304.mk@lrn.ru>

Hi, Gregory!

Thanks a lot. It works.
I also think that  this case should be described somewhere in FAQ.
Mateusz is right.

Michael.

On Wed, 14 Aug 2002 18:45:57 -0400 (EDT)
"Gregory (Grisha) Trubetskoy" <grisha@modpython.org> wrote:

> 
> Try something like:
> 
>  def test(req):
>        req.headers_out["Location"] = "http://www.example.com"
>        req.status = apache.HTTP_MOVED_TEMPORARILY
>        return "Going to Example.com..."
> 
> 
> 
> On Wed, 14 Aug 2002, Michael Krasnovsky wrote:
> 
> > Hello!
> >
> > I have a problem. I need redirection inside a publisher handler. I
> > try using req.headers_out["Location"] = "http://www.example.com",
> > but it doesn't work.
> > Here is the example:
> >
> > def test(req):
> > 	"""
> > 	"""
> > 	req.headers_out["Location"] = "http://www.example.com"
> > 	req.send_http_header()
> >
> > 	return "Going to Example.com..."
> >
> >
> > What's wrong?
> > I use the latest mod_python version and 1.3.26 Apache running on
> > Linux.
> >
> > Thanks.
> >
> > With best regards,
> > Michael.
> >
> > _______________________________________________
> > Mod_python mailing list
> > Mod_python@modpython.org
> > http://www.modpython.org/mailman/listinfo/mod_python
> >
> 
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://www.modpython.org/mailman/listinfo/mod_python

From gbeasley at tsa.ac.za  Thu Aug 15 12:19:30 2002
From: gbeasley at tsa.ac.za (Grant Beasley)
Date: Fri Jan  9 22:03:19 2004
Subject: [mod_python] Internal redirect (to the same server)
Message-ID: <OOENKCHGJGHILGPAGHGOEEPOCDAA.gbeasley@tsa.ac.za>

Hi

If I want to redirect the browser to another URL on my server, I can use a
HTTP redirect, but as I understand it, the redirect gets sent to the
browser, which then goes to the new URL, i.e. comes back to my server. I
want to be able to tell apache to serve another URL, without the useless
loop back to the browser.

Is this possible? And if so, could you give me a few pointers?

Secondly, what is the difference between HTTP_MOVED_TEMPORARILY and
HTTP_TEMPORARY_REDIRECT?

Thanks
Grant Beasley


From mk at lrn.ru  Thu Aug 15 13:10:18 2002
From: mk at lrn.ru (Michael Krasnovsky)
Date: Fri Jan  9 22:03:19 2004
Subject: Fw: Re: [mod_python] Publisher Handler and redirect
Message-ID: <20020815131018.1bed9908.mk@lrn.ru>


Begin forwarded message:

Date: Thu, 15 Aug 2002 00:18:39 +0200
From: Mateusz Korniak <mateusz@ant.gliwice.pl>
To: mk@lrn.ru
Subject: Re: [mod_python] Publisher Handler and redirect


On Wednesday 14 August 2002 23:25, Michael Krasnovsky wrote:
> Hello!
>
> I have a problem. I need redirection inside a publisher handler. I try
> using req.headers_out["Location"] = "http://www.example.com", but it
> doesn't work.
> Here is the example:
>
> def test(req):
> 	"""
> 	"""
> 	req.headers_out["Location"] = "http://www.example.com"
> 	req.send_http_header()
> 	return "Going to Example.com..."
>
> What's wrong?
Missing req.status set to mod_python.apache.HTTP_*_REDIRECT
 
def redirect(req):
	req.status = mod_python.apache.HTTP_TEMPORARY_REDIRECT
	req.headers_out["Location"] = "http://www.ant.gliwice.pl"
	req.send_http_header()


P.S. This should go to FAQ ;)

-- 
Mateusz Korniak
"Black holes are where God divided by zero." - Steven Wright


-- 
Michael Krasnovsky

Partner
Project Leader

bisoft s.r.o., Prague, Czech Republic

T +420 [0]2  51 61 42 21
M +420 [0]724  13 33 80
E michael.krasnovsky@bisoft.cz

From fabbe at paniq.net  Thu Aug 15 16:04:58 2002
From: fabbe at paniq.net (Fabian Fagerholm)
Date: Fri Jan  9 22:03:19 2004
Subject: [mod_python] Questions for the FAQ - please check and confirm (req.write() and
 return)
Message-ID: <1029416698.982.40.camel@kernel>

I have FAQ entries that I wish to add, but I thought it would be best to
post them here first for review. I'd like you to
        * confirm that the text it correct and
        * provide any additional information you think would be
          appropriate.

I will then submit this information to the FAQ Wizard.

Here goes:

--8<--
Using req.write() and return statements in the Publisher Handler

You may only call req.write() once. If you call it several times, you'll
get strange results.

If you use req.write() in a function called by the Publisher Handler,
you must still return a string at the end of the function. An empty
string is not enough.
--8<--

Thanks,
Fabian

-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 240 bytes
Desc: This is a digitally signed message part
Url : http://mailman.modpython.org/pipermail/mod_python/attachments/20020815/a3eb7b4f/attachment-0006.bin
From fabbe at paniq.net  Thu Aug 15 16:04:58 2002
From: fabbe at paniq.net (Fabian Fagerholm)
Date: Fri Jan  9 22:03:19 2004
Subject: [mod_python] Questions for the FAQ - please check and confirm (req.write() and
 return)
Message-ID: <1029416698.982.40.camel@kernel>

I have FAQ entries that I wish to add, but I thought it would be best to
post them here first for review. I'd like you to
        * confirm that the text it correct and
        * provide any additional information you think would be
          appropriate.

I will then submit this information to the FAQ Wizard.

Here goes:

--8<--
Using req.write() and return statements in the Publisher Handler

You may only call req.write() once. If you call it several times, you'll
get strange results.

If you use req.write() in a function called by the Publisher Handler,
you must still return a string at the end of the function. An empty
string is not enough.
--8<--

Thanks,
Fabian

-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 240 bytes
Desc: This is a digitally signed message part
Url : http://mailman.modpython.org/pipermail/mod_python/attachments/20020815/a3eb7b4f/attachment-0007.bin
From vmilitaru at sympatico.ca  Thu Aug 15 13:38:50 2002
From: vmilitaru at sympatico.ca (vio)
Date: Fri Jan  9 22:03:19 2004
Subject: [mod_python] Publisher Handler and redirect
In-Reply-To: <20020815121648.4b7eb304.mk@lrn.ru>; from mk@lrn.ru on Thu, Aug 15, 2002 at 12:16:48PM +0200
References: <20020814232549.30e7817e.mk@lrn.ru> <Pine.BSF.4.32.0208141845290.56606-100000@localhost> <20020815121648.4b7eb304.mk@lrn.ru>
Message-ID: <20020815133850.A338@eye.neb>

I believe the defining docs on mod_python redirection live in the FAQ (already).
http://www.modpython.org/FAQ/faqw.py?req=show&file=faq03.002.htp

Cheers, 
Vio


* Michael Krasnovsky <mk@lrn.ru> [020815 13:26]:
> Hi, Gregory!
> 
> Thanks a lot. It works.
> I also think that  this case should be described somewhere in FAQ.
> Mateusz is right.
> 
> Michael.
> 
> On Wed, 14 Aug 2002 18:45:57 -0400 (EDT)
> "Gregory (Grisha) Trubetskoy" <grisha@modpython.org> wrote:
> 
> > 
> > Try something like:
> > 
> >  def test(req):
> >        req.headers_out["Location"] = "http://www.example.com"
> >        req.status = apache.HTTP_MOVED_TEMPORARILY
> >        return "Going to Example.com..."
> > 
> > 
> > 
> > On Wed, 14 Aug 2002, Michael Krasnovsky wrote:
> > 
> > > Hello!
> > >
> > > I have a problem. I need redirection inside a publisher handler. I
> > > try using req.headers_out["Location"] = "http://www.example.com",
> > > but it doesn't work.
> > > Here is the example:
> > >
> > > def test(req):
> > > 	"""
> > > 	"""
> > > 	req.headers_out["Location"] = "http://www.example.com"
> > > 	req.send_http_header()
> > >
> > > 	return "Going to Example.com..."
> > >
> > >
> > > What's wrong?
> > > I use the latest mod_python version and 1.3.26 Apache running on
> > > Linux.
> > >
> > > Thanks.
> > >
> > > With best regards,
> > > Michael.
> > >
> > > _______________________________________________
> > > Mod_python mailing list
> > > Mod_python@modpython.org
> > > http://www.modpython.org/mailman/listinfo/mod_python
> > >
> > 
> > _______________________________________________
> > Mod_python mailing list
> > Mod_python@modpython.org
> > http://www.modpython.org/mailman/listinfo/mod_python
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://www.modpython.org/mailman/listinfo/mod_python

From vmilitaru at sympatico.ca  Thu Aug 15 13:38:50 2002
From: vmilitaru at sympatico.ca (vio)
Date: Fri Jan  9 22:03:19 2004
Subject: [mod_python] Publisher Handler and redirect
In-Reply-To: <20020815121648.4b7eb304.mk@lrn.ru>; from mk@lrn.ru on Thu, Aug 15, 2002 at 12:16:48PM +0200
References: <20020814232549.30e7817e.mk@lrn.ru> <Pine.BSF.4.32.0208141845290.56606-100000@localhost> <20020815121648.4b7eb304.mk@lrn.ru>
Message-ID: <20020815133850.A338@eye.neb>

I believe the defining docs on mod_python redirection live in the FAQ (already).
http://www.modpython.org/FAQ/faqw.py?req=show&file=faq03.002.htp

Cheers, 
Vio


* Michael Krasnovsky <mk@lrn.ru> [020815 13:26]:
> Hi, Gregory!
> 
> Thanks a lot. It works.
> I also think that  this case should be described somewhere in FAQ.
> Mateusz is right.
> 
> Michael.
> 
> On Wed, 14 Aug 2002 18:45:57 -0400 (EDT)
> "Gregory (Grisha) Trubetskoy" <grisha@modpython.org> wrote:
> 
> > 
> > Try something like:
> > 
> >  def test(req):
> >        req.headers_out["Location"] = "http://www.example.com"
> >        req.status = apache.HTTP_MOVED_TEMPORARILY
> >        return "Going to Example.com..."
> > 
> > 
> > 
> > On Wed, 14 Aug 2002, Michael Krasnovsky wrote:
> > 
> > > Hello!
> > >
> > > I have a problem. I need redirection inside a publisher handler. I
> > > try using req.headers_out["Location"] = "http://www.example.com",
> > > but it doesn't work.
> > > Here is the example:
> > >
> > > def test(req):
> > > 	"""
> > > 	"""
> > > 	req.headers_out["Location"] = "http://www.example.com"
> > > 	req.send_http_header()
> > >
> > > 	return "Going to Example.com..."
> > >
> > >
> > > What's wrong?
> > > I use the latest mod_python version and 1.3.26 Apache running on
> > > Linux.
> > >
> > > Thanks.
> > >
> > > With best regards,
> > > Michael.
> > >
> > > _______________________________________________
> > > Mod_python mailing list
> > > Mod_python@modpython.org
> > > http://www.modpython.org/mailman/listinfo/mod_python
> > >
> > 
> > _______________________________________________
> > Mod_python mailing list
> > Mod_python@modpython.org
> > http://www.modpython.org/mailman/listinfo/mod_python
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://www.modpython.org/mailman/listinfo/mod_python

From vmilitaru at sympatico.ca  Thu Aug 15 14:02:27 2002
From: vmilitaru at sympatico.ca (vio)
Date: Fri Jan  9 22:03:19 2004
Subject: [mod_python] Internal redirect (to the same server)
In-Reply-To: <OOENKCHGJGHILGPAGHGOEEPOCDAA.gbeasley@tsa.ac.za>; from gbeasley@tsa.ac.za on Thu, Aug 15, 2002 at 12:19:30PM +0200
References: <OOENKCHGJGHILGPAGHGOEEPOCDAA.gbeasley@tsa.ac.za>
Message-ID: <20020815140226.B338@eye.neb>

I believe that each browser handles the redirect HTTP messages a little 
differently, so redirection is browser-dependant.
But the question is rather how to by-pass the redirect altogether.
I believe you can do that by writing directly to the browser.

So instead of something like:
 _REQUEST.headers_out['location'] = 'http://' + your_other_virtual_server
 _REQUEST.status = apache.HTTP_MOVED_PERMANENTLY
 _REQUEST.send_http_header()
 raise apache.SERVER_RETURN, apache.OK

you would do something like:
 _REQUEST.headers_out.add('Pragma','no-cache')
 _REQUEST.headers_out.add( your other headers here)
 _REQUEST.send_http_header()

 _REQUEST.write(some_html_document)
 raise apache.SERVER_RETURN, apache.OK

where :
 some_html_document = """\
 <HTML>
 <HEAD><TITLE> Hello </TITLE></HEAD>
 <BODY>
 ...
 </BODY>
 </HTML>
 """

Hope this helps,
Vio


* Grant Beasley <gbeasley@tsa.ac.za> [020815 13:26]:
> Hi
> 
> If I want to redirect the browser to another URL on my server, I can use a
> HTTP redirect, but as I understand it, the redirect gets sent to the
> browser, which then goes to the new URL, i.e. comes back to my server. I
> want to be able to tell apache to serve another URL, without the useless
> loop back to the browser.
> 
> Is this possible? And if so, could you give me a few pointers?
> 
> Secondly, what is the difference between HTTP_MOVED_TEMPORARILY and
> HTTP_TEMPORARY_REDIRECT?
> 
> Thanks
> Grant Beasley
> 
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://www.modpython.org/mailman/listinfo/mod_python

From fabbe at paniq.net  Thu Aug 15 23:03:40 2002
From: fabbe at paniq.net (Fabian Fagerholm)
Date: Fri Jan  9 22:03:19 2004
Subject: [mod_python] Messages not getting through to list server?
Message-ID: <1029441820.982.225.camel@kernel>

Hi all,
Sorry to bother the list with this question, but has anyone noticed that
the mailing list seems to be extremely slow (or even not working at
all)?

Are there some network problems or is the server under too much load?

I'm hereby offering to host a backup MX for the modpython.org domain if
that would help at all. I might be in a position to offer to host the
mailing list as well if needed. Hardware and network connections are
sufficient to handle at least a few hundred messages per day.

Cheers,
Fabian



From ian at veryfresh.com  Thu Aug 15 15:37:04 2002
From: ian at veryfresh.com (Ian Clelland)
Date: Fri Jan  9 22:03:19 2004
Subject: [mod_python] Internal redirect (to the same server)
In-Reply-To: <OOENKCHGJGHILGPAGHGOEEPOCDAA.gbeasley@tsa.ac.za>
References: <OOENKCHGJGHILGPAGHGOEEPOCDAA.gbeasley@tsa.ac.za>
Message-ID: <20020815223704.GC11141@fullfactor.com>

On Thu, Aug 15, 2002 at 12:19:30PM +0200, Grant Beasley wrote:
> Hi
> 
> If I want to redirect the browser to another URL on my server, I can use a
> HTTP redirect, but as I understand it, the redirect gets sent to the
> browser, which then goes to the new URL, i.e. comes back to my server.

Yep. An HTTP redirect is a (usually) 301 status code sent back to the 
browser to tell it to request a different document. This allows for a 
great deal of flexibility on the server side -- you can go as far as 
redirecting clients to a completely different server, or to a different 
protocol (ftp: or mailto:, even).

> I
> want to be able to tell apache to serve another URL, without the useless
> loop back to the browser.
> 
> Is this possible? And if so, could you give me a few pointers?

If the extra messages really are useless, then the way to eliminate 
them is to change the URL on the server before Apache handles it. The 
simplest method is probably to use mod_alias (or mod_rewrite if you 
need something more powerful).

If you want to do this completely in mod_python, then you can write a 
PythonTransHandler, which will receive all requests, and has the chance 
to modify the URL before Apache passes the request to your main handler.

Remember, though, that in these cases, the client software has no idea 
that the URL has been changed, and will continue to request the old URL 
every time. This can be very useful if you are trying to create a 
'virtual' server layout which is different than your actualy filesystem 
layout, but at other times, you just want to tell the client 'sorry, 
this document has moved; please look for it here now.' That's when the 
HTTP redirects are useful.


> Secondly, what is the difference between HTTP_MOVED_TEMPORARILY and
> HTTP_TEMPORARY_REDIRECT?

HTTP/1.0 only had two redirection status codes: 301 (Moved Permanently) 
and 302 (Moved Temporarily). 302 was used for any situation where the 
client shouldn't remember the response, and should continue to request 
the original URL every time.

In HTTP/1.1, the 302 status code has been split into three different 
codes: 302 (now called 'Found'), 303 (See Other) and 307 (Temporary 
Redirect).

The idea behind this is that a 302 tells the client "I looked for the 
URL which you requested, and this is where I found it." It is not 
necessarily the case that the URL has changed, just that the document 
you want is somewhere else.

A 307 tells the client "The URL you requested has been temporarily 
moved. Please get it from this location, for now." This should be 
returned when the document used to be in one locaion, and probably will 
be back there again, but it has been moved out of the way for a while.

For all practical purposes, these two responses are exactly the same. 
The only difference (besides the semantics) is that HTTP/1.0 clients 
don't understand the 307 code at all, so if you want to use it, you'll 
have to check the protocol version (in mod_python, test req.proto_num 
>= 1001) and fall back to 302 if the client is using HTTP/1.0.


Neither of these status codes should usually be returned in response to 
a POST request, by the way. If a client receives a 302 or 307 from a 
POST request, then it is supposed to confirm the redirect with the 
user, and (after confirmation) repeat the POST to the new URL. A 303 
code can be returned to tell the client "I've processed your POST 
request, and the results you want are at this URL. Please use a GET 
query to access it."


--
Ian Clelland
<ian@veryfresh.com>

From sa at sfsu.edu  Thu Aug  1 17:00:00 2002
From: sa at sfsu.edu (Sean Abrahams)
Date: Fri Jan  9 22:03:20 2004
Subject: [mod_python] Session Handling Help + Writing a Guide On It
Message-ID: <73110242590.20020801170000@sfsu.edu>

I currently find myself having to create a web application using
session management (without cookies). I know there has been some
discussion in the past about adding a session handler to mod_python,
but I was hoping to get some help or get pointed in some directions
for my development.

I've heard that Apache 2.x has a shared memory space? I'm assuming
session data can be temporarily stored there for quick creation,
access, destruction?

I'm new to mod_python and apache handlers, so I'm currently going
through some learning curves.

Anyone willing to share their session development experience?

Here's my base idea (comments encouraged!):
1. I'll have a base directory that requires authorization
(/var/www/apps) which is accessed via the web at htts://foo.bar/apps

2. Any URL pointing to /var/www/apps and its subdirectories will be
handled by a central login script. It will store the initial URL the
user hit, so it can output the user to where he/she wished to go after
authorization. Thus, I can give people a direct link to an application
that's located somewhere inside /var/www/apps and it will prompt them
with the universal HTML login screen, then take them back to the URL
they originally entered.

3. When they login, their user/pass will be checked against a
database, with a positive ID creating a session. Throughout the
session, I can add/remove/modify data stored in the session data,
between pages, etc. (I'm not sure if it's fastest to store session
data in the file system or a DB, but I'm assuming being able to store
it in the system RAM would be most ideal. This is where the Apache 2.x
share memory comes in?)

4. Session ends when user clicks "logout", leaves my domain, or closes
the browser. Thus, if the user leaves the domain, then hits back in
their browser, he/she will get a "user authentication required" error,
or something similar.

I'm definitely excited about putting this together, just a little
disappointed in not being able to find a guide that helps me do this.
Thus, as a side effect to my development of this, and the help I
receive from this list, I will write and publish a guide detailing how
to create this functionality, providing the source code as well.

Thank you!
Sean


From sa at sfsu.edu  Mon Aug  5 09:38:58 2002
From: sa at sfsu.edu (Sean Abrahams)
Date: Fri Jan  9 22:03:20 2004
Subject: [mod_python] Session Handling Help + Writing a Guide On It
Message-ID: <15429380376.20020805093858@sfsu.edu>

I currently find myself having to create a web application using
session management (without cookies). I know there has been some
discussion in the past about adding a session handler to mod_python,
but I was hoping to get some help or get pointed in some directions
for my development.

I've heard that Apache 2.x has a shared memory space? I'm assuming
session data can be temporarily stored there for quick creation,
access, destruction?

I'm new to mod_python and apache handlers, so I'm currently going
through some learning curves.

Anyone willing to share their session development experience?

Here's my base idea (comments encouraged!):
1. I'll have a base directory that requires authorization
(/var/www/apps) which is accessed via the web at htts://foo.bar/apps

2. Any URL pointing to /var/www/apps and its subdirectories will be
handled by a central login script. It will store the initial URL the
user hit, so it can output the user to where he/she wished to go after
authorization. Thus, I can give people a direct link to an application
that's located somewhere inside /var/www/apps and it will prompt them
with the universal HTML login screen, then take them back to the URL
they originally entered.

3. When they login, their user/pass will be checked against a
database, with a positive ID creating a session. Throughout the
session, I can add/remove/modify data stored in the session data,
between pages, etc. (I'm not sure if it's fastest to store session
data in the file system or a DB, but I'm assuming being able to store
it in the system RAM would be most ideal. This is where the Apache 2.x
share memory comes in?)

4. Session ends when user clicks "logout", leaves my domain, or closes
the browser. Thus, if the user leaves the domain, then hits back in
their browser, he/she will get a "user authentication required" error,
or something similar.

I'm definitely excited about putting this together, just a little
disappointed in not being able to find a guide that helps me do this.
Thus, as a side effect to my development of this, and the help I
receive from this list, I will write and publish a guide detailing how
to create this functionality, providing the source code as well.

Thank you!
Sean


From dirkLeas at mac.com  Wed Aug  7 06:48:12 2002
From: dirkLeas at mac.com (Dirk Leas)
Date: Fri Jan  9 22:03:20 2004
Subject: [mod_python] 3.0.0 alpha binaries for Win32
In-Reply-To: <200208061611.g76GB4s39439@eden.ispol.com>
Message-ID: <000001c23dff$ef985d50$9865fea9@leasCray>

Anybody have 3.0.0 binaries available for download?

TIA,
D



From rien at yeepa.org  Wed Aug  7 23:05:30 2002
From: rien at yeepa.org (Adrien Plisson)
Date: Fri Jan  9 22:03:20 2004
Subject: [mod_python] Win32, Apache and mod_python
References: <EGEMLKBGPBCGGGFNPMGNKECBCDAA.rclilly@lvcm.com>
Message-ID: <004f01c23e56$2a6b4d60$2cee4cd4@RANDOM>

Hello,

I see a lot of posts concerning mod_pythonh under win32.
So, here is my own experience:
the first time i tried to install mod_python under windows 2000 i had to
tweak a bit with the install. I posted something about that some months ago.
Here is what you should do:

- install apache, you can find precompiled binaries at www.apache.org
- install python. ActiveState is giving a very good distribution of python
for windows for free called ActivePython (www.activestate.com)
- install mod_python. this means you have to download any distribution of
mod_python AND the precompiled mod_python.dll. then follow the instructions
in the mod_python manual (appendix A: Windows installation) except for those
points :

- point 1:
  * "Move (or just drag & drop) the mod python-x folder into the Python lib
     folder (i.e C:\ Program Files\ Python\ lib)."
    the mod_python-x folder should also be renamed 'mod_python'

  * "Move the files in the folder lib inside the mod python folder (C:\
     Program Files\ Python\ lib\ mod_python-x\ lib\ mod python) to the
     C:\ Program Files\ Python\ lib\ mod_python folder. It's safe to delete
these folders we just emptied."
   the first path is incorrect: it's
'...\lib\mod_python-x\python\mod_python\'

- point 2:
  * it talks about adding the LoadModule directive, but on my installation,
i
    had also to add a AddModule directive.

then it should run.

be aware that:

- if mod_python scripts are not in a folder covered by PYTHON_PATH then it
won't be found. on Win32, PYTHON_PATH is stored in the registry at
HKLM\SOFTWARE\PYTHON\PYTHONCORE\<version>\PYTHONPATH

- the warning about EAPI is an apache warning, not a mod_python warning, so
you have to recompile apache with -DEAPI, or download another precompiled
version from the apache website.

- the mod_ython documentation talks about python 1.5.2 or 2.0 and apache
1.3: for me, it runs with python 2.1, apache 1.3.23 and mod_python 2.7.4

- you simply CAN'T do a 'from mod_python import apache' in a python shell.
you HAVE TO be running under apache.

- included with apache are 2 modules named mod_info and mod_status which are
great tools to know if mod_python is running fine or was just ignored.

- the precompiled binaries of all stuffs you have to install are perfect
enough, don't try to compile them on your own unless you really know your
compiler (knowing it is much harder than anyone can think of)

So this is the most i can remember for the moment. i hope it will help... if
some points are not clear enough, just tell me, i will try to be more
precise.

--
rien



From Bryn.Davies at AirLiquide.com  Thu Aug  8 11:12:23 2002
From: Bryn.Davies at AirLiquide.com (Davies, Bryn)
Date: Fri Jan  9 22:03:20 2004
Subject: [mod_python] Humble pie, plus an apology.
Message-ID: <82E2D0C417E81A4CB94A56AD625FE4366DC532@au-hokrypton.as.corp.airliquide.com>

 First, I'd like to apologise for wasting all of your time.  The bug was due
to a typo in the Directory clause in httpd.conf, relating to where the
example python script was kept.  Fixing this, and removing the shebang from
the top of the python script ( hence returning its execution responsibilites
to Apache itself ) resolved my problem.  I shouldn't have assumed the
problem was modpython itself.

 Sorry! *blush*

-- 
Bryn Davies, IT Administrator, Air Liquide Healthcare.
"And journeyed up the mountainside, over the clouds...
 and nothing was ever heard of him again."

From vmilitaru at sympatico.ca  Thu Aug 15 23:45:42 2002
From: vmilitaru at sympatico.ca (vio)
Date: Fri Jan  9 22:03:20 2004
Subject: [Fwd: [mod_python] Messages not getting through to list server?]
In-Reply-To: <3D5C6A14.4B123BA5@sympatico.ca>; from vmilitaru@sympatico.ca on Thu, Aug 15, 2002 at 10:57:24PM -0400
References: <3D5C6A14.4B123BA5@sympatico.ca>
Message-ID: <20020815234542.A626@eye.neb>

I'd dare to say the mod_python list server has been quite terrible for the 
couple of months i've been subscribed to it. But I think the right move
here would rather be to simply move the list to 'sourceforge', and let them
take care of it. They have all the bandwidth and hardware to handle incredible
loads. Totally cheapo free for open source projects. Just have a look at:
http://sourceforge.net/docman/display_doc.php?docid=753&group_id=1#top
There is also a link with all their current (impressive!) hardware, 
but I can't seem to find it.

My 2 c.
Vio

Fabian Fagerholm wrote:
> 
> > Hi all,
> > Sorry to bother the list with this question, but has anyone noticed that
> > the mailing list seems to be extremely slow (or even not working at
> > all)?
> >
> > Are there some network problems or is the server under too much load?
> >
> > I'm hereby offering to host a backup MX for the modpython.org domain if
> > that would help at all. I might be in a position to offer to host the
> > mailing list as well if needed. Hardware and network connections are
> > sufficient to handle at least a few hundred messages per day.
> >
> > Cheers,
> > Fabian
> >
> > _______________________________________________
> > Mod_python mailing list
> > Mod_python@modpython.org
> > http://www.modpython.org/mailman/listinfo/mod_python

From fabbe at paniq.net  Fri Aug 16 10:52:53 2002
From: fabbe at paniq.net (Fabian Fagerholm)
Date: Fri Jan  9 22:03:20 2004
Subject: [Fwd: [mod_python] Messages not getting through to list server?]
In-Reply-To: <20020815234542.A626@eye.neb>
References: <3D5C6A14.4B123BA5@sympatico.ca>  <20020815234542.A626@eye.neb>
Message-ID: <1029484374.2093.10.camel@kernel>

On Fri, 2002-08-16 at 07:45, vio wrote:
> I'd dare to say the mod_python list server has been quite terrible for the 
> couple of months i've been subscribed to it. But I think the right move
> here would rather be to simply move the list to 'sourceforge', and let them
> take care of it. They have all the bandwidth and hardware to handle incredible
> loads. Totally cheapo free for open source projects. Just have a look at:
> http://sourceforge.net/docman/display_doc.php?docid=753&group_id=1#top
> There is also a link with all their current (impressive!) hardware, 
> but I can't seem to find it.

Wherever it ends up being hosted, I hope that these issues will be
resolved soon. I just got a bunch of messages from the list, some which
were sent back in July!

There can never be a thriving mod_python community if the basic means of
communication is cut off.

Without knowing anything about how the mod_python list server is set up,
I see no network problems with it. Connections to port 25 on the server
that is set up as MX for the domain modpython.org work just fine. So the
issue must be with the list software. Or perhaps the mail is transferred
to elsewhere and processed?

In any case, it would we nice if the list server admins could comment on
this. There are plenty of hands to use if help is needed, and there has
been an offer for a backup MX and a suggestion to use Sourceforge, which
should both be taken into consideration.

I'm don't want to offend anyone, but if the list will go on in this
shape, then perhaps the community should arrange for an alternative list
to use?

Cheers,
Fabian



From ian at veryfresh.com  Fri Aug 16 01:08:18 2002
From: ian at veryfresh.com (Ian Clelland)
Date: Fri Jan  9 22:03:20 2004
Subject: Fw: Re: [mod_python] Publisher Handler and redirect
In-Reply-To: <20020815131018.1bed9908.mk@lrn.ru>
References: <20020815131018.1bed9908.mk@lrn.ru>
Message-ID: <20020816080818.GD11141@fullfactor.com>

On Thu, Aug 15, 2002 at 01:10:18PM +0200, Michael Krasnovsky wrote:
> Missing req.status set to mod_python.apache.HTTP_*_REDIRECT
>  
> def redirect(req):
> 	req.status = mod_python.apache.HTTP_TEMPORARY_REDIRECT
> 	req.headers_out["Location"] = "http://www.ant.gliwice.pl"
> 	req.send_http_header()
> 
> 
> P.S. This should go to FAQ ;)

Your first line should probably be something like this:

  req.status = req.proto_num >= 1001 and \
      mod_python.apache.HTTP_TEMPORARY_REDIRECT or \
      mod_python.apache.HTTP_MOVED_TEMPORARILY

since older clients (Pre-HTTP/1.1) won't understand the
HTTP_TEMPORARY_REDIRECT status code.

--
Ian Clelland
<ian@veryfresh.com>

From fabbe at paniq.net  Fri Aug 16 15:17:14 2002
From: fabbe at paniq.net (Fabian Fagerholm)
Date: Fri Jan  9 22:03:20 2004
Subject: [mod_python] Questions for the FAQ - please check and confirm
	(req.write() and return) also docs update ...
In-Reply-To: <200208161351.42466.mateusz@ant.gliwice.pl>
References: <1029416698.982.40.camel@kernel> 
	<200208161351.42466.mateusz@ant.gliwice.pl>
Message-ID: <1029500235.2093.18.camel@kernel>

On Fri, 2002-08-16 at 14:51, Mateusz Korniak wrote:
> > --8<--
> > Using req.write() and return statements in the Publisher Handler
> >
> > You may only call req.write() once. If you call it several times, you'll
> > get strange results.
> >
> > If you use req.write() in a function called by the Publisher Handler,
> > you must still return a string at the end of the function. An empty
> > string is not enough.
> > --8<--
> >
> If it's so, mod_python docs 
> (http://www.modpython.org/live/mod_python-2.7.8/doc-html/tut-pub.html)
> needs update becouse I understand it quite opposite to text stated above.
> 
> """
> And last, but not the least, note how all the power of mod_python is still 
> available to this function, since it has access to the Request object. You 
> can do all the same things you can do with a "native" mod_python handler, 
> e.g. set custom headers via req.headers_out, return errors by raising 
> apache.SERVER_ERROR exceptions, write or read directly to and from the client 
> via req.write and req.read, etc. 
> """

Well, it doesn't explicitly say anywhere *how many times* the
req.write() function can be called.

I may very well be wrong, but if my tests are correct, you can only use
req.write() once in a regular mod_python handler. If you're using the
Publisher handler, you can use req.write() once, but then you *have* to
return something at the end of your function, or things won't work.

I agree though that the documentation needs updating. I've sent a
documentation patch (mostly touch-ups and a little rewording here and
there) to Gregory Trubetskoy some time ago, but received no reply.

Cheers,
Fabian



From grisha at modpython.org  Fri Aug 16 08:46:08 2002
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 22:03:20 2004
Subject: [Fwd: [mod_python] Messages not getting through to list server?]
In-Reply-To: <1029484374.2093.10.camel@kernel>
Message-ID: <Pine.BSF.4.32.0208160840230.89789-100000@localhost>

My appologies - the list indeed seemed to have had a problem. I'm getting
increasingly more dissatisfied with mailman - it has this "feature" where
messages to domains whose MX's cannot be looked up (probably because the
domain is no longer registered or DNS is down) clog up the entire list.

I've upgraded to 2.0.12 version of mailman, of this doesn't make it
better, I will look for other software.

Thanks to all who made offers to host - so far hosting is not a problem.
I'm not very keen on having the list at Sourceforge - I'd rather have more
control over it, also I don't know how long Sourceforge will be around -
these days nothing is certain. So far only CVS is hosted there.

Grisha

On 16 Aug 2002, Fabian Fagerholm wrote:

> On Fri, 2002-08-16 at 07:45, vio wrote:
> > I'd dare to say the mod_python list server has been quite terrible for the
> > couple of months i've been subscribed to it. But I think the right move
> > here would rather be to simply move the list to 'sourceforge', and let them
> > take care of it. They have all the bandwidth and hardware to handle incredible
> > loads. Totally cheapo free for open source projects. Just have a look at:
> > http://sourceforge.net/docman/display_doc.php?docid=753&group_id=1#top
> > There is also a link with all their current (impressive!) hardware,
> > but I can't seem to find it.
>
> Wherever it ends up being hosted, I hope that these issues will be
> resolved soon. I just got a bunch of messages from the list, some which
> were sent back in July!
>
> There can never be a thriving mod_python community if the basic means of
> communication is cut off.
>
> Without knowing anything about how the mod_python list server is set up,
> I see no network problems with it. Connections to port 25 on the server
> that is set up as MX for the domain modpython.org work just fine. So the
> issue must be with the list software. Or perhaps the mail is transferred
> to elsewhere and processed?
>
> In any case, it would we nice if the list server admins could comment on
> this. There are plenty of hands to use if help is needed, and there has
> been an offer for a backup MX and a suggestion to use Sourceforge, which
> should both be taken into consideration.
>
> I'm don't want to offend anyone, but if the list will go on in this
> shape, then perhaps the community should arrange for an alternative list
> to use?
>
> Cheers,
> Fabian
>
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://www.modpython.org/mailman/listinfo/mod_python
>


From grisha at modpython.org  Fri Aug 16 08:48:46 2002
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 22:03:20 2004
Subject: [mod_python] compiled code execution
In-Reply-To: <003301c22bd1$0ac2e820$0301a8c0@pentium>
Message-ID: <Pine.BSF.4.32.0208160848190.89789-100000@localhost>


On Mon, 15 Jul 2002, [iso-8859-2] Ji?? Kastner wrote:

> i'm interested about possibility to execute .pyc code by adding line to
> httpd.conf:
>
> AddHandler python-program .pyc
>
> or if this is nonsense, because python is executing it directly, if is .pyc
> present?

You just asnwered your own question :)

Grisha


From clee at spiralis.merseine.nu  Fri Aug 16 07:55:36 2002
From: clee at spiralis.merseine.nu (clee@spiralis.merseine.nu)
Date: Fri Jan  9 22:03:20 2004
Subject: [mod_python] Ping?
In-Reply-To: <20020714135537.A278@eye.neb>
References: <Pine.LNX.4.44.0207131250410.31967-100000@slippy.wire.rat>
	<20020714135537.A278@eye.neb>
Message-ID: <15708.63048.276061.704633@spiralis.merseine.nu>

>>>>> "vmilitaru" == vmilitaru  <vio> writes:

    vmilitaru> Same here. But even more problematic seems that some
    vmilitaru> messages never make it to the list (at least some of my
    vmilitaru> messages never did).  Possible solution (provided this
    vmilitaru> message make it to the list): how about migrating
    vmilitaru> modpython to 'sourceforge'? It's totally free and they
    vmilitaru> do an outstanding hosting job.

Sourceforge is great, but I would vote against this idea for one
reason: in my past experience, I have always prefered using the Mailman web
interface for browsing list archives over sourceforge's GeoCrawler
mail system.

Is it possible to use Mailman with sourceforge?

-chris

From grisha at modpython.org  Fri Aug 16 09:00:14 2002
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 22:03:20 2004
Subject: [mod_python] Questions for the FAQ - please check and confirm
 (req.write() and return) also docs update ...
In-Reply-To: <1029500235.2093.18.camel@kernel>
Message-ID: <Pine.BSF.4.32.0208160856250.89789-100000@localhost>


On 16 Aug 2002, Fabian Fagerholm wrote:

> If you're using the Publisher handler, you can use req.write() once,
> but then you *have* to return something at the end of your function,
> or things won't work.

You should be able to use write() many times as you like. It should also
be ok to return an empty string *if* you have written something with
write(), otherwise returning an empty document will cause a problem with
Netscape at least.

Grisha




From fabbe at paniq.net  Fri Aug 16 16:14:36 2002
From: fabbe at paniq.net (Fabian Fagerholm)
Date: Fri Jan  9 22:03:20 2004
Subject: [Fwd: [mod_python] Messages not getting through to list server?]
In-Reply-To: <Pine.BSF.4.32.0208160840230.89789-100000@localhost>
References: <Pine.BSF.4.32.0208160840230.89789-100000@localhost>
Message-ID: <1029503676.2028.41.camel@kernel>

On Fri, 2002-08-16 at 15:46, Gregory (Grisha) Trubetskoy wrote:
> My appologies - the list indeed seemed to have had a problem. I'm getting
> increasingly more dissatisfied with mailman - it has this "feature" where
> messages to domains whose MX's cannot be looked up (probably because the
> domain is no longer registered or DNS is down) clog up the entire list.
> 
> I've upgraded to 2.0.12 version of mailman, of this doesn't make it
> better, I will look for other software.

Let's hope that version works better. If not, I would suggest opening a
bug report (http://www.gnu.org/software/mailman/bugs.html).

> Thanks to all who made offers to host - so far hosting is not a problem.
> I'm not very keen on having the list at Sourceforge - I'd rather have more
> control over it, also I don't know how long Sourceforge will be around -
> these days nothing is certain. So far only CVS is hosted there.

I share this opinion on Sourceforge, and since we now know that the list
software had locked up, people can always yell if it happens again :)

Thanks for the clarification!

Cheers,
Fabian



From gbenson at redhat.com  Fri Aug 16 15:15:14 2002
From: gbenson at redhat.com (Gary Benson)
Date: Fri Jan  9 22:03:20 2004
Subject: [mod_python] How to make m_p handle everything
Message-ID: <20020816151513.B8120@redhat.com>

Hi,

Is it possible to make a mod_python script handle every request below a
certain path without using mod_rewrite or similar?

Cheers,
Gary

[ gbenson@redhat.com ][ GnuPG 85A8F78B ][ http://inauspicious.org/ ]

From grisha at modpython.org  Fri Aug 16 11:00:11 2002
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 22:03:20 2004
Subject: [mod_python] How to make m_p handle everything
In-Reply-To: <20020816151513.B8120@redhat.com>
Message-ID: <Pine.BSF.4.32.0208161059190.90085-100000@localhost>

Sure - if the script is in the python path somwhere that's how it would
work (unless I'm missing something in your question).

Grisha

On Fri, 16 Aug 2002, Gary Benson wrote:

> Hi,
>
> Is it possible to make a mod_python script handle every request below a
> certain path without using mod_rewrite or similar?
>
> Cheers,
> Gary
>
> [ gbenson@redhat.com ][ GnuPG 85A8F78B ][ http://inauspicious.org/ ]
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://www.modpython.org/mailman/listinfo/mod_python
>


From gbenson at redhat.com  Fri Aug 16 16:24:21 2002
From: gbenson at redhat.com (Gary Benson)
Date: Fri Jan  9 22:03:20 2004
Subject: [mod_python] How to make m_p handle everything
In-Reply-To: <Pine.BSF.4.32.0208161059190.90085-100000@localhost>; from grisha@modpython.org on Fri, Aug 16, 2002 at 11:00:11AM -0400
References: <20020816151513.B8120@redhat.com> <Pine.BSF.4.32.0208161059190.90085-100000@localhost>
Message-ID: <20020816162421.C8120@redhat.com>

On Fri, Aug 16, 2002 at 11:00:11AM -0400, Gregory (Grisha) Trubetskoy wrote:

> Sure - if the script is in the python path somwhere that's how it would
> work (unless I'm missing something in your question).

Erm, I'm probably not being very clear.  What I meant was, if I have a
server is there any way to map all requests inside http://foo.bar/webapp
to the same Python script such that http://foo.bar/webapp/baz and
http://foo.bar/webapp/quux both get served by (say) script.py.

Cheers,
Gary

[ gbenson@redhat.com ][ GnuPG 85A8F78B ][ http://inauspicious.org/ ]

From grisha at modpython.org  Fri Aug 16 11:56:44 2002
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 22:03:20 2004
Subject: [mod_python] How to make m_p handle everything
In-Reply-To: <20020816162421.C8120@redhat.com>
Message-ID: <Pine.BSF.4.32.0208161155110.92319-100000@localhost>

Yes, if for the document root directory you have

SetHandler python-program
PythonHandler script

then every single request on that server will be handled by script.py


On Fri, 16 Aug 2002, Gary Benson wrote:

> On Fri, Aug 16, 2002 at 11:00:11AM -0400, Gregory (Grisha) Trubetskoy wrote:
>
> > Sure - if the script is in the python path somwhere that's how it would
> > work (unless I'm missing something in your question).
>
> Erm, I'm probably not being very clear.  What I meant was, if I have a
> server is there any way to map all requests inside http://foo.bar/webapp
> to the same Python script such that http://foo.bar/webapp/baz and
> http://foo.bar/webapp/quux both get served by (say) script.py.
>
> Cheers,
> Gary
>
> [ gbenson@redhat.com ][ GnuPG 85A8F78B ][ http://inauspicious.org/ ]
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://www.modpython.org/mailman/listinfo/mod_python
>


From gbenson at redhat.com  Fri Aug 16 17:30:37 2002
From: gbenson at redhat.com (Gary Benson)
Date: Fri Jan  9 22:03:20 2004
Subject: [mod_python] How to make m_p handle everything
In-Reply-To: <Pine.BSF.4.32.0208161155110.92319-100000@localhost>; from grisha@modpython.org on Fri, Aug 16, 2002 at 11:56:44AM -0400
References: <20020816162421.C8120@redhat.com> <Pine.BSF.4.32.0208161155110.92319-100000@localhost>
Message-ID: <20020816173037.D8120@redhat.com>

On Fri, Aug 16, 2002 at 11:56:44AM -0400, Gregory (Grisha) Trubetskoy wrote:

> Yes, if for the document root directory you have
> 
> SetHandler python-program
> PythonHandler script
> 
> then every single request on that server will be handled by script.py

Oh yeah, I so should have been able to work that one out. /me slaps head.

Thanks for the help,
Gary

[ gbenson@redhat.com ][ GnuPG 85A8F78B ][ http://inauspicious.org/ ]

From thm at duke.edu  Fri Aug 16 13:22:30 2002
From: thm at duke.edu (Hunter Matthews)
Date: Fri Jan  9 22:03:20 2004
Subject: [mod_python] Complicated GET configuration
Message-ID: <1029518551.1517.29.camel@jade.biology.duke.edu>

I've got a configuration requirement for mod_python that I'm not sure
how to fill. I think I'm about 90% of the way there, but...

Basically I'm writing a server for a client I don't control. The client
can put out 2 kinds of requests.

POST requests that are simple XMLRPC calls. 
One of the idiosyncrases of the client is that the URL that is requested
is ALWAYS just /XMLRPC  - there is no script name or whatever.
I can handler these fine with the following config snippet:

<Location /XMLRPC>
    SetHandler python-program
    PythonHandler current_apache
</Location>


The GET requests have me stymied - to transfer big files, the client
uses GET requests. I'd like to have apache itself do the actual shifting
of bits, and just let my server application handle the authentication
that is required.

What I had as a first attempt was:
<Location /XMLRPC/$RHN>
    SetHandler python-program
    PythonAuthzHandler current_apache
</Location>

But this is clearly wrong (and it doesn't work, either :) 
Because I have the SetHandler, mod_python tries to handle ALL the
different parts of the request, when I only want it to handle the Authz
stage: if that PythonAuthzHandler returns  apache.OK, then I would like 
apache to pick up the URL and just fling it back at the client - the
python part is done.

If any other information is needed, please let me know.

Please note I can't change the client.

-- 
Hunter Matthews                          Unix / Network Administrator
Office: BioScience 145/244               Duke Univ. Biology Department
Key: F0F88438 / FFB5 34C0 B350 99A4 BB02  9779 A5DB 8B09 F0F8 8438
Never take candy from strangers. Especially on the internet.


From vmilitaru at sympatico.ca  Fri Aug 16 14:47:17 2002
From: vmilitaru at sympatico.ca (vio)
Date: Fri Jan  9 22:03:20 2004
Subject: [mod_python] Questions for the FAQ - please check and confirm (req.write() and return) also docs update ...
In-Reply-To: <Pine.BSF.4.32.0208160856250.89789-100000@localhost>; from grisha@modpython.org on Fri, Aug 16, 2002 at 09:00:14AM -0400
References: <1029500235.2093.18.camel@kernel> <Pine.BSF.4.32.0208160856250.89789-100000@localhost>
Message-ID: <20020816144717.A345@eye.neb>

Same here. My handler builds dynamic pages using successive calls to
req.write() with no problems. In fact, the only issue here might rather be 
whether it is better (as in 'less expensive') to 'assemble' the document in 
memory and send it in one swoop to the client, as opposed to sending it 
in many calls to req.write().
In other words, whether it's preferable to assemble a dynamic document at
the server level, or at the client level. I would tend to believe 
the former is better, because it reduces network traffic. Though I could be
mistaking. But mod_python definitely allows both strategies.

Vio

* Gregory (Grisha) Trubetskoy <grisha@modpython.org> [020816 14:23]:
> 
> 
> On 16 Aug 2002, Fabian Fagerholm wrote:
> 
> > If you're using the Publisher handler, you can use req.write() once,
> > but then you *have* to return something at the end of your function,
> > or things won't work.
> 
> You should be able to use write() many times as you like. It should also
> be ok to return an empty string *if* you have written something with
> write(), otherwise returning an empty document will cause a problem with
> Netscape at least.
> 
> Grisha
> 
> 
> 
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://www.modpython.org/mailman/listinfo/mod_python

From vmilitaru at sympatico.ca  Fri Aug 16 15:26:07 2002
From: vmilitaru at sympatico.ca (vio)
Date: Fri Jan  9 22:03:20 2004
Subject: [mod_python] Complicated GET configuration
In-Reply-To: <1029518551.1517.29.camel@jade.biology.duke.edu>; from thm@duke.edu on Fri, Aug 16, 2002 at 01:22:30PM -0400
References: <1029518551.1517.29.camel@jade.biology.duke.edu>
Message-ID: <20020816152607.B345@eye.neb>

* Hunter Matthews <thm@duke.edu> [020816 14:24]:
> 
> (...)
>
> What I had as a first attempt was:
> <Location /XMLRPC/$RHN>
>     SetHandler python-program
>     PythonAuthzHandler current_apache
> </Location>
> 
> But this is clearly wrong (and it doesn't work, either :) 
> Because I have the SetHandler, mod_python tries to handle ALL the
> different parts of the request, when I only want it to handle the Authz
> stage: if that PythonAuthzHandler returns  apache.OK, then I would like 
> apache to pick up the URL and just fling it back at the client - the
> python part is done.

My recalling of the mod_python manual reading (at least over a month old now,
so I might be wrong here) is that Apache handles requests in stages. And
with mod_python you pick and choose which stages you want to handle. 
But you never have to handle ALL stages.
Have you checked the tutorial file 'tut-more-complicated.html'?
I see there talk about 'PythonAuthenHandler', but nothing about
'PythonAuthzHandler' you are referring to here (a typo?).

I don't know if this is of any help, but an example of the different way 
GET and POST are handled, which I found quite useful, is illustrated in 
'util.py/class FieldStorage/__init__'.

Hope this helps,
Vio

From thm at duke.edu  Fri Aug 16 15:58:10 2002
From: thm at duke.edu (Hunter Matthews)
Date: Fri Jan  9 22:03:21 2004
Subject: [mod_python] Complicated GET configuration
In-Reply-To: <20020816152607.B345@eye.neb>
References: <1029518551.1517.29.camel@jade.biology.duke.edu> 
	<20020816152607.B345@eye.neb>
Message-ID: <1029527890.1312.9.camel@jade.biology.duke.edu>

On Fri, 2002-08-16 at 16:26, vio wrote:
> * Hunter Matthews <thm@duke.edu> [020816 14:24]:
> > 
> > (...)
> >
> > What I had as a first attempt was:
> > <Location /XMLRPC/$RHN>
> >     SetHandler python-program
> >     PythonAuthzHandler current_apache
> > </Location>
> > 
> > But this is clearly wrong (and it doesn't work, either :) 
> > Because I have the SetHandler, mod_python tries to handle ALL the
> > different parts of the request, when I only want it to handle the Authz
> > stage: if that PythonAuthzHandler returns  apache.OK, then I would like 
> > apache to pick up the URL and just fling it back at the client - the
> > python part is done.
> 
> My recalling of the mod_python manual reading (at least over a month old now,
> so I might be wrong here) is that Apache handles requests in stages. And
> with mod_python you pick and choose which stages you want to handle. 

Thats what I need to know here - how to choose to handle the Authz
stage, without choosing to handle the main default stage (throwing bits
down the socket).

> But you never have to handle ALL stages.
> Have you checked the tutorial file 'tut-more-complicated.html'?
> I see there talk about 'PythonAuthenHandler', but nothing about
> 'PythonAuthzHandler' you are referring to here (a typo?).

There is a reference to it on:
http://www.modpython.org/live/mod_python-2.7.8/doc-html/dir-handlers-syn.html

and running strings on the mod_python.so shows that it is there. There
is a reference to it in the mailing list archives.



> I don't know if this is of any help, but an example of the different way 
> GET and POST are handled, which I found quite useful, is illustrated in 
> 'util.py/class FieldStorage/__init__'.

The goal here is that if the URL is 
/XMLRPC/$RHN/anything

that we always run the Authz handler, and nothing else.

But since the requests aren't to a specific script 
(like /XMLRPC/$RHN/redhat-7.3-i386/listPackages/200208142123/script.py)

but are instead 
/XMLRPC/$RHN/redhat-7.3-i386/listPackages/200208142123

I'm not at all certain how to say

'''
For all URLs under /XMLRPC/$RHN
Please use the Authz handler to make sure the client is authorized,
and if so,
apache please send the client the file that was requested.
'''


> 
> Hope this helps,
> Vio
> 
> 
-- 
Hunter Matthews                          Unix / Network Administrator
Office: BioScience 145/244               Duke Univ. Biology Department
Key: F0F88438 / FFB5 34C0 B350 99A4 BB02  9779 A5DB 8B09 F0F8 8438
Never take candy from strangers. Especially on the internet.


From johannes at erdfelt.com  Fri Aug 16 16:09:07 2002
From: johannes at erdfelt.com (Johannes Erdfelt)
Date: Fri Jan  9 22:03:21 2004
Subject: [mod_python] Complicated GET configuration
In-Reply-To: <1029518551.1517.29.camel@jade.biology.duke.edu>; from thm@duke.edu on Fri, Aug 16, 2002 at 01:22:30PM -0400
References: <1029518551.1517.29.camel@jade.biology.duke.edu>
Message-ID: <20020816160907.J3414@sventech.com>

On Fri, Aug 16, 2002, Hunter Matthews <thm@duke.edu> wrote:
> 
> I've got a configuration requirement for mod_python that I'm not sure
> how to fill. I think I'm about 90% of the way there, but...
> 
> Basically I'm writing a server for a client I don't control. The client
> can put out 2 kinds of requests.
> 
> POST requests that are simple XMLRPC calls. 
> One of the idiosyncrases of the client is that the URL that is requested
> is ALWAYS just /XMLRPC  - there is no script name or whatever.
> I can handler these fine with the following config snippet:
> 
> <Location /XMLRPC>
>     SetHandler python-program
>     PythonHandler current_apache
> </Location>
> 
> The GET requests have me stymied - to transfer big files, the client
> uses GET requests. I'd like to have apache itself do the actual shifting
> of bits, and just let my server application handle the authentication
> that is required.
> 
> What I had as a first attempt was:
> <Location /XMLRPC/$RHN>
>     SetHandler python-program
>     PythonAuthzHandler current_apache
> </Location>
> 
> But this is clearly wrong (and it doesn't work, either :) 
> Because I have the SetHandler, mod_python tries to handle ALL the
> different parts of the request, when I only want it to handle the Authz
> stage: if that PythonAuthzHandler returns  apache.OK, then I would like 
> apache to pick up the URL and just fling it back at the client - the
> python part is done.
> 
> If any other information is needed, please let me know.

Drop the SetHandler then. All you need is the PythonAuthzHandler portion
and it'll do the right thing.

I do something like this:

  <FilesMatch "\.(m3u|mp3)$">
    PythonPath "sys.path+['/web/americandnb.com/python']"
    PythonAccessHandler m3u
  </FilesMatch>

And the m3u module does referer checking so people don't link directly
to the mp3's. If the Referer fails, we redirect to the main HTML for
that file (specific to our setup).

JE


From vmilitaru at sympatico.ca  Fri Aug 16 15:58:59 2002
From: vmilitaru at sympatico.ca (vio)
Date: Fri Jan  9 22:03:21 2004
Subject: [mod_python] Questions for the FAQ - please check and confirm (req.write() and return) also docs update ...
In-Reply-To: <200208162131.33048.mateusz@ant.gliwice.pl>; from mateusz@ant.gliwice.pl on Fri, Aug 16, 2002 at 09:31:33PM +0200
References: <1029500235.2093.18.camel@kernel> <Pine.BSF.4.32.0208160856250.89789-100000@localhost> <20020816144717.A345@eye.neb> <200208162131.33048.mateusz@ant.gliwice.pl>
Message-ID: <20020816155859.A419@eye.neb>

* Mateusz Korniak <mateusz@ant.gliwice.pl> [020816 15:26]:
> On Friday 16 August 2002 21:47, vio wrote:
> > Same here. My handler builds dynamic pages using successive calls to
> > req.write() with no problems. In fact, the only issue here might rather be
> > whether it is better (as in 'less expensive') to 'assemble' the document in
> > memory and send it in one swoop to the client, as opposed to sending it
> > in many calls to req.write().
> > In other words, whether it's preferable to assemble a dynamic document at
> > the server level, or at the client level. I would tend to believe
> > the former is better, because it reduces network traffic. Though I could be
> > mistaking. But mod_python definitely allows both strategies.
> >
> 
> Yes. But what in publisher handler case ?
> Can you use req.write() instead of returning page ?
> I get Internal server error in that case ... :(

I don't quite understand your question. req.write() IS the returning page.
But I think I know where the bobo is: it's the Internal server error message.

Try the following:
I am assuming you are using the out-of-the-box publisher. I suspect the problem
is not necessarily the 'req.write(), calls, so I suggest you try the following
debugging technique to find out your 'real' bug (you will have to modify the 
publisher.py like following):

somewhere before beginning of the handler() routine, add:
"""
# debugging LOG file - use this instead of '_REQUEST.write()' for debugging
LOG = open('/path/to/.../LOG', "a")
"""

then, find each line in publisher.py:
"""
return apache.HTTP_INTERNAL_SERVER_ERROR
"""

and modify it like this:
"""
LOG.write('line ...\n') # current line number in publisher.py
LOG.flush()
return apache.HTTP_INTERNAL_SERVER_ERROR
"""

This will help you pinpoint exactly who/what throws that Server Error message.
(just read the LOG file). Then work your way from there. I bet your problem
is not your req.write() calls, but something you don't even expect.

Debugging mod_python scripts is tricky, because you can not always write 
debugging messages to the browser. My solution is to use a LOG file.

Hope this helps. (It sure helped me a lot this far).
Vio

From ian at veryfresh.com  Fri Aug 16 13:27:45 2002
From: ian at veryfresh.com (Ian Clelland)
Date: Fri Jan  9 22:03:21 2004
Subject: [mod_python] Complicated GET configuration
In-Reply-To: <1029518551.1517.29.camel@jade.biology.duke.edu>
References: <1029518551.1517.29.camel@jade.biology.duke.edu>
Message-ID: <20020816202745.GE11141@fullfactor.com>

On Fri, Aug 16, 2002 at 01:22:30PM -0400, Hunter Matthews wrote:
> POST requests that are simple XMLRPC calls. 
> One of the idiosyncrases of the client is that the URL that is requested
> is ALWAYS just /XMLRPC  - there is no script name or whatever.
> I can handler these fine with the following config snippet:
> 
> <Location /XMLRPC>
>     SetHandler python-program
>     PythonHandler current_apache
> </Location>
> 
> 
> The GET requests have me stymied - to transfer big files, the client
> uses GET requests. I'd like to have apache itself do the actual shifting
> of bits, and just let my server application handle the authentication
> that is required.
> 
> What I had as a first attempt was:
> <Location /XMLRPC/$RHN>
>     SetHandler python-program
>     PythonAuthzHandler current_apache
> </Location>
> 
> But this is clearly wrong (and it doesn't work, either :) 
> Because I have the SetHandler, mod_python tries to handle ALL the
> different parts of the request, when I only want it to handle the Authz
> stage: if that PythonAuthzHandler returns  apache.OK, then I would like 
> apache to pick up the URL and just fling it back at the client - the
> python part is done.

Because of the <Location> directive, Apache will hand all requests for 
/XMLRPC and any URL below that to your python module. If you don't want 
mod_python to handle the GET requests underneath /XMLRPC, then your 
handler should return apache.DECLINED if req.uri != '/XMLRPC'.

Also, as far as I understand it, the SetHandler directive shouldn't be 
required in order to invoke a PythonAuthzHandler, but I could be wrong. 
(Not that it will make a difference in your case; the SetHandler for 
/XMLRPC will also affect the /XMLRPC/$RHN subdirectory anyway)


Ian Clelland
<ian@veryfresh.com>

From vmilitaru at sympatico.ca  Fri Aug 16 16:27:01 2002
From: vmilitaru at sympatico.ca (vio)
Date: Fri Jan  9 22:03:21 2004
Subject: [mod_python] Complicated GET configuration
In-Reply-To: <1029527890.1312.9.camel@jade.biology.duke.edu>; from thm@duke.edu on Fri, Aug 16, 2002 at 03:58:10PM -0400
References: <1029518551.1517.29.camel@jade.biology.duke.edu> <20020816152607.B345@eye.neb> <1029527890.1312.9.camel@jade.biology.duke.edu>
Message-ID: <20020816162701.A456@eye.neb>

* Hunter Matthews <thm@duke.edu> [020816 15:59]:
> ...
> There is a reference to it on:
> http://www.modpython.org/live/mod_python-2.7.8/doc-html/dir-handlers-syn.html

I see it. But I don't see 'PythonAuthzHandler' referenced anywhere in the 
main docs at
http://www.modpython.org/live/mod_python-2.7.8/doc-html/
I wonder why it's not documented?

> The goal here is that if the URL is 
> /XMLRPC/$RHN/anything
> 
> that we always run the Authz handler, and nothing else.
> 
> But since the requests aren't to a specific script 
> (like /XMLRPC/$RHN/redhat-7.3-i386/listPackages/200208142123/script.py)
> 
> but are instead 
> /XMLRPC/$RHN/redhat-7.3-i386/listPackages/200208142123
> 
> I'm not at all certain how to say
> 
> '''
> For all URLs under /XMLRPC/$RHN
> Please use the Authz handler to make sure the client is authorized,
> and if so,
> apache please send the client the file that was requested.
> '''

If I understand correctly, you only want to use the Authz handler from
mod_python, and nothing else.
I don't see a problem here, except for the undocumented Authz.
The way I would handle your problem whould be to just follow the instructions
in 'tut-more-complicated.html', see if it flies:

<Directory /XMLRPC/$RHN>
    AddHandler python-program .py
#    PythonHandler myscript - comment out to let Apache handle it
    PythonAuthenHandler yourAuthenScript
    AuthType Basic
    AuthName "Restricted Area"
    require valid-user
</Directory>


Have you tried something like this? (you'll have to write your own Authen 
handler, as described in 'tut-more-complicated.html')

Vio

From thm at duke.edu  Fri Aug 16 16:40:43 2002
From: thm at duke.edu (Hunter Matthews)
Date: Fri Jan  9 22:03:21 2004
Subject: [mod_python] Complicated GET configuration
In-Reply-To: <20020816202745.GE11141@fullfactor.com>
References: <1029518551.1517.29.camel@jade.biology.duke.edu> 
	<20020816202745.GE11141@fullfactor.com>
Message-ID: <1029530494.1195.22.camel@jade.biology.duke.edu>

On Fri, 2002-08-16 at 16:27, Ian Clelland wrote:

> Because of the <Location> directive, Apache will hand all requests for 
> /XMLRPC and any URL below that to your python module. If you don't want 
> mod_python to handle the GET requests underneath /XMLRPC, then your 
> handler should return apache.DECLINED if req.uri != '/XMLRPC'.

I switched to <Location ~ "/XMLRPC$">

So right now my apache config looks like: 

Alias /XMLRPC/$RHN/ /local/linux/current/www/

<Directory /local/linux>
    # I realize that the default config is to have symlinks on, but the 
    # current part should stand on its own.
    Options FollowSymLinks
    AllowOverride None
</Directory>

<Location ~ "/XMLRPC$">
    PythonPath "sys.path+['/usr/share/current']"
    SetHandler python-program
    PythonHandler current_apache
</Location>

<Location /XMLRPC/$RHN>
    PythonPath "sys.path+['/usr/share/current']"
    PythonAuthzHandler current_apache
</Location>



> 
> Also, as far as I understand it, the SetHandler directive shouldn't be 
> required in order to invoke a PythonAuthzHandler, but I could be wrong. 
> (Not that it will make a difference in your case; the SetHandler for 
> /XMLRPC will also affect the /XMLRPC/$RHN subdirectory anyway)

That would be ideal. However, with the following code in 
/usr/share/current/current_apache.py:

def authzhandler(req):
    """ temp function for testing"""

    apache.log_error("Inside the authzhandler!")
    apache.log_error("method = %s" % req.method)
    apache.log_error("headers = %s" % pprint.pprint(req.headers_in))

    return apache.OK


After an apache restart (to make sure all the updated modules get
reloaded) I'm not seeing any of those log_errors in the error file.
Once I see something (anything) I'll replace that code with the real
thing.

I appreciate the help from the list.





-- 
Hunter Matthews                          Unix / Network Administrator
Office: BioScience 145/244               Duke Univ. Biology Department
Key: F0F88438 / FFB5 34C0 B350 99A4 BB02  9779 A5DB 8B09 F0F8 8438
Never take candy from strangers. Especially on the internet.


From thm at duke.edu  Fri Aug 16 17:05:28 2002
From: thm at duke.edu (Hunter Matthews)
Date: Fri Jan  9 22:03:21 2004
Subject: [mod_python] Complicated GET configuration
In-Reply-To: <1029530494.1195.22.camel@jade.biology.duke.edu>
References: <1029518551.1517.29.camel@jade.biology.duke.edu> 
	<20020816202745.GE11141@fullfactor.com> 
	<1029530494.1195.22.camel@jade.biology.duke.edu>
Message-ID: <1029531928.1195.28.camel@jade.biology.duke.edu>

On Fri, 2002-08-16 at 16:40, Hunter Matthews wrote:
> On Fri, 2002-08-16 at 16:27, Ian Clelland wrote:
> 
> > Because of the <Location> directive, Apache will hand all requests for 
> > /XMLRPC and any URL below that to your python module. If you don't want 
> > mod_python to handle the GET requests underneath /XMLRPC, then your 
> > handler should return apache.DECLINED if req.uri != '/XMLRPC'.
> 
> I switched to <Location ~ "/XMLRPC$">
> 
> So right now my apache config looks like: 
> 
> Alias /XMLRPC/$RHN/ /local/linux/current/www/
> 
> <Directory /local/linux>
>     # I realize that the default config is to have symlinks on, but the 
>     # current part should stand on its own.
>     Options FollowSymLinks
>     AllowOverride None
> </Directory>
> 
> <Location ~ "/XMLRPC$">
>     PythonPath "sys.path+['/usr/share/current']"
>     SetHandler python-program
>     PythonHandler current_apache
> </Location>
> 
> <Location /XMLRPC/$RHN>
>     PythonPath "sys.path+['/usr/share/current']"
>     PythonAuthzHandler current_apache
> </Location>
> 
> 
> 
> > 
> > Also, as far as I understand it, the SetHandler directive shouldn't be 
> > required in order to invoke a PythonAuthzHandler, but I could be wrong. 
> > (Not that it will make a difference in your case; the SetHandler for 
> > /XMLRPC will also affect the /XMLRPC/$RHN subdirectory anyway)
> 
> That would be ideal. However, with the following code in 
> /usr/share/current/current_apache.py:
> 
> def authzhandler(req):
>     """ temp function for testing"""
> 
>     apache.log_error("Inside the authzhandler!")
>     apache.log_error("method = %s" % req.method)
>     apache.log_error("headers = %s" % pprint.pprint(req.headers_in))
> 
>     return apache.OK
> 
> 
> After an apache restart (to make sure all the updated modules get
> reloaded) I'm not seeing any of those log_errors in the error file.
> Once I see something (anything) I'll replace that code with the real
> thing.
> 
> I appreciate the help from the list.

Sorry to spam the list so hard today, but I've figured one piece of it
out:

def authzhandler(req):
    """ temp function for testing"""
 
    apache.log_error("Inside the authzhandler!")
    apache.log_error("method = %s" % req.method)
    apache.log_error("headers = %s" % pprint.pprint(req.headers_in))

    return apache.OK

This code still results in nothing in my logs. On the theory that
perhaps it was undocumented for a reason, I tried a different (nearly
random) handler:


def headerparserhandler(req):
    """ temp function for testing"""

    apache.log_error("Inside the headerparserhandler!")
    apache.log_error("method = %s" % req.method)
#    apache.log_error("headers = %s" % pprint.pprint(req.headers_in))
    for key in req.headers_in.keys():
        apache.log_error("hdr[%s] = %s" % (key, req.headers_in[key]))
    return apache.HTTP_UNAUTHORIZED                      

AND THIS WORKS JUST FINE!

If anyone on the list has any ideas why the authz handler, which
_looked_ like the handler I should use (using HTTP request headers to
determine if a client was authorized to make this request), isn't
working, I'd still appreciate knowing. 

However, I should be able to use this handler or maybe even
PythonAuthenHandler, so its not a critical issue for me now.

THanks everyone.

-- 
Hunter Matthews                          Unix / Network Administrator
Office: BioScience 145/244               Duke Univ. Biology Department
Key: F0F88438 / FFB5 34C0 B350 99A4 BB02  9779 A5DB 8B09 F0F8 8438
Never take candy from strangers. Especially on the internet.


From mateusz at ant.gliwice.pl  Fri Aug 16 23:22:37 2002
From: mateusz at ant.gliwice.pl (Mateusz Korniak)
Date: Fri Jan  9 22:03:21 2004
Subject: [mod_python] req.write() in publisher_handler
In-Reply-To: <20020816155859.A419@eye.neb>
References: <1029500235.2093.18.camel@kernel> <200208162131.33048.mateusz@ant.gliwice.pl> <20020816155859.A419@eye.neb>
Message-ID: <200208162322.37479.mateusz@ant.gliwice.pl>

On Friday 16 August 2002 22:58, vio wrote:
> * Mateusz Korniak <mateusz@ant.gliwice.pl> [020816 15:26]:
> > Yes. But what in publisher handler case ?
> > Can you use req.write() instead of returning page ?
> > I get Internal server error in that case ... :(
>
> I don't quite understand your question. req.write() IS the returning page.
> But I think I know where the bobo is: it's the Internal server error
> message.

So let me be ( I hope) much more clear: Below my publisher handler:

import mod_python.apache
page = """<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<html><head><title>Test page</title></head>
<body> Test </body> </html>"""

def req_write(req):
	req.status = mod_python.apache.OK
	req.content_type = "text/html; charset=utf-8"
	req.send_http_header()
	req.write(page)
	open("/tmp/marker","w") # Test if we have exceptions 
		#before returning from handler

def req_return(req):
	req.status = mod_python.apache.OK
	req.content_type = "text/html; charset=utf-8"
	req.send_http_header()
	return page

http://abbon.ant.vpn/test.py/req_return - returns what expected
while 
http://abbon.ant.vpn/test.py/req_write returns more some additional data 
(reaching marker):

<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<html><head><title>Test page</title></head>
<body> Test </body> </html>HTTP/1.1 500 Internal Server Error
Date: Fri, 16 Aug 2002 21:11:31 GMT
Server: Apache/1.3.26 (Unix)  (PLD/Linux) mod_python/2.7.8 Python/2.2.1
Transfer-Encoding: chunked
Content-Type: text/html; charset=iso-8859-1

<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML 2.0//EN">
<HTML><HEAD>
<TITLE>500 Internal Server Error</TITLE>
</HEAD><BODY>
<H1>Internal Server Error</H1>
The server encountered an internal error or
misconfiguration and was unable to complete
your request.<P>
Please contact the server administrator,
 matkor@ant.gliwice.pl and inform them of the time the error occurred,
and anything you might have done that may have
caused the error.<P>
More information about this error may be available
in the server error log.<P>
<P>Additionally, a 500 Internal Server Error
error was encountered while trying to use an ErrorDocument to handle the 
request.
<HR>
<ADDRESS>Apache/1.3.26 Server at <A 
HREF="mailto:matkor@ant.gliwice.pl">abbon.ant.vpn</A> Port 80</ADDRESS>
</BODY></HTML>


As far I understand publisher both results should be the same ...
Perhaps my mod_python /apache are broken ?

-- 
Mateusz Korniak



From johannes at erdfelt.com  Fri Aug 16 17:25:45 2002
From: johannes at erdfelt.com (Johannes Erdfelt)
Date: Fri Jan  9 22:03:21 2004
Subject: [mod_python] req.write() in publisher_handler
In-Reply-To: <200208162322.37479.mateusz@ant.gliwice.pl>; from mateusz@ant.gliwice.pl on Fri, Aug 16, 2002 at 11:22:37PM +0200
References: <1029500235.2093.18.camel@kernel> <200208162131.33048.mateusz@ant.gliwice.pl> <20020816155859.A419@eye.neb> <200208162322.37479.mateusz@ant.gliwice.pl>
Message-ID: <20020816172545.K3414@sventech.com>

On Fri, Aug 16, 2002, Mateusz Korniak <mateusz@ant.gliwice.pl> wrote:
> On Friday 16 August 2002 22:58, vio wrote:
> > * Mateusz Korniak <mateusz@ant.gliwice.pl> [020816 15:26]:
> > > Yes. But what in publisher handler case ?
> > > Can you use req.write() instead of returning page ?
> > > I get Internal server error in that case ... :(
> >
> > I don't quite understand your question. req.write() IS the returning page.
> > But I think I know where the bobo is: it's the Internal server error
> > message.
> 
> So let me be ( I hope) much more clear: Below my publisher handler:
> 
> import mod_python.apache
> page = """<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
> <html><head><title>Test page</title></head>
> <body> Test </body> </html>"""
> 
> def req_write(req):
> 	req.status = mod_python.apache.OK
> 	req.content_type = "text/html; charset=utf-8"
> 	req.send_http_header()
> 	req.write(page)
> 	open("/tmp/marker","w") # Test if we have exceptions 
> 		#before returning from handler
	return ""

Add that.

JE


From mateusz at ant.gliwice.pl  Fri Aug 16 23:30:04 2002
From: mateusz at ant.gliwice.pl (Mateusz Korniak)
Date: Fri Jan  9 22:03:21 2004
Subject: [mod_python] req.write() in publisher_handler
In-Reply-To: <20020816172545.K3414@sventech.com>
References: <1029500235.2093.18.camel@kernel> <200208162322.37479.mateusz@ant.gliwice.pl> <20020816172545.K3414@sventech.com>
Message-ID: <200208162330.04157.mateusz@ant.gliwice.pl>

On Friday 16 August 2002 23:25, Johannes Erdfelt wrote:
> On Fri, Aug 16, 2002, Mateusz Korniak <mateusz@ant.gliwice.pl> wrote:
> > On Friday 16 August 2002 22:58, vio wrote:
> > > * Mateusz Korniak <mateusz@ant.gliwice.pl> [020816 15:26]:
> > > > Yes. But what in publisher handler case ?
> > > > Can you use req.write() instead of returning page ?
> > > > I get Internal server error in that case ... :(
> > >
> > > I don't quite understand your question. req.write() IS the returning
> > > page. But I think I know where the bobo is: it's the Internal server
> > > error message.
> >
> > So let me be ( I hope) much more clear: Below my publisher handler:
> >
> > import mod_python.apache
> > page = """<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
> > <html><head><title>Test page</title></head>
> > <body> Test </body> </html>"""
> >
> > def req_write(req):
> > 	req.status = mod_python.apache.OK
> > 	req.content_type = "text/html; charset=utf-8"
> > 	req.send_http_header()
> > 	req.write(page)
> > 	open("/tmp/marker","w") # Test if we have exceptions
> > 		#before returning from handler
>
> 	return ""
>
> Add that.
>
In my enviroment it doesn't change a thing :(

-- 
Mateusz Korniak



From johannes at erdfelt.com  Fri Aug 16 17:31:53 2002
From: johannes at erdfelt.com (Johannes Erdfelt)
Date: Fri Jan  9 22:03:21 2004
Subject: [mod_python] req.write() in publisher_handler
In-Reply-To: <200208162330.04157.mateusz@ant.gliwice.pl>; from mateusz@ant.gliwice.pl on Fri, Aug 16, 2002 at 11:30:04PM +0200
References: <1029500235.2093.18.camel@kernel> <200208162322.37479.mateusz@ant.gliwice.pl> <20020816172545.K3414@sventech.com> <200208162330.04157.mateusz@ant.gliwice.pl>
Message-ID: <20020816173153.L3414@sventech.com>

On Fri, Aug 16, 2002, Mateusz Korniak <mateusz@ant.gliwice.pl> wrote:
> On Friday 16 August 2002 23:25, Johannes Erdfelt wrote:
> > On Fri, Aug 16, 2002, Mateusz Korniak <mateusz@ant.gliwice.pl> wrote:
> > > On Friday 16 August 2002 22:58, vio wrote:
> > > > * Mateusz Korniak <mateusz@ant.gliwice.pl> [020816 15:26]:
> > > > > Yes. But what in publisher handler case ?
> > > > > Can you use req.write() instead of returning page ?
> > > > > I get Internal server error in that case ... :(
> > > >
> > > > I don't quite understand your question. req.write() IS the returning
> > > > page. But I think I know where the bobo is: it's the Internal server
> > > > error message.
> > >
> > > So let me be ( I hope) much more clear: Below my publisher handler:
> > >
> > > import mod_python.apache
> > > page = """<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
> > > <html><head><title>Test page</title></head>
> > > <body> Test </body> </html>"""
> > >
> > > def req_write(req):
> > > 	req.status = mod_python.apache.OK
> > > 	req.content_type = "text/html; charset=utf-8"
> > > 	req.send_http_header()
> > > 	req.write(page)
> > > 	open("/tmp/marker","w") # Test if we have exceptions
> > > 		#before returning from handler
> >
> > 	return ""
> >
> > Add that.
>
> In my enviroment it doesn't change a thing :(

Are you sure that open call isn't causing any exceptions?

Try commenting it out and testing.

Also, are you restarting the server when you're testing?

JE


From mateusz at ant.gliwice.pl  Fri Aug 16 23:35:56 2002
From: mateusz at ant.gliwice.pl (Mateusz Korniak)
Date: Fri Jan  9 22:03:21 2004
Subject: [mod_python] req.write() in publisher_handler
In-Reply-To: <20020816173153.L3414@sventech.com>
References: <1029500235.2093.18.camel@kernel> <200208162330.04157.mateusz@ant.gliwice.pl> <20020816173153.L3414@sventech.com>
Message-ID: <200208162335.56958.mateusz@ant.gliwice.pl>

On Friday 16 August 2002 23:31, Johannes Erdfelt wrote:
> On Fri, Aug 16, 2002, Mateusz Korniak <mateusz@ant.gliwice.pl> wrote:
> > On Friday 16 August 2002 23:25, Johannes Erdfelt wrote:
> > > On Fri, Aug 16, 2002, Mateusz Korniak <mateusz@ant.gliwice.pl> wrote:
> > > > On Friday 16 August 2002 22:58, vio wrote:
> > > > > * Mateusz Korniak <mateusz@ant.gliwice.pl> [020816 15:26]:
> > > > > > Yes. But what in publisher handler case ?
> > > > > > Can you use req.write() instead of returning page ?
> > > > > > I get Internal server error in that case ... :(
> > > > >
> > > > > I don't quite understand your question. req.write() IS the
> > > > > returning page. But I think I know where the bobo is: it's the
> > > > > Internal server error message.
> > > >
> > > > So let me be ( I hope) much more clear: Below my publisher handler:
> > > >
> > > > import mod_python.apache
> > > > page = """<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0
> > > > Transitional//EN"> <html><head><title>Test page</title></head>
> > > > <body> Test </body> </html>"""
> > > >
> > > > def req_write(req):
> > > > 	req.status = mod_python.apache.OK
> > > > 	req.content_type = "text/html; charset=utf-8"
> > > > 	req.send_http_header()
> > > > 	req.write(page)
> > > > 	open("/tmp/marker","w") # Test if we have exceptions
> > > > 		#before returning from handler
> > >
> > > 	return ""
> > >
> > > Add that.
> >
> > In my enviroment it doesn't change a thing :(
>
> Are you sure that open call isn't causing any exceptions?
> Try commenting it out and testing.

Nope - it works the same with or wihout it
( I added it due Vio's suggestion).

> Also, are you restarting the server when you're testing?

I think it's not neccessary as I change main file of publisher handler - but 
to be absolutely sure - I do hard reset of apache after every change. Result 
remains same.

So it turns out that my apche/mod_python is broken ?

-- 
Mateusz Korniak
"Black holes are where God divided by zero." - Steven Wright


From ian at veryfresh.com  Fri Aug 16 14:37:22 2002
From: ian at veryfresh.com (Ian Clelland)
Date: Fri Jan  9 22:03:21 2004
Subject: [ian@veryfresh.com: Re: [mod_python] Complicated GET configuration]
Message-ID: <20020816213722.GG11141@fullfactor.com>

----- Forwarded message from Ian Clelland <ian@veryfresh.com> -----

Date: Fri, 16 Aug 2002 14:24:39 -0700
From: Ian Clelland <ian@veryfresh.com>
To: Hunter Matthews <thm@duke.edu>
Cc: mod_python@mod_python.org
Subject: Re: [mod_python] Complicated GET configuration
In-Reply-To: <1029531928.1195.28.camel@jade.biology.duke.edu>
User-Agent: Mutt/1.3.27i

On Fri, Aug 16, 2002 at 05:05:28PM -0400, Hunter Matthews wrote:
> If anyone on the list has any ideas why the authz handler, which
> _looked_ like the handler I should use (using HTTP request headers to
> determine if a client was authorized to make this request), isn't
> working, I'd still appreciate knowing. 

Is it possible that Apache doesn't call an Authz handler unless some 
other conditions are present? From your sample configuration, I see 
that you haven't set up any AuthType, AuthName, or AuthenHandler (not 
even the standard mod_auth). Apache may have decided that there's no 
way to get a username:password from the client, and so isn't running 
the AuthzHandler.

Just a thought.. I'm running some quick tests here on your 
configuration to see why it doesn't work (and it doesn't, even here). I 
have had PythonAuthenHandlers and PythonAuthzHandlers working in the 
past, though.


----- End forwarded message -----

From ian at veryfresh.com  Fri Aug 16 14:51:37 2002
From: ian at veryfresh.com (Ian Clelland)
Date: Fri Jan  9 22:03:21 2004
Subject: [mod_python] Complicated GET configuration
In-Reply-To: <1029531928.1195.28.camel@jade.biology.duke.edu>
References: <1029518551.1517.29.camel@jade.biology.duke.edu> <20020816202745.GE11141@fullfactor.com> <1029530494.1195.22.camel@jade.biology.duke.edu> <1029531928.1195.28.camel@jade.biology.duke.edu>
Message-ID: <20020816215137.GH11141@fullfactor.com>

On Fri, Aug 16, 2002 at 05:05:28PM -0400, Hunter Matthews wrote:
> If anyone on the list has any ideas why the authz handler, which
> _looked_ like the handler I should use (using HTTP request headers to
> determine if a client was authorized to make this request), isn't
> working, I'd still appreciate knowing. 
 
After playing with it for about 20 minutes, I managed to get your authorization handler to run on my machine. This appears to be a minimal configuration:

Apache http.conf:

<VirtualHost *:80>
  ServerName pytest.zoostation
  DocumentRoot /var/local/apache/htdocs/pytest
  Alias /XMLRPC/$RHN /home/ian/pytest

  <Directory /home/pytest>
    Options FollowSymLinks
    AllowOverride None
  </Directory>

  <Location ~ "/XMLRPC$">
    PythonPath "sys.path+['/home/ian/src/pytest']"
    SetHandler python-program
    PythonHandler current_apache
  </Location>

  <Location /XMLRPC/$RHN>
    AuthName 'Restricted Area'
    AuthType Basic
    PythonPath "sys.path+['/home/ian/src/pytest']"
    PythonAuthenHandler current_apache
    PythonAuthzHandler current_apache
    require valid-user
  </Location>

</VirtualHost>


current_apache.py:

from mod_python import apache

def authenhandler(req):
    """ temp function for testing.
        this version accepts any username and password
    """

    apache.log_error("Inside the authenhandler!", apache.APLOG_NOERRNO & apache.APLOG_ERR)
    apache.log_error("method = %s" % req.method, apache.APLOG_NOERRNO & apache.APLOG_ERR)
    apache.log_error("headers = %s" % `req.headers_in`, apache.APLOG_NOERRNO & apache.APLOG_ERR)

    pw = req.get_basic_auth_pw()
    if req.connection.user == None:
      return apache.HTTP_UNAUTHORIZED

    return apache.OK

def authzhandler(req):
    """ temp function for testing
        this version accepts all users for all uris
    """

    apache.log_error("Inside the authzhandler!", apache.APLOG_NOERRNO & apache.APLOG_ERR)
    apache.log_error("method = %s" % req.method, apache.APLOG_NOERRNO & apache.APLOG_ERR)
    apache.log_error("headers = %s" % `req.headers_in`, apache.APLOG_NOERRNO & apache.APLOG_ERR)

    return apache.OK

def handler(req):
    """ temp function for testing"""

    req.content_type = 'text/html'
    req.send_http_header()
    req.write("<html><body><h1>Testing</h1></body></html>")

    return apache.OK


Explanation:

In the Apache configuration, the line which triggers all of the 
authentication/authorization is the 'require' line. Without this line, 
the AuthenHandler and AuthzHandler will not be called. 'require 
valid-user' seems to be sufficient for most cases, since your 
AuthenHandler can decide who a valid user is, and your AuthzHandler can 
filter out anyone unauthorized.

As soon as you add that line, Apache will report an internal server 
error until you give it an AuthName, AuthType, and some sort of 
Authentication handler. I added a stub handler which accepts any 
username and password.

Once those are all present, then Apache will happily run the 
AuthzHandler whenever the AuthenHandler returns OK.


Hope this helps,

Ian
<ian@veryfresh.com>

From grisha at modpython.org  Fri Aug 16 17:53:13 2002
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 22:03:21 2004
Subject: [mod_python] Complicated GET configuration
In-Reply-To: <1029530494.1195.22.camel@jade.biology.duke.edu>
Message-ID: <Pine.BSF.4.32.0208161751360.96507-100000@localhost>


On 16 Aug 2002, Hunter Matthews wrote:

> def authzhandler(req):
>     """ temp function for testing"""
>
>     apache.log_error("Inside the authzhandler!")
>     apache.log_error("method = %s" % req.method)
>     apache.log_error("headers = %s" % pprint.pprint(req.headers_in))
>
>     return apache.OK
>
>

It's possible that Apache ignores the authz handler unless you have
AuthType, AuthName and require specified. This is definitely true with
respect to authen handler.

BTW, the fact that authz is undocumented is a bug.

Grisha


From vmilitaru at sympatico.ca  Fri Aug 16 18:17:27 2002
From: vmilitaru at sympatico.ca (vio)
Date: Fri Jan  9 22:03:21 2004
Subject: [mod_python] Re: req.write() in publisher_handler
In-Reply-To: <200208162322.37479.mateusz@ant.gliwice.pl>; from mateusz@ant.gliwice.pl on Fri, Aug 16, 2002 at 11:22:37PM +0200
References: <1029500235.2093.18.camel@kernel> <200208162131.33048.mateusz@ant.gliwice.pl> <20020816155859.A419@eye.neb> <200208162322.37479.mateusz@ant.gliwice.pl>
Message-ID: <20020816181726.A590@eye.neb>

Try it like this:

import mod_python.apache
#from mod_python import apache
pageA = """<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<html><head><title>Test page</title></head>
<body>  Page A <br>"""
pageB = "Page B</body> </html>"

def req_write(REQUEST):
  REQUEST.status = mod_python.apache.OK
  REQUEST.content_type = "text/html; charset=utf-8"
  REQUEST.send_http_header()
  REQUEST.write(pageA)
  REQUEST.write(pageB)
  raise mod_python.apache.SERVER_RETURN, mod_python.apache.OK

As you can see, we do multiple writes to the browser.
I tested it on my snake, and it works as advertised.
Vio

* Mateusz Korniak <mateusz@ant.gliwice.pl> [020816 17:31]:
> On Friday 16 August 2002 22:58, vio wrote:
> > * Mateusz Korniak <mateusz@ant.gliwice.pl> [020816 15:26]:
> > > Yes. But what in publisher handler case ?
> > > Can you use req.write() instead of returning page ?
> > > I get Internal server error in that case ... :(
> >
> > I don't quite understand your question. req.write() IS the returning page.
> > But I think I know where the bobo is: it's the Internal server error
> > message.
> 
> So let me be ( I hope) much more clear: Below my publisher handler:
> 
> import mod_python.apache
> page = """<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
> <html><head><title>Test page</title></head>
> <body> Test </body> </html>"""
> 
> def req_write(req):
> 	req.status = mod_python.apache.OK
> 	req.content_type = "text/html; charset=utf-8"
> 	req.send_http_header()
> 	req.write(page)
> 	open("/tmp/marker","w") # Test if we have exceptions 
> 		#before returning from handler
> 
> def req_return(req):
> 	req.status = mod_python.apache.OK
> 	req.content_type = "text/html; charset=utf-8"
> 	req.send_http_header()
> 	return page
> 
> http://abbon.ant.vpn/test.py/req_return - returns what expected
> while 
> http://abbon.ant.vpn/test.py/req_write returns more some additional data 
> (reaching marker):
> 
> <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
> <html><head><title>Test page</title></head>
> <body> Test </body> </html>HTTP/1.1 500 Internal Server Error
> Date: Fri, 16 Aug 2002 21:11:31 GMT
> Server: Apache/1.3.26 (Unix)  (PLD/Linux) mod_python/2.7.8 Python/2.2.1
> Transfer-Encoding: chunked
> Content-Type: text/html; charset=iso-8859-1
> 
> <!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML 2.0//EN">
> <HTML><HEAD>
> <TITLE>500 Internal Server Error</TITLE>
> </HEAD><BODY>
> <H1>Internal Server Error</H1>
> The server encountered an internal error or
> misconfiguration and was unable to complete
> your request.<P>
> Please contact the server administrator,
>  matkor@ant.gliwice.pl and inform them of the time the error occurred,
> and anything you might have done that may have
> caused the error.<P>
> More information about this error may be available
> in the server error log.<P>
> <P>Additionally, a 500 Internal Server Error
> error was encountered while trying to use an ErrorDocument to handle the 
> request.
> <HR>
> <ADDRESS>Apache/1.3.26 Server at <A 
> HREF="mailto:matkor@ant.gliwice.pl">abbon.ant.vpn</A> Port 80</ADDRESS>
> </BODY></HTML>
> 
> 
> As far I understand publisher both results should be the same ...
> Perhaps my mod_python /apache are broken ?
> 
> -- 
> Mateusz Korniak
> 

From mateusz at ant.gliwice.pl  Sat Aug 17 00:59:51 2002
From: mateusz at ant.gliwice.pl (Mateusz Korniak)
Date: Fri Jan  9 22:03:21 2004
Subject: [mod_python] Re: req.write() in publisher_handler
In-Reply-To: <20020816181726.A590@eye.neb>
References: <1029500235.2093.18.camel@kernel> <200208162322.37479.mateusz@ant.gliwice.pl> <20020816181726.A590@eye.neb>
Message-ID: <200208170059.51538.mateusz@ant.gliwice.pl>

On Saturday 17 August 2002 01:17, vio wrote:
> Try it like this:
>
> import mod_python.apache
> #from mod_python import apache
> pageA = """<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
> <html><head><title>Test page</title></head>
> <body>  Page A <br>"""
> pageB = "Page B</body> </html>"
>
> def req_write(REQUEST):
>   REQUEST.status = mod_python.apache.OK
>   REQUEST.content_type = "text/html; charset=utf-8"
>   REQUEST.send_http_header()
>   REQUEST.write(pageA)
>   REQUEST.write(pageB)
>   raise mod_python.apache.SERVER_RETURN, mod_python.apache.OK

Yop :) raising  mod_python.apache.SERVER_RETURN instead of returning does the 
trick.

Also making req.write(d1)  ___and__ returning d2 sth sensible makes both 
(d1+d2) send to browser without error. I would guess that code runed after 
returning from handler gets confused by ""/None value returned by handler ...

-- 
Mateusz Korniak



From thm at duke.edu  Fri Aug 16 20:12:01 2002
From: thm at duke.edu (Hunter Matthews)
Date: Fri Jan  9 22:03:21 2004
Subject: [mod_python] Complicated GET configuration
In-Reply-To: <20020816215137.GH11141@fullfactor.com>
References: <1029518551.1517.29.camel@jade.biology.duke.edu>
	<20020816202745.GE11141@fullfactor.com>
	<1029530494.1195.22.camel@jade.biology.duke.edu>
	<1029531928.1195.28.camel@jade.biology.duke.edu> 
	<20020816215137.GH11141@fullfactor.com>
Message-ID: <1029543172.1195.39.camel@jade.biology.duke.edu>

On Fri, 2002-08-16 at 17:51, Ian Clelland wrote:
> On Fri, Aug 16, 2002 at 05:05:28PM -0400, Hunter Matthews wrote:
> > If anyone on the list has any ideas why the authz handler, which
> > _looked_ like the handler I should use (using HTTP request headers to
> > determine if a client was authorized to make this request), isn't
> > working, I'd still appreciate knowing. 
>  
> After playing with it for about 20 minutes, I managed to get your authorization handler to run on my machine. This appears to be a minimal configuration:
> 
> Apache http.conf:
> 
> <VirtualHost *:80>
>   ServerName pytest.zoostation
>   DocumentRoot /var/local/apache/htdocs/pytest
>   Alias /XMLRPC/$RHN /home/ian/pytest
> 
>   <Directory /home/pytest>
>     Options FollowSymLinks
>     AllowOverride None
>   </Directory>
> 
>   <Location ~ "/XMLRPC$">
>     PythonPath "sys.path+['/home/ian/src/pytest']"
>     SetHandler python-program
>     PythonHandler current_apache
>   </Location>
> 
>   <Location /XMLRPC/$RHN>
>     AuthName 'Restricted Area'
>     AuthType Basic
>     PythonPath "sys.path+['/home/ian/src/pytest']"
>     PythonAuthenHandler current_apache
>     PythonAuthzHandler current_apache
>     require valid-user
>   </Location>
> 
> </VirtualHost>
> 
> 
> current_apache.py:
> 
> from mod_python import apache
> 
> def authenhandler(req):
>     """ temp function for testing.
>         this version accepts any username and password
>     """
> 
>     apache.log_error("Inside the authenhandler!", apache.APLOG_NOERRNO & apache.APLOG_ERR)
>     apache.log_error("method = %s" % req.method, apache.APLOG_NOERRNO & apache.APLOG_ERR)
>     apache.log_error("headers = %s" % `req.headers_in`, apache.APLOG_NOERRNO & apache.APLOG_ERR)
> 
>     pw = req.get_basic_auth_pw()
>     if req.connection.user == None:
>       return apache.HTTP_UNAUTHORIZED
> 
>     return apache.OK
> 
> def authzhandler(req):
>     """ temp function for testing
>         this version accepts all users for all uris
>     """
> 
>     apache.log_error("Inside the authzhandler!", apache.APLOG_NOERRNO & apache.APLOG_ERR)
>     apache.log_error("method = %s" % req.method, apache.APLOG_NOERRNO & apache.APLOG_ERR)
>     apache.log_error("headers = %s" % `req.headers_in`, apache.APLOG_NOERRNO & apache.APLOG_ERR)
> 
>     return apache.OK
> 
> def handler(req):
>     """ temp function for testing"""
> 
>     req.content_type = 'text/html'
>     req.send_http_header()
>     req.write("<html><body><h1>Testing</h1></body></html>")
> 
>     return apache.OK
> 
> 
> Explanation:
> 
> In the Apache configuration, the line which triggers all of the 
> authentication/authorization is the 'require' line. Without this line, 
> the AuthenHandler and AuthzHandler will not be called. 'require 
> valid-user' seems to be sufficient for most cases, since your 
> AuthenHandler can decide who a valid user is, and your AuthzHandler can 
> filter out anyone unauthorized.
> 
> As soon as you add that line, Apache will report an internal server 
> error until you give it an AuthName, AuthType, and some sort of 
> Authentication handler. I added a stub handler which accepts any 
> username and password.
> 
> Once those are all present, then Apache will happily run the 
> AuthzHandler whenever the AuthenHandler returns OK.

Wow. You are amazing. Thank you.

In this particular application, I don't think the authorization will
work quite like that: 

I don't get a user:password from a browser, this is an xmlrpc client
that sends authentication/authorization information in custom HTTP
headers. 

If you are deciding to allow or deny access based just on the contents
of headers, which Handler would you pick?

In testing here, it appears that PythonHeaderParserHandler works - it
can look at the headers in req.headers_in, and simply return apache.OK
or apache.HTTP_UNAUTHORIZED.

Again, wow. Thank you for deciphering this for me: this is my first
mod_python app.


> 
> 
> Hope this helps,
> 
> Ian
> <ian@veryfresh.com>
> 
> 
-- 
Hunter Matthews                          Unix / Network Administrator
Office: BioScience 145/244               Duke Univ. Biology Department
Key: F0F88438 / FFB5 34C0 B350 99A4 BB02  9779 A5DB 8B09 F0F8 8438
Never take candy from strangers. Especially on the internet.


From thm at duke.edu  Fri Aug 16 20:59:42 2002
From: thm at duke.edu (Hunter Matthews)
Date: Fri Jan  9 22:03:21 2004
Subject: [mod_python] Complicated GET configuration
In-Reply-To: <1029543172.1195.39.camel@jade.biology.duke.edu>
References: <1029518551.1517.29.camel@jade.biology.duke.edu>
	<20020816202745.GE11141@fullfactor.com>
	<1029530494.1195.22.camel@jade.biology.duke.edu>
	<1029531928.1195.28.camel@jade.biology.duke.edu> 
	<20020816215137.GH11141@fullfactor.com> 
	<1029543172.1195.39.camel@jade.biology.duke.edu>
Message-ID: <1029545983.1312.44.camel@jade.biology.duke.edu>

On Fri, 2002-08-16 at 20:12, Hunter Matthews wrote:
> > As soon as you add that line, Apache will report an internal server 
> > error until you give it an AuthName, AuthType, and some sort of 
> > Authentication handler. I added a stub handler which accepts any 
> > username and password.
> > 
> > Once those are all present, then Apache will happily run the 
> > AuthzHandler whenever the AuthenHandler returns OK.

Answered my own question - 

> In this particular application, I don't think the authorization will
> work quite like that: 
> 
> I don't get a user:password from a browser, this is an xmlrpc client
> that sends authentication/authorization information in custom HTTP
> headers. 
> 
> If you are deciding to allow or deny access based just on the contents
> of headers, which Handler would you pick?

Authen and Authz - you simply do whatever authentication and
authorization you want - if you're not doing user/password, don't call
those apache methods - roll your own.

Again, thanks to everyone on the list, esp Ian, who helped me understand
just how this works.

-- 
Hunter Matthews                          Unix / Network Administrator
Office: BioScience 145/244               Duke Univ. Biology Department
Key: F0F88438 / FFB5 34C0 B350 99A4 BB02  9779 A5DB 8B09 F0F8 8438
Never take candy from strangers. Especially on the internet.


From grisha at modpython.org  Fri Aug 16 22:25:58 2002
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 22:03:21 2004
Subject: [mod_python] Complicated GET configuration
In-Reply-To: <1029543172.1195.39.camel@jade.biology.duke.edu>
Message-ID: <Pine.BSF.4.32.0208162223250.202-100000@localhost>


On 16 Aug 2002, Hunter Matthews wrote:

> In testing here, it appears that PythonHeaderParserHandler works - it
> can look at the headers in req.headers_in, and simply return apache.OK
> or apache.HTTP_UNAUTHORIZED.

Consider having it return apache.DECLINED instead of apache.OK to let the
default handler and other modules parse headers as well.

Grisha


From alex at morrison.king.net.nz  Sat Aug 17 16:29:15 2002
From: alex at morrison.king.net.nz (Alex King)
Date: Fri Jan  9 22:03:21 2004
Subject: [mod_python] How do I use PythonTransHandler?
Message-ID: <20020817042915.GB1172@morrison.king.net.nz>

Quoting a previos post, by Ian Clelland:

>PythonTransHandler, which will receive all requests, and has the chance 
>to modify the URL before Apache passes the request to your main
>handler.

How do I use this?

From peter.bittner at gmx.net  Sat Aug 17 08:06:26 2002
From: peter.bittner at gmx.net (Peter Bittner)
Date: Fri Jan  9 22:03:22 2004
Subject: [Fwd: [mod_python] Messages not getting through to list server?]
References: <Pine.BSF.4.32.0208160840230.89789-100000@localhost>
Message-ID: <27256.1029564386@www40.gmx.net>

Why not move to a newsgroup solution completely? (Say,
comp.lang.python.modpython)

I would really appreciate that. I'd really prefer that.

These days it's simple and straightforward for everyone to read newsgroups
using http://groups.google.com - even if you don't have a newsreader.

Peter

"Gregory (Grisha) Trubetskoy" wrote:
> 
> My appologies - the list indeed seemed to have had a problem. I'm getting
> increasingly more dissatisfied with mailman - it has this "feature" where
> messages to domains whose MX's cannot be looked up (probably because the
> domain is no longer registered or DNS is down) clog up the entire list.
> 
> I've upgraded to 2.0.12 version of mailman, of this doesn't make it
> better, I will look for other software.
> 
> Thanks to all who made offers to host - so far hosting is not a problem.
> I'm not very keen on having the list at Sourceforge - I'd rather have more
> control over it, also I don't know how long Sourceforge will be around -
> these days nothing is certain. So far only CVS is hosted there.
> 
> Grisha
> 

-- 
GMX - Die Kommunikationsplattform im Internet.
http://www.gmx.net


From ian at veryfresh.com  Sat Aug 17 00:11:33 2002
From: ian at veryfresh.com (Ian Clelland)
Date: Fri Jan  9 22:03:22 2004
Subject: [mod_python] Complicated GET configuration
In-Reply-To: <1029543172.1195.39.camel@jade.biology.duke.edu>
References: <1029518551.1517.29.camel@jade.biology.duke.edu> <20020816202745.GE11141@fullfactor.com> <1029530494.1195.22.camel@jade.biology.duke.edu> <1029531928.1195.28.camel@jade.biology.duke.edu> <20020816215137.GH11141@fullfactor.com> <1029543172.1195.39.camel@jade.biology.duke.edu>
Message-ID: <20020817071133.GI11141@fullfactor.com>

On Fri, Aug 16, 2002 at 08:12:01PM -0400, Hunter Matthews wrote:
> In this particular application, I don't think the authorization will
> work quite like that: 
> 
> I don't get a user:password from a browser, this is an xmlrpc client
> that sends authentication/authorization information in custom HTTP
> headers. 
> 
> If you are deciding to allow or deny access based just on the contents
> of headers, which Handler would you pick?
> 
> In testing here, it appears that PythonHeaderParserHandler works - it
> can look at the headers in req.headers_in, and simply return apache.OK
> or apache.HTTP_UNAUTHORIZED.

Well, if you're not using standard HTTP authentication (specifically, if
you're not using the WWW-Authenticate and Authorization headers,) then
maybe the best handler to use would be a PythonAccessHandler. Access
control handlers are generally free to deny access to a resource based
on any criteria you want. They will usually return an apache.HTTP_FORBIDDEN
(403) if access is denied, but you can make it return whatever you want.

Technically, you are not supposed to return a 401 (Unauthorized) status
code unless you are also including a WWW-Authenticate header, but it
really comes down to doing what the client expects, especially if the
client is non-interactive.

> Again, wow. Thank you for deciphering this for me: this is my first
> mod_python app.

You're welcome -- I'm just glad I could be of help


Ian
<ian@veryfresh.com>

From ian at veryfresh.com  Sat Aug 17 00:44:09 2002
From: ian at veryfresh.com (Ian Clelland)
Date: Fri Jan  9 22:03:22 2004
Subject: [mod_python] How do I use PythonTransHandler?
In-Reply-To: <20020817042915.GB1172@morrison.king.net.nz>
References: <20020817042915.GB1172@morrison.king.net.nz>
Message-ID: <20020817074409.GJ11141@fullfactor.com>

On Sat, Aug 17, 2002 at 04:29:15PM +1200, Alex King wrote:
> Quoting a previos post, by Ian Clelland:
> 
> >PythonTransHandler, which will receive all requests, and has the chance 
> >to modify the URL before Apache passes the request to your main
> >handler.
> 
> How do I use this?
 
The same way you would set a regular PythonHandler, you can set up 
Apache to use a PythonTransHandler:

<VirtualHost *:80>
  ServerName pytest.zoostation
  DocumentRoot /var/local/apache/htdocs/pytest
  PythonPath "sys.path+['/home/ian/src/pytest']"
  PythonTransHandler translate_test
</VirtualHost>

And then just write the python module to set the filename attribute:

def transhandler(req):
    req.filename = '/var/local/apache/htdocs/pytest/test2.html'
    return apache.OK

> My problem is that the request object members such as filename and the
> like are read-only, so how do I pass the new filename back to apache?

Well, req.filename is definitely _not_ read-only. This may be another
bug in the documentation, but the code is there in requestobject.c to
set that attribute. I just ran a couple of tests, and I can set the
filename for a request, and Apache will return that file.

The problem I can see right now is that there appears to be no way to
get the DocumentRoot for the current request. You shouldn't have a 
problem if your cached files are completly outside of your DocumentRoot 
(and you have the absolute path available to your handler,) but you 
might have a hard time if you want to translate a URL to another file 
within your DocumentRoot, and don't want to put the full path inside 
your source files.


Ian Clelland
<ian@veryfresh.com>

From alex at morrison.king.net.nz  Sat Aug 17 20:37:43 2002
From: alex at morrison.king.net.nz (Alex King)
Date: Fri Jan  9 22:03:22 2004
Subject: [mod_python] How do I use PythonTransHandler?
In-Reply-To: <20020817074409.GJ11141@fullfactor.com>
References: <20020817042915.GB1172@morrison.king.net.nz> <20020817074409.GJ11141@fullfactor.com>
Message-ID: <20020817083743.GA5349@morrison.king.net.nz>

On Sat, Aug 17, 2002 at 12:44:09AM -0700, Ian Clelland wrote:
> On Sat, Aug 17, 2002 at 04:29:15PM +1200, Alex King wrote:
> > Quoting a previos post, by Ian Clelland:
> > 
> > >PythonTransHandler, which will receive all requests, and has the chance 
> > >to modify the URL before Apache passes the request to your main
> > >handler.
> > 
> > How do I use this?
>  
> The same way you would set a regular PythonHandler, you can set up 
> Apache to use a PythonTransHandler:
> 
> <VirtualHost *:80>
>   ServerName pytest.zoostation
>   DocumentRoot /var/local/apache/htdocs/pytest
>   PythonPath "sys.path+['/home/ian/src/pytest']"

ahh - that's how you do it.  I expected the DocumentRoot to be added to
the sys.path by mod_python, but it wasn't  I ended up putting my script
in /usr/local/lib/python2.1/site-packages/ to get it in the path.  I
overlooked PythonPath for some reason...

>   PythonTransHandler translate_test
> </VirtualHost>
> 
> And then just write the python module to set the filename attribute:
> 
> def transhandler(req):
>     req.filename = '/var/local/apache/htdocs/pytest/test2.html'
>     return apache.OK
> 
> > My problem is that the request object members such as filename and the
> > like are read-only, so how do I pass the new filename back to apache?
> 
> Well, req.filename is definitely _not_ read-only. This may be another
> bug in the documentation, but the code is there in requestobject.c to
> set that attribute. I just ran a couple of tests, and I can set the
> filename for a request, and Apache will return that file.
> 
OK, cool that's how I expected it to work.  The read-only note beside
the req.filename in the docs put me off though and I didn't actually try
it.  Perhaps the request filename is read-only by the time it get to the
main request handler?  In the docs I have, all the members of the rquest
structure are noted to be read-only except for content_type, headers_in,
headers_out, and err_headers_out.  Perhaps those read-only notes in the
docs are all in relation to the main request handler, not to all
handlers in general.

Anyway this makes me much happier :)

> The problem I can see right now is that there appears to be no way to
> get the DocumentRoot for the current request. You shouldn't have a 
> problem if your cached files are completly outside of your DocumentRoot 
> (and you have the absolute path available to your handler,) but you 
> might have a hard time if you want to translate a URL to another file 
> within your DocumentRoot, and don't want to put the full path inside 
> your source files.

Yeah, I discovered that.  I was looking at req.get_config() to see what
it returned, it only seems to return module specific configs.  If it
returned all the configs I would have picked DocumentRoot out of that.
Instead I'm going to ignore DocumentRoot and set various directories to
be used for the cache etc. with PythonOption directives in the apache
config.

Another problem I'm having is not understanding req.add_handler().  I
thought I'd have code to determince whether to take special action in
the PythonTransHandler (ie. download a file not in cache).  If a
download is needed, the transhandler runs
req.add_handler("PythonHandler","padcache") where padcache.py is my
script in /usr/local/lib/python2.1/site-packages/.

I'm probably not understanding the second argument to the function, or
perhaps it's a path problem again, but I keep getting a traceback:
[Sat Aug 17 20:29:48 2002] [error] PythonHandler padcache: Traceback (most recent call last):
[Sat Aug 17 20:29:48 2002] [error] PythonHandler padcache:   File "/usr/lib/python2.1/site-packages/mod_python/apache.py", line 176, in Dispatch
    dir = _req.get_all_dirs()[htype]
[Sat Aug 17 20:29:48 2002] [error] PythonHandler padcache: KeyError: PythonHandler

What I am wanting to achieve is to normally not have a python handler
run for the main handler, so no PythonHandler is specified in the
config, but in cases when transhandler determines that it does need to
be run, it is added with add_handler()

> 
> 
> Ian Clelland

Thanks for your quick response :)

Alex

From alex at morrison.king.net.nz  Sat Aug 17 20:46:45 2002
From: alex at morrison.king.net.nz (Alex King)
Date: Fri Jan  9 22:03:22 2004
Subject: [mod_python] How do I use PythonTransHandler?
In-Reply-To: <20020817074409.GJ11141@fullfactor.com>
References: <20020817042915.GB1172@morrison.king.net.nz> <20020817074409.GJ11141@fullfactor.com>
Message-ID: <20020817084645.GA5534@morrison.king.net.nz>

> 
> Well, req.filename is definitely _not_ read-only. This may be another
> bug in the documentation, but the code is there in requestobject.c to
> set that attribute. I just ran a couple of tests, and I can set the
> filename for a request, and Apache will return that file.
> 
I forgot to mention I was using debian woody (stable), with mod_python
version 2.7.8

From ian at veryfresh.com  Sat Aug 17 03:36:06 2002
From: ian at veryfresh.com (Ian Clelland)
Date: Fri Jan  9 22:03:22 2004
Subject: [mod_python] How do I use PythonTransHandler?
In-Reply-To: <20020817083743.GA5349@morrison.king.net.nz>
References: <20020817042915.GB1172@morrison.king.net.nz> <20020817074409.GJ11141@fullfactor.com> <20020817083743.GA5349@morrison.king.net.nz>
Message-ID: <20020817103606.GK11141@fullfactor.com>

On Sat, Aug 17, 2002 at 08:37:43PM +1200, Alex King wrote:
> > The problem I can see right now is that there appears to be no way to
> > get the DocumentRoot for the current request. You shouldn't have a 
> > problem if your cached files are completly outside of your DocumentRoot 
> > (and you have the absolute path available to your handler,) but you 
> > might have a hard time if you want to translate a URL to another file 
> > within your DocumentRoot, and don't want to put the full path inside 
> > your source files.
> 
> Yeah, I discovered that.  I was looking at req.get_config() to see what
> it returned, it only seems to return module specific configs.  If it
> returned all the configs I would have picked DocumentRoot out of that.
> Instead I'm going to ignore DocumentRoot and set various directories to
> be used for the cache etc. with PythonOption directives in the apache
> config.

That's what I'd suggest -- if you really need to use your document root,
then add a PythonOption with the same value to your server config. I
looked at get_config (and the less-documented get_all_config) and it
only gets the configuration directives which are specific to mod_python.

mod_perl seems to have a document_root() method for its request object;
I haven't looked too closely at how it gets that from Apache, though. It
would be a nice addition to mod_python (hint, hint :) )


> Another problem I'm having is not understanding req.add_handler().  I
> thought I'd have code to determince whether to take special action in
> the PythonTransHandler (ie. download a file not in cache).  If a
> download is needed, the transhandler runs
> req.add_handler("PythonHandler","padcache") where padcache.py is my
> script in /usr/local/lib/python2.1/site-packages/.
> 
> I'm probably not understanding the second argument to the function, or
> perhaps it's a path problem again, but I keep getting a traceback:
> [Sat Aug 17 20:29:48 2002] [error] PythonHandler padcache: Traceback (most recent call last):
> [Sat Aug 17 20:29:48 2002] [error] PythonHandler padcache:   File "/usr/lib/python2.1/site-packages/mod_python/apache.py", line 176, in Dispatch
>     dir = _req.get_all_dirs()[htype]
> [Sat Aug 17 20:29:48 2002] [error] PythonHandler padcache: KeyError: PythonHandler


Try using req.add_handler("PythonHandler", "padcache::handler"). I'm not
sure where the "::" notation comes from -- it appears to be internal to
mod_python, or perhaps to python itself. Either way, I think you need to
specify both the module name (padcache) and the handler function
(usually just 'handler' for content handlers).

Note: I haven't tried this one myself; that's just what I can glean from
the documentation.

> Thanks for your quick response :)

No problem -- but now I've got to get some sleep :)

Later,

Ian
<ian@veryfresh.com>

From alain at onesite.org  Sat Aug 17 20:32:49 2002
From: alain at onesite.org (Alain Tesio)
Date: Fri Jan  9 22:03:22 2004
Subject: [mod_python] Ping?
In-Reply-To: <20020714135537.A278@eye.neb>
References: <Pine.LNX.4.44.0207131250410.31967-100000@slippy.wire.rat>
	<20020714135537.A278@eye.neb>
Message-ID: <20020817203249.5363f531.alain@onesite.org>

On Sun, 14 Jul 2002 13:55:37 -0500
vio <vmilitaru@sympatico.ca> wrote:

> Possible solution (provided this message make it to the list): how about 
> migrating modpython to 'sourceforge'? It's totally
> free and they do an outstanding hosting job.


Sourceforge is moving progressively from free (as in free speech) to
proprietary, read this on lwn : http://lwn.net/Articles/7480/

It makes it hard to move a project out of sourceforge if you change
your mind.

Savannah is a free clone of sourceforge : http://savannah.gnu.org/

For the mailing list, I could host it, I already have some mailman lists,
the administrator can contact me if needed.

Alain

From daniel at copyleft.no  Sat Aug 17 21:18:52 2002
From: daniel at copyleft.no (Hr. Daniel Mikkelsen)
Date: Fri Jan  9 22:03:22 2004
Subject: [mod_python] Ping?
In-Reply-To: <20020817203249.5363f531.alain@onesite.org>
Message-ID: <20020817211821.W1331-100000@unity.copyleft.no>

On Sat, 17 Aug 2002, Alain Tesio wrote:

> Sourceforge is moving progressively from free (as in free speech) to
> proprietary, read this on lwn : http://lwn.net/Articles/7480/

> It makes it hard to move a project out of sourceforge if you change
> your mind.

I agree. We should stay away from sourceforge.

-- Daniel


From mk at lrn.ru  Sat Aug 17 21:46:04 2002
From: mk at lrn.ru (Michael Krasnovsky)
Date: Fri Jan  9 22:03:22 2004
Subject: [mod_python] encodings (codecs)
Message-ID: <20020817214604.30f73b6b.mk@lrn.ru>

Hi!

I have a problem using encode() method of a string object inside my
publisher handlers. I get LookupError: unknown encoding. 
Here is the sample.

def test(req):
	cnt = "Hello, World Wide!"
	return cnt.encode("utf-8")

BTW, this function works fine being called not from mod_python handler.

How could it be fixed?

Thanks.

Michael.

From tree at basistech.com  Sat Aug 17 17:14:19 2002
From: tree at basistech.com (Tom Emerson)
Date: Fri Jan  9 22:03:22 2004
Subject: [mod_python] encodings (codecs)
In-Reply-To: <20020817214604.30f73b6b.mk@lrn.ru>
References: <20020817214604.30f73b6b.mk@lrn.ru>
Message-ID: <15710.48299.723199.361687@magrathea.basistech.com>

Michael Krasnovsky writes:
> I have a problem using encode() method of a string object inside my
> publisher handlers. I get LookupError: unknown encoding. 
> Here is the sample.

Are you sure the version of Python that is being used by mod_python is
the same as the version that is running from the shell? UTF-8 i one of
the built-in encodings, so I don't think you'll get exception unless
the encoding support isn't there at all.

FWIW I use this functionality all the time from the Publisher and it
works fine.

    -tree

-- 
Tom Emerson                                          Basis Technology Corp.
Software Architect                                 http://www.basistech.com
  "Beware the lollipop of mediocrity: lick it once and you suck forever"

From mk at lrn.ru  Sun Aug 18 12:29:34 2002
From: mk at lrn.ru (Michael Krasnovsky)
Date: Fri Jan  9 22:03:22 2004
Subject: [mod_python] encodings (codecs)
In-Reply-To: <15710.48299.723199.361687@magrathea.basistech.com>
References: <20020817214604.30f73b6b.mk@lrn.ru>
	<15710.48299.723199.361687@magrathea.basistech.com>
Message-ID: <20020818122934.43c707be.mk@lrn.ru>

> Are you sure the version of Python that is being used by mod_python is
> the same as the version that is running from the shell? UTF-8 i one of
> the built-in encodings, so I don't think you'll get exception unless
> the encoding support isn't there at all.

Yes, I'm sure. I have only one version of Python installed - 2.2.1. I
suppose the problem is related somehow to paths resolving during
proceeding my module by mod_python.
But I cannot say how. 
By the way, if I add in sitecustomize.py the line:
sys.path.append('/usr/lib/python2.2/encodings'), I get the next error
message:

  File "/home/mk/tests/biprojects/bisoft/www/test4.py", line 5, in test
    return cnt.encode("utf-8")

  File "/usr/lib/python2.2/encodings/__init__.py", line 51, in
search_function
    mod = __import__(modname,globals(),locals(),'*')

  RuntimeError: cannot unmarshal code objects in restricted execution
mode


> 
> FWIW I use this functionality all the time from the Publisher and it
> works fine.

So, may be something wrong in my apache configuration? Could you show
the fragment of your httpd.conf, which  describes mod_python conf.?

Thank you for your help.
Michael.

From mk at lrn.ru  Sun Aug 18 21:46:27 2002
From: mk at lrn.ru (Michael Krasnovsky)
Date: Fri Jan  9 22:03:22 2004
Subject: [mod_python] encodings (codecs)
In-Reply-To: <15710.48299.723199.361687@magrathea.basistech.com>
References: <20020817214604.30f73b6b.mk@lrn.ru>
	<15710.48299.723199.361687@magrathea.basistech.com>
Message-ID: <20020818214627.1f21a41d.mk@lrn.ru>

Hi, Tom!
> 
> FWIW I use this functionality all the time from the Publisher and it
> works fine.

Do you have Python compiled with or without thread support?

From fabbe at paniq.net  Mon Aug 19 11:53:01 2002
From: fabbe at paniq.net (Fabian Fagerholm)
Date: Fri Jan  9 22:03:22 2004
Subject: [mod_python] Questions for the FAQ - please check and confirm
	(req.write() and return) also docs update ...
In-Reply-To: <Pine.BSF.4.32.0208160856250.89789-100000@localhost>
References: <Pine.BSF.4.32.0208160856250.89789-100000@localhost>
Message-ID: <1029747182.1111.17.camel@kernel>

On Fri, 2002-08-16 at 16:00, Gregory (Grisha) Trubetskoy wrote:
> On 16 Aug 2002, Fabian Fagerholm wrote:
> > If you're using the Publisher handler, you can use req.write() once,
> > but then you *have* to return something at the end of your function,
> > or things won't work.
> 
> You should be able to use write() many times as you like. It should also
> be ok to return an empty string *if* you have written something with
> write(), otherwise returning an empty document will cause a problem with
> Netscape at least.

Right, now I have it working. I see now why I was confused. It seems to
me that mod_python is behaving differently at different times. For
example:

If I follow the Tutorial section in the mod_python docs, and create a
directory /home/fabbe/public_html/mod_python/temp_test_1 for my tests,
and in this directory, I place a .htaccess file with the following
contents:

    AddHandler python-program .py
    PythonHandler myscript

just like in the tutorial. Then, I write myscript.py in the same
directory:

    from mod_python import apache
    
    def handler(req):
        req.content_type = "text/plain"
        req.send_http_header()
        req.write("Hello, World!")
    
        return apache.OK
    
I then load ~fabbe/mod_python/temp_test_1/myscript.py from the web
server, and I get the following:

    Hello, World!
    <p>/home/fabbe/public_html/mod_python/temp_test_1/myscript.py</p>
    
which is not what I expected. But when I press reload on my browser, the
last line disappears and everything works as expected *even if I remove
those files and rewrite them, or change 'myscript' to 'fooscript'*!

I don't get it... :)

The apache logs show the following:

First access:
    212.226.163.85 - - [19/Aug/2002:11:34:33 +0300]
     "GET /~fabbe/mod_python/temp_test_1/myscript.py HTTP/1.1" 200 99
     "https://no.paniq.net/~fabbe/mod_python/temp_test_1/" "Mozilla/5.0
     Galeon/1.2.5 (X11; Linux i686; U;) Gecko/20020610 Debian/1.2.5-1"

Subsequent accesses:
    212.226.163.85 - - [19/Aug/2002:11:41:52 +0300]
     "GET /~fabbe/mod_python/temp_test_1/myscript.py HTTP/1.1" 200 25
     "-"
     "Mozilla/5.0 Galeon/1.2.5 (X11; Linux i686; U;) Gecko/20020610
     Debian/1.2.5-1"

The only difference I see compared to the tutorial is that I'm using
https. But that shouldn't affect mod_python, should it?

Could someone clarify?

Cheers,
Fabian



From fabbe at paniq.net  Mon Aug 19 12:21:43 2002
From: fabbe at paniq.net (Fabian Fagerholm)
Date: Fri Jan  9 22:03:22 2004
Subject: [mod_python] Package notation in PythonHandler directive
Message-ID: <1029748903.1111.27.camel@kernel>

Continuing to explore mod_python, I'm having trouble with package
notation in the PythonHandler directive.

I'm looking at the mod_python docs, and the Tutorial section 3.2 in
particular. It suggests that you could have a directory structure as
follows:

<your base dir>
  |
  +- .htaccess (file)
  +- subdir (directory)
      |
      +- myscript.py (file)

The .htaccess file would look as follows:

    AddHandler python-program .py
    PythonHandler subdir.myscript
    
and the myscript.py file in the 'subdir' subdirectory would look as
follows:

    from mod_python import apache
    
    def handler(req):
        req.content_type = "text/plain"
        req.send_http_header()
        req.write("Hello, World!")
    
        return apache.OK

If I do this, I get a 500 Internal Server Error and the following
appears in the apache logs:

    [Mon Aug 19 12:12:57 2002] [error] PythonHandler subdir.myscript:
    Traceback (most recent call last):
    [Mon Aug 19 12:12:57 2002] [error] PythonHandler subdir.myscript:  
    File "/usr/lib/python2.1/site-packages/mod_python/apache.py", line
    181, in Dispatch
        module = import_module(module_name, _req)
    [Mon Aug 19 12:12:57 2002] [error] PythonHandler subdir.myscript:  
    File "/usr/lib/python2.1/site-packages/mod_python/apache.py", line
    332, in import_module
        f, p, d = imp.find_module(parts[i], path)
    [Mon Aug 19 12:12:57 2002] [error] PythonHandler subdir.myscript:
    ImportError: No module named subdir
    
What am I doing wrong?

Cheers,
Fabian



From tree at basistech.com  Mon Aug 19 06:39:54 2002
From: tree at basistech.com (Tom Emerson)
Date: Fri Jan  9 22:03:22 2004
Subject: [mod_python] encodings (codecs)
In-Reply-To: <20020818214627.1f21a41d.mk@lrn.ru>
References: <20020817214604.30f73b6b.mk@lrn.ru>
	<15710.48299.723199.361687@magrathea.basistech.com>
	<20020818214627.1f21a41d.mk@lrn.ru>
Message-ID: <15712.51962.189948.95477@magrathea.basistech.com>

Michael Krasnovsky writes:
> > FWIW I use this functionality all the time from the Publisher and it
> > works fine.
> 
> Do you have Python compiled with or without thread support?

Without: on FreeBSD thread support doesn't work, at least with Apache 1.3.26.

    -tree

-- 
Tom Emerson                                          Basis Technology Corp.
Software Architect                                 http://www.basistech.com
  "Beware the lollipop of mediocrity: lick it once and you suck forever"

From grisha at modpython.org  Mon Aug 19 08:32:26 2002
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 22:03:22 2004
Subject: [mod_python] Package notation in PythonHandler directive
In-Reply-To: <1029748903.1111.27.camel@kernel>
Message-ID: <Pine.BSF.4.32.0208190831110.34551-100000@localhost>

You might need an __init__.py file in subdir in order for this to work.

On 19 Aug 2002, Fabian Fagerholm wrote:

> Continuing to explore mod_python, I'm having trouble with package
> notation in the PythonHandler directive.
>
> I'm looking at the mod_python docs, and the Tutorial section 3.2 in
> particular. It suggests that you could have a directory structure as
> follows:
>
> <your base dir>
>   |
>   +- .htaccess (file)
>   +- subdir (directory)
>       |
>       +- myscript.py (file)
>
> The .htaccess file would look as follows:
>
>     AddHandler python-program .py
>     PythonHandler subdir.myscript
>
> and the myscript.py file in the 'subdir' subdirectory would look as
> follows:
>
>     from mod_python import apache
>
>     def handler(req):
>         req.content_type = "text/plain"
>         req.send_http_header()
>         req.write("Hello, World!")
>
>         return apache.OK
>
> If I do this, I get a 500 Internal Server Error and the following
> appears in the apache logs:
>
>     [Mon Aug 19 12:12:57 2002] [error] PythonHandler subdir.myscript:
>     Traceback (most recent call last):
>     [Mon Aug 19 12:12:57 2002] [error] PythonHandler subdir.myscript:
>     File "/usr/lib/python2.1/site-packages/mod_python/apache.py", line
>     181, in Dispatch
>         module = import_module(module_name, _req)
>     [Mon Aug 19 12:12:57 2002] [error] PythonHandler subdir.myscript:
>     File "/usr/lib/python2.1/site-packages/mod_python/apache.py", line
>     332, in import_module
>         f, p, d = imp.find_module(parts[i], path)
>     [Mon Aug 19 12:12:57 2002] [error] PythonHandler subdir.myscript:
>     ImportError: No module named subdir
>
> What am I doing wrong?
>
> Cheers,
> Fabian
>
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://www.modpython.org/mailman/listinfo/mod_python
>


From grisha at modpython.org  Mon Aug 19 08:37:44 2002
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 22:03:22 2004
Subject: [mod_python] encodings (codecs)
In-Reply-To: <15712.51962.189948.95477@magrathea.basistech.com>
Message-ID: <Pine.BSF.4.32.0208190834120.34551-100000@localhost>

This is just a theory:

If the .so file which provides this functionality was compiled against a
Python different than the one you're using for mod_python, there may be a
problem ("different" could mean that one has thread support and the other
does not, even though they are the same version). Especially on FreeBSD,
where as far as I know thread support implies using a whole different
libc. Try recompiling *and* reinstalling Python without threads and see if
it fixes the problem.

Grisha


On Mon, 19 Aug 2002, Tom Emerson wrote:

> Michael Krasnovsky writes:
> > > FWIW I use this functionality all the time from the Publisher and it
> > > works fine.
> >
> > Do you have Python compiled with or without thread support?
>
> Without: on FreeBSD thread support doesn't work, at least with Apache 1.3.26.
>
>     -tree


From fabbe at paniq.net  Mon Aug 19 16:07:02 2002
From: fabbe at paniq.net (Fabian Fagerholm)
Date: Fri Jan  9 22:03:22 2004
Subject: [mod_python] Package notation in PythonHandler directive
In-Reply-To: <Pine.BSF.4.32.0208190831110.34551-100000@localhost>
References: <Pine.BSF.4.32.0208190831110.34551-100000@localhost>
Message-ID: <1029762422.1111.33.camel@kernel>

> > On 19 Aug 2002, Fabian Fagerholm wrote:
> > Continuing to explore mod_python, I'm having trouble with package
> > notation in the PythonHandler directive.
...
> >     AddHandler python-program .py
> >     PythonHandler subdir.myscript

On Mon, 2002-08-19 at 15:32, Gregory (Grisha) Trubetskoy wrote:
> 
> You might need an __init__.py file in subdir in order for this to work.

You're quite right. Many thanks for this pointer!

For the list archives (and this could be a FAQ item as well):

Since Python 1.5b1, just any directory doesn't qualify as a package. A
package is a directory *with* the __init__.py file.

So my error was entirely Python-related and didn't actually concern
mod_python at all.

Cheers,
Fabian



From jack_diederich at email.com  Tue Aug 20 11:29:17 2002
From: jack_diederich at email.com (Jack Diederich)
Date: Fri Jan  9 22:03:22 2004
Subject: [mod_python] Using non-global python with mod_python
Message-ID: <20020820162917.28271.qmail@email.com>

I just ran into a problem like this previously posted one:
  http://www.modpython.org/pipermail/mod_python/2002-July/002218.html

which gives you the 'could not import mod_python.apache, could not call init'
type of error.  After playing around I figured out that it was looking at
my globally installed copy of Python (/usr/local/python2.2) and NOT the copy I had
passed in to ./configure (/home/www/python2.2)

mod_python properly installed the py's in /home/www/python2.2 tree but it would
never get picked up by apache.  Even adding the home tree with the PythonPath
directive didn't work.  I had to symlink the site-packages directory from
/usr/local to the /home tree.

I couldn't find any reference to the /usr/local directory anywhere in the configured
mod_python tree.

Any guesses where it is getting the idea that everything is under /usr/local?

thanks,

-jack
-- 
__________________________________________________________
Sign-up for your own FREE Personalized E-mail at Mail.com
http://www.mail.com/?sr=signup


From jack_diederich at email.com  Tue Aug 20 11:29:17 2002
From: jack_diederich at email.com (Jack Diederich)
Date: Fri Jan  9 22:03:22 2004
Subject: [mod_python] Using non-global python with mod_python
Message-ID: <20020820162917.28271.qmail@email.com>

I just ran into a problem like this previously posted one:
  http://www.modpython.org/pipermail/mod_python/2002-July/002218.html

which gives you the 'could not import mod_python.apache, could not call init'
type of error.  After playing around I figured out that it was looking at
my globally installed copy of Python (/usr/local/python2.2) and NOT the copy I had
passed in to ./configure (/home/www/python2.2)

mod_python properly installed the py's in /home/www/python2.2 tree but it would
never get picked up by apache.  Even adding the home tree with the PythonPath
directive didn't work.  I had to symlink the site-packages directory from
/usr/local to the /home tree.

I couldn't find any reference to the /usr/local directory anywhere in the configured
mod_python tree.

Any guesses where it is getting the idea that everything is under /usr/local?

thanks,

-jack
-- 
__________________________________________________________
Sign-up for your own FREE Personalized E-mail at Mail.com
http://www.mail.com/?sr=signup


From grisha at modpython.org  Tue Aug 20 13:40:09 2002
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 22:03:22 2004
Subject: [mod_python] Using non-global python with mod_python
In-Reply-To: <20020820162917.28271.qmail@email.com>
Message-ID: <Pine.BSF.4.32.0208201329590.73876-100000@eden.ispol.com>

On Tue, 20 Aug 2002, Jack Diederich wrote:

> I just ran into a problem like this previously posted one:
>   http://www.modpython.org/pipermail/mod_python/2002-July/002218.html

[snip]

> I couldn't find any reference to the /usr/local directory anywhere in the configured
> mod_python tree.
>
> Any guesses where it is getting the idea that everything is under /usr/local?

I think ./configure is getting this idea from the first python it can find
in the path.

Try to run configure like with something like this:

$ PATH=/home/www/python2.2:$PATH ./configure --[your-args]

Grisha



From kevin at vap.org  Tue Aug 20 13:45:25 2002
From: kevin at vap.org (kevin@vap.org)
Date: Fri Jan  9 22:03:22 2004
Subject: [mod_python] IOError: [Errno 2] No such file or directory...(etc)
Message-ID: <291760-220028220174525100@vap.org>

Okay, I know this has been discussed many times before, and I am
aware of the fix on the FAQ.  However, I have a few issues:

1) My error says "IOError" instead of the "OSError" that everyone
else has reported.
2) using Python 2.2.1, Apache 1.3.26, Modpython 2.7.8, on WinXP
3) Since the python patch for this was closed in Aug-2001, any idea
why it isn't in Python 2.2.1, released Apr-2002?  
4) I went ahead & patched pythonrun.c and recompiled my Python 2.2.1.
The FAQ says to rebuild mod_python, but I don't know how to on
Windows, and I suspect 2.7.8 might already have the fix?.  

Can anyone assist with rebuilding mod_python on Windows?  What effect
would that have since it doesn't include pythonrun.c in the
mod_python build?  Any other ideas regarding the problem? (output is
below)

-Kevin

**** output ****

Mod_python error: "PythonHandler mod_python.publisher"

Traceback (most recent call last):

  File "C:\...\python\Lib\mod_python\apache.py", line 193, in Dispatch
    result = object(req)

  File "C:\...\python\Lib\mod_python\publisher.py", line 171, in
handler
    result = apply(object, (), args)

  File "c:/.../mywww\imgsvr.py", line 77, in get
    fd = open( filenm, "rb" )

IOError: [Errno 2] No such file or directory:
'z:\\FILES\\up\\oak_20020730\\01638764.BCK.jpg'

**** end of output ****

Notes:
I'm trying to access a file on my local network.  I have tried
different drive letters on my local network (& UNC paths instead of
drive letters).  The only time it works is when I use the local "C:"
for the path.  Even if I do a "subst e: c:\" and try that (E:\...),
it fails.  I even tried messing with <Directory> entries in Apache to
no avail.

And yes, the code works fine when outside of Apache/Mod_python.


From grisha at modpython.org  Tue Aug 20 14:36:51 2002
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 22:03:23 2004
Subject: [mod_python] IOError: [Errno 2] No such file or directory...(etc)
In-Reply-To: <291760-220028220174525100@vap.org>
Message-ID: <Pine.BSF.4.32.0208201436120.73876-100000@eden.ispol.com>

Might it be that the Z: mapping doesn't exist for whatever user id the
apache service is running under?

Grisha

On Tue, 20 Aug 2002 kevin@vap.org wrote:

> Okay, I know this has been discussed many times before, and I am
> aware of the fix on the FAQ.  However, I have a few issues:
>
> 1) My error says "IOError" instead of the "OSError" that everyone
> else has reported.
> 2) using Python 2.2.1, Apache 1.3.26, Modpython 2.7.8, on WinXP
> 3) Since the python patch for this was closed in Aug-2001, any idea
> why it isn't in Python 2.2.1, released Apr-2002?
> 4) I went ahead & patched pythonrun.c and recompiled my Python 2.2.1.
> The FAQ says to rebuild mod_python, but I don't know how to on
> Windows, and I suspect 2.7.8 might already have the fix?.
>
> Can anyone assist with rebuilding mod_python on Windows?  What effect
> would that have since it doesn't include pythonrun.c in the
> mod_python build?  Any other ideas regarding the problem? (output is
> below)
>
> -Kevin
>
> **** output ****
>
> Mod_python error: "PythonHandler mod_python.publisher"
>
> Traceback (most recent call last):
>
>   File "C:\...\python\Lib\mod_python\apache.py", line 193, in Dispatch
>     result = object(req)
>
>   File "C:\...\python\Lib\mod_python\publisher.py", line 171, in
> handler
>     result = apply(object, (), args)
>
>   File "c:/.../mywww\imgsvr.py", line 77, in get
>     fd = open( filenm, "rb" )
>
> IOError: [Errno 2] No such file or directory:
> 'z:\\FILES\\up\\oak_20020730\\01638764.BCK.jpg'
>
> **** end of output ****
>
> Notes:
> I'm trying to access a file on my local network.  I have tried
> different drive letters on my local network (& UNC paths instead of
> drive letters).  The only time it works is when I use the local "C:"
> for the path.  Even if I do a "subst e: c:\" and try that (E:\...),
> it fails.  I even tried messing with <Directory> entries in Apache to
> no avail.
>
> And yes, the code works fine when outside of Apache/Mod_python.
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://www.modpython.org/mailman/listinfo/mod_python
>


From kevin at vap.org  Tue Aug 20 17:09:46 2002
From: kevin at vap.org (kevin@vap.org)
Date: Fri Jan  9 22:03:23 2004
Subject: [mod_python] IOError: [Errno 2] No such file or directory...(etc)
Message-ID: <35720-22002822021946661@vap.org>

That sounds like a possibility, but it didn't help.  Here is some
more information:

- I changed the Apache service to logon with my username (which also
logs on to our Windows Domain).  No improvement.
- If I just return an HTML tag to have the browser open the graphic
(like <img src="z:\...jpg" />), then access works (probably since it
is under my user id via the browser application).
- I tried the code as a CGI called from Apache and I get the same
error (so I guess it doesn't have anything to do with modpython).


I guess I'll redirect this to an Apache group since it doesn't look
to be caused by modpython.

Any ideas are appreciated, though.

-Kevin



---- Original Message ----
From: grisha@modpython.org
To: kevin@vap.org, 
Subject: Re: [mod_python] IOError: [Errno 2] No such file or
directory...(etc)
Date: Tue, 20 Aug 2002 14:36:51 -0400 (EDT)

>
>Might it be that the Z: mapping doesn't exist for whatever user id 
>the
>apache service is running under?
>
>Grisha
>
>On Tue, 20 Aug 2002 kevin@vap.org wrote:
>
>> Okay, I know this has been discussed many times before, and I am
>> aware of the fix on the FAQ.  However, I have a few issues:
>>
>> 1) My error says "IOError" instead of the "OSError" that everyone
>> else has reported.
>> 2) using Python 2.2.1, Apache 1.3.26, Modpython 2.7.8, on WinXP
>> 3) Since the python patch for this was closed in Aug-2001, any idea
>> why it isn't in Python 2.2.1, released Apr-2002?
>> 4) I went ahead & patched pythonrun.c and recompiled my Python 
>2.2.1.
>> The FAQ says to rebuild mod_python, but I don't know how to on
>> Windows, and I suspect 2.7.8 might already have the fix?.
>>
>> Can anyone assist with rebuilding mod_python on Windows?  What 
>effect
>> would that have since it doesn't include pythonrun.c in the
>> mod_python build?  Any other ideas regarding the problem? (output 
>is
>> below)
>>
>> -Kevin
>>
>> **** output ****
>>
>> Mod_python error: "PythonHandler mod_python.publisher"
>>
>> Traceback (most recent call last):
>>
>>   File "C:\...\python\Lib\mod_python\apache.py", line 193, in 
>Dispatch
>>     result = object(req)
>>
>>   File "C:\...\python\Lib\mod_python\publisher.py", line 171, in
>> handler
>>     result = apply(object, (), args)
>>
>>   File "c:/.../mywww\imgsvr.py", line 77, in get
>>     fd = open( filenm, "rb" )
>>
>> IOError: [Errno 2] No such file or directory:
>> 'z:\\FILES\\up\\oak_20020730\\01638764.BCK.jpg'
>>
>> **** end of output ****
>>
>> Notes:
>> I'm trying to access a file on my local network.  I have tried
>> different drive letters on my local network (& UNC paths instead of
>> drive letters).  The only time it works is when I use the local 
>"C:"
>> for the path.  Even if I do a "subst e: c:\" and try that (E:\...),
>> it fails.  I even tried messing with <Directory> entries in Apache 
>to
>> no avail.
>>
>> And yes, the code works fine when outside of Apache/Mod_python.



From rclilly at lvcm.com  Wed Aug 21 10:44:13 2002
From: rclilly at lvcm.com (Robert Lilly)
Date: Fri Jan  9 22:03:23 2004
Subject: [mod_python] mod_python for Apache 2? (Cross-posted to mod_python & Apache users lists)
Message-ID: <EGEMLKBGPBCGGGFNPMGNGEOFCDAA.rclilly@lvcm.com>

Is there a mod_python.dll for Apache 2? Is it possible to run mod_python
with Apache 2 under Windows 2000? If so, how do I do it.

Currently I've tried adding:

LoadModule python_module modules/mod_python.dll

and

<Directory "E:/My Documents/RCL Enterprises/Web/htdocs/python">
   AddHandler python-program .py
   PythonHandler mptest
   PythonDebug on
</Directory>

to my httpd.conf file, but I get the following error:

Cannot load D:/Program Files/Apache Group/Apache2/modules/mod_python.dll
into server: The specified module could not be found. I put the latest
mod_python.dll I could find into my modules folder.

TIA,

Robert

---
Outgoing mail is certified Virus Free.
Checked by AVG anti-virus system (http://www.grisoft.com).
Version: 6.0.381 / Virus Database: 214 - Release Date: 8/2/2002


From grisha at modpython.org  Wed Aug 21 14:24:46 2002
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 22:03:23 2004
Subject: [mod_python] mod_python for Apache 2? (Cross-posted to mod_python
 & Apache users lists)
In-Reply-To: <EGEMLKBGPBCGGGFNPMGNGEOFCDAA.rclilly@lvcm.com>
Message-ID: <Pine.BSF.4.32.0208211420220.9601-100000@eden.ispol.com>

There is no mod_python.dll for Apache 2 as of yet. Mod_python 3.0 is
approaching beta status rapidly, and I expect to put the beta out in a
week or so, and perhaps someone will care to compile a DLL of it, though I
must admit I've done 0 testing on Windows yet.

Grisha

On Wed, 21 Aug 2002, Robert Lilly wrote:

> Is there a mod_python.dll for Apache 2? Is it possible to run mod_python
> with Apache 2 under Windows 2000? If so, how do I do it.


From rclilly at lvcm.com  Wed Aug 21 13:29:42 2002
From: rclilly at lvcm.com (Robert Lilly)
Date: Fri Jan  9 22:03:23 2004
Subject: [mod_python] mod_python for Apache 2? (Cross-posted to mod_python & Apache users lists)
In-Reply-To: <Pine.BSF.4.32.0208211420220.9601-100000@eden.ispol.com>
Message-ID: <EGEMLKBGPBCGGGFNPMGNGEOJCDAA.rclilly@lvcm.com>

Thanks Grisha! Will you be announcing to the list when it's released?

> -----Original Message-----
> From: Gregory (Grisha) Trubetskoy [mailto:grisha@modpython.org]
> Sent: Wednesday, August 21, 2002 11:25 AM
> To: Robert Lilly
> Cc: mod_python@modpython.org
> Subject: Re: [mod_python] mod_python for Apache 2? (Cross-posted to
> mod_python & Apache users lists)
>
>
>
> There is no mod_python.dll for Apache 2 as of yet. Mod_python 3.0 is
> approaching beta status rapidly, and I expect to put the beta out in a
> week or so, and perhaps someone will care to compile a DLL of it, though I
> must admit I've done 0 testing on Windows yet.
>
> Grisha
>
> On Wed, 21 Aug 2002, Robert Lilly wrote:
>
> > Is there a mod_python.dll for Apache 2? Is it possible to run mod_python
> > with Apache 2 under Windows 2000? If so, how do I do it.
>
> ---
> Incoming mail is certified Virus Free.
> Checked by AVG anti-virus system (http://www.grisoft.com).
> Version: 6.0.381 / Virus Database: 214 - Release Date: 8/2/2002
>
---
Outgoing mail is certified Virus Free.
Checked by AVG anti-virus system (http://www.grisoft.com).
Version: 6.0.381 / Virus Database: 214 - Release Date: 8/2/2002


From fabbe at paniq.net  Thu Aug 22 09:25:08 2002
From: fabbe at paniq.net (Fabian Fagerholm)
Date: Fri Jan  9 22:03:23 2004
Subject: [mod_python] mod_python link on Apache web page?
Message-ID: <1029997509.1695.8.camel@kernel>

I was browsing around the Apache web pages when it struck me that
mod_python is definitely not getting the exposure it could on those
pages. There is perl.apache.org, php.apache.org and tcl.apache.org, but
there is no python.apache.org. There isn't even a mod_python link under
the "Sister Projects" section.

I think this is quite sad, because why shouldn't Python be an equally
good choice as web app development language as Perl, PHP or TCL?

What I would like to do is get a link to the mod_python web site under
the "Sister Projects" section of http://www.apache.org/, or (preferably)
find out how a python.apache.org could be created, either as a general
Python-Apache site or as a direct link to the mod_python web site
(perl.apache.org is actually the mod_perl site).

Are there any opinions or further information on this matter that anyone
would like to share? Is anyone interested in this?

Cheers,
Fabian

-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 240 bytes
Desc: This is a digitally signed message part
Url : http://mailman.modpython.org/pipermail/mod_python/attachments/20020822/d1651147/attachment-0003.bin
From vmilitaru at sympatico.ca  Thu Aug 22 04:11:47 2002
From: vmilitaru at sympatico.ca (vio)
Date: Fri Jan  9 22:03:23 2004
Subject: [mod_python] mod_python link on Apache web page?
In-Reply-To: <1029997509.1695.8.camel@kernel>; from fabbe@paniq.net on Thu, Aug 22, 2002 at 09:25:08AM +0300
References: <1029997509.1695.8.camel@kernel>
Message-ID: <20020822041146.A281@eye.neb>

Since mod_python is so totally dependent on apache, warming up this 
symbiotic relationship to similar levels as mod_perl and such would make a lot
of sense. Though from my selfish user's point of view, as long as I can make 
apache sing python songs, and doing it faster than in Zope, I don't much care 
more than that. Languages is kind of a religious experience, with hugely 
various followings. As in real religions, it's seldom the best religion who is 
the most popular (no offense, but unfortunately it's always the better 
marketing who wins crowds, rarely the technically better product 
... howdy Bill !).

Apologies to the list for my misplaced religious bull. But I am quite surprized
to hear that mod_python is not referenced by apache web site. I believe that's
the place to be if mod_python wants to recruit a bigger audience/following.
Cause if you only meter in the programming experience, Python is way better
than Perl or PHP or Java or C/Cpp or what have you (I don't know TCL, so can't
compare it). I mean, Python's competition. 
Why am I so damn sure? Cause else, I'd be 
out of here in a hurry, as well as each and every one of you reading this.
We're here because we've seen what else is there, and for the time being,
mod_python + apache is pretty much the best there is.

python.apache.org sounds great. Provided the owners of the apache.org domain 
agree. Though as much as I'm concerned, I wouldn't waste much sleep if it 
doesn't happen.
My opinion.

Vio

PS. What would be quite intriguing would be to meter the mod_python's installed
base. I mean, apache now runs over 60% of all web servers worldwide. I'd be 
curious to know what segment of this market also runs mod_python ? Not that
it matters a great deal (the fact that mod_perl's stats would probably beat
the pants out of mod_python's won't make me run back to the former anythime
soon).

PS2. Sorry about my huge crap. I's definitely been too long a day.


* Fabian Fagerholm <fabbe@paniq.net> [020822 03:02]:
> I was browsing around the Apache web pages when it struck me that
> mod_python is definitely not getting the exposure it could on those
> pages. There is perl.apache.org, php.apache.org and tcl.apache.org, but
> there is no python.apache.org. There isn't even a mod_python link under
> the "Sister Projects" section.
> 
> I think this is quite sad, because why shouldn't Python be an equally
> good choice as web app development language as Perl, PHP or TCL?
> 
> What I would like to do is get a link to the mod_python web site under
> the "Sister Projects" section of http://www.apache.org/, or (preferably)
> find out how a python.apache.org could be created, either as a general
> Python-Apache site or as a direct link to the mod_python web site
> (perl.apache.org is actually the mod_perl site).
> 
> Are there any opinions or further information on this matter that anyone
> would like to share? Is anyone interested in this?
> 
> Cheers,
> Fabian
> 



From fabbe at paniq.net  Thu Aug 22 12:56:46 2002
From: fabbe at paniq.net (Fabian Fagerholm)
Date: Fri Jan  9 22:03:23 2004
Subject: [mod_python] mod_python link on Apache web page?
In-Reply-To: <20020822041146.A281@eye.neb>
References: <1029997509.1695.8.camel@kernel>  <20020822041146.A281@eye.neb>
Message-ID: <1030010207.1694.127.camel@kernel>

On Thu, 2002-08-22 at 12:11, vio wrote:
> Since mod_python is so totally dependent on apache, warming up this 
> symbiotic relationship to similar levels as mod_perl and such would
> make a lot of sense.

Well put.

> Apologies to the list for my misplaced religious bull.

:)
If so, my apologies for bringing up the subject in the first place. But
I do not think there is any reasons for apologies - if there are
objections against this type of discussions on this list, there should
be a separate list for purely technical discussions and a separate list
for "mod_python politics". ;)

> python.apache.org sounds great. Provided the owners of the apache.org
> domain agree. Though as much as I'm concerned, I wouldn't waste much
> sleep if it doesn't happen.
> My opinion.

Ok. Are there other opinions? I would especially like to hear if there
are any objections.

What I think needs to be done is something this:
The issue needs blessing from Grisha. Without him being in on this, I
see no point in trying to achieve a tighter connection to the Apache
project.
        * The Python web development community outside mod_python should
          be heard. There are probably lots of people using Zope, not to
          mention those using Python as a language for cgi-bin scripts.
          Their opinion needs to be asked for. There is nothing to say
          that python.apache.org should equal mod_python, like
          perl.apache.org equals mod_perl. Perhaps python.apache.org
          should be a trimmed site with Apache-Python-related links.
          mod_python could be prominent there. The Web-Python community
          at large needs to discuss this.
        * The Apache people need to be contacted. Before this, however,
          there needs to be consensus among the people willing to
          contribute.

I'm willing to contribute some time to contacting all these different
groups of people. But I would like some more feedback from the readers
of this mailing list first.

> PS. What would be quite intriguing would be to meter the mod_python's 
> installed base.

I'll look into this as well as a separate matter.

Cheers,
Fabian

-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 240 bytes
Desc: This is a digitally signed message part
Url : http://mailman.modpython.org/pipermail/mod_python/attachments/20020822/159300e8/attachment-0003.bin
From kevin at vap.org  Thu Aug 22 10:45:07 2002
From: kevin at vap.org (kevin@vap.org)
Date: Fri Jan  9 22:03:23 2004
Subject: [mod_python] Re: IOError: [Errno 2] No such file or directory...(etc)
Message-ID: <6610-22002842214457888@vap.org>

I finally got it to work.  It was definitely just an Apache on
Windows problem.

For those interested:  It was a combination of using a User ID with
enough local rights/privileges for the services logon, combined with
using UNC pathnames instead of drive letters ("//remotesvr/files" vs
"z:/files").

Apparently the drive letter mappings (beyond any physical devices)
are only available during an interactive login, not an NT service
login (even though it was the same User ID login).

-Kevin


From grisha at modpython.org  Thu Aug 22 11:26:41 2002
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 22:03:23 2004
Subject: [mod_python] mod_python link on Apache web page?
In-Reply-To: <1030010207.1694.127.camel@kernel>
Message-ID: <Pine.BSF.4.32.0208221118260.22715-100000@eden.ispol.com>

As far as I understand, the *.apache.org domains are for projects
sponsored by Apache Software Foundation, and mod_perl happens to be one of
them. Since mod_python isn't sponsored by the Apache Software Foundation,
I don't really see it a problem that there isn't an *.apache.org site.

As far as the general exposure - we could use a little more of it, but so
could Python in genral I think.

Grisha

On 22 Aug 2002, Fabian Fagerholm wrote:

> On Thu, 2002-08-22 at 12:11, vio wrote:
> > Since mod_python is so totally dependent on apache, warming up this
> > symbiotic relationship to similar levels as mod_perl and such would
> > make a lot of sense.


From grisha at modpython.org  Thu Aug 22 17:35:07 2002
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 22:03:23 2004
Subject: [mod_python] mod_python 3 beta
In-Reply-To: <6610-22002842214457888@vap.org>
Message-ID: <Pine.BSF.4.32.0208221722190.27115-100000@eden.ispol.com>

You can grab the latest CVS snapshot at
http://www.modpython.org/dist/dev/mod_python-3.0.0-BETA.tgz

First off a warning: this is NOT production quality software, use at your
own risk!

A few notes:

1. It requires Python 2.2.1. Earlier versions of Python will not work
(though 2.2 might). The reason is that some of the objects (table and
request) are now the new Python classes as described here:
http://www.python.org/2.2.1/descrintro.html

2. It requires Apache 2.0.40, earlier versions won't compile.

3. There is no static compilation support, only DSO.

4. I've only tested it on RedHat Linux 7.3. I don't even know if it will
compile on other platforms.

5. Python*Handler directives can now take an additional argument - "|"
followed by a list of extensions. This will limit execution of the handler
to those extensions, e.g.:

PythonHandler myhandler | .pyhtml

6. There is now support for filters via PythonInputFilter and
PythonOutputFilter directives. This is kind of new and raw, so YMMV.

7. The documentation has been updated to reflect new features and changes,
though filter docs are still kind of skimpy.

There is more changes, but I can't remember them now....

Please give it a spin and send feedback to me or to the list.

Grisha


From fabbe at paniq.net  Fri Aug 23 10:10:32 2002
From: fabbe at paniq.net (Fabian Fagerholm)
Date: Fri Jan  9 22:03:23 2004
Subject: [mod_python] mod_python link on Apache web page?
In-Reply-To: <Pine.BSF.4.32.0208221118260.22715-100000@eden.ispol.com>
References: <Pine.BSF.4.32.0208221118260.22715-100000@eden.ispol.com>
Message-ID: <1030086632.969.28.camel@kernel>

On Thu, 2002-08-22 at 18:26, Gregory (Grisha) Trubetskoy wrote:
> 
> As far as I understand, the *.apache.org domains are for projects
> sponsored by Apache Software Foundation, and mod_perl happens to be one of
> them. Since mod_python isn't sponsored by the Apache Software Foundation,
> I don't really see it a problem that there isn't an *.apache.org site.

I'm not entirely sure but I don't think PHP is "sponsored" by the ASF. I
think the "projects" listed on www.apache.org are highly different in
their level of integration with the ASF. For example, PHP is largely a
separate project while mod_perl seems to be more integrated.

On the Apache Projects page
(http://www.apache.org/foundation/projects.html), I found the following:

    "The Apache Software Foundation is always looking for new or
    existing collaborative software development projects that are in
    need of a home. This includes both projects related and unrelated to
    the existing ASF projects."

mod_python does have the infrastructure in place - there's a web page
and a mailing list - so there is no need for that kind of collaboration.
But I do think the project could benefit from more exposure, and that
Apache could benefit from having closer ties with Python. You say:

> As far as the general exposure - we could use a little more of it, but so
> could Python in genral I think.

Could this be an opportunity to adress the issue?

Or to put it another way: Why should there *not* be a python.apache.org?

Cheers,
Fabian

-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 240 bytes
Desc: This is a digitally signed message part
Url : http://mailman.modpython.org/pipermail/mod_python/attachments/20020823/8117e663/attachment-0003.bin
From vmilitaru at sympatico.ca  Fri Aug 23 03:41:41 2002
From: vmilitaru at sympatico.ca (vio)
Date: Fri Jan  9 22:03:23 2004
Subject: [mod_python] mod_python link on Apache web page?
In-Reply-To: <3D65DE58.EEC33098@sympatico.ca>; from vmilitaru@sympatico.ca on Fri, Aug 23, 2002 at 03:03:53AM -0400
References: <3D65DE58.EEC33098@sympatico.ca>
Message-ID: <20020823034140.A672@eye.neb>

Fabian, I think you should just shoot the 'python.apache.org' question on the
appropriate apache mailing lists and see what happens. If something interesting
comes your way, maybe forward it to the mod_python list. But if too much shit
comes your way, maybe have a pair of scissors close by (to cut your modem line,
of course). Anyway, it's the only way to really answer your query, and seems 
to me the key resides much more on the apache side than on the mod_python side (I mean Grisha). 

Don't have to ask so many permissions. Just do it. See what happens.
Vio

> Fabian Fagerholm wrote:
> 
> > On Thu, 2002-08-22 at 18:26, Gregory (Grisha) Trubetskoy wrote:
> > >
> > > As far as I understand, the *.apache.org domains are for projects
> > > sponsored by Apache Software Foundation, and mod_perl happens to be one of
> > > them. Since mod_python isn't sponsored by the Apache Software Foundation,
> > > I don't really see it a problem that there isn't an *.apache.org site.
> >
> > I'm not entirely sure but I don't think PHP is "sponsored" by the ASF. I
> > think the "projects" listed on www.apache.org are highly different in
> > their level of integration with the ASF. For example, PHP is largely a
> > separate project while mod_perl seems to be more integrated.
> >
> > On the Apache Projects page
> > (http://www.apache.org/foundation/projects.html), I found the following:
> >
> >     "The Apache Software Foundation is always looking for new or
> >     existing collaborative software development projects that are in
> >     need of a home. This includes both projects related and unrelated to
> >     the existing ASF projects."
> >
> > mod_python does have the infrastructure in place - there's a web page
> > and a mailing list - so there is no need for that kind of collaboration.
> > But I do think the project could benefit from more exposure, and that
> > Apache could benefit from having closer ties with Python. You say:
> >
> > > As far as the general exposure - we could use a little more of it, but so
> > > could Python in genral I think.
> >
> > Could this be an opportunity to adress the issue?
> >
> > Or to put it another way: Why should there *not* be a python.apache.org?
> >
> > Cheers,
> > Fabian
> >
> >   ------------------------------------------------------------------------
> >                        Name: signature.asc
> >    signature.asc       Type: application/pgp-signature
> >                 Description: This is a digitally signed message part

From fabbe at paniq.net  Fri Aug 23 12:05:21 2002
From: fabbe at paniq.net (Fabian Fagerholm)
Date: Fri Jan  9 22:03:23 2004
Subject: [mod_python] mod_python link on Apache web page?
In-Reply-To: <20020823034140.A672@eye.neb>
References: <3D65DE58.EEC33098@sympatico.ca>  <20020823034140.A672@eye.neb>
Message-ID: <1030093521.969.47.camel@kernel>

On Fri, 2002-08-23 at 11:41, vio wrote:
> Fabian, I think you should just shoot the 'python.apache.org' question on the
> appropriate apache mailing lists and see what happens. If something interesting
> comes your way, maybe forward it to the mod_python list. But if too much shit
> comes your way, maybe have a pair of scissors close by (to cut your modem line,
> of course). Anyway, it's the only way to really answer your query, and seems 
> to me the key resides much more on the apache side than on the mod_python side
> (I mean Grisha).
>
> Don't have to ask so many permissions. Just do it. See what happens.

I agree that doing something is the only way of doing it :)

I do think there are different ways of doing things, though. Some of the
ways will inevitably lead to failure - and I'd like to avoid those.

Specifically, I want to approach the Apache Software Foundation in the
correct manner. Bargning in, yelling the name of an arbitrary reptile,
is hardly the way to go. I also want the opinion of the people currently
using the Python-Apache combination. If nobody is interested in this,
then what is the use of it?

In addition, I want to avoid making things worse for people in the
future. It might be that the issue cannot be adressed right now, but
could be adressed in the future. In that case, a previous negative
experience will not be beneficial.

But rest assured that something will be done. I have already aquired
information on the correct procedures to contact the ASF. Before I do
that, however, I will try to reach a larger part of the Python Web
community and listen to some opinions there. For all I know, someone
else might be doing this as we speak - in which case we should join
forces.

I'd welcome further discussion on this topic, and I'll post more
information when I have it.

Cheers,
Fabian

-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 240 bytes
Desc: This is a digitally signed message part
Url : http://mailman.modpython.org/pipermail/mod_python/attachments/20020823/99f0dfbc/attachment-0003.bin
From fabbe at paniq.net  Fri Aug 23 12:51:32 2002
From: fabbe at paniq.net (Fabian Fagerholm)
Date: Fri Jan  9 22:03:23 2004
Subject: [mod_python] Promoting Python as web application development language
Message-ID: <1030096292.969.85.camel@kernel>

Hello, World!

In a recent thread [0] on the mod_python [1] mailing list, I'm wondering
why there isn't a Python link on the main Apache web site. There are
PHP, Perl and Tcl links but Python is nowhere present.

It is of course evident that the lack of a link is due to the lack of
perceived usage of Python as a web application development language.
That, in turn, is due to the lack of exposure on sites like the Apache
one.

I would like to see this change. Specifically, as I write in my post on
the mod_python mailing list,

    "What I would like to do is get a link to the mod_python web site
    under the "Sister Projects" section of http://www.apache.org/, or
    (preferably) find out how a python.apache.org could be created,
    either as a general Python-Apache site or as a direct link to the
    mod_python web site (perl.apache.org is actually the mod_perl
    site)."
    
I have concluded that before any such thing can be done, the opinions of
the people currently using the Python-Apache combination (which I
suspect is no small number) need to be solicited to some degree.

I would like to hear what you think about the creation of a
"python.apache.org" (or equivalent) that would focus on the topic of web
app development with Python and Apache. I imagine the site itself being
quite slim with some essential information and links to other projects,
particularly to the mod_python site.

Also, I would like to hear about any related projects or any previous
contact to the Apache Software Foundation.


I apologise for the cross-post but I feel it is warranted in this case.
I'm only subscribed to the mod_python mailing list so please keep me or
that list Cc'ed if you reply.

Cheers,
Fabian Fagerholm

[0] http://www.modpython.org/pipermail/mod_python/2002-August/002360.html

[1] http://www.modpython.org/

-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 240 bytes
Desc: This is a digitally signed message part
Url : http://mailman.modpython.org/pipermail/mod_python/attachments/20020823/a9e059e7/attachment-0003.bin
From vmilitaru at sympatico.ca  Fri Aug 23 06:08:09 2002
From: vmilitaru at sympatico.ca (vmilitaru@sympatico.ca)
Date: Fri Jan  9 22:03:23 2004
Subject: [mod_python] mod_python link on Apache web page?
In-Reply-To: <1030093521.969.47.camel@kernel>; from fabbe@paniq.net on Fri, Aug 23, 2002 at 12:05:21PM +0300
References: <3D65DE58.EEC33098@sympatico.ca> <20020823034140.A672@eye.neb> <1030093521.969.47.camel@kernel>
Message-ID: <20020823060809.A744@eye.neb>

My reaction: all mod_python actually needs from the apache bunch is more 
'exposure', and somehow their official blessing and recognition, which is
what 'python.apache.org' or some other pointer from the 'official'
apache site gives you. 
I'm not saying you should not ask them politely for their reaction to this
request, rather something like:

"Greetings,
I'm from mod_python. We have this great apache module, but sadly we don't see
a pointer on the apache site towards our module. Since it is so similar to 
other great apache modules like mod_perl and mod_php, what would it take to
have a pointer to the mod_python site on the official apache site, alongsite
mod_perl and such ? Something like 'python.apache.org' redirecting to
'www.modpython.org' sounds quite appealing to us. Any feedback on this topic
would be appreciated.
Regards,
xxx"

Simple, direct, cutting the bull to a minimum. If that's feasible, or not,
you'll know, and why, and won't waste your time further if it's a no no. 
You don't need all this consulting the greater Python community for some link
on a web page. 
Too much politics. My little experience in 'managing an
open source project through consensus' has not been that great so far (too much
talk, too few results: each has a different opinion, so everybody
discusses ad noseam on the best way to cut the cheese). Grisha developped
mod_python on his own, and though I may be mistaken, I don't recall him 
talking about doing much consulting previous to starting that project.

Furthermore, I'm pretty sure the 'Apache Software Foundation' people is aware
of mod_python's existence, and won't confuse python to its reptilian cousin
(nor the famous british comedy group). These are pretty bright people.

My opinion (again). In case nobody else has one on this specific political 
topic, or don't agree with you, just do it anyway, and share your results 
with the list. What's the worst that can happen? Yo'll get flamed ? 

You only live once :-)
Vio


* Fabian Fagerholm <fabbe@paniq.net> [020823 05:10]:
> On Fri, 2002-08-23 at 11:41, vio wrote:
> > Fabian, I think you should just shoot the 'python.apache.org' question on the
> > appropriate apache mailing lists and see what happens. If something interesting
> > comes your way, maybe forward it to the mod_python list. But if too much shit
> > comes your way, maybe have a pair of scissors close by (to cut your modem line,
> > of course). Anyway, it's the only way to really answer your query, and seems 
> > to me the key resides much more on the apache side than on the mod_python side
> > (I mean Grisha).
> >
> > Don't have to ask so many permissions. Just do it. See what happens.
> 
> I agree that doing something is the only way of doing it :)
> 
> I do think there are different ways of doing things, though. Some of the
> ways will inevitably lead to failure - and I'd like to avoid those.
> 
> Specifically, I want to approach the Apache Software Foundation in the
> correct manner. Bargning in, yelling the name of an arbitrary reptile,
> is hardly the way to go. I also want the opinion of the people currently
> using the Python-Apache combination. If nobody is interested in this,
> then what is the use of it?
> 
> In addition, I want to avoid making things worse for people in the
> future. It might be that the issue cannot be adressed right now, but
> could be adressed in the future. In that case, a previous negative
> experience will not be beneficial.
> 
> But rest assured that something will be done. I have already aquired
> information on the correct procedures to contact the ASF. Before I do
> that, however, I will try to reach a larger part of the Python Web
> community and listen to some opinions there. For all I know, someone
> else might be doing this as we speak - in which case we should join
> forces.
> 
> I'd welcome further discussion on this topic, and I'll post more
> information when I have it.
> 
> Cheers,
> Fabian
> 



From fabbe at paniq.net  Fri Aug 23 14:01:55 2002
From: fabbe at paniq.net (Fabian Fagerholm)
Date: Fri Jan  9 22:03:23 2004
Subject: [mod_python] mod_python link on Apache web page?
In-Reply-To: <20020823060809.A744@eye.neb>
References: <3D65DE58.EEC33098@sympatico.ca> <20020823034140.A672@eye.neb>
	<1030093521.969.47.camel@kernel>  <20020823060809.A744@eye.neb>
Message-ID: <1030100515.969.106.camel@kernel>

On Fri, 2002-08-23 at 14:08, vmilitaru@sympatico.ca wrote:
[on approaching the ASF]
> Simple, direct, cutting the bull to a minimum. If that's feasible, or not,
> you'll know, and why, and won't waste your time further if it's a no no. 
> You don't need all this consulting the greater Python community for some link
> on a web page. 

I disagree. Cutting the bull to a minimum is of course desirable, but I
think you're underestimating the impact of a "python.apache.org". It's
not just "some link on a web page". It's an endorsement by an
organisation that has become quite influential over the years.

This is not to say that one should come crawling on one's knees, begging
for a "link on your web page". Instead, one should show some sign of
being a good partner with some organisational skills.

> Grisha developped
> mod_python on his own, and though I may be mistaken, I don't recall him 
> talking about doing much consulting previous to starting that project.

Grisha's contribution should definately be valued very highly. This is
the exact reason that I choose to discuss things first instead of
heading off in some unannounced direction. Since Grisha is the author of
mod_python, he should have a say in this. For instance, he might've said
that he wants to continue development in peace and quiet for a while,
and I would've backed off on this. I think asking was the least I could
do to show some respect.

> My opinion (again). In case nobody else has one on this specific political 
> topic, or don't agree with you, just do it anyway, and share your results 
> with the list. What's the worst that can happen? Yo'll get flamed ? 

Flame away :)

As you'll notice, I posted a message to python-list and the
marketing-python list, with Cc to this list. We'll see what happens and
if I feel it is the right thing to do, I'll continue with this project.

Basically, I think there's no reason to rush. If something can be done
today, it can probably be done tomorrow as well - and you'll get a
chance to think it over one more time. If tomorrow it turns out it can't
be done after all, then you'll be lucky you didn't waste time on it
today.

Cheers,
Fabian

-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 240 bytes
Desc: This is a digitally signed message part
Url : http://mailman.modpython.org/pipermail/mod_python/attachments/20020823/80c2ccad/attachment-0003.bin
From grisha at modpython.org  Fri Aug 23 08:39:33 2002
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 22:03:23 2004
Subject: [mod_python] mod_python link on Apache web page?
In-Reply-To: <1030100515.969.106.camel@kernel>
Message-ID: <Pine.BSF.4.32.0208230834550.35718-100000@eden.ispol.com>

My "official" position on this is that I don't have strong feelings one
way or the other. Being concerned with these matters is something that I
at the moment do not have a lot of time for. If someone wants to take up
the task of promoting mp, God bless'em.

Grisha

On 23 Aug 2002, Fabian Fagerholm wrote:

> On Fri, 2002-08-23 at 14:08, vmilitaru@sympatico.ca wrote:
>
> Basically, I think there's no reason to rush. If something can be done
> today, it can probably be done tomorrow as well - and you'll get a
> chance to think it over one more time. If tomorrow it turns out it can't
> be done after all, then you'll be lucky you didn't waste time on it
> today.


From neel at mediapulse.com  Fri Aug 23 11:29:53 2002
From: neel at mediapulse.com (Michael C. Neel)
Date: Fri Jan  9 22:03:23 2004
Subject: [mod_python] Promoting Python as web application development language
Message-ID: <C0FC22C08B82074A88B50061764157775B94@johnson.mediapulse.net>

Well, what a day to join the mod_python list!

I believe that mod_python needs to be more featured on the apache
website, just as mod_perl and PHP.  As a developer who has worked with
perl for quite sometime, I have run into perl's limitations in a large
scale applications.  I began to seek out other choices that offered both
performance and a strong OO base from which management of large scale
applications.  I had looked at python before, but didn't know of
mod_python - and running something in the CGI space is sooo 1996 =D

Though another project I came to find mailman, and though the mailman
docs I came to find out about mod_python.  Mailman IMHO is a strong
reason why python can compete as a "web language", offering the OO of
Java without the performance hit or running a separate server just for
Java (ala Tomcat).

I also think mod_python will begin to gain a larger following as Apache
2.0 is deployed.  Python just strikes me as a much better language to
fit in with the new format and concepts of the Apache 2.0 modules.

Perl, Python, and PHP each have their own strengths and faults when used
under Apache.  Not one of them will ever replace the need for the other,
and I hope they never try to.  Different application have different
goals and require different approaches.  I feel all warm and fuzzy
inside thinking about how the open source community has provided me with
a solution for every need.  Python is one of those solutions, and every
bit as worthy of python.apache.org as the rest.

Mike
--
Michael C. Neel
There are only 10 types of people in the world;
those who understand binary and those who don't.


-----Original Message-----
From: Fabian Fagerholm [mailto:fabbe@paniq.net] 
Sent: Friday, August 23, 2002 5:52 AM
To: marketing-python@wingide.com; python-list@python.org
Cc: mod_python@modpython.org
Subject: [mod_python] Promoting Python as web application development
language


Hello, World!

In a recent thread [0] on the mod_python [1] mailing list, I'm wondering
why there isn't a Python link on the main Apache web site. There are
PHP, Perl and Tcl links but Python is nowhere present.

It is of course evident that the lack of a link is due to the lack of
perceived usage of Python as a web application development language.
That, in turn, is due to the lack of exposure on sites like the Apache
one.

I would like to see this change. Specifically, as I write in my post on
the mod_python mailing list,

    "What I would like to do is get a link to the mod_python web site
    under the "Sister Projects" section of http://www.apache.org/, or
    (preferably) find out how a python.apache.org could be created,
    either as a general Python-Apache site or as a direct link to the
    mod_python web site (perl.apache.org is actually the mod_perl
    site)."
    
I have concluded that before any such thing can be done, the opinions of
the people currently using the Python-Apache combination (which I
suspect is no small number) need to be solicited to some degree.

I would like to hear what you think about the creation of a
"python.apache.org" (or equivalent) that would focus on the topic of web
app development with Python and Apache. I imagine the site itself being
quite slim with some essential information and links to other projects,
particularly to the mod_python site.

Also, I would like to hear about any related projects or any previous
contact to the Apache Software Foundation.


I apologise for the cross-post but I feel it is warranted in this case.
I'm only subscribed to the mod_python mailing list so please keep me or
that list Cc'ed if you reply.

Cheers,
Fabian Fagerholm

[0]
http://www.modpython.org/pipermail/mod_python/2002-August/002360.html

[1] http://www.modpython.org/



From grisha at modpython.org  Fri Aug 23 11:32:13 2002
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 22:03:23 2004
Subject: [mod_python] 3.0 beta dll now available
In-Reply-To: <1030100515.969.106.camel@kernel>
Message-ID: <Pine.BSF.4.32.0208231129430.37364-100000@eden.ispol.com>

For Windows users, I managed to compile a DLL, and the "hello world" test
passed OK on Win2K.

You can get it at

http://www.modpython.org/dist/dev/3.0.0-BETA-python2.2.1-apache2.0.40.zip

Grisha


From rien at yeepa.org  Fri Aug 23 18:43:12 2002
From: rien at yeepa.org (Adrien Plisson)
Date: Fri Jan  9 22:03:23 2004
Subject: [mod_python] 3.0 beta dll now available
References: <Pine.BSF.4.32.0208231129430.37364-100000@eden.ispol.com>
Message-ID: <002e01c24ac4$2e6a7790$0a020101@skynet.be>

From: "Gregory (Grisha) Trubetskoy" <grisha@modpython.org>
> For Windows users, I managed to compile a DLL, and the "hello world" test
> passed OK on Win2K.

cooooool ! I won't have to do it on my own, though it could be of great
experience...

that's too bad i don't have time to look further at it, but the new apache
2.0 features looks great and will surely enable me to meet my goals sooner
than expected. it's great that mod_python is getting this way.

btw, i would like to thank you, grisha, for all the work you're doing, and
all the time you spend on mod_python. it ruuuules !

--
rien


From vmilitaru at sympatico.ca  Fri Aug 23 18:22:19 2002
From: vmilitaru at sympatico.ca (vio)
Date: Fri Jan  9 22:03:23 2004
Subject: [mod_python] Promoting Python as web application development language
Message-ID: <20020823182218.A304@eye.neb>

Greetings to Apache Board Members,

Apoligies to Fabian Fagerholm for short-cutting his efforts with this message.
But I just wanted to cut the bull and go straight to the point: we have this
great apache module called mod_python, thanks to Gregory (Grisha) Trubetskoy, 
suffering from a big lack of exposure. We strongly believe this great piece 
of technology (which is the marriage of apache + python) deserves a place 
alongside mod_perl and mod_ssl 'on the main apache site'. Understanbably,
mod_python is not an Apache Foundation project (rather it's Grisha's project).
Yet, there is such a symbiotic relationship between apache and mod_python,
what would it take to have a link on the main apache side to the 'python'
web-app alternative, in the Apache Projects section of the 
LEFT SIDE NAVIGATION ?

   Apache Projects
     HTTP Server
     APR
     Jakarta
     Perl
     Python    <-- something like this, linking to www.mod_python.org,
     PHP           or to 'python.apache.org' which would redirect to
     TCL           www.mod_python.org (or something along those lines)
     XML
     Conferences
     Foundation

In conclusion, I believe this is a great opportunity for greater integration
between the main apache movement, and the independent mod_python effort.
In my view, Apache needs a strong python alternative alongside Perl and such, 
while mod_python gains greater exposure and 'official blessing' from the Apache
Software Foundation.

Please send your reactions, comments, suggestions on this topic directly to the
mod_python mailing list at 'mod_python@modpython.org'.
If this is not the appropriate forum to discuss this topic, please redirect
my message as appropriate.

Thank You kindly for your time,
Vio


PS. Included 2 recent messages from the mod_python list outlining the need for
a direct link between apache main site and mod_python:

* Michael C. Neel <neel@mediapulse.com> wrote:
> Well, what a day to join the mod_python list!
> 
> I believe that mod_python needs to be more featured on the apache
> website, just as mod_perl and PHP.  As a developer who has worked with
> perl for quite sometime, I have run into perl's limitations in a large
> scale applications.  I began to seek out other choices that offered both
> performance and a strong OO base from which management of large scale
> applications.  I had looked at python before, but didn't know of
> mod_python - and running something in the CGI space is sooo 1996 =D
> 
> Though another project I came to find mailman, and though the mailman
> docs I came to find out about mod_python.  Mailman IMHO is a strong
> reason why python can compete as a "web language", offering the OO of
> Java without the performance hit or running a separate server just for
> Java (ala Tomcat).
> 
> I also think mod_python will begin to gain a larger following as Apache
> 2.0 is deployed.  Python just strikes me as a much better language to
> fit in with the new format and concepts of the Apache 2.0 modules.
> 
> Perl, Python, and PHP each have their own strengths and faults when used
> under Apache.  Not one of them will ever replace the need for the other,
> and I hope they never try to.  Different application have different
> goals and require different approaches.  I feel all warm and fuzzy
> inside thinking about how the open source community has provided me with
> a solution for every need.  Python is one of those solutions, and every
> bit as worthy of python.apache.org as the rest.
> 
> Mike
> --
> Michael C. Neel
> There are only 10 types of people in the world;
> those who understand binary and those who don't.
> 
> 
> -----Original Message-----
> From: Fabian Fagerholm [mailto:fabbe@paniq.net] 
> Sent: Friday, August 23, 2002 5:52 AM
> To: marketing-python@wingide.com; python-list@python.org
> Cc: mod_python@modpython.org
> Subject: [mod_python] Promoting Python as web application development
> language
> 
> 
> Hello, World!
> 
> In a recent thread [0] on the mod_python [1] mailing list, I'm wondering
> why there isn't a Python link on the main Apache web site. There are
> PHP, Perl and Tcl links but Python is nowhere present.
> 
> It is of course evident that the lack of a link is due to the lack of
> perceived usage of Python as a web application development language.
> That, in turn, is due to the lack of exposure on sites like the Apache
> one.
> 
> I would like to see this change. Specifically, as I write in my post on
> the mod_python mailing list,
> 
>     "What I would like to do is get a link to the mod_python web site
>     under the "Sister Projects" section of http://www.apache.org/, or
>     (preferably) find out how a python.apache.org could be created,
>     either as a general Python-Apache site or as a direct link to the
>     mod_python web site (perl.apache.org is actually the mod_perl
>     site)."
>     
> I have concluded that before any such thing can be done, the opinions of
> the people currently using the Python-Apache combination (which I
> suspect is no small number) need to be solicited to some degree.
> 
> I would like to hear what you think about the creation of a
> "python.apache.org" (or equivalent) that would focus on the topic of web
> app development with Python and Apache. I imagine the site itself being
> quite slim with some essential information and links to other projects,
> particularly to the mod_python site.
> 
> Also, I would like to hear about any related projects or any previous
> contact to the Apache Software Foundation.
> 
> 
> I apologise for the cross-post but I feel it is warranted in this case.
> I'm only subscribed to the mod_python mailing list so please keep me or
> that list Cc'ed if you reply.
> 
> Cheers,
> Fabian Fagerholm
> 
> [0]
> http://www.modpython.org/pipermail/mod_python/2002-August/002360.html
> 
> [1] http://www.modpython.org/
> 
> 
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://www.modpython.org/mailman/listinfo/mod_python



From jfk at metation.com  Sat Aug 24 10:16:42 2002
From: jfk at metation.com (=?iso-8859-1?q?J=F8rgen=20Fr=F8jk=20Kj=E6rsgaard=20{Metation}?=)
Date: Fri Jan  9 22:03:23 2004
Subject: [mod_python] Promoting Python as web application development language
In-Reply-To: <20020823182218.A304@eye.neb>
References: <20020823182218.A304@eye.neb>
Message-ID: <02082410164204.00306@grace.metation.com>

L?rdag 24. August 2002 01:22 skrev du:
> Yet, there is such a symbiotic relationship between
> apache and mod_python, what would it take to have a link on the main apache
> side to the 'python' web-app alternative, in the Apache Projects section of
> the
> LEFT SIDE NAVIGATION ?
>
>    Apache Projects
>      HTTP Server
>      APR
>      Jakarta
>      Perl
>      Python    <-- something like this, linking to www.mod_python.org,
>      PHP           or to 'python.apache.org' which would redirect to
>      TCL           www.mod_python.org (or something along those lines)
>      XML
>      Conferences
>      Foundation

As Fabian Fagerholm wrote aug 22nd, I believe python.apache.org shouldn't 
equal mod_python. Although mod_python is a great product, it isn't the only 
way to use Python with Apache.

The community around mod_dtcl took the initial initiative to move to 
tcl.apache.org and invited the other Tcl alternatives to join in. This has 
now resulted in a new module, Apache Rivet, which combines the efforts of 
mod_dtcl and neowebscript.

If a similar symbiosis can be archived in the Python web community, I believe 
it we benefit all of us. On the other hand, if python.apache.org == 
mod_python, it may split the Python web community.

/jfk

-- 
J?rgen Fr?jk Kj?rsgaard, direkt?r og systemkonsulent
Metation aps - Kystvejen 29, DK-8000 ?rhus C
Web: www.metation.com  - Tlf: +45 8625 0038 - Mobil: +45 2925 6693

From vmilitaru at sympatico.ca  Sat Aug 24 05:36:26 2002
From: vmilitaru at sympatico.ca (vio)
Date: Fri Jan  9 22:03:23 2004
Subject: [mod_python] Promoting Python as web application development language
In-Reply-To: <02082410164204.00306@grace.metation.com>; from jfk@metation.com on Sat, Aug 24, 2002 at 10:16:42AM +0200
References: <20020823182218.A304@eye.neb> <02082410164204.00306@grace.metation.com>
Message-ID: <20020824053625.A685@eye.neb>

Hi Jorgen,
Thanks for your feedback and info on the interesting Rivet history.

Please note that I am speaking entirely from a user's perspective, and my 
little initiative was entirely triggered by Fabian's on the mod_python list, 
which has such a great and obvious point: one way or the other, 
apache misses a 'python play', alongside perl and tcl and such. 
I don't want to offend any egoes, but as a user, I don't really care whether 
apache's python play embraces mod_python or zope, or some other I don't know
about. I'm just a web app coder.

I do disagree with your point that if python.apache.org == mod_python, 
it may split the Python web community. For a simple but obvious reason:
the community is already split as it stands right now. For example, I don't 
see any cooperation whatsoever between the mod_python users and the zope people
(being an old zope user myself who switched to mod_python). From my perspective
python.apache.org == mod_python looks like a ralying point (an analogy which 
comes to mind as I write this being Bill Gate's Pearl Harbor Day speech, which
managed to totally shifted MS on its head, towards the Internet). A ralying
point is hugely powerful.

If I read your Rivet analogy correctly, apache might be interested in giving 
its 'official' blessing (i.e. the powerful 'python.apache.org') to the python 
project who will manage to rally support from the web-python community at 
large. In this regard, Fabian's latest PR makes a lot of sense. 

But again speaking from a user's perspective, if I consider the 2 web-python
packages I know a little about - zope and mod_python - I don't see those code 
bases integrating anytime soon (simply because they serve 2 quite different 
audiences, and I would think they are rather entrenched). Because of this, 
should there be no 'python.apache.org' ?

I disagree. As long as there will be no official ralying point to attract
python+apache afficionados on a 'single point of effort', parallel efforts 
will continue to florish, each more or less re-inventing the proverbial 
wheel. And not cooperating very much, I would think.

In conclusion, whatever the politics behind this topic, apache needs a python
play. I believe this is Fabian's main point, and I am totally sold on it.
But from a web app coder's perspective, give me a great tool to program 
apache in python, and I'll embrace it, whatever it's called. 
It just happened that, though I may be wrong, for the time being the best tool 
available is mod_python.

Regards,
Vio

* J?rgen Fr?jk Kj?rsgaard {Metation} <jfk@metation.com> [020824 04:29]:
> L?rdag 24. August 2002 01:22 skrev du:
> > Yet, there is such a symbiotic relationship between
> > apache and mod_python, what would it take to have a link on the main apache
> > side to the 'python' web-app alternative, in the Apache Projects section of
> > the
> > LEFT SIDE NAVIGATION ?
> >
> >    Apache Projects
> >      HTTP Server
> >      APR
> >      Jakarta
> >      Perl
> >      Python    <-- something like this, linking to www.mod_python.org,
> >      PHP           or to 'python.apache.org' which would redirect to
> >      TCL           www.mod_python.org (or something along those lines)
> >      XML
> >      Conferences
> >      Foundation
> 
> As Fabian Fagerholm wrote aug 22nd, I believe python.apache.org shouldn't 
> equal mod_python. Although mod_python is a great product, it isn't the only 
> way to use Python with Apache.
> 
> The community around mod_dtcl took the initial initiative to move to 
> tcl.apache.org and invited the other Tcl alternatives to join in. This has 
> now resulted in a new module, Apache Rivet, which combines the efforts of 
> mod_dtcl and neowebscript.
> 
> If a similar symbiosis can be archived in the Python web community, I believe 
> it we benefit all of us. On the other hand, if python.apache.org == 
> mod_python, it may split the Python web community.
> 
> /jfk
> 
> -- 
> J?rgen Fr?jk Kj?rsgaard, direkt?r og systemkonsulent
> Metation aps - Kystvejen 29, DK-8000 ?rhus C
> Web: www.metation.com  - Tlf: +45 8625 0038 - Mobil: +45 2925 6693
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://www.modpython.org/mailman/listinfo/mod_python

From vmilitaru at sympatico.ca  Sat Aug 24 09:15:59 2002
From: vmilitaru at sympatico.ca (vio)
Date: Fri Jan  9 22:03:24 2004
Subject: [mod_python] Promoting Python as web application development language
In-Reply-To: <02082413555205.00306@grace.metation.com>; from jfk@metation.com on Sat, Aug 24, 2002 at 01:55:52PM +0200
References: <20020823182218.A304@eye.neb> <02082410164204.00306@grace.metation.com> <20020824053625.A685@eye.neb> <02082413555205.00306@grace.metation.com>
Message-ID: <20020824091559.A956@eye.neb>

Again Jorgen, many thanks for your reply. In a couple of emails you outlined
the framework of a possible 'python.apache.org' project. Its goals, both 
strategic (to promote a unified effort in making Python a language of choice 
on the Apache server) and tactical or technical (to integrate the main 
python_on_apache codebases, while maintaining an open door to alternatives)
are quite clear. The writing on the wall is "cooperation". I would take it 
that your views more or less reflect those of the apache board. Excellent.

Well, Fabian, I hope this would be of some help for your PR efforts, so best
of luck and hopefully you'll keep us in touch of your progress on the 
mod_python list. I guess it's your call from now on.

Warm regards,
Vio

* J?rgen Fr?jk Kj?rsgaard {Metation} <jfk@metation.com> [020824 08:39]:
> L?rdag 24. August 2002 12:36 skrev du:
> > If I read your Rivet analogy correctly, apache might be interested in
> > giving its 'official' blessing (i.e. the powerful 'python.apache.org') to
> > the python project who will manage to rally support from the web-python
> > community at large. In this regard, Fabian's latest PR makes a lot of
> > sense.
> 
> Exactly.
> 
> > But again speaking from a user's perspective, if I consider the 2
> > web-python packages I know a little about - zope and mod_python - I don't
> > see those code bases integrating anytime soon (simply because they serve 2
> > quite different audiences, and I would think they are rather entrenched).
> > Because of this, should there be no 'python.apache.org' ?
> 
> There should be a python.apache.org. The question is who should be part of 
> it? mod_python and Zope are very unlikely to integrate, but some cooperation 
> may be possible. In the open source desktop area, KDE and Gnome actually use 
> some common code today (KDE depends on the GNOME XML core libraries), even 
> though the groups couldn't stand eachother a few years ago.
> 
> On the other hand, you are right when you say that Zope doesn't fit very well 
> in. Zope is not very tightly integrated with Apache. A "zope.apache.org" 
> would be very unlikely.
> 
> I think python.apache.org should consist of mod_python, mod_snake, CGI Python 
> and maybe a few others that I haven't even head about yet. Some time in the 
> future, mod_python and mod_snake may integrate, though it may not seem 
> possible today. A couple of years ago Rivet didn't seem possible either!
> 
> tcl.apache.org succeeded because it is open to alternatives, it isn't one 
> mod_*.
> 
> > I disagree. As long as there will be no official ralying point to attract
> > python+apache afficionados on a 'single point of effort', parallel efforts
> > will continue to florish, each more or less re-inventing the proverbial
> > wheel. And not cooperating very much, I would think.
> 
> Maybe our thoughts are not that different at all... The purpose of 
> python.apache.org should be to expose Python more _and_ to promote a more 
> unified effort in making Python a language of choice on the Apache server.
> 
> regards, J?rgen
> 
> -- 
> J?rgen Fr?jk Kj?rsgaard, direkt?r og systemkonsulent
> Metation aps - Kystvejen 29, DK-8000 ?rhus C
> Web: www.metation.com  - Tlf: +45 8625 0038 - Mobil: +45 2925 6693

From neel at mediapulse.com  Sat Aug 24 16:29:39 2002
From: neel at mediapulse.com (Michael Neel)
Date: Fri Jan  9 22:03:24 2004
Subject: [mod_python] Promoting Python as web application development language
In-Reply-To: <20020824091559.A956@eye.neb>
Message-ID: <000401c24bac$f967e930$0400a8c0@clapton>

Would it make since to have python.apache.org work the same as
jakarta.apache.org?  Then have mod_python, mod_snake, and any other
efforts listed as sub-projects.  Zope could be related link, but it
really does fit in with what I think of when I think "mod_python".  I
want mod_python to provide 2 very key parts; 1. provided an embedded
interperter so I can speed up a existing python code with little effort
and 2. provide a python API version of the Apache API. (I'm not saying
we don't have these bases covered, just say what I'm looking for in a
mod python project).  Zope is a tool for a different job.

If the sticking point is wether python.apache.org jumps to mod_python or
mod_snake, then just solve that now by linking to both as the java pages
do.  Once python has a higher visibility, the community will help it
become whatever it needs to become with reguards to apache.

BTW anyone want to make RedHat stop shipping python 1.5 as default and
giving you mod_python built against 1.5 as well? I can dream can't I?

Anyone ask Guido if he would make a phone call? =D

Mike
--
Michael C. Neel
There are only 10 types of people in the world;
those who understand binary and those who don't.


-----Original Message-----
From: mod_python-admin@modpython.org
[mailto:mod_python-admin@modpython.org] On Behalf Of vio
Sent: Saturday, August 24, 2002 10:16 AM
To: J?rgen Fr?jk Kj?rsgaard {Metation}
Cc: mod_python@modpython.org
Subject: Re: [mod_python] Promoting Python as web application
development language


Again Jorgen, many thanks for your reply. In a couple of emails you
outlined the framework of a possible 'python.apache.org' project. Its
goals, both 
strategic (to promote a unified effort in making Python a language of
choice 
on the Apache server) and tactical or technical (to integrate the main 
python_on_apache codebases, while maintaining an open door to
alternatives) are quite clear. The writing on the wall is "cooperation".
I would take it 
that your views more or less reflect those of the apache board.
Excellent.

Well, Fabian, I hope this would be of some help for your PR efforts, so
best of luck and hopefully you'll keep us in touch of your progress on
the 
mod_python list. I guess it's your call from now on.

Warm regards,
Vio

* J?rgen Fr?jk Kj?rsgaard {Metation} <jfk@metation.com> [020824 08:39]:
> L?rdag 24. August 2002 12:36 skrev du:
> > If I read your Rivet analogy correctly, apache might be interested 
> > in giving its 'official' blessing (i.e. the powerful 
> > 'python.apache.org') to the python project who will manage to rally 
> > support from the web-python community at large. In this regard, 
> > Fabian's latest PR makes a lot of sense.
> 
> Exactly.
> 
> > But again speaking from a user's perspective, if I consider the 2 
> > web-python packages I know a little about - zope and mod_python - I 
> > don't see those code bases integrating anytime soon (simply because 
> > they serve 2 quite different audiences, and I would think they are 
> > rather entrenched). Because of this, should there be no 
> > 'python.apache.org' ?
> 
> There should be a python.apache.org. The question is who should be 
> part of
> it? mod_python and Zope are very unlikely to integrate, but some
cooperation 
> may be possible. In the open source desktop area, KDE and Gnome
actually use 
> some common code today (KDE depends on the GNOME XML core libraries),
even 
> though the groups couldn't stand eachother a few years ago.
> 
> On the other hand, you are right when you say that Zope doesn't fit 
> very well
> in. Zope is not very tightly integrated with Apache. A
"zope.apache.org" 
> would be very unlikely.
> 
> I think python.apache.org should consist of mod_python, mod_snake, CGI

> Python
> and maybe a few others that I haven't even head about yet. Some time
in the 
> future, mod_python and mod_snake may integrate, though it may not seem

> possible today. A couple of years ago Rivet didn't seem possible
either!
> 
> tcl.apache.org succeeded because it is open to alternatives, it isn't 
> one
> mod_*.
> 
> > I disagree. As long as there will be no official ralying point to 
> > attract
> > python+apache afficionados on a 'single point of effort', parallel 
> > python+efforts
> > will continue to florish, each more or less re-inventing the 
> > proverbial wheel. And not cooperating very much, I would think.
> 
> Maybe our thoughts are not that different at all... The purpose of
> python.apache.org should be to expose Python more _and_ to promote a
more 
> unified effort in making Python a language of choice on the Apache
server.
> 
> regards, J?rgen
> 
> --
> J?rgen Fr?jk Kj?rsgaard, direkt?r og systemkonsulent
> Metation aps - Kystvejen 29, DK-8000 ?rhus C
> Web: www.metation.com  - Tlf: +45 8625 0038 - Mobil: +45 2925 6693
_______________________________________________
Mod_python mailing list
Mod_python@modpython.org
http://www.modpython.org/mailman/listinfo/mod_python



From vmilitaru at sympatico.ca  Sat Aug 24 22:24:38 2002
From: vmilitaru at sympatico.ca (vio)
Date: Fri Jan  9 22:03:24 2004
Subject: [mod_python] Promoting Python as web application development language
In-Reply-To: <000401c24bac$f967e930$0400a8c0@clapton>; from neel@mediapulse.com on Sat, Aug 24, 2002 at 04:29:39PM -0400
References: <20020824091559.A956@eye.neb> <000401c24bac$f967e930$0400a8c0@clapton>
Message-ID: <20020824222438.A313@eye.neb>

* Michael Neel <neel@mediapulse.com> [020824 21:18]:
> Would it make since to have python.apache.org work the same as
> jakarta.apache.org?  Then have mod_python, mod_snake, and any other
> efforts listed as sub-projects.  

Yes, sounds interesting. Though I also agree with Jorgen's point in 
consolidating efforts. I haven't really touched mod_snake, but if it 
essentially duplicates the mod_python functionality, what's the point of
having 2 siamese twins consuming programmers' cycles? 
In such a situation, I'd say let's put them both on some serious neutral 
benchmark tests, choose the best of the breed, then focus all efforts on it 
(and sidestep the other in the name of the common good). Egoes will be bruised
in the process, but as Spock said in 'the Wrath of Khan': ... 

> Zope could be related link, but it
> really does fit in with what I think of when I think "mod_python".  I
> want mod_python to provide 2 very key parts; 1. provided an embedded
> interperter so I can speed up a existing python code with little effort
> and 2. provide a python API version of the Apache API. (I'm not saying
> we don't have these bases covered, just say what I'm looking for in a
> mod python project).  Zope is a tool for a different job.

Zope is not an apache module. Hence, Zope almost jumps out of topic.

My vision of a python.apache.org is a lot closer to perl.apache.org.
I'm an old user of mod_perl... until I discovered python couple of years ago. 
And never looked back since.
How can I put it? I want to do mod_perl, but while writing in python.
So I'm rather leaning towards Jorgen's vision of a consolidated effort
and cooperation between projects, eventually merging somewhere down the line.
I'd want the Apache Foundation to give the same treatment to python it now
gives perl (java, tcl, ...). Nothing more, nothing less.
Then eventually I'd want O'Reilly to update their 'Writing Apache Modules with 
Perl and C' to something like 'Writing Apache Modules with Perl, Python and C'.

I have this weird feeling python is one of those totally underestimated jewels
of the open source movement. Guido achieved a jewel of a programming language.
This should definitely put python on the (web programming) map,
give it the visibility it (rightfully!) deserves. AND democratize web 
programming (python is so easy and clean, my grandmother could write web apps).

Vio

From jack_diederich at email.com  Sat Aug 24 22:29:59 2002
From: jack_diederich at email.com (Jack Diederich)
Date: Fri Jan  9 22:03:24 2004
Subject: [mod_python] Promoting Python as web application development
    language
Message-ID: <20020825032959.12775.qmail@email.com>

> * Michael Neel <neel@mediapulse.com> [020824 21:18]:
> > Would it make since to have python.apache.org work the same as
> > jakarta.apache.org?  Then have mod_python, mod_snake, and any other
> > efforts listed as sub-projects.  
> 

mod_snake is dead [modsnake.sourceforge.net] according to the author
zope is well ... zope and has as much to with with Apache as it does IIS,
or squid, or freecell.

python.apache.org seems like a good pragmatic idea, I think the possibility
of a holy war or bruised egos has been over hyped in this discussion.
mod_python is the apache integration that serves the small but growing group
of people writing python web apps with apache.  There isn't much else to
say, lets not lose perspective - it's a sub-domain name (domain sub-name?).

I haven't had time to go over the mod_snake sources yet, but there may
be some good stuff in there.  I don't think that changes anything.
(as a terrible metric, the mod_snake tarball is 100k larger than
mod_python).  If people ressurect some of the code by patching mod_python,
great.

-jackdied

.sig
There is a fine line between being The Man, and being That Guy

-- 
__________________________________________________________
Sign-up for your own FREE Personalized E-mail at Mail.com
http://www.mail.com/?sr=signup


From alain at onesite.org  Sun Aug 25 05:37:37 2002
From: alain at onesite.org (Alain Tesio)
Date: Fri Jan  9 22:03:24 2004
Subject: [mod_python] Promoting Python as web application development language
In-Reply-To: <20020824222438.A313@eye.neb>
References: <20020824091559.A956@eye.neb>
	<000401c24bac$f967e930$0400a8c0@clapton>
	<20020824222438.A313@eye.neb>
Message-ID: <20020825053737.5ce9a280.alain@onesite.org>

On Sat, 24 Aug 2002 22:24:38 -0500
vio <vmilitaru@sympatico.ca> wrote:

> I haven't really touched mod_snake, but if it 
> essentially duplicates the mod_python functionality, what's the point of
> having 2 siamese twins consuming programmers' cycles? 

mod_snake died some months ago

http://modsnake.sourceforge.net/
http://apache.slashdot.org/apache/02/05/12/0419208.shtml?tid=148

Alain

From alain at onesite.org  Sun Aug 25 05:57:48 2002
From: alain at onesite.org (Alain Tesio)
Date: Fri Jan  9 22:03:24 2004
Subject: [mod_python] Promoting Python as web application development language
In-Reply-To: <20020825032959.12775.qmail@email.com>
References: <20020825032959.12775.qmail@email.com>
Message-ID: <20020825055748.04878b30.alain@onesite.org>

On Sat, 24 Aug 2002 22:29:59 -0500
"Jack Diederich" <jack_diederich@email.com> wrote:

> 
> I haven't had time to go over the mod_snake sources yet, but there may
> be some good stuff in there.  I don't think that changes anything.
> (as a terrible metric, the mod_snake tarball is 100k larger than
> mod_python).  If people ressurect some of the code by patching mod_python,
> great.

Here is an interesting comment in the slashdot dicussion, no idea if all points
are valid though.

Alain


bye bye (Score:3, Informative) 
by DrSkwid (`moc.elbbubtnuc' `ta' `mapshsals') on Sunday May 12, @06:23AM (#3505266) 
(User #118965 Info | http://www.hardlight.couk.com/) 


I was one of the people bugging him for updates, I could never get it to compile of
FreeBSD for me.

I ended up going over to mod_python.

Shame because one of the premises of mod_snake was the concept of nested python
interpreters. Like Apache itself mod_snake had one thread and then passed the request
on to another python interpreterrunning as a sub thread so that you could maintain
state between requests by using the same interpreter.

It sounded interesting, but I never got the chance to find out.

mod_python has the annoying attribute of requiring the whole python installation to
be compiled as single threaded which means some modules don't work (urllib for
instance - so you have to roll your own url en/decoder). Which then leaves you in the
stick world of two python installations of you want to use sockets and threads in
other applications.

I've still not sussed out how to easily manage two installations :(

mod_python does rule though, I much prefer using it to php or standard CGI and I'm
so glad I dont have to learn any more of mod_perl than the rudimentrary stuff I
picked from reading the O'Reilly mod_perl book.

From barr at cs.cornell.edu  Sun Aug 25 00:13:56 2002
From: barr at cs.cornell.edu (Rimon Barr)
Date: Fri Jan  9 22:03:24 2004
Subject: [mod_python] python.apache.org
In-Reply-To: <20020825053737.5ce9a280.alain@onesite.org>
Message-ID: <Pine.LNX.4.44.0208250008190.11744-100000@pompom.u.cs.cornell.edu>

A suggestion... The following list (+Spyce!) [1] could be a useful
starting point as a list to prune from for projects for python.apache.org.
I believe python.apache.org is a great idea, and will give the Python
community additional visibility and users. I also think that it should be
an inclusive site (like java.apache.org and xml.apache.org) that serves as
a registry of mature web-related python-based projects.

[1] - http://spyce.sourceforge.net/doc_related.html

All the best,
Rimon.
-- 
 * Rimon Barr       Ph.D. candidate, Computer Science, Cornell University
 | barr@cs.cornell.edu - http://www.cs.cornell.edu/barr - Y!IM: batripler
 |
 | Understanding is a kind of ecstasy.
 +----                                   -- Carl Sagan


From vmilitaru at sympatico.ca  Sun Aug 25 00:37:51 2002
From: vmilitaru at sympatico.ca (vio)
Date: Fri Jan  9 22:03:24 2004
Subject: [mod_python] Promoting Python as web application development language
In-Reply-To: <20020825032959.12775.qmail@email.com>; from jack_diederich@email.com on Sat, Aug 24, 2002 at 10:29:59PM -0500
References: <20020825032959.12775.qmail@email.com>
Message-ID: <20020825003751.A388@eye.neb>

* Jack Diederich <jack_diederich@email.com> [020824 23:47]:
> mod_snake is dead [modsnake.sourceforge.net] according to the author

Sounds to me like a step towards 'python.apache.org == mod_python'. 
Perhaps Jorgen's fears that such a move may split the 'web python community' 
may have been a little premature. Perhaps the current 'web python community' 
may not be as big as initially estimated (a fact that python.apache.org is
intended to remedy).

> zope is well ... zope and has as much to with with Apache as it does IIS,
> or squid, or freecell.

I agree. It's quite big and getting bigger. Though my main issue with zope was 
that it simply didn't scale well for projects with more than a few hundred 
objects (at least from my experience). Perhaps because it uses a python-based
object database, which is not very performant for large scale projects. 
But I will recommend it nevertheless as an introductory environment to web 
programming (I really learned a lot in my zope days).

Vio

> python.apache.org seems like a good pragmatic idea, I think the possibility
> of a holy war or bruised egos has been over hyped in this discussion.
> mod_python is the apache integration that serves the small but growing group
> of people writing python web apps with apache.  There isn't much else to
> say, lets not lose perspective - it's a sub-domain name (domain sub-name?).
> 
> I haven't had time to go over the mod_snake sources yet, but there may
> be some good stuff in there.  I don't think that changes anything.
> (as a terrible metric, the mod_snake tarball is 100k larger than
> mod_python).  If people ressurect some of the code by patching mod_python,
> great.
> 
> -jackdied

From jfk at metation.com  Sun Aug 25 19:29:06 2002
From: jfk at metation.com (=?iso-8859-1?q?J=F8rgen=20Fr=F8jk=20Kj=E6rsgaard=20{Metation}?=)
Date: Fri Jan  9 22:03:24 2004
Subject: [mod_python] Promoting Python as web application development language
In-Reply-To: <20020825003751.A388@eye.neb>
References: <20020825032959.12775.qmail@email.com> <20020825003751.A388@eye.neb>
Message-ID: <02082519290602.00315@grace.metation.com>

S?ndag 25. August 2002 07:37 skrev vio:
> * Jack Diederich <jack_diederich@email.com> [020824 23:47]:
> > mod_snake is dead [modsnake.sourceforge.net] according to the author
>
> Sounds to me like a step towards 'python.apache.org == mod_python'.
> Perhaps Jorgen's fears that such a move may split the 'web python
> community' may have been a little premature. Perhaps the current 'web
> python community' may not be as big as initially estimated (a fact that
> python.apache.org is intended to remedy).

If there really is nothing but Zope, which isn't an Apache module, and 
mod_python, there is no reason not to go ahead with python.apache.org == 
mod_python. I wasn't aware that mod_snake was dead (I never even bothered to 
try it - mod_python works fine ;-). Just keep the door open to other existing 
or new Pyton+Apache projects. The main reason for Apaches huge success is its 
openness - this openness should be kept in subprojects like python.apache.org,


regards, J?rgen

-- 
J?rgen Fr?jk Kj?rsgaard, direkt?r og systemkonsulent
Metation aps - Kystvejen 29, DK-8000 ?rhus C
Web: www.metation.com  - Tlf: +45 8625 0038 - Mobil: +45 2925 6693

From fabbe at paniq.net  Sun Aug 25 21:31:46 2002
From: fabbe at paniq.net (Fabian Fagerholm)
Date: Fri Jan  9 22:03:24 2004
Subject: [mod_python] Promoting Python as web application development
	language
In-Reply-To: <20020824091559.A956@eye.neb>
References: <20020823182218.A304@eye.neb>
	<02082410164204.00306@grace.metation.com> <20020824053625.A685@eye.neb>
	<02082413555205.00306@grace.metation.com>  <20020824091559.A956@eye.neb>
Message-ID: <1030300307.1041.29.camel@kernel>

On Sat, 2002-08-24 at 17:15, vio wrote:
> Well, Fabian, I hope this would be of some help for your PR efforts, so best
> of luck and hopefully you'll keep us in touch of your progress on the 
> mod_python list. I guess it's your call from now on.

Actually, no.

You decided to pursue a different course of action than I - a direct
mailing to the Apache Software Foundation Board - at this point. I
clearly stated that I wanted some discussion on this topic first. There
has been some discussion and some valuable points have been raised, but
I was not yet ready to proceed to the next stage.

Therefore, I regard your actions as your own, and you must take
responsibility for them. I hope you will relay any response from the ASF
Board to this mailing list. I also hope you come up with a good way of
redirecting any future correspondence to me or this list if you do not
wish to take over this effort.

I suggest the next time you have an urge to spill your beans, do it in
your own house where there are people to help you clean up your mess.


This effort will now have to be put on hold until we know whether or not
the ASF Board is going to respond to Mr. Vio's message.


Meanwhile, there are things to do. Interested parties please send me
private e-mail.

Fabian

-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 240 bytes
Desc: This is a digitally signed message part
Url : http://mailman.modpython.org/pipermail/mod_python/attachments/20020825/2e1d4cca/attachment-0003.bin
From fabbe at paniq.net  Sun Aug 25 21:34:37 2002
From: fabbe at paniq.net (Fabian Fagerholm)
Date: Fri Jan  9 22:03:24 2004
Subject: [mod_python] mod_python link on Apache web page?
In-Reply-To: <Pine.BSF.4.32.0208230834550.35718-100000@eden.ispol.com>
References: <Pine.BSF.4.32.0208230834550.35718-100000@eden.ispol.com>
Message-ID: <1030300477.972.32.camel@kernel>

On Fri, 2002-08-23 at 15:39, Gregory (Grisha) Trubetskoy wrote:
> 
> My "official" position on this is that I don't have strong feelings one
> way or the other. Being concerned with these matters is something that I
> at the moment do not have a lot of time for. If someone wants to take up
> the task of promoting mp, God bless'em.

Grisha, thank you for these words. They explain your position very
clearly.

I'm looking forward to seeing further mod_python development from you!

Cheers,
Fabian

-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 240 bytes
Desc: This is a digitally signed message part
Url : http://mailman.modpython.org/pipermail/mod_python/attachments/20020825/57e2b739/attachment-0003.bin
From vmilitaru at sympatico.ca  Sun Aug 25 20:32:58 2002
From: vmilitaru at sympatico.ca (vio)
Date: Fri Jan  9 22:03:24 2004
Subject: [mod_python] Promoting Python as web application development language
Message-ID: <20020825203258.A304@eye.neb>

Well, sorry about this. But listen, Fabian, just accept that other people have
different views on this than your own, and different ways of doing things. 
Additionally, I do have serious problems with all this 'privacy' in your 
procedure. I think this is a public issue where everybody is concerned, and 
all communications on this topic should be in a 'public' forum, not private
emails. You'll notice that I took great care in CC-ing everything I received
on this to this public list, with the exception of couple of mails from you
and Rimon.

I consider my somewhat direct message to the ASF and related messages have been
successful: they established what the criteria for a 'python.apache.org'
are (check out Jorgen's replies). Additional messages on this topic 
established that the way to a 'python.apache.org == mod_python' is a rather 
clear and straight path.

The main issue now seems to be whether the 'python.apache.org' brand should be
only used for apache 'modules' (like mod_perl and mod_python) - which is what
I am promoting, or a more general link to all kind of packages more or less 
related to apache and python. This is what Rimon promotes. 

From fabbe at paniq.net  Mon Aug 26 09:59:33 2002
From: fabbe at paniq.net (Fabian Fagerholm)
Date: Fri Jan  9 22:03:24 2004
Subject: [mod_python] Promoting Python as web application development
	language
In-Reply-To: <20020825203258.A304@eye.neb>
References: <20020825203258.A304@eye.neb>
Message-ID: <1030345173.976.72.camel@kernel>

On Mon, 2002-08-26 at 04:32, vio wrote:
> Well, sorry about this. But listen, Fabian, just accept that other people have
> different views on this than your own, and different ways of doing things.

I certainly do. As long as their actions don't impede on mine, everyone
is free to do as they please.
 
> Additionally, I do have serious problems with all this 'privacy' in your 
> procedure. I think this is a public issue where everybody is concerned, and 
> all communications on this topic should be in a 'public' forum, not private
> emails. You'll notice that I took great care in CC-ing everything I received
> on this to this public list, with the exception of couple of mails from you
> and Rimon.

This is not a public issue. It's an issue for interested parties - which
is why I have been prepared to spend my own and others' bandwidth and
time to solicit opinions and volunteers from the appropriate forums.

> I consider my somewhat direct message to the ASF and related messages have been
> successful: they established what the criteria for a 'python.apache.org'
> are (check out Jorgen's replies). Additional messages on this topic 
> established that the way to a 'python.apache.org == mod_python' is a rather 
> clear and straight path.

Is Jorgen a member of the ASF?

www.apache.org is the property of the ASF, and as such the ultimate
decision of what python.apache.org should be (and whether it should be
at all) is theirs. All we can do is come with proposals.

I'm trying to work on something that extends to a broader area.
python.apache.org is admittedly an important part of this, but it is
still only a part.

> The main issue now seems to be whether the 'python.apache.org' brand should be
> only used for apache 'modules' (like mod_perl and mod_python) - which is what
> I am promoting, or a more general link to all kind of packages more or less 
> related to apache and python. This is what Rimon promotes. 
[...]

This is certainly a valid question, but I'm afraid it's not a decision
to be made by us at this forum. Also, these are not the only options.

> This is wrong: apache is one of the core successes of the open source model,
> it should be handled with extreme care and foresight.

Care and foresight have certainly been key words in your handling of
this issue.

> I have nothing to promote on the apache site and nothing to gain
> from seeing 'mod_python == python.apache.org'. It's just the right thing to do.

Well, this discussion has been going on for long enough and I thank
Grisha for letting it happen on this mailing list. What follows now is
work, work, work, and hopefully there will be something to announce in
the coming weeks.

Vio, could you please let us know if the ASF board has replied?

Cheers,
Fabian

-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 240 bytes
Desc: This is a digitally signed message part
Url : http://mailman.modpython.org/pipermail/mod_python/attachments/20020826/009a97b8/attachment-0003.bin
From vmilitaru at sympatico.ca  Mon Aug 26 03:25:08 2002
From: vmilitaru at sympatico.ca (vio)
Date: Fri Jan  9 22:03:24 2004
Subject: [mod_python] Promoting Python as web application development language
In-Reply-To: <1030345173.976.72.camel@kernel>; from fabbe@paniq.net on Mon, Aug 26, 2002 at 09:59:33AM +0300
References: <20020825203258.A304@eye.neb> <1030345173.976.72.camel@kernel>
Message-ID: <20020826032508.A658@eye.neb>

* Fabian Fagerholm <fabbe@paniq.net> [020826 02:59]:
>  ...
> > Additionally, I do have serious problems with all this 'privacy' in your 
> > procedure. I think this is a public issue where everybody is concerned, and 
> > all communications on this topic should be in a 'public' forum, not private
> > emails. You'll notice that I took great care in CC-ing everything I received
> > on this to this public list, with the exception of couple of mails from you
> > and Rimon.
> 
> This is not a public issue. It's an issue for interested parties - which
> is why I have been prepared to spend my own and others' bandwidth and
> time to solicit opinions and volunteers from the appropriate forums.

Sounds like we have a big difference of views here. Let's agree to disagree.

> ...
> Care and foresight have certainly been key words in your handling of
> this issue.

Touche :-)

> 
> Well, this discussion has been going on for long enough and I thank
> Grisha for letting it happen on this mailing list. 

Here we're in total agreement, so I'd like to join you in thanking Gregory.
Though, since mod_python is a core element of this topic (as far as I'm
concerned) I think it's only natural that such discussions take place on
precisely this public forum.

> 
> Vio, could you please let us know if the ASF board has replied?

Obviously. As previously mentionned, as far as I'm concerned, all emails 
related to this topic will be CC-ed to the mod_python list, for all to see
and have a chance to react to. This topic is of public interest.

Regards,
Vio

From jfk at metation.com  Mon Aug 26 12:03:20 2002
From: jfk at metation.com (=?iso-8859-1?q?J=F8rgen=20Fr=F8jk=20Kj=E6rsgaard=20{Metation}?=)
Date: Fri Jan  9 22:03:24 2004
Subject: [mod_python] Promoting Python as web application development language
In-Reply-To: <1030345173.976.72.camel@kernel>
References: <20020825203258.A304@eye.neb> <1030345173.976.72.camel@kernel>
Message-ID: <02082612032001.00310@grace.metation.com>

Mandag 26. August 2002 08:59 skrev du:
> > I consider my somewhat direct message to the ASF and related messages
> > have been successful: they established what the criteria for a
> > 'python.apache.org' are (check out Jorgen's replies). Additional messages
> > on this topic established that the way to a 'python.apache.org ==
> > mod_python' is a rather clear and straight path.
>
> Is Jorgen a member of the ASF?

I'm not. I'm a long-time mod_python user with an opinion about this issue. I 
followed the process of moving mod_dtcl to apache.org from the sideline as I 
was a contributor to that module at the time. My intension now is to try to 
ensure that a move of mod_python to apache.org succeeds.

In my opinion the message to ASF was sent way too early in the discussion. I 
think somebody - preferably Grisha, if he'd had the time for it - should 
contact other groups who have moved to apache.org and learn from their 
experience. A good candidate to contact is David Welton of the mod_dtcl 
project. He can be contacted at davidw@apache.org. Davis Welton is also a 
Python user, though I don't think he uses it for web.

regards, J?rgen

-- 
J?rgen Fr?jk Kj?rsgaard, direkt?r og systemkonsulent
Metation aps - Kystvejen 29, DK-8000 ?rhus C
Web: www.metation.com  - Tlf: +45 8625 0038 - Mobil: +45 2925 6693

From fabbe at paniq.net  Mon Aug 26 13:04:03 2002
From: fabbe at paniq.net (Fabian Fagerholm)
Date: Fri Jan  9 22:03:24 2004
Subject: [mod_python] Promoting Python as web application development
	language
In-Reply-To: <02082612032001.00310@grace.metation.com>
References: <20020825203258.A304@eye.neb> <1030345173.976.72.camel@kernel> 
	<02082612032001.00310@grace.metation.com>
Message-ID: <1030356244.1029.96.camel@kernel>

On Mon, 2002-08-26 at 13:03, J?rgen Fr?jk Kj?rsgaard {Metation} wrote:
> > Is Jorgen a member of the ASF?
> 
> I'm not. I'm a long-time mod_python user with an opinion about this issue. I 
> followed the process of moving mod_dtcl to apache.org from the sideline as I 
> was a contributor to that module at the time. My intension now is to try to 
> ensure that a move of mod_python to apache.org succeeds.

Excellent.

> In my opinion the message to ASF was sent way too early in the discussion. I 
> think somebody - preferably Grisha, if he'd had the time for it - should 
> contact other groups who have moved to apache.org and learn from their 
> experience.

I think everyone who has followed this thread knows my take on the
message to ASF so no more on that from me.

I would also be happy to see Grisha push this issue, but in
http://www.modpython.org/pipermail/mod_python/2002-August/002372.html,
he explains that he doesn't have time for this effort at the moment,
which I think should be respected. Therefore, as the initiator of this
thread, I feel compelled to do this instead.

I have made some progress but I urge you all to be patient. There really
isn't much use of everyone sending random mails all over the place. I'm
going to be in touch with several groups and individuals and as you
know, it takes a few days to get replies.

Rest assured that I'll post when there's something to tell.

> A good candidate to contact is David Welton of the mod_dtcl 
> project. He can be contacted at davidw@apache.org. Davis Welton is also a 
> Python user, though I don't think he uses it for web.

Now this is the type of information I'm after. Many thanks for this
pointer - I shall contact David and ask for his views and advice.

Cheers,
Fabian

-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 240 bytes
Desc: This is a digitally signed message part
Url : http://mailman.modpython.org/pipermail/mod_python/attachments/20020826/662db266/attachment-0003.bin
From fabbe at paniq.net  Mon Aug 26 13:30:30 2002
From: fabbe at paniq.net (Fabian Fagerholm)
Date: Fri Jan  9 22:03:24 2004
Subject: [mod_python] Promoting Python as web application development
	language
In-Reply-To: <02082612032001.00310@grace.metation.com>
References: <20020825203258.A304@eye.neb> <1030345173.976.72.camel@kernel> 
	<02082612032001.00310@grace.metation.com>
Message-ID: <1030357830.1029.113.camel@kernel>

On Mon, 2002-08-26 at 13:03, J?rgen Fr?jk Kj?rsgaard {Metation} wrote:
> My intension now is to try to 
> ensure that a move of mod_python to apache.org succeeds.

Oh yes, a small clarification here.

My intent is not to *move* mod_python to apache.org - that is a call for
Grisha to make in the future. My intent is to provide means for
communication between Apache users and Python users (and thus create
some "Apache-Python" users), to promote the needs of Apache-Python
users, and promote Python as a web application development language in
general.

The topic of this thread reflects this intent.

Cheers,
Fabian

-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 240 bytes
Desc: This is a digitally signed message part
Url : http://mailman.modpython.org/pipermail/mod_python/attachments/20020826/e93d3039/attachment-0003.bin
From vmilitaru at sympatico.ca  Mon Aug 26 08:15:52 2002
From: vmilitaru at sympatico.ca (vio)
Date: Fri Jan  9 22:03:24 2004
Subject: [mod_python] Promoting Python as web application development language
In-Reply-To: <1030356244.1029.96.camel@kernel>; from fabbe@paniq.net on Mon, Aug 26, 2002 at 01:04:03PM +0300
References: <20020825203258.A304@eye.neb> <1030345173.976.72.camel@kernel> <02082612032001.00310@grace.metation.com> <1030356244.1029.96.camel@kernel>
Message-ID: <20020826081552.A951@eye.neb>

* Fabian Fagerholm <fabbe@paniq.net> [020826 07:50]:
> ...
> I have made some progress but I urge you all to be patient. There really
> isn't much use of everyone sending random mails all over the place. I'm
> going to be in touch with several groups and individuals and as you
> know, it takes a few days to get replies.
> 
> Rest assured that I'll post when there's something to tell.

I hear you. Anyways, on my side I've pretty much exhausted the topic, and I
have no intention to go beyond exchanging points of view on this list (if I
have something I consider of interest to add, that is). 
Still, for me it was a fun, though heated, little exchange of strong opinions
and beliefs, a few sparks flying here and there, no harm intended.
So best of luck, and looking foreword to your posts.

Cheers,
Vio

From fabbe at paniq.net  Mon Aug 26 17:27:32 2002
From: fabbe at paniq.net (Fabian Fagerholm)
Date: Fri Jan  9 22:03:24 2004
Subject: [mod_python] Status report: Promoting Python as web application development
 language
Message-ID: <1030372052.976.211.camel@kernel>

FYI,

I have sent a Python SIG proposal to the Python Meta-SIG mailing list in
accordance with the SIG creation guidelines. I feel a Python SIG would
be most useful in co-ordinating this effort.

Those interested can view the SIG proposal in the Meta-SIG mailing list
archives:

    http://mail.python.org/pipermail/meta-sig/2002-August/001233.html

If you want to comment on this proposal, please send your comments
primarily to the Meta-SIG mailing list. You may of course Cc me if you
like.

Before you post, I suggest you read some of the messages in the archives
and observe the netiquette of that list:

    http://mail.python.org/pipermail/meta-sig/

The outcome of the discussion will be relayed to this list in a
subsequent post. Thus there is no need for cross-posting.

Cheers,
Fabian

-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 240 bytes
Desc: This is a digitally signed message part
Url : http://mailman.modpython.org/pipermail/mod_python/attachments/20020826/17f4fefb/attachment-0003.bin
From mbp at samba.org  Tue Aug 27 12:27:33 2002
From: mbp at samba.org (Martin Pool)
Date: Fri Jan  9 22:03:24 2004
Subject: [mod_python] Promoting Python as web application development language
In-Reply-To: <1030357830.1029.113.camel@kernel>
References: <20020825203258.A304@eye.neb> <1030345173.976.72.camel@kernel> <02082612032001.00310@grace.metation.com> <1030357830.1029.113.camel@kernel>
Message-ID: <20020827022730.GD29095@samba.org>

On 26 Aug 2002, Fabian Fagerholm <fabbe@paniq.net> wrote:

> My intent is not to *move* mod_python to apache.org - that is a call for
> Grisha to make in the future. My intent is to provide means for
> communication between Apache users and Python users (and thus create
> some "Apache-Python" users), to promote the needs of Apache-Python
> users, and promote Python as a web application development language in
> general.

I think it would make sense for there to be *something* on
python.apache.org that answers the question of "I've got Apache and I
like Python; now what?"  

To start with just a really simple page linking to projects such as
mod_python, Cheetah (and other templating/html systems) could be
really good.  A lot more could possibly done in the future, but I
think this would be useful and hopefully not controversial.

Perhaps a few paragraphs explaining broadly how to do web development
in Python would be good.  What are the architectural decisions you
have to make (in-line vs templates vs DOM,...) and that sort of
thing.  I know I found it a bit confusing when looking at DTML vs
Cheetah vs everything else.

-- 
Martin 

From vmilitaru at sympatico.ca  Tue Aug 27 05:28:20 2002
From: vmilitaru at sympatico.ca (vio)
Date: Fri Jan  9 22:03:24 2004
Subject: [mod_python] Promoting Python as web application development language
In-Reply-To: <20020826151930.A4908@lyra.org>; from gstein@lyra.org on Mon, Aug 26, 2002 at 03:19:30PM -0700
References: <20020823182218.A304@eye.neb> <3D6A6A52.45D2EE84@Golux.Com> <20020826151930.A4908@lyra.org>
Message-ID: <20020827052817.B301@eye.neb>

First of all, thanks for your reply.

Why mod_python on the apache.org site?
I'm a web apps coder. And I love my python. Why mod_python? Because I want to
code apache apps in python. Also because of mod_perl: as a python afficionado, 
I feel left out (as the rest of the python community): why doesn't the ASF also
promote python on the same level as perl, java et al.

Why mod_python? It just so happens that there are not that many options out
there to write apache apps in python. This particular package seems to do the
job well, is very close and integrated with the apache program itself, and 
that's about all there is to it. 
We (I) 'need' a mod_perl for python programmers.

I hope this answers Ken's question, though imperfectly.

I would like to add that I am not a programmer of this mod_python package. I
am just a (heavy) user of both apache and python, and this question of the lack
of a python alternative on the main apache web site came out on our mailing 
list recently. And I personally took the liberty to writing to the apache board.

To Greg's argument that there is no ASF Python project, my question is WHY?
It's obvious to me there should be one.

Though I am obviously not an ASF member, and am not aware of how things work
at ASF, interestingly, through discussions on this topic on the mod_python
list, I came to the same conclusion as Greg: from my user's point of view
I would expect the apache site to feature only the core package itself,
and then only 'direct' extensions of the core: the modules (mod_perl, mod_ssl,
and yes, a python module - be it mod_python or something else). Anything else
would appear as an unhealthy overextension of the 'apache' brand. It's just my 
very personal opinion.

Gregory (Grisha) Trubetskoy is the author of mod_python. I hope he gets a 
chance to react to your post, especially Greg Stein's last 2 paragraphs.

Regards,
Vio

* Greg Stein <gstein@lyra.org> [020827 03:54]:
> On Mon, Aug 26, 2002 at 01:50:10PM -0400, Rodent of Unusual Size wrote:
> > vio wrote:
> > > But I just wanted to cut the bull and go straight to the point:
> > > we have this great apache module called mod_python, thanks to
> > > Gregory (Grisha) Trubetskoy, suffering from a big lack of exposure.
> > > We strongly believe this great piece of technology (which is the
> > > marriage of apache + python) deserves a place alongside mod_perl
> > > and mod_ssl 'on the main apache site'.
> > 
> > It might be possible to list it under the 'Sister Project' section,
> > but the question becomes: why mod_python and not mod_*?  What
> > makes mod_python stand out above the hundreds of other modules
> > in order to warrant this?  (Not being facetious; it's a serious
> > question.)
> 
> Ken also missed pointing out that the Perl, PHP, and Tcl projects that
> you're seeing in that list are all ASF projects. As there is no "Python"
> project, you don't see a Python listed there :-)
> 
> Personally, I have (recently) been advocating a move away from
> language-specific ASF Projects. In my ideal world, mod_perl, mod_(d)tcl, and
> mod_php would all be "sub projects" of the Apache HTTP Server project, and
> the Perl, Tcl, PHP projects would disappear. IMO, that is their natural,
> functional grouping.
> 
> To that extent, I would very much love to see mod_python become a subproject
> of the HTTP server. It would reside alongside mod_ldap, mod_mbox, mod_pop3,
> etc. From there, it could gain exposure through a number of venues on the
> ASF website.
> 
> To become an ASF project, the owners/committers of the code would need to
> agree to donate the codebase to the ASF and be willing to maintain it within
> our framework (along with other ASF committers and members who are also
> interested). Ideally, the community that comes with it would also follow
> some of the philosophy of the ASF in terms of being a friendly community,
> open source code, etc.
> 
> Cheers,
> -g
> 
> -- 
> Greg Stein, http://www.lyra.org/

From fabbe at paniq.net  Tue Aug 27 17:41:08 2002
From: fabbe at paniq.net (Fabian Fagerholm)
Date: Fri Jan  9 22:03:24 2004
Subject: [mod_python] Promoting Python as web application development
	language
In-Reply-To: <20020827052817.B301@eye.neb>
References: <20020823182218.A304@eye.neb> <3D6A6A52.45D2EE84@Golux.Com>
	<20020826151930.A4908@lyra.org>  <20020827052817.B301@eye.neb>
Message-ID: <1030459269.12012.70.camel@kernel>

As the initiator of the original discussion, I'd like to jump in with a
little comment right now before this heads off in a random direction.

I've been discussing these matters with David Welton of the Apache Tcl
Project (who has kindly agreed to assist me in this effort) and it seems
the mod_python community is lacking some vital understanding of exactly
what the Apache Software Foundation is.

Please read carefully:

> * Greg Stein <gstein@lyra.org> [020827 03:54]:
> > To become an ASF project, the owners/committers of the code would need to
> > agree to donate the codebase to the ASF and be willing to maintain it within
> > our framework (along with other ASF committers and members who are also
> > interested). Ideally, the community that comes with it would also follow
> > some of the philosophy of the ASF in terms of being a friendly community,
> > open source code, etc.

The mod_python software is written by Gregory Trubetskoy and a number of
contributors [0]. It already has a working infrastructure with a web
site, cvs (via sourceforge), and a mailing list.

ASF projects seem to have the general requirement that the copyright of
the software is to be assigned to the ASF.

This is not a decision that can be made by consensus on this mailing
list. It is the decision of the current copyright owner(s).

Gregory Trubetskoy has already expressed that he doesn't view the lack
of python.apache.org to be a problem [1] and that he doesn't have time
to spend on this effort [2] at the moment.

In order for anything to happen, Gregory must either be interested in
making mod_python an ASF project, or the mod_python community must come
up with an alternative arrangement with the ASF (such as a "Sister
Projects" link or whatever the ASF prefers).

In the former case, I'm sure communication can proceed directly between
Gregory and the ASF now that a contact has been established. I'll be
happy to share all information that I have gathered so far.

I invite everyone to continue this discussion with these facts in mind.
I also invite anyone to endorse the Python Special Interest Group
Proposal [3] that was sent to the Python Meta-SIG mailing list.

Regards,
Fabian Fagerholm

[0] http://www.modpython.org/live/mod_python-2.7.8/CREDITS

[1] http://www.modpython.org/pipermail/mod_python/2002-August/002364.html

[2] http://www.modpython.org/pipermail/mod_python/2002-August/002372.html

[3] http://mail.python.org/pipermail/meta-sig/2002-August/001233.html

-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 240 bytes
Desc: This is a digitally signed message part
Url : http://mailman.modpython.org/pipermail/mod_python/attachments/20020827/69694b4b/attachment-0003.bin
From vmilitaru at sympatico.ca  Tue Aug 27 11:28:14 2002
From: vmilitaru at sympatico.ca (vio)
Date: Fri Jan  9 22:03:24 2004
Subject: [mod_python] Promoting Python as web application development language
In-Reply-To: <3D6B87F6.9709C80E@Golux.Com>; from Ken.Coar@Golux.Com on Tue, Aug 27, 2002 at 10:08:54AM -0400
References: <20020823182218.A304@eye.neb> <3D6A6A52.45D2EE84@Golux.Com> <20020826151930.A4908@lyra.org> <3D6B87F6.9709C80E@Golux.Com>
Message-ID: <20020827112814.A756@eye.neb>

I just received a message from Grisha adressing the first part of yours, 
I hope to your satisfaction. 

For the second part, I totally agree that enthousiasm is not a good metric 
in this (most!) issues. But I would like to add that
the essence of my posts was not as much about Grisha's code, as about the need
of a good framework to write apache apps in python. Give me any other package
which accomplishes this task as good or better than Grisha's code, and I'll
embrace that, and champion it instead. My point was not 'mod_python' as
Grisha's code, but mod_python as a sister module to mod_perl, a solid module
to write apache apps in python. That's the core source of my enthousiasm.
To avoid any confusion: I'm simply  championning Grisha's code out of a lack 
of a better alternative. The fact that it does the job it's supposed to doesn't
hurt, though :)

More particularily regarding Grisha's code, I disagree with your assessment 
that installed base should be considered as a metric in this instance.
For the simple reason that, in my personal opinion, 
lack of exposure is its main overall problem. Though I'm
not a marketing expert, and I have no particular interest in seeing this
precise piece of code exposed on the apache site more than any other who
could accomplish the same tasks, my gut feeling is that
once people will see and 'tip their toe' in it, they will share my enthousiasm
(to various degrees, obviously). The core truth is that python is an extremely
easy, clean and powerful programming language. Combining it with the most
popular web server out there might open the door to 'democratizing' the 
web application development.
In my opinion :)

Regards,
Vio


* Rodent of Unusual Size <Ken.Coar@Golux.Com> [020827 10:41]:
> Greg Stein wrote:
> > 
> > To become an ASF project, the owners/committers of the code
> > would need to agree to donate the codebase to the ASF and
> > be willing to maintain it within our framework (along with
> > other ASF committers and members who are also interested).
> 
> Also,
> 
> o assign the copyright and 
> o licence it under the Apache licence
> 
> You've said several times that mod_python is Grisha's
> project.  ASF projects have *no* individual owners.
> I don't know if Grisha is willing to give up ownership
> in order for mod_python to become an ASF project, which
> is why I suggested the 'sister projects' section.
> 
> I'm afraid that I can't see individual enthusiasm as a valid
> metric for whether to include mod_python on the Apache page.
> Usefulness to and penetration in the user community are more
> appropriate, I think.
> -- 
> #ken	P-)}
> 
> Ken Coar, Sanagendamgagwedweinini  http://Golux.Com/coar/
> Author, developer, opinionist      http://Apache-Server.Com/
> 
> "Millennium hand and shrimp!"

From neel at mediapulse.com  Tue Aug 27 15:57:10 2002
From: neel at mediapulse.com (Michael C. Neel)
Date: Fri Jan  9 22:03:25 2004
Subject: [mod_python] Promoting Python as web application developmentlanguage
Message-ID: <C0FC22C08B82074A88B50061764157775B97@johnson.mediapulse.net>

Just chipping in my thoughts here, mostly on the copyright issues.

As mod_python stands now (and as I understand it), it is solely under
the copyright of Gregory Trubetskoy
(http://www.modpython.org/live/mod_python-2.7.8/doc-html/front.html).
So unless Gregory has reasons to not do so, moving mod_python to an ASF
license shouldn't be much of an issue.  I'd also say that as a developer
I almost need to see mod_python placed under a "standard" open source
license like ASF, GNU, or Artistic (or even python's own PSF).  This
will give me the assurance that I won't find out one day that all the
mod_python releases are commercial and closed source.  I have been
burned in the past by this table cloth switching, and it wasn't fun.

The other thing I'd like to say is that python.apache.org should just be
mod_python.  It servers the same purpose as mod_perl, to allow apache
development in python.  Catering the section to template modules,
application servers, or others projects just dilutes what a developer is
looking for.  I do think a "sister sites" link area is a good idea, as
well as some kind of mod_python CPAN.

The community does need this, badly.  Python itself needs this.  I
recently did 20 interviews for the position of internet developer, and
not one person knew of python when I asked.  I figure there are two
reasons for this: python sucks, or it doesn't have enough exposure.
I've written code in python before, so I know it can't be number one...

Mike
--
Michael C. Neel
There are only 10 types of people in the world;
those who understand binary and those who don't.


-----Original Message-----
From: Fabian Fagerholm [mailto:fabbe@paniq.net] 
Sent: Tuesday, August 27, 2002 10:41 AM
To: vio
Cc: mod_python@modpython.org; Greg Stein; Ken.Coar@Golux.Com;
davidw@dedasys.com; grisha@modpython.org
Subject: Re: [mod_python] Promoting Python as web application
developmentlanguage


As the initiator of the original discussion, I'd like to jump in with a
little comment right now before this heads off in a random direction.

I've been discussing these matters with David Welton of the Apache Tcl
Project (who has kindly agreed to assist me in this effort) and it seems
the mod_python community is lacking some vital understanding of exactly
what the Apache Software Foundation is.

Please read carefully:

> * Greg Stein <gstein@lyra.org> [020827 03:54]:
> > To become an ASF project, the owners/committers of the code would
need to
> > agree to donate the codebase to the ASF and be willing to maintain
it within
> > our framework (along with other ASF committers and members who are
also
> > interested). Ideally, the community that comes with it would also
follow
> > some of the philosophy of the ASF in terms of being a friendly
community,
> > open source code, etc.

The mod_python software is written by Gregory Trubetskoy and a number of
contributors [0]. It already has a working infrastructure with a web
site, cvs (via sourceforge), and a mailing list.

ASF projects seem to have the general requirement that the copyright of
the software is to be assigned to the ASF.

This is not a decision that can be made by consensus on this mailing
list. It is the decision of the current copyright owner(s).

Gregory Trubetskoy has already expressed that he doesn't view the lack
of python.apache.org to be a problem [1] and that he doesn't have time
to spend on this effort [2] at the moment.

In order for anything to happen, Gregory must either be interested in
making mod_python an ASF project, or the mod_python community must come
up with an alternative arrangement with the ASF (such as a "Sister
Projects" link or whatever the ASF prefers).

In the former case, I'm sure communication can proceed directly between
Gregory and the ASF now that a contact has been established. I'll be
happy to share all information that I have gathered so far.

I invite everyone to continue this discussion with these facts in mind.
I also invite anyone to endorse the Python Special Interest Group
Proposal [3] that was sent to the Python Meta-SIG mailing list.

Regards,
Fabian Fagerholm

[0] http://www.modpython.org/live/mod_python-2.7.8/CREDITS

[1]
http://www.modpython.org/pipermail/mod_python/2002-August/002364.html

[2]
http://www.modpython.org/pipermail/mod_python/2002-August/002372.html

[3] http://mail.python.org/pipermail/meta-sig/2002-August/001233.html



From tree at basistech.com  Tue Aug 27 18:38:36 2002
From: tree at basistech.com (Tom Emerson)
Date: Fri Jan  9 22:03:25 2004
Subject: [mod_python] Promoting Python as web application developmentlanguage
In-Reply-To: <C0FC22C08B82074A88B50061764157775B97@johnson.mediapulse.net>
References: <C0FC22C08B82074A88B50061764157775B97@johnson.mediapulse.net>
Message-ID: <15723.65388.98630.19463@magrathea.basistech.com>

Michael C. Neel writes:
> The other thing I'd like to say is that python.apache.org should
> just be mod_python.  It servers the same purpose as mod_perl, to
> allow apache development in python.

Look though at http://tcl.apache.org/, which includes pointers to
several projects for integrating Tcl into Apache. I don't see why
mod_snake shouldn't be included with mod_python. Developers would be
coming to python.apache.org to find out how to interface to Apache
with Python...

> Catering the section to template modules, application servers, or
> others projects just dilutes what a developer is looking for.

... but the next question many will ask is, "so now what? Where are
the template packages?"

> I do think a "sister sites" link area is a good idea, as well as
> some kind of mod_python CPAN.

Indeed!

    -tree

-- 
Tom Emerson                                          Basis Technology Corp.
Software Architect                                 http://www.basistech.com
  "Beware the lollipop of mediocrity: lick it once and you suck forever"

From jack_diederich at email.com  Tue Aug 27 17:45:30 2002
From: jack_diederich at email.com (Jack Diederich)
Date: Fri Jan  9 22:03:25 2004
Subject: [OT] RE: [mod_python] Promoting Python as web application
    developmentlanguage
Message-ID: <20020827224530.25352.qmail@email.com>

> The community does need this, badly.  Python itself needs this.  I
> recently did 20 interviews for the position of internet developer, and
> not one person knew of python when I asked.  I figure there are two
> reasons for this: python sucks, or it doesn't have enough exposure.

I don't think it is crucial to hire a developer who knows the language. If someone knows a few languages (one or more being OO) learning python just takes a month of reading your existing code base to learn reasonably, and a few months more in the group environment to master.  Even in Boston with its largish perl community, a place I worked previously didn't discriminate on knowledge of perl.  A good developer is a good developer (most of the people were C++ heavies first, perl second), they have to learn the ins and outs of the company's development environment & coding style anyway, a different language is just one aspect of that. (All things being equal, hire the guy who already knows python, but that isn't the most important thing.).  If they can ace an interview in another language (or preferably a couple) then it is a good hire.  If they are a jack of all trades [master of none: why does everyone forget that part of the phrase?] just say 'thank you for your time' and walk away.

-jackdied

ps, my first name being 'Jack' I get 'Jack of all trades' meant as a complement frequently.  I've stopped taking offense becuase 99% of the people who say it are ignorant of the full phrase 'Jack [apprentice] of all trades, master of none' [http://www.bartleby.com/66/6/1706.html]

pps, 'jackdied' is frequently my email/login on jobs, it is typically the shortest thing to type into MS exchange or similar to uniquely pull my name out of the employee database ('died' being the first 4 letters of my last name).  Nothing morbid implied, just a good mnemonic.
-- 
__________________________________________________________
Sign-up for your own FREE Personalized E-mail at Mail.com
http://www.mail.com/?sr=signup


From vmilitaru at sympatico.ca  Wed Aug 28 01:47:38 2002
From: vmilitaru at sympatico.ca (vio)
Date: Fri Jan  9 22:03:25 2004
Subject: [mod_python] Promoting Python as web application developmentlanguage
In-Reply-To: <15723.65388.98630.19463@magrathea.basistech.com>; from tree@basistech.com on Tue, Aug 27, 2002 at 06:38:36PM -0400
References: <C0FC22C08B82074A88B50061764157775B97@johnson.mediapulse.net> <15723.65388.98630.19463@magrathea.basistech.com>
Message-ID: <20020828014738.B325@eye.neb>

* Tom Emerson <tree@basistech.com> [020828 00:45]:
> Michael C. Neel writes:
> > The other thing I'd like to say is that python.apache.org should
> > just be mod_python.  It servers the same purpose as mod_perl, to
> > allow apache development in python.
> 
> Look though at http://tcl.apache.org/, which includes pointers to
> several projects for integrating Tcl into Apache. I don't see why
> mod_snake shouldn't be included with mod_python. Developers would be
> coming to python.apache.org to find out how to interface to Apache
> with Python...

I'm a total ignorant about mod_snake, but in principle, promoting two siamese
twins accomplishing pretty much the same tricks implies a good waste of 
developer cycles (and other less valuable resources). Additionally, I wonder
about the efforts required to merge the two code bases (provided such might be
a goal). It is not unheard of that the result of such merges comes out 
over budget, over schedule, more instable and less performant than either of 
its (incestuous?) parents. In this light, I personally would question 
the logic of such a move, as opposed to simply
consolidating all efforts on the one we determined is the 'Best of Breed'.
By the same token, why is there no 'mod_camel' alongsite 'mod_perl' ?
Just a thought.

> 
> > Catering the section to template modules, application servers, or
> > others projects just dilutes what a developer is looking for.
> 
> ... but the next question many will ask is, "so now what? Where are
> the template packages?"
> 
> > I do think a "sister sites" link area is a good idea, as well as
> > some kind of mod_python CPAN.
> 
> Indeed!

This makes a lot of sense.
So the 'functional' hierarchy Greg Stein is promoting for the apache site
might look something like:

HTTP Server > modules > sister sites 

Looks to me much more consistent that what we have now, 
... while making (most) everyone happy :)

Cheers,
Vio

From fabbe at paniq.net  Wed Aug 28 09:49:49 2002
From: fabbe at paniq.net (Fabian Fagerholm)
Date: Fri Jan  9 22:03:25 2004
Subject: [mod_python] Promoting Python as web application
	developmentlanguage
In-Reply-To: <87it1vncv5.fsf@dedasys.com>
References: <C0FC22C08B82074A88B50061764157775B97@johnson.mediapulse.net>
	<15723.65388.98630.19463@magrathea.basistech.com> 
	<87it1vncv5.fsf@dedasys.com>
Message-ID: <1030517390.1596.50.camel@kernel>

On Wed, 2002-08-28 at 01:41, David N. Welton wrote:
> > I don't see why mod_snake shouldn't be included with
> > mod_python. Developers would be coming to python.apache.org to find
> > out how to interface to Apache with Python...
> 
> That would definitely make sense, if the author of mod_snake agreed to
> turn over the project to the ASF.

FYI, I just emailed the author asking for his opinion. I'll let you know
when I receive a reply.

Would the ASF consider adopting this "dead" codebase even if the
principal author would not be interested in continuing the project?


Meanwhile, I'd like to point out that the mod_python mailing list is now
a subscribe-before-posting list. From www.modpython.org:

    Sorry, due to exessive spam, you now must subscribe to be able to
    post to the list.
    
I strongly recommend that we move this discussion somewhere more
appropriate. The amount of off-topic mail on the mod_python list has
been large lately.

I ask again that any interested parties review the Python SIG proposal
[0] and endorse it by sending an email to the Meta-SIG mailing list.
Look at [1] for an example. That way we would have a mailing list for
discussions.

Apologies for Cc'ing anyone who's not interested, please let me know if
you don't want to be a part of this.

Regards,
Fabian

[0] http://mail.python.org/pipermail/meta-sig/2002-August/001233.html

[1] http://mail.python.org/pipermail/meta-sig/2002-August/001234.html

-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 240 bytes
Desc: This is a digitally signed message part
Url : http://mailman.modpython.org/pipermail/mod_python/attachments/20020828/482cd0f7/attachment-0003.bin
From vmilitaru at sympatico.ca  Wed Aug 28 03:04:58 2002
From: vmilitaru at sympatico.ca (vio)
Date: Fri Jan  9 22:03:25 2004
Subject: [mod_python] Promoting Python as web application developmentlanguage
In-Reply-To: <1030517390.1596.50.camel@kernel>; from fabbe@paniq.net on Wed, Aug 28, 2002 at 09:49:49AM +0300
References: <C0FC22C08B82074A88B50061764157775B97@johnson.mediapulse.net> <15723.65388.98630.19463@magrathea.basistech.com> <87it1vncv5.fsf@dedasys.com> <1030517390.1596.50.camel@kernel>
Message-ID: <20020828030457.A444@eye.neb>

* Fabian Fagerholm <fabbe@paniq.net> [020828 02:44]:
> ...
> I strongly recommend that we move this discussion somewhere more
> appropriate. The amount of off-topic mail on the mod_python list has
> been large lately.

I partially agree, but only to the extent that not technical issues are 
discussed in this thread. On the other hand, I believe a piece of mod_perl's
history is in the process of being written (perhaps) under our eyes.
Considering that the list is not currently flooded with technical issues,
I believe it's nice to document what is happening, with this thread/topic.
Perhaps for those who are 'out of the loop', and are just curious of what's
going on. I for one certainly find it quite interesting.

On a more personal note, being compulsively lazy, I'd much rather CC to
a single address (mod_python@modpython.org) than 10 individual addresses.
In 'mutt' on a laptop, this makes for a depressingly lot of cut&paste with a
weird 'button' mouse.

Just my opinion. (and Sorry for all the noise!)
Vio

From gstein at lyra.org  Wed Aug 28 01:42:41 2002
From: gstein at lyra.org (Greg Stein)
Date: Fri Jan  9 22:03:25 2004
Subject: [mod_python] Promoting Python as web application developmentlanguage
In-Reply-To: <20020828014738.B325@eye.neb>; from vmilitaru@sympatico.ca on Wed, Aug 28, 2002 at 01:47:38AM -0500
References: <C0FC22C08B82074A88B50061764157775B97@johnson.mediapulse.net> <15723.65388.98630.19463@magrathea.basistech.com> <20020828014738.B325@eye.neb>
Message-ID: <20020828014240.A8187@lyra.org>

On Wed, Aug 28, 2002 at 01:47:38AM -0500, vio wrote:
> * Tom Emerson <tree@basistech.com> [020828 00:45]:
> > Michael C. Neel writes:
>...
> > Look though at http://tcl.apache.org/, which includes pointers to
> > several projects for integrating Tcl into Apache. I don't see why
> > mod_snake shouldn't be included with mod_python. Developers would be
> > coming to python.apache.org to find out how to interface to Apache
> > with Python...

Note that "Apache" is beginning to mean a lot more than just "the Apache
http server". You've now got projects such as Tomcat, Xerces, and Cocoon all
under the Apache banner. Arguably, they have nothing to do with the web
server :-)

My point is just that people won't arrive at the ASF simply for "how to
interface to Apache with Python." Minor point to be sure, but hey :-)

> I'm a total ignorant about mod_snake, but in principle, promoting two siamese
> twins accomplishing pretty much the same tricks implies a good waste of 
> developer cycles (and other less valuable resources).

Each developer has the *right to choose* what they work on. You might call
it a waste, but those developers have a bunch of other reasons for why they
may work on duplicative code. For example, the Apache Tomcat guys have got a
web server built into their code. I ask, "what the hell? use Apache httpd!"
But even though that is a valid answer, some developers want a pure Java
solution, so they build a Java-based HTTP server. Even though (*IMO*) it is
a huge waste of effort. But it's their choice.

>...
> > > I do think a "sister sites" link area is a good idea, as well as
> > > some kind of mod_python CPAN.

More on this in a sec.

> > Indeed!
> 
> This makes a lot of sense.
> So the 'functional' hierarchy Greg Stein is promoting for the apache site
> might look something like:
> 
> HTTP Server > modules > sister sites 
> 
> Looks to me much more consistent that what we have now, 
> ... while making (most) everyone happy :)

I'd like to clarify my thoughts here (I've said this elsewhere, but not to
this forum, nor in a very public forum). Currently, the ASF has projects
aligned along *language* boundaries. For a certain selection of developer
and goal, this can be quite fine. "I need a Java-based MTA."

However, it starts to fall down when a question such as "I want a Java-based
XML parser." Is that in the ASF Jakarta Project, or the ASF XML Project?
Hunh. If everything were organized along *functional* lines, then the
question could always be answered properly. "An MTA? Go to the server
project. It will be in there." "An XML Parser? Go to the XML project." Of
course, you'd then select for the language of choice. But that is a
secondary criteria after the initial project selection.

Thus, I would not advocate something along the lines of python.apache.org.
"All things Python" doesn't help users looking for functionality, and it
tends to end up as a mish-mash of unrelated (Python) projects.

As a result, I would advocate mod_python as part of the Apache HTTP Server
Project itself. You've got a web server, and (hey!) here is the Python
connector. I would even advocate that mod_perl, mod_(d)tcl, and mod_php move
to this same organization (and whack those language specific projects).
Jakarta is just too frickin' huge to axe so easily :-), but there are lines
of functionality for that project, too.

In this view, vio is correct on my suggestion: the Apache HTTP Server
Project is the parent. Sub-projects include things like mod_python. And as a
matter of course, we simply refer people to other locations for other
httpd-related software.

[ and to clarify: I'm speaking of my opinion on ASF organization, rather
  than thru any official capacity ]

Back to the CPAN-like thing. Given the above view, how does this work?
Well... consider having some kind of "indexing" or "cataloging" project.
Language neutral. Sure, you could select by language, but why would it be
limited to just Perl or just Python? Why not both and Java and Tcl and Ruby
software?

*That* would be interesting. The trouble with such a beast, though, is
simply that it is such a hard problem to put together well. If it was easy,
it would have been done. And the ASF generally prefers to avoid the "dead
SourceForge project" syndrome. We're much more about *communities* than even
the software that is produced. The end result is that a certain bar needs to
be raised to ensure that an ASF project will succeed. That it will have a
healthy community. If there is no code and no community, then there better
be a lot of trust in the (few) developers who are proposing such a beast :-)

mod_python obviously comes with a large user base and a vibrant community.
There are certainly no issues there. Mostly, I'm speaking to the concepts of
"more Python stuff at the ASF."

[ and don't get me wrong; I'm a *huge* Python supporter; Google reports
  "about 12,900" pages for "greg stein python"  :-) ]

Cheers,
-g

-- 
Greg Stein, http://www.lyra.org/

From mbp at samba.org  Wed Aug 28 18:49:43 2002
From: mbp at samba.org (Martin Pool)
Date: Fri Jan  9 22:03:25 2004
Subject: [mod_python] Promoting Python as web application developmentlanguage
In-Reply-To: <20020828014240.A8187@lyra.org>
References: <C0FC22C08B82074A88B50061764157775B97@johnson.mediapulse.net> <15723.65388.98630.19463@magrathea.basistech.com> <20020828014738.B325@eye.neb> <20020828014240.A8187@lyra.org>
Message-ID: <20020828084941.GX2340@samba.org>

On 28 Aug 2002, Greg Stein <gstein@lyra.org> wrote:

> Note that "Apache" is beginning to mean a lot more than just "the Apache
> http server". You've now got projects such as Tomcat, Xerces, and Cocoon all
> under the Apache banner. Arguably, they have nothing to do with the web
> server :-)
> 
> My point is just that people won't arrive at the ASF simply for "how to
> interface to Apache with Python." Minor point to be sure, but hey
> :-)

I see the distinction, but I think at the moment most people new to
Python/Apache will not.  To a novice, Apache is a web server, and
python.apache.org is the obvious place to look.  

I think many people will be in that category and it would be nice to
help them as much as possible without confusion.

> As a result, I would advocate mod_python as part of the Apache HTTP Server
> Project itself. You've got a web server, and (hey!) here is the Python
> connector. I would even advocate that mod_perl, mod_(d)tcl, and mod_php move
> to this same organization (and whack those language specific
> projects).

OK, so python.httpd.apache.org, or (more reasonably?)
apache.org/httpd/python.  At any rate it would be nice if there was
some kind of official pointer rather than making people search.

> Back to the CPAN-like thing. Given the above view, how does this work?
> Well... consider having some kind of "indexing" or "cataloging" project.
> Language neutral. Sure, you could select by language, but why would it be
> limited to just Perl or just Python? Why not both and Java and Tcl and Ruby
> software?

I'm not sure if ASF needs to solve that whole problem.  Just search
Freshmeat or Google or the new GNU software map for "apache python".

> *That* would be interesting. The trouble with such a beast, though, is
> simply that it is such a hard problem to put together well. If it was easy,
> it would have been done. And the ASF generally prefers to avoid the "dead
> SourceForge project" syndrome. We're much more about *communities* than even
> the software that is produced. The end result is that a certain bar needs to
> be raised to ensure that an ASF project will succeed. That it will have a
> healthy community. If there is no code and no community, then there better
> be a lot of trust in the (few) developers who are proposing such a
> beast :-)

I think one of the problems for somebody starting to do web
programming in Python at the moment is that this "editorial control"
is not really present: it's hard to find out what is a good tool to
use.  For example, a web search tends to throw up references to
mod_snake, which on closer inspection turns out to be currently dead.
Similarly for templating.  

It would be nice if the authority of the ASF could help steer people
in the write direction.  I guess it wouldn't want to get into saying
"templating system X is better than Y", but it might at least provide
that minimum bar of activity/functionality.

-- 
Martin 

From vmilitaru at sympatico.ca  Wed Aug 28 05:05:05 2002
From: vmilitaru at sympatico.ca (vio)
Date: Fri Jan  9 22:03:25 2004
Subject: [mod_python] Re: mod_python sample code
In-Reply-To: <783.1030517956@www33.gmx.net>; from peter.bittner@gmx.net on Wed, Aug 28, 2002 at 08:59:16AM +0200
References: <20020827052817.B301@eye.neb> <783.1030517956@www33.gmx.net>
Message-ID: <20020828050505.A468@eye.neb>

Hi Peter,
I didn't do much (any) CGI, but I did something along those lines: a 
combination apache+oracle+mod_python. So maybe I'll describe that a little,
hopefully it will give you some pointers (just replace any references to oracle
with your database of choice.) I hope it's not too verbose for you.
If you don't mind, I'll CC this to the list so others may give you much better 
tips on this topic than I,
(... and hopefully lift up a little the technical vs. non-technical threads :-)
Verbose example coming up:

I'm assuming that you've installed mod_python, and run successfully the
sample code and examples.

So what I did - basically I took the publisher.py file which came with 
my mod_python copy, and modified it to fit my needs. Things like

import ...
# my database settings
import DCOracle2
os.environ['ORACLE_SID'] = '...'
os.environ['ORACLE_HOME'] = '...'
my_connect_string='...'

# a fast function (in C) to parse query string
parse_qsl = apache.parse_qsl

# I also changed all 'req' to 'REQUEST' for better clarity, so keep this
# in mind when you are reading my code (Zope influence).

def handler(REQUEST):
    _REQUEST = REQUEST._req
    _REQUEST.content_type = "text/html"

    # at this point, I want to check if user's browser has sent 
    # a cookie which I'm expecting (is he authenticated or not?)

    ########
    # if No Cookie Sent by Client
    #
    if not _REQUEST.headers_in.has_key("Cookie"):
        #
        # substract 'requested_URL' and 'requested_vars'
        #
        requested_URL = str(_REQUEST.server.server_hostname) + str(_REQUEST.uri)        requested_vars = '' # handle GET requests
        if _REQUEST.headers_in.has_key("content-length"):
            requested_vars = _REQUEST.read(int(_REQUEST.headers_in["content-length"]))
        #
        # save 'requested URL and variables' in a cookie on client
        #  - a cheezy way to do this I guess, but what I want to do is
        #    save the URL the user requested, because I will redirect him
        #    to my 'login' page, and this info will be lost.
        #   
        rURLlen = ('000' + str(len(requested_URL)))[-3:]
        _REQUEST.headers_out.add('Set-Cookie',
'v=L' # my internal token indicating it's a Login cookie
+ rURLlen 
+ requested_URL 
+ requested_vars 
+ '; '
+ 'path=/; ' # without the 'path', Netscape|Lynx won't store the cookie
)
        # now I'm sending the user the login page:
        #
        _REQUEST.headers_out.add('Pragma','no-cache')
        _REQUEST.send_http_header()
        #
        # send login form
        #
        _REQUEST.write(login_form1) # 'login_form1' being simple html
        raise apache.SERVER_RETURN, apache.OK
    #
    # /if No Cookie Sent by Client
    ########

    ########
    # Process Login Form data
    #
    elif str(_REQUEST.uri) == '/login/login_action':
        requested_vars = _REQUEST.read(int(_REQUEST.headers_in["content-length"]        #
        # parse query string
        #
        keep_blank_values=0
        pairs = parse_qsl(requested_vars, keep_blank_values)
        """ 
'pairs' now looks like this (yours will obviously vary, depending on what 
values you had in your form's html code):
[('username', '...'),('password', '...'), ('submit', 'Continue')]

But this is basically how I retrieve all data send by user in my html forms.
        """
        #
        # process 'missing Login field data' --> send 'Data missing' login form
        #
        if len(pairs) != 3:
            _REQUEST.write(login_form2)
            raise apache.SERVER_RETURN, apache.OK
        #
        # put Login data in local vars (for processing)
        #
        items = []
        for item in pairs[:-1]: # skip last item 'submit'
            if item[0] not in ('username','persistent', 'password'):
                _REQUEST.write(login_form2) # --> send 'Data missing' login form                raise apache.SERVER_RETURN, apache.OK
            items.append(item[1])
        username,ac_password = items

        #
        # get database login data
        #  - obviously this code is database-dependent
        #  - 'users' is a table where I've put all my user data
        SQL =  "SELECT * FROM users WHERE username = '%s'" % username
        try:
            connection = DCOracle2.connect(connect_string)
            cursor = connection.cursor()
            cursor.prepare(SQL)
            cursor.execute()
            cursor.arraysize = 20
            db_result = cursor.fetchall()
        except (DCOracle2.DatabaseError,TypeError), e:
            # I am logging the error to some dedicated LOG file
            LOG.write(timestamp + 'SQL: >' + SQL + '<   ' + str(e) + '\n')
            LOG.flush()
            raise apache.SERVER_RETURN, apache.HTTP_INTERNAL_SERVER_ERROR
        if db_result == []:
            _REQUEST.write(login_form3) # --> send 'Wrong Data' login form
            raise apache.SERVER_RETURN, apache.OK
            """ 
'db_result[0]' looks like this:
['user_id','username', 'password', OracleDate("2002-07-10 02:20:31")]

This obviously will depend on your table schema.
            """
        db_userID,db_Username,db_Pword,db_Created = db_result[0]
        #
        # check Login Form data against Database data
        #
        if (password != db_Pword):
            _REQUEST.write(login_form3) # --> send 'Wrong Data' login form
            raise apache.SERVER_RETURN, apache.OK
        #
        # set session in database
        # - here I'm basically repeating the db code of earlier
        #
        #  then I'm created a session token, which I'm sending to the user
        #  and will retrieve using the cookie mechanism (seen earlier).

From davidw at dedasys.com  Tue Aug 27 15:41:34 2002
From: davidw at dedasys.com (David N. Welton)
Date: Fri Jan  9 22:03:25 2004
Subject: [mod_python] Promoting Python as web application developmentlanguage
In-Reply-To: <15723.65388.98630.19463@magrathea.basistech.com>
References: <C0FC22C08B82074A88B50061764157775B97@johnson.mediapulse.net>
	<15723.65388.98630.19463@magrathea.basistech.com>
Message-ID: <87it1vncv5.fsf@dedasys.com>

Tom Emerson <tree@basistech.com> writes:

> Michael C. Neel writes:

> > The other thing I'd like to say is that python.apache.org should
> > just be mod_python.  It servers the same purpose as mod_perl, to
> > allow apache development in python.
 
> Look though at http://tcl.apache.org/, which includes pointers to
> several projects for integrating Tcl into Apache.

They aren't just pointers.  The projects belong to the Apache Software
Foundation, and are all part of the Apache Tcl group.

> I don't see why mod_snake shouldn't be included with
> mod_python. Developers would be coming to python.apache.org to find
> out how to interface to Apache with Python...

That would definitely make sense, if the author of mod_snake agreed to
turn over the project to the ASF.

-- 
David N. Welton
   Consulting: http://www.dedasys.com/
     Personal: http://www.dedasys.com/davidw/
Free Software: http://www.dedasys.com/freesoftware/
   Apache Tcl: http://tcl.apache.org/

From sa at sfsu.edu  Wed Aug 28 16:55:45 2002
From: sa at sfsu.edu (Sean Abrahams)
Date: Fri Jan  9 22:03:25 2004
Subject: [mod_python] PDF Documentation Corrupt?
Message-ID: <741140276070.20020828165545@sfsu.edu>

I've tried to print the mod_python PDF documentation from multiple
different machines running Adobe Acrobat 5.0 reader and keep getting a
"The document could not be printed." error after Page 2. Running
Windows XP. Anyone else having this issue?

Thanks,
--Sean


From kevin at vap.org  Thu Aug 29 13:26:46 2002
From: kevin at vap.org (kevin@vap.org)
Date: Fri Jan  9 22:03:25 2004
Subject: [mod_python] Re: PDF Documentation Corrupt?
Message-ID: <67120-220028429172646629@vap.org>

I tried it (Acro 5.0 & WinXP) and had the same problem.

This seems like a similar problem that I had with the Python 2.1 (or
2.2, I don't remember) PDF files with Acro 5.0 & Win98.  I worked
around it by getting the PS files, finding a Linux box & running the
PS files through PS2PDF.  You lose the hyperlinks, but at least they
were printable on Windows with Acro 5.0.

I don't know if there is a PS version of mod_python.pdf available,
but maybe someone could get you a version that will print under Acro
5.0/Windows.

As an alternative, you could locate Ghostscript for Windows & use the
GSView program to print it (I just tried it on my W2K box & it
worked, but was a bit slower).

-Kevin


>Date: Wed, 28 Aug 2002 16:55:45 -0700
>From: Sean Abrahams <sa@sfsu.edu>
>Reply-To: Sean Abrahams <sa@sfsu.edu>
>Organization: SFSU : Fiscal Affairs Business Systems
>To: mod_python@modpython.org
>Subject: [mod_python] PDF Documentation Corrupt?
>
>I've tried to print the mod_python PDF documentation from multiple
>different machines running Adobe Acrobat 5.0 reader and keep getting 
>a
>"The document could not be printed." error after Page 2. Running
>Windows XP. Anyone else having this issue?
>
>Thanks,
>--Sean



From kai at keliikuli.com  Thu Aug 29 14:40:19 2002
From: kai at keliikuli.com (kai@keliikuli.com)
Date: Fri Jan  9 22:03:25 2004
Subject: [mod_python] mod_python.publisher
Message-ID: <20020829144019.A1020@jki2.com>

Hi All, 
I had an authentication header problem with opera 6.0.2 
on Linux (Slackware 8.1).  I traced it to Lines 250 
and/or 263 of mod_python.publisher...

This line 
s = 'Basic realm = "%s"' % realm
produces this header line ( as sent to client)
WWW-Authenticate: Basic realm = "Members Only"\r\n


opera doesn't like the spaces between realm,=, and "%s"' % realm
it seems happy with.

s = 'Basic realm="%s"' % realm
which produces this header line
WWW-Authenticate: Basic realm = "Members Only"\r\n



I then tested it on a few others with the above change:

MSIE 6.0.2600.0000 ( what's with that version numbering? ): OK
Mozilla 1.0: OK

I'm going to test on some more but being lazy I thought I'd 
ask if anybody knows of any browsers and the versions thereof
which are fussy about the WWW-Authenticate line
Kai

From grisha at modpython.org  Thu Aug 29 15:35:32 2002
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 22:03:25 2004
Subject: [mod_python] Re: PDF Documentation Corrupt?
In-Reply-To: <67120-220028429172646629@vap.org>
Message-ID: <Pine.BSF.4.32.0208291532440.8000-100000@eden.ispol.com>

It seems to be some kind of a problem with pdflatex - there are some
references out on usenet about it. May be I was using a version that was
too old when generating the files. Sorry, I'm not exactly sure how to fix
this one :-(

On Thu, 29 Aug 2002 kevin@vap.org wrote:

> I tried it (Acro 5.0 & WinXP) and had the same problem.
>
> This seems like a similar problem that I had with the Python 2.1 (or
> 2.2, I don't remember) PDF files with Acro 5.0 & Win98.  I worked
> around it by getting the PS files, finding a Linux box & running the
> PS files through PS2PDF.  You lose the hyperlinks, but at least they
> were printable on Windows with Acro 5.0.
>
> I don't know if there is a PS version of mod_python.pdf available,
> but maybe someone could get you a version that will print under Acro
> 5.0/Windows.
>
> As an alternative, you could locate Ghostscript for Windows & use the
> GSView program to print it (I just tried it on my W2K box & it
> worked, but was a bit slower).
>
> -Kevin
>
>
> >Date: Wed, 28 Aug 2002 16:55:45 -0700
> >From: Sean Abrahams <sa@sfsu.edu>
> >Reply-To: Sean Abrahams <sa@sfsu.edu>
> >Organization: SFSU : Fiscal Affairs Business Systems
> >To: mod_python@modpython.org
> >Subject: [mod_python] PDF Documentation Corrupt?
> >
> >I've tried to print the mod_python PDF documentation from multiple
> >different machines running Adobe Acrobat 5.0 reader and keep getting
> >a
> >"The document could not be printed." error after Page 2. Running
> >Windows XP. Anyone else having this issue?
> >
> >Thanks,
> >--Sean
>
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://www.modpython.org/mailman/listinfo/mod_python
>


From woodm at Colorado.EDU  Thu Aug 29 13:51:37 2002
From: woodm at Colorado.EDU (WOOD MATTHEW DAVID)
Date: Fri Jan  9 22:03:25 2004
Subject: [mod_python] It all started with that -DEAPI error...
Message-ID: <Pine.GSO.4.40.0208291337450.7388-100000@ucsu.colorado.edu>

Hello everyone.  I would love to say that I'm not a newbie to mod_python,
but I've never successfully installed it.

My latest attempt is on an OpenBSD-3.1 box.

this server has both python2.1 and python2.2 on it.  (I didn't
particularly want python2.1, but the OpenBSD ports tree decided that I
would get both python versions.  :-) )

Regardless, I uncompressed the mod_python tarball, and went to work,
eventually recieving the standard -DEAPI error:

   > sudo apachectl start
   [Thu Aug 29 13:20:35 2002] [warn] Loaded DSO
   /usr/lib/apache/modules/mod_python.so uses plain Apache 1.3 API, this
   module might crash under EAPI! (please recompile it with -DEAPI)
   /usr/sbin/apachectl start: httpd could not be started


At first, I thought it was the -DEAPI problem that was preventing me from
starting the httpd altogether, but after searching around on the
mod_python webpage, I (think I) fixed that error.  Now, I just can't start
the httpd deamon:

    > sudo apachectl start
    /usr/sbin/apachectl start: httpd could not be started


I can start the deamon when I comment out the "LoadModule
python_module..." line, but that's clearly not the goal.

I'm hoping that I'm not reporting something stupid (other than me), but I
just can't get this to work.  I've asked several of my "better at UNIX
than I am" friends, and they have no ideas either.

What do you guys suggest?

Oh, and by the way, my system is using the standard apache1.3 that comes
"out of the box" with OpenBSD-3.1 .

Again, thanks for any time that you may have to spare.



Matthew D. Wood


From mk at lrn.ru  Thu Aug 29 21:59:50 2002
From: mk at lrn.ru (Michael Krasnovsky)
Date: Fri Jan  9 22:03:25 2004
Subject: [mod_python] PythonInitHandler questions
Message-ID: <20020829215950.66c764ec.mk@lrn.ru>

Hi!

What should return inithandler(req) function? Does PythonInitHandler
work with mod_python.pyblisher? 

When I try use it together, I got 404 error - Handler not found... 

Thanks.

Michael.

From sa at sfsu.edu  Thu Aug 29 13:20:35 2002
From: sa at sfsu.edu (Sean Abrahams)
Date: Fri Jan  9 22:03:25 2004
Subject: [mod_python] It all started with that -DEAPI error...
In-Reply-To: <Pine.GSO.4.40.0208291337450.7388-100000@ucsu.colorado.edu>
References: <Pine.GSO.4.40.0208291337450.7388-100000@ucsu.colorado.edu>
Message-ID: <41213765622.20020829132035@sfsu.edu>

Matthew,

I had the DEAPI error yesterday. Running Debian (level testing).

This is what I did.

"""
./configure

edit src/Makefile and change the OPT= line to read OPT=-DEAPI

then run "make dso"

then run "make install_dso"
"""

Hope this works for you.

--Sean

Thursday, August 29, 2002, 12:51:37 PM, you wrote:

WMD> Hello everyone.  I would love to say that I'm not a newbie to mod_python,
WMD> but I've never successfully installed it.

WMD> My latest attempt is on an OpenBSD-3.1 box.

WMD> this server has both python2.1 and python2.2 on it.  (I didn't
WMD> particularly want python2.1, but the OpenBSD ports tree decided that I
WMD> would get both python versions.  :-) )

WMD> Regardless, I uncompressed the mod_python tarball, and went to work,
WMD> eventually recieving the standard -DEAPI error:

WMD>    > sudo apachectl start
WMD>    [Thu Aug 29 13:20:35 2002] [warn] Loaded DSO
WMD>    /usr/lib/apache/modules/mod_python.so uses plain Apache 1.3 API, this
WMD>    module might crash under EAPI! (please recompile it with -DEAPI)
WMD>    /usr/sbin/apachectl start: httpd could not be started


WMD> At first, I thought it was the -DEAPI problem that was preventing me from
WMD> starting the httpd altogether, but after searching around on the
WMD> mod_python webpage, I (think I) fixed that error.  Now, I just can't start
WMD> the httpd deamon:

WMD>     > sudo apachectl start
WMD>     /usr/sbin/apachectl start: httpd could not be started


WMD> I can start the deamon when I comment out the "LoadModule
WMD> python_module..." line, but that's clearly not the goal.

WMD> I'm hoping that I'm not reporting something stupid (other than me), but I
WMD> just can't get this to work.  I've asked several of my "better at UNIX
WMD> than I am" friends, and they have no ideas either.

WMD> What do you guys suggest?

WMD> Oh, and by the way, my system is using the standard apache1.3 that comes
WMD> "out of the box" with OpenBSD-3.1 .

WMD> Again, thanks for any time that you may have to spare.



WMD> Matthew D. Wood

WMD> _______________________________________________
WMD> Mod_python mailing list
WMD> Mod_python@modpython.org
WMD> http://www.modpython.org/mailman/listinfo/mod_python


From woodm at Colorado.EDU  Thu Aug 29 14:44:44 2002
From: woodm at Colorado.EDU (WOOD MATTHEW DAVID)
Date: Fri Jan  9 22:03:25 2004
Subject: [mod_python] It all started with that -DEAPI error...
In-Reply-To: <41213765622.20020829132035@sfsu.edu>
Message-ID: <Pine.GSO.4.40.0208291444050.27511-100000@ucsu.colorado.edu>

I did not see that.  However, it didn't help me either.  But thanks
regardless.  I really appreciate the help.

Matthew D. Wood, University of Colorado

On Thu, 29 Aug 2002, Sean Abrahams wrote:

> Matthew,
>
> I had the DEAPI error yesterday. Running Debian (level testing).
>
> This is what I did.
>
> """
> ./configure
>
> edit src/Makefile and change the OPT= line to read OPT=-DEAPI
>
> then run "make dso"
>
> then run "make install_dso"
> """
>
> Hope this works for you.
>
> --Sean
>
> Thursday, August 29, 2002, 12:51:37 PM, you wrote:
>
> WMD> Hello everyone.  I would love to say that I'm not a newbie to mod_python,
> WMD> but I've never successfully installed it.
>
> WMD> My latest attempt is on an OpenBSD-3.1 box.
>
> WMD> this server has both python2.1 and python2.2 on it.  (I didn't
> WMD> particularly want python2.1, but the OpenBSD ports tree decided that I
> WMD> would get both python versions.  :-) )
>
> WMD> Regardless, I uncompressed the mod_python tarball, and went to work,
> WMD> eventually recieving the standard -DEAPI error:
>
> WMD>    > sudo apachectl start
> WMD>    [Thu Aug 29 13:20:35 2002] [warn] Loaded DSO
> WMD>    /usr/lib/apache/modules/mod_python.so uses plain Apache 1.3 API, this
> WMD>    module might crash under EAPI! (please recompile it with -DEAPI)
> WMD>    /usr/sbin/apachectl start: httpd could not be started
>
>
> WMD> At first, I thought it was the -DEAPI problem that was preventing me from
> WMD> starting the httpd altogether, but after searching around on the
> WMD> mod_python webpage, I (think I) fixed that error.  Now, I just can't start
> WMD> the httpd deamon:
>
> WMD>     > sudo apachectl start
> WMD>     /usr/sbin/apachectl start: httpd could not be started
>
>
> WMD> I can start the deamon when I comment out the "LoadModule
> WMD> python_module..." line, but that's clearly not the goal.
>
> WMD> I'm hoping that I'm not reporting something stupid (other than me), but I
> WMD> just can't get this to work.  I've asked several of my "better at UNIX
> WMD> than I am" friends, and they have no ideas either.
>
> WMD> What do you guys suggest?
>
> WMD> Oh, and by the way, my system is using the standard apache1.3 that comes
> WMD> "out of the box" with OpenBSD-3.1 .
>
> WMD> Again, thanks for any time that you may have to spare.
>
>
>
> WMD> Matthew D. Wood
>
> WMD> _______________________________________________
> WMD> Mod_python mailing list
> WMD> Mod_python@modpython.org
> WMD> http://www.modpython.org/mailman/listinfo/mod_python
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://www.modpython.org/mailman/listinfo/mod_python
>


From conrad at hep.caltech.edu  Thu Aug 29 13:59:14 2002
From: conrad at hep.caltech.edu (Conrad Steenberg)
Date: Fri Jan  9 22:03:25 2004
Subject: [mod_python] It all started with that -DEAPI error...
In-Reply-To: <Pine.GSO.4.40.0208291444050.27511-100000@ucsu.colorado.edu>
References: <Pine.GSO.4.40.0208291444050.27511-100000@ucsu.colorado.edu>
Message-ID: <1030654755.14778.152.camel@heppc22.cithep.caltech.edu>

Hi Matthew

Another thing you may check is to run 'strace httpd -X' to show where
mod_python looks for libraries etc. It may be that it picks up python
libraries from the wrong python version.

Cheers!

Conrad

On Thu, 2002-08-29 at 13:44, WOOD MATTHEW DAVID wrote:
> I did not see that.  However, it didn't help me either.  But thanks
> regardless.  I really appreciate the help.
> 
> Matthew D. Wood, University of Colorado
> 
> On Thu, 29 Aug 2002, Sean Abrahams wrote:
> 
> > Matthew,
> >
> > I had the DEAPI error yesterday. Running Debian (level testing).
> >
> > This is what I did.
> >
> > """
> > ./configure
> >
> > edit src/Makefile and change the OPT= line to read OPT=-DEAPI
> >
> > then run "make dso"
> >
> > then run "make install_dso"
> > """
> >
> > Hope this works for you.
> >
> > --Sean
> >
> > Thursday, August 29, 2002, 12:51:37 PM, you wrote:
> >
> > WMD> Hello everyone.  I would love to say that I'm not a newbie to mod_python,
> > WMD> but I've never successfully installed it.
> >
> > WMD> My latest attempt is on an OpenBSD-3.1 box.
> >
> > WMD> this server has both python2.1 and python2.2 on it.  (I didn't
> > WMD> particularly want python2.1, but the OpenBSD ports tree decided that I
> > WMD> would get both python versions.  :-) )
> >
> > WMD> Regardless, I uncompressed the mod_python tarball, and went to work,
> > WMD> eventually recieving the standard -DEAPI error:
> >
> > WMD>    > sudo apachectl start
> > WMD>    [Thu Aug 29 13:20:35 2002] [warn] Loaded DSO
> > WMD>    /usr/lib/apache/modules/mod_python.so uses plain Apache 1.3 API, this
> > WMD>    module might crash under EAPI! (please recompile it with -DEAPI)
> > WMD>    /usr/sbin/apachectl start: httpd could not be started
> >
> >
> > WMD> At first, I thought it was the -DEAPI problem that was preventing me from
> > WMD> starting the httpd altogether, but after searching around on the
> > WMD> mod_python webpage, I (think I) fixed that error.  Now, I just can't start
> > WMD> the httpd deamon:
> >
> > WMD>     > sudo apachectl start
> > WMD>     /usr/sbin/apachectl start: httpd could not be started
> >
> >
> > WMD> I can start the deamon when I comment out the "LoadModule
> > WMD> python_module..." line, but that's clearly not the goal.
> >
> > WMD> I'm hoping that I'm not reporting something stupid (other than me), but I
> > WMD> just can't get this to work.  I've asked several of my "better at UNIX
> > WMD> than I am" friends, and they have no ideas either.
> >
> > WMD> What do you guys suggest?
> >
> > WMD> Oh, and by the way, my system is using the standard apache1.3 that comes
> > WMD> "out of the box" with OpenBSD-3.1 .
> >
> > WMD> Again, thanks for any time that you may have to spare.
> >
> >
> >
> > WMD> Matthew D. Wood
> >
> > WMD> _______________________________________________
> > WMD> Mod_python mailing list
> > WMD> Mod_python@modpython.org
> > WMD> http://www.modpython.org/mailman/listinfo/mod_python
> >
> > _______________________________________________
> > Mod_python mailing list
> > Mod_python@modpython.org
> > http://www.modpython.org/mailman/listinfo/mod_python
> >
> 
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://www.modpython.org/mailman/listinfo/mod_python
-- 
*-----------------------------------------*
| Conrad Steenberg                        |
| Caltech, Mail Code 356-48               |
| Pasadena, CA, 91125                     |
| e-mail: conrad@hep.caltech.edu          |
| Tel: (626) 395-8758                     |
*-----------------------------------------*


From ian at veryfresh.com  Thu Aug 29 14:29:40 2002
From: ian at veryfresh.com (Ian Clelland)
Date: Fri Jan  9 22:03:25 2004
Subject: [mod_python] mod_python.publisher
In-Reply-To: <20020829144019.A1020@jki2.com>
References: <20020829144019.A1020@jki2.com>
Message-ID: <20020829212940.GB5501@fullfactor.com>

On Thu, Aug 29, 2002 at 02:40:19PM -0700, kai@keliikuli.com wrote:
> I had an authentication header problem with opera 6.0.2 
> on Linux (Slackware 8.1).  I traced it to Lines 250 
> and/or 263 of mod_python.publisher...

> opera doesn't like the spaces between realm,=, and "%s"' % realm

Interesting; sounds like Opera is broken in this respect. The spec is quite 
clear in that white space is allowed between tokens and separators. (Of 
course, none of the WWW-Authenticate examples ever use any spaces, so I can 
see where this might have been missed.)

> s = 'Basic realm="%s"' % realm
> which produces this header line
> WWW-Authenticate: Basic realm = "Members Only"\r\n

In the spirit of 'be conservative in what you send, and liberal in what you 
accept', I think that this change should be made to the Publisher source, 
at least for the next release. In the meantime, perhaps someone should file 
a bug report with the Opera team about this. They should be accepting the 
header with spaces in the formatting.

> I then tested it on a few others with the above change:
> 
> MSIE 6.0.2600.0000 ( what's with that version numbering? ): OK
> Mozilla 1.0: OK
> 
> I'm going to test on some more but being lazy I thought I'd 
> ask if anybody knows of any browsers and the versions thereof
> which are fussy about the WWW-Authenticate line

I don't think that any other browsers will have problems with the terser 
format 'realm="name"', since that's what Apache uses by default, and I've 
never heard of a browser not understanding Apache's basic authentication.


Ian Clelland
<ian@veryfresh.com>

From peter.bittner at gmx.net  Fri Aug 30 11:39:27 2002
From: peter.bittner at gmx.net (Peter Bittner)
Date: Fri Jan  9 22:03:25 2004
Subject: [mod_python] Code Sample Collection would be helpful
Message-ID: <28957.1030700367@www15.gmx.net>

Hi there Python friends!

I think this has already been proposed once, but still it is a very
important issue:

The mod_python manual is great, sure. It even contains some sample code to
get started. But what is missing for the the (Python-)mod_python community is
a pool of sample code where one can see how different things have been
tackled by different people.

I am sure mod_python would be much more attactive then since it would be
easier to get right into it, to see working code, to adapt working code to one's
needs.

When I say pool I'm thinking of something like http://www.hotscripts.com
(BTW: I'm just seeing there is some python stuff on there already. Though
not really much, and even less about mod_python.) :-(

I'm sure there are a couple of guys out there in the mod_python community
that would be willing to share some of their code (for a GPL-license, as
shareware or freeware) if there were something like a "Sample Code Pool" on the
mod_python website. - Not all the code we all are writing is "for internal use
only" and some among us would be happy to publish their code. (I know from
myself how much useful code in C, PHP and JavaScript I've coded and it's okay
for me to know someone is using it and finding it helpful.)

Anyone out there who finds this idea good enough to be realized?
Who of you would like to help contributing to such a sample code pool?

Peter

-- 
Peter Bittner
mobil: +43/(0)650/4151545
web: http://www.bittner.at.tf - http://beam.to/htmlkurs
mail: peter.bittner@gmx.net

"Free software is like free speech, not free beer" (Richard Stallman)

GMX - Die Kommunikationsplattform im Internet.
http://www.gmx.net


From fabbe at paniq.net  Fri Aug 30 13:54:27 2002
From: fabbe at paniq.net (Fabian Fagerholm)
Date: Fri Jan  9 22:03:25 2004
Subject: [mod_python] Code Sample Collection would be helpful
In-Reply-To: <28957.1030700367@www15.gmx.net>
References: <28957.1030700367@www15.gmx.net>
Message-ID: <1030704868.11126.12.camel@kernel>

On Fri, 2002-08-30 at 12:39, Peter Bittner wrote:
> ...
> Anyone out there who finds this idea good enough to be realized?
> Who of you would like to help contributing to such a sample code pool?

See this thread that recently formed on this very list:
http://www.modpython.org/pipermail/mod_python/2002-August/002369.html
There's been a lot of discussion, so see the archives [0].

That thread spawned several things, one of which is a Python SIG
proposal [1]. The purpose of the SIG would be, among other things, to
create a web site with sample code and articles. The initial proposal
only talks about creation of the site, but in the process, some starting
documents would have to be written and a sample code pool could be built
over time.

The proposal hasn't received very many comments so it's doubtful if it
will happen. Post to the Meta-SIG list [2] if you'd like to comment or
endorse the proposal.

Cheers,
Fabian

[0] http://www.modpython.org/pipermail/mod_python/
[1] http://mail.python.org/pipermail/meta-sig/2002-August/001233.html
[2] http://mail.python.org/mailman/listinfo/meta-sig

-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 240 bytes
Desc: This is a digitally signed message part
Url : http://mailman.modpython.org/pipermail/mod_python/attachments/20020830/eef598e0/attachment-0003.bin
From drh9296 at ritvax.rit.edu  Sat Aug 31 16:18:53 2002
From: drh9296 at ritvax.rit.edu (David Higgs)
Date: Fri Jan  9 22:03:25 2004
Subject: [mod_python] Re: It all started with that -DEAPI error
References: <20020830160001.20573.1501.Mailman@eden.ispol.com>
Message-ID: <3D7124AD.10208@rit.edu>

I run an OpenBSD install here.  Never had any luck w/ the static 
install, but the DSO works fine with a bit of work.

1. You can install just python 2.2.
Change to the 2.2 directory before you 'make; make install'.  You can 
pkg_delete the 2.1 if you like.

2. I never made mod_python work with thread support compiled.  There is 
no 'no_threads' flavor on the ports tree that I can determine.  Download 
the python 2.2 source and manually compile it without threads and 
install to a separate location.  I used /usr/www_python/ as an install 
directory.

3. Change the OPT as shown in the other response to get rid of the DEAPI 
error.  No biggie.

4. Make sure your PATH is setup correctly so when you compile 
mod_python, it finds the non-threaded python binaries first.  See 
http://www.modpython.org/pipermail/mod_python/2002-August/002353.html 
for details.

5. Make a DSO.  I tried for several days to get static working, without 
any luck at a stable httpd.  At some point I should probably provide the 
mailing list with the symptoms, so it can be resolved.

As for your error, check your default httpd log.  Even since apache 
couldn't start up, it will have more details on what went wrong.

--david


