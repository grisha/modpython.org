From bortzmeyer at nic.fr  Wed Dec  3 03:32:53 2008
From: bortzmeyer at nic.fr (Stephane Bortzmeyer)
Date: Wed Dec  3 03:32:59 2008
Subject: [mod_python] Re: Vampire does not support packages?
In-Reply-To: <88e286470811240233h7759d60cna01e2cb584f916d5@mail.gmail.com>
References: <20081120111257.GA27916@nic.fr>
	<88e286470811200343xd4ffdebic4afbb24f0d574ee@mail.gmail.com>
	<20081121082623.GA9072@sources.org>
	<88e286470811231529i62d8c55an7b5b2c333f65e0f9@mail.gmail.com>
	<20081124091054.GA23488@nic.fr>
	<88e286470811240233h7759d60cna01e2cb584f916d5@mail.gmail.com>
Message-ID: <20081203083253.GA3444@nic.fr>

On Mon, Nov 24, 2008 at 09:33:15PM +1100,
 Graham Dumpleton <graham.dumpleton@gmail.com> wrote 
 a message of 62 lines which said:

>  PythonOption mod_python.legacy.importer *

Sorry, same error.


...

  File "/var/www/devel.codev-nic.generic-nic.net/SiteLogic.py", line 2, in <module>
    from codevnic.lib.Config import Config

  File "/usr/lib/python2.5/site-packages/vampire/cache.py", line 518, in load_module
    return importModule(fullname,self.__directory,self.__req)

  File "/usr/lib/python2.5/site-packages/vampire/cache.py", line 179, in importModule
    raise ImportError("Vampire does not support packages.")

ImportError: Vampire does not support packages.



Reminder: my Apache config:

              SetHandler mod_python

              # Tell to Apache that Vampire must handle it               
              PythonHandler vampire

              # Debugging only. Discouraged for a production server               
              PythonDebug On

              # Required, for Cheetah to find modules
              PythonOption VampireImportHooks On

              # Necessary? 2008-12-03
              PythonOption mod_python.legacy.importer *

              # Enable default content handlers. Vampire will find them in
              #  ".vampire".
              PythonOption VampireDefaultHandlers On

              # Like Apache's DirectoryIndex to have nice URLs 
              PythonOption VampireDirectoryIndex index
From christie at knewco.com  Wed Dec  3 07:51:49 2008
From: christie at knewco.com (Reuben A Christie)
Date: Wed Dec  3 07:51:55 2008
Subject: [mod_python] ImportError issue
Message-ID: <493680E5.9040002@knewco.com>

Hi all, I am pretty novice user of mod_python. and there is an issue 
that I am experiencing with mod_python scripts for past 2 days that I am 
not able to solve.

my directory structure is as following,

DocumentRoot :  /usr/local/apache2/htdocs/
i have a directory structure for mod_python scripts under DocumentRoot is,
 
 launch.py
 python_test/p1/test1
 python_test/p2/test2

in apache config, i have added following

<Directory /usr/local/apache/htdocs/python_test >
        AllowOverride All
        Order allow,deny
        allow from all      
        AddHandler mod_python .py
        PythonHandler launch
        PythonDebug On
</Directory>

and launch.py looks like this,

import os.path
from mod_python import apache, Session, util

def handler(req):
        request = os.path.splitext(os.path.basename( req.uri ))[0]
        req.content_type = 'text/plain'
        req.send_http_header()

        status = apache.OK
        if request != None:
                mod = __import__(request)
                if request == "test1":
                        status = mod.handler(req)
         return status
             
basically this script should act as gateway for rest of the python scripts .

when I test it with, http://localhost/python_test/test1.py it does not 
work (i get Not found message) and if I do 
http://localhost/python_test/p1 i get the source code of the script appear.


please help
thanks
-------------- next part --------------
A non-text attachment was scrubbed...
Name: smime.p7s
Type: application/x-pkcs7-signature
Size: 3316 bytes
Desc: S/MIME Cryptographic Signature
Url : http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20081203/04db0be3/smime.bin
From feinahabl at gmx.at  Wed Dec  3 14:16:50 2008
From: feinahabl at gmx.at (feinahabl)
Date: Wed Dec  3 14:17:00 2008
Subject: [mod_python] windows mod_python for python 2.5.2
Message-ID: <4936DB22.3090205@gmx.at>

hello,

i tried to install "mod_python-3.3.1.win32-py2.5-Apache2.2.exe" on my 
winXP machine,
but apache complains: "python_init: Python version mismatch, expected 
'2.5', found '2.5.2'".

could you please compile mod_python with python_2.5.2?
or give me some hints on how to workaround this problem

greetz
From graham.dumpleton at gmail.com  Wed Dec  3 17:04:00 2008
From: graham.dumpleton at gmail.com (Graham Dumpleton)
Date: Wed Dec  3 17:04:04 2008
Subject: [mod_python] windows mod_python for python 2.5.2
In-Reply-To: <4936DB22.3090205@gmx.at>
References: <4936DB22.3090205@gmx.at>
Message-ID: <88e286470812031404v1c539dafide5efa129fd75176@mail.gmail.com>

2008/12/4 feinahabl <feinahabl@gmx.at>:
> hello,
>
> i tried to install "mod_python-3.3.1.win32-py2.5-Apache2.2.exe" on my winXP
> machine,
> but apache complains: "python_init: Python version mismatch, expected '2.5',
> found '2.5.2'".
>
> could you please compile mod_python with python_2.5.2?
> or give me some hints on how to workaround this problem

No workaround is required, it will work fine.

It would only be a problem if it was different for major or minor
revision numbers. No problem when differs only in patchlevel revision.

More information in:

  http://issues.apache.org/jira/browse/MODPYTHON-205

Graham
From graham.dumpleton at gmail.com  Wed Dec  3 17:35:45 2008
From: graham.dumpleton at gmail.com (Graham Dumpleton)
Date: Wed Dec  3 17:35:47 2008
Subject: [mod_python] ImportError issue
In-Reply-To: <493680E5.9040002@knewco.com>
References: <493680E5.9040002@knewco.com>
Message-ID: <88e286470812031435h23e4a717q746ebf96c2c0b49c@mail.gmail.com>

2008/12/3 Reuben A Christie <christie@knewco.com>:
> Hi all, I am pretty novice user of mod_python. and there is an issue that I
> am experiencing with mod_python scripts for past 2 days that I am not able
> to solve.
>
> my directory structure is as following,
>
> DocumentRoot :  /usr/local/apache2/htdocs/
> i have a directory structure for mod_python scripts under DocumentRoot is,
>
> launch.py
> python_test/p1/test1
> python_test/p2/test2
>
> in apache config, i have added following
>
> <Directory /usr/local/apache/htdocs/python_test >
>       AllowOverride All
>       Order allow,deny
>       allow from all             AddHandler mod_python .py
>       PythonHandler launch
>       PythonDebug On
> </Directory>
>
> and launch.py looks like this,
>
> import os.path
> from mod_python import apache, Session, util
>
> def handler(req):
>       request = os.path.splitext(os.path.basename( req.uri ))[0]
>       req.content_type = 'text/plain'
>       req.send_http_header()
>
>       status = apache.OK
>       if request != None:
>               mod = __import__(request)

This is the wrong way of going about it. See below.

>               if request == "test1":
>                       status = mod.handler(req)
>        return status
>            basically this script should act as gateway for rest of the
> python scripts .
>
> when I test it with, http://localhost/python_test/test1.py it does not work
> (i get Not found message) and if I do http://localhost/python_test/p1 i get
> the source code of the script appear.

For configuration as written, the launch.py file is in wrong location.

First off suggest that launch.py not be in htdocs as then someone can
download source code to your handler.

Presuming you are using mod_python 3.3.1 (if not then upgrade), move
the launch.py file elsewhere and then change configuration to use:

  PythonHandler /some/path/launch.py

Where path is location of launch.py outside of htdocs.

Also don't use __import__. You are better off using import_module()
from mod_python. That way you can just supply a path to file to import
and not have to worry about PythonPath and lots of other module
madness. See:

  http://www.modpython.org/live/current/doc-html/pyapi-apmeth.html

Graham
From christie at knewco.com  Thu Dec  4 10:37:57 2008
From: christie at knewco.com (Reuben A Christie)
Date: Thu Dec  4 10:38:06 2008
Subject: [mod_python] ImportError issue
In-Reply-To: <88e286470812031435h23e4a717q746ebf96c2c0b49c@mail.gmail.com>
References: <493680E5.9040002@knewco.com>
	<88e286470812031435h23e4a717q746ebf96c2c0b49c@mail.gmail.com>
Message-ID: <4937F955.4080806@knewco.com>

thanks alot graham. I was able to import the modules the way you showed. 
its little intriguing but I think I ll find a better way by combining 
them into one __init__.py  hopefully that will work
one more question, I keep seeing this warning message on apache log
[warn] Cannot get media type from 'mod_python'
its not causing any issue but I really don't understand why is it appearing


Graham Dumpleton wrote:
> 2008/12/3 Reuben A Christie <christie@knewco.com>:
>   
>> Hi all, I am pretty novice user of mod_python. and there is an issue that I
>> am experiencing with mod_python scripts for past 2 days that I am not able
>> to solve.
>>
>> my directory structure is as following,
>>
>> DocumentRoot :  /usr/local/apache2/htdocs/
>> i have a directory structure for mod_python scripts under DocumentRoot is,
>>
>> launch.py
>> python_test/p1/test1
>> python_test/p2/test2
>>
>> in apache config, i have added following
>>
>> <Directory /usr/local/apache/htdocs/python_test >
>>       AllowOverride All
>>       Order allow,deny
>>       allow from all             AddHandler mod_python .py
>>       PythonHandler launch
>>       PythonDebug On
>> </Directory>
>>
>> and launch.py looks like this,
>>
>> import os.path
>> from mod_python import apache, Session, util
>>
>> def handler(req):
>>       request = os.path.splitext(os.path.basename( req.uri ))[0]
>>       req.content_type = 'text/plain'
>>       req.send_http_header()
>>
>>       status = apache.OK
>>       if request != None:
>>               mod = __import__(request)
>>     
>
> This is the wrong way of going about it. See below.
>
>   
>>               if request == "test1":
>>                       status = mod.handler(req)
>>        return status
>>            basically this script should act as gateway for rest of the
>> python scripts .
>>
>> when I test it with, http://localhost/python_test/test1.py it does not work
>> (i get Not found message) and if I do http://localhost/python_test/p1 i get
>> the source code of the script appear.
>>     
>
> For configuration as written, the launch.py file is in wrong location.
>
> First off suggest that launch.py not be in htdocs as then someone can
> download source code to your handler.
>
> Presuming you are using mod_python 3.3.1 (if not then upgrade), move
> the launch.py file elsewhere and then change configuration to use:
>
>   PythonHandler /some/path/launch.py
>
> Where path is location of launch.py outside of htdocs.
>
> Also don't use __import__. You are better off using import_module()
> from mod_python. That way you can just supply a path to file to import
> and not have to worry about PythonPath and lots of other module
> madness. See:
>
>   http://www.modpython.org/live/current/doc-html/pyapi-apmeth.html
>
> Graham
>
>
>   
-------------- next part --------------
A non-text attachment was scrubbed...
Name: smime.p7s
Type: application/x-pkcs7-signature
Size: 3316 bytes
Desc: S/MIME Cryptographic Signature
Url : http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20081204/b4244260/smime.bin
From graham.dumpleton at gmail.com  Thu Dec  4 16:54:48 2008
From: graham.dumpleton at gmail.com (Graham Dumpleton)
Date: Thu Dec  4 16:54:54 2008
Subject: [mod_python] ImportError issue
In-Reply-To: <4937F955.4080806@knewco.com>
References: <493680E5.9040002@knewco.com>
	<88e286470812031435h23e4a717q746ebf96c2c0b49c@mail.gmail.com>
	<4937F955.4080806@knewco.com>
Message-ID: <88e286470812041354q1f10f802wa107dbbeeb97badb@mail.gmail.com>

2008/12/5 Reuben A Christie <christie@knewco.com>:
> thanks alot graham. I was able to import the modules the way you showed. its
> little intriguing but I think I ll find a better way by combining them into
> one __init__.py  hopefully that will work
> one more question, I keep seeing this warning message on apache log
> [warn] Cannot get media type from 'mod_python'
> its not causing any issue but I really don't understand why is it appearing

What is the content type you are returning or have setup using AddType
directives? It appears it may be malformed. The message is mod_mime
complaining about it.

Graham

> Graham Dumpleton wrote:
>>
>> 2008/12/3 Reuben A Christie <christie@knewco.com>:
>>
>>>
>>> Hi all, I am pretty novice user of mod_python. and there is an issue that
>>> I
>>> am experiencing with mod_python scripts for past 2 days that I am not
>>> able
>>> to solve.
>>>
>>> my directory structure is as following,
>>>
>>> DocumentRoot :  /usr/local/apache2/htdocs/
>>> i have a directory structure for mod_python scripts under DocumentRoot
>>> is,
>>>
>>> launch.py
>>> python_test/p1/test1
>>> python_test/p2/test2
>>>
>>> in apache config, i have added following
>>>
>>> <Directory /usr/local/apache/htdocs/python_test >
>>>      AllowOverride All
>>>      Order allow,deny
>>>      allow from all             AddHandler mod_python .py
>>>      PythonHandler launch
>>>      PythonDebug On
>>> </Directory>
>>>
>>> and launch.py looks like this,
>>>
>>> import os.path
>>> from mod_python import apache, Session, util
>>>
>>> def handler(req):
>>>      request = os.path.splitext(os.path.basename( req.uri ))[0]
>>>      req.content_type = 'text/plain'
>>>      req.send_http_header()
>>>
>>>      status = apache.OK
>>>      if request != None:
>>>              mod = __import__(request)
>>>
>>
>> This is the wrong way of going about it. See below.
>>
>>
>>>
>>>              if request == "test1":
>>>                      status = mod.handler(req)
>>>       return status
>>>           basically this script should act as gateway for rest of the
>>> python scripts .
>>>
>>> when I test it with, http://localhost/python_test/test1.py it does not
>>> work
>>> (i get Not found message) and if I do http://localhost/python_test/p1 i
>>> get
>>> the source code of the script appear.
>>>
>>
>> For configuration as written, the launch.py file is in wrong location.
>>
>> First off suggest that launch.py not be in htdocs as then someone can
>> download source code to your handler.
>>
>> Presuming you are using mod_python 3.3.1 (if not then upgrade), move
>> the launch.py file elsewhere and then change configuration to use:
>>
>>  PythonHandler /some/path/launch.py
>>
>> Where path is location of launch.py outside of htdocs.
>>
>> Also don't use __import__. You are better off using import_module()
>> from mod_python. That way you can just supply a path to file to import
>> and not have to worry about PythonPath and lots of other module
>> madness. See:
>>
>>  http://www.modpython.org/live/current/doc-html/pyapi-apmeth.html
>>
>> Graham
>>
>>
>>
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>
>
From maelvon.hawk at laposte.net  Thu Dec  4 18:10:52 2008
From: maelvon.hawk at laposte.net (Maelvon HAWK)
Date: Thu Dec  4 18:11:00 2008
Subject: [mod_python] PSP returning empty result
Message-ID: <4938637C.4070407@laposte.net>

Thanks Nicholas

I've found this thread, and it give me the answer to my actual bug.

I'm on a Debian 4.0 ETCH, with a downgrade of the libc6 (Because of an 
VIA C7 CPU [1] on a Dedibox server).

Trying and testing to install mod_python with Apache2 & python2.5, my 
PSP file returned a white blank empty page.

And I've got the package "php5-recode" installed, once removed, I throw 
the test.psp file in my browser and the "Hello World!" appears!

RECIPE :
========
Install of "mod_python-3.3.1":
# wget http://ftp.wayne.edu/apache/httpd/modpython/mod_python-3.3.1.tgz
# tar -zxvf mod_python*3.1*
# cd mod_python-3.3.1/
# ./configure --with-apxs=/usr/bin/apxs2 --with-python=/usr/bin/python2.5
Remove php5-recode:
# apt-get remove php5-recode
Put Python2.5 as default in :
/usr/share/python/debian_defaults
# ln -sf /usr/bin/python2.5 /usr/bin/python
Add the psp Handler in apache2.conf
# apache2ctl -t
# apache2ctl -k graceful

Kenavo,

Maelvon

[1] Similar to the Bug 228263 in gentoo :
	http://bugs.gentoo.org/show_bug.cgi?id=228263

From graham.dumpleton at gmail.com  Thu Dec  4 18:18:37 2008
From: graham.dumpleton at gmail.com (Graham Dumpleton)
Date: Thu Dec  4 18:18:41 2008
Subject: [mod_python] PSP returning empty result
In-Reply-To: <4938637C.4070407@laposte.net>
References: <4938637C.4070407@laposte.net>
Message-ID: <88e286470812041518rc95c4bp2c798018ce83f52e@mail.gmail.com>

2008/12/5 Maelvon HAWK <maelvon.hawk@laposte.net>:
> Thanks Nicholas
>
> I've found this thread, and it give me the answer to my actual bug.
>
> I'm on a Debian 4.0 ETCH, with a downgrade of the libc6 (Because of an VIA
> C7 CPU [1] on a Dedibox server).
>
> Trying and testing to install mod_python with Apache2 & python2.5, my PSP
> file returned a white blank empty page.
>
> And I've got the package "php5-recode" installed, once removed, I throw the
> test.psp file in my browser and the "Hello World!" appears!
>
> RECIPE :
> ========
> Install of "mod_python-3.3.1":
> # wget http://ftp.wayne.edu/apache/httpd/modpython/mod_python-3.3.1.tgz
> # tar -zxvf mod_python*3.1*
> # cd mod_python-3.3.1/
> # ./configure --with-apxs=/usr/bin/apxs2 --with-python=/usr/bin/python2.5
> Remove php5-recode:
> # apt-get remove php5-recode
> Put Python2.5 as default in :
> /usr/share/python/debian_defaults
> # ln -sf /usr/bin/python2.5 /usr/bin/python
> Add the psp Handler in apache2.conf
> # apache2ctl -t
> # apache2ctl -k graceful
>
> Kenavo,
>
> Maelvon
>
> [1] Similar to the Bug 228263 in gentoo :
>        http://bugs.gentoo.org/show_bug.cgi?id=228263

Does the Apache error log indicate that the Apache child process
handling the request is crashing with a segmentation fault or similar?

Graham
From graham.dumpleton at gmail.com  Thu Dec  4 18:51:26 2008
From: graham.dumpleton at gmail.com (Graham Dumpleton)
Date: Thu Dec  4 18:51:29 2008
Subject: [mod_python] PSP returning empty result
In-Reply-To: <49386AE8.8000404@laposte.net>
References: <4938637C.4070407@laposte.net>
	<88e286470812041518rc95c4bp2c798018ce83f52e@mail.gmail.com>
	<49386AE8.8000404@laposte.net>
Message-ID: <88e286470812041551l1de42f84iea4dc66d8d6ed505@mail.gmail.com>

2008/12/5 Maelvon HAWK <maelvon.hawk@laposte.net>:
> Graham Dumpleton a ?crit :
>>
>> 2008/12/5 Maelvon HAWK <maelvon.hawk@laposte.net>:
>>>
>>> Thanks Nicholas
>>>
>>> I've found this thread, and it give me the answer to my actual bug.
>>>
>>> I'm on a Debian 4.0 ETCH, with a downgrade of the libc6 (Because of an
>>> VIA
>>> C7 CPU [1] on a Dedibox server).
>>>
>>> Trying and testing to install mod_python with Apache2 & python2.5, my PSP
>>> file returned a white blank empty page.
>>>
>>> And I've got the package "php5-recode" installed, once removed, I throw
>>> the
>>> test.psp file in my browser and the "Hello World!" appears!
>>>
>>> RECIPE :
>>> ========
>>> Install of "mod_python-3.3.1":
>>> # wget http://ftp.wayne.edu/apache/httpd/modpython/mod_python-3.3.1.tgz
>>> # tar -zxvf mod_python*3.1*
>>> # cd mod_python-3.3.1/
>>> # ./configure --with-apxs=/usr/bin/apxs2 --with-python=/usr/bin/python2.5
>>> Remove php5-recode:
>>> # apt-get remove php5-recode
>>> Put Python2.5 as default in :
>>> /usr/share/python/debian_defaults
>>> # ln -sf /usr/bin/python2.5 /usr/bin/python
>>> Add the psp Handler in apache2.conf
>>> # apache2ctl -t
>>> # apache2ctl -k graceful
>>>
>>> Kenavo,
>>>
>>> Maelvon
>>>
>>> [1] Similar to the Bug 228263 in gentoo :
>>>       http://bugs.gentoo.org/show_bug.cgi?id=228263
>>
>> Does the Apache error log indicate that the Apache child process
>> handling the request is crashing with a segmentation fault or similar?
>
> Graham,
>
> I've not focus myself on the /var/log/apache2/error.log files when testing
> to debug the mod_python, just the psp page log. But once (it seems) I've put
> my Debian with a python2.5 as default, I see a lot of :
> [notice] child pid 16944 exit signal Segmentation fault (11)
> [notice] child pid 16945 exit signal Segmentation fault (11)
> lines in the error.log file.
>
> I think thoses Segmentation fault appears in log when python2.5 were
> default, I've tested so many other solutions. I can rewind my system back in
> the last state to test that, watching the apache2 error log, if you want to
> be sure.
>
> But the remove of the php5-recode make the psp running. It's the only thing
> i've modify, except the apache2.conf, the python default and the mod_python
> package.
>
> What's the purpose of php5-recode in fact ?

That is what I was going to ask you? Please try and find out, as
likely what the problem is that that package is requiring a shared
library version/variant which conflicts with version/variant required
by Python. Alternatively it is using a generic name for symbol that
conflicts with something used by another library required by Python or
an extension module.

Please keep followups on the mod_python list by using reply-all.

Graham

From graham.dumpleton at gmail.com  Thu Dec  4 18:58:55 2008
From: graham.dumpleton at gmail.com (Graham Dumpleton)
Date: Thu Dec  4 18:58:57 2008
Subject: [mod_python] PSP returning empty result
In-Reply-To: <88e286470812041551l1de42f84iea4dc66d8d6ed505@mail.gmail.com>
References: <4938637C.4070407@laposte.net>
	<88e286470812041518rc95c4bp2c798018ce83f52e@mail.gmail.com>
	<49386AE8.8000404@laposte.net>
	<88e286470812041551l1de42f84iea4dc66d8d6ed505@mail.gmail.com>
Message-ID: <88e286470812041558j23d1d795y51f60062cad0f6c1@mail.gmail.com>

2008/12/5 Graham Dumpleton <graham.dumpleton@gmail.com>:
>> But the remove of the php5-recode make the psp running. It's the only thing
>> i've modify, except the apache2.conf, the python default and the mod_python
>> package.
>>
>> What's the purpose of php5-recode in fact ?
>
> That is what I was going to ask you? Please try and find out, as
> likely what the problem is that that package is requiring a shared
> library version/variant which conflicts with version/variant required
> by Python. Alternatively it is using a generic name for symbol that
> conflicts with something used by another library required by Python or
> an extension module.

See:

  http://au2.php.net/manual/en/recode.installation.php

Looks like that package has a known history of causing problems due to
it using generic symbol names that clash with other packages.

If disabling it solves the problems and you don't need that PHP
module, probably all you can do.

Graham
From bozhin.zafirov at gtvbg.tv  Fri Dec  5 06:46:32 2008
From: bozhin.zafirov at gtvbg.tv (Bozhin Zafirov)
Date: Fri Dec  5 06:46:53 2008
Subject: [mod_python] Future of mod_python
Message-ID: <49391498.3060209@gtvbg.tv>

Hi List, :-)

Having in mind that the latest version of mod_python is 3.3.1, released 
Feb-14-2007 (according to modpython.org) - this makes the project to 
seem a bit stalled. Anyone with more inside look on this matter?
Will it continue to develop, or is it doomed to die?
Also, now that python 3.0 is finally released (2 days ago, cheers!), 
will there be any efforts to make a new port of mod_python + python3?
I would be very happy to see it going forward, it's a really wonderful 
piece of software!

Best wishes to all:
Bozhin Zafirov
From maelvon.hawk at laposte.net  Fri Dec  5 07:35:17 2008
From: maelvon.hawk at laposte.net (Maelvon HAWK)
Date: Fri Dec  5 07:35:26 2008
Subject: [mod_python] PSP returning empty result
In-Reply-To: <88e286470812041551l1de42f84iea4dc66d8d6ed505@mail.gmail.com>
References: <4938637C.4070407@laposte.net>	
	<88e286470812041518rc95c4bp2c798018ce83f52e@mail.gmail.com>	
	<49386AE8.8000404@laposte.net>
	<88e286470812041551l1de42f84iea4dc66d8d6ed505@mail.gmail.com>
Message-ID: <49392005.7010008@laposte.net>

Graham Dumpleton a ?crit :
> 2008/12/5 Maelvon HAWK <maelvon.hawk@laposte.net>:
>> Graham Dumpleton a ?crit :
>>> 2008/12/5 Maelvon HAWK <maelvon.hawk@laposte.net>:
>>>> Thanks Nicholas
>>>>
>>>> I've found this thread, and it give me the answer to my actual bug.
>>>>
>>>> I'm on a Debian 4.0 ETCH, with a downgrade of the libc6 (Because of an
>>>> VIA
>>>> C7 CPU [1] on a Dedibox server).
>>>>
>>>> Trying and testing to install mod_python with Apache2 & python2.5, my PSP
>>>> file returned a white blank empty page.
>>>>
>>>> And I've got the package "php5-recode" installed, once removed, I throw
>>>> the
>>>> test.psp file in my browser and the "Hello World!" appears!
>>>>
>>>> RECIPE :
>>>> ========
>>>> Install of "mod_python-3.3.1":
>>>> # wget http://ftp.wayne.edu/apache/httpd/modpython/mod_python-3.3.1.tgz
>>>> # tar -zxvf mod_python*3.1*
>>>> # cd mod_python-3.3.1/
>>>> # ./configure --with-apxs=/usr/bin/apxs2 --with-python=/usr/bin/python2.5
>>>> Remove php5-recode:
>>>> # apt-get remove php5-recode
>>>> Put Python2.5 as default in :
>>>> /usr/share/python/debian_defaults
>>>> # ln -sf /usr/bin/python2.5 /usr/bin/python
>>>> Add the psp Handler in apache2.conf
>>>> # apache2ctl -t
>>>> # apache2ctl -k graceful
>>>>
>>>> Kenavo,
>>>>
>>>> Maelvon
>>>>
>>>> [1] Similar to the Bug 228263 in gentoo :
>>>>       http://bugs.gentoo.org/show_bug.cgi?id=228263
>>> Does the Apache error log indicate that the Apache child process
>>> handling the request is crashing with a segmentation fault or similar?
>> Graham,
>>
>> I've not focus myself on the /var/log/apache2/error.log files when testing
>> to debug the mod_python, just the psp page log. But once (it seems) I've put
>> my Debian with a python2.5 as default, I see a lot of :
>> [notice] child pid 16944 exit signal Segmentation fault (11)
>> [notice] child pid 16945 exit signal Segmentation fault (11)
>> lines in the error.log file.
>>
>> I think thoses Segmentation fault appears in log when python2.5 were
>> default, I've tested so many other solutions. I can rewind my system back in
>> the last state to test that, watching the apache2 error log, if you want to
>> be sure.
>>
>> But the remove of the php5-recode make the psp running. It's the only thing
>> i've modify, except the apache2.conf, the python default and the mod_python
>> package.
>>
>> What's the purpose of php5-recode in fact ?
> 
> That is what I was going to ask you? Please try and find out, as
> likely what the problem is that that package is requiring a shared
> library version/variant which conflicts with version/variant required
> by Python. Alternatively it is using a generic name for symbol that
> conflicts with something used by another library required by Python or
> an extension module.
> 
> Please keep followups on the mod_python list by using reply-all.
> 

Graham

So I've done the test.

With Python2.5 as default, php5-recode package a white blank page for 
the file "test.psp" like this :
"""
<html>
     <body>
         <h1><% req.write("Hello!") %></h1>
     </body>
</html>
"""
With Python2.5 as default, without php5-recode package the PSP file 
return *Hello!*

No traces in the log of Segmentation fault in the time I've made the tests.

###
[Fri Dec 05 13:26:43 2008] [notice] Apache configured -- resuming normal 
operations
[Fri Dec 05 13:27:10 2008] [notice] caught SIGTERM, shutting down
[Fri Dec 05 13:27:13 2008] [notice] mod_python: Creating 8 session 
mutexes based on 150 max processes and 0 max threads.
[Fri Dec 05 13:27:13 2008] [notice] mod_python: using mutex_directory /tmp
[Fri Dec 05 13:27:13 2008] [notice] Apache configured -- resuming normal 
operations
[Fri Dec 05 13:27:54 2008] [notice] caught SIGTERM, shutting down
[Fri Dec 05 13:27:57 2008] [notice] mod_python: Creating 8 session 
mutexes based on 150 max processes and 0 max threads.
[Fri Dec 05 13:27:57 2008] [notice] mod_python: using mutex_directory /tmp
PHP Warning:  PHP Startup: Unable to load dynamic library 
'/usr/lib/php5/20060613+lfs/recode.so' - 
/usr/lib/php5/20060613+lfs/recode.so: cannot open shared object file: No 
such file or directory in Unknown on line 0
[Fri Dec 05 13:27:57 2008] [notice] Apache configured -- resuming normal 
operations
###

Don't know what to think.

I'll try to update my kernel and the libc6 to see what happens.

Maelvon

From maelvon.hawk at laposte.net  Fri Dec  5 08:00:35 2008
From: maelvon.hawk at laposte.net (Maelvon HAWK)
Date: Fri Dec  5 08:00:44 2008
Subject: [mod_python] PSP returning empty result
In-Reply-To: <88e286470812041558j23d1d795y51f60062cad0f6c1@mail.gmail.com>
References: <4938637C.4070407@laposte.net>	
	<88e286470812041518rc95c4bp2c798018ce83f52e@mail.gmail.com>	
	<49386AE8.8000404@laposte.net>	
	<88e286470812041551l1de42f84iea4dc66d8d6ed505@mail.gmail.com>
	<88e286470812041558j23d1d795y51f60062cad0f6c1@mail.gmail.com>
Message-ID: <493925F3.1040706@laposte.net>

Graham Dumpleton a ?crit :
> 2008/12/5 Graham Dumpleton <graham.dumpleton@gmail.com>:
>>> But the remove of the php5-recode make the psp running. It's the only thing
>>> i've modify, except the apache2.conf, the python default and the mod_python
>>> package.
>>>
>>> What's the purpose of php5-recode in fact ?
>> That is what I was going to ask you? Please try and find out, as
>> likely what the problem is that that package is requiring a shared
>> library version/variant which conflicts with version/variant required
>> by Python. Alternatively it is using a generic name for symbol that
>> conflicts with something used by another library required by Python or
>> an extension module.
> 
> See:
> 
>   http://au2.php.net/manual/en/recode.installation.php
> 
> Looks like that package has a known history of causing problems due to
> it using generic symbol names that clash with other packages.
> 
> If disabling it solves the problems and you don't need that PHP
> module, probably all you can do.
> 

Graham

Upgraded my kernel (linux-image-2.6.24-etchnhalf.1-686) and the libc6 
(2.3.6.ds1-13etch), even with the php5-recode installed the PSP test 
file works. So it was my libc6 downgrade who put me in, I think.

Thanks,

Maelvon

From christie at knewco.com  Fri Dec  5 08:08:08 2008
From: christie at knewco.com (Reuben A Christie)
Date: Fri Dec  5 08:08:19 2008
Subject: [mod_python] ImportError issue
In-Reply-To: <88e286470812041354q1f10f802wa107dbbeeb97badb@mail.gmail.com>
References: <493680E5.9040002@knewco.com>
	<88e286470812031435h23e4a717q746ebf96c2c0b49c@mail.gmail.com>
	<4937F955.4080806@knewco.com>
	<88e286470812041354q1f10f802wa107dbbeeb97badb@mail.gmail.com>
Message-ID: <493927B8.3040609@knewco.com>


In the python script itself, i set the content type to text/plain , I 
have not set any AddType directive in apache config

Graham Dumpleton wrote:
> 2008/12/5 Reuben A Christie <christie@knewco.com>:
>   
>> thanks alot graham. I was able to import the modules the way you showed. its
>> little intriguing but I think I ll find a better way by combining them into
>> one __init__.py  hopefully that will work
>> one more question, I keep seeing this warning message on apache log
>> [warn] Cannot get media type from 'mod_python'
>> its not causing any issue but I really don't understand why is it appearing
>>     
>
> What is the content type you are returning or have setup using AddType
> directives? It appears it may be malformed. The message is mod_mime
> complaining about it.
>
> Graham
>
>   
>> Graham Dumpleton wrote:
>>     
>>> 2008/12/3 Reuben A Christie <christie@knewco.com>:
>>>
>>>       
>>>> Hi all, I am pretty novice user of mod_python. and there is an issue that
>>>> I
>>>> am experiencing with mod_python scripts for past 2 days that I am not
>>>> able
>>>> to solve.
>>>>
>>>> my directory structure is as following,
>>>>
>>>> DocumentRoot :  /usr/local/apache2/htdocs/
>>>> i have a directory structure for mod_python scripts under DocumentRoot
>>>> is,
>>>>
>>>> launch.py
>>>> python_test/p1/test1
>>>> python_test/p2/test2
>>>>
>>>> in apache config, i have added following
>>>>
>>>> <Directory /usr/local/apache/htdocs/python_test >
>>>>      AllowOverride All
>>>>      Order allow,deny
>>>>      allow from all             AddHandler mod_python .py
>>>>      PythonHandler launch
>>>>      PythonDebug On
>>>> </Directory>
>>>>
>>>> and launch.py looks like this,
>>>>
>>>> import os.path
>>>> from mod_python import apache, Session, util
>>>>
>>>> def handler(req):
>>>>      request = os.path.splitext(os.path.basename( req.uri ))[0]
>>>>      req.content_type = 'text/plain'
>>>>      req.send_http_header()
>>>>
>>>>      status = apache.OK
>>>>      if request != None:
>>>>              mod = __import__(request)
>>>>
>>>>         
>>> This is the wrong way of going about it. See below.
>>>
>>>
>>>       
>>>>              if request == "test1":
>>>>                      status = mod.handler(req)
>>>>       return status
>>>>           basically this script should act as gateway for rest of the
>>>> python scripts .
>>>>
>>>> when I test it with, http://localhost/python_test/test1.py it does not
>>>> work
>>>> (i get Not found message) and if I do http://localhost/python_test/p1 i
>>>> get
>>>> the source code of the script appear.
>>>>
>>>>         
>>> For configuration as written, the launch.py file is in wrong location.
>>>
>>> First off suggest that launch.py not be in htdocs as then someone can
>>> download source code to your handler.
>>>
>>> Presuming you are using mod_python 3.3.1 (if not then upgrade), move
>>> the launch.py file elsewhere and then change configuration to use:
>>>
>>>  PythonHandler /some/path/launch.py
>>>
>>> Where path is location of launch.py outside of htdocs.
>>>
>>> Also don't use __import__. You are better off using import_module()
>>> from mod_python. That way you can just supply a path to file to import
>>> and not have to worry about PythonPath and lots of other module
>>> madness. See:
>>>
>>>  http://www.modpython.org/live/current/doc-html/pyapi-apmeth.html
>>>
>>> Graham
>>>
>>>
>>>
>>>       
>> _______________________________________________
>> Mod_python mailing list
>> Mod_python@modpython.org
>> http://mailman.modpython.org/mailman/listinfo/mod_python
>>
>>
>>     
>
>
>   
-------------- next part --------------
A non-text attachment was scrubbed...
Name: smime.p7s
Type: application/x-pkcs7-signature
Size: 3316 bytes
Desc: S/MIME Cryptographic Signature
Url : http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20081205/62d2456a/smime.bin
From maelvon.hawk at laposte.net  Fri Dec  5 12:06:16 2008
From: maelvon.hawk at laposte.net (Maelvon HAWK)
Date: Fri Dec  5 12:06:29 2008
Subject: [mod_python] PSP returning empty result
In-Reply-To: <493925F3.1040706@laposte.net>
References: <4938637C.4070407@laposte.net>		<88e286470812041518rc95c4bp2c798018ce83f52e@mail.gmail.com>		<49386AE8.8000404@laposte.net>		<88e286470812041551l1de42f84iea4dc66d8d6ed505@mail.gmail.com>	<88e286470812041558j23d1d795y51f60062cad0f6c1@mail.gmail.com>
	<493925F3.1040706@laposte.net>
Message-ID: <49395F88.80101@laposte.net>

Maelvon HAWK a ?crit :
> 
> Graham Dumpleton a ?crit :
>> 2008/12/5 Graham Dumpleton <graham.dumpleton@gmail.com>:
>>>> But the remove of the php5-recode make the psp running. It's the 
>>>> only thing
>>>> i've modify, except the apache2.conf, the python default and the 
>>>> mod_python
>>>> package.
>>>>
>>>> What's the purpose of php5-recode in fact ?
>>> That is what I was going to ask you? Please try and find out, as
>>> likely what the problem is that that package is requiring a shared
>>> library version/variant which conflicts with version/variant required
>>> by Python. Alternatively it is using a generic name for symbol that
>>> conflicts with something used by another library required by Python or
>>> an extension module.
>>
>> See:
>>
>>   http://au2.php.net/manual/en/recode.installation.php
>>
>> Looks like that package has a known history of causing problems due to
>> it using generic symbol names that clash with other packages.
>>
>> If disabling it solves the problems and you don't need that PHP
>> module, probably all you can do.
>>
> 
> Graham
> 
> Upgraded my kernel (linux-image-2.6.24-etchnhalf.1-686) and the libc6 
> (2.3.6.ds1-13etch), even with the php5-recode installed the PSP test 
> file works. So it was my libc6 downgrade who put me in, I think.

In fact it does not work with php5-recode installed. I figure it now. 
Perhap's an error in the apache reloading command. But in testing psp, 
it suddendly stop working, and I need to remove the php5-recode to throw 
again my psp file.
No clues in the apache2 log. Strange...

Malevon

From yves.moisan at boreal-is.com  Fri Dec  5 14:50:46 2008
From: yves.moisan at boreal-is.com (Yves Moisan)
Date: Fri Dec  5 14:50:53 2008
Subject: [mod_python] Intermittent stops
Message-ID: <1228506646.6327.77.camel@dell-desktop.example.com>

Hi All,

I'm having issues with one particular instance of Apache 2.0.54 on
win2003 where mod_python stops working at some point.  The log file
shows :

make_obcallback: could not import mod_python.apache.\n
[Fri Dec 05 17:20:56 2008] [error] python_handler: no interpreter
callback found.
[Fri Dec 05 17:20:56 2008] [error] [client x.x.x.x] python_handler:
Can't get/create interpreter., 

Problem is whe I start/restart Apache mod_python gets loaded properly
and works for some amount of time :

mod_python: Creating 8 session mutexes based on 0 max processes and 250
max threads.
[Fri Dec 05 17:24:57 2008] [notice] Apache/2.0.54 (Win32)
mod_python/3.2.7 Python/2.4.4 PHP/5.2.1 configured -- resuming normal
operations

I have a similar set up on another machine (an XP machine) and
mod_python never stops working.  I suspect some PHP error mixes things
up in the Apache environment, but I'm not sure.  Are there known issues
for win2003 ?  

TIA,

Yves Moisan

From graham.dumpleton at gmail.com  Fri Dec  5 17:33:42 2008
From: graham.dumpleton at gmail.com (Graham Dumpleton)
Date: Fri Dec  5 17:33:45 2008
Subject: [mod_python] ImportError issue
In-Reply-To: <493927B8.3040609@knewco.com>
References: <493680E5.9040002@knewco.com>
	<88e286470812031435h23e4a717q746ebf96c2c0b49c@mail.gmail.com>
	<4937F955.4080806@knewco.com>
	<88e286470812041354q1f10f802wa107dbbeeb97badb@mail.gmail.com>
	<493927B8.3040609@knewco.com>
Message-ID: <88e286470812051433h6db4a2begb5b17f8316cc497c@mail.gmail.com>

2008/12/6 Reuben A Christie <christie@knewco.com>:
>
> In the python script itself, i set the content type to text/plain , I have
> not set any AddType directive in apache config

Please post code snippet showing how this is being done and what
handler you are using? Ie., custom handler, mod_python.publisher etc.

What AddHandler directives do you have set in Apache configuration?

Have you setup any output filters in Apache, ie., AddOutputFilter* directives?

Graham

> Graham Dumpleton wrote:
>>
>> 2008/12/5 Reuben A Christie <christie@knewco.com>:
>>
>>>
>>> thanks alot graham. I was able to import the modules the way you showed.
>>> its
>>> little intriguing but I think I ll find a better way by combining them
>>> into
>>> one __init__.py  hopefully that will work
>>> one more question, I keep seeing this warning message on apache log
>>> [warn] Cannot get media type from 'mod_python'
>>> its not causing any issue but I really don't understand why is it
>>> appearing
>>>
>>
>> What is the content type you are returning or have setup using AddType
>> directives? It appears it may be malformed. The message is mod_mime
>> complaining about it.
>>
>> Graham
>>
>>
>>>
>>> Graham Dumpleton wrote:
>>>
>>>>
>>>> 2008/12/3 Reuben A Christie <christie@knewco.com>:
>>>>
>>>>
>>>>>
>>>>> Hi all, I am pretty novice user of mod_python. and there is an issue
>>>>> that
>>>>> I
>>>>> am experiencing with mod_python scripts for past 2 days that I am not
>>>>> able
>>>>> to solve.
>>>>>
>>>>> my directory structure is as following,
>>>>>
>>>>> DocumentRoot :  /usr/local/apache2/htdocs/
>>>>> i have a directory structure for mod_python scripts under DocumentRoot
>>>>> is,
>>>>>
>>>>> launch.py
>>>>> python_test/p1/test1
>>>>> python_test/p2/test2
>>>>>
>>>>> in apache config, i have added following
>>>>>
>>>>> <Directory /usr/local/apache/htdocs/python_test >
>>>>>     AllowOverride All
>>>>>     Order allow,deny
>>>>>     allow from all             AddHandler mod_python .py
>>>>>     PythonHandler launch
>>>>>     PythonDebug On
>>>>> </Directory>
>>>>>
>>>>> and launch.py looks like this,
>>>>>
>>>>> import os.path
>>>>> from mod_python import apache, Session, util
>>>>>
>>>>> def handler(req):
>>>>>     request = os.path.splitext(os.path.basename( req.uri ))[0]
>>>>>     req.content_type = 'text/plain'
>>>>>     req.send_http_header()
>>>>>
>>>>>     status = apache.OK
>>>>>     if request != None:
>>>>>             mod = __import__(request)
>>>>>
>>>>>
>>>>
>>>> This is the wrong way of going about it. See below.
>>>>
>>>>
>>>>
>>>>>
>>>>>             if request == "test1":
>>>>>                     status = mod.handler(req)
>>>>>      return status
>>>>>          basically this script should act as gateway for rest of the
>>>>> python scripts .
>>>>>
>>>>> when I test it with, http://localhost/python_test/test1.py it does not
>>>>> work
>>>>> (i get Not found message) and if I do http://localhost/python_test/p1 i
>>>>> get
>>>>> the source code of the script appear.
>>>>>
>>>>>
>>>>
>>>> For configuration as written, the launch.py file is in wrong location.
>>>>
>>>> First off suggest that launch.py not be in htdocs as then someone can
>>>> download source code to your handler.
>>>>
>>>> Presuming you are using mod_python 3.3.1 (if not then upgrade), move
>>>> the launch.py file elsewhere and then change configuration to use:
>>>>
>>>>  PythonHandler /some/path/launch.py
>>>>
>>>> Where path is location of launch.py outside of htdocs.
>>>>
>>>> Also don't use __import__. You are better off using import_module()
>>>> from mod_python. That way you can just supply a path to file to import
>>>> and not have to worry about PythonPath and lots of other module
>>>> madness. See:
>>>>
>>>>  http://www.modpython.org/live/current/doc-html/pyapi-apmeth.html
>>>>
>>>> Graham
>>>>
>>>>
>>>>
>>>>
>>>
>>> _______________________________________________
>>> Mod_python mailing list
>>> Mod_python@modpython.org
>>> http://mailman.modpython.org/mailman/listinfo/mod_python
>>>
>>>
>>>
>>
>>
>>
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>
>
From graham.dumpleton at gmail.com  Fri Dec  5 17:36:45 2008
From: graham.dumpleton at gmail.com (Graham Dumpleton)
Date: Fri Dec  5 17:36:47 2008
Subject: [mod_python] PSP returning empty result
In-Reply-To: <49395F88.80101@laposte.net>
References: <4938637C.4070407@laposte.net>
	<88e286470812041518rc95c4bp2c798018ce83f52e@mail.gmail.com>
	<49386AE8.8000404@laposte.net>
	<88e286470812041551l1de42f84iea4dc66d8d6ed505@mail.gmail.com>
	<88e286470812041558j23d1d795y51f60062cad0f6c1@mail.gmail.com>
	<493925F3.1040706@laposte.net> <49395F88.80101@laposte.net>
Message-ID: <88e286470812051436w53d3ac87p33bf949565f42c4c@mail.gmail.com>

As I said, that web page seemed to indicate that php-recode has a
history of causing conflicts, so best just not to load it if you do
not need it.

Always a good idea to do a full Apache stop and start if changing what
Apache modules are loaded, or in turn what the Apache modules are
loading in Apache parent process, eg, as PHP does, is changing.

Graham

2008/12/6 Maelvon HAWK <maelvon.hawk@laposte.net>:
> Maelvon HAWK a ?crit :
>>
>> Graham Dumpleton a ?crit :
>>>
>>> 2008/12/5 Graham Dumpleton <graham.dumpleton@gmail.com>:
>>>>>
>>>>> But the remove of the php5-recode make the psp running. It's the only
>>>>> thing
>>>>> i've modify, except the apache2.conf, the python default and the
>>>>> mod_python
>>>>> package.
>>>>>
>>>>> What's the purpose of php5-recode in fact ?
>>>>
>>>> That is what I was going to ask you? Please try and find out, as
>>>> likely what the problem is that that package is requiring a shared
>>>> library version/variant which conflicts with version/variant required
>>>> by Python. Alternatively it is using a generic name for symbol that
>>>> conflicts with something used by another library required by Python or
>>>> an extension module.
>>>
>>> See:
>>>
>>>  http://au2.php.net/manual/en/recode.installation.php
>>>
>>> Looks like that package has a known history of causing problems due to
>>> it using generic symbol names that clash with other packages.
>>>
>>> If disabling it solves the problems and you don't need that PHP
>>> module, probably all you can do.
>>>
>>
>> Graham
>>
>> Upgraded my kernel (linux-image-2.6.24-etchnhalf.1-686) and the libc6
>> (2.3.6.ds1-13etch), even with the php5-recode installed the PSP test file
>> works. So it was my libc6 downgrade who put me in, I think.
>
> In fact it does not work with php5-recode installed. I figure it now.
> Perhap's an error in the apache reloading command. But in testing psp, it
> suddendly stop working, and I need to remove the php5-recode to throw again
> my psp file.
> No clues in the apache2 log. Strange...
>
> Malevon
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>

From graham.dumpleton at gmail.com  Fri Dec  5 17:39:15 2008
From: graham.dumpleton at gmail.com (Graham Dumpleton)
Date: Fri Dec  5 17:39:17 2008
Subject: [mod_python] Intermittent stops
In-Reply-To: <1228506646.6327.77.camel@dell-desktop.example.com>
References: <1228506646.6327.77.camel@dell-desktop.example.com>
Message-ID: <88e286470812051439n4f4c1c45uc28c2599f46bee7a@mail.gmail.com>

2008/12/6 Yves Moisan <yves.moisan@boreal-is.com>:
> Hi All,
>
> I'm having issues with one particular instance of Apache 2.0.54 on
> win2003 where mod_python stops working at some point.  The log file
> shows :
>
> make_obcallback: could not import mod_python.apache.\n
> [Fri Dec 05 17:20:56 2008] [error] python_handler: no interpreter
> callback found.
> [Fri Dec 05 17:20:56 2008] [error] [client x.x.x.x] python_handler:
> Can't get/create interpreter.,
>
> Problem is whe I start/restart Apache mod_python gets loaded properly
> and works for some amount of time :
>
> mod_python: Creating 8 session mutexes based on 0 max processes and 250
> max threads.
> [Fri Dec 05 17:24:57 2008] [notice] Apache/2.0.54 (Win32)
> mod_python/3.2.7 Python/2.4.4 PHP/5.2.1 configured -- resuming normal
> operations
>
> I have a similar set up on another machine (an XP machine) and
> mod_python never stops working.  I suspect some PHP error mixes things
> up in the Apache environment, but I'm not sure.  Are there known issues
> for win2003 ?

This is more likely to be caused by there being multiple Python
installations on your system and as some point it is find DLL for one
other than the one that mod_python was installed for.

You may not have explicitly installed the additional copies, instead
it may be a local Python installation in some third party application
bundle.

Search your system for all instances of PYTHON*.DLL. Ensure that the
environment of Apache finds the directory for DLL corresponding to you
main Python installation, for which mod_python is installed, before
any others.

Graham
From christie at knewco.com  Fri Dec  5 17:44:03 2008
From: christie at knewco.com (Reuben A Christie)
Date: Fri Dec  5 17:44:09 2008
Subject: [mod_python] ImportError issue
In-Reply-To: <88e286470812051433h6db4a2begb5b17f8316cc497c@mail.gmail.com>
References: <493680E5.9040002@knewco.com>
	<88e286470812031435h23e4a717q746ebf96c2c0b49c@mail.gmail.com>
	<4937F955.4080806@knewco.com>
	<88e286470812041354q1f10f802wa107dbbeeb97badb@mail.gmail.com>
	<493927B8.3040609@knewco.com>
	<88e286470812051433h6db4a2begb5b17f8316cc497c@mail.gmail.com>
Message-ID: <4939AEB3.4090209@knewco.com>

this is how my apache config looks like
<Directory /usr/local/apache/htdocs/linker_python >
        Options  ExecCGI -MultiViews FollowSymLinks
        AllowOverride All
        Order allow,deny
        allow from all
        AddHandler mod_python .py
        PythonHandler launch
        PythonDebug On
        AddType text/plain
</Directory>

and in the code i do following

req.send_http_header()
req.content_type = 'text/xml' (it does not matter what do i set content 
type, even if i change this to text/plain or text/html does not make any 
differece)
req.write("<response>hello world</response>")


Graham Dumpleton wrote:
> 2008/12/6 Reuben A Christie <christie@knewco.com>:
>   
>> In the python script itself, i set the content type to text/plain , I have
>> not set any AddType directive in apache config
>>     
>
> Please post code snippet showing how this is being done and what
> handler you are using? Ie., custom handler, mod_python.publisher etc.
>
> What AddHandler directives do you have set in Apache configuration?
>
> Have you setup any output filters in Apache, ie., AddOutputFilter* directives?
>
> Graham
>
>   
>> Graham Dumpleton wrote:
>>     
>>> 2008/12/5 Reuben A Christie <christie@knewco.com>:
>>>
>>>       
>>>> thanks alot graham. I was able to import the modules the way you showed.
>>>> its
>>>> little intriguing but I think I ll find a better way by combining them
>>>> into
>>>> one __init__.py  hopefully that will work
>>>> one more question, I keep seeing this warning message on apache log
>>>> [warn] Cannot get media type from 'mod_python'
>>>> its not causing any issue but I really don't understand why is it
>>>> appearing
>>>>
>>>>         
>>> What is the content type you are returning or have setup using AddType
>>> directives? It appears it may be malformed. The message is mod_mime
>>> complaining about it.
>>>
>>> Graham
>>>
>>>
>>>       
>>>> Graham Dumpleton wrote:
>>>>
>>>>         
>>>>> 2008/12/3 Reuben A Christie <christie@knewco.com>:
>>>>>
>>>>>
>>>>>           
>>>>>> Hi all, I am pretty novice user of mod_python. and there is an issue
>>>>>> that
>>>>>> I
>>>>>> am experiencing with mod_python scripts for past 2 days that I am not
>>>>>> able
>>>>>> to solve.
>>>>>>
>>>>>> my directory structure is as following,
>>>>>>
>>>>>> DocumentRoot :  /usr/local/apache2/htdocs/
>>>>>> i have a directory structure for mod_python scripts under DocumentRoot
>>>>>> is,
>>>>>>
>>>>>> launch.py
>>>>>> python_test/p1/test1
>>>>>> python_test/p2/test2
>>>>>>
>>>>>> in apache config, i have added following
>>>>>>
>>>>>> <Directory /usr/local/apache/htdocs/python_test >
>>>>>>     AllowOverride All
>>>>>>     Order allow,deny
>>>>>>     allow from all             AddHandler mod_python .py
>>>>>>     PythonHandler launch
>>>>>>     PythonDebug On
>>>>>> </Directory>
>>>>>>
>>>>>> and launch.py looks like this,
>>>>>>
>>>>>> import os.path
>>>>>> from mod_python import apache, Session, util
>>>>>>
>>>>>> def handler(req):
>>>>>>     request = os.path.splitext(os.path.basename( req.uri ))[0]
>>>>>>     req.content_type = 'text/plain'
>>>>>>     req.send_http_header()
>>>>>>
>>>>>>     status = apache.OK
>>>>>>     if request != None:
>>>>>>             mod = __import__(request)
>>>>>>
>>>>>>
>>>>>>             
>>>>> This is the wrong way of going about it. See below.
>>>>>
>>>>>
>>>>>
>>>>>           
>>>>>>             if request == "test1":
>>>>>>                     status = mod.handler(req)
>>>>>>      return status
>>>>>>          basically this script should act as gateway for rest of the
>>>>>> python scripts .
>>>>>>
>>>>>> when I test it with, http://localhost/python_test/test1.py it does not
>>>>>> work
>>>>>> (i get Not found message) and if I do http://localhost/python_test/p1 i
>>>>>> get
>>>>>> the source code of the script appear.
>>>>>>
>>>>>>
>>>>>>             
>>>>> For configuration as written, the launch.py file is in wrong location.
>>>>>
>>>>> First off suggest that launch.py not be in htdocs as then someone can
>>>>> download source code to your handler.
>>>>>
>>>>> Presuming you are using mod_python 3.3.1 (if not then upgrade), move
>>>>> the launch.py file elsewhere and then change configuration to use:
>>>>>
>>>>>  PythonHandler /some/path/launch.py
>>>>>
>>>>> Where path is location of launch.py outside of htdocs.
>>>>>
>>>>> Also don't use __import__. You are better off using import_module()
>>>>> from mod_python. That way you can just supply a path to file to import
>>>>> and not have to worry about PythonPath and lots of other module
>>>>> madness. See:
>>>>>
>>>>>  http://www.modpython.org/live/current/doc-html/pyapi-apmeth.html
>>>>>
>>>>> Graham
>>>>>
>>>>>
>>>>>
>>>>>
>>>>>           
>>>> _______________________________________________
>>>> Mod_python mailing list
>>>> Mod_python@modpython.org
>>>> http://mailman.modpython.org/mailman/listinfo/mod_python
>>>>
>>>>
>>>>
>>>>         
>>>
>>>       
>> _______________________________________________
>> Mod_python mailing list
>> Mod_python@modpython.org
>> http://mailman.modpython.org/mailman/listinfo/mod_python
>>
>>
>>     
>
>
>   
-------------- next part --------------
A non-text attachment was scrubbed...
Name: smime.p7s
Type: application/x-pkcs7-signature
Size: 3316 bytes
Desc: S/MIME Cryptographic Signature
Url : http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20081205/28090839/smime-0001.bin
From graham.dumpleton at gmail.com  Fri Dec  5 18:01:23 2008
From: graham.dumpleton at gmail.com (Graham Dumpleton)
Date: Fri Dec  5 18:01:25 2008
Subject: [mod_python] Future of mod_python
In-Reply-To: <49391498.3060209@gtvbg.tv>
References: <49391498.3060209@gtvbg.tv>
Message-ID: <88e286470812051501t38eb6055ldb7f0cd020ccee4@mail.gmail.com>

2008/12/5 Bozhin Zafirov <bozhin.zafirov@gtvbg.tv>:
> Hi List, :-)
>
> Having in mind that the latest version of mod_python is 3.3.1, released
> Feb-14-2007 (according to modpython.org) - this makes the project to seem a
> bit stalled. Anyone with more inside look on this matter?

There is no one really actively working on code. I change stuff only
when absolutely required to address issues with it not compiling when
new versions of APR or other stuff is released and where mod_python
wasn't using API correctly, or where operating system changes require
updates, such as with MacOS X Leopard 64 bit support. These changes
only ever make it into subversion repository though. I have no time to
do more than this and am already stretching myself by continuing to
answer questions on this list.

> Will it continue to develop, or is it doomed to die?
> Also, now that python 3.0 is finally released (2 days ago, cheers!), will
> there be any efforts to make a new port of mod_python + python3?

No one has stepped up to say they are interested in porting it to
Python 3.0. Personally I think it is too much work and the changes
required to APIs, because of bytes/unicode separation, would be such
that everyone would have to change any applications which use it.
Also, there is already a significant list of issues with mod_python
that need to be fixed:

  https://issues.apache.org/jira/browse/MODPYTHON

It would sort of be a bit ridiculous to consider trying a port to
Python 3.0 when there are so many issues unfixed.

> I would be very happy to see it going forward, it's a really wonderful piece
> of software!

Which aspect do you perceive as 'wonderful'? :-)

There are two parts to mod_python. There is the fact that it allows
Python web applications to be hosted on Apache, and there are the high
level handlers which provide a custom interface (pseudo web framework)
for writing web applications.

If you are not using the high level handlers nor mod_python specific
components, these days you would be better of re-factoring your web
application such that it runs against WSGI API. This will give you
more options for running your application, including on top of pure
Python web servers, or using FASTCGI/SCGI/AJP on top of Apache or
other web servers.

For Apache specifically, the best option these days is actually
mod_wsgi, which performs better than mod_python on speed and memory
fronts. The mod_wsgi module for Apache also has a daemon mode so it
can run web application in separate process, as another user if need
be, just like FASTCGI/SCGI/AJP solutions. The module also still
provides ability to define authentication providers in Python code,
with a much arguably cleaner interface at that. Also can deal with
authorization in Python code as well.

If your application is written specifically to mod_python component
APIs, then you have a bigger problem as would be more significant work
to move to WSGI. It is technically possible that some of the high
level handlers stuff of mod_python could be moved to WSGI, but the API
applications would still need to change and there are much better
options as far as other toolkits or frameworks available for WSGI that
you really should use instead.

Overall, I wouldn't hold your breath waiting for mod_python to be
ported to Python 3.0. Even if done your application would also need to
be changed and not just because of Python 3.0 language/modules
changes, but at the interface to mod_python. You would thus perhaps
want to be considering moving to hosting on top of WSGI interface
instead. This will give you portability to other hosting solutions, as
well as still being able to run it on Apache using mod_wsgi, which has
already been ported to Python 3.0, albeit you have to use code out of
subversion repository for mod_wsgi for now if want to use it with
Python 3.0.

The question thus is, which bits of mod_python are you dependent upon?

Graham
From graham.dumpleton at gmail.com  Fri Dec  5 18:04:27 2008
From: graham.dumpleton at gmail.com (Graham Dumpleton)
Date: Fri Dec  5 18:04:32 2008
Subject: [mod_python] ImportError issue
In-Reply-To: <4939AEB3.4090209@knewco.com>
References: <493680E5.9040002@knewco.com>
	<88e286470812031435h23e4a717q746ebf96c2c0b49c@mail.gmail.com>
	<4937F955.4080806@knewco.com>
	<88e286470812041354q1f10f802wa107dbbeeb97badb@mail.gmail.com>
	<493927B8.3040609@knewco.com>
	<88e286470812051433h6db4a2begb5b17f8316cc497c@mail.gmail.com>
	<4939AEB3.4090209@knewco.com>
Message-ID: <88e286470812051504g681b3e40k35097f099981dca2@mail.gmail.com>

2008/12/6 Reuben A Christie <christie@knewco.com>:
> this is how my apache config looks like
> <Directory /usr/local/apache/htdocs/linker_python >
>       Options  ExecCGI -MultiViews FollowSymLinks
>       AllowOverride All
>       Order allow,deny
>       allow from all
>       AddHandler mod_python .py
>       PythonHandler launch
>       PythonDebug On
>       AddType text/plain
> </Directory>
>
> and in the code i do following
>
> req.send_http_header()
> req.content_type = 'text/xml' (it does not matter what do i set content
> type, even if i change this to text/plain or text/html does not make any
> differece)
> req.write("<response>hello world</response>")

Which version of mod_python are you using?

Calling req.send_http_header() is only needed for mod_python 2.7.X and
older. Even then, it should go after setting req.content_type.

If still using mod_python 2.7.X, then upgrade. If you can't because
you are using Apache 1.3, then consider using mod_wsgi instead and
write your web application to WSGI API, using one of the many
toolkits/frameworks out there for WSGI.

Graham

> Graham Dumpleton wrote:
>>
>> 2008/12/6 Reuben A Christie <christie@knewco.com>:
>>
>>>
>>> In the python script itself, i set the content type to text/plain , I
>>> have
>>> not set any AddType directive in apache config
>>>
>>
>> Please post code snippet showing how this is being done and what
>> handler you are using? Ie., custom handler, mod_python.publisher etc.
>>
>> What AddHandler directives do you have set in Apache configuration?
>>
>> Have you setup any output filters in Apache, ie., AddOutputFilter*
>> directives?
>>
>> Graham
>>
>>
>>>
>>> Graham Dumpleton wrote:
>>>
>>>>
>>>> 2008/12/5 Reuben A Christie <christie@knewco.com>:
>>>>
>>>>
>>>>>
>>>>> thanks alot graham. I was able to import the modules the way you
>>>>> showed.
>>>>> its
>>>>> little intriguing but I think I ll find a better way by combining them
>>>>> into
>>>>> one __init__.py  hopefully that will work
>>>>> one more question, I keep seeing this warning message on apache log
>>>>> [warn] Cannot get media type from 'mod_python'
>>>>> its not causing any issue but I really don't understand why is it
>>>>> appearing
>>>>>
>>>>>
>>>>
>>>> What is the content type you are returning or have setup using AddType
>>>> directives? It appears it may be malformed. The message is mod_mime
>>>> complaining about it.
>>>>
>>>> Graham
>>>>
>>>>
>>>>
>>>>>
>>>>> Graham Dumpleton wrote:
>>>>>
>>>>>
>>>>>>
>>>>>> 2008/12/3 Reuben A Christie <christie@knewco.com>:
>>>>>>
>>>>>>
>>>>>>
>>>>>>>
>>>>>>> Hi all, I am pretty novice user of mod_python. and there is an issue
>>>>>>> that
>>>>>>> I
>>>>>>> am experiencing with mod_python scripts for past 2 days that I am not
>>>>>>> able
>>>>>>> to solve.
>>>>>>>
>>>>>>> my directory structure is as following,
>>>>>>>
>>>>>>> DocumentRoot :  /usr/local/apache2/htdocs/
>>>>>>> i have a directory structure for mod_python scripts under
>>>>>>> DocumentRoot
>>>>>>> is,
>>>>>>>
>>>>>>> launch.py
>>>>>>> python_test/p1/test1
>>>>>>> python_test/p2/test2
>>>>>>>
>>>>>>> in apache config, i have added following
>>>>>>>
>>>>>>> <Directory /usr/local/apache/htdocs/python_test >
>>>>>>>    AllowOverride All
>>>>>>>    Order allow,deny
>>>>>>>    allow from all             AddHandler mod_python .py
>>>>>>>    PythonHandler launch
>>>>>>>    PythonDebug On
>>>>>>> </Directory>
>>>>>>>
>>>>>>> and launch.py looks like this,
>>>>>>>
>>>>>>> import os.path
>>>>>>> from mod_python import apache, Session, util
>>>>>>>
>>>>>>> def handler(req):
>>>>>>>    request = os.path.splitext(os.path.basename( req.uri ))[0]
>>>>>>>    req.content_type = 'text/plain'
>>>>>>>    req.send_http_header()
>>>>>>>
>>>>>>>    status = apache.OK
>>>>>>>    if request != None:
>>>>>>>            mod = __import__(request)
>>>>>>>
>>>>>>>
>>>>>>>
>>>>>>
>>>>>> This is the wrong way of going about it. See below.
>>>>>>
>>>>>>
>>>>>>
>>>>>>
>>>>>>>
>>>>>>>            if request == "test1":
>>>>>>>                    status = mod.handler(req)
>>>>>>>     return status
>>>>>>>         basically this script should act as gateway for rest of the
>>>>>>> python scripts .
>>>>>>>
>>>>>>> when I test it with, http://localhost/python_test/test1.py it does
>>>>>>> not
>>>>>>> work
>>>>>>> (i get Not found message) and if I do http://localhost/python_test/p1
>>>>>>> i
>>>>>>> get
>>>>>>> the source code of the script appear.
>>>>>>>
>>>>>>>
>>>>>>>
>>>>>>
>>>>>> For configuration as written, the launch.py file is in wrong location.
>>>>>>
>>>>>> First off suggest that launch.py not be in htdocs as then someone can
>>>>>> download source code to your handler.
>>>>>>
>>>>>> Presuming you are using mod_python 3.3.1 (if not then upgrade), move
>>>>>> the launch.py file elsewhere and then change configuration to use:
>>>>>>
>>>>>>  PythonHandler /some/path/launch.py
>>>>>>
>>>>>> Where path is location of launch.py outside of htdocs.
>>>>>>
>>>>>> Also don't use __import__. You are better off using import_module()
>>>>>> from mod_python. That way you can just supply a path to file to import
>>>>>> and not have to worry about PythonPath and lots of other module
>>>>>> madness. See:
>>>>>>
>>>>>>  http://www.modpython.org/live/current/doc-html/pyapi-apmeth.html
>>>>>>
>>>>>> Graham
>>>>>>
>>>>>>
>>>>>>
>>>>>>
>>>>>>
>>>>>
>>>>> _______________________________________________
>>>>> Mod_python mailing list
>>>>> Mod_python@modpython.org
>>>>> http://mailman.modpython.org/mailman/listinfo/mod_python
>>>>>
>>>>>
>>>>>
>>>>>
>>>>
>>>>
>>>
>>> _______________________________________________
>>> Mod_python mailing list
>>> Mod_python@modpython.org
>>> http://mailman.modpython.org/mailman/listinfo/mod_python
>>>
>>>
>>>
>>
>>
>>
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>
>
From christie at knewco.com  Fri Dec  5 22:31:12 2008
From: christie at knewco.com (Reuben A Christie)
Date: Fri Dec  5 22:31:30 2008
Subject: [mod_python] ImportError issue
In-Reply-To: <88e286470812051504g681b3e40k35097f099981dca2@mail.gmail.com>
References: <493680E5.9040002@knewco.com>
	<88e286470812031435h23e4a717q746ebf96c2c0b49c@mail.gmail.com>
	<4937F955.4080806@knewco.com>
	<88e286470812041354q1f10f802wa107dbbeeb97badb@mail.gmail.com>
	<493927B8.3040609@knewco.com>
	<88e286470812051433h6db4a2begb5b17f8316cc497c@mail.gmail.com>
	<4939AEB3.4090209@knewco.com>
	<88e286470812051504g681b3e40k35097f099981dca2@mail.gmail.com>
Message-ID: <4939F200.60509@knewco.com>

its version 3.3.1 i removed send_http_header() call, still n o difference

Graham Dumpleton wrote:
> 2008/12/6 Reuben A Christie <christie@knewco.com>:
>   
>> this is how my apache config looks like
>> <Directory /usr/local/apache/htdocs/linker_python >
>>       Options  ExecCGI -MultiViews FollowSymLinks
>>       AllowOverride All
>>       Order allow,deny
>>       allow from all
>>       AddHandler mod_python .py
>>       PythonHandler launch
>>       PythonDebug On
>>       AddType text/plain
>> </Directory>
>>
>> and in the code i do following
>>
>> req.send_http_header()
>> req.content_type = 'text/xml' (it does not matter what do i set content
>> type, even if i change this to text/plain or text/html does not make any
>> differece)
>> req.write("<response>hello world</response>")
>>     
>
> Which version of mod_python are you using?
>
> Calling req.send_http_header() is only needed for mod_python 2.7.X and
> older. Even then, it should go after setting req.content_type.
>
> If still using mod_python 2.7.X, then upgrade. If you can't because
> you are using Apache 1.3, then consider using mod_wsgi instead and
> write your web application to WSGI API, using one of the many
> toolkits/frameworks out there for WSGI.
>
> Graham
>
>   
>> Graham Dumpleton wrote:
>>     
>>> 2008/12/6 Reuben A Christie <christie@knewco.com>:
>>>
>>>       
>>>> In the python script itself, i set the content type to text/plain , I
>>>> have
>>>> not set any AddType directive in apache config
>>>>
>>>>         
>>> Please post code snippet showing how this is being done and what
>>> handler you are using? Ie., custom handler, mod_python.publisher etc.
>>>
>>> What AddHandler directives do you have set in Apache configuration?
>>>
>>> Have you setup any output filters in Apache, ie., AddOutputFilter*
>>> directives?
>>>
>>> Graham
>>>
>>>
>>>       
>>>> Graham Dumpleton wrote:
>>>>
>>>>         
>>>>> 2008/12/5 Reuben A Christie <christie@knewco.com>:
>>>>>
>>>>>
>>>>>           
>>>>>> thanks alot graham. I was able to import the modules the way you
>>>>>> showed.
>>>>>> its
>>>>>> little intriguing but I think I ll find a better way by combining them
>>>>>> into
>>>>>> one __init__.py  hopefully that will work
>>>>>> one more question, I keep seeing this warning message on apache log
>>>>>> [warn] Cannot get media type from 'mod_python'
>>>>>> its not causing any issue but I really don't understand why is it
>>>>>> appearing
>>>>>>
>>>>>>
>>>>>>             
>>>>> What is the content type you are returning or have setup using AddType
>>>>> directives? It appears it may be malformed. The message is mod_mime
>>>>> complaining about it.
>>>>>
>>>>> Graham
>>>>>
>>>>>
>>>>>
>>>>>           
>>>>>> Graham Dumpleton wrote:
>>>>>>
>>>>>>
>>>>>>             
>>>>>>> 2008/12/3 Reuben A Christie <christie@knewco.com>:
>>>>>>>
>>>>>>>
>>>>>>>
>>>>>>>               
>>>>>>>> Hi all, I am pretty novice user of mod_python. and there is an issue
>>>>>>>> that
>>>>>>>> I
>>>>>>>> am experiencing with mod_python scripts for past 2 days that I am not
>>>>>>>> able
>>>>>>>> to solve.
>>>>>>>>
>>>>>>>> my directory structure is as following,
>>>>>>>>
>>>>>>>> DocumentRoot :  /usr/local/apache2/htdocs/
>>>>>>>> i have a directory structure for mod_python scripts under
>>>>>>>> DocumentRoot
>>>>>>>> is,
>>>>>>>>
>>>>>>>> launch.py
>>>>>>>> python_test/p1/test1
>>>>>>>> python_test/p2/test2
>>>>>>>>
>>>>>>>> in apache config, i have added following
>>>>>>>>
>>>>>>>> <Directory /usr/local/apache/htdocs/python_test >
>>>>>>>>    AllowOverride All
>>>>>>>>    Order allow,deny
>>>>>>>>    allow from all             AddHandler mod_python .py
>>>>>>>>    PythonHandler launch
>>>>>>>>    PythonDebug On
>>>>>>>> </Directory>
>>>>>>>>
>>>>>>>> and launch.py looks like this,
>>>>>>>>
>>>>>>>> import os.path
>>>>>>>> from mod_python import apache, Session, util
>>>>>>>>
>>>>>>>> def handler(req):
>>>>>>>>    request = os.path.splitext(os.path.basename( req.uri ))[0]
>>>>>>>>    req.content_type = 'text/plain'
>>>>>>>>    req.send_http_header()
>>>>>>>>
>>>>>>>>    status = apache.OK
>>>>>>>>    if request != None:
>>>>>>>>            mod = __import__(request)
>>>>>>>>
>>>>>>>>
>>>>>>>>
>>>>>>>>                 
>>>>>>> This is the wrong way of going about it. See below.
>>>>>>>
>>>>>>>
>>>>>>>
>>>>>>>
>>>>>>>               
>>>>>>>>            if request == "test1":
>>>>>>>>                    status = mod.handler(req)
>>>>>>>>     return status
>>>>>>>>         basically this script should act as gateway for rest of the
>>>>>>>> python scripts .
>>>>>>>>
>>>>>>>> when I test it with, http://localhost/python_test/test1.py it does
>>>>>>>> not
>>>>>>>> work
>>>>>>>> (i get Not found message) and if I do http://localhost/python_test/p1
>>>>>>>> i
>>>>>>>> get
>>>>>>>> the source code of the script appear.
>>>>>>>>
>>>>>>>>
>>>>>>>>
>>>>>>>>                 
>>>>>>> For configuration as written, the launch.py file is in wrong location.
>>>>>>>
>>>>>>> First off suggest that launch.py not be in htdocs as then someone can
>>>>>>> download source code to your handler.
>>>>>>>
>>>>>>> Presuming you are using mod_python 3.3.1 (if not then upgrade), move
>>>>>>> the launch.py file elsewhere and then change configuration to use:
>>>>>>>
>>>>>>>  PythonHandler /some/path/launch.py
>>>>>>>
>>>>>>> Where path is location of launch.py outside of htdocs.
>>>>>>>
>>>>>>> Also don't use __import__. You are better off using import_module()
>>>>>>> from mod_python. That way you can just supply a path to file to import
>>>>>>> and not have to worry about PythonPath and lots of other module
>>>>>>> madness. See:
>>>>>>>
>>>>>>>  http://www.modpython.org/live/current/doc-html/pyapi-apmeth.html
>>>>>>>
>>>>>>> Graham
>>>>>>>
>>>>>>>
>>>>>>>
>>>>>>>
>>>>>>>
>>>>>>>               
>>>>>> _______________________________________________
>>>>>> Mod_python mailing list
>>>>>> Mod_python@modpython.org
>>>>>> http://mailman.modpython.org/mailman/listinfo/mod_python
>>>>>>
>>>>>>
>>>>>>
>>>>>>
>>>>>>             
>>>>>           
>>>> _______________________________________________
>>>> Mod_python mailing list
>>>> Mod_python@modpython.org
>>>> http://mailman.modpython.org/mailman/listinfo/mod_python
>>>>
>>>>
>>>>
>>>>         
>>>
>>>       
>> _______________________________________________
>> Mod_python mailing list
>> Mod_python@modpython.org
>> http://mailman.modpython.org/mailman/listinfo/mod_python
>>
>>
>>     
>
>
>   
-------------- next part --------------
A non-text attachment was scrubbed...
Name: smime.p7s
Type: application/x-pkcs7-signature
Size: 3316 bytes
Desc: S/MIME Cryptographic Signature
Url : http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20081205/06a4ca9a/smime.bin
From graham.dumpleton at gmail.com  Fri Dec  5 23:12:17 2008
From: graham.dumpleton at gmail.com (Graham Dumpleton)
Date: Fri Dec  5 23:12:20 2008
Subject: [mod_python] ImportError issue
In-Reply-To: <4939F200.60509@knewco.com>
References: <493680E5.9040002@knewco.com>
	<88e286470812031435h23e4a717q746ebf96c2c0b49c@mail.gmail.com>
	<4937F955.4080806@knewco.com>
	<88e286470812041354q1f10f802wa107dbbeeb97badb@mail.gmail.com>
	<493927B8.3040609@knewco.com>
	<88e286470812051433h6db4a2begb5b17f8316cc497c@mail.gmail.com>
	<4939AEB3.4090209@knewco.com>
	<88e286470812051504g681b3e40k35097f099981dca2@mail.gmail.com>
	<4939F200.60509@knewco.com>
Message-ID: <88e286470812052012w2bcb96b5md49b14eaafbc6666@mail.gmail.com>

2008/12/6 Reuben A Christie <christie@knewco.com>:
> its version 3.3.1 i removed send_http_header() call, still n o difference

Work out then under what conditions the follow code would generate the
error you are seeing, where content_type would be passed as argument
to function.

static content_type *analyze_ct(request_rec *r, const char *s)
{
    const char *cp, *mp;
    char *attribute, *value;
    int quoted = 0;
    server_rec * ss = r->server;
    apr_pool_t * p = r->pool;

    content_type *ctp;
    param *pp, *npp;

    /* initialize ctp */
    ctp = (content_type *)apr_palloc(p, sizeof(content_type));
    ctp->type = NULL;
    ctp->subtype = NULL;
    ctp->param = NULL;

    mp = s;

    /* getting a type */
    cp = mp;
    while (apr_isspace(*cp)) {
        cp++;
    }
    if (!*cp) {
        ap_log_error(APLOG_MARK, APLOG_WARNING, 0, ss,
                     "mod_mime: analyze_ct: cannot get media type from '%s'",
                     (const char *) mp);
        return (NULL);
    }
    ctp->type = cp;
    do {
        cp++;
    } while (*cp && (*cp != '/') && !apr_isspace(*cp) && (*cp != ';'));
    if (!*cp || (*cp == ';')) {
        ap_log_error(APLOG_MARK, APLOG_WARNING, 0, ss,
                     "Cannot get media type from '%s'",
                     (const char *) mp);
        return (NULL);
    }

I don't have the time to work it out myself.

Graham

> Graham Dumpleton wrote:
>>
>> 2008/12/6 Reuben A Christie <christie@knewco.com>:
>>
>>>
>>> this is how my apache config looks like
>>> <Directory /usr/local/apache/htdocs/linker_python >
>>>      Options  ExecCGI -MultiViews FollowSymLinks
>>>      AllowOverride All
>>>      Order allow,deny
>>>      allow from all
>>>      AddHandler mod_python .py
>>>      PythonHandler launch
>>>      PythonDebug On
>>>      AddType text/plain
>>> </Directory>
>>>
>>> and in the code i do following
>>>
>>> req.send_http_header()
>>> req.content_type = 'text/xml' (it does not matter what do i set content
>>> type, even if i change this to text/plain or text/html does not make any
>>> differece)
>>> req.write("<response>hello world</response>")
>>>
>>
>> Which version of mod_python are you using?
>>
>> Calling req.send_http_header() is only needed for mod_python 2.7.X and
>> older. Even then, it should go after setting req.content_type.
>>
>> If still using mod_python 2.7.X, then upgrade. If you can't because
>> you are using Apache 1.3, then consider using mod_wsgi instead and
>> write your web application to WSGI API, using one of the many
>> toolkits/frameworks out there for WSGI.
>>
>> Graham
>>
>>
>>>
>>> Graham Dumpleton wrote:
>>>
>>>>
>>>> 2008/12/6 Reuben A Christie <christie@knewco.com>:
>>>>
>>>>
>>>>>
>>>>> In the python script itself, i set the content type to text/plain , I
>>>>> have
>>>>> not set any AddType directive in apache config
>>>>>
>>>>>
>>>>
>>>> Please post code snippet showing how this is being done and what
>>>> handler you are using? Ie., custom handler, mod_python.publisher etc.
>>>>
>>>> What AddHandler directives do you have set in Apache configuration?
>>>>
>>>> Have you setup any output filters in Apache, ie., AddOutputFilter*
>>>> directives?
>>>>
>>>> Graham
>>>>
>>>>
>>>>
>>>>>
>>>>> Graham Dumpleton wrote:
>>>>>
>>>>>
>>>>>>
>>>>>> 2008/12/5 Reuben A Christie <christie@knewco.com>:
>>>>>>
>>>>>>
>>>>>>
>>>>>>>
>>>>>>> thanks alot graham. I was able to import the modules the way you
>>>>>>> showed.
>>>>>>> its
>>>>>>> little intriguing but I think I ll find a better way by combining
>>>>>>> them
>>>>>>> into
>>>>>>> one __init__.py  hopefully that will work
>>>>>>> one more question, I keep seeing this warning message on apache log
>>>>>>> [warn] Cannot get media type from 'mod_python'
>>>>>>> its not causing any issue but I really don't understand why is it
>>>>>>> appearing
>>>>>>>
>>>>>>>
>>>>>>>
>>>>>>
>>>>>> What is the content type you are returning or have setup using AddType
>>>>>> directives? It appears it may be malformed. The message is mod_mime
>>>>>> complaining about it.
>>>>>>
>>>>>> Graham
>>>>>>
>>>>>>
>>>>>>
>>>>>>
>>>>>>>
>>>>>>> Graham Dumpleton wrote:
>>>>>>>
>>>>>>>
>>>>>>>
>>>>>>>>
>>>>>>>> 2008/12/3 Reuben A Christie <christie@knewco.com>:
>>>>>>>>
>>>>>>>>
>>>>>>>>
>>>>>>>>
>>>>>>>>>
>>>>>>>>> Hi all, I am pretty novice user of mod_python. and there is an
>>>>>>>>> issue
>>>>>>>>> that
>>>>>>>>> I
>>>>>>>>> am experiencing with mod_python scripts for past 2 days that I am
>>>>>>>>> not
>>>>>>>>> able
>>>>>>>>> to solve.
>>>>>>>>>
>>>>>>>>> my directory structure is as following,
>>>>>>>>>
>>>>>>>>> DocumentRoot :  /usr/local/apache2/htdocs/
>>>>>>>>> i have a directory structure for mod_python scripts under
>>>>>>>>> DocumentRoot
>>>>>>>>> is,
>>>>>>>>>
>>>>>>>>> launch.py
>>>>>>>>> python_test/p1/test1
>>>>>>>>> python_test/p2/test2
>>>>>>>>>
>>>>>>>>> in apache config, i have added following
>>>>>>>>>
>>>>>>>>> <Directory /usr/local/apache/htdocs/python_test >
>>>>>>>>>   AllowOverride All
>>>>>>>>>   Order allow,deny
>>>>>>>>>   allow from all             AddHandler mod_python .py
>>>>>>>>>   PythonHandler launch
>>>>>>>>>   PythonDebug On
>>>>>>>>> </Directory>
>>>>>>>>>
>>>>>>>>> and launch.py looks like this,
>>>>>>>>>
>>>>>>>>> import os.path
>>>>>>>>> from mod_python import apache, Session, util
>>>>>>>>>
>>>>>>>>> def handler(req):
>>>>>>>>>   request = os.path.splitext(os.path.basename( req.uri ))[0]
>>>>>>>>>   req.content_type = 'text/plain'
>>>>>>>>>   req.send_http_header()
>>>>>>>>>
>>>>>>>>>   status = apache.OK
>>>>>>>>>   if request != None:
>>>>>>>>>           mod = __import__(request)
>>>>>>>>>
>>>>>>>>>
>>>>>>>>>
>>>>>>>>>
>>>>>>>>
>>>>>>>> This is the wrong way of going about it. See below.
>>>>>>>>
>>>>>>>>
>>>>>>>>
>>>>>>>>
>>>>>>>>
>>>>>>>>>
>>>>>>>>>           if request == "test1":
>>>>>>>>>                   status = mod.handler(req)
>>>>>>>>>    return status
>>>>>>>>>        basically this script should act as gateway for rest of the
>>>>>>>>> python scripts .
>>>>>>>>>
>>>>>>>>> when I test it with, http://localhost/python_test/test1.py it does
>>>>>>>>> not
>>>>>>>>> work
>>>>>>>>> (i get Not found message) and if I do
>>>>>>>>> http://localhost/python_test/p1
>>>>>>>>> i
>>>>>>>>> get
>>>>>>>>> the source code of the script appear.
>>>>>>>>>
>>>>>>>>>
>>>>>>>>>
>>>>>>>>>
>>>>>>>>
>>>>>>>> For configuration as written, the launch.py file is in wrong
>>>>>>>> location.
>>>>>>>>
>>>>>>>> First off suggest that launch.py not be in htdocs as then someone
>>>>>>>> can
>>>>>>>> download source code to your handler.
>>>>>>>>
>>>>>>>> Presuming you are using mod_python 3.3.1 (if not then upgrade), move
>>>>>>>> the launch.py file elsewhere and then change configuration to use:
>>>>>>>>
>>>>>>>>  PythonHandler /some/path/launch.py
>>>>>>>>
>>>>>>>> Where path is location of launch.py outside of htdocs.
>>>>>>>>
>>>>>>>> Also don't use __import__. You are better off using import_module()
>>>>>>>> from mod_python. That way you can just supply a path to file to
>>>>>>>> import
>>>>>>>> and not have to worry about PythonPath and lots of other module
>>>>>>>> madness. See:
>>>>>>>>
>>>>>>>>  http://www.modpython.org/live/current/doc-html/pyapi-apmeth.html
>>>>>>>>
>>>>>>>> Graham
>>>>>>>>
>>>>>>>>
>>>>>>>>
>>>>>>>>
>>>>>>>>
>>>>>>>>
>>>>>>>
>>>>>>> _______________________________________________
>>>>>>> Mod_python mailing list
>>>>>>> Mod_python@modpython.org
>>>>>>> http://mailman.modpython.org/mailman/listinfo/mod_python
>>>>>>>
>>>>>>>
>>>>>>>
>>>>>>>
>>>>>>>
>>>>>>
>>>>>>
>>>>>
>>>>> _______________________________________________
>>>>> Mod_python mailing list
>>>>> Mod_python@modpython.org
>>>>> http://mailman.modpython.org/mailman/listinfo/mod_python
>>>>>
>>>>>
>>>>>
>>>>>
>>>>
>>>>
>>>
>>> _______________________________________________
>>> Mod_python mailing list
>>> Mod_python@modpython.org
>>> http://mailman.modpython.org/mailman/listinfo/mod_python
>>>
>>>
>>>
>>
>>
>>
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>
>
From christie at knewco.com  Mon Dec  8 11:15:58 2008
From: christie at knewco.com (Reuben A Christie)
Date: Mon Dec  8 11:16:19 2008
Subject: [mod_python] mod_python redhat installation
Message-ID: <493D483E.6010009@knewco.com>

Hi,
I have been trying to install mod_python on redhat using yum and it 
seems that there is no 3.3.1 version available as of now. when I try to 
compile it myself from source, i get big error stack when trying to do 
make.  these are the last few lines of the error stack. can somebody 
help please.

/var/www/html/mod_python-3.3.1/src/include/mod_python.h:215: error: 
declaration for parameter 'apr_OFN_mp_release_interpreter_t' but no such 
parameter
/var/www/html/mod_python-3.3.1/src/include/mod_python.h:210: error: 
declaration for parameter 'python_cleanup' but no such parameter
/var/www/html/mod_python-3.3.1/src/include/mod_python.h:208: error: 
declaration for parameter 'py_handler' but no such parameter
/var/www/html/mod_python-3.3.1/src/include/mod_python.h:193: error: 
declaration for parameter 'python_filter_ctx' but no such parameter
/var/www/html/mod_python-3.3.1/src/include/mod_python.h:186: error: 
declaration for parameter 'py_req_config' but no such parameter
/var/www/html/mod_python-3.3.1/src/include/mod_python.h:173: error: 
declaration for parameter 'cleanup_info' but no such parameter
/var/www/html/mod_python-3.3.1/src/include/mod_python.h:163: error: 
declaration for parameter 'py_config' but no such parameter
/var/www/html/mod_python-3.3.1/src/include/mod_python.h:151: error: 
declaration for parameter 'py_global_config' but no such parameter
/var/www/html/mod_python-3.3.1/src/include/mod_python.h:143: error: 
declaration for parameter 'interpreterdata' but no such parameter
/var/www/html/mod_python-3.3.1/src/include/finfoobject.h:35: error: 
declaration for parameter 'finfoobject' but no such parameter
/var/www/html/mod_python-3.3.1/src/include/_pspmodule.h:23: error: 
declaration for parameter 'init_psp' but no such parameter
/var/www/html/mod_python-3.3.1/src/include/filterobject.h:57: error: 
declaration for parameter 'filterobject' but no such parameter
/var/www/html/mod_python-3.3.1/src/include/requestobject.h:53: error: 
declaration for parameter 'requestobject' but no such parameter
/var/www/html/mod_python-3.3.1/src/include/connobject.h:47: error: 
declaration for parameter 'connobject' but no such parameter
/var/www/html/mod_python-3.3.1/src/include/serverobject.h:36: error: 
declaration for parameter 'serverobject' but no such parameter
/var/www/html/mod_python-3.3.1/src/include/tableobject.h:40: error: 
declaration for parameter 'tableobject' but no such parameter
mod_python.c:3073: error: expected '{' at end of input
apxs:Error: Command failed with rc=65536
.
make[1]: *** [mod_python.so] Error 1
make[1]: Leaving directory `/var/www/html/mod_python-3.3.1/src'
make: *** [do_dso] Error 2

-------------- next part --------------
A non-text attachment was scrubbed...
Name: smime.p7s
Type: application/x-pkcs7-signature
Size: 3316 bytes
Desc: S/MIME Cryptographic Signature
Url : http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20081208/1db0876c/smime.bin
From Wayne.Collier at noaa.gov  Mon Dec  8 15:33:52 2008
From: Wayne.Collier at noaa.gov (wayne collier)
Date: Mon Dec  8 15:33:57 2008
Subject: [mod_python] Spry Framework and interfacing with mod_python/Vampire
Message-ID: <493D84B0.4040604@noaa.gov>

I am trying perform AJAX function call on my website using Spry 
framework. I am a little lost on how to  send  data to my python 
function. I was able to get the following code to work using urlparse 
commandas in server code. However, can get this going using the standard 
mod_python/vampire construct (e.g. ss=req.form['data1_value'] ). I can't 
seem to grab the _postdata_ I am placing in the
**Spry.Utils.loadURL command. **Can someone help me with this?   

Wayne
_
*JAVASCRIPT:*_

<script>
  function ajax_request(){
  var data1_value = document.sample.first.value;
  var data2_value = document.sample.last.value;
  var formData = 'first='+data1_value+'&last='+data2_value;
   //The next line is to encode the variables values e.g. weird characters to make it safe for transfer
  formData = encodeURI(formData);
  var  url="http://mingus.ncd-tcn.noaa.gov/dev/python/jsonExample.py/breakthru?"+formData;
  formData = encodeURI(formData);
  *var req=Spry.Utils.loadURL('POST', url, true, ReturnTask,{postdata:formData, headers:{"Content-Type": "application/x-www-form-urlencoded; charset=UTF-8"}});
*  
//--------------------------------------------------------------------------------
  function ReturnTask(req){
   //We use xhRequest to received notification from server side, usually the process file will return with an echo/write.
   var result = req.xhRequest.responseText; 
   document.getElementById("notice").innerHTML =result;
    }

     }
 </script>

*
_SERVER CODE:_*

def breakthru(req):
   # req.content_type='text/html'   
    from cgi import escape
    from urllib import unquote
    import vampire
    import mod_python
    from mod_python import util
    from urlparse import urlparse

    d={"first":"Stevenrr","last":"Spielberg","address":"1234 Unlisted 
Drive"}

    for attrib in dir(req):
        attribs += '<tr><td>%s</td><td>%s</td></tr>'
        attribs %= (attrib, 
escape(unquote(str(req.__getattribute__(attrib)))))
   
    test=util.parse_qs(str(req.__getattribute__('args')))

    first=test['first'][0]
    last=test['last'][0]
  
    req.write(str(test)+  '<br>')
    return "<br> name:" +first





-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20081208/5ee33671/attachment.html
From graham.dumpleton at gmail.com  Mon Dec  8 22:18:37 2008
From: graham.dumpleton at gmail.com (Graham Dumpleton)
Date: Mon Dec  8 22:18:44 2008
Subject: [mod_python] mod_python redhat installation
In-Reply-To: <493D483E.6010009@knewco.com>
References: <493D483E.6010009@knewco.com>
Message-ID: <88e286470812081918l18a497a2w61219741071cf9cf@mail.gmail.com>

2008/12/9 Reuben A Christie <christie@knewco.com>:
> Hi,
> I have been trying to install mod_python on redhat using yum and it seems
> that there is no 3.3.1 version available as of now. when I try to compile it
> myself from source, i get big error stack when trying to do make.  these are
> the last few lines of the error stack. can somebody help please.
>
> /var/www/html/mod_python-3.3.1/src/include/mod_python.h:215: error:
> declaration for parameter 'apr_OFN_mp_release_interpreter_t' but no such
> parameter
> /var/www/html/mod_python-3.3.1/src/include/mod_python.h:210: error:
> declaration for parameter 'python_cleanup' but no such parameter
> /var/www/html/mod_python-3.3.1/src/include/mod_python.h:208: error:
> declaration for parameter 'py_handler' but no such parameter
> /var/www/html/mod_python-3.3.1/src/include/mod_python.h:193: error:
> declaration for parameter 'python_filter_ctx' but no such parameter
> /var/www/html/mod_python-3.3.1/src/include/mod_python.h:186: error:
> declaration for parameter 'py_req_config' but no such parameter
> /var/www/html/mod_python-3.3.1/src/include/mod_python.h:173: error:
> declaration for parameter 'cleanup_info' but no such parameter
> /var/www/html/mod_python-3.3.1/src/include/mod_python.h:163: error:
> declaration for parameter 'py_config' but no such parameter
> /var/www/html/mod_python-3.3.1/src/include/mod_python.h:151: error:
> declaration for parameter 'py_global_config' but no such parameter
> /var/www/html/mod_python-3.3.1/src/include/mod_python.h:143: error:
> declaration for parameter 'interpreterdata' but no such parameter
> /var/www/html/mod_python-3.3.1/src/include/finfoobject.h:35: error:
> declaration for parameter 'finfoobject' but no such parameter
> /var/www/html/mod_python-3.3.1/src/include/_pspmodule.h:23: error:
> declaration for parameter 'init_psp' but no such parameter
> /var/www/html/mod_python-3.3.1/src/include/filterobject.h:57: error:
> declaration for parameter 'filterobject' but no such parameter
> /var/www/html/mod_python-3.3.1/src/include/requestobject.h:53: error:
> declaration for parameter 'requestobject' but no such parameter
> /var/www/html/mod_python-3.3.1/src/include/connobject.h:47: error:
> declaration for parameter 'connobject' but no such parameter
> /var/www/html/mod_python-3.3.1/src/include/serverobject.h:36: error:
> declaration for parameter 'serverobject' but no such parameter
> /var/www/html/mod_python-3.3.1/src/include/tableobject.h:40: error:
> declaration for parameter 'tableobject' but no such parameter
> mod_python.c:3073: error: expected '{' at end of input
> apxs:Error: Command failed with rc=65536
> .
> make[1]: *** [mod_python.so] Error 1
> make[1]: Leaving directory `/var/www/html/mod_python-3.3.1/src'
> make: *** [do_dso] Error 2

Please post the lead set of errors for first file that fails including
the compilation line before it. This is of more interest as may show
header files not being able to be found or other things.

One thing to check is if you have appropriate Python 'dev' package installed.

Also, which version of Apache are you using?

Graham
From graham.dumpleton at gmail.com  Mon Dec  8 22:25:24 2008
From: graham.dumpleton at gmail.com (Graham Dumpleton)
Date: Mon Dec  8 22:25:26 2008
Subject: [mod_python] Spry Framework and interfacing with
	mod_python/Vampire
In-Reply-To: <493D84B0.4040604@noaa.gov>
References: <493D84B0.4040604@noaa.gov>
Message-ID: <88e286470812081925o6229ea08tbb403474bd04f9f9@mail.gmail.com>

2008/12/9 wayne collier <Wayne.Collier@noaa.gov>:
> I am trying perform AJAX function call on my website using Spry framework. I
> am a little lost on how to  send  data to my python function. I was able to
> get the following code to work using urlparse commandas in server code.
> However, can get this going using the standard mod_python/vampire construct
> (e.g. ss=req.form['data1_value'] ). I can't seem to grab the postdata I am
> placing in the
> Spry.Utils.loadURL command. Can someone help me with this?
>
> Wayne
>
> JAVASCRIPT:
>
> <script>
>   function ajax_request(){
>   var data1_value = document.sample.first.value;
>   var data2_value = document.sample.last.value;
>   var formData = 'first='+data1_value+'&last='+data2_value;
>    //The next line is to encode the variables values e.g. weird characters
> to make it safe for transfer
>   formData = encodeURI(formData);
>   var
> url="http://mingus.ncd-tcn.noaa.gov/dev/python/jsonExample.py/breakthru?"+formData;
>   formData = encodeURI(formData);
>   var req=Spry.Utils.loadURL('POST', url, true,
> ReturnTask,{postdata:formData, headers:{"Content-Type":
> "application/x-www-form-urlencoded; charset=UTF-8"}});
>
> //--------------------------------------------------------------------------------
>   function ReturnTask(req){
>    //We use xhRequest to received notification from server side, usually the
> process file will return with an echo/write.
>    var result = req.xhRequest.responseText;
>    document.getElementById("notice").innerHTML =result;
>     }
>
>      }
>  </script>
>
>
> SERVER CODE:
>
> def breakthru(req):
>    # req.content_type='text/html'
>     from cgi import escape
>     from urllib import unquote
>     import vampire
>     import mod_python
>     from mod_python import util
>     from urlparse import urlparse
>
>     d={"first":"Stevenrr","last":"Spielberg","address":"1234 Unlisted
> Drive"}
>
>     for attrib in dir(req):
>         attribs += '<tr><td>%s</td><td>%s</td></tr>'
>         attribs %= (attrib,
> escape(unquote(str(req.__getattribute__(attrib)))))
>
>     test=util.parse_qs(str(req.__getattribute__('args')))
>
>     first=test['first'][0]
>     last=test['last'][0]
>
>     req.write(str(test)+  '<br>')
>     return "<br> name:" +first

What is the Apache configuration related to mod_python that you are
using so can see exactly what parts of mod_python/Vampire you are
trying to use.

If you are trying to use req.form, why isn't it mentioned in your server code?

Graham
From jean.lagarde at gmail.com  Tue Dec  9 23:29:20 2008
From: jean.lagarde at gmail.com (Jean Lagarde)
Date: Tue Dec  9 23:29:26 2008
Subject: [mod_python] Difference between filter.pass_on() and
	filter.disable()?
Message-ID: <ce5902f0812092029i5297612aub112934f5215783f@mail.gmail.com>

Hi all,
The subject says it all. The documentation seems a little sparse on the
topic. The description of pass_on is:

Passes all data through the filter without any processing.

The description of disable is:

Tells mod_python to ignore the provided handler and just pass the data on.
(which also states that mod_python uses that one internally).

"passes all data through" and "just pass the data on" sound like the same
thing to me. What is the additional functionality to "ignore the provided
handler"? I assume that there is a difference between the two methods and I
would like to know what it is no matter how subtle. I'm looking for the most
CPU efficient way to decide early on in the execution of a filter that we
don't want to filter a particular request in any way, but maybe
understanding the difference would help me to make a better use of
mod_python filters in other ways.

I did try to use both in code, and on one server with one version of Apache
2 (and other components) it seemed to make no functional difference
(although I did not attempt to closely measure CPU usage), whereas on
another server with an earlier version of Apache 2 (and other components),
using disable() caused no error, but dropped values from POST forms passed
on to PHP scripts.

Thanks for any info. I did search the lists, but only found one comment on
someone's code from Graham that "Normally 'filter.pass_on()' would be used
here, not 'filter.disable()'", but without explaining why.

-- jean
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20081209/91a0ba04/attachment.html
From graham.dumpleton at gmail.com  Wed Dec 10 05:13:54 2008
From: graham.dumpleton at gmail.com (Graham Dumpleton)
Date: Wed Dec 10 05:13:56 2008
Subject: [mod_python] Difference between filter.pass_on() and
	filter.disable()?
In-Reply-To: <ce5902f0812092029i5297612aub112934f5215783f@mail.gmail.com>
References: <ce5902f0812092029i5297612aub112934f5215783f@mail.gmail.com>
Message-ID: <88e286470812100213p79d6255cm6c3d40fd2de59d4a@mail.gmail.com>

2008/12/10 Jean Lagarde <jean.lagarde@gmail.com>:
> Hi all,
> The subject says it all. The documentation seems a little sparse on the
> topic. The description of pass_on is:
> Passes all data through the filter without any processing.
>
> The description of disable is:
> Tells mod_python to ignore the provided handler and just pass the data on.
> (which also states that mod_python uses that one internally).
> "passes all data through" and "just pass the data on" sound like the same
> thing to me. What is the additional functionality to "ignore the provided
> handler"? I assume that there is a difference between the two methods and I
> would like to know what it is no matter how subtle. I'm looking for the most
> CPU efficient way to decide early on in the execution of a filter that we
> don't want to filter a particular request in any way, but maybe
> understanding the difference would help me to make a better use of
> mod_python filters in other ways.
> I did try to use both in code, and on one server with one version of Apache
> 2 (and other components) it seemed to make no functional difference
> (although I did not attempt to closely measure CPU usage), whereas on
> another server with an earlier version of Apache 2 (and other components),
> using disable() caused no error, but dropped values from POST forms passed
> on to PHP scripts.
> Thanks for any info. I did search the lists, but only found one comment on
> someone's code from Graham that "Normally 'filter.pass_on()' would be used
> here, not 'filter.disable()'", but without explaining why.

If you use disable(), your filter will never be called for that
request (input or output as appropriate) again.

If you use pass_on(), then it is passing on data available to that
specific call to your filter function.

The distinction exists because your filter function can be called
multiple times for a request. The latter is allowing you to pass on
the data for that call, but still allowing you the option to process
data in a subsequent call of the filter function.

The disable() call is used internally to mod_python to ensure that
filter function is never called again for a specific request if the
filter function itself raises an exception of some sort. If it doesn't
do this you could end up with a loop if the error in filter function
actually generates output, for which it would then call the filter
function again, etc etc.

FWIW, if you are concerned about performance in any way, then you
shouldn't be using mod_python to implement Apache input/output
filters. Yes you can write filters with mod_python, but it will impact
performance. For best performance you should write filters in C code
as proper Apache module.

Graham
From luke at demonware.net  Wed Dec 10 14:05:39 2008
From: luke at demonware.net (Luke Burden)
Date: Wed Dec 10 14:07:05 2008
Subject: [mod_python] Mod-Python / MySQL client libs causing apache to
	seg-fault
In-Reply-To: <88e286470811281441l7473a875gca2e9fa2bd49acd4@mail.gmail.com>
References: <fb502710811281435l10a55aefp34c7d3212c87aaab@mail.gmail.com>
	<88e286470811281441l7473a875gca2e9fa2bd49acd4@mail.gmail.com>
Message-ID: <fb502710812101105r5b4e7033s424945e36558a1ad@mail.gmail.com>

Just to follow up on this - using mpm_prefork instead of mpm_worker clears
up these mysterious mysqlclientlib problems in my instance.I don't know
whether it was the mysqlclientlib that isn't threadsafe, or whether it was
another library that introduced the instability.

On Fri, Nov 28, 2008 at 2:41 PM, Graham Dumpleton <
graham.dumpleton@gmail.com> wrote:

> Would be wise to ensure using recent MySQL client libraries and Python
> wrappers if need be, as there are some dodgy versions that have been
> known to cause problems under mod_python.
>
> Other than that, since you seemed to have checked PHP conflict
> problems, only thing can mention is to make sure you don't have any
> other Apache modules installed with use MySQL such as a
> mod_auth_mysql.
>
> Graham
>
> 2008/11/29 Luke Burden <luke@demonware.net>:
> > Hi Graham,
> >
> > I'm a developer for a internally facing web application, which uses
> > apache + mod_python + mysql.
> > As the application is being increasingly used, I've noticed several
> > errors occurring sporadically, but regularly enough to be cause for
> > concern.  Concern morphed into alarm when I found I could reproduce
> > the problems by quickly and repeatedly refreshing a page that causes a
> > number of queries to be executed!
> >
> > The problem manifests itself in either bad behavior from the python
> > MySQLDb module:
> >
> > InterfaceError: (0, '')
> > OperationalError: (2013, 'Lost connection to MySQL server during query')
> > ProgrammingError: (2014, "Commands out of sync; you can't run this
> > command now") (<- might be unrelated)
> > .. and NoneType result sets where the data is basically not there,
> > when it should be.
> >
> > Or in apache seg-faulting:
> >
> > [Fri Nov 28 21:34:42 2008] [notice] mod_python: Creating 8 session
> > mutexes based on 6 max processes and 25 max threads.
> > [Fri Nov 28 21:34:42 2008] [notice] mod_python: using mutex_directory
> /tmp
> > [Fri Nov 28 21:34:42 2008] [notice] Apache/2.2.4 (Ubuntu)
> > mod_python/3.3.1 Python/2.5.1 configured -- resuming normal operations
> > [Fri Nov 28 21:35:03 2008] [error] [client 192.168.179.1] File does
> > not exist: /var/www/favicon.ico
> > [Fri Nov 28 21:35:04 2008] [error] [client 192.168.179.1] File does
> > not exist: /var/www/favicon.ico
> > [Fri Nov 28 21:35:06 2008] [error] [client 192.168.179.1] File does
> > not exist: /var/www/favicon.ico
> > [Fri Nov 28 21:35:06 2008] [error] [client 192.168.179.1] File does
> > not exist: /var/www/favicon.ico
> > [Fri Nov 28 21:35:07 2008] [notice] child pid 17523 exit signal
> > Segmentation fault (11)
> > [Fri Nov 28 21:35:07 2008] [error] [client 192.168.179.1] File does
> > not exist: /var/www/favicon.ico
> > [Fri Nov 28 21:35:07 2008] [error] [client 192.168.179.1] File does
> > not exist: /var/www/favicon.ico
> > [Fri Nov 28 21:35:08 2008] [error] [client 192.168.179.1] File does
> > not exist: /var/www/favicon.ico
> > [Fri Nov 28 21:35:15 2008] [notice] child pid 17525 exit signal
> > Segmentation fault (11)
> > [Fri Nov 28 21:35:15 2008] [notice] child pid 17579 exit signal
> > Segmentation fault (11)
> > [Fri Nov 28 21:35:16 2008] [error] [client 192.168.179.1] File does
> > not exist: /var/www/favicon.ico
> > [Fri Nov 28 21:35:17 2008] [notice] child pid 17607 exit signal
> > Segmentation fault (11)
> > [Fri Nov 28 21:35:19 2008] [error] [client 192.168.179.1] File does
> > not exist: /var/www/favicon.ico
> > ... etc ...
> >
> > A closer look at one of the segmentation faults:
> >
> > *** glibc detected *** /usr/sbin/apache2: double free or corruption
> (!prev):
> > 0x000000000212a1c0 ***
> > ======= Backtrace: =========
> > /lib/libc.so.6[0x2b6915ed7b0a]
> > /lib/libc.so.6(cfree+0x8c)[0x2b6915edb6fc]
> > /usr/lib/libmysqlclient_r.so.15(vio_delete+0x19)[0x2aaaadef6ff9]
> > /usr/lib/libmysqlclient_r.so.15(end_server+0x2f)[0x2aaaadef2eff]
> > /usr/lib/libmysqlclient_r.so.15(cli_safe_read+0x2b)[0x2aaaadef305b]
> >
> /usr/lib/libmysqlclient_r.so.15(cli_advanced_command+0x195)[0x2aaaadef5675]
> > /usr/lib/libmysqlclient_r.so.15(mysql_ping+0x31)[0x2aaaadec71a1]
> > /var/lib/python-support/python2.5/_mysql.so[0x2aaaadc5e7e6]
> > /usr/lib/libpython2.5.so.1.0(PyEval_EvalFrameEx+0x6335)[0x2b691a2ccd15]
> > /usr/lib/libpython2.5.so.1.0(PyEval_EvalCodeEx+0x836)[0x2b691a2cdb06]
> > /usr/lib/libpython2.5.so.1.0(PyEval_EvalFrameEx+0x553d)[0x2b691a2cbf1d]
> > /usr/lib/libpython2.5.so.1.0(PyEval_EvalFrameEx+0x6564)[0x2b691a2ccf44]
> > /usr/lib/libpython2.5.so.1.0(PyEval_EvalFrameEx+0x6564)[0x2b691a2ccf44]
> > /usr/lib/libpython2.5.so.1.0(PyEval_EvalCodeEx+0x836)[0x2b691a2cdb06]
> > /usr/lib/libpython2.5.so.1.0(PyEval_EvalFrameEx+0x553d)[0x2b691a2cbf1d]
> > /usr/lib/libpython2.5.so.1.0(PyEval_EvalCodeEx+0x836)[0x2b691a2cdb06]
> > /usr/lib/libpython2.5.so.1.0(PyEval_EvalFrameEx+0x553d)[0x2b691a2cbf1d]
> > /usr/lib/libpython2.5.so.1.0(PyEval_EvalFrameEx+0x6564)[0x2b691a2ccf44]
> > /usr/lib/libpython2.5.so.1.0(PyEval_EvalCodeEx+0x836)[0x2b691a2cdb06]
> > /usr/lib/libpython2.5.so.1.0[0x2b691a26dc5e]
> > /usr/lib/libpython2.5.so.1.0(PyObject_Call+0x13)[0x2b691a24c323]
> > /usr/lib/libpython2.5.so.1.0[0x2b691a253aad]
> > /usr/lib/libpython2.5.so.1.0(PyObject_Call+0x13)[0x2b691a24c323]
> > /usr/lib/libpython2.5.so.1.0[0x2b691a24c547]
> > /usr/lib/libpython2.5.so.1.0(PyObject_CallMethod+0xc0)[0x2b691a24e610]
> > /usr/lib/apache2/modules/mod_python.so[0x2b6919ff91bc]
> > /usr/lib/apache2/modules/mod_python.so[0x2b6919ffb687]
> > /usr/sbin/apache2(ap_run_handler+0x7a)[0x437c4a]
> > /usr/sbin/apache2(ap_invoke_handler+0x7c)[0x43affc]
> > /usr/sbin/apache2(ap_process_request+0x178)[0x447248]
> > /usr/sbin/apache2[0x44468c]
> > /usr/sbin/apache2(ap_run_process_connection+0x72)[0x43ec22]
> > /usr/sbin/apache2[0x44b696]
> > /lib/libpthread.so.0[0x2b6915a4d317]
> > /lib/libc.so.6(clone+0x6d)[0x2b6915f39d5d]
> > ======= Memory map: ========
> > [Fri Nov 28 02:52:57 2008] [notice] child pid 28387 exit signal Aborted
> (6)
> >
> > Seems to clearly point the finger at the mysql client library.
> >
> > Google shows a few similar looking cases, usually solved by removing
> > PHP, which in this case is not installed.  Nor is expat XML parser
> > used.  Nor mhash.so. :)
> >
> > The problem occurs on both Ubuntu 7.10, and 8.04 installs using the
> > default packages for apache, python, mod python, mysql.  From the 7.10
> > instance:
> >
> > luke@luke-ubuntu:~$ dpkg -l | grep mysql
> > ii  libdbd-mysql-perl                          4.004-2
> >            A Perl5 database interface to the MySQL data
> > ii  libmysqlclient15off                        5.0.45-1ubuntu3.3
> >            MySQL database client library
> > ii  mysql-client-5.0                           5.0.45-1ubuntu3.3
> >            MySQL database client binaries
> > ii  mysql-common                               5.0.45-1ubuntu3.3
> >            MySQL database common files
> > ii  mysql-server                               5.0.45-1ubuntu3.3
> >            MySQL database server (meta package dependin
> > ii  mysql-server-5.0                           5.0.45-1ubuntu3.3
> >            MySQL database server binaries
> > ii  python-mysqldb                             1.2.2-3ubuntu1
> >            A Python interface to MySQL
> >
> > luke@luke-ubuntu:~$ dpkg -l | grep mod-python
> > ii  libapache2-mod-python                      3.3.1-2
> >            Apache 2 module that embeds Python within th
> >
> > All running on Python 2.5.
> >
> > I'm thinking of getting the source and building the libmysqlclient
> > myself now, but I'm hoping you've got some wise suggestions for me.
> >
> > Thanks very much for your time!
> >
> > Regards,
> >
> > Luke
> > _______________________________________________
> > Mod_python mailing list
> > Mod_python@modpython.org
> > http://mailman.modpython.org/mailman/listinfo/mod_python
> >
>
> ______________________________________________________________________
> This email has been scanned by the MessageLabs Email Security System.
> For more information please visit http://www.messagelabs.com/email
> ______________________________________________________________________
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20081210/fad2c71e/attachment.html
From mike at weirdlooking.com  Wed Dec 10 21:52:27 2008
From: mike at weirdlooking.com (Michael Barton)
Date: Wed Dec 10 21:52:34 2008
Subject: [mod_python] ioerrors with worker thread mpm
Message-ID: <437ab9280812101852j66adf615t686275065abcb683@mail.gmail.com>

Hey list!

I'm having a problem adapting a mod_python-based app to work with
Apache's worker thread mpm.

When the process hits MaxRequestsPerChild under a high concurrency of
requests, blocking i/o operations in other threads on that child raise
exceptions (mostly EINTR or EAGAIN IOErrors in httplib).

It looks like system calls are being interrupted by signals Apache
uses to control its children.  But that seems like a problem that
would have come up before, and I can't find much by searching the web
or list archives.

I figured I'd punt to the list and see if anyone has other thoughts.

My setup is: debian, apache 2.2.3, mod_python 3.3.1, python 2.4.4

--Mike
From jean.lagarde at gmail.com  Wed Dec 10 22:06:06 2008
From: jean.lagarde at gmail.com (Jean Lagarde)
Date: Wed Dec 10 22:06:14 2008
Subject: [mod_python] Difference between filter.pass_on() and
	filter.disable()?
In-Reply-To: <88e286470812100213p79d6255cm6c3d40fd2de59d4a@mail.gmail.com>
References: <ce5902f0812092029i5297612aub112934f5215783f@mail.gmail.com>
	<88e286470812100213p79d6255cm6c3d40fd2de59d4a@mail.gmail.com>
Message-ID: <ce5902f0812101906h34d018bbw62377b3f928f358d@mail.gmail.com>

Thanks Graham,
The difference is very clear now.

Yes I agree that performance with mod_python is not optimal, but for now
it's a compromise because I'm using an existing product (
http://www.infrae.com/products/tramline -- I know there's been other
questions about this product on this list before). The question came up
because there's a couple of branches of it around and I wanted to understand
what was going on.

-- Jean

On Wed, Dec 10, 2008 at 2:13 AM, Graham Dumpleton <
graham.dumpleton@gmail.com> wrote:

> 2008/12/10 Jean Lagarde <jean.lagarde@gmail.com>:
> > Hi all,
> > The subject says it all. The documentation seems a little sparse on the
> > topic. The description of pass_on is:
> > Passes all data through the filter without any processing.
> >
> > The description of disable is:
> > Tells mod_python to ignore the provided handler and just pass the data
> on.
> > (which also states that mod_python uses that one internally).
> > "passes all data through" and "just pass the data on" sound like the same
> > thing to me. What is the additional functionality to "ignore the provided
> > handler"? I assume that there is a difference between the two methods and
> I
> > would like to know what it is no matter how subtle. I'm looking for the
> most
> > CPU efficient way to decide early on in the execution of a filter that we
> > don't want to filter a particular request in any way, but maybe
> > understanding the difference would help me to make a better use of
> > mod_python filters in other ways.
> > I did try to use both in code, and on one server with one version of
> Apache
> > 2 (and other components) it seemed to make no functional difference
> > (although I did not attempt to closely measure CPU usage), whereas on
> > another server with an earlier version of Apache 2 (and other
> components),
> > using disable() caused no error, but dropped values from POST forms
> passed
> > on to PHP scripts.
> > Thanks for any info. I did search the lists, but only found one comment
> on
> > someone's code from Graham that "Normally 'filter.pass_on()' would be
> used
> > here, not 'filter.disable()'", but without explaining why.
>
> If you use disable(), your filter will never be called for that
> request (input or output as appropriate) again.
>
> If you use pass_on(), then it is passing on data available to that
> specific call to your filter function.
>
> The distinction exists because your filter function can be called
> multiple times for a request. The latter is allowing you to pass on
> the data for that call, but still allowing you the option to process
> data in a subsequent call of the filter function.
>
> The disable() call is used internally to mod_python to ensure that
> filter function is never called again for a specific request if the
> filter function itself raises an exception of some sort. If it doesn't
> do this you could end up with a loop if the error in filter function
> actually generates output, for which it would then call the filter
> function again, etc etc.
>
> FWIW, if you are concerned about performance in any way, then you
> shouldn't be using mod_python to implement Apache input/output
> filters. Yes you can write filters with mod_python, but it will impact
> performance. For best performance you should write filters in C code
> as proper Apache module.
>
> Graham
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20081210/38825b1e/attachment-0001.html
From graham.dumpleton at gmail.com  Wed Dec 10 22:19:57 2008
From: graham.dumpleton at gmail.com (Graham Dumpleton)
Date: Wed Dec 10 22:20:03 2008
Subject: [mod_python] ioerrors with worker thread mpm
In-Reply-To: <437ab9280812101852j66adf615t686275065abcb683@mail.gmail.com>
References: <437ab9280812101852j66adf615t686275065abcb683@mail.gmail.com>
Message-ID: <88e286470812101919x2c1c213el7324463759ce7859@mail.gmail.com>

Blocking i/o operations against what? Sockets you have created off to
something else????

2008/12/11 Michael Barton <mike@weirdlooking.com>:
> Hey list!
>
> I'm having a problem adapting a mod_python-based app to work with
> Apache's worker thread mpm.
>
> When the process hits MaxRequestsPerChild under a high concurrency of
> requests, blocking i/o operations in other threads on that child raise
> exceptions (mostly EINTR or EAGAIN IOErrors in httplib).
>
> It looks like system calls are being interrupted by signals Apache
> uses to control its children.  But that seems like a problem that
> would have come up before, and I can't find much by searching the web
> or list archives.
>
> I figured I'd punt to the list and see if anyone has other thoughts.
>
> My setup is: debian, apache 2.2.3, mod_python 3.3.1, python 2.4.4
>
> --Mike
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>
From graham.dumpleton at gmail.com  Wed Dec 10 22:25:27 2008
From: graham.dumpleton at gmail.com (Graham Dumpleton)
Date: Wed Dec 10 22:25:33 2008
Subject: [mod_python] Difference between filter.pass_on() and
	filter.disable()?
In-Reply-To: <ce5902f0812101906h34d018bbw62377b3f928f358d@mail.gmail.com>
References: <ce5902f0812092029i5297612aub112934f5215783f@mail.gmail.com>
	<88e286470812100213p79d6255cm6c3d40fd2de59d4a@mail.gmail.com>
	<ce5902f0812101906h34d018bbw62377b3f928f358d@mail.gmail.com>
Message-ID: <88e286470812101925g22dcd40ai2a31cda6dc2b1042@mail.gmail.com>

2008/12/11 Jean Lagarde <jean.lagarde@gmail.com>:
> Thanks Graham,
> The difference is very clear now.
> Yes I agree that performance with mod_python is not optimal, but for now
> it's a compromise because I'm using an existing product
> ( http://www.infrae.com/products/tramline -- I know there's been other
> questions about this product on this list before). The question came up
> because there's a couple of branches of it around and I wanted to understand
> what was going on.

Hmmm, are they still claiming mod_python needs to be patched? I can't
remember the change they were saying needed to be made, but couldn't
see how that change fixed anything. A different change was made for
another issue in code which was found when investigating their change,
but not sure I ever got back any conclusive response as to whether
that addressed problem. There ticket related to that is:

  http://issues.apache.org/jira/browse/MODPYTHON-76

Tramline was a good example of something that should have been a
Apache C module. I wouldn't be surprised actually if one already did
exist that does the same thing.

Graham

> -- Jean
>
> On Wed, Dec 10, 2008 at 2:13 AM, Graham Dumpleton
> <graham.dumpleton@gmail.com> wrote:
>>
>> 2008/12/10 Jean Lagarde <jean.lagarde@gmail.com>:
>> > Hi all,
>> > The subject says it all. The documentation seems a little sparse on the
>> > topic. The description of pass_on is:
>> > Passes all data through the filter without any processing.
>> >
>> > The description of disable is:
>> > Tells mod_python to ignore the provided handler and just pass the data
>> > on.
>> > (which also states that mod_python uses that one internally).
>> > "passes all data through" and "just pass the data on" sound like the
>> > same
>> > thing to me. What is the additional functionality to "ignore the
>> > provided
>> > handler"? I assume that there is a difference between the two methods
>> > and I
>> > would like to know what it is no matter how subtle. I'm looking for the
>> > most
>> > CPU efficient way to decide early on in the execution of a filter that
>> > we
>> > don't want to filter a particular request in any way, but maybe
>> > understanding the difference would help me to make a better use of
>> > mod_python filters in other ways.
>> > I did try to use both in code, and on one server with one version of
>> > Apache
>> > 2 (and other components) it seemed to make no functional difference
>> > (although I did not attempt to closely measure CPU usage), whereas on
>> > another server with an earlier version of Apache 2 (and other
>> > components),
>> > using disable() caused no error, but dropped values from POST forms
>> > passed
>> > on to PHP scripts.
>> > Thanks for any info. I did search the lists, but only found one comment
>> > on
>> > someone's code from Graham that "Normally 'filter.pass_on()' would be
>> > used
>> > here, not 'filter.disable()'", but without explaining why.
>>
>> If you use disable(), your filter will never be called for that
>> request (input or output as appropriate) again.
>>
>> If you use pass_on(), then it is passing on data available to that
>> specific call to your filter function.
>>
>> The distinction exists because your filter function can be called
>> multiple times for a request. The latter is allowing you to pass on
>> the data for that call, but still allowing you the option to process
>> data in a subsequent call of the filter function.
>>
>> The disable() call is used internally to mod_python to ensure that
>> filter function is never called again for a specific request if the
>> filter function itself raises an exception of some sort. If it doesn't
>> do this you could end up with a loop if the error in filter function
>> actually generates output, for which it would then call the filter
>> function again, etc etc.
>>
>> FWIW, if you are concerned about performance in any way, then you
>> shouldn't be using mod_python to implement Apache input/output
>> filters. Yes you can write filters with mod_python, but it will impact
>> performance. For best performance you should write filters in C code
>> as proper Apache module.
>>
>> Graham
>
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>
>
From jean.lagarde at gmail.com  Wed Dec 10 22:54:02 2008
From: jean.lagarde at gmail.com (Jean Lagarde)
Date: Wed Dec 10 22:54:09 2008
Subject: [mod_python] Difference between filter.pass_on() and
	filter.disable()?
In-Reply-To: <88e286470812101925g22dcd40ai2a31cda6dc2b1042@mail.gmail.com>
References: <ce5902f0812092029i5297612aub112934f5215783f@mail.gmail.com>
	<88e286470812100213p79d6255cm6c3d40fd2de59d4a@mail.gmail.com>
	<ce5902f0812101906h34d018bbw62377b3f928f358d@mail.gmail.com>
	<88e286470812101925g22dcd40ai2a31cda6dc2b1042@mail.gmail.com>
Message-ID: <ce5902f0812101954x11f7ebabpc24f668f5d1ef526@mail.gmail.com>

You had put the flush under an "if not filter.closed:", but you wrote in the
last entry of that ticket that the Infrae guys reported it hadn't fixed
their problem. I did patch my version (commented out the whole if block).
Tramline doesn't seem to be aggressively maintained these days (at least not
by Infrae -- a branch I was talking about was from someone else).
I did a quick search for similar functionality but did not find anything. If
I was to find the time to do this myself, I would probably look at the
source of mod_upload as a starting point.

Thanks again for the help,

-- Jean

On Wed, Dec 10, 2008 at 7:25 PM, Graham Dumpleton <
graham.dumpleton@gmail.com> wrote:

> 2008/12/11 Jean Lagarde <jean.lagarde@gmail.com>:
> > Thanks Graham,
> > The difference is very clear now.
> > Yes I agree that performance with mod_python is not optimal, but for now
> > it's a compromise because I'm using an existing product
> > ( http://www.infrae.com/products/tramline -- I know there's been other
> > questions about this product on this list before). The question came up
> > because there's a couple of branches of it around and I wanted to
> understand
> > what was going on.
>
> Hmmm, are they still claiming mod_python needs to be patched? I can't
> remember the change they were saying needed to be made, but couldn't
> see how that change fixed anything. A different change was made for
> another issue in code which was found when investigating their change,
> but not sure I ever got back any conclusive response as to whether
> that addressed problem. There ticket related to that is:
>
>  http://issues.apache.org/jira/browse/MODPYTHON-76
>
> Tramline was a good example of something that should have been a
> Apache C module. I wouldn't be surprised actually if one already did
> exist that does the same thing.
>
> Graham
>
> > -- Jean
> >
> > On Wed, Dec 10, 2008 at 2:13 AM, Graham Dumpleton
> > <graham.dumpleton@gmail.com> wrote:
> >>
> >> 2008/12/10 Jean Lagarde <jean.lagarde@gmail.com>:
> >> > Hi all,
> >> > The subject says it all. The documentation seems a little sparse on
> the
> >> > topic. The description of pass_on is:
> >> > Passes all data through the filter without any processing.
> >> >
> >> > The description of disable is:
> >> > Tells mod_python to ignore the provided handler and just pass the data
> >> > on.
> >> > (which also states that mod_python uses that one internally).
> >> > "passes all data through" and "just pass the data on" sound like the
> >> > same
> >> > thing to me. What is the additional functionality to "ignore the
> >> > provided
> >> > handler"? I assume that there is a difference between the two methods
> >> > and I
> >> > would like to know what it is no matter how subtle. I'm looking for
> the
> >> > most
> >> > CPU efficient way to decide early on in the execution of a filter that
> >> > we
> >> > don't want to filter a particular request in any way, but maybe
> >> > understanding the difference would help me to make a better use of
> >> > mod_python filters in other ways.
> >> > I did try to use both in code, and on one server with one version of
> >> > Apache
> >> > 2 (and other components) it seemed to make no functional difference
> >> > (although I did not attempt to closely measure CPU usage), whereas on
> >> > another server with an earlier version of Apache 2 (and other
> >> > components),
> >> > using disable() caused no error, but dropped values from POST forms
> >> > passed
> >> > on to PHP scripts.
> >> > Thanks for any info. I did search the lists, but only found one
> comment
> >> > on
> >> > someone's code from Graham that "Normally 'filter.pass_on()' would be
> >> > used
> >> > here, not 'filter.disable()'", but without explaining why.
> >>
> >> If you use disable(), your filter will never be called for that
> >> request (input or output as appropriate) again.
> >>
> >> If you use pass_on(), then it is passing on data available to that
> >> specific call to your filter function.
> >>
> >> The distinction exists because your filter function can be called
> >> multiple times for a request. The latter is allowing you to pass on
> >> the data for that call, but still allowing you the option to process
> >> data in a subsequent call of the filter function.
> >>
> >> The disable() call is used internally to mod_python to ensure that
> >> filter function is never called again for a specific request if the
> >> filter function itself raises an exception of some sort. If it doesn't
> >> do this you could end up with a loop if the error in filter function
> >> actually generates output, for which it would then call the filter
> >> function again, etc etc.
> >>
> >> FWIW, if you are concerned about performance in any way, then you
> >> shouldn't be using mod_python to implement Apache input/output
> >> filters. Yes you can write filters with mod_python, but it will impact
> >> performance. For best performance you should write filters in C code
> >> as proper Apache module.
> >>
> >> Graham
> >
> >
> > _______________________________________________
> > Mod_python mailing list
> > Mod_python@modpython.org
> > http://mailman.modpython.org/mailman/listinfo/mod_python
> >
> >
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20081210/376da38d/attachment.html
From mike at weirdlooking.com  Wed Dec 10 22:57:13 2008
From: mike at weirdlooking.com (Michael Barton)
Date: Wed Dec 10 22:57:19 2008
Subject: [mod_python] ioerrors with worker thread mpm
In-Reply-To: <88e286470812101919x2c1c213el7324463759ce7859@mail.gmail.com>
References: <437ab9280812101852j66adf615t686275065abcb683@mail.gmail.com>
	<88e286470812101919x2c1c213el7324463759ce7859@mail.gmail.com>
Message-ID: <437ab9280812101957k4942d9f0xab4c7a67cb68d87d@mail.gmail.com>

Yes, sorry.  The exceptions I've seen are raised by sendall and recv
on socket objects inside httplib, which is connected to a service.  I
can reproduce this with a very simple handler like,

  from mod_python import apache
  from socket import socket

  def handler(req):
      s = socket()
      s.connect(('localhost', 80))
      s.recv(1024)
      return apache.OK

Make a request to that handler, which will obviously not return any
time soon.  Then hit the server enough times that it reaches
MaxRequestsPerChild.  And,

...
  File "/home/redbo/test/modpython_handler.py", line 7, in handler\n
 s.recv(1024)
error: (4, 'Interrupted system call')



On Wed, Dec 10, 2008 at 9:19 PM, Graham Dumpleton
<graham.dumpleton@gmail.com> wrote:
> Blocking i/o operations against what? Sockets you have created off to
> something else????
>
> 2008/12/11 Michael Barton <mike@weirdlooking.com>:
>> Hey list!
>>
>> I'm having a problem adapting a mod_python-based app to work with
>> Apache's worker thread mpm.
>>
>> When the process hits MaxRequestsPerChild under a high concurrency of
>> requests, blocking i/o operations in other threads on that child raise
>> exceptions (mostly EINTR or EAGAIN IOErrors in httplib).
>>
>> It looks like system calls are being interrupted by signals Apache
>> uses to control its children.  But that seems like a problem that
>> would have come up before, and I can't find much by searching the web
>> or list archives.
>>
>> I figured I'd punt to the list and see if anyone has other thoughts.
>>
>> My setup is: debian, apache 2.2.3, mod_python 3.3.1, python 2.4.4
>>
>> --Mike
>> _______________________________________________
>> Mod_python mailing list
>> Mod_python@modpython.org
>> http://mailman.modpython.org/mailman/listinfo/mod_python
>>
>
From graham.dumpleton at gmail.com  Wed Dec 10 23:33:27 2008
From: graham.dumpleton at gmail.com (Graham Dumpleton)
Date: Wed Dec 10 23:33:32 2008
Subject: [mod_python] ioerrors with worker thread mpm
In-Reply-To: <437ab9280812101957k4942d9f0xab4c7a67cb68d87d@mail.gmail.com>
References: <437ab9280812101852j66adf615t686275065abcb683@mail.gmail.com>
	<88e286470812101919x2c1c213el7324463759ce7859@mail.gmail.com>
	<437ab9280812101957k4942d9f0xab4c7a67cb68d87d@mail.gmail.com>
Message-ID: <88e286470812102033o1a0b6cdeqc3e5e57c61f2c4cd@mail.gmail.com>

2008/12/11 Michael Barton <mike@weirdlooking.com>:
> Yes, sorry.  The exceptions I've seen are raised by sendall and recv
> on socket objects inside httplib, which is connected to a service.  I
> can reproduce this with a very simple handler like,
>
>  from mod_python import apache
>  from socket import socket
>
>  def handler(req):
>      s = socket()
>      s.connect(('localhost', 80))
>      s.recv(1024)
>      return apache.OK
>
> Make a request to that handler, which will obviously not return any
> time soon.  Then hit the server enough times that it reaches
> MaxRequestsPerChild.  And,
>
> ...
>  File "/home/redbo/test/modpython_handler.py", line 7, in handler\n
>  s.recv(1024)
> error: (4, 'Interrupted system call')

Apache doesn't appear to use SA_RESTART when registering signal
handlers, so yes, it means that system calls interrupted by a signal
will not be restarted. This is quite normal behaviour and typically
programs should be written to detect an EINTR and retry the system
library function call being done if they need to be robust in the face
of such an event. That is, code which would run in an unknown
environment, can't assume system calls will be restarted.

The EAGAIN error is different and doubtful it is cause by signals.
What EAGAIN means will depend on what system library call is being
used. For recv() it means:

     [EAGAIN]           The socket is marked non-blocking, and the receive
                        operation would block, or a receive timeout had been
                        set, and the timeout expired before data were
                        received.

Graham

> On Wed, Dec 10, 2008 at 9:19 PM, Graham Dumpleton
> <graham.dumpleton@gmail.com> wrote:
>> Blocking i/o operations against what? Sockets you have created off to
>> something else????
>>
>> 2008/12/11 Michael Barton <mike@weirdlooking.com>:
>>> Hey list!
>>>
>>> I'm having a problem adapting a mod_python-based app to work with
>>> Apache's worker thread mpm.
>>>
>>> When the process hits MaxRequestsPerChild under a high concurrency of
>>> requests, blocking i/o operations in other threads on that child raise
>>> exceptions (mostly EINTR or EAGAIN IOErrors in httplib).
>>>
>>> It looks like system calls are being interrupted by signals Apache
>>> uses to control its children.  But that seems like a problem that
>>> would have come up before, and I can't find much by searching the web
>>> or list archives.
>>>
>>> I figured I'd punt to the list and see if anyone has other thoughts.
>>>
>>> My setup is: debian, apache 2.2.3, mod_python 3.3.1, python 2.4.4
>>>
>>> --Mike
>>> _______________________________________________
>>> Mod_python mailing list
>>> Mod_python@modpython.org
>>> http://mailman.modpython.org/mailman/listinfo/mod_python
>>>
>>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>
From mike at weirdlooking.com  Thu Dec 11 00:55:00 2008
From: mike at weirdlooking.com (Michael Barton)
Date: Thu Dec 11 00:56:39 2008
Subject: [mod_python] ioerrors with worker thread mpm
In-Reply-To: <88e286470812102033o1a0b6cdeqc3e5e57c61f2c4cd@mail.gmail.com>
References: <437ab9280812101852j66adf615t686275065abcb683@mail.gmail.com>
	<88e286470812101919x2c1c213el7324463759ce7859@mail.gmail.com>
	<437ab9280812101957k4942d9f0xab4c7a67cb68d87d@mail.gmail.com>
	<88e286470812102033o1a0b6cdeqc3e5e57c61f2c4cd@mail.gmail.com>
Message-ID: <7BF2D631-406C-44D2-B048-951E867F9F79@weirdlooking.com>


On Dec 10, 2008, at 10:33 PM, "Graham Dumpleton" <graham.dumpleton@gmail.com 
 > wrote:

> 2008/12/11 Michael Barton <mike@weirdlooking.com>:
>> Yes, sorry.  The exceptions I've seen are raised by sendall and recv
>> on socket objects inside httplib, which is connected to a service.  I
>> can reproduce this with a very simple handler like,
>>
>> from mod_python import apache
>> from socket import socket
>>
>> def handler(req):
>>     s = socket()
>>     s.connect(('localhost', 80))
>>     s.recv(1024)
>>     return apache.OK
>>
>> Make a request to that handler, which will obviously not return any
>> time soon.  Then hit the server enough times that it reaches
>> MaxRequestsPerChild.  And,
>>
>> ...
>> File "/home/redbo/test/modpython_handler.py", line 7, in handler\n
>> s.recv(1024)
>> error: (4, 'Interrupted system call')
>
> Apache doesn't appear to use SA_RESTART when registering signal
> handlers, so yes, it means that system calls interrupted by a signal
> will not be restarted. This is quite normal behaviour and typically
> programs should be written to detect an EINTR and retry the system
> library function call being done if they need to be robust in the face
> of such an event. That is, code which would run in an unknown
> environment, can't assume system calls will be restarted.
>

I guess i'm really just frustrated that there's no way to recover a  
non-fatal exception in httplib without restarting the entire request,  
which just isn't possible in the case of this case.

Maybe I can monkey patch around it or something.

It's a python problem though, not a modpython problem.


> The EAGAIN error is different and doubtful it is cause by signals.
> What EAGAIN means will depend on what system library call is being
> used. For recv() it means:
>
>     [EAGAIN]           The socket is marked non-blocking, and the  
> receive
>                        operation would block, or a receive timeout  
> had been
>                        set, and the timeout expired before data were
>                        received.
>

It's definitely also happening when apache hits maxrequests.  I wonder  
if this has something to do with python's recv using select to block.  
I don't have the python source in front of me to see what happens if  
that select is interrupted.

Ah well, thanks for thinking about it.

Mike


> Graham
>
>> On Wed, Dec 10, 2008 at 9:19 PM, Graham Dumpleton
>> <graham.dumpleton@gmail.com> wrote:
>>> Blocking i/o operations against what? Sockets you have created off  
>>> to
>>> something else????
>>>
>>> 2008/12/11 Michael Barton <mike@weirdlooking.com>:
>>>> Hey list!
>>>>
>>>> I'm having a problem adapting a mod_python-based app to work with
>>>> Apache's worker thread mpm.
>>>>
>>>> When the process hits MaxRequestsPerChild under a high  
>>>> concurrency of
>>>> requests, blocking i/o operations in other threads on that child  
>>>> raise
>>>> exceptions (mostly EINTR or EAGAIN IOErrors in httplib).
>>>>
>>>> It looks like system calls are being interrupted by signals Apache
>>>> uses to control its children.  But that seems like a problem that
>>>> would have come up before, and I can't find much by searching the  
>>>> web
>>>> or list archives.
>>>>
>>>> I figured I'd punt to the list and see if anyone has other  
>>>> thoughts.
>>>>
>>>> My setup is: debian, apache 2.2.3, mod_python 3.3.1, python 2.4.4
>>>>
>>>> --Mike
>>>> _______________________________________________
>>>> Mod_python mailing list
>>>> Mod_python@modpython.org
>>>> http://mailman.modpython.org/mailman/listinfo/mod_python
>>>>
>>>
>>

From georges at racinet.fr  Thu Dec 11 04:57:10 2008
From: georges at racinet.fr (Racinet Georges)
Date: Thu Dec 11 04:57:16 2008
Subject: [mod_python] Difference between filter.pass_on() and
	filter.disable()?
In-Reply-To: <ce5902f0812101954x11f7ebabpc24f668f5d1ef526@mail.gmail.com>
References: <ce5902f0812092029i5297612aub112934f5215783f@mail.gmail.com>
	<88e286470812100213p79d6255cm6c3d40fd2de59d4a@mail.gmail.com>
	<ce5902f0812101906h34d018bbw62377b3f928f358d@mail.gmail.com>
	<88e286470812101925g22dcd40ai2a31cda6dc2b1042@mail.gmail.com>
	<ce5902f0812101954x11f7ebabpc24f668f5d1ef526@mail.gmail.com>
Message-ID: <8EFA84AC-1717-4345-A124-4D2C9F90AB99@racinet.fr>

Hi there,

On Dec 11, 2008, at 4:54 AM, Jean Lagarde wrote:

> You had put the flush under an "if not filter.closed:", but you  
> wrote in the last entry of that ticket that the Infrae guys reported  
> it hadn't fixed their problem. I did patch my version (commented out  
> the whole if block). Tramline doesn't seem to be aggressively  
> maintained these days (at least not by Infrae -- a branch I was  
> talking about was from someone else).

that'd me :-)

Thank you, Graham, for the explanations.

About the patch: it's still needed with the systems I currently have  
in production (Debian Etch, apache 2.2.3-4+etch4, mod_python  
3.2.10-4), but I've tested once an Ubuntu system (apache  
2.2.8-1ubuntu0.3 + mod_python 3.3.1-2build1) that does not.

There are also setups* in which pass_on() doesn't pass the data (could  
be a side effect of the patch, of course),
so I resorted to do it from the filter python code, as someone, maybe  
on this list did before me.
This is obviously lame but works in any case.

* actually all systems I had on hand at the time I started integrating  
tramline.

Regards,

GR

>
> I did a quick search for similar functionality but did not find  
> anything. If I was to find the time to do this myself, I would  
> probably look at the source of mod_upload as a starting point.
>
> Thanks again for the help,
>
> -- Jean
>
> On Wed, Dec 10, 2008 at 7:25 PM, Graham Dumpleton <graham.dumpleton@gmail.com 
> > wrote:
> 2008/12/11 Jean Lagarde <jean.lagarde@gmail.com>:
> > Thanks Graham,
> > The difference is very clear now.
> > Yes I agree that performance with mod_python is not optimal, but  
> for now
> > it's a compromise because I'm using an existing product
> > ( http://www.infrae.com/products/tramline -- I know there's been  
> other
> > questions about this product on this list before). The question  
> came up
> > because there's a couple of branches of it around and I wanted to  
> understand
> > what was going on.
>
> Hmmm, are they still claiming mod_python needs to be patched? I can't
> remember the change they were saying needed to be made, but couldn't
> see how that change fixed anything. A different change was made for
> another issue in code which was found when investigating their change,
> but not sure I ever got back any conclusive response as to whether
> that addressed problem. There ticket related to that is:
>
>  http://issues.apache.org/jira/browse/MODPYTHON-76
>
> Tramline was a good example of something that should have been a
> Apache C module. I wouldn't be surprised actually if one already did
> exist that does the same thing.
>
> Graham
>
> > -- Jean
> >
> > On Wed, Dec 10, 2008 at 2:13 AM, Graham Dumpleton
> > <graham.dumpleton@gmail.com> wrote:
> >>
> >> 2008/12/10 Jean Lagarde <jean.lagarde@gmail.com>:
> >> > Hi all,
> >> > The subject says it all. The documentation seems a little  
> sparse on the
> >> > topic. The description of pass_on is:
> >> > Passes all data through the filter without any processing.
> >> >
> >> > The description of disable is:
> >> > Tells mod_python to ignore the provided handler and just pass  
> the data
> >> > on.
> >> > (which also states that mod_python uses that one internally).
> >> > "passes all data through" and "just pass the data on" sound  
> like the
> >> > same
> >> > thing to me. What is the additional functionality to "ignore the
> >> > provided
> >> > handler"? I assume that there is a difference between the two  
> methods
> >> > and I
> >> > would like to know what it is no matter how subtle. I'm looking  
> for the
> >> > most
> >> > CPU efficient way to decide early on in the execution of a  
> filter that
> >> > we
> >> > don't want to filter a particular request in any way, but maybe
> >> > understanding the difference would help me to make a better use  
> of
> >> > mod_python filters in other ways.
> >> > I did try to use both in code, and on one server with one  
> version of
> >> > Apache
> >> > 2 (and other components) it seemed to make no functional  
> difference
> >> > (although I did not attempt to closely measure CPU usage),  
> whereas on
> >> > another server with an earlier version of Apache 2 (and other
> >> > components),
> >> > using disable() caused no error, but dropped values from POST  
> forms
> >> > passed
> >> > on to PHP scripts.
> >> > Thanks for any info. I did search the lists, but only found one  
> comment
> >> > on
> >> > someone's code from Graham that "Normally 'filter.pass_on()'  
> would be
> >> > used
> >> > here, not 'filter.disable()'", but without explaining why.
> >>
> >> If you use disable(), your filter will never be called for that
> >> request (input or output as appropriate) again.
> >>
> >> If you use pass_on(), then it is passing on data available to that
> >> specific call to your filter function.
> >>
> >> The distinction exists because your filter function can be called
> >> multiple times for a request. The latter is allowing you to pass on
> >> the data for that call, but still allowing you the option to  
> process
> >> data in a subsequent call of the filter function.
> >>
> >> The disable() call is used internally to mod_python to ensure that
> >> filter function is never called again for a specific request if the
> >> filter function itself raises an exception of some sort. If it  
> doesn't
> >> do this you could end up with a loop if the error in filter  
> function
> >> actually generates output, for which it would then call the filter
> >> function again, etc etc.
> >>
> >> FWIW, if you are concerned about performance in any way, then you
> >> shouldn't be using mod_python to implement Apache input/output
> >> filters. Yes you can write filters with mod_python, but it will  
> impact
> >> performance. For best performance you should write filters in C  
> code
> >> as proper Apache module.
> >>
> >> Graham
> >
> >
> > _______________________________________________
> > Mod_python mailing list
> > Mod_python@modpython.org
> > http://mailman.modpython.org/mailman/listinfo/mod_python
> >
> >
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python

--
Georges Racinet
Zope/CPS/Plone expertise & assistance





From oleksik at awa.mat.agh.edu.pl  Mon Dec 15 04:35:42 2008
From: oleksik at awa.mat.agh.edu.pl (Pawel Oleksik)
Date: Mon Dec 15 04:22:49 2008
Subject: [mod_python] Problems w/ sqlite3
Message-ID: <20081215093542.GA1071@awa.mat.agh.edu.pl>

Hi,

I've problem with connection mod_python and sqlite3. Google cannot solve the
problem too. 

Environment: <brand fresh slackware 12.2>
- apache 2.2.10
- python 2.5.2
- sqlite3 v. 3.6.6.2
- mod_python 3.3.1

Symptoms:
1) a database cannot be opened from procedures managed via mod_python
   however the same procedures work fine in interactive mode,
   (it's rather not a problem of rights to files),

2) searching for possible reasons I fount something surprising
 in interactive mode: 		sqlite3.sqlite_version == '3.6.6.2'
 in "mod_python mode" :  	sqlite3.sqlite_version == '3.3.7'

Could you tell me how to solve this problem?

Best regards
Pawel

From graham.dumpleton at gmail.com  Mon Dec 15 18:05:59 2008
From: graham.dumpleton at gmail.com (Graham Dumpleton)
Date: Mon Dec 15 18:06:04 2008
Subject: [mod_python] Problems w/ sqlite3
In-Reply-To: <20081215093542.GA1071@awa.mat.agh.edu.pl>
References: <20081215093542.GA1071@awa.mat.agh.edu.pl>
Message-ID: <88e286470812151505l4381b44an1e9965ce0f338334@mail.gmail.com>

2008/12/15 Pawel Oleksik <oleksik@awa.mat.agh.edu.pl>:
> Hi,
>
> I've problem with connection mod_python and sqlite3. Google cannot solve the
> problem too.
>
> Environment: <brand fresh slackware 12.2>
> - apache 2.2.10
> - python 2.5.2
> - sqlite3 v. 3.6.6.2
> - mod_python 3.3.1
>
> Symptoms:
> 1) a database cannot be opened from procedures managed via mod_python
>   however the same procedures work fine in interactive mode,
>   (it's rather not a problem of rights to files),
>
> 2) searching for possible reasons I fount something surprising
>  in interactive mode:           sqlite3.sqlite_version == '3.6.6.2'
>  in "mod_python mode" :         sqlite3.sqlite_version == '3.3.7'
>
> Could you tell me how to solve this problem?

You most likely have also loaded another Apache module which directly
links to the different version of SQLite. Or you are loading PHP and
it is in turn preloading a PHP module which uses SQLite.

Do similar thing as explained in:

  http://code.google.com/p/modwsgi/wiki/ApplicationIssues#MySQL_Shared_Library_Conflicts

for MySQL, but search for SQLite shared library instead. Adjust paths
based on where things are installed on your system.

Tat documentation is for mod_wsgi, but same applies to mod_python.

Graham
From martijn at xs4us.nu  Tue Dec 16 08:54:01 2008
From: martijn at xs4us.nu (Martijn Moeling)
Date: Tue Dec 16 08:54:22 2008
Subject: [mod_python] modpython, mysqldb best paractice
In-Reply-To: <5c06fa770607191404u2ca89fffo5cda2af6a744f6d7@mail.gmail.com>
References: <B6C73A5E30565245BB6D32B5F5DF7A520BEC8B@sense.emmastraat.pijnacker>
	<44BE8AF0.4060403@jgassociates.ca>
	<5c06fa770607191404u2ca89fffo5cda2af6a744f6d7@mail.gmail.com>
Message-ID: <D43325C9-C2B2-4545-8130-A2DDFCE028DB@xs4us.nu>

Hi,

I am running stable on a production machine (uptime > 1 year) on a  
6000 hits/week system:
(CentOs 64 bit)

I solved problems with hanging connections (cousing "memory leaks")

some hints and tips:

Never ever connect to mysql globally but connect to mysql in you  
handler stage
Not even consider connection pools, mysql is fast enough.

make the connection a part of the request object so you can pass the  
request object around
so req.connection and req.cursor exist.

right after you make the connection do a req.register_cleanup to a  
function similair to:

def closedb(req):
	req.cusor.close()
	req.connection.close()

Now when users stop the downloading (by pressing the stop button)or  
when a python error occurs the connection is closed too. Otherwise  
mysql will keep the connection and runs out after a while (for me this  
happenend at around 19000 request but that depends on system  
configuration and installed memory.

Off topic: when I started using SQLAlchemy i had to find a way to to  
this (since sqlAlchemy is using mysqldb) because this problem started  
to come back.
I have found a way around it by using a "hidden" feature of  
SQLAlchemy, If people are interested please let me know, i'll post it.

Martijn


On Jul 19, 2006, at 11:04 PM, Deron Meranda wrote:

> On 7/19/06, Jim Gallacher <jpg@jgassociates.ca> wrote:
>> CentOS kernel issues resulting in similar problem (but not just  
>> mysql):
>> http://bugs.centos.org/view.php?id=1174
>
> Ah, I did not know about that one.  From reading it, this sounds
> almost exactly like the problem Martijn is probably experiencing.
> I doubt mod_python memory leaks would exhibit the same type
> of behavior Martijn describes.  This is why I suggested
> monitoring with vmstat...if this is the problem it should show up
> quite obviously.  (Of course I don't know what kernel Martijn
> is running at this point in the thread)
>
> BTW, I'm also running everything under CentOS 4 as well
> (with the 2.6.9-34.0.1.ELsmp kernel), but have not seen any
> problems at all.  But then I'm in IA32, and not IA64, which is
> what this bug report as well as Martjin are running.  So it looks
> like a possible bad Linux kernel for 64-bit.
>
> Martijn, can you provide your kernel version, etc.?
>
> Good news is that a new fixed kernel is apparently on the way.
> -- 
> Deron Meranda

From andrewr at collab.net  Tue Dec 16 15:24:15 2008
From: andrewr at collab.net (Andrew Ryan)
Date: Tue Dec 16 15:24:29 2008
Subject: [mod_python] Output filters and 4xx error codes
Message-ID: <C56D4E6F.25236%andrewr@collab.net>

We have a mod_python tool which uses a FixupHandler to do some reverse
proxying and inline-rewriting (for the general idea, see Graham's example in
http://www.modpython.org/pipermail/mod_python/2006-March/020507.html). In
the handler, we register an output filter, which does the inspecting and
rewriting of content.

This works great as long as the response code sent back is 2xx or 3xx. But
in the case of a 4xx error code, the output filter doesn't run. Instead it
seems to trigger the proxy server's "ErrorDocument" setting. This is
problematic, since we'd like to see the real server's error page, not the
default one from the reverse proxy server.

As far as I can tell from inspecting the request object, the fixuphandler
never sees the returned content, only the incoming request. And the
outputfilter is the only place that the outgoing content is seen. If it
isn't run, well, I don't see any other chance to modify the content that
gets sent back to the client.

Sounds like this person was having a similar problem, but there is no
mention of a solution:
http://mail-archives.apache.org/mod_mbox/httpd-users/200710.mbox/%3Ca7a2b76b
0710020850i3b2a0a25wd005f85350526ffa@mail.gmail.com%3E
He was using mod_proxy though, which has the ProxyErrorOverride option. I
don't think there's an equivalent in mod_python, or something similar, but
I'm not sure.

I was hoping someone else here had seen this problem and could offer a
suggestion. 

Thanks
--andrew

From graham.dumpleton at gmail.com  Tue Dec 16 15:37:04 2008
From: graham.dumpleton at gmail.com (Graham Dumpleton)
Date: Tue Dec 16 15:37:07 2008
Subject: [mod_python] Output filters and 4xx error codes
In-Reply-To: <C56D4E6F.25236%andrewr@collab.net>
References: <C56D4E6F.25236%andrewr@collab.net>
Message-ID: <88e286470812161237u3d007245u2a21a605275405d0@mail.gmail.com>

Post your Apache configuration snippet which shows in what context you
are setting up your fixup handler, ie., what URL subset.

For error documents, is it falling back to builtin Apache error
document strings or is ErrorDocument directive actually being set for
that error type?

Graham

2008/12/17 Andrew Ryan <andrewr@collab.net>:
> We have a mod_python tool which uses a FixupHandler to do some reverse
> proxying and inline-rewriting (for the general idea, see Graham's example in
> http://www.modpython.org/pipermail/mod_python/2006-March/020507.html). In
> the handler, we register an output filter, which does the inspecting and
> rewriting of content.
>
> This works great as long as the response code sent back is 2xx or 3xx. But
> in the case of a 4xx error code, the output filter doesn't run. Instead it
> seems to trigger the proxy server's "ErrorDocument" setting. This is
> problematic, since we'd like to see the real server's error page, not the
> default one from the reverse proxy server.
>
> As far as I can tell from inspecting the request object, the fixuphandler
> never sees the returned content, only the incoming request. And the
> outputfilter is the only place that the outgoing content is seen. If it
> isn't run, well, I don't see any other chance to modify the content that
> gets sent back to the client.
>
> Sounds like this person was having a similar problem, but there is no
> mention of a solution:
> http://mail-archives.apache.org/mod_mbox/httpd-users/200710.mbox/%3Ca7a2b76b
> 0710020850i3b2a0a25wd005f85350526ffa@mail.gmail.com%3E
> He was using mod_proxy though, which has the ProxyErrorOverride option. I
> don't think there's an equivalent in mod_python, or something similar, but
> I'm not sure.
>
> I was hoping someone else here had seen this problem and could offer a
> suggestion.
>
> Thanks
> --andrew
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>
From oleksik at awa.mat.agh.edu.pl  Tue Dec 16 15:55:21 2008
From: oleksik at awa.mat.agh.edu.pl (Pawel Oleksik)
Date: Tue Dec 16 15:42:19 2008
Subject: [mod_python] Problems w/ sqlite3
In-Reply-To: <88e286470812151505l4381b44an1e9965ce0f338334@mail.gmail.com>
References: <20081215093542.GA1071@awa.mat.agh.edu.pl>
	<88e286470812151505l4381b44an1e9965ce0f338334@mail.gmail.com>
Message-ID: <20081216205521.GA767@awa.mat.agh.edu.pl>

On Tue, Dec 16, 2008 at 10:05:59AM +1100, Graham Dumpleton wrote:
> 2008/12/15 Pawel Oleksik <oleksik@awa.mat.agh.edu.pl>:
> > Hi,
> >
> > I've problem with connection mod_python and sqlite3. Google cannot solve the
> > problem too.
[...]
> You most likely have also loaded another Apache module which directly
> links to the different version of SQLite. Or you are loading PHP and
> it is in turn preloading a PHP module which uses SQLite.

Graham,

I've suspected mod_python, python or httpd, but I would never 
guess that the guilty one is PHP.
And it is.

Thanks a lot for the suggestion. You saved my life :)

Pawel


From graham.dumpleton at gmail.com  Tue Dec 16 15:53:54 2008
From: graham.dumpleton at gmail.com (Graham Dumpleton)
Date: Tue Dec 16 15:53:57 2008
Subject: [mod_python] modpython, mysqldb best paractice
In-Reply-To: <D43325C9-C2B2-4545-8130-A2DDFCE028DB@xs4us.nu>
References: <B6C73A5E30565245BB6D32B5F5DF7A520BEC8B@sense.emmastraat.pijnacker>
	<44BE8AF0.4060403@jgassociates.ca>
	<5c06fa770607191404u2ca89fffo5cda2af6a744f6d7@mail.gmail.com>
	<D43325C9-C2B2-4545-8130-A2DDFCE028DB@xs4us.nu>
Message-ID: <88e286470812161253j14d701b9v4dd4f4b52841b33e@mail.gmail.com>

2008/12/17 Martijn Moeling <martijn@xs4us.nu>:
> Hi,
>
> I am running stable on a production machine (uptime > 1 year) on a 6000
> hits/week system:
> (CentOs 64 bit)
>
> I solved problems with hanging connections (cousing "memory leaks")
>
> some hints and tips:
>
> Never ever connect to mysql globally but connect to mysql in you handler
> stage
> Not even consider connection pools, mysql is fast enough.
>
> make the connection a part of the request object so you can pass the request
> object around
> so req.connection and req.cursor exist.

Don't save it as req.connection, that attribute is a reference to the
Apache connection object for the HTTP request. Call them
'dbconnection' and 'dbcursor' to avoid conflicts.

Graham

> right after you make the connection do a req.register_cleanup to a function
> similair to:
>
> def closedb(req):
>        req.cusor.close()
>        req.connection.close()
>
> Now when users stop the downloading (by pressing the stop button)or when a
> python error occurs the connection is closed too. Otherwise mysql will keep
> the connection and runs out after a while (for me this happenend at around
> 19000 request but that depends on system configuration and installed memory.
>
> Off topic: when I started using SQLAlchemy i had to find a way to to this
> (since sqlAlchemy is using mysqldb) because this problem started to come
> back.
> I have found a way around it by using a "hidden" feature of SQLAlchemy, If
> people are interested please let me know, i'll post it.
>
> Martijn
>
>
> On Jul 19, 2006, at 11:04 PM, Deron Meranda wrote:
>
>> On 7/19/06, Jim Gallacher <jpg@jgassociates.ca> wrote:
>>>
>>> CentOS kernel issues resulting in similar problem (but not just mysql):
>>> http://bugs.centos.org/view.php?id=1174
>>
>> Ah, I did not know about that one.  From reading it, this sounds
>> almost exactly like the problem Martijn is probably experiencing.
>> I doubt mod_python memory leaks would exhibit the same type
>> of behavior Martijn describes.  This is why I suggested
>> monitoring with vmstat...if this is the problem it should show up
>> quite obviously.  (Of course I don't know what kernel Martijn
>> is running at this point in the thread)
>>
>> BTW, I'm also running everything under CentOS 4 as well
>> (with the 2.6.9-34.0.1.ELsmp kernel), but have not seen any
>> problems at all.  But then I'm in IA32, and not IA64, which is
>> what this bug report as well as Martjin are running.  So it looks
>> like a possible bad Linux kernel for 64-bit.
>>
>> Martijn, can you provide your kernel version, etc.?
>>
>> Good news is that a new fixed kernel is apparently on the way.
>> --
>> Deron Meranda
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>
From andrewr at collab.net  Tue Dec 16 15:57:39 2008
From: andrewr at collab.net (Andrew Ryan)
Date: Tue Dec 16 15:57:45 2008
Subject: [mod_python] Output filters and 4xx error codes
In-Reply-To: <88e286470812161237u3d007245u2a21a605275405d0@mail.gmail.com>
Message-ID: <C56D5643.25241%andrewr@collab.net>

On 12/16/08 12:37 PM, "Graham Dumpleton" <graham.dumpleton@gmail.com> wrote:

> Post your Apache configuration snippet which shows in what context you
> are setting up your fixup handler, ie., what URL subset.

<Location /apps>
     PythonPath "sys.path + [ '/usr/local/cubit-mgr.runtime/cgi-bin',
'/usr/local/cubit-mgr.runtime/Cubit']"
     # Make sure we don't accept gzip, etc. When we filter, we need to
     # insure we're working with plaintext.
     RequestHeader unset Accept-Encoding
     PythonFixupHandler modpython_humproxy
     ErrorDocument 502 /cubit/Help/hum_502_page
     # Apache 2.2 seems to send a 503 for what 2.0 sent a 502 for (the
     # back-end page not being available)
     ErrorDocument 503 /cubit/Help/hum_502_page
</Location>

> 
> For error documents, is it falling back to builtin Apache error
> document strings or is ErrorDocument directive actually being set for
> that error type?

Should be falling back to the built-in error document string
(/error/HTTP_FORBIDDEN.html.var), because 403 ErrorDocument directive is not
set anywhere else in the configuration, in any URL space or at the server
level.

--andrew

From graham.dumpleton at gmail.com  Tue Dec 16 16:20:33 2008
From: graham.dumpleton at gmail.com (Graham Dumpleton)
Date: Tue Dec 16 16:20:39 2008
Subject: [mod_python] Output filters and 4xx error codes
In-Reply-To: <C56D5643.25241%andrewr@collab.net>
References: <88e286470812161237u3d007245u2a21a605275405d0@mail.gmail.com>
	<C56D5643.25241%andrewr@collab.net>
Message-ID: <88e286470812161320w5cc1d1bey1d1d33c723a0a5be@mail.gmail.com>

2008/12/17 Andrew Ryan <andrewr@collab.net>:
> On 12/16/08 12:37 PM, "Graham Dumpleton" <graham.dumpleton@gmail.com> wrote:
>
>> Post your Apache configuration snippet which shows in what context you
>> are setting up your fixup handler, ie., what URL subset.
>
> <Location /apps>
>     PythonPath "sys.path + [ '/usr/local/cubit-mgr.runtime/cgi-bin',
> '/usr/local/cubit-mgr.runtime/Cubit']"
>     # Make sure we don't accept gzip, etc. When we filter, we need to
>     # insure we're working with plaintext.
>     RequestHeader unset Accept-Encoding
>     PythonFixupHandler modpython_humproxy
>     ErrorDocument 502 /cubit/Help/hum_502_page
>     # Apache 2.2 seems to send a 503 for what 2.0 sent a 502 for (the
>     # back-end page not being available)
>     ErrorDocument 503 /cubit/Help/hum_502_page
> </Location>
>
>>
>> For error documents, is it falling back to builtin Apache error
>> document strings or is ErrorDocument directive actually being set for
>> that error type?
>
> Should be falling back to the built-in error document string
> (/error/HTTP_FORBIDDEN.html.var), because 403 ErrorDocument directive is not
> set anywhere else in the configuration, in any URL space or at the server
> level.

It would only fall back to that error document if you have multi
language error documents enabled in Apache configuration. This is not
generally the default.

If it is using these documents, or if you defined your own
ErrorDocument for that error code, simply add a Location directive for
the error document URL subset and define another PythonFixupHandler to
be executed in that context and do what ever it is you want to do.

In other words, right now your fixup handler only covers /apps and not
default ones, or those in /cubit, so specify fixup handler for /error
or /cubit as appropriate.

Graham

> --andrew
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>
From scarfboy at gmail.com  Tue Dec 16 17:56:23 2008
From: scarfboy at gmail.com (Bart)
Date: Tue Dec 16 17:56:28 2008
Subject: [mod_python] Anyone had problems with BeautifulSoup?
Message-ID: <b71082d80812161456q4c070136n946b5dfc8e4a72f8@mail.gmail.com>

Has anyone had consistency problems using BeautifulSoup from mod_python?
It looks like after module reloads (vampire, m_p 3.1; have not tested
it elsewhere),
the object's functions may be uninitiated, in my case leading findAll
calls to do nothing.
(even though the BS object constructed every handler call).

I've got a number of things that it could be causd by to check into
but I thought I'd ask, just in case someone has figured this out.

Regards,
--Bart
From andrewr at collab.net  Tue Dec 16 18:46:28 2008
From: andrewr at collab.net (Andrew Ryan)
Date: Tue Dec 16 18:46:37 2008
Subject: [mod_python] Output filters and 4xx error codes
In-Reply-To: <88e286470812161320w5cc1d1bey1d1d33c723a0a5be@mail.gmail.com>
Message-ID: <C56D7DD4.25272%andrewr@collab.net>

On 12/16/08 1:20 PM, "Graham Dumpleton" <graham.dumpleton@gmail.com> wrote:
> 
> It would only fall back to that error document if you have multi
> language error documents enabled in Apache configuration. This is not
> generally the default.

OK, my bad there, I had assumed based on the default commented-out config
entries. I confirmed by experimenting with language settings in my browser.

> 
> If it is using these documents, or if you defined your own
> ErrorDocument for that error code, simply add a Location directive for
> the error document URL subset and define another PythonFixupHandler to
> be executed in that context and do what ever it is you want to do.
> 
> In other words, right now your fixup handler only covers /apps and not
> default ones, or those in /cubit, so specify fixup handler for /error
> or /cubit as appropriate.

I am probably mis-interpreting your directions, but this gives me slightly
different behavior, still not running the output filter though, and not
preserving the original error message sent by the client.

Into apps, I added:
 ErrorDocument 403 /cubit-humERROR

Then I defined the second fixuphandler:
<Location /cubit-humERROR>
     PythonPath "sys.path + [ '/usr/local/cubit-mgr.runtime/cgi-bin',
'/usr/local/cubit-mgr.runtime/Cubit']"
     PythonFixupHandler modpython_humproxy::fixuphandler_403
</Location>

And then defined the fixup handler to run the output filter:
def fixuphandler_403(req):
    log("403: status is %s" % req.status)
    # Define the output filter to use for fixing up location
    req.register_output_filter("LOCATIONFIXUP", location_fixup)
    req.add_output_filter("LOCATIONFIXUP")
    return apache.OK

I can confirm that fixuphandler_403() is getting run when the 403 is sent by
the real server. Still, I can confirm from logging that I inserted the
output filter is not running. It also seems that I lost the body of the
original error message from the client. If this is going to work, I'll need
that body as well, and not a generic error message body.

Could it be that once placed under control of ErrorDocument, apache won't
use output filters (or at least user-defined ones)?


--andrew

From graham.dumpleton at gmail.com  Tue Dec 16 18:58:02 2008
From: graham.dumpleton at gmail.com (Graham Dumpleton)
Date: Tue Dec 16 18:58:08 2008
Subject: [mod_python] Output filters and 4xx error codes
In-Reply-To: <C56D7DD4.25272%andrewr@collab.net>
References: <88e286470812161320w5cc1d1bey1d1d33c723a0a5be@mail.gmail.com>
	<C56D7DD4.25272%andrewr@collab.net>
Message-ID: <88e286470812161558xefd0d08g973c0be419f254be@mail.gmail.com>

What are you actually trying to change? Response content or response headers?

2008/12/17 Andrew Ryan <andrewr@collab.net>:
> On 12/16/08 1:20 PM, "Graham Dumpleton" <graham.dumpleton@gmail.com> wrote:
>>
>> It would only fall back to that error document if you have multi
>> language error documents enabled in Apache configuration. This is not
>> generally the default.
>
> OK, my bad there, I had assumed based on the default commented-out config
> entries. I confirmed by experimenting with language settings in my browser.
>
>>
>> If it is using these documents, or if you defined your own
>> ErrorDocument for that error code, simply add a Location directive for
>> the error document URL subset and define another PythonFixupHandler to
>> be executed in that context and do what ever it is you want to do.
>>
>> In other words, right now your fixup handler only covers /apps and not
>> default ones, or those in /cubit, so specify fixup handler for /error
>> or /cubit as appropriate.
>
> I am probably mis-interpreting your directions, but this gives me slightly
> different behavior, still not running the output filter though, and not
> preserving the original error message sent by the client.
>
> Into apps, I added:
>  ErrorDocument 403 /cubit-humERROR
>
> Then I defined the second fixuphandler:
> <Location /cubit-humERROR>
>     PythonPath "sys.path + [ '/usr/local/cubit-mgr.runtime/cgi-bin',
> '/usr/local/cubit-mgr.runtime/Cubit']"
>     PythonFixupHandler modpython_humproxy::fixuphandler_403
> </Location>
>
> And then defined the fixup handler to run the output filter:
> def fixuphandler_403(req):
>    log("403: status is %s" % req.status)
>    # Define the output filter to use for fixing up location
>    req.register_output_filter("LOCATIONFIXUP", location_fixup)
>    req.add_output_filter("LOCATIONFIXUP")
>    return apache.OK
>
> I can confirm that fixuphandler_403() is getting run when the 403 is sent by
> the real server. Still, I can confirm from logging that I inserted the
> output filter is not running. It also seems that I lost the body of the
> original error message from the client. If this is going to work, I'll need
> that body as well, and not a generic error message body.
>
> Could it be that once placed under control of ErrorDocument, apache won't
> use output filters (or at least user-defined ones)?
>
>
> --andrew
>
>
From andrewr at collab.net  Tue Dec 16 19:05:55 2008
From: andrewr at collab.net (Andrew Ryan)
Date: Tue Dec 16 19:06:02 2008
Subject: [mod_python] Output filters and 4xx error codes
In-Reply-To: <88e286470812161558xefd0d08g973c0be419f254be@mail.gmail.com>
Message-ID: <C56D8263.25276%andrewr@collab.net>

On 12/16/08 3:58 PM, "Graham Dumpleton" <graham.dumpleton@gmail.com> wrote:

> What are you actually trying to change? Response content or response headers?

Ideally, both (that's what I do in the non-4xx case). In this particular
case, it would be sufficient to change response content.

Below is the example response I'm working with now. I want my output filter
to rewrite this:
 <meta http-equiv='refresh' content='1;url=/login?from=%2F'/>
as:
 <meta http-equiv='refresh' content='1;url=/apps/myapp/login?from=%2F'/>

The actual response:
HTTP/1.0 403 Forbidden
Server: Winstone Servlet Engine v0.9.10
Content-Type: text/html;charset=UTF-8
Content-Length: 227
Connection: Close
Date: Thu, 15 Jan 2009 01:58:56 GMT
X-Powered-By: Servlet/2.5 (Winstone/0.9.10)
Set-Cookie: JSESSIONID=5f2a46cc8dc7c97e43fea358f60c4aeb; Path=/

<html><head><meta http-equiv='refresh'
content='1;url=/login?from=%2F'/><script>window.location.replace('/login?fro
m=%2F');</script></head><body style='backgournd-color:white; color:white;'>


From graham.dumpleton at gmail.com  Tue Dec 16 22:08:53 2008
From: graham.dumpleton at gmail.com (Graham Dumpleton)
Date: Tue Dec 16 22:08:56 2008
Subject: [mod_python] Anyone had problems with BeautifulSoup?
In-Reply-To: <b71082d80812161456q4c070136n946b5dfc8e4a72f8@mail.gmail.com>
References: <b71082d80812161456q4c070136n946b5dfc8e4a72f8@mail.gmail.com>
Message-ID: <88e286470812161908x6a8b3ae5u2646071ef5dc7ad4@mail.gmail.com>

A minimal test example would help, as would error tracebacks as
otherwise can only guess about what you are talking about.

Graham

2008/12/17 Bart <scarfboy@gmail.com>:
> Has anyone had consistency problems using BeautifulSoup from mod_python?
> It looks like after module reloads (vampire, m_p 3.1; have not tested
> it elsewhere),
> the object's functions may be uninitiated, in my case leading findAll
> calls to do nothing.
> (even though the BS object constructed every handler call).
>
> I've got a number of things that it could be causd by to check into
> but I thought I'd ask, just in case someone has figured this out.
>
> Regards,
> --Bart
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>
From graham.dumpleton at gmail.com  Tue Dec 16 23:05:08 2008
From: graham.dumpleton at gmail.com (Graham Dumpleton)
Date: Tue Dec 16 23:05:13 2008
Subject: [mod_python] Output filters and 4xx error codes
In-Reply-To: <C56D8263.25276%andrewr@collab.net>
References: <88e286470812161558xefd0d08g973c0be419f254be@mail.gmail.com>
	<C56D8263.25276%andrewr@collab.net>
Message-ID: <88e286470812162005p3213ea84g8eaef83339ee1ed@mail.gmail.com>

Reading back properly now through your original email and reading
linked mailing list discussions, if mod_proxy_http.c isn't passing
error responses from down stream server through output filter chain
and you really need to be getting those and modifying them, and not
just using ProxyErrorOverride to generate local error page, not sure
what you can do.

Graham

2008/12/17 Andrew Ryan <andrewr@collab.net>:
> On 12/16/08 3:58 PM, "Graham Dumpleton" <graham.dumpleton@gmail.com> wrote:
>
>> What are you actually trying to change? Response content or response headers?
>
> Ideally, both (that's what I do in the non-4xx case). In this particular
> case, it would be sufficient to change response content.
>
> Below is the example response I'm working with now. I want my output filter
> to rewrite this:
>  <meta http-equiv='refresh' content='1;url=/login?from=%2F'/>
> as:
>  <meta http-equiv='refresh' content='1;url=/apps/myapp/login?from=%2F'/>
>
> The actual response:
> HTTP/1.0 403 Forbidden
> Server: Winstone Servlet Engine v0.9.10
> Content-Type: text/html;charset=UTF-8
> Content-Length: 227
> Connection: Close
> Date: Thu, 15 Jan 2009 01:58:56 GMT
> X-Powered-By: Servlet/2.5 (Winstone/0.9.10)
> Set-Cookie: JSESSIONID=5f2a46cc8dc7c97e43fea358f60c4aeb; Path=/
>
> <html><head><meta http-equiv='refresh'
> content='1;url=/login?from=%2F'/><script>window.location.replace('/login?fro
> m=%2F');</script></head><body style='backgournd-color:white; color:white;'>
>
>
>
From martijn at xs4us.nu  Wed Dec 17 08:28:53 2008
From: martijn at xs4us.nu (Martijn Moeling)
Date: Wed Dec 17 08:29:17 2008
Subject: [mod_python] modpython, mysqldb best paractice
In-Reply-To: <88e286470812161253j14d701b9v4dd4f4b52841b33e@mail.gmail.com>
References: <B6C73A5E30565245BB6D32B5F5DF7A520BEC8B@sense.emmastraat.pijnacker>
	<44BE8AF0.4060403@jgassociates.ca>
	<5c06fa770607191404u2ca89fffo5cda2af6a744f6d7@mail.gmail.com>
	<D43325C9-C2B2-4545-8130-A2DDFCE028DB@xs4us.nu>
	<88e286470812161253j14d701b9v4dd4f4b52841b33e@mail.gmail.com>
Message-ID: <FAD0CF1F-4078-4C40-A08C-CCDEE5574B8C@xs4us.nu>

Graham,

Your right about req.connection, On my behalf a big sorry, since my  
new macbook pro made me answer an old question ("Date received" Column  
was sorted upside down)

Martijn

On Dec 16, 2008, at 9:53 PM, Graham Dumpleton wrote:

> 2008/12/17 Martijn Moeling <martijn@xs4us.nu>:
>> Hi,
>>
>> I am running stable on a production machine (uptime > 1 year) on a  
>> 6000
>> hits/week system:
>> (CentOs 64 bit)
>>
>> I solved problems with hanging connections (cousing "memory leaks")
>>
>> some hints and tips:
>>
>> Never ever connect to mysql globally but connect to mysql in you  
>> handler
>> stage
>> Not even consider connection pools, mysql is fast enough.
>>
>> make the connection a part of the request object so you can pass  
>> the request
>> object around
>> so req.connection and req.cursor exist.
>
> Don't save it as req.connection, that attribute is a reference to the
> Apache connection object for the HTTP request. Call them
> 'dbconnection' and 'dbcursor' to avoid conflicts.
>
> Graham
>
>> right after you make the connection do a req.register_cleanup to a  
>> function
>> similair to:
>>
>> def closedb(req):
>>       req.cusor.close()
>>       req.connection.close()
>>
>> Now when users stop the downloading (by pressing the stop button)or  
>> when a
>> python error occurs the connection is closed too. Otherwise mysql  
>> will keep
>> the connection and runs out after a while (for me this happenend at  
>> around
>> 19000 request but that depends on system configuration and  
>> installed memory.
>>
>> Off topic: when I started using SQLAlchemy i had to find a way to  
>> to this
>> (since sqlAlchemy is using mysqldb) because this problem started to  
>> come
>> back.
>> I have found a way around it by using a "hidden" feature of  
>> SQLAlchemy, If
>> people are interested please let me know, i'll post it.
>>
>> Martijn
>>
>>
>> On Jul 19, 2006, at 11:04 PM, Deron Meranda wrote:
>>
>>> On 7/19/06, Jim Gallacher <jpg@jgassociates.ca> wrote:
>>>>
>>>> CentOS kernel issues resulting in similar problem (but not just  
>>>> mysql):
>>>> http://bugs.centos.org/view.php?id=1174
>>>
>>> Ah, I did not know about that one.  From reading it, this sounds
>>> almost exactly like the problem Martijn is probably experiencing.
>>> I doubt mod_python memory leaks would exhibit the same type
>>> of behavior Martijn describes.  This is why I suggested
>>> monitoring with vmstat...if this is the problem it should show up
>>> quite obviously.  (Of course I don't know what kernel Martijn
>>> is running at this point in the thread)
>>>
>>> BTW, I'm also running everything under CentOS 4 as well
>>> (with the 2.6.9-34.0.1.ELsmp kernel), but have not seen any
>>> problems at all.  But then I'm in IA32, and not IA64, which is
>>> what this bug report as well as Martjin are running.  So it looks
>>> like a possible bad Linux kernel for 64-bit.
>>>
>>> Martijn, can you provide your kernel version, etc.?
>>>
>>> Good news is that a new fixed kernel is apparently on the way.
>>> --
>>> Deron Meranda
>>
>> _______________________________________________
>> Mod_python mailing list
>> Mod_python@modpython.org
>> http://mailman.modpython.org/mailman/listinfo/mod_python
>>

From andrewr at collab.net  Wed Dec 17 10:45:55 2008
From: andrewr at collab.net (Andrew Ryan)
Date: Wed Dec 17 10:46:03 2008
Subject: [mod_python] Output filters and 4xx error codes
In-Reply-To: <88e286470812162005p3213ea84g8eaef83339ee1ed@mail.gmail.com>
Message-ID: <C56E5EB3.25348%andrewr@collab.net>

On 12/16/08 8:05 PM, "Graham Dumpleton" <graham.dumpleton@gmail.com> wrote:

> Reading back properly now through your original email and reading
> linked mailing list discussions, if mod_proxy_http.c isn't passing
> error responses from down stream server through output filter chain
> and you really need to be getting those and modifying them, and not
> just using ProxyErrorOverride to generate local error page, not sure
> what you can do.
> 

OK, so would I be looking at having to patch mod_proxy_http.c?

At least I've confirmed that this problem exists outside of where mod_python
can deal with it. Thanks for your help!

--andrew

From oleksik at awa.mat.agh.edu.pl  Thu Dec 18 05:13:39 2008
From: oleksik at awa.mat.agh.edu.pl (Pawel Oleksik)
Date: Thu Dec 18 05:00:26 2008
Subject: [mod_python] Problems w/ sqlite3
In-Reply-To: <20081216205521.GA767@awa.mat.agh.edu.pl>
References: <20081215093542.GA1071@awa.mat.agh.edu.pl>
	<88e286470812151505l4381b44an1e9965ce0f338334@mail.gmail.com>
	<20081216205521.GA767@awa.mat.agh.edu.pl>
Message-ID: <20081218101339.GA1783@awa.mat.agh.edu.pl>

Graham,

Eventually, I've compiled php, experimenting w/ configurations.
Now there is a consistence in reported versions.
However it didn't help to force to work php+sqlite3+mod_python.
And according to Google this problem is unsolvable, isn't it?


So:

On Tue, Dec 16, 2008 at 09:55:21PM +0100, Pawel Oleksik wrote:
> [...] You saved my life :)

was to optimistic :(


Thus another question: does mod_wsgi work in environment: apache + php +
sqlite3? Or: is there other working solution?

Best regards,
P.O.

From graham.dumpleton at gmail.com  Thu Dec 18 05:10:54 2008
From: graham.dumpleton at gmail.com (Graham Dumpleton)
Date: Thu Dec 18 05:10:58 2008
Subject: [mod_python] Problems w/ sqlite3
In-Reply-To: <20081218101339.GA1783@awa.mat.agh.edu.pl>
References: <20081215093542.GA1071@awa.mat.agh.edu.pl>
	<88e286470812151505l4381b44an1e9965ce0f338334@mail.gmail.com>
	<20081216205521.GA767@awa.mat.agh.edu.pl>
	<20081218101339.GA1783@awa.mat.agh.edu.pl>
Message-ID: <88e286470812180210h5d784a68t3f43bef3899ffe2@mail.gmail.com>

2008/12/18 Pawel Oleksik <oleksik@awa.mat.agh.edu.pl>:
> Graham,
>
> Eventually, I've compiled php, experimenting w/ configurations.
> Now there is a consistence in reported versions.
> However it didn't help to force to work php+sqlite3+mod_python.
> And according to Google this problem is unsolvable, isn't it?
>
>
> So:
>
> On Tue, Dec 16, 2008 at 09:55:21PM +0100, Pawel Oleksik wrote:
>> [...] You saved my life :)
>
> was to optimistic :(
>
>
> Thus another question: does mod_wsgi work in environment: apache + php +
> sqlite3? Or: is there other working solution?

Did you try disabling PHP altogether and then see if your code worked?
This would eliminate PHP still causing a conflict.

And how do you know it is not a permissions problem? Apache/mod_python
runs as special user and SQLite has a requirement that both the
database file and the directory it is contained in is writable by the
user that code is running as. Most people stuff up on the directory
being writable. All parent directories back up to root need to also at
least be searchable by the user that Apache runs as.

So, how about actually posting what the error tracebacks are you are
getting so can see what actual problem is rather than what you think
it is.

Graham
From oleksik at awa.mat.agh.edu.pl  Thu Dec 18 06:09:02 2008
From: oleksik at awa.mat.agh.edu.pl (Pawel Oleksik)
Date: Thu Dec 18 05:55:49 2008
Subject: [mod_python] Problems w/ sqlite3
In-Reply-To: <88e286470812180210h5d784a68t3f43bef3899ffe2@mail.gmail.com>
References: <20081215093542.GA1071@awa.mat.agh.edu.pl>
	<88e286470812151505l4381b44an1e9965ce0f338334@mail.gmail.com>
	<20081216205521.GA767@awa.mat.agh.edu.pl>
	<20081218101339.GA1783@awa.mat.agh.edu.pl>
	<88e286470812180210h5d784a68t3f43bef3899ffe2@mail.gmail.com>
Message-ID: <20081218110902.GB1783@awa.mat.agh.edu.pl>

On Thu, Dec 18, 2008 at 09:10:54PM +1100, Graham Dumpleton wrote:
> Did you try disabling PHP altogether and then see if your code worked?
> This would eliminate PHP still causing a conflict.

You are absolutely right, I should be more thorough.
After commenting out the line that loads php (and restarting server) there is
still the problem. So indeed it seems to not be a conflict w/ php.

> And how do you know it is not a permissions problem? Apache/mod_python
> runs as special user and SQLite has a requirement that both the
I read about this problem, so for test time set rights to 777 (for directory)
and 555 (for file).  (No danger at this moment: the server is not connected to
world.) Owner of parent directory and file is now apache:apache.
All up-to-root path is readable and searchable.

> So, how about actually posting what the error tracebacks are you are
> getting so can see what actual problem is rather than what you think
> it is.
> 
> Graham

OK. Full log is quite long, so I'm pasting the most important lines.

Script output:

sqlite version: 2.3.2
sqlite3 version: 3.6.6.2
/usr/lib/python2.5/sqlite3/__init__.pyc
user: 80, GID: 80
groups: [80]
effective:
    EUID:80 EGID: 80

Test:

## here is an exception and below its traceback (partial):

MOD_PYTHON ERROR

ServerName:     '127.0.0.1'
DocumentRoot:   '/srv/httpd/htdocs'
URI:            '/py-test/one.py'
Location:       None
Directory:      '/home/ftp/py-test/'
Filename:       '/home/ftp/py-test/one.py'
PathInfo:       ''
Phase:          'PythonHandler'
Handler:        'one'

Traceback (most recent call last):
  File "/usr/lib/python2.5/site-packages/mod_python/importer.py", line 1537 ..
  File "/usr/lib/python2.5/site-packages/mod_python/importer.py", line 1229 ..
  File "/usr/lib/python2.5/site-packages/mod_python/importer.py", line 1128 ..

  File "/home/ftp/py-test/one.py", line 16, in handler
    request.write( open_db() )

  File "/home/ftp/py-test/one.py", line 48, in open_db
    conn = sqlite3.connect('/home/ftp/DB/db_test')

SystemError: NULL result without error in PyObject_Call

#--------------------

Regards,
P.O.

From graham.dumpleton at gmail.com  Thu Dec 18 06:20:08 2008
From: graham.dumpleton at gmail.com (Graham Dumpleton)
Date: Thu Dec 18 06:20:12 2008
Subject: [mod_python] Problems w/ sqlite3
In-Reply-To: <20081218110902.GB1783@awa.mat.agh.edu.pl>
References: <20081215093542.GA1071@awa.mat.agh.edu.pl>
	<88e286470812151505l4381b44an1e9965ce0f338334@mail.gmail.com>
	<20081216205521.GA767@awa.mat.agh.edu.pl>
	<20081218101339.GA1783@awa.mat.agh.edu.pl>
	<88e286470812180210h5d784a68t3f43bef3899ffe2@mail.gmail.com>
	<20081218110902.GB1783@awa.mat.agh.edu.pl>
Message-ID: <88e286470812180320w5609eaa9g6eecea24f49278d0@mail.gmail.com>

2008/12/18 Pawel Oleksik <oleksik@awa.mat.agh.edu.pl>:
> On Thu, Dec 18, 2008 at 09:10:54PM +1100, Graham Dumpleton wrote:
>> Did you try disabling PHP altogether and then see if your code worked?
>> This would eliminate PHP still causing a conflict.
>
> You are absolutely right, I should be more thorough.
> After commenting out the line that loads php (and restarting server) there is
> still the problem. So indeed it seems to not be a conflict w/ php.
>
>> And how do you know it is not a permissions problem? Apache/mod_python
>> runs as special user and SQLite has a requirement that both the
> I read about this problem, so for test time set rights to 777 (for directory)
> and 555 (for file).  (No danger at this moment: the server is not connected to
> world.) Owner of parent directory and file is now apache:apache.
> All up-to-root path is readable and searchable.
>
>> So, how about actually posting what the error tracebacks are you are
>> getting so can see what actual problem is rather than what you think
>> it is.
>>
>> Graham
>
> OK. Full log is quite long, so I'm pasting the most important lines.
>
> Script output:
>
> sqlite version: 2.3.2
> sqlite3 version: 3.6.6.2
> /usr/lib/python2.5/sqlite3/__init__.pyc
> user: 80, GID: 80
> groups: [80]
> effective:
>    EUID:80 EGID: 80
>
> Test:
>
> ## here is an exception and below its traceback (partial):
>
> MOD_PYTHON ERROR
>
> ServerName:     '127.0.0.1'
> DocumentRoot:   '/srv/httpd/htdocs'
> URI:            '/py-test/one.py'
> Location:       None
> Directory:      '/home/ftp/py-test/'
> Filename:       '/home/ftp/py-test/one.py'
> PathInfo:       ''
> Phase:          'PythonHandler'
> Handler:        'one'
>
> Traceback (most recent call last):
>  File "/usr/lib/python2.5/site-packages/mod_python/importer.py", line 1537 ..
>  File "/usr/lib/python2.5/site-packages/mod_python/importer.py", line 1229 ..
>  File "/usr/lib/python2.5/site-packages/mod_python/importer.py", line 1128 ..
>
>  File "/home/ftp/py-test/one.py", line 16, in handler
>    request.write( open_db() )
>
>  File "/home/ftp/py-test/one.py", line 48, in open_db
>    conn = sqlite3.connect('/home/ftp/DB/db_test')
>
> SystemError: NULL result without error in PyObject_Call

Did you check other Apache modules for dependencies like originally suggested.

http://www.mail-archive.com/sqlite-users@sqlite.org/msg34866.html

In particular, are you loading mod_mem_cache?

There is lots of other discussion around about this error as well and
other reasons it could occur as well. How many of them have you looked
at?

One thing to make sure you do, do a full stop of Apache and not just a
restart/reload. If the latter is done it can in some circumstances not
unloaded libraries properly and class may still exist.

Graham
From oleksik at awa.mat.agh.edu.pl  Thu Dec 18 07:26:19 2008
From: oleksik at awa.mat.agh.edu.pl (Pawel Oleksik)
Date: Thu Dec 18 07:13:06 2008
Subject: [mod_python] Problems w/ sqlite3
In-Reply-To: <88e286470812180320w5609eaa9g6eecea24f49278d0@mail.gmail.com>
References: <20081215093542.GA1071@awa.mat.agh.edu.pl>
	<88e286470812151505l4381b44an1e9965ce0f338334@mail.gmail.com>
	<20081216205521.GA767@awa.mat.agh.edu.pl>
	<20081218101339.GA1783@awa.mat.agh.edu.pl>
	<88e286470812180210h5d784a68t3f43bef3899ffe2@mail.gmail.com>
	<20081218110902.GB1783@awa.mat.agh.edu.pl>
	<88e286470812180320w5609eaa9g6eecea24f49278d0@mail.gmail.com>
Message-ID: <20081218122619.GC1783@awa.mat.agh.edu.pl>

On Thu, Dec 18, 2008 at 10:20:08PM +1100, Graham Dumpleton wrote:
> Did you check other Apache modules for dependencies like originally suggested.

Oh mine ...
"Do not be in hurry to much. You spend a lot of time making things twice."

I've checked "ldd modules/*" - no troubles.
I read 
> http://www.mail-archive.com/sqlite-users@sqlite.org/msg34866.html

and was happy because in Track: "Ticket #146 (closed defect: fixed)".

So I didn't switch off mod_mem_cache (since it's "fixed").
Now,  without this module problem has gone.

> Graham
Thanks,
Best regards
P.O.

From Paulo_Baptista at brown.edu  Thu Dec 18 14:40:00 2008
From: Paulo_Baptista at brown.edu (Baptista, Paulo)
Date: Thu Dec 18 14:41:08 2008
Subject: [mod_python] Help with Solaris build of mod_python with Apache 2.2
References: <20081215093542.GA1071@awa.mat.agh.edu.pl><88e286470812151505l4381b44an1e9965ce0f338334@mail.gmail.com><20081216205521.GA767@awa.mat.agh.edu.pl><20081218101339.GA1783@awa.mat.agh.edu.pl><88e286470812180210h5d784a68t3f43bef3899ffe2@mail.gmail.com><20081218110902.GB1783@awa.mat.agh.edu.pl><88e286470812180320w5609eaa9g6eecea24f49278d0@mail.gmail.com>
	<20081218122619.GC1783@awa.mat.agh.edu.pl> 
Message-ID: <08429EB7F8E69841B295084BA07401A9048C628A@MAIL3.AD.Brown.Edu>

Hoping to get help here.  I'm new to building from src packages and
Solaris.

Trying to make mod_python 3.3.1
Have Python 2.6.1 built
Have Apache2.2.3 built

Getting the following:

root@riker:/opt/local/src/mod_python-3.3.1 583 ./configure
--with-apxs=/usr/local/apache_2.2.3/bin/apxs
--with-python="/opt/local/src/Python-2.6.1/python -E"

checking for gcc... gcc
checking for C compiler default output file name... a.out
checking whether the C compiler works... yes
checking whether we are cross compiling... no
checking for suffix of executables... 
checking for suffix of object files... o
checking whether we are using the GNU C compiler... yes
checking whether gcc accepts -g... yes
checking for gcc option to accept ANSI C... none needed
checking for ar... ar
checking for a BSD-compatible install... ./install-sh -c
checking whether make sets $(MAKE)... yes
checking for main in -lm... yes
checking for an ANSI C-conforming const... yes
checking your blood pressure... a bit high, but we can proceed
configure: checking whether apxs is available...
checking for --with-apxs... /usr/local/apache_2.2.3/bin/apxs executable,
good
checking Apache version... 2.2.3
checking for Apache libexec directory... /usr/local/apache_2.2.3/modules
checking for Apache include directory...
-I/usr/local/apache_2.2.3/include
checking for gcc on Solaris possible missing _eprintf problem... "done"
checking for --with-python... /opt/local/src/Python-2.6.1/python -E
checking Python version... 2.6
checking Python install prefix... /usr/local
checking checking where python libraries are installed...
/usr/local/lib/python2.6
grep: can't open /usr/local/lib/python2.6/config/Makefile
grep: can't open /usr/local/lib/python2.6/config/Makefile
grep: can't open /usr/local/lib/python2.6/config/Makefile
grep: can't open /usr/local/lib/python2.6/config/Makefile
checking what libraries Python was linked with...
/usr/local/lib/python2.6/config/libpython2.6.a  
checking linker flags used to link Python... grep: can't open
/usr/local/lib/python2.6/config/Makefile
grep: can't open /usr/local/lib/python2.6/config/Makefile

checking where Python include files are...
-I/usr/local/include/python2.6
checking for --with-python-src... no
checking for --with-mutex-dir... no
Using MUTEX_DIR /tmp
checking for --with-max-locks... no
Using 8 MAX_LOCKS.
checking for --with-flex... no
checking for flex... /usr/local/bin/flex
found /usr/local/bin/flex, we'll use this. Use --with-flex to specify
another.
checking flex version... awk: syntax error near line 1
awk: bailing out near line 1
awk: syntax error near line 1
awk: bailing out near line 1
awk: syntax error near line 1
awk: bailing out near line 1
./configure: line 3187: test: : integer expression expected
configure: WARNING: Flex version 2.5.33 found.
    Version 2.5.31 or greater is required.  You can generally ignore
this
    warning unless you need to regenerate psp_parser.c from psp_parse.l.
    If you do need regenerate psp_parser.c, use --with-flex to specify
the
    location of the correct flex version. See the README for more
information.
configure: creating ./config.status
config.status: creating Makefile
config.status: creating src/Makefile
config.status: creating Doc/Makefile
config.status: creating src/include/mod_python.h
config.status: creating test/Makefile
config.status: creating test/testconf.py
config.status: creating dist/setup.py
config.status: creating dist/Makefile
root@riker:/opt/local/src/mod_python-3.3.1 584 make clean
cd src && make clean
make[1]: Entering directory `/opt/local/src/mod_python-3.3.1/src'
rm -rf  core libpython.a mod_python.so *~ .libs *.o *.slo *.lo *.la 
make[1]: Leaving directory `/opt/local/src/mod_python-3.3.1/src'
cd dist && make clean
make[1]: Entering directory `/opt/local/src/mod_python-3.3.1/dist'
rm -rf mod_python build dist
make[1]: Leaving directory `/opt/local/src/mod_python-3.3.1/dist'
cd test && make clean
make[1]: Entering directory `/opt/local/src/mod_python-3.3.1/test'
rm -f *.pyc *.pyo 
cd conf && rm -f test.conf
cd htdocs && rm -f *pyc *pyo
rm -rf logs
rm -rf tmp
make[1]: Leaving directory `/opt/local/src/mod_python-3.3.1/test'
rm -f core
root@riker:/opt/local/src/mod_python-3.3.1 585 make
make[1]: Entering directory `/opt/local/src/mod_python-3.3.1/src'
ar -x `gcc -print-libgcc-file-name` _eprintf.o
ar -x `gcc -print-libgcc-file-name` _floatdidf.o
ar -x `gcc -print-libgcc-file-name` _muldi3.o

Compiling for DSO.

/usr/local/apache_2.2.3/bin/apxs
-I/opt/local/src/mod_python-3.3.1/src/include
-I/usr/local/apache_2.2.3/include -I/usr/local/include/python2.6 -c
mod_python.c _apachemodule.c requestobject.c tableobject.c util.c
serverobject.c connobject.c filterobject.c hlist.c hlistobject.c
finfoobject.c  -lm  /usr/local/lib/python2.6/config/libpython2.6.a
_eprintf.o _floatdidf.o _muldi3.o
/usr/local/apr/build-1/libtool --silent --mode=compile gcc -prefer-pic
-DSOLARIS2=9 -D_POSIX_PTHREAD_SEMANTICS -D_REENTRANT
-D_LARGEFILE64_SOURCE -g -O2 -pthreads -I/usr/local/apache_2.2.3/include
-I/usr/local/apr/include/apr-1   -I/usr/local/apr/include/apr-1
-I/opt/local/openldap/include/ -I/usr/local/include
-I/opt/local/src/mod_python-3.3.1/src/include
-I/usr/local/apache_2.2.3/include -I/usr/local/include/python2.6  -c -o
mod_python.lo mod_python.c && touch mod_python.slo
In file included from mod_python.c:28:
/opt/local/src/mod_python-3.3.1/src/include/mod_python.h:80:20:
Python.h: No such file or directory
/opt/local/src/mod_python-3.3.1/src/include/mod_python.h:81:26:
structmember.h: No such file or directory
In file included from
/opt/local/src/mod_python-3.3.1/src/include/mod_python.h:99,
                 from mod_python.c:28:
/opt/local/src/mod_python-3.3.1/src/include/util.h:31: error: parse
error before '*' token
/opt/local/src/mod_python-3.3.1/src/include/util.h:31: warning: data
definition has no type or storage class
/opt/local/src/mod_python-3.3.1/src/include/util.h:32: error: parse
error before '*' token
/opt/local/src/mod_python-3.3.1/src/include/util.h:32: warning: data
definition has no type or storage class
/opt/local/src/mod_python-3.3.1/src/include/util.h:33: error: parse
error before '*' token
/opt/local/src/mod_python-3.3.1/src/include/util.h:33: warning: data
definition has no type or storage class
/opt/local/src/mod_python-3.3.1/src/include/util.h:34: error: parse
error before '*' token
/opt/local/src/mod_python-3.3.1/src/include/util.h:34: warning: data
definition has no type or storage class
/opt/local/src/mod_python-3.3.1/src/include/util.h:37: error: parse
error before '*' token
/opt/local/src/mod_python-3.3.1/src/include/util.h:37: error: parse
error before '*' token
/opt/local/src/mod_python-3.3.1/src/include/util.h:37: warning: data
definition has no type or storage class
/opt/local/src/mod_python-3.3.1/src/include/util.h:38: error: parse
error before '*' token
/opt/local/src/mod_python-3.3.1/src/include/util.h:38: warning: data
definition has no type or storage class
In file included from
/opt/local/src/mod_python-3.3.1/src/include/mod_python.h:100,
                 from mod_python.c:28:
/opt/local/src/mod_python-3.3.1/src/include/hlist.h:37: error: parse
error before "PyObject"
/opt/local/src/mod_python-3.3.1/src/include/hlist.h:37: warning: no
semicolon at end of struct or union
/opt/local/src/mod_python-3.3.1/src/include/hlist.h:49: error: parse
error before '}' token
/opt/local/src/mod_python-3.3.1/src/include/hlist.h:49: warning: data
definition has no type or storage class
/opt/local/src/mod_python-3.3.1/src/include/hlist.h:51: error: parse
error before '*' token
/opt/local/src/mod_python-3.3.1/src/include/hlist.h:51: error: parse
error before "PyObject"
/opt/local/src/mod_python-3.3.1/src/include/hlist.h:54: warning: data
definition has no type or storage class
/opt/local/src/mod_python-3.3.1/src/include/hlist.h:55: error: parse
error before '*' token
/opt/local/src/mod_python-3.3.1/src/include/hlist.h:55: error: parse
error before "hl_entry"
/opt/local/src/mod_python-3.3.1/src/include/hlist.h:58: warning: data
definition has no 
.
.
.
.

/local/src/mod_python-3.3.1/src/include/mod_python.h:216: error: parse
error before '*' token
/opt/local/src/mod_python-3.3.1/src/include/mod_python.h:216: warning:
data definition has no type or storage class
/opt/local/src/mod_python-3.3.1/src/include/mod_python.h:217: error:
parse error before '*' token
/opt/local/src/mod_python-3.3.1/src/include/mod_python.h:217: error:
parse error before '*' token
/opt/local/src/mod_python-3.3.1/src/include/mod_python.h:217: warning:
data definition has no type or storage class
/opt/local/src/mod_python-3.3.1/src/include/mod_python.h:218: error:
parse error before '*' token
/opt/local/src/mod_python-3.3.1/src/include/mod_python.h:218: warning:
data definition has no type or storage class
mod_python.c:31: error: parse error before '*' token
mod_python.c:31: warning: data definition has no type or storage class
mod_python.c:35: error: parse error before '*' token
mod_python.c:35: warning: data definition has no type or storage class
mod_python.c:54: error: parse error before '*' token
mod_python.c: In function `make_interpreter':
mod_python.c:56: error: `PyThreadState' undeclared (first use in this
function)
mod_python.c:56: error: (Each undeclared identifier is reported only
once
mod_python.c:56: error: for each function it appears in.)
mod_python.c:56: error: `tstate' undeclared (first use in this function)
mod_python.c:64: warning: passing arg 5 of `ap_log_error' from
incompatible pointer type
mod_python.c: At top level:
mod_python.c:88: error: parse error before '*' token
mod_python.c: In function `make_obcallback':
mod_python.c:91: error: `PyObject' undeclared (first use in this
function)
mod_python.c:91: error: `m' undeclared (first use in this function)
mod_python.c:92: error: `obCallBack' undeclared (first use in this
function)
mod_python.c:108: error: `path' undeclared (first use in this function)
mod_python.c:112: warning: passing arg 5 of `ap_log_error' from
incompatible pointer type
mod_python.c:121: warning: passing arg 5 of `ap_log_error' from
incompatible pointer type
mod_python.c:133: error: `o' undeclared (first use in this function)
mod_python.c:134: error: `d' undeclared (first use in this function)
mod_python.c:135: error: `f' undeclared (first use in this function)
mod_python.c:139: warning: passing arg 5 of `ap_log_error' from
incompatible pointer type
mod_python.c:151: warning: assignment makes pointer from integer without
a cast
mod_python.c:158: warning: passing arg 5 of `ap_log_error' from
incompatible pointer type
mod_python.c:161: warning: passing arg 5 of `ap_log_error' from
incompatible pointer type
mod_python.c: At top level:
mod_python.c:176: error: parse error before '*' token
mod_python.c:176: error: parse error before "PyInterpreterState"
mod_python.c: In function `save_interpreter':
mod_python.c:178: error: `PyObject' undeclared (first use in this
function)
mod_python.c:178: error: `p' undeclared (first use in this function)
mod_python.c:179: error: `idata' undeclared (first use in this function)
mod_python.c:181: error: parse error before ')' token
mod_python.c:182: error: `istate' undeclared (first use in this
function)
mod_python.c:186: error: `name' undeclared (first use in this function)
mod_python.c: At top level:
mod_python.c:199: error: parse error before '*' token
mod_python.c: In function `python_interpreter_name':
mod_python.c:201: error: `PyObject' undeclared (first use in this
function)
.
.
.
mod_python.c:2906: error: `req' undeclared (first use in this function)
mod_python.c: At top level:
mod_python.c:2908: error: parse error before '*' token
mod_python.c: In function `PythonTypeHandler':
mod_python.c:2909: error: `req' undeclared (first use in this function)
apxs:Error: Command failed with rc=65536
.
make[1]: *** [mod_python.so] Error 1
make[1]: Leaving directory `/opt/local/src/mod_python-3.3.1/src'
make: *** [do_dso] Error 2
root@riker:/opt/local/src/mod_python-3.3.1 586

From graham.dumpleton at gmail.com  Thu Dec 18 16:00:15 2008
From: graham.dumpleton at gmail.com (Graham Dumpleton)
Date: Thu Dec 18 16:00:20 2008
Subject: [mod_python] Help with Solaris build of mod_python with Apache 2.2
In-Reply-To: <08429EB7F8E69841B295084BA07401A9048C628A@MAIL3.AD.Brown.Edu>
References: <20081215093542.GA1071@awa.mat.agh.edu.pl>
	<88e286470812151505l4381b44an1e9965ce0f338334@mail.gmail.com>
	<20081216205521.GA767@awa.mat.agh.edu.pl>
	<20081218101339.GA1783@awa.mat.agh.edu.pl>
	<88e286470812180210h5d784a68t3f43bef3899ffe2@mail.gmail.com>
	<20081218110902.GB1783@awa.mat.agh.edu.pl>
	<88e286470812180320w5609eaa9g6eecea24f49278d0@mail.gmail.com>
	<20081218122619.GC1783@awa.mat.agh.edu.pl>
	<08429EB7F8E69841B295084BA07401A9048C628A@MAIL3.AD.Brown.Edu>
Message-ID: <88e286470812181300ycf1dfbcn54d3707a658f51b0@mail.gmail.com>

You don't have the headers files, configuration files etc, needed for
Python development installed.

If you have installed Python from set of prebuilt packages for
Solaris, you need to install the 'dev' variant of that package as
well. If you can't obtain it, you will need to build your own version
of Python from source code.

Graham

2008/12/19 Baptista, Paulo <Paulo_Baptista@brown.edu>:
> Hoping to get help here.  I'm new to building from src packages and
> Solaris.
>
> Trying to make mod_python 3.3.1
> Have Python 2.6.1 built
> Have Apache2.2.3 built
>
> Getting the following:
>
> root@riker:/opt/local/src/mod_python-3.3.1 583 ./configure
> --with-apxs=/usr/local/apache_2.2.3/bin/apxs
> --with-python="/opt/local/src/Python-2.6.1/python -E"
>
> checking for gcc... gcc
> checking for C compiler default output file name... a.out
> checking whether the C compiler works... yes
> checking whether we are cross compiling... no
> checking for suffix of executables...
> checking for suffix of object files... o
> checking whether we are using the GNU C compiler... yes
> checking whether gcc accepts -g... yes
> checking for gcc option to accept ANSI C... none needed
> checking for ar... ar
> checking for a BSD-compatible install... ./install-sh -c
> checking whether make sets $(MAKE)... yes
> checking for main in -lm... yes
> checking for an ANSI C-conforming const... yes
> checking your blood pressure... a bit high, but we can proceed
> configure: checking whether apxs is available...
> checking for --with-apxs... /usr/local/apache_2.2.3/bin/apxs executable,
> good
> checking Apache version... 2.2.3
> checking for Apache libexec directory... /usr/local/apache_2.2.3/modules
> checking for Apache include directory...
> -I/usr/local/apache_2.2.3/include
> checking for gcc on Solaris possible missing _eprintf problem... "done"
> checking for --with-python... /opt/local/src/Python-2.6.1/python -E
> checking Python version... 2.6
> checking Python install prefix... /usr/local
> checking checking where python libraries are installed...
> /usr/local/lib/python2.6
> grep: can't open /usr/local/lib/python2.6/config/Makefile
> grep: can't open /usr/local/lib/python2.6/config/Makefile
> grep: can't open /usr/local/lib/python2.6/config/Makefile
> grep: can't open /usr/local/lib/python2.6/config/Makefile
> checking what libraries Python was linked with...
> /usr/local/lib/python2.6/config/libpython2.6.a
> checking linker flags used to link Python... grep: can't open
> /usr/local/lib/python2.6/config/Makefile
> grep: can't open /usr/local/lib/python2.6/config/Makefile
>
> checking where Python include files are...
> -I/usr/local/include/python2.6
> checking for --with-python-src... no
> checking for --with-mutex-dir... no
> Using MUTEX_DIR /tmp
> checking for --with-max-locks... no
> Using 8 MAX_LOCKS.
> checking for --with-flex... no
> checking for flex... /usr/local/bin/flex
> found /usr/local/bin/flex, we'll use this. Use --with-flex to specify
> another.
> checking flex version... awk: syntax error near line 1
> awk: bailing out near line 1
> awk: syntax error near line 1
> awk: bailing out near line 1
> awk: syntax error near line 1
> awk: bailing out near line 1
> ./configure: line 3187: test: : integer expression expected
> configure: WARNING: Flex version 2.5.33 found.
>    Version 2.5.31 or greater is required.  You can generally ignore
> this
>    warning unless you need to regenerate psp_parser.c from psp_parse.l.
>    If you do need regenerate psp_parser.c, use --with-flex to specify
> the
>    location of the correct flex version. See the README for more
> information.
> configure: creating ./config.status
> config.status: creating Makefile
> config.status: creating src/Makefile
> config.status: creating Doc/Makefile
> config.status: creating src/include/mod_python.h
> config.status: creating test/Makefile
> config.status: creating test/testconf.py
> config.status: creating dist/setup.py
> config.status: creating dist/Makefile
> root@riker:/opt/local/src/mod_python-3.3.1 584 make clean
> cd src && make clean
> make[1]: Entering directory `/opt/local/src/mod_python-3.3.1/src'
> rm -rf  core libpython.a mod_python.so *~ .libs *.o *.slo *.lo *.la
> make[1]: Leaving directory `/opt/local/src/mod_python-3.3.1/src'
> cd dist && make clean
> make[1]: Entering directory `/opt/local/src/mod_python-3.3.1/dist'
> rm -rf mod_python build dist
> make[1]: Leaving directory `/opt/local/src/mod_python-3.3.1/dist'
> cd test && make clean
> make[1]: Entering directory `/opt/local/src/mod_python-3.3.1/test'
> rm -f *.pyc *.pyo
> cd conf && rm -f test.conf
> cd htdocs && rm -f *pyc *pyo
> rm -rf logs
> rm -rf tmp
> make[1]: Leaving directory `/opt/local/src/mod_python-3.3.1/test'
> rm -f core
> root@riker:/opt/local/src/mod_python-3.3.1 585 make
> make[1]: Entering directory `/opt/local/src/mod_python-3.3.1/src'
> ar -x `gcc -print-libgcc-file-name` _eprintf.o
> ar -x `gcc -print-libgcc-file-name` _floatdidf.o
> ar -x `gcc -print-libgcc-file-name` _muldi3.o
>
> Compiling for DSO.
>
> /usr/local/apache_2.2.3/bin/apxs
> -I/opt/local/src/mod_python-3.3.1/src/include
> -I/usr/local/apache_2.2.3/include -I/usr/local/include/python2.6 -c
> mod_python.c _apachemodule.c requestobject.c tableobject.c util.c
> serverobject.c connobject.c filterobject.c hlist.c hlistobject.c
> finfoobject.c  -lm  /usr/local/lib/python2.6/config/libpython2.6.a
> _eprintf.o _floatdidf.o _muldi3.o
> /usr/local/apr/build-1/libtool --silent --mode=compile gcc -prefer-pic
> -DSOLARIS2=9 -D_POSIX_PTHREAD_SEMANTICS -D_REENTRANT
> -D_LARGEFILE64_SOURCE -g -O2 -pthreads -I/usr/local/apache_2.2.3/include
> -I/usr/local/apr/include/apr-1   -I/usr/local/apr/include/apr-1
> -I/opt/local/openldap/include/ -I/usr/local/include
> -I/opt/local/src/mod_python-3.3.1/src/include
> -I/usr/local/apache_2.2.3/include -I/usr/local/include/python2.6  -c -o
> mod_python.lo mod_python.c && touch mod_python.slo
> In file included from mod_python.c:28:
> /opt/local/src/mod_python-3.3.1/src/include/mod_python.h:80:20:
> Python.h: No such file or directory
> /opt/local/src/mod_python-3.3.1/src/include/mod_python.h:81:26:
> structmember.h: No such file or directory
> In file included from
> /opt/local/src/mod_python-3.3.1/src/include/mod_python.h:99,
>                 from mod_python.c:28:
> /opt/local/src/mod_python-3.3.1/src/include/util.h:31: error: parse
> error before '*' token
> /opt/local/src/mod_python-3.3.1/src/include/util.h:31: warning: data
> definition has no type or storage class
> /opt/local/src/mod_python-3.3.1/src/include/util.h:32: error: parse
> error before '*' token
> /opt/local/src/mod_python-3.3.1/src/include/util.h:32: warning: data
> definition has no type or storage class
> /opt/local/src/mod_python-3.3.1/src/include/util.h:33: error: parse
> error before '*' token
> /opt/local/src/mod_python-3.3.1/src/include/util.h:33: warning: data
> definition has no type or storage class
> /opt/local/src/mod_python-3.3.1/src/include/util.h:34: error: parse
> error before '*' token
> /opt/local/src/mod_python-3.3.1/src/include/util.h:34: warning: data
> definition has no type or storage class
> /opt/local/src/mod_python-3.3.1/src/include/util.h:37: error: parse
> error before '*' token
> /opt/local/src/mod_python-3.3.1/src/include/util.h:37: error: parse
> error before '*' token
> /opt/local/src/mod_python-3.3.1/src/include/util.h:37: warning: data
> definition has no type or storage class
> /opt/local/src/mod_python-3.3.1/src/include/util.h:38: error: parse
> error before '*' token
> /opt/local/src/mod_python-3.3.1/src/include/util.h:38: warning: data
> definition has no type or storage class
> In file included from
> /opt/local/src/mod_python-3.3.1/src/include/mod_python.h:100,
>                 from mod_python.c:28:
> /opt/local/src/mod_python-3.3.1/src/include/hlist.h:37: error: parse
> error before "PyObject"
> /opt/local/src/mod_python-3.3.1/src/include/hlist.h:37: warning: no
> semicolon at end of struct or union
> /opt/local/src/mod_python-3.3.1/src/include/hlist.h:49: error: parse
> error before '}' token
> /opt/local/src/mod_python-3.3.1/src/include/hlist.h:49: warning: data
> definition has no type or storage class
> /opt/local/src/mod_python-3.3.1/src/include/hlist.h:51: error: parse
> error before '*' token
> /opt/local/src/mod_python-3.3.1/src/include/hlist.h:51: error: parse
> error before "PyObject"
> /opt/local/src/mod_python-3.3.1/src/include/hlist.h:54: warning: data
> definition has no type or storage class
> /opt/local/src/mod_python-3.3.1/src/include/hlist.h:55: error: parse
> error before '*' token
> /opt/local/src/mod_python-3.3.1/src/include/hlist.h:55: error: parse
> error before "hl_entry"
> /opt/local/src/mod_python-3.3.1/src/include/hlist.h:58: warning: data
> definition has no
> .
> .
> .
> .
>
> /local/src/mod_python-3.3.1/src/include/mod_python.h:216: error: parse
> error before '*' token
> /opt/local/src/mod_python-3.3.1/src/include/mod_python.h:216: warning:
> data definition has no type or storage class
> /opt/local/src/mod_python-3.3.1/src/include/mod_python.h:217: error:
> parse error before '*' token
> /opt/local/src/mod_python-3.3.1/src/include/mod_python.h:217: error:
> parse error before '*' token
> /opt/local/src/mod_python-3.3.1/src/include/mod_python.h:217: warning:
> data definition has no type or storage class
> /opt/local/src/mod_python-3.3.1/src/include/mod_python.h:218: error:
> parse error before '*' token
> /opt/local/src/mod_python-3.3.1/src/include/mod_python.h:218: warning:
> data definition has no type or storage class
> mod_python.c:31: error: parse error before '*' token
> mod_python.c:31: warning: data definition has no type or storage class
> mod_python.c:35: error: parse error before '*' token
> mod_python.c:35: warning: data definition has no type or storage class
> mod_python.c:54: error: parse error before '*' token
> mod_python.c: In function `make_interpreter':
> mod_python.c:56: error: `PyThreadState' undeclared (first use in this
> function)
> mod_python.c:56: error: (Each undeclared identifier is reported only
> once
> mod_python.c:56: error: for each function it appears in.)
> mod_python.c:56: error: `tstate' undeclared (first use in this function)
> mod_python.c:64: warning: passing arg 5 of `ap_log_error' from
> incompatible pointer type
> mod_python.c: At top level:
> mod_python.c:88: error: parse error before '*' token
> mod_python.c: In function `make_obcallback':
> mod_python.c:91: error: `PyObject' undeclared (first use in this
> function)
> mod_python.c:91: error: `m' undeclared (first use in this function)
> mod_python.c:92: error: `obCallBack' undeclared (first use in this
> function)
> mod_python.c:108: error: `path' undeclared (first use in this function)
> mod_python.c:112: warning: passing arg 5 of `ap_log_error' from
> incompatible pointer type
> mod_python.c:121: warning: passing arg 5 of `ap_log_error' from
> incompatible pointer type
> mod_python.c:133: error: `o' undeclared (first use in this function)
> mod_python.c:134: error: `d' undeclared (first use in this function)
> mod_python.c:135: error: `f' undeclared (first use in this function)
> mod_python.c:139: warning: passing arg 5 of `ap_log_error' from
> incompatible pointer type
> mod_python.c:151: warning: assignment makes pointer from integer without
> a cast
> mod_python.c:158: warning: passing arg 5 of `ap_log_error' from
> incompatible pointer type
> mod_python.c:161: warning: passing arg 5 of `ap_log_error' from
> incompatible pointer type
> mod_python.c: At top level:
> mod_python.c:176: error: parse error before '*' token
> mod_python.c:176: error: parse error before "PyInterpreterState"
> mod_python.c: In function `save_interpreter':
> mod_python.c:178: error: `PyObject' undeclared (first use in this
> function)
> mod_python.c:178: error: `p' undeclared (first use in this function)
> mod_python.c:179: error: `idata' undeclared (first use in this function)
> mod_python.c:181: error: parse error before ')' token
> mod_python.c:182: error: `istate' undeclared (first use in this
> function)
> mod_python.c:186: error: `name' undeclared (first use in this function)
> mod_python.c: At top level:
> mod_python.c:199: error: parse error before '*' token
> mod_python.c: In function `python_interpreter_name':
> mod_python.c:201: error: `PyObject' undeclared (first use in this
> function)
> .
> .
> .
> mod_python.c:2906: error: `req' undeclared (first use in this function)
> mod_python.c: At top level:
> mod_python.c:2908: error: parse error before '*' token
> mod_python.c: In function `PythonTypeHandler':
> mod_python.c:2909: error: `req' undeclared (first use in this function)
> apxs:Error: Command failed with rc=65536
> .
> make[1]: *** [mod_python.so] Error 1
> make[1]: Leaving directory `/opt/local/src/mod_python-3.3.1/src'
> make: *** [do_dso] Error 2
> root@riker:/opt/local/src/mod_python-3.3.1 586
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>
From Paulo_Baptista at brown.edu  Thu Dec 18 16:04:37 2008
From: Paulo_Baptista at brown.edu (Baptista, Paulo)
Date: Thu Dec 18 16:04:55 2008
Subject: [mod_python] Help with Solaris build of mod_python with Apache 2.2
In-Reply-To: <88e286470812181300ycf1dfbcn54d3707a658f51b0@mail.gmail.com>
References: <20081215093542.GA1071@awa.mat.agh.edu.pl>
	<88e286470812151505l4381b44an1e9965ce0f338334@mail.gmail.com>
	<20081216205521.GA767@awa.mat.agh.edu.pl>
	<20081218101339.GA1783@awa.mat.agh.edu.pl>
	<88e286470812180210h5d784a68t3f43bef3899ffe2@mail.gmail.com>
	<20081218110902.GB1783@awa.mat.agh.edu.pl>
	<88e286470812180320w5609eaa9g6eecea24f49278d0@mail.gmail.com>
	<20081218122619.GC1783@awa.mat.agh.edu.pl>
	<08429EB7F8E69841B295084BA07401A9048C628A@MAIL3.AD.Brown.Edu>
	<88e286470812181300ycf1dfbcn54d3707a658f51b0@mail.gmail.com>
Message-ID: <08429EB7F8E69841B295084BA07401A9048C62F7@MAIL3.AD.Brown.Edu>

Thanks for getting back to me Graham.

I built Python from source.  Isn't that all I need and what you're
saying?  I built Python 2.5.1 and 2.6.1.

root@riker:/opt/local/src/Python-2.6.1 7 ls -lrt
total 38314
-rwxrwxr-x   1 1000     1000        7122 Jun 14  2003 install-sh
-rw-rw-r--   1 1000     1000       13741 Feb 29  2008 LICENSE
-rw-rw-r--   1 1000     1000       29240 Sep  7 01:15 pyconfig.h.in
-rw-rw-r--   1 1000     1000       38629 Oct 21 12:48 Makefile.pre.in
-rw-rw-r--   1 1000     1000       81908 Nov  4 15:43 setup.py
-rw-rw-r--   1 1000     1000      105857 Nov 16 03:02 configure.in
-rwxrwxr-x   1 1000     1000      676114 Nov 16 12:57 configure
-rw-rw-r--   1 1000     1000       56949 Dec  3 21:59 README
drwxrwxr-x   2 1000     1000        1536 Dec  4 22:58 PCbuild
drwxrwxr-x   2 1000     1000        2048 Dec  4 22:58 Include
drwxrwxr-x   2 1000     1000         512 Dec  4 22:58 Grammar
drwxrwxr-x  23 1000     1000         512 Dec  4 22:58 Demo
drwxrwxr-x   5 1000     1000        1024 Dec  4 22:58 Misc
drwxrwxr-x  11 1000     1000         512 Dec  4 22:58 Mac
drwxrwxr-x  20 1000     1000         512 Dec  4 22:58 Tools
drwxrwxr-x  10 1000     1000        1024 Dec  4 22:58 PC
drwxrwxr-x   5 1000     1000         512 Dec  4 22:58 RISCOS
drwxrwxr-x  16 1000     1000        1024 Dec  4 23:25 Doc
-rwxr-xr-x   1 root     other      42971 Dec 16 11:38 config.status
-rw-r--r--   1 root     other      38609 Dec 16 11:38 Makefile.pre
-rw-r--r--   1 root     other      30718 Dec 16 11:38 pyconfig.h
-rw-r--r--   1 root     other      41758 Dec 16 11:38 Makefile
-rw-r--r--   1 root     other     512575 Dec 16 11:38 config.log
drwxrwxr-x   3 1000     1000        2048 Dec 16 11:45 Objects
drwxrwxr-x   2 1000     1000        1024 Dec 16 11:46 Parser
drwxrwxr-x   2 1000     1000        2560 Dec 16 11:47 Python
drwxrwxr-x   8 1000     1000        3584 Dec 16 11:48 Modules
-rw-r--r--   1 root     other    9575582 Dec 16 11:48 libpython2.6.a
-rwxr-xr-x   1 root     other    8277432 Dec 16 11:48 python
drwxrwxr-x  44 1000     1000        6144 Dec 16 11:48 Lib
drwxr-xr-x   5 root     other        512 Dec 16 11:55 build
-rw-r--r--   1 root     other         49 Dec 18 11:23 mail
root@riker:/opt/local/src/Python-2.6.1 8

-----Original Message-----
From: Graham Dumpleton [mailto:graham.dumpleton@gmail.com] 
Sent: Thursday, December 18, 2008 4:00 PM
To: Baptista, Paulo
Cc: mod_python@modpython.org
Subject: Re: [mod_python] Help with Solaris build of mod_python with
Apache 2.2

You don't have the headers files, configuration files etc, needed for
Python development installed.

If you have installed Python from set of prebuilt packages for
Solaris, you need to install the 'dev' variant of that package as
well. If you can't obtain it, you will need to build your own version
of Python from source code.

Graham

2008/12/19 Baptista, Paulo <Paulo_Baptista@brown.edu>:
> Hoping to get help here.  I'm new to building from src packages and
> Solaris.
>
> Trying to make mod_python 3.3.1
> Have Python 2.6.1 built
> Have Apache2.2.3 built
>
> Getting the following:
>
> root@riker:/opt/local/src/mod_python-3.3.1 583 ./configure
> --with-apxs=/usr/local/apache_2.2.3/bin/apxs
> --with-python="/opt/local/src/Python-2.6.1/python -E"
>
> checking for gcc... gcc
> checking for C compiler default output file name... a.out
> checking whether the C compiler works... yes
> checking whether we are cross compiling... no
> checking for suffix of executables...
> checking for suffix of object files... o
> checking whether we are using the GNU C compiler... yes
> checking whether gcc accepts -g... yes
> checking for gcc option to accept ANSI C... none needed
> checking for ar... ar
> checking for a BSD-compatible install... ./install-sh -c
> checking whether make sets $(MAKE)... yes
> checking for main in -lm... yes
> checking for an ANSI C-conforming const... yes
> checking your blood pressure... a bit high, but we can proceed
> configure: checking whether apxs is available...
> checking for --with-apxs... /usr/local/apache_2.2.3/bin/apxs
executable,
> good
> checking Apache version... 2.2.3
> checking for Apache libexec directory...
/usr/local/apache_2.2.3/modules
> checking for Apache include directory...
> -I/usr/local/apache_2.2.3/include
> checking for gcc on Solaris possible missing _eprintf problem...
"done"
> checking for --with-python... /opt/local/src/Python-2.6.1/python -E
> checking Python version... 2.6
> checking Python install prefix... /usr/local
> checking checking where python libraries are installed...
> /usr/local/lib/python2.6
> grep: can't open /usr/local/lib/python2.6/config/Makefile
> grep: can't open /usr/local/lib/python2.6/config/Makefile
> grep: can't open /usr/local/lib/python2.6/config/Makefile
> grep: can't open /usr/local/lib/python2.6/config/Makefile
> checking what libraries Python was linked with...
> /usr/local/lib/python2.6/config/libpython2.6.a
> checking linker flags used to link Python... grep: can't open
> /usr/local/lib/python2.6/config/Makefile
> grep: can't open /usr/local/lib/python2.6/config/Makefile
>
> checking where Python include files are...
> -I/usr/local/include/python2.6
> checking for --with-python-src... no
> checking for --with-mutex-dir... no
> Using MUTEX_DIR /tmp
> checking for --with-max-locks... no
> Using 8 MAX_LOCKS.
> checking for --with-flex... no
> checking for flex... /usr/local/bin/flex
> found /usr/local/bin/flex, we'll use this. Use --with-flex to specify
> another.
> checking flex version... awk: syntax error near line 1
> awk: bailing out near line 1
> awk: syntax error near line 1
> awk: bailing out near line 1
> awk: syntax error near line 1
> awk: bailing out near line 1
> ./configure: line 3187: test: : integer expression expected
> configure: WARNING: Flex version 2.5.33 found.
>    Version 2.5.31 or greater is required.  You can generally ignore
> this
>    warning unless you need to regenerate psp_parser.c from
psp_parse.l.
>    If you do need regenerate psp_parser.c, use --with-flex to specify
> the
>    location of the correct flex version. See the README for more
> information.
> configure: creating ./config.status
> config.status: creating Makefile
> config.status: creating src/Makefile
> config.status: creating Doc/Makefile
> config.status: creating src/include/mod_python.h
> config.status: creating test/Makefile
> config.status: creating test/testconf.py
> config.status: creating dist/setup.py
> config.status: creating dist/Makefile
> root@riker:/opt/local/src/mod_python-3.3.1 584 make clean
> cd src && make clean
> make[1]: Entering directory `/opt/local/src/mod_python-3.3.1/src'
> rm -rf  core libpython.a mod_python.so *~ .libs *.o *.slo *.lo *.la
> make[1]: Leaving directory `/opt/local/src/mod_python-3.3.1/src'
> cd dist && make clean
> make[1]: Entering directory `/opt/local/src/mod_python-3.3.1/dist'
> rm -rf mod_python build dist
> make[1]: Leaving directory `/opt/local/src/mod_python-3.3.1/dist'
> cd test && make clean
> make[1]: Entering directory `/opt/local/src/mod_python-3.3.1/test'
> rm -f *.pyc *.pyo
> cd conf && rm -f test.conf
> cd htdocs && rm -f *pyc *pyo
> rm -rf logs
> rm -rf tmp
> make[1]: Leaving directory `/opt/local/src/mod_python-3.3.1/test'
> rm -f core
> root@riker:/opt/local/src/mod_python-3.3.1 585 make
> make[1]: Entering directory `/opt/local/src/mod_python-3.3.1/src'
> ar -x `gcc -print-libgcc-file-name` _eprintf.o
> ar -x `gcc -print-libgcc-file-name` _floatdidf.o
> ar -x `gcc -print-libgcc-file-name` _muldi3.o
>
> Compiling for DSO.
>
> /usr/local/apache_2.2.3/bin/apxs
> -I/opt/local/src/mod_python-3.3.1/src/include
> -I/usr/local/apache_2.2.3/include -I/usr/local/include/python2.6 -c
> mod_python.c _apachemodule.c requestobject.c tableobject.c util.c
> serverobject.c connobject.c filterobject.c hlist.c hlistobject.c
> finfoobject.c  -lm  /usr/local/lib/python2.6/config/libpython2.6.a
> _eprintf.o _floatdidf.o _muldi3.o
> /usr/local/apr/build-1/libtool --silent --mode=compile gcc -prefer-pic
> -DSOLARIS2=9 -D_POSIX_PTHREAD_SEMANTICS -D_REENTRANT
> -D_LARGEFILE64_SOURCE -g -O2 -pthreads
-I/usr/local/apache_2.2.3/include
> -I/usr/local/apr/include/apr-1   -I/usr/local/apr/include/apr-1
> -I/opt/local/openldap/include/ -I/usr/local/include
> -I/opt/local/src/mod_python-3.3.1/src/include
> -I/usr/local/apache_2.2.3/include -I/usr/local/include/python2.6  -c
-o
> mod_python.lo mod_python.c && touch mod_python.slo
> In file included from mod_python.c:28:
> /opt/local/src/mod_python-3.3.1/src/include/mod_python.h:80:20:
> Python.h: No such file or directory
> /opt/local/src/mod_python-3.3.1/src/include/mod_python.h:81:26:
> structmember.h: No such file or directory
> In file included from
> /opt/local/src/mod_python-3.3.1/src/include/mod_python.h:99,
>                 from mod_python.c:28:
> /opt/local/src/mod_python-3.3.1/src/include/util.h:31: error: parse
> error before '*' token
> /opt/local/src/mod_python-3.3.1/src/include/util.h:31: warning: data
> definition has no type or storage class
> /opt/local/src/mod_python-3.3.1/src/include/util.h:32: error: parse
> error before '*' token
> /opt/local/src/mod_python-3.3.1/src/include/util.h:32: warning: data
> definition has no type or storage class
> /opt/local/src/mod_python-3.3.1/src/include/util.h:33: error: parse
> error before '*' token
> /opt/local/src/mod_python-3.3.1/src/include/util.h:33: warning: data
> definition has no type or storage class
> /opt/local/src/mod_python-3.3.1/src/include/util.h:34: error: parse
> error before '*' token
> /opt/local/src/mod_python-3.3.1/src/include/util.h:34: warning: data
> definition has no type or storage class
> /opt/local/src/mod_python-3.3.1/src/include/util.h:37: error: parse
> error before '*' token
> /opt/local/src/mod_python-3.3.1/src/include/util.h:37: error: parse
> error before '*' token
> /opt/local/src/mod_python-3.3.1/src/include/util.h:37: warning: data
> definition has no type or storage class
> /opt/local/src/mod_python-3.3.1/src/include/util.h:38: error: parse
> error before '*' token
> /opt/local/src/mod_python-3.3.1/src/include/util.h:38: warning: data
> definition has no type or storage class
> In file included from
> /opt/local/src/mod_python-3.3.1/src/include/mod_python.h:100,
>                 from mod_python.c:28:
> /opt/local/src/mod_python-3.3.1/src/include/hlist.h:37: error: parse
> error before "PyObject"
> /opt/local/src/mod_python-3.3.1/src/include/hlist.h:37: warning: no
> semicolon at end of struct or union
> /opt/local/src/mod_python-3.3.1/src/include/hlist.h:49: error: parse
> error before '}' token
> /opt/local/src/mod_python-3.3.1/src/include/hlist.h:49: warning: data
> definition has no type or storage class
> /opt/local/src/mod_python-3.3.1/src/include/hlist.h:51: error: parse
> error before '*' token
> /opt/local/src/mod_python-3.3.1/src/include/hlist.h:51: error: parse
> error before "PyObject"
> /opt/local/src/mod_python-3.3.1/src/include/hlist.h:54: warning: data
> definition has no type or storage class
> /opt/local/src/mod_python-3.3.1/src/include/hlist.h:55: error: parse
> error before '*' token
> /opt/local/src/mod_python-3.3.1/src/include/hlist.h:55: error: parse
> error before "hl_entry"
> /opt/local/src/mod_python-3.3.1/src/include/hlist.h:58: warning: data
> definition has no
> .
> .
> .
> .
>
> /local/src/mod_python-3.3.1/src/include/mod_python.h:216: error: parse
> error before '*' token
> /opt/local/src/mod_python-3.3.1/src/include/mod_python.h:216: warning:
> data definition has no type or storage class
> /opt/local/src/mod_python-3.3.1/src/include/mod_python.h:217: error:
> parse error before '*' token
> /opt/local/src/mod_python-3.3.1/src/include/mod_python.h:217: error:
> parse error before '*' token
> /opt/local/src/mod_python-3.3.1/src/include/mod_python.h:217: warning:
> data definition has no type or storage class
> /opt/local/src/mod_python-3.3.1/src/include/mod_python.h:218: error:
> parse error before '*' token
> /opt/local/src/mod_python-3.3.1/src/include/mod_python.h:218: warning:
> data definition has no type or storage class
> mod_python.c:31: error: parse error before '*' token
> mod_python.c:31: warning: data definition has no type or storage class
> mod_python.c:35: error: parse error before '*' token
> mod_python.c:35: warning: data definition has no type or storage class
> mod_python.c:54: error: parse error before '*' token
> mod_python.c: In function `make_interpreter':
> mod_python.c:56: error: `PyThreadState' undeclared (first use in this
> function)
> mod_python.c:56: error: (Each undeclared identifier is reported only
> once
> mod_python.c:56: error: for each function it appears in.)
> mod_python.c:56: error: `tstate' undeclared (first use in this
function)
> mod_python.c:64: warning: passing arg 5 of `ap_log_error' from
> incompatible pointer type
> mod_python.c: At top level:
> mod_python.c:88: error: parse error before '*' token
> mod_python.c: In function `make_obcallback':
> mod_python.c:91: error: `PyObject' undeclared (first use in this
> function)
> mod_python.c:91: error: `m' undeclared (first use in this function)
> mod_python.c:92: error: `obCallBack' undeclared (first use in this
> function)
> mod_python.c:108: error: `path' undeclared (first use in this
function)
> mod_python.c:112: warning: passing arg 5 of `ap_log_error' from
> incompatible pointer type
> mod_python.c:121: warning: passing arg 5 of `ap_log_error' from
> incompatible pointer type
> mod_python.c:133: error: `o' undeclared (first use in this function)
> mod_python.c:134: error: `d' undeclared (first use in this function)
> mod_python.c:135: error: `f' undeclared (first use in this function)
> mod_python.c:139: warning: passing arg 5 of `ap_log_error' from
> incompatible pointer type
> mod_python.c:151: warning: assignment makes pointer from integer
without
> a cast
> mod_python.c:158: warning: passing arg 5 of `ap_log_error' from
> incompatible pointer type
> mod_python.c:161: warning: passing arg 5 of `ap_log_error' from
> incompatible pointer type
> mod_python.c: At top level:
> mod_python.c:176: error: parse error before '*' token
> mod_python.c:176: error: parse error before "PyInterpreterState"
> mod_python.c: In function `save_interpreter':
> mod_python.c:178: error: `PyObject' undeclared (first use in this
> function)
> mod_python.c:178: error: `p' undeclared (first use in this function)
> mod_python.c:179: error: `idata' undeclared (first use in this
function)
> mod_python.c:181: error: parse error before ')' token
> mod_python.c:182: error: `istate' undeclared (first use in this
> function)
> mod_python.c:186: error: `name' undeclared (first use in this
function)
> mod_python.c: At top level:
> mod_python.c:199: error: parse error before '*' token
> mod_python.c: In function `python_interpreter_name':
> mod_python.c:201: error: `PyObject' undeclared (first use in this
> function)
> .
> .
> .
> mod_python.c:2906: error: `req' undeclared (first use in this
function)
> mod_python.c: At top level:
> mod_python.c:2908: error: parse error before '*' token
> mod_python.c: In function `PythonTypeHandler':
> mod_python.c:2909: error: `req' undeclared (first use in this
function)
> apxs:Error: Command failed with rc=65536
> .
> make[1]: *** [mod_python.so] Error 1
> make[1]: Leaving directory `/opt/local/src/mod_python-3.3.1/src'
> make: *** [do_dso] Error 2
> root@riker:/opt/local/src/mod_python-3.3.1 586
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>

From graham.dumpleton at gmail.com  Thu Dec 18 16:06:36 2008
From: graham.dumpleton at gmail.com (Graham Dumpleton)
Date: Thu Dec 18 16:06:38 2008
Subject: [mod_python] Help with Solaris build of mod_python with Apache 2.2
In-Reply-To: <08429EB7F8E69841B295084BA07401A9048C62F7@MAIL3.AD.Brown.Edu>
References: <20081215093542.GA1071@awa.mat.agh.edu.pl>
	<20081216205521.GA767@awa.mat.agh.edu.pl>
	<20081218101339.GA1783@awa.mat.agh.edu.pl>
	<88e286470812180210h5d784a68t3f43bef3899ffe2@mail.gmail.com>
	<20081218110902.GB1783@awa.mat.agh.edu.pl>
	<88e286470812180320w5609eaa9g6eecea24f49278d0@mail.gmail.com>
	<20081218122619.GC1783@awa.mat.agh.edu.pl>
	<08429EB7F8E69841B295084BA07401A9048C628A@MAIL3.AD.Brown.Edu>
	<88e286470812181300ycf1dfbcn54d3707a658f51b0@mail.gmail.com>
	<08429EB7F8E69841B295084BA07401A9048C62F7@MAIL3.AD.Brown.Edu>
Message-ID: <88e286470812181306l27b3e156k1e1227a132f637be@mail.gmail.com>

2008/12/19 Baptista, Paulo <Paulo_Baptista@brown.edu>:
> Thanks for getting back to me Graham.
>
> I built Python from source.  Isn't that all I need and what you're
> saying?  I built Python 2.5.1 and 2.6.1.

Somehow it hasn't been installed properly as your output clearly shows:

  /usr/local/lib/python2.6/config/Makefile

as having not being installed.

Check to see if that directory exists and post what it contains.

Graham

> root@riker:/opt/local/src/Python-2.6.1 7 ls -lrt
> total 38314
> -rwxrwxr-x   1 1000     1000        7122 Jun 14  2003 install-sh
> -rw-rw-r--   1 1000     1000       13741 Feb 29  2008 LICENSE
> -rw-rw-r--   1 1000     1000       29240 Sep  7 01:15 pyconfig.h.in
> -rw-rw-r--   1 1000     1000       38629 Oct 21 12:48 Makefile.pre.in
> -rw-rw-r--   1 1000     1000       81908 Nov  4 15:43 setup.py
> -rw-rw-r--   1 1000     1000      105857 Nov 16 03:02 configure.in
> -rwxrwxr-x   1 1000     1000      676114 Nov 16 12:57 configure
> -rw-rw-r--   1 1000     1000       56949 Dec  3 21:59 README
> drwxrwxr-x   2 1000     1000        1536 Dec  4 22:58 PCbuild
> drwxrwxr-x   2 1000     1000        2048 Dec  4 22:58 Include
> drwxrwxr-x   2 1000     1000         512 Dec  4 22:58 Grammar
> drwxrwxr-x  23 1000     1000         512 Dec  4 22:58 Demo
> drwxrwxr-x   5 1000     1000        1024 Dec  4 22:58 Misc
> drwxrwxr-x  11 1000     1000         512 Dec  4 22:58 Mac
> drwxrwxr-x  20 1000     1000         512 Dec  4 22:58 Tools
> drwxrwxr-x  10 1000     1000        1024 Dec  4 22:58 PC
> drwxrwxr-x   5 1000     1000         512 Dec  4 22:58 RISCOS
> drwxrwxr-x  16 1000     1000        1024 Dec  4 23:25 Doc
> -rwxr-xr-x   1 root     other      42971 Dec 16 11:38 config.status
> -rw-r--r--   1 root     other      38609 Dec 16 11:38 Makefile.pre
> -rw-r--r--   1 root     other      30718 Dec 16 11:38 pyconfig.h
> -rw-r--r--   1 root     other      41758 Dec 16 11:38 Makefile
> -rw-r--r--   1 root     other     512575 Dec 16 11:38 config.log
> drwxrwxr-x   3 1000     1000        2048 Dec 16 11:45 Objects
> drwxrwxr-x   2 1000     1000        1024 Dec 16 11:46 Parser
> drwxrwxr-x   2 1000     1000        2560 Dec 16 11:47 Python
> drwxrwxr-x   8 1000     1000        3584 Dec 16 11:48 Modules
> -rw-r--r--   1 root     other    9575582 Dec 16 11:48 libpython2.6.a
> -rwxr-xr-x   1 root     other    8277432 Dec 16 11:48 python
> drwxrwxr-x  44 1000     1000        6144 Dec 16 11:48 Lib
> drwxr-xr-x   5 root     other        512 Dec 16 11:55 build
> -rw-r--r--   1 root     other         49 Dec 18 11:23 mail
> root@riker:/opt/local/src/Python-2.6.1 8
>
> -----Original Message-----
> From: Graham Dumpleton [mailto:graham.dumpleton@gmail.com]
> Sent: Thursday, December 18, 2008 4:00 PM
> To: Baptista, Paulo
> Cc: mod_python@modpython.org
> Subject: Re: [mod_python] Help with Solaris build of mod_python with
> Apache 2.2
>
> You don't have the headers files, configuration files etc, needed for
> Python development installed.
>
> If you have installed Python from set of prebuilt packages for
> Solaris, you need to install the 'dev' variant of that package as
> well. If you can't obtain it, you will need to build your own version
> of Python from source code.
>
> Graham
>
> 2008/12/19 Baptista, Paulo <Paulo_Baptista@brown.edu>:
>> Hoping to get help here.  I'm new to building from src packages and
>> Solaris.
>>
>> Trying to make mod_python 3.3.1
>> Have Python 2.6.1 built
>> Have Apache2.2.3 built
>>
>> Getting the following:
>>
>> root@riker:/opt/local/src/mod_python-3.3.1 583 ./configure
>> --with-apxs=/usr/local/apache_2.2.3/bin/apxs
>> --with-python="/opt/local/src/Python-2.6.1/python -E"
>>
>> checking for gcc... gcc
>> checking for C compiler default output file name... a.out
>> checking whether the C compiler works... yes
>> checking whether we are cross compiling... no
>> checking for suffix of executables...
>> checking for suffix of object files... o
>> checking whether we are using the GNU C compiler... yes
>> checking whether gcc accepts -g... yes
>> checking for gcc option to accept ANSI C... none needed
>> checking for ar... ar
>> checking for a BSD-compatible install... ./install-sh -c
>> checking whether make sets $(MAKE)... yes
>> checking for main in -lm... yes
>> checking for an ANSI C-conforming const... yes
>> checking your blood pressure... a bit high, but we can proceed
>> configure: checking whether apxs is available...
>> checking for --with-apxs... /usr/local/apache_2.2.3/bin/apxs
> executable,
>> good
>> checking Apache version... 2.2.3
>> checking for Apache libexec directory...
> /usr/local/apache_2.2.3/modules
>> checking for Apache include directory...
>> -I/usr/local/apache_2.2.3/include
>> checking for gcc on Solaris possible missing _eprintf problem...
> "done"
>> checking for --with-python... /opt/local/src/Python-2.6.1/python -E
>> checking Python version... 2.6
>> checking Python install prefix... /usr/local
>> checking checking where python libraries are installed...
>> /usr/local/lib/python2.6
>> grep: can't open /usr/local/lib/python2.6/config/Makefile
>> grep: can't open /usr/local/lib/python2.6/config/Makefile
>> grep: can't open /usr/local/lib/python2.6/config/Makefile
>> grep: can't open /usr/local/lib/python2.6/config/Makefile
>> checking what libraries Python was linked with...
>> /usr/local/lib/python2.6/config/libpython2.6.a
>> checking linker flags used to link Python... grep: can't open
>> /usr/local/lib/python2.6/config/Makefile
>> grep: can't open /usr/local/lib/python2.6/config/Makefile
>>
>> checking where Python include files are...
>> -I/usr/local/include/python2.6
>> checking for --with-python-src... no
>> checking for --with-mutex-dir... no
>> Using MUTEX_DIR /tmp
>> checking for --with-max-locks... no
>> Using 8 MAX_LOCKS.
>> checking for --with-flex... no
>> checking for flex... /usr/local/bin/flex
>> found /usr/local/bin/flex, we'll use this. Use --with-flex to specify
>> another.
>> checking flex version... awk: syntax error near line 1
>> awk: bailing out near line 1
>> awk: syntax error near line 1
>> awk: bailing out near line 1
>> awk: syntax error near line 1
>> awk: bailing out near line 1
>> ./configure: line 3187: test: : integer expression expected
>> configure: WARNING: Flex version 2.5.33 found.
>>    Version 2.5.31 or greater is required.  You can generally ignore
>> this
>>    warning unless you need to regenerate psp_parser.c from
> psp_parse.l.
>>    If you do need regenerate psp_parser.c, use --with-flex to specify
>> the
>>    location of the correct flex version. See the README for more
>> information.
>> configure: creating ./config.status
>> config.status: creating Makefile
>> config.status: creating src/Makefile
>> config.status: creating Doc/Makefile
>> config.status: creating src/include/mod_python.h
>> config.status: creating test/Makefile
>> config.status: creating test/testconf.py
>> config.status: creating dist/setup.py
>> config.status: creating dist/Makefile
>> root@riker:/opt/local/src/mod_python-3.3.1 584 make clean
>> cd src && make clean
>> make[1]: Entering directory `/opt/local/src/mod_python-3.3.1/src'
>> rm -rf  core libpython.a mod_python.so *~ .libs *.o *.slo *.lo *.la
>> make[1]: Leaving directory `/opt/local/src/mod_python-3.3.1/src'
>> cd dist && make clean
>> make[1]: Entering directory `/opt/local/src/mod_python-3.3.1/dist'
>> rm -rf mod_python build dist
>> make[1]: Leaving directory `/opt/local/src/mod_python-3.3.1/dist'
>> cd test && make clean
>> make[1]: Entering directory `/opt/local/src/mod_python-3.3.1/test'
>> rm -f *.pyc *.pyo
>> cd conf && rm -f test.conf
>> cd htdocs && rm -f *pyc *pyo
>> rm -rf logs
>> rm -rf tmp
>> make[1]: Leaving directory `/opt/local/src/mod_python-3.3.1/test'
>> rm -f core
>> root@riker:/opt/local/src/mod_python-3.3.1 585 make
>> make[1]: Entering directory `/opt/local/src/mod_python-3.3.1/src'
>> ar -x `gcc -print-libgcc-file-name` _eprintf.o
>> ar -x `gcc -print-libgcc-file-name` _floatdidf.o
>> ar -x `gcc -print-libgcc-file-name` _muldi3.o
>>
>> Compiling for DSO.
>>
>> /usr/local/apache_2.2.3/bin/apxs
>> -I/opt/local/src/mod_python-3.3.1/src/include
>> -I/usr/local/apache_2.2.3/include -I/usr/local/include/python2.6 -c
>> mod_python.c _apachemodule.c requestobject.c tableobject.c util.c
>> serverobject.c connobject.c filterobject.c hlist.c hlistobject.c
>> finfoobject.c  -lm  /usr/local/lib/python2.6/config/libpython2.6.a
>> _eprintf.o _floatdidf.o _muldi3.o
>> /usr/local/apr/build-1/libtool --silent --mode=compile gcc -prefer-pic
>> -DSOLARIS2=9 -D_POSIX_PTHREAD_SEMANTICS -D_REENTRANT
>> -D_LARGEFILE64_SOURCE -g -O2 -pthreads
> -I/usr/local/apache_2.2.3/include
>> -I/usr/local/apr/include/apr-1   -I/usr/local/apr/include/apr-1
>> -I/opt/local/openldap/include/ -I/usr/local/include
>> -I/opt/local/src/mod_python-3.3.1/src/include
>> -I/usr/local/apache_2.2.3/include -I/usr/local/include/python2.6  -c
> -o
>> mod_python.lo mod_python.c && touch mod_python.slo
>> In file included from mod_python.c:28:
>> /opt/local/src/mod_python-3.3.1/src/include/mod_python.h:80:20:
>> Python.h: No such file or directory
>> /opt/local/src/mod_python-3.3.1/src/include/mod_python.h:81:26:
>> structmember.h: No such file or directory
>> In file included from
>> /opt/local/src/mod_python-3.3.1/src/include/mod_python.h:99,
>>                 from mod_python.c:28:
>> /opt/local/src/mod_python-3.3.1/src/include/util.h:31: error: parse
>> error before '*' token
>> /opt/local/src/mod_python-3.3.1/src/include/util.h:31: warning: data
>> definition has no type or storage class
>> /opt/local/src/mod_python-3.3.1/src/include/util.h:32: error: parse
>> error before '*' token
>> /opt/local/src/mod_python-3.3.1/src/include/util.h:32: warning: data
>> definition has no type or storage class
>> /opt/local/src/mod_python-3.3.1/src/include/util.h:33: error: parse
>> error before '*' token
>> /opt/local/src/mod_python-3.3.1/src/include/util.h:33: warning: data
>> definition has no type or storage class
>> /opt/local/src/mod_python-3.3.1/src/include/util.h:34: error: parse
>> error before '*' token
>> /opt/local/src/mod_python-3.3.1/src/include/util.h:34: warning: data
>> definition has no type or storage class
>> /opt/local/src/mod_python-3.3.1/src/include/util.h:37: error: parse
>> error before '*' token
>> /opt/local/src/mod_python-3.3.1/src/include/util.h:37: error: parse
>> error before '*' token
>> /opt/local/src/mod_python-3.3.1/src/include/util.h:37: warning: data
>> definition has no type or storage class
>> /opt/local/src/mod_python-3.3.1/src/include/util.h:38: error: parse
>> error before '*' token
>> /opt/local/src/mod_python-3.3.1/src/include/util.h:38: warning: data
>> definition has no type or storage class
>> In file included from
>> /opt/local/src/mod_python-3.3.1/src/include/mod_python.h:100,
>>                 from mod_python.c:28:
>> /opt/local/src/mod_python-3.3.1/src/include/hlist.h:37: error: parse
>> error before "PyObject"
>> /opt/local/src/mod_python-3.3.1/src/include/hlist.h:37: warning: no
>> semicolon at end of struct or union
>> /opt/local/src/mod_python-3.3.1/src/include/hlist.h:49: error: parse
>> error before '}' token
>> /opt/local/src/mod_python-3.3.1/src/include/hlist.h:49: warning: data
>> definition has no type or storage class
>> /opt/local/src/mod_python-3.3.1/src/include/hlist.h:51: error: parse
>> error before '*' token
>> /opt/local/src/mod_python-3.3.1/src/include/hlist.h:51: error: parse
>> error before "PyObject"
>> /opt/local/src/mod_python-3.3.1/src/include/hlist.h:54: warning: data
>> definition has no type or storage class
>> /opt/local/src/mod_python-3.3.1/src/include/hlist.h:55: error: parse
>> error before '*' token
>> /opt/local/src/mod_python-3.3.1/src/include/hlist.h:55: error: parse
>> error before "hl_entry"
>> /opt/local/src/mod_python-3.3.1/src/include/hlist.h:58: warning: data
>> definition has no
>> .
>> .
>> .
>> .
>>
>> /local/src/mod_python-3.3.1/src/include/mod_python.h:216: error: parse
>> error before '*' token
>> /opt/local/src/mod_python-3.3.1/src/include/mod_python.h:216: warning:
>> data definition has no type or storage class
>> /opt/local/src/mod_python-3.3.1/src/include/mod_python.h:217: error:
>> parse error before '*' token
>> /opt/local/src/mod_python-3.3.1/src/include/mod_python.h:217: error:
>> parse error before '*' token
>> /opt/local/src/mod_python-3.3.1/src/include/mod_python.h:217: warning:
>> data definition has no type or storage class
>> /opt/local/src/mod_python-3.3.1/src/include/mod_python.h:218: error:
>> parse error before '*' token
>> /opt/local/src/mod_python-3.3.1/src/include/mod_python.h:218: warning:
>> data definition has no type or storage class
>> mod_python.c:31: error: parse error before '*' token
>> mod_python.c:31: warning: data definition has no type or storage class
>> mod_python.c:35: error: parse error before '*' token
>> mod_python.c:35: warning: data definition has no type or storage class
>> mod_python.c:54: error: parse error before '*' token
>> mod_python.c: In function `make_interpreter':
>> mod_python.c:56: error: `PyThreadState' undeclared (first use in this
>> function)
>> mod_python.c:56: error: (Each undeclared identifier is reported only
>> once
>> mod_python.c:56: error: for each function it appears in.)
>> mod_python.c:56: error: `tstate' undeclared (first use in this
> function)
>> mod_python.c:64: warning: passing arg 5 of `ap_log_error' from
>> incompatible pointer type
>> mod_python.c: At top level:
>> mod_python.c:88: error: parse error before '*' token
>> mod_python.c: In function `make_obcallback':
>> mod_python.c:91: error: `PyObject' undeclared (first use in this
>> function)
>> mod_python.c:91: error: `m' undeclared (first use in this function)
>> mod_python.c:92: error: `obCallBack' undeclared (first use in this
>> function)
>> mod_python.c:108: error: `path' undeclared (first use in this
> function)
>> mod_python.c:112: warning: passing arg 5 of `ap_log_error' from
>> incompatible pointer type
>> mod_python.c:121: warning: passing arg 5 of `ap_log_error' from
>> incompatible pointer type
>> mod_python.c:133: error: `o' undeclared (first use in this function)
>> mod_python.c:134: error: `d' undeclared (first use in this function)
>> mod_python.c:135: error: `f' undeclared (first use in this function)
>> mod_python.c:139: warning: passing arg 5 of `ap_log_error' from
>> incompatible pointer type
>> mod_python.c:151: warning: assignment makes pointer from integer
> without
>> a cast
>> mod_python.c:158: warning: passing arg 5 of `ap_log_error' from
>> incompatible pointer type
>> mod_python.c:161: warning: passing arg 5 of `ap_log_error' from
>> incompatible pointer type
>> mod_python.c: At top level:
>> mod_python.c:176: error: parse error before '*' token
>> mod_python.c:176: error: parse error before "PyInterpreterState"
>> mod_python.c: In function `save_interpreter':
>> mod_python.c:178: error: `PyObject' undeclared (first use in this
>> function)
>> mod_python.c:178: error: `p' undeclared (first use in this function)
>> mod_python.c:179: error: `idata' undeclared (first use in this
> function)
>> mod_python.c:181: error: parse error before ')' token
>> mod_python.c:182: error: `istate' undeclared (first use in this
>> function)
>> mod_python.c:186: error: `name' undeclared (first use in this
> function)
>> mod_python.c: At top level:
>> mod_python.c:199: error: parse error before '*' token
>> mod_python.c: In function `python_interpreter_name':
>> mod_python.c:201: error: `PyObject' undeclared (first use in this
>> function)
>> .
>> .
>> .
>> mod_python.c:2906: error: `req' undeclared (first use in this
> function)
>> mod_python.c: At top level:
>> mod_python.c:2908: error: parse error before '*' token
>> mod_python.c: In function `PythonTypeHandler':
>> mod_python.c:2909: error: `req' undeclared (first use in this
> function)
>> apxs:Error: Command failed with rc=65536
>> .
>> make[1]: *** [mod_python.so] Error 1
>> make[1]: Leaving directory `/opt/local/src/mod_python-3.3.1/src'
>> make: *** [do_dso] Error 2
>> root@riker:/opt/local/src/mod_python-3.3.1 586
>>
>> _______________________________________________
>> Mod_python mailing list
>> Mod_python@modpython.org
>> http://mailman.modpython.org/mailman/listinfo/mod_python
>>
>
From graham.dumpleton at gmail.com  Thu Dec 18 16:07:37 2008
From: graham.dumpleton at gmail.com (Graham Dumpleton)
Date: Thu Dec 18 16:07:39 2008
Subject: [mod_python] Help with Solaris build of mod_python with Apache 2.2
In-Reply-To: <88e286470812181306l27b3e156k1e1227a132f637be@mail.gmail.com>
References: <20081215093542.GA1071@awa.mat.agh.edu.pl>
	<20081218101339.GA1783@awa.mat.agh.edu.pl>
	<88e286470812180210h5d784a68t3f43bef3899ffe2@mail.gmail.com>
	<20081218110902.GB1783@awa.mat.agh.edu.pl>
	<88e286470812180320w5609eaa9g6eecea24f49278d0@mail.gmail.com>
	<20081218122619.GC1783@awa.mat.agh.edu.pl>
	<08429EB7F8E69841B295084BA07401A9048C628A@MAIL3.AD.Brown.Edu>
	<88e286470812181300ycf1dfbcn54d3707a658f51b0@mail.gmail.com>
	<08429EB7F8E69841B295084BA07401A9048C62F7@MAIL3.AD.Brown.Edu>
	<88e286470812181306l27b3e156k1e1227a132f637be@mail.gmail.com>
Message-ID: <88e286470812181307h6c29d450k39e57c94f091c575@mail.gmail.com>

BTW, why do you have:

  --with-python="/opt/local/src/Python-2.6.1/python -E"

Ie., what is the -E option about. Never seen that needing to be required.

Graham

2008/12/19 Graham Dumpleton <graham.dumpleton@gmail.com>:
> 2008/12/19 Baptista, Paulo <Paulo_Baptista@brown.edu>:
>> Thanks for getting back to me Graham.
>>
>> I built Python from source.  Isn't that all I need and what you're
>> saying?  I built Python 2.5.1 and 2.6.1.
>
> Somehow it hasn't been installed properly as your output clearly shows:
>
>  /usr/local/lib/python2.6/config/Makefile
>
> as having not being installed.
>
> Check to see if that directory exists and post what it contains.
>
> Graham
>
>> root@riker:/opt/local/src/Python-2.6.1 7 ls -lrt
>> total 38314
>> -rwxrwxr-x   1 1000     1000        7122 Jun 14  2003 install-sh
>> -rw-rw-r--   1 1000     1000       13741 Feb 29  2008 LICENSE
>> -rw-rw-r--   1 1000     1000       29240 Sep  7 01:15 pyconfig.h.in
>> -rw-rw-r--   1 1000     1000       38629 Oct 21 12:48 Makefile.pre.in
>> -rw-rw-r--   1 1000     1000       81908 Nov  4 15:43 setup.py
>> -rw-rw-r--   1 1000     1000      105857 Nov 16 03:02 configure.in
>> -rwxrwxr-x   1 1000     1000      676114 Nov 16 12:57 configure
>> -rw-rw-r--   1 1000     1000       56949 Dec  3 21:59 README
>> drwxrwxr-x   2 1000     1000        1536 Dec  4 22:58 PCbuild
>> drwxrwxr-x   2 1000     1000        2048 Dec  4 22:58 Include
>> drwxrwxr-x   2 1000     1000         512 Dec  4 22:58 Grammar
>> drwxrwxr-x  23 1000     1000         512 Dec  4 22:58 Demo
>> drwxrwxr-x   5 1000     1000        1024 Dec  4 22:58 Misc
>> drwxrwxr-x  11 1000     1000         512 Dec  4 22:58 Mac
>> drwxrwxr-x  20 1000     1000         512 Dec  4 22:58 Tools
>> drwxrwxr-x  10 1000     1000        1024 Dec  4 22:58 PC
>> drwxrwxr-x   5 1000     1000         512 Dec  4 22:58 RISCOS
>> drwxrwxr-x  16 1000     1000        1024 Dec  4 23:25 Doc
>> -rwxr-xr-x   1 root     other      42971 Dec 16 11:38 config.status
>> -rw-r--r--   1 root     other      38609 Dec 16 11:38 Makefile.pre
>> -rw-r--r--   1 root     other      30718 Dec 16 11:38 pyconfig.h
>> -rw-r--r--   1 root     other      41758 Dec 16 11:38 Makefile
>> -rw-r--r--   1 root     other     512575 Dec 16 11:38 config.log
>> drwxrwxr-x   3 1000     1000        2048 Dec 16 11:45 Objects
>> drwxrwxr-x   2 1000     1000        1024 Dec 16 11:46 Parser
>> drwxrwxr-x   2 1000     1000        2560 Dec 16 11:47 Python
>> drwxrwxr-x   8 1000     1000        3584 Dec 16 11:48 Modules
>> -rw-r--r--   1 root     other    9575582 Dec 16 11:48 libpython2.6.a
>> -rwxr-xr-x   1 root     other    8277432 Dec 16 11:48 python
>> drwxrwxr-x  44 1000     1000        6144 Dec 16 11:48 Lib
>> drwxr-xr-x   5 root     other        512 Dec 16 11:55 build
>> -rw-r--r--   1 root     other         49 Dec 18 11:23 mail
>> root@riker:/opt/local/src/Python-2.6.1 8
>>
>> -----Original Message-----
>> From: Graham Dumpleton [mailto:graham.dumpleton@gmail.com]
>> Sent: Thursday, December 18, 2008 4:00 PM
>> To: Baptista, Paulo
>> Cc: mod_python@modpython.org
>> Subject: Re: [mod_python] Help with Solaris build of mod_python with
>> Apache 2.2
>>
>> You don't have the headers files, configuration files etc, needed for
>> Python development installed.
>>
>> If you have installed Python from set of prebuilt packages for
>> Solaris, you need to install the 'dev' variant of that package as
>> well. If you can't obtain it, you will need to build your own version
>> of Python from source code.
>>
>> Graham
>>
>> 2008/12/19 Baptista, Paulo <Paulo_Baptista@brown.edu>:
>>> Hoping to get help here.  I'm new to building from src packages and
>>> Solaris.
>>>
>>> Trying to make mod_python 3.3.1
>>> Have Python 2.6.1 built
>>> Have Apache2.2.3 built
>>>
>>> Getting the following:
>>>
>>> root@riker:/opt/local/src/mod_python-3.3.1 583 ./configure
>>> --with-apxs=/usr/local/apache_2.2.3/bin/apxs
>>> --with-python="/opt/local/src/Python-2.6.1/python -E"
>>>
>>> checking for gcc... gcc
>>> checking for C compiler default output file name... a.out
>>> checking whether the C compiler works... yes
>>> checking whether we are cross compiling... no
>>> checking for suffix of executables...
>>> checking for suffix of object files... o
>>> checking whether we are using the GNU C compiler... yes
>>> checking whether gcc accepts -g... yes
>>> checking for gcc option to accept ANSI C... none needed
>>> checking for ar... ar
>>> checking for a BSD-compatible install... ./install-sh -c
>>> checking whether make sets $(MAKE)... yes
>>> checking for main in -lm... yes
>>> checking for an ANSI C-conforming const... yes
>>> checking your blood pressure... a bit high, but we can proceed
>>> configure: checking whether apxs is available...
>>> checking for --with-apxs... /usr/local/apache_2.2.3/bin/apxs
>> executable,
>>> good
>>> checking Apache version... 2.2.3
>>> checking for Apache libexec directory...
>> /usr/local/apache_2.2.3/modules
>>> checking for Apache include directory...
>>> -I/usr/local/apache_2.2.3/include
>>> checking for gcc on Solaris possible missing _eprintf problem...
>> "done"
>>> checking for --with-python... /opt/local/src/Python-2.6.1/python -E
>>> checking Python version... 2.6
>>> checking Python install prefix... /usr/local
>>> checking checking where python libraries are installed...
>>> /usr/local/lib/python2.6
>>> grep: can't open /usr/local/lib/python2.6/config/Makefile
>>> grep: can't open /usr/local/lib/python2.6/config/Makefile
>>> grep: can't open /usr/local/lib/python2.6/config/Makefile
>>> grep: can't open /usr/local/lib/python2.6/config/Makefile
>>> checking what libraries Python was linked with...
>>> /usr/local/lib/python2.6/config/libpython2.6.a
>>> checking linker flags used to link Python... grep: can't open
>>> /usr/local/lib/python2.6/config/Makefile
>>> grep: can't open /usr/local/lib/python2.6/config/Makefile
>>>
>>> checking where Python include files are...
>>> -I/usr/local/include/python2.6
>>> checking for --with-python-src... no
>>> checking for --with-mutex-dir... no
>>> Using MUTEX_DIR /tmp
>>> checking for --with-max-locks... no
>>> Using 8 MAX_LOCKS.
>>> checking for --with-flex... no
>>> checking for flex... /usr/local/bin/flex
>>> found /usr/local/bin/flex, we'll use this. Use --with-flex to specify
>>> another.
>>> checking flex version... awk: syntax error near line 1
>>> awk: bailing out near line 1
>>> awk: syntax error near line 1
>>> awk: bailing out near line 1
>>> awk: syntax error near line 1
>>> awk: bailing out near line 1
>>> ./configure: line 3187: test: : integer expression expected
>>> configure: WARNING: Flex version 2.5.33 found.
>>>    Version 2.5.31 or greater is required.  You can generally ignore
>>> this
>>>    warning unless you need to regenerate psp_parser.c from
>> psp_parse.l.
>>>    If you do need regenerate psp_parser.c, use --with-flex to specify
>>> the
>>>    location of the correct flex version. See the README for more
>>> information.
>>> configure: creating ./config.status
>>> config.status: creating Makefile
>>> config.status: creating src/Makefile
>>> config.status: creating Doc/Makefile
>>> config.status: creating src/include/mod_python.h
>>> config.status: creating test/Makefile
>>> config.status: creating test/testconf.py
>>> config.status: creating dist/setup.py
>>> config.status: creating dist/Makefile
>>> root@riker:/opt/local/src/mod_python-3.3.1 584 make clean
>>> cd src && make clean
>>> make[1]: Entering directory `/opt/local/src/mod_python-3.3.1/src'
>>> rm -rf  core libpython.a mod_python.so *~ .libs *.o *.slo *.lo *.la
>>> make[1]: Leaving directory `/opt/local/src/mod_python-3.3.1/src'
>>> cd dist && make clean
>>> make[1]: Entering directory `/opt/local/src/mod_python-3.3.1/dist'
>>> rm -rf mod_python build dist
>>> make[1]: Leaving directory `/opt/local/src/mod_python-3.3.1/dist'
>>> cd test && make clean
>>> make[1]: Entering directory `/opt/local/src/mod_python-3.3.1/test'
>>> rm -f *.pyc *.pyo
>>> cd conf && rm -f test.conf
>>> cd htdocs && rm -f *pyc *pyo
>>> rm -rf logs
>>> rm -rf tmp
>>> make[1]: Leaving directory `/opt/local/src/mod_python-3.3.1/test'
>>> rm -f core
>>> root@riker:/opt/local/src/mod_python-3.3.1 585 make
>>> make[1]: Entering directory `/opt/local/src/mod_python-3.3.1/src'
>>> ar -x `gcc -print-libgcc-file-name` _eprintf.o
>>> ar -x `gcc -print-libgcc-file-name` _floatdidf.o
>>> ar -x `gcc -print-libgcc-file-name` _muldi3.o
>>>
>>> Compiling for DSO.
>>>
>>> /usr/local/apache_2.2.3/bin/apxs
>>> -I/opt/local/src/mod_python-3.3.1/src/include
>>> -I/usr/local/apache_2.2.3/include -I/usr/local/include/python2.6 -c
>>> mod_python.c _apachemodule.c requestobject.c tableobject.c util.c
>>> serverobject.c connobject.c filterobject.c hlist.c hlistobject.c
>>> finfoobject.c  -lm  /usr/local/lib/python2.6/config/libpython2.6.a
>>> _eprintf.o _floatdidf.o _muldi3.o
>>> /usr/local/apr/build-1/libtool --silent --mode=compile gcc -prefer-pic
>>> -DSOLARIS2=9 -D_POSIX_PTHREAD_SEMANTICS -D_REENTRANT
>>> -D_LARGEFILE64_SOURCE -g -O2 -pthreads
>> -I/usr/local/apache_2.2.3/include
>>> -I/usr/local/apr/include/apr-1   -I/usr/local/apr/include/apr-1
>>> -I/opt/local/openldap/include/ -I/usr/local/include
>>> -I/opt/local/src/mod_python-3.3.1/src/include
>>> -I/usr/local/apache_2.2.3/include -I/usr/local/include/python2.6  -c
>> -o
>>> mod_python.lo mod_python.c && touch mod_python.slo
>>> In file included from mod_python.c:28:
>>> /opt/local/src/mod_python-3.3.1/src/include/mod_python.h:80:20:
>>> Python.h: No such file or directory
>>> /opt/local/src/mod_python-3.3.1/src/include/mod_python.h:81:26:
>>> structmember.h: No such file or directory
>>> In file included from
>>> /opt/local/src/mod_python-3.3.1/src/include/mod_python.h:99,
>>>                 from mod_python.c:28:
>>> /opt/local/src/mod_python-3.3.1/src/include/util.h:31: error: parse
>>> error before '*' token
>>> /opt/local/src/mod_python-3.3.1/src/include/util.h:31: warning: data
>>> definition has no type or storage class
>>> /opt/local/src/mod_python-3.3.1/src/include/util.h:32: error: parse
>>> error before '*' token
>>> /opt/local/src/mod_python-3.3.1/src/include/util.h:32: warning: data
>>> definition has no type or storage class
>>> /opt/local/src/mod_python-3.3.1/src/include/util.h:33: error: parse
>>> error before '*' token
>>> /opt/local/src/mod_python-3.3.1/src/include/util.h:33: warning: data
>>> definition has no type or storage class
>>> /opt/local/src/mod_python-3.3.1/src/include/util.h:34: error: parse
>>> error before '*' token
>>> /opt/local/src/mod_python-3.3.1/src/include/util.h:34: warning: data
>>> definition has no type or storage class
>>> /opt/local/src/mod_python-3.3.1/src/include/util.h:37: error: parse
>>> error before '*' token
>>> /opt/local/src/mod_python-3.3.1/src/include/util.h:37: error: parse
>>> error before '*' token
>>> /opt/local/src/mod_python-3.3.1/src/include/util.h:37: warning: data
>>> definition has no type or storage class
>>> /opt/local/src/mod_python-3.3.1/src/include/util.h:38: error: parse
>>> error before '*' token
>>> /opt/local/src/mod_python-3.3.1/src/include/util.h:38: warning: data
>>> definition has no type or storage class
>>> In file included from
>>> /opt/local/src/mod_python-3.3.1/src/include/mod_python.h:100,
>>>                 from mod_python.c:28:
>>> /opt/local/src/mod_python-3.3.1/src/include/hlist.h:37: error: parse
>>> error before "PyObject"
>>> /opt/local/src/mod_python-3.3.1/src/include/hlist.h:37: warning: no
>>> semicolon at end of struct or union
>>> /opt/local/src/mod_python-3.3.1/src/include/hlist.h:49: error: parse
>>> error before '}' token
>>> /opt/local/src/mod_python-3.3.1/src/include/hlist.h:49: warning: data
>>> definition has no type or storage class
>>> /opt/local/src/mod_python-3.3.1/src/include/hlist.h:51: error: parse
>>> error before '*' token
>>> /opt/local/src/mod_python-3.3.1/src/include/hlist.h:51: error: parse
>>> error before "PyObject"
>>> /opt/local/src/mod_python-3.3.1/src/include/hlist.h:54: warning: data
>>> definition has no type or storage class
>>> /opt/local/src/mod_python-3.3.1/src/include/hlist.h:55: error: parse
>>> error before '*' token
>>> /opt/local/src/mod_python-3.3.1/src/include/hlist.h:55: error: parse
>>> error before "hl_entry"
>>> /opt/local/src/mod_python-3.3.1/src/include/hlist.h:58: warning: data
>>> definition has no
>>> .
>>> .
>>> .
>>> .
>>>
>>> /local/src/mod_python-3.3.1/src/include/mod_python.h:216: error: parse
>>> error before '*' token
>>> /opt/local/src/mod_python-3.3.1/src/include/mod_python.h:216: warning:
>>> data definition has no type or storage class
>>> /opt/local/src/mod_python-3.3.1/src/include/mod_python.h:217: error:
>>> parse error before '*' token
>>> /opt/local/src/mod_python-3.3.1/src/include/mod_python.h:217: error:
>>> parse error before '*' token
>>> /opt/local/src/mod_python-3.3.1/src/include/mod_python.h:217: warning:
>>> data definition has no type or storage class
>>> /opt/local/src/mod_python-3.3.1/src/include/mod_python.h:218: error:
>>> parse error before '*' token
>>> /opt/local/src/mod_python-3.3.1/src/include/mod_python.h:218: warning:
>>> data definition has no type or storage class
>>> mod_python.c:31: error: parse error before '*' token
>>> mod_python.c:31: warning: data definition has no type or storage class
>>> mod_python.c:35: error: parse error before '*' token
>>> mod_python.c:35: warning: data definition has no type or storage class
>>> mod_python.c:54: error: parse error before '*' token
>>> mod_python.c: In function `make_interpreter':
>>> mod_python.c:56: error: `PyThreadState' undeclared (first use in this
>>> function)
>>> mod_python.c:56: error: (Each undeclared identifier is reported only
>>> once
>>> mod_python.c:56: error: for each function it appears in.)
>>> mod_python.c:56: error: `tstate' undeclared (first use in this
>> function)
>>> mod_python.c:64: warning: passing arg 5 of `ap_log_error' from
>>> incompatible pointer type
>>> mod_python.c: At top level:
>>> mod_python.c:88: error: parse error before '*' token
>>> mod_python.c: In function `make_obcallback':
>>> mod_python.c:91: error: `PyObject' undeclared (first use in this
>>> function)
>>> mod_python.c:91: error: `m' undeclared (first use in this function)
>>> mod_python.c:92: error: `obCallBack' undeclared (first use in this
>>> function)
>>> mod_python.c:108: error: `path' undeclared (first use in this
>> function)
>>> mod_python.c:112: warning: passing arg 5 of `ap_log_error' from
>>> incompatible pointer type
>>> mod_python.c:121: warning: passing arg 5 of `ap_log_error' from
>>> incompatible pointer type
>>> mod_python.c:133: error: `o' undeclared (first use in this function)
>>> mod_python.c:134: error: `d' undeclared (first use in this function)
>>> mod_python.c:135: error: `f' undeclared (first use in this function)
>>> mod_python.c:139: warning: passing arg 5 of `ap_log_error' from
>>> incompatible pointer type
>>> mod_python.c:151: warning: assignment makes pointer from integer
>> without
>>> a cast
>>> mod_python.c:158: warning: passing arg 5 of `ap_log_error' from
>>> incompatible pointer type
>>> mod_python.c:161: warning: passing arg 5 of `ap_log_error' from
>>> incompatible pointer type
>>> mod_python.c: At top level:
>>> mod_python.c:176: error: parse error before '*' token
>>> mod_python.c:176: error: parse error before "PyInterpreterState"
>>> mod_python.c: In function `save_interpreter':
>>> mod_python.c:178: error: `PyObject' undeclared (first use in this
>>> function)
>>> mod_python.c:178: error: `p' undeclared (first use in this function)
>>> mod_python.c:179: error: `idata' undeclared (first use in this
>> function)
>>> mod_python.c:181: error: parse error before ')' token
>>> mod_python.c:182: error: `istate' undeclared (first use in this
>>> function)
>>> mod_python.c:186: error: `name' undeclared (first use in this
>> function)
>>> mod_python.c: At top level:
>>> mod_python.c:199: error: parse error before '*' token
>>> mod_python.c: In function `python_interpreter_name':
>>> mod_python.c:201: error: `PyObject' undeclared (first use in this
>>> function)
>>> .
>>> .
>>> .
>>> mod_python.c:2906: error: `req' undeclared (first use in this
>> function)
>>> mod_python.c: At top level:
>>> mod_python.c:2908: error: parse error before '*' token
>>> mod_python.c: In function `PythonTypeHandler':
>>> mod_python.c:2909: error: `req' undeclared (first use in this
>> function)
>>> apxs:Error: Command failed with rc=65536
>>> .
>>> make[1]: *** [mod_python.so] Error 1
>>> make[1]: Leaving directory `/opt/local/src/mod_python-3.3.1/src'
>>> make: *** [do_dso] Error 2
>>> root@riker:/opt/local/src/mod_python-3.3.1 586
>>>
>>> _______________________________________________
>>> Mod_python mailing list
>>> Mod_python@modpython.org
>>> http://mailman.modpython.org/mailman/listinfo/mod_python
>>>
>>
>
From zayer at frikis.org  Sat Dec 20 19:09:55 2008
From: zayer at frikis.org (zayer)
Date: Sat Dec 20 19:12:33 2008
Subject: [mod_python] How to know a form name
Message-ID: <494D8953.20704@frikis.org>

Hello everybody, I've a page with to forms, each one with different
names and I want hand it with same script. (I'm using FieldStorage util
Class for mangle it).
i.e.

<!-- one -->
<form name="article" action="" method="post" > ... </form>
<!-- two -->
<form name="file" action="" method="post"> ... </form>

Does anybody know how can I get (in python of course) the name of the
form that has been submitted?

Thanks you very much.
From estrand at isomedia.com  Sat Dec 20 20:28:50 2008
From: estrand at isomedia.com (Eric Strand)
Date: Sat Dec 20 20:28:47 2008
Subject: [mod_python] How to know a form name
In-Reply-To: <494D8953.20704@frikis.org>
References: <494D8953.20704@frikis.org>
Message-ID: <494D9BD2.9020907@isomedia.com>


I don't recall seeing this sort of thing in the docs.  I've never had 
the need for multiple forms on the same page, so I'm not 100% certain.

A work around would be to include a hidden input with a different value 
for each form.

--ES


zayer wrote:
> Hello everybody, I've a page with to forms, each one with different
> names and I want hand it with same script. (I'm using FieldStorage util
> Class for mangle it).
> i.e.
> 
> <!-- one -->
> <form name="article" action="" method="post" > ... </form>
> <!-- two -->
> <form name="file" action="" method="post"> ... </form>
> 
> Does anybody know how can I get (in python of course) the name of the
> form that has been submitted?
> 
> Thanks you very much.
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
> 

From rob.shinn at gmail.com  Sat Dec 20 21:16:22 2008
From: rob.shinn at gmail.com (Rob Shinn)
Date: Sat Dec 20 21:16:26 2008
Subject: [mod_python] How to know a form name
In-Reply-To: <494D8953.20704@frikis.org>
References: <494D8953.20704@frikis.org>
Message-ID: <2f96483c0812201816h69f7ffe3q7bd906acc8720089@mail.gmail.com>

Well, you could always pass it as a  hidden form field.  Not sure if
there is a better way to do it, though.

On 12/20/08, zayer <zayer@frikis.org> wrote:
> Hello everybody, I've a page with to forms, each one with different
> names and I want hand it with same script. (I'm using FieldStorage util
> Class for mangle it).
> i.e.
>
> <!-- one -->
> <form name="article" action="" method="post" > ... </form>
> <!-- two -->
> <form name="file" action="" method="post"> ... </form>
>
> Does anybody know how can I get (in python of course) the name of the
> form that has been submitted?
>
> Thanks you very much.
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>

-- 
Sent from my mobile device
From zayer at frikis.org  Sun Dec 21 11:49:07 2008
From: zayer at frikis.org (zayer)
Date: Sun Dec 21 11:51:32 2008
Subject: [mod_python] How to know a form name
In-Reply-To: <20081221152102.GA15780@skepsi.net>
References: <494D8953.20704@frikis.org> <20081221152102.GA15780@skepsi.net>
Message-ID: <494E7383.8080505@frikis.org>

Thanks you very much, Jason, but I prefer don't do that, all I want is
know the form name.
Forms have a 'name' attribute, so why I can't get it? FieldStorage or
req should let me know it.
Is that possible right know or not?


Jason Morgan wrote:
> Have you tried providing a different action for each of the forms,
> using your sever-side script to determine which action to take? E.g.,
>
> <!-- one -->
> <form name="article" action="/process?act=1" method="post" > ... </form>
> <!-- two -->
> <form name="file" action="/process?act=2" method="post"> ... </form>
>
> Then your script can process the posted data depending on whether
> act==1 or act==2 as provided by the client.
>
> HTH,
>
> ~ Jason Morgan
>
>   

From graham.dumpleton at gmail.com  Sun Dec 21 14:57:04 2008
From: graham.dumpleton at gmail.com (Graham Dumpleton)
Date: Sun Dec 21 14:57:08 2008
Subject: [mod_python] How to know a form name
In-Reply-To: <494E7383.8080505@frikis.org>
References: <494D8953.20704@frikis.org> <20081221152102.GA15780@skepsi.net>
	<494E7383.8080505@frikis.org>
Message-ID: <88e286470812211157w7cc2f802i82bef1c712056229@mail.gmail.com>

2008/12/22 zayer <zayer@frikis.org>:
> Thanks you very much, Jason, but I prefer don't do that, all I want is
> know the form name.
> Forms have a 'name' attribute, so why I can't get it? FieldStorage or
> req should let me know it.
> Is that possible right know or not?

This has nothing to do with mod_python specifically. What is sent is
dictated by the RFC standards. You might therefore want to go read:

  http://www.w3.org/TR/html401/interact/forms.html

and stuff linked from that.

You may then find that the name of the form as a whole isn't sent.

Graham

> Jason Morgan wrote:
>> Have you tried providing a different action for each of the forms,
>> using your sever-side script to determine which action to take? E.g.,
>>
>> <!-- one -->
>> <form name="article" action="/process?act=1" method="post" > ... </form>
>> <!-- two -->
>> <form name="file" action="/process?act=2" method="post"> ... </form>
>>
>> Then your script can process the posted data depending on whether
>> act==1 or act==2 as provided by the client.
>>
>> HTH,
>>
>> ~ Jason Morgan
>>
>>
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>
From list at joreybump.com  Sun Dec 21 16:37:55 2008
From: list at joreybump.com (Jorey Bump)
Date: Sun Dec 21 16:37:58 2008
Subject: [mod_python] How to know a form name
In-Reply-To: <2f96483c0812201816h69f7ffe3q7bd906acc8720089@mail.gmail.com>
References: <494D8953.20704@frikis.org>
	<2f96483c0812201816h69f7ffe3q7bd906acc8720089@mail.gmail.com>
Message-ID: <494EB733.9050707@joreybump.com>

Rob Shinn wrote, at 12/20/2008 09:16 PM:
> Well, you could always pass it as a  hidden form field.  Not sure if
> there is a better way to do it, though.

You can simply give the submit button in each form a unique name.

From zayer at frikis.org  Sun Dec 21 17:34:29 2008
From: zayer at frikis.org (zayer)
Date: Sun Dec 21 17:36:48 2008
Subject: [mod_python] How to know a form name
In-Reply-To: <88e286470812211157w7cc2f802i82bef1c712056229@mail.gmail.com>
References: <494D8953.20704@frikis.org> <20081221152102.GA15780@skepsi.net>	
	<494E7383.8080505@frikis.org>
	<88e286470812211157w7cc2f802i82bef1c712056229@mail.gmail.com>
Message-ID: <494EC475.4020801@frikis.org>

Thanks you, Graham, thats all I want, I was becoming crazy looking for it.
I'll try to do it like one of previous post suggest me.
Thanks everybody has answer this thread and merry crhismas.


Graham Dumpleton wrote:
> 2008/12/22 zayer <zayer@frikis.org>:
>   
>> Thanks you very much, Jason, but I prefer don't do that, all I want is
>> know the form name.
>> Forms have a 'name' attribute, so why I can't get it? FieldStorage or
>> req should let me know it.
>> Is that possible right know or not?
>>     
>
> This has nothing to do with mod_python specifically. What is sent is
> dictated by the RFC standards. You might therefore want to go read:
>
>   http://www.w3.org/TR/html401/interact/forms.html
>
> and stuff linked from that.
>
> You may then find that the name of the form as a whole isn't sent.
>
> Graham
>   
From davidj411 at gmail.com  Tue Dec 23 14:13:03 2008
From: davidj411 at gmail.com (David Jackson)
Date: Tue Dec 23 14:13:09 2008
Subject: [mod_python] using mod python without calling the function
Message-ID: <491b0d8f0812231113w31cd9fccxb56d0a9b58379857@mail.gmail.com>

if using this config:
<...snipped>
  SetHandler mod_python
 PythonHandler mod_python.publisher
        PythonDebug On
</Directory>

do i always need to call the function in the URL?

for example, testscript.py has a function called "writename".
must i call testscript.py using
http://localhost/pycgi/testscript.py/writename or could i add something to
the contents of the file like you can when testing a script from command
line like this:

if __name__=="__main__":
     writeback(names)


basically, i am trying to avoid putting the function name into the URL.

also, i noticed that the newest version of mod_python *ONLY* supports python
2.5.0. i had errors with 2.5.2 and would not install with python 2.6.

thanks
David
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20081223/7afe658f/attachment.html
From graham.dumpleton at gmail.com  Tue Dec 23 15:19:41 2008
From: graham.dumpleton at gmail.com (Graham Dumpleton)
Date: Tue Dec 23 15:19:49 2008
Subject: [mod_python] using mod python without calling the function
In-Reply-To: <491b0d8f0812231113w31cd9fccxb56d0a9b58379857@mail.gmail.com>
References: <491b0d8f0812231113w31cd9fccxb56d0a9b58379857@mail.gmail.com>
Message-ID: <88e286470812231219i280262edxddeb7f51c5753d75@mail.gmail.com>

2008/12/24 David Jackson <davidj411@gmail.com>:
> if using this config:
> <...snipped>
>   SetHandler mod_python
>  PythonHandler mod_python.publisher
>         PythonDebug On
> </Directory>
>
> do i always need to call the function in the URL?
>
> for example, testscript.py has a function called "writename".
> must i call testscript.py using
> http://localhost/pycgi/testscript.py/writename or could i add something to
> the contents of the file like you can when testing a script from command
> line like this:
>
> if __name__=="__main__":
>      writeback(names)
>
>
> basically, i am trying to avoid putting the function name into the URL.

Look up how the 'index' function works in the documentation.

> also, i noticed that the newest version of mod_python ONLY supports python
> 2.5.0. i had errors with 2.5.2

What platform, what errors and is this compiling it from source code?

There have not been any problem reports saying it doesn't work with
Python 2.5.2.

If using precompiled binaries, for Python 2.5 you may see warnings
about a version mismatch at runtime in error logs, but that can be
ignored.

> and would not install with python 2.6.

Again, what platform, what errors and is this compilng from source code?

There have not been any problem reports saying it doesn't work with Python 2.6.

Graham
From davidj411 at gmail.com  Tue Dec 23 16:09:34 2008
From: davidj411 at gmail.com (David Jackson)
Date: Tue Dec 23 16:09:41 2008
Subject: [SPAM] Re: [mod_python] using mod python without calling the function
In-Reply-To: <88e286470812231219i280262edxddeb7f51c5753d75@mail.gmail.com>
References: <491b0d8f0812231113w31cd9fccxb56d0a9b58379857@mail.gmail.com>
	<88e286470812231219i280262edxddeb7f51c5753d75@mail.gmail.com>
Message-ID: <491b0d8f0812231309q5b321ce0gc200cb65e5d27eaf@mail.gmail.com>

is this the section of docs you wanted me to review?
"If req.filename is empty, the module name defaults to 'index'.Once module
is imported, the remaining part of the URI up to the beginning of any query
data (a.k.a. PATH INFO)
is used to find an object within the module. The Publisher handler traverses
the path, one element at a time from left
to right, mapping the elements to Python object within the module. <-this
sentence is lost on me
If no path info was given in the URL, the Publisher handler will use the
default value of 'index'. If the last element
is an object inside a module, and the one immediately preceding it is a
directory (i.e. no module name is given), then
the module name will also default to 'index'."

as for the versions of python that work with mod_python:
os:winXP
loading (win32 pre-compiled modules, not compiling apache.

mod_python gives error during windows installation if it can not find
registry entry for python 2.5.
i was unable to find a binary mod_python MSI installer that would work for
python 2.6.
if there is a binary ready to download, please advise on download location.

regarding 2.5.2 versus 2.5, i rolled back to 2.5.0 when i saw this in the
error.log

[Tue Dec 23 11:51:00 2008] [error] python_init: Python version mismatch,
expected '2.5', found '2.5.2'.

b/c of this, i was not sure how well it would work , especially with my
being new to mod_python.you answered that this error message means nothing.
thanks!


On Tue, Dec 23, 2008 at 3:19 PM, Graham Dumpleton <
graham.dumpleton@gmail.com> wrote:

> 2008/12/24 David Jackson <davidj411@gmail.com>:
> > if using this config:
> > <...snipped>
> >   SetHandler mod_python
> >  PythonHandler mod_python.publisher
> >         PythonDebug On
> > </Directory>
> >
> > do i always need to call the function in the URL?
> >
> > for example, testscript.py has a function called "writename".
> > must i call testscript.py using
> > http://localhost/pycgi/testscript.py/writename or could i add something
> to
> > the contents of the file like you can when testing a script from command
> > line like this:
> >
> > if __name__=="__main__":
> >      writeback(names)
> >
> >
> > basically, i am trying to avoid putting the function name into the URL.
>
> Look up how the 'index' function works in the documentation.
>
> > also, i noticed that the newest version of mod_python ONLY supports
> python
> > 2.5.0. i had errors with 2.5.2
>
> What platform, what errors and is this compiling it from source code?
>
> There have not been any problem reports saying it doesn't work with
> Python 2.5.2.
>
> If using precompiled binaries, for Python 2.5 you may see warnings
> about a version mismatch at runtime in error logs, but that can be
> ignored.
>
> > and would not install with python 2.6.
>
> Again, what platform, what errors and is this compilng from source code?
>
> There have not been any problem reports saying it doesn't work with Python
> 2.6.
>
> Graham
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20081223/5e7f6490/attachment.html
From graham.dumpleton at gmail.com  Tue Dec 23 17:27:27 2008
From: graham.dumpleton at gmail.com (Graham Dumpleton)
Date: Tue Dec 23 17:27:31 2008
Subject: [mod_python] using mod python without calling the function
In-Reply-To: <491b0d8f0812231309q5b321ce0gc200cb65e5d27eaf@mail.gmail.com>
References: <491b0d8f0812231113w31cd9fccxb56d0a9b58379857@mail.gmail.com>
	<88e286470812231219i280262edxddeb7f51c5753d75@mail.gmail.com>
	<491b0d8f0812231309q5b321ce0gc200cb65e5d27eaf@mail.gmail.com>
Message-ID: <88e286470812231427r62b9dd76ke90c977d52576b7e@mail.gmail.com>

2008/12/24 David Jackson <davidj411@gmail.com>:
> is this the section of docs you wanted me to review?
> "If req.filename is empty, the module name defaults to 'index'.

I am not even sure that is technically correct, as req.filename
shouldn't be empty.

If SetHandler is used and req.filename references a directory, then it
would look for index.py file in that directory.

> Once module is imported, the remaining part of the URI up to the beginning
> of any query data (a.k.a. PATH INFO)
> is used to find an object within the module. The Publisher handler traverses
> the path, one element at a time from left
> to right, mapping the elements to Python object within the module. <-this
> sentence is lost on me

This is a rather fundamental aspect of mod_python.publisher. If you
don't understand it, you may perhaps want to use something else. This
is because if you don't understand this bit, you would likely not
understand all the security implications in how you name code you
stick in a publisher .py file. Result is that you could expose a lot
of your code to access when you didn't mean to.

What it in effect means is that the first name (between slashes) in
URL is mapped to global variable in .py file of same name. If there is
a second part to URL, that is then in turn mapped to sub attribute of
that global variable and so on for each part of the URL. All parts
have to be satisfactorily mapped else you will get not found.

> If no path info was given in the URL, the Publisher handler will use the
> default value of 'index'. If the last element
> is an object inside a module, and the one immediately preceding it is a
> directory (i.e. no module name is given), then
> the module name will also default to 'index'."

This is the bit you care about. Just add a function called 'index()'
to your .py file and it will be called when no function is explicitly
named in the URL.

See also perhaps:

  http://webpython.codepoint.net/mod_python_publisher_handler

> as for the versions of python that work with mod_python:
> os:winXP
> loading (win32 pre-compiled modules, not compiling apache.
> mod_python gives error during windows installation if it can not find
> registry entry for python 2.5.

But for which version of Python was the mod_python compiled for. It
has to match what you have installed.

Further, the Python and Apache installations should really be
installed as an Administrator and not an unprivileged user.

> i was unable to find a binary mod_python MSI installer that would work for
> python 2.6.

That is because there is no mod_python binary installer for Python 2.6
that I know of.

> if there is a binary ready to download, please advise on download location.

Compiling from source is only option unless someone else can supply
you prebuilt binary.

> regarding 2.5.2 versus 2.5, i rolled back to 2.5.0 when i saw this in the
> error.log
>
> [Tue Dec 23 11:51:00 2008] [error] python_init: Python version mismatch,
> expected '2.5', found '2.5.2'.
> b/c of this, i was not sure how well it would work , especially with my
> being new to mod_python.you answered that this error message means nothing.
> thanks!

If it was expect 2.5 but found 2.6, then it wouldn't work, but if only
patch level revision difference, should be okay on Windows.

Graham

>
> On Tue, Dec 23, 2008 at 3:19 PM, Graham Dumpleton
> <graham.dumpleton@gmail.com> wrote:
>>
>> 2008/12/24 David Jackson <davidj411@gmail.com>:
>> > if using this config:
>> > <...snipped>
>> >   SetHandler mod_python
>> >  PythonHandler mod_python.publisher
>> >         PythonDebug On
>> > </Directory>
>> >
>> > do i always need to call the function in the URL?
>> >
>> > for example, testscript.py has a function called "writename".
>> > must i call testscript.py using
>> > http://localhost/pycgi/testscript.py/writename or could i add something
>> > to
>> > the contents of the file like you can when testing a script from command
>> > line like this:
>> >
>> > if __name__=="__main__":
>> >      writeback(names)
>> >
>> >
>> > basically, i am trying to avoid putting the function name into the URL.
>>
>> Look up how the 'index' function works in the documentation.
>>
>> > also, i noticed that the newest version of mod_python ONLY supports
>> > python
>> > 2.5.0. i had errors with 2.5.2
>>
>> What platform, what errors and is this compiling it from source code?
>>
>> There have not been any problem reports saying it doesn't work with
>> Python 2.5.2.
>>
>> If using precompiled binaries, for Python 2.5 you may see warnings
>> about a version mismatch at runtime in error logs, but that can be
>> ignored.
>>
>> > and would not install with python 2.6.
>>
>> Again, what platform, what errors and is this compilng from source code?
>>
>> There have not been any problem reports saying it doesn't work with Python
>> 2.6.
>>
>> Graham
>
>
From davidj411 at gmail.com  Fri Dec 26 13:28:12 2008
From: davidj411 at gmail.com (David Jackson)
Date: Fri Dec 26 13:28:18 2008
Subject: [mod_python] when to use PSP handler, when to use Publisher handler
Message-ID: <491b0d8f0812261028p44f15815q68e04e686d3adbf5@mail.gmail.com>

I am wondering if there are any docs that might address these questions:

1) can PSP handler and Publisher handler be used simultaneously? is it
advisable to use one or the other, but not both? what are the differences
b/t the two in terms of performance?

2) what is difference b/t directives

     A) *AddHandler* -
http://httpd.apache.org/docs/1.3/mod/mod_mime.html#addhandler
     B) *SetHandler* -
http://httpd.apache.org/docs/1.3/mod/mod_mime.html#sethandler

it seems like you could use either, but which is best? sethandler seems to
be for all files at directory level, while addhandler allows you to specify
the extension.

    my httpd.conf working config is posted below, questionable parts are in
*bold.
*Can someone advise on if this configuration will work?

*<Directory "C:/Documents and Settings/davidj411/My Documents/www/pybin">
  AllowOverride None
  Options None
  Order allow,deny
  Allow from all
 SetHandler mod_python

 PythonHandler mod_python.publisher
*  *AddHandler mod_python .psp
 PythonHandler mod_python.psp**

  PythonDebug On
</Directory>*

**
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20081226/63b6f802/attachment.html
From graham.dumpleton at gmail.com  Sat Dec 27 04:46:29 2008
From: graham.dumpleton at gmail.com (Graham Dumpleton)
Date: Sat Dec 27 04:46:32 2008
Subject: [mod_python] when to use PSP handler,
	when to use Publisher handler
In-Reply-To: <491b0d8f0812261028p44f15815q68e04e686d3adbf5@mail.gmail.com>
References: <491b0d8f0812261028p44f15815q68e04e686d3adbf5@mail.gmail.com>
Message-ID: <88e286470812270146u7dd1c56bhf2e7901a6b5cc02@mail.gmail.com>

2008/12/27 David Jackson <davidj411@gmail.com>:
> I am wondering if there are any docs that might address these questions:
>
> 1) can PSP handler and Publisher handler be used simultaneously?

Yes.

By using AddHandler for both so that files with different extensions
can exist in same directory and be processed appropriately.

Alternatively, only enable mod_python.publisher and from inside of
publisher functions access to PSP class directly to render pages you
supply references to and return that as result.

> is it advisable to use one or the other, but not both?

Depends on what you want to do.

Why are you picking mod_python/publisher/psp in the first place when
there are arguably much better alternatives available today for doing
Python web application?

> what are the differences b/t the two in terms of performance?

Hmmm, warning bells ringing. There are a lot more important things
than raw performance. You would be better of finding a system that you
like to use rather than be obsessed over performance.

> 2) what is difference b/t directives
>
>      A) AddHandler -
> http://httpd.apache.org/docs/1.3/mod/mod_mime.html#addhandler
>      B) SetHandler -
> http://httpd.apache.org/docs/1.3/mod/mod_mime.html#sethandler
>
> it seems like you could use either, but which is best? sethandler seems to
> be for all files at directory level, while addhandler allows you to specify
> the extension.

Use SetHandler and you can't mix different file types in same
directory easily as it takes precedence.

>     my httpd.conf working config is posted below, questionable parts are in
> bold.
> Can someone advise on if this configuration will work?
>
> <Directory "C:/Documents and Settings/davidj411/My Documents/www/pybin">
>   AllowOverride None
>   Options None
>   Order allow,deny
>   Allow from all
>  SetHandler mod_python
>
>  PythonHandler mod_python.publisher
>   AddHandler mod_python .psp
>  PythonHandler mod_python.psp
>
>   PythonDebug On
> </Directory>

>From memory this would cause publisher files to take precedence all
the time, you cannot normally mixed SetHandler and AddHandler within
same directory context.

Graham
From newsgroups at debain.org  Sun Dec 28 16:13:57 2008
From: newsgroups at debain.org (Samuel Abels)
Date: Sun Dec 28 16:14:02 2008
Subject: [mod_python] Apache/mod_python: Registering a request handler
	dynamically
Message-ID: <1230498837.26523.11.camel@localhost>

(I also sent this to comp.lang.python before realizing that this list is
the better place, so apologies if you got this message twice.)

Hi, 

Is there a way to dynamically overwrite the request handler from within
mod_python scripts? Something along those lines:

---------------
from mod_python import apache

def myhandler(request):
    request.content_type = 'text/plain'
    request.write('Hello world')

apache.set_default_handler(myhandler)
---------------

I specifically want to avoid changing the Apache directive, as this code
is supposed to function regardless of whether the user has access to
change the Apache directive.

The reason is that I am trying to hide the difference between different
environments (such as mod_python or CGI) from the developer, such that
the following is possible:

---------------
#!/usr/bin/python
import os, os.path
os.chdir(os.path.dirname(__file__))
from PleaseHideMyEnvironment import RequestHandler

def index(request):
    # Note that the request argument here is one created by
    # the PleaseHideMyEnvironment module, not a mod_python one.
    request.write('Hello World')

RequestHandler(index)
---------------

So at the time at which RequestHandler() is created, I need a way to
make sure that mod_python calls to the RequestHandler instead of the
normal handler, whenever a new request is made.

Any idea?

-Samuel 


From graham.dumpleton at gmail.com  Sun Dec 28 16:34:21 2008
From: graham.dumpleton at gmail.com (Graham Dumpleton)
Date: Sun Dec 28 16:34:25 2008
Subject: [mod_python] Apache/mod_python: Registering a request handler
	dynamically
In-Reply-To: <1230498837.26523.11.camel@localhost>
References: <1230498837.26523.11.camel@localhost>
Message-ID: <88e286470812281334o5938013bw2a75e05a2165f98d@mail.gmail.com>

2008/12/29 Samuel Abels <newsgroups@debain.org>:
> (I also sent this to comp.lang.python before realizing that this list is
> the better place, so apologies if you got this message twice.)
>
> Hi,
>
> Is there a way to dynamically overwrite the request handler from within
> mod_python scripts? Something along those lines:
>
> ---------------
> from mod_python import apache
>
> def myhandler(request):
>    request.content_type = 'text/plain'
>    request.write('Hello world')
>
> apache.set_default_handler(myhandler)
> ---------------
>
> I specifically want to avoid changing the Apache directive, as this code
> is supposed to function regardless of whether the user has access to
> change the Apache directive.
>
> The reason is that I am trying to hide the difference between different
> environments (such as mod_python or CGI) from the developer, such that
> the following is possible:
>
> ---------------
> #!/usr/bin/python
> import os, os.path
> os.chdir(os.path.dirname(__file__))
> from PleaseHideMyEnvironment import RequestHandler
>
> def index(request):
>    # Note that the request argument here is one created by
>    # the PleaseHideMyEnvironment module, not a mod_python one.
>    request.write('Hello World')
>
> RequestHandler(index)
> ---------------
>
> So at the time at which RequestHandler() is created, I need a way to
> make sure that mod_python calls to the RequestHandler instead of the
> normal handler, whenever a new request is made.
>
> Any idea?

Are you saying you want one script to be able to work under either CGI
or mod_python? If you are then I would recommend you use WSGI instead
as WSGI interface is specifically designed to be used across multiple
hosting mechanisms.

For example, presuming I got last bit right, the following would work
with mod_wsgi or CGI as written:

#!/usr/bin/env python

def application(environ, start_response):
    status = '200 OK'
    output = 'Hello World!'

    response_headers = [('Content-type', 'text/plain'),
                        ('Content-Length', str(len(output)))]
    start_response(status, response_headers)

    return [output]

if __name__ == "__main__":
    import wsgiref.handlers
    wsgiref.handlers.CGIHandler().run(application)

The CGI handler only gets triggered if script executed. In mod_wsgi it
loads file and then calls direct to 'application'.

The application object could also be plugged into many other WSGI
compliant hosting solutions as well. There are even WSGI adapters out
there for mod_python, although if you go the WSGI way, you are better
off using mod_wsgi instead.

So, go read up about WSGI instead, it is a better long term solution
as not tied to a specific hosting mechanism.

Graham
From newsgroups at debain.org  Sun Dec 28 16:51:34 2008
From: newsgroups at debain.org (Samuel Abels)
Date: Sun Dec 28 16:51:38 2008
Subject: [mod_python] Apache/mod_python: Registering a request handler
	dynamically
In-Reply-To: <88e286470812281334o5938013bw2a75e05a2165f98d@mail.gmail.com>
References: <1230498837.26523.11.camel@localhost>
	<88e286470812281334o5938013bw2a75e05a2165f98d@mail.gmail.com>
Message-ID: <1230501094.26523.22.camel@localhost>

On Mon, 2008-12-29 at 08:34 +1100, Graham Dumpleton wrote:
> Are you saying you want one script to be able to work under either CGI
> or mod_python?

Yes, but that is only part of the problem. I am working with a software
package that is supposed to be distributed to users who have little to
no technical experience, and who may also have no access to change
Apache directives. In other words, I am trying to make a package that
runs under pretty much any server setup no matter what.

In other words, using WSGI is a different problem that needs to be
solved as well, but does not help if a server has no support for it.

-Samuel

From graham.dumpleton at gmail.com  Sun Dec 28 17:11:08 2008
From: graham.dumpleton at gmail.com (Graham Dumpleton)
Date: Sun Dec 28 17:11:14 2008
Subject: [mod_python] Apache/mod_python: Registering a request handler
	dynamically
In-Reply-To: <1230501094.26523.22.camel@localhost>
References: <1230498837.26523.11.camel@localhost>
	<88e286470812281334o5938013bw2a75e05a2165f98d@mail.gmail.com>
	<1230501094.26523.22.camel@localhost>
Message-ID: <88e286470812281411j73c6c678vf25d4f6ddcf31905@mail.gmail.com>

2008/12/29 Samuel Abels <newsgroups@debain.org>:
> On Mon, 2008-12-29 at 08:34 +1100, Graham Dumpleton wrote:
>> Are you saying you want one script to be able to work under either CGI
>> or mod_python?
>
> Yes, but that is only part of the problem. I am working with a software
> package that is supposed to be distributed to users who have little to
> no technical experience, and who may also have no access to change
> Apache directives. In other words, I am trying to make a package that
> runs under pretty much any server setup no matter what.
>
> In other words, using WSGI is a different problem that needs to be
> solved as well, but does not help if a server has no support for it.

If they can run CGI scripts already, then they can run a WSGI script.
They would not need to make changes to Apache configuration. That
example relies on having Python 2.5 for wsgiref, but you could instead
package your own simple CGI-WSGI bridge.

If they already have mod_wsgi available and Apache is configured to
run wsgi-script file type, or they can set AddHandler in .htaccess
file (same as CGI case), the same script will run fine with no
additional packages needing to be installed.

If they already have mod_python available and they can set AddHandler
in .htaccess file (same as CGI), you could supply your own
mod_python-WSGI bridge.

If they already have fastcgi/scgi/ajp available, they just need to
have flup installed, which supplies a WSGI bridge for those protocols.

So, WSGI can already be hosted on top of varying solutions. You seem
to suggest you want to ignore that and write your own bridges for all
the different hosting mechanisms out there, as well as come up with
your own private interface specification for talking to your
application.

So, all this stuff has been done, but if you want to re-invent a lot
of stuff, that is your call.

Graham
From newsgroups at debain.org  Sun Dec 28 17:29:47 2008
From: newsgroups at debain.org (Samuel Abels)
Date: Sun Dec 28 17:29:52 2008
Subject: [mod_python] Apache/mod_python: Registering a request handler
	dynamically
In-Reply-To: <88e286470812281411j73c6c678vf25d4f6ddcf31905@mail.gmail.com>
References: <1230498837.26523.11.camel@localhost>
	<88e286470812281334o5938013bw2a75e05a2165f98d@mail.gmail.com>
	<1230501094.26523.22.camel@localhost>
	<88e286470812281411j73c6c678vf25d4f6ddcf31905@mail.gmail.com>
Message-ID: <1230503387.26523.31.camel@localhost>

On Mon, 2008-12-29 at 09:11 +1100, Graham Dumpleton wrote:
> If they can run CGI scripts already, then they can run a WSGI script.
> They would not need to make changes to Apache configuration. That
> example relies on having Python 2.5 for wsgiref, but you could instead
> package your own simple CGI-WSGI bridge.
> 
> If they already have mod_wsgi available and Apache is configured to
> run wsgi-script file type, or they can set AddHandler in .htaccess
> file (same as CGI case), the same script will run fine with no
> additional packages needing to be installed.
> 
> If they already have mod_python available and they can set AddHandler
> in .htaccess file (same as CGI), you could supply your own
> mod_python-WSGI bridge.
>
> If they already have fastcgi/scgi/ajp available, they just need to
> have flup installed, which supplies a WSGI bridge for those protocols.

To summarize, all require action on part of the user and only work with
AllowOverride.

> So, WSGI can already be hosted on top of varying solutions. You seem
> to suggest you want to ignore that and write your own bridges for all
> the different hosting mechanisms out there, as well as come up with
> your own private interface specification for talking to your
> application.
> 
> So, all this stuff has been done, but if you want to re-invent a lot
> of stuff, that is your call.

I am using WSGI as one alternative. The point is in adding fallback
solutions.

-Samuel

From graham.dumpleton at gmail.com  Sun Dec 28 18:26:20 2008
From: graham.dumpleton at gmail.com (Graham Dumpleton)
Date: Sun Dec 28 18:26:25 2008
Subject: [mod_python] Apache/mod_python: Registering a request handler
	dynamically
In-Reply-To: <1230503387.26523.31.camel@localhost>
References: <1230498837.26523.11.camel@localhost>
	<88e286470812281334o5938013bw2a75e05a2165f98d@mail.gmail.com>
	<1230501094.26523.22.camel@localhost>
	<88e286470812281411j73c6c678vf25d4f6ddcf31905@mail.gmail.com>
	<1230503387.26523.31.camel@localhost>
Message-ID: <88e286470812281526g7bac317cvbcc51be64c8e66ce@mail.gmail.com>

2008/12/29 Samuel Abels <newsgroups@debain.org>:
> On Mon, 2008-12-29 at 09:11 +1100, Graham Dumpleton wrote:
>> If they can run CGI scripts already, then they can run a WSGI script.
>> They would not need to make changes to Apache configuration. That
>> example relies on having Python 2.5 for wsgiref, but you could instead
>> package your own simple CGI-WSGI bridge.
>>
>> If they already have mod_wsgi available and Apache is configured to
>> run wsgi-script file type, or they can set AddHandler in .htaccess
>> file (same as CGI case), the same script will run fine with no
>> additional packages needing to be installed.
>>
>> If they already have mod_python available and they can set AddHandler
>> in .htaccess file (same as CGI), you could supply your own
>> mod_python-WSGI bridge.
>>
>> If they already have fastcgi/scgi/ajp available, they just need to
>> have flup installed, which supplies a WSGI bridge for those protocols.
>
> To summarize, all require action on part of the user and only work with
> AllowOverride.

Yes, you can't avoid configuration. Configuration either has to be
done in main Apache configuration, or appropriate rights have to be
available to allow a user to do it themselves in .htaccess file. For
some hosting solutions you also need additional Python packages
installed which provide adapters, unless you are going to bundle them
all with your application.

Going back to your original request to be able to write:

  apache.set_default_handler(myhandler)

This can simply not work as the script file will not be loaded until a
request arrives which maps to that script, which is by then too late
to run that code.

One can provide handlers for various phases of Apache
programmatically, but it requires you to have written at least one
hook function to register it. This requires configuration to even have
that run and the registration is only for that specific request and
cannot be registered for all requests.

>> So, WSGI can already be hosted on top of varying solutions. You seem
>> to suggest you want to ignore that and write your own bridges for all
>> the different hosting mechanisms out there, as well as come up with
>> your own private interface specification for talking to your
>> application.
>>
>> So, all this stuff has been done, but if you want to re-invent a lot
>> of stuff, that is your call.
>
> I am using WSGI as one alternative. The point is in adding fallback
> solutions.

Then you are looking at it the wrong way. You should be targeting WSGI
API exclusively for how your application talks to the web server as it
is more or less now the Python standard for doing this. This way you
don't have to provide the support for the fallbacks as the existing
third party adapters, or built in support in hosting solutions for
WSGI should be used. You will find that all the major Python web
frameworks/applications are heading this way. Ie., ditching all but
WSGI support and relying on separate adapters for WSGI where needed.

Part of the problem as I sort of see it, is it looks like you have
made the decision to write your application against the mod_python
specific APIs and are now stuck because you have to make it work on
other hosting solutions, by creating your own custom adapters and fake
requests objects that look like mod_python request object. If you need
portability and this is what you are doing, then using mod_python
specific APIs was a poor choice to make.

Frankly, no new application code should be targeting mod_python
specific APIs, or using mod_python specific high level handlers. The
only good reason for using mod_python these days is if you need to
write custom handlers for interacting specifically with Apache, but
not for the content handler phase, only for earlier phases of request
handling.

So, long term goal of anyone writing actual content generating Python
web applications should really be to migrate to WSGI API.

Graham
From newsgroups at debain.org  Sun Dec 28 19:14:31 2008
From: newsgroups at debain.org (Samuel Abels)
Date: Sun Dec 28 19:14:37 2008
Subject: [mod_python] Apache/mod_python: Registering a request handler
	dynamically
In-Reply-To: <88e286470812281526g7bac317cvbcc51be64c8e66ce@mail.gmail.com>
References: <1230498837.26523.11.camel@localhost>
	<88e286470812281334o5938013bw2a75e05a2165f98d@mail.gmail.com>
	<1230501094.26523.22.camel@localhost>
	<88e286470812281411j73c6c678vf25d4f6ddcf31905@mail.gmail.com>
	<1230503387.26523.31.camel@localhost>
	<88e286470812281526g7bac317cvbcc51be64c8e66ce@mail.gmail.com>
Message-ID: <1230509671.26523.61.camel@localhost>

On Mon, 2008-12-29 at 10:26 +1100, Graham Dumpleton wrote:
> Going back to your original request to be able to write:
> 
>   apache.set_default_handler(myhandler)
> 
> This can simply not work as the script file will not be loaded until a
> request arrives which maps to that script, which is by then too late
> to run that code.

By that time it is mapped to the script, but is it also mapped to the
specific function? In other words, perhaps there is a way to map all
requests that are mapped to the file to one specific function? This
would obviously have to interact with whatever handler was already
selected.

> One can provide handlers for various phases of Apache
> programmatically, but it requires you to have written at least one
> hook function to register it.
> This requires configuration to even have
> that run and the registration is only for that specific request and
> cannot be registered for all requests.

I see how this would work, but yeah, it won't help for what I'm trying
to do.

> > I am using WSGI as one alternative. The point is in adding fallback
> > solutions.
> 
> Then you are looking at it the wrong way. You should be targeting WSGI
> API exclusively for how your application talks to the web server

I've been using a bridge even when binding to CGI exclusively, mostly
because I wanted a class-based interface and a clean API around it. The
same goes for WSGI.

> Part of the problem as I sort of see it, is it looks like you have
> made the decision to write your application against the mod_python
> specific APIs and are now stuck because you have to make it work on
> other hosting solutions, by creating your own custom adapters and fake
> requests objects that look like mod_python request object.

Nothing like that - I am adding the support for mod_python only just
now.

-Samuel

From graham.dumpleton at gmail.com  Sun Dec 28 19:26:53 2008
From: graham.dumpleton at gmail.com (Graham Dumpleton)
Date: Sun Dec 28 19:26:58 2008
Subject: [mod_python] Apache/mod_python: Registering a request handler
	dynamically
In-Reply-To: <1230509671.26523.61.camel@localhost>
References: <1230498837.26523.11.camel@localhost>
	<88e286470812281334o5938013bw2a75e05a2165f98d@mail.gmail.com>
	<1230501094.26523.22.camel@localhost>
	<88e286470812281411j73c6c678vf25d4f6ddcf31905@mail.gmail.com>
	<1230503387.26523.31.camel@localhost>
	<88e286470812281526g7bac317cvbcc51be64c8e66ce@mail.gmail.com>
	<1230509671.26523.61.camel@localhost>
Message-ID: <88e286470812281626q10370250r5090055fbc50367d@mail.gmail.com>

2008/12/29 Samuel Abels <newsgroups@debain.org>:
> On Mon, 2008-12-29 at 10:26 +1100, Graham Dumpleton wrote:
>> Going back to your original request to be able to write:
>>
>>   apache.set_default_handler(myhandler)
>>
>> This can simply not work as the script file will not be loaded until a
>> request arrives which maps to that script, which is by then too late
>> to run that code.
>
> By that time it is mapped to the script, but is it also mapped to the
> specific function? In other words, perhaps there is a way to map all
> requests that are mapped to the file to one specific function? This
> would obviously have to interact with whatever handler was already
> selected.

One of the problems with mod_python is that it isn't resource based at
the lowest level. Thus you can't directly map URL to respective files
in a directory and have designated function in them called, without
having to create your own custom dispatcher. This is what
mod_python.publisher does, but it goes further and changes the API to
something different to basic mod_python handler and also allows URL to
map to different functions in file based on URL.

An example of a custom dispatcher that you may want to look at, in
respect of how it is implemented and thus take ideas from, is Vampire
custom handler for mod_python. It maps only the first part of the URL
to a specific file and then calls handler function in it, not mapping
any more of the URL to alternatives in the file like publisher does.

If you look at mod_wsgi it is more like mod_cgi and is resource based.
That is, without needing a custom dispatcher one can through multiple
WSGI script files in a directory and they will work, only requiring a
single AddHandler directive to do it. As a I said, to do this in
mod_python you need to write a custom dispatcher.

Graham
From newsgroups at debain.org  Sun Dec 28 19:39:21 2008
From: newsgroups at debain.org (Samuel Abels)
Date: Sun Dec 28 19:39:26 2008
Subject: [mod_python] Apache/mod_python: Registering a request handler
	dynamically
In-Reply-To: <88e286470812281626q10370250r5090055fbc50367d@mail.gmail.com>
References: <1230498837.26523.11.camel@localhost>
	<88e286470812281334o5938013bw2a75e05a2165f98d@mail.gmail.com>
	<1230501094.26523.22.camel@localhost>
	<88e286470812281411j73c6c678vf25d4f6ddcf31905@mail.gmail.com>
	<1230503387.26523.31.camel@localhost>
	<88e286470812281526g7bac317cvbcc51be64c8e66ce@mail.gmail.com>
	<1230509671.26523.61.camel@localhost>
	<88e286470812281626q10370250r5090055fbc50367d@mail.gmail.com>
Message-ID: <1230511161.26523.69.camel@localhost>

On Mon, 2008-12-29 at 11:26 +1100, Graham Dumpleton wrote:
> An example of a custom dispatcher that you may want to look at, in
> respect of how it is implemented and thus take ideas from, is Vampire
> custom handler for mod_python. It maps only the first part of the URL
> to a specific file and then calls handler function in it, not mapping
> any more of the URL to alternatives in the file like publisher does.
> 
> If you look at mod_wsgi it is more like mod_cgi and is resource based.
> That is, without needing a custom dispatcher one can through multiple
> WSGI script files in a directory and they will work, only requiring a
> single AddHandler directive to do it. As a I said, to do this in
> mod_python you need to write a custom dispatcher.

Alright, I see then why this won't work the way I had hoped. Thanks a
lot for your comments.

-Samuel

From graham.dumpleton at gmail.com  Mon Dec 29 17:20:53 2008
From: graham.dumpleton at gmail.com (Graham Dumpleton)
Date: Mon Dec 29 17:21:02 2008
Subject: [mod_python] Apache/mod_python: Registering a request handler
	dynamically
In-Reply-To: <1230511161.26523.69.camel@localhost>
References: <1230498837.26523.11.camel@localhost>
	<88e286470812281334o5938013bw2a75e05a2165f98d@mail.gmail.com>
	<1230501094.26523.22.camel@localhost>
	<88e286470812281411j73c6c678vf25d4f6ddcf31905@mail.gmail.com>
	<1230503387.26523.31.camel@localhost>
	<88e286470812281526g7bac317cvbcc51be64c8e66ce@mail.gmail.com>
	<1230509671.26523.61.camel@localhost>
	<88e286470812281626q10370250r5090055fbc50367d@mail.gmail.com>
	<1230511161.26523.69.camel@localhost>
Message-ID: <88e286470812291420i44463fd1k49e7dc135fd426f5@mail.gmail.com>

2008/12/29 Samuel Abels <newsgroups@debain.org>:
> On Mon, 2008-12-29 at 11:26 +1100, Graham Dumpleton wrote:
>> An example of a custom dispatcher that you may want to look at, in
>> respect of how it is implemented and thus take ideas from, is Vampire
>> custom handler for mod_python. It maps only the first part of the URL
>> to a specific file and then calls handler function in it, not mapping
>> any more of the URL to alternatives in the file like publisher does.
>>
>> If you look at mod_wsgi it is more like mod_cgi and is resource based.
>> That is, without needing a custom dispatcher one can through multiple
>> WSGI script files in a directory and they will work, only requiring a
>> single AddHandler directive to do it. As a I said, to do this in
>> mod_python you need to write a custom dispatcher.
>
> Alright, I see then why this won't work the way I had hoped. Thanks a
> lot for your comments.

Project at:

  http://code.google.com/p/pywsgi/

The name of the project seems to be very out of place as it isn't a
WSGI project at all really in as much as you could not use this in
conjunction with any other WSGI compatible project from what I can
see. You seem to miss the point of what WSGI is about and to a degree
seem to be playing off the WSGI name to get some visibility to the
project.

Graham
From newsgroups at debain.org  Mon Dec 29 19:10:12 2008
From: newsgroups at debain.org (Samuel Abels)
Date: Mon Dec 29 19:10:18 2008
Subject: [mod_python] Apache/mod_python: Registering a request handler
	dynamically
In-Reply-To: <88e286470812291420i44463fd1k49e7dc135fd426f5@mail.gmail.com>
References: <1230498837.26523.11.camel@localhost>
	<88e286470812281334o5938013bw2a75e05a2165f98d@mail.gmail.com>
	<1230501094.26523.22.camel@localhost>
	<88e286470812281411j73c6c678vf25d4f6ddcf31905@mail.gmail.com>
	<1230503387.26523.31.camel@localhost>
	<88e286470812281526g7bac317cvbcc51be64c8e66ce@mail.gmail.com>
	<1230509671.26523.61.camel@localhost>
	<88e286470812281626q10370250r5090055fbc50367d@mail.gmail.com>
	<1230511161.26523.69.camel@localhost>
	<88e286470812291420i44463fd1k49e7dc135fd426f5@mail.gmail.com>
Message-ID: <1230595812.26523.78.camel@localhost>

On Tue, 2008-12-30 at 09:20 +1100, Graham Dumpleton wrote:
> Project at:
> 
>   http://code.google.com/p/pywsgi/

Man, your eyes are everywhere :-).

> The name of the project seems to be very out of place as it isn't a
> WSGI project at all really in as much as you could not use this in
> conjunction with any other WSGI compatible project from what I can
> see.

Well, I was a little afraid to cause confusion, but didn't think it was
an issue considering that WSGI is just a specification (around which the
module is built).

> You seem to miss the point of what WSGI is about

You have made clear that you think projects should bind to WSGI
directly, but I don't think that was it's intention (it's just too low
level for that).

> and to a degree
> seem to be playing off the WSGI name to get some visibility to the
> project.

Frankly, I didn't think it's a big deal, pretty much every single CGI
wrapper out there uses CGI in its name.

Anyway, since you are the first to notice and seem to take issue with
the name, I may rename it later. I just can't think of a better name
right now.

-Samuel

From newsgroups at debain.org  Tue Dec 30 01:56:30 2008
From: newsgroups at debain.org (Samuel Abels)
Date: Tue Dec 30 01:56:33 2008
Subject: [mod_python] Apache/mod_python: Registering a request handler
	dynamically
In-Reply-To: <1230595812.26523.78.camel@localhost>
References: <1230498837.26523.11.camel@localhost>
	<88e286470812281334o5938013bw2a75e05a2165f98d@mail.gmail.com>
	<1230501094.26523.22.camel@localhost>
	<88e286470812281411j73c6c678vf25d4f6ddcf31905@mail.gmail.com>
	<1230503387.26523.31.camel@localhost>
	<88e286470812281526g7bac317cvbcc51be64c8e66ce@mail.gmail.com>
	<1230509671.26523.61.camel@localhost>
	<88e286470812281626q10370250r5090055fbc50367d@mail.gmail.com>
	<1230511161.26523.69.camel@localhost>
	<88e286470812291420i44463fd1k49e7dc135fd426f5@mail.gmail.com>
	<1230595812.26523.78.camel@localhost>
Message-ID: <1230620190.23157.5.camel@localhost>

On Tue, 2008-12-30 at 01:10 +0100, Samuel Abels wrote:
> On Tue, 2008-12-30 at 09:20 +1100, Graham Dumpleton wrote:
> > Project at:
> > 
> >   http://code.google.com/p/pywsgi/
> 
> Anyway, since you are the first to notice and seem to take issue with
> the name, I may rename it later.

On second thought, I am not doing this. Looking through PyPi it is
obvious that the py prefix does nothing to denote official packages.
Also, WSGI is merely a specification, which even calls for frameworks to
wrap it.
As for "playing off the WSGI name", I think there is nothing wrong with
that - as it is a specification it is clearly not meant to be used only
by Python.

I have however added clear notes to both the PyPi page and
code.google.com to clarify in case anybody still gets confused.

-Samuel

From davidj411 at gmail.com  Tue Dec 30 11:15:22 2008
From: davidj411 at gmail.com (David Jackson)
Date: Tue Dec 30 11:15:28 2008
Subject: [SPAM] Re: [mod_python] when to use PSP handler,
	when to use Publisher handler
In-Reply-To: <88e286470812270146u7dd1c56bhf2e7901a6b5cc02@mail.gmail.com>
References: <491b0d8f0812261028p44f15815q68e04e686d3adbf5@mail.gmail.com>
	<88e286470812270146u7dd1c56bhf2e7901a6b5cc02@mail.gmail.com>
Message-ID: <491b0d8f0812300815j45dc0180r5d2937d12330568c@mail.gmail.com>

2 things i wanted to find out more about :

1) Graham, i took your advice "By using AddHandler for both so that files
with different extensions
can exist in same directory and be processed appropriately."

I then "only enabled mod_python.publisher" and from inside of
publisher functions access to PSP class directly to render pages you
supply references to and return that as result.
*current httpd.conf config is*
*<Directory "C:/www/pybin">
   AllowOverride None
    Options None
    Order allow,deny
    Allow from all
 AddHandler mod_python .py*
*  AddHandler mod_python .psp
 PythonHandler mod_python.publisher
        PythonDebug On
</Directory>*
**
**
*contents of test2.psp:*
*from mod_python import  PSP*
*<%
for n in range(10):
     a= "testing" + str(n)
     req.write(a)
%>*

 *error on page test2.psp shows :*
*   <%*
*    ^*
*SyntaxError: invalid syntax*
**
**
2) Question was: *"Warning bells ringing. Why are you picking
mod_python/publisher/psp in the first place when
there are arguably much better alternatives available today for doing
Python web application? " *
I'd like to hear about some of the options that are better than mod_python.
performance and security are important.
The abilty to manage code is also important.
what else is considered important when picking the "framework" (for lack of
better word) for python web apps?

Thanks!




On Sat, Dec 27, 2008 at 4:46 AM, Graham Dumpleton <
graham.dumpleton@gmail.com> wrote:

> 2008/12/27 David Jackson <davidj411@gmail.com>:
> > I am wondering if there are any docs that might address these questions:
> >
> > 1) can PSP handler and Publisher handler be used simultaneously?
>
> Yes.
>
> By using AddHandler for both so that files with different extensions
> can exist in same directory and be processed appropriately.
>
> Alternatively, only enable mod_python.publisher and from inside of
> publisher functions access to PSP class directly to render pages you
> supply references to and return that as result.
>
> > is it advisable to use one or the other, but not both?
>
> Depends on what you want to do.
>
> Why are you picking mod_python/publisher/psp in the first place when
> there are arguably much better alternatives available today for doing
> Python web application?
>
> > what are the differences b/t the two in terms of performance?
>
> Hmmm, warning bells ringing. There are a lot more important things
> than raw performance. You would be better of finding a system that you
> like to use rather than be obsessed over performance.
>
> > 2) what is difference b/t directives
> >
> >      A) AddHandler -
> > http://httpd.apache.org/docs/1.3/mod/mod_mime.html#addhandler
> >      B) SetHandler -
> > http://httpd.apache.org/docs/1.3/mod/mod_mime.html#sethandler
> >
> > it seems like you could use either, but which is best? sethandler seems
> to
> > be for all files at directory level, while addhandler allows you to
> specify
> > the extension.
>
> Use SetHandler and you can't mix different file types in same
> directory easily as it takes precedence.
>
> >     my httpd.conf working config is posted below, questionable parts are
> in
> > bold.
> > Can someone advise on if this configuration will work?
> >
> > <Directory "C:/Documents and Settings/davidj411/My Documents/www/pybin">
> >   AllowOverride None
> >   Options None
> >   Order allow,deny
> >   Allow from all
> >  SetHandler mod_python
> >
> >  PythonHandler mod_python.publisher
> >   AddHandler mod_python .psp
> >  PythonHandler mod_python.psp
> >
> >   PythonDebug On
> > </Directory>
>
> From memory this would cause publisher files to take precedence all
> the time, you cannot normally mixed SetHandler and AddHandler within
> same directory context.
>
> Graham
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20081230/42356ef2/attachment.html
From list at joreybump.com  Tue Dec 30 15:05:36 2008
From: list at joreybump.com (Jorey Bump)
Date: Tue Dec 30 15:05:45 2008
Subject: [SPAM] Re: [mod_python] when to use PSP handler,	when to use
	Publisher handler
In-Reply-To: <491b0d8f0812300815j45dc0180r5d2937d12330568c@mail.gmail.com>
References: <491b0d8f0812261028p44f15815q68e04e686d3adbf5@mail.gmail.com>	<88e286470812270146u7dd1c56bhf2e7901a6b5cc02@mail.gmail.com>
	<491b0d8f0812300815j45dc0180r5d2937d12330568c@mail.gmail.com>
Message-ID: <495A7F10.4060409@joreybump.com>

David Jackson wrote, at 12/30/2008 11:15 AM:
> 2 things i wanted to find out more about :
>  
> 1) Graham, i took your advice "By using AddHandler for both so that
> files with different extensions
> can exist in same directory and be processed appropriately."
> 
> I then "only enabled mod_python.publisher" and from inside of
> publisher functions access to PSP class directly to render pages you
> supply references to and return that as result.
> *current httpd.conf config is*
> /<Directory "C:/www/pybin">
>    AllowOverride None
>     Options None
>     Order allow,deny
>     Allow from all
>  _AddHandler mod_python .py_/
> /  _AddHandler mod_python .psp_
>  PythonHandler mod_python.publisher
>         PythonDebug On  
> </Directory>/
> // 
> // 
> *contents of test2.psp:*
> /from mod_python import  PSP/
> /<%
> for n in range(10):
>      a= "testing" + str(n)
>      req.write(a)
> %>/
>  
> *error on page test2.psp shows :*
> /   <%/
> /    ^/
> /SyntaxError: invalid syntax/

You can assign different handlers to different extensions like this:

  AddHandler mod_python .py .psp
  PythonHandler mod_python.publisher | .py
  PythonHandler mod_python.psp | .psp

Note that this allows you to use PSP and Publisher as they are intended
to be used, depending on the file extension. IOW, You cannot put PSP
code in Publisher files and expect it to work.

From clodoaldo.pinto.neto at gmail.com  Tue Dec 30 20:45:10 2008
From: clodoaldo.pinto.neto at gmail.com (Clodoaldo Pinto Neto)
Date: Tue Dec 30 20:45:15 2008
Subject: [mod_python] mod_rewrite and publisher
Message-ID: <a595de7a0812301745u2f3c414dhf6a7958a3f038383@mail.gmail.com>

I'm working on an old mod_python-publisher site. I'm changing the
current query string parameters to dynamic urls using mod_rewrite
inside a virtual host.

    <Directory /var/www/html/example.com>
       SetHandler mod_python
       PythonHandler /home/example/mod/_publisher.py
       PythonOption mod_python.importer.path "['/home/example/mod']"
       PythonFixupHandler /home/example/mod/_upload_limit.py
    </Directory>

    RewriteLog /var/log/httpd/example.com-rewrite.log
    RewriteLogLevel 9
    RewriteEngine on
    RewriteRule ^/pub/.* - [L]
    RewriteRule ^/$ /index.py [L]
    RewriteRule ^/(.*?)/?$ /$1/
    RewriteRule ^(/(a|b|c))?([/\w]+?)(/(\d+))?/$ $3/?tv=$2&pagina=$5 [NC]
    RewriteRule ^([/\w]*?)(/(x|y|z))?(/(\w+?))?(/(\w+?))?/$ \
$1/?uf=$3&localidade=$5&bairro=$7 [QSA,NC]
    RewriteRule ^(/(\w+))?(/(\w+))?/$ /?marca=$2&modelo=$4 [QSA]
    RewriteRule ^/$ /index.py [QSA,L]


The rewrite is working as expected. The problem i have is the
publisher doing its own rewrite (is it?) after the one above using the
original uri not the rewrote one.

rewrite log:

10.1.1.101 - - [30/Dec/2008:23:28:45 --0200]
[example.dkt/sid#b94e66e0][rid#bedec338/initial] (3) split
uri=/?marca=&modelo= -> uri=/,
args=marca=&modelo=&uf=DF&localidade=Sao_Paulo&bairro=&tv=a&pagina=2
10.1.1.101 - - [30/Dec/2008:23:28:45 --0200]
[example.dkt/sid#b94e66e0][rid#bedec338/initial] (3) applying pattern
'^/$' to uri '/'
10.1.1.101 - - [30/Dec/2008:23:28:45 --0200]
[example.dkt/sid#b94e66e0][rid#bedec338/initial] (2) rewrite '/' ->
'/index.py'
10.1.1.101 - - [30/Dec/2008:23:28:45 --0200]
[example.dkt/sid#b94e66e0][rid#bedec338/initial] (2) local path
result: /index.py
10.1.1.101 - - [30/Dec/2008:23:28:45 --0200]
[example.dkt/sid#b94e66e0][rid#bedec338/initial] (2) prefixed with
document_root to /var/www/html/example.com/index.py
10.1.1.101 - - [30/Dec/2008:23:28:45 --0200]
[example.dkt/sid#b94e66e0][rid#bedec338/initial] (1) go-ahead with
/var/www/html/example.com/index.py [OK]

Then the publisher gets from there with the original uri:

10.1.1.101 - - [30/Dec/2008:23:28:45 --0200]
[example.dkt/sid#b94e66e0][rid#beac0170/initial] (2) init rewrite
engine with requested uri /a/DF/Sao_Paulo/

How to make the publisher use the rewrote uri? Or what am i missing
and should be doing?

_publisher.py:

from mod_python import publisher
from os.path import basename

def handler(req):
   req.add_output_filter('DEFLATE')
   if basename(req.filename) == 'index.py':
      req.uri = '/'
   return publisher.handler(req)

Regards, Clodoaldo
From graham.dumpleton at gmail.com  Tue Dec 30 21:48:34 2008
From: graham.dumpleton at gmail.com (Graham Dumpleton)
Date: Tue Dec 30 21:48:36 2008
Subject: [mod_python] mod_rewrite and publisher
In-Reply-To: <a595de7a0812301745u2f3c414dhf6a7958a3f038383@mail.gmail.com>
References: <a595de7a0812301745u2f3c414dhf6a7958a3f038383@mail.gmail.com>
Message-ID: <88e286470812301848k178ff552u75fa917a584eeb55@mail.gmail.com>

Log values of:

  req.filename
  req.uri
  req.path_info
  req.args

In the handler and post so can see better what you are saying is
getting passed to it.

Unless you are saying publisher isn't getting the request at all.

Graham

2008/12/31 Clodoaldo Pinto Neto <clodoaldo.pinto.neto@gmail.com>:
> I'm working on an old mod_python-publisher site. I'm changing the
> current query string parameters to dynamic urls using mod_rewrite
> inside a virtual host.
>
>    <Directory /var/www/html/example.com>
>       SetHandler mod_python
>       PythonHandler /home/example/mod/_publisher.py
>       PythonOption mod_python.importer.path "['/home/example/mod']"
>       PythonFixupHandler /home/example/mod/_upload_limit.py
>    </Directory>
>
>    RewriteLog /var/log/httpd/example.com-rewrite.log
>    RewriteLogLevel 9
>    RewriteEngine on
>    RewriteRule ^/pub/.* - [L]
>    RewriteRule ^/$ /index.py [L]
>    RewriteRule ^/(.*?)/?$ /$1/
>    RewriteRule ^(/(a|b|c))?([/\w]+?)(/(\d+))?/$ $3/?tv=$2&pagina=$5 [NC]
>    RewriteRule ^([/\w]*?)(/(x|y|z))?(/(\w+?))?(/(\w+?))?/$ \
> $1/?uf=$3&localidade=$5&bairro=$7 [QSA,NC]
>    RewriteRule ^(/(\w+))?(/(\w+))?/$ /?marca=$2&modelo=$4 [QSA]
>    RewriteRule ^/$ /index.py [QSA,L]
>
>
> The rewrite is working as expected. The problem i have is the
> publisher doing its own rewrite (is it?) after the one above using the
> original uri not the rewrote one.
>
> rewrite log:
>
> 10.1.1.101 - - [30/Dec/2008:23:28:45 --0200]
> [example.dkt/sid#b94e66e0][rid#bedec338/initial] (3) split
> uri=/?marca=&modelo= -> uri=/,
> args=marca=&modelo=&uf=DF&localidade=Sao_Paulo&bairro=&tv=a&pagina=2
> 10.1.1.101 - - [30/Dec/2008:23:28:45 --0200]
> [example.dkt/sid#b94e66e0][rid#bedec338/initial] (3) applying pattern
> '^/$' to uri '/'
> 10.1.1.101 - - [30/Dec/2008:23:28:45 --0200]
> [example.dkt/sid#b94e66e0][rid#bedec338/initial] (2) rewrite '/' ->
> '/index.py'
> 10.1.1.101 - - [30/Dec/2008:23:28:45 --0200]
> [example.dkt/sid#b94e66e0][rid#bedec338/initial] (2) local path
> result: /index.py
> 10.1.1.101 - - [30/Dec/2008:23:28:45 --0200]
> [example.dkt/sid#b94e66e0][rid#bedec338/initial] (2) prefixed with
> document_root to /var/www/html/example.com/index.py
> 10.1.1.101 - - [30/Dec/2008:23:28:45 --0200]
> [example.dkt/sid#b94e66e0][rid#bedec338/initial] (1) go-ahead with
> /var/www/html/example.com/index.py [OK]
>
> Then the publisher gets from there with the original uri:
>
> 10.1.1.101 - - [30/Dec/2008:23:28:45 --0200]
> [example.dkt/sid#b94e66e0][rid#beac0170/initial] (2) init rewrite
> engine with requested uri /a/DF/Sao_Paulo/
>
> How to make the publisher use the rewrote uri? Or what am i missing
> and should be doing?
>
> _publisher.py:
>
> from mod_python import publisher
> from os.path import basename
>
> def handler(req):
>   req.add_output_filter('DEFLATE')
>   if basename(req.filename) == 'index.py':
>      req.uri = '/'
>   return publisher.handler(req)
>
> Regards, Clodoaldo
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>
From clodoaldo.pinto.neto at gmail.com  Wed Dec 31 05:54:35 2008
From: clodoaldo.pinto.neto at gmail.com (Clodoaldo Pinto Neto)
Date: Wed Dec 31 05:54:41 2008
Subject: [mod_python] mod_rewrite and publisher
In-Reply-To: <88e286470812301848k178ff552u75fa917a584eeb55@mail.gmail.com>
References: <a595de7a0812301745u2f3c414dhf6a7958a3f038383@mail.gmail.com>
	<88e286470812301848k178ff552u75fa917a584eeb55@mail.gmail.com>
Message-ID: <a595de7a0812310254i6669c2c4sccc79f2180ba55f4@mail.gmail.com>

2008/12/31 Graham Dumpleton <graham.dumpleton@gmail.com>:
> Log values of:
>
>  req.filename
>  req.uri
>  req.path_info
>  req.args
>
> In the handler and post so can see better what you are saying is
> getting passed to it.

When _publisher.py is this:

from mod_python import publisher, apache
from os.path import basename

def handler(req):
   req.add_output_filter('DEFLATE')
   req.write("""
      req.filename: %s
      req.uri: %s
      req.path_info: %s
      req.args: %s
      """ % (req.filename, req.uri, req.path_info, req.args)
   )
   if basename(req.filename) == 'index.py':
      req.uri = '/'
   req.write('basename: "%s" req.uri: "%s"' % (basename(req.filename), req.uri))
   return apache.OK
   return publisher.handler(req)

calling it like this:
http://example.com/carro/Fiat/DF/Sao_Paulo/2

I get this:

      req.filename: /var/www/html/example.com/index.py
      req.uri: /carro/Fiat/DF/Sao_Paulo/2
      req.path_info:
      req.args:
marca=Fiat&modelo=&uf=DF&localidade=Sao_Paulo&bairro=&tv=carro&pagina=2
      basename: "index.py" req.uri: "/"

I will write it to the log later. I'm leaving now.

Regards, Clodoaldo
>
> Unless you are saying publisher isn't getting the request at all.
>
> Graham
>
> 2008/12/31 Clodoaldo Pinto Neto <clodoaldo.pinto.neto@gmail.com>:
>> I'm working on an old mod_python-publisher site. I'm changing the
>> current query string parameters to dynamic urls using mod_rewrite
>> inside a virtual host.
>>
>>    <Directory /var/www/html/example.com>
>>       SetHandler mod_python
>>       PythonHandler /home/example/mod/_publisher.py
>>       PythonOption mod_python.importer.path "['/home/example/mod']"
>>       PythonFixupHandler /home/example/mod/_upload_limit.py
>>    </Directory>
>>
>>    RewriteLog /var/log/httpd/example.com-rewrite.log
>>    RewriteLogLevel 9
>>    RewriteEngine on
>>    RewriteRule ^/pub/.* - [L]
>>    RewriteRule ^/$ /index.py [L]
>>    RewriteRule ^/(.*?)/?$ /$1/
>>    RewriteRule ^(/(a|b|c))?([/\w]+?)(/(\d+))?/$ $3/?tv=$2&pagina=$5 [NC]
>>    RewriteRule ^([/\w]*?)(/(x|y|z))?(/(\w+?))?(/(\w+?))?/$ \
>> $1/?uf=$3&localidade=$5&bairro=$7 [QSA,NC]
>>    RewriteRule ^(/(\w+))?(/(\w+))?/$ /?marca=$2&modelo=$4 [QSA]
>>    RewriteRule ^/$ /index.py [QSA,L]
>>
>>
>> The rewrite is working as expected. The problem i have is the
>> publisher doing its own rewrite (is it?) after the one above using the
>> original uri not the rewrote one.
>>
>> rewrite log:
>>
>> 10.1.1.101 - - [30/Dec/2008:23:28:45 --0200]
>> [example.dkt/sid#b94e66e0][rid#bedec338/initial] (3) split
>> uri=/?marca=&modelo= -> uri=/,
>> args=marca=&modelo=&uf=DF&localidade=Sao_Paulo&bairro=&tv=a&pagina=2
>> 10.1.1.101 - - [30/Dec/2008:23:28:45 --0200]
>> [example.dkt/sid#b94e66e0][rid#bedec338/initial] (3) applying pattern
>> '^/$' to uri '/'
>> 10.1.1.101 - - [30/Dec/2008:23:28:45 --0200]
>> [example.dkt/sid#b94e66e0][rid#bedec338/initial] (2) rewrite '/' ->
>> '/index.py'
>> 10.1.1.101 - - [30/Dec/2008:23:28:45 --0200]
>> [example.dkt/sid#b94e66e0][rid#bedec338/initial] (2) local path
>> result: /index.py
>> 10.1.1.101 - - [30/Dec/2008:23:28:45 --0200]
>> [example.dkt/sid#b94e66e0][rid#bedec338/initial] (2) prefixed with
>> document_root to /var/www/html/example.com/index.py
>> 10.1.1.101 - - [30/Dec/2008:23:28:45 --0200]
>> [example.dkt/sid#b94e66e0][rid#bedec338/initial] (1) go-ahead with
>> /var/www/html/example.com/index.py [OK]
>>
>> Then the publisher gets from there with the original uri:
>>
>> 10.1.1.101 - - [30/Dec/2008:23:28:45 --0200]
>> [example.dkt/sid#b94e66e0][rid#beac0170/initial] (2) init rewrite
>> engine with requested uri /a/DF/Sao_Paulo/
>>
>> How to make the publisher use the rewrote uri? Or what am i missing
>> and should be doing?
>>
>> _publisher.py:
>>
>> from mod_python import publisher
>> from os.path import basename
>>
>> def handler(req):
>>   req.add_output_filter('DEFLATE')
>>   if basename(req.filename) == 'index.py':
>>      req.uri = '/'
>>   return publisher.handler(req)
>>
>> Regards, Clodoaldo
>> _______________________________________________
>> Mod_python mailing list
>> Mod_python@modpython.org
>> http://mailman.modpython.org/mailman/listinfo/mod_python
>>
>
From clodoaldo.pinto.neto at gmail.com  Wed Dec 31 11:35:20 2008
From: clodoaldo.pinto.neto at gmail.com (Clodoaldo Pinto Neto)
Date: Wed Dec 31 11:35:28 2008
Subject: [mod_python] mod_rewrite and publisher
In-Reply-To: <a595de7a0812310254i6669c2c4sccc79f2180ba55f4@mail.gmail.com>
References: <a595de7a0812301745u2f3c414dhf6a7958a3f038383@mail.gmail.com>
	<88e286470812301848k178ff552u75fa917a584eeb55@mail.gmail.com>
	<a595de7a0812310254i6669c2c4sccc79f2180ba55f4@mail.gmail.com>
Message-ID: <a595de7a0812310835n5b6d81ebld54f09967f12f3e7@mail.gmail.com>

2008/12/31 Clodoaldo Pinto Neto <clodoaldo.pinto.neto@gmail.com>:
> 2008/12/31 Graham Dumpleton <graham.dumpleton@gmail.com>:
>> Log values of:
>>
>>  req.filename
>>  req.uri
>>  req.path_info
>>  req.args
>>
>> In the handler and post so can see better what you are saying is
>> getting passed to it.
>
> When _publisher.py is this:
>
> from mod_python import publisher, apache
> from os.path import basename
>
> def handler(req):
>   req.add_output_filter('DEFLATE')
>   req.write("""
>      req.filename: %s
>      req.uri: %s
>      req.path_info: %s
>      req.args: %s
>      """ % (req.filename, req.uri, req.path_info, req.args)
>   )
>   if basename(req.filename) == 'index.py':
>      req.uri = '/'
>   req.write('basename: "%s" req.uri: "%s"' % (basename(req.filename), req.uri))
>   return apache.OK
>   return publisher.handler(req)
>
> calling it like this:
> http://example.com/carro/Fiat/DF/Sao_Paulo/2
>
> I get this:
>
>      req.filename: /var/www/html/example.com/index.py
>      req.uri: /carro/Fiat/DF/Sao_Paulo/2
>      req.path_info:
>      req.args:
> marca=Fiat&modelo=&uf=DF&localidade=Sao_Paulo&bairro=&tv=carro&pagina=2
>      basename: "index.py" req.uri: "/"
>
> I will write it to the log later. I'm leaving now.

The log with this _publisher.py:

from mod_python import publisher, apache
from os.path import basename

def handler(req):
   req.add_output_filter('DEFLATE')
   log_message = ("""
      req.filename: %s
      req.uri: %s
      req.path_info: %s
      req.args: %s
      """ % (req.filename, req.uri, req.path_info, req.args)
   )
   req.log_error(log_message)
   if basename(req.filename) == 'index.py':
      req.uri = '/'
   return publisher.handler(req)

[Wed Dec 31 14:31:22 2008] [error] [client 10.1.1.101] \n
req.filename: /var/www/html/carroarodo.com/index.py\n      req.uri:
/carro/Fiat/DF/Sao_Paulo/2\n      req.path_info: \n      req.args:
marca=Fiat&modelo=&uf=DF&localidade=Sao_Paulo&bairro=&tv=carro&pagina=2\n
[Wed Dec 31 14:31:22 2008] [error] [client 10.1.1.101] \n
req.filename: /var/www/html/carroarodo.com/index.py\n      req.uri:
/carro/Fiat/DF/Sao_Paulo/\n      req.path_info: \n      req.args:
marca=Fiat&modelo=&uf=DF&localidade=Sao_Paulo&bairro=&tv=carro&pagina=\n
[Wed Dec 31 14:31:22 2008] [error] [client 10.1.1.101] \n
req.filename: /var/www/html/carroarodo.com/index.py\n      req.uri:
/carro/Fiat/DF/Sao_Paulo/\n      req.path_info: \n      req.args:
marca=Fiat&modelo=&uf=DF&localidade=Sao_Paulo&bairro=&tv=carro&pagina=\n
[Wed Dec 31 14:31:22 2008] [error] [client 10.1.1.101] \n
req.filename: /var/www/html/carroarodo.com/index.py\n      req.uri:
/carro/Fiat/DF/Sao_Paulo/\n      req.path_info: \n      req.args:
marca=Fiat&modelo=&uf=DF&localidade=Sao_Paulo&bairro=&tv=carro&pagina=\n
[Wed Dec 31 14:31:22 2008] [error] [client 10.1.1.101] \n
req.filename: /var/www/html/carroarodo.com/index.py\n      req.uri:
/carro/Fiat/DF/Sao_Paulo/\n      req.path_info: \n      req.args:
marca=Fiat&modelo=&uf=DF&localidade=Sao_Paulo&bairro=&tv=carro&pagina=\n
[Wed Dec 31 14:31:23 2008] [error] [client 10.1.1.101] \n
req.filename: /var/www/html/carroarodo.com/index.py\n      req.uri:
/carro/Fiat/DF/Sao_Paulo/\n      req.path_info: \n      req.args:
marca=Fiat&modelo=&uf=DF&localidade=Sao_Paulo&bairro=&tv=carro&pagina=\n
[Wed Dec 31 14:31:23 2008] [error] [client 10.1.1.101] \n
req.filename: /var/www/html/carroarodo.com/index.py\n      req.uri:
/carro/Fiat/DF/Sao_Paulo/\n      req.path_info: \n      req.args:
marca=Fiat&modelo=&uf=DF&localidade=Sao_Paulo&bairro=&tv=carro&pagina=\n
[Wed Dec 31 14:31:23 2008] [error] [client 10.1.1.101] \n
req.filename: /var/www/html/carroarodo.com/index.py\n      req.uri:
/carro/Fiat/DF/Sao_Paulo/\n      req.path_info: \n      req.args:
marca=Fiat&modelo=&uf=DF&localidade=Sao_Paulo&bairro=&tv=carro&pagina=\n
[Wed Dec 31 14:31:23 2008] [error] [client 10.1.1.101] \n
req.filename: /var/www/html/carroarodo.com/index.py\n      req.uri:
/carro/Fiat/DF/Sao_Paulo/\n      req.path_info: \n      req.args:
marca=Fiat&modelo=&uf=DF&localidade=Sao_Paulo&bairro=&tv=carro&pagina=\n
[Wed Dec 31 14:31:23 2008] [error] [client 10.1.1.101] \n
req.filename: /var/www/html/carroarodo.com/index.py\n      req.uri:
/carro/Fiat/DF/Sao_Paulo/\n      req.path_info: \n      req.args:
marca=Fiat&modelo=&uf=DF&localidade=Sao_Paulo&bairro=&tv=carro&pagina=\n
[Wed Dec 31 14:31:23 2008] [error] [client 10.1.1.101] \n
req.filename: /var/www/html/carroarodo.com/index.py\n      req.uri:
/carro/Fiat/DF/Sao_Paulo/\n      req.path_info: \n      req.args:
marca=Fiat&modelo=&uf=DF&localidade=Sao_Paulo&bairro=&tv=carro&pagina=\n
[Wed Dec 31 14:31:23 2008] [error] [client 10.1.1.101] \n
req.filename: /var/www/html/carroarodo.com/index.py\n      req.uri:
/carro/Fiat/DF/Sao_Paulo/\n      req.path_info: \n      req.args:
marca=Fiat&modelo=&uf=DF&localidade=Sao_Paulo&bairro=&tv=carro&pagina=\n
[Wed Dec 31 14:31:23 2008] [error] [client 10.1.1.101] \n
req.filename: /var/www/html/carroarodo.com/index.py\n      req.uri:
/carro/Fiat/DF/Sao_Paulo/\n      req.path_info: \n      req.args:
marca=Fiat&modelo=&uf=DF&localidade=Sao_Paulo&bairro=&tv=carro&pagina=\n
[Wed Dec 31 14:31:23 2008] [error] [client 10.1.1.101] \n
req.filename: /var/www/html/carroarodo.com/index.py\n      req.uri:
/carro/Fiat/DF/Sao_Paulo/\n      req.path_info: \n      req.args:
marca=Fiat&modelo=&uf=DF&localidade=Sao_Paulo&bairro=&tv=carro&pagina=\n
[Wed Dec 31 14:31:23 2008] [error] [client 10.1.1.101] \n
req.filename: /var/www/html/carroarodo.com/index.py\n      req.uri:
/carro/Fiat/DF/Sao_Paulo/\n      req.path_info: \n      req.args:
marca=Fiat&modelo=&uf=DF&localidade=Sao_Paulo&bairro=&tv=carro&pagina=\n
[Wed Dec 31 14:31:23 2008] [error] [client 10.1.1.101] \n
req.filename: /var/www/html/carroarodo.com/index.py\n      req.uri:
/carro/Fiat/DF/Sao_Paulo/\n      req.path_info: \n      req.args:
marca=Fiat&modelo=&uf=DF&localidade=Sao_Paulo&bairro=&tv=carro&pagina=\n
[Wed Dec 31 14:31:23 2008] [error] [client 10.1.1.101] \n
req.filename: /var/www/html/carroarodo.com/index.py\n      req.uri:
/carro/Fiat/DF/Sao_Paulo/\n      req.path_info: \n      req.args:
marca=Fiat&modelo=&uf=DF&localidade=Sao_Paulo&bairro=&tv=carro&pagina=\n
[Wed Dec 31 14:31:24 2008] [error] [client 10.1.1.101] \n
req.filename: /var/www/html/carroarodo.com/index.py\n      req.uri:
/carro/Fiat/DF/Sao_Paulo/\n      req.path_info: \n      req.args:
marca=Fiat&modelo=&uf=DF&localidade=Sao_Paulo&bairro=&tv=carro&pagina=\n
[Wed Dec 31 14:31:24 2008] [error] [client 10.1.1.101] \n
req.filename: /var/www/html/carroarodo.com/index.py\n      req.uri:
/carro/Fiat/DF/Sao_Paulo/\n      req.path_info: \n      req.args:
marca=Fiat&modelo=&uf=DF&localidade=Sao_Paulo&bairro=&tv=carro&pagina=\n
[Wed Dec 31 14:31:24 2008] [error] [client 10.1.1.101] \n
req.filename: /var/www/html/carroarodo.com/index.py\n      req.uri:
/carro/Fiat/DF/Sao_Paulo/\n      req.path_info: \n      req.args:
marca=Fiat&modelo=&uf=DF&localidade=Sao_Paulo&bairro=&tv=carro&pagina=\n
[Wed Dec 31 14:31:24 2008] [error] [client 10.1.1.101] \n
req.filename: /var/www/html/carroarodo.com/index.py\n      req.uri:
/carro/Fiat/DF/Sao_Paulo/\n      req.path_info: \n      req.args:
marca=Fiat&modelo=&uf=DF&localidade=Sao_Paulo&bairro=&tv=carro&pagina=\n

Clodoaldo

> Regards, Clodoaldo
>>
>> Unless you are saying publisher isn't getting the request at all.
>>
>> Graham
>>
>> 2008/12/31 Clodoaldo Pinto Neto <clodoaldo.pinto.neto@gmail.com>:
>>> I'm working on an old mod_python-publisher site. I'm changing the
>>> current query string parameters to dynamic urls using mod_rewrite
>>> inside a virtual host.
>>>
>>>    <Directory /var/www/html/example.com>
>>>       SetHandler mod_python
>>>       PythonHandler /home/example/mod/_publisher.py
>>>       PythonOption mod_python.importer.path "['/home/example/mod']"
>>>       PythonFixupHandler /home/example/mod/_upload_limit.py
>>>    </Directory>
>>>
>>>    RewriteLog /var/log/httpd/example.com-rewrite.log
>>>    RewriteLogLevel 9
>>>    RewriteEngine on
>>>    RewriteRule ^/pub/.* - [L]
>>>    RewriteRule ^/$ /index.py [L]
>>>    RewriteRule ^/(.*?)/?$ /$1/
>>>    RewriteRule ^(/(a|b|c))?([/\w]+?)(/(\d+))?/$ $3/?tv=$2&pagina=$5 [NC]
>>>    RewriteRule ^([/\w]*?)(/(x|y|z))?(/(\w+?))?(/(\w+?))?/$ \
>>> $1/?uf=$3&localidade=$5&bairro=$7 [QSA,NC]
>>>    RewriteRule ^(/(\w+))?(/(\w+))?/$ /?marca=$2&modelo=$4 [QSA]
>>>    RewriteRule ^/$ /index.py [QSA,L]
>>>
>>>
>>> The rewrite is working as expected. The problem i have is the
>>> publisher doing its own rewrite (is it?) after the one above using the
>>> original uri not the rewrote one.
>>>
>>> rewrite log:
>>>
>>> 10.1.1.101 - - [30/Dec/2008:23:28:45 --0200]
>>> [example.dkt/sid#b94e66e0][rid#bedec338/initial] (3) split
>>> uri=/?marca=&modelo= -> uri=/,
>>> args=marca=&modelo=&uf=DF&localidade=Sao_Paulo&bairro=&tv=a&pagina=2
>>> 10.1.1.101 - - [30/Dec/2008:23:28:45 --0200]
>>> [example.dkt/sid#b94e66e0][rid#bedec338/initial] (3) applying pattern
>>> '^/$' to uri '/'
>>> 10.1.1.101 - - [30/Dec/2008:23:28:45 --0200]
>>> [example.dkt/sid#b94e66e0][rid#bedec338/initial] (2) rewrite '/' ->
>>> '/index.py'
>>> 10.1.1.101 - - [30/Dec/2008:23:28:45 --0200]
>>> [example.dkt/sid#b94e66e0][rid#bedec338/initial] (2) local path
>>> result: /index.py
>>> 10.1.1.101 - - [30/Dec/2008:23:28:45 --0200]
>>> [example.dkt/sid#b94e66e0][rid#bedec338/initial] (2) prefixed with
>>> document_root to /var/www/html/example.com/index.py
>>> 10.1.1.101 - - [30/Dec/2008:23:28:45 --0200]
>>> [example.dkt/sid#b94e66e0][rid#bedec338/initial] (1) go-ahead with
>>> /var/www/html/example.com/index.py [OK]
>>>
>>> Then the publisher gets from there with the original uri:
>>>
>>> 10.1.1.101 - - [30/Dec/2008:23:28:45 --0200]
>>> [example.dkt/sid#b94e66e0][rid#beac0170/initial] (2) init rewrite
>>> engine with requested uri /a/DF/Sao_Paulo/
>>>
>>> How to make the publisher use the rewrote uri? Or what am i missing
>>> and should be doing?
>>>
>>> _publisher.py:
>>>
>>> from mod_python import publisher
>>> from os.path import basename
>>>
>>> def handler(req):
>>>   req.add_output_filter('DEFLATE')
>>>   if basename(req.filename) == 'index.py':
>>>      req.uri = '/'
>>>   return publisher.handler(req)
>>>
>>> Regards, Clodoaldo
>>> _______________________________________________
>>> Mod_python mailing list
>>> Mod_python@modpython.org
>>> http://mailman.modpython.org/mailman/listinfo/mod_python
>>>
>>
>
