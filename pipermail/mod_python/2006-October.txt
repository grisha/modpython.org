From grahamd at dscpl.com.au  Sun Oct  1 02:43:34 2006
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Sun Oct  1 02:44:42 2006
Subject: [mod_python] New article on server side includes.
Message-ID: <DB22B0F7-D3A8-4A44-971D-3964E3D14DAF@dscpl.com.au>

In mod_python 3.3 there is a new feature which allows the use of Python
code with traditional Apache server side include mechanism. As a bit of
background on this new feature, I have written a new article about it  
and
put it on my personal mod_python wiki. The article can be found at:

   http://www.dscpl.com.au/wiki/ModPython/Articles/ 
BasicsOfServerSideIncludes

Other articles I have written on mod_python can be found at:

   http://www.dscpl.com.au/wiki/ModPython/Articles

These wiki articles supersede older versions which were located on a
different part of my site. Trying to access the older articles should  
redirect
you to this new part of the web site.

Any feedback on this new article about SSI most appreciated. If there  
are
any questions about it, or you think that additional information  
could be
included in it, let me know via the mailing list.

Enjoy.

Graham
From durumdara at gmail.com  Mon Oct  2 05:38:10 2006
From: durumdara at gmail.com (durumdara)
Date: Mon Oct  2 05:38:20 2006
Subject: [mod_python] Render a template (PSP)
Message-ID: <4520DE02.4040306@gmail.com>

Hi !

I want to only render a PSP template to insert to another PSP-s, I don't 
want to write to the output stream !

How to I redirect psp's output to get the rendered text ?

(Like in Zope where I can render some subtemplate to insert to other place).

I don't want to use include, only I want to render this PSP.

I see this example somewhere, but I cannot find it again.

Thanks for your help:
    dd
From nlv11281 at natlab.research.philips.com  Mon Oct  2 05:56:58 2006
From: nlv11281 at natlab.research.philips.com (Mike Looijmans)
Date: Mon Oct  2 05:57:06 2006
Subject: [mod_python] Render a template (PSP)
In-Reply-To: <4520DE02.4040306@gmail.com>
References: <4520DE02.4040306@gmail.com>
Message-ID: <4520E26A.7080001@natlab.research.philips.com>

You may be able to get away with this:


  grabber = StringIO()
  oldwrite = req.write
  req.write = grabber.write
  try:
      doSomePSPStuff(req)
  finally:
      req.write = oldwrite


This would redirect any output in the doSomePSPStuff function into the 
grabber object.

--
Mike Looijmans
Philips Natlab / Topic Automation


durumdara wrote:
> I want to only render a PSP template to insert to another PSP-s, I don't 
> want to write to the output stream !
> How to I redirect psp's output to get the rendered text ?

From ppathiakis at eagleaccess.com  Mon Oct  2 16:39:27 2006
From: ppathiakis at eagleaccess.com (Paul J. Pathiakis)
Date: Mon Oct  2 16:39:15 2006
Subject: [mod_python] Can't get it to interpret
References: <EAED38651CF6BF46A8D2BCD9D4EEAA6D76C908@BIGMAIL.eagleinvsys.com>
	<EAED38651CF6BF46A8D2BCD9D4EEAA6D76C90A@BIGMAIL.eagleinvsys.com>
	<EAED38651CF6BF46A8D2BCD9D4EEAA6D76C90E@BIGMAIL.eagleinvsys.com>
	<f1d37388f86a0c8f74ab0bcdce1fab39@dscpl.com.au>
Message-ID: <EAED38651CF6BF46A8D2BCD9D4EEAA6D76C92E@BIGMAIL.eagleinvsys.com>

** Graham,


If the PythonHeaderParserHandler wasn't there, I would say that the
PythonPath directive isn't required as mod_python.publisher doesn't
require it to be set as described.

The question is, what is 'nav.web' and what does the handler in it
do? Most people wouldn't have a need to be defining a handler for
the PythonHeaderParserHandler phase. What it does will dictate
whether or not PythonPath needs to be set as indicated or whether
the comment about what to do derives from a misunderstanding as to
how mod_python works.

Graham

** Well, nav.web is a directory /usr/local/nav/lib/python/.  NAV is a directory in the director.  Web is the directory underneath it.  I believe it's supposed to be the web interface to the NAV software.  There's about 20 files in there.  I'm trying to figure out if there's an easier way to interface.  Personally, I was looking at my httpd.conf file and wanted to just alias the /usr/local/nav/webroot directory.  (Someone else mailed me with the same idea)  

Now that I added to the path, I have now encountered this (which seems to point that there is a login attempt into a database, tell me, what information can I send the list to further my cause?):

Mod_python error: "PythonHeaderParserHandler nav.web"

Traceback (most recent call last):

  File "/usr/local/lib/python2.4/site-packages/mod_python/apache.py", line 287, in HandlerDispatch
    log=debug)

  File "/usr/local/lib/python2.4/site-packages/mod_python/apache.py", line 464, in import_module
    module = imp.load_module(mname, f, p, d)

  File "/usr/local/nav/lib/python/./nav/web/__init__.py", line 28, in ?
    import nav.web.auth

  File "/usr/local/nav/lib/python/./nav/web/auth.py", line 31, in ?
    from nav import db

  File "/usr/local/nav/lib/python/./nav/db/__init__.py", line 103, in ?
    setDefaultConnection(getConnection('default'));

  File "/usr/local/nav/lib/python/./nav/db/__init__.py", line 86, in getConnection
    connection = psycopg.connect('host=%s dbname=%s user=%s password=%s' %

OperationalError: fe_sendauth: no password supplied

Thanks,

P.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20061002/30516fea/attachment.html
From jpg at jgassociates.ca  Mon Oct  2 17:07:44 2006
From: jpg at jgassociates.ca (Jim Gallacher)
Date: Mon Oct  2 17:06:34 2006
Subject: [mod_python] Can't get it to interpret
In-Reply-To: <EAED38651CF6BF46A8D2BCD9D4EEAA6D76C92E@BIGMAIL.eagleinvsys.com>
References: <EAED38651CF6BF46A8D2BCD9D4EEAA6D76C908@BIGMAIL.eagleinvsys.com>	<EAED38651CF6BF46A8D2BCD9D4EEAA6D76C90A@BIGMAIL.eagleinvsys.com>	<EAED38651CF6BF46A8D2BCD9D4EEAA6D76C90E@BIGMAIL.eagleinvsys.com>	<f1d37388f86a0c8f74ab0bcdce1fab39@dscpl.com.au>
	<EAED38651CF6BF46A8D2BCD9D4EEAA6D76C92E@BIGMAIL.eagleinvsys.com>
Message-ID: <45217FA0.1070800@jgassociates.ca>

Paul J. Pathiakis wrote:
> ** Graham,
> 
> 
> If the PythonHeaderParserHandler wasn't there, I would say that the
> PythonPath directive isn't required as mod_python.publisher doesn't
> require it to be set as described.
> 
> The question is, what is 'nav.web' and what does the handler in it
> do? Most people wouldn't have a need to be defining a handler for
> the PythonHeaderParserHandler phase. What it does will dictate
> whether or not PythonPath needs to be set as indicated or whether
> the comment about what to do derives from a misunderstanding as to
> how mod_python works.

FYI Graham, the authentication is performed in by the 
PythonHeaderParserHandler handler.

> Graham
> 
> ** Well, nav.web is a directory /usr/local/nav/lib/python/.  NAV is a directory in the director.  Web is the directory underneath it.  I believe it's supposed to be the web interface to the NAV software.  There's about 20 files in there.  I'm trying to figure out if there's an easier way to interface.  Personally, I was looking at my httpd.conf file and wanted to just alias the /usr/local/nav/webroot directory.  (Someone else mailed me with the same idea)  
> 
> Now that I added to the path, I have now encountered this (which seems to point that there is a login attempt into a database, tell me, what information can I send the list to further my cause?):
> 
> Mod_python error: "PythonHeaderParserHandler nav.web"
> 
> Traceback (most recent call last):
> 
>   File "/usr/local/lib/python2.4/site-packages/mod_python/apache.py", line 287, in HandlerDispatch
>     log=debug)
> 
>   File "/usr/local/lib/python2.4/site-packages/mod_python/apache.py", line 464, in import_module
>     module = imp.load_module(mname, f, p, d)
> 
>   File "/usr/local/nav/lib/python/./nav/web/__init__.py", line 28, in ?
>     import nav.web.auth
> 
>   File "/usr/local/nav/lib/python/./nav/web/auth.py", line 31, in ?
>     from nav import db
> 
>   File "/usr/local/nav/lib/python/./nav/db/__init__.py", line 103, in ?
>     setDefaultConnection(getConnection('default'));
> 
>   File "/usr/local/nav/lib/python/./nav/db/__init__.py", line 86, in getConnection
>     connection = psycopg.connect('host=%s dbname=%s user=%s password=%s' %
> 
> OperationalError: fe_sendauth: no password supplied
> 
> Thanks,

I'd say you are pretty close to getting this puppy working. My guess is 
that there is some other spot in the NAV where host, dbname, user and 
password are configured. Once you've found that you should be off to the 
races.

Jim


From grahamd at dscpl.com.au  Mon Oct  2 18:10:33 2006
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Mon Oct  2 18:10:41 2006
Subject: [mod_python] Render a template (PSP)
Message-ID: <1159827033.27807@dscpl.user.openhosting.com>

The write() methods needs to take a second argument, so using StringIO
directly may not work. Instead see:

  http://www.modpython.org/pipermail/mod_python/2005-June/018231.html

Graham

Mike Looijmans wrote ..
> You may be able to get away with this:
> 
> 
>   grabber = StringIO()
>   oldwrite = req.write
>   req.write = grabber.write
>   try:
>       doSomePSPStuff(req)
>   finally:
>       req.write = oldwrite
> 
> 
> This would redirect any output in the doSomePSPStuff function into the
> grabber object.
> 
> --
> Mike Looijmans
> Philips Natlab / Topic Automation
> 
> 
> durumdara wrote:
> > I want to only render a PSP template to insert to another PSP-s, I don't
> > want to write to the output stream !
> > How to I redirect psp's output to get the rendered text ?
> 
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
From nogradi at gmail.com  Mon Oct  2 19:48:46 2006
From: nogradi at gmail.com (Daniel Nogradi)
Date: Mon Oct  2 19:48:50 2006
Subject: [mod_python] New article on server side includes.
In-Reply-To: <DB22B0F7-D3A8-4A44-971D-3964E3D14DAF@dscpl.com.au>
References: <DB22B0F7-D3A8-4A44-971D-3964E3D14DAF@dscpl.com.au>
Message-ID: <5f56302b0610021648y34d282c9od65dfae3f707e923@mail.gmail.com>

> In mod_python 3.3 there is a new feature which allows the use of Python
> code with traditional Apache server side include mechanism. As a bit of
> background on this new feature, I have written a new article about it
> and
> put it on my personal mod_python wiki. The article can be found at:
>
>    http://www.dscpl.com.au/wiki/ModPython/Articles/BasicsOfServerSideIncludes
>
> Other articles I have written on mod_python can be found at:
>
>    http://www.dscpl.com.au/wiki/ModPython/Articles
>
> These wiki articles supersede older versions which were located on a
> different part of my site. Trying to access the older articles should
> redirect
> you to this new part of the web site.
>
> Any feedback on this new article about SSI most appreciated. If there
> are
> any questions about it, or you think that additional information
> could be
> included in it, let me know via the mailing list.
>
> Enjoy.
>
> Graham

Hi Graham, just in case it was not your intention: all makeit links on
the old site are not pointing to the new one although these articles
exist there.

HTH,
Daniel
From mvanaswegen at gmail.com  Tue Oct  3 04:10:12 2006
From: mvanaswegen at gmail.com (marinus van aswegen)
Date: Tue Oct  3 04:10:17 2006
Subject: [mod_python] fedora vs ubuntu
In-Reply-To: <29a6ca010609291356x62d8c54fpc71f047572ddd64d@mail.gmail.com>
References: <ffa39deb0609291234k78417427p34c075961bf27868@mail.gmail.com>
	<29a6ca010609291356x62d8c54fpc71f047572ddd64d@mail.gmail.com>
Message-ID: <ffa39deb0610030110raf5e1d9j9d11a38e87cd03a2@mail.gmail.com>

Hi Guys

I'm trying to reduce the my whole mod_python config (module load, vhost,
directory) to to a file I can drop in the feroda conf.d directory. I've had
limited success thus far, has anyone tried this?

Marinus
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20061003/8c6f0f35/attachment.html
From cristian.codorean at gmail.com  Tue Oct  3 08:04:35 2006
From: cristian.codorean at gmail.com (Cristian Codorean)
Date: Tue Oct  3 08:04:39 2006
Subject: [mod_python] SELECT element values
Message-ID: <d482e35b0610030504r53bc919bi246142f8ed523e26@mail.gmail.com>

Hello,
  I have a simple form which I access easily
    form_data = util.FieldStorage(req)
    for field in form_data.list:
        text = "%s = %s\n" % (field.name,field.value)
        req.write(text)

but in the case of html select elements I only get the index of the selected
element as the field value.
How can I get the actual value at that index ?

Thank you !
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20061003/cdbc86b1/attachment.html
From ppathiakis at eagleaccess.com  Tue Oct  3 08:09:03 2006
From: ppathiakis at eagleaccess.com (Paul J. Pathiakis)
Date: Tue Oct  3 08:13:12 2006
Subject: [mod_python] Can't get it to interpret
References: <EAED38651CF6BF46A8D2BCD9D4EEAA6D76C908@BIGMAIL.eagleinvsys.com>	<EAED38651CF6BF46A8D2BCD9D4EEAA6D76C90A@BIGMAIL.eagleinvsys.com>	<EAED38651CF6BF46A8D2BCD9D4EEAA6D76C90E@BIGMAIL.eagleinvsys.com>	<f1d37388f86a0c8f74ab0bcdce1fab39@dscpl.com.au>
	<EAED38651CF6BF46A8D2BCD9D4EEAA6D76C92E@BIGMAIL.eagleinvsys.com>
	<45217FA0.1070800@jgassociates.ca>
Message-ID: <EAED38651CF6BF46A8D2BCD9D4EEAA6D76C92F@BIGMAIL.eagleinvsys.com>

Hi all!

well, since I'm at full speed at trying to get this running, I'm on several lists besides this one...  I just got this from the NAV list (both interesting...I'm going to try two approaches and let you all know.  First, I'm adding a few more search paths and second I'll try the VirtualHost approach.)
.
.
.

The missing session attribute would occur if NAV's headerparserhandler
was not properly run by mod_python.  The .htaccess file in the webroot
directory configures the nav.web module to act as the
headerparserhandler hook for that directory and all subdirectories.

Question is, is the .htaccess file present in webroot, and are .htaccess
files enabled in your httpd.conf?

--
mvh
Morten Brekkevold
UNINETT


Unfortunately, NAV assumes it will be at the document root of the
server.  If you are unable to set up NAV on a VirtualHost of its own,
then you won't get the web interface up and running as it stands today.

--
mvh
Morten Brekkevold
UNINETT


-----Original Message-----
From: Jim Gallacher [mailto:jpg@jgassociates.ca]
Sent: Mon 10/2/2006 5:07 PM
To: Paul J. Pathiakis
Cc: Graham Dumpleton; mod_python@modpython.org
Subject: Re: [mod_python] Can't get it to interpret
 
Paul J. Pathiakis wrote:
> ** Graham,
> 
> 
> If the PythonHeaderParserHandler wasn't there, I would say that the
> PythonPath directive isn't required as mod_python.publisher doesn't
> require it to be set as described.
> 
> The question is, what is 'nav.web' and what does the handler in it
> do? Most people wouldn't have a need to be defining a handler for
> the PythonHeaderParserHandler phase. What it does will dictate
> whether or not PythonPath needs to be set as indicated or whether
> the comment about what to do derives from a misunderstanding as to
> how mod_python works.

FYI Graham, the authentication is performed in by the 
PythonHeaderParserHandler handler.

> Graham
> 
> ** Well, nav.web is a directory /usr/local/nav/lib/python/.  NAV is a directory in the director.  Web is the directory underneath it.  I believe it's supposed to be the web interface to the NAV software.  There's about 20 files in there.  I'm trying to figure out if there's an easier way to interface.  Personally, I was looking at my httpd.conf file and wanted to just alias the /usr/local/nav/webroot directory.  (Someone else mailed me with the same idea)  
> 
> Now that I added to the path, I have now encountered this (which seems to point that there is a login attempt into a database, tell me, what information can I send the list to further my cause?):
> 
> Mod_python error: "PythonHeaderParserHandler nav.web"
> 
> Traceback (most recent call last):
> 
>   File "/usr/local/lib/python2.4/site-packages/mod_python/apache.py", line 287, in HandlerDispatch
>     log=debug)
> 
>   File "/usr/local/lib/python2.4/site-packages/mod_python/apache.py", line 464, in import_module
>     module = imp.load_module(mname, f, p, d)
> 
>   File "/usr/local/nav/lib/python/./nav/web/__init__.py", line 28, in ?
>     import nav.web.auth
> 
>   File "/usr/local/nav/lib/python/./nav/web/auth.py", line 31, in ?
>     from nav import db
> 
>   File "/usr/local/nav/lib/python/./nav/db/__init__.py", line 103, in ?
>     setDefaultConnection(getConnection('default'));
> 
>   File "/usr/local/nav/lib/python/./nav/db/__init__.py", line 86, in getConnection
>     connection = psycopg.connect('host=%s dbname=%s user=%s password=%s' %
> 
> OperationalError: fe_sendauth: no password supplied
> 
> Thanks,

I'd say you are pretty close to getting this puppy working. My guess is 
that there is some other spot in the NAV where host, dbname, user and 
password are configured. Once you've found that you should be off to the 
races.

Jim



-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20061003/ef8041a4/attachment-0001.html
From nlv11281 at natlab.research.philips.com  Tue Oct  3 08:28:33 2006
From: nlv11281 at natlab.research.philips.com (Mike Looijmans)
Date: Tue Oct  3 08:29:30 2006
Subject: [mod_python] SELECT element values
In-Reply-To: <d482e35b0610030504r53bc919bi246142f8ed523e26@mail.gmail.com>
References: <d482e35b0610030504r53bc919bi246142f8ed523e26@mail.gmail.com>
Message-ID: <45225771.7060100@natlab.research.philips.com>

Within a <SELECT> element, you will get the value attribute of the 
selected <OPTION> element. So if your HTML reads:

<select name="s">
<option value="1">One</option>
<option value="2">Two</option>
</select>

you will get either "1" or "2" as value for field "s", you will not get 
the "One" or "Two" strings because they're just eye-candy for the user.

Check the query string (part after "?" in the URL) to see how this works 
(change the form's method attribute from POST to GET if you don't see a 
query string in the URL).

Mike Looijmans
Philips Natlab / Topic Automation


Cristian Codorean wrote:
> Hello,
>  I have a simple form which I access easily
>    form_data = util.FieldStorage(req)
>    for field in form_data.list:
>        text = "%s = %s\n" % (field.name,field.value)
>        req.write(text)
> 
> but in the case of html select elements I only get the index of the 
> selected
> element as the field value.

From pfunix at gmail.com  Tue Oct  3 08:30:32 2006
From: pfunix at gmail.com (edgar mortiz)
Date: Tue Oct  3 08:32:00 2006
Subject: [mod_python] Input on mod_python
Message-ID: <e02ea4ef0610030530q6fbfb85cy6ebbd303ee6f9adb@mail.gmail.com>

hi guys,

   wanted to ask anyone is it possible to build a forms using 100% of
mod_python, and not the usual part html part python script to do the
job? any suggestions? like python cgi maybe? does it work through
mod_python as well?

python newbie :)

-Ed
From list at joreybump.com  Tue Oct  3 09:40:23 2006
From: list at joreybump.com (Jorey Bump)
Date: Tue Oct  3 09:40:32 2006
Subject: [mod_python] Input on mod_python
In-Reply-To: <e02ea4ef0610030530q6fbfb85cy6ebbd303ee6f9adb@mail.gmail.com>
References: <e02ea4ef0610030530q6fbfb85cy6ebbd303ee6f9adb@mail.gmail.com>
Message-ID: <45226847.4030001@joreybump.com>

edgar mortiz wrote:
> hi guys,
> 
>   wanted to ask anyone is it possible to build a forms using 100% of
> mod_python, and not the usual part html part python script to do the
> job? any suggestions? like python cgi maybe? does it work through
> mod_python as well?

Any web application language will allow you to generate the form HTML 
and process the submitted form in the same script by using it as the 
form's action. A common approach is to act on submitted form variables 
or present an empty form if they are not there.

In pseudo code:

if req.form.has_key('foo'):
     process_form
else:
     show_empty_form

mod_python does not include any tools to build forms, which are merely 
strings of HTML. You can generate your own HTML, or find a python 
library that offers this functionality.
From pfunix at gmail.com  Tue Oct  3 10:47:06 2006
From: pfunix at gmail.com (edgar mortiz)
Date: Tue Oct  3 10:47:10 2006
Subject: [mod_python] Input on mod_python
In-Reply-To: <45226847.4030001@joreybump.com>
References: <e02ea4ef0610030530q6fbfb85cy6ebbd303ee6f9adb@mail.gmail.com>
	<45226847.4030001@joreybump.com>
Message-ID: <e02ea4ef0610030747p6049ea8ev9f8018732e3a218c@mail.gmail.com>

with out exageration... thanks for the awesome explanation! :)

-eD

On 10/3/06, Jorey Bump <list@joreybump.com> wrote:
> edgar mortiz wrote:
> > hi guys,
> >
> >   wanted to ask anyone is it possible to build a forms using 100% of
> > mod_python, and not the usual part html part python script to do the
> > job? any suggestions? like python cgi maybe? does it work through
> > mod_python as well?
>
> Any web application language will allow you to generate the form HTML
> and process the submitted form in the same script by using it as the
> form's action. A common approach is to act on submitted form variables
> or present an empty form if they are not there.
>
> In pseudo code:
>
> if req.form.has_key('foo'):
>      process_form
> else:
>      show_empty_form
>
> mod_python does not include any tools to build forms, which are merely
> strings of HTML. You can generate your own HTML, or find a python
> library that offers this functionality.
>
From ccbean at gmail.com  Tue Oct  3 13:02:08 2006
From: ccbean at gmail.com (Colin Bean)
Date: Tue Oct  3 13:02:13 2006
Subject: [mod_python] fedora vs ubuntu
In-Reply-To: <ffa39deb0610030110raf5e1d9j9d11a38e87cd03a2@mail.gmail.com>
References: <ffa39deb0609291234k78417427p34c075961bf27868@mail.gmail.com>
	<29a6ca010609291356x62d8c54fpc71f047572ddd64d@mail.gmail.com>
	<ffa39deb0610030110raf5e1d9j9d11a38e87cd03a2@mail.gmail.com>
Message-ID: <29a6ca010610031002pf723fc8q6026c702d2d9649d@mail.gmail.com>

Hi Marinus,

You're talking about /etc/httpd/conf.d, correct?
As far as I know you can't put the vhost and directory stuff into the
conf.d directory (it's only for module configuration).  I'd factor out
the module load stuff and put that in a file called python.conf in the
conf.d directory (if there's nothing for mod_python there already).
As for the rest of it, either paste it into /etc/httpd/conf/httpd.conf
(sounds like you might need to with vhosts?) or use a .htaccess file.

-Colin

On 10/3/06, marinus van aswegen <mvanaswegen@gmail.com> wrote:
> Hi Guys
>
> I'm trying to reduce the my whole mod_python config (module load, vhost,
> directory) to to a file I can drop in the feroda conf.d directory. I've had
> limited success thus far, has anyone tried this?
>
> Marinus
>
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>
>
>
From brunson at brunson.com  Tue Oct  3 14:51:54 2006
From: brunson at brunson.com (Eric Brunson)
Date: Tue Oct  3 14:51:48 2006
Subject: [mod_python] fedora vs ubuntu
In-Reply-To: <29a6ca010610031002pf723fc8q6026c702d2d9649d@mail.gmail.com>
References: <ffa39deb0609291234k78417427p34c075961bf27868@mail.gmail.com>	<29a6ca010609291356x62d8c54fpc71f047572ddd64d@mail.gmail.com>	<ffa39deb0610030110raf5e1d9j9d11a38e87cd03a2@mail.gmail.com>
	<29a6ca010610031002pf723fc8q6026c702d2d9649d@mail.gmail.com>
Message-ID: <4522B14A.9060109@brunson.com>

Colin Bean wrote:
> Hi Marinus,
>
> You're talking about /etc/httpd/conf.d, correct?
> As far as I know you can't put the vhost and directory stuff into the
> conf.d directory (it's only for module configuration).  

I don't believe that's correct.  I have all my virtual host 
configurations in a directory, one for each customer.  There's nothing 
special about a file in conf.d, it simply gets included via an Include 
directive.

> I'd factor out
> the module load stuff and put that in a file called python.conf in the
> conf.d directory (if there's nothing for mod_python there already).
> As for the rest of it, either paste it into /etc/httpd/conf/httpd.conf
> (sounds like you might need to with vhosts?) or use a .htaccess file.
>
> -Colin
>
> On 10/3/06, marinus van aswegen <mvanaswegen@gmail.com> wrote:
>> Hi Guys
>>
>> I'm trying to reduce the my whole mod_python config (module load, vhost,
>> directory) to to a file I can drop in the feroda conf.d directory. 
>> I've had
>> limited success thus far, has anyone tried this?
>>
>> Marinus

From ccbean at gmail.com  Tue Oct  3 15:40:04 2006
From: ccbean at gmail.com (Colin Bean)
Date: Tue Oct  3 15:40:10 2006
Subject: [mod_python] fedora vs ubuntu
In-Reply-To: <4522B14A.9060109@brunson.com>
References: <ffa39deb0609291234k78417427p34c075961bf27868@mail.gmail.com>
	<29a6ca010609291356x62d8c54fpc71f047572ddd64d@mail.gmail.com>
	<ffa39deb0610030110raf5e1d9j9d11a38e87cd03a2@mail.gmail.com>
	<29a6ca010610031002pf723fc8q6026c702d2d9649d@mail.gmail.com>
	<4522B14A.9060109@brunson.com>
Message-ID: <29a6ca010610031240q1b97cb5awdd9e78a2ee61293f@mail.gmail.com>

Thanks for the correction, Eric; I've never actually done that and
assumed incorrectly.  Shame on me for recommending something that I
haven't tried!

Marinus, what I should have asked originally was how apache was
failing with your config files (and what's in the error log).  What
does your "limited success" mean?

-Colin

On 10/3/06, Eric Brunson <brunson@brunson.com> wrote:
> Colin Bean wrote:
> > Hi Marinus,
> >
> > You're talking about /etc/httpd/conf.d, correct?
> > As far as I know you can't put the vhost and directory stuff into the
> > conf.d directory (it's only for module configuration).
>
> I don't believe that's correct.  I have all my virtual host
> configurations in a directory, one for each customer.  There's nothing
> special about a file in conf.d, it simply gets included via an Include
> directive.
>
> > I'd factor out
> > the module load stuff and put that in a file called python.conf in the
> > conf.d directory (if there's nothing for mod_python there already).
> > As for the rest of it, either paste it into /etc/httpd/conf/httpd.conf
> > (sounds like you might need to with vhosts?) or use a .htaccess file.
> >
> > -Colin
> >
> > On 10/3/06, marinus van aswegen <mvanaswegen@gmail.com> wrote:
> >> Hi Guys
> >>
> >> I'm trying to reduce the my whole mod_python config (module load, vhost,
> >> directory) to to a file I can drop in the feroda conf.d directory.
> >> I've had
> >> limited success thus far, has anyone tried this?
> >>
> >> Marinus
>
>
From brunson at brunson.com  Tue Oct  3 15:57:25 2006
From: brunson at brunson.com (Eric Brunson)
Date: Tue Oct  3 15:57:14 2006
Subject: [mod_python] fedora vs ubuntu
In-Reply-To: <29a6ca010610031240q1b97cb5awdd9e78a2ee61293f@mail.gmail.com>
References: <ffa39deb0609291234k78417427p34c075961bf27868@mail.gmail.com>	
	<29a6ca010609291356x62d8c54fpc71f047572ddd64d@mail.gmail.com>	
	<ffa39deb0610030110raf5e1d9j9d11a38e87cd03a2@mail.gmail.com>	
	<29a6ca010610031002pf723fc8q6026c702d2d9649d@mail.gmail.com>	
	<4522B14A.9060109@brunson.com>
	<29a6ca010610031240q1b97cb5awdd9e78a2ee61293f@mail.gmail.com>
Message-ID: <4522C0A5.5030201@brunson.com>

Colin Bean wrote:
> Thanks for the correction, Eric; I've never actually done that and
> assumed incorrectly.  Shame on me for recommending something that I
> haven't tried!

No worries, we're all here to learn.  :-)

>
> Marinus, what I should have asked originally was how apache was
> failing with your config files (and what's in the error log).  What
> does your "limited success" mean?
>
> -Colin

From rl at ronaldlevine.com  Wed Oct  4 00:37:09 2006
From: rl at ronaldlevine.com (Ronald Levine)
Date: Wed Oct  4 00:38:18 2006
Subject: [mod_python] Running subprocesses
Message-ID: <5ee6i2dbcga6js9f6i7hurqpqqd4k8vcmt@4ax.com>


I want my Python script, running under mod_python/publisher, to be
able to invoke disk-resident C programs using os.popen, etc. , and
receive their stdout, etc.  It does not seem to be working for me. Are
there some fundamental restrictions that preclude my plan?

Thanks

Ronald

From nlv11281 at natlab.research.philips.com  Wed Oct  4 01:25:23 2006
From: nlv11281 at natlab.research.philips.com (Mike Looijmans)
Date: Wed Oct  4 01:25:32 2006
Subject: [mod_python] Running subprocesses
In-Reply-To: <5ee6i2dbcga6js9f6i7hurqpqqd4k8vcmt@4ax.com>
References: <5ee6i2dbcga6js9f6i7hurqpqqd4k8vcmt@4ax.com>
Message-ID: <452345C3.4010301@natlab.research.philips.com>

There are no restrictions, you can do whatever you like from within 
mod_python.
Just explain the problem and provide some code snippets so we may help you.

Mike Looijmans
Philips Natlab / Topic Automation


Ronald Levine wrote:
> I want my Python script, running under mod_python/publisher, to be
> able to invoke disk-resident C programs using os.popen, etc. , and
> receive their stdout, etc.  It does not seem to be working for me. Are
> there some fundamental restrictions that preclude my plan?
> 
> Thanks
> 
> Ronald
> 
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
> 

From list at joreybump.com  Wed Oct  4 08:58:44 2006
From: list at joreybump.com (Jorey Bump)
Date: Wed Oct  4 08:58:55 2006
Subject: [mod_python] Running subprocesses
In-Reply-To: <5ee6i2dbcga6js9f6i7hurqpqqd4k8vcmt@4ax.com>
References: <5ee6i2dbcga6js9f6i7hurqpqqd4k8vcmt@4ax.com>
Message-ID: <4523B004.40603@joreybump.com>

Ronald Levine wrote:
> I want my Python script, running under mod_python/publisher, to be
> able to invoke disk-resident C programs using os.popen, etc. , and
> receive their stdout, etc.  It does not seem to be working for me. Are
> there some fundamental restrictions that preclude my plan?

Here's what I do when I need to read stdout & stderr combined:

import os

def index():
     # os.popen4 combines stdout & stderr for reading
     w, r = os.popen4('du -sh /tmp')
     response = r.readlines()
     r.close()
     w.close()
     return ''.join(response)


If you don't want to include stderr, use os.popen2. If you want it in a 
separate object, use os.popen3 (w, r, e = os.popen3('command')).
From mvanaswegen at gmail.com  Wed Oct  4 11:11:43 2006
From: mvanaswegen at gmail.com (marinus van aswegen)
Date: Wed Oct  4 11:11:48 2006
Subject: [mod_python] fedora vs ubuntu
In-Reply-To: <4522C0A5.5030201@brunson.com>
References: <ffa39deb0609291234k78417427p34c075961bf27868@mail.gmail.com>
	<29a6ca010609291356x62d8c54fpc71f047572ddd64d@mail.gmail.com>
	<ffa39deb0610030110raf5e1d9j9d11a38e87cd03a2@mail.gmail.com>
	<29a6ca010610031002pf723fc8q6026c702d2d9649d@mail.gmail.com>
	<4522B14A.9060109@brunson.com>
	<29a6ca010610031240q1b97cb5awdd9e78a2ee61293f@mail.gmail.com>
	<4522C0A5.5030201@brunson.com>
Message-ID: <ffa39deb0610040811g6d99042p642c548bf742c0c@mail.gmail.com>

Hi All

Let me pull this thread together. I had a working Apache2/mod_python setup
on Ubuntu.
Mod_python was setup so that I could call my python ap url/app/func
all worked fine until i moved my app to fedora. i just got the app
working again but apache wont serve any other files like images now.
will hit the faq when i get home later.


<SNIP>


LoadModule python_module modules/mod_python.so

NameVirtualHost *:80


<VirtualHost *:80>
    DocumentRoot "/opt/www"
    ServerName www.test.co.za
    DirectoryIndex index.html

</VirtualHost>


# Virtual host Virtual Host 0
<VirtualHost *:443>
     DocumentRoot "/opt/www"
     ServerName www.test.co.za

    DirectoryIndex index.html

     SSLEngine on
     SSLCertificateFile /keys/server.crt
     SSLCertificateKeyFile /keys/server.key

</VirtualHost>



<VirtualHost *:80>
    DocumentRoot "/opt/www.telic.co.za"
    ServerName www.telic.co.za
</VirtualHost>


<Directory "/">
        Options FollowSymLinks
        AllowOverride None
</Directory>

<Directory "/opt/www">
     # extend the pathon path so our python modules can be loaded
    PythonPath "['/opt/www'] + sys.path"

    # set the handler to mod_python + publisher so we can call url/python
    SetHandler mod_python

    PythonHandler mod_python.publisher

    PythonDebug On

    # do not permit access to compiled python code
        <Files *.pyc>
            deny from all
        </Files>


</Directory>






On 10/3/06, Eric Brunson <brunson@brunson.com> wrote:
>
> Colin Bean wrote:
> > Thanks for the correction, Eric; I've never actually done that and
> > assumed incorrectly.  Shame on me for recommending something that I
> > haven't tried!
>
> No worries, we're all here to learn.  :-)
>
> >
> > Marinus, what I should have asked originally was how apache was
> > failing with your config files (and what's in the error log).  What
> > does your "limited success" mean?
> >
> > -Colin
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>
From mvanaswegen at gmail.com  Wed Oct  4 15:46:16 2006
From: mvanaswegen at gmail.com (marinus van aswegen)
Date: Wed Oct  4 15:46:21 2006
Subject: [mod_python] fedora vs ubuntu
In-Reply-To: <4522C0A5.5030201@brunson.com>
References: <ffa39deb0609291234k78417427p34c075961bf27868@mail.gmail.com>
	<29a6ca010609291356x62d8c54fpc71f047572ddd64d@mail.gmail.com>
	<ffa39deb0610030110raf5e1d9j9d11a38e87cd03a2@mail.gmail.com>
	<29a6ca010610031002pf723fc8q6026c702d2d9649d@mail.gmail.com>
	<4522B14A.9060109@brunson.com>
	<29a6ca010610031240q1b97cb5awdd9e78a2ee61293f@mail.gmail.com>
	<4522C0A5.5030201@brunson.com>
Message-ID: <ffa39deb0610041246u7f335b4ftd43ed5cdce68ad4c@mail.gmail.com>

Hi All

Let me pull this thread together. I had a working Apache2/mod_python setup
on Ubuntu.
Mod_python was setup so that I could call my python ap url/app/func
all worked fine until i moved my app to fedora. i just got the app
working again but apache wont serve any other files like images now.
will hit the faq when i get home later.


<SNIP>


LoadModule python_module modules/mod_python.so

NameVirtualHost *:80


<VirtualHost *:80>
    DocumentRoot "/opt/www"
    ServerName www.test.co.za
    DirectoryIndex index.html

</VirtualHost>


# Virtual host Virtual Host 0
<VirtualHost *:443>
     DocumentRoot "/opt/www"
     ServerName www.test.co.za

    DirectoryIndex index.html

     SSLEngine on
     SSLCertificateFile /keys/server.crt
     SSLCertificateKeyFile /keys/server.key

</VirtualHost>



<VirtualHost *:80>
    DocumentRoot "/opt/www.telic.co.za"
    ServerName www.telic.co.za
</VirtualHost>


<Directory "/">
        Options FollowSymLinks
        AllowOverride None
</Directory>

<Directory "/opt/www">
     # extend the pathon path so our python modules can be loaded
    PythonPath "['/opt/www'] + sys.path"

    # set the handler to mod_python + publisher so we can call url/python
    SetHandler mod_python

    PythonHandler mod_python.publisher

    PythonDebug On

    # do not permit access to compiled python code
        <Files *.pyc>
            deny from all
        </Files>


</Directory>






On 10/3/06, Eric Brunson <brunson@brunson.com> wrote:
>
> Colin Bean wrote:
> > Thanks for the correction, Eric; I've never actually done that and
> > assumed incorrectly.  Shame on me for recommending something that I
> > haven't tried!
>
> No worries, we're all here to learn.  :-)
>
> >
> > Marinus, what I should have asked originally was how apache was
> > failing with your config files (and what's in the error log).  What
> > does your "limited success" mean?
> >
> > -Colin
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>
From pfunix at gmail.com  Wed Oct  4 17:50:54 2006
From: pfunix at gmail.com (edgar mortiz)
Date: Wed Oct  4 17:51:05 2006
Subject: [mod_python] Python and Mysql
Message-ID: <e02ea4ef0610041450w412597dfr825dc65425b2114d@mail.gmail.com>

hello all!

   can anyone give solutions on how python code can talk to mysql?
I've tried mysql-python but with no luck, i was wondering that any of
you would be able to give some recommendations on alternatives.


many thanks!
-Ed
From grahamd at dscpl.com.au  Wed Oct  4 18:09:11 2006
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Wed Oct  4 18:09:14 2006
Subject: [mod_python] fedora vs ubuntu
Message-ID: <1159999751.1370@dscpl.user.openhosting.com>

marinus van aswegen wrote ..
> Hi All
> 
> Let me pull this thread together. I had a working Apache2/mod_python setup
> on Ubuntu.
> Mod_python was setup so that I could call my python ap url/app/func
> all worked fine until i moved my app to fedora. i just got the app
> working again but apache wont serve any other files like images now.
> will hit the faq when i get home later.

And it is because you are using the SetHandler directive. By using that
directive, all requests will be intercepted and sent through to mod_python.

Read:

  http://www.dscpl.com.au/wiki/ModPython/Articles/SetHandlerVersusAddHandler

It explains the difference between SetHandler and AddHandler.

You may just want to use:

  AddHandler mod_python .py

instead of SetHandler, but generally this means you need to use .py in
your URLs for Python stuff.

Graham

> <SNIP>
> 
> 
> LoadModule python_module modules/mod_python.so
> 
> NameVirtualHost *:80
> 
> 
> <VirtualHost *:80>
>     DocumentRoot "/opt/www"
>     ServerName www.test.co.za
>     DirectoryIndex index.html
> 
> </VirtualHost>
> 
> 
> # Virtual host Virtual Host 0
> <VirtualHost *:443>
>      DocumentRoot "/opt/www"
>      ServerName www.test.co.za
> 
>     DirectoryIndex index.html
> 
>      SSLEngine on
>      SSLCertificateFile /keys/server.crt
>      SSLCertificateKeyFile /keys/server.key
> 
> </VirtualHost>
> 
> 
> 
> <VirtualHost *:80>
>     DocumentRoot "/opt/www.telic.co.za"
>     ServerName www.telic.co.za
> </VirtualHost>
> 
> 
> <Directory "/">
>         Options FollowSymLinks
>         AllowOverride None
> </Directory>
> 
> <Directory "/opt/www">
>      # extend the pathon path so our python modules can be loaded
>     PythonPath "['/opt/www'] + sys.path"
> 
>     # set the handler to mod_python + publisher so we can call url/python
>     SetHandler mod_python
> 
>     PythonHandler mod_python.publisher
> 
>     PythonDebug On
> 
>     # do not permit access to compiled python code
>         <Files *.pyc>
>             deny from all
>         </Files>
> 
> 
> </Directory>
> 
> 
> 
> 
> 
> 
> On 10/3/06, Eric Brunson <brunson@brunson.com> wrote:
> >
> > Colin Bean wrote:
> > > Thanks for the correction, Eric; I've never actually done that and
> > > assumed incorrectly.  Shame on me for recommending something that I
> > > haven't tried!
> >
> > No worries, we're all here to learn.  :-)
> >
> > >
> > > Marinus, what I should have asked originally was how apache was
> > > failing with your config files (and what's in the error log).  What
> > > does your "limited success" mean?
> > >
> > > -Colin
> >
> > _______________________________________________
> > Mod_python mailing list
> > Mod_python@modpython.org
> > http://mailman.modpython.org/mailman/listinfo/mod_python
> >
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
From sdavis2 at mail.nih.gov  Thu Oct  5 07:20:40 2006
From: sdavis2 at mail.nih.gov (Sean Davis)
Date: Wed Oct  4 19:20:39 2006
Subject: [mod_python] Python and Mysql
In-Reply-To: <e02ea4ef0610041450w412597dfr825dc65425b2114d@mail.gmail.com>
References: <e02ea4ef0610041450w412597dfr825dc65425b2114d@mail.gmail.com>
Message-ID: <4524EA88.7050406@mail.nih.gov>

edgar mortiz wrote:
> hello all!
>
>   can anyone give solutions on how python code can talk to mysql?
> I've tried mysql-python but with no luck, i was wondering that any of
> you would be able to give some recommendations on alternatives.
Edgar,

This list is for mod_python, not python.  However, a google search for 
"mysql python tutorials" will turn up many hits.

Sean
From mvanaswegen at gmail.com  Thu Oct  5 02:55:10 2006
From: mvanaswegen at gmail.com (marinus van aswegen)
Date: Thu Oct  5 02:55:16 2006
Subject: [mod_python] fedora vs ubuntu
In-Reply-To: <1159999751.1370@dscpl.user.openhosting.com>
References: <1159999751.1370@dscpl.user.openhosting.com>
Message-ID: <ffa39deb0610042355m5986ef79o328b141197d1fd4b@mail.gmail.com>

Hi Graham

Thanks for the comments, I'm going to try and use the sethandler because I
don't want the .py extensions in the URL. I'll use the default handler to
serve static content i.e. jpegs.

<Files *.jpg>
SetHandler default-handler
</Files>

I think there should be a big fat link on the mod_python front page to your
articles section.

Regards

Marinus

PS the mod_python FAQ was a bit confusing on this topic
http://www.modpython.org/FAQ/faqw.py?req=all#2.17


On 10/5/06, Graham Dumpleton <grahamd@dscpl.com.au> wrote:
>
> marinus van aswegen wrote ..
> > Hi All
> >
> > Let me pull this thread together. I had a working Apache2/mod_python
> setup
> > on Ubuntu.
> > Mod_python was setup so that I could call my python ap url/app/func
> > all worked fine until i moved my app to fedora. i just got the app
> > working again but apache wont serve any other files like images now.
> > will hit the faq when i get home later.
>
> And it is because you are using the SetHandler directive. By using that
> directive, all requests will be intercepted and sent through to
> mod_python.
>
> Read:
>
>
> http://www.dscpl.com.au/wiki/ModPython/Articles/SetHandlerVersusAddHandler
>
> It explains the difference between SetHandler and AddHandler.
>
> You may just want to use:
>
>   AddHandler mod_python .py
>
> instead of SetHandler, but generally this means you need to use .py in
> your URLs for Python stuff.
>
> Graham
>
> > <SNIP>
> >
> >
> > LoadModule python_module modules/mod_python.so
> >
> > NameVirtualHost *:80
> >
> >
> > <VirtualHost *:80>
> >     DocumentRoot "/opt/www"
> >     ServerName www.test.co.za
> >     DirectoryIndex index.html
> >
> > </VirtualHost>
> >
> >
> > # Virtual host Virtual Host 0
> > <VirtualHost *:443>
> >      DocumentRoot "/opt/www"
> >      ServerName www.test.co.za
> >
> >     DirectoryIndex index.html
> >
> >      SSLEngine on
> >      SSLCertificateFile /keys/server.crt
> >      SSLCertificateKeyFile /keys/server.key
> >
> > </VirtualHost>
> >
> >
> >
> > <VirtualHost *:80>
> >     DocumentRoot "/opt/www.telic.co.za"
> >     ServerName www.telic.co.za
> > </VirtualHost>
> >
> >
> > <Directory "/">
> >         Options FollowSymLinks
> >         AllowOverride None
> > </Directory>
> >
> > <Directory "/opt/www">
> >      # extend the pathon path so our python modules can be loaded
> >     PythonPath "['/opt/www'] + sys.path"
> >
> >     # set the handler to mod_python + publisher so we can call
> url/python
> >     SetHandler mod_python
> >
> >     PythonHandler mod_python.publisher
> >
> >     PythonDebug On
> >
> >     # do not permit access to compiled python code
> >         <Files *.pyc>
> >             deny from all
> >         </Files>
> >
> >
> > </Directory>
> >
> >
> >
> >
> >
> >
> > On 10/3/06, Eric Brunson <brunson@brunson.com> wrote:
> > >
> > > Colin Bean wrote:
> > > > Thanks for the correction, Eric; I've never actually done that and
> > > > assumed incorrectly.  Shame on me for recommending something that I
> > > > haven't tried!
> > >
> > > No worries, we're all here to learn.  :-)
> > >
> > > >
> > > > Marinus, what I should have asked originally was how apache was
> > > > failing with your config files (and what's in the error log).  What
> > > > does your "limited success" mean?
> > > >
> > > > -Colin
> > >
> > > _______________________________________________
> > > Mod_python mailing list
> > > Mod_python@modpython.org
> > > http://mailman.modpython.org/mailman/listinfo/mod_python
> > >
> > _______________________________________________
> > Mod_python mailing list
> > Mod_python@modpython.org
> > http://mailman.modpython.org/mailman/listinfo/mod_python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20061005/aec9abb7/attachment.html
From durumdara at gmail.com  Thu Oct  5 05:25:07 2006
From: durumdara at gmail.com (durumdara)
Date: Thu Oct  5 05:25:15 2006
Subject: [mod_python] Validating input - Form Handler component
Message-ID: <4524CF73.9000109@gmail.com>

Hi !

Do you knows about a Form handler component (module, class, unit, 
package, etc.) that can uniformize the form handling on the web ?

The html form handling forces me to I repeat some of the codes in many 
modules.

Example:
1. Init
2. Get inputs
3. Validating inputs: check field names, data types, I need to open 
queries to see that actual data is valid (and existing), require all the 
fields I need to make the next step, convert data from text to any type, 
protect fields from SQL injection, etc.
3. Make operation (insert, update, delete, or select)
4. Show the results, build the result table and/or the form again.

These steps are repeating modules by modules...

Do you heard about something like this, or I need to write this component ?

Thanks for your help:
dd



From durumdara at gmail.com  Thu Oct  5 06:00:47 2006
From: durumdara at gmail.com (durumdara)
Date: Thu Oct  5 06:00:56 2006
Subject: [mod_python] Pager component, and Count of Elements...
Message-ID: <4524D7CF.30308@gmail.com>

Hi !

I wrote some mails about this theme, but I forgot to ask an important 
question:
How to I get the number of elements in the query... ?

These valued needed for the Pager:

   1. "Split by" - the max. record number you can see in the page.
   2. "RecordCount" - how many records you have (total) - to calc number
      of pages.
   3. "ThumbCount" - how many page thumb (link) you see in one page.
   4. "Actual Page Number" - where are we in the page collection.

Simply I get every of these values except RecordCount. To get it, I must 
count the records in the full query...
I have many elements (1000, 10000 or 100000), so I don't want to fetch 
them all.
Because this I need to exec the query in twice, because I need to get 
the count of elements, and I need some elements from it.

1.) select count(*) from ...
2.) select * from ...

Some of the databases supports "repeatable read" transaction isolation, 
and they are protect the view to I get same thing in different times.
But if database not supports this, I can get different values with these 
queries - example: new record inserted after COUNT(*), so number of the 
elements is greater than in the first query...

How do you handle this problem in MySQL, or other database that cannot 
isolate the transactions (example) ?

Thanks for your help:
dd
From sdavis2 at mail.nih.gov  Thu Oct  5 06:38:59 2006
From: sdavis2 at mail.nih.gov (Sean Davis)
Date: Thu Oct  5 06:39:02 2006
Subject: [mod_python] Pager component, and Count of Elements...
In-Reply-To: <4524D7CF.30308@gmail.com>
References: <4524D7CF.30308@gmail.com>
Message-ID: <200610050638.59697.sdavis2@mail.nih.gov>

On Thursday 05 October 2006 06:00, durumdara wrote:
> Hi !
>
> I wrote some mails about this theme, but I forgot to ask an important
> question:
> How to I get the number of elements in the query... ?
>
> These valued needed for the Pager:
>
>    1. "Split by" - the max. record number you can see in the page.
>    2. "RecordCount" - how many records you have (total) - to calc number
>       of pages.
>    3. "ThumbCount" - how many page thumb (link) you see in one page.
>    4. "Actual Page Number" - where are we in the page collection.
>
> Simply I get every of these values except RecordCount. To get it, I must
> count the records in the full query...
> I have many elements (1000, 10000 or 100000), so I don't want to fetch
> them all.
> Because this I need to exec the query in twice, because I need to get
> the count of elements, and I need some elements from it.
>
> 1.) select count(*) from ...
> 2.) select * from ...
>
> Some of the databases supports "repeatable read" transaction isolation,
> and they are protect the view to I get same thing in different times.
> But if database not supports this, I can get different values with these
> queries - example: new record inserted after COUNT(*), so number of the
> elements is greater than in the first query...
>
> How do you handle this problem in MySQL, or other database that cannot
> isolate the transactions (example) ?

I don't think that you can without locking the table, which you probably don't 
want to do for performance reasons.  Making you pager robust to slight 
variations in the total number of rows will be important in this case. 

Sean
From nlv11281 at natlab.research.philips.com  Thu Oct  5 07:11:02 2006
From: nlv11281 at natlab.research.philips.com (Mike Looijmans)
Date: Thu Oct  5 07:11:24 2006
Subject: [mod_python] Pager component, and Count of Elements...
In-Reply-To: <4524D7CF.30308@gmail.com>
References: <4524D7CF.30308@gmail.com>
Message-ID: <4524E846.3070207@natlab.research.philips.com>

Even with transactions, you have to keep the connection open and assure 
that the same connection is being used for all paging queries for a 
user. Keeping transactions open while waiting for user input is a very, 
very, very bad idea.

A simple solution that will work on all databases is to fetch data into 
a temporary table. If you can assure that you use the same connection 
within a session, you can use TEMP tables (add "INTO TEMP..." to your 
SELECT query), otherwise you'll have to do something like having a table 
with a primary key of (SessionID, RowNr). By numbering the rows, you can 
always fetch the range you need (WHERE RowNr BETWEEN ? AND ?) for the 
pager. A query like "SELECT COUNT(*) FROM tmp WHERE SessionID=?" will 
cost nothing (the DB need not access the table) and in addition, you'll 
always get a correct result.


Mike Looijmans
Philips Natlab / Topic Automation


durumdara wrote:
> Hi !
> 
> I wrote some mails about this theme, but I forgot to ask an important 
> question:
> How to I get the number of elements in the query... ?
> 
> These valued needed for the Pager:
> 
>   1. "Split by" - the max. record number you can see in the page.
>   2. "RecordCount" - how many records you have (total) - to calc number
>      of pages.
>   3. "ThumbCount" - how many page thumb (link) you see in one page.
>   4. "Actual Page Number" - where are we in the page collection.
> 
> Simply I get every of these values except RecordCount. To get it, I must 
> count the records in the full query...
> I have many elements (1000, 10000 or 100000), so I don't want to fetch 
> them all.
> Because this I need to exec the query in twice, because I need to get 
> the count of elements, and I need some elements from it.
> 
> 1.) select count(*) from ...
> 2.) select * from ...
> 
> Some of the databases supports "repeatable read" transaction isolation, 
> and they are protect the view to I get same thing in different times.
> But if database not supports this, I can get different values with these 
> queries - example: new record inserted after COUNT(*), so number of the 
> elements is greater than in the first query...
> 
> How do you handle this problem in MySQL, or other database that cannot 
> isolate the transactions (example) ?

From jcigar at ulb.ac.be  Thu Oct  5 07:38:12 2006
From: jcigar at ulb.ac.be (Julien Cigar)
Date: Thu Oct  5 07:28:14 2006
Subject: [mod_python] Validating input - Form Handler component
In-Reply-To: <4524CF73.9000109@gmail.com>
References: <4524CF73.9000109@gmail.com>
Message-ID: <4524EEA4.9040806@ulb.ac.be>

Hello,

What I ususally do is a Model object with properties, something like 
this: http://rafb.net/paste/results/LwMH9m76.html
Then in my Controller I have a method to parse the form, something like :

def parse_form(self, themodelobject) :
    errors = []
    for col in themodelobject.columns:
       try:
          setattr(themodelobject, col, self.params.get[col])
       except Exception, e:
          errors.append(str(e))
    return errors

def add(self):
    errors = parse_form(myModel())
    if not errors:
        ...
    else:
        ...
      

(it's a basic and limited example, but it show you the principle)

Julien

durumdara wrote:
> Hi !
>
> Do you knows about a Form handler component (module, class, unit, 
> package, etc.) that can uniformize the form handling on the web ?
>
> The html form handling forces me to I repeat some of the codes in many 
> modules.
>
> Example:
> 1. Init
> 2. Get inputs
> 3. Validating inputs: check field names, data types, I need to open 
> queries to see that actual data is valid (and existing), require all 
> the fields I need to make the next step, convert data from text to any 
> type, protect fields from SQL injection, etc.
> 3. Make operation (insert, update, delete, or select)
> 4. Show the results, build the result table and/or the form again.
>
> These steps are repeating modules by modules...
>
> Do you heard about something like this, or I need to write this 
> component ?
>
> Thanks for your help:
> dd
>
>
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python


-- 
Julien Cigar
Belgian Biodiversity Platform
http://www.biodiversity.be
Universit? Libre de Bruxelles
Campus de la Plaine CP 257
B?timent NO, Bureau 4 N4 115C (Niveau 4)
Boulevard du Triomphe, entr?e ULB 2
B-1050 Bruxelles
office: jcigar@ulb.ac.be
home: mage@mordor.ath.cx

From dpopowich at comcast.net  Thu Oct  5 11:50:56 2006
From: dpopowich at comcast.net (Daniel J. Popowich)
Date: Thu Oct  5 11:50:56 2006
Subject: [mod_python] Validating input - Form Handler component
In-Reply-To: <4524CF73.9000109@gmail.com>
References: <4524CF73.9000109@gmail.com>
Message-ID: <17701.10720.504966.66667@io.astro.umass.edu>


durumdara writes:
> Do you knows about a Form handler component (module, class, unit, 
> package, etc.) that can uniformize the form handling on the web ?
> 
> The html form handling forces me to I repeat some of the codes in many 
> modules.
> 
> Example:
> 1. Init
> 2. Get inputs
> 3. Validating inputs: check field names, data types, I need to open 
> queries to see that actual data is valid (and existing), require all the 
> fields I need to make the next step, convert data from text to any type, 
> protect fields from SQL injection, etc.
> 3. Make operation (insert, update, delete, or select)
> 4. Show the results, build the result table and/or the form again.

Mod_python Servlets (mpservlets) has a facility to cast any form data
into any python type.  If you don't want the whole mpservlets thing,
you can always grab the code.

Mpservlets homepage:
    http://www.astro.umass.edu/~dpopowich/python/mpservlets/

Live tutorial:
    http://lnx1.blue-fox.com/~dpopowich/mpstutorial/

First of seven pages in tutorial dealing with form data processing:
    http://lnx1.blue-fox.com/~dpopowich/mpstutorial/formdata


Cheers,

Daniel Popowich

From scott_list at mischko.com  Thu Oct  5 16:39:30 2006
From: scott_list at mischko.com (Scott Chapman)
Date: Thu Oct  5 16:39:37 2006
Subject: [mod_python] Validating input - Form Handler component
In-Reply-To: <4524EEA4.9040806@ulb.ac.be>
References: <4524CF73.9000109@gmail.com> <4524EEA4.9040806@ulb.ac.be>
Message-ID: <45256D82.60102@mischko.com>

Here's a more dictionary oriented version of Julien's idea:

class FormDict(dict):
     '''This is a special dict that checks items as they are assigned.
     It would be useful for web form submissions, etc.
     At dict creation, errors are accumulated, if any, and sent back as a 
group.'''
     def __init__(self,**dictparms):
         self.__valid_keys = ('id',)
         errors = []
         for key in dictparms:
             try:
                 self.__setitem__(key, dictparms[key])
             except RuntimeError,e:
                 errors.append(str(e))
         if errors:
             raise RuntimeError(errors)
     def __setitem__(self, key, value):
         if not key in self.__valid_keys:
             raise RuntimeError, "Invalid Key: %s" % key
         if key =='id':
             try:
                 mvalue = int(value)
             except:
                 raise RuntimeError, "Invalid ID: %s" % mvalue
             if mvalue <= 0:
                 raise RuntimeError, "Invalid ID: %s" % mvalue
             super(FormDict, self).__setitem__(key, mvalue)
try:
     md = FormDict(id=1,name='bill',address='123 any street')
except RuntimeError, e:
     error_list = list(e[0])
     for error in error_list:
         print error

Julien Cigar wrote:
> Hello,
> 
> What I ususally do is a Model object with properties, something like 
> this: http://rafb.net/paste/results/LwMH9m76.html
> Then in my Controller I have a method to parse the form, something like :
> 
> def parse_form(self, themodelobject) :
>    errors = []
>    for col in themodelobject.columns:
>       try:
>          setattr(themodelobject, col, self.params.get[col])
>       except Exception, e:
>          errors.append(str(e))
>    return errors
> 
> def add(self):
>    errors = parse_form(myModel())
>    if not errors:
>        ...
>    else:
>        ...
>     
> (it's a basic and limited example, but it show you the principle)
> 
> Julien
> 
> durumdara wrote:
>> Hi !
>>
>> Do you knows about a Form handler component (module, class, unit, 
>> package, etc.) that can uniformize the form handling on the web ?
>>
>> The html form handling forces me to I repeat some of the codes in many 
>> modules.
>>
>> Example:
>> 1. Init
>> 2. Get inputs
>> 3. Validating inputs: check field names, data types, I need to open 
>> queries to see that actual data is valid (and existing), require all 
>> the fields I need to make the next step, convert data from text to any 
>> type, protect fields from SQL injection, etc.
>> 3. Make operation (insert, update, delete, or select)
>> 4. Show the results, build the result table and/or the form again.
>>
>> These steps are repeating modules by modules...
>>
>> Do you heard about something like this, or I need to write this 
>> component ?
>>
>> Thanks for your help:
>> dd
>>
>>
>>
>> _______________________________________________
>> Mod_python mailing list
>> Mod_python@modpython.org
>> http://mailman.modpython.org/mailman/listinfo/mod_python
> 
> 

From fred at adventistcare.org  Thu Oct  5 16:27:41 2006
From: fred at adventistcare.org (Sells, Fred)
Date: Thu Oct  5 16:50:07 2006
Subject: [mod_python] newbie cookie confusion
Message-ID: <1A4BF05172023E468CB6E867923BC90402B6E2C8@accmail2.sunbelt.org>

I've googled but not found this, trying to do cookie example from docs.  The
output is always of type <type 'str'> and is the cookie name.  How do I get
value?



def makecookie(req):
    c = Cookie.MarshalCookie('spam', 'eggs', 'secret007')
    d = Cookie.MarshalCookie('xxxx', 'yyy', 'secret007')
    Cookie.add_cookie(req, c)
    Cookie.add_cookie(req, d)
    return 'cookie made'

def showcookies(req):
    cookies = Cookie.get_cookies(req, Cookie.MarshalCookie,
secret='secret007')
    s = 'There are %s cookies'% len(cookies)
    for c in cookies:
        s += '\n%s %s' % (str(c), type(c))
    return s

---------------------------------------------------------------------------
The information contained in this message may be privileged and / or
confidential and protected from disclosure. If the reader of this message is
not the intended recipient, you are hereby notified that any dissemination,
distribution or copying of this communication is strictly prohibited. If you
have received this communication in error, please notify the sender
immediately by replying to this message and deleting the material from any
computer.
---------------------------------------------------------------------------

From scott_list at mischko.com  Thu Oct  5 16:53:53 2006
From: scott_list at mischko.com (Scott Chapman)
Date: Thu Oct  5 16:54:00 2006
Subject: [mod_python] Validating input - Form Handler component
In-Reply-To: <4524EEA4.9040806@ulb.ac.be>
References: <4524CF73.9000109@gmail.com> <4524EEA4.9040806@ulb.ac.be>
Message-ID: <452570E1.6020703@mischko.com>

Here's a more robust version:

class FormDict(dict):
     '''This is a special dict that checks items as they are assigned.
     It would be useful for web form submissions, etc.
     At dict creation, errors are accumulated, if any, and sent back as a 
group.'''
     def __init__(self,**dictparms):
         # If there are defaults, assign them first:
         # self.__setitem__(key, value)
         # if you need to bypass your own setitem checking:
         # super(FormDict, self).__setitem__(key, mvalue)

         # Set the valid keys here:
         self.__valid_keys = ('id',)

         errors = []
         for key in dictparms:
             try:
                 self.__setitem__(key, dictparms[key])
             except RuntimeError,e:
                 errors.append(str(e))
         if errors:
             raise RuntimeError(errors)

     def __setitem__(self, key, value):
         if not key in self.__valid_keys:
             raise RuntimeError, "Invalid Key: %s" % key
         # Put your own checks here.
         # If you don't create a check for a given valid key, anything will be 
acceptable.
         if key =='id':
             try:
                 mvalue = int(value)
             except:
                 raise RuntimeError, "Invalid ID: %s" % mvalue
             if mvalue <= 0:
                 raise RuntimeError, "Invalid ID: %s" % mvalue
             super(FormDict, self).__setitem__(key, mvalue)
         elif key == 'foo':
             super(FormDict, self).__setitem__(key, mvalue)
         elif key in self.__valid_keys:
             super(FormDict, self).__setitem__(key, mvalue)
         else:
             raise RuntimeError, "Invalid Key"

if __name__ == '__main__':
     try:
         md = FormDict(id=1,name='bill',address='123 any street')
     except RuntimeError, e:
         error_list = list(e[0])
         for error in error_list:
             print error
     md = FormDict(id=1)
From scott_list at mischko.com  Thu Oct  5 17:15:38 2006
From: scott_list at mischko.com (Scott Chapman)
Date: Thu Oct  5 17:15:45 2006
Subject: [mod_python] newbie cookie confusion
In-Reply-To: <1A4BF05172023E468CB6E867923BC90402B6E2C8@accmail2.sunbelt.org>
References: <1A4BF05172023E468CB6E867923BC90402B6E2C8@accmail2.sunbelt.org>
Message-ID: <452575FA.8060700@mischko.com>

Sells, Fred wrote:
> I've googled but not found this, trying to do cookie example from docs.  The
> output is always of type <type 'str'> and is the cookie name.  How do I get
> value?
> 
> 
> 
> def makecookie(req):
>     c = Cookie.MarshalCookie('spam', 'eggs', 'secret007')
>     d = Cookie.MarshalCookie('xxxx', 'yyy', 'secret007')
>     Cookie.add_cookie(req, c)
>     Cookie.add_cookie(req, d)
>     return 'cookie made'
> 
> def showcookies(req):
>     cookies = Cookie.get_cookies(req, Cookie.MarshalCookie,
> secret='secret007')
>     s = 'There are %s cookies'% len(cookies)
>     for c in cookies:
>         s += '\n%s %s' % (str(c), type(c))
>     return s
> 

I haven't been through the docs but I'd suggest that you have a look at 
cookies[c] in case cookies is a dictionary.

Scott
From dan.eloff at gmail.com  Thu Oct  5 23:53:03 2006
From: dan.eloff at gmail.com (Dan Eloff)
Date: Thu Oct  5 23:53:09 2006
Subject: [mod_python] How can you use hotshot with mod_python?
Message-ID: <4817b6fc0610052053l5790b69aqc1f2bf254a8aeb8a@mail.gmail.com>

I've got a handler that's running like a newt on the highway under the
midday sun. I suspect a database query but I don't know which one.
There's easy enough ways to figure that out, but I thought this would
be a great opportunity to figure out how to use hotshot with
mod_python. Except I don't know where to start. Can you do such a
thing?

Thanks,
-Dan
From mvanaswegen at gmail.com  Fri Oct  6 03:01:32 2006
From: mvanaswegen at gmail.com (marinus van aswegen)
Date: Fri Oct  6 03:01:36 2006
Subject: [mod_python] AddHandler / SetHandler (black magic)
Message-ID: <ffa39deb0610060001x684c0d96w425e07989f5aca0b@mail.gmail.com>

Hi All

I think i've just entered the real of apache config black magic. Just a
quick report back.

The to provide the necessary context, I would like to call my app
http://url/app/function
other resources like html files and images are in the same directory. A call
to the url should redirect to app/index

1. I tried using the AddHandler but this forced me to add the .py extension
2. I tried using the SetHandler to force all calls to the directory to
mod_python, this meant that other non python files could not be served.
3. I then tried Grahams suggestion of excluding certain file types and
forcing them to the default handler. This worked  however I ended up with a
situation where the I could not invoke my app or serve the index.html file
if the user requested the directory. For some strange reason the
DirectoryIndex directive was being ignored. I assume this has something to
do with the Publish and sethandler mix. Another bad side effect was that the
user would be able to request the app.py directly and get the code (no no!)
4. Time for some black magic, I used the file directive to black all calls
to pyc and py files (this is not a good security practise, It's much better
to deny and explicitly permit than the other way around) I then set the
handler depending on the content(see below).

I read the config from my ubuntu box where with an AddHandler I was able to
get Apache to behave like I wanted to and I found that I had to directory
blocks one in the Vhost config and one in the main config file, I suspect
there was some strange command interpolation going on there.  There must be
a cleaner way of doing this?

<VirtualHost *:443>
     DocumentRoot "/opt/www"
     ServerName www.test.co.za

     SSLEngine on
     SSLCertificateFile /opt/keys/server.crt
     SSLCertificateKeyFile /opt/keys/server.key
</VirtualHost>

<Directory "/opt/www>

    # extend the pathon path so our python modules can be loaded
    PythonPath "['/modules'] + sys.path"

    # set the handler to mod_python + publisher so we can call url/python
    <Files ~ "^cmd$">
        SetHandler mod_python
    </Files>

    PythonHandler mod_python.publisher
    PythonDebug On

    # only permit access to the following files
    <Files ~ "\.(gif|html|jpg|png)$">
        SetHandler default-handler
    </Files>

</Directory>


On 10/5/06, marinus van aswegen <mvanaswegen@gmail.com> wrote:
>
> Hi Graham
>
> Thanks for the comments, I'm going to try and use the sethandler because I
> don't want the .py extensions in the URL. I'll use the default handler to
> serve static content i.e. jpegs.
>
> <Files *.jpg>
>
> SetHandler default-handler
> </Files>
>
> I think there should be a big fat link on the mod_python front page to
> your articles section.
>
> Regards
>
> Marinus
>
> PS the mod_python FAQ was a bit confusing on this topic
> http://www.modpython.org/FAQ/faqw.py?req=all#2.17
>
>
> On 10/5/06, Graham Dumpleton <grahamd@dscpl.com.au> wrote:
> >
> > marinus van aswegen wrote ..
> > > Hi All
> > >
> > > Let me pull this thread together. I had a working Apache2/mod_python
> > setup
> > > on Ubuntu.
> > > Mod_python was setup so that I could call my python ap url/app/func
> > > all worked fine until i moved my app to fedora. i just got the app
> > > working again but apache wont serve any other files like images now.
> > > will hit the faq when i get home later.
> >
> > And it is because you are using the SetHandler directive. By using that
> > directive, all requests will be intercepted and sent through to
> > mod_python.
> >
> > Read:
> >
> >   http://www.dscpl.com.au/wiki/ModPython/Articles/SetHandlerVersusAddHandler
> >
> >
> > It explains the difference between SetHandler and AddHandler.
> >
> > You may just want to use:
> >
> >   AddHandler mod_python .py
> >
> > instead of SetHandler, but generally this means you need to use .py in
> > your URLs for Python stuff.
> >
> > Graham
> >
> > > <SNIP>
> > >
> > >
> > > LoadModule python_module modules/mod_python.so
> > >
> > > NameVirtualHost *:80
> > >
> > >
> > > <VirtualHost *:80>
> > >     DocumentRoot "/opt/www"
> > >     ServerName www.test.co.za
> > >     DirectoryIndex index.html
> > >
> > > </VirtualHost>
> > >
> > >
> > > # Virtual host Virtual Host 0
> > > <VirtualHost *:443>
> > >      DocumentRoot "/opt/www"
> > >      ServerName www.test.co.za
> > >
> > >     DirectoryIndex index.html
> > >
> > >      SSLEngine on
> > >      SSLCertificateFile /keys/server.crt
> > >      SSLCertificateKeyFile /keys/server.key
> > >
> > > </VirtualHost>
> > >
> > >
> > >
> > > <VirtualHost *:80>
> > >     DocumentRoot "/opt/www.telic.co.za"
> > >     ServerName www.telic.co.za
> > > </VirtualHost>
> > >
> > >
> > > <Directory "/">
> > >         Options FollowSymLinks
> > >         AllowOverride None
> > > </Directory>
> > >
> > > <Directory "/opt/www">
> > >      # extend the pathon path so our python modules can be loaded
> > >     PythonPath "['/opt/www'] + sys.path"
> > >
> > >     # set the handler to mod_python + publisher so we can call
> > url/python
> > >     SetHandler mod_python
> > >
> > >     PythonHandler mod_python.publisher
> > >
> > >     PythonDebug On
> > >
> > >     # do not permit access to compiled python code
> > >         <Files *.pyc>
> > >             deny from all
> > >         </Files>
> > >
> > >
> > > </Directory>
> > >
> > >
> > >
> > >
> > >
> > >
> > > On 10/3/06, Eric Brunson < brunson@brunson.com> wrote:
> > > >
> > > > Colin Bean wrote:
> > > > > Thanks for the correction, Eric; I've never actually done that and
> > > > > assumed incorrectly.  Shame on me for recommending something that
> > I
> > > > > haven't tried!
> > > >
> > > > No worries, we're all here to learn.  :-)
> > > >
> > > > >
> > > > > Marinus, what I should have asked originally was how apache was
> > > > > failing with your config files (and what's in the error
> > log).  What
> > > > > does your "limited success" mean?
> > > > >
> > > > > -Colin
> > > >
> > > > _______________________________________________
> > > > Mod_python mailing list
> > > > Mod_python@modpython.org
> > > > http://mailman.modpython.org/mailman/listinfo/mod_python
> > > >
> > > _______________________________________________
> > > Mod_python mailing list
> > > Mod_python@modpython.org
> > > http://mailman.modpython.org/mailman/listinfo/mod_python
> >
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20061006/627fc00e/attachment-0001.html
From rl at ronaldlevine.com  Fri Oct  6 02:51:30 2006
From: rl at ronaldlevine.com (Ronald Levine)
Date: Fri Oct  6 03:03:38 2006
Subject: [mod_python] What appears in the browser address window.
Message-ID: <tkubi292bg8q00pufipu3vrhro8g2r6pga@4ax.com>

I have no idea whether this is a mod_python issue, an Apache issue, an
html issue, or a DNS issue, but here's the problem.  I have a domain,
call it domainx.com, (not real, at least not mine) and the DNS is
evidently set up so that www.domainx.com does map to the static IP of
my office computer.  That is,  when I type www.domainx.com into the
address window of my browser on some other computer, it does fetch the
expected page, but when the browser displays that page, it replaces
the "www.domainx.com" in the address window with the actual IP
address.  I don't like that, and want to know how to make the browser
address window continue to show the URL string that was typed into it.

Thanks,

Ronald

From NormanTindall at zdisk.net  Fri Oct  6 05:40:45 2006
From: NormanTindall at zdisk.net (Norman Tindall)
Date: Fri Oct  6 03:38:24 2006
Subject: [mod_python] AddHandler / SetHandler (black magic)
In-Reply-To: <ffa39deb0610060001x684c0d96w425e07989f5aca0b@mail.gmail.com>
References: <ffa39deb0610060001x684c0d96w425e07989f5aca0b@mail.gmail.com>
Message-ID: <1592670000.20061006134045@zdisk.net>

Hello marinus,
      You could try Set handler with
      this code in handler:

def handler(req,db):

    if req.status != 200:
        raise apache.SERVER_RETURN, req.status

    extentions_we_handle = ["html","py"]  # list of ext you want to handle
    ext = req.filename.split(".")
    if len(ext) > 1 and ext[-1] in extentions_we_handle:
        return apache.DECLINED      

    # do some work here with the extantions you want to handle


-- 
Best regards,
 Norman                            mailto:NormanTindall@zdisk.net

From grahamd at dscpl.com.au  Fri Oct  6 06:53:12 2006
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Fri Oct  6 06:54:18 2006
Subject: [mod_python] AddHandler / SetHandler (black magic)
In-Reply-To: <ffa39deb0610060001x684c0d96w425e07989f5aca0b@mail.gmail.com>
References: <ffa39deb0610060001x684c0d96w425e07989f5aca0b@mail.gmail.com>
Message-ID: <A752D4F1-4DD5-4DB8-A25A-E0BE0A8FEEAE@dscpl.com.au>


On 06/10/2006, at 5:01 PM, marinus van aswegen wrote:

> Hi All
>
> I think i've just entered the real of apache config black magic.  
> Just a quick report back.
>
> The to provide the necessary context, I would like to call my app  
> http://url/app/function
> other resources like html files and images are in the same  
> directory. A call to the url should redirect to app/index
>
> 1. I tried using the AddHandler but this forced me to add the .py  
> extension

Use of AddHandler does not imply that .py must be used. This is  
explained
in my article. You do need to do more black magic Apache configuration
though to get it to work. I have made a slight change to the article  
to mention
AddHandler explicitly in the section which deals with resource  
extensions.

> 2. I tried using the SetHandler to force all calls to the directory  
> to mod_python, this meant that other non python files could not be  
> served.
> 3. I then tried Grahams suggestion of excluding certain file types  
> and forcing them to the default handler. This worked  however I  
> ended up with a situation where the I could not invoke my app or  
> serve the index.html file if the user requested the directory. For  
> some strange reason the DirectoryIndex directive was being ignored.  
> I assume this has something to do with the Publish and sethandler  
> mix. Another bad side effect was that the user would be able to  
> request the app.py directly and get the code (no no!)

That DirectoryIndex only comes into play when AddHandler is used and  
that
it is the responsibility of the handler to handle the request against  
the directory
when SetHandler was used was mentioned in my article. I have made a  
slight
change to the article now to make that more explicit that  
DirectoryIndex doesn't
apply when SetHandler is used.

> 4. Time for some black magic, I used the file directive to black  
> all calls to pyc and py files (this is not a good security  
> practise, It's much better to deny and explicitly permit than the  
> other way around) I then set the handler depending on the content 
> (see below).
>
> I read the config from my ubuntu box where with an AddHandler I was  
> able to get Apache to behave like I wanted to and I found that I  
> had to directory blocks one in the Vhost config and one in the main  
> config file, I suspect there was some strange command interpolation  
> going on there.  There must be a cleaner way of doing this?
>
> <VirtualHost *:443>
>      DocumentRoot "/opt/www"
>      ServerName www.test.co.za
>
>      SSLEngine on
>      SSLCertificateFile /opt/keys/server.crt
>      SSLCertificateKeyFile /opt/keys/server.key
> </VirtualHost>
>
> <Directory "/opt/www>
>
>     # extend the pathon path so our python modules can be loaded
>     PythonPath "['/modules'] + sys.path"
>
>     # set the handler to mod_python + publisher so we can call url/ 
> python
>     <Files ~ "^cmd$">
>         SetHandler mod_python
>     </Files>
>
>     PythonHandler mod_python.publisher
>     PythonDebug On
>
>     # only permit access to the following files
>     <Files ~ "\.(gif|html|jpg|png)$">
>         SetHandler default-handler
>     </Files>
>
> </Directory>

Try:

<Directory "/opt/www>

     # extend the pathon path so our python modules can be loaded
     PythonPath "['/modules'] + sys.path"

     AddHandler mod_python .py
     PythonHandler mod_python.publisher

     <Files *.pyc>
     deny from all
     </Files>

     PythonDebug On

     Options MultiViews
     MultiviewsMatch Handlers

     AddType text/html;qs=1.0 .py
     AddType text/html;qs=0.9 .html
     AddType text/plain;qs=0.8 .txt

     DirectoryIndex index.py

</Directory>

With this, requests against directory should get redirected to index.py
internally. You should also be able to access publisher code without
having to specific a .py extension. Ie., '/index' should work.

For anyone who missed the reference to the article originally, the URL
is:

   http://www.dscpl.com.au/wiki/ModPython/Articles/ 
SetHandlerVersusAddHandler

Graham

> On 10/5/06, marinus van aswegen <mvanaswegen@gmail.com> wrote: Hi  
> Graham
>
> Thanks for the comments, I'm going to try and use the sethandler  
> because I don't want the .py extensions in the URL. I'll use the  
> default handler to serve static content i.e. jpegs.
>
>
>
> SetHandler default-handler
> I think there should be a big fat link on the mod_python front page  
> to your articles section.
>
> Regards
>
> Marinus
>
> PS the mod_python FAQ was a bit confusing on this topic http:// 
> www.modpython.org/FAQ/faqw.py?req=all#2.17
>
>
>
> On 10/5/06, Graham Dumpleton <grahamd@dscpl.com.au > wrote: marinus  
> van aswegen wrote ..
> > Hi All
> >
> > Let me pull this thread together. I had a working Apache2/ 
> mod_python setup
> > on Ubuntu.
> > Mod_python was setup so that I could call my python ap url/app/func
> > all worked fine until i moved my app to fedora. i just got the app
> > working again but apache wont serve any other files like images now.
> > will hit the faq when i get home later.
>
> And it is because you are using the SetHandler directive. By using  
> that
> directive, all requests will be intercepted and sent through to  
> mod_python.
>
> Read:
>
>    http://www.dscpl.com.au/wiki/ModPython/Articles/ 
> SetHandlerVersusAddHandler
>
> It explains the difference between SetHandler and AddHandler.
>
> You may just want to use:
>
>   AddHandler mod_python .py
>
> instead of SetHandler, but generally this means you need to use .py in
> your URLs for Python stuff.
>
> Graham
>
> > <SNIP>
> >
> >
> > LoadModule python_module modules/mod_python.so
> >
> > NameVirtualHost *:80
> >
> >
> > <VirtualHost *:80>
> >     DocumentRoot "/opt/www"
> >     ServerName www.test.co.za
> >     DirectoryIndex index.html
> >
> > </VirtualHost>
> >
> >
> > # Virtual host Virtual Host 0
> > <VirtualHost *:443>
> >      DocumentRoot "/opt/www"
> >      ServerName www.test.co.za
> >
> >     DirectoryIndex index.html
> >
> >      SSLEngine on
> >      SSLCertificateFile /keys/server.crt
> >      SSLCertificateKeyFile /keys/server.key
> >
> > </VirtualHost>
> >
> >
> >
> > <VirtualHost *:80>
> >     DocumentRoot "/opt/www.telic.co.za"
> >     ServerName www.telic.co.za
> > </VirtualHost>
> >
> >
> > <Directory "/">
> >         Options FollowSymLinks
> >         AllowOverride None
> > </Directory>
> >
> > <Directory "/opt/www">
> >      # extend the pathon path so our python modules can be loaded
> >     PythonPath "['/opt/www'] + sys.path"
> >
> >     # set the handler to mod_python + publisher so we can call  
> url/python
> >     SetHandler mod_python
> >
> >     PythonHandler mod_python.publisher
> >
> >     PythonDebug On
> >
> >     # do not permit access to compiled python code
> >         <Files *.pyc>
> >             deny from all
> >         </Files>
> >
> >
> > </Directory>
> >
> >
> >
> >
> >
> >
> > On 10/3/06, Eric Brunson < brunson@brunson.com> wrote:
> > >
> > > Colin Bean wrote:
> > > > Thanks for the correction, Eric; I've never actually done  
> that and
> > > > assumed incorrectly.  Shame on me for recommending something  
> that I
> > > > haven't tried!
> > >
> > > No worries, we're all here to learn.  :-)
> > >
> > > >
> > > > Marinus, what I should have asked originally was how apache was
> > > > failing with your config files (and what's in the error  
> log).  What
> > > > does your "limited success" mean?
> > > >
> > > > -Colin
> > >
> > > _______________________________________________
> > > Mod_python mailing list
> > > Mod_python@modpython.org
> > > http://mailman.modpython.org/mailman/listinfo/mod_python
> > >
> > _______________________________________________
> > Mod_python mailing list
> > Mod_python@modpython.org
> > http://mailman.modpython.org/mailman/listinfo/mod_python
>
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
From dualcyclone at gmail.com  Fri Oct  6 07:04:37 2006
From: dualcyclone at gmail.com (tony sarendal)
Date: Fri Oct  6 07:04:41 2006
Subject: [mod_python] Python and Mysql
In-Reply-To: <4524EA88.7050406@mail.nih.gov>
References: <e02ea4ef0610041450w412597dfr825dc65425b2114d@mail.gmail.com>
	<4524EA88.7050406@mail.nih.gov>
Message-ID: <ad7542dc0610060404k1fd9ef24y8a09008de9d9a7cd@mail.gmail.com>

MySQL-python and mod_python works together just fine.
On one of my openbsd3.8 boxes I use for testing:
Apache/2.0.55 (Unix) mod_python/3.1.4 Python/2.3.5
It has MySQL-python-1.2.0 on it.

import MySQLdb
...
db = MySQLdb.connect(host=dbhost,user=dbuser,passwd=dbpass,db=dbname)
cursor = db.cursor()
cursor.execute('SELECT whatevercolumn FROM whatevertable')
rval = cursor.fetchall()
...

/Tony


On 05/10/06, Sean Davis <sdavis2@mail.nih.gov> wrote:
>
> edgar mortiz wrote:
> > hello all!
> >
> >   can anyone give solutions on how python code can talk to mysql?
> > I've tried mysql-python but with no luck, i was wondering that any of
> > you would be able to give some recommendations on alternatives.
> Edgar,
>
> This list is for mod_python, not python.  However, a google search for
> "mysql python tutorials" will turn up many hits.
>
> Sean
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>



-- 
Tony Sarendal - dualcyclone@gmail.com
IP/Unix
       -= The scorpion replied,
               "I couldn't help it, it's my nature" =-
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20061006/6ad994c8/attachment.html
From grahamd at dscpl.com.au  Fri Oct  6 07:01:41 2006
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Fri Oct  6 07:05:13 2006
Subject: [mod_python] AddHandler / SetHandler (black magic)
In-Reply-To: <1592670000.20061006134045@zdisk.net>
References: <ffa39deb0610060001x684c0d96w425e07989f5aca0b@mail.gmail.com>
	<1592670000.20061006134045@zdisk.net>
Message-ID: <0C868786-D1DA-4A54-ACB5-3714B9BEF3E1@dscpl.com.au>


On 06/10/2006, at 7:40 PM, Norman Tindall wrote:

> Hello marinus,
>       You could try Set handler with
>       this code in handler:
>
> def handler(req,db):
>
>     if req.status != 200:
>         raise apache.SERVER_RETURN, req.status

Why??? In what circumstances do you believe that one could
arrive here with req.status already set to something other than
a value of 200. If an earlier handler had generated an error by
setting req.status, it should have returned apache.DONE and
not apache.OK and thus shouldn't ever end up here.

>     extentions_we_handle = ["html","py"]  # list of ext you want to  
> handle
>     ext = req.filename.split(".")

If you are going to do that, you should use:

   import posixpath
   ext = posixpath.splitext(req.filename)[0]

The way you were doing it, a '.' in a directory name earlier in the
URL could give problems.

The posixpath module is preferred instead of os.path as Apache
always uses POSIX style slash and not backslash for directory
separators. But then, posixpath doesn't deal with drive letters.
In practice there needs to be some apache.* functions which are
equivalent to os.path.* functions but which work properly on the
Apache style paths. Such a thing is on the list of things to do. :-)

>     if len(ext) > 1 and ext[-1] in extentions_we_handle:
>         return apache.DECLINED
>
>     # do some work here with the extantions you want to handle

Using AddHandler and other Apache directives is still the better
way. In mod_python 3.3 it will be easier to do things like above,
but it shouldn't be done in the response handler phase but an
earlier phase such as the fixup handler phase. I'll be writing an
article about this specific ability of mod_python 3.3 some time in
the near future hopefully.

Graham
From grahamd at dscpl.com.au  Fri Oct  6 08:27:55 2006
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Fri Oct  6 08:29:48 2006
Subject: [mod_python] AddHandler / SetHandler (black magic)
In-Reply-To: <0C868786-D1DA-4A54-ACB5-3714B9BEF3E1@dscpl.com.au>
References: <ffa39deb0610060001x684c0d96w425e07989f5aca0b@mail.gmail.com>
	<1592670000.20061006134045@zdisk.net>
	<0C868786-D1DA-4A54-ACB5-3714B9BEF3E1@dscpl.com.au>
Message-ID: <CEAB3CB8-6F46-4A8E-B297-BB13CDE4AB95@dscpl.com.au>


On 06/10/2006, at 9:01 PM, Graham Dumpleton wrote:

>>     extentions_we_handle = ["html","py"]  # list of ext you want  
>> to handle
>>     ext = req.filename.split(".")
>
> If you are going to do that, you should use:
>
>   import posixpath
>   ext = posixpath.splitext(req.filename)[0]

Whoops.

   ext = posixpath.splitext(req.filename)[1]

Graham
From Andreas.Klauer at metamorpher.de  Fri Oct  6 08:37:15 2006
From: Andreas.Klauer at metamorpher.de (Andreas Klauer)
Date: Fri Oct  6 08:41:21 2006
Subject: [mod_python] webinterface for a local telnet server
Message-ID: <20061006123715.GA9109@EIS>

Hello mod_python,

I'm new to this list, I hope I'm not asking something too obvious.

I want to write a web frontend for a local telnet server in mod_python. 
Now, I thought it would be an easy task, but it is slowly turning out 
not to be that easy. The very small rudimentary script I wrote opens a 
telnet connection to the server. It accepts commands from the browser 
and sends them to the server, and sends replies back to the browser.

This would all work very well if it were not for Apache threads. I need 
one telnet connection per user (identified by Session), but when Apache 
starts another thread, anything that is not stored on the outside (file, 
database, ...) is, well not really lost, as the other thread still has 
the information, but it is unavailable to the new thread.

That leads me to the question. What's the best way to write a web app, 
when I need data per user (session) that can not be stored on disk, for 
example a persistent connection to a telnet or IRC server. Unfortunately 
the server does not support sharing connections for multiple clients 
like databases do. It also does not support concurrent connections for 
the same user, so creating one connection per thread is not an option.

I see that FastCGI has an 'Session Affinity' patch, which is supposed to 
take care of the problem. They solved the problem by giving their module 
some control over which thread to use. However this patch never made it 
into the distribution and does not seem very actively maintained (never 
tested with Apache2 according to their homepage).

The only alternative I see is to write yet another intermediator daemon 
which I have to put in between the server and mod_python which then takes 
care of the connections in a smart way (persistent connection to the 
mod_python threads which can then be shared by the users or whatever).

Needless to say this would make things much more complicated than they 
need to be, as mod_python by itself can already do persistent connections, 
just not in the correct threads.

How to proceed?

Regards
Andreas Klauer
From azaroth at liverpool.ac.uk  Fri Oct  6 09:02:22 2006
From: azaroth at liverpool.ac.uk (Robert Sanderson)
Date: Fri Oct  6 09:05:17 2006
Subject: [mod_python] webinterface for a local telnet server
In-Reply-To: <20061006123715.GA9109@EIS>
References: <20061006123715.GA9109@EIS>
Message-ID: <Pine.GSO.4.58.0610061356380.26172@uxa.liv.ac.uk>


>That leads me to the question. What's the best way to write a web app,
>when I need data per user (session) that can not be stored on disk, for
>example a persistent connection to a telnet or IRC server. Unfortunately
>the server does not support sharing connections for multiple clients
>like databases do. It also does not support concurrent connections for
>the same user, so creating one connection per thread is not an option.

I use a ConnectionHandler in order to implement the persistent Z39.50
binary protocol within mod_python.

For example:

Listen *:2100
<VirtualHost *:2100>
   PythonPath "['/home/cheshire/cheshire3/code']+sys.path"
   PythonConnectionHandler zApacheHandler
   PythonDebug On
</VirtualHost>


zApacheHandler:

def connectionhandler(conn):
  handler = HandlerObject(conn)
  handler.read()

...
  def read():
    data = self.connection.read()
    while data:
       # handle data
       data = self.connection.read()

Or have I missed what you're trying to do?

Rob
From sdavis2 at mail.nih.gov  Fri Oct  6 09:21:18 2006
From: sdavis2 at mail.nih.gov (Sean Davis)
Date: Fri Oct  6 09:21:24 2006
Subject: [mod_python] webinterface for a local telnet server
In-Reply-To: <20061006123715.GA9109@EIS>
References: <20061006123715.GA9109@EIS>
Message-ID: <200610060921.18798.sdavis2@mail.nih.gov>

On Friday 06 October 2006 08:37, Andreas Klauer wrote:
> Hello mod_python,
>
> I'm new to this list, I hope I'm not asking something too obvious.
>
> I want to write a web frontend for a local telnet server in mod_python.
> Now, I thought it would be an easy task, but it is slowly turning out
> not to be that easy. The very small rudimentary script I wrote opens a
> telnet connection to the server. It accepts commands from the browser
> and sends them to the server, and sends replies back to the browser.
>
> This would all work very well if it were not for Apache threads. I need
> one telnet connection per user (identified by Session), but when Apache
> starts another thread, anything that is not stored on the outside (file,
> database, ...) is, well not really lost, as the other thread still has
> the information, but it is unavailable to the new thread.
>
> That leads me to the question. What's the best way to write a web app,
> when I need data per user (session) that can not be stored on disk, for
> example a persistent connection to a telnet or IRC server. Unfortunately
> the server does not support sharing connections for multiple clients
> like databases do. It also does not support concurrent connections for
> the same user, so creating one connection per thread is not an option.
>
> I see that FastCGI has an 'Session Affinity' patch, which is supposed to
> take care of the problem. They solved the problem by giving their module
> some control over which thread to use. However this patch never made it
> into the distribution and does not seem very actively maintained (never
> tested with Apache2 according to their homepage).
>
> The only alternative I see is to write yet another intermediator daemon
> which I have to put in between the server and mod_python which then takes
> care of the connections in a smart way (persistent connection to the
> mod_python threads which can then be shared by the users or whatever).
>
> Needless to say this would make things much more complicated than they
> need to be, as mod_python by itself can already do persistent connections,
> just not in the correct threads.
>
> How to proceed?

Could you put in a persistent backend daemon that your mod_python processes 
can talk to, which knows the mapping from user to connection?  

Sean
From Andreas.Klauer at metamorpher.de  Fri Oct  6 09:29:21 2006
From: Andreas.Klauer at metamorpher.de (Andreas Klauer)
Date: Fri Oct  6 09:29:32 2006
Subject: [mod_python] webinterface for a local telnet server
In-Reply-To: <Pine.GSO.4.58.0610061356380.26172@uxa.liv.ac.uk>
References: <20061006123715.GA9109@EIS>
	<Pine.GSO.4.58.0610061356380.26172@uxa.liv.ac.uk>
Message-ID: <20061006132921.GA9704@EIS>

On Fri, Oct 06, 2006 at 02:02:22PM +0100, Robert Sanderson wrote:
> I use a ConnectionHandler in order to implement the persistent Z39.50
> binary protocol within mod_python.
> 
> Or have I missed what you're trying to do?

I'm not sure. :-)

I don't want to implement a protocol in Apache. My machine has a 
telnet server running (independent from Apache). You open a telnet 
connection to the server, log in and get a command line interface 
specific to the user that logged in.

I want to write a web interface for that telnet server. mod_python 
script is called by browser, the browser can submit login data and 
commands to it, and I wanted mod_python to open a single telnet 
connection to the server per user and thus allow bidirectional 
communication between browser and local telnet server over the Web.

So I am not trying to implement a new protocol, just an interface 
to an already implemented non-web-server.

Regards
Andreas Klauer
From nlv11281 at natlab.research.philips.com  Fri Oct  6 09:32:35 2006
From: nlv11281 at natlab.research.philips.com (Mike Looijmans)
Date: Fri Oct  6 09:33:01 2006
Subject: [mod_python] webinterface for a local telnet server
In-Reply-To: <20061006123715.GA9109@EIS>
References: <20061006123715.GA9109@EIS>
Message-ID: <45265AF3.9000307@natlab.research.philips.com>

> The only alternative I see is to write yet another intermediator daemon 
> which I have to put in between the server and mod_python which then takes 
> care of the connections in a smart way (persistent connection to the 
> mod_python threads which can then be shared by the users or whatever).

I think that is the only way it will ever work reliably. You can get 
Apache to run in a single process, so that you can simply use a 
dictionary (user->connection) and a bit of mutexing to manage your 
connections.
For the external deamon, Python has a simple XMLRPC server that is easy 
to use, and should fit your needs.

--
Mike.

From dan.eloff at gmail.com  Fri Oct  6 09:45:53 2006
From: dan.eloff at gmail.com (Dan Eloff)
Date: Fri Oct  6 09:45:57 2006
Subject: [mod_python] Python and Mysql
In-Reply-To: <e02ea4ef0610041450w412597dfr825dc65425b2114d@mail.gmail.com>
References: <e02ea4ef0610041450w412597dfr825dc65425b2114d@mail.gmail.com>
Message-ID: <4817b6fc0610060645y57c9923dh68e8048f6995f787@mail.gmail.com>

I use mysql python just fine with mod_python. It is the best way to
use mysql in python. If you are having trouble getting it working, try
the mysql python forums on sourceforge.

-Dan

On 10/4/06, edgar mortiz <pfunix@gmail.com> wrote:
> hello all!
>
>    can anyone give solutions on how python code can talk to mysql?
> I've tried mysql-python but with no luck, i was wondering that any of
> you would be able to give some recommendations on alternatives.
>
>
> many thanks!
> -Ed
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>
From Andreas.Klauer at metamorpher.de  Fri Oct  6 09:49:13 2006
From: Andreas.Klauer at metamorpher.de (Andreas Klauer)
Date: Fri Oct  6 09:49:26 2006
Subject: [mod_python] webinterface for a local telnet server
In-Reply-To: <200610060921.18798.sdavis2@mail.nih.gov>
References: <20061006123715.GA9109@EIS>
	<200610060921.18798.sdavis2@mail.nih.gov>
Message-ID: <20061006134913.GA9842@EIS>

On Fri, Oct 06, 2006 at 09:21:18AM -0400, Sean Davis wrote:
> Could you put in a persistent backend daemon that your mod_python processes 
> can talk to, which knows the mapping from user to connection?  

I can, but what would be the least complicated way to do so?

The only solution I have so far is quite complicated, a daemon that opens 
one connection per user / session to the telnet server, and accepts one 
connection per mod_python thread. For the daemon<->python connections I 
would have to implement some kind of a protocol that allows sharing the 
connection for all users. Alternative would be to use one connection per 
user per thread to the daemon. Either way it is a lot of overhead.

Or is there some easier way in mod_python to implement an independent 
persistent backend daemon object?

Regards
Andreas Klauer
From Andreas.Klauer at metamorpher.de  Fri Oct  6 10:02:08 2006
From: Andreas.Klauer at metamorpher.de (Andreas Klauer)
Date: Fri Oct  6 10:02:19 2006
Subject: [mod_python] webinterface for a local telnet server
In-Reply-To: <45265AF3.9000307@natlab.research.philips.com>
References: <20061006123715.GA9109@EIS>
	<45265AF3.9000307@natlab.research.philips.com>
Message-ID: <20061006140208.GB9842@EIS>

On Fri, Oct 06, 2006 at 03:32:35PM +0200, Mike Looijmans wrote:
> I think that is the only way it will ever work reliably. You can get 
> Apache to run in a single process, so that you can simply use a 
> dictionary (user->connection) and a bit of mutexing to manage your 
> connections.

It's not that I don't like threads, but it is contra-productive to not 
have any control over them. It'd be great if my mod_python script could 
just say 'Hey, this guy belongs to another thread' and it would switch 
over there or something.

I suppose I can't do inter process communication between mod_python 
threads either (or it would not be feasible to do so...), i.e. having 
every mod_python thread double acting as a daemon for the others?

Regards
Andreas Klauer
From sdavis2 at mail.nih.gov  Fri Oct  6 10:12:30 2006
From: sdavis2 at mail.nih.gov (Sean Davis)
Date: Fri Oct  6 10:12:33 2006
Subject: [mod_python] webinterface for a local telnet server
In-Reply-To: <20061006134913.GA9842@EIS>
References: <20061006123715.GA9109@EIS>
	<200610060921.18798.sdavis2@mail.nih.gov>
	<20061006134913.GA9842@EIS>
Message-ID: <200610061012.30815.sdavis2@mail.nih.gov>

On Friday 06 October 2006 09:49, Andreas Klauer wrote:
> On Fri, Oct 06, 2006 at 09:21:18AM -0400, Sean Davis wrote:
> > Could you put in a persistent backend daemon that your mod_python
> > processes can talk to, which knows the mapping from user to connection?
>
> I can, but what would be the least complicated way to do so?
>
> The only solution I have so far is quite complicated, a daemon that opens
> one connection per user / session to the telnet server, and accepts one
> connection per mod_python thread. For the daemon<->python connections I
> would have to implement some kind of a protocol that allows sharing the
> connection for all users. Alternative would be to use one connection per
> user per thread to the daemon. Either way it is a lot of overhead.

I would think that each user would have a telnet connection.  Each mod_python 
process would then contact the daemon with some ID for the user on that 
process and the daemon would then provide the glue from the constantly 
shifting mod_python processes and the maintained telnet connection for that 
user.  I don't know what that daemon would look like, but it seems like it 
would actually minimize overhead, rather than maximize it, as the number of 
connections to mod_python and that to the telnet server are then independent 
and can be minimized independently, if necessary.

Sean
From list at joreybump.com  Fri Oct  6 12:14:43 2006
From: list at joreybump.com (Jorey Bump)
Date: Fri Oct  6 12:14:53 2006
Subject: [mod_python] webinterface for a local telnet server
In-Reply-To: <20061006140208.GB9842@EIS>
References: <20061006123715.GA9109@EIS>	<45265AF3.9000307@natlab.research.philips.com>
	<20061006140208.GB9842@EIS>
Message-ID: <452680F3.9010002@joreybump.com>

Andreas Klauer wrote:
> On Fri, Oct 06, 2006 at 03:32:35PM +0200, Mike Looijmans wrote:
>> I think that is the only way it will ever work reliably. You can get 
>> Apache to run in a single process, so that you can simply use a 
>> dictionary (user->connection) and a bit of mutexing to manage your 
>> connections.
> 
> It's not that I don't like threads, but it is contra-productive to not 
> have any control over them. It'd be great if my mod_python script could 
> just say 'Hey, this guy belongs to another thread' and it would switch 
> over there or something.
> 
> I suppose I can't do inter process communication between mod_python 
> threads either (or it would not be feasible to do so...), i.e. having 
> every mod_python thread double acting as a daemon for the others?

I think the problem is outside of apache/mod_python. Similar work has 
been done to develop IMAP proxies to reduce load caused by webmail 
opening a new connection to the IMAP server for every click. You might 
want to start there for examples.

Since HTTP is stateless, you'll need a proxy to hold the telnet 
connections open, track user connections, and timeout idle connections 
after a specified period of time. I'm probably stating the obvious, but 
the solution is easier to describe than implement. The devil is in the 
details. You might look at twisted for examples of proxy code.

From Andreas.Klauer at metamorpher.de  Fri Oct  6 12:46:03 2006
From: Andreas.Klauer at metamorpher.de (Andreas Klauer)
Date: Fri Oct  6 12:46:19 2006
Subject: [mod_python] webinterface for a local telnet server
In-Reply-To: <452680F3.9010002@joreybump.com>
References: <20061006123715.GA9109@EIS>
	<45265AF3.9000307@natlab.research.philips.com>
	<20061006140208.GB9842@EIS> <452680F3.9010002@joreybump.com>
Message-ID: <20061006164603.GA11578@EIS>

On Fri, Oct 06, 2006 at 12:14:43PM -0400, Jorey Bump wrote:
> I think the problem is outside of apache/mod_python. Similar work has 
> been done to develop IMAP proxies to reduce load caused by webmail 
> opening a new connection to the IMAP server for every click. You might 
> want to start there for examples.

That's just it. There would be no need for an additional daemon, if I 
could just select the correct thread. A mod_python script by itself 
holds up a telnet connection just fine. No additional work would be 
required in my situation if it were not for threads (or lack of thread 
control for that matter).

Instead of opening a telnet connection in a mod_python script directly, 
I now have to use an independent daemon, with additional connections to 
every mod_python thread, and I also have to encapsulate each query into 
a separate protocol. If that does not add unnecessary load, I don't 
know what does.

But I guess for that I'd have to talk to the Apache folks wether it is 
not possible to give modules (and therefore users) more control over 
what is done in which threads.

Regards
Andreas Klauer
From jpg at jgassociates.ca  Fri Oct  6 13:05:41 2006
From: jpg at jgassociates.ca (Jim Gallacher)
Date: Fri Oct  6 13:05:34 2006
Subject: [mod_python] webinterface for a local telnet server
In-Reply-To: <20061006164603.GA11578@EIS>
References: <20061006123715.GA9109@EIS>	<45265AF3.9000307@natlab.research.philips.com>	<20061006140208.GB9842@EIS>
	<452680F3.9010002@joreybump.com> <20061006164603.GA11578@EIS>
Message-ID: <45268CE5.6070209@jgassociates.ca>

Andreas Klauer wrote:
> On Fri, Oct 06, 2006 at 12:14:43PM -0400, Jorey Bump wrote:
>> I think the problem is outside of apache/mod_python. Similar work has 
>> been done to develop IMAP proxies to reduce load caused by webmail 
>> opening a new connection to the IMAP server for every click. You might 
>> want to start there for examples.
> 
> That's just it. There would be no need for an additional daemon, if I 
> could just select the correct thread.

But you can't, so just let it go. ;) It's the way Apache works for the 
worker-mpm and is completely outside of the control of mod_python.

> But I guess for that I'd have to talk to the Apache folks wether it is 
> not possible to give modules (and therefore users) more control over 
> what is done in which threads.

Take a look at the event-mpm. I don't know its status beyond it being 
experimental though.
http://httpd.apache.org/docs/2.2/mod/event.html

Jim
From blair at houghton.net  Fri Oct  6 14:19:17 2006
From: blair at houghton.net (Blair P. Houghton)
Date: Fri Oct  6 14:19:33 2006
Subject: [mod_python] Re: What appears in the browser address window.
Message-ID: <45269E25.4080305@houghton.net>

Ronald Levine wrote:
>I have no idea whether this is a mod_python issue, an Apache issue, an
>html issue, or a DNS issue, but here's the problem.  I have a domain,
>call it domainx.com, (not real, at least not mine) and the DNS is
>evidently set up so that www.domainx.com does map to the static IP of
>my office computer.  That is,  when I type www.domainx.com into the
>address window of my browser on some other computer, it does fetch the
>expected page, but when the browser displays that page, it replaces
>the "www.domainx.com" in the address window with the actual IP
>address.  I don't like that, and want to know how to make the browser
>address window continue to show the URL string that was typed into it.

I've never done that before, but I have a couple of ideas
for where I'd start.

First, does that host know its own name?  Check its local
IP config files.  It could be only the routers know who
that is, and translate the IP before it gets there.

Is "www.domainx.com" showing up in the req object, or
is only the IP address there?  Look in req.hostname,
req.interpreter, req.server.server_hostname, and
req.base_server.server_hostname.

Try the Redirect config command from mod_rewite.  There's
an example here:

http://www.freebsddiary.org/rewrite.php

Something like "Redirect permanent / http://www.domainx.com/"
might put the domain name back in the request header and
re-fetch using that.

And here's a handy site that lets you see what the HTTP
contains in both the request and the response.  Not the
same as the info in the req object, but useful to know.

http://web-sniffer.net/

The interesting feature there is that putting, say, "intel.com"
in the box sends a request header with just "intel.com" in the
name, and returns a response header with "www.intel.com", which
something somewhere had to construct from "intel.com".  So this
should tell you exactly what your server is sending, not just
what your browser is showing in the address box.

And again, I bet there's an elegant answer I'm not even
seeing.

--Blair

From pfunix at gmail.com  Fri Oct  6 17:23:49 2006
From: pfunix at gmail.com (edgar mortiz)
Date: Fri Oct  6 17:23:52 2006
Subject: [mod_python] Python and Mysql
In-Reply-To: <4817b6fc0610060645y57c9923dh68e8048f6995f787@mail.gmail.com>
References: <e02ea4ef0610041450w412597dfr825dc65425b2114d@mail.gmail.com>
	<4817b6fc0610060645y57c9923dh68e8048f6995f787@mail.gmail.com>
Message-ID: <e02ea4ef0610061423t6a385d79tfb1686699c89174b@mail.gmail.com>

thanks for the response! :)

peace! -Ed

On 10/6/06, Dan Eloff <dan.eloff@gmail.com> wrote:
> I use mysql python just fine with mod_python. It is the best way to
> use mysql in python. If you are having trouble getting it working, try
> the mysql python forums on sourceforge.
>
> -Dan
>
> On 10/4/06, edgar mortiz <pfunix@gmail.com> wrote:
> > hello all!
> >
> >    can anyone give solutions on how python code can talk to mysql?
> > I've tried mysql-python but with no luck, i was wondering that any of
> > you would be able to give some recommendations on alternatives.
> >
> >
> > many thanks!
> > -Ed
> > _______________________________________________
> > Mod_python mailing list
> > Mod_python@modpython.org
> > http://mailman.modpython.org/mailman/listinfo/mod_python
> >
>
From grahamd at dscpl.com.au  Fri Oct  6 19:18:13 2006
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Fri Oct  6 19:19:17 2006
Subject: [mod_python] webinterface for a local telnet server
In-Reply-To: <20061006164603.GA11578@EIS>
References: <20061006123715.GA9109@EIS>
	<45265AF3.9000307@natlab.research.philips.com>
	<20061006140208.GB9842@EIS> <452680F3.9010002@joreybump.com>
	<20061006164603.GA11578@EIS>
Message-ID: <CC601EC9-B5EA-4370-8341-35AAB5F607C0@dscpl.com.au>


On 07/10/2006, at 2:46 AM, Andreas Klauer wrote:

> On Fri, Oct 06, 2006 at 12:14:43PM -0400, Jorey Bump wrote:
>> I think the problem is outside of apache/mod_python. Similar work has
>> been done to develop IMAP proxies to reduce load caused by webmail
>> opening a new connection to the IMAP server for every click. You  
>> might
>> want to start there for examples.
>
> That's just it. There would be no need for an additional daemon, if I
> could just select the correct thread. A mod_python script by itself
> holds up a telnet connection just fine. No additional work would be
> required in my situation if it were not for threads (or lack of thread
> control for that matter).
>
> Instead of opening a telnet connection in a mod_python script  
> directly,
> I now have to use an independent daemon, with additional  
> connections to
> every mod_python thread, and I also have to encapsulate each query  
> into
> a separate protocol. If that does not add unnecessary load, I don't
> know what does.
>
> But I guess for that I'd have to talk to the Apache folks wether it is
> not possible to give modules (and therefore users) more control over
> what is done in which threads.

Personally I think you are possibly working under some misconceptions
about how Apache/mod_python works. You keep mentioning 'threads'
as a problem, but frankly I cannot see how that is really relevant at  
all.

Before I try and address that I would ask why you are trying to perhaps
reinvent the wheel as others have already solved this problem. In the
webmin interface for remotely managing systems, there is a standard
SSH/Telnet Login module that uses a Java applet. There are also other
third party implementations as well. Some sites to start tracking this
stuff down are:

   http://www.webmin.com/ustandard.html
   http://webadminmodules.sourceforge.net/?page=Others

Back to your threads. The problem with using Apache/mod_python when
you want to preserve some state between requests is not threads but
processes. This is because when using prefork or worker Apache MPMs
on UNIX systems, subsequent requests can be directed to different Apache
child processes. As a result, if one child process had initiated a  
telnet
connection, when a subsequent request arrives and it ends up being
processed by a different child process, it will not have access to  
the open
connection. On Win32 boxes this isn't a problem, as there is only one
Apache process and all requests are handled by it.

For further information, see:

   http://www.dscpl.com.au/wiki/ModPython/Articles/ 
TheProcessInterpreterModel

As far as threads go, on Win32, and when worker MPM is used on UNIX,
when subsequent requests arrive, they may indeed be handled by different
threads within that process, but that shouldn't matter, unless you have
made the mistake of storing state information as thread local data  
within
that thread such that only that thread can access it. If the data is  
stored
globally, is thread protected and keyed by some user session credentials
then it shouldn't be an issue as it wouldn't matter which actual  
thread handled
a request, as all could still access it.

If you do this correctly, then it would be possible to do what you  
want on a
Win32 system, as the same Apache process is always used. On prefork
and even worker MPMs on UNIX though you can't, as you can't ensure the
same process always gets the requests. Also, even if there were some  
way,
Apache is allowed to shutdown specific child processes at any time,  
so you
would loose any open connection anyway.

If you want to pursue this direction of implementing it yourself, you  
have no
choice but to stick the bits which create the telnet connection in a  
separate
long running daemon process. Communication between the Apache child
processes and the separate daemon could use XML-RPC albeit perhaps
inefficiently, a persistently connected messaging system, or a custom  
protocol
over a socket connection.

Writing that daemon isn't necessarily going to be straight forward,  
as making
it secure may be an issue, plus you need to track user sessions,  
possibly
implement inactivity timers to cleanup sessions if not used etc etc.

Thus, overall, I would really suggest you pursue some of the Java applet
solutions that exist instead that people have already written.

Graham
From Andreas.Klauer at metamorpher.de  Fri Oct  6 21:53:33 2006
From: Andreas.Klauer at metamorpher.de (Andreas Klauer)
Date: Fri Oct  6 21:53:57 2006
Subject: [mod_python] webinterface for a local telnet server
In-Reply-To: <CC601EC9-B5EA-4370-8341-35AAB5F607C0@dscpl.com.au>
References: <20061006123715.GA9109@EIS>
	<45265AF3.9000307@natlab.research.philips.com>
	<20061006140208.GB9842@EIS> <452680F3.9010002@joreybump.com>
	<20061006164603.GA11578@EIS>
	<CC601EC9-B5EA-4370-8341-35AAB5F607C0@dscpl.com.au>
Message-ID: <20061007015333.GA16047@EIS>

On Sat, Oct 07, 2006 at 09:18:13AM +1000, Graham Dumpleton wrote:
> Before I try and address that I would ask why you are trying to perhaps
> reinvent the wheel as others have already solved this problem.

It's probably hard not to reinvent the wheel when what you want is 
something as trivial as a telnet web application frontend, um, thingy. 
I want it to be small, lightweight, and specifically adapted for my needs, 
that is the sole reason why I am doing it.

> Back to your threads. The problem with using Apache/mod_python when
> you want to preserve some state between requests is not threads but
> processes. This is because when using prefork or worker Apache MPMs
> on UNIX systems, subsequent requests can be directed to different Apache
> child processes. As a result, if one child process had initiated a  
> telnet connection, when a subsequent request arrives and it ends up being
> processed by a different child process, it will not have access to  
> the open connection. On Win32 boxes this isn't a problem, as there is only one
> Apache process and all requests are handled by it.

Thank you for this clarification. I could not find that information 
anywhere although I was desparately looking for it. All I found was 
persistence this and persistence that and I noticed that there was 
no real persistence at all (at least the way I understand it).

Unless I missed the explanation somewhere, maybe this should go to 
some obvious place like the FAQ?

> Also, even if there were some way, Apache is allowed to shutdown 
> specific child processes at any time, so you would loose any open 
> connection anyway.

Especially this part is worth mentioning. Thanks. So there really 
is no way but to use some daemon independent from Apache.

Thanks for all the replies. :-)

Although that means I will need to write a daemon for almost anything 
that needs persistence (databases don't except for performance reasons).

Regards
Andreas Klauer
From pfunix at gmail.com  Fri Oct  6 23:02:01 2006
From: pfunix at gmail.com (edgar mortiz)
Date: Fri Oct  6 23:02:06 2006
Subject: [mod_python] Python and Mysql
In-Reply-To: <e02ea4ef0610061423t6a385d79tfb1686699c89174b@mail.gmail.com>
References: <e02ea4ef0610041450w412597dfr825dc65425b2114d@mail.gmail.com>
	<4817b6fc0610060645y57c9923dh68e8048f6995f787@mail.gmail.com>
	<e02ea4ef0610061423t6a385d79tfb1686699c89174b@mail.gmail.com>
Message-ID: <e02ea4ef0610062002y47b56520r4c6983b147600d66@mail.gmail.com>

thanks for all the help guys :) I was able to find what I've been
looking for .. and it's on obsd's ports tree hehe sorry for all the
fuzz .. and thanks again for the great answers



-Ed

On 10/6/06, edgar mortiz <pfunix@gmail.com> wrote:
> thanks for the response! :)
>
> peace! -Ed
>
> On 10/6/06, Dan Eloff <dan.eloff@gmail.com> wrote:
> > I use mysql python just fine with mod_python. It is the best way to
> > use mysql in python. If you are having trouble getting it working, try
> > the mysql python forums on sourceforge.
> >
> > -Dan
> >
> > On 10/4/06, edgar mortiz <pfunix@gmail.com> wrote:
> > > hello all!
> > >
> > >    can anyone give solutions on how python code can talk to mysql?
> > > I've tried mysql-python but with no luck, i was wondering that any of
> > > you would be able to give some recommendations on alternatives.
> > >
> > >
> > > many thanks!
> > > -Ed
> > > _______________________________________________
> > > Mod_python mailing list
> > > Mod_python@modpython.org
> > > http://mailman.modpython.org/mailman/listinfo/mod_python
> > >
> >
>
From steve at holdenweb.com  Sat Oct  7 03:41:13 2006
From: steve at holdenweb.com (Steve Holden)
Date: Sat Oct  7 03:40:46 2006
Subject: [mod_python] Re: webinterface for a local telnet server
In-Reply-To: <20061007015333.GA16047@EIS>
References: <20061006123715.GA9109@EIS>	<45265AF3.9000307@natlab.research.philips.com>	<20061006140208.GB9842@EIS>
	<452680F3.9010002@joreybump.com>	<20061006164603.GA11578@EIS>	<CC601EC9-B5EA-4370-8341-35AAB5F607C0@dscpl.com.au>
	<20061007015333.GA16047@EIS>
Message-ID: <eg7ll3$2ed$1@sea.gmane.org>

Andreas Klauer wrote:
> On Sat, Oct 07, 2006 at 09:18:13AM +1000, Graham Dumpleton wrote:
> 
>>Before I try and address that I would ask why you are trying to perhaps
>>reinvent the wheel as others have already solved this problem.
> 
> 
> It's probably hard not to reinvent the wheel when what you want is 
> something as trivial as a telnet web application frontend, um, thingy. 
> I want it to be small, lightweight, and specifically adapted for my needs, 
> that is the sole reason why I am doing it.
> 
I think perhaps your first problem is that assumption of triviality. I 
find it's more useful to describe a problem as trivial after I have 
solved it with less than ten lines of code. Until then I'd prefer to 
describe the level of difficulty as "unknown".
> 
>>Back to your threads. The problem with using Apache/mod_python when
>>you want to preserve some state between requests is not threads but
>>processes. This is because when using prefork or worker Apache MPMs
>>on UNIX systems, subsequent requests can be directed to different Apache
>>child processes. As a result, if one child process had initiated a  
>>telnet connection, when a subsequent request arrives and it ends up being
>>processed by a different child process, it will not have access to  
>>the open connection. On Win32 boxes this isn't a problem, as there is only one
>>Apache process and all requests are handled by it.
> 
> 
> Thank you for this clarification. I could not find that information 
> anywhere although I was desparately looking for it. All I found was 
> persistence this and persistence that and I noticed that there was 
> no real persistence at all (at least the way I understand it).
> 
> Unless I missed the explanation somewhere, maybe this should go to 
> some obvious place like the FAQ?
> 
It's a fairly usual condition in web systems: the persistence referred 
to is usually persistence of session state data rather than persistence 
of process and network connection state.
> 
>>Also, even if there were some way, Apache is allowed to shutdown 
>>specific child processes at any time, so you would loose any open 
>>connection anyway.
> 
> 
> Especially this part is worth mentioning. Thanks. So there really 
> is no way but to use some daemon independent from Apache.
> 
Correct.

> Thanks for all the replies. :-)
> 
> Although that means I will need to write a daemon for almost anything 
> that needs persistence (databases don't except for performance reasons).
> 
If you want to persist a network connection across multiple web client 
interactions then you have indeed summed up your situation quite succinctly.

regards
  Steve
-- 
Steve Holden       +44 150 684 7255  +1 800 494 3119
Holden Web LLC/Ltd          http://www.holdenweb.com
Skype: holdenweb       http://holdenweb.blogspot.com
Recent Ramblings     http://del.icio.us/steve.holden

From durumdara at gmail.com  Sat Oct  7 06:11:38 2006
From: durumdara at gmail.com (Durumdara)
Date: Sat Oct  7 06:11:42 2006
Subject: [mod_python] Where do you put your py modules... ? [alias paranoid
	protector]
Message-ID: <9e384ef60610070311uc8c527bt1339bcf9c460d06c@mail.gmail.com>

Hi !

Where do you put your py modules ?

Interesting question !

I have site, and I want to protect it.
Because I want to do this, I use .php extension for my main py script,
something like this:

### index.php

def handler(req):
  dir = os.dirname(__file__)+'../py'
  mod = import_module('realhandlerscript', path = [dir])
  return mod.handler(req)

### index.php
(The php extension is confusion-maker - the hackers will trying with php
exploits on php site. I can set this to .jsp, or other ext, to confuse the
attackers).

my site is like this:
/htdocs
/htdocs/index.php
/py

The /py is containing all of the handlers, templates, and everything that I
don't want to publish directly (I publish the contents from globally
controlled script).

This is a kind of paranoia, but I fear if I confuse my apache config file,
all of my sources and directories will visible as text (if I store them in
the htdocs)...

So I moved them into a lower level dir.

It is good solution ? Or can I set in apache directory sections globally to
let all of the py/psp and some of other files unvisible ?
Can I set globally this (un)visibility, to only server (and modpy) can see
these files, but the request/users can not ?

Do you knows about any restrictions if I don't use the htdocs to store my
handler scripts and other stuffs ?

Thanks for your help:
dd
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20061007/f4f3949a/attachment.html
From sdavis2 at mail.nih.gov  Sat Oct  7 18:52:56 2006
From: sdavis2 at mail.nih.gov (Sean Davis)
Date: Sat Oct  7 06:52:54 2006
Subject: [mod_python] Where do you put your py modules... ? [alias paranoid
	protector]
In-Reply-To: <9e384ef60610070311uc8c527bt1339bcf9c460d06c@mail.gmail.com>
References: <9e384ef60610070311uc8c527bt1339bcf9c460d06c@mail.gmail.com>
Message-ID: <45282FC8.4080202@mail.nih.gov>

Durumdara wrote:
> Hi !
>
> Where do you put your py modules ?
>
> Interesting question !
>
> I have site, and I want to protect it.
> Because I want to do this, I use .php extension for my main py script, 
> something like this:
>
> ### index.php
>
> def handler(req):
>   dir = os.dirname(__file__)+'../py'
>   mod = import_module('realhandlerscript', path = [dir])
>   return mod.handler(req)
>
> ### index.php
> (The php extension is confusion-maker - the hackers will trying with 
> php exploits on php site. I can set this to .jsp, or other ext, to 
> confuse the attackers).
>
> my site is like this:
> /htdocs
> /htdocs/index.php
> /py
>
> The /py is containing all of the handlers, templates, and everything 
> that I don't want to publish directly (I publish the contents from 
> globally controlled script).
>
> This is a kind of paranoia, but I fear if I confuse my apache config 
> file, all of my sources and directories will visible as text (if I 
> store them in the htdocs)...
>
> So I moved them into a lower level dir.
>
> It is good solution ? Or can I set in apache directory sections 
> globally to let all of the py/psp and some of other files unvisible ?
> Can I set globally this (un)visibility, to only server (and modpy) can 
> see these files, but the request/users can not ?
>
> Do you knows about any restrictions if I don't use the htdocs to store 
> my handler scripts and other stuffs ?
You didn't mention how you have set up your site--using publisher?  
CGI?  AddHandler?  SetHandler?

To answer your question, there is no necessity that you store ANY of 
your python code in htdocs.  Particularly for code reuse reasons, I 
think having a directory outside htdocs is useful, as some (most) of 
your modules should be useful in other projects that are not 
web-related.  Add that directory to your sys.path and voila, you have 
code reuse without copying the code around....

Sean
From durumdara at gmail.com  Sat Oct  7 07:12:04 2006
From: durumdara at gmail.com (Durumdara)
Date: Sat Oct  7 07:12:12 2006
Subject: [mod_python] "Same module names" problem is solvable with exec ?
In-Reply-To: <9e384ef60610070338i19f69091w132ef60456b957bf@mail.gmail.com>
References: <9e384ef60610070338i19f69091w132ef60456b957bf@mail.gmail.com>
Message-ID: <9e384ef60610070412h6dbe9b73q6bc5cb271ba70f1c@mail.gmail.com>

Skipped content of type multipart/alternative-------------- next part --------------
A non-text attachment was scrubbed...
Name: _test_.zip
Type: application/zip
Size: 5731 bytes
Desc: not available
Url : http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20061007/4b70e83b/_test_.zip
From grahamd at dscpl.com.au  Sat Oct  7 08:16:13 2006
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Sat Oct  7 08:17:09 2006
Subject: [mod_python] "Same module names" problem is solvable with exec ?
In-Reply-To: <9e384ef60610070412h6dbe9b73q6bc5cb271ba70f1c@mail.gmail.com>
References: <9e384ef60610070338i19f69091w132ef60456b957bf@mail.gmail.com>
	<9e384ef60610070412h6dbe9b73q6bc5cb271ba70f1c@mail.gmail.com>
Message-ID: <FFB11289-2CDC-4BA8-8013-CFDEB40A1847@dscpl.com.au>


On 07/10/2006, at 9:12 PM, Durumdara wrote:

> Hi !
>
> Many times I see in the FAQ, but I got this problem "LIVE" :-) in  
> yesterday.
> Because I use subdirectories, my scripts are stored in them.
>
> Some of the files have same name, and the site is produced errors !

Documented as issue 14 in:

   http://www.dscpl.com.au/wiki/ModPython/Articles/ 
ModuleImportingIsBroken

Not a problem if you are using mod_python.publisher in 3.2. Fixed
completely in mod_python 3.3.

> I see that subinterpreters are solves this problem, but I don't  
> know, how to use them from py.
> The site is growing quickly, and the chance of the same module  
> names in the site is growing too

Consider using mod_python from subversion source code repository
trunk. The code is proving to be quite stable at this point.

Graham

From ron at revision3.com  Sat Oct  7 14:54:32 2006
From: ron at revision3.com (ron)
Date: Sat Oct  7 14:54:54 2006
Subject: [mod_python] possible memory leak?
Message-ID: <4527F7E8.5010901@revision3.com>

Hi all,

I'm using mod_python with mpcp to run cherrypy behind apache.  I am
noticing that the apache processes seem to keep growing.  Each apache
process seems to grow from 100MB to over 300MB after a day of production
 traffic.  Is there a possible memory leak in mod_python?  Could
something in my app be leaking into apache/mod_python?  If it's the
latter, I'm not clear as to what the mechanism would be since my
understanding is that mod_python spawns completely new processes for
each pre-fork process.

Any hints on how to debug this memory issue?

Thanks,
-Ron

-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 252 bytes
Desc: OpenPGP digital signature
Url : http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20061007/29464737/signature.bin
From glart at infoline.su  Sat Oct  7 15:19:57 2006
From: glart at infoline.su (=?KOI8-R?Q?=E7=CC=CF=D4=CF=D7_=E1=D2=D4=C5=CD?=)
Date: Sat Oct  7 15:20:06 2006
Subject: [mod_python] apache + python + mod_python: path error
Message-ID: <4527FDDD.2000703@infoline.su>

Hello!
   
I'm trying to install apache, python and mod_python, but to the my 
homedir, not to  
the /usr/local. During configuration I used --prefix directive:  
Python:  
./configure   
   --enable-shared   
   --without-threads   
   --prefix=/home/glar/project/python  
Apache:  
./configure   
   --enable-rule=SHARED_CORE   
   --enable-module=so   
   --prefix=/home/glar/project/apache  
and Mod_python:  
./configure  
   --with-apxs=/home/glar/project/apache/bin/apxs  
   --with-apache=../apache_1.3.33  
   --with-python=../Python-2.4.3  
   --prefix=/home/glar/project/python/lib/python2.4
 
But when I call the test example, apache generates 500 Internal Error, 
in the
error_log there are 3 new strings:
[Fri Oct  6 17:36:03 2006] [notice] Accept mutex: sysvsem (Default: 
sysvsem)
make_obcallback(): could not import mod_python.apache.
make_obcallback(): could not call init.
[Fri Oct  6 17:36:09 2006] [error] [client 127.0.0.1] python_handler: 
make_obcallback
returned no obCallBack!
 
I think that mod_python can't find files in the directory  
'/home/glar/project/python/lib/python2.4/site-package/mod_python', I 
tried to add it
to the PythonPath directive in the httpd.conf and create PYTHONHOME 
variable, no
effect  :(
 
What is wrong in my actions?
 
Artyom.

From list at joreybump.com  Sat Oct  7 15:30:47 2006
From: list at joreybump.com (Jorey Bump)
Date: Sat Oct  7 15:30:53 2006
Subject: [mod_python] apache + python + mod_python: path error
In-Reply-To: <4527FDDD.2000703@infoline.su>
References: <4527FDDD.2000703@infoline.su>
Message-ID: <45280067.7080301@joreybump.com>

?????? ????? wrote:
> Hello!
>   I'm trying to install apache, python and mod_python, but to the my 

> --with-apache=../apache_1.3.33    --with-python=../Python-2.4.3    

> What is wrong in my actions?

You don't mention your mod_python version. Latest versions only work 
with Apache 2.x. Since you're compiling your own, don't even bother with 
  the older versions of Apache or mod_python.
From glart at infoline.su  Sat Oct  7 15:45:21 2006
From: glart at infoline.su (=?KOI8-R?Q?=E7=CC=CF=D4=CF=D7_=E1=D2=D4=C5=CD?=)
Date: Sat Oct  7 15:45:26 2006
Subject: [mod_python] apache + python + mod_python: path error
In-Reply-To: <45280067.7080301@joreybump.com>
References: <4527FDDD.2000703@infoline.su> <45280067.7080301@joreybump.com>
Message-ID: <452803D1.4080503@infoline.su>

Jorey Bump ?????:

> ?????? ????? wrote:
>
>> Hello!
>>   I'm trying to install apache, python and mod_python, but to the my 
>
>
>> --with-apache=../apache_1.3.33    --with-python=../Python-2.4.3    
>
>
>> What is wrong in my actions?
>
>
> You don't mention your mod_python version. Latest versions only work 
> with Apache 2.x. Since you're compiling your own, don't even bother 
> with  the older versions of Apache or mod_python.
>
>
I have installed this combination with root permissions, to the 
/usr/local and all work fine, but I can't install it to the homedir..

Artyom.

From grahamd at dscpl.com.au  Sat Oct  7 18:34:08 2006
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Sat Oct  7 18:34:15 2006
Subject: [mod_python] possible memory leak?
In-Reply-To: <4527F7E8.5010901@revision3.com>
References: <4527F7E8.5010901@revision3.com>
Message-ID: <2AFEBDC4-D69E-4824-82A4-7B3EC10BFC86@dscpl.com.au>


On 08/10/2006, at 4:54 AM, ron wrote:

> Hi all,
>
> I'm using mod_python with mpcp to run cherrypy behind apache.  I am
> noticing that the apache processes seem to keep growing.  Each apache
> process seems to grow from 100MB to over 300MB after a day of  
> production
>  traffic.  Is there a possible memory leak in mod_python?  Could
> something in my app be leaking into apache/mod_python?  If it's the
> latter, I'm not clear as to what the mechanism would be since my
> understanding is that mod_python spawns completely new processes for
> each pre-fork process.
>
> Any hints on how to debug this memory issue?

There are some known memory leaks.

   http://issues.apache.org/jira/browse/MODPYTHON-172
   http://issues.apache.org/jira/browse/MODPYTHON-181
   http://issues.apache.org/jira/browse/MODPYTHON-182
   http://issues.apache.org/jira/browse/MODPYTHON-184

These have been addressed in mod_python 3.3

All I can suggest at the moment is you set up a system which uses the
latest mod_python source code from Subversion source code repository
and see if the leaks go away.

Graham
From grahamd at dscpl.com.au  Sat Oct  7 18:42:36 2006
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Sat Oct  7 18:42:44 2006
Subject: [mod_python] apache + python + mod_python: path error
In-Reply-To: <4527FDDD.2000703@infoline.su>
References: <4527FDDD.2000703@infoline.su>
Message-ID: <2AD24625-01D3-4130-972A-A3FD93B1031A@dscpl.com.au>


On 08/10/2006, at 5:19 AM, ?????? ????? wrote:

> Hello!
>   I'm trying to install apache, python and mod_python, but to the  
> my homedir, not to  the /usr/local. During configuration I used -- 
> prefix directive:  Python:  ./configure     --enable-shared     -- 
> without-threads     --prefix=/home/glar/project/python  Apache:  ./ 
> configure     --enable-rule=SHARED_CORE     --enable-module=so      
> --prefix=/home/glar/project/apache  and Mod_python:  ./configure     
> --with-apxs=/home/glar/project/apache/bin/apxs    --with-apache=../ 
> apache_1.3.33    --with-python=../Python-2.4.3    --prefix=/home/ 
> glar/project/python/lib/python2.4
> But when I call the test example, apache generates 500 Internal  
> Error, in the
> error_log there are 3 new strings:
> [Fri Oct  6 17:36:03 2006] [notice] Accept mutex: sysvsem (Default:  
> sysvsem)
> make_obcallback(): could not import mod_python.apache.
> make_obcallback(): could not call init.
> [Fri Oct  6 17:36:09 2006] [error] [client 127.0.0.1]  
> python_handler: make_obcallback
> returned no obCallBack!
> I think that mod_python can't find files in the directory  '/home/ 
> glar/project/python/lib/python2.4/site-package/mod_python', I tried  
> to add it
> to the PythonPath directive in the httpd.conf and create PYTHONHOME  
> variable, no
> effect  :(
> What is wrong in my actions?

Your --with-apache option to mod_python config is a bit suspect, the
--with-apxs option I thought would have been sufficient.

Also, rather than use --with-python, try ensuring your PATH has the
bin directory containing your own python binary in the search path
first and it will be found that way.

Finally, also make sure that when you start your instance of Apache,
that your PATH again has the bin directory of your own python binary
in the search path first, else it will try and find the system one  
and use
it by mistake and not find the installed mod_python files.

As Jorey pointed out, it would be a good idea to ditch Apache 1.3.
Even if you can get it working, the mod_python that works with it (2.7)
has lots of problems and we will not be able to help you with it, as
most of the time our answer will be to upgrade.

Graham
From grahamd at dscpl.com.au  Sat Oct  7 22:37:39 2006
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Sat Oct  7 22:37:48 2006
Subject: [mod_python] AddHandler / SetHandler (black magic)
In-Reply-To: <1697209921.20061007155520@zdisk.net>
References: <ffa39deb0610060001x684c0d96w425e07989f5aca0b@mail.gmail.com>
	<1592670000.20061006134045@zdisk.net>
	<0C868786-D1DA-4A54-ACB5-3714B9BEF3E1@dscpl.com.au>
	<1697209921.20061007155520@zdisk.net>
Message-ID: <2C91DA7C-4CA8-42B9-A356-504DEF75C45E@dscpl.com.au>


On 07/10/2006, at 9:55 PM, Norman Tindall wrote:

> GD> Using AddHandler and other Apache directives is still the better
> GD> way. In mod_python 3.3 it will be easier to do things like above,
> GD> but it shouldn't be done in the response handler phase but an
> GD> earlier phase such as the fixup handler phase. I'll be writing an
> GD> article about this specific ability of mod_python 3.3 some time in
> GD> the near future hopefully.
>
> GD> Graham
>
>     The reason why i am using this is that i am using mod_python 3.1
>     by now. I will upgrade to 3.3 as soon as possible.
>
>
>      I have a question according to you last reply to my letter.
>      Suppose i want to process thing as this:
>
>                     +-------------------+
>                     |   start of req    |
>                     +-------------------+
>                       /            \
>                      /              \
>      +-----------------------+  +------------------------+
>      | extension is:         |  |  All other extension   |
>      | ['py','html','css']   |  |                        |
>      | and without extension |  +------------------------+
>      | but there are no real |              |
>      |  files at all, they   |              |
>      | all redirected to say |              |
>      | engine.py             |              |
>      | so i don`t want apache|              |
>      | to check for exsistance              |
>      | of file               |              |
>      +-----------------------+              |
>                |                     Apache standard
>          Python handler                  Handler
>                |                            |
>      ------------------------     ------------------------
>      In some cases script           Apache generates all
>      generates error pages          error pages
>      like 404,403,500
>      But in other cases
>      i want apache standard
>      error pages.
>
>
> What is the best,simple and fastest way?
> Can i do this with just apache directives or i have to parse, uri
> and extension by myself in fixuphandler as you said?
>
>    1 import posixpath
>    2 from mod_python import apache, psp
>    3
>    4 def fixuphandler(req):
>    5     extension = posixpath.splitext(req.filename)[1]
>    6     if extension in ['py','html','css']:
>    7         req.add_handler('PythonHandler', my_handler)
>    8         req.handler = 'mod_python'
>    9     return apache.OK

For mod_python 3.2 and earlier use Apache configuration of:

   # Files which have no extension.

   <Files ~ '^[^.]*$'>
   SetHandler mod_python
   </Files>

   # Files with extension of interest.

   <Files ~ '^.*\.(css|py|html)$>
   SetHandler mod_python
   </Files>

   PythonHandler _handlers::handler
   PythonHandler _handlers::handler_css | .css
   PythonHandler _handlers::handler_py | .py
   PythonHandler _handlers::handler_html | .html

Note this is for .htaccess file, but can also be inside Directory  
directive.

If using mod_python 3.3 I might have made it more constrained by using:

   <Files ~ '^[^.]*$'>
   SetHandler mod_python
   PythonHandler _handlers::handler
   </Files>

   <Files ~ '^.*\.(css|py|html)$>
   SetHandler mod_python
   PythonHandler _handlers::handler_css | .css
   PythonHandler _handlers::handler_py | .py
   PythonHandler _handlers::handler_html | .html
   </Files>

Ie., stick the PythonHandler inside the Files directive. This will  
not work
on mod_python 3.2 and earlier though if the Python handler module
resides in the document tree. If the Python handler module is
elsewhere on sys.path, then can do this for 3.2 and earlier. The reasons
for the problems are documented at:

   http://issues.apache.org/jira/browse/MODPYTHON-126

This is fixed in 3.3 though.

With a Python handler module of:

   from mod_python import apache

   def _dump(req, extension):
     req.content_type = 'text/plain'
     print >> req, 'uri = %s' % req.uri
     print >> req, 'filename = %s' % req.filename
     print >> req, 'path_info = %s' % req.path_info
     print >> req, 'extension = %s' % extension
     return apache.OK

   def handler(req):
     return _dump(req, '')

   def handler_css(req):
     return _dump(req, '.css')

   def handler_py(req):
     return _dump(req, '.py')

   def handler_html(req):
     return _dump(req, '.html')

If this directory is accessed as '/~grahamd/handlers/' and I use that  
as the
URL I get:

   uri = /~grahamd/handlers/
   filename = /Users/grahamd/public_html/handlers/
   path_info =
   extension =

Thus handler() was called. Similarly if I use '/~grahamd/handlers/page'.

   uri = /~grahamd/handlers/page
   filename = /Users/grahamd/public_html/handlers/page
   path_info =
   extension =

If I use any of the extensions of interest, I get something like:

   uri = /~grahamd/handlers/page.css
   filename = /Users/grahamd/public_html/handlers/page.css
   path_info =
   extension = .css

   uri = /~grahamd/handlers/page.py
   filename = /Users/grahamd/public_html/handlers/page.py
   path_info =
   extension = .py

   uri = /~grahamd/handlers/page.html
   filename = /Users/grahamd/public_html/handlers/page.html
   path_info =
   extension = .html

Thus different handler gets called for each extension type.

If I use any other extension, I get a 404 not found, unless the file  
did actually
exist as a static file in which case it would be returned.

Now, there is one issue with doing it as above. That is that the Files
directive only matches the first component of the path in req.filename
appearing after the actual physical directory. Thus, if I use a URL of
'/~grahamd/handlers/subdir/page.html', I will get:

   uri = /~grahamd/handlers/subdir/page.html
   filename = /Users/grahamd/public_html/handlers/subdir
   path_info = /page.html
   extension =

and the handler for the '.html' extension will not be called as you  
might expect.

This is all to do with how Apache matches URLs against the physical
directory hierarchy and how it determines what actually constitutes the
path info for a request.

At some point you would have to deal with this yourself if you were to
take total control of mapping the URL to some target.

Anyway, to ensure that Apache does what is required in this case, all  
that
is required is to create the physical directories in the file system  
which
correspond to those directories which you want to notionally hold what
appear to be static files. Thus:

   mkdir /Users/grahamd/public_html/handlers/subdir

Now I get:

   uri = /~grahamd/handlers/subdir/page.html
   filename = /Users/grahamd/public_html/handlers/subdir/page.html
   path_info =
   extension = .html

A benefit of still relying on Apache for doing this mapping and  
creating the
subdirectories, is you could use a modified handler of:

   def handler_html(req):
     if os.path.exists(req.filename):
       return apache.DECLINED
     return _dump(req, '.html')

That is, because req.filename is valid, can simply check for the  
existence
of the file and if it exists return apache.DECLINED so that Apache  
serves
it up as a static file instead. Thus can mix static and dynamic files  
with the
static taking precedence.

Note that using os.path.exists() here results in an extra stat()  
call, but have
to do this with mod_python 3.2 and earlier as some information missing
with req.finfo. In mod_python 3.3, would instead use:

   def handler_html(req):
     if req.finfo.filetype == apache.APR_REG:
       return apache.DECLINED
     return _dump(req, '.html')

BTW, rather than modify the handler, I could have had a separate handler
whose only purpose was to check for static files:

   def check_exists(req):
     if req.finfo.filetype == apache.APR_REG:
       return apache.DECLINED
     return apache.OK

Then in the Apache configuration, use:

   PythonHandler _handlers::check_exists _handlers::handler_html | .html

or:

   PythonHandler _handlers::check_exists |.html
   PythonHandler _handlers::handler_html | .html

Both are equivalent.

Ie., use a stacked handler. That the first returns apache.DECLINED  
causes
the latter not to be invoked. This way you have little handlers doing  
specific
jobs and aren't creating one huge handler that tries to do everything.

Hope this is interesting.

Graham
From grahamd at dscpl.com.au  Sat Oct  7 23:51:56 2006
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Sat Oct  7 23:52:03 2006
Subject: [mod_python] Where do you put your py modules... ? [alias
	paranoid protector]
In-Reply-To: <9e384ef60610070311uc8c527bt1339bcf9c460d06c@mail.gmail.com>
References: <9e384ef60610070311uc8c527bt1339bcf9c460d06c@mail.gmail.com>
Message-ID: <B9042D9C-010F-4C2E-9A4E-A821FC94E3EC@dscpl.com.au>


On 07/10/2006, at 8:11 PM, Durumdara wrote:

> Hi !
>
> Where do you put your py modules ?

Personally I have no issues with putting the source code which is
used to render the view in files which is in the document tree. Any
stuff which represents the model or core of the application would
certainly be put elsewhere, especially anything which may relate
to database access and could contain passwords etc.

> Interesting question !
>
> I have site, and I want to protect it.
> Because I want to do this, I use .php extension for my main py  
> script, something like this:
>
> ### index.php
>
> def handler(req):
>   dir = os.dirname(__file__)+'../py'
>   mod = import_module('realhandlerscript', path = [dir])
>   return mod.handler(req)
>
> ### index.php
> (The php extension is confusion-maker - the hackers will trying  
> with php exploits on php site. I can set this to .jsp, or other  
> ext, to confuse the attackers).

Why not use the appropriate extension for the type of content that
is delivered up for the resource. In other words, why not use a .html
extension. If you use that, they will have no idea what implementation
language you are using. One could also use no extension at all.

> my site is like this:
> /htdocs
> /htdocs/index.php
> /py
>
> The /py is containing all of the handlers, templates, and  
> everything that I don't want to publish directly (I publish the  
> contents from globally controlled script).
>
> This is a kind of paranoia, but I fear if I confuse my apache  
> config file, all of my sources and directories will visible as text  
> (if I store them in the htdocs)...
>
> So I moved them into a lower level dir.
>
> It is good solution ? Or can I set in apache directory sections  
> globally to let all of the py/psp and some of other files unvisible ?

If using SetHandler directive and an appropriate handler, you can use
something like:

   <Files *.py>
   deny from all
   </Files>

   <Files *.pyc>
   deny from all
   </Files>

   <Files *.psp_>
   deny from all
   </Files>

The last one stops access to PSP source code when PythonDebug is
On and PSP is being used.

> Can I set globally this (un)visibility, to only server (and modpy)  
> can see these files, but the request/users can not ?

Depends on your handler and how you are triggering it.

> Do you knows about any restrictions if I don't use the htdocs to  
> store my handler scripts and other stuffs ?

Depends on how your handler is written to a degree. You do loose the
ability to use some Apache features if all you end up doing is using  
Apache
as a jumping off point and implementing all URL interpretation  
yourself. In
some respects, if you are going to do that, you may as well trigger your
handler from inside a Location directive, which since it isn't  
associated
with a physical directory cannot result in any way your source code  
being
exposed.

Graham
From glart at infoline.su  Sun Oct  8 05:09:08 2006
From: glart at infoline.su (=?KOI8-R?Q?=E7=CC=CF=D4=CF=D7_=E1=D2=D4=C5=CD?=)
Date: Sun Oct  8 05:09:19 2006
Subject: [mod_python] apache + python + mod_python: path error
Message-ID: <4528C034.1080005@infoline.su>

Graham, thank you!
I only created symlink:
    ln -s /home/glar/project/python/bin/ /home/glar/bin
and my path was like this:
    
/home/glar/bin:/usr/local/bin:/usr/local/sbin:/usr/bin:/usr/sbin:/usr/X11R6/bin:/bin:/sbin:/usr/games
Then /home/glar/bin with my Python is earlear then /usr/local/bin with 
admin's Python.
Then
    ./configure --with-apxs=/home/glar/project/apache/bin/apxs 
--with-python=../Python-2.4.3 && make && make install
and apache with mod_python began to work!

Artyom.

From steve at holdenweb.com  Sun Oct  8 06:57:53 2006
From: steve at holdenweb.com (Steve Holden)
Date: Sun Oct  8 06:57:18 2006
Subject: [mod_python] Re: Where do you put your py modules... ? [alias
	paranoid protector]
In-Reply-To: <9e384ef60610070311uc8c527bt1339bcf9c460d06c@mail.gmail.com>
References: <9e384ef60610070311uc8c527bt1339bcf9c460d06c@mail.gmail.com>
Message-ID: <egalhq$8vb$1@sea.gmane.org>

Durumdara wrote:
[...]
> ### index.php
> (The php extension is confusion-maker - the hackers will trying with php 
> exploits on php site. I can set this to .jsp, or other ext, to confuse 
> the attackers).
[...]

http://en.wikipedia.org/wiki/Security_through_obscurity

regards
  Steve
-- 
Steve Holden       +44 150 684 7255  +1 800 494 3119
Holden Web LLC/Ltd          http://www.holdenweb.com
Skype: holdenweb       http://holdenweb.blogspot.com
Recent Ramblings     http://del.icio.us/steve.holden

From jcigar at ulb.ac.be  Sun Oct  8 11:17:37 2006
From: jcigar at ulb.ac.be (Julien Cigar)
Date: Sun Oct  8 09:17:06 2006
Subject: [mod_python] possible memory leak?
In-Reply-To: <2AFEBDC4-D69E-4824-82A4-7B3EC10BFC86@dscpl.com.au>
References: <4527F7E8.5010901@revision3.com>
	<2AFEBDC4-D69E-4824-82A4-7B3EC10BFC86@dscpl.com.au>
Message-ID: <45291691.3030307@ulb.ac.be>

Another "solution" to avoid this is to set the MaxRequestsPerChild to 
something other than 0 (for example 10000).

see http://httpd.apache.org/docs/2.0/mod/mpm_common.html#maxrequestsperchild

Julien

Graham Dumpleton wrote:
>
> On 08/10/2006, at 4:54 AM, ron wrote:
>
>> Hi all,
>>
>> I'm using mod_python with mpcp to run cherrypy behind apache.  I am
>> noticing that the apache processes seem to keep growing.  Each apache
>> process seems to grow from 100MB to over 300MB after a day of production
>>  traffic.  Is there a possible memory leak in mod_python?  Could
>> something in my app be leaking into apache/mod_python?  If it's the
>> latter, I'm not clear as to what the mechanism would be since my
>> understanding is that mod_python spawns completely new processes for
>> each pre-fork process.
>>
>> Any hints on how to debug this memory issue?
>
> There are some known memory leaks.
>
>   http://issues.apache.org/jira/browse/MODPYTHON-172
>   http://issues.apache.org/jira/browse/MODPYTHON-181
>   http://issues.apache.org/jira/browse/MODPYTHON-182
>   http://issues.apache.org/jira/browse/MODPYTHON-184
>
> These have been addressed in mod_python 3.3
>
> All I can suggest at the moment is you set up a system which uses the
> latest mod_python source code from Subversion source code repository
> and see if the leaks go away.
>
> Graham
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python

From ron at revision3.com  Mon Oct  9 03:52:33 2006
From: ron at revision3.com (ron)
Date: Mon Oct  9 03:52:48 2006
Subject: [mod_python] possible memory leak?
In-Reply-To: <45291691.3030307@ulb.ac.be>
References: <4527F7E8.5010901@revision3.com>	<2AFEBDC4-D69E-4824-82A4-7B3EC10BFC86@dscpl.com.au>
	<45291691.3030307@ulb.ac.be>
Message-ID: <4529FFC1.7060507@revision3.com>

Of course!  This didn't even occur to me.  This helped a lot, Thanks.

-Ron

Julien Cigar wrote:
> Another "solution" to avoid this is to set the MaxRequestsPerChild to
> something other than 0 (for example 10000).
> 
> see
> http://httpd.apache.org/docs/2.0/mod/mpm_common.html#maxrequestsperchild
> 
> Julien
> 
> Graham Dumpleton wrote:
>>
>> On 08/10/2006, at 4:54 AM, ron wrote:
>>
>>> Hi all,
>>>
>>> I'm using mod_python with mpcp to run cherrypy behind apache.  I am
>>> noticing that the apache processes seem to keep growing.  Each apache
>>> process seems to grow from 100MB to over 300MB after a day of production
>>>  traffic.  Is there a possible memory leak in mod_python?  Could
>>> something in my app be leaking into apache/mod_python?  If it's the
>>> latter, I'm not clear as to what the mechanism would be since my
>>> understanding is that mod_python spawns completely new processes for
>>> each pre-fork process.
>>>
>>> Any hints on how to debug this memory issue?
>>
>> There are some known memory leaks.
>>
>>   http://issues.apache.org/jira/browse/MODPYTHON-172
>>   http://issues.apache.org/jira/browse/MODPYTHON-181
>>   http://issues.apache.org/jira/browse/MODPYTHON-182
>>   http://issues.apache.org/jira/browse/MODPYTHON-184
>>
>> These have been addressed in mod_python 3.3
>>
>> All I can suggest at the moment is you set up a system which uses the
>> latest mod_python source code from Subversion source code repository
>> and see if the leaks go away.
>>
>> Graham
>> _______________________________________________
>> Mod_python mailing list
>> Mod_python@modpython.org
>> http://mailman.modpython.org/mailman/listinfo/mod_python
> 
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python


-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 252 bytes
Desc: OpenPGP digital signature
Url : http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20061009/f0d883da/signature.bin
From grahamd at dscpl.com.au  Mon Oct  9 05:22:59 2006
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Mon Oct  9 05:24:12 2006
Subject: [mod_python] Where do you put your py modules... ? [alias
	paranoid protector]
In-Reply-To: <4529FC87.5050704@gmail.com>
References: <9e384ef60610070311uc8c527bt1339bcf9c460d06c@mail.gmail.com>
	<B9042D9C-010F-4C2E-9A4E-A821FC94E3EC@dscpl.com.au>
	<4529FC87.5050704@gmail.com>
Message-ID: <0DEBD7C6-B381-4015-A2C4-68AFD96DA3E0@dscpl.com.au>

I have pushed your email back onto the mailing list. Please keep
followups there in future. I'll see if I can get to your email later and
try and understand what it is you are talking about. In the meantime,
someone else may have comments.

Graham

On 09/10/2006, at 5:38 PM, durumdara wrote:

> Dear Graham !
>
> I want to ask something about the site structure.
>
> Graham Dumpleton ?rta:
>>
>> On 07/10/2006, at 8:11 PM, Durumdara wrote:
>>
>>>
>>> ### index.php
>>> (The php extension is confusion-maker - the hackers will trying  
>>> with php exploits on php site. I can set this to .jsp, or other  
>>> ext, to confuse the attackers).
>>
>> Why not use the appropriate extension for the type of content that
>> is delivered up for the resource. In other words, why not use a .html
>> extension. If you use that, they will have no idea what  
>> implementation
>> language you are using. One could also use no extension at all.
> Good idea !
>>> Do you knows about any restrictions if I don't use the htdocs to  
>>> store my handler scripts and other stuffs ?
>>
>> Depends on how your handler is written to a degree. You do loose the
>> ability to use some Apache features if all you end up doing is  
>> using Apache
>> as a jumping off point and implementing all URL interpretation  
>> yourself. In
>> some respects, if you are going to do that, you may as well  
>> trigger your
>> handler from inside a Location directive, which since it isn't  
>> associated
>> with a physical directory cannot result in any way your source  
>> code being
>> exposed.
> There is many way to answer the request.
> If I use psps, or publisher scripts, every of them must contains  
> "Beginning" and "End" functions to make same pages. Example: B:  
> session init, db init, E: force global template on site (title,  
> menu, navigation), write the result to output stream, close databases.
> This is solvable if I put "import Header; Header.init()" to  
> beginning, and "import Footer; Footer.done()" to the end of the  
> scripts, psps...
> But this is very confortless solution.
>
> The working method is now that my global handler creates a request  
> class that holds many informations (request, session, databases,  
> actual path, etc).
> This handler is see the req.filename.
> If this is a ".php" file, it is remove this extension, and it try  
> to find same directory in the template path.
> If in this dir it found "<%_dirname%>".py, then starts it. If in  
> this dir is found page.html, then render it with PSP.
> Then this handler is write the result to the output stream.
> But I need to restructure this site, because my boss is required  
> subdirectories in the published site (host/product1/support.php vs.  
> host/product1_support.php)...
> :-(
>
> Do you knows about a solution the can uniform the pages (every  
> page) and can use in the Apache URL handling ?
> For every directory I want to show ?
>
> Thanks for your help:
> dd


From vladimirkotulskiy at gmail.com  Mon Oct  9 06:24:05 2006
From: vladimirkotulskiy at gmail.com (Vladimir Kotulskiy)
Date: Mon Oct  9 06:24:27 2006
Subject: [mod_python] Apache error
Message-ID: <e749437a0610090324q88fd7d5s6a960d8bcc1be55e@mail.gmail.com>

I am getting the following message

Apache 2 is starting ...
apache.exe: Syntax error on line 142 of C:/web/xampp/apache/conf/httpd.conf:
Cannot load C:/web/xampp/apache/modules/mod_python.so into server: \xcd\xe5
\xed\xe0\xe9\xe4\xe5\xed \xf3\xea\xe0\xe7\xe0\xed\xed\xfb\xe9
\xec\xee\xe4\xf3\xeb\xfc.

Python 2.4
mod_python-3.2.10.win32-py2.4-apache2.2.exe
Apache 2.2.3
Win XP SP2
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20061009/b508cab5/attachment.html
From sdavis2 at mail.nih.gov  Mon Oct  9 08:00:29 2006
From: sdavis2 at mail.nih.gov (Sean Davis)
Date: Mon Oct  9 08:00:37 2006
Subject: [mod_python] Where do you put your py modules... ? [alias
	paranoid protector]
In-Reply-To: <0DEBD7C6-B381-4015-A2C4-68AFD96DA3E0@dscpl.com.au>
References: <9e384ef60610070311uc8c527bt1339bcf9c460d06c@mail.gmail.com>
	<4529FC87.5050704@gmail.com>
	<0DEBD7C6-B381-4015-A2C4-68AFD96DA3E0@dscpl.com.au>
Message-ID: <200610090800.29438.sdavis2@mail.nih.gov>

On Monday 09 October 2006 05:22, Graham Dumpleton wrote:
> I have pushed your email back onto the mailing list. Please keep
> followups there in future. I'll see if I can get to your email later and
> try and understand what it is you are talking about. In the meantime,
> someone else may have comments.
>
> Graham
>
> On 09/10/2006, at 5:38 PM, durumdara wrote:
> > Dear Graham !
> >
> > I want to ask something about the site structure.
> >
> > Graham Dumpleton ?rta:
> >> On 07/10/2006, at 8:11 PM, Durumdara wrote:
> >>> ### index.php
> >>> (The php extension is confusion-maker - the hackers will trying
> >>> with php exploits on php site. I can set this to .jsp, or other
> >>> ext, to confuse the attackers).
> >>
> >> Why not use the appropriate extension for the type of content that
> >> is delivered up for the resource. In other words, why not use a .html
> >> extension. If you use that, they will have no idea what
> >> implementation
> >> language you are using. One could also use no extension at all.
> >
> > Good idea !
> >
> >>> Do you knows about any restrictions if I don't use the htdocs to
> >>> store my handler scripts and other stuffs ?
> >>
> >> Depends on how your handler is written to a degree. You do loose the
> >> ability to use some Apache features if all you end up doing is
> >> using Apache
> >> as a jumping off point and implementing all URL interpretation
> >> yourself. In
> >> some respects, if you are going to do that, you may as well
> >> trigger your
> >> handler from inside a Location directive, which since it isn't
> >> associated
> >> with a physical directory cannot result in any way your source
> >> code being
> >> exposed.
> >
> > There is many way to answer the request.
> > If I use psps, or publisher scripts, every of them must contains
> > "Beginning" and "End" functions to make same pages. Example: B:
> > session init, db init, E: force global template on site (title,
> > menu, navigation), write the result to output stream, close databases.
> > This is solvable if I put "import Header; Header.init()" to
> > beginning, and "import Footer; Footer.done()" to the end of the
> > scripts, psps...

Why not make a "Page" class that contains all the functionality that you want 
for each page, and then inherit from it to supply the body?  Alternatively, 
use a template system (as you suggest).  

> > > > The working method is now that my global handler creates a request 
> > class that holds many informations (request, session, databases,
> > actual path, etc).
> > This handler is see the req.filename.
> > If this is a ".php" file, it is remove this extension, and it try
> > to find same directory in the template path.
> > If in this dir it found "<%_dirname%>".py, then starts it. If in
> > this dir is found page.html, then render it with PSP.
> > Then this handler is write the result to the output stream.
> > But I need to restructure this site, because my boss is required
> > subdirectories in the published site (host/product1/support.php vs.
> > host/product1_support.php)...

Sounds like you would like you have what you want working.  You can't just 
change the directory structure a bit?  You might remind your boss that things 
in htdocs are meant to be visible by the outside world; if you want to hide 
them, you will need to modify the apache config file.  If you store them 
outside of htdocs, you will likely not have to do as much work on the apache 
config file.  

> > Do you knows about a solution the can uniform the pages (every
> > page) and can use in the Apache URL handling ?
> > For every directory I want to show ?

As I mentioned, why not make a "page" class and then inherit from it for all 
your pages?

From durumdara at gmail.com  Mon Oct  9 08:23:52 2006
From: durumdara at gmail.com (durumdara)
Date: Mon Oct  9 08:24:04 2006
Subject: [mod_python] Where do you put your py modules... ? [alias paranoid
	protector]
In-Reply-To: <200610090800.29438.sdavis2@mail.nih.gov>
References: <9e384ef60610070311uc8c527bt1339bcf9c460d06c@mail.gmail.com>
	<4529FC87.5050704@gmail.com>
	<0DEBD7C6-B381-4015-A2C4-68AFD96DA3E0@dscpl.com.au>
	<200610090800.29438.sdavis2@mail.nih.gov>
Message-ID: <452A3F58.3060903@gmail.com>

Sean Davis ?rta:
> Why not make a "Page" class that contains all the functionality that you want 
> for each page, and then inherit from it to supply the body?  Alternatively, 
> use a template system (as you suggest).  
>
>   
Dear Sean !

This is very-very good idea !
I have only one question:
I must set the python handler script in the apache config. This is a 
file (one file).
So Apache call this file to handle all of the requests.
Because that I need to call a page class that user requested 
(req.filename), if I want to show result presented with this (inherited) 
page class.

Apache - > Handler -> myscript::handler -> req.filename -> 
call(req.filename) -> return

Or is exists another way to set Apache: if the requested file have .py 
extension, Apache start it without your call (with predefined user 
function) ?

Apache -> ?.py? req.filename -> call(req.filename) -> return

Thanks for your help, and thanks for help I got from everybody:
dd



From sdavis2 at mail.nih.gov  Mon Oct  9 08:44:48 2006
From: sdavis2 at mail.nih.gov (Sean Davis)
Date: Mon Oct  9 08:44:51 2006
Subject: [mod_python] Where do you put your py modules... ? [alias
	paranoid protector]
In-Reply-To: <452A3F58.3060903@gmail.com>
References: <9e384ef60610070311uc8c527bt1339bcf9c460d06c@mail.gmail.com>
	<200610090800.29438.sdavis2@mail.nih.gov>
	<452A3F58.3060903@gmail.com>
Message-ID: <200610090844.48589.sdavis2@mail.nih.gov>

On Monday 09 October 2006 08:23, durumdara wrote:
> Sean Davis ?rta:
> > Why not make a "Page" class that contains all the functionality that you
> > want for each page, and then inherit from it to supply the body? 
> > Alternatively, use a template system (as you suggest).
>
> Dear Sean !
>
> This is very-very good idea !
> I have only one question:
> I must set the python handler script in the apache config. This is a
> file (one file).
> So Apache call this file to handle all of the requests.
> Because that I need to call a page class that user requested
> (req.filename), if I want to show result presented with this (inherited)
> page class.
>
> Apache - > Handler -> myscript::handler -> req.filename ->
> call(req.filename) -> return

req.filename has a class in it that inherits from your page class.  That page 
class is defined in some file, perhaps your handler file, and is inherited by 
some class in the file req.filename.  But you can do it however you like.  

I would suggest not worrying so much about the "right" way to do it quite yet.  
Get a framework that works for you and then refactor as it becomes obvious 
what needs to be done differently.  That is the cool thing about python and 
mod_python--there are many ways to do it.

> Or is exists another way to set Apache: if the requested file have .py
> extension, Apache start it without your call (with predefined user
> function) ?
>
> Apache -> ?.py? req.filename -> call(req.filename) -> return
>
> Thanks for your help, and thanks for help I got from everybody:
> dd


Might I make a suggestion that if you are trying to design an interactive 
website that you look at the various frameworks that are available FIRST, 
decide what makes sense in them, and then go on to write your own stuff.  
Look at Ruby-on-rails, Catalyst, CGI::Application, CherryPy, Django, 
TurboGears, etc.  See how they handle the problems that you are facing.  
Then, sit down with pencil and paper and decide what functionality that you 
need and where.  I personally like the ruby-on-rails/catalyst systems that do 
their own URL management, etc. and do not exist in the filesystem, but you 
are free to do what you want, of course.  

From fred at adventistcare.org  Mon Oct  9 16:29:34 2006
From: fred at adventistcare.org (Sells, Fred)
Date: Mon Oct  9 16:21:57 2006
Subject: [mod_python] RHEL rpm locations?
Message-ID: <1A4BF05172023E468CB6E867923BC90402B6E2D0@accmail2.sunbelt.org>

just getting started with mod_python using Redhat Enterprise Linux.

apt-get installs 3.1.3-5.1

latest version looks like 3.2.10.

Does anyone know where I can find a binary rpm for mod_python 3.2.10 (and
any dependencies).

Company policy strongly resists building from source.

google produced too many hits without enough relevanat content.

---------------------------------------------------------------------------
The information contained in this message may be privileged and / or
confidential and protected from disclosure. If the reader of this message is
not the intended recipient, you are hereby notified that any dissemination,
distribution or copying of this communication is strictly prohibited. If you
have received this communication in error, please notify the sender
immediately by replying to this message and deleting the material from any
computer.
---------------------------------------------------------------------------

From fred at adventistcare.org  Mon Oct  9 16:32:23 2006
From: fred at adventistcare.org (Sells, Fred)
Date: Mon Oct  9 16:24:16 2006
Subject: [mod_python] newbie cookie confusion
Message-ID: <1A4BF05172023E468CB6E867923BC90402B6E2D1@accmail2.sunbelt.org>

I am using the mod_python.publisher; could that mess me up with cookies
somehow?
I'm just trying to get the basic demo from the manual to work.

I notice the manual writes a plain cookie but reads a marshall cookie.  Am I
correct in assuming these are not compatible cookies, and you had better
read the type you wrote?
---------------------------------------

Sells, Fred wrote:
> I've googled but not found this, trying to do cookie example from docs.
The
> output is always of type <type 'str'> and is the cookie name.  How do I
get
> value?
> 
> 
> 
> def makecookie(req):
>     c = Cookie.MarshalCookie('spam', 'eggs', 'secret007')
>     d = Cookie.MarshalCookie('xxxx', 'yyy', 'secret007')
>     Cookie.add_cookie(req, c)
>     Cookie.add_cookie(req, d)
>     return 'cookie made'
> 
> def showcookies(req):
>     cookies = Cookie.get_cookies(req, Cookie.MarshalCookie,
> secret='secret007')
>     s = 'There are %s cookies'% len(cookies)
>     for c in cookies:
>         s += '\n%s %s' % (str(c), type(c))
>     return s
> 

I haven't been through the docs but I'd suggest that you have a look at 
cookies[c] in case cookies is a dictionary.

Scott
From grahamd at dscpl.com.au  Mon Oct  9 19:14:23 2006
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Mon Oct  9 19:14:34 2006
Subject: [mod_python] newbie cookie confusion
Message-ID: <1160435663.8623@dscpl.user.openhosting.com>


Sells, Fred wrote ..
> I am using the mod_python.publisher; could that mess me up with cookies
> somehow?
> I'm just trying to get the basic demo from the manual to work.
> 
> I notice the manual writes a plain cookie but reads a marshall cookie.
> Am I
> correct in assuming these are not compatible cookies, and you had better
> read the type you wrote?

What is the actual problem you are having. Someone already pointed out
what you were probably doing wrong after your first post. That is that
the result of Cookie.get_cookies() is a dictionary. You were not using the
value (cookie) from the dictionary, but the key (name of cookie) which is
a string.

Change your test program to use:

    for c in cookies.values():
        s += '\n%s %s' % (str(c), type(c))

and you will see the actual cookies read back. You still need to access
the name and value attributes of the cookie to get the decoded value.

In terms of the example in the documentation, the two examples should
be seen as distinct and not as working together. In the second example
it itself sets up the MarshalCookie if it wasn't there to begin with.

As far as not getting the examples to work, are you using them exactly
as in the documentation, or have you used it merely as a guide to write
your own code?

In the event that cookies cached in the browser are the cause of any
problems, are you deleting from your browser cache any specific cookie
used by the test code?

Graham

> Sells, Fred wrote:
> > I've googled but not found this, trying to do cookie example from docs.
> The
> > output is always of type <type 'str'> and is the cookie name.  How do
> I
> get
> > value?
> > 
> > 
> > 
> > def makecookie(req):
> >     c = Cookie.MarshalCookie('spam', 'eggs', 'secret007')
> >     d = Cookie.MarshalCookie('xxxx', 'yyy', 'secret007')
> >     Cookie.add_cookie(req, c)
> >     Cookie.add_cookie(req, d)
> >     return 'cookie made'
> > 
> > def showcookies(req):
> >     cookies = Cookie.get_cookies(req, Cookie.MarshalCookie,
> > secret='secret007')
> >     s = 'There are %s cookies'% len(cookies)
> >     for c in cookies:
> >         s += '\n%s %s' % (str(c), type(c))
> >     return s
> > 
> 
> I haven't been through the docs but I'd suggest that you have a look at
> cookies[c] in case cookies is a dictionary.
> 
> Scott
From gdamjan at gmail.com  Mon Oct  9 19:31:35 2006
From: gdamjan at gmail.com (Damjan Georgievski)
Date: Mon Oct  9 19:31:38 2006
Subject: [mod_python] webinterface for a local telnet server
In-Reply-To: <20061007015333.GA16047@EIS>
References: <20061006123715.GA9109@EIS>
	<45265AF3.9000307@natlab.research.philips.com>
	<20061006140208.GB9842@EIS> <452680F3.9010002@joreybump.com>
	<20061006164603.GA11578@EIS>
	<CC601EC9-B5EA-4370-8341-35AAB5F607C0@dscpl.com.au>
	<20061007015333.GA16047@EIS>
Message-ID: <28f0f01f0610091631r35f7ab05v2029b9b822d532c9@mail.gmail.com>

> > Before I try and address that I would ask why you are trying to perhaps
> > reinvent the wheel as others have already solved this problem.
>
> It's probably hard not to reinvent the wheel when what you want is
> something as trivial as a telnet web application frontend, um, thingy.
> I want it to be small, lightweight, and specifically adapted for my needs,
> that is the sole reason why I am doing it.

Maybe it's better for you to NOT use Apache then. There are plenty of
plain python http servers out there.
From durumdara at gmail.com  Tue Oct 10 03:52:51 2006
From: durumdara at gmail.com (durumdara)
Date: Tue Oct 10 03:52:57 2006
Subject: [mod_python] Restricted area - how to protect passwords ?
Message-ID: <452B5153.4050107@gmail.com>

Hi !

I need to use restricted areas.
The user can login by a common usr/pwd form.

But I want to protect the password. Basically the data/content is 
travelling in uncoded form on the net.
If anyone use an interceptor utility, he/she can see the user names, and 
passwords too...

I know that banks are used https (ssl) for avoid auth. problems.

The gmail is use very simple https/ssl trick - it is use this slow 
method for login only, and later it use normal http connection.

First question:
Anyone knows about a method that I can safely use for password protection ?

Next:
If not, how to build a simple https subsite to login safely (after this 
I will use normal http).

Thank you very much for your help:
dd
From waitman at waitman.net  Tue Oct 10 04:17:13 2006
From: waitman at waitman.net (Waitman Gobble)
Date: Tue Oct 10 04:04:17 2006
Subject: [mod_python] Restricted area - how to protect passwords ?
In-Reply-To: <452B5153.4050107@gmail.com>
References: <452B5153.4050107@gmail.com>
Message-ID: <452B5709.1090904@waitman.net>


Hi,

Take a look at how Yahoo mail login works... (the javascript)

i think they use a LGPL library if my memory isn't totally faulty....

Take care,

Waitman






durumdara wrote:
> Hi !
>
> I need to use restricted areas.
> The user can login by a common usr/pwd form.
>
> But I want to protect the password. Basically the data/content is 
> travelling in uncoded form on the net.
> If anyone use an interceptor utility, he/she can see the user names, 
> and passwords too...
>
> I know that banks are used https (ssl) for avoid auth. problems.
>
> The gmail is use very simple https/ssl trick - it is use this slow 
> method for login only, and later it use normal http connection.
>
> First question:
> Anyone knows about a method that I can safely use for password 
> protection ?
>
> Next:
> If not, how to build a simple https subsite to login safely (after 
> this I will use normal http).
>
> Thank you very much for your help:
> dd
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python

From durumdara at gmail.com  Tue Oct 10 04:26:31 2006
From: durumdara at gmail.com (durumdara)
Date: Tue Oct 10 04:26:38 2006
Subject: [mod_python] Restricted area - how to protect passwords ?
In-Reply-To: <452B5709.1090904@waitman.net>
References: <452B5153.4050107@gmail.com> <452B5709.1090904@waitman.net>
Message-ID: <452B5937.4060405@gmail.com>

Hi !

Apache is not supports the MD5 or other hash based passwords ?
I think that I see this in an OReilly's apache book. But possible I know 
it wrong...

dd

Waitman Gobble ?rta:
>
> Hi,
>
> Take a look at how Yahoo mail login works... (the javascript)
>
> i think they use a LGPL library if my memory isn't totally faulty....
>
> Take care,
>
> Waitman
>
>
>
>
>
>
> durumdara wrote:
>> Hi !
>>
>> I need to use restricted areas.

From sdavis2 at mail.nih.gov  Tue Oct 10 02:43:12 2006
From: sdavis2 at mail.nih.gov (Sean Davis)
Date: Tue Oct 10 06:43:23 2006
Subject: [mod_python] Restricted area - how to protect passwords ?
In-Reply-To: <452B5937.4060405@gmail.com>
References: <452B5153.4050107@gmail.com> <452B5709.1090904@waitman.net>
	<452B5937.4060405@gmail.com>
Message-ID: <200610100643.13049.sdavis2@mail.nih.gov>

On Tuesday 10 October 2006 08:26, durumdara wrote:
> Hi !
>
> Apache is not supports the MD5 or other hash based passwords ?
> I think that I see this in an OReilly's apache book. But possible I know
> it wrong...

You'll need to either encrypt the password before it is sent using javascript 
or use Digest authentication.  The latter is supported by apache.  The former 
is something that you would need to write (or use someone else's code).

Sean
From sdavis2 at mail.nih.gov  Tue Oct 10 02:46:34 2006
From: sdavis2 at mail.nih.gov (Sean Davis)
Date: Tue Oct 10 06:46:43 2006
Subject: [mod_python] Restricted area - how to protect passwords ?
In-Reply-To: <452B5153.4050107@gmail.com>
References: <452B5153.4050107@gmail.com>
Message-ID: <200610100646.34729.sdavis2@mail.nih.gov>

On Tuesday 10 October 2006 07:52, durumdara wrote:
> Hi !
>
> I need to use restricted areas.
> The user can login by a common usr/pwd form.
>
> But I want to protect the password. Basically the data/content is
> travelling in uncoded form on the net.
> If anyone use an interceptor utility, he/she can see the user names, and
> passwords too...
>
> I know that banks are used https (ssl) for avoid auth. problems.
>
> The gmail is use very simple https/ssl trick - it is use this slow
> method for login only, and later it use normal http connection.
>
> First question:
> Anyone knows about a method that I can safely use for password protection ?
>
> Next:
> If not, how to build a simple https subsite to login safely (after this
> I will use normal http).

You'll need to set up ssl for your server.

http://httpd.apache.org/docs/2.0/ssl/

Sean
From andrewjwilkinson at gmail.com  Tue Oct 10 11:36:44 2006
From: andrewjwilkinson at gmail.com (Andrew Wilkinson)
Date: Tue Oct 10 11:36:48 2006
Subject: [mod_python] No module named _md5
Message-ID: <71ff0e500610100836k46975f82g82dff03596395267@mail.gmail.com>

Hi,

I recently upgraded to Python 2.5 but since then my mod_python application
has stopped worked. I recieve the following error:

Mod_python error: "PythonHandler handler"
Traceback (most recent call last):
  File "/usr/lib/python2.5/site-packages/mod_python/apache.py", line 287, in
HandlerDispatch
    log=debug)
  File "/usr/lib/python2.5/site-packages/mod_python/apache.py", line 464, in
import_module
    module = imp.load_module(mname, f, p, d)
  File "/var/www/indiegigs/src/handler.py", line 9, in
    from pages.login import check_cookie
  File "/var/www/indiegigs/src/pages/login.py", line 8, in
    from hashlib import md5
  File "/usr/lib64/python2.5/hashlib.py", line 104, in
    md5 = __get_builtin_constructor('md5')
  File "/usr/lib64/python2.5/hashlib.py", line 31, in
__get_builtin_constructor
    import _md5
ImportError: No module named _md5

Does anyone know the solution to my problem?

Regards,
Andrew
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20061010/a94f95cc/attachment-0001.html
From bluszcz at jabberpl.org  Tue Oct 10 14:03:47 2006
From: bluszcz at jabberpl.org (Rafal Zawadzki)
Date: Tue Oct 10 14:04:05 2006
Subject: [mod_python] No module named _md5
In-Reply-To: <71ff0e500610100836k46975f82g82dff03596395267@mail.gmail.com>
References: <71ff0e500610100836k46975f82g82dff03596395267@mail.gmail.com>
Message-ID: <200610102003.47801.bluszcz@jabberpl.org>


> ImportError: No module named _md5
>
> Does anyone know the solution to my problem?

Propably this will help you :)

http://docs.python.org/whatsnew/modules.html#SECTION0001430000000000000000

If not - please write, then we'll help.

-- 
 __     __   Rafa? Zawadzki [jid/mail: bluszcz@jabberpl.org, skype: blvszcz]
|  |--.|  |.--.--.-----.-----.----.-----. [www: http://bluszcz.jabberpl.org]
|  _  ||  ||  |  |__ --|-- __|  __|-- __| [ http://pyrss.jabberstudio.org/ ]
|_____||__||_____|_____|_____|____|_____| [  http://glam.pl ciuchy vintage ]
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 191 bytes
Desc: not available
Url : http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20061010/df59afe2/attachment.bin
From andrewjwilkinson at gmail.com  Tue Oct 10 14:44:56 2006
From: andrewjwilkinson at gmail.com (Andrew Wilkinson)
Date: Tue Oct 10 14:45:00 2006
Subject: [mod_python] No module named _md5
In-Reply-To: <71ff0e500610101144u58af94a5ieb81e722d65fd3fa@mail.gmail.com>
References: <71ff0e500610100836k46975f82g82dff03596395267@mail.gmail.com>
	<200610102003.47801.bluszcz@jabberpl.org>
	<71ff0e500610101144u58af94a5ieb81e722d65fd3fa@mail.gmail.com>
Message-ID: <71ff0e500610101144g9906960j6b9d506afe41f9b4@mail.gmail.com>

On 10/10/06, Rafal Zawadzki <bluszcz@jabberpl.org> wrote:

> If not - please write, then we'll help.
>

Hi,

Thanks for the reply. I am aware of the change, and the traceback starts in
the new hashlib module. I should have mentioned that I can perform the
import fine in the normal Python interpreter, it's only when run as code in
mod_python that it raises an ImportError.

Regards,
Andrew
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20061010/20f743d7/attachment.html
From pfunix at gmail.com  Tue Oct 10 17:22:12 2006
From: pfunix at gmail.com (edgar mortiz)
Date: Tue Oct 10 17:23:15 2006
Subject: [mod_python] trying python publisher
Message-ID: <e02ea4ef0610101422x5f9d200etd2858956b6f05c97@mail.gmail.com>

hi guys,

   I tried out the publisher feature on mod_python and did the
following instructions on

http://www.modpython.org/live/current/doc-html/tut-pub.html

but i got this error in the end, can anyone help me out on what's
missing? thanks.

here's my specs:

Python 2.3.5
mod_python-3.2.10
Apache-2.0.59
OpenBSD

thanks in advance

-------------- Error ----
Mod_python error: "PythonHandler mod_python.publisher"

Traceback (most recent call last):

  File "/usr/local/lib/python2.3/site-packages/mod_python/apache.py",
line 299, in HandlerDispatch
    result = object(req)

  File "/usr/local/lib/python2.3/site-packages/mod_python/publisher.py",
line 204, in handler
    module = page_cache[req]

  File "/usr/local/lib/python2.3/site-packages/mod_python/cache.py",
line 82, in __getitem__
    return self._checkitem(name)[2]

  File "/usr/local/lib/python2.3/site-packages/mod_python/cache.py",
line 124, in _checkitem
    value = self.build(key, name, opened, entry)

  File "/usr/local/lib/python2.3/site-packages/mod_python/publisher.py",
line 77, in build
    return ModuleCache.build(self, key, req, opened, entry)

  File "/usr/local/lib/python2.3/site-packages/mod_python/cache.py",
line 371, in build
    exec opened in module.__dict__

  File "/apache/htdocs/publisher/form.py", line 24

    conn = smtplib.SMTP(SMTP_SERVER)

    ^

SyntaxError: invalid syntax
From durumdara at gmail.com  Wed Oct 11 04:09:24 2006
From: durumdara at gmail.com (durumdara)
Date: Wed Oct 11 04:09:31 2006
Subject: [mod_python] PyDoc and mod_python
Message-ID: <452CA6B4.6030405@gmail.com>

Hi !

I need to write documentation for my mod_python website, for the base
classes, functions, modules.
The problem, that mod_python is imported "apache" that not existing in
the normal, pythonic way (only in Apache).

If my source is containing a tag that use this module, or it's
submodule, the pydoc is not working.

### test.py ###
from mod_python import apache
...

The result is.
c:\>c:\python24\Lib\pydoc.py c:\test.py
problem in c:\test.py - ImportError: No module named _apache

So I need a cheat, or I need to force the pydoc to avoid to parse these
modules...

Is anybody have an experience, how can I do it ?

Thanks for it:
dd

From grahamd at dscpl.com.au  Wed Oct 11 04:25:48 2006
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Wed Oct 11 04:25:42 2006
Subject: [mod_python] PyDoc and mod_python
In-Reply-To: <452CA6B4.6030405@gmail.com>
References: <452CA6B4.6030405@gmail.com>
Message-ID: <1904f2c85b1bc183528f837065c41ea7@dscpl.com.au>

Put a module file called _apache.py in the directory where you run
the program so it finds that. You may need to then put empty stubs
in that if it needs to satisfy references to stuff in it. In other
words dummy up a fake module.

Graham

On 11/10/2006, at 6:09 PM, durumdara wrote:

> Hi !
>
> I need to write documentation for my mod_python website, for the base
> classes, functions, modules.
> The problem, that mod_python is imported "apache" that not existing in
> the normal, pythonic way (only in Apache).
>
> If my source is containing a tag that use this module, or it's
> submodule, the pydoc is not working.
>
> ### test.py ###
> from mod_python import apache
> ...
>
> The result is.
> c:\>c:\python24\Lib\pydoc.py c:\test.py
> problem in c:\test.py - ImportError: No module named _apache
>
> So I need a cheat, or I need to force the pydoc to avoid to parse these
> modules...
>
> Is anybody have an experience, how can I do it ?
>
> Thanks for it:
> dd
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
From andrewjwilkinson at gmail.com  Wed Oct 11 04:54:41 2006
From: andrewjwilkinson at gmail.com (Andrew Wilkinson)
Date: Wed Oct 11 04:55:17 2006
Subject: [mod_python] No module named _md5
In-Reply-To: <200610102050.03021.bluszcz@jabberpl.org>
References: <71ff0e500610100836k46975f82g82dff03596395267@mail.gmail.com>
	<200610102003.47801.bluszcz@jabberpl.org>
	<71ff0e500610101144u58af94a5ieb81e722d65fd3fa@mail.gmail.com>
	<200610102050.03021.bluszcz@jabberpl.org>
Message-ID: <71ff0e500610110154s76c487e4o61876d0df405f2dd@mail.gmail.com>

I have reduced my code to the following test case:

from hashlib import md5

def handler(req):
    req.content_type = "text/plain"
    req.write(md5("hello").hexdigest())

which produces the following traceback:

Mod_python error: "PythonHandler handler"
Traceback (most recent call last):
  File "/usr/lib/python2.5/site-packages/mod_python/apache.py", line 287, in
HandlerDispatch
    log=debug)
  File "/usr/lib/python2.5/site-packages/mod_python/apache.py", line 464, in
import_module
    module = imp.load_module(mname, f, p, d)
  File "/var/www/indiegigs/src/handler.py", line 3, in
    from hashlib import md5
  File "/usr/lib64/python2.5/hashlib.py", line 104, in
    md5 = __get_builtin_constructor('md5')
  File "/usr/lib64/python2.5/hashlib.py", line 31, in
__get_builtin_constructor
    import _md5
ImportError: No module named _md5


Regards,
Andrew
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20061011/4612fb07/attachment.html
From grahamd at dscpl.com.au  Wed Oct 11 05:48:22 2006
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Wed Oct 11 05:49:37 2006
Subject: [mod_python] No module named _md5
In-Reply-To: <71ff0e500610110154s76c487e4o61876d0df405f2dd@mail.gmail.com>
References: <71ff0e500610100836k46975f82g82dff03596395267@mail.gmail.com>
	<200610102003.47801.bluszcz@jabberpl.org>
	<71ff0e500610101144u58af94a5ieb81e722d65fd3fa@mail.gmail.com>
	<200610102050.03021.bluszcz@jabberpl.org>
	<71ff0e500610110154s76c487e4o61876d0df405f2dd@mail.gmail.com>
Message-ID: <C28D6E16-FEB7-4307-9B4C-57F0A5861347@dscpl.com.au>

Add at the very start of the module:

   from mod_python import apache
   apache.log_error('path=%s' % sys.path)

Look in the Apache error log file to see what sys.path is. Look through
those directories listed to see if one includes _md5module.so  or  
_m5.so.
If it is, make sure permissions have it as readable to others as Apache
will run as special user normally and may not be able to read it if  
it is
something else.

Graham


On 11/10/2006, at 6:54 PM, Andrew Wilkinson wrote:

> I have reduced my code to the following test case:
>
> from hashlib import md5
>
> def handler(req):
>     req.content_type = "text/plain"
>     req.write(md5("hello").hexdigest())
>
> which produces the following traceback:
>
> Mod_python error: "PythonHandler handler"
> Traceback (most recent call last):
>   File "/usr/lib/python2.5/site-packages/mod_python/apache.py",  
> line 287, in HandlerDispatch
>     log=debug)
>   File "/usr/lib/python2.5/site-packages/mod_python/apache.py",  
> line 464, in import_module
>     module = imp.load_module(mname, f, p, d)
>   File "/var/www/indiegigs/src/handler.py", line 3, in
>     from hashlib import md5
>   File "/usr/lib64/python2.5/hashlib.py", line 104, in
>     md5 = __get_builtin_constructor('md5')
>   File "/usr/lib64/python2.5/hashlib.py", line 31, in  
> __get_builtin_constructor
>     import _md5
> ImportError: No module named _md5
>
>
> Regards,
> Andrew
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
From andrewjwilkinson at gmail.com  Wed Oct 11 06:37:28 2006
From: andrewjwilkinson at gmail.com (Andrew Wilkinson)
Date: Wed Oct 11 06:38:04 2006
Subject: [mod_python] No module named _md5
In-Reply-To: <C28D6E16-FEB7-4307-9B4C-57F0A5861347@dscpl.com.au>
References: <71ff0e500610100836k46975f82g82dff03596395267@mail.gmail.com>
	<200610102003.47801.bluszcz@jabberpl.org>
	<71ff0e500610101144u58af94a5ieb81e722d65fd3fa@mail.gmail.com>
	<200610102050.03021.bluszcz@jabberpl.org>
	<71ff0e500610110154s76c487e4o61876d0df405f2dd@mail.gmail.com>
	<C28D6E16-FEB7-4307-9B4C-57F0A5861347@dscpl.com.au>
Message-ID: <71ff0e500610110337x5111d799y3eccbd7626805145@mail.gmail.com>

Hi,

I solved the problem, all that was required was a recompile of Apache.
Python was linked to a later version of OpenSSL than Apache was.

It works fine now.

Thanks for your help :-)

Regards,
Andrew
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20061011/63c1c9c8/attachment.html
From jpg at jgassociates.ca  Wed Oct 11 07:57:26 2006
From: jpg at jgassociates.ca (Jim Gallacher)
Date: Wed Oct 11 07:57:33 2006
Subject: [mod_python] trying python publisher
In-Reply-To: <e02ea4ef0610101422x5f9d200etd2858956b6f05c97@mail.gmail.com>
References: <e02ea4ef0610101422x5f9d200etd2858956b6f05c97@mail.gmail.com>
Message-ID: <452CDC26.5040800@jgassociates.ca>

edgar mortiz wrote:
> hi guys,
> 
>   I tried out the publisher feature on mod_python and did the
> following instructions on
> 
> http://www.modpython.org/live/current/doc-html/tut-pub.html
> 
> but i got this error in the end, can anyone help me out on what's
> missing? thanks.
> 
> here's my specs:
> 
> Python 2.3.5
> mod_python-3.2.10
> Apache-2.0.59
> OpenBSD
> 
> thanks in advance
> 
> -------------- Error ----
> Mod_python error: "PythonHandler mod_python.publisher"
> 
> Traceback (most recent call last):
> 
>  File "/usr/local/lib/python2.3/site-packages/mod_python/apache.py",
> line 299, in HandlerDispatch
>    result = object(req)
> 
>  File "/usr/local/lib/python2.3/site-packages/mod_python/publisher.py",
> line 204, in handler
>    module = page_cache[req]
> 
>  File "/usr/local/lib/python2.3/site-packages/mod_python/cache.py",
> line 82, in __getitem__
>    return self._checkitem(name)[2]
> 
>  File "/usr/local/lib/python2.3/site-packages/mod_python/cache.py",
> line 124, in _checkitem
>    value = self.build(key, name, opened, entry)
> 
>  File "/usr/local/lib/python2.3/site-packages/mod_python/publisher.py",
> line 77, in build
>    return ModuleCache.build(self, key, req, opened, entry)
> 
>  File "/usr/local/lib/python2.3/site-packages/mod_python/cache.py",
> line 371, in build
>    exec opened in module.__dict__
> 
>  File "/apache/htdocs/publisher/form.py", line 24
> 
>    conn = smtplib.SMTP(SMTP_SERVER)
> 
>    ^
> 
> SyntaxError: invalid syntax

There is likely a problem with your syntax in form.py, just above line 24.

Jim

From fred at adventistcare.org  Wed Oct 11 11:43:01 2006
From: fred at adventistcare.org (Sells, Fred)
Date: Wed Oct 11 11:34:47 2006
Subject: [mod_python] newbie cookie confusion
Message-ID: <1A4BF05172023E468CB6E867923BC90402B6E2D9@accmail2.sunbelt.org>

Thanks to both Graham and Scott, I had a careless error in my python where I
was getting a list of cookie keys from the dict and not the cookies.  oops
:(

-----Original Message-----
From: Graham Dumpleton ...



Sells, Fred wrote ..
> I am using the mod_python.publisher; could that mess me up with cookies
> somehow?
> I'm just trying to get the basic demo from the manual to work.
> 
> I notice the manual writes a plain cookie but reads a marshall cookie.
> Am I
> correct in assuming these are not compatible cookies, and you had better
> read the type you wrote?

What is the actual problem you are having. Someone already pointed out
what you were probably doing wrong after your first post. That is that
the result of Cookie.get_cookies() is a dictionary. You were not using the
value (cookie) from the dictionary, but the key (name of cookie) which is
a string.

Change your test program to use:

    for c in cookies.values():
        s += '\n%s %s' % (str(c), type(c))

and you will see the actual cookies read back. You still need to access
the name and value attributes of the cookie to get the decoded value.

In terms of the example in the documentation, the two examples should
be seen as distinct and not as working together. In the second example
it itself sets up the MarshalCookie if it wasn't there to begin with.

As far as not getting the examples to work, are you using them exactly
as in the documentation, or have you used it merely as a guide to write
your own code?

In the event that cookies cached in the browser are the cause of any
problems, are you deleting from your browser cache any specific cookie
used by the test code?

Graham

> Sells, Fred wrote:
> > I've googled but not found this, trying to do cookie example from docs.
> The
> > output is always of type <type 'str'> and is the cookie name.  How do
> I
> get
> > value?
> > 
> > 
> > 
> > def makecookie(req):
> >     c = Cookie.MarshalCookie('spam', 'eggs', 'secret007')
> >     d = Cookie.MarshalCookie('xxxx', 'yyy', 'secret007')
> >     Cookie.add_cookie(req, c)
> >     Cookie.add_cookie(req, d)
> >     return 'cookie made'
> > 
> > def showcookies(req):
> >     cookies = Cookie.get_cookies(req, Cookie.MarshalCookie,
> > secret='secret007')
> >     s = 'There are %s cookies'% len(cookies)
> >     for c in cookies:
> >         s += '\n%s %s' % (str(c), type(c))
> >     return s
> > 
> 
> I haven't been through the docs but I'd suggest that you have a look at
> cookies[c] in case cookies is a dictionary.
> 
> Scott

From fred at adventistcare.org  Wed Oct 11 13:10:34 2006
From: fred at adventistcare.org (Sells, Fred)
Date: Wed Oct 11 14:03:03 2006
Subject: [mod_python] newbie filter won't work
Message-ID: <1A4BF05172023E468CB6E867923BC90402B6E2DA@accmail2.sunbelt.org>

I'm new to mod_python and to apache config.

I would like to setup a master security "trap" that intercepts all .py urls
and then  check for a cookie, and if it exists, I send it to the legacy
server which should respond with the user name.  Most of our web stuff is on
that legacy server and it has it's own security model that is outside my
responsibility.  If the cookie doesn't exist, I redirect to our standard
login page.

It doesn't look like I can use the Apache Basic authentication, since that
gives me the Apache login popup.  I tried input filter, but can't get it to
work.  Can anyone show what I'm doing wrong?  my setup is...

-----------httpd.conf---------------------------------
<Directory "/var/www/html/modpytest">
        AddHandler mod_python .py
        PythonHandler form
#       PythonHandler mod_python.publisher
        PythonInputFilter security SECURITY
        AddInputFilter SECURITY .py
        PythonDebug On
</Directory>


-------------form.py------------------------------
from mod_python import apache
from mod_python import Cookie
from mod_python import Session
import urllib2

def handler(req):
    apache.log_error('in handler')
    req.content_type = "text/plain"
    text = "basic handler works"
    text += '\ndir(req) = ' 				+ str( dir(req))
    text += '\nget_config returns %s' 		% req.get_config()
    text += '\nget_remote_host() returns %s' 	% req.get_remote_host()
    text += '\nreq.the_request %s' 			% req.the_request
    text += '\nreq.unparsed_uri %s' 		% req.unparsed_uri
    text += '\nreeq.uri %s' 				% req.uri
    text += '\nreq.args = ' 			+ str(req.args) +'
'+str(type(req.args))
    req.write(text)
    return apache.OK

------------------security.py-----------------------
from mod_python import apache

def inputfilter(filter):
    apache.log_error("inputfilter called")
    s = filter.read()
    while s:
        filter.write(s.upper())
        s = filter.read()
    if s is None:
        filter.close() 

---------------------------------------------------------------------------
The information contained in this message may be privileged and / or
confidential and protected from disclosure. If the reader of this message is
not the intended recipient, you are hereby notified that any dissemination,
distribution or copying of this communication is strictly prohibited. If you
have received this communication in error, please notify the sender
immediately by replying to this message and deleting the material from any
computer.
---------------------------------------------------------------------------

From grahamd at dscpl.com.au  Wed Oct 11 19:00:42 2006
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Wed Oct 11 19:01:09 2006
Subject: [mod_python] newbie filter won't work
Message-ID: <1160607642.6422@dscpl.user.openhosting.com>

Sells, Fred wrote ..
> I'm new to mod_python and to apache config.
> 
> I would like to setup a master security "trap" that intercepts all .py
> urls
> and then  check for a cookie, and if it exists, I send it to the legacy
> server which should respond with the user name.  Most of our web stuff
> is on
> that legacy server and it has it's own security model that is outside my
> responsibility.  If the cookie doesn't exist, I redirect to our standard
> login page.
> 
> It doesn't look like I can use the Apache Basic authentication, since that
> gives me the Apache login popup.  I tried input filter, but can't get it
> to
> work.  Can anyone show what I'm doing wrong?  my setup is...
> 
> -----------httpd.conf---------------------------------
> <Directory "/var/www/html/modpytest">
>         AddHandler mod_python .py
>         PythonHandler form
> #       PythonHandler mod_python.publisher
>         PythonInputFilter security SECURITY
>         AddInputFilter SECURITY .py
>         PythonDebug On
> </Directory>
> 
> 
> -------------form.py------------------------------
> from mod_python import apache
> from mod_python import Cookie
> from mod_python import Session
> import urllib2
> 
> def handler(req):
>     apache.log_error('in handler')
>     req.content_type = "text/plain"
>     text = "basic handler works"
>     text += '\ndir(req) = ' 				+ str( dir(req))
>     text += '\nget_config returns %s' 		% req.get_config()
>     text += '\nget_remote_host() returns %s' 	% req.get_remote_host()
>     text += '\nreq.the_request %s' 			% req.the_request
>     text += '\nreq.unparsed_uri %s' 		% req.unparsed_uri
>     text += '\nreeq.uri %s' 				% req.uri
>     text += '\nreq.args = ' 			+ str(req.args) +'
> '+str(type(req.args))
>     req.write(text)
>     return apache.OK
> 
> ------------------security.py-----------------------
> from mod_python import apache
> 
> def inputfilter(filter):
>     apache.log_error("inputfilter called")
>     s = filter.read()
>     while s:
>         filter.write(s.upper())
>         s = filter.read()
>     if s is None:
>         filter.close() 

A filter is not the way to be doing this. Instead, probably best to use a
headerparserhandler(). Thus:

 <Directory "/var/www/html/modpytest">
         AddHandler mod_python .py
         PythonHeaderParserHandler cookiecheck
         PythonHandler mod_python.publisher
         PythonDebug On
 </Directory>

The cookiecheck module handler would be written as:

  from mod_python import apache
  import posixpath

  def headerparserhandler(req):
    ext = posixpath.path.split(req.filename)[1]
    if ext != '.py':
      return apache.OK

    # check for existence of required cookie

    if have_cookie:
      return apache.OK

    req.status = apache.HTTP_MOVED_TEMPORARILY
    req.err_headers_out["Location"] = 'http://somehost/some/url'
    # other stuff so that other site know where to redirect back to

    req.write('some informative text in case browser redirect is not prompt')
    return apache.DONE

Note that I have avoided using util.redirect() as will not work in mod_python
<3.3 in phases earlier than response handler.

Graham
From pf_moore at yahoo.co.uk  Thu Oct 12 06:33:58 2006
From: pf_moore at yahoo.co.uk (Paul Moore)
Date: Thu Oct 12 06:34:02 2006
Subject: [mod_python] Python 2.5 binaries for Windows
Message-ID: <20061012103359.40921.qmail@web25903.mail.ukl.yahoo.com>

I've hit the usual problem - new release of Python, no way to build mod_python binaries :-(

Has anyone built Python 2.5/Apache 2.0 binaries for mod_python yet? If not, is there an ETA for them?

Or, so that I can help myself rather than relying on others, can anyone tell me how I would go about building my own mod_python binaries from scratch, given:
  - Python binary distribution (I can build Python from source, if needed, but I'd rather not as it's a pain)
  - Apache binary distribution (I cannot build Apache for myself - IIRC, last time I tried, it needed Visual Studio, which I don't have)
  - Either mingw, or the Free command line MS Toolkit compiler 7.1. I'm assuming the free Visual Studio 2005 version won't work, as it doesn't build binaries which are compatible with the released Python binaries.

Thanks in advance,
Paul.



Send instant messages to your online friends http://uk.messenger.yahoo.com 

From grahamd at dscpl.com.au  Thu Oct 12 06:43:49 2006
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Thu Oct 12 06:43:56 2006
Subject: [mod_python] Python 2.5 binaries for Windows
In-Reply-To: <20061012103359.40921.qmail@web25903.mail.ukl.yahoo.com>
References: <20061012103359.40921.qmail@web25903.mail.ukl.yahoo.com>
Message-ID: <C0039D6B-65A9-4167-9A5F-43599EFCD30E@dscpl.com.au>

Try:

   http://www.modpython.org/pipermail/mod_python/2006-September/ 
022092.html

Adapt as necessary for the tools you are using.

Graham

On 12/10/2006, at 8:33 PM, Paul Moore wrote:

> I've hit the usual problem - new release of Python, no way to build  
> mod_python binaries :-(
>
> Has anyone built Python 2.5/Apache 2.0 binaries for mod_python yet?  
> If not, is there an ETA for them?
>
> Or, so that I can help myself rather than relying on others, can  
> anyone tell me how I would go about building my own mod_python  
> binaries from scratch, given:
>   - Python binary distribution (I can build Python from source, if  
> needed, but I'd rather not as it's a pain)
>   - Apache binary distribution (I cannot build Apache for myself -  
> IIRC, last time I tried, it needed Visual Studio, which I don't have)
>   - Either mingw, or the Free command line MS Toolkit compiler 7.1.  
> I'm assuming the free Visual Studio 2005 version won't work, as it  
> doesn't build binaries which are compatible with the released  
> Python binaries.
>
> Thanks in advance,
> Paul.
>
>
>
> Send instant messages to your online friends http:// 
> uk.messenger.yahoo.com
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python

From pf_moore at yahoo.co.uk  Thu Oct 12 07:03:14 2006
From: pf_moore at yahoo.co.uk (Paul Moore)
Date: Thu Oct 12 07:03:25 2006
Subject: [mod_python] Python 2.5 binaries for Windows
Message-ID: <20061012110314.57233.qmail@web25907.mail.ukl.yahoo.com>

From: Graham Dumpleton <grahamd@dscpl.com.au>
> Try:
> 
>   http://www.modpython.org/pipermail/mod_python/2006-September/022092.html
>
> Adapt as necessary for the tools you are using.

Excellent! Thanks for that, and my apologies for missing it when I searched the archives.

Paul.




Send instant messages to your online friends http://uk.messenger.yahoo.com 

From fred at adventistcare.org  Thu Oct 12 08:55:55 2006
From: fred at adventistcare.org (Sells, Fred)
Date: Thu Oct 12 08:58:17 2006
Subject: [mod_python] MySQLDb or SQLObject connection pooling snippet wanted
Message-ID: <1A4BF05172023E468CB6E867923BC90402B6E2DE@accmail2.sunbelt.org>

Currently using mod_python 3.1.x and Apache 2.x.  Could upgrade mod_python
if we must, but this is what apt-get gives us.

I would like to implement connection pooling for the MySQL database.  Based
on the application requirements, we vary between MySQLDb and SQLObject.

The only reference I've found so far is jonpy.sourceforge.net Does anyone
have any "better" modules or any experience with this one?

---------------------------------------------------------------------------
The information contained in this message may be privileged and / or
confidential and protected from disclosure. If the reader of this message is
not the intended recipient, you are hereby notified that any dissemination,
distribution or copying of this communication is strictly prohibited. If you
have received this communication in error, please notify the sender
immediately by replying to this message and deleting the material from any
computer.
---------------------------------------------------------------------------

From nicolas at lehuen.com  Thu Oct 12 08:47:55 2006
From: nicolas at lehuen.com (Nicolas Lehuen)
Date: Thu Oct 12 08:58:38 2006
Subject: [mod_python] Python 2.5 binaries for Windows
In-Reply-To: <20061012110314.57233.qmail@web25907.mail.ukl.yahoo.com>
References: <20061012110314.57233.qmail@web25907.mail.ukl.yahoo.com>
Message-ID: <c298f2d70610120547t2906e4b7i4ca2e8c4801705cf@mail.gmail.com>

Hi Paul,

I have built binaries for Python 2.5 and Apache 2.0 and 2.2 :

http://nicolas.lehuen.com/download/mod_python

Do make sure that you download the version that matches your Apache version,
as they are incompatible.

I've ran the unit test successfully except for the two known failures
related to server.register_cleanup and apache.register_cleanup, so those
binaries can be officially released. Grisha, if you read this, would you
please upload them to the Apache download system ?

Best regards,
Nicolas

2006/10/12, Paul Moore <pf_moore@yahoo.co.uk>:
>
> From: Graham Dumpleton <grahamd@dscpl.com.au>
> > Try:
> >
> >
> http://www.modpython.org/pipermail/mod_python/2006-September/022092.html
> >
> > Adapt as necessary for the tools you are using.
>
> Excellent! Thanks for that, and my apologies for missing it when I
> searched the archives.
>
> Paul.
>
>
>
>
> Send instant messages to your online friends http://uk.messenger.yahoo.com
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20061012/c0c2659e/attachment.html
From nicolas at lehuen.com  Thu Oct 12 08:47:55 2006
From: nicolas at lehuen.com (Nicolas Lehuen)
Date: Thu Oct 12 09:02:19 2006
Subject: [mod_python] Python 2.5 binaries for Windows
In-Reply-To: <20061012110314.57233.qmail@web25907.mail.ukl.yahoo.com>
References: <20061012110314.57233.qmail@web25907.mail.ukl.yahoo.com>
Message-ID: <c298f2d70610120547t2906e4b7i4ca2e8c4801705cf@mail.gmail.com>

Hi Paul,

I have built binaries for Python 2.5 and Apache 2.0 and 2.2 :

http://nicolas.lehuen.com/download/mod_python

Do make sure that you download the version that matches your Apache version,
as they are incompatible.

I've ran the unit test successfully except for the two known failures
related to server.register_cleanup and apache.register_cleanup, so those
binaries can be officially released. Grisha, if you read this, would you
please upload them to the Apache download system ?

Best regards,
Nicolas

2006/10/12, Paul Moore <pf_moore@yahoo.co.uk>:
>
> From: Graham Dumpleton <grahamd@dscpl.com.au>
> > Try:
> >
> >
> http://www.modpython.org/pipermail/mod_python/2006-September/022092.html
> >
> > Adapt as necessary for the tools you are using.
>
> Excellent! Thanks for that, and my apologies for missing it when I
> searched the archives.
>
> Paul.
>
>
>
>
> Send instant messages to your online friends http://uk.messenger.yahoo.com
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20061012/c0c2659e/attachment-0003.html
From nicolas at lehuen.com  Thu Oct 12 08:47:55 2006
From: nicolas at lehuen.com (Nicolas Lehuen)
Date: Thu Oct 12 09:24:41 2006
Subject: [mod_python] Python 2.5 binaries for Windows
In-Reply-To: <20061012110314.57233.qmail@web25907.mail.ukl.yahoo.com>
References: <20061012110314.57233.qmail@web25907.mail.ukl.yahoo.com>
Message-ID: <c298f2d70610120547t2906e4b7i4ca2e8c4801705cf@mail.gmail.com>

Hi Paul,

I have built binaries for Python 2.5 and Apache 2.0 and 2.2 :

http://nicolas.lehuen.com/download/mod_python

Do make sure that you download the version that matches your Apache version,
as they are incompatible.

I've ran the unit test successfully except for the two known failures
related to server.register_cleanup and apache.register_cleanup, so those
binaries can be officially released. Grisha, if you read this, would you
please upload them to the Apache download system ?

Best regards,
Nicolas

2006/10/12, Paul Moore <pf_moore@yahoo.co.uk>:
>
> From: Graham Dumpleton <grahamd@dscpl.com.au>
> > Try:
> >
> >
> http://www.modpython.org/pipermail/mod_python/2006-September/022092.html
> >
> > Adapt as necessary for the tools you are using.
>
> Excellent! Thanks for that, and my apologies for missing it when I
> searched the archives.
>
> Paul.
>
>
>
>
> Send instant messages to your online friends http://uk.messenger.yahoo.com
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20061012/c0c2659e/attachment-0004.html
From mvanaswegen at gmail.com  Thu Oct 12 09:21:13 2006
From: mvanaswegen at gmail.com (marinus van aswegen)
Date: Thu Oct 12 09:27:10 2006
Subject: [mod_python] Restricted area - how to protect passwords ?
In-Reply-To: <452E3014.4080607@gmail.com>
References: <452B5153.4050107@gmail.com>
	<ffa39deb0610100120w2eebcac9w19d34e96a08b42c@mail.gmail.com>
	<452E3014.4080607@gmail.com>
Message-ID: <ffa39deb0610120621h5b6438bfud068398b88e6a27f@mail.gmail.com>

Hi

I have no idea what your app looks like but lets imagine you have a app
called test.
I would setup two virtual hosts (80 and 443) to handle connections. the
index.html could redirect the user to test/login.py
if he connects to 80:test/login.py, get the session id, check if the user
has been authenticated by checking if there's an authenticated = true key in
the session object else
redirect to 443:test/login.py
again get the session id, check if the user is authed or new, if new ask for
a password.
if the user is authenticated, set the key and redirect.

I would suggest reading the doc to learn about sessions first.

M


On 10/12/06, durumdara <durumdara@gmail.com> wrote:
>
> HI !
>
> marinus van aswegen ?rta:
> > Hi
> >
> > I would create an mod_python application :443 to handle the login once
> > the user has been athenticated store the session id and redirect him
> > to the app running on :80 you should be able to tie up the user via
> > the session id.
> >
> > M
>
> As in google ?
> This is what I need to. When you will finished this work ?
>
> dd
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20061012/7d43678d/attachment.html
From listspam at flowtheory.net  Thu Oct 12 09:31:38 2006
From: listspam at flowtheory.net (Joshua "Jag" Ginsberg)
Date: Thu Oct 12 09:31:51 2006
Subject: [mod_python] MySQLDb or SQLObject connection pooling snippet
	wanted
In-Reply-To: <1A4BF05172023E468CB6E867923BC90402B6E2DE@accmail2.sunbelt.org>
References: <1A4BF05172023E468CB6E867923BC90402B6E2DE@accmail2.sunbelt.org>
Message-ID: <1160659899.4670.5.camel@localhost>

You're going to have difficulty with implementing a pure db connection
pooling solution simply b/c Apache is a forking webserver -- you can't
pass SQL connection objects between processes. If you're doing only one
thread per process, you can simply implement a connection object as a
Singleton class -- then it will get destroyed as the process gets
recycled. If you're doing multiple threads per process, you're going to
have to be a bit more clever.

I know it's sexy as hell to do connection pooling, but is DB connection
overhead really such a bottleneck for you? Folks who absolutely,
positively need the benefits of a shared-memory, multi-threaded,
thread-safe webserver usually pick something like AOLServer ("AOLServer
-- Heehee! It tickles!" -- sorry, bad joke).

-jag

On Thu, 2006-10-12 at 08:55 -0400, Sells, Fred wrote:
> Currently using mod_python 3.1.x and Apache 2.x.  Could upgrade mod_python
> if we must, but this is what apt-get gives us.
> 
> I would like to implement connection pooling for the MySQL database.  Based
> on the application requirements, we vary between MySQLDb and SQLObject.
> 
> The only reference I've found so far is jonpy.sourceforge.net Does anyone
> have any "better" modules or any experience with this one?
> 
> ---------------------------------------------------------------------------
> The information contained in this message may be privileged and / or
> confidential and protected from disclosure. If the reader of this message is
> not the intended recipient, you are hereby notified that any dissemination,
> distribution or copying of this communication is strictly prohibited. If you
> have received this communication in error, please notify the sender
> immediately by replying to this message and deleting the material from any
> computer.
> ---------------------------------------------------------------------------
> 
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python

From nicolas at lehuen.com  Thu Oct 12 08:47:55 2006
From: nicolas at lehuen.com (Nicolas Lehuen)
Date: Thu Oct 12 09:51:17 2006
Subject: [mod_python] Python 2.5 binaries for Windows
In-Reply-To: <20061012110314.57233.qmail@web25907.mail.ukl.yahoo.com>
References: <20061012110314.57233.qmail@web25907.mail.ukl.yahoo.com>
Message-ID: <c298f2d70610120547t2906e4b7i4ca2e8c4801705cf@mail.gmail.com>

Hi Paul,

I have built binaries for Python 2.5 and Apache 2.0 and 2.2 :

http://nicolas.lehuen.com/download/mod_python

Do make sure that you download the version that matches your Apache version,
as they are incompatible.

I've ran the unit test successfully except for the two known failures
related to server.register_cleanup and apache.register_cleanup, so those
binaries can be officially released. Grisha, if you read this, would you
please upload them to the Apache download system ?

Best regards,
Nicolas

2006/10/12, Paul Moore <pf_moore@yahoo.co.uk>:
>
> From: Graham Dumpleton <grahamd@dscpl.com.au>
> > Try:
> >
> >
> http://www.modpython.org/pipermail/mod_python/2006-September/022092.html
> >
> > Adapt as necessary for the tools you are using.
>
> Excellent! Thanks for that, and my apologies for missing it when I
> searched the archives.
>
> Paul.
>
>
>
>
> Send instant messages to your online friends http://uk.messenger.yahoo.com
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20061012/c0c2659e/attachment-0005.html
From pf_moore at yahoo.co.uk  Thu Oct 12 09:59:01 2006
From: pf_moore at yahoo.co.uk (Paul Moore)
Date: Thu Oct 12 09:59:08 2006
Subject: [mod_python] Python 2.5 binaries for Windows
Message-ID: <20061012135901.49939.qmail@web25905.mail.ukl.yahoo.com>

From: Nicolas Lehuen <nicolas@lehuen.com>
> I have built binaries for Python 2.5 and Apache 2.0 and 2.2 :
>
> http://nicolas.lehuen.com/download/mod_python
>
> Do make sure that you download the version that matches your Apache version, as they are incompatible.



Thanks. That's an enormous help.
Paul.



Send instant messages to your online friends http://uk.messenger.yahoo.com 
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20061012/326629ec/attachment.html
From fred at adventistcare.org  Thu Oct 12 08:55:55 2006
From: fred at adventistcare.org (Sells, Fred)
Date: Thu Oct 12 10:07:25 2006
Subject: [mod_python] MySQLDb or SQLObject connection pooling snippet wanted
Message-ID: <1A4BF05172023E468CB6E867923BC90402B6E2DE@accmail2.sunbelt.org>

Currently using mod_python 3.1.x and Apache 2.x.  Could upgrade mod_python
if we must, but this is what apt-get gives us.

I would like to implement connection pooling for the MySQL database.  Based
on the application requirements, we vary between MySQLDb and SQLObject.

The only reference I've found so far is jonpy.sourceforge.net Does anyone
have any "better" modules or any experience with this one?

---------------------------------------------------------------------------
The information contained in this message may be privileged and / or
confidential and protected from disclosure. If the reader of this message is
not the intended recipient, you are hereby notified that any dissemination,
distribution or copying of this communication is strictly prohibited. If you
have received this communication in error, please notify the sender
immediately by replying to this message and deleting the material from any
computer.
---------------------------------------------------------------------------

From fred at adventistcare.org  Thu Oct 12 10:15:42 2006
From: fred at adventistcare.org (Sells, Fred)
Date: Thu Oct 12 10:07:25 2006
Subject: [mod_python] MySQLDb or SQLObject connection pooling snippetw
	anted
Message-ID: <1A4BF05172023E468CB6E867923BC90402B6E2E1@accmail2.sunbelt.org>


You convinced me, I'm not enough of an Apache expert (yet) to start dealing
with forking/threads/etc.

most of our web stuff does not require the speed, given the level of effort
and the risk (of screwing up).

From: Joshua "Jag" Ginsberg wrote...


You're going to have difficulty with implementing a pure db connection
pooling solution simply b/c Apache is a forking webserver -- you can't
pass SQL connection objects between processes. If you're doing only one
thread per process, you can simply implement a connection object as a
Singleton class -- then it will get destroyed as the process gets
recycled. If you're doing multiple threads per process, you're going to
have to be a bit more clever.

I know it's sexy as hell to do connection pooling, but is DB connection
overhead really such a bottleneck for you? Folks who absolutely,
positively need the benefits of a shared-memory, multi-threaded,
thread-safe webserver usually pick something like AOLServer ("AOLServer
-- Heehee! It tickles!" -- sorry, bad joke).

-jag

On Thu, 2006-10-12 at 08:55 -0400, Sells, Fred wrote:
> Currently using mod_python 3.1.x and Apache 2.x.  Could upgrade mod_python
> if we must, but this is what apt-get gives us.
> 
> I would like to implement connection pooling for the MySQL database.
Based
> on the application requirements, we vary between MySQLDb and SQLObject.
> 
> The only reference I've found so far is jonpy.sourceforge.net Does anyone
> have any "better" modules or any experience with this one?
> 
>
---------------------------------------------------------------------------
> The information contained in this message may be privileged and / or
> confidential and protected from disclosure. If the reader of this message
is
> not the intended recipient, you are hereby notified that any
dissemination,
> distribution or copying of this communication is strictly prohibited. If
you
> have received this communication in error, please notify the sender
> immediately by replying to this message and deleting the material from any
> computer.
>
---------------------------------------------------------------------------
> 
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
From kmcloutier at gmail.com  Thu Oct 12 12:38:28 2006
From: kmcloutier at gmail.com (Kevin Cloutier)
Date: Thu Oct 12 12:38:32 2006
Subject: [mod_python] Install on windows box
Message-ID: <8a2ca4040610120938w3e401452teb7625ab1a9788b4@mail.gmail.com>

Hi,

I thought i was a relitivley intelligent person.  For wheter reason
mod_python is giving me the simplist, im sure, of problems.  I can not eve
figure out how to install it on my windows box running Apache Server.

I like that there are win32 install exe file available but when i run one it
tells me that a previous mod_python version is required and was not found in
the registry.

Very stupid question but what is the first steps i need to take to install
it on my windows box?

Thanks for any help.

Kevin
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20061012/d9de5547/attachment.html
From jpg at jgassociates.ca  Thu Oct 12 12:45:59 2006
From: jpg at jgassociates.ca (Jim Gallacher)
Date: Thu Oct 12 12:45:43 2006
Subject: [mod_python] Install on windows box
In-Reply-To: <8a2ca4040610120938w3e401452teb7625ab1a9788b4@mail.gmail.com>
References: <8a2ca4040610120938w3e401452teb7625ab1a9788b4@mail.gmail.com>
Message-ID: <452E7147.6080406@jgassociates.ca>

Kevin Cloutier wrote:
> Hi,
> 
> I thought i was a relitivley intelligent person.  For wheter reason
> mod_python is giving me the simplist, im sure, of problems.  I can not eve
> figure out how to install it on my windows box running Apache Server.
> 
> I like that there are win32 install exe file available but when i run 
> one it
> tells me that a previous mod_python version is required and was not 
> found in
> the registry.
> 
> Very stupid question but what is the first steps i need to take to install
> it on my windows box?
> 
> Thanks for any help.

What version of Apache are you using?
Which mod_python win32 installer?

Jim

From fred at adventistcare.org  Thu Oct 12 14:17:44 2006
From: fred at adventistcare.org (Sells, Fred)
Date: Thu Oct 12 14:39:46 2006
Subject: [mod_python] use publisher without .py file extension
Message-ID: <1A4BF05172023E468CB6E867923BC90402B6E2E7@accmail2.sunbelt.org>

I would like to be able to use the mod_python.publisher without requiring
using the .py suffix in my file.  The idea is to not disclose to the user
that python is being used as one more bit of security.

I tried it but it seems as if the mod_python import is expecting standard
python modules.

While I would like a generic solution, each "application" is in it's own
subdirectory and would have very few (hopefully 1) file that is the single
point of access to all backend logic.  Thus I could revise the apache .conf
file whenever a new application is added if I must.


---------------------------------------------------------------------------
The information contained in this message may be privileged and / or
confidential and protected from disclosure. If the reader of this message is
not the intended recipient, you are hereby notified that any dissemination,
distribution or copying of this communication is strictly prohibited. If you
have received this communication in error, please notify the sender
immediately by replying to this message and deleting the material from any
computer.
---------------------------------------------------------------------------

From nicolas at lehuen.com  Thu Oct 12 14:42:58 2006
From: nicolas at lehuen.com (Nicolas Lehuen)
Date: Thu Oct 12 14:43:01 2006
Subject: [mod_python] Install on windows box
In-Reply-To: <8a2ca4040610120938w3e401452teb7625ab1a9788b4@mail.gmail.com>
References: <8a2ca4040610120938w3e401452teb7625ab1a9788b4@mail.gmail.com>
Message-ID: <c298f2d70610121142y6658627at4c49e9634b19217c@mail.gmail.com>

I think it is telling you that a *Python* version is required but is not
found in the registry.

You need to install Python before installing mod_python. Be sure to select
the mod_python installer that matches both your Python version and your
Apache version.

If you are looking for a mod_python installer that support Python 2.5,
you've got one fresh from the oven at
http://nicolas.lehuen.com/download/mod_python . It hasn't made his way to
the official binaries repository but hopefully it will soon be there.

Of course, when posting questions to this mailing list, the first thing you
should do it tell us what is your OS version, your Apache version, your
Python version etc.

Regards,
Nicolas

2006/10/12, Kevin Cloutier <kmcloutier@gmail.com>:
>
> Hi,
>
> I thought i was a relitivley intelligent person.  For wheter reason
> mod_python is giving me the simplist, im sure, of problems.  I can not eve
> figure out how to install it on my windows box running Apache Server.
>
> I like that there are win32 install exe file available but when i run one
> it tells me that a previous mod_python version is required and was not found
> in the registry.
>
> Very stupid question but what is the first steps i need to take to install
> it on my windows box?
>
> Thanks for any help.
>
> Kevin
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20061012/ca391fc1/attachment.html
From pfunix at gmail.com  Thu Oct 12 14:51:05 2006
From: pfunix at gmail.com (edgar mortiz)
Date: Thu Oct 12 14:51:07 2006
Subject: [mod_python] use publisher without .py file extension
In-Reply-To: <1A4BF05172023E468CB6E867923BC90402B6E2E7@accmail2.sunbelt.org>
References: <1A4BF05172023E468CB6E867923BC90402B6E2E7@accmail2.sunbelt.org>
Message-ID: <e02ea4ef0610121151i7cb41a0v7f8cb693275102a3@mail.gmail.com>

check

http://modpython.org/FAQ/faqw.py?query=AddHandler&querytype=simple&casefold=yes&req=search

read section 2.17




On 10/12/06, Sells, Fred <fred@adventistcare.org> wrote:
> I would like to be able to use the mod_python.publisher without requiring
> using the .py suffix in my file.  The idea is to not disclose to the user
> that python is being used as one more bit of security.
>
> I tried it but it seems as if the mod_python import is expecting standard
> python modules.
>
> While I would like a generic solution, each "application" is in it's own
> subdirectory and would have very few (hopefully 1) file that is the single
> point of access to all backend logic.  Thus I could revise the apache .conf
> file whenever a new application is added if I must.
>
>
> ---------------------------------------------------------------------------
> The information contained in this message may be privileged and / or
> confidential and protected from disclosure. If the reader of this message is
> not the intended recipient, you are hereby notified that any dissemination,
> distribution or copying of this communication is strictly prohibited. If you
> have received this communication in error, please notify the sender
> immediately by replying to this message and deleting the material from any
> computer.
> ---------------------------------------------------------------------------
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>
From list at joreybump.com  Thu Oct 12 14:59:30 2006
From: list at joreybump.com (Jorey Bump)
Date: Thu Oct 12 14:59:35 2006
Subject: [mod_python] use publisher without .py file extension
In-Reply-To: <1A4BF05172023E468CB6E867923BC90402B6E2E7@accmail2.sunbelt.org>
References: <1A4BF05172023E468CB6E867923BC90402B6E2E7@accmail2.sunbelt.org>
Message-ID: <452E9092.8070507@joreybump.com>

Sells, Fred wrote:
> I would like to be able to use the mod_python.publisher without requiring
> using the .py suffix in my file.  The idea is to not disclose to the user
> that python is being used as one more bit of security.
> 
> I tried it but it seems as if the mod_python import is expecting standard
> python modules.
> 
> While I would like a generic solution, each "application" is in it's own
> subdirectory and would have very few (hopefully 1) file that is the single
> point of access to all backend logic.  Thus I could revise the apache .conf
> file whenever a new application is added if I must.

This isn't necessary. I create a single directory for the frontends, 
then use SetHandler to configure apache to use Publisher for everything 
in that directory. The .py extension is no longer needed. The frontends 
are minimal, serving as gateways to the backend logic, as you describe. 
The only caveat is that the directory must contain only python modules, 
with other resources placed elsewhere. This can be a benefit, if you 
like keeping your code separate from images, stylesheets, etc. But there 
also ways around this limitation, using a more complex configuration.

I used to "register" publisher applications in the conf file, as you 
describe, but found it to be a burden. It's much nicer to just have a 
directory to drop files into.


From fred at adventistcare.org  Thu Oct 12 16:05:47 2006
From: fred at adventistcare.org (Sells, Fred)
Date: Thu Oct 12 15:57:36 2006
Subject: [mod_python] use publisher without .py file extension
Message-ID: <1A4BF05172023E468CB6E867923BC90402B6E2E9@accmail2.sunbelt.org>

I tried that and got a "module not found",  could you send me a copy of your
<Directory... from the .conf file.  Perhaps I just had a brain fart.  I like
the approach you describe; that's what we did with cgi before changing to
mod_python.

-----Original Message-----
From: Jorey Bump [mailto:list@joreybump.com]
Sent: Thursday, October 12, 2006 3:00 PM
To: Sells, Fred
Cc: mod_python@modpython.org
Subject: Re: [mod_python] use publisher without .py file extension


Sells, Fred wrote:
> I would like to be able to use the mod_python.publisher without requiring
> using the .py suffix in my file.  The idea is to not disclose to the user
> that python is being used as one more bit of security.
> 
> I tried it but it seems as if the mod_python import is expecting standard
> python modules.
> 
> While I would like a generic solution, each "application" is in it's own
> subdirectory and would have very few (hopefully 1) file that is the single
> point of access to all backend logic.  Thus I could revise the apache
.conf
> file whenever a new application is added if I must.

This isn't necessary. I create a single directory for the frontends, 
then use SetHandler to configure apache to use Publisher for everything 
in that directory. The .py extension is no longer needed. The frontends 
are minimal, serving as gateways to the backend logic, as you describe. 
The only caveat is that the directory must contain only python modules, 
with other resources placed elsewhere. This can be a benefit, if you 
like keeping your code separate from images, stylesheets, etc. But there 
also ways around this limitation, using a more complex configuration.

I used to "register" publisher applications in the conf file, as you 
describe, but found it to be a burden. It's much nicer to just have a 
directory to drop files into.
From list at joreybump.com  Thu Oct 12 16:29:44 2006
From: list at joreybump.com (Jorey Bump)
Date: Thu Oct 12 16:29:49 2006
Subject: [mod_python] use publisher without .py file extension
In-Reply-To: <1A4BF05172023E468CB6E867923BC90402B6E2E9@accmail2.sunbelt.org>
References: <1A4BF05172023E468CB6E867923BC90402B6E2E9@accmail2.sunbelt.org>
Message-ID: <452EA5B8.90701@joreybump.com>

Sells, Fred wrote:
> I tried that and got a "module not found",  could you send me a copy of your
> <Directory... from the .conf file.  Perhaps I just had a brain fart.  I like
> the approach you describe; that's what we did with cgi before changing to
> mod_python.

# add mod_python.publisher capability to specified directory
# doesn't need .py extension in URL
# if module contains index function, it can be left off URL
# directory cannot serve other kinds of files
<Directory /var/www/vhosts/www.example.com/support>
    AllowOverride All
    SetHandler python-program
    PythonHandler mod_python.publisher
    PythonDebug On
</Directory>


Assuming test.py contains this:

def hello():
     return 'hello'

You would reach it at:

  http://www.example.com/support/test/hello

I also usually alias the directory so I can keep it outside the 
DocumentRoot:

  Alias /support /var/www/vhosts/www.example.com/support

And to facilitate creating frontends, I prepend PythonPath with a 
directory exclusive to the VirtualHost:

  PythonPath "['/var/www/vhosts/www.example.com/python'] + sys.path"

Then my published modules are minimal frontends to libraries I create 
there. There are pros and cons to this approach. YMMV.


From pf_moore at yahoo.co.uk  Thu Oct 12 15:48:57 2006
From: pf_moore at yahoo.co.uk (Paul Moore)
Date: Thu Oct 12 16:57:08 2006
Subject: [mod_python] Re: Python 2.5 binaries for Windows
References: <20061012103359.40921.qmail@web25903.mail.ukl.yahoo.com>
	<C0039D6B-65A9-4167-9A5F-43599EFCD30E@dscpl.com.au>
Message-ID: <ur6xdwc0m.fsf@yahoo.co.uk>

Graham Dumpleton <grahamd@dscpl.com.au>
writes:

> Try:
>
>   http://www.modpython.org/pipermail/mod_python/2006-September/
> 022092.html
>
> Adapt as necessary for the tools you are using.

I got it built using the free (but sadly no longer available for
download :-() MS Toolkit Compiler 2003.

You need to set up the build environment correctly. Full details are
in PCBuild/readme.txt in the Python source directory, but basically
you install the toolkit compiler, plus the platform SDK and the .NET
1.1 SDK (not the 2.0 one, it's the wrong C runtime). Then

    Add the following directories to your PATH:
        * The toolkit compiler directory
        * The SDK "Win64" binaries directory
    Add to your INCLUDE environment variable:
        * The toolkit compiler INCLUDE directory
    Add to your LIB environment variable:
        * The toolkit compiler LIB directory
	* The .NET SDK Visual Studio 2003 VC7\lib directory

Now you're ready to go, *except* that this environment does not
include afxres.h, which is needed. You can get that from the mingw
packages (I think it's the win32-runtime one, specifically). Add it to
your INCLUDE variable.

It's messy, but the resulting environment builds fine.

You can't build with mingw32 (at least, not easily) - the main reason
is that the Apache binary distribution doesn't include mingw32-
compatible export libraries. (There are other suspicious-looking
errors, but that one's good enough by itself).

Thanks again for the pointer.

Paul.
-- 
Any sufficiently complicated C or Fortran program contains an ad hoc
informally-specified bug-ridden slow implementation of half of Common
Lisp. -- Philip Greenspun

From grahamd at dscpl.com.au  Thu Oct 12 18:05:19 2006
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Thu Oct 12 18:05:31 2006
Subject: [mod_python] use publisher without .py file extension
Message-ID: <1160690719.9272@dscpl.user.openhosting.com>

This question of how to avoid using extensions with publisher has been answered
recently on the mailing list, plus many times in the past. Although it is more
easily done if SetHandler is used, AddHandler can also be used, it just needs
additional Apache configuration. The ins and outs of SetHandler vs AddHandler
are documented in:

  http://www.dscpl.com.au/wiki/ModPython/Articles/SetHandlerVersusAddHandler

This includes an explanation of how to avoid use of an extension when the
AddHandler directive is used.

Rather than repost it again, refer to previous email on mailing list which
includes a full example of Apache configuration to be used for AddHandler.

  http://www.modpython.org/pipermail/mod_python/2006-October/022211.html


Graham

Sells, Fred wrote ..
> I tried that and got a "module not found",  could you send me a copy of
> your
> <Directory... from the .conf file.  Perhaps I just had a brain fart.  I
> like
> the approach you describe; that's what we did with cgi before changing
> to
> mod_python.
> 
> -----Original Message-----
> From: Jorey Bump [mailto:list@joreybump.com]
> Sent: Thursday, October 12, 2006 3:00 PM
> To: Sells, Fred
> Cc: mod_python@modpython.org
> Subject: Re: [mod_python] use publisher without .py file extension
> 
> 
> Sells, Fred wrote:
> > I would like to be able to use the mod_python.publisher without requiring
> > using the .py suffix in my file.  The idea is to not disclose to the
> user
> > that python is being used as one more bit of security.
> > 
> > I tried it but it seems as if the mod_python import is expecting standard
> > python modules.
> > 
> > While I would like a generic solution, each "application" is in it's
> own
> > subdirectory and would have very few (hopefully 1) file that is the single
> > point of access to all backend logic.  Thus I could revise the apache
> .conf
> > file whenever a new application is added if I must.
> 
> This isn't necessary. I create a single directory for the frontends, 
> then use SetHandler to configure apache to use Publisher for everything
> in that directory. The .py extension is no longer needed. The frontends
> are minimal, serving as gateways to the backend logic, as you describe.
> The only caveat is that the directory must contain only python modules,
> with other resources placed elsewhere. This can be a benefit, if you 
> like keeping your code separate from images, stylesheets, etc. But there
> also ways around this limitation, using a more complex configuration.
> 
> I used to "register" publisher applications in the conf file, as you 
> describe, but found it to be a burden. It's much nicer to just have a 
> directory to drop files into.
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
From durumdara at gmail.com  Fri Oct 13 04:08:09 2006
From: durumdara at gmail.com (durumdara)
Date: Fri Oct 13 04:08:16 2006
Subject: [mod_python] Freeware link/html checker (validator) for mod_python
	site
Message-ID: <452F4969.1040203@gmail.com>

Hi !

Sorry for non-pythonic subject, but if I not find good solution, I will 
write a  routine for this in python... :-)))

My mod_py site is growing quickly. It have many pages, many of them are 
dynamic.
I want to check the links, and if possible, validate the html.

I search freeware tools in the net, but I found only "HTML Link 
Validator" that meet the requirements.
This utility can check the whole site, and it handle the circular 
references - but it's not free, and it not check the whole site... :-(

Some other utilites can check one URL (CSE HTML validator lite, html 
kit, Firefox check page links, Firefox validate HTML, Firefox 
webdeveloper extension),
but not entire site...

Do you knows about a good local site checker application that can do 
validation/link checking in one ?

Is anybody have an experience in this theme ?

Important thing: the OS is Windows XP.

Thanks for your help:
    dd




From alex.greif at gmail.com  Fri Oct 13 05:03:54 2006
From: alex.greif at gmail.com (Alex Greif)
Date: Fri Oct 13 05:03:59 2006
Subject: [mod_python] Session DBAccessError (permission denied)
Message-ID: <778770d80610130203p2c42122j5c908832c09431bc@mail.gmail.com>

Hi,

with mod_python 3.2.10 and apache 2.2.3

I have the following problem while saving session contents:

[Fri Oct 13 10:38:26 2006] [error] [client 84.191.110.235]
PythonHandler mod_python.publisher: Traceback (most recent call last):
[Fri Oct 13 10:38:26 2006] [error] [client 84.191.110.235]
PythonHandler mod_python.publisher:   File
"/home/agreif/fbxxl_home/usr_local/python/lib/python2.4/site-packages/mod_python/apache.py",
line 299, in HandlerDispatch\n    result = object(req)
[Fri Oct 13 10:38:26 2006] [error] [client 84.191.110.235]
PythonHandler mod_python.publisher:   File
"/home/agreif/fbxxl_home/usr_local/python/lib/python2.4/site-packages/mod_python/publisher.py",
line 210, in handler\n    object = resolve_object(req, module,
func_path, realm, user, passwd)
[Fri Oct 13 10:38:26 2006] [error] [client 84.191.110.235]
PythonHandler mod_python.publisher:   File
"/home/agreif/fbxxl_home/usr_local/python/lib/python2.4/site-packages/mod_python/publisher.py",
line 387, in resolve_object\n    realm, user, passwd =
process_auth(req, obj, realm, user, passwd)
[Fri Oct 13 10:38:26 2006] [error] [client 84.191.110.235]
PythonHandler mod_python.publisher:   File
"/home/agreif/fbxxl_home/usr_local/python/lib/python2.4/site-packages/mod_python/publisher.py",
line 302, in process_auth\n    rc = __access__(req, user)
[Fri Oct 13 10:38:26 2006] [error] [client 84.191.110.235]
PythonHandler mod_python.publisher:   File
"/home/fbxxl/usr_local/apache/scripts/admin.py", line 226, in
__access__\n    return webutil.authorize(req=req, login=user,
neededRole=neededRole)
[Fri Oct 13 10:38:26 2006] [error] [client 84.191.110.235]
PythonHandler mod_python.publisher:   File
"/home/fbxxl/usr_local/apache/scripts/_util/webutil.py", line 47, in
authorize\n    session.save()
[Fri Oct 13 10:38:26 2006] [error] [client 84.191.110.235]
PythonHandler mod_python.publisher:   File
"/home/agreif/fbxxl_home/usr_local/python/lib/python2.4/site-packages/mod_python/Session.py",
line 244, in save\n    self.do_save(dict)
[Fri Oct 13 10:38:26 2006] [error] [client 84.191.110.235]
PythonHandler mod_python.publisher:   File
"/home/agreif/fbxxl_home/usr_local/python/lib/python2.4/site-packages/mod_python/Session.py",
line 370, in do_save\n    dbm = self._get_dbm()
[Fri Oct 13 10:38:26 2006] [error] [client 84.191.110.235]
PythonHandler mod_python.publisher:   File
"/home/agreif/fbxxl_home/usr_local/python/lib/python2.4/site-packages/mod_python/Session.py",
line 345, in _get_dbm\n    result = self._dbmtype.open(self._dbmfile,
'c', stat.S_IRUSR | stat.S_IWUSR | stat.S_IRGRP)
[Fri Oct 13 10:38:26 2006] [error] [client 84.191.110.235]
PythonHandler mod_python.publisher:   File
"/home/fbxxl/usr_local/python-2.4.3//lib/python2.4/anydbm.py", line
83, in open\n    return mod.open(file, flag, mode)
[Fri Oct 13 10:38:26 2006] [error] [client 84.191.110.235]
PythonHandler mod_python.publisher:   File
"/home/fbxxl/usr_local/python-2.4.3//lib/python2.4/dbhash.py", line
16, in open\n    return bsddb.hashopen(file, flag, mode)
[Fri Oct 13 10:38:26 2006] [error] [client 84.191.110.235]
PythonHandler mod_python.publisher:   File
"/home/fbxxl/usr_local/python-2.4.3//lib/python2.4/bsddb/__init__.py",
line 299, in hashopen\n    d.open(file, db.DB_HASH, flags, mode)
[Fri Oct 13 10:38:26 2006] [error] [client 84.191.110.235]
PythonHandler mod_python.publisher: DBAccessError: (13, 'Permission
denied')


createing a database manually works:
Python 2.4.3 (#1, Aug 11 2006, 20:29:30)
[GCC 2.95.3 20010315 (SuSE)] on linux2
Type "help", "copyright", "credits" or "license" for more information.
>>> import anydbm
>>> db = anydbm.open("/tmp/mp_sess_test.dbm",'c')


any ideas are appreciated

Alex.
From sdavis2 at mail.nih.gov  Fri Oct 13 07:06:55 2006
From: sdavis2 at mail.nih.gov (Sean Davis)
Date: Fri Oct 13 07:07:17 2006
Subject: [mod_python] Session DBAccessError (permission denied)
In-Reply-To: <778770d80610130203p2c42122j5c908832c09431bc@mail.gmail.com>
References: <778770d80610130203p2c42122j5c908832c09431bc@mail.gmail.com>
Message-ID: <200610130706.55541.sdavis2@mail.nih.gov>

On Friday 13 October 2006 05:03, Alex Greif wrote:
> Hi,
>
> with mod_python 3.2.10 and apache 2.2.3
>
> I have the following problem while saving session contents:
>
> [Fri Oct 13 10:38:26 2006] [error] [client 84.191.110.235]
> PythonHandler mod_python.publisher: Traceback (most recent call last):
> [Fri Oct 13 10:38:26 2006] [error] [client 84.191.110.235]
> PythonHandler mod_python.publisher:   File
> "/home/agreif/fbxxl_home/usr_local/python/lib/python2.4/site-packages/mod_p
>ython/apache.py", line 299, in HandlerDispatch\n    result = object(req)
> [Fri Oct 13 10:38:26 2006] [error] [client 84.191.110.235]
> PythonHandler mod_python.publisher:   File
> "/home/agreif/fbxxl_home/usr_local/python/lib/python2.4/site-packages/mod_p
>ython/publisher.py", line 210, in handler\n    object = resolve_object(req,
> module,
> func_path, realm, user, passwd)
> [Fri Oct 13 10:38:26 2006] [error] [client 84.191.110.235]
> PythonHandler mod_python.publisher:   File
> "/home/agreif/fbxxl_home/usr_local/python/lib/python2.4/site-packages/mod_p
>ython/publisher.py", line 387, in resolve_object\n    realm, user, passwd =
> process_auth(req, obj, realm, user, passwd)
> [Fri Oct 13 10:38:26 2006] [error] [client 84.191.110.235]
> PythonHandler mod_python.publisher:   File
> "/home/agreif/fbxxl_home/usr_local/python/lib/python2.4/site-packages/mod_p
>ython/publisher.py", line 302, in process_auth\n    rc = __access__(req,
> user)
> [Fri Oct 13 10:38:26 2006] [error] [client 84.191.110.235]
> PythonHandler mod_python.publisher:   File
> "/home/fbxxl/usr_local/apache/scripts/admin.py", line 226, in
> __access__\n    return webutil.authorize(req=req, login=user,
> neededRole=neededRole)
> [Fri Oct 13 10:38:26 2006] [error] [client 84.191.110.235]
> PythonHandler mod_python.publisher:   File
> "/home/fbxxl/usr_local/apache/scripts/_util/webutil.py", line 47, in
> authorize\n    session.save()
> [Fri Oct 13 10:38:26 2006] [error] [client 84.191.110.235]
> PythonHandler mod_python.publisher:   File
> "/home/agreif/fbxxl_home/usr_local/python/lib/python2.4/site-packages/mod_p
>ython/Session.py", line 244, in save\n    self.do_save(dict)
> [Fri Oct 13 10:38:26 2006] [error] [client 84.191.110.235]
> PythonHandler mod_python.publisher:   File
> "/home/agreif/fbxxl_home/usr_local/python/lib/python2.4/site-packages/mod_p
>ython/Session.py", line 370, in do_save\n    dbm = self._get_dbm()
> [Fri Oct 13 10:38:26 2006] [error] [client 84.191.110.235]
> PythonHandler mod_python.publisher:   File
> "/home/agreif/fbxxl_home/usr_local/python/lib/python2.4/site-packages/mod_p
>ython/Session.py", line 345, in _get_dbm\n    result =
> self._dbmtype.open(self._dbmfile, 'c', stat.S_IRUSR | stat.S_IWUSR |
> stat.S_IRGRP)
> [Fri Oct 13 10:38:26 2006] [error] [client 84.191.110.235]
> PythonHandler mod_python.publisher:   File
> "/home/fbxxl/usr_local/python-2.4.3//lib/python2.4/anydbm.py", line
> 83, in open\n    return mod.open(file, flag, mode)
> [Fri Oct 13 10:38:26 2006] [error] [client 84.191.110.235]
> PythonHandler mod_python.publisher:   File
> "/home/fbxxl/usr_local/python-2.4.3//lib/python2.4/dbhash.py", line
> 16, in open\n    return bsddb.hashopen(file, flag, mode)
> [Fri Oct 13 10:38:26 2006] [error] [client 84.191.110.235]
> PythonHandler mod_python.publisher:   File
> "/home/fbxxl/usr_local/python-2.4.3//lib/python2.4/bsddb/__init__.py",
> line 299, in hashopen\n    d.open(file, db.DB_HASH, flags, mode)
> [Fri Oct 13 10:38:26 2006] [error] [client 84.191.110.235]
> PythonHandler mod_python.publisher: DBAccessError: (13, 'Permission
> denied')
>
>
> createing a database manually works:
> Python 2.4.3 (#1, Aug 11 2006, 20:29:30)
> [GCC 2.95.3 20010315 (SuSE)] on linux2
> Type "help", "copyright", "credits" or "license" for more information.
>
> >>> import anydbm
> >>> db = anydbm.open("/tmp/mp_sess_test.dbm",'c')

I'm not sure this is the answer, but remember that apache typically runs as a 
relatively unprivileged user (and NOT as you), so even though you are able to 
create a database manually, apache still might not be able to.  Make sure 
that apache can read and write to the directory that you are trying to use 
for session management.

Sean
From alex.greif at gmail.com  Fri Oct 13 07:14:41 2006
From: alex.greif at gmail.com (Alex Greif)
Date: Fri Oct 13 07:14:54 2006
Subject: [mod_python] Session DBAccessError (permission denied)
In-Reply-To: <200610130706.55541.sdavis2@mail.nih.gov>
References: <778770d80610130203p2c42122j5c908832c09431bc@mail.gmail.com>
	<200610130706.55541.sdavis2@mail.nih.gov>
Message-ID: <778770d80610130414h6d316c95od317a67c5123add2@mail.gmail.com>

In this case apache runs as my user.
Where can I configure the folder path where apache puts files for
session management?

Alex.

On 10/13/06, Sean Davis <sdavis2@mail.nih.gov> wrote:
> On Friday 13 October 2006 05:03, Alex Greif wrote:
> > Hi,
> >
> > with mod_python 3.2.10 and apache 2.2.3
> >
> > I have the following problem while saving session contents:
> >
> > [Fri Oct 13 10:38:26 2006] [error] [client 84.191.110.235]
> > PythonHandler mod_python.publisher: Traceback (most recent call last):
> > [Fri Oct 13 10:38:26 2006] [error] [client 84.191.110.235]
> > PythonHandler mod_python.publisher:   File
> > "/home/agreif/fbxxl_home/usr_local/python/lib/python2.4/site-packages/mod_p
> >ython/apache.py", line 299, in HandlerDispatch\n    result = object(req)
> > [Fri Oct 13 10:38:26 2006] [error] [client 84.191.110.235]
> > PythonHandler mod_python.publisher:   File
> > "/home/agreif/fbxxl_home/usr_local/python/lib/python2.4/site-packages/mod_p
> >ython/publisher.py", line 210, in handler\n    object = resolve_object(req,
> > module,
> > func_path, realm, user, passwd)
> > [Fri Oct 13 10:38:26 2006] [error] [client 84.191.110.235]
> > PythonHandler mod_python.publisher:   File
> > "/home/agreif/fbxxl_home/usr_local/python/lib/python2.4/site-packages/mod_p
> >ython/publisher.py", line 387, in resolve_object\n    realm, user, passwd =
> > process_auth(req, obj, realm, user, passwd)
> > [Fri Oct 13 10:38:26 2006] [error] [client 84.191.110.235]
> > PythonHandler mod_python.publisher:   File
> > "/home/agreif/fbxxl_home/usr_local/python/lib/python2.4/site-packages/mod_p
> >ython/publisher.py", line 302, in process_auth\n    rc = __access__(req,
> > user)
> > [Fri Oct 13 10:38:26 2006] [error] [client 84.191.110.235]
> > PythonHandler mod_python.publisher:   File
> > "/home/fbxxl/usr_local/apache/scripts/admin.py", line 226, in
> > __access__\n    return webutil.authorize(req=req, login=user,
> > neededRole=neededRole)
> > [Fri Oct 13 10:38:26 2006] [error] [client 84.191.110.235]
> > PythonHandler mod_python.publisher:   File
> > "/home/fbxxl/usr_local/apache/scripts/_util/webutil.py", line 47, in
> > authorize\n    session.save()
> > [Fri Oct 13 10:38:26 2006] [error] [client 84.191.110.235]
> > PythonHandler mod_python.publisher:   File
> > "/home/agreif/fbxxl_home/usr_local/python/lib/python2.4/site-packages/mod_p
> >ython/Session.py", line 244, in save\n    self.do_save(dict)
> > [Fri Oct 13 10:38:26 2006] [error] [client 84.191.110.235]
> > PythonHandler mod_python.publisher:   File
> > "/home/agreif/fbxxl_home/usr_local/python/lib/python2.4/site-packages/mod_p
> >ython/Session.py", line 370, in do_save\n    dbm = self._get_dbm()
> > [Fri Oct 13 10:38:26 2006] [error] [client 84.191.110.235]
> > PythonHandler mod_python.publisher:   File
> > "/home/agreif/fbxxl_home/usr_local/python/lib/python2.4/site-packages/mod_p
> >ython/Session.py", line 345, in _get_dbm\n    result =
> > self._dbmtype.open(self._dbmfile, 'c', stat.S_IRUSR | stat.S_IWUSR |
> > stat.S_IRGRP)
> > [Fri Oct 13 10:38:26 2006] [error] [client 84.191.110.235]
> > PythonHandler mod_python.publisher:   File
> > "/home/fbxxl/usr_local/python-2.4.3//lib/python2.4/anydbm.py", line
> > 83, in open\n    return mod.open(file, flag, mode)
> > [Fri Oct 13 10:38:26 2006] [error] [client 84.191.110.235]
> > PythonHandler mod_python.publisher:   File
> > "/home/fbxxl/usr_local/python-2.4.3//lib/python2.4/dbhash.py", line
> > 16, in open\n    return bsddb.hashopen(file, flag, mode)
> > [Fri Oct 13 10:38:26 2006] [error] [client 84.191.110.235]
> > PythonHandler mod_python.publisher:   File
> > "/home/fbxxl/usr_local/python-2.4.3//lib/python2.4/bsddb/__init__.py",
> > line 299, in hashopen\n    d.open(file, db.DB_HASH, flags, mode)
> > [Fri Oct 13 10:38:26 2006] [error] [client 84.191.110.235]
> > PythonHandler mod_python.publisher: DBAccessError: (13, 'Permission
> > denied')
> >
> >
> > createing a database manually works:
> > Python 2.4.3 (#1, Aug 11 2006, 20:29:30)
> > [GCC 2.95.3 20010315 (SuSE)] on linux2
> > Type "help", "copyright", "credits" or "license" for more information.
> >
> > >>> import anydbm
> > >>> db = anydbm.open("/tmp/mp_sess_test.dbm",'c')
>
> I'm not sure this is the answer, but remember that apache typically runs as a
> relatively unprivileged user (and NOT as you), so even though you are able to
> create a database manually, apache still might not be able to.  Make sure
> that apache can read and write to the directory that you are trying to use
> for session management.
>
> Sean
>
From sdavis2 at mail.nih.gov  Fri Oct 13 07:35:05 2006
From: sdavis2 at mail.nih.gov (Sean Davis)
Date: Fri Oct 13 07:35:21 2006
Subject: [mod_python] Session DBAccessError (permission denied)
In-Reply-To: <778770d80610130414h6d316c95od317a67c5123add2@mail.gmail.com>
References: <778770d80610130203p2c42122j5c908832c09431bc@mail.gmail.com>
	<200610130706.55541.sdavis2@mail.nih.gov>
	<778770d80610130414h6d316c95od317a67c5123add2@mail.gmail.com>
Message-ID: <200610130735.05605.sdavis2@mail.nih.gov>

On Friday 13 October 2006 07:14, Alex Greif wrote:
> In this case apache runs as my user.
> Where can I configure the folder path where apache puts files for
> session management?

See the section of the docs:

http://www.modpython.org/live/current/doc-html/pyapi-sess-classes.html

In the DbmSession class documentation:

PythonOption session_directory

Sean
From nlv11281 at natlab.research.philips.com  Fri Oct 13 07:35:11 2006
From: nlv11281 at natlab.research.philips.com (Mike Looijmans)
Date: Fri Oct 13 07:35:25 2006
Subject: [mod_python] MySQLDb or SQLObject connection pooling snippet
	wanted
In-Reply-To: <1A4BF05172023E468CB6E867923BC90402B6E2DE@accmail2.sunbelt.org>
References: <1A4BF05172023E468CB6E867923BC90402B6E2DE@accmail2.sunbelt.org>
Message-ID: <452F79EF.2030603@natlab.research.philips.com>

For MySQL, I found that the best approach to connection pooling was "not".

I could not conclude any performance difference opening the same page a few thousand times which 
executed a single SELECT returning a single row with a (mutexed) singleton connection, with a pooled 
set or just connecting for every request. Apparently, the overhead of calling MySQLdb.connect() is 
neglegible compared to all the other stuff that happens (i did this on a SUN Solaris 2.6 running 
Apache 2.0 with worker threads).

The best performance gain is to put the SQL database on the same host and use a UNIX socket (not 
TCP) or a named pipe (on Windows NT) for the connection. I also improved security this way: No one 
can access the MySQL DB from outside the webserver, even if they have the password.

NOTE: This only goes for MySQL. Other DBMS will behave completely different.

Mike Looijmans
Philips Natlab / Topic Automation


Sells, Fred wrote:
> Currently using mod_python 3.1.x and Apache 2.x.  Could upgrade mod_python
> if we must, but this is what apt-get gives us.
> 
> I would like to implement connection pooling for the MySQL database.  Based
> on the application requirements, we vary between MySQLDb and SQLObject.
> 
> The only reference I've found so far is jonpy.sourceforge.net Does anyone
> have any "better" modules or any experience with this one?
> 
> ---------------------------------------------------------------------------
> The information contained in this message may be privileged and / or
> confidential and protected from disclosure. If the reader of this message is
> not the intended recipient, you are hereby notified that any dissemination,
> distribution or copying of this communication is strictly prohibited. If you
> have received this communication in error, please notify the sender
> immediately by replying to this message and deleting the material from any
> computer.
> ---------------------------------------------------------------------------
> 
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
> 

From m_norley_newsgroups at yahoo.co.uk  Fri Oct 13 07:45:17 2006
From: m_norley_newsgroups at yahoo.co.uk (Mark Norley)
Date: Fri Oct 13 07:48:47 2006
Subject: [mod_python] Apache won't start
Message-ID: <001301c6eebd$0e0ab450$3753d356@MARK>

Hi
I've been running .py cgi scripts with Apache successfully, but in an effort
to speed things up I installed mod_python and now Apache won't start any
more (therefore no error.log).
If anyone can help I'd appreciate it.

Setup:
Win XP SP2
Python 2.4
Apache 2.2.2 (installed via XAMPP 1.5.3a)
Mod_python 3.2.8 (installed from mod_python-3.2.8.win32-py2.4.exe)

Following the manual I've added these lines to httpd.conf (Apache starts as
normal if I comment them):
LoadModule python_module modules/mod_python.so
PythonOption mod_python.mutex_directory "/tmp"
PythonOption mod_python.mutex_locks 8

mod_python.so is definitely in the modules directory.
I read elsewhere on the list that there could be a problem with Apache not
finding python24.dll, msvcr71.dll and msvcp71.dll, but they are all present
in WINDOWS\system32 and the PATH environment variable points there.

So, I'm stumped...any ideas?

Mark


-- 
No virus found in this outgoing message.
Checked by AVG Free Edition.
Version: 7.1.408 / Virus Database: 268.13.2/472 - Release Date: 11/10/06
 

Send instant messages to your online friends http://uk.messenger.yahoo.com 
From sdavis2 at mail.nih.gov  Fri Oct 13 08:03:20 2006
From: sdavis2 at mail.nih.gov (Sean Davis)
Date: Fri Oct 13 08:08:37 2006
Subject: [mod_python] MySQLDb or SQLObject connection pooling snippet
	wanted
In-Reply-To: <452F79EF.2030603@natlab.research.philips.com>
References: <1A4BF05172023E468CB6E867923BC90402B6E2DE@accmail2.sunbelt.org>
	<452F79EF.2030603@natlab.research.philips.com>
Message-ID: <200610130803.20813.sdavis2@mail.nih.gov>

On Friday 13 October 2006 07:35, Mike Looijmans wrote:
> For MySQL, I found that the best approach to connection pooling was "not".
>
> I could not conclude any performance difference opening the same page a few
> thousand times which executed a single SELECT returning a single row with a
> (mutexed) singleton connection, with a pooled set or just connecting for
> every request. Apparently, the overhead of calling MySQLdb.connect() is
> neglegible compared to all the other stuff that happens (i did this on a
> SUN Solaris 2.6 running Apache 2.0 with worker threads).
>
> The best performance gain is to put the SQL database on the same host and
> use a UNIX socket (not TCP) or a named pipe (on Windows NT) for the
> connection. I also improved security this way: No one can access the MySQL
> DB from outside the webserver, even if they have the password.

Just to make a couple of small points here:

For small databases and small-footprint webservers on relatively large 
machines, having the database and webserver on the same machine is fine and 
is indeed the best solution.  However, when the database tables become 
larger, the database and webserver can begin to compete for memory resources.  
This is NOT the same as swapping; if the database can be cached in memory 
(which most databases try to do, in one way or another), operation is MUCH 
faster than if the database is constantly being read from disk.  Also, If the 
database is hit quite heavily, it will also consume i/o bandwidth--the same 
resource that the webserver needs to deliver content quickly.

So, while having the database and webserver on the same machine CAN be a fast 
solution for small sites, I think that dogma in the web development world is 
that one should not follow this pattern in a production environment where 
database and webserver are running at near peak usage and will be competing 
for resources.  Also, using fast switches (gigabit or better) can alleviate 
many of the data transfer issues associated with separate machines.

Sean
From steve at holdenweb.com  Fri Oct 13 08:08:47 2006
From: steve at holdenweb.com (Steve Holden)
Date: Fri Oct 13 08:13:06 2006
Subject: [mod_python] Re: Apache won't start
In-Reply-To: <001301c6eebd$0e0ab450$3753d356@MARK>
References: <001301c6eebd$0e0ab450$3753d356@MARK>
Message-ID: <egnvik$lh8$2@sea.gmane.org>

Mark Norley wrote:
> Hi
> I've been running .py cgi scripts with Apache successfully, but in an effort
> to speed things up I installed mod_python and now Apache won't start any
> more (therefore no error.log).
> If anyone can help I'd appreciate it.
> 
> Setup:
> Win XP SP2
> Python 2.4
> Apache 2.2.2 (installed via XAMPP 1.5.3a)
> Mod_python 3.2.8 (installed from mod_python-3.2.8.win32-py2.4.exe)
> 
> Following the manual I've added these lines to httpd.conf (Apache starts as
> normal if I comment them):
> LoadModule python_module modules/mod_python.so
> PythonOption mod_python.mutex_directory "/tmp"
> PythonOption mod_python.mutex_locks 8
> 
> mod_python.so is definitely in the modules directory.
> I read elsewhere on the list that there could be a problem with Apache not
> finding python24.dll, msvcr71.dll and msvcp71.dll, but they are all present
> in WINDOWS\system32 and the PATH environment variable points there.
> 
> So, I'm stumped...any ideas?
> 
I believe current versions don't run with Apache 2.2.x

regards
  Steve
-- 
Steve Holden       +44 150 684 7255  +1 800 494 3119
Holden Web LLC/Ltd          http://www.holdenweb.com
Skype: holdenweb       http://holdenweb.blogspot.com
Recent Ramblings     http://del.icio.us/steve.holden

From jpg at jgassociates.ca  Fri Oct 13 08:34:33 2006
From: jpg at jgassociates.ca (Jim Gallacher)
Date: Fri Oct 13 08:35:28 2006
Subject: [mod_python] Re: Apache won't start
In-Reply-To: <egnvik$lh8$2@sea.gmane.org>
References: <001301c6eebd$0e0ab450$3753d356@MARK> <egnvik$lh8$2@sea.gmane.org>
Message-ID: <452F87D9.1020404@jgassociates.ca>

Steve Holden wrote:
> Mark Norley wrote:
>> Hi
>> I've been running .py cgi scripts with Apache successfully, but in an 
>> effort
>> to speed things up I installed mod_python and now Apache won't start any
>> more (therefore no error.log).
>> If anyone can help I'd appreciate it.
>>
>> Setup:
>> Win XP SP2
>> Python 2.4
>> Apache 2.2.2 (installed via XAMPP 1.5.3a)
>> Mod_python 3.2.8 (installed from mod_python-3.2.8.win32-py2.4.exe)
>>
>> Following the manual I've added these lines to httpd.conf (Apache 
>> starts as
>> normal if I comment them):
>> LoadModule python_module modules/mod_python.so
>> PythonOption mod_python.mutex_directory "/tmp"
>> PythonOption mod_python.mutex_locks 8
>>
>> mod_python.so is definitely in the modules directory.
>> I read elsewhere on the list that there could be a problem with Apache 
>> not
>> finding python24.dll, msvcr71.dll and msvcp71.dll, but they are all 
>> present
>> in WINDOWS\system32 and the PATH environment variable points there.
>>
>> So, I'm stumped...any ideas?
>>
> I believe current versions don't run with Apache 2.2.x

3.2.8 - no
3.2.10 - yes

Grab the 3.2.10 installer from here:
http://www.apache.org/dist/httpd/modpython/win/3.2.10/

Jim
From alex.greif at gmail.com  Fri Oct 13 10:35:09 2006
From: alex.greif at gmail.com (Alex Greif)
Date: Fri Oct 13 10:35:18 2006
Subject: [mod_python] Multiple call to Session.Session(req) problem
Message-ID: <778770d80610130735i122ca20dwa0284611bde910cb@mail.gmail.com>

Hi,

I have the problem that getting the session instance in a handler more
than once makes the server hang on the second access to the session.
the problem does ot occure on windows XP but on suse Linux with 3.2.10

Here is my scenario:

def view_ticket_detail(req, ticketId):
    def __access__(req, user):
        ...
        # webutil.authorize will get the session
        return webutil.authorize(req=req, login=user, neededRole=neededRole)

    req.content_type = "text/html"
    ...
    # now I need the session again
    session = Session.MemorySession(req) ###### <-- here the server hangs

any ideas?
From m_norley_newsgroups at yahoo.co.uk  Fri Oct 13 10:40:33 2006
From: m_norley_newsgroups at yahoo.co.uk (Mark Norley)
Date: Fri Oct 13 10:40:30 2006
Subject: [mod_python] Re: Apache won't start
In-Reply-To: <452F87D9.1020404@jgassociates.ca>
Message-ID: <001601c6eed5$8a884930$3753d356@MARK>

Thanks for replies...
Uninstalled 8, installed 10, works a treat!
onwards to the tutorial...
Mark 

-----Original Message-----
From: mod_python-bounces@modpython.org
[mailto:mod_python-bounces@modpython.org] On Behalf Of Jim Gallacher
Sent: 13 October 2006 13:35
To: Steve Holden
Cc: mod_python@modpython.org
Subject: Re: [mod_python] Re: Apache won't start

Steve Holden wrote:
> Mark Norley wrote:
>> Hi
>> I've been running .py cgi scripts with Apache successfully, but in an 
>> effort to speed things up I installed mod_python and now Apache won't 
>> start any more (therefore no error.log).
>> If anyone can help I'd appreciate it.
>>
>> Setup:
>> Win XP SP2
>> Python 2.4
>> Apache 2.2.2 (installed via XAMPP 1.5.3a) Mod_python 3.2.8 (installed 
>> from mod_python-3.2.8.win32-py2.4.exe)
>>
>> Following the manual I've added these lines to httpd.conf (Apache 
>> starts as normal if I comment them):
>> LoadModule python_module modules/mod_python.so PythonOption 
>> mod_python.mutex_directory "/tmp"
>> PythonOption mod_python.mutex_locks 8
>>
>> mod_python.so is definitely in the modules directory.
>> I read elsewhere on the list that there could be a problem with 
>> Apache not finding python24.dll, msvcr71.dll and msvcp71.dll, but 
>> they are all present in WINDOWS\system32 and the PATH environment 
>> variable points there.
>>
>> So, I'm stumped...any ideas?
>>
> I believe current versions don't run with Apache 2.2.x

3.2.8 - no
3.2.10 - yes

Grab the 3.2.10 installer from here:
http://www.apache.org/dist/httpd/modpython/win/3.2.10/

Jim
_______________________________________________
Mod_python mailing list
Mod_python@modpython.org
http://mailman.modpython.org/mailman/listinfo/mod_python

--
No virus found in this incoming message.
Checked by AVG Free Edition.
Version: 7.1.408 / Virus Database: 268.13.3/474 - Release Date: 13/10/06
 

-- 
No virus found in this outgoing message.
Checked by AVG Free Edition.
Version: 7.1.408 / Virus Database: 268.13.3/474 - Release Date: 13/10/06
 

Send instant messages to your online friends http://uk.messenger.yahoo.com 
From jpg at jgassociates.ca  Fri Oct 13 11:16:01 2006
From: jpg at jgassociates.ca (Jim Gallacher)
Date: Fri Oct 13 11:14:34 2006
Subject: [mod_python] Multiple call to Session.Session(req) problem
In-Reply-To: <778770d80610130735i122ca20dwa0284611bde910cb@mail.gmail.com>
References: <778770d80610130735i122ca20dwa0284611bde910cb@mail.gmail.com>
Message-ID: <452FADB1.3010208@jgassociates.ca>

Alex Greif wrote:
> Hi,
> 
> I have the problem that getting the session instance in a handler more
> than once makes the server hang on the second access to the session.
> the problem does ot occure on windows XP but on suse Linux with 3.2.10
> 
> Here is my scenario:
> 
> def view_ticket_detail(req, ticketId):
>    def __access__(req, user):
>        ...
>        # webutil.authorize will get the session
>        return webutil.authorize(req=req, login=user, neededRole=neededRole)
> 
>    req.content_type = "text/html"
>    ...
>    # now I need the session again
>    session = Session.MemorySession(req) ###### <-- here the server hangs
> 
> any ideas?

Yep. You've deadlock the session. You can't have more than one session 
instance in the same request.

Put your session in the req object within your webutil.authroize() code, 
and when you need it later retrieve it from there.

webutil.py
==========

def authorize(req):
     req.session = Session.MemorySession(req)
     ...

And in when you need it later:

def view_ticket_detail(req, ticketId):
    def __access__(req, user):
        ...
        # webutil.authorize will get the session
        return webutil.authorize(req=req, login=user, neededRole=neededRole)

    req.content_type = "text/html"
    ...
    # now I need the session again
    session = req.session


Jim
From terry.macdonald at dsl.pipex.com  Fri Oct 13 11:23:49 2006
From: terry.macdonald at dsl.pipex.com (Terry Macdonald)
Date: Fri Oct 13 11:24:12 2006
Subject: [mod_python] Multiple call to Session.Session(req) problem
In-Reply-To: <778770d80610130735i122ca20dwa0284611bde910cb@mail.gmail.com>
References: <778770d80610130735i122ca20dwa0284611bde910cb@mail.gmail.com>
Message-ID: <452FAF85.6070100@dsl.pipex.com>

Alex Greif wrote:
> Hi,
>
> I have the problem that getting the session instance in a handler more
> than once makes the server hang on the second access to the session.
> the problem does ot occure on windows XP but on suse Linux with 3.2.10
>
> Here is my scenario:
>
> def view_ticket_detail(req, ticketId):
>    def __access__(req, user):
>        ...
>        # webutil.authorize will get the session
>        return webutil.authorize(req=req, login=user, 
> neededRole=neededRole)
>
>    req.content_type = "text/html"
>    ...
>    # now I need the session again
>    session = Session.MemorySession(req) ###### <-- here the server hangs
>
> any ideas?
'll assume your webutil.authorize function accesses Session, in doing so 
implicitly locking it but does not unlock it thereby causing your second 
call to Session, which wants to lock it also, to wait until the session 
object is unlocked resulting in what appears to be a hanging state.
From alex.greif at gmail.com  Fri Oct 13 15:43:54 2006
From: alex.greif at gmail.com (Alex Greif)
Date: Fri Oct 13 15:43:59 2006
Subject: [mod_python] Multiple call to Session.Session(req) problem
In-Reply-To: <452FADB1.3010208@jgassociates.ca>
References: <778770d80610130735i122ca20dwa0284611bde910cb@mail.gmail.com>
	<452FADB1.3010208@jgassociates.ca>
Message-ID: <778770d80610131243re7701f9hfc1201b9602b5ade@mail.gmail.com>

yep your hint solved the problem.

BTW it would be helpful to mention this issue in the PDF document.

Alex.

On 10/13/06, Jim Gallacher <jpg@jgassociates.ca> wrote:
> Alex Greif wrote:
> > Hi,
> >
> > I have the problem that getting the session instance in a handler more
> > than once makes the server hang on the second access to the session.
> > the problem does ot occure on windows XP but on suse Linux with 3.2.10
> >
> > Here is my scenario:
> >
> > def view_ticket_detail(req, ticketId):
> >    def __access__(req, user):
> >        ...
> >        # webutil.authorize will get the session
> >        return webutil.authorize(req=req, login=user, neededRole=neededRole)
> >
> >    req.content_type = "text/html"
> >    ...
> >    # now I need the session again
> >    session = Session.MemorySession(req) ###### <-- here the server hangs
> >
> > any ideas?
>
> Yep. You've deadlock the session. You can't have more than one session
> instance in the same request.
>
> Put your session in the req object within your webutil.authroize() code,
> and when you need it later retrieve it from there.
>
> webutil.py
> ==========
>
> def authorize(req):
>      req.session = Session.MemorySession(req)
>      ...
>
> And in when you need it later:
>
> def view_ticket_detail(req, ticketId):
>     def __access__(req, user):
>         ...
>         # webutil.authorize will get the session
>         return webutil.authorize(req=req, login=user, neededRole=neededRole)
>
>     req.content_type = "text/html"
>     ...
>     # now I need the session again
>     session = req.session
>
>
> Jim
>
From jim at qlf.com  Fri Oct 13 16:25:09 2006
From: jim at qlf.com (Jim Steil)
Date: Fri Oct 13 16:26:05 2006
Subject: [mod_python] ReportLab integration
Message-ID: <005701c6ef05$ad95fa00$800101df@qlf.local>

Can someone help get me pointed in the right direction?  I want to allow a
user to request a PDF from my mod_python app.  When they do so, I want to
generate the PDF on the fly with ReportLab and then send the resulting PDF
back to the browser without saving it anywhere.  I've done some searches on
the web but can't seem to find examples of doing this with just mod_python
and ReportLab.  I've seen examples of using other tools, but not just
mod_python.  This sounds like something others are probably doing, but I
need a push in the right direction.  Thanks in advance for your time.
 
            -Jim
 
Jim Steil
IT Manager
Quality Liquid Feeds
(608) 935-2345 
(608) 341-9896 cell
 
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20061013/abe04762/attachment.html
From grahamd at dscpl.com.au  Sat Oct 14 01:53:52 2006
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Sat Oct 14 01:54:01 2006
Subject: [mod_python] ReportLab integration
In-Reply-To: <005701c6ef05$ad95fa00$800101df@qlf.local>
References: <005701c6ef05$ad95fa00$800101df@qlf.local>
Message-ID: <0A65A2FC-475A-4F5F-BC84-BF3671EA0064@dscpl.com.au>


On 14/10/2006, at 6:25 AM, Jim Steil wrote:

> Can someone help get me pointed in the right direction?  I want to  
> allow a user to request a PDF from my mod_python app.  When they do  
> so, I want to generate the PDF on the fly with ReportLab and then  
> send the resulting PDF back to the browser without saving it  
> anywhere.  I?ve done some searches on the web but can?t seem to  
> find examples of doing this with just mod_python and ReportLab.   
> I?ve seen examples of using other tools, but not just mod_python.   
> This sounds like something others are probably doing, but I need a  
> push in the right direction.  Thanks in advance for your time.
Try:

   http://www.dscpl.com.au/projects/vampire/examples/reportlab/ 
reportlab-demo.pdf

This uses reportlab to generate the PDF.

There is also:

   http://www.dscpl.com.au/projects/vampire/examples/reportlab/ 
trml2pdf-demo.pdf

This uses free version of tool for converting reportlab RML to PDF.

The actual source code for each is at:

   http://www.dscpl.com.au/projects/vampire/source/examples/reportlab/ 
reportlab-demo.py

   http://www.dscpl.com.au/projects/vampire/source/examples/reportlab/ 
_handler.py
   http://www.dscpl.com.au/projects/vampire/source/examples/reportlab/ 
trml2pdf-demo.rml

These happen to use Vampire for the mod_python handler framework,
but you should be able to adapt them to other mod_python handler
systems.

Graham
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20061014/65400d22/attachment.html
From grahamd at dscpl.com.au  Sat Oct 14 02:02:32 2006
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Sat Oct 14 02:02:39 2006
Subject: [mod_python] Multiple call to Session.Session(req) problem
In-Reply-To: <778770d80610131243re7701f9hfc1201b9602b5ade@mail.gmail.com>
References: <778770d80610130735i122ca20dwa0284611bde910cb@mail.gmail.com>
	<452FADB1.3010208@jgassociates.ca>
	<778770d80610131243re7701f9hfc1201b9602b5ade@mail.gmail.com>
Message-ID: <70D43B75-947E-489B-8762-7269B14B862A@dscpl.com.au>


On 14/10/2006, at 5:43 AM, Alex Greif wrote:

>> >    session = Session.MemorySession(req) ###### <-- here the  
>> server hangs

Traditionally, you should not access a specific type of session object.
You should always use Session.Session(). By default this will map to
the appropriate implementation. For Win32, this will be MemorySession.
On UNIX it will be DBMSession.

If you do need to override which is used, you are better off using the
PythonOption directive to set:

   PythonOption session FileSession

Note that MemorySession is only of use on Win32 and will not work on
UNIX where there can be multiple Apache child processes.

Graham
From surf-kid24 at freemail.hu  Sat Oct 14 10:25:53 2006
From: surf-kid24 at freemail.hu (Istvan De)
Date: Sat Oct 14 08:25:17 2006
Subject: [mod_python] mod python and sessions
Message-ID: <1160835953.7701.4.camel@localhost>

Hi!

I'm trying out my mod_python installation using:
http://www.modpython.org/live/current/doc-html/pyapi-sess-example.html

However, this gives an internal server error.
Meanwhile in the apache logs:

[Sat Oct 14 14:22:06 2006] [warn] (88)Function not implemented:
apr_socket_opt_set: (TCP_NODELAY)
[Sat Oct 14 14:22:07 2006] [notice] mod_python: Creating 1 session
mutexes based on 0 max processes and 0 max threads.
[Sat Oct 14 14:23:38 2006] [error] [client 192.168.2.201] PythonHandler
mod_python.publisher: Traceback (most recent call last):
[Sat Oct 14 14:23:38 2006] [error] [client 192.168.2.201] PythonHandler
mod_python.publisher:   File "E:\\system\\libs\\mod_python\\apache.py",
line 303, in HandlerDispatch\n    result = object(req)
[Sat Oct 14 14:23:39 2006] [error] [client 192.168.2.201] PythonHandler
mod_python.publisher:   File "E:\\system\\libs\\mod_python\
\publisher.py", line 136, in handler\n    result =
util.apply_fs_data(object, req.form, req=req)
[Sat Oct 14 14:23:39 2006] [error] [client 192.168.2.201] PythonHandler
mod_python.publisher:   File "E:\\system\\libs\\mod_python\\util.py",
line 362, in apply_fs_data\n    return object(**args)
[Sat Oct 14 14:23:39 2006] [error] [client 192.168.2.201] PythonHandler
mod_python.publisher:   File "E:/Apache/mod_python/py\\index.py", line
4, in handler\n    session = Session.Session(req)
[Sat Oct 14 14:23:39 2006] [error] [client 192.168.2.201] PythonHandler
mod_python.publisher: AttributeError: 'module' object has no attribute
'Session'

How to find out what is wrong?

Thank you
Istvan

From dave at davebritton.com  Sat Oct 14 10:30:36 2006
From: dave at davebritton.com (Dave Britton)
Date: Sat Oct 14 10:31:17 2006
Subject: [mod_python] how do I uplaod a file - code snippets sought
Message-ID: <09fe01c6ef9d$50b68280$0500a8c0@brittonfamily.org>

What is the way to use mod_python.utils to get a file object create and uploaded from an html form? I can't quite get my head around it and I can't find any useful snippets of code to copy. I'd appreciate any help, especially an example. Thanks!

Say I have an html form like this:
 """<form action="upload" method="POST" enctype="multipart/form-data">
 File name: <input name="file" type="file"><br>
 <input name="submit" type="submit" value = "Send this file to the web server">
 </form>"""

What does upload.py have to do to process the file whose name is submitted?

the only cookbook version I have found is for  regular python in cgi mode:    
==================
 form = cgi.FieldStorage()
    if not form.has_key(form_field):
        print HTML_TEMPLATE2% {'SCRIPT_NAME':os.environ['SCRIPT_NAME']}
        return
    fileitem = form[form_field]
    if not fileitem.file:
        return
    fname=os.path.basename(fileitem.filename)
    print "fileitem.filename=%s,<br> uploadddir=%s,<br> fout=%s" \
       %(fileitem.filename, upload_dir, os.path.join(upload_dir, fname) )
    
    fout = file (os.path.join(upload_dir, fname), 'wb')
    while 1:
        chunk = fileitem.file.read(100000)
        if not chunk: break
        fout.write (chunk)
    fout.close()
===============    
How do I adapt this to use mod_python FieldStorage ? Especially for early mod_python as the installation I need this for has version 2.7 on Apache 1.3, debian linux

Dave Britton
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20061014/90932297/attachment-0001.html
From alex.greif at gmail.com  Sat Oct 14 11:54:48 2006
From: alex.greif at gmail.com (Alex Greif)
Date: Sat Oct 14 11:54:53 2006
Subject: [mod_python] how do I uplaod a file - code snippets sought
In-Reply-To: <09fe01c6ef9d$50b68280$0500a8c0@brittonfamily.org>
References: <09fe01c6ef9d$50b68280$0500a8c0@brittonfamily.org>
Message-ID: <778770d80610140854n3f29b6b6o1590236a81ebd0ed@mail.gmail.com>

Hi I use the following snippet to upload my files. Additionally a
foldername is given, but this is only my usecase:

def uploadFile(req, myFile=None, folderName=None):
    """
    Uploads the file and then the file will be written in the given folder.
    """
    req.content_type = "text/html"
    folderPath = _util.getUploadFolderPath( \
                                        uploadRootPath=config.upload_root_path,
                                        folder=folderName)
    fileName = myFile.filename.replace('\\','/').split('/')[-1]
    req.log_error("httpUpload.uploadFile  file: %s/%s" % (folderName,fileName),
                            apache.APLOG_INFO)
    filePath = os.path.join(folderPath,  fileName)
    fileHandle = open(filePath, 'wb')
    size = 0
    while True:
        data = myFile.file.read(8192)
        if not data:
            break
        fileHandle.write(data)
        size += len(data)
        #~ req.log_error("%s - write chunk" % myFile.filename,
apache.APLOG_INFO)
    fileHandle.close()
    os.chmod(filePath, stat.S_IREAD | stat.S_IWRITE | stat.S_IRGRP |
stat.S_IWGRP)

    template = psp.PSP(req, filename='_httpupload/psp/uploadFinished.psp')
    template.run({
                'size':size,
                'fileName':fileName,
                'folderName':folderName,
                'type':myFile.type})


HTH Alex.

On 10/14/06, Dave Britton <dave@davebritton.com> wrote:
>
>
> What is the way to use mod_python.utils to get a file object create and
> uploaded from an html form? I can't quite get my head around it and I can't
> find any useful snippets of code to copy. I'd appreciate any help,
> especially an example. Thanks!
>
> Say I have an html form like this:
>  """<form action="upload" method="POST" enctype="multipart/form-data">
>  File name: <input name="file" type="file"><br>
>  <input name="submit" type="submit" value = "Send this file to the web
> server">
>  </form>"""
>
> What does upload.py have to do to process the file whose name is submitted?
>
> the only cookbook version I have found is for  regular python in cgi mode:
>
> ==================
>  form = cgi.FieldStorage()
>     if not form.has_key(form_field):
>         print HTML_TEMPLATE2% {'SCRIPT_NAME':os.environ['SCRIPT_NAME']}
>         return
>     fileitem = form[form_field]
>     if not fileitem.file:
>         return
>     fname=os.path.basename(fileitem.filename)
>     print "fileitem.filename=%s,<br> uploadddir=%s,<br> fout=%s" \
>        %(fileitem.filename, upload_dir, os.path.join(upload_dir, fname) )
>
>     fout = file (os.path.join(upload_dir, fname), 'wb')
>     while 1:
>         chunk = fileitem.file.read(100000)
>         if not chunk: break
>         fout.write (chunk)
>     fout.close()
> ===============
> How do I adapt this to use mod_python FieldStorage ? Especially for early
> mod_python as the installation I need this for has version 2.7 on Apache
> 1.3, debian linux
>
>
> Dave Britton
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>
>
>
From dave at davebritton.com  Sat Oct 14 14:08:44 2006
From: dave at davebritton.com (Dave Britton)
Date: Sat Oct 14 14:09:44 2006
Subject: [mod_python] test - ignore this
References: <778770d80610130735i122ca20dwa0284611bde910cb@mail.gmail.com><452FADB1.3010208@jgassociates.ca><778770d80610131243re7701f9hfc1201b9602b5ade@mail.gmail.com>
	<70D43B75-947E-489B-8762-7269B14B862A@dscpl.com.au>
Message-ID: <0ca101c6efbb$ca3e6f50$0500a8c0@brittonfamily.org>

test to verify I am sending correctly to the mod_python mailing list, as an
earlier message has failed to show up.


From dave at davebritton.com  Sat Oct 14 17:43:31 2006
From: dave at davebritton.com (dave@davebritton.com)
Date: Sat Oct 14 17:43:44 2006
Subject: [mod_python] how do I uplaod a file - code snippets sought
In-Reply-To: <778770d80610140854n3f29b6b6o1590236a81ebd0ed@mail.gmail.com>
References: <09fe01c6ef9d$50b68280$0500a8c0@brittonfamily.org>
	<778770d80610140854n3f29b6b6o1590236a81ebd0ed@mail.gmail.com>
Message-ID: <20061014174331.lekkjpg51ty2oo4s@omega.sitelutions.com>

Thanks, just what I needed - I've gotten it working now.
-Dave
Quoting Alex Greif <alex.greif@gmail.com>:

> Hi I use the following snippet to upload my files. Additionally a
> foldername is given, but this is only my usecase:
>
> def uploadFile(req, myFile=None, folderName=None):
>    """
>    Uploads the file and then the file will be written in the given folder.
>    """
>    req.content_type = "text/html"
>    folderPath = _util.getUploadFolderPath( \
>                                          
> uploadRootPath=config.upload_root_path,
>                                        folder=folderName)
>    fileName = myFile.filename.replace('\\','/').split('/')[-1]
>    req.log_error("httpUpload.uploadFile  file: %s/%s" %   
> (folderName,fileName),
>                            apache.APLOG_INFO)
>    filePath = os.path.join(folderPath,  fileName)
>    fileHandle = open(filePath, 'wb')
>    size = 0
>    while True:
>        data = myFile.file.read(8192)
>        if not data:
>            break
>        fileHandle.write(data)
>        size += len(data)
>        #~ req.log_error("%s - write chunk" % myFile.filename,
> apache.APLOG_INFO)
>    fileHandle.close()
>    os.chmod(filePath, stat.S_IREAD | stat.S_IWRITE | stat.S_IRGRP |
> stat.S_IWGRP)
>
>    template = psp.PSP(req, filename='_httpupload/psp/uploadFinished.psp')
>    template.run({
>                'size':size,
>                'fileName':fileName,
>                'folderName':folderName,
>                'type':myFile.type})
>
>
> HTH Alex.
>
> On 10/14/06, Dave Britton <dave@davebritton.com> wrote:
>>
>>
>> What is the way to use mod_python.utils to get a file object create and
>> uploaded from an html form? I can't quite get my head around it and I can't
>> find any useful snippets of code to copy. I'd appreciate any help,
>> especially an example. Thanks!
>>
>> Say I have an html form like this:
>> """<form action="upload" method="POST" enctype="multipart/form-data">
>> File name: <input name="file" type="file"><br>
>> <input name="submit" type="submit" value = "Send this file to the web
>> server">
>> </form>"""
>>
>> What does upload.py have to do to process the file whose name is submitted?
>>
>> the only cookbook version I have found is for  regular python in cgi mode:
>>
>> ==================
>> form = cgi.FieldStorage()
>>    if not form.has_key(form_field):
>>        print HTML_TEMPLATE2% {'SCRIPT_NAME':os.environ['SCRIPT_NAME']}
>>        return
>>    fileitem = form[form_field]
>>    if not fileitem.file:
>>        return
>>    fname=os.path.basename(fileitem.filename)
>>    print "fileitem.filename=%s,<br> uploadddir=%s,<br> fout=%s" \
>>       %(fileitem.filename, upload_dir, os.path.join(upload_dir, fname) )
>>
>>    fout = file (os.path.join(upload_dir, fname), 'wb')
>>    while 1:
>>        chunk = fileitem.file.read(100000)
>>        if not chunk: break
>>        fout.write (chunk)
>>    fout.close()
>> ===============
>> How do I adapt this to use mod_python FieldStorage ? Especially for early
>> mod_python as the installation I need this for has version 2.7 on Apache
>> 1.3, debian linux
>>
>>
>> Dave Britton
>> _______________________________________________
>> Mod_python mailing list
>> Mod_python@modpython.org
>> http://mailman.modpython.org/mailman/listinfo/mod_python
>>
>>
>>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python



From angelogladding at gmail.com  Sat Oct 14 20:46:40 2006
From: angelogladding at gmail.com (Angelo Gladding)
Date: Sat Oct 14 20:46:45 2006
Subject: [mod_python] mod_python can't find script
Message-ID: <97b0c450610141746h7210046cue7c0bd74933e078e@mail.gmail.com>

I'm having a problem running my script. I'm running Ubuntu (Dapper)
and Apache2. I just installed mod_python using "apt-get install
libapache2-mod-python". I'm receiving a "Not Found" error when
attempting to execute my .py script.

sandbox.*.com/ - lists (2) links to test.py & test.php
sandbox.*.com/test.php - echos "test"
sandbox.*.com/test.py - "Not Found" (???)

So confused.. it seems as though the PythonHandler can't locate the
script appropriately, however I have no experience with mod_python so
I'm just guessing. Any suggestions?

Thanks,
Angelo
From grahamd at dscpl.com.au  Sat Oct 14 21:42:18 2006
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Sat Oct 14 21:43:28 2006
Subject: [mod_python] mod_python can't find script
In-Reply-To: <97b0c450610141746h7210046cue7c0bd74933e078e@mail.gmail.com>
References: <97b0c450610141746h7210046cue7c0bd74933e078e@mail.gmail.com>
Message-ID: <F99A5C54-EE33-40DB-B101-47FAFC2EE559@dscpl.com.au>

If you have no experience with mod_python, try following the
instructions as written at:

   http://www.dscpl.com.au/wiki/ModPython/Articles/ 
GettingModPythonWorking

This provides pointers as to what can be wrong.

Graham

On 15/10/2006, at 10:46 AM, Angelo Gladding wrote:

> I'm having a problem running my script. I'm running Ubuntu (Dapper)
> and Apache2. I just installed mod_python using "apt-get install
> libapache2-mod-python". I'm receiving a "Not Found" error when
> attempting to execute my .py script.
>
> sandbox.*.com/ - lists (2) links to test.py & test.php
> sandbox.*.com/test.php - echos "test"
> sandbox.*.com/test.py - "Not Found" (???)
>
> So confused.. it seems as though the PythonHandler can't locate the
> script appropriately, however I have no experience with mod_python so
> I'm just guessing. Any suggestions?
>
> Thanks,
> Angelo
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
From surf-kid24 at freemail.hu  Sun Oct 15 08:38:08 2006
From: surf-kid24 at freemail.hu (Istvan De)
Date: Sun Oct 15 06:36:38 2006
Subject: [mod_python] python server pages + session
Message-ID: <1160915888.6871.1.camel@localhost>

Hi!

Can anyone give me an example of sessions working with python server
pages?
globals() show session, but when I try to work with it, mod_python
returns a 0 byte page:

<%
req.content_type = 'text/html'

import mod_python
import sys

#session['a']=1
#req.write("session saved<BR>")
req.write("Session type: ")
req.write(session.__class__.__name__)
%>

Any help is greatly appreciated.

Best regards,
Istvan


From brunson at brunson.com  Sun Oct 15 11:42:07 2006
From: brunson at brunson.com (Eric Brunson)
Date: Sun Oct 15 11:42:24 2006
Subject: [mod_python] python server pages + session
In-Reply-To: <1160915888.6871.1.camel@localhost>
References: <1160915888.6871.1.camel@localhost>
Message-ID: <453256CF.4050603@brunson.com>

Istvan De wrote:
> Hi!
>
> Can anyone give me an example of sessions working with python server
> pages?
> globals() show session, but when I try to work with it, mod_python
> returns a 0 byte page:
>
> <%
> req.content_type = 'text/html'
>
> import mod_python
> import sys
>
> #session['a']=1
> #req.write("session saved<BR>")
> req.write("Session type: ")
> req.write(session.__class__.__name__)
> %>
>   

When I run this code I get:

Session type: DbmSession

Have you checked your apache error log?

> Any help is greatly appreciated.
>
> Best regards,
> Istvan
>
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>   

From Andreas.Klauer at metamorpher.de  Sun Oct 15 18:23:27 2006
From: Andreas.Klauer at metamorpher.de (Andreas Klauer)
Date: Sun Oct 15 18:23:44 2006
Subject: [mod_python] smarter session (un)locking possible?
Message-ID: <20061015222327.GA13866@EIS>

Hi,

I just wasted half day to get rid of a problem, which I, due to lack 
of experience, have to describe as 'random mod_python lockups'. 
Turns out they were caused because I was using Sessions, and Sessions 
lock until the end of the request by default.

The 'lockup' occurs when sending concurrent requests to the server,
which happens quite frequently when users open a lot of tabs on the 
page or - worse - download a file via mod_python.

The culprit code was actually a subroutine like this:

def _get_user_id(req):
    s = Session.Session(req)
    if s.is_new():
        s['id'] = _generate_unique_id()
    s.save()
    return s['id']

Now, first of all I don't want to complain about locking here. 
The fact that I noticed it so late, checked everywhere but there 
for a problem, just shows how much I know about locking issues. 
So it's a good thing that it is taken care of by mod_python.

However, I wonder if mod_python could not have handled this case 
in a smarter way. After all, the session is only used in a separate 
subroutine. The session object does not even exist anymore after 
it returns. Yet it may still take quite some time until the request 
completes.

If it is possible in Python when an object has no more references 
(I'm new to Python so I'm not sure), I would prefer if it could 
unlock the Session immediately. It would be safer than letting me 
doing the locking myself, because I could accidentally unlock at 
a time where it is not safe (because the reference to the session 
object is still around and could be accessed).

Regards
Andreas Klauer
From habnabit at gmail.com  Sun Oct 15 21:18:37 2006
From: habnabit at gmail.com (Aaron Gallagher)
Date: Sun Oct 15 21:19:00 2006
Subject: [mod_python] Bizarre problems with rewriting URLs?
Message-ID: <43935C48-2181-4041-AE57-BC9C04EBCC22@gmail.com>

I'm getting a slough of bizarre problems on one of my Apache servers,  
and everything is perfect on the other. The version is the same, and  
most of the configuration is the same. Namely, I'm trying to figure  
out why mod_python will sometimes randomly send headers twice.

I'm running mod_python handlers in three different locations, and it  
seems like it'll randomly decide to run out of another location  
rather than where the request is asking for. I mean, the top sys.path  
entry in mod_python should always be the directory of the nearest  
handler, right?

The server that doesn't have any URL rewriting done never has any  
problems whatsoever, but the one that does is the one with these  
bizarre problems. I've compared configuration files, and they're both  
almost exactly the same. I can't find any major thing that's  
different between the two other than the rewriting. I'm using  
mod_rewrite to have a dynamic virtual host map. and can post the  
rules and conditions if necessary.


Aaron Gallagher
<habnabit@gmail.com>


-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20061015/52324ba5/attachment.html
From grahamd at dscpl.com.au  Sun Oct 15 21:31:07 2006
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Sun Oct 15 21:31:13 2006
Subject: [mod_python] Bizarre problems with rewriting URLs?
Message-ID: <1160962267.17188@dscpl.user.openhosting.com>

Aaron Gallagher wrote ..
> I'm getting a slough of bizarre problems on one of my Apache servers, 
> and everything is perfect on the other. The version is the same, and  
> most of the configuration is the same. Namely, I'm trying to figure  
> out why mod_python will sometimes randomly send headers twice.
> 
> I'm running mod_python handlers in three different locations, and it  
> seems like it'll randomly decide to run out of another location  
> rather than where the request is asking for. I mean, the top sys.path 
> entry in mod_python should always be the directory of the nearest  
> handler, right?

No. It is a known problem with mod_python that the order of directories in
sys.path can be random. As a result, if you use the same module name in
different handler directories, you can get strange things happening, more so if
you are using the worker MPM on UNIX. See:

  http://www.dscpl.com.au/wiki/ModPython/Articles/ModuleImportingIsBroken

for a full list of module importer problems.

> The server that doesn't have any URL rewriting done never has any  
> problems whatsoever, but the one that does is the one with these  
> bizarre problems. I've compared configuration files, and they're both 
> almost exactly the same. I can't find any major thing that's  
> different between the two other than the rewriting. I'm using  
> mod_rewrite to have a dynamic virtual host map. and can post the  
> rules and conditions if necessary.

By all means post that part of your configuration which is relevant, but also
state which version of mod_python you are using. Also make it clear whether you
have different parts of the URL namespace with their own PythonHandler
directives and whether you have separated them if possible by tagging them
against different Python interpreter instances using PythonInterpreter
directive or otherwise.

Graham
From grahamd at dscpl.com.au  Sun Oct 15 23:28:59 2006
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Sun Oct 15 23:29:04 2006
Subject: [mod_python] Bizarre problems with rewriting URLs?
Message-ID: <1160969339.15367@dscpl.user.openhosting.com>

Please keep the discussion on the mod_python mailing list. Ie., use
reply-all and not just reply.

Aaron Gallagher wrote ..
> On Oct 15, 2006, at 6:31 PM, Graham Dumpleton wrote:
> > By all means post that part of your configuration which is  
> > relevant, but also
> > state which version of mod_python you are using. Also make it clear 
> > whether you
> > have different parts of the URL namespace with their own PythonHandler
> > directives and whether you have separated them if possible by  
> > tagging them
> > against different Python interpreter instances using PythonInterpreter
> > directive or otherwise.
> 
> Here's excerpts from my configuration files:
> 
> <Directory /home/gethabbo/public_html>
>          SetHandler mod_python
>          PythonHandler questionable
>          PythonAuthenHandler questionable
>          PythonOption site_name gethabbo
> </Directory>
> <Directory /home/gethabbo/public_html/editor>
>          AuthType Basic
>          AuthName "Questionable"
>          Require valid-user
> </Directory>
> 
> RewriteMap lowercase int:tolower
> RewriteMap vhost txt:/etc/apache2/vhost.map
> 
> # Use the dynamic virtual host map.
> RewriteCond %{REQUEST_URI} !^/icons/
> RewriteCond %{REQUEST_URI} !^/cgi-bin/
> RewriteCond %{REQUEST_URI} !^/mail/
> RewriteCond %{REQUEST_URI} !^/phpmyadmin/
> RewriteCond %{REQUEST_URI} !^/mt/
> RewriteCond ${lowercase:%{SERVER_NAME}} ^(.+)$
> RewriteCond ${vhost:%1} ^(/.*)$
> RewriteRule ^/(.*)$ %1/public_html/$1 [L]
> 
> And the relevant line in my map:
> www.gethabbo.com        /home/gethabbo
> 
> > No. It is a known problem with mod_python that the order of  
> > directories in
> > sys.path can be random. As a result, if you use the same module  
> > name in
> > different handler directories, you can get strange things  
> > happening, more so if
> > you are using the worker MPM on UNIX.
> 
> Okay. I need to find a way to determine where the Directory is that  
> the handler is defined for. Is there a way to access the  
> configuration other than PythonOptions from the req object?

On this later issue of determining what the handler root is, it depends
on which version of mod_python you are using.

In mod_python 2.X, you had to use:

        # In mod_python 2.X have the req.get_dirs() method.
        handler_root = req.get_dirs()["PythonHandler"]

In mod_python 3.0, 3.1 and 3.2 you would use:

        # In mod_python 3.X have the req.hlist member.
        handler_root = req.hlist.directory

Note though that in both cases, if the handler directive was inside of
a Files directive, the value was wrong due to problems with mod_python.
You would also get a bogus value if using the Location directive.

In mod_python 3.3, the preferred way (if using new importer) is:

        handler_root = apache.get_handler_root()

The req.hlist.directory method also still exists, but for cases like the
Files directive and other cases it will be None and one is supposed
to look back through req.hlist.parent to find context in which handler
was specified. If you use apache.get_handler_root() you don't have
to do that and it will always return correct value without having to
look through the mod_python internals to get it.

In respect of your rewrite problem, don't know. When I get a chance
will go back and read your original description of the problem to see
if I can work out what the real issue is.

Graham
From grahamd at dscpl.com.au  Mon Oct 16 00:16:58 2006
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Mon Oct 16 00:17:06 2006
Subject: [mod_python] Bizarre problems with rewriting URLs?
Message-ID: <1160972218.8647@dscpl.user.openhosting.com>

Aaron Gallagher wrote ..
> On Oct 15, 2006, at 6:31 PM, Graham Dumpleton wrote:
> > By all means post that part of your configuration which is  
> > relevant, but also
> > state which version of mod_python you are using. Also make it clear 
> > whether you
> > have different parts of the URL namespace with their own PythonHandler
> > directives and whether you have separated them if possible by  
> > tagging them
> > against different Python interpreter instances using PythonInterpreter
> > directive or otherwise.
> 
> Here's excerpts from my configuration files:
> 
> <Directory /home/gethabbo/public_html>
>          SetHandler mod_python
>          PythonHandler questionable
>          PythonAuthenHandler questionable

What does your authenhandler do? Does it try and send back its own
complete response? If it does, what is the result it is providing? Can
you take out any secret bits and post it?

Also, what is the actual URL you are using when are making the
request that sends back multiple headers?

>          PythonOption site_name gethabbo
> </Directory>
> <Directory /home/gethabbo/public_html/editor>
>          AuthType Basic
>          AuthName "Questionable"
>          Require valid-user
> </Directory>
> 
> RewriteMap lowercase int:tolower
> RewriteMap vhost txt:/etc/apache2/vhost.map
> 
> # Use the dynamic virtual host map.
> RewriteCond %{REQUEST_URI} !^/icons/
> RewriteCond %{REQUEST_URI} !^/cgi-bin/
> RewriteCond %{REQUEST_URI} !^/mail/
> RewriteCond %{REQUEST_URI} !^/phpmyadmin/
> RewriteCond %{REQUEST_URI} !^/mt/
> RewriteCond ${lowercase:%{SERVER_NAME}} ^(.+)$
> RewriteCond ${vhost:%1} ^(/.*)$
> RewriteRule ^/(.*)$ %1/public_html/$1 [L]
> 
> And the relevant line in my map:
> www.gethabbo.com        /home/gethabbo
From habnabit at gmail.com  Mon Oct 16 00:24:16 2006
From: habnabit at gmail.com (Aaron Gallagher)
Date: Mon Oct 16 00:24:48 2006
Subject: [mod_python] Bizarre problems with rewriting URLs?
In-Reply-To: <1160972218.8647@dscpl.user.openhosting.com>
References: <1160972218.8647@dscpl.user.openhosting.com>
Message-ID: <B4ADFFF0-A118-457D-95B0-9BFFA5B9C069@gmail.com>

The URL is generally any URL as long as it ends in /editor/. I don't  
think it happens anywhere else.

def authenhandler(req):
	if get_prefix(req): return apache.OK # This fetches the database  
prefix from a PythonOption.
	global conn
	conn = MySQLdb.connect(**cparams)
	global curs
	if curs: curs.close()
	curs = conn.cursor()
	user = req.user
	pw = req.get_basic_auth_pw()
	# fetch the salted hash and an administrative flag from an SQL database
	if not fetchedpw:
		return 401
	hash = sha.sha()
	hash.update(pw)
	if crypt.crypt(hash.hexdigest(), fetchedpw) != fetchedpw:
		return 401
	if user == PREFIX or isadmin:
		return apache.OK
	return 403


On Oct 15, 2006, at 9:16 PM, Graham Dumpleton wrote:

> What does your authenhandler do? Does it try and send back its own
> complete response? If it does, what is the result it is providing? Can
> you take out any secret bits and post it?
>
> Also, what is the actual URL you are using when are making the
> request that sends back multiple headers?

Aaron Gallagher
<habnabit@gmail.com>


From habnabit at gmail.com  Mon Oct 16 02:24:46 2006
From: habnabit at gmail.com (Aaron Gallagher)
Date: Mon Oct 16 02:25:13 2006
Subject: [mod_python] Bizarre problems with rewriting URLs?
In-Reply-To: <1160972218.8647@dscpl.user.openhosting.com>
References: <1160972218.8647@dscpl.user.openhosting.com>
Message-ID: <86BBAF2A-EFAD-420C-84F2-64409A5E65E0@gmail.com>

Ah, I found out what the problem was. I wasn't returning apache.OK  
after my internal_redirect calls and so the request was processed  
more than it should've and churning out some interesting garbage when  
it was supposed to just 404. My browser was trying to get favicon.ico.

Thanks for your help, though. req.hlist.directory was just what I  
needed.

Aaron Gallagher
<habnabit@gmail.com>


From alex.greif at gmail.com  Mon Oct 16 09:55:32 2006
From: alex.greif at gmail.com (Alex Greif)
Date: Mon Oct 16 09:55:38 2006
Subject: [mod_python] SQLAlchemy logging with mod_python
Message-ID: <778770d80610160655i207683d1tb8e98f90ba8d1bdb@mail.gmail.com>

Hi,
is there a possibility to redirect sqlaachemy log messages to the
error_log of mod_python?

Alex.
From jim at qlf.com  Mon Oct 16 10:53:47 2006
From: jim at qlf.com (Jim Steil)
Date: Mon Oct 16 10:54:46 2006
Subject: [mod_python] ReportLab integration
In-Reply-To: <0A65A2FC-475A-4F5F-BC84-BF3671EA0064@dscpl.com.au>
Message-ID: <003501c6f132$e220d860$800101df@qlf.local>

Graham: 
 
Thanks so much for the examples.  That's exactly what I needed.  I used the
example in Reportlab-demo.py and it is working great in FireFox, but not in
IE.  There is a comment in the source about IE choking on some code but I
don't know how to get around that.  Also, is there some trick or
configuration I need to do to get a .pdf extension on my url?  I'm using the
publisher handler.
 
Thanks again.  What I've got working now really helps, and getting around
these 2 issues would just be icing on the cake!
 
            -Jim
 
Jim Steil
IT Manager
Quality Liquid Feeds
(608) 935-2345 
(608) 341-9896 cell
  _____  

From: Graham Dumpleton [mailto:grahamd@dscpl.com.au] 
Sent: Saturday, October 14, 2006 12:54 AM
To: Jim Steil
Cc: mod_python@modpython.org
Subject: Re: [mod_python] ReportLab integration
 
 
On 14/10/2006, at 6:25 AM, Jim Steil wrote:



Can someone help get me pointed in the right direction?  I want to allow a
user to request a PDF from my mod_python app.  When they do so, I want to
generate the PDF on the fly with ReportLab and then send the resulting PDF
back to the browser without saving it anywhere.  I've done some searches on
the web but can't seem to find examples of doing this with just mod_python
and ReportLab.  I've seen examples of using other tools, but not just
mod_python.  This sounds like something others are probably doing, but I
need a push in the right direction.  Thanks in advance for your time.
Try:
 
 
http://www.dscpl.com.au/projects/vampire/examples/reportlab/reportlab-demo.p
df
 
This uses reportlab to generate the PDF.
 
There is also:
 
 
http://www.dscpl.com.au/projects/vampire/examples/reportlab/trml2pdf-demo.pd
f
 
This uses free version of tool for converting reportlab RML to PDF.
 
The actual source code for each is at:
 
 
http://www.dscpl.com.au/projects/vampire/source/examples/reportlab/reportlab
-demo.py
 
 
http://www.dscpl.com.au/projects/vampire/source/examples/reportlab/_handler.
py
 
http://www.dscpl.com.au/projects/vampire/source/examples/reportlab/trml2pdf-
demo.rml
 
These happen to use Vampire for the mod_python handler framework,
but you should be able to adapt them to other mod_python handler
systems.
 
Graham
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20061016/1715ae92/attachment.html
From papanii.okai at gmail.com  Mon Oct 16 12:51:35 2006
From: papanii.okai at gmail.com (Papanii Okai)
Date: Mon Oct 16 12:51:40 2006
Subject: [mod_python] Mod_python and Javascript
Message-ID: <4533B897.5020703@gmail.com>

Hi Guys,
       I am just getting into mod_python and i have a couple of 
questions. I have successfully installed mod_python and Apache2 on my 
Intel-mac. I have been playing around with some of the simple examples 
in the documentation. However when i went onto the web there seems to be 
a limited amount of examples. What i am trying to do is create a website 
with mod_python, javaScript with a little bit of Ajax. I already have 
created some html pages and would love to integrate them all together. 
Does anyone know of any sites with good tutorials for this? I would be 
very grateful.

Sincerely
--Papanii

From ccbean at gmail.com  Mon Oct 16 13:45:28 2006
From: ccbean at gmail.com (Colin Bean)
Date: Mon Oct 16 13:45:34 2006
Subject: [mod_python] Mod_python and Javascript
In-Reply-To: <4533B897.5020703@gmail.com>
References: <4533B897.5020703@gmail.com>
Message-ID: <29a6ca010610161045t3f969efdja601b8ba234fabd4@mail.gmail.com>

Hi Papanii,

First of all, the scope of my experience with this is hand-coding
javascript / ajax stuff and using it to call mod_python components
which I also wrote from scratch; I haven't used any of the ajax
frameworks out there.

There's lots of different ways to go about this -- for the basic
pages, you've got the option of using psp, publisher, or writing your
own custom handler.  You can also generate data for your ajax
components using any of these, and there's some libraries that can
help you format your output.  I like simplejson:

http://cheeseshop.python.org/pypi/simplejson

Which can serialize a python object into JSON (lightweight text
representation of a javascript object).  Not too terrible to do by
hand, but that's a quick and easy solution.

I don't know of any tutorials off the top of my head; once you're
familiar with mod_python and ajax, it should by pretty intuitive to
put them together.

Don't hesitate to ask more questions as you get into the various
mod_python handlers.

Colin

On 10/16/06, Papanii Okai <papanii.okai@gmail.com> wrote:
> Hi Guys,
>        I am just getting into mod_python and i have a couple of
> questions. I have successfully installed mod_python and Apache2 on my
> Intel-mac. I have been playing around with some of the simple examples
> in the documentation. However when i went onto the web there seems to be
> a limited amount of examples. What i am trying to do is create a website
> with mod_python, javaScript with a little bit of Ajax. I already have
> created some html pages and would love to integrate them all together.
> Does anyone know of any sites with good tutorials for this? I would be
> very grateful.
>
> Sincerely
> --Papanii
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>
From brunson at brunson.com  Mon Oct 16 14:55:02 2006
From: brunson at brunson.com (Eric Brunson)
Date: Mon Oct 16 14:55:01 2006
Subject: [mod_python] SQLAlchemy logging with mod_python
In-Reply-To: <778770d80610160655i207683d1tb8e98f90ba8d1bdb@mail.gmail.com>
References: <778770d80610160655i207683d1tb8e98f90ba8d1bdb@mail.gmail.com>
Message-ID: <4533D586.1090201@brunson.com>

Alex Greif wrote:
> Hi,
> is there a possibility to redirect sqlaachemy log messages to the
> error_log of mod_python?

I'm not aware of logging functions in SQLAlchemy, though there's a lot 
of SA that I'm not an expert in.  SQLAlchemy raises exceptions, which 
are in turn, printed out by the python interpreter, which goes to 
stdout.  You've obviously noticed that there is no stdout in mod_python, 
you would have to write an exception handler to catch any otherwise 
unhandled exception and write it to whatever error log you are writing 
to (see http://docs.python.org/lib/module-sys.html for the exc_info() 
function and exc_ family of functions).

My SQLAlchemy exceptions go to my apache error log by default, are you 
doing something to keep that from happening?  Perhaps catching the 
exception and not doing anything with it?

>
> Alex.
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python

From ccbean at gmail.com  Mon Oct 16 15:04:47 2006
From: ccbean at gmail.com (Colin Bean)
Date: Mon Oct 16 15:04:53 2006
Subject: [mod_python] ReportLab integration
In-Reply-To: <003501c6f132$e220d860$800101df@qlf.local>
References: <0A65A2FC-475A-4F5F-BC84-BF3671EA0064@dscpl.com.au>
	<003501c6f132$e220d860$800101df@qlf.local>
Message-ID: <29a6ca010610161204s3c9280e4p9fc88ad3964cef44@mail.gmail.com>

Hi Jim,

How does it break in IE?  If it it won't recognize the result is a
pdf, try setting the content-disposition header.  You can use this to
specify a filename that browser will save your file as; if you give it
a .pdf extension then IE should open it fine.  Here's a little more
info on it:
http://support.microsoft.com/kb/260519

I *think* that changing your handler to use a .pdf extension will do
the same thing (I haven't used publisher yet so I'm not sure how to do
this); the content disposition trick might be easier, though.

-Colin

On 10/16/06, Jim Steil <jim@qlf.com> wrote:
>
>
>
>
> Graham:
>
>
>
> Thanks so much for the examples.  That's exactly what I needed.  I used the
> example in Reportlab-demo.py and it is working great in FireFox, but not in
> IE.  There is a comment in the source about IE choking on some code but I
> don't know how to get around that.  Also, is there some trick or
> configuration I need to do to get a .pdf extension on my url?  I'm using the
> publisher handler.
>
>
>
> Thanks again.  What I've got working now really helps, and getting around
> these 2 issues would just be icing on the cake!
>
>
>
>             -Jim
>
>
>
>
> Jim Steil
>  IT Manager
>  Quality Liquid Feeds
>  (608) 935-2345
>
> (608) 341-9896 cell
>
>  ________________________________
>
>
> From: Graham Dumpleton [mailto:grahamd@dscpl.com.au]
>  Sent: Saturday, October 14, 2006 12:54 AM
>  To: Jim Steil
>  Cc: mod_python@modpython.org
>  Subject: Re: [mod_python] ReportLab integration
>
>
>
>
>
>
>
>
> On 14/10/2006, at 6:25 AM, Jim Steil wrote:
>
>
>
>
>
>
> Can someone help get me pointed in the right direction?  I want to allow a
> user to request a PDF from my mod_python app.  When they do so, I want to
> generate the PDF on the fly with ReportLab and then send the resulting PDF
> back to the browser without saving it anywhere.  I've done some searches on
> the web but can't seem to find examples of doing this with just mod_python
> and ReportLab.  I've seen examples of using other tools, but not just
> mod_python.  This sounds like something others are probably doing, but I
> need a push in the right direction.  Thanks in advance for your time.
>
> Try:
>
>
>
>
>
>
> http://www.dscpl.com.au/projects/vampire/examples/reportlab/reportlab-demo.pdf
>
>
>
>
>
> This uses reportlab to generate the PDF.
>
>
>
>
>
> There is also:
>
>
>
>
>
>
> http://www.dscpl.com.au/projects/vampire/examples/reportlab/trml2pdf-demo.pdf
>
>
>
>
>
> This uses free version of tool for converting reportlab RML to PDF.
>
>
>
>
>
> The actual source code for each is at:
>
>
>
>
>
>
> http://www.dscpl.com.au/projects/vampire/source/examples/reportlab/reportlab-demo.py
>
>
>
>
>
>
> http://www.dscpl.com.au/projects/vampire/source/examples/reportlab/_handler.py
>
>
>
> http://www.dscpl.com.au/projects/vampire/source/examples/reportlab/trml2pdf-demo.rml
>
>
>
>
>
> These happen to use Vampire for the mod_python handler framework,
>
>
> but you should be able to adapt them to other mod_python handler
>
>
> systems.
>
>
>
>
>
> Graham
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>
>
>
From jim at qlf.com  Mon Oct 16 15:15:53 2006
From: jim at qlf.com (Jim Steil)
Date: Mon Oct 16 15:16:46 2006
Subject: [mod_python] ReportLab integration
In-Reply-To: <29a6ca010610161204s3c9280e4p9fc88ad3964cef44@mail.gmail.com>
Message-ID: <007c01c6f157$7fc39250$800101df@qlf.local>

It runs my script, but doesn't go anywhere when it is done.  The code looks
like this:
 
---------------------
# Create the document.
reportPeriod = 'Report for the Month of %s %s' % (months[reportMonth],
reportYear)
output = StringIO.StringIO()
doc = SimpleDocTemplate(output, pagesize=landscape(letter))
doc.m = reportPeriod
go(doc, reportMonth, reportYear)
# Return the rendered page content.
content = output.getvalue()
 
req.content_type = "application/pdf"
req.headers_out['Content-Length'] = str(len(content))
 
# Internet Explorer chokes on this with PDFs.
#req.headers_out['Pragma'] = 'no-cache' 
#req.headers_out['Cache-Control'] = 'no-cache' 
#req.headers_out['Expires'] = '-1' 
 
req.send_http_header()
req.write(content)
return apache.OK
---------------------
 
This works fine in Firefox, but doesn't do anything in IE.  The comment in
the code about Internet Explorer choking was there in Grahams example. 
 
I looked at the link you provided, but it seems to speak about doing a Save
As when you display the content.  That is not what I'm trying to accomplish.
I want the pdf to come back to the screen, but have it come back with a
name.
 
      -Jim
 
-----Original Message-----
From: Colin Bean [mailto:ccbean@gmail.com] 
Sent: Monday, October 16, 2006 2:05 PM
To: Jim Steil
Cc: mod_python@modpython.org
Subject: Re: [mod_python] ReportLab integration
 
Hi Jim,
 
How does it break in IE?  If it it won't recognize the result is a
pdf, try setting the content-disposition header.  You can use this to
specify a filename that browser will save your file as; if you give it
a .pdf extension then IE should open it fine.  Here's a little more
info on it:
http://support.microsoft.com/kb/260519
 
I *think* that changing your handler to use a .pdf extension will do
the same thing (I haven't used publisher yet so I'm not sure how to do
this); the content disposition trick might be easier, though.
 
-Colin
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20061016/5e170c04/attachment-0001.html
From ccbean at gmail.com  Mon Oct 16 15:44:03 2006
From: ccbean at gmail.com (Colin Bean)
Date: Mon Oct 16 15:44:09 2006
Subject: [mod_python] ReportLab integration
In-Reply-To: <007701c6f157$12893af0$800101df@qlf.local>
References: <29a6ca010610161204s3c9280e4p9fc88ad3964cef44@mail.gmail.com>
	<007701c6f157$12893af0$800101df@qlf.local>
Message-ID: <29a6ca010610161244v34aefb25ia5954046a4e6026e@mail.gmail.com>

Hi Jim,

So you're just getting a blank page in IE when you try to access your
pdf?  One case is that the content is actually being sent to IE, and
IE isn't displaying to properly, another is the content isn't being
sent correctly / completely.  I'm guessing it's the first, since
there's not much that's browser-dependent in your code, but you might
want to check this.  In the past, I"ve used a lightweight http proxy
(pick your flavor -- webscarab worked well for me) between browser and
server, to make sure that the complete content is actually being sent
to the browser.

So, assuming the pdf content is actually being send but IE won't display it:
Just realized that the microsoft KB article never mentions this
(sorry), but if you change "content-disposition: attachment..." to
"content-disposition: inline...", it will set the filename / type for
inline display like you're looking for.

Here's another snippet that talks about handling pdf content (it's for
java, but mainly deals with headers / filename stuff):
http://www.rgagnon.com/javadetails/java-0404.html

hth,
Colin



On 10/16/06, Jim Steil <jim@qlf.com> wrote:
>
>
>
>
> It runs my script, but doesn't go anywhere when it is done.  The code looks
> like this:
>
>
>
> ---------------------
>
> # Create the document.
>
> reportPeriod = 'Report for the Month of %s %s' % (months[reportMonth],
> reportYear)
>
> output = StringIO.StringIO()
>
> doc = SimpleDocTemplate(output, pagesize=landscape(letter))
>
> doc.m = reportPeriod
>
> go(doc, reportMonth, reportYear)
>
> # Return the rendered page content.
>
> content = output.getvalue()
>
>
>
> req.content_type = "application/pdf"
>
> req.headers_out['Content-Length'] = str(len(content))
>
>
>
> # Internet Explorer chokes on this with PDFs.
>
> #req.headers_out['Pragma'] = 'no-cache'
>
> #req.headers_out['Cache-Control'] = 'no-cache'
>
> #req.headers_out['Expires'] = '-1'
>
>
>
> req.send_http_header()
>
> req.write(content)
>
> return apache.OK
>
> ---------------------
>
>
>
>
>
> This works fine in Firefox, but doesn't do anything in IE.  The comment in
> the code about Internet Explorer choking was there in Grahams example.
>
>
>
> I looked at the link you provided, but it seems to speak about doing a Save
> As when you display the content.  That is not what I'm trying to accomplish.
>  I want the pdf to come back to the screen, but have it come back with a
> name.
>
>
>
>       -Jim
>
>
>
> Jim Steil
>
> IT Manager
>
> Quality Liquid Feeds
>
> (608) 935-2345
>
> (608) 341-9896 cell
>
>
>
>
> -----Original Message-----
>  From: Colin Bean [mailto:ccbean@gmail.com]
>  Sent: Monday, October 16, 2006 2:05 PM
>  To: Jim Steil
>  Cc: mod_python@modpython.org
>  Subject: Re: [mod_python] ReportLab integration
>
>
>
> Hi Jim,
>
>
>
> How does it break in IE?  If it it won't recognize the result is a
>
> pdf, try setting the content-disposition header.  You can use this to
>
> specify a filename that browser will save your file as; if you give it
>
> a .pdf extension then IE should open it fine.  Here's a little more
>
> info on it:
>
> http://support.microsoft.com/kb/260519
>
>
>
> I *think* that changing your handler to use a .pdf extension will do
>
> the same thing (I haven't used publisher yet so I'm not sure how to do
>
> this); the content disposition trick might be easier, though.
>
>
>
> -Colin
>
>
>
> On 10/16/06, Jim Steil <jim@qlf.com> wrote:
>
> >
>
> >
>
> >
>
> >
>
> > Graham:
>
> >
>
> >
>
> >
>
> > Thanks so much for the examples.  That's exactly what I needed.  I used
> the
>
> > example in Reportlab-demo.py and it is working great in FireFox, but not
> in
>
> > IE.  There is a comment in the source about IE choking on some code but I
>
> > don't know how to get around that.  Also, is there some trick or
>
> > configuration I need to do to get a .pdf extension on my url?  I'm using
> the
>
> > publisher handler.
>
> >
>
> >
>
> >
>
> > Thanks again.  What I've got working now really helps, and getting around
>
> > these 2 issues would just be icing on the cake!
>
> >
>
> >
>
> >
>
> >             -Jim
>
> >
>
> >
>
> >
>
> >
>
> > Jim Steil
>
> >  IT Manager
>
> >  Quality Liquid Feeds
>
> >  (608) 935-2345
>
> >
>
> > (608) 341-9896 cell
>
> >
>
> >  ________________________________
>
> >
>
> >
>
> > From: Graham Dumpleton [mailto:grahamd@dscpl.com.au]
>
> >  Sent: Saturday, October 14, 2006 12:54 AM
>
> >  To: Jim Steil
>
> >  Cc: mod_python@modpython.org
>
> >  Subject: Re: [mod_python] ReportLab integration
>
> >
>
> >
>
> >
>
> >
>
> >
>
> >
>
> >
>
> >
>
> > On 14/10/2006, at 6:25 AM, Jim Steil wrote:
>
> >
>
> >
>
> >
>
> >
>
> >
>
> >
>
> > Can someone help get me pointed in the right direction?  I want to allow a
>
> > user to request a PDF from my mod_python app.  When they do so, I want to
>
> > generate the PDF on the fly with ReportLab and then send the resulting PDF
>
> > back to the browser without saving it anywhere.  I've done some searches
> on
>
> > the web but can't seem to find examples of doing this with just mod_python
>
> > and ReportLab.  I've seen examples of using other tools, but not just
>
> > mod_python.  This sounds like something others are probably doing, but I
>
> > need a push in the right direction.  Thanks in advance for your time.
>
> >
>
> > Try:
>
> >
>
> >
>
> >
>
> >
>
> >
>
> >
>
> >
> http://www.dscpl.com.au/projects/vampire/examples/reportlab/reportlab-demo.pdf
>
> >
>
> >
>
> >
>
> >
>
> >
>
> > This uses reportlab to generate the PDF.
>
> >
>
> >
>
> >
>
> >
>
> >
>
> > There is also:
>
> >
>
> >
>
> >
>
> >
>
> >
>
> >
>
> >
> http://www.dscpl.com.au/projects/vampire/examples/reportlab/trml2pdf-demo.pdf
>
> >
>
> >
>
> >
>
> >
>
> >
>
> > This uses free version of tool for converting reportlab RML to PDF.
>
> >
>
> >
>
> >
>
> >
>
> >
>
> > The actual source code for each is at:
>
> >
>
> >
>
> >
>
> >
>
> >
>
> >
>
> >
> http://www.dscpl.com.au/projects/vampire/source/examples/reportlab/reportlab-demo.py
>
> >
>
> >
>
> >
>
> >
>
> >
>
> >
>
> >
> http://www.dscpl.com.au/projects/vampire/source/examples/reportlab/_handler.py
>
> >
>
> >
>
> >
>
> >
> http://www.dscpl.com.au/projects/vampire/source/examples/reportlab/trml2pdf-demo.rml
>
> >
>
> >
>
> >
>
> >
>
> >
>
> > These happen to use Vampire for the mod_python handler framework,
>
> >
>
> >
>
> > but you should be able to adapt them to other mod_python handler
>
> >
>
> >
>
> > systems.
>
> >
>
> >
>
> >
>
> >
>
> >
>
> > Graham
>
> > _______________________________________________
>
> > Mod_python mailing list
>
> > Mod_python@modpython.org
>
> > http://mailman.modpython.org/mailman/listinfo/mod_python
>
> >
>
> >
>
> >
From jim at qlf.com  Mon Oct 16 17:00:18 2006
From: jim at qlf.com (Jim Steil)
Date: Mon Oct 16 17:01:18 2006
Subject: [mod_python] ReportLab integration
In-Reply-To: <29a6ca010610161244v34aefb25ia5954046a4e6026e@mail.gmail.com>
Message-ID: <00a001c6f166$16357c40$800101df@qlf.local>

I installed WebScarab and tested it and it all looks perfect.  I set the
headers as you recommended, but still, IE won't display the content and
Firefox won't give me the name of the file I've put in the filename header
variable.  I'm at a bit of a loss as to where to go next.

	-Jim

Jim Steil
IT Manager
Quality Liquid Feeds
(608) 935-2345 
(608) 341-9896 cell

-----Original Message-----
From: Colin Bean [mailto:ccbean@gmail.com] 
Sent: Monday, October 16, 2006 2:44 PM
To: Jim Steil
Cc: mod_python@modpython.org
Subject: Re: [mod_python] ReportLab integration

Hi Jim,

So you're just getting a blank page in IE when you try to access your
pdf?  One case is that the content is actually being sent to IE, and
IE isn't displaying to properly, another is the content isn't being
sent correctly / completely.  I'm guessing it's the first, since
there's not much that's browser-dependent in your code, but you might
want to check this.  In the past, I"ve used a lightweight http proxy
(pick your flavor -- webscarab worked well for me) between browser and
server, to make sure that the complete content is actually being sent
to the browser.

So, assuming the pdf content is actually being send but IE won't display it:
Just realized that the microsoft KB article never mentions this
(sorry), but if you change "content-disposition: attachment..." to
"content-disposition: inline...", it will set the filename / type for
inline display like you're looking for.

Here's another snippet that talks about handling pdf content (it's for
java, but mainly deals with headers / filename stuff):
http://www.rgagnon.com/javadetails/java-0404.html

hth,
Colin



On 10/16/06, Jim Steil <jim@qlf.com> wrote:
>
>
>
>
> It runs my script, but doesn't go anywhere when it is done.  The code
looks
> like this:
>
>
>
> ---------------------
>
> # Create the document.
>
> reportPeriod = 'Report for the Month of %s %s' % (months[reportMonth],
> reportYear)
>
> output = StringIO.StringIO()
>
> doc = SimpleDocTemplate(output, pagesize=landscape(letter))
>
> doc.m = reportPeriod
>
> go(doc, reportMonth, reportYear)
>
> # Return the rendered page content.
>
> content = output.getvalue()
>
>
>
> req.content_type = "application/pdf"
>
> req.headers_out['Content-Length'] = str(len(content))
>
>
>
> # Internet Explorer chokes on this with PDFs.
>
> #req.headers_out['Pragma'] = 'no-cache'
>
> #req.headers_out['Cache-Control'] = 'no-cache'
>
> #req.headers_out['Expires'] = '-1'
>
>
>
> req.send_http_header()
>
> req.write(content)
>
> return apache.OK
>
> ---------------------
>
>
>
>
>
> This works fine in Firefox, but doesn't do anything in IE.  The comment in
> the code about Internet Explorer choking was there in Grahams example.
>
>
>
> I looked at the link you provided, but it seems to speak about doing a
Save
> As when you display the content.  That is not what I'm trying to
accomplish.
>  I want the pdf to come back to the screen, but have it come back with a
> name.
>
>
>
>       -Jim
>
>
>
> Jim Steil
>
> IT Manager
>
> Quality Liquid Feeds
>
> (608) 935-2345
>
> (608) 341-9896 cell
>
>
>
>
> -----Original Message-----
>  From: Colin Bean [mailto:ccbean@gmail.com]
>  Sent: Monday, October 16, 2006 2:05 PM
>  To: Jim Steil
>  Cc: mod_python@modpython.org
>  Subject: Re: [mod_python] ReportLab integration
>
>
>
> Hi Jim,
>
>
>
> How does it break in IE?  If it it won't recognize the result is a
>
> pdf, try setting the content-disposition header.  You can use this to
>
> specify a filename that browser will save your file as; if you give it
>
> a .pdf extension then IE should open it fine.  Here's a little more
>
> info on it:
>
> http://support.microsoft.com/kb/260519
>
>
>
> I *think* that changing your handler to use a .pdf extension will do
>
> the same thing (I haven't used publisher yet so I'm not sure how to do
>
> this); the content disposition trick might be easier, though.
>
>
>
> -Colin
>
>
>
> On 10/16/06, Jim Steil <jim@qlf.com> wrote:
>
> >
>
> >
>
> >
>
> >
>
> > Graham:
>
> >
>
> >
>
> >
>
> > Thanks so much for the examples.  That's exactly what I needed.  I used
> the
>
> > example in Reportlab-demo.py and it is working great in FireFox, but not
> in
>
> > IE.  There is a comment in the source about IE choking on some code but
I
>
> > don't know how to get around that.  Also, is there some trick or
>
> > configuration I need to do to get a .pdf extension on my url?  I'm using
> the
>
> > publisher handler.
>
> >
>
> >
>
> >
>
> > Thanks again.  What I've got working now really helps, and getting
around
>
> > these 2 issues would just be icing on the cake!
>
> >
>
> >
>
> >
>
> >             -Jim
>
> >
>
> >
>
> >
>
> >
>
> > Jim Steil
>
> >  IT Manager
>
> >  Quality Liquid Feeds
>
> >  (608) 935-2345
>
> >
>
> > (608) 341-9896 cell
>
> >
>
> >  ________________________________
>
> >
>
> >
>
> > From: Graham Dumpleton [mailto:grahamd@dscpl.com.au]
>
> >  Sent: Saturday, October 14, 2006 12:54 AM
>
> >  To: Jim Steil
>
> >  Cc: mod_python@modpython.org
>
> >  Subject: Re: [mod_python] ReportLab integration
>
> >
>
> >
>
> >
>
> >
>
> >
>
> >
>
> >
>
> >
>
> > On 14/10/2006, at 6:25 AM, Jim Steil wrote:
>
> >
>
> >
>
> >
>
> >
>
> >
>
> >
>
> > Can someone help get me pointed in the right direction?  I want to allow
a
>
> > user to request a PDF from my mod_python app.  When they do so, I want
to
>
> > generate the PDF on the fly with ReportLab and then send the resulting
PDF
>
> > back to the browser without saving it anywhere.  I've done some searches
> on
>
> > the web but can't seem to find examples of doing this with just
mod_python
>
> > and ReportLab.  I've seen examples of using other tools, but not just
>
> > mod_python.  This sounds like something others are probably doing, but I
>
> > need a push in the right direction.  Thanks in advance for your time.
>
> >
>
> > Try:
>
> >
>
> >
>
> >
>
> >
>
> >
>
> >
>
> >
>
http://www.dscpl.com.au/projects/vampire/examples/reportlab/reportlab-demo.p
df
>
> >
>
> >
>
> >
>
> >
>
> >
>
> > This uses reportlab to generate the PDF.
>
> >
>
> >
>
> >
>
> >
>
> >
>
> > There is also:
>
> >
>
> >
>
> >
>
> >
>
> >
>
> >
>
> >
>
http://www.dscpl.com.au/projects/vampire/examples/reportlab/trml2pdf-demo.pd
f
>
> >
>
> >
>
> >
>
> >
>
> >
>
> > This uses free version of tool for converting reportlab RML to PDF.
>
> >
>
> >
>
> >
>
> >
>
> >
>
> > The actual source code for each is at:
>
> >
>
> >
>
> >
>
> >
>
> >
>
> >
>
> >
>
http://www.dscpl.com.au/projects/vampire/source/examples/reportlab/reportlab
-demo.py
>
> >
>
> >
>
> >
>
> >
>
> >
>
> >
>
> >
>
http://www.dscpl.com.au/projects/vampire/source/examples/reportlab/_handler.
py
>
> >
>
> >
>
> >
>
> >
>
http://www.dscpl.com.au/projects/vampire/source/examples/reportlab/trml2pdf-
demo.rml
>
> >
>
> >
>
> >
>
> >
>
> >
>
> > These happen to use Vampire for the mod_python handler framework,
>
> >
>
> >
>
> > but you should be able to adapt them to other mod_python handler
>
> >
>
> >
>
> > systems.
>
> >
>
> >
>
> >
>
> >
>
> >
>
> > Graham
>
> > _______________________________________________
>
> > Mod_python mailing list
>
> > Mod_python@modpython.org
>
> > http://mailman.modpython.org/mailman/listinfo/mod_python
>
> >
>
> >
>
> >


From ccbean at gmail.com  Mon Oct 16 17:10:10 2006
From: ccbean at gmail.com (Colin Bean)
Date: Mon Oct 16 17:10:18 2006
Subject: [mod_python] ReportLab integration
In-Reply-To: <00a001c6f166$16357c40$800101df@qlf.local>
References: <29a6ca010610161244v34aefb25ia5954046a4e6026e@mail.gmail.com>
	<00a001c6f166$16357c40$800101df@qlf.local>
Message-ID: <29a6ca010610161410w39b85f30j4dee905d8eae0fe8@mail.gmail.com>

Could you post just the headers as they appear in WebScarab?

-Colin

On 10/16/06, Jim Steil <jim@qlf.com> wrote:
> I installed WebScarab and tested it and it all looks perfect.  I set the
> headers as you recommended, but still, IE won't display the content and
> Firefox won't give me the name of the file I've put in the filename header
> variable.  I'm at a bit of a loss as to where to go next.
>
>         -Jim
>
> Jim Steil
> IT Manager
> Quality Liquid Feeds
> (608) 935-2345
> (608) 341-9896 cell
>
> -----Original Message-----
> From: Colin Bean [mailto:ccbean@gmail.com]
> Sent: Monday, October 16, 2006 2:44 PM
> To: Jim Steil
> Cc: mod_python@modpython.org
> Subject: Re: [mod_python] ReportLab integration
>
> Hi Jim,
>
> So you're just getting a blank page in IE when you try to access your
> pdf?  One case is that the content is actually being sent to IE, and
> IE isn't displaying to properly, another is the content isn't being
> sent correctly / completely.  I'm guessing it's the first, since
> there's not much that's browser-dependent in your code, but you might
> want to check this.  In the past, I"ve used a lightweight http proxy
> (pick your flavor -- webscarab worked well for me) between browser and
> server, to make sure that the complete content is actually being sent
> to the browser.
>
> So, assuming the pdf content is actually being send but IE won't display it:
> Just realized that the microsoft KB article never mentions this
> (sorry), but if you change "content-disposition: attachment..." to
> "content-disposition: inline...", it will set the filename / type for
> inline display like you're looking for.
>
> Here's another snippet that talks about handling pdf content (it's for
> java, but mainly deals with headers / filename stuff):
> http://www.rgagnon.com/javadetails/java-0404.html
>
> hth,
> Colin
>
>
>
> On 10/16/06, Jim Steil <jim@qlf.com> wrote:
> >
> >
> >
> >
> > It runs my script, but doesn't go anywhere when it is done.  The code
> looks
> > like this:
> >
> >
> >
> > ---------------------
> >
> > # Create the document.
> >
> > reportPeriod = 'Report for the Month of %s %s' % (months[reportMonth],
> > reportYear)
> >
> > output = StringIO.StringIO()
> >
> > doc = SimpleDocTemplate(output, pagesize=landscape(letter))
> >
> > doc.m = reportPeriod
> >
> > go(doc, reportMonth, reportYear)
> >
> > # Return the rendered page content.
> >
> > content = output.getvalue()
> >
> >
> >
> > req.content_type = "application/pdf"
> >
> > req.headers_out['Content-Length'] = str(len(content))
> >
> >
> >
> > # Internet Explorer chokes on this with PDFs.
> >
> > #req.headers_out['Pragma'] = 'no-cache'
> >
> > #req.headers_out['Cache-Control'] = 'no-cache'
> >
> > #req.headers_out['Expires'] = '-1'
> >
> >
> >
> > req.send_http_header()
> >
> > req.write(content)
> >
> > return apache.OK
> >
> > ---------------------
> >
> >
> >
> >
> >
> > This works fine in Firefox, but doesn't do anything in IE.  The comment in
> > the code about Internet Explorer choking was there in Grahams example.
> >
> >
> >
> > I looked at the link you provided, but it seems to speak about doing a
> Save
> > As when you display the content.  That is not what I'm trying to
> accomplish.
> >  I want the pdf to come back to the screen, but have it come back with a
> > name.
> >
> >
> >
> >       -Jim
> >
> >
> >
> > Jim Steil
> >
> > IT Manager
> >
> > Quality Liquid Feeds
> >
> > (608) 935-2345
> >
> > (608) 341-9896 cell
> >
> >
> >
> >
> > -----Original Message-----
> >  From: Colin Bean [mailto:ccbean@gmail.com]
> >  Sent: Monday, October 16, 2006 2:05 PM
> >  To: Jim Steil
> >  Cc: mod_python@modpython.org
> >  Subject: Re: [mod_python] ReportLab integration
> >
> >
> >
> > Hi Jim,
> >
> >
> >
> > How does it break in IE?  If it it won't recognize the result is a
> >
> > pdf, try setting the content-disposition header.  You can use this to
> >
> > specify a filename that browser will save your file as; if you give it
> >
> > a .pdf extension then IE should open it fine.  Here's a little more
> >
> > info on it:
> >
> > http://support.microsoft.com/kb/260519
> >
> >
> >
> > I *think* that changing your handler to use a .pdf extension will do
> >
> > the same thing (I haven't used publisher yet so I'm not sure how to do
> >
> > this); the content disposition trick might be easier, though.
> >
> >
> >
> > -Colin
> >
> >
> >
> > On 10/16/06, Jim Steil <jim@qlf.com> wrote:
> >
> > >
> >
> > >
> >
> > >
> >
> > >
> >
> > > Graham:
> >
> > >
> >
> > >
> >
> > >
> >
> > > Thanks so much for the examples.  That's exactly what I needed.  I used
> > the
> >
> > > example in Reportlab-demo.py and it is working great in FireFox, but not
> > in
> >
> > > IE.  There is a comment in the source about IE choking on some code but
> I
> >
> > > don't know how to get around that.  Also, is there some trick or
> >
> > > configuration I need to do to get a .pdf extension on my url?  I'm using
> > the
> >
> > > publisher handler.
> >
> > >
> >
> > >
> >
> > >
> >
> > > Thanks again.  What I've got working now really helps, and getting
> around
> >
> > > these 2 issues would just be icing on the cake!
> >
> > >
> >
> > >
> >
> > >
> >
> > >             -Jim
> >
> > >
> >
> > >
> >
> > >
> >
> > >
> >
> > > Jim Steil
> >
> > >  IT Manager
> >
> > >  Quality Liquid Feeds
> >
> > >  (608) 935-2345
> >
> > >
> >
> > > (608) 341-9896 cell
> >
> > >
> >
> > >  ________________________________
> >
> > >
> >
> > >
> >
> > > From: Graham Dumpleton [mailto:grahamd@dscpl.com.au]
> >
> > >  Sent: Saturday, October 14, 2006 12:54 AM
> >
> > >  To: Jim Steil
> >
> > >  Cc: mod_python@modpython.org
> >
> > >  Subject: Re: [mod_python] ReportLab integration
> >
> > >
> >
> > >
> >
> > >
> >
> > >
> >
> > >
> >
> > >
> >
> > >
> >
> > >
> >
> > > On 14/10/2006, at 6:25 AM, Jim Steil wrote:
> >
> > >
> >
> > >
> >
> > >
> >
> > >
> >
> > >
> >
> > >
> >
> > > Can someone help get me pointed in the right direction?  I want to allow
> a
> >
> > > user to request a PDF from my mod_python app.  When they do so, I want
> to
> >
> > > generate the PDF on the fly with ReportLab and then send the resulting
> PDF
> >
> > > back to the browser without saving it anywhere.  I've done some searches
> > on
> >
> > > the web but can't seem to find examples of doing this with just
> mod_python
> >
> > > and ReportLab.  I've seen examples of using other tools, but not just
> >
> > > mod_python.  This sounds like something others are probably doing, but I
> >
> > > need a push in the right direction.  Thanks in advance for your time.
> >
> > >
> >
> > > Try:
> >
> > >
> >
> > >
> >
> > >
> >
> > >
> >
> > >
> >
> > >
> >
> > >
> >
> http://www.dscpl.com.au/projects/vampire/examples/reportlab/reportlab-demo.p
> df
> >
> > >
> >
> > >
> >
> > >
> >
> > >
> >
> > >
> >
> > > This uses reportlab to generate the PDF.
> >
> > >
> >
> > >
> >
> > >
> >
> > >
> >
> > >
> >
> > > There is also:
> >
> > >
> >
> > >
> >
> > >
> >
> > >
> >
> > >
> >
> > >
> >
> > >
> >
> http://www.dscpl.com.au/projects/vampire/examples/reportlab/trml2pdf-demo.pd
> f
> >
> > >
> >
> > >
> >
> > >
> >
> > >
> >
> > >
> >
> > > This uses free version of tool for converting reportlab RML to PDF.
> >
> > >
> >
> > >
> >
> > >
> >
> > >
> >
> > >
> >
> > > The actual source code for each is at:
> >
> > >
> >
> > >
> >
> > >
> >
> > >
> >
> > >
> >
> > >
> >
> > >
> >
> http://www.dscpl.com.au/projects/vampire/source/examples/reportlab/reportlab
> -demo.py
> >
> > >
> >
> > >
> >
> > >
> >
> > >
> >
> > >
> >
> > >
> >
> > >
> >
> http://www.dscpl.com.au/projects/vampire/source/examples/reportlab/_handler.
> py
> >
> > >
> >
> > >
> >
> > >
> >
> > >
> >
> http://www.dscpl.com.au/projects/vampire/source/examples/reportlab/trml2pdf-
> demo.rml
> >
> > >
> >
> > >
> >
> > >
> >
> > >
> >
> > >
> >
> > > These happen to use Vampire for the mod_python handler framework,
> >
> > >
> >
> > >
> >
> > > but you should be able to adapt them to other mod_python handler
> >
> > >
> >
> > >
> >
> > > systems.
> >
> > >
> >
> > >
> >
> > >
> >
> > >
> >
> > >
> >
> > > Graham
> >
> > > _______________________________________________
> >
> > > Mod_python mailing list
> >
> > > Mod_python@modpython.org
> >
> > > http://mailman.modpython.org/mailman/listinfo/mod_python
> >
> > >
> >
> > >
> >
> > >
>
>
>
From ccbean at gmail.com  Mon Oct 16 17:31:05 2006
From: ccbean at gmail.com (Colin Bean)
Date: Mon Oct 16 17:31:10 2006
Subject: [mod_python] ReportLab integration
In-Reply-To: <00a201c6f168$6babecc0$800101df@qlf.local>
References: <29a6ca010610161410w39b85f30j4dee905d8eae0fe8@mail.gmail.com>
	<00a201c6f168$6babecc0$800101df@qlf.local>
Message-ID: <29a6ca010610161431v22727783j52ff4efb84cd60c1@mail.gmail.com>

One small thing, it looks like the three header values from the original
script that caused a problem with IE (the Cache-Control, Pragma, Expires)
are still being set somehow.  The lines that did this were commented out in
the version you sent to the list, but you might want to double check this on
your server.  Meanwhile I'll see if I can get a similar example working.
I've gotten IE to behave well with the content-disposition stuff in the
past, but I haven't tried it with PDFs.

-Colin
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20061016/d889be3f/attachment-0001.html
From jim at qlf.com  Mon Oct 16 17:35:12 2006
From: jim at qlf.com (Jim Steil)
Date: Mon Oct 16 17:36:19 2006
Subject: [mod_python] ReportLab integration
In-Reply-To: <29a6ca010610161431v22727783j52ff4efb84cd60c1@mail.gmail.com>
Message-ID: <00ab01c6f16a$f62783d0$800101df@qlf.local>

Yes, I've tried it both ways, but I get the same result.  Will try again and
get back..
 
            -Jim
 
Jim Steil
IT Manager
Quality Liquid Feeds
(608) 935-2345 
(608) 341-9896 cell
  _____  

From: Colin Bean [mailto:ccbean@gmail.com] 
Sent: Monday, October 16, 2006 4:31 PM
To: Jim Steil
Cc: mod_python@modpython.org
Subject: Re: [mod_python] ReportLab integration
 
One small thing, it looks like the three header values from the original
script that caused a problem with IE (the Cache-Control, Pragma, Expires)
are still being set somehow.  The lines that did this were commented out in
the version you sent to the list, but you might want to double check this on
your server.  Meanwhile I'll see if I can get a similar example working.
I've gotten IE to behave well with the content-disposition stuff in the
past, but I haven't tried it with PDFs. 

-Colin
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20061016/ab998410/attachment.html
From ccbean at gmail.com  Mon Oct 16 17:47:23 2006
From: ccbean at gmail.com (Colin Bean)
Date: Mon Oct 16 17:47:27 2006
Subject: [mod_python] ReportLab integration
In-Reply-To: <00a201c6f168$6babecc0$800101df@qlf.local>
References: <29a6ca010610161410w39b85f30j4dee905d8eae0fe8@mail.gmail.com>
	<00a201c6f168$6babecc0$800101df@qlf.local>
Message-ID: <29a6ca010610161447t6027e52dlb7898160871928a6@mail.gmail.com>

Also, try putting the file name in quotes.  I think this is needed per the
RFC.
I just checked an example where the Content-Disposition header was set to:
attachment; filename="foo.dwf"
which worked.  That wasn't done in mod_python, however; I'm still looking at
a mod_python example.

-Colin
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20061016/bd149a19/attachment.html
From jim at qlf.com  Mon Oct 16 17:55:45 2006
From: jim at qlf.com (Jim Steil)
Date: Mon Oct 16 17:56:49 2006
Subject: [mod_python] ReportLab integration
In-Reply-To: <29a6ca010610161447t6027e52dlb7898160871928a6@mail.gmail.com>
Message-ID: <00c701c6f16d$d4d86ac0$800101df@qlf.local>

Here is the latest:  But, same result on IE 7 and IE 6.
 
            -Jim
 
HTTP/1.1 200 OK
Date: Mon, 16 Oct 2006 21:49:27 GMT
Server: Apache/2.0.55 (Win32) mod_python/3.2.2b Python/2.4.3 PHP/5.1.6
Cache-Control: no-cache="set-cookie"
Set-Cookie: pysid=37d5aa6545f4c7595fcdd2c315b4a70f; path=/
Set-Cookie: pysid=00ce18b00a3f3ea621ed5ac955c7aed7; path=/
Content-length: 81355
Content-Disposition: inline;filename="optimizer.pdf"
Connection: close
Content-Type: application/pdf
 
Jim Steil
IT Manager
Quality Liquid Feeds
(608) 935-2345 
(608) 341-9896 cell
  _____  

From: Colin Bean [mailto:ccbean@gmail.com] 
Sent: Monday, October 16, 2006 4:47 PM
To: Jim Steil
Cc: mod_python@modpython.org
Subject: Re: [mod_python] ReportLab integration
 
Also, try putting the file name in quotes.  I think this is needed per the
RFC. 
I just checked an example where the Content-Disposition header was set to:
attachment; filename="foo.dwf"
which worked.  That wasn't done in mod_python, however; I'm still looking at
a mod_python example. 

-Colin


-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20061016/bd6e7c0d/attachment.html
From grahamd at dscpl.com.au  Mon Oct 16 18:01:43 2006
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Mon Oct 16 18:01:49 2006
Subject: [mod_python] SQLAlchemy logging with mod_python
Message-ID: <1161036101.21841@dscpl.user.openhosting.com>

Alex Greif wrote ..
> Hi,
> is there a possibility to redirect sqlaachemy log messages to the
> error_log of mod_python?

Looking at the SQLAlchemy source code, it appears to using the Python
logging module in some way. Thus it would appear that you can probably
install a logging module handler which forwards the logged messages to
the apache.log_error() function.

There was a prior post on the mailing list about this:

  http://www.modpython.org/pipermail/mod_python/2005-October/019295.html

This may or may not help.

Graham
From jim at qlf.com  Tue Oct 17 00:31:36 2006
From: jim at qlf.com (Jim Steil)
Date: Tue Oct 17 00:32:43 2006
Subject: [mod_python] ReportLab integration
In-Reply-To: <29a6ca010610161651j4d7a5b38t316624aa2a7cea5c@mail.gmail.com>
Message-ID: <000701c6f1a5$2241e700$800101df@qlf.local>


Hey, that did it!

I changed the Cache-Control header to '' and now it works.  I will run it
through more tests tomorrow, but for now it appears to be working.  Also, if
I set the Content-Disposition to attachment, I get the filename that I
specify in the filename parameter.  The filename doesn't seem to come
through if I specify inline.  

Colin, I can't thank you enough for the help.  This will make it really easy
to build dynamic pdf's and get them out to our users, and now I don't have
to have them all pre-generated and stored on our servers.

	-Jim

-----Original Message-----
From: Colin Bean [mailto:ccbean@gmail.com] 
Sent: Monday, October 16, 2006 6:52 PM
To: Jim Steil
Subject: Re: [mod_python] ReportLab integration

Hi Jim,

Well, I uncovered some weird behavior within IE, and I think I found
part of the problem.  I wrote a standalone module (without publisher)
that read a pdf off disk and sent the string value to the request, to
try to simulate your module's behavior.  This is on Apache 2.2.0,
mod_python 3.2.10 on Fedora Core 5, tested with IE 6 and firefox.

It basically goes back to that comment in Graham's code about how
setting the cache-control header caused IE to not display the PDF.
While you never set these by hand, you do use a session cookie, which
sets the Cache-Control header to 'no-cache="set-cookie"', and
apparently this is enough to break IE.  In my test handler, the pdf
displayed fine in the browser when I didn't use a session, but would
only give me a "save to disk" dialog when I did.

So you might try removing any session code from your example to see if
it would work (I'm guessing you'll need some kind of authentication in
the future so this is probably not going to be a long-term solution,
but it should at least confirm that this is the problem).  Forgive my
ignorance of publisher; I forget if it automatically creates a
session.  If it does, the only way to get this to work would be as a
standalone handler.

Another option I found, which worked but seems sketchy was to set the
Cache-Control header to an empty string right before sending the
headers.  When I did this, the PDF displayed fine, and the pysid
headers where still there, but I'd image that the cache-control header
was there for a reason and I'm sure this could break in unexpected
ways.

Finally, the content-dispositon thing doesn't really matter -- it does
give you a nice filename when you choose "save as", but it didn't
affect whether or not IE would display the pdf right.  So sorry to put
you through all that other stuff ;)

Hopefully some of that made sense, let me know if you get this working.

-Colin


On 10/16/06, Jim Steil <jim@qlf.com> wrote:
>
>
>
>
> Here is the latest:  But, same result on IE 7 and IE 6.
>
>
>
>             -Jim
>
>
>
> HTTP/1.1 200 OK
>
> Date: Mon, 16 Oct 2006 21:49:27 GMT
>
> Server: Apache/2.0.55 (Win32) mod_python/3.2.2b Python/2.4.3 PHP/5.1.6
>
> Cache-Control: no-cache="set-cookie"
>
> Set-Cookie: pysid=37d5aa6545f4c7595fcdd2c315b4a70f; path=/
>
> Set-Cookie: pysid=00ce18b00a3f3ea621ed5ac955c7aed7; path=/
>
> Content-length: 81355
>
> Content-Disposition: inline;filename="optimizer.pdf"
>
> Connection: close
>
> Content-Type: application/pdf
>
>
>
>
> Jim Steil
>  IT Manager
>  Quality Liquid Feeds
>  (608) 935-2345
>
> (608) 341-9896 cell
>
>  ________________________________
>
>
> From: Colin Bean [mailto:ccbean@gmail.com]
>  Sent: Monday, October 16, 2006 4:47 PM
>  To: Jim Steil
>  Cc: mod_python@modpython.org
>  Subject: Re: [mod_python] ReportLab integration
>
>
>
>
> Also, try putting the file name in quotes.  I think this is needed per the
> RFC.
>  I just checked an example where the Content-Disposition header was set
to:
>  attachment; filename="foo.dwf"
>  which worked.  That wasn't done in mod_python, however; I'm still looking
> at a mod_python example.
>
>  -Colin
>
>


From ccbean at gmail.com  Tue Oct 17 12:16:16 2006
From: ccbean at gmail.com (Colin Bean)
Date: Tue Oct 17 12:16:23 2006
Subject: [mod_python] ReportLab integration
In-Reply-To: <000701c6f1a5$2241e700$800101df@qlf.local>
References: <29a6ca010610161651j4d7a5b38t316624aa2a7cea5c@mail.gmail.com>
	<000701c6f1a5$2241e700$800101df@qlf.local>
Message-ID: <29a6ca010610170916k4e15beeek8d5b82b15da7c46@mail.gmail.com>

Great!  Glad to hear it finally worked out.  Another illogical IE
behavior has been (further) documented.
After some thought, it seems like clobbering the cache control header
would allow pages to be cached with the authentication headers intact,
so in a few situations (proxy-cache?) a user could possibly get ahold
of someone else's session if it's still valid (I haven't actually
tested this).  Hopefully this won't affect what you're doing, if your
main goal is to serve up pdfs and have it work.

-Colin

On 10/16/06, Jim Steil <jim@qlf.com> wrote:
>
> Hey, that did it!
>
> I changed the Cache-Control header to '' and now it works.  I will run it
> through more tests tomorrow, but for now it appears to be working.  Also, if
> I set the Content-Disposition to attachment, I get the filename that I
> specify in the filename parameter.  The filename doesn't seem to come
> through if I specify inline.
>
> Colin, I can't thank you enough for the help.  This will make it really easy
> to build dynamic pdf's and get them out to our users, and now I don't have
> to have them all pre-generated and stored on our servers.
>
>         -Jim
>
> -----Original Message-----
> From: Colin Bean [mailto:ccbean@gmail.com]
> Sent: Monday, October 16, 2006 6:52 PM
> To: Jim Steil
> Subject: Re: [mod_python] ReportLab integration
>
> Hi Jim,
>
> Well, I uncovered some weird behavior within IE, and I think I found
> part of the problem.  I wrote a standalone module (without publisher)
> that read a pdf off disk and sent the string value to the request, to
> try to simulate your module's behavior.  This is on Apache 2.2.0,
> mod_python 3.2.10 on Fedora Core 5, tested with IE 6 and firefox.
>
> It basically goes back to that comment in Graham's code about how
> setting the cache-control header caused IE to not display the PDF.
> While you never set these by hand, you do use a session cookie, which
> sets the Cache-Control header to 'no-cache="set-cookie"', and
> apparently this is enough to break IE.  In my test handler, the pdf
> displayed fine in the browser when I didn't use a session, but would
> only give me a "save to disk" dialog when I did.
>
> So you might try removing any session code from your example to see if
> it would work (I'm guessing you'll need some kind of authentication in
> the future so this is probably not going to be a long-term solution,
> but it should at least confirm that this is the problem).  Forgive my
> ignorance of publisher; I forget if it automatically creates a
> session.  If it does, the only way to get this to work would be as a
> standalone handler.
>
> Another option I found, which worked but seems sketchy was to set the
> Cache-Control header to an empty string right before sending the
> headers.  When I did this, the PDF displayed fine, and the pysid
> headers where still there, but I'd image that the cache-control header
> was there for a reason and I'm sure this could break in unexpected
> ways.
>
> Finally, the content-dispositon thing doesn't really matter -- it does
> give you a nice filename when you choose "save as", but it didn't
> affect whether or not IE would display the pdf right.  So sorry to put
> you through all that other stuff ;)
>
> Hopefully some of that made sense, let me know if you get this working.
>
> -Colin
>
>
> On 10/16/06, Jim Steil <jim@qlf.com> wrote:
> >
> >
> >
> >
> > Here is the latest:  But, same result on IE 7 and IE 6.
> >
> >
> >
> >             -Jim
> >
> >
> >
> > HTTP/1.1 200 OK
> >
> > Date: Mon, 16 Oct 2006 21:49:27 GMT
> >
> > Server: Apache/2.0.55 (Win32) mod_python/3.2.2b Python/2.4.3 PHP/5.1.6
> >
> > Cache-Control: no-cache="set-cookie"
> >
> > Set-Cookie: pysid=37d5aa6545f4c7595fcdd2c315b4a70f; path=/
> >
> > Set-Cookie: pysid=00ce18b00a3f3ea621ed5ac955c7aed7; path=/
> >
> > Content-length: 81355
> >
> > Content-Disposition: inline;filename="optimizer.pdf"
> >
> > Connection: close
> >
> > Content-Type: application/pdf
> >
> >
> >
> >
> > Jim Steil
> >  IT Manager
> >  Quality Liquid Feeds
> >  (608) 935-2345
> >
> > (608) 341-9896 cell
> >
> >  ________________________________
> >
> >
> > From: Colin Bean [mailto:ccbean@gmail.com]
> >  Sent: Monday, October 16, 2006 4:47 PM
> >  To: Jim Steil
> >  Cc: mod_python@modpython.org
> >  Subject: Re: [mod_python] ReportLab integration
> >
> >
> >
> >
> > Also, try putting the file name in quotes.  I think this is needed per the
> > RFC.
> >  I just checked an example where the Content-Disposition header was set
> to:
> >  attachment; filename="foo.dwf"
> >  which worked.  That wasn't done in mod_python, however; I'm still looking
> > at a mod_python example.
> >
> >  -Colin
> >
> >
>
>
>
From fred at adventistcare.org  Tue Oct 17 15:47:12 2006
From: fred at adventistcare.org (Sells, Fred)
Date: Tue Oct 17 15:38:50 2006
Subject: [mod_python] use publisher without .py file extension
Message-ID: <1A4BF05172023E468CB6E867923BC90402B6E2FB@accmail2.sunbelt.org>

Do you mean that each "application" is a single minimal file (which imports
the meat and potatoes) and that all these minimal files are in one common
directory?

If that's the case, how do you extend sys.path to include the backend logic
directories?  We had been using the .pth file in the site-pachages to
specific a "corporate library node" with each application in a subdir of
that node.  Unfortunately that technique does not seem to work with
mod_python, or perhaps I just am stumbling in the dark.



-----Original Message-----
From: Graham Dumpleton wrote...

 I create a single directory for the frontends, 
> then use SetHandler to configure apache to use Publisher for everything
> in that directory. The .py extension is no longer needed. The frontends
> are minimal, serving as gateways to the backend logic, as you describe.
> The only caveat is that the directory must contain only python modules,
> with other resources placed elsewhere. This can be a benefit, if you 
> like keeping your code separate from images, stylesheets, etc. 
From list at joreybump.com  Tue Oct 17 16:16:58 2006
From: list at joreybump.com (Jorey Bump)
Date: Tue Oct 17 16:17:02 2006
Subject: [mod_python] use publisher without .py file extension
In-Reply-To: <1A4BF05172023E468CB6E867923BC90402B6E2FB@accmail2.sunbelt.org>
References: <1A4BF05172023E468CB6E867923BC90402B6E2FB@accmail2.sunbelt.org>
Message-ID: <45353A3A.8010800@joreybump.com>

Sells, Fred wrote:
> Do you mean that each "application" is a single minimal file (which imports
> the meat and potatoes) and that all these minimal files are in one common
> directory?

Yes. While there are exceptions, my published modules often look like this:

import example.app.foo

def admin(req):
     return example.app.foo.admin(req)

def spam(req):
     return example.app.foo.spam(req)

def index(req):
     return example.app.foo.eggs(req)


> If that's the case, how do you extend sys.path to include the backend logic
> directories?  We had been using the .pth file in the site-pachages to
> specific a "corporate library node" with each application in a subdir of
> that node.  Unfortunately that technique does not seem to work with
> mod_python, or perhaps I just am stumbling in the dark.

In the VirtualHost container, I define PythonPath:

  PythonPath "['/var/www/vhosts/www.example.com/python'] + sys.path"

Then I can keep application and utility code specific to a virtual host 
in its own local directory, outside of the DocumentRoot. The benefits 
are mainly organizational, but it also helps to keep code out of view in 
case of a server misconfiguration. Be warned: Other apparent security 
benefits might be imaginary if all virtual hosts run as the same user.


From l.montecchiani at teamsystem.com  Wed Oct 18 03:52:03 2006
From: l.montecchiani at teamsystem.com (Luca Montecchiani)
Date: Wed Oct 18 03:54:44 2006
Subject: [mod_python] Memory Session doesen't work with
	PythonInterpPerDirectory on Windows
Message-ID: <4535DD23.6010504@teamsystem.com>

Hi all,
this is probably a FAQ but I want to share with you
my bad experience.

I've a situation where /www/dir1/login.py create a session and
redirect to /www/dir2/desktop.py that read the session to see
if is_new or not.

Unfortunately this doesn't work if you are using:
1) Windows platform
2) PythonOption PythonInterpPerDirectory On
3) PythonOption Session MemorySession

The desktop.py check if the session is new and
it is always True :-(

This seem pretty simple to explain, having Session
saved in Memory the second python interpreter (/www/dir2) doesn't
"see" the session created by the first interpreter (/www/dir1)
because of the PythonInterpPerDirectory option.

Now if I want to make it work I have to turn off the
PythonInterpPerDirectory or change the Session from
MemorySession to DbmSession .
Of course this will not happen if the desktop.py where
on the same directory of the login.py script.

Is this a correct analysis ?
If it is must be a FAQ IMHO and what is the best practice
to avoid this problem ?

Thanks in advance,
luca

-- 
Luca Montecchiani
Software Di Base
TeamSystem S.r.l.
------------------------------------------------------------------------------------------
Informativa ai sensi del D. Lgs. 196-30/06/2003.
Il contenuto di questa e.mail e degli eventuali allegati, deve essere 
nella disponibilit?
del solo destinatario.  Se ricevete per errore questa e-mail siete 
pregati di informarci
(rispedendola al mittente) e di provvedere alla sua rimozione.
Possono essere presenti informazioni riservate e non corrette 
(parzialmente o totalmente).
Le e-mail in partenza e in arrivo possono essere oggetto di monitoraggio
da parte di Teamsystem spa.  Del contenuto ? responsabile il mittente 
della presente.
Chiunque venga in possesso non autorizzato di questa e-mail ? vincolato
dalla Legge a non leggerne il contenuto, a non copiarla, a non 
diffonderla e a non usarla.
Informiamo che per l' esercizio dei diritti di cui all'art. 7 del 
d.lgs.196/2003 ci si pu?
rivolgere al Titolare del trattamento Teamsystem S.r.l. via Gagarin 205 
61100 PESARO
per posta o fax, indicando sulla busta o sul foglio la dicitura 
"Inerente alla Privacy",
o inviando una e-mail all' indirizzo privacy@teamsystem.com .
------------------------------------------------------------------------------------------
From crosseyedpenguin at cox.net  Wed Oct 18 16:58:06 2006
From: crosseyedpenguin at cox.net (Roger)
Date: Wed Oct 18 16:58:16 2006
Subject: [mod_python] Using mod_python with two applications fails on Fedora
 Core 4, works on Window/XP
Message-ID: <4536955E.8000600@cox.net>

I am running apache 2.0.54 and mod_python 3.2.10 on Fedora Core 4.  I am 
running both Webware and MoinMoin under mod_python as a means of 
speeding up the applications. 

My problem is that the MoinMoin modules (the second application defined) 
are being reloaded with each request.  A logging message inserted into 
the MoinMoin request.py module verifies this.  I found this problem 
while investigating the cause of why my newly written MoinMoin macros 
were crashing after MySQL ran out of available connections.

This problem does not occur on my test system under Windows/XP with 
apache 2.0.53 and mod_python 3.2.5.  I had been running mod_python 3.1.4 
under Fedora Core 4 and have upgraded to 3.2.10 but the problem persists.

Some snippets from httpd.conf:

LoadModule python_module modules/mod_python.so

# Webware WebKit
<Location /webkit >
   SetHandler python-program
   # add the directory that contains ModPythonAdapter.py
   PythonPath "sys.path+['/home/web/Webware']"
   PythonOption AppWorkDir /home/web/dra
   PythonHandler WebKit.Adapters.ModPythonAdapter
   PythonDebug On
</Location>

# MoinMoin
<Location /drawiki>
    SetHandler python-program
    PythonPath "['/home/web/Moin/drawiki/']+sys.path"
    PythonHandler MoinMoin.request::RequestModPy.run
    PythonDebug On
</Location>

Any suggestions as to what I may be doing wrong?

Roger

From grahamd at dscpl.com.au  Wed Oct 18 18:10:17 2006
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Wed Oct 18 18:10:21 2006
Subject: [mod_python] Memory Session doesen't work
	withPythonInterpPerDirectory on Windows
Message-ID: <1161209417.27818@dscpl.user.openhosting.com>

Luca Montecchiani wrote ..
> Hi all,
> this is probably a FAQ but I want to share with you
> my bad experience.
> 
> I've a situation where /www/dir1/login.py create a session and
> redirect to /www/dir2/desktop.py that read the session to see
> if is_new or not.
> 
> Unfortunately this doesn't work if you are using:
> 1) Windows platform
> 2) PythonOption PythonInterpPerDirectory On
> 3) PythonOption Session MemorySession
> 
> The desktop.py check if the session is new and
> it is always True :-(
> 
> This seem pretty simple to explain, having Session
> saved in Memory the second python interpreter (/www/dir2) doesn't
> "see" the session created by the first interpreter (/www/dir1)
> because of the PythonInterpPerDirectory option.
> 
> Now if I want to make it work I have to turn off the
> PythonInterpPerDirectory or change the Session from
> MemorySession to DbmSession .
> Of course this will not happen if the desktop.py where
> on the same directory of the login.py script.
> 
> Is this a correct analysis ?
> If it is must be a FAQ IMHO and what is the best practice
> to avoid this problem ?

What version of mod_python are you using? There are bugs related to
PythonInterpPerDirectory in older versions, and not all problems may
even be addressed until mod_python 3.3. You should avoid using the
PythonInterpPerDirectory unless you have a very good reason.

For a possible workaround, try setting:

  PythonOption ApplicationPath /www

This will ensure that cookies used for session in each context use the
same path. They will not otherwise if you have distinct PythonHandler
directives in each context, irrespective of whether you are using the
PythonInterpPerDirectory directive.

There is also perhaps an issue in mod_python session code as well
which I hadn't noticed before. That is that it uses:

            # the path where *Handler directive was specified
            dirpath = self._req.hlist.directory 
            if dirpath:
                docroot = self._req.document_root()
                c.path = dirpath[len(docroot):]
            else:
                c.path = '/'

This will not work though where the directory the handler is specified
for is not located within the document root. There are possibly other
issues with this code in relation to mod_python 3.3 which I'll have to
address as well.

This issue is incidental though and probably not the cause of any
problem you have.

BTW, why are you using PythonInterpPerDirectory? What do you think
you get from using it?

Graham

From grahamd at dscpl.com.au  Wed Oct 18 18:23:18 2006
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Wed Oct 18 18:23:24 2006
Subject: [mod_python] Using mod_python with two applications fails on
	FedoraCore 4, works on Window/XP
Message-ID: <1161210198.2411@dscpl.user.openhosting.com>

Roger wrote ..
> I am running apache 2.0.54 and mod_python 3.2.10 on Fedora Core 4.  I am
> running both Webware and MoinMoin under mod_python as a means of 
> speeding up the applications. 
> 
> My problem is that the MoinMoin modules (the second application defined)
> are being reloaded with each request.  A logging message inserted into
> the MoinMoin request.py module verifies this.  I found this problem 
> while investigating the cause of why my newly written MoinMoin macros 
> were crashing after MySQL ran out of available connections.
> 
> This problem does not occur on my test system under Windows/XP with 
> apache 2.0.53 and mod_python 3.2.5.  I had been running mod_python 3.1.4
> under Fedora Core 4 and have upgraded to 3.2.10 but the problem persists.
> 
> Some snippets from httpd.conf:
> 
> LoadModule python_module modules/mod_python.so
> 
> # Webware WebKit
> <Location /webkit >
>    SetHandler python-program
>    # add the directory that contains ModPythonAdapter.py
>    PythonPath "sys.path+['/home/web/Webware']"
>    PythonOption AppWorkDir /home/web/dra
>    PythonHandler WebKit.Adapters.ModPythonAdapter
>    PythonDebug On
> </Location>
> 
> # MoinMoin
> <Location /drawiki>
>     SetHandler python-program
>     PythonPath "['/home/web/Moin/drawiki/']+sys.path"
>     PythonHandler MoinMoin.request::RequestModPy.run
>     PythonDebug On
> </Location>
> 
> Any suggestions as to what I may be doing wrong?


The messages in the error log file do not show the process ID for the Apache
child process that performed the import. Nor do they distinguish between an
initial load and a reload, nor which Python interpreter instance performed the
load. FWIW, both all issues are addressed in mod_python 3.3.

Why this is important is that if you are using Apache in prefork mode, whereby
there are multiple Apache child processes, you may be confusing messages
generated from different Apache child processes as indicating that a module is
being reloaded on ever request. Instead, all that may be happening is that each
request is going to a different Apache child process and it takes a while
before all Apache child processes have been involved in handling a request for
that application and before the messages stop appearing.

If you have been having problems with Apache child processes crashing at
regular intervals, then the messages may just keep appearing as Apache creates
new child processes to replace those which have died. Also, if you have a low
count for the number of requests that any one Apache child process should
handle before Apache shuts down that process, you may have a high turn over of
processes and thus again a continual stream of messages. Thus make sure that
you don't have MaxRequestsPerChild directive set in main Apache configuration
to some low value.

In case you are worried that it is somehow due to an interaction between the
two different applications you are hosting, then forcible separate them into
their own Python interpreter instances with each Apache child process by using
the PythonInterpreter directive. Ie., In MoinMoin use:

  PythonInterpreter wiki

and in the other use:

  PythonInterpreter webware

Graham
From grahamd at dscpl.com.au  Wed Oct 18 18:28:00 2006
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Wed Oct 18 18:28:07 2006
Subject: [mod_python] Memory Session doesen't
	workwithPythonInterpPerDirectory on Windows
Message-ID: <1161210480.5003@dscpl.user.openhosting.com>

Graham Dumpleton wrote ..
> Luca Montecchiani wrote ..
> > Hi all,
> > this is probably a FAQ but I want to share with you
> > my bad experience.
> > 
> > I've a situation where /www/dir1/login.py create a session and
> > redirect to /www/dir2/desktop.py that read the session to see
> > if is_new or not.
> > 
> > Unfortunately this doesn't work if you are using:
> > 1) Windows platform
> > 2) PythonOption PythonInterpPerDirectory On
> > 3) PythonOption Session MemorySession
> > 
> > The desktop.py check if the session is new and
> > it is always True :-(
> > 
> > This seem pretty simple to explain, having Session
> > saved in Memory the second python interpreter (/www/dir2) doesn't
> > "see" the session created by the first interpreter (/www/dir1)
> > because of the PythonInterpPerDirectory option.

Whoops. Not thinking properly. Yes, use of MemorySession when two
separate interpreters used like this would be an issue and external
database would be needed. This would be the only way of getting it
to work if you must communicate between two separate interpreters.

> > Now if I want to make it work I have to turn off the
> > PythonInterpPerDirectory or change the Session from
> > MemorySession to DbmSession .
> > Of course this will not happen if the desktop.py where
> > on the same directory of the login.py script.
> > 
> > Is this a correct analysis ?
> > If it is must be a FAQ IMHO and what is the best practice
> > to avoid this problem ?
> 
> What version of mod_python are you using? There are bugs related to
> PythonInterpPerDirectory in older versions, and not all problems may
> even be addressed until mod_python 3.3. You should avoid using the
> PythonInterpPerDirectory unless you have a very good reason.
> 
> For a possible workaround, try setting:
> 
>   PythonOption ApplicationPath /www
> 
> This will ensure that cookies used for session in each context use the
> same path. They will not otherwise if you have distinct PythonHandler
> directives in each context, irrespective of whether you are using the
> PythonInterpPerDirectory directive.

There is still a possibility this may apply in some circumstances.

> There is also perhaps an issue in mod_python session code as well
> which I hadn't noticed before. That is that it uses:
> 
>             # the path where *Handler directive was specified
>             dirpath = self._req.hlist.directory 
>             if dirpath:
>                 docroot = self._req.document_root()
>                 c.path = dirpath[len(docroot):]
>             else:
>                 c.path = '/'
> 
> This will not work though where the directory the handler is specified
> for is not located within the document root. There are possibly other
> issues with this code in relation to mod_python 3.3 which I'll have to
> address as well.
> 
> This issue is incidental though and probably not the cause of any
> problem you have.
> 
> BTW, why are you using PythonInterpPerDirectory? What do you think
> you get from using it?

Still like to know why you are using this directive. :-)

Graham
From sanji at klassenfeind.org  Wed Oct 18 18:46:22 2006
From: sanji at klassenfeind.org (Christoph Mewes)
Date: Wed Oct 18 18:46:27 2006
Subject: [mod_python] Apache 2.2.2 not working
Message-ID: <3e7d78380610181546n7b14f63ak66f659a9ba75e000@mail.gmail.com>

Hi,

I'm using Apache 2.2.2 for a long time now and I wanted to use Python
with it. So I downloaded thoe mod 3.2.10 and ran the Installer. And so
bla bla bla ... to shorten this up:

Apache....: 2.2.2 (E:\Software\Apache-2.2)
mod_python: 3.2.10
Python....: 2.4.1 (E:\Software\Python-2.4.1)
OS........: WinXP Home SP2

I managed to install Python and after adding the path of Python to the
system-wide PATH variable the server started.
But when I try to run the mptest.py from the Manual, it returns a HTPP
500 error. My error log says:

[Thu Oct 19 00:45:25 2006] [error] make_obcallback: could not import
mod_python.apache.\n
[Thu Oct 19 00:45:25 2006] [error] make_obcallback: Python path being
used "['E:\\\\Software\\\\Python-2.4.1\\\\python24.zip', '.\\\\DLLs',
'.\\\\lib', '.\\\\lib\\\\plat-win', '.\\\\lib\\\\lib-tk',
'E:\\\\Software\\\\Apache-2.2\\\\bin']".
[Thu Oct 19 00:45:25 2006] [error] python_handler: no interpreter
callback found.
[Thu Oct 19 00:45:25 2006] [error] [client 127.0.0.1] python_handler:
Can't get/create interpreter.

I neither know why he wants to run a python24.zip neither where to get one.
Python itself runs like a charme.

I put the following lines into my httpd.conf:

LoadModule python_module modules/mod_python.so
PythonOption mod_python.mutex_directory "G:/Temp"
AddHandler mod_python .py
PythonHandler mptest
PythonDebug On

Can anybody help me? Thanks alot.
From grahamd at dscpl.com.au  Wed Oct 18 18:56:04 2006
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Wed Oct 18 18:56:09 2006
Subject: [mod_python] Apache 2.2.2 not working
Message-ID: <1161212164.19941@dscpl.user.openhosting.com>

Apache on Win32 generally runs as a special user. That user must have
access rights to the Python installation. Go through each of the directories
listed in the log output and make sure it is where the Python bits are
installed and then check the access rights to make sure the user Apache
runs on can read the files located there. If the files aren't even in those
locations, then your Python installation is stuffed up. Can you run normal
Python scripts outside of Apache?

Graham

Christoph Mewes wrote ..
> Hi,
> 
> I'm using Apache 2.2.2 for a long time now and I wanted to use Python
> with it. So I downloaded thoe mod 3.2.10 and ran the Installer. And so
> bla bla bla ... to shorten this up:
> 
> Apache....: 2.2.2 (E:\Software\Apache-2.2)
> mod_python: 3.2.10
> Python....: 2.4.1 (E:\Software\Python-2.4.1)
> OS........: WinXP Home SP2
> 
> I managed to install Python and after adding the path of Python to the
> system-wide PATH variable the server started.
> But when I try to run the mptest.py from the Manual, it returns a HTPP
> 500 error. My error log says:
> 
> [Thu Oct 19 00:45:25 2006] [error] make_obcallback: could not import
> mod_python.apache.\n
> [Thu Oct 19 00:45:25 2006] [error] make_obcallback: Python path being
> used "['E:\\\\Software\\\\Python-2.4.1\\\\python24.zip', '.\\\\DLLs',
> '.\\\\lib', '.\\\\lib\\\\plat-win', '.\\\\lib\\\\lib-tk',
> 'E:\\\\Software\\\\Apache-2.2\\\\bin']".
> [Thu Oct 19 00:45:25 2006] [error] python_handler: no interpreter
> callback found.
> [Thu Oct 19 00:45:25 2006] [error] [client 127.0.0.1] python_handler:
> Can't get/create interpreter.
> 
> I neither know why he wants to run a python24.zip neither where to get
> one.
> Python itself runs like a charme.
> 
> I put the following lines into my httpd.conf:
> 
> LoadModule python_module modules/mod_python.so
> PythonOption mod_python.mutex_directory "G:/Temp"
> AddHandler mod_python .py
> PythonHandler mptest
> PythonDebug On
> 
> Can anybody help me? Thanks alot.
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
From grahamd at dscpl.com.au  Wed Oct 18 19:06:21 2006
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Wed Oct 18 19:06:31 2006
Subject: [mod_python] Apache 2.2.2 not working
Message-ID: <1161212781.26161@dscpl.user.openhosting.com>

Please use REPLY-ALL and keep followups on the mailing list.

Christoph Mewes wrote ..
> I have XP Home, so I cannot really change user rights.
> My installation works perfectly, I can run Python scrits both from the
> interactive mode and via .py-files (outputting to the cmd).
> 
> 2006/10/19, Graham Dumpleton <grahamd@dscpl.com.au>:
> > Apache on Win32 generally runs as a special user. That user must have
> > access rights to the Python installation. Go through each of the directories
> > listed in the log output and make sure it is where the Python bits are
> > installed and then check the access rights to make sure the user Apache
> > runs on can read the files located there. If the files aren't even in
> those
> > locations, then your Python installation is stuffed up. Can you run normal
> > Python scripts outside of Apache?

Do any of the directories listed in the path output in the log
file contain a subdirectory called 'mod_python'?

If you run Python and do:

  from mod_python import psp

what does it output?

You want it to say:

  ImportError: No module named _apache

If it complains that it can't even find 'mod_python' module,
then the mod_python installation is wrong.

Also run within Python:

  import sys
  print sys.path

is the path the same as that in the Apache log file?


Graham
From sanji at klassenfeind.org  Wed Oct 18 19:34:34 2006
From: sanji at klassenfeind.org (Christoph Mewes)
Date: Wed Oct 18 19:34:40 2006
Subject: [mod_python] Apache 2.2.2 not working
In-Reply-To: <1161212781.26161@dscpl.user.openhosting.com>
References: <1161212781.26161@dscpl.user.openhosting.com>
Message-ID: <3e7d78380610181634m26573a1v13045f741dc424e1@mail.gmail.com>

I have the directory

E:\Software\Python-2.4.1\Lib\site-packages\mod_python.

Python shows what you expected ("ImportError: No module named
_apache"). The path list reads as follows:

['', 'E:\\Software\\Python-2.4.1\\python24.zip', 'E:\\Software\\Python-2.4.1', '
E:\\Software\\Python-2.4.1\\DLLs', 'E:\\Software\\Python-2.4.1\\lib', 'E:\\Softw
are\\Python-2.4.1\\lib\\plat-win', 'E:\\Software\\Python-2.4.1\\lib\\lib-tk', 'E
:\\Software\\Python-2.4.1\\lib\\site-packages']

Apache reported the "path used":

['E:\\\\Software\\\\Python-2.4.1\\\\python24.zip', '.\\\\DLLs',
'.\\\\lib', '.\\\\lib\\\\plat-win', '.\\\\lib\\\\lib-tk',
'E:\\\\Software\\\\Apache-2.2\\\\bin']

Christoph

(This time I used "Rely to all" in Google Mail)

2006/10/19, Graham Dumpleton <grahamd@dscpl.com.au>:
> Please use REPLY-ALL and keep followups on the mailing list.
>
> Christoph Mewes wrote ..
> > I have XP Home, so I cannot really change user rights.
> > My installation works perfectly, I can run Python scrits both from the
> > interactive mode and via .py-files (outputting to the cmd).
> >
> > 2006/10/19, Graham Dumpleton <grahamd@dscpl.com.au>:
> > > Apache on Win32 generally runs as a special user. That user must have
> > > access rights to the Python installation. Go through each of the directories
> > > listed in the log output and make sure it is where the Python bits are
> > > installed and then check the access rights to make sure the user Apache
> > > runs on can read the files located there. If the files aren't even in
> > those
> > > locations, then your Python installation is stuffed up. Can you run normal
> > > Python scripts outside of Apache?
>
> Do any of the directories listed in the path output in the log
> file contain a subdirectory called 'mod_python'?
>
> If you run Python and do:
>
>   from mod_python import psp
>
> what does it output?
>
> You want it to say:
>
>   ImportError: No module named _apache
>
> If it complains that it can't even find 'mod_python' module,
> then the mod_python installation is wrong.
>
> Also run within Python:
>
>   import sys
>   print sys.path
>
> is the path the same as that in the Apache log file?
>
>
> Graham
>
From grahamd at dscpl.com.au  Wed Oct 18 19:49:25 2006
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Wed Oct 18 19:49:29 2006
Subject: [mod_python] Apache 2.2.2 not working
Message-ID: <1161215364.17537@dscpl.user.openhosting.com>

Since I don't use Windows, my knowledge on how to address this is limited.
There was a prior post on the mailing list:

  http://www.modpython.org/pipermail/mod_python/2006-September/021979.html

which talks about windows registry settings indicating where Python is
installed. You might ensure that the PythonPath setting includes the
site-packages directory.

Otherwise, will have to wait until some of the Windows people can give
you an answer.

Graham

Christoph Mewes wrote ..
> I have the directory
> 
> E:\Software\Python-2.4.1\Lib\site-packages\mod_python.
> 
> Python shows what you expected ("ImportError: No module named
> _apache"). The path list reads as follows:
> 
> ['', 'E:\\Software\\Python-2.4.1\\python24.zip', 'E:\\Software\\Python-2.4.1',
> '
> E:\\Software\\Python-2.4.1\\DLLs', 'E:\\Software\\Python-2.4.1\\lib', 'E:\\Softw
> are\\Python-2.4.1\\lib\\plat-win', 'E:\\Software\\Python-2.4.1\\lib\\lib-tk',
> 'E
> :\\Software\\Python-2.4.1\\lib\\site-packages']
> 
> Apache reported the "path used":
> 
> ['E:\\\\Software\\\\Python-2.4.1\\\\python24.zip', '.\\\\DLLs',
> '.\\\\lib', '.\\\\lib\\\\plat-win', '.\\\\lib\\\\lib-tk',
> 'E:\\\\Software\\\\Apache-2.2\\\\bin']
> 
> Christoph
> 
> (This time I used "Rely to all" in Google Mail)
> 
> 2006/10/19, Graham Dumpleton <grahamd@dscpl.com.au>:
> > Please use REPLY-ALL and keep followups on the mailing list.
> >
> > Christoph Mewes wrote ..
> > > I have XP Home, so I cannot really change user rights.
> > > My installation works perfectly, I can run Python scrits both from
> the
> > > interactive mode and via .py-files (outputting to the cmd).
> > >
> > > 2006/10/19, Graham Dumpleton <grahamd@dscpl.com.au>:
> > > > Apache on Win32 generally runs as a special user. That user must
> have
> > > > access rights to the Python installation. Go through each of the
> directories
> > > > listed in the log output and make sure it is where the Python bits
> are
> > > > installed and then check the access rights to make sure the user
> Apache
> > > > runs on can read the files located there. If the files aren't even
> in
> > > those
> > > > locations, then your Python installation is stuffed up. Can you run
> normal
> > > > Python scripts outside of Apache?
> >
> > Do any of the directories listed in the path output in the log
> > file contain a subdirectory called 'mod_python'?
> >
> > If you run Python and do:
> >
> >   from mod_python import psp
> >
> > what does it output?
> >
> > You want it to say:
> >
> >   ImportError: No module named _apache
> >
> > If it complains that it can't even find 'mod_python' module,
> > then the mod_python installation is wrong.
> >
> > Also run within Python:
> >
> >   import sys
> >   print sys.path
> >
> > is the path the same as that in the Apache log file?
> >
> >
> > Graham
> >
From sanji at klassenfeind.org  Thu Oct 19 02:27:59 2006
From: sanji at klassenfeind.org (Christoph Mewes)
Date: Thu Oct 19 02:28:03 2006
Subject: [mod_python] Apache 2.2.2 not working
In-Reply-To: <1161215364.17537@dscpl.user.openhosting.com>
References: <1161215364.17537@dscpl.user.openhosting.com>
Message-ID: <3e7d78380610182327n737ab205u21a1cc40e4de046e@mail.gmail.com>

Finally, that worked for me. I created the registry keys both for 2.4,
2.4.1 and 2.5 and now everything works fine.

Thanks alot.

2006/10/19, Graham Dumpleton <grahamd@dscpl.com.au>:
> Since I don't use Windows, my knowledge on how to address this is limited.
> There was a prior post on the mailing list:
>
>   http://www.modpython.org/pipermail/mod_python/2006-September/021979.html
>
> which talks about windows registry settings indicating where Python is
> installed. You might ensure that the PythonPath setting includes the
> site-packages directory.
>
> Otherwise, will have to wait until some of the Windows people can give
> you an answer.
>
> Graham
>
> Christoph Mewes wrote ..
> > I have the directory
> >
> > E:\Software\Python-2.4.1\Lib\site-packages\mod_python.
> >
> > Python shows what you expected ("ImportError: No module named
> > _apache"). The path list reads as follows:
> >
> > ['', 'E:\\Software\\Python-2.4.1\\python24.zip', 'E:\\Software\\Python-2.4.1',
> > '
> > E:\\Software\\Python-2.4.1\\DLLs', 'E:\\Software\\Python-2.4.1\\lib', 'E:\\Softw
> > are\\Python-2.4.1\\lib\\plat-win', 'E:\\Software\\Python-2.4.1\\lib\\lib-tk',
> > 'E
> > :\\Software\\Python-2.4.1\\lib\\site-packages']
> >
> > Apache reported the "path used":
> >
> > ['E:\\\\Software\\\\Python-2.4.1\\\\python24.zip', '.\\\\DLLs',
> > '.\\\\lib', '.\\\\lib\\\\plat-win', '.\\\\lib\\\\lib-tk',
> > 'E:\\\\Software\\\\Apache-2.2\\\\bin']
> >
> > Christoph
> >
> > (This time I used "Rely to all" in Google Mail)
> >
> > 2006/10/19, Graham Dumpleton <grahamd@dscpl.com.au>:
> > > Please use REPLY-ALL and keep followups on the mailing list.
> > >
> > > Christoph Mewes wrote ..
> > > > I have XP Home, so I cannot really change user rights.
> > > > My installation works perfectly, I can run Python scrits both from
> > the
> > > > interactive mode and via .py-files (outputting to the cmd).
> > > >
> > > > 2006/10/19, Graham Dumpleton <grahamd@dscpl.com.au>:
> > > > > Apache on Win32 generally runs as a special user. That user must
> > have
> > > > > access rights to the Python installation. Go through each of the
> > directories
> > > > > listed in the log output and make sure it is where the Python bits
> > are
> > > > > installed and then check the access rights to make sure the user
> > Apache
> > > > > runs on can read the files located there. If the files aren't even
> > in
> > > > those
> > > > > locations, then your Python installation is stuffed up. Can you run
> > normal
> > > > > Python scripts outside of Apache?
> > >
> > > Do any of the directories listed in the path output in the log
> > > file contain a subdirectory called 'mod_python'?
> > >
> > > If you run Python and do:
> > >
> > >   from mod_python import psp
> > >
> > > what does it output?
> > >
> > > You want it to say:
> > >
> > >   ImportError: No module named _apache
> > >
> > > If it complains that it can't even find 'mod_python' module,
> > > then the mod_python installation is wrong.
> > >
> > > Also run within Python:
> > >
> > >   import sys
> > >   print sys.path
> > >
> > > is the path the same as that in the Apache log file?
> > >
> > >
> > > Graham
> > >
>
From l.montecchiani at teamsystem.com  Thu Oct 19 04:08:19 2006
From: l.montecchiani at teamsystem.com (Luca Montecchiani)
Date: Thu Oct 19 04:11:14 2006
Subject: [mod_python] Memory Session doesen't
	workwithPythonInterpPerDirectory on Windows
In-Reply-To: <1161210480.5003@dscpl.user.openhosting.com>
References: <1161210480.5003@dscpl.user.openhosting.com>
Message-ID: <45373273.2030304@teamsystem.com>

Thanks for replying and for all your impressive work
on modpython !

Graham Dumpleton wrote:
:
> Whoops. Not thinking properly. Yes, use of MemorySession when two
> separate interpreters used like this would be an issue and external
> database would be needed. This would be the only way of getting it
> to work if you must communicate between two separate interpreters.

Ok, this must be a FAQ then :-)

>>What version of mod_python are you using? 

Sorry my fault, I'm using :
- Windows 2000/XP/2003
- Apache 2.2.3
- Modpython 3.2.10

>> There are bugs related to
>>PythonInterpPerDirectory in older versions, and not all problems may
>>even be addressed until mod_python 3.3. You should avoid using the
>>PythonInterpPerDirectory unless you have a very good reason.

Btw I don't think I've hit this bug

>>For a possible workaround, try setting:
>>
>>  PythonOption ApplicationPath /www

My fault again, I've already have this option in my httpd.conf

>>BTW, why are you using PythonInterpPerDirectory? What do you think
>>you get from using it?
> Still like to know why you are using this directive. :-)

Of course ;-)
Since the beginning we had problem using scripts with
same name but living in different directory. I know that this is
a FAQ and we promptly renamed all the scripts to have unique
names. Reading docs we found that PythonInterpPerDirectory
could resolve the import issue and we choose to adopt it as an
extra security option. We also liked the "isolation" that this
option seem to give us.

For now we had chose to left the PythonInterpPerDirectory On
and use the DbmSession but if you think that is broken we can
trow it out !

> Graham

later,
luca


-- 
Luca Montecchiani
Software Di Base
TeamSystem S.r.l.
------------------------------------------------------------------------------------------
Informativa ai sensi del D. Lgs. 196-30/06/2003.
Il contenuto di questa e.mail e degli eventuali allegati, deve essere 
nella disponibilit?
del solo destinatario.  Se ricevete per errore questa e-mail siete 
pregati di informarci
(rispedendola al mittente) e di provvedere alla sua rimozione.
Possono essere presenti informazioni riservate e non corrette 
(parzialmente o totalmente).
Le e-mail in partenza e in arrivo possono essere oggetto di monitoraggio
da parte di Teamsystem spa.  Del contenuto ? responsabile il mittente 
della presente.
Chiunque venga in possesso non autorizzato di questa e-mail ? vincolato
dalla Legge a non leggerne il contenuto, a non copiarla, a non 
diffonderla e a non usarla.
Informiamo che per l' esercizio dei diritti di cui all'art. 7 del 
d.lgs.196/2003 ci si pu?
rivolgere al Titolare del trattamento Teamsystem S.r.l. via Gagarin 205 
61100 PESARO
per posta o fax, indicando sulla busta o sul foglio la dicitura 
"Inerente alla Privacy",
o inviando una e-mail all' indirizzo privacy@teamsystem.com .
------------------------------------------------------------------------------------------
From grahamd at dscpl.com.au  Thu Oct 19 06:49:35 2006
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Thu Oct 19 06:50:42 2006
Subject: [mod_python] Memory Session doesen't
	workwithPythonInterpPerDirectory on Windows
In-Reply-To: <45373273.2030304@teamsystem.com>
References: <1161210480.5003@dscpl.user.openhosting.com>
	<45373273.2030304@teamsystem.com>
Message-ID: <9258EE72-D9E6-4261-BC89-6C7E573D2E09@dscpl.com.au>


On 19/10/2006, at 6:08 PM, Luca Montecchiani wrote:
>>> BTW, why are you using PythonInterpPerDirectory? What do you think
>>> you get from using it?
>> Still like to know why you are using this directive. :-)
>
> Of course ;-)
> Since the beginning we had problem using scripts with
> same name but living in different directory. I know that this is
> a FAQ and we promptly renamed all the scripts to have unique
> names. Reading docs we found that PythonInterpPerDirectory
> could resolve the import issue and we choose to adopt it as an
> extra security option. We also liked the "isolation" that this
> option seem to give us.
>
> For now we had chose to left the PythonInterpPerDirectory On
> and use the DbmSession but if you think that is broken we can
> trow it out !

All I can say is that you will like mod_python 3.3 when it arrives then,
as it solves the problem of modules named the same in different
directories. In the meantime, use whatever works. :-)

Do be careful though of the overhead of creating too many distinct
Python interpreters. I don't know what the actual overhead of each
is, but just keep an eye on it.

Graham
From chtaylo3 at gmail.com  Thu Oct 19 10:46:10 2006
From: chtaylo3 at gmail.com (Christopher Taylor)
Date: Thu Oct 19 10:46:16 2006
Subject: [mod_python] Trouble building mod_python from soruce on RHEL4 64bit
Message-ID: <2590773a0610190746s29e21c81gbcf7ab95cff321a4@mail.gmail.com>

Hello all,

I'm running RHEL4 ES on a 2 proc x86_64 server.

I installed python 2.4 on top of python 2.3 with make altinstall so I
had to build mod_python to use /usr/bin/python2.4 instead of
/usr/bin/python (which points to /usr/bin/python2.3 for the sake of
not breaking RH).

Well, when I try and compile up mod_python it breaks when trying to
link in /usr/lib/libpython2.4.a:

/usr/bin/ld: /usr/lib/python2.4/config/libpython2.4.a(abstract.o):
relocation R_X86_64_32 against `a local symbol' can not be used when
making a shared object; recompile with -fPIC
/usr/lib/python2.4/config/libpython2.4.a: could not read symbols: Bad value
collect2: ld returned 1 exit status
apxs:Error: Command failed with rc=65536


Can someone please help with this?  I think it's a problem with the
configure script either for mod-python or python.  Not entirely sure.

Respectfully,
Christopher Taylor
From papanii.okai at gmail.com  Thu Oct 19 15:30:41 2006
From: papanii.okai at gmail.com (Papanii Okai)
Date: Thu Oct 19 15:30:46 2006
Subject: [mod_python] Understanding mod_python
Message-ID: <4537D261.5030603@gmail.com>

Hi Guys,
             As a newbie i have a couple of questions i would like to 
ask the group. Hopefully a good Samaritan will help me clear my confusion.
Question1:
Say i have the following form..

<html>
   <body>
            <span id=form>
                <form action="welcome.py/hello" method="post">
                    <span id="text">
                       Please enter your name:
                        <input type="text"/ name="name">
                        <input type=button>
                     </span>
                  </form>
            </span>
   </body>
</html>


now say i have the following Mod_Python handler..

from mod_python import apache
import Storage

def hello (ref, name):
   mydata = Storage()
   try:
       success = mydata.checkName(name)
   except:
       success = -9
   if success == 1:
       //edit span text to... "Welcome to my house" "name"
   else:
       edit span (id=text) to .."Sorry you are not welcome..."

   return apache.OK   Ok, so what i am trying to understand is how to 
use mod_python to update an existing page without recreating the page. 
(note: without using PSP). This probably will lead into my second 
question but is it possible to use mod_python with Ajax. Specifically 
how would i link mod_python and JavaScript together. I am assuming that 
a javascript function would callback a mod_python module. Once the 
request has returned some data, JavaScript would update the page 
accordingly. To be honest i am not sure if this makes any sense but i 
thought i would ask anyway.
   Also if anyone knows of any resource thats talks about using 
mod_python to create dynamic web pages, kindly let me know....


Thanx
--Papanii

From fred at adventistcare.org  Thu Oct 19 15:50:55 2006
From: fred at adventistcare.org (Sells, Fred)
Date: Thu Oct 19 15:42:38 2006
Subject: [mod_python] handler and index.html problem
Message-ID: <1A4BF05172023E468CB6E867923BC90402B6E30B@accmail2.sunbelt.org>

I'm a mod_python newbie using python 2.3 and mod_python 3.1.3-5.1 on Red Hat
Enterprise Linux

I have my own "security.py" module that I want to intercept all requests
into the html root (/var/www/html) and force the user to login if they have
not already.  I must use a legacy login, so using the apache authentication
is not an option.  The intercept and login work fine, but once they are
logged in,  any reference to the directory, hence an implied index.html page
fails.  my .conf setup is

 
   <Directory "/var/www/html">
     SetHandler python-program
     PythonHandler  security default
     PythonDebug On
   </Directory>
 
 http://fredqa.xxx.org/rds/unittest.html  this works, is simple html no js
or css includes
 http://fredqa.xxx.org/rds/index.html     this works, has links to js and
css embedded
 http://fredqa.xxx.org/rds/               this FAILS, see error message
below
 
 Mod_python error: "PythonHandler default"
 Traceback (most recent call last):
   File "/usr/lib/python2.3/site-packages/mod_python/apache.py", line 287,
in
 HandlerDispatch log=debug)
   File "/usr/lib/python2.3/site-packages/mod_python/apache.py", line 454,
in
 import_module
     f, p, d = imp.find_module(parts[i], path)
 ImportError: No module named default
 
 I've tried "default-handler" with same results.  I would like to have
Apache just render the page, once I've verified that the user has access.

---------------------------------------------------------------------------
The information contained in this message may be privileged and / or
confidential and protected from disclosure. If the reader of this message is
not the intended recipient, you are hereby notified that any dissemination,
distribution or copying of this communication is strictly prohibited. If you
have received this communication in error, please notify the sender
immediately by replying to this message and deleting the material from any
computer.
---------------------------------------------------------------------------

From grahamd at dscpl.com.au  Thu Oct 19 18:02:19 2006
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Thu Oct 19 18:02:42 2006
Subject: [mod_python] handler and index.html problem
Message-ID: <1161295339.21972@dscpl.user.openhosting.com>

Sells, Fred wrote ..
> I'm a mod_python newbie using python 2.3 and mod_python 3.1.3-5.1 on Red
> Hat
> Enterprise Linux
> 
> I have my own "security.py" module that I want to intercept all requests
> into the html root (/var/www/html) and force the user to login if they
> have
> not already.  I must use a legacy login, so using the apache authentication
> is not an option.  The intercept and login work fine, but once they are
> logged in,  any reference to the directory, hence an implied index.html
> page
> fails.  my .conf setup is
> 
>  
>    <Directory "/var/www/html">
>      SetHandler python-program
>      PythonHandler  security default
>      PythonDebug On
>    </Directory>

Use:

    <Directory "/var/www/html">
      PythonAccessHandler  security
      PythonDebug On
    </Directory>

Change the name of your handler in 'security' from 'handler'
to 'accesshandler'. If your handler in that file is returning a
complete response by setting req.status and then returning
apache.OK, ensure you return apache.DONE instead.

Graham

From grahamd at dscpl.com.au  Thu Oct 19 18:09:38 2006
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Thu Oct 19 18:09:41 2006
Subject: [mod_python] Trouble building mod_python from soruce on RHEL4
	64bit
Message-ID: <1161295778.25870@dscpl.user.openhosting.com>

Have you ever tried to build any other third party extension module for
Python which incorporates a C code component. For example, if you get
down cElementTree can you build it. Doing this might confirm whether
it is an issue with your installation of Python or something else.

Graham

Christopher Taylor wrote ..
> Hello all,
> 
> I'm running RHEL4 ES on a 2 proc x86_64 server.
> 
> I installed python 2.4 on top of python 2.3 with make altinstall so I
> had to build mod_python to use /usr/bin/python2.4 instead of
> /usr/bin/python (which points to /usr/bin/python2.3 for the sake of
> not breaking RH).
> 
> Well, when I try and compile up mod_python it breaks when trying to
> link in /usr/lib/libpython2.4.a:
> 
> /usr/bin/ld: /usr/lib/python2.4/config/libpython2.4.a(abstract.o):
> relocation R_X86_64_32 against `a local symbol' can not be used when
> making a shared object; recompile with -fPIC
> /usr/lib/python2.4/config/libpython2.4.a: could not read symbols: Bad value
> collect2: ld returned 1 exit status
> apxs:Error: Command failed with rc=65536
> 
> 
> Can someone please help with this?  I think it's a problem with the
> configure script either for mod-python or python.  Not entirely sure.
> 
> Respectfully,
> Christopher Taylor
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
From crosseyedpenguin at cox.net  Thu Oct 19 20:58:35 2006
From: crosseyedpenguin at cox.net (Roger)
Date: Thu Oct 19 20:58:41 2006
Subject: [mod_python] Using mod_python with two applications fails on
	FedoraCore 4, works on Window/XP
In-Reply-To: <1161210198.2411@dscpl.user.openhosting.com>
References: <1161210198.2411@dscpl.user.openhosting.com>
Message-ID: <45381F3B.9020400@cox.net>

Graham Dumpleton wrote:
> Roger wrote ..
>   
>> My problem is that the MoinMoin modules (the second application defined)
>> are being reloaded with each request.  A logging message inserted into
>> the MoinMoin request.py module verifies this.  I found this problem 
>> while investigating the cause of why my newly written MoinMoin macros 
>> were crashing after MySQL ran out of available connections.
>>
>> This problem does not occur on my test system under Windows/XP with 
>> apache 2.0.53 and mod_python 3.2.5.  I had been running mod_python 3.1.4
>> under Fedora Core 4 and have upgraded to 3.2.10 but the problem persists.
>>
>>     
>
>
> The messages in the error log file do not show the process ID for the Apache
> child process that performed the import. Nor do they distinguish between an
> initial load and a reload, nor which Python interpreter instance performed the
> load. FWIW, both all issues are addressed in mod_python 3.3.
>
> Why this is important is that if you are using Apache in prefork mode, whereby
> there are multiple Apache child processes, you may be confusing messages
> generated from different Apache child processes as indicating that a module is
> being reloaded on ever request. Instead, all that may be happening is that each
> request is going to a different Apache child process and it takes a while
> before all Apache child processes have been involved in handling a request for
> that application and before the messages stop appearing.
>
>
>   
You are correct, I was confused by the messages from the multiple child 
processes.  A curiosity is my Windows/XP test system seems to reuse the 
same child process until it needs another and the Fedora Core system 
seems to cycle through all the child processes and uses a different one 
with each new request.

Thanks,

Roger

From grahamd at dscpl.com.au  Thu Oct 19 21:07:42 2006
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Thu Oct 19 21:07:47 2006
Subject: [mod_python] Using mod_python with two applications fails
	onFedoraCore 4, works on Window/XP
Message-ID: <1161306462.29286@dscpl.user.openhosting.com>

Roger wrote ..
> > The messages in the error log file do not show the process ID for the
> Apache
> > child process that performed the import. Nor do they distinguish between
> an
> > initial load and a reload, nor which Python interpreter instance performed
> the
> > load. FWIW, both all issues are addressed in mod_python 3.3.
> >
> > Why this is important is that if you are using Apache in prefork mode,
> whereby
> > there are multiple Apache child processes, you may be confusing messages
> > generated from different Apache child processes as indicating that a
> module is
> > being reloaded on ever request. Instead, all that may be happening is
> that each
> > request is going to a different Apache child process and it takes a while
> > before all Apache child processes have been involved in handling a request
> for
> > that application and before the messages stop appearing.
> >
> >
> >   
> You are correct, I was confused by the messages from the multiple child
> processes.  A curiosity is my Windows/XP test system seems to reuse the
> same child process until it needs another and the Fedora Core system 
> seems to cycle through all the child processes and uses a different one
> with each new request.

You might read:

  http://www.dscpl.com.au/wiki/ModPython/Articles/TheProcessInterpreterModel

This gives a bit of background on the different Apache MPM models. On
Win32 there is only one process that handles all requests. On UNIX there
can be more than one, with each process possibly handling concurrent
requests depending on the configuration.

Graham
From durumdara at gmail.com  Fri Oct 20 06:39:35 2006
From: durumdara at gmail.com (durumdara)
Date: Fri Oct 20 06:39:44 2006
Subject: [mod_python] Lama - I don't understand basic auth...
Message-ID: <4538A767.7010300@gmail.com>

Hi !

I want to create a site with restricted area.
I use apache auth., but I don't know, how to controll it later.
The documentation is very laconic in this theme, and I cannot 
understand, how to join/link my dbmsession based user management with 
this auth. method.

I need a restricted area that containing private informations, pages 
that I don't want to show.
Apache can keep out the non-valid users.
In normal way of the login when I want to intrude to a restricted area, 
a login form I get.
Then I can auth. myself, and the application is store UserID, LoginTime, 
etc.
After that I can see the content I need.

This section of my code/site I can create, because in the auth. handler 
script I can login, later in the req. handler script I can catch the 
username, and if I don't have specific values in Session, I can write 
them into user Session.
Later I can check these values, and I can control  the page view.

BUT !
I don't know, how to control this Apache auth. later.
If Session time expired, I need to clear the Apache auth. values (user, 
pwd). If don't do this the apache auth. handler allow to access the 
restricted files.
When this Apache auth. finished ? How to I force to finish/expire ?

Or I understand something wrong ?

Thanks for your help:
    dd

<Directory "C:/web/htdocs/club">
    AddHandler mod_python .py
    PythonHandler index
    PythonAuthenHandler index
    PythonDebug On
    AuthType Basic
    AuthName "Restricted Area"
    require valid-user
</Directory>

from mod_python import apache

def authenhandler(req):
    pw = req.get_basic_auth_pw()
    user = req.user
    if user == "spam" and pw == "eggs":
       return apache.OK
    else:
       return apache.HTTP_UNAUTHORIZED

From grahamd at dscpl.com.au  Fri Oct 20 07:40:25 2006
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Fri Oct 20 07:40:34 2006
Subject: [mod_python] Lama - I don't understand basic auth...
In-Reply-To: <4538A767.7010300@gmail.com>
References: <4538A767.7010300@gmail.com>
Message-ID: <C4D0F7E0-7B5F-4D50-985E-074786A5AB4D@dscpl.com.au>

When you use HTTP Basic authentication, once the user has authenticated
the credentials are stored in the web browser and supplied on each  
request
automatically by the web browser. How long the web browser remembers
those credentials depends on whether you tell the browser to remember
the credentials indefinitely when presented with the login popup window.
There isn't really a way of a server side application telling the web  
browser
to forget the credentials.

In terms of what you are trying to do, people do not usually use HTTP  
Basic
authentication. Instead they used forms based login backed up by  
sessions
on the server side to monitor sessions times and implement timeouts.

So for starters, don't use HTTP Basic authentication, as it will be  
quite hard
for you to do what you want using it.

Sorry, don't have any time to go into it further. There is an old  
example of
doing forms based login in Vampire which you can browser through at:

   http://svn.dscpl.com.au/vampire/trunk/examples/session/

Personally I wouldn't do it this way now as in mod_python 3.3 there  
are some
nicer ways of doing all this. It is also tied to how Vampire works,  
but it still may
be of interest and give you some ideas of the general principles of  
how it might
be done. Am sure others will pipe in with suggestions as well and  
perhaps a
simpler example. It is quite tricky to get completely right though.

Graham

On 20/10/2006, at 8:39 PM, durumdara wrote:

> Hi !
>
> I want to create a site with restricted area.
> I use apache auth., but I don't know, how to controll it later.
> The documentation is very laconic in this theme, and I cannot  
> understand, how to join/link my dbmsession based user management  
> with this auth. method.
>
> I need a restricted area that containing private informations,  
> pages that I don't want to show.
> Apache can keep out the non-valid users.
> In normal way of the login when I want to intrude to a restricted  
> area, a login form I get.
> Then I can auth. myself, and the application is store UserID,  
> LoginTime, etc.
> After that I can see the content I need.
>
> This section of my code/site I can create, because in the auth.  
> handler script I can login, later in the req. handler script I can  
> catch the username, and if I don't have specific values in Session,  
> I can write them into user Session.
> Later I can check these values, and I can control  the page view.
>
> BUT !
> I don't know, how to control this Apache auth. later.
> If Session time expired, I need to clear the Apache auth. values  
> (user, pwd). If don't do this the apache auth. handler allow to  
> access the restricted files.
> When this Apache auth. finished ? How to I force to finish/expire ?
>
> Or I understand something wrong ?
>
> Thanks for your help:
>    dd
>
> <Directory "C:/web/htdocs/club">
>    AddHandler mod_python .py
>    PythonHandler index
>    PythonAuthenHandler index
>    PythonDebug On
>    AuthType Basic
>    AuthName "Restricted Area"
>    require valid-user
> </Directory>
>
> from mod_python import apache
>
> def authenhandler(req):
>    pw = req.get_basic_auth_pw()
>    user = req.user
>    if user == "spam" and pw == "eggs":
>       return apache.OK
>    else:
>       return apache.HTTP_UNAUTHORIZED
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
From ecastro1981-misc at yahoo.com  Fri Oct 20 19:03:11 2006
From: ecastro1981-misc at yahoo.com (ecastro1981-misc@yahoo.com)
Date: Fri Oct 20 19:03:16 2006
Subject: [mod_python] CSS sheets and XML formatting - Maybe apache config?
Message-ID: <20061020230311.57781.qmail@web51101.mail.yahoo.com>

Hi,

Sorry I am a newbie. I have been testing out the following example from the CSS wikipedia article but I do not get the same output as displayed in wikipedia. As an actual xml file with a css page it works but I think I am doing something wrong with the modpython handlers.

http://en.wikipedia.org/wiki/Cascading_Style_Sheets

my file is test.py
===========================
from mod_python import apache

def say(req, what="NOTHING"):
    return "I am saying %s" % what

def test4(req):
    req.content_type = 'text/xml; charset=UTF-8'
    req.write("<?xml version=\"1.0\" encoding=\"UTF-8\"?>")
    req.write("<?xml-stylesheet type=\"text/css\" href=\"C:\Program Files\Apache Software Foundation\Apache2.2\htdocs\css.css\"?>")
    req.write("<schedule>")
    req.write("<date>Tuesday 20 June</date>")
    req.write("<programme>")
    req.write("<starts>6:00</starts>")
    req.write("<title>News</title>")
    req.write("With Michael Smith and Fiona Tolstoy.")
    req.write("Followed by Weather with Malcolm Stott.")
    req.write("</programme>")
    req.write("<programme>")
    req.write("<starts>6:30</starts>")
    req.write("<title>Regional news update</title>")
    req.write("Local news for your area.")
    req.write("</programme>")
    req.write("<programme>")
    req.write("<starts>7:00</starts>")
    req.write("<title>Unlikely suspect</title>")
    req.write("Whimsical romantic crime drama starring Janet")
    req.write("Hawthorne and Percy Trumpp.")
    req.write("</programme>")
    req.write("</schedule>")
    return


def test5(req):
    req.content_type = 'text/xml; charset=UTF-8'
    req.write("<?xml version=\"1.0\" encoding=\"UTF-8\"?>")
    req.write("<?xml-stylesheet type=\"text/css\" href=\"css.css\"?>")
    req.write("<schedule>")
    req.write("<date>Tuesday 20 June</date>")
    req.write("<programme>")
    req.write("<starts>6:00</starts>")
    req.write("<title>News</title>")
    req.write("With Michael Smith and Fiona Tolstoy.")
    req.write("Followed by Weather with Malcolm Stott.")
    req.write("</programme>")
    req.write("<programme>")
    req.write("<starts>6:30</starts>")
    req.write("<title>Regional news update</title>")
    req.write("Local news for your area.")
    req.write("</programme>")
    req.write("<programme>")
    req.write("<starts>7:00</starts>")
    req.write("<title>Unlikely suspect</title>")
    req.write("Whimsical romantic crime drama starring Janet")
    req.write("Hawthorne and Percy Trumpp.")
    req.write("</programme>")
    req.write("</schedule>")
    return


I was hoping a call to test4 or test5 would pickup the css file but nothing happened. Does my apache conf file need something else. I strongly suspect I need to declare some directory in my apache conf file, but I am stuck.

Should I create an xml file and then send it over? Or is does this call for cString?

Any help with this would be appreciated.

Thank You,
E


-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20061020/5259c60f/attachment.html
From sdavis2 at mail.nih.gov  Fri Oct 20 19:11:35 2006
From: sdavis2 at mail.nih.gov (Sean Davis)
Date: Fri Oct 20 19:11:38 2006
Subject: [mod_python] Lama - I don't understand basic auth...
In-Reply-To: <4538A767.7010300@gmail.com>
References: <4538A767.7010300@gmail.com>
Message-ID: <453957A7.9020500@mail.nih.gov>

durumdara wrote:
> Hi !
>
> I want to create a site with restricted area.
> I use apache auth., but I don't know, how to controll it later.
> The documentation is very laconic in this theme, and I cannot 
> understand, how to join/link my dbmsession based user management with 
> this auth. method.
>
> I need a restricted area that containing private informations, pages 
> that I don't want to show.
> Apache can keep out the non-valid users.
> In normal way of the login when I want to intrude to a restricted 
> area, a login form I get.
> Then I can auth. myself, and the application is store UserID, 
> LoginTime, etc.
> After that I can see the content I need.
>
> This section of my code/site I can create, because in the auth. 
> handler script I can login, later in the req. handler script I can 
> catch the username, and if I don't have specific values in Session, I 
> can write them into user Session.
> Later I can check these values, and I can control  the page view.
>
> BUT !
> I don't know, how to control this Apache auth. later.
> If Session time expired, I need to clear the Apache auth. values 
> (user, pwd). If don't do this the apache auth. handler allow to access 
> the restricted files.
> When this Apache auth. finished ? How to I force to finish/expire ?
You can't log a user out using basic auth.  You will need to use a 
cookie or a hidden field to store a secure token that you can check 
against your session for the same user.  If the token doesn't exist 
(first login) or the tokcn is associated with an expired session, then 
you can do your authorization, but that authorization cannot be basic 
auth if you want to "expire" or log a user out.  This fact is a 
well-known limitation of basic authorization.

Sean
From sdavis2 at mail.nih.gov  Fri Oct 20 19:21:57 2006
From: sdavis2 at mail.nih.gov (Sean Davis)
Date: Fri Oct 20 19:22:01 2006
Subject: [mod_python] CSS sheets and XML formatting - Maybe apache config?
In-Reply-To: <20061020230311.57781.qmail@web51101.mail.yahoo.com>
References: <20061020230311.57781.qmail@web51101.mail.yahoo.com>
Message-ID: <45395A15.6050009@mail.nih.gov>

ecastro1981-misc@yahoo.com wrote:
> Hi,
>
> Sorry I am a newbie. I have been testing out the following example 
> from the CSS wikipedia article but I do not get the same output as 
> displayed in wikipedia. As an actual xml file with a css page it works 
> but I think I am doing something wrong with the modpython handlers.
>
> http://en.wikipedia.org/wiki/Cascading_Style_Sheets
>
> my file is test.py
> ===========================
> from mod_python import apache
>
> def say(req, what="NOTHING"):
>     return "I am saying %s" % what
>
> def test4(req):
>     req.content_type = 'text/xml; charset=UTF-8'
>     req.write("<?xml version=\"1.0\" encoding=\"UTF-8\"?>")
>     req.write("<?xml-stylesheet type=\"text/css\" href=\"C:\Program 
> Files\Apache Software Foundation\Apache2.2\htdocs\css.css\"?>")
>     req.write("<schedule>")
>     req.write("<date>Tuesday 20 June</date>")
>     req.write("<programme>")
>     req.write("<starts>6:00</starts>")
>     req.write("<title>News</title>")
>     req.write("With Michael Smith and Fiona Tolstoy.")
>     req.write("Followed by Weather with Malcolm Stott.")
>     req.write("</programme>")
>     req.write("<programme>")
>     req.write("<starts>6:30</starts>")
>     req.write("<title>Regional news update</title>")
>     req.write("Local news for your area.")
>     req.write("</programme>")
>     req.write("<programme>")
>     req.write("<starts>7:00</starts>")
>     req.write("<title>Unlikely suspect</title>")
>     req.write("Whimsical romantic crime drama starring Janet")
>     req.write("Hawthorne and Percy Trumpp.")
>     req.write("</programme>")
>     req.write("</schedule>")
>     return
>
>
> def test5(req):
>     req.content_type = 'text/xml; charset=UTF-8'
>     req.write("<?xml version=\"1.0\" encoding=\"UTF-8\"?>")
>     req.write("<?xml-stylesheet type=\"text/css\" href=\"css.css\"?>")
>     req.write("<schedule>")
>     req.write("<date>Tuesday 20 June</date>")
>     req.write("<programme>")
>     req.write("<starts>6:00</starts>")
>     req.write("<title>News</title>")
>     req.write("With Michael Smith and Fiona Tolstoy.")
>     req.write("Followed by Weather with Malcolm Stott.")
>     req.write("</programme>")
>     req.write("<programme>")
>     req.write("<starts>6:30</starts>")
>     req.write("<title>Regional news update</title>")
>     req.write("Local news for your area.")
>     req.write("</programme>")
>     req.write("<programme>")
>     req.write("<starts>7:00</starts>")
>     req.write("<title>Unlikely suspect</title>")
>     req.write("Whimsical romantic crime drama starring Janet")
>     req.write("Hawthorne and Percy Trumpp.")
>     req.write("</programme>")
>     req.write("</schedule>")
>     return
>
>
> I was hoping a call to test4 or test5 would pickup the css file but 
> nothing happened. Does my apache conf file need something else. I 
> strongly suspect I need to declare some directory in my apache conf 
> file, but I am stuck.
Did you install mod_python?  Did you configure it in apache?  Did you 
add a directive to direct mod_python to handle the directory?  Does a 
test from the mod_python manual work? 

What do you have in yor apache configuration for this file?  What do you 
type into the address bar of the browser?  What are the results?  If 
they are not what you expect, what does you error log show?  Also, 
content handlers need to return apache.OK (or at least some apache 
constant). 

In short, some more specifics might be needed here.

Sean
From grahamd at dscpl.com.au  Fri Oct 20 19:29:42 2006
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Fri Oct 20 19:29:49 2006
Subject: [mod_python] CSS sheets and XML formatting - Maybe apache config?
In-Reply-To: <20061020230311.57781.qmail@web51101.mail.yahoo.com>
References: <20061020230311.57781.qmail@web51101.mail.yahoo.com>
Message-ID: <64223459-D9EE-4809-BB50-01F1CA854B3B@dscpl.com.au>


On 21/10/2006, at 9:03 AM, <ecastro1981-misc@yahoo.com> wrote:

> Hi,
>
> Sorry I am a newbie. I have been testing out the following example  
> from the CSS wikipedia article but I do not get the same output as  
> displayed in wikipedia. As an actual xml file with a css page it  
> works but I think I am doing something wrong with the modpython  
> handlers.
>
> http://en.wikipedia.org/wiki/Cascading_Style_Sheets
>
> my file is test.py
> ===========================
> from mod_python import apache
>
> def say(req, what="NOTHING"):
>     return "I am saying %s" % what
>
> def test4(req):
>     req.content_type = 'text/xml; charset=UTF-8'
>     req.write("<?xml version=\"1.0\" encoding=\"UTF-8\"?>")
>     req.write("<?xml-stylesheet type=\"text/css\" href=\"C:\Program  
> Files\Apache Software Foundation\Apache2.2\htdocs\css.css\"?>")

The href value here is wrong for a few reasons and will not work.  
First is that
href values which refer to a file system directory for a browser to  
lookup must
start with 'file:///'. Second is whether one can even make a browser  
pick up a
local filesystem file by mentioning it in a href like this. Third is  
that your back
slashes are properly escaped properly and it isn't going to be what  
you want.
Try using Python to print the value of your string and you will see  
what I mean.

>     req.write("<schedule>")
>     req.write("<date>Tuesday 20 June</date>")
>     req.write("<programme>")
>     req.write("<starts>6:00</starts>")
>     req.write("<title>News</title>")
>     req.write("With Michael Smith and Fiona Tolstoy.")
>     req.write("Followed by Weather with Malcolm Stott.")
>     req.write("</programme>")
>     req.write("<programme>")
>     req.write("<starts>6:30</starts>")
>     req.write("<title>Regional news update</title>")
>     req.write("Local news for your area.")
>     req.write("</programme>")
>     req.write("<programme>")
>     req.write("<starts>7:00</starts>")
>     req.write("<title>Unlikely suspect</title>")
>     req.write("Whimsical romantic crime drama starring Janet")
>     req.write("Hawthorne and Percy Trumpp.")
>     req.write("</programme>")
>     req.write("</schedule>")
>     return
>
>
> def test5(req):
>     req.content_type = 'text/xml; charset=UTF-8'
>     req.write("<?xml version=\"1.0\" encoding=\"UTF-8\"?>")
>     req.write("<?xml-stylesheet type=\"text/css\" href=\"css.css\"?>")

Is you css.css file in the same directory as your publisher .py  
files? What Apache
configuration have you used to enable the use of mod_python, did you use
SetHandler or AddHandler? If you used SetHandler, then all requests  
go to
mod_python and a static .css file will never be able to be served up.

There could also be issues dependent on which URL you used to access the
resource in the first place as publisher is really sloppy about how  
it deals with
trailing slashes and it is possible to have URLs notionally targeting  
different
levels in the URL hierarchy ending up at the same resource with the  
result
being that relative URLs are broken.

In summary, post the snippet of Apache configuration that you are  
using to
enable use of mod_python.publisher. Also indicate what URL you are using
and where the .css file is located relative to the .py files.

Graham

>     req.write("<schedule>")
>     req.write("<date>Tuesday 20 June</date>")
>     req.write("<programme>")
>     req.write("<starts>6:00</starts>")
>     req.write("<title>News</title>")
>     req.write("With Michael Smith and Fiona Tolstoy.")
>     req.write("Followed by Weather with Malcolm Stott.")
>     req.write("</programme>")
>     req.write("<programme>")
>     req.write("<starts>6:30</starts>")
>     req.write("<title>Regional news update</title>")
>     req.write("Local news for your area.")
>     req.write("</programme>")
>     req.write("<programme>")
>     req.write("<starts>7:00</starts>")
>     req.write("<title>Unlikely suspect</title>")
>     req.write("Whimsical romantic crime drama starring Janet")
>     req.write("Hawthorne and Percy Trumpp.")
>     req.write("</programme>")
>     req.write("</schedule>")
>     return
>
>
> I was hoping a call to test4 or test5 would pickup the css file but  
> nothing happened. Does my apache conf file need something else. I  
> strongly suspect I need to declare some directory in my apache conf  
> file, but I am stuck.
>
> Should I create an xml file and then send it over? Or is does this  
> call for cString?
>
> Any help with this would be appreciated.
>
> Thank You,
> E
>
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
From grahamd at dscpl.com.au  Fri Oct 20 19:31:31 2006
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Fri Oct 20 19:31:46 2006
Subject: [mod_python] CSS sheets and XML formatting - Maybe apache config?
In-Reply-To: <45395A15.6050009@mail.nih.gov>
References: <20061020230311.57781.qmail@web51101.mail.yahoo.com>
	<45395A15.6050009@mail.nih.gov>
Message-ID: <DA3746CC-3F08-492F-A221-6B6FCC23B6BC@dscpl.com.au>


On 21/10/2006, at 9:21 AM, Sean Davis wrote:

>>
>> I was hoping a call to test4 or test5 would pickup the css file  
>> but nothing happened. Does my apache conf file need something  
>> else. I strongly suspect I need to declare some directory in my  
>> apache conf file, but I am stuck.
> Did you install mod_python?  Did you configure it in apache?  Did  
> you add a directive to direct mod_python to handle the directory?   
> Does a test from the mod_python manual work?
> What do you have in yor apache configuration for this file?  What  
> do you type into the address bar of the browser?  What are the  
> results?  If they are not what you expect, what does you error log  
> show?  Also, content handlers need to return apache.OK (or at least  
> some apache constant).
> In short, some more specifics might be needed here.

The handler prototypes, arguments and return values are indicative that
he was probably trying to use mod_python.publisher, in which case the
result is the actual content of the page to be send back and not a  
result
code. Ie., for publisher handlers, do not need to be returning  
apache.OK.

Graham
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20061021/89c9dedc/attachment-0001.html
From sdavis2 at mail.nih.gov  Fri Oct 20 19:37:16 2006
From: sdavis2 at mail.nih.gov (Sean Davis)
Date: Fri Oct 20 19:37:19 2006
Subject: [mod_python] CSS sheets and XML formatting - Maybe apache config?
In-Reply-To: <DA3746CC-3F08-492F-A221-6B6FCC23B6BC@dscpl.com.au>
References: <20061020230311.57781.qmail@web51101.mail.yahoo.com>
	<45395A15.6050009@mail.nih.gov>
	<DA3746CC-3F08-492F-A221-6B6FCC23B6BC@dscpl.com.au>
Message-ID: <45395DAC.9090803@mail.nih.gov>

Graham Dumpleton wrote:
>
> On 21/10/2006, at 9:21 AM, Sean Davis wrote:
>
>>>
>>> I was hoping a call to test4 or test5 would pickup the css file but 
>>> nothing happened. Does my apache conf file need something else. I 
>>> strongly suspect I need to declare some directory in my apache conf 
>>> file, but I am stuck.
>>>
>> Did you install mod_python?  Did you configure it in apache?  Did you 
>> add a directive to direct mod_python to handle the directory?  Does a 
>> test from the mod_python manual work? 
>>
>> What do you have in yor apache configuration for this file?  What do 
>> you type into the address bar of the browser?  What are the results?  
>> If they are not what you expect, what does you error log show?  Also, 
>> content handlers need to return apache.OK (or at least some apache 
>> constant). 
>>
>> In short, some more specifics might be needed here.
>>
>
> The handler prototypes, arguments and return values are indicative that
> he was probably trying to use mod_python.publisher, in which case the
> result is the actual content of the page to be send back and not a result
> code. Ie., for publisher handlers, do not need to be returning apache.OK.
Good point.  Sorry for the misinformation. 

Sean
From jpg at jgassociates.ca  Sat Oct 21 16:57:29 2006
From: jpg at jgassociates.ca (Jim Gallacher)
Date: Sat Oct 21 16:57:02 2006
Subject: [mod_python] ASF infrastructure changes
Message-ID: <453A89B9.3090603@jgassociates.ca>

Howdy Folks,

The ASF is make some infrastructure changes, so things like the 
python-developers list and the JIRA issue tracker will be unavailable 
for a day or 2. No need to panic - this was a planned outage. The 
mod_python users list (this one!) is not currently using the ASF 
infrastructure and is not affected.

Quoting from the www.apache.org:

Scheduled Downtime

The Apache Software Foundation will be doing some infrastructure work 
that will cause some public services to be innaccessible from Saturday, 
October 21st through Monday, October 23rd.


Jim
From joseph.r.buehre at boeing.com  Tue Oct 24 12:05:41 2006
From: joseph.r.buehre at boeing.com (Buehre, Joseph R)
Date: Tue Oct 24 12:05:56 2006
Subject: [mod_python] Compiling mod_python HP-UX
Message-ID: <C12C17049E23854783042B3D0F25BB67029B7C4F@XCH-MW-2V2.mw.nos.boeing.com>

Has anyone sucessfully compiled mod_python on HP-UX with apache 2.0 and the last release of mod_python. My compile comes out with no errors but does not create the mod_python.so file.

Thanks in advance!

Thanks, 
Joe Buehre 
 mailto:joseph.r.buehre@boeing.com



From clodoaldo.pinto at gmail.com  Tue Oct 24 16:01:24 2006
From: clodoaldo.pinto at gmail.com (Clodoaldo Pinto Neto)
Date: Tue Oct 24 16:01:40 2006
Subject: [mod_python] Request.hlist dictionary
Message-ID: <a595de7a0610241301w336e837br23242cc37ba0ca9f@mail.gmail.com>

I'm using mod_python 3.2.8 in Fedora Core 5

When using the Publisher handler the returned dictionary from
Request.hlist is missing a single quote:

def index(req):
   return """\
<html><body>
<p>%s</p>
</body></html>
""" % req.hlist

{'handler:'mod_python.publisher','directory':'/var/www/html/teste/python/publisher/','silent':0}

The missing single quote should be delimiting the 'handler' key: {'handler

Sorry if it has already been fixed in 3.2.10.

Regards, Clodoaldo Pinto Neto
From jpg at jgassociates.ca  Tue Oct 24 17:10:18 2006
From: jpg at jgassociates.ca (Jim Gallacher)
Date: Tue Oct 24 17:10:17 2006
Subject: [mod_python] Request.hlist dictionary
In-Reply-To: <a595de7a0610241301w336e837br23242cc37ba0ca9f@mail.gmail.com>
References: <a595de7a0610241301w336e837br23242cc37ba0ca9f@mail.gmail.com>
Message-ID: <453E813A.2080904@jgassociates.ca>

Clodoaldo Pinto Neto wrote:
> I'm using mod_python 3.2.8 in Fedora Core 5
> 
> When using the Publisher handler the returned dictionary from
> Request.hlist is missing a single quote:
> 
> def index(req):
>   return """\
> <html><body>
> <p>%s</p>
> </body></html>
> """ % req.hlist
> 
> {'handler:'mod_python.publisher','directory':'/var/www/html/teste/python/publisher/','silent':0} 
> 
> 
> The missing single quote should be delimiting the 'handler' key: {'handler
> 
> Sorry if it has already been fixed in 3.2.10.

It looks ok in the development branch. We'll have a 3.3.x release coming 
out fairly from that branch shortly - if all goes well. :)

Jim

From grahamd at dscpl.com.au  Tue Oct 24 18:00:16 2006
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Tue Oct 24 18:00:22 2006
Subject: [mod_python] Compiling mod_python HP-UX
Message-ID: <1161727216.14868@dscpl.user.openhosting.com>

Buehre, Joseph R wrote ..
> Has anyone sucessfully compiled mod_python on HP-UX with apache 2.0 and
> the last release of mod_python. My compile comes out with no errors but
> does not create the mod_python.so file.

It has been noted that although sometimes a .so isn't generated and errors are
generated, but the build process still continues. Because the creation of the
.so is not the last thing in the build, the actual error messages can be buried
in the middle of the build output. Thus, make sure you go back through the
whole build output looking for anything that looks like an error or warning,
don't expect that it will be at the end and that the build will stop with an
error.

Also trying going:

  cd src
  make dso

What is the output you get from doing just that?

Graham
From clodoaldo.pinto at gmail.com  Wed Oct 25 12:00:59 2006
From: clodoaldo.pinto at gmail.com (Clodoaldo Pinto Neto)
Date: Wed Oct 25 12:01:13 2006
Subject: [mod_python] FieldStorage's keep_blank_values argument and
	Request.form
Message-ID: <a595de7a0610250900p615b8247j579088aaab76a6c2@mail.gmail.com>

Since it is not possible to instantiate the FieldStorage class when
using the Publisher handler is there a way to pass the
keep_blank_values argument to Request.form?

Regards, Clodoaldo Pinto Neto
From grahamd at dscpl.com.au  Wed Oct 25 17:45:18 2006
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Wed Oct 25 17:45:26 2006
Subject: [mod_python] FieldStorage's keep_blank_values argument
	andRequest.form
Message-ID: <1161812718.1859@dscpl.user.openhosting.com>

Clodoaldo Pinto Neto wrote ..
> Since it is not possible to instantiate the FieldStorage class when
> using the Publisher handler is there a way to pass the
> keep_blank_values argument to Request.form?

Since publisher explicitly sets keep_blank_values to 1, does that mean
you want to override it to be 0?

Like mod_python.psp, the mod_python.publisher handler should perhaps
use an existing instance of the form stored as req.form. That way you
could wrap the publisher handler and override how the form is created.

  def handler(req):
    req.form = util.FieldStorage(req, keep_blank_values=0)
    return mod_python.publisher.handler(req)

This change should perhaps be made in mod_python 3,3.

By allowing this, it might feasibly allow things to be done with the file
callback hooks that FieldStorage accepts in the constructor as well.

Graham
From grahamd at dscpl.com.au  Wed Oct 25 22:57:43 2006
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Wed Oct 25 22:57:50 2006
Subject: [mod_python] RE: modPython pool of single-threaded sub-interpreters?
Message-ID: <1161831463.12990@dscpl.user.openhosting.com>

Would prefer that you subscribe to the mod_python mailing list and ask
such questions there. I have cc'd this on to the mailing list and would
hope that you subscribe and follow up there as necessary.

Matt Krom wrote ..
> Hmm, could we employ forking (at the Apache level) to address this issue?
> Ideally with forking, each request would be handled in its own local memory,
> so the Python app would not have to be threadsafe...
> 
> Thanks for any insight.  I've been reading more of your postings (Google
> "site:modpython.org grahamd") for tidbits.
> 
> Matt

What you are talking about is exactly what Apache/mod_python does when
you use it on UNIX with 'prefork' MPM (the default). Read:

  http://www.dscpl.com.au/wiki/ModPython/Articles/TheProcessInterpreterModel

If you are running on Windows you are out of luck, your application will have
to be multithread safe.

To determine if your Apache (on UNIX) is built with 'prefork' MPM, run:

  httpd -l

If the listing mentions 'prefork.c', it is prefork. If it mentions 'worker.c' it
is worker MPM and can run multiple requests concurrently in separate
threads in the same process.

Graham

> -----Original Message-----
> From: Matt Krom
> Sent: Wed 10/25/2006 10:32 PM
> To: grahamd@dscpl.com.au
> Cc: Matt Krom
> Subject: modPython pool of single-threaded sub-interpreters?
>  
> I'm reading up on the topic of sub-interpreters and threads within mod_python,
> and was encouraged by your knowiedge in this posting :
>    http://www.modpython.org/pipermail/mod_python/2006-August/021867.html
> (Although that posting doesn't address our particular issue).
> 
> What we'd like ("need", actually, since our app is not thread-safe), is:
> 
> - A pool of sub-interpreters
> - Each sub-interpreter handling only one request at a time (single-threaded)
> - New requests given to an idle sub-interpreter
> - Doesn't matter if this is by virtual host, by directory, etc
> 
> As for efficiency of this model, it's no worse than what we're doing now
> (fastcgi manages a pool of C processes, each with its own Python interpreter).
> 
> Do you know of a way to configure mod_python as above?  If you're a committer
> or have viewed the code, does it seem like an easy modification I could
> attempt?
> 
> Thanks for any insight--we are sort of in a pickle and need to solve this
> issue.
> 
> Matt
> 
> mkrom@banta.com
> Cambridge, MA
From ddaniels888 at gmail.com  Wed Oct 25 23:21:59 2006
From: ddaniels888 at gmail.com (Doug Daniels)
Date: Wed Oct 25 23:22:03 2006
Subject: [mod_python] 500 errors from authentication example
Message-ID: <656435590610252021u6becb8bdv603946779bdaec16@mail.gmail.com>

Hello,

I had a bit of trouble running the authentication example at
http://www.modpython.org/live/current/doc-html/tut-more-complicated.html .
I'm working on Mac OS X v 10.4, running:

Apache: 2.2.3
Python: 2.4
mod_python: 3.2.10

When I tried to use the sample code and conf file directives, I got a 500
error from apache.  In the error log I saw:

[Wed Oct 25 22:53:30 2006] [error] [client 127.0.0.1] (9)Bad file
descriptor: Could not open password file: (null)
[Wed Oct 25 22:53:57 2006] [error] Internal error: pcfg_openfile() called
with NULL filename

As per some random advice here:

http://www.mail-archive.com/pld-devel-en@lists.pld-linux.org/msg02163.html

I added the 'AuthBasicAuthoritative off' directive to the directory
definition in the conf file, and the issue went away.

Anyone know what's up here?  Is this a known issue, and if so should the
tutorial be changed?

Thanks,
Doug
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20061025/c7763a9c/attachment.html
From grahamd at dscpl.com.au  Wed Oct 25 23:48:54 2006
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Wed Oct 25 23:48:58 2006
Subject: [mod_python] 500 errors from authentication example
Message-ID: <1161834534.7658@dscpl.user.openhosting.com>

Doug Daniels wrote ..
> Hello,
> 
> I had a bit of trouble running the authentication example at
> http://www.modpython.org/live/current/doc-html/tut-more-complicated.html
> .
> I'm working on Mac OS X v 10.4, running:
> 
> Apache: 2.2.3
> Python: 2.4
> mod_python: 3.2.10
> 
> When I tried to use the sample code and conf file directives, I got a 500
> error from apache.  In the error log I saw:
> 
> [Wed Oct 25 22:53:30 2006] [error] [client 127.0.0.1] (9)Bad file
> descriptor: Could not open password file: (null)
> [Wed Oct 25 22:53:57 2006] [error] Internal error: pcfg_openfile() called
> with NULL filename
> 
> As per some random advice here:
> 
> http://www.mail-archive.com/pld-devel-en@lists.pld-linux.org/msg02163.html
> 
> I added the 'AuthBasicAuthoritative off' directive to the directory
> definition in the conf file, and the issue went away.
> 
> Anyone know what's up here?  Is this a known issue, and if so should the
> tutorial be changed?

Things changed in Apache 2.2 to cause this. The problem has been noted
before on developer mailing list at:

  http://mail-archives.apache.org/mod_mbox/httpd-python-dev/200604.mbox/%3c1144896645.4228@dscpl.user.openhosting.com%3e

There area a few comments there about it.

In short though, if you want to be able to supply your own handler for Basic
or Digest authentication in Apache 2.2, you need to set AuthBasicAuthoritative
to Off.

  http://httpd.apache.org/docs/2.2/mod/mod_auth_basic.html

The preferred way in Apache 2.2 is not even to define your own handler
but provide an auth provider which implements the means to merely
authenticate the login/password. At this point in time though, mod_python
doesn't provide a means of specifying auth providers although the need
for it is recorded at:

  http://issues.apache.org/jira/browse/MODPYTHON-169

So yes, the documentation needs updating, as do a lot of other areas
of the documentation. We are hoping in the future to get the documentation
into a form where that may be easier to do. At the moment the form that
the documentation is in, isn't conducive to easily making changes.

Graham
From Brian.Bird at securetrading.com  Thu Oct 26 05:14:26 2006
From: Brian.Bird at securetrading.com (Brian Bird)
Date: Thu Oct 26 05:14:41 2006
Subject: [mod_python] util.FieldStorage
Message-ID: <A517B25C116F414281788C829739DB3B18F374@stmail.Menai.local>

Is there anything in the works to make util.FieldStorage act more like a
real dictionary? Specifically, it doesn't support the __setitem__,
__delitem__ methods. Since the documentation states "it can be treated
like a dictionary" I was surprised to find these methods missing.

 

I know it's easy to change it to a real dictionary to get these methods,
but then you lose the (very useful) getlist() method. At first glance it
doesn't look like much work to add the extra methods (but I haven't
looked at how it may affect values which aren't StringField's).

 

I've just looked in the latest subversion and found that the items()
method is now in util.FieldStorage, as well as a method add_field()
which looks suspiciously like __setitem__ should, but no sign of a
__delitem__. However, there now seems to be a self.dictionary object
which could be useful - perhaps all unrecognised methods should be
passed onto self.dictionary in the __getattr__ instead of raising an
AttributeError?

 

I've put below what I thought needed adding to the util.FieldStorage
class before I noticed self.dictionary in case it's any help.

 

### Disclaimer - completely untested! :-) ###

 

def __setitem__(self, key, value):

    self.list.append(util.Field(key, cStringIO.StringIO(key),
"text/plain", {}, None, {}))

 

def __delitem__(self, key):

    for item in self.list:

        if item.name == key:

            self.list.remove(item)

 

def items(self):

    result = []

    for key in self.keys():

        result.append((key, self[key]))

    return result

 

def update(self, d):

    for k in d.keys():

        self[k] = d[k]

 

 

Thanks,

 

Brian

 

 

 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20061026/29be8f68/attachment.html
From grahamd at dscpl.com.au  Thu Oct 26 05:56:22 2006
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Thu Oct 26 05:57:36 2006
Subject: [mod_python] util.FieldStorage
In-Reply-To: <A517B25C116F414281788C829739DB3B18F374@stmail.Menai.local>
References: <A517B25C116F414281788C829739DB3B18F374@stmail.Menai.local>
Message-ID: <E4EB1BDA-5608-4DA4-A7D1-72F413565FEF@dscpl.com.au>

The util.FieldStorage implementation in mod_python 3.3 is quite a bit
different to what is used in older versions of mod_python and which
you based your changes upon. Thus your changes are not compatible
with the new code base.

Some have talked about making the new implementation of the
FieldStorage class more dictionary like than it is, but no one has
stepped up to provide any changes.

To be honest I haven't actually looked into how FieldStorage is
implemented as someone outside of the core developers provided
the updated code and it was integrated by someone other than
myself. Looking at the code now, I actually think it might be a bit
broken. I'll have to do some playing with the code.

BTW, what benefits do you think you get if it is more dictionary like?
I am not sure I understand the reason for making such changes in
the first place.

Graham

On 26/10/2006, at 7:14 PM, Brian Bird wrote:

> Is there anything in the works to make util.FieldStorage act more  
> like a real dictionary? Specifically, it doesn?t support the  
> __setitem__, __delitem__ methods. Since the documentation states  
> "it can be treated like a dictionary? I was surprised to find these  
> methods missing.
>
>
>
> I know it?s easy to change it to a real dictionary to get these  
> methods, but then you lose the (very useful) getlist() method. At  
> first glance it doesn?t look like much work to add the extra  
> methods (but I haven?t looked at how it may affect values which  
> aren?t StringField?s).
>
>
>
> I?ve just looked in the latest subversion and found that the items 
> () method is now in util.FieldStorage, as well as a method add_field 
> () which looks suspiciously like __setitem__ should, but no sign of  
> a __delitem__. However, there now seems to be a self.dictionary  
> object which could be useful ? perhaps all unrecognised methods  
> should be passed onto self.dictionary in the __getattr__ instead of  
> raising an AttributeError?
>
>
>
> I?ve put below what I thought needed adding to the  
> util.FieldStorage class before I noticed self.dictionary in case  
> it?s any help.
>
>
>
> ### Disclaimer ? completely untested! J ###
>
>
>
> def __setitem__(self, key, value):
>
>     self.list.append(util.Field(key, cStringIO.StringIO(key), "text/ 
> plain", {}, None, {}))
>
>
>
> def __delitem__(self, key):
>
>     for item in self.list:
>
>         if item.name == key:
>
>             self.list.remove(item)
>
>
>
> def items(self):
>
>     result = []
>
>     for key in self.keys():
>
>         result.append((key, self[key]))
>
>     return result
>
>
>
> def update(self, d):
>
>     for k in d.keys():
>
>         self[k] = d[k]

From grahamd at dscpl.com.au  Thu Oct 26 06:12:17 2006
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Thu Oct 26 06:13:28 2006
Subject: [mod_python] util.FieldStorage
In-Reply-To: <E4EB1BDA-5608-4DA4-A7D1-72F413565FEF@dscpl.com.au>
References: <A517B25C116F414281788C829739DB3B18F374@stmail.Menai.local>
	<E4EB1BDA-5608-4DA4-A7D1-72F413565FEF@dscpl.com.au>
Message-ID: <4B1BFD68-F872-418C-B1B3-D00C404E6BA1@dscpl.com.au>

Yes, FieldStorage in 3.3 is broken in as much as add_field() if called
after the first time that the 'dictionary' attribute is accessed in  
some way,
does not result in that value ending up in the dictionary. Thus it is  
not
visible to __getitem__(), has_key() etc.

Something else to fix. :-(

Graham

On 26/10/2006, at 7:56 PM, Graham Dumpleton wrote:

> The util.FieldStorage implementation in mod_python 3.3 is quite a bit
> different to what is used in older versions of mod_python and which
> you based your changes upon. Thus your changes are not compatible
> with the new code base.
>
> Some have talked about making the new implementation of the
> FieldStorage class more dictionary like than it is, but no one has
> stepped up to provide any changes.
>
> To be honest I haven't actually looked into how FieldStorage is
> implemented as someone outside of the core developers provided
> the updated code and it was integrated by someone other than
> myself. Looking at the code now, I actually think it might be a bit
> broken. I'll have to do some playing with the code.
>
> BTW, what benefits do you think you get if it is more dictionary like?
> I am not sure I understand the reason for making such changes in
> the first place.
>
> Graham
>
> On 26/10/2006, at 7:14 PM, Brian Bird wrote:
>
>> Is there anything in the works to make util.FieldStorage act more  
>> like a real dictionary? Specifically, it doesn?t support the  
>> __setitem__, __delitem__ methods. Since the documentation states  
>> "it can be treated like a dictionary? I was surprised to find  
>> these methods missing.
>>
>>
>>
>> I know it?s easy to change it to a real dictionary to get these  
>> methods, but then you lose the (very useful) getlist() method. At  
>> first glance it doesn?t look like much work to add the extra  
>> methods (but I haven?t looked at how it may affect values which  
>> aren?t StringField?s).
>>
>>
>>
>> I?ve just looked in the latest subversion and found that the items 
>> () method is now in util.FieldStorage, as well as a method  
>> add_field() which looks suspiciously like __setitem__ should, but  
>> no sign of a __delitem__. However, there now seems to be a  
>> self.dictionary object which could be useful ? perhaps all  
>> unrecognised methods should be passed onto self.dictionary in the  
>> __getattr__ instead of raising an AttributeError?
>>
>>
>>
>> I?ve put below what I thought needed adding to the  
>> util.FieldStorage class before I noticed self.dictionary in case  
>> it?s any help.
>>
>>
>>
>> ### Disclaimer ? completely untested! J ###
>>
>>
>>
>> def __setitem__(self, key, value):
>>
>>     self.list.append(util.Field(key, cStringIO.StringIO(key),  
>> "text/plain", {}, None, {}))
>>
>>
>>
>> def __delitem__(self, key):
>>
>>     for item in self.list:
>>
>>         if item.name == key:
>>
>>             self.list.remove(item)
>>
>>
>>
>> def items(self):
>>
>>     result = []
>>
>>     for key in self.keys():
>>
>>         result.append((key, self[key]))
>>
>>     return result
>>
>>
>>
>> def update(self, d):
>>
>>     for k in d.keys():
>>
>>         self[k] = d[k]
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python


From Brian.Bird at securetrading.com  Thu Oct 26 07:32:46 2006
From: Brian.Bird at securetrading.com (Brian Bird)
Date: Thu Oct 26 07:33:10 2006
Subject: [mod_python] util.FieldStorage
In-Reply-To: <4B1BFD68-F872-418C-B1B3-D00C404E6BA1@dscpl.com.au>
Message-ID: <A517B25C116F414281788C829739DB3B18F3EA@stmail.Menai.local>

The benefit of being more dictionary-like is just convenience. As
util.FieldStorage doesn't have all the dictionary methods then I usually
just convert it to a real dictionary.

However, I'd like to also keep the getfirst and getlist methods, which
would mean writing my own class to inherit from dict and converting
between them. I can't easily inherit util.FieldStorage because all my
code has standalone unittests which can't import _apache

It's not the end of the world if util.FieldStorage isn't updated, but it
would make my life a lot simpler ;-) I may try and have a go at updating
it - is there any documentation on the best way to provide
patches/unittests for ModPython?

Brian


> -----Original Message-----
> From: Graham Dumpleton [mailto:grahamd@dscpl.com.au]
> Sent: 26 October 2006 11:12
> To: Brian Bird
> Cc: mod_python@modpython.org 'mod_python@modpython.org'
> Subject: Re: [mod_python] util.FieldStorage
> 
> Yes, FieldStorage in 3.3 is broken in as much as add_field() if called
> after the first time that the 'dictionary' attribute is accessed in
> some way,
> does not result in that value ending up in the dictionary. Thus it is
> not
> visible to __getitem__(), has_key() etc.
> 
> Something else to fix. :-(
> 
> Graham
> 
> On 26/10/2006, at 7:56 PM, Graham Dumpleton wrote:
> 
> > The util.FieldStorage implementation in mod_python 3.3 is quite a
bit
> > different to what is used in older versions of mod_python and which
> > you based your changes upon. Thus your changes are not compatible
> > with the new code base.
> >
> > Some have talked about making the new implementation of the
> > FieldStorage class more dictionary like than it is, but no one has
> > stepped up to provide any changes.
> >
> > To be honest I haven't actually looked into how FieldStorage is
> > implemented as someone outside of the core developers provided
> > the updated code and it was integrated by someone other than
> > myself. Looking at the code now, I actually think it might be a bit
> > broken. I'll have to do some playing with the code.
> >
> > BTW, what benefits do you think you get if it is more dictionary
like?
> > I am not sure I understand the reason for making such changes in
> > the first place.
> >
> > Graham
> >
> > On 26/10/2006, at 7:14 PM, Brian Bird wrote:
> >
> >> Is there anything in the works to make util.FieldStorage act more
> >> like a real dictionary? Specifically, it doesn't support the
> >> __setitem__, __delitem__ methods. Since the documentation states
> >> "it can be treated like a dictionary" I was surprised to find
> >> these methods missing.
> >>
> >>
> >>
> >> I know it's easy to change it to a real dictionary to get these
> >> methods, but then you lose the (very useful) getlist() method. At
> >> first glance it doesn't look like much work to add the extra
> >> methods (but I haven't looked at how it may affect values which
> >> aren't StringField's).
> >>
> >>
> >>
> >> I've just looked in the latest subversion and found that the items
> >> () method is now in util.FieldStorage, as well as a method
> >> add_field() which looks suspiciously like __setitem__ should, but
> >> no sign of a __delitem__. However, there now seems to be a
> >> self.dictionary object which could be useful - perhaps all
> >> unrecognised methods should be passed onto self.dictionary in the
> >> __getattr__ instead of raising an AttributeError?
> >>
> >>
> >>
> >> I've put below what I thought needed adding to the
> >> util.FieldStorage class before I noticed self.dictionary in case
> >> it's any help.
> >>
> >>
> >>
> >> ### Disclaimer - completely untested! J ###
> >>
> >>
> >>
> >> def __setitem__(self, key, value):
> >>
> >>     self.list.append(util.Field(key, cStringIO.StringIO(key),
> >> "text/plain", {}, None, {}))
> >>
> >>
> >>
> >> def __delitem__(self, key):
> >>
> >>     for item in self.list:
> >>
> >>         if item.name == key:
> >>
> >>             self.list.remove(item)
> >>
> >>
> >>
> >> def items(self):
> >>
> >>     result = []
> >>
> >>     for key in self.keys():
> >>
> >>         result.append((key, self[key]))
> >>
> >>     return result
> >>
> >>
> >>
> >> def update(self, d):
> >>
> >>     for k in d.keys():
> >>
> >>         self[k] = d[k]
> >
> > _______________________________________________
> > Mod_python mailing list
> > Mod_python@modpython.org
> > http://mailman.modpython.org/mailman/listinfo/mod_python


From grahamd at dscpl.com.au  Thu Oct 26 07:48:03 2006
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Thu Oct 26 07:49:23 2006
Subject: [mod_python] util.FieldStorage
In-Reply-To: <A517B25C116F414281788C829739DB3B18F3EA@stmail.Menai.local>
References: <A517B25C116F414281788C829739DB3B18F3EA@stmail.Menai.local>
Message-ID: <16EF0EE6-CA25-418B-8605-D6B36719F323@dscpl.com.au>

Yes, but how dictionary like is the issue that I don't see anyone giving
an answer for. Ie., out  of:

 >>> dir({})
['__class__', '__cmp__', '__contains__', '__delattr__',  
'__delitem__', '__doc__', '__eq__', '__ge__', '__getattribute__',  
'__getitem__', '__gt__', '__hash__', '__init__', '__iter__',  
'__le__', '__len__', '__lt__', '__ne__', '__new__', '__reduce__',  
'__reduce_ex__', '__repr__', '__setattr__', '__setitem__', '__str__',  
'clear', 'copy', 'fromkeys', 'get', 'has_key', 'items', 'iteritems',  
'iterkeys', 'itervalues', 'keys', 'pop', 'popitem', 'setdefault',  
'update', 'values']

what do you expect to be provided and work? Not all of them make
sense. Knowing which you think should work would be helpful.

I'd probably hold off trying to work out any patches yourself. The more
I look at FieldStorage the less I understand why some of the changes
were made. I'm not talking about how a dictionary based index was
added, but more how some of the code was shifted around when it
probably didn't need to, with the result being that the code then became
incompatible with versions of Trac which were out at the time. It would
not have been that hard to maintain compatibility with Trac and still  
get
the desired gains they were after. I can see myself therefore doing a  
bit
or reorganisation of the code to fix the identified issue, but also  
reinstate
Trac compatibility.

Graham

On 26/10/2006, at 9:32 PM, Brian Bird wrote:

> The benefit of being more dictionary-like is just convenience. As
> util.FieldStorage doesn't have all the dictionary methods then I  
> usually
> just convert it to a real dictionary.
>
> However, I'd like to also keep the getfirst and getlist methods, which
> would mean writing my own class to inherit from dict and converting
> between them. I can't easily inherit util.FieldStorage because all my
> code has standalone unittests which can't import _apache
>
> It's not the end of the world if util.FieldStorage isn't updated,  
> but it
> would make my life a lot simpler ;-) I may try and have a go at  
> updating
> it - is there any documentation on the best way to provide
> patches/unittests for ModPython?
>
> Brian
>
>
>> -----Original Message-----
>> From: Graham Dumpleton [mailto:grahamd@dscpl.com.au]
>> Sent: 26 October 2006 11:12
>> To: Brian Bird
>> Cc: mod_python@modpython.org 'mod_python@modpython.org'
>> Subject: Re: [mod_python] util.FieldStorage
>>
>> Yes, FieldStorage in 3.3 is broken in as much as add_field() if  
>> called
>> after the first time that the 'dictionary' attribute is accessed in
>> some way,
>> does not result in that value ending up in the dictionary. Thus it is
>> not
>> visible to __getitem__(), has_key() etc.
>>
>> Something else to fix. :-(
>>
>> Graham
>>
>> On 26/10/2006, at 7:56 PM, Graham Dumpleton wrote:
>>
>>> The util.FieldStorage implementation in mod_python 3.3 is quite a
> bit
>>> different to what is used in older versions of mod_python and which
>>> you based your changes upon. Thus your changes are not compatible
>>> with the new code base.
>>>
>>> Some have talked about making the new implementation of the
>>> FieldStorage class more dictionary like than it is, but no one has
>>> stepped up to provide any changes.
>>>
>>> To be honest I haven't actually looked into how FieldStorage is
>>> implemented as someone outside of the core developers provided
>>> the updated code and it was integrated by someone other than
>>> myself. Looking at the code now, I actually think it might be a bit
>>> broken. I'll have to do some playing with the code.
>>>
>>> BTW, what benefits do you think you get if it is more dictionary
> like?
>>> I am not sure I understand the reason for making such changes in
>>> the first place.
>>>
>>> Graham
>>>
>>> On 26/10/2006, at 7:14 PM, Brian Bird wrote:
>>>
>>>> Is there anything in the works to make util.FieldStorage act more
>>>> like a real dictionary? Specifically, it doesn't support the
>>>> __setitem__, __delitem__ methods. Since the documentation states
>>>> "it can be treated like a dictionary" I was surprised to find
>>>> these methods missing.
>>>>
>>>>
>>>>
>>>> I know it's easy to change it to a real dictionary to get these
>>>> methods, but then you lose the (very useful) getlist() method. At
>>>> first glance it doesn't look like much work to add the extra
>>>> methods (but I haven't looked at how it may affect values which
>>>> aren't StringField's).
>>>>
>>>>
>>>>
>>>> I've just looked in the latest subversion and found that the items
>>>> () method is now in util.FieldStorage, as well as a method
>>>> add_field() which looks suspiciously like __setitem__ should, but
>>>> no sign of a __delitem__. However, there now seems to be a
>>>> self.dictionary object which could be useful - perhaps all
>>>> unrecognised methods should be passed onto self.dictionary in the
>>>> __getattr__ instead of raising an AttributeError?
>>>>
>>>>
>>>>
>>>> I've put below what I thought needed adding to the
>>>> util.FieldStorage class before I noticed self.dictionary in case
>>>> it's any help.
>>>>
>>>>
>>>>
>>>> ### Disclaimer - completely untested! J ###
>>>>
>>>>
>>>>
>>>> def __setitem__(self, key, value):
>>>>
>>>>     self.list.append(util.Field(key, cStringIO.StringIO(key),
>>>> "text/plain", {}, None, {}))
>>>>
>>>>
>>>>
>>>> def __delitem__(self, key):
>>>>
>>>>     for item in self.list:
>>>>
>>>>         if item.name == key:
>>>>
>>>>             self.list.remove(item)
>>>>
>>>>
>>>>
>>>> def items(self):
>>>>
>>>>     result = []
>>>>
>>>>     for key in self.keys():
>>>>
>>>>         result.append((key, self[key]))
>>>>
>>>>     return result
>>>>
>>>>
>>>>
>>>> def update(self, d):
>>>>
>>>>     for k in d.keys():
>>>>
>>>>         self[k] = d[k]
>>>
>>> _______________________________________________
>>> Mod_python mailing list
>>> Mod_python@modpython.org
>>> http://mailman.modpython.org/mailman/listinfo/mod_python
>
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python

From Brian.Bird at securetrading.com  Thu Oct 26 08:14:18 2006
From: Brian.Bird at securetrading.com (Brian Bird)
Date: Thu Oct 26 08:14:29 2006
Subject: [mod_python] util.FieldStorage
In-Reply-To: <16EF0EE6-CA25-418B-8605-D6B36719F323@dscpl.com.au>
Message-ID: <A517B25C116F414281788C829739DB3B18F3F7@stmail.Menai.local>

Hmm, good question. The term "dictionary-like" doesn't actually have a
definitive meaning does it?

In my case, the methods I was expecting to find were:
__getitem__, __setitem__, __delitem__, get, has_key, items, keys,
setdefault, update, values

However, if util.FieldStorage is meant to be "treated like a dictionary"
then I can imagine when someone will expect all the other methods too.

This makes me think that if FieldStorage is going to contain some kind
of internal dictionary to store the actual data, perhaps these other
dict methods should be called directly on it: ie.

def __getattr__(self, attr):
    return getattr(self.dictionary, attr)

or possibly it could be re-written to inherit from dict directly?

If this is going to become a pain though, I'll live with the
inconvenience in my code of swapping between objects when necessary :-)

Brian

> -----Original Message-----
> From: Graham Dumpleton [mailto:grahamd@dscpl.com.au]
> Sent: 26 October 2006 12:48
> To: Brian Bird
> Cc: mod_python@modpython.org
> Subject: Re: [mod_python] util.FieldStorage
> 
> Yes, but how dictionary like is the issue that I don't see anyone
giving
> an answer for. Ie., out  of:
> 
>  >>> dir({})
> ['__class__', '__cmp__', '__contains__', '__delattr__',
> '__delitem__', '__doc__', '__eq__', '__ge__', '__getattribute__',
> '__getitem__', '__gt__', '__hash__', '__init__', '__iter__',
> '__le__', '__len__', '__lt__', '__ne__', '__new__', '__reduce__',
> '__reduce_ex__', '__repr__', '__setattr__', '__setitem__', '__str__',
> 'clear', 'copy', 'fromkeys', 'get', 'has_key', 'items', 'iteritems',
> 'iterkeys', 'itervalues', 'keys', 'pop', 'popitem', 'setdefault',
> 'update', 'values']
> 
> what do you expect to be provided and work? Not all of them make
> sense. Knowing which you think should work would be helpful.
> 
> I'd probably hold off trying to work out any patches yourself. The
more
> I look at FieldStorage the less I understand why some of the changes
> were made. I'm not talking about how a dictionary based index was
> added, but more how some of the code was shifted around when it
> probably didn't need to, with the result being that the code then
became
> incompatible with versions of Trac which were out at the time. It
would
> not have been that hard to maintain compatibility with Trac and still
> get
> the desired gains they were after. I can see myself therefore doing a
> bit
> or reorganisation of the code to fix the identified issue, but also
> reinstate
> Trac compatibility.
> 
> Graham
> 
> On 26/10/2006, at 9:32 PM, Brian Bird wrote:
> 
> > The benefit of being more dictionary-like is just convenience. As
> > util.FieldStorage doesn't have all the dictionary methods then I
> > usually
> > just convert it to a real dictionary.
> >
> > However, I'd like to also keep the getfirst and getlist methods,
which
> > would mean writing my own class to inherit from dict and converting
> > between them. I can't easily inherit util.FieldStorage because all
my
> > code has standalone unittests which can't import _apache
> >
> > It's not the end of the world if util.FieldStorage isn't updated,
> > but it
> > would make my life a lot simpler ;-) I may try and have a go at
> > updating
> > it - is there any documentation on the best way to provide
> > patches/unittests for ModPython?
> >
> > Brian
> >
> >
> >> -----Original Message-----
> >> From: Graham Dumpleton [mailto:grahamd@dscpl.com.au]
> >> Sent: 26 October 2006 11:12
> >> To: Brian Bird
> >> Cc: mod_python@modpython.org 'mod_python@modpython.org'
> >> Subject: Re: [mod_python] util.FieldStorage
> >>
> >> Yes, FieldStorage in 3.3 is broken in as much as add_field() if
> >> called
> >> after the first time that the 'dictionary' attribute is accessed in
> >> some way,
> >> does not result in that value ending up in the dictionary. Thus it
is
> >> not
> >> visible to __getitem__(), has_key() etc.
> >>
> >> Something else to fix. :-(
> >>
> >> Graham
> >>
> >> On 26/10/2006, at 7:56 PM, Graham Dumpleton wrote:
> >>
> >>> The util.FieldStorage implementation in mod_python 3.3 is quite a
> > bit
> >>> different to what is used in older versions of mod_python and
which
> >>> you based your changes upon. Thus your changes are not compatible
> >>> with the new code base.
> >>>
> >>> Some have talked about making the new implementation of the
> >>> FieldStorage class more dictionary like than it is, but no one has
> >>> stepped up to provide any changes.
> >>>
> >>> To be honest I haven't actually looked into how FieldStorage is
> >>> implemented as someone outside of the core developers provided
> >>> the updated code and it was integrated by someone other than
> >>> myself. Looking at the code now, I actually think it might be a
bit
> >>> broken. I'll have to do some playing with the code.
> >>>
> >>> BTW, what benefits do you think you get if it is more dictionary
> > like?
> >>> I am not sure I understand the reason for making such changes in
> >>> the first place.
> >>>
> >>> Graham
> >>>
> >>> On 26/10/2006, at 7:14 PM, Brian Bird wrote:
> >>>
> >>>> Is there anything in the works to make util.FieldStorage act more
> >>>> like a real dictionary? Specifically, it doesn't support the
> >>>> __setitem__, __delitem__ methods. Since the documentation states
> >>>> "it can be treated like a dictionary" I was surprised to find
> >>>> these methods missing.
> >>>>
> >>>>
> >>>>
> >>>> I know it's easy to change it to a real dictionary to get these
> >>>> methods, but then you lose the (very useful) getlist() method. At
> >>>> first glance it doesn't look like much work to add the extra
> >>>> methods (but I haven't looked at how it may affect values which
> >>>> aren't StringField's).
> >>>>
> >>>>
> >>>>
> >>>> I've just looked in the latest subversion and found that the
items
> >>>> () method is now in util.FieldStorage, as well as a method
> >>>> add_field() which looks suspiciously like __setitem__ should, but
> >>>> no sign of a __delitem__. However, there now seems to be a
> >>>> self.dictionary object which could be useful - perhaps all
> >>>> unrecognised methods should be passed onto self.dictionary in the
> >>>> __getattr__ instead of raising an AttributeError?
> >>>>
> >>>>
> >>>>
> >>>> I've put below what I thought needed adding to the
> >>>> util.FieldStorage class before I noticed self.dictionary in case
> >>>> it's any help.
> >>>>
> >>>>
> >>>>
> >>>> ### Disclaimer - completely untested! J ###
> >>>>
> >>>>
> >>>>
> >>>> def __setitem__(self, key, value):
> >>>>
> >>>>     self.list.append(util.Field(key, cStringIO.StringIO(key),
> >>>> "text/plain", {}, None, {}))
> >>>>
> >>>>
> >>>>
> >>>> def __delitem__(self, key):
> >>>>
> >>>>     for item in self.list:
> >>>>
> >>>>         if item.name == key:
> >>>>
> >>>>             self.list.remove(item)
> >>>>
> >>>>
> >>>>
> >>>> def items(self):
> >>>>
> >>>>     result = []
> >>>>
> >>>>     for key in self.keys():
> >>>>
> >>>>         result.append((key, self[key]))
> >>>>
> >>>>     return result
> >>>>
> >>>>
> >>>>
> >>>> def update(self, d):
> >>>>
> >>>>     for k in d.keys():
> >>>>
> >>>>         self[k] = d[k]
> >>>
> >>> _______________________________________________
> >>> Mod_python mailing list
> >>> Mod_python@modpython.org
> >>> http://mailman.modpython.org/mailman/listinfo/mod_python
> >
> >
> > _______________________________________________
> > Mod_python mailing list
> > Mod_python@modpython.org
> > http://mailman.modpython.org/mailman/listinfo/mod_python


From nlv11281 at natlab.research.philips.com  Thu Oct 26 08:38:54 2006
From: nlv11281 at natlab.research.philips.com (Mike Looijmans)
Date: Thu Oct 26 08:39:17 2006
Subject: [mod_python] util.FieldStorage
In-Reply-To: <16EF0EE6-CA25-418B-8605-D6B36719F323@dscpl.com.au>
References: <A517B25C116F414281788C829739DB3B18F3EA@stmail.Menai.local>
	<16EF0EE6-CA25-418B-8605-D6B36719F323@dscpl.com.au>
Message-ID: <4540AC5E.2010101@natlab.research.philips.com>

Being the one who moved all that code around, I'm probably the one to 
explain why.

In the original version, there was a 'bad' way of detecting whether 
objects were files or not. If one used the callback mechanism, and 
provided a file-like object, this object would not be recognised as a 
file by that code, and that either resulted in the whole file being read 
into memory as a string or in some obscure exception being thrown.


Mike Looijmans
Philips Natlab / Topic Automation


Graham Dumpleton wrote:
> I'd probably hold off trying to work out any patches yourself. The more
> I look at FieldStorage the less I understand why some of the changes
> were made. I'm not talking about how a dictionary based index was
> added, but more how some of the code was shifted around when it
> probably didn't need to, with the result being that the code then became
> incompatible with versions of Trac which were out at the time. It would
> not have been that hard to maintain compatibility with Trac and still  get
> the desired gains they were after. I can see myself therefore doing a  bit
> or reorganisation of the code to fix the identified issue, but also  
> reinstate
> Trac compatibility.

From jpg at jgassociates.ca  Thu Oct 26 09:13:35 2006
From: jpg at jgassociates.ca (Jim Gallacher)
Date: Thu Oct 26 09:13:17 2006
Subject: [mod_python] util.FieldStorage
In-Reply-To: <A517B25C116F414281788C829739DB3B18F3EA@stmail.Menai.local>
References: <A517B25C116F414281788C829739DB3B18F3EA@stmail.Menai.local>
Message-ID: <4540B47F.7000108@jgassociates.ca>

Brian Bird wrote:
> is there any documentation on the best way to provide
> patches/unittests for ModPython?

Work with the development trunk.
svn co https://svn.apache.org/repos/asf/httpd/mod_python/trunk

Create diffs with subversion:
svn diff src/whatever.c > <patch-name>.diff

We try and use a naming convention for the patch consisting of 
JIRA-ISSUE_ISO-DATE_yourname_x.diff, but you won't be spanked if you 
don't do this. ;)

eg. MP93_20061026_bbird_1.diff

Create a new JIRA issue if it's something new.

Attach your patch to the appropriate JIRA issue. *Don't* send your patch 
as an attachment to either of the mailing lists. It's just to easy to 
loose track of things that way. JIRA is our friend.

Subscribe to the developers mailing list and join in the discussion, or 
if there is no discussion - start one. :) If your patch is to fix some 
simple bug it's probably not necessary to join the dev mailing list.

It's still without a permanent home (mod_python wiki perhaps?), but you 
may want to take a look at this:
http://people.apache.org/~jgallacher/mod_python/website-test/developers.html

Jim
From hippos at chello.nl  Thu Oct 26 15:42:18 2006
From: hippos at chello.nl (Larry Myerscough)
Date: Thu Oct 26 15:42:25 2006
Subject: [mod_python] myghty.session with Python2.2
Message-ID: <45410F9A.6080101@chello.nl>

I recently discovered that my host website (which I access as 
larry.myerscough.nl) has mod_python configured to use python2.2. This is 
strange since python2.4 is also installed, but I'm trying to live with 
this until I can get it sorted out. This site uses Apache 1.3 =- which 
I'm also trying to live with.

In my local try-out of the site (which is Apache 2.0 Python2.4) I make a 
lot of use of Session objects.

Following the advice from a FAQ at modpython.org, I'm trying to use the 
session module from myghty on the real site. I get an import error on 
'datetime' which I thus presume doesn't exist in Python2.2.

So I think I either need a datetime module in the form of a datetime.py 
file or perhaps some other Python2.2-compatible stand-in for the session 
module.

Any advice?

(If I'm flogging a dead horse here and really should try to get the site 
configuration straightened out before proceeding furhter, don't hesitate 
to say so!)

Larry Myerscough
('papa hippo')


From grahamd at dscpl.com.au  Thu Oct 26 19:08:13 2006
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Thu Oct 26 19:08:16 2006
Subject: [mod_python] util.FieldStorage
Message-ID: <1161904093.14546@dscpl.user.openhosting.com>

Brian Bird wrote ..
> Hmm, good question. The term "dictionary-like" doesn't actually have a
> definitive meaning does it?
> 
> In my case, the methods I was expecting to find were:
> __getitem__, __setitem__, __delitem__, get, has_key, items, keys,
> setdefault, update, values

The issue with __setitem__() is whether it should be additive or whether it
should replace. The current add_field() member in 3.3 is additive. That is, if
a value for that key is already there, it adds an extra value against the key
rather than replacing any existing value. In Trac < 0.10.0 from memory they
provided their own __setitem__() in a derived version of the class which
effectively did what add_field() did, ie., it was additive, which isn't what
many would expect of a dictionary. For __delitem__() only choice is too
delete all values associated with a key, not way to delete one value although
one has to question why you might anyway. For setdefault(), second argument
to get() achieves same outcome.

The main question then is how would people expect __setitem__() to
behave?

Graham

> However, if util.FieldStorage is meant to be "treated like a dictionary"
> then I can imagine when someone will expect all the other methods too.
> 
> This makes me think that if FieldStorage is going to contain some kind
> of internal dictionary to store the actual data, perhaps these other
> dict methods should be called directly on it: ie.
> 
> def __getattr__(self, attr):
>     return getattr(self.dictionary, attr)
> 
> or possibly it could be re-written to inherit from dict directly?
> 
> If this is going to become a pain though, I'll live with the
> inconvenience in my code of swapping between objects when necessary :-)
> 
> Brian
> 
> > -----Original Message-----
> > From: Graham Dumpleton [mailto:grahamd@dscpl.com.au]
> > Sent: 26 October 2006 12:48
> > To: Brian Bird
> > Cc: mod_python@modpython.org
> > Subject: Re: [mod_python] util.FieldStorage
> > 
> > Yes, but how dictionary like is the issue that I don't see anyone
> giving
> > an answer for. Ie., out  of:
> > 
> >  >>> dir({})
> > ['__class__', '__cmp__', '__contains__', '__delattr__',
> > '__delitem__', '__doc__', '__eq__', '__ge__', '__getattribute__',
> > '__getitem__', '__gt__', '__hash__', '__init__', '__iter__',
> > '__le__', '__len__', '__lt__', '__ne__', '__new__', '__reduce__',
> > '__reduce_ex__', '__repr__', '__setattr__', '__setitem__', '__str__',
> > 'clear', 'copy', 'fromkeys', 'get', 'has_key', 'items', 'iteritems',
> > 'iterkeys', 'itervalues', 'keys', 'pop', 'popitem', 'setdefault',
> > 'update', 'values']
> > 
> > what do you expect to be provided and work? Not all of them make
> > sense. Knowing which you think should work would be helpful.
> > 
> > I'd probably hold off trying to work out any patches yourself. The
> more
> > I look at FieldStorage the less I understand why some of the changes
> > were made. I'm not talking about how a dictionary based index was
> > added, but more how some of the code was shifted around when it
> > probably didn't need to, with the result being that the code then
> became
> > incompatible with versions of Trac which were out at the time. It
> would
> > not have been that hard to maintain compatibility with Trac and still
> > get
> > the desired gains they were after. I can see myself therefore doing a
> > bit
> > or reorganisation of the code to fix the identified issue, but also
> > reinstate
> > Trac compatibility.
> > 
> > Graham
> > 
> > On 26/10/2006, at 9:32 PM, Brian Bird wrote:
> > 
> > > The benefit of being more dictionary-like is just convenience. As
> > > util.FieldStorage doesn't have all the dictionary methods then I
> > > usually
> > > just convert it to a real dictionary.
> > >
> > > However, I'd like to also keep the getfirst and getlist methods,
> which
> > > would mean writing my own class to inherit from dict and converting
> > > between them. I can't easily inherit util.FieldStorage because all
> my
> > > code has standalone unittests which can't import _apache
> > >
> > > It's not the end of the world if util.FieldStorage isn't updated,
> > > but it
> > > would make my life a lot simpler ;-) I may try and have a go at
> > > updating
> > > it - is there any documentation on the best way to provide
> > > patches/unittests for ModPython?
> > >
> > > Brian
> > >
> > >
> > >> -----Original Message-----
> > >> From: Graham Dumpleton [mailto:grahamd@dscpl.com.au]
> > >> Sent: 26 October 2006 11:12
> > >> To: Brian Bird
> > >> Cc: mod_python@modpython.org 'mod_python@modpython.org'
> > >> Subject: Re: [mod_python] util.FieldStorage
> > >>
> > >> Yes, FieldStorage in 3.3 is broken in as much as add_field() if
> > >> called
> > >> after the first time that the 'dictionary' attribute is accessed in
> > >> some way,
> > >> does not result in that value ending up in the dictionary. Thus it
> is
> > >> not
> > >> visible to __getitem__(), has_key() etc.
> > >>
> > >> Something else to fix. :-(
> > >>
> > >> Graham
> > >>
> > >> On 26/10/2006, at 7:56 PM, Graham Dumpleton wrote:
> > >>
> > >>> The util.FieldStorage implementation in mod_python 3.3 is quite a
> > > bit
> > >>> different to what is used in older versions of mod_python and
> which
> > >>> you based your changes upon. Thus your changes are not compatible
> > >>> with the new code base.
> > >>>
> > >>> Some have talked about making the new implementation of the
> > >>> FieldStorage class more dictionary like than it is, but no one has
> > >>> stepped up to provide any changes.
> > >>>
> > >>> To be honest I haven't actually looked into how FieldStorage is
> > >>> implemented as someone outside of the core developers provided
> > >>> the updated code and it was integrated by someone other than
> > >>> myself. Looking at the code now, I actually think it might be a
> bit
> > >>> broken. I'll have to do some playing with the code.
> > >>>
> > >>> BTW, what benefits do you think you get if it is more dictionary
> > > like?
> > >>> I am not sure I understand the reason for making such changes in
> > >>> the first place.
> > >>>
> > >>> Graham
> > >>>
> > >>> On 26/10/2006, at 7:14 PM, Brian Bird wrote:
> > >>>
> > >>>> Is there anything in the works to make util.FieldStorage act more
> > >>>> like a real dictionary? Specifically, it doesn't support the
> > >>>> __setitem__, __delitem__ methods. Since the documentation states
> > >>>> "it can be treated like a dictionary" I was surprised to find
> > >>>> these methods missing.
> > >>>>
> > >>>>
> > >>>>
> > >>>> I know it's easy to change it to a real dictionary to get these
> > >>>> methods, but then you lose the (very useful) getlist() method. At
> > >>>> first glance it doesn't look like much work to add the extra
> > >>>> methods (but I haven't looked at how it may affect values which
> > >>>> aren't StringField's).
> > >>>>
> > >>>>
> > >>>>
> > >>>> I've just looked in the latest subversion and found that the
> items
> > >>>> () method is now in util.FieldStorage, as well as a method
> > >>>> add_field() which looks suspiciously like __setitem__ should, but
> > >>>> no sign of a __delitem__. However, there now seems to be a
> > >>>> self.dictionary object which could be useful - perhaps all
> > >>>> unrecognised methods should be passed onto self.dictionary in the
> > >>>> __getattr__ instead of raising an AttributeError?
> > >>>>
> > >>>>
> > >>>>
> > >>>> I've put below what I thought needed adding to the
> > >>>> util.FieldStorage class before I noticed self.dictionary in case
> > >>>> it's any help.
> > >>>>
> > >>>>
> > >>>>
> > >>>> ### Disclaimer - completely untested! J ###
> > >>>>
> > >>>>
> > >>>>
> > >>>> def __setitem__(self, key, value):
> > >>>>
> > >>>>     self.list.append(util.Field(key, cStringIO.StringIO(key),
> > >>>> "text/plain", {}, None, {}))
> > >>>>
> > >>>>
> > >>>>
> > >>>> def __delitem__(self, key):
> > >>>>
> > >>>>     for item in self.list:
> > >>>>
> > >>>>         if item.name == key:
> > >>>>
> > >>>>             self.list.remove(item)
> > >>>>
> > >>>>
> > >>>>
> > >>>> def items(self):
> > >>>>
> > >>>>     result = []
> > >>>>
> > >>>>     for key in self.keys():
> > >>>>
> > >>>>         result.append((key, self[key]))
> > >>>>
> > >>>>     return result
> > >>>>
> > >>>>
> > >>>>
> > >>>> def update(self, d):
> > >>>>
> > >>>>     for k in d.keys():
> > >>>>
> > >>>>         self[k] = d[k]
> > >>>
> > >>> _______________________________________________
> > >>> Mod_python mailing list
> > >>> Mod_python@modpython.org
> > >>> http://mailman.modpython.org/mailman/listinfo/mod_python
> > >
> > >
> > > _______________________________________________
> > > Mod_python mailing list
> > > Mod_python@modpython.org
> > > http://mailman.modpython.org/mailman/listinfo/mod_python
From grahamd at dscpl.com.au  Thu Oct 26 20:45:31 2006
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Thu Oct 26 20:45:33 2006
Subject: [mod_python] util.FieldStorage
Message-ID: <1161909931.3191@dscpl.user.openhosting.com>

Mike Looijmans wrote ..
> Being the one who moved all that code around, I'm probably the one to 
> explain why.
> 
> In the original version, there was a 'bad' way of detecting whether 
> objects were files or not. If one used the callback mechanism, and 
> provided a file-like object, this object would not be recognised as a 
> file by that code, and that either resulted in the whole file being read
> into memory as a string or in some obscure exception being thrown.

Okay, so more than just performance issues with field access.

Anyway, I have committed some changes into repository now which
fixes the issue with add_field() but also does things in such a way that
code such as Trac which creates Field instances direct and adds them
to the the list of form fields will still work. It does this by using a
derived list class instance which invalidates the key lookup table on
changes to the list so that the lookup table is rebuilt the next time
it is required. Doing this wasn't as bad as I first thought it would be
as hadn't gone to the extent of properly understanding the code before.
Also include a semi hack in Field class constructor to detect old style
use where code expects more than just the name of the field as
argument and do appropriate initialisation as appropriate.

I'd add a comment to JIRA, but it seems to be playing up at the moment
or at least firewall where I work is screwing up as it tends to do a bit
when JIRA is accessed using https from here.

In all, what the changes allow is for the following to work:

from mod_python import util
from StringIO import StringIO

def index(req):
  req.content_type = 'text/plain'

  req.write('%s\n\n' % req.form.keys())

  for key in req.form.keys():
    req.write('%s %s\n' % (key, req.form.getlist(key)))

  req.write('\n')

  req.form.add_field('e', 'f')

  req.form.list.append(util.Field('g', StringIO('h'),
      "text/plain", {}, None, {}))
  req.form.list.extend([util.Field('i', StringIO('j'),
      "text/plain", {}, None, {})])
  req.form.list += [util.Field('k', StringIO('l'),
      "text/plain", {}, None, {})]

  req.write('%s\n\n' % req.form.keys())

  for key in req.form.keys():
    req.write('%s %s\n' % (key, req.form.getlist(key)))

  req.write('\n')

  return None

If this is accessed with:

  http://localhost:8002/~grahamd/form/?a=b&c=d&e=f

I get:

['a', 'c', 'e']

a [Field('a', 'b')]
c [Field('c', 'd')]
e [Field('e', 'f')]

['a', 'c', 'e', 'g', 'i', 'k']

a [Field('a', 'b')]
c [Field('c', 'd')]
e [Field('e', 'f'), Field('e', 'f')]
g [Field('g', 'h')]
i [Field('i', 'j')]
k [Field('k', 'l')]

As the req.form.keys() method works off the lookup table, you can see
how updates direct to list work okay, meaning stuff like Trac should
work.

You will also note that the 'dictionary' attribute has gone and is hidden
elsewhere. Hopefully people will not try and directly access the
equivalent, but some stern notes in the documentation saying only
to use documented interface might help. :-)

If you can test the updates and especially if someone can test it with
older versions of Trac that would be great.

Graham

> Graham Dumpleton wrote:
> > I'd probably hold off trying to work out any patches yourself. The more
> > I look at FieldStorage the less I understand why some of the changes
> > were made. I'm not talking about how a dictionary based index was
> > added, but more how some of the code was shifted around when it
> > probably didn't need to, with the result being that the code then became
> > incompatible with versions of Trac which were out at the time. It would
> > not have been that hard to maintain compatibility with Trac and still
> get
> > the desired gains they were after. I can see myself therefore doing a
> bit
> > or reorganisation of the code to fix the identified issue, but also 
> > reinstate
> > Trac compatibility.
From nlv11281 at natlab.research.philips.com  Fri Oct 27 01:52:21 2006
From: nlv11281 at natlab.research.philips.com (Mike Looijmans)
Date: Fri Oct 27 01:52:32 2006
Subject: [SPAM] [Fwd: Re: [mod_python] util.FieldStorage]
Message-ID: <45419E95.7070509@natlab.research.philips.com>

I for one like the changes - it's much cleaner this way. There's only
one list to deal with now, and that list handles all access..

Just one minor optimization, in __len__ i think you can replace:
         return len(self.list.table().keys())
with
         return len(self.list.table())
since that prevents the keylist from being generated.

We might solve all the "dictionary" questions if we provide a
"getdict()" method (which would return a copy of list.table()). Another,
idea is, could we support the following:

form = FieldStorage(...)
myfrm = {}
myfrm.update(form)

This would give those who really want that dictionary a real dictionary
to work with, if they don't need the fancy FieldStorage features.


Mike Looijmans
Philips Natlab / Topic Automation


Graham Dumpleton wrote:
> Mike Looijmans wrote ..
> 
>>Being the one who moved all that code around, I'm probably the one to 
>>explain why.
>>
>>In the original version, there was a 'bad' way of detecting whether 
>>objects were files or not. If one used the callback mechanism, and 
>>provided a file-like object, this object would not be recognised as a 
>>file by that code, and that either resulted in the whole file being read
>>into memory as a string or in some obscure exception being thrown.
> 
> 
> Okay, so more than just performance issues with field access.
> 
> Anyway, I have committed some changes into repository now which
> fixes the issue with add_field() but also does things in such a way that
> code such as Trac which creates Field instances direct and adds them
> to the the list of form fields will still work. It does this by using a
> derived list class instance which invalidates the key lookup table on
> changes to the list so that the lookup table is rebuilt the next time
> it is required. Doing this wasn't as bad as I first thought it would be
> as hadn't gone to the extent of properly understanding the code before.
> Also include a semi hack in Field class constructor to detect old style
> use where code expects more than just the name of the field as
> argument and do appropriate initialisation as appropriate.
> 
> I'd add a comment to JIRA, but it seems to be playing up at the moment
> or at least firewall where I work is screwing up as it tends to do a bit
> when JIRA is accessed using https from here.
> 
> In all, what the changes allow is for the following to work:
> 
> from mod_python import util
> from StringIO import StringIO
> 
> def index(req):
>   req.content_type = 'text/plain'
> 
>   req.write('%s\n\n' % req.form.keys())
> 
>   for key in req.form.keys():
>     req.write('%s %s\n' % (key, req.form.getlist(key)))
> 
>   req.write('\n')
> 
>   req.form.add_field('e', 'f')
> 
>   req.form.list.append(util.Field('g', StringIO('h'),
>       "text/plain", {}, None, {}))
>   req.form.list.extend([util.Field('i', StringIO('j'),
>       "text/plain", {}, None, {})])
>   req.form.list += [util.Field('k', StringIO('l'),
>       "text/plain", {}, None, {})]
> 
>   req.write('%s\n\n' % req.form.keys())
> 
>   for key in req.form.keys():
>     req.write('%s %s\n' % (key, req.form.getlist(key)))
> 
>   req.write('\n')
> 
>   return None
> 
> If this is accessed with:
> 
>   http://localhost:8002/~grahamd/form/?a=b&c=d&e=f
> 
> I get:
> 
> ['a', 'c', 'e']
> 
> a [Field('a', 'b')]
> c [Field('c', 'd')]
> e [Field('e', 'f')]
> 
> ['a', 'c', 'e', 'g', 'i', 'k']
> 
> a [Field('a', 'b')]
> c [Field('c', 'd')]
> e [Field('e', 'f'), Field('e', 'f')]
> g [Field('g', 'h')]
> i [Field('i', 'j')]
> k [Field('k', 'l')]
> 
> As the req.form.keys() method works off the lookup table, you can see
> how updates direct to list work okay, meaning stuff like Trac should
> work.
> 
> You will also note that the 'dictionary' attribute has gone and is hidden
> elsewhere. Hopefully people will not try and directly access the
> equivalent, but some stern notes in the documentation saying only
> to use documented interface might help. :-)
> 
> If you can test the updates and especially if someone can test it with
> older versions of Trac that would be great.
> 
> Graham
> 
> 
>>Graham Dumpleton wrote:
>>
>>>I'd probably hold off trying to work out any patches yourself. The more
>>>I look at FieldStorage the less I understand why some of the changes
>>>were made. I'm not talking about how a dictionary based index was
>>>added, but more how some of the code was shifted around when it
>>>probably didn't need to, with the result being that the code then became
>>>incompatible with versions of Trac which were out at the time. It would
>>>not have been that hard to maintain compatibility with Trac and still
>>
>>get
>>
>>>the desired gains they were after. I can see myself therefore doing a
>>
>>bit
>>
>>>or reorganisation of the code to fix the identified issue, but also 
>>>reinstate
>>>Trac compatibility.
> 
> 


-- 
Mike Looijmans
Philips Natlab / Topic Automation

From grahamd at dscpl.com.au  Fri Oct 27 02:42:38 2006
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Fri Oct 27 02:42:40 2006
Subject: [mod_python] util.FieldStorage
Message-ID: <1161931358.28947@dscpl.user.openhosting.com>

Mike Looijmans wrote ..
> I for one like the changes - it's much cleaner this way. There's only
> one list to deal with now, and that list handles all access..
> 
> Just one minor optimization, in __len__ i think you can replace:
>          return len(self.list.table().keys())
> with
>          return len(self.list.table())
> since that prevents the keylist from being generated.

Done.

> We might solve all the "dictionary" questions if we provide a
> "getdict()" method (which would return a copy of list.table()).

I am wary about making access to the dictionary part of any public API
as then we end up in the same sort of situation we have with list where
people modify it directly and then perhaps wander why there changes
are being reflected in the list. Better to hide the dictionary and mediate
all access for a public API we define in FieldStorage.

> Another,
> idea is, could we support the following:
> 
> form = FieldStorage(...)
> myfrm = {}
> myfrm.update(form)

That works now. possibly because of the items() method.

> This would give those who really want that dictionary a real dictionary
> to work with, if they don't need the fancy FieldStorage features.

The code provides the basic dictionary type operations already.
As brought up in prior email about expected behaviour, we could
sensibly provide __delitem__, but what __setitem__ does is a bit
open for question. Trac already sets some precedent by saying it is
additive which isn't dictionary like at all. But then __getitem__
doesn't work like a normal dictionary either. Thus, question is
what the consensus is about what __setitem__should do.

Graham

> Mike Looijmans
> Philips Natlab / Topic Automation
> 
> 
> Graham Dumpleton wrote:
> > Mike Looijmans wrote ..
> > 
> >>Being the one who moved all that code around, I'm probably the one to
> >>explain why.
> >>
> >>In the original version, there was a 'bad' way of detecting whether 
> >>objects were files or not. If one used the callback mechanism, and 
> >>provided a file-like object, this object would not be recognised as a
> >>file by that code, and that either resulted in the whole file being read
> >>into memory as a string or in some obscure exception being thrown.
> > 
> > 
> > Okay, so more than just performance issues with field access.
> > 
> > Anyway, I have committed some changes into repository now which
> > fixes the issue with add_field() but also does things in such a way that
> > code such as Trac which creates Field instances direct and adds them
> > to the the list of form fields will still work. It does this by using
> a
> > derived list class instance which invalidates the key lookup table on
> > changes to the list so that the lookup table is rebuilt the next time
> > it is required. Doing this wasn't as bad as I first thought it would
> be
> > as hadn't gone to the extent of properly understanding the code before.
> > Also include a semi hack in Field class constructor to detect old style
> > use where code expects more than just the name of the field as
> > argument and do appropriate initialisation as appropriate.
> > 
> > I'd add a comment to JIRA, but it seems to be playing up at the moment
> > or at least firewall where I work is screwing up as it tends to do a
> bit
> > when JIRA is accessed using https from here.
> > 
> > In all, what the changes allow is for the following to work:
> > 
> > from mod_python import util
> > from StringIO import StringIO
> > 
> > def index(req):
> >   req.content_type = 'text/plain'
> > 
> >   req.write('%s\n\n' % req.form.keys())
> > 
> >   for key in req.form.keys():
> >     req.write('%s %s\n' % (key, req.form.getlist(key)))
> > 
> >   req.write('\n')
> > 
> >   req.form.add_field('e', 'f')
> > 
> >   req.form.list.append(util.Field('g', StringIO('h'),
> >       "text/plain", {}, None, {}))
> >   req.form.list.extend([util.Field('i', StringIO('j'),
> >       "text/plain", {}, None, {})])
> >   req.form.list += [util.Field('k', StringIO('l'),
> >       "text/plain", {}, None, {})]
> > 
> >   req.write('%s\n\n' % req.form.keys())
> > 
> >   for key in req.form.keys():
> >     req.write('%s %s\n' % (key, req.form.getlist(key)))
> > 
> >   req.write('\n')
> > 
> >   return None
> > 
> > If this is accessed with:
> > 
> >   http://localhost:8002/~grahamd/form/?a=b&c=d&e=f
> > 
> > I get:
> > 
> > ['a', 'c', 'e']
> > 
> > a [Field('a', 'b')]
> > c [Field('c', 'd')]
> > e [Field('e', 'f')]
> > 
> > ['a', 'c', 'e', 'g', 'i', 'k']
> > 
> > a [Field('a', 'b')]
> > c [Field('c', 'd')]
> > e [Field('e', 'f'), Field('e', 'f')]
> > g [Field('g', 'h')]
> > i [Field('i', 'j')]
> > k [Field('k', 'l')]
> > 
> > As the req.form.keys() method works off the lookup table, you can see
> > how updates direct to list work okay, meaning stuff like Trac should
> > work.
> > 
> > You will also note that the 'dictionary' attribute has gone and is hidden
> > elsewhere. Hopefully people will not try and directly access the
> > equivalent, but some stern notes in the documentation saying only
> > to use documented interface might help. :-)
> > 
> > If you can test the updates and especially if someone can test it with
> > older versions of Trac that would be great.
> > 
> > Graham
> > 
> > 
> >>Graham Dumpleton wrote:
> >>
> >>>I'd probably hold off trying to work out any patches yourself. The more
> >>>I look at FieldStorage the less I understand why some of the changes
> >>>were made. I'm not talking about how a dictionary based index was
> >>>added, but more how some of the code was shifted around when it
> >>>probably didn't need to, with the result being that the code then became
> >>>incompatible with versions of Trac which were out at the time. It would
> >>>not have been that hard to maintain compatibility with Trac and still
> >>
> >>get
> >>
> >>>the desired gains they were after. I can see myself therefore doing
> a
> >>
> >>bit
> >>
> >>>or reorganisation of the code to fix the identified issue, but also
> >>>reinstate
> >>>Trac compatibility.
> > 
> > 
> 
> 
> -- 
> Mike Looijmans
> Philips Natlab / Topic Automation
> 
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
From grahamd at dscpl.com.au  Fri Oct 27 02:57:11 2006
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Fri Oct 27 02:57:13 2006
Subject: [mod_python] util.FieldStorage
Message-ID: <1161932231.4009@dscpl.user.openhosting.com>

Graham Dumpleton wrote ..
> > We might solve all the "dictionary" questions if we provide a
> > "getdict()" method (which would return a copy of list.table()).
> 
> I am wary about making access to the dictionary part of any public API
> as then we end up in the same sort of situation we have with list where
> people modify it directly and then perhaps wander why there changes
> are being reflected in the list. Better to hide the dictionary and mediate

Whoops, 'why their changes AREN'T being reflected in the list'.

> all access for a public API we define in FieldStorage.

Graham
From Brian.Bird at securetrading.com  Fri Oct 27 04:12:08 2006
From: Brian.Bird at securetrading.com (Brian Bird)
Date: Fri Oct 27 04:12:13 2006
Subject: [mod_python] util.FieldStorage
In-Reply-To: <1161904093.14546@dscpl.user.openhosting.com>
Message-ID: <A517B25C116F414281788C829739DB3B18F4DB@stmail.Menai.local>

Well, in my case, the keys I want to set on the FieldStorage are
guaranteed not to already exist, so either way would be fine. However,
reading your email, FWIW it seems to make sense to me to be additive.

Perhaps if the documentation on util.FieldStorage is updated to reflect
this it would be fine. The only reason this 'problem' came about for me
was because I read the docs saying it works like a dictionary (except
for a few extra methods) and didn't stop to consider your points.

Similarly in my case I know the key I want to delete will only contain
one value, but I would probably expect it to delete all values
associated with a key if there was more than one.

Brian

> The issue with __setitem__() is whether it should be additive or
whether
> it
> should replace. The current add_field() member in 3.3 is additive.
That
> is, if
> a value for that key is already there, it adds an extra value against
the
> key
> rather than replacing any existing value. In Trac < 0.10.0 from memory
> they
> provided their own __setitem__() in a derived version of the class
which
> effectively did what add_field() did, ie., it was additive, which
isn't
> what
> many would expect of a dictionary. For __delitem__() only choice is
too
> delete all values associated with a key, not way to delete one value
> although
> one has to question why you might anyway. For setdefault(), second
> argument
> to get() achieves same outcome.
> 
> The main question then is how would people expect __setitem__() to
> behave?

From grahamd at dscpl.com.au  Fri Oct 27 04:19:38 2006
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Fri Oct 27 04:19:49 2006
Subject: [mod_python] myghty.session with Python2.2
In-Reply-To: <45410F9A.6080101@chello.nl>
References: <45410F9A.6080101@chello.nl>
Message-ID: <0BA3BCF5-F281-43BE-8C5A-55EBBBBC67C8@dscpl.com.au>

Consider looking at:

   http://www.boddie.org.uk/python/WebStack.html

I don't know if it supports Python 2.2 though.

On 27/10/2006, at 5:42 AM, Larry Myerscough wrote:

> I recently discovered that my host website (which I access as  
> larry.myerscough.nl) has mod_python configured to use python2.2.  
> This is strange since python2.4 is also installed, but I'm trying  
> to live with this until I can get it sorted out. This site uses  
> Apache 1.3 =- which I'm also trying to live with.
>
> In my local try-out of the site (which is Apache 2.0 Python2.4) I  
> make a lot of use of Session objects.
>
> Following the advice from a FAQ at modpython.org, I'm trying to use  
> the session module from myghty on the real site. I get an import  
> error on 'datetime' which I thus presume doesn't exist in Python2.2.
>
> So I think I either need a datetime module in the form of a  
> datetime.py file or perhaps some other Python2.2-compatible stand- 
> in for the session module.
>
> Any advice?
>
> (If I'm flogging a dead horse here and really should try to get the  
> site configuration straightened out before proceeding furhter,  
> don't hesitate to say so!)
>
> Larry Myerscough
> ('papa hippo')
>
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
From durumdara at gmail.com  Fri Oct 27 05:27:23 2006
From: durumdara at gmail.com (durumdara)
Date: Fri Oct 27 05:27:30 2006
Subject: [mod_python] [Off] Can I set some properties from CSS ?
Message-ID: <4541D0FB.1050604@gmail.com>

Hi !

Sorry for OFF, but I working in a form handler tool, and I need some 
informations.
So: I want to make style - independent code in the form handler.
If possible, I want to move all of the styles to a css file.

But I don't know it is possible or not.

Example:
TEXTAREA ROWS property (how many lines I want to see)
SELECT SIZE property (how many items I want to see)

The problem that these properties are unique things.
Not all input type needed them.
When I fixed them into code, I lost the independecy of css.

Thanks for your help:
dd


From habnabit at gmail.com  Fri Oct 27 10:36:22 2006
From: habnabit at gmail.com (Aaron Gallagher)
Date: Fri Oct 27 10:36:59 2006
Subject: [mod_python] [Off] Can I set some properties from CSS ?
In-Reply-To: <4541D0FB.1050604@gmail.com>
References: <4541D0FB.1050604@gmail.com>
Message-ID: <80824FFC-D505-4172-88DC-D77904DA1752@gmail.com>

You should look here:
http://www.w3.org/TR/CSS21/

On Oct 27, 2006, at 2:27 AM, durumdara wrote:

> Hi !
>
> Sorry for OFF, but I working in a form handler tool, and I need  
> some informations.
> So: I want to make style - independent code in the form handler.
> If possible, I want to move all of the styles to a css file.
>
> But I don't know it is possible or not.
>
> Example:
> TEXTAREA ROWS property (how many lines I want to see)
> SELECT SIZE property (how many items I want to see)
>
> The problem that these properties are unique things.
> Not all input type needed them.
> When I fixed them into code, I lost the independecy of css.
>
> Thanks for your help:

Aaron Gallagher
<habnabit@gmail.com>


From mod_python at turias.net  Fri Oct 27 17:44:40 2006
From: mod_python at turias.net (Sebastian Celis)
Date: Fri Oct 27 17:44:46 2006
Subject: [mod_python] Building a web application using Cheetah and mod_python
Message-ID: <93f7db120610271444q73ab89ecuf1e019c41c0d290@mail.gmail.com>

Hello,

I am new to this list and have just recently begun to work on a
project where I wish to use mod_python.publisher and cheetah to drive
an entire web application.  I apologize if the following topics have
been discussed to death recently, but I have read through the
documentation on both sites and have searched through the mailing-list
archives and while I have seen similar discussions, I have yet to find
definitive answers.  I am able to get most things to work, however I
can't help but feel that there are better ways of approaching some of
my situations.

First, I'll quickly describe my directory structure:

/var/www/app -- The base directory to the web application.  This will
directly contain most of the python files that correspond directly to
URLs.  For example, index.py, login.py, etc.  In this directory.
/var/www/app/templates -- Contains all of my cheetah templates.
/var/www/app/include -- Contains the python utility modules I am
writing specifically for this application.

Now, onto the questions.


1) Importing compiled cheetah templates

Assume I have code like the following in /var/www/app/test1.py

######################################
from mod_python import apache
from Cheetah.Template import Template

def index(req):
    req.content_type = "text/html"

    dict = {'title': 'My Title!', 'message': 'Hello world!'}
    templateModule = apache.import_module("templates/myTemplate")
    t = getattr(templateModule, "myTemplate")()
    searchList = t.searchList()
    searchList.insert(0, dict)

    return(t.respond())
######################################

Is this the best way to import template modules and then evaluate them?


2) Modifying PythonPath prevents modules from being imported

Inside file /var/www/app/test2.py, I have the following code:

import config
(or)
config = apache.import_module("config")

Both of these commands load /var/www/app/config.py, and seem to work
fine.  However, if I add

PythonPath "['/var/www/app/templates']+sys.path"

to my apache configuration, I get an error next time I run test2.py.

###
Mod_python error: "PythonHandler mod_python.publisher"

Traceback (most recent call last):

  File "/usr/lib/python2.4/site-packages/mod_python/apache.py", line
299, in HandlerDispatch
    result = object(req)

  File "/usr/lib/python2.4/site-packages/mod_python/publisher.py",
line 213, in handler
    published = publish_object(req, object)

  File "/usr/lib/python2.4/site-packages/mod_python/publisher.py",
line 412, in publish_object
    return publish_object(req,util.apply_fs_data(object, req.form, req=req))

  File "/usr/lib/python2.4/site-packages/mod_python/util.py", line
439, in apply_fs_data
    return object(**args)

  File "/var/www/app/test2.py", line 8, in index
    config = apache.import_module("config")

  File "/usr/lib/python2.4/site-packages/mod_python/apache.py", line
461, in import_module
    f, p, d = imp.find_module(parts[i], path)

ImportError: No module named config
###

Why does this initially work but then stop working once I add a
directory to my path?  I can fix it by adding '/var/www/app' to my
PythonPath as well, but I don't understand why it didn't work before
that.


3) Cheetah and #include

I have read a lot about why mod_python sets the current working
directory to '/', but this seems to be causing some larger problems
when cheetah comes into play.  (3) and (4) discuss two issues that I
am having trouble with.

Here is /var/www/app/templates/testPage.tmpl:
###
#include 'header_include.tmpl'
<head>
<title>$title</title>
</head>
<body>
<p>$message</p>
</body>
#include 'footer_include.tmpl'
###

However, as this actually tries to load /header_include.tmpl and
/footer_include.tmpl instead of the ones located in my templates
directory, this will not work.  I came up with two workarounds,
however I don't really love either:

a)

###
#include os.path.join(os.path.dirname(__file__), 'header_include.tmpl')
<head>
<title>$title</title>
</head>
<body>
<p>$message</p>
</body>
#include os.path.join(os.path.dirname(__file__), 'footer_include.tmpl')
###

b)

Actually pass $templatesDir into all of my templates and then instead call:

###
#include os.path.join(templatesDir, 'header_include.tmpl')
<head>
<title>$title</title>
</head>
<body>
<p>$message</p>
</body>
#include os.path.join(templatesDir, 'footer_include.tmpl')
###

I guess I'm leaning toward (a), but both seem cumbersome and slower
than necessary.  Is there a better way to do this?


4) Cheetah and inheritance

Assume these two files:

/var/www/app/templates/overall_base.tmpl
###
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1//EN"
          "http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en">
<head>
    <title>$title</title>
</head>
<body>
    $bodyContent
</body>
</html>
###

/var/www/app/templates/overall_base_extender.tmpl
###
#overall_base = apache.import_module("overall_base")
(or)
#from overall_base import overall_base

#extends overall_base
#def title
Welcome to Foo
#end def
#def bodyContent
Hello world!
#end def

This second file only works if I add /var/www/app/templates to my
PythonPath.  And, due to (2) above, I then also have to add
/var/www/app to PythonPath.  Is this really necessary?

#overall_base = apache.import_module("overall_base",
path=[os.path.dirname(__file__)])

doesn't seem to work inside the cheetah template file.  Even

#sys.path.append(os.path.dirname(__file__))
#overall_base = apache.import_module("overall_base")

doesn't seem to work.  Is there any way to get inheriting templates to
work without modifying PythonPath to include all the directories where
my base templates might be located?


I apologize for the huge length of this e-mail.  I am still fairly new
to mod_python and cheetah, but so far I really like what I see.  I
just feel like there are a few issues I need to wrap my head around
before I can really dive into developing applications.  Any pointers
or help with these issues that you can provide would be greatly
appreciated.

Many thanks,
Sebastian
From grahamd at dscpl.com.au  Fri Oct 27 18:01:21 2006
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Fri Oct 27 18:01:33 2006
Subject: [mod_python] [Off] Can I set some properties from CSS ?
In-Reply-To: <80824FFC-D505-4172-88DC-D77904DA1752@gmail.com>
References: <4541D0FB.1050604@gmail.com>
	<80824FFC-D505-4172-88DC-D77904DA1752@gmail.com>
Message-ID: <4BA2A040-E504-45E1-ABAC-6A4CB73A7319@dscpl.com.au>

Also do google searches on 'css textarea'. From memory Internet
Explorer has some shortcomings when it comes to applying CSS
to parts of forms. You may therefore have to use some workarounds
to get it working across all browsers.

Graham

On 28/10/2006, at 12:36 AM, Aaron Gallagher wrote:

> You should look here:
> http://www.w3.org/TR/CSS21/
>
> On Oct 27, 2006, at 2:27 AM, durumdara wrote:
>
>> Hi !
>>
>> Sorry for OFF, but I working in a form handler tool, and I need  
>> some informations.
>> So: I want to make style - independent code in the form handler.
>> If possible, I want to move all of the styles to a css file.
>>
>> But I don't know it is possible or not.
>>
>> Example:
>> TEXTAREA ROWS property (how many lines I want to see)
>> SELECT SIZE property (how many items I want to see)
>>
>> The problem that these properties are unique things.
>> Not all input type needed them.
>> When I fixed them into code, I lost the independecy of css.
>>
>> Thanks for your help:
>
> Aaron Gallagher
> <habnabit@gmail.com>
>
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python

From grahamd at dscpl.com.au  Fri Oct 27 18:45:32 2006
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Fri Oct 27 18:45:41 2006
Subject: [mod_python] util.FieldStorage
In-Reply-To: <1161931358.28947@dscpl.user.openhosting.com>
References: <1161931358.28947@dscpl.user.openhosting.com>
Message-ID: <950A8C39-92F9-4BE6-814D-FDA844F3E9A2@dscpl.com.au>


On 27/10/2006, at 4:42 PM, Graham Dumpleton wrote:

> Mike Looijmans wrote ..
>> Another,
>> idea is, could we support the following:
>>
>> form = FieldStorage(...)
>> myfrm = {}
>> myfrm.update(form)
>
> That works now. possibly because of the items() method.

Although this works now, it truly only works as one would expect if  
there
is at most one value against each form field. If there is more than  
one value
for a field then all but the last value found for that field will be  
lost.

This underscores the fact that it only really behaves like a  
dictionary when
there is at most one value for every field.

Although this is the case, after some thinking, it is probably  
reasonable to
add __setitem__ (equiv to add_field, ie. additative), and __delitem__.
One could even go as far as adding clear(), pop() and popitem(), but
probably do not want to encourage the idea that it is truly a  
dictionary.

Having made such a change, it would just need to be made quite clear
about when and when it doesn't behave like a dictionary.

Graham
From habnabit at gmail.com  Fri Oct 27 20:13:23 2006
From: habnabit at gmail.com (Aaron Gallagher)
Date: Fri Oct 27 20:14:09 2006
Subject: [mod_python] Caching pages
Message-ID: <3C4FEB86-76D9-4758-9E03-9D19987F0460@gmail.com>

Is there a builtin interface in mod_python that would allow for  
caching a generated page? Using Sessions doesn't work because I want  
the cache to be for every user who accesses the page. I tried using  
Session.Session(req, '0' * 32), but that didn't seem to work. I've  
looked at mod_python.cache, but there doesn't seem to be any  
documentation.


Aaron Gallagher
<habnabit@gmail.com>


-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20061027/834bcdfd/attachment.html
From grahamd at dscpl.com.au  Fri Oct 27 22:05:17 2006
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Fri Oct 27 22:05:30 2006
Subject: [mod_python] Caching pages
In-Reply-To: <3C4FEB86-76D9-4758-9E03-9D19987F0460@gmail.com>
References: <3C4FEB86-76D9-4758-9E03-9D19987F0460@gmail.com>
Message-ID: <512ABEFB-3B6B-4E91-ADC1-DA5BA96EB1EE@dscpl.com.au>


On 28/10/2006, at 10:13 AM, Aaron Gallagher wrote:

> Is there a builtin interface in mod_python that would allow for  
> caching a generated page? Using Sessions doesn't work because I  
> want the cache to be for every user who accesses the page. I tried  
> using Session.Session(req, '0' * 32), but that didn't seem to work.  
> I've looked at mod_python.cache, but there doesn't seem to be any  
> documentation.

Don't use mod_python.cache as that will disappear in a future version
of mod_python as it was only effectively an interim solution for  
something.
It was also only really ever meant to be an internal implementation  
thing
and not part of any public API.

Now, if you are talking about caching generated HTML, you may want
to look at using the mod_cache module for Apache in some way. Ie.,
generic caching is perhaps better done outside of mod_python. See:

   http://httpd.apache.org/docs/2.2/mod/mod_cache.html

To make best use of mod_cache, you may need to embed headers in
your responses to guide it how long to cache a page before it should be
recreated.

Graham


From jeffh at dundeemt.com  Fri Oct 27 22:40:03 2006
From: jeffh at dundeemt.com (Jeff Hinrichs - DM&T)
Date: Fri Oct 27 22:40:09 2006
Subject: [mod_python] Caching pages
In-Reply-To: <512ABEFB-3B6B-4E91-ADC1-DA5BA96EB1EE@dscpl.com.au>
References: <3C4FEB86-76D9-4758-9E03-9D19987F0460@gmail.com>
	<512ABEFB-3B6B-4E91-ADC1-DA5BA96EB1EE@dscpl.com.au>
Message-ID: <5aaed53f0610271940l779f6fcfm1b1c1d8613042507@mail.gmail.com>

On 10/27/06, Graham Dumpleton <grahamd@dscpl.com.au> wrote:
>
> On 28/10/2006, at 10:13 AM, Aaron Gallagher wrote:
>
> > Is there a builtin interface in mod_python that would allow for
> > caching a generated page? Using Sessions doesn't work because I
> > want the cache to be for every user who accesses the page. I tried
> > using Session.Session(req, '0' * 32), but that didn't seem to work.
> > I've looked at mod_python.cache, but there doesn't seem to be any
> > documentation.
>
> Don't use mod_python.cache as that will disappear in a future version
> of mod_python as it was only effectively an interim solution for
> something.
> It was also only really ever meant to be an internal implementation
> thing
> and not part of any public API.
>
> Now, if you are talking about caching generated HTML, you may want
> to look at using the mod_cache module for Apache in some way. Ie.,
> generic caching is perhaps better done outside of mod_python. See:
>
>    http://httpd.apache.org/docs/2.2/mod/mod_cache.html
>
> To make best use of mod_cache, you may need to embed headers in
> your responses to guide it how long to cache a page before it should be
> recreated.
>
> Graham
Another possible reverse proxy cache is Varnish ( http://varnish.linpro.no/  )
I heard a podcast
http://cisx1.uma.maine.edu/~wbackman/bsdtalk/bsdtalk072.mp3 on it and
it seemed quite interesting.

-Jeff
From grahamd at dscpl.com.au  Fri Oct 27 23:32:35 2006
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Fri Oct 27 23:32:47 2006
Subject: [mod_python] Building a web application using Cheetah and
	mod_python
In-Reply-To: <93f7db120610271444q73ab89ecuf1e019c41c0d290@mail.gmail.com>
References: <93f7db120610271444q73ab89ecuf1e019c41c0d290@mail.gmail.com>
Message-ID: <A909CA5E-D37A-4553-AFB6-9FD4AA8A091F@dscpl.com.au>


On 28/10/2006, at 7:44 AM, Sebastian Celis wrote:

> Hello,
>
> I am new to this list and have just recently begun to work on a
> project where I wish to use mod_python.publisher and cheetah to drive
> an entire web application.  I apologize if the following topics have
> been discussed to death recently, but I have read through the
> documentation on both sites and have searched through the mailing-list
> archives and while I have seen similar discussions, I have yet to find
> definitive answers.  I am able to get most things to work, however I
> can't help but feel that there are better ways of approaching some of
> my situations.
>
> First, I'll quickly describe my directory structure:
>
> /var/www/app -- The base directory to the web application.  This will
> directly contain most of the python files that correspond directly to
> URLs.  For example, index.py, login.py, etc.  In this directory.
> /var/www/app/templates -- Contains all of my cheetah templates.
> /var/www/app/include -- Contains the python utility modules I am
> writing specifically for this application.
>
> Now, onto the questions.
>
>
> 1) Importing compiled cheetah templates
>
> Assume I have code like the following in /var/www/app/test1.py
>
> ######################################
> from mod_python import apache
> from Cheetah.Template import Template
>
> def index(req):
>    req.content_type = "text/html"
>
>    dict = {'title': 'My Title!', 'message': 'Hello world!'}
>    templateModule = apache.import_module("templates/myTemplate")

Using '/' in the module name like this is not portable and is dependent
on peculiarities of the behaviour of Python on a specific platform.  
It will
not for example work on Mac OS X and also possibly not on Windows.

>    t = getattr(templateModule, "myTemplate")()
>    searchList = t.searchList()
>    searchList.insert(0, dict)
>
>    return(t.respond())
> ######################################
>
> Is this the best way to import template modules and then evaluate  
> them?

No, in as much as you are having to create a parallel hierarchy of  
publisher
handlers for each Cheetah page. You would be better off using a custom
handler which does the dispatch direct to the compiled Cheetah template
classes. See the mod_python handler described in:

   http://wiki.cheetahtemplate.org/cheetah-recipes.html

> 2) Modifying PythonPath prevents modules from being imported
>
> Inside file /var/www/app/test2.py, I have the following code:
>
> import config
> (or)
> config = apache.import_module("config")
>
> Both of these commands load /var/www/app/config.py, and seem to work
> fine.  However, if I add
>
> PythonPath "['/var/www/app/templates']+sys.path"
>
> to my apache configuration, I get an error next time I run test2.py.
>
> ###
> Mod_python error: "PythonHandler mod_python.publisher"
>
> Traceback (most recent call last):
>
>  File "/usr/lib/python2.4/site-packages/mod_python/apache.py", line
> 299, in HandlerDispatch
>    result = object(req)
>
>  File "/usr/lib/python2.4/site-packages/mod_python/publisher.py",
> line 213, in handler
>    published = publish_object(req, object)
>
>  File "/usr/lib/python2.4/site-packages/mod_python/publisher.py",
> line 412, in publish_object
>    return publish_object(req,util.apply_fs_data(object, req.form,  
> req=req))
>
>  File "/usr/lib/python2.4/site-packages/mod_python/util.py", line
> 439, in apply_fs_data
>    return object(**args)
>
>  File "/var/www/app/test2.py", line 8, in index
>    config = apache.import_module("config")
>
>  File "/usr/lib/python2.4/site-packages/mod_python/apache.py", line
> 461, in import_module
>    f, p, d = imp.find_module(parts[i], path)
>
> ImportError: No module named config
> ###
>
> Why does this initially work but then stop working once I add a
> directory to my path?  I can fix it by adding '/var/www/app' to my
> PythonPath as well, but I don't understand why it didn't work before
> that.

That is just how mod_python has always worked. Setting PythonPath
stops mod_python looking in the directory the handler was specified
for. Yes it is a pain. FWIW, this behaviour changes in mod_python 3.3
where the whole issue of module importing is dealt with a bit  
differently
and is much more consistent and predictable.

Current versions of mod_python have a lot of issues when it comes
to the module importer. You should really have a read of:

   http://www.dscpl.com.au/wiki/ModPython/Articles/ 
ModuleImportingIsBroken

> 3) Cheetah and #include
>
> I have read a lot about why mod_python sets the current working
> directory to '/', but this seems to be causing some larger problems
> when cheetah comes into play.  (3) and (4) discuss two issues that I
> am having trouble with.
>
> Here is /var/www/app/templates/testPage.tmpl:
> ###
> #include 'header_include.tmpl'
> <head>
> <title>$title</title>
> </head>
> <body>
> <p>$message</p>
> </body>
> #include 'footer_include.tmpl'
> ###
>
> However, as this actually tries to load /header_include.tmpl and
> /footer_include.tmpl instead of the ones located in my templates
> directory, this will not work.

If you are going to use compiled templates, you are possibly better  
off using
a site page base class and have specific pages extend that page. These
common blocks are then accessible through the base class. This means you
get the benefit of compiled code for the included blocks as well,  
instead of
it having to be interpreted each time.

> I came up with two workarounds,
> however I don't really love either:
>
> a)
>
> ###
> #include os.path.join(os.path.dirname(__file__),  
> 'header_include.tmpl')
> <head>
> <title>$title</title>
> </head>
> <body>
> <p>$message</p>
> </body>
> #include os.path.join(os.path.dirname(__file__),  
> 'footer_include.tmpl')
> ###
>
> b)
>
> Actually pass $templatesDir into all of my templates and then  
> instead call:
>
> ###
> #include os.path.join(templatesDir, 'header_include.tmpl')
> <head>
> <title>$title</title>
> </head>
> <body>
> <p>$message</p>
> </body>
> #include os.path.join(templatesDir, 'footer_include.tmpl')
> ###
>
> I guess I'm leaning toward (a), but both seem cumbersome and slower
> than necessary.  Is there a better way to do this?

If my memory of Cheetah is correct, then extending from a site page  
which
has reusable bits like this as I describe above is better.

> 4) Cheetah and inheritance
>
> Assume these two files:
>
> /var/www/app/templates/overall_base.tmpl
> ###
> <?xml version="1.0" encoding="UTF-8"?>
> <!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1//EN"
>          "http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd">
> <html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en">
> <head>
>    <title>$title</title>
> </head>
> <body>
>    $bodyContent
> </body>
> </html>
> ###
>
> /var/www/app/templates/overall_base_extender.tmpl
> ###
> #overall_base = apache.import_module("overall_base")
> (or)
> #from overall_base import overall_base
>
> #extends overall_base
> #def title
> Welcome to Foo
> #end def
> #def bodyContent
> Hello world!
> #end def
>
> This second file only works if I add /var/www/app/templates to my
> PythonPath.  And, due to (2) above, I then also have to add
> /var/www/app to PythonPath.  Is this really necessary?=

With the version of mod_python you are using, yes it is necessary.

> #overall_base = apache.import_module("overall_base",
> path=[os.path.dirname(__file__)])
>
> doesn't seem to work inside the cheetah template file.  Even
>
> #sys.path.append(os.path.dirname(__file__))
> #overall_base = apache.import_module("overall_base")

That one I am not sure about. You may be hitting one of the other  
problems
with PythonPath based module importing which is you can't easily have  
the
same name module in different directories and be sure you import the one
you want.

In general I wouldn't recommend using apache.import_module() within
Cheetah templates explicitly.

> doesn't seem to work.  Is there any way to get inheriting templates to
> work without modifying PythonPath to include all the directories where
> my base templates might be located?

Not really.

> I apologize for the huge length of this e-mail.  I am still fairly new
> to mod_python and cheetah, but so far I really like what I see.  I
> just feel like there are a few issues I need to wrap my head around
> before I can really dive into developing applications.  Any pointers
> or help with these issues that you can provide would be greatly
> appreciated.

Things are a bit easier to manage and easier to predict when  
mod_python 3.3
can be used. Version 3.3 of mod_python hasn't been released yet, but  
is quite
close. If you want to try the source for mod_python out of the  
Subversion
repository, then can suggest better ways of doing things.

Graham
From thkatsou at yahoo.gr  Sat Oct 28 06:40:05 2006
From: thkatsou at yahoo.gr (Thimios Katsoulis)
Date: Sat Oct 28 06:40:10 2006
Subject: [mod_python] Http Response None -  Page renders as Text
Message-ID: <20061028104005.31246.qmail@web23302.mail.ird.yahoo.com>

Hello all.
I am developing a site in mod_python and I am facing a
problem.
The nasty thing is that this problem does not occur
all the time . 
The problem is that firefox renders the  page and
displays it as text . So what you see is the html
source and not the rendered page.
This problem occurs once in many times . When you hit
refresh the page renders normally.
I have set content_type to "text/html".
Here is the problematic output as seen on firefox:

NoneHTTP/1.1 200 OK
Date: Sat, 28 Oct 2006 10:13:32 GMT
Server: Apache/2.0.55 (Ubuntu) mod_python/3.1.4
Python/2.4.3 PHP/5.1.2
Content-Length: 1974
Keep-Alive: timeout=15, max=95
Connection: Keep-Alive
Content-Type: text/html; charset=UTF-8

<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0
Strict//EN"
"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">

<html xmlns="http://www.w3.org/1999/xhtml"
xml:lang="en">

<head>

.....
and the html source continues.

If you hit refresh , I repeat , page renders normally.
This behaviour is seen on a 1.0.8 firefox on Suse
linux 10.0 on a machine on my local lan.
The test web server is also on my local lan and is
Ubuntu 6.0.6 with mod_python/3.1.4 as you can notice
on the header.
Please notice also the first line of the output
"NoneHTTP/1.1 200 OK" .

Here are the settings of the site :
-----------------------------------------
<VirtualHost *>
        ServerAdmin webmaster@localhost
        ServerName www.evropi.com
        DocumentRoot /var/www/evropi
        <Directory /var/www/evropi>
                Options None
                AllowOverride All
                Order allow,deny
                allow from all

                SetHandler mod_python
                PythonHandler start
                PythonDebug On

        </Directory>


        ErrorLog /var/log/apache2/error.log

        # Possible values include: debug, info,
notice, warn, error, crit,
        # alert, emerg.
        LogLevel warn

        ServerSignature On



</VirtualHost>
----------------------------------------
Please notice also that this is not a real domain name
.
It's just used for development . I am testing a site
by modyfing my local lan's machine's /etc/hosts files.

Here is the start.py python script :
----------------------------------------------------
import time
from mod_python import apache
def handler(req):
        #start=time.time()
        req.content_type = "text/html"
        from lib import SiteBuilder
        reload(SiteBuilder)
        siteBuilder=SiteBuilder.SiteBuilder(req.uri)
        data=siteBuilder.BuildPage(req)
        #diff=time.time()-start
        #req.write("%f" % (diff))
        data=str(data)
        lenData=len(data)
        req.content_type = "text/html"
        req.set_content_length(lenData)
        req.write(data)

        return apache.OK

-----------------------------------------------

I have noticed this behaviour from other pc's as well
, mostly on Firefox.
But this does not happen all the times , it is
something random , and as a developer I consider
random problem occuring very nasty .
Anyone has seen this behaviour before ? 
Should I send http headers before calling req.write()?
I 'll appreciate any help .

Thanks. 
Thimios Katsoulis






	

	
		
___________________________________________________________ 
?????????????? Yahoo!; 
?????????? ?? ?????????? ???????? (spam); ?? Yahoo! Mail 
???????? ??? ???????? ?????? ????????? ???? ??? ??????????? 
????????? http://login.yahoo.com/config/mail?.intl=gr 

From grahamd at dscpl.com.au  Sat Oct 28 08:10:21 2006
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Sat Oct 28 08:10:46 2006
Subject: [mod_python] Http Response None -  Page renders as Text
In-Reply-To: <20061028104005.31246.qmail@web23302.mail.ird.yahoo.com>
References: <20061028104005.31246.qmail@web23302.mail.ird.yahoo.com>
Message-ID: <1D94D46C-ED78-499D-AAB9-33D6D9E7C4DB@dscpl.com.au>

Try not setting a content length. You might be getting the content
length wrong and screwing up any HTTP 1.1 pipelining of requests.
Ie., overlength data from a prior request is coming through as start
of subsequent request.

Graham

On 28/10/2006, at 8:40 PM, Thimios Katsoulis wrote:

> Hello all.
> I am developing a site in mod_python and I am facing a
> problem.
> The nasty thing is that this problem does not occur
> all the time .
> The problem is that firefox renders the  page and
> displays it as text . So what you see is the html
> source and not the rendered page.
> This problem occurs once in many times . When you hit
> refresh the page renders normally.
> I have set content_type to "text/html".
> Here is the problematic output as seen on firefox:
>
> NoneHTTP/1.1 200 OK
> Date: Sat, 28 Oct 2006 10:13:32 GMT
> Server: Apache/2.0.55 (Ubuntu) mod_python/3.1.4
> Python/2.4.3 PHP/5.1.2
> Content-Length: 1974
> Keep-Alive: timeout=15, max=95
> Connection: Keep-Alive
> Content-Type: text/html; charset=UTF-8
>
> <!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0
> Strict//EN"
> "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
>
> <html xmlns="http://www.w3.org/1999/xhtml"
> xml:lang="en">
>
> <head>
>
> .....
> and the html source continues.
>
> If you hit refresh , I repeat , page renders normally.
> This behaviour is seen on a 1.0.8 firefox on Suse
> linux 10.0 on a machine on my local lan.
> The test web server is also on my local lan and is
> Ubuntu 6.0.6 with mod_python/3.1.4 as you can notice
> on the header.
> Please notice also the first line of the output
> "NoneHTTP/1.1 200 OK" .
>
> Here are the settings of the site :
> -----------------------------------------
> <VirtualHost *>
>         ServerAdmin webmaster@localhost
>         ServerName www.evropi.com
>         DocumentRoot /var/www/evropi
>         <Directory /var/www/evropi>
>                 Options None
>                 AllowOverride All
>                 Order allow,deny
>                 allow from all
>
>                 SetHandler mod_python
>                 PythonHandler start
>                 PythonDebug On
>
>         </Directory>
>
>
>         ErrorLog /var/log/apache2/error.log
>
>         # Possible values include: debug, info,
> notice, warn, error, crit,
>         # alert, emerg.
>         LogLevel warn
>
>         ServerSignature On
>
>
>
> </VirtualHost>
> ----------------------------------------
> Please notice also that this is not a real domain name
> .
> It's just used for development . I am testing a site
> by modyfing my local lan's machine's /etc/hosts files.
>
> Here is the start.py python script :
> ----------------------------------------------------
> import time
> from mod_python import apache
> def handler(req):
>         #start=time.time()
>         req.content_type = "text/html"
>         from lib import SiteBuilder
>         reload(SiteBuilder)
>         siteBuilder=SiteBuilder.SiteBuilder(req.uri)
>         data=siteBuilder.BuildPage(req)
>         #diff=time.time()-start
>         #req.write("%f" % (diff))
>         data=str(data)
>         lenData=len(data)
>         req.content_type = "text/html"
>         req.set_content_length(lenData)
>         req.write(data)
>
>         return apache.OK
>
> -----------------------------------------------
>
> I have noticed this behaviour from other pc's as well
> , mostly on Firefox.
> But this does not happen all the times , it is
> something random , and as a developer I consider
> random problem occuring very nasty .
> Anyone has seen this behaviour before ?
> Should I send http headers before calling req.write()?
> I 'll appreciate any help .
>
> Thanks.
> Thimios Katsoulis
>
>
>
>
>
>
> 	
>
> 	
> 		
> ___________________________________________________________
> ?????????????? Yahoo!;
> ?????????? ?? ?????????? ????????  
> (spam); ?? Yahoo! Mail
> ???????? ??? ???????? ??????  
> ????????? ???? ??? ???????????
> ????????? http://login.yahoo.com/config/mail?.intl=gr
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python

From labs at ixopusada.com  Sat Oct 28 13:12:08 2006
From: labs at ixopusada.com (Dirk van Oosterbosch, IR labs)
Date: Sat Oct 28 13:13:14 2006
Subject: [mod_python] Building a web application using Cheetah and
	mod_python
In-Reply-To: <A909CA5E-D37A-4553-AFB6-9FD4AA8A091F@dscpl.com.au>
References: <93f7db120610271444q73ab89ecuf1e019c41c0d290@mail.gmail.com>
	<A909CA5E-D37A-4553-AFB6-9FD4AA8A091F@dscpl.com.au>
Message-ID: <98F8294A-E202-401C-8C1D-095545B22E59@ixopusada.com>

Hi,

I am also working on a "cms"-like website system, using mod_python  
and Cheetah, though I've not yet tied these both up together, to be  
fully functional. Still working on the smaller subparts of the system.
So I follow this subject with great interest.

It feels like the core of this discussion is about making sure the  
cheetah modules gets reloaded when they change. I didn't conduct any  
tests yet, still trying to grasp the exact mechanisms underneath.

>> [...]
>> Is this the best way to import template modules and then evaluate  
>> them?
>
> No, in as much as you are having to create a parallel hierarchy of  
> publisher
> handlers for each Cheetah page. You would be better off using a custom
> handler which does the dispatch direct to the compiled Cheetah  
> template
> classes.

I'm not sure if this helps, but I've got a similar setup. There is  
one handler in a main.py that handles all requests. This main  
connects to a database, to find out which Cheetah template to use,  
and loads and fills this template. Also I've got a directory which  
hold all the python files directly necessary for the system (/var/www/ 
python) and an other directory to hold my templates. (/var/www/python/ 
templates)

If inside this main.py I would use an `apache.import_module 
(fooTemplate)` instead of just `from fooTemplate import fooTemplate`,  
that would mean that the fooTemplate is reloaded if it changed,  
doesn't it?
But would it also mean that all the other templates which are  
imported through their inheritance would be reloaded if they are  
changed?

Most of my templates are inheriting parent-templates using the  
Cheetah standard
#from bar import bar
#extends bar

It's easy to create a whole directory with fresh modules, using the  
shell `cheetah compile *.tmpl`. But is there also a way to ensure me  
that apache is reloading them, if I do that? (i.e. an other way than  
restarting apache, which I have to do frequently while debugging this  
system :-(


And sometimes I am not importing a compiled template in main, but  
create a new template from a text/tmpl file
`t = Template(file = "foobar.tmpl", searchList = [dict, obj])`
What does creating a template on the fly like this, mean for  
reloading a changed inherited template?


>> This second file only works if I add /var/www/app/templates to my
>> PythonPath.  And, due to (2) above, I then also have to add
>> /var/www/app to PythonPath.  Is this really necessary?=
>
> With the version of mod_python you are using, yes it is necessary.

I am also adding the templates directory to my PythonPath, but since  
I am not yet running my code from Apache, I haven't yet discovered  
problems with loading the rest of my python modules from my /var/www/ 
python. But if I hit those issues, I'll now know how to fix them, ;-)


BTW, (OT)

>>    templateModule = apache.import_module("templates/myTemplate")
>
> Using '/' in the module name like this is not portable and is  
> dependent
> on peculiarities of the behaviour of Python on a specific platform.  
> It will
> not for example work on Mac OS X and also possibly not on Windows.

I am working on a mac and also using slashes `/` to delimit my paths,  
so no problems there. (Didn't try from mod_python though & dunno what  
will happen on Windows). However I know of portability issues, so I  
am only using paths/with/slashes in my configuration files, if I need  
to create a path in code I'm using os.path.join()




> Things are a bit easier to manage and easier to predict when  
> mod_python 3.3
> can be used. Version 3.3 of mod_python hasn't been released yet,  
> but is quite
> close.

I am eagerly awaiting :-)
best

dirk



-----------------------------
Dirk van Oosterbosch
de Wittenstraat 225
1052 AT Amsterdam
the Netherlands

http://labs.ixopusada.com
-----------------------------


On 28-okt-2006, at 5:32, Graham Dumpleton wrote:

>
> On 28/10/2006, at 7:44 AM, Sebastian Celis wrote:
>
>> Hello,
>>
>> I am new to this list and have just recently begun to work on a
>> project where I wish to use mod_python.publisher and cheetah to drive
>> an entire web application.  I apologize if the following topics have
>> been discussed to death recently, but I have read through the
>> documentation on both sites and have searched through the mailing- 
>> list
>> archives and while I have seen similar discussions, I have yet to  
>> find
>> definitive answers.  I am able to get most things to work, however I
>> can't help but feel that there are better ways of approaching some of
>> my situations.
>>
>> First, I'll quickly describe my directory structure:
>>
>> /var/www/app -- The base directory to the web application.  This will
>> directly contain most of the python files that correspond directly to
>> URLs.  For example, index.py, login.py, etc.  In this directory.
>> /var/www/app/templates -- Contains all of my cheetah templates.
>> /var/www/app/include -- Contains the python utility modules I am
>> writing specifically for this application.
>>
>> Now, onto the questions.
>>
>>
>> 1) Importing compiled cheetah templates
>>
>> Assume I have code like the following in /var/www/app/test1.py
>>
>> ######################################
>> from mod_python import apache
>> from Cheetah.Template import Template
>>
>> def index(req):
>>    req.content_type = "text/html"
>>
>>    dict = {'title': 'My Title!', 'message': 'Hello world!'}
>>    templateModule = apache.import_module("templates/myTemplate")
>
> Using '/' in the module name like this is not portable and is  
> dependent
> on peculiarities of the behaviour of Python on a specific platform.  
> It will
> not for example work on Mac OS X and also possibly not on Windows.
>
>>    t = getattr(templateModule, "myTemplate")()
>>    searchList = t.searchList()
>>    searchList.insert(0, dict)
>>
>>    return(t.respond())
>> ######################################
>>
>> Is this the best way to import template modules and then evaluate  
>> them?
>
> No, in as much as you are having to create a parallel hierarchy of  
> publisher
> handlers for each Cheetah page. You would be better off using a custom
> handler which does the dispatch direct to the compiled Cheetah  
> template
> classes. See the mod_python handler described in:
>
>   http://wiki.cheetahtemplate.org/cheetah-recipes.html
>
>> 2) Modifying PythonPath prevents modules from being imported
>>
>> Inside file /var/www/app/test2.py, I have the following code:
>>
>> import config
>> (or)
>> config = apache.import_module("config")
>>
>> Both of these commands load /var/www/app/config.py, and seem to work
>> fine.  However, if I add
>>
>> PythonPath "['/var/www/app/templates']+sys.path"
>>
>> to my apache configuration, I get an error next time I run test2.py.
>>
>> ###
>> Mod_python error: "PythonHandler mod_python.publisher"
>>
>> Traceback (most recent call last):
>>
>>  File "/usr/lib/python2.4/site-packages/mod_python/apache.py", line
>> 299, in HandlerDispatch
>>    result = object(req)
>>
>>  File "/usr/lib/python2.4/site-packages/mod_python/publisher.py",
>> line 213, in handler
>>    published = publish_object(req, object)
>>
>>  File "/usr/lib/python2.4/site-packages/mod_python/publisher.py",
>> line 412, in publish_object
>>    return publish_object(req,util.apply_fs_data(object, req.form,  
>> req=req))
>>
>>  File "/usr/lib/python2.4/site-packages/mod_python/util.py", line
>> 439, in apply_fs_data
>>    return object(**args)
>>
>>  File "/var/www/app/test2.py", line 8, in index
>>    config = apache.import_module("config")
>>
>>  File "/usr/lib/python2.4/site-packages/mod_python/apache.py", line
>> 461, in import_module
>>    f, p, d = imp.find_module(parts[i], path)
>>
>> ImportError: No module named config
>> ###
>>
>> Why does this initially work but then stop working once I add a
>> directory to my path?  I can fix it by adding '/var/www/app' to my
>> PythonPath as well, but I don't understand why it didn't work before
>> that.
>
> That is just how mod_python has always worked. Setting PythonPath
> stops mod_python looking in the directory the handler was specified
> for. Yes it is a pain. FWIW, this behaviour changes in mod_python 3.3
> where the whole issue of module importing is dealt with a bit  
> differently
> and is much more consistent and predictable.
>
> Current versions of mod_python have a lot of issues when it comes
> to the module importer. You should really have a read of:
>
>   http://www.dscpl.com.au/wiki/ModPython/Articles/ 
> ModuleImportingIsBroken
>
>> 3) Cheetah and #include
>>
>> I have read a lot about why mod_python sets the current working
>> directory to '/', but this seems to be causing some larger problems
>> when cheetah comes into play.  (3) and (4) discuss two issues that I
>> am having trouble with.
>>
>> Here is /var/www/app/templates/testPage.tmpl:
>> ###
>> #include 'header_include.tmpl'
>> <head>
>> <title>$title</title>
>> </head>
>> <body>
>> <p>$message</p>
>> </body>
>> #include 'footer_include.tmpl'
>> ###
>>
>> However, as this actually tries to load /header_include.tmpl and
>> /footer_include.tmpl instead of the ones located in my templates
>> directory, this will not work.
>
> If you are going to use compiled templates, you are possibly better  
> off using
> a site page base class and have specific pages extend that page. These
> common blocks are then accessible through the base class. This  
> means you
> get the benefit of compiled code for the included blocks as well,  
> instead of
> it having to be interpreted each time.
>
>> I came up with two workarounds,
>> however I don't really love either:
>>
>> a)
>>
>> ###
>> #include os.path.join(os.path.dirname(__file__),  
>> 'header_include.tmpl')
>> <head>
>> <title>$title</title>
>> </head>
>> <body>
>> <p>$message</p>
>> </body>
>> #include os.path.join(os.path.dirname(__file__),  
>> 'footer_include.tmpl')
>> ###
>>
>> b)
>>
>> Actually pass $templatesDir into all of my templates and then  
>> instead call:
>>
>> ###
>> #include os.path.join(templatesDir, 'header_include.tmpl')
>> <head>
>> <title>$title</title>
>> </head>
>> <body>
>> <p>$message</p>
>> </body>
>> #include os.path.join(templatesDir, 'footer_include.tmpl')
>> ###
>>
>> I guess I'm leaning toward (a), but both seem cumbersome and slower
>> than necessary.  Is there a better way to do this?
>
> If my memory of Cheetah is correct, then extending from a site page  
> which
> has reusable bits like this as I describe above is better.
>
>> 4) Cheetah and inheritance
>>
>> Assume these two files:
>>
>> /var/www/app/templates/overall_base.tmpl
>> ###
>> <?xml version="1.0" encoding="UTF-8"?>
>> <!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1//EN"
>>          "http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd">
>> <html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en">
>> <head>
>>    <title>$title</title>
>> </head>
>> <body>
>>    $bodyContent
>> </body>
>> </html>
>> ###
>>
>> /var/www/app/templates/overall_base_extender.tmpl
>> ###
>> #overall_base = apache.import_module("overall_base")
>> (or)
>> #from overall_base import overall_base
>>
>> #extends overall_base
>> #def title
>> Welcome to Foo
>> #end def
>> #def bodyContent
>> Hello world!
>> #end def
>>
>> This second file only works if I add /var/www/app/templates to my
>> PythonPath.  And, due to (2) above, I then also have to add
>> /var/www/app to PythonPath.  Is this really necessary?=
>
> With the version of mod_python you are using, yes it is necessary.
>
>> #overall_base = apache.import_module("overall_base",
>> path=[os.path.dirname(__file__)])
>>
>> doesn't seem to work inside the cheetah template file.  Even
>>
>> #sys.path.append(os.path.dirname(__file__))
>> #overall_base = apache.import_module("overall_base")
>
> That one I am not sure about. You may be hitting one of the other  
> problems
> with PythonPath based module importing which is you can't easily  
> have the
> same name module in different directories and be sure you import  
> the one
> you want.
>
> In general I wouldn't recommend using apache.import_module() within
> Cheetah templates explicitly.
>
>> doesn't seem to work.  Is there any way to get inheriting  
>> templates to
>> work without modifying PythonPath to include all the directories  
>> where
>> my base templates might be located?
>
> Not really.
>
>> I apologize for the huge length of this e-mail.  I am still fairly  
>> new
>> to mod_python and cheetah, but so far I really like what I see.  I
>> just feel like there are a few issues I need to wrap my head around
>> before I can really dive into developing applications.  Any pointers
>> or help with these issues that you can provide would be greatly
>> appreciated.
>
> Things are a bit easier to manage and easier to predict when  
> mod_python 3.3
> can be used. Version 3.3 of mod_python hasn't been released yet,  
> but is quite
> close. If you want to try the source for mod_python out of the  
> Subversion
> repository, then can suggest better ways of doing things.
>
> Graham
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>





From thkatsou at yahoo.gr  Sat Oct 28 14:14:20 2006
From: thkatsou at yahoo.gr (Thimios Katsoulis)
Date: Sat Oct 28 14:14:29 2006
Subject: =?iso-8859-7?q?=C8=DD=EC=E1:=20Re:=20[mod=5Fpython]=20Http=20Response=20N?=
	=?iso-8859-7?q?one=20-=20=20Page=20renders=20as=20Text?=
In-Reply-To: <1D94D46C-ED78-499D-AAB9-33D6D9E7C4DB@dscpl.com.au>
Message-ID: <20061028181420.67229.qmail@web23314.mail.ird.yahoo.com>


--- Graham Dumpleton <grahamd@dscpl.com.au> ??????:

> Try not setting a content length. You might be
> getting the content
> length wrong and screwing up any HTTP 1.1 pipelining
> of requests.
> Ie., overlength data from a prior request is coming
> through as start
> of subsequent request.
> 
> Graham

If I do that I have the situation with chunked
responses etc.
Anyway I Have tried that but did not make any good.

One other thing I noticed is , if I try to append
something more to the data string for example :

data=str(data)
data += '<br/>something<br/>'

the string appended will appear after None :

None<br/>something<br/>HTTP/1.1 200 OK
Date: Sat, 28 Oct 2006 10:13:32 GMT
Server: Apache/2.0.55 (Ubuntu) mod_python/3.1.4

....

Anyway this problem is really strange it happens only
from a client pc and this is my main home server .

I  tried to use a proxy for firefox and the problem
disappeared
(the proxy is on the same machine that the problem
occurs) .
Anyway I 'll by bypass it for the time since I dont
notice this behavior in any other lan pc.




	

	
		
___________________________________________________________ 
?????????????? Yahoo!; 
?????????? ?? ?????????? ???????? (spam); ?? Yahoo! Mail 
???????? ??? ???????? ?????? ????????? ???? ??? ??????????? 
????????? http://login.yahoo.com/config/mail?.intl=gr 

From grahamd at dscpl.com.au  Sat Oct 28 18:52:33 2006
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Sat Oct 28 18:52:42 2006
Subject: =?UTF-8?Q?Re:_=CE=98=CE=AD=CE=BC=CE=B1:_Re:_[mod=5Fpython]_Http_?=
	=?UTF-8?Q?Response_None_-__Page_renders_as_Text?=
In-Reply-To: <20061028181420.67229.qmail@web23314.mail.ird.yahoo.com>
References: <20061028181420.67229.qmail@web23314.mail.ird.yahoo.com>
Message-ID: <FEF3B0B3-EBB2-4AA2-B680-41BF0845D6E4@dscpl.com.au>

Are you sure the SiteBuilder stuff isn't writing its own response  
back through
the request object and returning None as the result, which you then  
are also
converting to a string and also writing back in the response?

Have you tried using logging to output to the Apache error log bits  
about what
is going on? Ie., what goes into the log if you output what data is?

   apache.log_error('myoutput=%s', data)

Graham

On 29/10/2006, at 5:14 AM, Thimios Katsoulis wrote:

>
> --- Graham Dumpleton <grahamd@dscpl.com.au> ??????:
>
>> Try not setting a content length. You might be
>> getting the content
>> length wrong and screwing up any HTTP 1.1 pipelining
>> of requests.
>> Ie., overlength data from a prior request is coming
>> through as start
>> of subsequent request.
>>
>> Graham
>
> If I do that I have the situation with chunked
> responses etc.
> Anyway I Have tried that but did not make any good.
>
> One other thing I noticed is , if I try to append
> something more to the data string for example :
>
> data=str(data)
> data += '<br/>something<br/>'
>
> the string appended will appear after None :
>
> None<br/>something<br/>HTTP/1.1 200 OK
> Date: Sat, 28 Oct 2006 10:13:32 GMT
> Server: Apache/2.0.55 (Ubuntu) mod_python/3.1.4
>
> ....
>
> Anyway this problem is really strange it happens only
> from a client pc and this is my main home server .
>
> I  tried to use a proxy for firefox and the problem
> disappeared
> (the proxy is on the same machine that the problem
> occurs) .
> Anyway I 'll by bypass it for the time since I dont
> notice this behavior in any other lan pc.
>
>
>
>
> 	
>
> 	
> 		
> ___________________________________________________________
> ?????????????? Yahoo!;
> ?????????? ?? ?????????? ????????  
> (spam); ?? Yahoo! Mail
> ???????? ??? ???????? ??????  
> ????????? ???? ??? ???????????
> ????????? http://login.yahoo.com/config/mail?.intl=gr

From grahamd at dscpl.com.au  Sat Oct 28 19:10:35 2006
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Sat Oct 28 19:10:46 2006
Subject: [mod_python] Building a web application using Cheetah and
	mod_python
In-Reply-To: <98F8294A-E202-401C-8C1D-095545B22E59@ixopusada.com>
References: <93f7db120610271444q73ab89ecuf1e019c41c0d290@mail.gmail.com>
	<A909CA5E-D37A-4553-AFB6-9FD4AA8A091F@dscpl.com.au>
	<98F8294A-E202-401C-8C1D-095545B22E59@ixopusada.com>
Message-ID: <D5AA0517-7159-4D8F-9C09-092AC060608A@dscpl.com.au>


On 29/10/2006, at 4:12 AM, Dirk van Oosterbosch, IR labs wrote:

> Hi,
>
> I am also working on a "cms"-like website system, using mod_python  
> and Cheetah, though I've not yet tied these both up together, to be  
> fully functional. Still working on the smaller subparts of the system.
> So I follow this subject with great interest.
>
> It feels like the core of this discussion is about making sure the  
> cheetah modules gets reloaded when they change. I didn't conduct  
> any tests yet, still trying to grasp the exact mechanisms underneath.
>
>>> [...]
>>> Is this the best way to import template modules and then evaluate  
>>> them?
>>
>> No, in as much as you are having to create a parallel hierarchy of  
>> publisher
>> handlers for each Cheetah page. You would be better off using a  
>> custom
>> handler which does the dispatch direct to the compiled Cheetah  
>> template
>> classes.
>
> I'm not sure if this helps, but I've got a similar setup. There is  
> one handler in a main.py that handles all requests. This main  
> connects to a database, to find out which Cheetah template to use,  
> and loads and fills this template. Also I've got a directory which  
> hold all the python files directly necessary for the system (/var/ 
> www/python) and an other directory to hold my templates. (/var/www/ 
> python/templates)
>
> If inside this main.py I would use an `apache.import_module 
> (fooTemplate)` instead of just `from fooTemplate import  
> fooTemplate`, that would mean that the fooTemplate is reloaded if  
> it changed, doesn't it?

Probably not. See issue 8 in:

   http://www.dscpl.com.au/wiki/ModPython/Articles/ 
ModuleImportingIsBroken

> But would it also mean that all the other templates which are  
> imported through their inheritance would be reloaded if they are  
> changed?

Again, probably not, for same reason.

> Most of my templates are inheriting parent-templates using the  
> Cheetah standard
> #from bar import bar
> #extends bar
>
> It's easy to create a whole directory with fresh modules, using the  
> shell `cheetah compile *.tmpl`. But is there also a way to ensure  
> me that apache is reloading them, if I do that? (i.e. an other way  
> than restarting apache, which I have to do frequently while  
> debugging this system :-(

Using current versions of mod_python available there is no way of  
doing it except
perhaps by using the Vampire extensions for mod_python.  
Alternatively, use
version 3.3 of mod_python out of Subversion repository or wait until  
it is released.

Both Vampire and the new mod_python 3.3 implement a module importer  
which
tracks child imports and will correctly import parent modules when a  
child changes.
In fact it is the Vampire module importer which was used as basis for  
3.3 version.

This works even if 'from bar import bar' is used as they intercept  
the 'import'
statement and when an import is performed from inside a module which was
already imported using the module importer, it will use the module  
importer for
the 'import' as well. Ie., no need to use apache.import_module()  
explicitly. If the
module being imported using 'import' is in another directory though,  
it is necessary
to specify an option declaring the search path for the modules. This  
is a path which
is distinct from PythonPath as new importer will not use any module  
in PythonPath
as a candidate for reloading as that causes lots of problems.

Anyway, end result is that with these module importers, you can  
update a base
class template, regenerate Cheetah Python class and anything which  
extends
from it will be automatically reloaded along with the base class.

> And sometimes I am not importing a compiled template in main, but  
> create a new template from a text/tmpl file
> `t = Template(file = "foobar.tmpl", searchList = [dict, obj])`
> What does creating a template on the fly like this, mean for  
> reloading a changed inherited template?

Not sure. Does Cheetah use a caching system of its own for this so  
that it isn't
loading them from disk all the time and does it reload the tmpl file  
if it has changed
on disk. I can't remember what it does and it may have changed since  
when I
was more actively looking at it.

>>> This second file only works if I add /var/www/app/templates to my
>>> PythonPath.  And, due to (2) above, I then also have to add
>>> /var/www/app to PythonPath.  Is this really necessary?=
>>
>> With the version of mod_python you are using, yes it is necessary.
>
> I am also adding the templates directory to my PythonPath, but  
> since I am not yet running my code from Apache, I haven't yet  
> discovered problems with loading the rest of my python modules from  
> my /var/www/python. But if I hit those issues, I'll now know how to  
> fix them, ;-)

With new importers, you don't want to be setting PythonPath if you  
want modules
to be reloadable. You will need to set the module importers own  
search path.

> BTW, (OT)
>
>>>    templateModule = apache.import_module("templates/myTemplate")
>>
>> Using '/' in the module name like this is not portable and is  
>> dependent
>> on peculiarities of the behaviour of Python on a specific  
>> platform. It will
>> not for example work on Mac OS X and also possibly not on Windows.
>
> I am working on a mac and also using slashes `/` to delimit my  
> paths, so no problems there. (Didn't try from mod_python though &  
> dunno what will happen on Windows).

What version of Python are you using? I know for sure it didn't work  
with
Python (2.3) on Panther. I also don't think it worked with Python  
(2.3.5)
on Tiger. If you are using Python 2.4 or later which you installed  
yourself,
it is entirely possible it may work.

> However I know of portability issues, so I am only using paths/with/ 
> slashes in my configuration files, if I need to create a path in  
> code I'm using os.path.join()

Depending on the source of the path, one should actually use  
posixpath functions
sometimes instead of os.path. This is especially the case of working  
on req.uri and
sometimes on req.filename. This is because Apache supplies both of  
them as
POSIXish style paths and using os.path functions on Windows can screw  
things
up as it introduces back slashes.

>> Things are a bit easier to manage and easier to predict when  
>> mod_python 3.3
>> can be used. Version 3.3 of mod_python hasn't been released yet,  
>> but is quite
>> close.
>
> I am eagerly awaiting :-)
> best
>
> dirk
>
>
>
> -----------------------------
> Dirk van Oosterbosch
> de Wittenstraat 225
> 1052 AT Amsterdam
> the Netherlands
>
> http://labs.ixopusada.com
> -----------------------------
>
>
> On 28-okt-2006, at 5:32, Graham Dumpleton wrote:
>
>>
>> On 28/10/2006, at 7:44 AM, Sebastian Celis wrote:
>>
>>> Hello,
>>>
>>> I am new to this list and have just recently begun to work on a
>>> project where I wish to use mod_python.publisher and cheetah to  
>>> drive
>>> an entire web application.  I apologize if the following topics have
>>> been discussed to death recently, but I have read through the
>>> documentation on both sites and have searched through the mailing- 
>>> list
>>> archives and while I have seen similar discussions, I have yet to  
>>> find
>>> definitive answers.  I am able to get most things to work, however I
>>> can't help but feel that there are better ways of approaching  
>>> some of
>>> my situations.
>>>
>>> First, I'll quickly describe my directory structure:
>>>
>>> /var/www/app -- The base directory to the web application.  This  
>>> will
>>> directly contain most of the python files that correspond  
>>> directly to
>>> URLs.  For example, index.py, login.py, etc.  In this directory.
>>> /var/www/app/templates -- Contains all of my cheetah templates.
>>> /var/www/app/include -- Contains the python utility modules I am
>>> writing specifically for this application.
>>>
>>> Now, onto the questions.
>>>
>>>
>>> 1) Importing compiled cheetah templates
>>>
>>> Assume I have code like the following in /var/www/app/test1.py
>>>
>>> ######################################
>>> from mod_python import apache
>>> from Cheetah.Template import Template
>>>
>>> def index(req):
>>>    req.content_type = "text/html"
>>>
>>>    dict = {'title': 'My Title!', 'message': 'Hello world!'}
>>>    templateModule = apache.import_module("templates/myTemplate")
>>
>> Using '/' in the module name like this is not portable and is  
>> dependent
>> on peculiarities of the behaviour of Python on a specific  
>> platform. It will
>> not for example work on Mac OS X and also possibly not on Windows.
>>
>>>    t = getattr(templateModule, "myTemplate")()
>>>    searchList = t.searchList()
>>>    searchList.insert(0, dict)
>>>
>>>    return(t.respond())
>>> ######################################
>>>
>>> Is this the best way to import template modules and then evaluate  
>>> them?
>>
>> No, in as much as you are having to create a parallel hierarchy of  
>> publisher
>> handlers for each Cheetah page. You would be better off using a  
>> custom
>> handler which does the dispatch direct to the compiled Cheetah  
>> template
>> classes. See the mod_python handler described in:
>>
>>   http://wiki.cheetahtemplate.org/cheetah-recipes.html
>>
>>> 2) Modifying PythonPath prevents modules from being imported
>>>
>>> Inside file /var/www/app/test2.py, I have the following code:
>>>
>>> import config
>>> (or)
>>> config = apache.import_module("config")
>>>
>>> Both of these commands load /var/www/app/config.py, and seem to work
>>> fine.  However, if I add
>>>
>>> PythonPath "['/var/www/app/templates']+sys.path"
>>>
>>> to my apache configuration, I get an error next time I run test2.py.
>>>
>>> ###
>>> Mod_python error: "PythonHandler mod_python.publisher"
>>>
>>> Traceback (most recent call last):
>>>
>>>  File "/usr/lib/python2.4/site-packages/mod_python/apache.py", line
>>> 299, in HandlerDispatch
>>>    result = object(req)
>>>
>>>  File "/usr/lib/python2.4/site-packages/mod_python/publisher.py",
>>> line 213, in handler
>>>    published = publish_object(req, object)
>>>
>>>  File "/usr/lib/python2.4/site-packages/mod_python/publisher.py",
>>> line 412, in publish_object
>>>    return publish_object(req,util.apply_fs_data(object, req.form,  
>>> req=req))
>>>
>>>  File "/usr/lib/python2.4/site-packages/mod_python/util.py", line
>>> 439, in apply_fs_data
>>>    return object(**args)
>>>
>>>  File "/var/www/app/test2.py", line 8, in index
>>>    config = apache.import_module("config")
>>>
>>>  File "/usr/lib/python2.4/site-packages/mod_python/apache.py", line
>>> 461, in import_module
>>>    f, p, d = imp.find_module(parts[i], path)
>>>
>>> ImportError: No module named config
>>> ###
>>>
>>> Why does this initially work but then stop working once I add a
>>> directory to my path?  I can fix it by adding '/var/www/app' to my
>>> PythonPath as well, but I don't understand why it didn't work before
>>> that.
>>
>> That is just how mod_python has always worked. Setting PythonPath
>> stops mod_python looking in the directory the handler was specified
>> for. Yes it is a pain. FWIW, this behaviour changes in mod_python 3.3
>> where the whole issue of module importing is dealt with a bit  
>> differently
>> and is much more consistent and predictable.
>>
>> Current versions of mod_python have a lot of issues when it comes
>> to the module importer. You should really have a read of:
>>
>>   http://www.dscpl.com.au/wiki/ModPython/Articles/ 
>> ModuleImportingIsBroken
>>
>>> 3) Cheetah and #include
>>>
>>> I have read a lot about why mod_python sets the current working
>>> directory to '/', but this seems to be causing some larger problems
>>> when cheetah comes into play.  (3) and (4) discuss two issues that I
>>> am having trouble with.
>>>
>>> Here is /var/www/app/templates/testPage.tmpl:
>>> ###
>>> #include 'header_include.tmpl'
>>> <head>
>>> <title>$title</title>
>>> </head>
>>> <body>
>>> <p>$message</p>
>>> </body>
>>> #include 'footer_include.tmpl'
>>> ###
>>>
>>> However, as this actually tries to load /header_include.tmpl and
>>> /footer_include.tmpl instead of the ones located in my templates
>>> directory, this will not work.
>>
>> If you are going to use compiled templates, you are possibly  
>> better off using
>> a site page base class and have specific pages extend that page.  
>> These
>> common blocks are then accessible through the base class. This  
>> means you
>> get the benefit of compiled code for the included blocks as well,  
>> instead of
>> it having to be interpreted each time.
>>
>>> I came up with two workarounds,
>>> however I don't really love either:
>>>
>>> a)
>>>
>>> ###
>>> #include os.path.join(os.path.dirname(__file__),  
>>> 'header_include.tmpl')
>>> <head>
>>> <title>$title</title>
>>> </head>
>>> <body>
>>> <p>$message</p>
>>> </body>
>>> #include os.path.join(os.path.dirname(__file__),  
>>> 'footer_include.tmpl')
>>> ###
>>>
>>> b)
>>>
>>> Actually pass $templatesDir into all of my templates and then  
>>> instead call:
>>>
>>> ###
>>> #include os.path.join(templatesDir, 'header_include.tmpl')
>>> <head>
>>> <title>$title</title>
>>> </head>
>>> <body>
>>> <p>$message</p>
>>> </body>
>>> #include os.path.join(templatesDir, 'footer_include.tmpl')
>>> ###
>>>
>>> I guess I'm leaning toward (a), but both seem cumbersome and slower
>>> than necessary.  Is there a better way to do this?
>>
>> If my memory of Cheetah is correct, then extending from a site  
>> page which
>> has reusable bits like this as I describe above is better.
>>
>>> 4) Cheetah and inheritance
>>>
>>> Assume these two files:
>>>
>>> /var/www/app/templates/overall_base.tmpl
>>> ###
>>> <?xml version="1.0" encoding="UTF-8"?>
>>> <!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1//EN"
>>>          "http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd">
>>> <html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en">
>>> <head>
>>>    <title>$title</title>
>>> </head>
>>> <body>
>>>    $bodyContent
>>> </body>
>>> </html>
>>> ###
>>>
>>> /var/www/app/templates/overall_base_extender.tmpl
>>> ###
>>> #overall_base = apache.import_module("overall_base")
>>> (or)
>>> #from overall_base import overall_base
>>>
>>> #extends overall_base
>>> #def title
>>> Welcome to Foo
>>> #end def
>>> #def bodyContent
>>> Hello world!
>>> #end def
>>>
>>> This second file only works if I add /var/www/app/templates to my
>>> PythonPath.  And, due to (2) above, I then also have to add
>>> /var/www/app to PythonPath.  Is this really necessary?=
>>
>> With the version of mod_python you are using, yes it is necessary.
>>
>>> #overall_base = apache.import_module("overall_base",
>>> path=[os.path.dirname(__file__)])
>>>
>>> doesn't seem to work inside the cheetah template file.  Even
>>>
>>> #sys.path.append(os.path.dirname(__file__))
>>> #overall_base = apache.import_module("overall_base")
>>
>> That one I am not sure about. You may be hitting one of the other  
>> problems
>> with PythonPath based module importing which is you can't easily  
>> have the
>> same name module in different directories and be sure you import  
>> the one
>> you want.
>>
>> In general I wouldn't recommend using apache.import_module() within
>> Cheetah templates explicitly.
>>
>>> doesn't seem to work.  Is there any way to get inheriting  
>>> templates to
>>> work without modifying PythonPath to include all the directories  
>>> where
>>> my base templates might be located?
>>
>> Not really.
>>
>>> I apologize for the huge length of this e-mail.  I am still  
>>> fairly new
>>> to mod_python and cheetah, but so far I really like what I see.  I
>>> just feel like there are a few issues I need to wrap my head around
>>> before I can really dive into developing applications.  Any pointers
>>> or help with these issues that you can provide would be greatly
>>> appreciated.
>>
>> Things are a bit easier to manage and easier to predict when  
>> mod_python 3.3
>> can be used. Version 3.3 of mod_python hasn't been released yet,  
>> but is quite
>> close. If you want to try the source for mod_python out of the  
>> Subversion
>> repository, then can suggest better ways of doing things.
>>
>> Graham
>> _______________________________________________
>> Mod_python mailing list
>> Mod_python@modpython.org
>> http://mailman.modpython.org/mailman/listinfo/mod_python
>>
>
>
>
>
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
From joseph.r.buehre at boeing.com  Sat Oct 28 19:34:57 2006
From: joseph.r.buehre at boeing.com (Buehre, Joseph R)
Date: Sat Oct 28 19:35:04 2006
Subject: [mod_python] Compiling mod_python HP-UX
In-Reply-To: <1161727216.14868@dscpl.user.openhosting.com>
Message-ID: <C12C17049E23854783042B3D0F25BB67029B7C9B@XCH-MW-2V2.mw.nos.boeing.com>

Graham
Here is the output from doing "make dso" in the src directory, sorry for
the delay.

smrstst2> make dso

Compiling for DSO.

/wwimacs6/apache2/bin/apxs -I/mod_python-3.2.10/src/include
-I/wwimacs6/apache2/include -I/opt/Boeing/python2.4.3/include/python2.4
-c mod_python.c _apachemodule.c requestobject.c tableobject.c util.c
serverobject.c connobject.c filterobject.c hlist.c hlistobject.c
-Wl,-a,archive  -Wl,-E -Wl,+s      -lm
/opt/Boeing/python2.4.3/lib/python2.4/config/libpython2.4.a   -lnsl -lrt
-ldld  -lpthread   -lm
/wwimacs6/apache2/build/libtool --silent --mode=compile
/opt/ansic/bin/cc -prefer-pic -O3 -DSSL_EXPERIMENTAL -DSSL_ENGINE
-D_REENTRANT -Ae +DAportable  -DHPUX11 -D_REENTRANT
-D_XOPEN_SOURCE_EXTENDED  -I/wwimacs6/apache2/include
-I/wwimacs6/apache2/include   -I/wwimacs6/apache2/include
-I/mod_python-3.2.10/src/include -I/wwimacs6/apache2/include
-I/opt/Boeing/python2.4.3/include/python2.4  -c -o mod_python.lo
mod_python.c && touch mod_python.slo
cc: "mod_python.c", line 313: warning 611: Type conversion loses "const"
qualifier.
cc: "mod_python.c", line 313: warning 563: Argument #1 is not the
correct type.
cc: "mod_python.c", line 427: warning 611: Type conversion loses "const"
qualifier.
cc: "mod_python.c", line 458: warning 611: Type conversion loses "const"
qualifier.
cc: "mod_python.c", line 540: warning 611: Type conversion loses "const"
qualifier.
/wwimacs6/apache2/build/libtool --silent --mode=compile
/opt/ansic/bin/cc -prefer-pic -O3 -DSSL_EXPERIMENTAL -DSSL_ENGINE
-D_REENTRANT -Ae +DAportable  -DHPUX11 -D_REENTRANT
-D_XOPEN_SOURCE_EXTENDED  -I/wwimacs6/apache2/include
-I/wwimacs6/apache2/include   -I/wwimacs6/apache2/include
-I/mod_python-3.2.10/src/include -I/wwimacs6/apache2/include
-I/opt/Boeing/python2.4.3/include/python2.4  -c -o _apachemodule.lo
_apachemodule.c && touch _apachemodule.slo
/wwimacs6/apache2/build/libtool --silent --mode=compile
/opt/ansic/bin/cc -prefer-pic -O3 -DSSL_EXPERIMENTAL -DSSL_ENGINE
-D_REENTRANT -Ae +DAportable  -DHPUX11 -D_REENTRANT
-D_XOPEN_SOURCE_EXTENDED  -I/wwimacs6/apache2/include
-I/wwimacs6/apache2/include   -I/wwimacs6/apache2/include
-I/mod_python-3.2.10/src/include -I/wwimacs6/apache2/include
-I/opt/Boeing/python2.4.3/include/python2.4  -c -o requestobject.lo
requestobject.c && touch requestobject.slo
cc: "requestobject.c", line 426: warning 611: Type conversion loses
"const" qualifier.
cc: "requestobject.c", line 427: warning 604: Pointers are not
assignment-compatible.
cc: "requestobject.c", line 1447: warning 604: Pointers are not
assignment-compatible.
cc: "requestobject.c", line 1454: warning 604: Pointers are not
assignment-compatible.
cc: "requestobject.c", line 1569: warning 604: Pointers are not
assignment-compatible.
/wwimacs6/apache2/build/libtool --silent --mode=compile
/opt/ansic/bin/cc -prefer-pic -O3 -DSSL_EXPERIMENTAL -DSSL_ENGINE
-D_REENTRANT -Ae +DAportable  -DHPUX11 -D_REENTRANT
-D_XOPEN_SOURCE_EXTENDED  -I/wwimacs6/apache2/include
-I/wwimacs6/apache2/include   -I/wwimacs6/apache2/include
-I/mod_python-3.2.10/src/include -I/wwimacs6/apache2/include
-I/opt/Boeing/python2.4.3/include/python2.4  -c -o tableobject.lo
tableobject.c && touch tableobject.slo
cc: "tableobject.c", line 1057: warning 604: Pointers are not
assignment-compatible.
/wwimacs6/apache2/build/libtool --silent --mode=compile
/opt/ansic/bin/cc -prefer-pic -O3 -DSSL_EXPERIMENTAL -DSSL_ENGINE
-D_REENTRANT -Ae +DAportable  -DHPUX11 -D_REENTRANT
-D_XOPEN_SOURCE_EXTENDED  -I/wwimacs6/apache2/include
-I/wwimacs6/apache2/include   -I/wwimacs6/apache2/include
-I/mod_python-3.2.10/src/include -I/wwimacs6/apache2/include
-I/opt/Boeing/python2.4.3/include/python2.4  -c -o util.lo util.c &&
touch util.slo
/wwimacs6/apache2/build/libtool --silent --mode=compile
/opt/ansic/bin/cc -prefer-pic -O3 -DSSL_EXPERIMENTAL -DSSL_ENGINE
-D_REENTRANT -Ae +DAportable  -DHPUX11 -D_REENTRANT
-D_XOPEN_SOURCE_EXTENDED  -I/wwimacs6/apache2/include
-I/wwimacs6/apache2/include   -I/wwimacs6/apache2/include
-I/mod_python-3.2.10/src/include -I/wwimacs6/apache2/include
-I/opt/Boeing/python2.4.3/include/python2.4  -c -o serverobject.lo
serverobject.c && touch serverobject.slo
cc: "serverobject.c", line 351: warning 604: Pointers are not
assignment-compatible.
/wwimacs6/apache2/build/libtool --silent --mode=compile
/opt/ansic/bin/cc -prefer-pic -O3 -DSSL_EXPERIMENTAL -DSSL_ENGINE
-D_REENTRANT -Ae +DAportable  -DHPUX11 -D_REENTRANT
-D_XOPEN_SOURCE_EXTENDED  -I/wwimacs6/apache2/include
-I/wwimacs6/apache2/include   -I/wwimacs6/apache2/include
-I/mod_python-3.2.10/src/include -I/wwimacs6/apache2/include
-I/opt/Boeing/python2.4.3/include/python2.4  -c -o connobject.lo
connobject.c && touch connobject.slo
/wwimacs6/apache2/build/libtool --silent --mode=compile
/opt/ansic/bin/cc -prefer-pic -O3 -DSSL_EXPERIMENTAL -DSSL_ENGINE
-D_REENTRANT -Ae +DAportable  -DHPUX11 -D_REENTRANT
-D_XOPEN_SOURCE_EXTENDED  -I/wwimacs6/apache2/include
-I/wwimacs6/apache2/include   -I/wwimacs6/apache2/include
-I/mod_python-3.2.10/src/include -I/wwimacs6/apache2/include
-I/opt/Boeing/python2.4.3/include/python2.4  -c -o filterobject.lo
filterobject.c && touch filterobject.slo
/wwimacs6/apache2/build/libtool --silent --mode=compile
/opt/ansic/bin/cc -prefer-pic -O3 -DSSL_EXPERIMENTAL -DSSL_ENGINE
-D_REENTRANT -Ae +DAportable  -DHPUX11 -D_REENTRANT
-D_XOPEN_SOURCE_EXTENDED  -I/wwimacs6/apache2/include
-I/wwimacs6/apache2/include   -I/wwimacs6/apache2/include
-I/mod_python-3.2.10/src/include -I/wwimacs6/apache2/include
-I/opt/Boeing/python2.4.3/include/python2.4  -c -o hlist.lo hlist.c &&
touch hlist.slo
/wwimacs6/apache2/build/libtool --silent --mode=compile
/opt/ansic/bin/cc -prefer-pic -O3 -DSSL_EXPERIMENTAL -DSSL_ENGINE
-D_REENTRANT -Ae +DAportable  -DHPUX11 -D_REENTRANT
-D_XOPEN_SOURCE_EXTENDED  -I/wwimacs6/apache2/include
-I/wwimacs6/apache2/include   -I/wwimacs6/apache2/include
-I/mod_python-3.2.10/src/include -I/wwimacs6/apache2/include
-I/opt/Boeing/python2.4.3/include/python2.4  -c -o hlistobject.lo
hlistobject.c && touch hlistobject.slo
/wwimacs6/apache2/build/libtool --silent --mode=link /opt/ansic/bin/cc
-o mod_python.la -I/mod_python-3.2.10/src/include
-I/wwimacs6/apache2/include -I/opt/Boeing/python2.4.3/include/python2.4
-rpath /wwimacs6/apache2/modules -module -avoid-version
hlistobject.lo hlist.lo filterobject.lo connobject.lo serverobject.lo
util.lo tableobject.lo requestobject.lo _apachemodule.lo mod_python.lo
-Wl,-a,archive -Wl,-E -Wl,+s -lm
/opt/Boeing/python2.4.3/lib/python2.4/config/libpython2.4.a -lnsl -lrt
-ldld -lpthread -lm

*** Warning: Trying to link with static lib archive
/opt/Boeing/python2.4.3/lib/python2.4/config/libpython2.4.a.
*** I have the capability to make that library automatically link in
when
*** you link to this library.  But I can only do this if you have a
*** shared version of the library, which you do not appear to have
*** because the file extensions .a of this argument makes me believe
*** that it is just a static archive that I should not used here. 


Thanks, 
Joe Buehre 
Mission Critical Systems Support 
314-791-9725

 mailto:joseph.r.buehre@boeing.com


-----Original Message-----
From: Graham Dumpleton [mailto:grahamd@dscpl.com.au] 
Sent: Tuesday, October 24, 2006 5:00 PM
To: Buehre, Joseph R
Cc: mod_python@modpython.org
Subject: Re: [mod_python] Compiling mod_python HP-UX

Buehre, Joseph R wrote ..
> Has anyone sucessfully compiled mod_python on HP-UX with apache 2.0 
> and the last release of mod_python. My compile comes out with no 
> errors but does not create the mod_python.so file.

It has been noted that although sometimes a .so isn't generated and
errors are generated, but the build process still continues. Because the
creation of the .so is not the last thing in the build, the actual error
messages can be buried in the middle of the build output. Thus, make
sure you go back through the whole build output looking for anything
that looks like an error or warning, don't expect that it will be at the
end and that the build will stop with an error.

Also trying going:

  cd src
  make dso

What is the output you get from doing just that?

Graham

From grahamd at dscpl.com.au  Sat Oct 28 19:47:04 2006
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Sat Oct 28 19:48:12 2006
Subject: [mod_python] Compiling mod_python HP-UX
References: <C12C17049E23854783042B3D0F25BB67029B7C9C@XCH-MW-2V2.mw.nos.boeing.com>
Message-ID: <07A57D2E-1C81-4B21-9AC7-07D1CAF00D2A@dscpl.com.au>

Please try and keep discussion on the list.

Bar suggesting you rebuild Python with:

   --enable-shared

to configure, I don't know. But others might, thus why good idea to
keep it all information on the list as some part of it may mean
something to someone.

Begin forwarded message:

> From: "Buehre, Joseph R" <joseph.r.buehre@boeing.com>
> Date: 29 October 2006 10:41:04 AM
> To: "Graham Dumpleton" <grahamd@dscpl.com.au>
> Subject: RE: [mod_python] Compiling mod_python HP-UX
>
> Just some added information after running make dso it creates a
> mod_python.so link in the "src" directory pointing to
> .libs/mod_python.so which does not exist. The only files in the  
> ".libs"
> directory is mod_python.a, mod_python.la link pointing to
> ../mod_python.la, mod_python.lai and mod_python.sl files
>
>
> Thanks,
> Joe Buehre
> Mission Critical Systems Support
> 314-791-9725
>
>  mailto:joseph.r.buehre@boeing.com
>
>
> -----Original Message-----
> From: Graham Dumpleton [mailto:grahamd@dscpl.com.au]
> Sent: Tuesday, October 24, 2006 5:00 PM
> To: Buehre, Joseph R
> Cc: mod_python@modpython.org
> Subject: Re: [mod_python] Compiling mod_python HP-UX
>
> Buehre, Joseph R wrote ..
>> Has anyone sucessfully compiled mod_python on HP-UX with apache 2.0
>> and the last release of mod_python. My compile comes out with no
>> errors but does not create the mod_python.so file.
>
> It has been noted that although sometimes a .so isn't generated and
> errors are generated, but the build process still continues.  
> Because the
> creation of the .so is not the last thing in the build, the actual  
> error
> messages can be buried in the middle of the build output. Thus, make
> sure you go back through the whole build output looking for anything
> that looks like an error or warning, don't expect that it will be  
> at the
> end and that the build will stop with an error.
>
> Also trying going:
>
>   cd src
>   make dso
>
> What is the output you get from doing just that?
>
> Graham
From joseph.r.buehre at boeing.com  Sat Oct 28 19:50:17 2006
From: joseph.r.buehre at boeing.com (Buehre, Joseph R)
Date: Sat Oct 28 19:50:20 2006
Subject: [mod_python] Compiling mod_python HP-UX
In-Reply-To: <07A57D2E-1C81-4B21-9AC7-07D1CAF00D2A@dscpl.com.au>
Message-ID: <C12C17049E23854783042B3D0F25BB67029B7C9D@XCH-MW-2V2.mw.nos.boeing.com>

 python was built with --enable-shared


Thanks, 
Joe Buehre 
Mission Critical Systems Support 
314-791-9725

 mailto:joseph.r.buehre@boeing.com


-----Original Message-----
From: Graham Dumpleton [mailto:grahamd@dscpl.com.au] 
Sent: Saturday, October 28, 2006 6:47 PM
To: mod_python@modpython.org 'mod_python@modpython.org'
Cc: Buehre, Joseph R
Subject: Re: [mod_python] Compiling mod_python HP-UX

Please try and keep discussion on the list.

Bar suggesting you rebuild Python with:

   --enable-shared

to configure, I don't know. But others might, thus why good idea to keep
it all information on the list as some part of it may mean something to
someone.

Begin forwarded message:

> From: "Buehre, Joseph R" <joseph.r.buehre@boeing.com>
> Date: 29 October 2006 10:41:04 AM
> To: "Graham Dumpleton" <grahamd@dscpl.com.au>
> Subject: RE: [mod_python] Compiling mod_python HP-UX
>
> Just some added information after running make dso it creates a 
> mod_python.so link in the "src" directory pointing to 
> .libs/mod_python.so which does not exist. The only files in the 
> ".libs"
> directory is mod_python.a, mod_python.la link pointing to 
> ../mod_python.la, mod_python.lai and mod_python.sl files
>
>
> Thanks,
> Joe Buehre
> Mission Critical Systems Support
> 314-791-9725
>
>  mailto:joseph.r.buehre@boeing.com
>
>
> -----Original Message-----
> From: Graham Dumpleton [mailto:grahamd@dscpl.com.au]
> Sent: Tuesday, October 24, 2006 5:00 PM
> To: Buehre, Joseph R
> Cc: mod_python@modpython.org
> Subject: Re: [mod_python] Compiling mod_python HP-UX
>
> Buehre, Joseph R wrote ..
>> Has anyone sucessfully compiled mod_python on HP-UX with apache 2.0 
>> and the last release of mod_python. My compile comes out with no 
>> errors but does not create the mod_python.so file.
>
> It has been noted that although sometimes a .so isn't generated and 
> errors are generated, but the build process still continues.
> Because the
> creation of the .so is not the last thing in the build, the actual 
> error messages can be buried in the middle of the build output. Thus, 
> make sure you go back through the whole build output looking for 
> anything that looks like an error or warning, don't expect that it 
> will be at the end and that the build will stop with an error.
>
> Also trying going:
>
>   cd src
>   make dso
>
> What is the output you get from doing just that?
>
> Graham

From grahamd at dscpl.com.au  Sat Oct 28 19:56:18 2006
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Sat Oct 28 19:57:33 2006
Subject: [mod_python] Compiling mod_python HP-UX
In-Reply-To: <C12C17049E23854783042B3D0F25BB67029B7C9D@XCH-MW-2V2.mw.nos.boeing.com>
References: <C12C17049E23854783042B3D0F25BB67029B7C9D@XCH-MW-2V2.mw.nos.boeing.com>
Message-ID: <D977DEC1-C0D7-4FD5-BF52-A27BE27420D5@dscpl.com.au>

Maybe change the Makefile so that instead of linking in with:

   /opt/Boeing/python2.4.3/lib/python2.4/config/libpython2.4.a

it links in with:

   /opt/Boeing/python2.4.3/lib/python2.4/config/libpython2.4.sl

or use:

   -L/opt/Boeing/python2.4.3/lib/python2.4/config -lpython2.4

That is if my memory is correct and shared library extension on
HPUX is .sl and hasn't been changed.

Graham

On 29/10/2006, at 10:50 AM, Buehre, Joseph R wrote:

>  python was built with --enable-shared
>
>
> Thanks,
> Joe Buehre
> Mission Critical Systems Support
> 314-791-9725
>
>  mailto:joseph.r.buehre@boeing.com
>
>
> -----Original Message-----
> From: Graham Dumpleton [mailto:grahamd@dscpl.com.au]
> Sent: Saturday, October 28, 2006 6:47 PM
> To: mod_python@modpython.org 'mod_python@modpython.org'
> Cc: Buehre, Joseph R
> Subject: Re: [mod_python] Compiling mod_python HP-UX
>
> Please try and keep discussion on the list.
>
> Bar suggesting you rebuild Python with:
>
>    --enable-shared
>
> to configure, I don't know. But others might, thus why good idea to  
> keep
> it all information on the list as some part of it may mean  
> something to
> someone.
>
> Begin forwarded message:
>
>> From: "Buehre, Joseph R" <joseph.r.buehre@boeing.com>
>> Date: 29 October 2006 10:41:04 AM
>> To: "Graham Dumpleton" <grahamd@dscpl.com.au>
>> Subject: RE: [mod_python] Compiling mod_python HP-UX
>>
>> Just some added information after running make dso it creates a
>> mod_python.so link in the "src" directory pointing to
>> .libs/mod_python.so which does not exist. The only files in the
>> ".libs"
>> directory is mod_python.a, mod_python.la link pointing to
>> ../mod_python.la, mod_python.lai and mod_python.sl files
>>
>>
>> Thanks,
>> Joe Buehre
>> Mission Critical Systems Support
>> 314-791-9725
>>
>>  mailto:joseph.r.buehre@boeing.com
>>
>>
>> -----Original Message-----
>> From: Graham Dumpleton [mailto:grahamd@dscpl.com.au]
>> Sent: Tuesday, October 24, 2006 5:00 PM
>> To: Buehre, Joseph R
>> Cc: mod_python@modpython.org
>> Subject: Re: [mod_python] Compiling mod_python HP-UX
>>
>> Buehre, Joseph R wrote ..
>>> Has anyone sucessfully compiled mod_python on HP-UX with apache 2.0
>>> and the last release of mod_python. My compile comes out with no
>>> errors but does not create the mod_python.so file.
>>
>> It has been noted that although sometimes a .so isn't generated and
>> errors are generated, but the build process still continues.
>> Because the
>> creation of the .so is not the last thing in the build, the actual
>> error messages can be buried in the middle of the build output. Thus,
>> make sure you go back through the whole build output looking for
>> anything that looks like an error or warning, don't expect that it
>> will be at the end and that the build will stop with an error.
>>
>> Also trying going:
>>
>>   cd src
>>   make dso
>>
>> What is the output you get from doing just that?
>>
>> Graham

From thkatsou at yahoo.gr  Sat Oct 28 20:40:35 2006
From: thkatsou at yahoo.gr (Thimios Katsoulis)
Date: Sat Oct 28 20:40:42 2006
Subject: =?iso-8859-7?q?=C8=DD=EC=E1:=20Re:=20=C8=DD=EC=E1:=20Re:=20[mod=5Fpython]?=
	=?iso-8859-7?q?=20Http=20Response=20None=20-=20=20Page=20renders=20as=20Tex?=
	t?=
In-Reply-To: <FEF3B0B3-EBB2-4AA2-B680-41BF0845D6E4@dscpl.com.au>
Message-ID: <20061029004035.50629.qmail@web23309.mail.ird.yahoo.com>


--- Graham Dumpleton <grahamd@dscpl.com.au> ??????:

> Are you sure the SiteBuilder stuff isn't writing its
> own response  
> back through
> the request object and returning None as the result,
> which you then  
> are also
> converting to a string and also writing back in the
> response?
> 
> Have you tried using logging to output to the Apache
> error log bits  
> about what
> is going on? Ie., what goes into the log if you
> output what data is?
> 
>    apache.log_error('myoutput=%s', data)
> 
> Graham
> 
> On 29/10/2006, at 5:14 AM, Thimios Katsoulis wrote:
> 
> >
> > --- Graham Dumpleton <grahamd@dscpl.com.au>
> ??????:
> >
> >> Try not setting a content length. You might be
> >> getting the content
> >> length wrong and screwing up any HTTP 1.1
> pipelining
> >> of requests.
> >> Ie., overlength data from a prior request is
> coming
> >> through as start
> >> of subsequent request.
> >>
> >> Graham
> >
> > If I do that I have the situation with chunked
> > responses etc.
> > Anyway I Have tried that but did not make any
> good.
> >
> > One other thing I noticed is , if I try to append
> > something more to the data string for example :
> >
> > data=str(data)
> > data += '<br/>something<br/>'
> >
> > the string appended will appear after None :
> >
> > None<br/>something<br/>HTTP/1.1 200 OK
> > Date: Sat, 28 Oct 2006 10:13:32 GMT
> > Server: Apache/2.0.55 (Ubuntu) mod_python/3.1.4
> >
> > ....
> >
> > Anyway this problem is really strange it happens
> only
> > from a client pc and this is my main home server .
> >
> > I  tried to use a proxy for firefox and the
> problem
> > disappeared
> > (the proxy is on the same machine that the problem
> > occurs) .
> > Anyway I 'll by bypass it for the time since I
> dont
> > notice this behavior in any other lan pc.
> >
> >


I think you are right.

In one case in my SiteBuilder script I was doing a
req.internal_redirect and thus returning nothing .
All I did was reading from the req Object (not calling
any write method), except from this one call to
internal_redirect .
I fixed that and I haven't noticed the problem again .

Thanks for your time .






	

	
		
___________________________________________________________ 
?????????????? Yahoo!; 
?????????? ?? ?????????? ???????? (spam); ?? Yahoo! Mail 
???????? ??? ???????? ?????? ????????? ???? ??? ??????????? 
????????? http://login.yahoo.com/config/mail?.intl=gr 

From gdamjan at gmail.com  Sat Oct 28 21:29:16 2006
From: gdamjan at gmail.com (Damjan Georgievski)
Date: Sat Oct 28 21:29:30 2006
Subject: [mod_python] Caching pages
In-Reply-To: <28f0f01f0610281827p12240c35qe75e228c77847914@mail.gmail.com>
References: <3C4FEB86-76D9-4758-9E03-9D19987F0460@gmail.com>
	<28f0f01f0610281827p12240c35qe75e228c77847914@mail.gmail.com>
Message-ID: <28f0f01f0610281829mdcfaa49vdfec21c17505ab53@mail.gmail.com>

> Is there a builtin interface in mod_python that would allow for caching a
> generated page? Using Sessions doesn't work because I want the cache to be
> for every user who accesses the page. I tried using Session.Session(req, '0'
> * 32), but that didn't seem to work. I've looked at mod_python.cache, but
> there doesn't seem to be any documentation.

You could also use WSGI caching middleware... there are several
implementations for it.
http://cheeseshop.python.org/pypi/wsgistate/ for example.

http://wsgi.org/wsgi/Middleware_and_Utilities


ps.
CAN PLEASE THE ADMIN CONFIGURE THE LIST TO DEFAULT TO "REPLY TO LIST"
BEHAVIUOR?  *** PLEASE ***
From clodoaldo.pinto at gmail.com  Sun Oct 29 15:41:05 2006
From: clodoaldo.pinto at gmail.com (Clodoaldo Pinto Neto)
Date: Sun Oct 29 15:41:10 2006
Subject: [mod_python] Can i have both Marshal and Signed Cookies with
	Publisher?
Message-ID: <a595de7a0610291241v56f95e13y7c8082079f0e31c4@mail.gmail.com>

If i set both a Signed and a Marshal cookie and try to retrieve the
Marshal one using the Publisher i get this error:

----------------------------------------
Mod_python error: "PythonHandler mod_python.publisher"

Traceback (most recent call last):

  File "/usr/lib/python2.4/site-packages/mod_python/apache.py", line
299, in HandlerDispatch
    result = object(req)

  File "/usr/lib/python2.4/site-packages/mod_python/publisher.py",
line 213, in handler
    published = publish_object(req, object)

  File "/usr/lib/python2.4/site-packages/mod_python/publisher.py",
line 412, in publish_object
    return publish_object(req,util.apply_fs_data(object, req.form, req=req))

  File "/usr/lib/python2.4/site-packages/mod_python/util.py", line
439, in apply_fs_data
    return object(**args)

  File "/var/www/html/teste/python/publisher/marshalcookie.py", line
10, in index
    marshal_cookies = Cookie.get_cookies(

  File "/usr/lib/python2.4/site-packages/mod_python/Cookie.py", line
350, in get_cookies
    return Class.parse(cookies, **kw)

  File "/usr/lib/python2.4/site-packages/mod_python/Cookie.py", line
252, in parse
    c.unmarshal(secret)

  File "/usr/lib/python2.4/site-packages/mod_python/Cookie.py", line
280, in unmarshal
    self.value = marshal.loads(base64.decodestring(self.value))

  File "/usr/lib/python2.4/base64.py", line 319, in decodestring
    return binascii.a2b_base64(s)

Error: Incorrect padding
---------------------------------------------

If the Signed cookie is deleted then the Marshal cookie can be
retrieved with no errors.

The scripts that trigger the error are:

Set and retrieve the Signed cookie:
http://webpython.codepoint.net/mod_python_publisher_cookies_signed

Set and retrieve the Marshal cookie:
http://webpython.codepoint.net/mod_python_publisher_cookies_marshal

I'm just building that tutorial. BTW i would appreciate to have it
corrected by the experts.

I tested in Firefox 1.5.0.7 and Opera 9.02. FC5, mod_python 3.2.8, Apache 2.2.2.

Regards, Clodoaldo Pinto Neto
From grahamd at dscpl.com.au  Sun Oct 29 16:09:51 2006
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Sun Oct 29 16:09:55 2006
Subject: [mod_python] Can i have both Marshal and Signed Cookies
	withPublisher?
Message-ID: <1162156191.12084@dscpl.user.openhosting.com>

That would be understandable. The Cookie.get_cookies() expects you
to supply a class type and since there are multiple cookies stored of
differing types then the class type supplied may not be able to unpack
all of them.

There probably needs to be a Cookie.get_cookie() so you can say that
you only want to get a specific cookie by name. Not sure I understand
why there isn't one already unless I am missing something.

Besides writing your own version of Cookie.get_cookie(), the only other
way of getting around the problem for now is to set the 'path' attribute
of the cookies so that the cookies only get delivered to their respective
applications. But then, even that isn't necessarily going to help in all
cases because sessions use cookies as well, so it you want to use a
marshalled cookie in the same context as a session is used you are
similarly going to have a problem if the session is signed.

Graham

Clodoaldo Pinto Neto wrote ..
> If i set both a Signed and a Marshal cookie and try to retrieve the
> Marshal one using the Publisher i get this error:
> 
> ----------------------------------------
> Mod_python error: "PythonHandler mod_python.publisher"
> 
> Traceback (most recent call last):
> 
>   File "/usr/lib/python2.4/site-packages/mod_python/apache.py", line
> 299, in HandlerDispatch
>     result = object(req)
> 
>   File "/usr/lib/python2.4/site-packages/mod_python/publisher.py",
> line 213, in handler
>     published = publish_object(req, object)
> 
>   File "/usr/lib/python2.4/site-packages/mod_python/publisher.py",
> line 412, in publish_object
>     return publish_object(req,util.apply_fs_data(object, req.form, req=req))
> 
>   File "/usr/lib/python2.4/site-packages/mod_python/util.py", line
> 439, in apply_fs_data
>     return object(**args)
> 
>   File "/var/www/html/teste/python/publisher/marshalcookie.py", line
> 10, in index
>     marshal_cookies = Cookie.get_cookies(
> 
>   File "/usr/lib/python2.4/site-packages/mod_python/Cookie.py", line
> 350, in get_cookies
>     return Class.parse(cookies, **kw)
> 
>   File "/usr/lib/python2.4/site-packages/mod_python/Cookie.py", line
> 252, in parse
>     c.unmarshal(secret)
> 
>   File "/usr/lib/python2.4/site-packages/mod_python/Cookie.py", line
> 280, in unmarshal
>     self.value = marshal.loads(base64.decodestring(self.value))
> 
>   File "/usr/lib/python2.4/base64.py", line 319, in decodestring
>     return binascii.a2b_base64(s)
> 
> Error: Incorrect padding
> ---------------------------------------------
> 
> If the Signed cookie is deleted then the Marshal cookie can be
> retrieved with no errors.
> 
> The scripts that trigger the error are:
> 
> Set and retrieve the Signed cookie:
> http://webpython.codepoint.net/mod_python_publisher_cookies_signed
> 
> Set and retrieve the Marshal cookie:
> http://webpython.codepoint.net/mod_python_publisher_cookies_marshal
> 
> I'm just building that tutorial. BTW i would appreciate to have it
> corrected by the experts.
> 
> I tested in Firefox 1.5.0.7 and Opera 9.02. FC5, mod_python 3.2.8, Apache
> 2.2.2.
> 
> Regards, Clodoaldo Pinto Neto
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
From grahamd at dscpl.com.au  Sun Oct 29 17:32:53 2006
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Sun Oct 29 17:32:55 2006
Subject: [mod_python] Can i have both Marshal and Signed
	CookieswithPublisher?
Message-ID: <1162161173.20512@dscpl.user.openhosting.com>

I have created a JIRA issue for this at:

  http://issues.apache.org/jira/browse/MODPYTHON-200

At the moment I have made changes (not committed), that would allow
one to do:

    cookies = Cookie.get_cookies(req, Cookie.MarshalCookie, secret='secret', names=['marshal'])

That is, when using Cookie.get_cookies(), one can optionally provide a
keyword argument called 'names' which is a set/list of cookie names
to decode.

As a convenience, also have function for getting just one cookie.

    cookie = Cookie.get_cookie(req, 'marshal', Cookie.MarshalCookie, secret='secret')

In this latter function, of cookie doesn't exist, it would return None.

Does this sound reasonable?

Graham

Graham Dumpleton wrote ..
> That would be understandable. The Cookie.get_cookies() expects you
> to supply a class type and since there are multiple cookies stored of
> differing types then the class type supplied may not be able to unpack
> all of them.
> 
> There probably needs to be a Cookie.get_cookie() so you can say that
> you only want to get a specific cookie by name. Not sure I understand
> why there isn't one already unless I am missing something.
> 
> Besides writing your own version of Cookie.get_cookie(), the only other
> way of getting around the problem for now is to set the 'path' attribute
> of the cookies so that the cookies only get delivered to their respective
> applications. But then, even that isn't necessarily going to help in all
> cases because sessions use cookies as well, so it you want to use a
> marshalled cookie in the same context as a session is used you are
> similarly going to have a problem if the session is signed.
> 
> Graham
> 
> Clodoaldo Pinto Neto wrote ..
> > If i set both a Signed and a Marshal cookie and try to retrieve the
> > Marshal one using the Publisher i get this error:
> > 
> > ----------------------------------------
> > Mod_python error: "PythonHandler mod_python.publisher"
> > 
> > Traceback (most recent call last):
> > 
> >   File "/usr/lib/python2.4/site-packages/mod_python/apache.py", line
> > 299, in HandlerDispatch
> >     result = object(req)
> > 
> >   File "/usr/lib/python2.4/site-packages/mod_python/publisher.py",
> > line 213, in handler
> >     published = publish_object(req, object)
> > 
> >   File "/usr/lib/python2.4/site-packages/mod_python/publisher.py",
> > line 412, in publish_object
> >     return publish_object(req,util.apply_fs_data(object, req.form, req=req))
> > 
> >   File "/usr/lib/python2.4/site-packages/mod_python/util.py", line
> > 439, in apply_fs_data
> >     return object(**args)
> > 
> >   File "/var/www/html/teste/python/publisher/marshalcookie.py", line
> > 10, in index
> >     marshal_cookies = Cookie.get_cookies(
> > 
> >   File "/usr/lib/python2.4/site-packages/mod_python/Cookie.py", line
> > 350, in get_cookies
> >     return Class.parse(cookies, **kw)
> > 
> >   File "/usr/lib/python2.4/site-packages/mod_python/Cookie.py", line
> > 252, in parse
> >     c.unmarshal(secret)
> > 
> >   File "/usr/lib/python2.4/site-packages/mod_python/Cookie.py", line
> > 280, in unmarshal
> >     self.value = marshal.loads(base64.decodestring(self.value))
> > 
> >   File "/usr/lib/python2.4/base64.py", line 319, in decodestring
> >     return binascii.a2b_base64(s)
> > 
> > Error: Incorrect padding
> > ---------------------------------------------
> > 
> > If the Signed cookie is deleted then the Marshal cookie can be
> > retrieved with no errors.
> > 
> > The scripts that trigger the error are:
> > 
> > Set and retrieve the Signed cookie:
> > http://webpython.codepoint.net/mod_python_publisher_cookies_signed
> > 
> > Set and retrieve the Marshal cookie:
> > http://webpython.codepoint.net/mod_python_publisher_cookies_marshal
> > 
> > I'm just building that tutorial. BTW i would appreciate to have it
> > corrected by the experts.
> > 
> > I tested in Firefox 1.5.0.7 and Opera 9.02. FC5, mod_python 3.2.8, Apache
> > 2.2.2.
> > 
> > Regards, Clodoaldo Pinto Neto
> > _______________________________________________
> > Mod_python mailing list
> > Mod_python@modpython.org
> > http://mailman.modpython.org/mailman/listinfo/mod_python
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
From clodoaldo.pinto at gmail.com  Sun Oct 29 18:24:31 2006
From: clodoaldo.pinto at gmail.com (Clodoaldo Pinto Neto)
Date: Sun Oct 29 18:24:35 2006
Subject: [mod_python] Can i have both Marshal and Signed
	CookieswithPublisher?
In-Reply-To: <1162161173.20512@dscpl.user.openhosting.com>
References: <1162161173.20512@dscpl.user.openhosting.com>
Message-ID: <a595de7a0610291524h407b793av8039a291284e49c5@mail.gmail.com>

2006/10/29, Graham Dumpleton <grahamd@dscpl.com.au>:
> I have created a JIRA issue for this at:
>
>   http://issues.apache.org/jira/browse/MODPYTHON-200
>
> At the moment I have made changes (not committed), that would allow
> one to do:
>
>     cookies = Cookie.get_cookies(req, Cookie.MarshalCookie, secret='secret', names=['marshal'])
>
> That is, when using Cookie.get_cookies(), one can optionally provide a
> keyword argument called 'names' which is a set/list of cookie names
> to decode.

IMHO, the least surprise behavior is if Cookie.get_cookies() returned
all cookies of the given class regardless of how many different cookie
classes there are in the header.

Why isn't the except clause catching the exception? What exception is
being raised?:

    def parse(Class, s, secret):

        dict = _parse_cookie(s, Class)

        for k in dict:
            c = dict[k]
            try:
                c.unmarshal(secret)
            except (CookieError, ValueError):
                # downgrade to Cookie
                dict[k] = Cookie.parse(Cookie.__str__(c))[k]

        return dict

What is the point in downgrading the cookie? If it is tampered or
corrupted then why not just discard it?

Regards, Clodoaldo Pinto Neto
From grahamd at dscpl.com.au  Sun Oct 29 18:54:05 2006
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Sun Oct 29 18:54:12 2006
Subject: [mod_python] Can i have both Marshal and Signed
	CookieswithPublisher?
Message-ID: <1162166045.28323@dscpl.user.openhosting.com>

Clodoaldo Pinto Neto wrote ..
> 2006/10/29, Graham Dumpleton <grahamd@dscpl.com.au>:
> > I have created a JIRA issue for this at:
> >
> >   http://issues.apache.org/jira/browse/MODPYTHON-200
> >
> > At the moment I have made changes (not committed), that would allow
> > one to do:
> >
> >     cookies = Cookie.get_cookies(req, Cookie.MarshalCookie, secret='secret',
> names=['marshal'])
> >
> > That is, when using Cookie.get_cookies(), one can optionally provide
> a
> > keyword argument called 'names' which is a set/list of cookie names
> > to decode.
> 
> IMHO, the least surprise behavior is if Cookie.get_cookies() returned
> all cookies of the given class regardless of how many different cookie
> classes there are in the header.

There is nothing in a cookie string though to be able to identify it as being
of a particular type. The only way you can know is to try and decode it and
if it works then it probably is. This is probably not a good way of doing
things. First off the application should only be decoding its own cookies
and not others which may have been sent to the site in general. Thus, allowing
one to say which cookies to decode is probably a better step.

> Why isn't the except clause catching the exception? What exception is
> being raised?:
>
>     def parse(Class, s, secret):
> 
>         dict = _parse_cookie(s, Class)
> 
>         for k in dict:
>             c = dict[k]
>             try:
>                 c.unmarshal(secret)
>             except (CookieError, ValueError):
>                 # downgrade to Cookie
>                 dict[k] = Cookie.parse(Cookie.__str__(c))[k]
> 
>         return dict

Good point. Probably because the error isn't a CookieError.

> What is the point in downgrading the cookie? If it is tampered or
> corrupted then why not just discard it?

This issue has come up recently in relation to signed Sessions. For
Sessions at least it wasn't a big problem but couldn't get any feedback
on issue in general so nothing done. See:

  http://issues.apache.org/jira/browse/MODPYTHON-191

For how the implementation works, the documentation certainly does
not say that the type of the cookie should be checked, when it should.

To affect some change, some sort of consensus is needed about how
to change it and for there to be a good understanding that this will
not cause problems with existing code. Remember this code was
written many years ago (not by I) and so one always has to be sure
that changes will not break things.

So, please do contribute further feedback and ideas, but when it comes
down to it, unless its obvious a change should be made in a certain
way, if only one person is pushing it, I am not always going to do it.
I would prefer a few people at least to agree, especially when I don't
use a lot of this stuff personally and so don't always know what should
be done. Some times I do make an arbitrary decision to make a change
when I get no feedback, but one of these days it is going to surely
bite me.

Graham
From clodoaldo.pinto at gmail.com  Mon Oct 30 05:59:47 2006
From: clodoaldo.pinto at gmail.com (Clodoaldo Pinto Neto)
Date: Mon Oct 30 06:00:28 2006
Subject: [mod_python] Can i have both Marshal and Signed
	CookieswithPublisher?
In-Reply-To: <1162166045.28323@dscpl.user.openhosting.com>
References: <1162166045.28323@dscpl.user.openhosting.com>
Message-ID: <a595de7a0610300259o2478a5ddob8ef0654fc604d40@mail.gmail.com>

2006/10/29, Graham Dumpleton <grahamd@dscpl.com.au>:
> Clodoaldo Pinto Neto wrote ..
> > 2006/10/29, Graham Dumpleton <grahamd@dscpl.com.au>:
> > IMHO, the least surprise behavior is if Cookie.get_cookies() returned
> > all cookies of the given class regardless of how many different cookie
> > classes there are in the header.
>
> There is nothing in a cookie string though to be able to identify it as being
> of a particular type. The only way you can know is to try and decode it and
> if it works then it probably is.

It is exactly what MarshalCookie.parse() does:

    def parse(Class, s, secret):

        dict = _parse_cookie(s, Class)

        for k in dict:
            c = dict[k]
            try:
                c.unmarshal(secret)
            except (CookieError, ValueError):
                # downgrade to Cookie
                dict[k] = Cookie.parse(Cookie.__str__(c))[k]

        return dict

The problem that is happening is that one exception was not expected
by the original code piece author. The exception is binascii.Error. It
will happen whenever MarshalCookie.parse() tries to parse a Signed
cookie. My proposed fix is just to import binascii and include the
exception:

            try:
                c.unmarshal(secret)
            except (CookieError, ValueError, binascii.Error):
                # downgrade to Cookie
                dict[k] = Cookie.parse(Cookie.__str__(c))[k]

This way MarshalCookie.get_cookies() will behave as per the documentation.

> This is probably not a good way of doing
> things. First off the application should only be decoding its own cookies
> and not others which may have been sent to the site in general. Thus, allowing
> one to say which cookies to decode is probably a better step.

I'm not opposing the new names argument. I just don't know enough
about mod_python to opine on it, although the names argument alone
will not fix the issue: an *expected* error that should be handled by
mod_python. Or better, the names argument will only fix the issue if
it is passed *and* if none of the passed cookie names is a Signed
cookie. A nice addition perhaps, but not a fix.

> > What is the point in downgrading the cookie? If it is tampered or
> > corrupted then why not just discard it?
>
> This issue has come up recently in relation to signed Sessions. For
> Sessions at least it wasn't a big problem but couldn't get any feedback
> on issue in general so nothing done. See:
>
>   http://issues.apache.org/jira/browse/MODPYTHON-191
>
> For how the implementation works, the documentation certainly does
> not say that the type of the cookie should be checked, when it should.
>
> To affect some change, some sort of consensus is needed about how
> to change it and for there to be a good understanding that this will
> not cause problems with existing code. Remember this code was
> written many years ago (not by I) and so one always has to be sure
> that changes will not break things.
>
> So, please do contribute further feedback and ideas, but when it comes
> down to it, unless its obvious a change should be made in a certain
> way, if only one person is pushing it, I am not always going to do it.
> I would prefer a few people at least to agree, especially when I don't
> use a lot of this stuff personally and so don't always know what should
> be done. Some times I do make an arbitrary decision to make a change
> when I get no feedback, but one of these days it is going to surely
> bite me.

You are absolutely right about it. That was just my opinion, and i
didn't invest the minimum amount of time on it.

Regards, Clodoaldo Pinto Neto
From grahamd at dscpl.com.au  Mon Oct 30 16:40:14 2006
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Mon Oct 30 16:40:21 2006
Subject: [mod_python] Can i have both Marshal and Signed
	CookieswithPublisher?
Message-ID: <1162244414.20129@dscpl.user.openhosting.com>

Clodoaldo Pinto Neto wrote ..
> 2006/10/29, Graham Dumpleton <grahamd@dscpl.com.au>:
> > Clodoaldo Pinto Neto wrote ..
> > > 2006/10/29, Graham Dumpleton <grahamd@dscpl.com.au>:
> > > IMHO, the least surprise behavior is if Cookie.get_cookies() returned
> > > all cookies of the given class regardless of how many different cookie
> > > classes there are in the header.
> >
> > There is nothing in a cookie string though to be able to identify it
> as being
> > of a particular type. The only way you can know is to try and decode
> it and
> > if it works then it probably is.
> 
> It is exactly what MarshalCookie.parse() does:

But it is still an assumption because they aren't tagged as being of a
particular type. :-)
 
>     def parse(Class, s, secret):
> 
>         dict = _parse_cookie(s, Class)
> 
>         for k in dict:
>             c = dict[k]
>             try:
>                 c.unmarshal(secret)
>             except (CookieError, ValueError):
>                 # downgrade to Cookie
>                 dict[k] = Cookie.parse(Cookie.__str__(c))[k]
> 
>         return dict
> 
> The problem that is happening is that one exception was not expected
> by the original code piece author. The exception is binascii.Error. It
> will happen whenever MarshalCookie.parse() tries to parse a Signed
> cookie. My proposed fix is just to import binascii and include the
> exception:
> 
>             try:
>                 c.unmarshal(secret)
>             except (CookieError, ValueError, binascii.Error):
>                 # downgrade to Cookie
>                 dict[k] = Cookie.parse(Cookie.__str__(c))[k]
> 
> This way MarshalCookie.get_cookies() will behave as per the documentation.

Yes and no. Yes one could do it, but after looking at it and thinking about
it overnight I would probably do it in a different place. Instead, one would
be better of first changing unmarshal() to:

    def unmarshal(self, secret):

        self.unsign(secret)

        try:
            data = base64.decodestring(self.value)
        except binascii.Error:
            raise CookieError, "Incorrectly Encoded Cookie: %s=%s" % (self.name, self.value)

        self.value = marshal.loads(data)

and leave parse() as is.

The difference here is that you have split out the base64 decoding of
the value string from the actual unmarshalling of the data.

Next one has to contemplate whether one should for the marshal.loads()
call separately catch EOFError, ValueError or TypeError exceptions as
being indicative of badly formatted marshal data.

The reason for doing this would be that I could use a SignedCookie at
the same time where I decide to base64 encode the value myself. If I do
this and the SignedCookie uses the same secret, the data would get
past the signed check and the base64 decoding implemented by the
MarshalCookie but then fail on unmarshalling if the data wasn't actually
marshal data but some other format.

So, to be even more precise:

    def unmarshal(self, secret):

        self.unsign(secret)

        try:
            data = base64.decodestring(self.value)
        except:
            raise CookieError, "Value Not BASE64 Encoded: %s=%s" % (self.name, self.value)

        try:
            self.value = marshal.loads(data)
        except (EOFError, ValueError, TypeError):
            raise CookieError, "Cannot Unmarshal Cookie: %s=%s" % (self.name, self.value)

> > This is probably not a good way of doing
> > things. First off the application should only be decoding its own cookies
> > and not others which may have been sent to the site in general. Thus,
> allowing
> > one to say which cookies to decode is probably a better step.
> 
> I'm not opposing the new names argument. I just don't know enough
> about mod_python to opine on it, although the names argument alone
> will not fix the issue: an *expected* error that should be handled by
> mod_python. Or better, the names argument will only fix the issue if
> it is passed *and* if none of the passed cookie names is a Signed
> cookie. A nice addition perhaps, but not a fix.

The other thing I believe also should be added is a new keyword
parameter called 'strict'. This would default to 0 to preserve existing
behaviour. So I could say:

  cookies = Cookie.get_cookies(req, Cookie.MarshalCookie, names=['xxx'], strict=1)

If 'strict' is set to a truth value, then if a cookie fails to be decoded as
the intended type, it would not fallback to returning Cookie, but raise
again the original exception that cause the cookie not to be decoded.

The Session code would for example always use 'strict' to ensure that
SignedCookie doesn't fallback to 'Cookie', thus ensuring the extra
security of the 64 character vs 32 character string is used.

Graham
From brunson at brunson.com  Mon Oct 30 17:11:18 2006
From: brunson at brunson.com (Eric Brunson)
Date: Mon Oct 30 17:11:31 2006
Subject: [mod_python] Can i have both Marshal and
	Signed	CookieswithPublisher?
In-Reply-To: <1162244414.20129@dscpl.user.openhosting.com>
References: <1162244414.20129@dscpl.user.openhosting.com>
Message-ID: <45467886.7@brunson.com>

Graham Dumpleton wrote:
> Clodoaldo Pinto Neto wrote ..
>   
>> 2006/10/29, Graham Dumpleton <grahamd@dscpl.com.au>:
>>     
>>> Clodoaldo Pinto Neto wrote ..
>>>       
>>>> 2006/10/29, Graham Dumpleton <grahamd@dscpl.com.au>:
>>>> IMHO, the least surprise behavior is if Cookie.get_cookies() returned
>>>> all cookies of the given class regardless of how many different cookie
>>>> classes there are in the header.
>>>>         
>>> There is nothing in a cookie string though to be able to identify it
>>>       
>> as being
>>     
>>> of a particular type. The only way you can know is to try and decode
>>>       
>> it and
>>     
>>> if it works then it probably is.
>>>       
>> It is exactly what MarshalCookie.parse() does:
>>     
>
> But it is still an assumption because they aren't tagged as being of a
> particular type. :-)
>   

"When faced with ambiguity resist the temptation to guess"  ;-)

I have nothing useful to contribute to this discussion, but I thought 
that was pertinent.

e.

From labs at ixopusada.com  Mon Oct 30 20:14:06 2006
From: labs at ixopusada.com (Dirk van Oosterbosch, IR labs)
Date: Mon Oct 30 20:14:52 2006
Subject: [mod_python] Building a web application using Cheetah and
	mod_python
In-Reply-To: <D5AA0517-7159-4D8F-9C09-092AC060608A@dscpl.com.au>
References: <93f7db120610271444q73ab89ecuf1e019c41c0d290@mail.gmail.com>
	<A909CA5E-D37A-4553-AFB6-9FD4AA8A091F@dscpl.com.au>
	<98F8294A-E202-401C-8C1D-095545B22E59@ixopusada.com>
	<D5AA0517-7159-4D8F-9C09-092AC060608A@dscpl.com.au>
Message-ID: <541461B9-4FFF-43D2-8DFC-141C5A07663F@ixopusada.com>

Thanks,

> Using current versions of mod_python available there is no way of  
> doing it except
> perhaps by using the Vampire extensions for mod_python.  
> Alternatively, use
> version 3.3 of mod_python out of Subversion repository or wait  
> until it is released.
>
> [...]
>
> This works even if 'from bar import bar' is used as they intercept  
> the 'import'
> statement and when an import is performed from inside a module  
> which was
> already imported using the module importer, it will use the module  
> importer for
> the 'import' as well. Ie., no need to use apache.import_module()  
> explicitly. If the
> module being imported using 'import' is in another directory  
> though, it is necessary
> to specify an option declaring the search path for the modules.  
> This is a path which
> is distinct from PythonPath as new importer will not use any module  
> in PythonPath
> as a candidate for reloading as that causes lots of problems.

Then, I guess it won't do it's magic for __import__(modulename)  :-(
The way I am building my system, I'll need to call
	module = __import__(modulename, globals(), locals(), [name])
since I don't know the name of the module (and of the object) until  
runtime.
Will there be a cure for this too?

(I wouldn't have a problem so much with issuing a special command to  
make mod_python reload all modules, if it just wasn't "apachectl  
stop ... apachectl start" ;)


>>> Using '/' in the module name like this is not portable and is  
>>> dependent
>>> on peculiarities of the behaviour of Python on a specific  
>>> platform. It will
>>> not for example work on Mac OS X and also possibly not on Windows.
>>
>> I am working on a mac and also using slashes `/` to delimit my  
>> paths, so no problems there. (Didn't try from mod_python though &  
>> dunno what will happen on Windows).
>
> What version of Python are you using? I know for sure it didn't  
> work with
> Python (2.3) on Panther. I also don't think it worked with Python  
> (2.3.5)
> on Tiger. If you are using Python 2.4 or later which you installed  
> yourself,
> it is entirely possible it may work.

Indeed, python 2.4.1


>> I'm using os.path.join()
>
> Depending on the source of the path, one should actually use  
> posixpath functions
> sometimes instead of os.path. This is especially the case of  
> working on req.uri and
> sometimes on req.filename. This is because Apache supplies both of  
> them as
> POSIXish style paths and using os.path functions on Windows can  
> screw things
> up as it introduces back slashes.

I am not planning to port, but thanks for the tip!


Thanks again ... and mod_python 3.3 will be announced on this list  
won't it? ;-)

dirk





-----------------------------
Dirk van Oosterbosch
de Wittenstraat 225
1052 AT Amsterdam
the Netherlands

http://labs.ixopusada.com
-----------------------------


On 29-okt-2006, at 1:10, Graham Dumpleton wrote:

>
> On 29/10/2006, at 4:12 AM, Dirk van Oosterbosch, IR labs wrote:
>
>> Hi,
>>
>> I am also working on a "cms"-like website system, using mod_python  
>> and Cheetah, though I've not yet tied these both up together, to  
>> be fully functional. Still working on the smaller subparts of the  
>> system.
>> So I follow this subject with great interest.
>>
>> It feels like the core of this discussion is about making sure the  
>> cheetah modules gets reloaded when they change. I didn't conduct  
>> any tests yet, still trying to grasp the exact mechanisms underneath.
>>
>>>> [...]
>>>> Is this the best way to import template modules and then  
>>>> evaluate them?
>>>
>>> No, in as much as you are having to create a parallel hierarchy  
>>> of publisher
>>> handlers for each Cheetah page. You would be better off using a  
>>> custom
>>> handler which does the dispatch direct to the compiled Cheetah  
>>> template
>>> classes.
>>
>> I'm not sure if this helps, but I've got a similar setup. There is  
>> one handler in a main.py that handles all requests. This main  
>> connects to a database, to find out which Cheetah template to use,  
>> and loads and fills this template. Also I've got a directory which  
>> hold all the python files directly necessary for the system (/var/ 
>> www/python) and an other directory to hold my templates. (/var/www/ 
>> python/templates)
>>
>> If inside this main.py I would use an `apache.import_module 
>> (fooTemplate)` instead of just `from fooTemplate import  
>> fooTemplate`, that would mean that the fooTemplate is reloaded if  
>> it changed, doesn't it?
>
> Probably not. See issue 8 in:
>
>   http://www.dscpl.com.au/wiki/ModPython/Articles/ 
> ModuleImportingIsBroken
>
>> But would it also mean that all the other templates which are  
>> imported through their inheritance would be reloaded if they are  
>> changed?
>
> Again, probably not, for same reason.
>
>> Most of my templates are inheriting parent-templates using the  
>> Cheetah standard
>> #from bar import bar
>> #extends bar
>>
>> It's easy to create a whole directory with fresh modules, using  
>> the shell `cheetah compile *.tmpl`. But is there also a way to  
>> ensure me that apache is reloading them, if I do that? (i.e. an  
>> other way than restarting apache, which I have to do frequently  
>> while debugging this system :-(
>
> Using current versions of mod_python available there is no way of  
> doing it except
> perhaps by using the Vampire extensions for mod_python.  
> Alternatively, use
> version 3.3 of mod_python out of Subversion repository or wait  
> until it is released.
>
> Both Vampire and the new mod_python 3.3 implement a module importer  
> which
> tracks child imports and will correctly import parent modules when  
> a child changes.
> In fact it is the Vampire module importer which was used as basis  
> for 3.3 version.
>
> This works even if 'from bar import bar' is used as they intercept  
> the 'import'
> statement and when an import is performed from inside a module  
> which was
> already imported using the module importer, it will use the module  
> importer for
> the 'import' as well. Ie., no need to use apache.import_module()  
> explicitly. If the
> module being imported using 'import' is in another directory  
> though, it is necessary
> to specify an option declaring the search path for the modules.  
> This is a path which
> is distinct from PythonPath as new importer will not use any module  
> in PythonPath
> as a candidate for reloading as that causes lots of problems.
>
> Anyway, end result is that with these module importers, you can  
> update a base
> class template, regenerate Cheetah Python class and anything which  
> extends
> from it will be automatically reloaded along with the base class.
>
>> And sometimes I am not importing a compiled template in main, but  
>> create a new template from a text/tmpl file
>> `t = Template(file = "foobar.tmpl", searchList = [dict, obj])`
>> What does creating a template on the fly like this, mean for  
>> reloading a changed inherited template?
>
> Not sure. Does Cheetah use a caching system of its own for this so  
> that it isn't
> loading them from disk all the time and does it reload the tmpl  
> file if it has changed
> on disk. I can't remember what it does and it may have changed  
> since when I
> was more actively looking at it.
>
>>>> This second file only works if I add /var/www/app/templates to my
>>>> PythonPath.  And, due to (2) above, I then also have to add
>>>> /var/www/app to PythonPath.  Is this really necessary?=
>>>
>>> With the version of mod_python you are using, yes it is necessary.
>>
>> I am also adding the templates directory to my PythonPath, but  
>> since I am not yet running my code from Apache, I haven't yet  
>> discovered problems with loading the rest of my python modules  
>> from my /var/www/python. But if I hit those issues, I'll now know  
>> how to fix them, ;-)
>
> With new importers, you don't want to be setting PythonPath if you  
> want modules
> to be reloadable. You will need to set the module importers own  
> search path.
>
>> BTW, (OT)
>>
>>>>    templateModule = apache.import_module("templates/myTemplate")
>>>
>>> Using '/' in the module name like this is not portable and is  
>>> dependent
>>> on peculiarities of the behaviour of Python on a specific  
>>> platform. It will
>>> not for example work on Mac OS X and also possibly not on Windows.
>>
>> I am working on a mac and also using slashes `/` to delimit my  
>> paths, so no problems there. (Didn't try from mod_python though &  
>> dunno what will happen on Windows).
>
> What version of Python are you using? I know for sure it didn't  
> work with
> Python (2.3) on Panther. I also don't think it worked with Python  
> (2.3.5)
> on Tiger. If you are using Python 2.4 or later which you installed  
> yourself,
> it is entirely possible it may work.
>
>> However I know of portability issues, so I am only using paths/ 
>> with/slashes in my configuration files, if I need to create a path  
>> in code I'm using os.path.join()
>
> Depending on the source of the path, one should actually use  
> posixpath functions
> sometimes instead of os.path. This is especially the case of  
> working on req.uri and
> sometimes on req.filename. This is because Apache supplies both of  
> them as
> POSIXish style paths and using os.path functions on Windows can  
> screw things
> up as it introduces back slashes.
>
>>> Things are a bit easier to manage and easier to predict when  
>>> mod_python 3.3
>>> can be used. Version 3.3 of mod_python hasn't been released yet,  
>>> but is quite
>>> close.
>>
>> I am eagerly awaiting :-)
>> best
>>
>> dirk
>>
>>
>>
>> -----------------------------
>> Dirk van Oosterbosch
>> de Wittenstraat 225
>> 1052 AT Amsterdam
>> the Netherlands
>>
>> http://labs.ixopusada.com
>> -----------------------------
>>
>>
>> On 28-okt-2006, at 5:32, Graham Dumpleton wrote:
>>
>>>
>>> On 28/10/2006, at 7:44 AM, Sebastian Celis wrote:
>>>
>>>> Hello,
>>>>
>>>> I am new to this list and have just recently begun to work on a
>>>> project where I wish to use mod_python.publisher and cheetah to  
>>>> drive
>>>> an entire web application.  I apologize if the following topics  
>>>> have
>>>> been discussed to death recently, but I have read through the
>>>> documentation on both sites and have searched through the  
>>>> mailing-list
>>>> archives and while I have seen similar discussions, I have yet  
>>>> to find
>>>> definitive answers.  I am able to get most things to work,  
>>>> however I
>>>> can't help but feel that there are better ways of approaching  
>>>> some of
>>>> my situations.
>>>>
>>>> First, I'll quickly describe my directory structure:
>>>>
>>>> /var/www/app -- The base directory to the web application.  This  
>>>> will
>>>> directly contain most of the python files that correspond  
>>>> directly to
>>>> URLs.  For example, index.py, login.py, etc.  In this directory.
>>>> /var/www/app/templates -- Contains all of my cheetah templates.
>>>> /var/www/app/include -- Contains the python utility modules I am
>>>> writing specifically for this application.
>>>>
>>>> Now, onto the questions.
>>>>
>>>>
>>>> 1) Importing compiled cheetah templates
>>>>
>>>> Assume I have code like the following in /var/www/app/test1.py
>>>>
>>>> ######################################
>>>> from mod_python import apache
>>>> from Cheetah.Template import Template
>>>>
>>>> def index(req):
>>>>    req.content_type = "text/html"
>>>>
>>>>    dict = {'title': 'My Title!', 'message': 'Hello world!'}
>>>>    templateModule = apache.import_module("templates/myTemplate")
>>>
>>> Using '/' in the module name like this is not portable and is  
>>> dependent
>>> on peculiarities of the behaviour of Python on a specific  
>>> platform. It will
>>> not for example work on Mac OS X and also possibly not on Windows.
>>>
>>>>    t = getattr(templateModule, "myTemplate")()
>>>>    searchList = t.searchList()
>>>>    searchList.insert(0, dict)
>>>>
>>>>    return(t.respond())
>>>> ######################################
>>>>
>>>> Is this the best way to import template modules and then  
>>>> evaluate them?
>>>
>>> No, in as much as you are having to create a parallel hierarchy  
>>> of publisher
>>> handlers for each Cheetah page. You would be better off using a  
>>> custom
>>> handler which does the dispatch direct to the compiled Cheetah  
>>> template
>>> classes. See the mod_python handler described in:
>>>
>>>   http://wiki.cheetahtemplate.org/cheetah-recipes.html
>>>
>>>> 2) Modifying PythonPath prevents modules from being imported
>>>>
>>>> Inside file /var/www/app/test2.py, I have the following code:
>>>>
>>>> import config
>>>> (or)
>>>> config = apache.import_module("config")
>>>>
>>>> Both of these commands load /var/www/app/config.py, and seem to  
>>>> work
>>>> fine.  However, if I add
>>>>
>>>> PythonPath "['/var/www/app/templates']+sys.path"
>>>>
>>>> to my apache configuration, I get an error next time I run  
>>>> test2.py.
>>>>
>>>> ###
>>>> Mod_python error: "PythonHandler mod_python.publisher"
>>>>
>>>> Traceback (most recent call last):
>>>>
>>>>  File "/usr/lib/python2.4/site-packages/mod_python/apache.py", line
>>>> 299, in HandlerDispatch
>>>>    result = object(req)
>>>>
>>>>  File "/usr/lib/python2.4/site-packages/mod_python/publisher.py",
>>>> line 213, in handler
>>>>    published = publish_object(req, object)
>>>>
>>>>  File "/usr/lib/python2.4/site-packages/mod_python/publisher.py",
>>>> line 412, in publish_object
>>>>    return publish_object(req,util.apply_fs_data(object,  
>>>> req.form, req=req))
>>>>
>>>>  File "/usr/lib/python2.4/site-packages/mod_python/util.py", line
>>>> 439, in apply_fs_data
>>>>    return object(**args)
>>>>
>>>>  File "/var/www/app/test2.py", line 8, in index
>>>>    config = apache.import_module("config")
>>>>
>>>>  File "/usr/lib/python2.4/site-packages/mod_python/apache.py", line
>>>> 461, in import_module
>>>>    f, p, d = imp.find_module(parts[i], path)
>>>>
>>>> ImportError: No module named config
>>>> ###
>>>>
>>>> Why does this initially work but then stop working once I add a
>>>> directory to my path?  I can fix it by adding '/var/www/app' to my
>>>> PythonPath as well, but I don't understand why it didn't work  
>>>> before
>>>> that.
>>>
>>> That is just how mod_python has always worked. Setting PythonPath
>>> stops mod_python looking in the directory the handler was specified
>>> for. Yes it is a pain. FWIW, this behaviour changes in mod_python  
>>> 3.3
>>> where the whole issue of module importing is dealt with a bit  
>>> differently
>>> and is much more consistent and predictable.
>>>
>>> Current versions of mod_python have a lot of issues when it comes
>>> to the module importer. You should really have a read of:
>>>
>>>   http://www.dscpl.com.au/wiki/ModPython/Articles/ 
>>> ModuleImportingIsBroken
>>>
>>>> 3) Cheetah and #include
>>>>
>>>> I have read a lot about why mod_python sets the current working
>>>> directory to '/', but this seems to be causing some larger problems
>>>> when cheetah comes into play.  (3) and (4) discuss two issues  
>>>> that I
>>>> am having trouble with.
>>>>
>>>> Here is /var/www/app/templates/testPage.tmpl:
>>>> ###
>>>> #include 'header_include.tmpl'
>>>> <head>
>>>> <title>$title</title>
>>>> </head>
>>>> <body>
>>>> <p>$message</p>
>>>> </body>
>>>> #include 'footer_include.tmpl'
>>>> ###
>>>>
>>>> However, as this actually tries to load /header_include.tmpl and
>>>> /footer_include.tmpl instead of the ones located in my templates
>>>> directory, this will not work.
>>>
>>> If you are going to use compiled templates, you are possibly  
>>> better off using
>>> a site page base class and have specific pages extend that page.  
>>> These
>>> common blocks are then accessible through the base class. This  
>>> means you
>>> get the benefit of compiled code for the included blocks as well,  
>>> instead of
>>> it having to be interpreted each time.
>>>
>>>> I came up with two workarounds,
>>>> however I don't really love either:
>>>>
>>>> a)
>>>>
>>>> ###
>>>> #include os.path.join(os.path.dirname(__file__),  
>>>> 'header_include.tmpl')
>>>> <head>
>>>> <title>$title</title>
>>>> </head>
>>>> <body>
>>>> <p>$message</p>
>>>> </body>
>>>> #include os.path.join(os.path.dirname(__file__),  
>>>> 'footer_include.tmpl')
>>>> ###
>>>>
>>>> b)
>>>>
>>>> Actually pass $templatesDir into all of my templates and then  
>>>> instead call:
>>>>
>>>> ###
>>>> #include os.path.join(templatesDir, 'header_include.tmpl')
>>>> <head>
>>>> <title>$title</title>
>>>> </head>
>>>> <body>
>>>> <p>$message</p>
>>>> </body>
>>>> #include os.path.join(templatesDir, 'footer_include.tmpl')
>>>> ###
>>>>
>>>> I guess I'm leaning toward (a), but both seem cumbersome and slower
>>>> than necessary.  Is there a better way to do this?
>>>
>>> If my memory of Cheetah is correct, then extending from a site  
>>> page which
>>> has reusable bits like this as I describe above is better.
>>>
>>>> 4) Cheetah and inheritance
>>>>
>>>> Assume these two files:
>>>>
>>>> /var/www/app/templates/overall_base.tmpl
>>>> ###
>>>> <?xml version="1.0" encoding="UTF-8"?>
>>>> <!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1//EN"
>>>>          "http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd">
>>>> <html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en">
>>>> <head>
>>>>    <title>$title</title>
>>>> </head>
>>>> <body>
>>>>    $bodyContent
>>>> </body>
>>>> </html>
>>>> ###
>>>>
>>>> /var/www/app/templates/overall_base_extender.tmpl
>>>> ###
>>>> #overall_base = apache.import_module("overall_base")
>>>> (or)
>>>> #from overall_base import overall_base
>>>>
>>>> #extends overall_base
>>>> #def title
>>>> Welcome to Foo
>>>> #end def
>>>> #def bodyContent
>>>> Hello world!
>>>> #end def
>>>>
>>>> This second file only works if I add /var/www/app/templates to my
>>>> PythonPath.  And, due to (2) above, I then also have to add
>>>> /var/www/app to PythonPath.  Is this really necessary?=
>>>
>>> With the version of mod_python you are using, yes it is necessary.
>>>
>>>> #overall_base = apache.import_module("overall_base",
>>>> path=[os.path.dirname(__file__)])
>>>>
>>>> doesn't seem to work inside the cheetah template file.  Even
>>>>
>>>> #sys.path.append(os.path.dirname(__file__))
>>>> #overall_base = apache.import_module("overall_base")
>>>
>>> That one I am not sure about. You may be hitting one of the other  
>>> problems
>>> with PythonPath based module importing which is you can't easily  
>>> have the
>>> same name module in different directories and be sure you import  
>>> the one
>>> you want.
>>>
>>> In general I wouldn't recommend using apache.import_module() within
>>> Cheetah templates explicitly.
>>>
>>>> doesn't seem to work.  Is there any way to get inheriting  
>>>> templates to
>>>> work without modifying PythonPath to include all the directories  
>>>> where
>>>> my base templates might be located?
>>>
>>> Not really.
>>>
>>>> I apologize for the huge length of this e-mail.  I am still  
>>>> fairly new
>>>> to mod_python and cheetah, but so far I really like what I see.  I
>>>> just feel like there are a few issues I need to wrap my head around
>>>> before I can really dive into developing applications.  Any  
>>>> pointers
>>>> or help with these issues that you can provide would be greatly
>>>> appreciated.
>>>
>>> Things are a bit easier to manage and easier to predict when  
>>> mod_python 3.3
>>> can be used. Version 3.3 of mod_python hasn't been released yet,  
>>> but is quite
>>> close. If you want to try the source for mod_python out of the  
>>> Subversion
>>> repository, then can suggest better ways of doing things.
>>>
>>> Graham
>>> _______________________________________________
>>> Mod_python mailing list
>>> Mod_python@modpython.org
>>> http://mailman.modpython.org/mailman/listinfo/mod_python
>>>
>>
>>
>>
>>
>>
>> _______________________________________________
>> Mod_python mailing list
>> Mod_python@modpython.org
>> http://mailman.modpython.org/mailman/listinfo/mod_python
>





From grahamd at dscpl.com.au  Mon Oct 30 20:46:23 2006
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Mon Oct 30 20:46:27 2006
Subject: [mod_python] Building a web application using Cheetah
	andmod_python
Message-ID: <1162259183.24061@dscpl.user.openhosting.com>

Dirk van Oosterbosch, IR labs wrote ..
> Thanks,
> 
> > Using current versions of mod_python available there is no way of  
> > doing it except
> > perhaps by using the Vampire extensions for mod_python.  
> > Alternatively, use
> > version 3.3 of mod_python out of Subversion repository or wait  
> > until it is released.
> >
> > [...]
> >
> > This works even if 'from bar import bar' is used as they intercept  
> > the 'import'
> > statement and when an import is performed from inside a module  
> > which was
> > already imported using the module importer, it will use the module  
> > importer for
> > the 'import' as well. Ie., no need to use apache.import_module()  
> > explicitly. If the
> > module being imported using 'import' is in another directory  
> > though, it is necessary
> > to specify an option declaring the search path for the modules.  
> > This is a path which
> > is distinct from PythonPath as new importer will not use any module 
> > in PythonPath
> > as a candidate for reloading as that causes lots of problems.
> 
> Then, I guess it won't do it's magic for __import__(modulename)  :-(

No that still works as it hooks into the Python importer hooks which
is even below that.

> The way I am building my system, I'll need to call
> 	module = __import__(modulename, globals(), locals(), [name])
> since I don't know the name of the module (and of the object) until  
> runtime.
> Will there be a cure for this too?

In mod_python 3.3 there is a much better way of doing that, you simply
supply an absolute path name to the apache.import_module() command
instead of the module name. There are even tricky ways of specifying
paths relative to the current modules directory, or even the directory
where the handler was specified in order to avoiding having to hard
code absolute path names.

Where it is done at global scope, changes made to the child will cause
the parent to be reloaded as well next time it is needed. If the import is
done from inside a handler, then the fact that apache.import_module()
is called each time causes reload checks to be done anyway.

The only thing is that it returns the whole module so you then have
to use hasattr()/getattr() to look for and get a reference to a contained
attribute.

> (I wouldn't have a problem so much with issuing a special command to  
> make mod_python reload all modules, if it just wasn't "apachectl  
> stop ... apachectl start" ;)

Restarting Apache shouldn't be required, nor do you need to tell it to
reload modules at a particular time, it will reload modules as it sees
they have changed. You still have to be careful in changing files if you
need to change more than one at a time. In that case you might manage
by manipulating PythonAutoReload in a .htaccess file, but for a production
site you are still better off having a totally different directory containing
everything, changing an Alias directive and restarting Apache. Much safer
that way. Auto reloading is still more only for during development or
if your site is non critical.

I have been putting together an example of exactly how to integrate
Cheetah with mod_python 3.3 in the best way which I'll explain in an
article at some point and make available. No point making it available
yet if you aren't using mod_python 3.3 source from subversion.

Graham
From clodoaldo.pinto at gmail.com  Tue Oct 31 08:43:21 2006
From: clodoaldo.pinto at gmail.com (Clodoaldo Pinto Neto)
Date: Tue Oct 31 08:43:46 2006
Subject: [mod_python] Can i have both Marshal and Signed
	CookieswithPublisher?
In-Reply-To: <1162244414.20129@dscpl.user.openhosting.com>
References: <1162244414.20129@dscpl.user.openhosting.com>
Message-ID: <a595de7a0610310543p428e291ay5a1d59857e63abd0@mail.gmail.com>

2006/10/30, Graham Dumpleton <grahamd@dscpl.com.au>:
> Clodoaldo Pinto Neto wrote ..
> > 2006/10/29, Graham Dumpleton <grahamd@dscpl.com.au>:
> > > Clodoaldo Pinto Neto wrote ..
> > The problem that is happening is that one exception was not expected
> > by the original code piece author. The exception is binascii.Error. It
> > will happen whenever MarshalCookie.parse() tries to parse a Signed
> > cookie. My proposed fix is just to import binascii and include the
> > exception:
> >
> >             try:
> >                 c.unmarshal(secret)
> >             except (CookieError, ValueError, binascii.Error):
> >                 # downgrade to Cookie
> >                 dict[k] = Cookie.parse(Cookie.__str__(c))[k]
> >
> > This way MarshalCookie.get_cookies() will behave as per the documentation.
>
> Yes and no. Yes one could do it, but after looking at it and thinking about
> it overnight I would probably do it in a different place. Instead, one would
> be better of first changing unmarshal() to:
>
>     def unmarshal(self, secret):
>
>         self.unsign(secret)
>
>         try:
>             data = base64.decodestring(self.value)
>         except binascii.Error:
>             raise CookieError, "Incorrectly Encoded Cookie: %s=%s" % (self.name, self.value)
>
>         self.value = marshal.loads(data)
>
> and leave parse() as is.
>
> The difference here is that you have split out the base64 decoding of
> the value string from the actual unmarshalling of the data.
>
> Next one has to contemplate whether one should for the marshal.loads()
> call separately catch EOFError, ValueError or TypeError exceptions as
> being indicative of badly formatted marshal data.
>
> The reason for doing this would be that I could use a SignedCookie at
> the same time where I decide to base64 encode the value myself. If I do
> this and the SignedCookie uses the same secret, the data would get
> past the signed check and the base64 decoding implemented by the
> MarshalCookie but then fail on unmarshalling if the data wasn't actually
> marshal data but some other format.
>
> So, to be even more precise:
>
>     def unmarshal(self, secret):
>
>         self.unsign(secret)
>
>         try:
>             data = base64.decodestring(self.value)
>         except:
>             raise CookieError, "Value Not BASE64 Encoded: %s=%s" % (self.name, self.value)
>
>         try:
>             self.value = marshal.loads(data)
>         except (EOFError, ValueError, TypeError):
>             raise CookieError, "Cannot Unmarshal Cookie: %s=%s" % (self.name, self.value)

I'm not sure i understand all the implications, but i think it is the
correct approach to the problem.

Did you forget to specify the binascii.Error exception or am i missing
something?:

>         try:
>             data = base64.decodestring(self.value)
>         except:
>             raise CookieError, "Value Not BASE64 Encoded: %s=%s" % (self.name, self.value)

> The other thing I believe also should be added is a new keyword
> parameter called 'strict'. This would default to 0 to preserve existing
> behaviour. So I could say:
>
>   cookies = Cookie.get_cookies(req, Cookie.MarshalCookie, names=['xxx'], strict=1)
>
> If 'strict' is set to a truth value, then if a cookie fails to be decoded as
> the intended type, it would not fallback to returning Cookie, but raise
> again the original exception that cause the cookie not to be decoded.
>
> The Session code would for example always use 'strict' to ensure that
> SignedCookie doesn't fallback to 'Cookie', thus ensuring the extra
> security of the 64 character vs 32 character string is used.

Sounds good. It would be still better if i could also tell
Cookie.get_cookies() to just discard the failed cookies in case i want
all and only the cookies of a certain class.

If i understand what you mean with the strict parameter then
MarshalCookie.parse() could be something like this:

    def parse(Class, s, secret, downgrade=False, strict=False):

        dict = _parse_cookie(s, Class)

        del_list = list()
        for k in dict:
            c = dict[k]
            try:
                c.unmarshal(secret)
            except (CookieError, ValueError):
               if downgrade:
                   del_list.append(k)
               else:
                   if strict:
                       raise
                   else:
                       # downgrade to Cookie
                       dict[k] = Cookie.parse(Cookie.__str__(c))[k]

        for k in del_list:
            del dict(k)
        return dict

Regards, Clodoaldo Pinto Neto
From clodoaldo.pinto at gmail.com  Tue Oct 31 08:47:40 2006
From: clodoaldo.pinto at gmail.com (Clodoaldo Pinto Neto)
Date: Tue Oct 31 08:47:48 2006
Subject: [mod_python] Can i have both Marshal and Signed
	CookieswithPublisher?
In-Reply-To: <a595de7a0610310543p428e291ay5a1d59857e63abd0@mail.gmail.com>
References: <1162244414.20129@dscpl.user.openhosting.com>
	<a595de7a0610310543p428e291ay5a1d59857e63abd0@mail.gmail.com>
Message-ID: <a595de7a0610310547ue966201l47e6c38e25aa40e3@mail.gmail.com>

>     def parse(Class, s, secret, downgrade=False, strict=False):

Sorry, should be downgrade=True to not break existing applications.

Regards, Clodoaldo Pinto Neto
From clodoaldo.pinto at gmail.com  Tue Oct 31 08:49:26 2006
From: clodoaldo.pinto at gmail.com (Clodoaldo Pinto Neto)
Date: Tue Oct 31 08:49:31 2006
Subject: [mod_python] Can i have both Marshal and Signed
	CookieswithPublisher?
In-Reply-To: <a595de7a0610310547ue966201l47e6c38e25aa40e3@mail.gmail.com>
References: <1162244414.20129@dscpl.user.openhosting.com>
	<a595de7a0610310543p428e291ay5a1d59857e63abd0@mail.gmail.com>
	<a595de7a0610310547ue966201l47e6c38e25aa40e3@mail.gmail.com>
Message-ID: <a595de7a0610310549j4b887b33t60a597e8f27f4050@mail.gmail.com>

2006/10/31, Clodoaldo Pinto Neto <clodoaldo.pinto@gmail.com>:
> >     def parse(Class, s, secret, downgrade=False, strict=False):
>
> Sorry, should be downgrade=True to not break existing applications.
>
> Regards, Clodoaldo Pinto Neto
>

And test not downgrade:

    def parse(Class, s, secret, downgrade=False, strict=False):

       dict = _parse_cookie(s, Class)

       del_list = list()
       for k in dict:
           c = dict[k]
           try:
               c.unmarshal(secret)
           except (CookieError, ValueError):
              if not downgrade:
                  del_list.append(k)
              else:
                  if strict:
                      raise
                  else:
                      # downgrade to Cookie
                      dict[k] = Cookie.parse(Cookie.__str__(c))[k]

       for k in del_list:
           del dict(k)
       return dict

Regards, Clodoaldo Pinto Neto
From m_norley_newsgroups at yahoo.co.uk  Tue Oct 31 09:45:12 2006
From: m_norley_newsgroups at yahoo.co.uk (Mark Norley)
Date: Tue Oct 31 09:45:16 2006
Subject: [mod_python] sendfile problems with IE
Message-ID: <000a01c6fcfb$2bd29650$639fcd53@MARK>

Hello

Hope this list can save me again ;-)
This bit of code works fine in Firefox and Netscape but IE doesn't like it:

def handler(req):
    req.content_type = "application/vnd.ms-excel"
    req.set_content_length(os.path.getsize(ROOT+'\\taggedhits.xls'))
    req.headers_out["Content-Disposition"] = "attachment;
filename=taggedhits.xls"
    req.sendfile(ROOT+"\\taggedhits.xls")
    return apache.OK

With IE the File Download dialogue looks strange. IE thinks the filename is
filehandler_py rather than taggedhits.xls:

Name: filehandler_py
Type: Microsoft Excel Worksheet, 13.5 KB
From: 'mysite'

filehandler.py is the name of the script for starters, not the file I want
to download, and why has IE swapped the dot for an underscore?

On pressing Save I get:
Internet Explorer cannot download filehandler.py from 'mysite'.
Internet Explorer was not able to open this internet site. The requested
site is either unavailable or cannot be found. Please try again later.

Does anyone know what I need to do for IE to recognise the file? I'm
thinking I'm missing a header field or something.  

Cheers
Mark

Win XP SP2
Python 2.4.2
Apache 2.2.2
Mod_python 3.2.10
Firefox 1.5.0.7
Netscape 7.2
IE 6

-- 
No virus found in this outgoing message.
Checked by AVG Free Edition.
Version: 7.1.409 / Virus Database: 268.13.20/508 - Release Date: 31/10/06
 

Send instant messages to your online friends http://uk.messenger.yahoo.com 
From grahamd at dscpl.com.au  Tue Oct 31 17:29:57 2006
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Tue Oct 31 17:30:03 2006
Subject: [mod_python] Building a web application using Cheetah and
	mod_python
Message-ID: <1162333797.19828@dscpl.user.openhosting.com>

Sebastian Celis wrote ..
> 3) Cheetah and #include
> 
> I have read a lot about why mod_python sets the current working
> directory to '/', but this seems to be causing some larger problems
> when cheetah comes into play.  (3) and (4) discuss two issues that I
> am having trouble with.
> 
> Here is /var/www/app/templates/testPage.tmpl:
> ###
> #include 'header_include.tmpl'
> <head>
> <title>$title</title>
> </head>
> <body>
> <p>$message</p>
> </body>
> #include 'footer_include.tmpl'
> ###
> 
> However, as this actually tries to load /header_include.tmpl and
> /footer_include.tmpl instead of the ones located in my templates
> directory, this will not work.  I came up with two workarounds,
> however I don't really love either:

Use something like:

  from mod_python import apache
  from Cheetah.Template import Template

  ### START NEW CODE

  class PathResolver:
      def __init__(self, base):
          self.__base = base
      def __call__(self, path=None):
          if path:
             return os.path.join(self.__base, path)
          return None

  ### FINISH NEW CODE

  def index(req):
      req.content_type = "text/html"
  
      dict = {'title': 'My Title!', 'message': 'Hello world!'}
      templateModule = apache.import_module("templates/myTemplate")
      t = getattr(templateModule, "myTemplate")()
      searchList = t.searchList()
      searchList.insert(0, dict)
  
      ### START NEW CODE

      # Override Servlet.serverSidePath so that it returns path
      # relative to the directory where we say module is located.

      t.serverSidePath = PathResolver(os.path.dirname(templateModule.__file__))

      ### FINISH NEW CODE

      return(t.respond())

This replaces the underlying method that is used calculate the actual
path when you use #include. By doing it in the servlet, you don't have
to do anything trick in the actual .tmpl file.

Graham
From grahamd at dscpl.com.au  Tue Oct 31 17:51:53 2006
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Tue Oct 31 17:51:56 2006
Subject: [mod_python] Building a web application using Cheetah
	andmod_python
Message-ID: <1162335113.526@dscpl.user.openhosting.com>

Graham Dumpleton wrote ..
> Sebastian Celis wrote ..
> > 3) Cheetah and #include
> > 
> > I have read a lot about why mod_python sets the current working
> > directory to '/', but this seems to be causing some larger problems
> > when cheetah comes into play.  (3) and (4) discuss two issues that I
> > am having trouble with.
> > 
> > Here is /var/www/app/templates/testPage.tmpl:
> > ###
> > #include 'header_include.tmpl'
> > <head>
> > <title>$title</title>
> > </head>
> > <body>
> > <p>$message</p>
> > </body>
> > #include 'footer_include.tmpl'
> > ###
> > 
> > However, as this actually tries to load /header_include.tmpl and
> > /footer_include.tmpl instead of the ones located in my templates
> > directory, this will not work.  I came up with two workarounds,
> > however I don't really love either:
> 
> Use something like:
> 
>   from mod_python import apache
>   from Cheetah.Template import Template
> 
>   ### START NEW CODE
> 
>   class PathResolver:
>       def __init__(self, base):
>           self.__base = base
>       def __call__(self, path=None):
>           if path:
>              return os.path.join(self.__base, path)
>           return None
> 
>   ### FINISH NEW CODE
> 
>   def index(req):
>       req.content_type = "text/html"
>   
>       dict = {'title': 'My Title!', 'message': 'Hello world!'}
>       templateModule = apache.import_module("templates/myTemplate")
>       t = getattr(templateModule, "myTemplate")()
>       searchList = t.searchList()
>       searchList.insert(0, dict)
>   
>       ### START NEW CODE
> 
>       # Override Servlet.serverSidePath so that it returns path
>       # relative to the directory where we say module is located.
> 
>       t.serverSidePath = PathResolver(os.path.dirname(templateModule.__file__))
> 
>       ### FINISH NEW CODE
> 
>       return(t.respond())
> 
> This replaces the underlying method that is used calculate the actual
> path when you use #include. By doing it in the servlet, you don't have
> to do anything trick in the actual .tmpl file.

Or even simpler:

  def index(req):
      req.content_type = "text/html"
  
      dict = {'title': 'My Title!', 'message': 'Hello world!'}
      templateModule = apache.import_module("templates/myTemplate")
      t = getattr(templateModule, "myTemplate")()
      searchList = t.searchList()
      searchList.insert(0, dict)

      ### START NEW CODE
  
      t.serverSidePath = lambda x: os.path.join(os.path.dirname(templateModule.__file__), x)

      ### FINISH NEW CODE

      return(t.respond())

Graham
From ccbean at gmail.com  Tue Oct 31 19:19:22 2006
From: ccbean at gmail.com (Colin Bean)
Date: Tue Oct 31 19:19:26 2006
Subject: [mod_python] sendfile problems with IE
In-Reply-To: <000a01c6fcfb$2bd29650$639fcd53@MARK>
References: <000a01c6fcfb$2bd29650$639fcd53@MARK>
Message-ID: <29a6ca010610311619j4b96bf96i336433311fb81918@mail.gmail.com>

Hi Mark,

Here's a thread that might deal with the same problems (in this case
getting IE to correctly display generated pdfs):
http://modpython.org/pipermail/mod_python/2006-October/022341.html

And I just realized that I sent a message in reply to this and didn't
re: the list (crap!).  My response is quoted in the reply here,
though:
http://modpython.org/pipermail/mod_python/2006-October/022348.html

I don't know if any of this will actually apply to what you're doing,
but in the PDF example IE was behaving strangely if the cache-control
header was set at all.   Doesn't look like you're setting it in the
code you provided, but there are some cases where mod_python will set
it on its own (for instance, when you're using sessions or cookies).
Is your code a complete handler, or does it get called in the context
of a larger site?

If it is something with the headers, a lightweight http proxy (I like
webscarab) is a nice way be able to look at the headers exactly as
they are being sent to the client.  You can also use it to verify that
the content is being sent completely.  However you want to do it, it
might be helpful to determine exactly what headers are being set.

The only other thing I can think of is that I usually put quotes
around the filename part of the content-disposition header
('attachment;filename="taggedhits.xls"').  I don't know if this causes
IE to break or not, but it might be worth trying.

Hopefully some of this helps...

-Colin

On 10/31/06, Mark Norley <m_norley_newsgroups@yahoo.co.uk> wrote:
> Hello
>
> Hope this list can save me again ;-)
> This bit of code works fine in Firefox and Netscape but IE doesn't like it:
>
> def handler(req):
>     req.content_type = "application/vnd.ms-excel"
>     req.set_content_length(os.path.getsize(ROOT+'\\taggedhits.xls'))
>     req.headers_out["Content-Disposition"] = "attachment;
> filename=taggedhits.xls"
>     req.sendfile(ROOT+"\\taggedhits.xls")
>     return apache.OK
>
> With IE the File Download dialogue looks strange. IE thinks the filename is
> filehandler_py rather than taggedhits.xls:
>
> Name: filehandler_py
> Type: Microsoft Excel Worksheet, 13.5 KB
> From: 'mysite'
>
> filehandler.py is the name of the script for starters, not the file I want
> to download, and why has IE swapped the dot for an underscore?
>
> On pressing Save I get:
> Internet Explorer cannot download filehandler.py from 'mysite'.
> Internet Explorer was not able to open this internet site. The requested
> site is either unavailable or cannot be found. Please try again later.
>
> Does anyone know what I need to do for IE to recognise the file? I'm
> thinking I'm missing a header field or something.
>
> Cheers
> Mark
>
> Win XP SP2
> Python 2.4.2
> Apache 2.2.2
> Mod_python 3.2.10
> Firefox 1.5.0.7
> Netscape 7.2
> IE 6
>
> --
> No virus found in this outgoing message.
> Checked by AVG Free Edition.
> Version: 7.1.409 / Virus Database: 268.13.20/508 - Release Date: 31/10/06
>
>
> Send instant messages to your online friends http://uk.messenger.yahoo.com
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>
From mod_python at turias.net  Tue Oct 31 22:50:46 2006
From: mod_python at turias.net (Sebastian Celis)
Date: Tue Oct 31 22:50:51 2006
Subject: [mod_python] Building a web application using Cheetah and
	mod_python
Message-ID: <93f7db120610311950v63f38075sd475105b98e88b78@mail.gmail.com>

Thanks so much, Graham.  That works perfectly.  And thank you for the
first response to my original e-mail.  I agree with you and think I
will write my own handler instead of using publisher.  It should help
make my code a lot cleaner and remove a lot of duplication.  And
thanks for helping to clear things up about the module importer in
3.2.  I'm looking forward to 3.3.

Cheers,
Sebastian


On 10/31/06, Graham Dumpleton <grahamd@dscpl.com.au> wrote:
> Graham Dumpleton wrote ..
> > Sebastian Celis wrote ..
> > > 3) Cheetah and #include
> > >
> > > I have read a lot about why mod_python sets the current working
> > > directory to '/', but this seems to be causing some larger problems
> > > when cheetah comes into play.  (3) and (4) discuss two issues that I
> > > am having trouble with.
> > >
> > > Here is /var/www/app/templates/testPage.tmpl:
> > > ###
> > > #include 'header_include.tmpl'
> > > <head>
> > > <title>$title</title>
> > > </head>
> > > <body>
> > > <p>$message</p>
> > > </body>
> > > #include 'footer_include.tmpl'
> > > ###
> > >
> > > However, as this actually tries to load /header_include.tmpl and
> > > /footer_include.tmpl instead of the ones located in my templates
> > > directory, this will not work.  I came up with two workarounds,
> > > however I don't really love either:
> >
> > Use something like:
> >
> >   from mod_python import apache
> >   from Cheetah.Template import Template
> >
> >   ### START NEW CODE
> >
> >   class PathResolver:
> >       def __init__(self, base):
> >           self.__base = base
> >       def __call__(self, path=None):
> >           if path:
> >              return os.path.join(self.__base, path)
> >           return None
> >
> >   ### FINISH NEW CODE
> >
> >   def index(req):
> >       req.content_type = "text/html"
> >
> >       dict = {'title': 'My Title!', 'message': 'Hello world!'}
> >       templateModule = apache.import_module("templates/myTemplate")
> >       t = getattr(templateModule, "myTemplate")()
> >       searchList = t.searchList()
> >       searchList.insert(0, dict)
> >
> >       ### START NEW CODE
> >
> >       # Override Servlet.serverSidePath so that it returns path
> >       # relative to the directory where we say module is located.
> >
> >       t.serverSidePath = PathResolver(os.path.dirname(templateModule.__file__))
> >
> >       ### FINISH NEW CODE
> >
> >       return(t.respond())
> >
> > This replaces the underlying method that is used calculate the actual
> > path when you use #include. By doing it in the servlet, you don't have
> > to do anything trick in the actual .tmpl file.
>
> Or even simpler:
>
>   def index(req):
>       req.content_type = "text/html"
>
>       dict = {'title': 'My Title!', 'message': 'Hello world!'}
>       templateModule = apache.import_module("templates/myTemplate")
>       t = getattr(templateModule, "myTemplate")()
>       searchList = t.searchList()
>       searchList.insert(0, dict)
>
>       ### START NEW CODE
>
>       t.serverSidePath = lambda x: os.path.join(os.path.dirname(templateModule.__file__), x)
>
>       ### FINISH NEW CODE
>
>       return(t.respond())
>
> Graham
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>
