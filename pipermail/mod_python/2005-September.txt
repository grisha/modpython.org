From igp-dev at infogridpacific.com  Thu Sep  1 03:19:01 2005
From: igp-dev at infogridpacific.com (IGP Dev)
Date: Thu Sep  1 03:19:47 2005
Subject: [mod_python] ab tool query
Message-ID: <4316AB65.40809@infogridpacific.com>

Hello Friends,
I have a query regarding ab - Apache Benchmark Tool for Load Testing.
If i use ab tool for Apache Server Load Testing for an html page request
which has iframes in it whose source is an href will the time per 
request will be of just
loading the html page (not loading the iframe src link ) or
will it be both .
Please reply if you know the answer.
Thanks in Advance.
Regards ,
Ajinkya

From igp-dev at infogridpacific.com  Thu Sep  1 03:21:24 2005
From: igp-dev at infogridpacific.com (IGP Dev)
Date: Thu Sep  1 03:23:16 2005
Subject: [mod_python] Session Query
Message-ID: <4316ABF4.4090006@infogridpacific.com>

Hello friends,
i am using Session.Session(req) function in mod-python for session handling
it has created a mp_sess.dbm file in /tmp folder its size is increasing 
and is currently 500 MB.
What is the problem and what is actually happening internally with 
Session utility and what is the problem and what do i have to do
to avoid this.
And is the performance being affected due to this file
Please reply .
Thanks in advance.
Regards,
Ajinkya



From trepca at gmail.com  Thu Sep  1 04:11:40 2005
From: trepca at gmail.com (Sebastjan Trepca)
Date: Thu Sep  1 04:11:46 2005
Subject: [mod_python] Session Query
In-Reply-To: <4316ABF4.4090006@infogridpacific.com>
References: <4316ABF4.4090006@infogridpacific.com>
Message-ID: <cd329af80509010111415eaa59@mail.gmail.com>

Check this article:
http://www.scanmine.com/mp/mod_python_b_p.html#sessions-take-two

Sebastjan

On 01/09/05, IGP Dev <igp-dev@infogridpacific.com> wrote:
> Hello friends,
> i am using Session.Session(req) function in mod-python for session handling
> it has created a mp_sess.dbm file in /tmp folder its size is increasing
> and is currently 500 MB.
> What is the problem and what is actually happening internally with
> Session utility and what is the problem and what do i have to do
> to avoid this.
> And is the performance being affected due to this file
> Please reply .
> Thanks in advance.
> Regards,
> Ajinkya
> 
> 
> 
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>

From trepca at gmail.com  Thu Sep  1 04:14:27 2005
From: trepca at gmail.com (Sebastjan Trepca)
Date: Thu Sep  1 04:16:11 2005
Subject: [mod_python] ab tool query
In-Reply-To: <4316AB65.40809@infogridpacific.com>
References: <4316AB65.40809@infogridpacific.com>
Message-ID: <cd329af8050901011410ca92a1@mail.gmail.com>

Only the html and not the frames. Ab just receives the content, not process it.

Sebastjan



On 01/09/05, IGP Dev <igp-dev@infogridpacific.com> wrote:
> Hello Friends,
> I have a query regarding ab - Apache Benchmark Tool for Load Testing.
> If i use ab tool for Apache Server Load Testing for an html page request
> which has iframes in it whose source is an href will the time per
> request will be of just
> loading the html page (not loading the iframe src link ) or
> will it be both .
> Please reply if you know the answer.
> Thanks in Advance.
> Regards ,
> Ajinkya
> 
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>

From scott_list at mischko.com  Thu Sep  1 12:19:52 2005
From: scott_list at mischko.com (Scott Chapman)
Date: Thu Sep  1 12:20:44 2005
Subject: [mod_python] ab tool query
In-Reply-To: <4316AB65.40809@infogridpacific.com>
References: <4316AB65.40809@infogridpacific.com>
Message-ID: <43172A28.1020107@mischko.com>

IGP Dev wrote:
> Hello Friends,
> I have a query regarding ab - Apache Benchmark Tool for Load Testing.
> If i use ab tool for Apache Server Load Testing for an html page request
> which has iframes in it whose source is an href will the time per 
> request will be of just
> loading the html page (not loading the iframe src link ) or
> will it be both .
> Please reply if you know the answer.
> Thanks in Advance.
> Regards ,
> Ajinkya

Simple way to test this.
Make the IFRAME pull from a URL on your server then check your logs.

Scott
From scott_list at mischko.com  Thu Sep  1 18:49:19 2005
From: scott_list at mischko.com (Scott Chapman)
Date: Thu Sep  1 18:49:30 2005
Subject: [mod_python] I use a custom login form. Can I make the userid show
 up in the access log?
Message-ID: <4317856F.4060005@mischko.com>

I'm using the latest apache2 and mod_python.

I'd really like to be able to change the username for logging purposes in the 
access file.  Can this be done?

TIA,
Scott
From grahamd at dscpl.com.au  Thu Sep  1 19:22:49 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Thu Sep  1 19:24:01 2005
Subject: [mod_python] I use a custom login form. Can I make the userid
	showup in the access log?
Message-ID: <1125616968.20362@dscpl.user.openhosting.com>

Scott Chapman wrote ..
> I'm using the latest apache2 and mod_python.
> 
> I'd really like to be able to change the username for logging purposes
> in the 
> access file.  Can this be done?

In your handler, assign the user name to "req.user". Eg:

  req.user = "scott"

This is the second time this question has come up lately, so looks like
I better add a FAQ entry. :-)

Graham
From labs at ixopusada.com  Thu Sep  1 20:54:43 2005
From: labs at ixopusada.com (IR labs)
Date: Thu Sep  1 20:57:34 2005
Subject: [mod_python] transhandler setup?
In-Reply-To: <7d2dd37bf7033362941883d94d0d9fff@dscpl.com.au>
References: <1b86ca3d12073700e004dbf8c632e925@ixopusada.com>
	<eb31d0b2cd237177c63ada0f30b354cd@dscpl.com.au>
	<bf10f5f08cc0a26fe706e91aa2557691@ixopusada.com>
	<c81dfac26014a65427f09a833aaf43fa@dscpl.com.au>
	<9ae79ec1086d0d39da556919bf7cfd05@ixopusada.com>
	<7d2dd37bf7033362941883d94d0d9fff@dscpl.com.au>
Message-ID: <a35725e379ed93c796c123b00871aeb6@ixopusada.com>

Hi,

I am not sure whether I should start a new thread, but my issues are 
not yet solved and the subject line is still partly accurate, so I'll 
just continue.

To get my ideas working, I tried both the options that I saw in my last 
post, but I am getting stuck in both.

Let me start with the one, with which I progressed the most:
1. Don't use transhandler. Have a main.py as the PythonHandler for the 
www/root directory.

<Directory /var/www/root>
     SetHandler mod_python
     PythonHandler main
</Directory>

---- with main.py: ----
def handler(req):
	extension = os.path.splitext(req.filename)[1]
	if extension == ".html" or extension == "":
		if not os.path.exists(req.filename):
			... (handle further)
			return apache.OK
		else:
			if extension == '':
				req.filename = req.filename + "/index.html" # THIS LINE SEEMS NOT 
TO HAVE AN EFFECT
			return apache.DECLINED
	else:
		return apache.DECLINED

When a url is requested for an existent .html file, it works fine: 
apache serves the .html file itself. However if the url is only the 
name of a directory, I can't seem to give apache its normal ?complete? 
behavior. (E.g. the url www.foobar.com/foo/ (assuming the directory 
foo/ exists) does not return a directory listing of the contents of 
that directory nor does it display www.foobar.com/foo/index.html if 
there is such a file.) And it seems I also can't change the filename 
anymore in that handler phase. The only solution I found was to put an 
.htaccess file in /foo/ saying "SetHandler none". But I was actually 
looking for a way in which I would not need these .htaccess files when 
there is just an index.html present. Is there any way I still can set 
the filename in this phase?


Then I thought that maybe transhandler could help me in the end, but I 
got stuck with that one rather soon.
2. Using transhandler to set the filename and have it decide what 
apache should be doing.

<IfModule mod_python.c>
     PythonPath "sys.path + ['/var/www/python/']"
     PythonTransHandler translate
</IfModule>

---- and from translate.py: ----

def transhandler(req):
	...
	req.filename = '/var/www/python/main.py'
	return apache.OK

The issue I run against is that now apache shows the code from main.py. 
It doesn't execute it, it just shows the code. Despite all the other 
directives I use (in httpd.conf or .htaccess). Even when I add the line 
'req.add_handler("PythonHandler", "main")' to the mix, it won't execute 
main.py, just displays its code. Any ideas how to I solve this?

Many thanks,
dirk


On 31-aug-05, at 00:49, Graham Dumpleton wrote:

>
> On 31/08/2005, at 5:44 AM, IR labs wrote:
>>
>> But thanks for this solution to have everything (also the stuff we 
>> don't want to handle) handled by the handler in main.py.
>> My only remaining question now, would be what you recommend?
>> 1. Don't use the transhandle phase, and have *all* requests handled 
>> by the main PythonHandler, including the ones it shouldn't handle ( 
>> apache.DECLINE)
>> or.
>> 2. Use the TransHandler phase to discern between real physical 
>> present files (requests for .html, .css, .js etc. files) and virtual 
>> pages that should be handled by main.py
>
> It all depends on exactly what you want to do, as these probably aren't
> the only alternatives. If you want a request against a directory to be
> rerouted, look at the DirectoryIndex directive. If you want to reroute 
> a
> request against a non existent file based on a specific extension type,
> you may also be able to use mod_rewrite. Finally, there is also the
> ErrorDocument directive for non existent files as well. All of these
> might feasibly be harnessed to provide part of the solution and using
> Python to make the decision may be a more complicated choice than some
> of Apache's core features designed for this sort of thing.
>
> Graham
>
>
>

-----------------------------
Dirk van Oosterbosch
dirk@ixopusada.com
-----------------------------



From scott_list at mischko.com  Thu Sep  1 21:33:53 2005
From: scott_list at mischko.com (Scott Chapman)
Date: Thu Sep  1 21:34:02 2005
Subject: [mod_python] I use a custom login form. Can I make the userid
	showup in the access log?
In-Reply-To: <1125616968.20362@dscpl.user.openhosting.com>
References: <1125616968.20362@dscpl.user.openhosting.com>
Message-ID: <4317AC01.4090104@mischko.com>

Graham Dumpleton wrote:
> Scott Chapman wrote ..
> 
>>I'm using the latest apache2 and mod_python.
>>
>>I'd really like to be able to change the username for logging purposes
>>in the 
>>access file.  Can this be done?
> 
> 
> In your handler, assign the user name to "req.user". Eg:
> 
>   req.user = "scott"
> 
> This is the second time this question has come up lately, so looks like
> I better add a FAQ entry. :-)
> 
> Graham
> 
> 

Graham,
Thanks for the tip. It works.

Scott

From grahamd at dscpl.com.au  Thu Sep  1 21:39:08 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Thu Sep  1 21:39:14 2005
Subject: [mod_python] transhandler setup?
Message-ID: <1125625148.8376@dscpl.user.openhosting.com>

IR labs wrote ..
> Hi,
> 
> I am not sure whether I should start a new thread, but my issues are 
> not yet solved and the subject line is still partly accurate, so I'll 
> just continue.
> 
> To get my ideas working, I tried both the options that I saw in my last
> post, but I am getting stuck in both.
> 
> Let me start with the one, with which I progressed the most:
> 1. Don't use transhandler. Have a main.py as the PythonHandler for the
> www/root directory.
> 
> <Directory /var/www/root>
>      SetHandler mod_python
>      PythonHandler main
> </Directory>
> 
> ---- with main.py: ----
> def handler(req):
> 	extension = os.path.splitext(req.filename)[1]
> 	if extension == ".html" or extension == "":
> 		if not os.path.exists(req.filename):
> 			... (handle further)
> 			return apache.OK
> 		else:
> 			if extension == '':
> 				req.filename = req.filename + "/index.html" # THIS LINE SEEMS NOT
> TO HAVE AN EFFECT

Correct, it will not. You need to do an internal or external redirect to the URI
corresponding to what you want. For external redirect, you probably want:

  from mod_python import util
  util.redirect(req.uri+'/index.html')

This will send back a status to the browser to tell it to look in the alternate
location.

For an internal redirect, you probably want:

  req.internal_redirect(req.uri+'/index.html')

This will not send a response back to the browser and it will managed internal
to Apache. The downside of this approach is that the same page is returned
under two different URLs, as index.html can also be accessed directly. This
confuses the results of search engines.

> 			return apache.DECLINED
> 	else:
> 		return apache.DECLINED
> 
> When a url is requested for an existent .html file, it works fine: 
> apache serves the .html file itself. However if the url is only the 
> name of a directory, I can't seem to give apache its normal ?complete?
> behavior. (E.g. the url www.foobar.com/foo/ (assuming the directory 
> foo/ exists) does not return a directory listing of the contents of 
> that directory nor does it display www.foobar.com/foo/index.html if 
> there is such a file.) And it seems I also can't change the filename 
> anymore in that handler phase. The only solution I found was to put an
> .htaccess file in /foo/ saying "SetHandler none". But I was actually 
> looking for a way in which I would not need these .htaccess files when
> there is just an index.html present. Is there any way I still can set 
> the filename in this phase?
> 
> 
> Then I thought that maybe transhandler could help me in the end, but I
> got stuck with that one rather soon.
> 2. Using transhandler to set the filename and have it decide what 
> apache should be doing.
> 
> <IfModule mod_python.c>
>      PythonPath "sys.path + ['/var/www/python/']"
>      PythonTransHandler translate

Try adding here in addition to the above:

  AddHandler mod_python .py
  PythonHandler main

Ie., rather than trying to use req.add_handler(). What happens then?

> </IfModule>
> 
> ---- and from translate.py: ----
> 
> def transhandler(req):
> 	...
> 	req.filename = '/var/www/python/main.py'
> 	return apache.OK
> 
> The issue I run against is that now apache shows the code from main.py.
> It doesn't execute it, it just shows the code. Despite all the other 
> directives I use (in httpd.conf or .htaccess). Even when I add the line
> 'req.add_handler("PythonHandler", "main")' to the mix, it won't execute
> main.py, just displays its code. Any ideas how to I solve this?
> 
> Many thanks,
> dirk
> 
> 
> On 31-aug-05, at 00:49, Graham Dumpleton wrote:
> 
> >
> > On 31/08/2005, at 5:44 AM, IR labs wrote:
> >>
> >> But thanks for this solution to have everything (also the stuff we 
> >> don't want to handle) handled by the handler in main.py.
> >> My only remaining question now, would be what you recommend?
> >> 1. Don't use the transhandle phase, and have *all* requests handled
> >> by the main PythonHandler, including the ones it shouldn't handle (
> >> apache.DECLINE)
> >> or.
> >> 2. Use the TransHandler phase to discern between real physical 
> >> present files (requests for .html, .css, .js etc. files) and virtual
> >> pages that should be handled by main.py
> >
> > It all depends on exactly what you want to do, as these probably aren't
> > the only alternatives. If you want a request against a directory to be
> > rerouted, look at the DirectoryIndex directive. If you want to reroute
> > a
> > request against a non existent file based on a specific extension type,
> > you may also be able to use mod_rewrite. Finally, there is also the
> > ErrorDocument directive for non existent files as well. All of these
> > might feasibly be harnessed to provide part of the solution and using
> > Python to make the decision may be a more complicated choice than some
> > of Apache's core features designed for this sort of thing.
> >
> > Graham
> >
> >
> >
> 
> -----------------------------
> Dirk van Oosterbosch
> dirk@ixopusada.com
> -----------------------------
> 
> 
> 
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
From labs at ixopusada.com  Thu Sep  1 22:32:49 2005
From: labs at ixopusada.com (IR labs)
Date: Thu Sep  1 22:35:06 2005
Subject: [mod_python] transhandler setup?
In-Reply-To: <1125625148.8376@dscpl.user.openhosting.com>
References: <1125625148.8376@dscpl.user.openhosting.com>
Message-ID: <eb6c9b988005283762d146eab1ae6352@ixopusada.com>


On 2-sep-05, at 03:39, Graham Dumpleton wrote:
> For an internal redirect, you probably want:
>
>   req.internal_redirect(req.uri+'/index.html')
>
> This will not send a response back to the browser and it will managed 
> internal
> to Apache. The downside of this approach is that the same page is 
> returned
> under two different URLs, as index.html can also be accessed directly. 
> This
> confuses the results of search engines.

How does that confuses the results of search engines? Is it not 
standard web server behavior to go look for an index.html, index.py, 
index.php or alike when a url like www.myserver.com/some/directory/ is 
requested? (I mean: huh? Does it also confuses search engines when 
there are static directories and index.html files ???)


>> Then I thought that maybe transhandler could help me in the end, but I
>> got stuck with that one rather soon.
>> 2. Using transhandler to set the filename and have it decide what
>> apache should be doing.
>>
>> <IfModule mod_python.c>
>>      PythonPath "sys.path + ['/var/www/python/']"
>>      PythonTransHandler translate
>
> Try adding here in addition to the above:
>
>   AddHandler mod_python .py
>   PythonHandler main
>
> Ie., rather than trying to use req.add_handler(). What happens then?

Exactly the same. I.e the code of main.py is written to the browser as 
text/plain. Strange...


-----------------------------
Dirk van Oosterbosch
dirk@ixopusada.com
-----------------------------


From grahamd at dscpl.com.au  Thu Sep  1 23:07:42 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Thu Sep  1 23:07:48 2005
Subject: [mod_python] transhandler setup?
Message-ID: <1125630462.32234@dscpl.user.openhosting.com>

IR labs wrote ..
> 
> On 2-sep-05, at 03:39, Graham Dumpleton wrote:
> > For an internal redirect, you probably want:
> >
> >   req.internal_redirect(req.uri+'/index.html')
> >
> > This will not send a response back to the browser and it will managed
> > internal
> > to Apache. The downside of this approach is that the same page is 
> > returned
> > under two different URLs, as index.html can also be accessed directly.
> > This
> > confuses the results of search engines.
> 
> How does that confuses the results of search engines? Is it not 
> standard web server behavior to go look for an index.html, index.py, 
> index.php or alike when a url like www.myserver.com/some/directory/ is
> requested? (I mean: huh? Does it also confuses search engines when 
> there are static directories and index.html files ???)

Not confuse search engines so much, but the people who use the results.
I could also be wrong, but I would have thought that for the same search
time you would get back two matching URLs. Ie '/' and '/index.html'.
Ahhh, but then if the web server returns a Location header for '/' that
identifies '/index.html' instead, maybe they don't.

I could just be dreaming. :-(

From grahamd at dscpl.com.au  Thu Sep  1 23:12:01 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Thu Sep  1 23:12:06 2005
Subject: [mod_python] transhandler setup?
Message-ID: <1125630721.3086@dscpl.user.openhosting.com>

IR labs wrote ..
> >> Then I thought that maybe transhandler could help me in the end, but
> I
> >> got stuck with that one rather soon.
> >> 2. Using transhandler to set the filename and have it decide what
> >> apache should be doing.
> >>
> >> <IfModule mod_python.c>
> >>      PythonPath "sys.path + ['/var/www/python/']"
> >>      PythonTransHandler translate
> >
> > Try adding here in addition to the above:
> >
> >   AddHandler mod_python .py
> >   PythonHandler main
> >
> > Ie., rather than trying to use req.add_handler(). What happens then?
> 
> Exactly the same. I.e the code of main.py is written to the browser as
> text/plain. Strange...

I'm running out of ideas, it may just be a configuration issue. If you haven't
already, look through past mailing list messages about transhandler. Eg.

  http://www.google.com/search?q=inurl%3Apipermail+transhandler+main&q=site%3Awww.modpython.org

You can also just type in "transhandler" into search box on mod_python
home page.

Maybe that will help.

Graham
From tbellefy at yahoo.com  Fri Sep  2 04:31:41 2005
From: tbellefy at yahoo.com (Tim Bellefy)
Date: Fri Sep  2 04:32:39 2005
Subject: [mod_python] Install error..
Message-ID: <20050902083141.62269.qmail@web31008.mail.mud.yahoo.com>

Hi All,

This is officially my first mailing list post. (Just
had to say that)

Anyway, I'm having troubles installing mod_python with
a fresh install of Python and Apache.

OS: FreeBSD 4.7-RELEASE-p28 #40
Python: 2.4.1
Apache: 2.0.54

Apache was installed via:
./configure --enable-mods-shared --enable-threads
make
make install

Apache and Python both work great.

Then I tried to configure mod_python using:
./configure --with-apxs=/usr/local/apache2/bin/apxs

The output found in config.log doesn't make any sense
to me. Below is the snippet from config.log:

Any help would be greatly appreciated!


#################################################
configure:2694: gcc -o conftest -g -O2  
-L/usr/local/lib/python2.4/config conftest.c
-lpython2.4     -lutil   -lm                  -lm  >&5
/usr/local/lib/python2.4/config/libpython2.4.a(posixmodule.o):
In function `posix_tmpnam':
/tim/software/Python-2.4.1/./Modules/posixmodule.c(.text+0x3d43):
warning: tmpnam() possibly used unsafely; consider
using mkstemp()
/usr/local/lib/python2.4/config/libpython2.4.a(posixmodule.o):
In function `posix_tempnam':
/tim/software/Python-2.4.1/./Modules/posixmodule.c(.text+0x3ca6):
warning: tempnam() possibly used unsafely; consider
using mkstemp()
/usr/local/lib/python2.4/config/libpython2.4.a(thread.o):
In function `find_key':
/tim/software/Python-2.4.1/Python/thread.c(.text+0x25):
undefined reference to `pthread_self'
/tim/software/Python-2.4.1/Python/thread.c(.text+0x3d):
undefined reference to `sem_wait'
/tim/software/Python-2.4.1/Python/thread.c(.text+0xc0):
undefined reference to `sem_post'
/usr/local/lib/python2.4/config/libpython2.4.a(thread.o):
In function `PyThread_delete_key':
/tim/software/Python-2.4.1/Python/thread.c(.text+0xfd):
undefined reference to `sem_wait'
/tim/software/Python-2.4.1/Python/thread.c(.text+0x162):
undefined reference to `sem_post'
/usr/local/lib/python2.4/config/libpython2.4.a(thread.o):
In function `PyThread_delete_key_value':
/tim/software/Python-2.4.1/Python/thread.c(.text+0x1a9):
undefined reference to `pthread_self'
/tim/software/Python-2.4.1/Python/thread.c(.text+0x1c1):
undefined reference to `sem_wait'
/tim/software/Python-2.4.1/Python/thread.c(.text+0x220):
undefined reference to `sem_post'
/usr/local/lib/python2.4/config/libpython2.4.a(thread.o):
In function `PyThread_start_new_thread':
/tim/software/Python-2.4.1/Python/thread_pthread.h(.text+0x28b):
undefined reference to `pthread_create'
/tim/software/Python-2.4.1/Python/thread_pthread.h(.text+0x29d):
undefined reference to `pthread_detach'
/usr/local/lib/python2.4/config/libpython2.4.a(thread.o):
In function `PyThread_get_thread_ident':
/tim/software/Python-2.4.1/Python/thread_pthread.h(.text+0x2ef):
undefined reference to `pthread_self'
/usr/local/lib/python2.4/config/libpython2.4.a(thread.o):
In function `PyThread_allocate_lock':
/tim/software/Python-2.4.1/Python/thread_pthread.h(.text+0x33a):
undefined reference to `sem_init'
/usr/local/lib/python2.4/config/libpython2.4.a(thread.o):
In function `PyThread_free_lock':
/tim/software/Python-2.4.1/Python/thread_pthread.h:313:
undefined reference to `sem_destroy'
/usr/local/lib/python2.4/config/libpython2.4.a(thread.o):
In function `PyThread_acquire_lock':
/tim/software/Python-2.4.1/Python/thread_pthread.h:299:
undefined reference to `sem_wait'
/tim/software/Python-2.4.1/Python/thread_pthread.h:298:
undefined reference to `sem_trywait'
/usr/local/lib/python2.4/config/libpython2.4.a(thread.o):
In function `PyThread_release_lock':
/tim/software/Python-2.4.1/Python/thread_pthread.h(.text+0x43d):
undefined reference to `sem_post'
/usr/local/lib/python2.4/config/libpython2.4.a(thread.o):
In function `PyThread_create_key':
/tim/software/Python-2.4.1/Python/thread.c:302:
undefined reference to `sem_init'
configure:2697: $? = 1
configure: failed program was:
#line 2668 "configure"
#include "confdefs.h"





		
____________________________________________________
Start your day with Yahoo! - make it your home page 
http://www.yahoo.com/r/hs 
 
From grahamd at dscpl.com.au  Fri Sep  2 05:15:09 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Fri Sep  2 05:15:30 2005
Subject: [mod_python] Install error..
In-Reply-To: <20050902083141.62269.qmail@web31008.mail.mud.yahoo.com>
References: <20050902083141.62269.qmail@web31008.mail.mud.yahoo.com>
Message-ID: <F7E53098-3B24-40F4-8E0D-5033EA23E38C@dscpl.com.au>

You need to force linking of -lc_r version of -lc. Ie., POSIX threads
functions on FreeBSD are in separate re-entrant version of C library.

On 02/09/2005, at 6:31 PM, Tim Bellefy wrote:

> Hi All,
>
> This is officially my first mailing list post. (Just
> had to say that)
>
> Anyway, I'm having troubles installing mod_python with
> a fresh install of Python and Apache.
>
> OS: FreeBSD 4.7-RELEASE-p28 #40
> Python: 2.4.1
> Apache: 2.0.54
>
> Apache was installed via:
> ./configure --enable-mods-shared --enable-threads
> make
> make install
>
> Apache and Python both work great.
>
> Then I tried to configure mod_python using:
> ./configure --with-apxs=/usr/local/apache2/bin/apxs
>
> The output found in config.log doesn't make any sense
> to me. Below is the snippet from config.log:
>
> Any help would be greatly appreciated!
>
>
> #################################################
> configure:2694: gcc -o conftest -g -O2
> -L/usr/local/lib/python2.4/config conftest.c
> -lpython2.4     -lutil   -lm                  -lm  >&5
> /usr/local/lib/python2.4/config/libpython2.4.a(posixmodule.o):
> In function `posix_tmpnam':
> /tim/software/Python-2.4.1/./Modules/posixmodule.c(.text+0x3d43):
> warning: tmpnam() possibly used unsafely; consider
> using mkstemp()
> /usr/local/lib/python2.4/config/libpython2.4.a(posixmodule.o):
> In function `posix_tempnam':
> /tim/software/Python-2.4.1/./Modules/posixmodule.c(.text+0x3ca6):
> warning: tempnam() possibly used unsafely; consider
> using mkstemp()
> /usr/local/lib/python2.4/config/libpython2.4.a(thread.o):
> In function `find_key':
> /tim/software/Python-2.4.1/Python/thread.c(.text+0x25):
> undefined reference to `pthread_self'
> /tim/software/Python-2.4.1/Python/thread.c(.text+0x3d):
> undefined reference to `sem_wait'
> /tim/software/Python-2.4.1/Python/thread.c(.text+0xc0):
> undefined reference to `sem_post'
> /usr/local/lib/python2.4/config/libpython2.4.a(thread.o):
> In function `PyThread_delete_key':
> /tim/software/Python-2.4.1/Python/thread.c(.text+0xfd):
> undefined reference to `sem_wait'
> /tim/software/Python-2.4.1/Python/thread.c(.text+0x162):
> undefined reference to `sem_post'
> /usr/local/lib/python2.4/config/libpython2.4.a(thread.o):
> In function `PyThread_delete_key_value':
> /tim/software/Python-2.4.1/Python/thread.c(.text+0x1a9):
> undefined reference to `pthread_self'
> /tim/software/Python-2.4.1/Python/thread.c(.text+0x1c1):
> undefined reference to `sem_wait'
> /tim/software/Python-2.4.1/Python/thread.c(.text+0x220):
> undefined reference to `sem_post'
> /usr/local/lib/python2.4/config/libpython2.4.a(thread.o):
> In function `PyThread_start_new_thread':
> /tim/software/Python-2.4.1/Python/thread_pthread.h(.text+0x28b):
> undefined reference to `pthread_create'
> /tim/software/Python-2.4.1/Python/thread_pthread.h(.text+0x29d):
> undefined reference to `pthread_detach'
> /usr/local/lib/python2.4/config/libpython2.4.a(thread.o):
> In function `PyThread_get_thread_ident':
> /tim/software/Python-2.4.1/Python/thread_pthread.h(.text+0x2ef):
> undefined reference to `pthread_self'
> /usr/local/lib/python2.4/config/libpython2.4.a(thread.o):
> In function `PyThread_allocate_lock':
> /tim/software/Python-2.4.1/Python/thread_pthread.h(.text+0x33a):
> undefined reference to `sem_init'
> /usr/local/lib/python2.4/config/libpython2.4.a(thread.o):
> In function `PyThread_free_lock':
> /tim/software/Python-2.4.1/Python/thread_pthread.h:313:
> undefined reference to `sem_destroy'
> /usr/local/lib/python2.4/config/libpython2.4.a(thread.o):
> In function `PyThread_acquire_lock':
> /tim/software/Python-2.4.1/Python/thread_pthread.h:299:
> undefined reference to `sem_wait'
> /tim/software/Python-2.4.1/Python/thread_pthread.h:298:
> undefined reference to `sem_trywait'
> /usr/local/lib/python2.4/config/libpython2.4.a(thread.o):
> In function `PyThread_release_lock':
> /tim/software/Python-2.4.1/Python/thread_pthread.h(.text+0x43d):
> undefined reference to `sem_post'
> /usr/local/lib/python2.4/config/libpython2.4.a(thread.o):
> In function `PyThread_create_key':
> /tim/software/Python-2.4.1/Python/thread.c:302:
> undefined reference to `sem_init'
> configure:2697: $? = 1
> configure: failed program was:
> #line 2668 "configure"
> #include "confdefs.h"
>
>
>
>
>
>
> ____________________________________________________
> Start your day with Yahoo! - make it your home page
> http://www.yahoo.com/r/hs
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>

From grahamd at dscpl.com.au  Fri Sep  2 06:54:16 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Fri Sep  2 06:54:23 2005
Subject: [mod_python] Install error..
In-Reply-To: <F7E53098-3B24-40F4-8E0D-5033EA23E38C@dscpl.com.au>
References: <20050902083141.62269.qmail@web31008.mail.mud.yahoo.com>
	<F7E53098-3B24-40F4-8E0D-5033EA23E38C@dscpl.com.au>
Message-ID: <14f9a61566c80d59135626108607735e@dscpl.com.au>

BTW, your Apache was built with threads so you shouldn't have an issue,
but be mindful of following as well:

   http://www.modpython.org/FAQ/faqw.py?req=show&file=faq02.011.htp

On 02/09/2005, at 7:15 PM, Graham Dumpleton wrote:

> You need to force linking of -lc_r version of -lc. Ie., POSIX threads
> functions on FreeBSD are in separate re-entrant version of C library.
>
> On 02/09/2005, at 6:31 PM, Tim Bellefy wrote:
>
>> Hi All,
>>
>> This is officially my first mailing list post. (Just
>> had to say that)
>>
>> Anyway, I'm having troubles installing mod_python with
>> a fresh install of Python and Apache.
>>
>> OS: FreeBSD 4.7-RELEASE-p28 #40
>> Python: 2.4.1
>> Apache: 2.0.54
>>
>> Apache was installed via:
>> ./configure --enable-mods-shared --enable-threads
>> make
>> make install
>>
>> Apache and Python both work great.
>>
>> Then I tried to configure mod_python using:
>> ./configure --with-apxs=/usr/local/apache2/bin/apxs
>>
>> The output found in config.log doesn't make any sense
>> to me. Below is the snippet from config.log:
>>
>> Any help would be greatly appreciated!
>>
>>
>> #################################################
>> configure:2694: gcc -o conftest -g -O2
>> -L/usr/local/lib/python2.4/config conftest.c
>> -lpython2.4     -lutil   -lm                  -lm  >&5
>> /usr/local/lib/python2.4/config/libpython2.4.a(posixmodule.o):
>> In function `posix_tmpnam':
>> /tim/software/Python-2.4.1/./Modules/posixmodule.c(.text+0x3d43):
>> warning: tmpnam() possibly used unsafely; consider
>> using mkstemp()
>> /usr/local/lib/python2.4/config/libpython2.4.a(posixmodule.o):
>> In function `posix_tempnam':
>> /tim/software/Python-2.4.1/./Modules/posixmodule.c(.text+0x3ca6):
>> warning: tempnam() possibly used unsafely; consider
>> using mkstemp()
>> /usr/local/lib/python2.4/config/libpython2.4.a(thread.o):
>> In function `find_key':
>> /tim/software/Python-2.4.1/Python/thread.c(.text+0x25):
>> undefined reference to `pthread_self'
>> /tim/software/Python-2.4.1/Python/thread.c(.text+0x3d):
>> undefined reference to `sem_wait'
>> /tim/software/Python-2.4.1/Python/thread.c(.text+0xc0):
>> undefined reference to `sem_post'
>> /usr/local/lib/python2.4/config/libpython2.4.a(thread.o):
>> In function `PyThread_delete_key':
>> /tim/software/Python-2.4.1/Python/thread.c(.text+0xfd):
>> undefined reference to `sem_wait'
>> /tim/software/Python-2.4.1/Python/thread.c(.text+0x162):
>> undefined reference to `sem_post'
>> /usr/local/lib/python2.4/config/libpython2.4.a(thread.o):
>> In function `PyThread_delete_key_value':
>> /tim/software/Python-2.4.1/Python/thread.c(.text+0x1a9):
>> undefined reference to `pthread_self'
>> /tim/software/Python-2.4.1/Python/thread.c(.text+0x1c1):
>> undefined reference to `sem_wait'
>> /tim/software/Python-2.4.1/Python/thread.c(.text+0x220):
>> undefined reference to `sem_post'
>> /usr/local/lib/python2.4/config/libpython2.4.a(thread.o):
>> In function `PyThread_start_new_thread':
>> /tim/software/Python-2.4.1/Python/thread_pthread.h(.text+0x28b):
>> undefined reference to `pthread_create'
>> /tim/software/Python-2.4.1/Python/thread_pthread.h(.text+0x29d):
>> undefined reference to `pthread_detach'
>> /usr/local/lib/python2.4/config/libpython2.4.a(thread.o):
>> In function `PyThread_get_thread_ident':
>> /tim/software/Python-2.4.1/Python/thread_pthread.h(.text+0x2ef):
>> undefined reference to `pthread_self'
>> /usr/local/lib/python2.4/config/libpython2.4.a(thread.o):
>> In function `PyThread_allocate_lock':
>> /tim/software/Python-2.4.1/Python/thread_pthread.h(.text+0x33a):
>> undefined reference to `sem_init'
>> /usr/local/lib/python2.4/config/libpython2.4.a(thread.o):
>> In function `PyThread_free_lock':
>> /tim/software/Python-2.4.1/Python/thread_pthread.h:313:
>> undefined reference to `sem_destroy'
>> /usr/local/lib/python2.4/config/libpython2.4.a(thread.o):
>> In function `PyThread_acquire_lock':
>> /tim/software/Python-2.4.1/Python/thread_pthread.h:299:
>> undefined reference to `sem_wait'
>> /tim/software/Python-2.4.1/Python/thread_pthread.h:298:
>> undefined reference to `sem_trywait'
>> /usr/local/lib/python2.4/config/libpython2.4.a(thread.o):
>> In function `PyThread_release_lock':
>> /tim/software/Python-2.4.1/Python/thread_pthread.h(.text+0x43d):
>> undefined reference to `sem_post'
>> /usr/local/lib/python2.4/config/libpython2.4.a(thread.o):
>> In function `PyThread_create_key':
>> /tim/software/Python-2.4.1/Python/thread.c:302:
>> undefined reference to `sem_init'
>> configure:2697: $? = 1
>> configure: failed program was:
>> #line 2668 "configure"
>> #include "confdefs.h"
>>
>>
>>
>>
>>
>>
>> ____________________________________________________
>> Start your day with Yahoo! - make it your home page
>> http://www.yahoo.com/r/hs
>>
>> _______________________________________________
>> Mod_python mailing list
>> Mod_python@modpython.org
>> http://mailman.modpython.org/mailman/listinfo/mod_python
>>
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python

From tbellefy at yahoo.com  Fri Sep  2 12:08:40 2005
From: tbellefy at yahoo.com (Tim Bellefy)
Date: Fri Sep  2 12:08:49 2005
Subject: [mod_python] Install error..
In-Reply-To: <14f9a61566c80d59135626108607735e@dscpl.com.au>
Message-ID: <20050902160840.83767.qmail@web31012.mail.mud.yahoo.com>

Thanks for the tips. 
 
"You need to force linking of -lc_r version of -lc."
 
You'll have to excuse my lack of knowledge on this part but I have NO IDEA what that means..
 
:-)
 
Thanks in advance!
 
"To get to the next level in your life requires a higher level of thinking than the level of thinking that got you where you are." - Thomas Edison
 
 


Graham Dumpleton <grahamd@dscpl.com.au> wrote:BTW, your Apache was built with threads so you shouldn't have an issue,
but be mindful of following as well:

http://www.modpython.org/FAQ/faqw.py?req=show&file=faq02.011.htp

On 02/09/2005, at 7:15 PM, Graham Dumpleton wrote:

> You need to force linking of -lc_r version of -lc. Ie., POSIX threads
> functions on FreeBSD are in separate re-entrant version of C library.
>
> On 02/09/2005, at 6:31 PM, Tim Bellefy wrote:
>
>> Hi All,
>>
>> This is officially my first mailing list post. (Just
>> had to say that)
>>
>> Anyway, I'm having troubles installing mod_python with
>> a fresh install of Python and Apache.
>>
>> OS: FreeBSD 4.7-RELEASE-p28 #40
>> Python: 2.4.1
>> Apache: 2.0.54
>>
>> Apache was installed via:
>> ./configure --enable-mods-shared --enable-threads
>> make
>> make install
>>
>> Apache and Python both work great.
>>
>> Then I tried to configure mod_python using:
>> ./configure --with-apxs=/usr/local/apache2/bin/apxs
>>
>> The output found in config.log doesn't make any sense
>> to me. Below is the snippet from config.log:
>>
>> Any help would be greatly appreciated!
>>
>>
>> #################################################
>> configure:2694: gcc -o conftest -g -O2
>> -L/usr/local/lib/python2.4/config conftest.c
>> -lpython2.4 -lutil -lm -lm >&5
>> /usr/local/lib/python2.4/config/libpython2.4.a(posixmodule.o):
>> In function `posix_tmpnam':
>> /tim/software/Python-2.4.1/./Modules/posixmodule.c(.text+0x3d43):
>> warning: tmpnam() possibly used unsafely; consider
>> using mkstemp()
>> /usr/local/lib/python2.4/config/libpython2.4.a(posixmodule.o):
>> In function `posix_tempnam':
>> /tim/software/Python-2.4.1/./Modules/posixmodule.c(.text+0x3ca6):
>> warning: tempnam() possibly used unsafely; consider
>> using mkstemp()
>> /usr/local/lib/python2.4/config/libpython2.4.a(thread.o):
>> In function `find_key':
>> /tim/software/Python-2.4.1/Python/thread.c(.text+0x25):
>> undefined reference to `pthread_self'
>> /tim/software/Python-2.4.1/Python/thread.c(.text+0x3d):
>> undefined reference to `sem_wait'
>> /tim/software/Python-2.4.1/Python/thread.c(.text+0xc0):
>> undefined reference to `sem_post'
>> /usr/local/lib/python2.4/config/libpython2.4.a(thread.o):
>> In function `PyThread_delete_key':
>> /tim/software/Python-2.4.1/Python/thread.c(.text+0xfd):
>> undefined reference to `sem_wait'
>> /tim/software/Python-2.4.1/Python/thread.c(.text+0x162):
>> undefined reference to `sem_post'
>> /usr/local/lib/python2.4/config/libpython2.4.a(thread.o):
>> In function `PyThread_delete_key_value':
>> /tim/software/Python-2.4.1/Python/thread.c(.text+0x1a9):
>> undefined reference to `pthread_self'
>> /tim/software/Python-2.4.1/Python/thread.c(.text+0x1c1):
>> undefined reference to `sem_wait'
>> /tim/software/Python-2.4.1/Python/thread.c(.text+0x220):
>> undefined reference to `sem_post'
>> /usr/local/lib/python2.4/config/libpython2.4.a(thread.o):
>> In function `PyThread_start_new_thread':
>> /tim/software/Python-2.4.1/Python/thread_pthread.h(.text+0x28b):
>> undefined reference to `pthread_create'
>> /tim/software/Python-2.4.1/Python/thread_pthread.h(.text+0x29d):
>> undefined reference to `pthread_detach'
>> /usr/local/lib/python2.4/config/libpython2.4.a(thread.o):
>> In function `PyThread_get_thread_ident':
>> /tim/software/Python-2.4.1/Python/thread_pthread.h(.text+0x2ef):
>> undefined reference to `pthread_self'
>> /usr/local/lib/python2.4/config/libpython2.4.a(thread.o):
>> In function `PyThread_allocate_lock':
>> /tim/software/Python-2.4.1/Python/thread_pthread.h(.text+0x33a):
>> undefined reference to `sem_init'
>> /usr/local/lib/python2.4/config/libpython2.4.a(thread.o):
>> In function `PyThread_free_lock':
>> /tim/software/Python-2.4.1/Python/thread_pthread.h:313:
>> undefined reference to `sem_destroy'
>> /usr/local/lib/python2.4/config/libpython2.4.a(thread.o):
>> In function `PyThread_acquire_lock':
>> /tim/software/Python-2.4.1/Python/thread_pthread.h:299:
>> undefined reference to `sem_wait'
>> /tim/software/Python-2.4.1/Python/thread_pthread.h:298:
>> undefined reference to `sem_trywait'
>> /usr/local/lib/python2.4/config/libpython2.4.a(thread.o):
>> In function `PyThread_release_lock':
>> /tim/software/Python-2.4.1/Python/thread_pthread.h(.text+0x43d):
>> undefined reference to `sem_post'
>> /usr/local/lib/python2.4/config/libpython2.4.a(thread.o):
>> In function `PyThread_create_key':
>> /tim/software/Python-2.4.1/Python/thread.c:302:
>> undefined reference to `sem_init'
>> configure:2697: $? = 1
>> configure: failed program was:
>> #line 2668 "configure"
>> #include "confdefs.h"
>>
>>
>>
>>
>>
>>
>> ____________________________________________________
>> Start your day with Yahoo! - make it your home page
>> http://www.yahoo.com/r/hs
>>
>> _______________________________________________
>> Mod_python mailing list
>> Mod_python@modpython.org
>> http://mailman.modpython.org/mailman/listinfo/mod_python
>>
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python



__________________________________________________
Do You Yahoo!?
Tired of spam?  Yahoo! Mail has the best spam protection around 
http://mail.yahoo.com 
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20050902/302883f8/attachment.html
From grahamd at dscpl.com.au  Fri Sep  2 17:20:13 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Fri Sep  2 17:20:21 2005
Subject: [mod_python] Install error..
Message-ID: <1125696013.4027@dscpl.user.openhosting.com>

You got me at a really bad time, in an airport lounge, no access
to source code and possibly no Internet access for days. I'll give
a pointer to what to look for, but need someone else to step and
guide you better.

Standard C runtime library is called libc. There is a version
called libc_r which is for when using multithreading. You may find
an option to configure for Python to get it to enable threading.
On FreeBSD I think it defaults to off. If not, you may be able
to use:

  LDLIBS=-lc_r ./configure

Check the source code for configure to see if it looks for LDLIBS
for additional libraries to link in when building executables. Also
check the README/INSTALL instructions file for Python as am sure it
may talk about this platform specific issue of multithreading on BSD
type platforms.

Anyway, gotta fly, literally. :-)

Good luck.

Graham


Tim Bellefy wrote ..
> Thanks for the tips. 
>  
> "You need to force linking of -lc_r version of -lc."
>  
> You'll have to excuse my lack of knowledge on this part but I have NO IDEA
> what that means..
>  
> :-)
>  
> Thanks in advance!
>  
> "To get to the next level in your life requires a higher level of thinking
> than the level of thinking that got you where you are." - Thomas Edison
>  
>  
> 
> 
> Graham Dumpleton <grahamd@dscpl.com.au> wrote:BTW, your Apache was built
> with threads so you shouldn't have an issue,
> but be mindful of following as well:
> 
> http://www.modpython.org/FAQ/faqw.py?req=show&file=faq02.011.htp
> 
> On 02/09/2005, at 7:15 PM, Graham Dumpleton wrote:
> 
> > You need to force linking of -lc_r version of -lc. Ie., POSIX threads
> > functions on FreeBSD are in separate re-entrant version of C library.
> >
> > On 02/09/2005, at 6:31 PM, Tim Bellefy wrote:
> >
> >> Hi All,
> >>
> >> This is officially my first mailing list post. (Just
> >> had to say that)
> >>
> >> Anyway, I'm having troubles installing mod_python with
> >> a fresh install of Python and Apache.
> >>
> >> OS: FreeBSD 4.7-RELEASE-p28 #40
> >> Python: 2.4.1
> >> Apache: 2.0.54
> >>
> >> Apache was installed via:
> >> ./configure --enable-mods-shared --enable-threads
> >> make
> >> make install
> >>
> >> Apache and Python both work great.
> >>
> >> Then I tried to configure mod_python using:
> >> ./configure --with-apxs=/usr/local/apache2/bin/apxs
> >>
> >> The output found in config.log doesn't make any sense
> >> to me. Below is the snippet from config.log:
> >>
> >> Any help would be greatly appreciated!
> >>
> >>
> >> #################################################
> >> configure:2694: gcc -o conftest -g -O2
> >> -L/usr/local/lib/python2.4/config conftest.c
> >> -lpython2.4 -lutil -lm -lm >&5
> >> /usr/local/lib/python2.4/config/libpython2.4.a(posixmodule.o):
> >> In function `posix_tmpnam':
> >> /tim/software/Python-2.4.1/./Modules/posixmodule.c(.text+0x3d43):
> >> warning: tmpnam() possibly used unsafely; consider
> >> using mkstemp()
> >> /usr/local/lib/python2.4/config/libpython2.4.a(posixmodule.o):
> >> In function `posix_tempnam':
> >> /tim/software/Python-2.4.1/./Modules/posixmodule.c(.text+0x3ca6):
> >> warning: tempnam() possibly used unsafely; consider
> >> using mkstemp()
> >> /usr/local/lib/python2.4/config/libpython2.4.a(thread.o):
> >> In function `find_key':
> >> /tim/software/Python-2.4.1/Python/thread.c(.text+0x25):
> >> undefined reference to `pthread_self'
> >> /tim/software/Python-2.4.1/Python/thread.c(.text+0x3d):
> >> undefined reference to `sem_wait'
> >> /tim/software/Python-2.4.1/Python/thread.c(.text+0xc0):
> >> undefined reference to `sem_post'
> >> /usr/local/lib/python2.4/config/libpython2.4.a(thread.o):
> >> In function `PyThread_delete_key':
> >> /tim/software/Python-2.4.1/Python/thread.c(.text+0xfd):
> >> undefined reference to `sem_wait'
> >> /tim/software/Python-2.4.1/Python/thread.c(.text+0x162):
> >> undefined reference to `sem_post'
> >> /usr/local/lib/python2.4/config/libpython2.4.a(thread.o):
> >> In function `PyThread_delete_key_value':
> >> /tim/software/Python-2.4.1/Python/thread.c(.text+0x1a9):
> >> undefined reference to `pthread_self'
> >> /tim/software/Python-2.4.1/Python/thread.c(.text+0x1c1):
> >> undefined reference to `sem_wait'
> >> /tim/software/Python-2.4.1/Python/thread.c(.text+0x220):
> >> undefined reference to `sem_post'
> >> /usr/local/lib/python2.4/config/libpython2.4.a(thread.o):
> >> In function `PyThread_start_new_thread':
> >> /tim/software/Python-2.4.1/Python/thread_pthread.h(.text+0x28b):
> >> undefined reference to `pthread_create'
> >> /tim/software/Python-2.4.1/Python/thread_pthread.h(.text+0x29d):
> >> undefined reference to `pthread_detach'
> >> /usr/local/lib/python2.4/config/libpython2.4.a(thread.o):
> >> In function `PyThread_get_thread_ident':
> >> /tim/software/Python-2.4.1/Python/thread_pthread.h(.text+0x2ef):
> >> undefined reference to `pthread_self'
> >> /usr/local/lib/python2.4/config/libpython2.4.a(thread.o):
> >> In function `PyThread_allocate_lock':
> >> /tim/software/Python-2.4.1/Python/thread_pthread.h(.text+0x33a):
> >> undefined reference to `sem_init'
> >> /usr/local/lib/python2.4/config/libpython2.4.a(thread.o):
> >> In function `PyThread_free_lock':
> >> /tim/software/Python-2.4.1/Python/thread_pthread.h:313:
> >> undefined reference to `sem_destroy'
> >> /usr/local/lib/python2.4/config/libpython2.4.a(thread.o):
> >> In function `PyThread_acquire_lock':
> >> /tim/software/Python-2.4.1/Python/thread_pthread.h:299:
> >> undefined reference to `sem_wait'
> >> /tim/software/Python-2.4.1/Python/thread_pthread.h:298:
> >> undefined reference to `sem_trywait'
> >> /usr/local/lib/python2.4/config/libpython2.4.a(thread.o):
> >> In function `PyThread_release_lock':
> >> /tim/software/Python-2.4.1/Python/thread_pthread.h(.text+0x43d):
> >> undefined reference to `sem_post'
> >> /usr/local/lib/python2.4/config/libpython2.4.a(thread.o):
> >> In function `PyThread_create_key':
> >> /tim/software/Python-2.4.1/Python/thread.c:302:
> >> undefined reference to `sem_init'
> >> configure:2697: $? = 1
> >> configure: failed program was:
> >> #line 2668 "configure"
> >> #include "confdefs.h"
> >>
> >>
> >>
> >>
> >>
> >>
> >> ____________________________________________________
> >> Start your day with Yahoo! - make it your home page
> >> http://www.yahoo.com/r/hs
> >>
> >> _______________________________________________
> >> Mod_python mailing list
> >> Mod_python@modpython.org
> >> http://mailman.modpython.org/mailman/listinfo/mod_python
> >>
> >
> > _______________________________________________
> > Mod_python mailing list
> > Mod_python@modpython.org
> > http://mailman.modpython.org/mailman/listinfo/mod_python
> 
> 
> 
> __________________________________________________
> Do You Yahoo!?
> Tired of spam?  Yahoo! Mail has the best spam protection around 
> http://mail.yahoo.com 
From jamestmcneill-python at yahoo.co.uk  Sun Sep  4 06:12:23 2005
From: jamestmcneill-python at yahoo.co.uk (jamestmcneill-python@yahoo.co.uk)
Date: Sun Sep  4 06:12:35 2005
Subject: [mod_python] Looking for ClearSilver tips
Message-ID: <20050904101223.62696.qmail@web86502.mail.ukl.yahoo.com>

Good morning.

I believe that there's at least one person on this list using ClearSilver
templates with mod_python, and I'm trying to do that myself in the
interests of speed and simplicity. However I'm coming up against the
bounds of my ignorance, so I thought I'd ask for a couple of tips to help
get my wheels out of the mud. I'm also open to suggestions on using other
templating systems should they be more appropriate.

Firstly, do I need to use the CGI handler, or can I use the mod_python
handler (4 times faster says the documentation)? Secondly, what's the best
arguments to cgiWrap? Lastly, how do I tell ClearSilver where to pick up
its template files? I'd better explain where I've got to so far:

from mod_python import apache
import kinterbasdb as fdb
import neo_cgi

def handler(req):
    req.content_type = "text/html"
    cgi_environment = {'dummy': 0}
    neo_cgi.cgiWrap(req.read, req.write, cgi_environment)
    neo_cgi.update()
    ncgi = neo_cgi.CGI()
    . . . . .
    ncgi.display(r"C:\Program Files\Apache
Group\Apache2\htdocs\test\hello.cst")

This gives me the following traceback:

Traceback (most recent call last):

  File "C:\Python23\Lib\site-packages\mod_python\apache.py", line 299, in
HandlerDispatch
    result = object(req)

  File "C:/Program Files/Apache Group/Apache2/htdocs/test/\htpasswd.py",
line 54, in handler
    ncgi.display(r"C:\Program Files\Apache
Group\Apache2\htdocs\test\hello.cst")

Error: Traceback (innermost last):
  File "cgi.c", line 1466, in cgi_display()
  File "cgi.c", line 1371, in cgi_output()
  File "cgiwrap.c", line 203, in cgiwrap_write()
IOError: write_cb returned -1<105: [2] No such file or directory


OK, I've probably done at least 5 dumb things in there. Would anyone who
has been down this road be able to give me a couple of pointers?

Thanks,
Jim

++++++++++++++++++++++++++++++++++++++++++++++++++
+   If you've got a good excuse - don't use it   +
++++++++++++++++++++++++++++++++++++++++++++++++++)

From labs at ixopusada.com  Sun Sep  4 13:08:25 2005
From: labs at ixopusada.com (Dirk van Oosterbosch, IR labs)
Date: Sun Sep  4 13:10:57 2005
Subject: [mod_python] transhandler setup?
In-Reply-To: <1125625148.8376@dscpl.user.openhosting.com>
References: <1125625148.8376@dscpl.user.openhosting.com>
Message-ID: <7e5aabe58c2c13fb937de754bb28d6f3@ixopusada.com>

On 2-sep-05, at 03:39, Graham Dumpleton wrote:

>>
>> <IfModule mod_python.c>
>>      PythonPath "sys.path + ['/var/www/python/']"
>>      PythonTransHandler translate
>
> Try adding here in addition to the above:
>
>   AddHandler mod_python .py
>   PythonHandler main
>
> Ie., rather than trying to use req.add_handler(). What happens then?

Well, I guess it works in the end.

Sorry, my bad.
I mixed up two versions of  main.py  I had laying around. (I modified 
my translate.py so the  req.filename  becomes  main_from_trans.py , but 
didn't use that name in the  PythonHandler  directive).
It does strike me as strange however, that I have to use   PythonHander 
python_main_file   in the apache configuration, when I have the 
transhandler decide that it should use python_main_file.py as filename. 
That would mean I can't make the transhandler fork its behavior between 
different python files as the ones that should become the filename and 
should be handled in the next phase (handler  that is). (Unless I have 
it fork to different directories and use different <Directory> 
configurations, of course)
...
I mean something like:
-----translate.py:
def transhandler(req):
	...
	if fork == 1:
		req.filename = "/var/www/python/main_alternative_a.py"
	else:
		req.filename = "/var/www/python/main_alternative_b.py"
	return apache.OK
-----
wouldn't work because I would have to say

<IfModule mod_python.c>
      PythonPath "sys.path + ['/var/www/python/']"
      PythonTransHandler translate
</IfModule>

<Directory "/var/www/python">
      AddHandler mod_python .py
      PythonHandler main_alternative_a	---OR---	 PythonHandler 
main_alternative_b
</Directory>

...

Also I found out that if I add
req.add_handler("PythonHandler", "main")
to translate.py it executes the handler from main.py twice (you get a 
double html file) , but only if it can successfully do the first one 
(set by  req.filename = "/var/www/python/main.py" .


But at least I got transhandler working finally.


One last question though on performance and recommendation on design.
I still see those two options as solutions for my design:
1. have everything handled by one main.py file (which decides whether 
or not it should really handle it or just decline and have apache take 
over and which redirects urls for a directory e.g. 
www.myserver.com/folder to var/www/folder/index.html internally if that 
index.html is present)
2. use two phases: transhandler and handler. Have transhandler find out 
if the file (or directory) exists, and if not checks my database if it 
can serve a virtual file or directory index and makes the req.filename 
become a main.py to be handled in the second phase.

>
> For an internal redirect, you probably want:
>
>   req.internal_redirect(req.uri+'/index.html')
>
> This will not send a response back to the browser and it will managed 
> internal
> to Apache.


Question I now have: does anybody know how efficient this internal 
redirect would be in comparison to a database query?
For the point is, that with option 1, all the static directories 
(requests for www.myserver.com/folder) will go through apache twice: 
(It first is handled by handler in main.py which then decides it should 
be www.myserver.com/folder/index.html anyway.
How economically inefficient is that performance wise?
The alternative, option 2, has the downside of two database queries for 
every dynamic page: First transhandler checks whether the url exists in 
the database. Then later, handler again queries the database for this 
url.

Is one of these alternatives much more performance intensive than the 
other?
I know I am comparing apples with pears here. The one is an internal 
redirect handled between mod_python and apache. The other is a database 
query handled my MySQL and MySQLdb (which is also dependent to how the 
database is designed and which field are indexed and so on...). Further 
more the decision between the two options is also dependent on how many 
these scenarios occur: do I have a lot of static index.html files which 
are requested by only their directory, or do I serve mostly dynamic 
pages.
So indeed the decision won't be just a matter of comparing performances 
of the two, but if someone can just give me a "handle"...

Sorry for asking so many questions ...
dirk



-----------------------------
Dirk van Oosterbosch
dirk@ixopusada.com
-----------------------------


From igp-dev at infogridpacific.com  Mon Sep  5 07:25:35 2005
From: igp-dev at infogridpacific.com (IGP Dev)
Date: Mon Sep  5 07:26:19 2005
Subject: [mod_python] mod-python 3.1.4 installation error 
Message-ID: <431C2B2F.6020501@infogridpacific.com>

Installing Mod-python  3.1.4 Error
on executing -
 > make

following error is occurring


mod_python.c:2050: warning: data definition has no type or storage class
apxs:Error: Command failed with rc=65536
.
make[1]: *** [mod_python.so] Error 1
make[1]: Leaving directory `/home/infoviewer/mod_python-3.1.4/src'
make: *** [do_dso] Error 2

Please help me out!
Thanks in Advance .
Regards ,
Ajinkya

From jamestmcneill-python at yahoo.co.uk  Mon Sep  5 10:32:53 2005
From: jamestmcneill-python at yahoo.co.uk (jamestmcneill-python@yahoo.co.uk)
Date: Mon Sep  5 10:33:05 2005
Subject: [mod_python] Looking for ClearSilver tips
In-Reply-To: <431AD607.3020307@mordor.ath.cx>
Message-ID: <20050905143254.96215.qmail@web86506.mail.ukl.yahoo.com>

Thanks Julien, that was right on the money. It looks like I was doing
plenty more than 5 dumb things the way I was going! Anyway, looking
through your code gave me what I needed to come up with the following
minimal example, which may by useful to other treading this path:

import neo_cgi ; neo_cgi.update()
import neo_util
import neo_cs

from mod_python import apache

def handler(req):
    pagehdf = neo_util.HDF()
    pagehdf.setValue('hdf.loadpaths.0', "C:\Program Files\Apache
Group\Apache2\htdocs\moddy")
    cs = neo_cs.CS(pagehdf)
    cs.parseFile('hello.cst')
    req.write(cs.render())    
    return apache.OK


--- Julien Cigar <mage@mordor.ath.cx> wrote:

. . . 

> I hope that that will be useful for you ...
> 
> Regards,
> Julien


++++++++++++++++++++++++++++++++++++++++++++++++++
+   If you've got a good excuse - don't use it   +
++++++++++++++++++++++++++++++++++++++++++++++++++)

From tbellefy at yahoo.com  Tue Sep  6 15:24:36 2005
From: tbellefy at yahoo.com (Tim Bellefy)
Date: Tue Sep  6 15:24:41 2005
Subject: [mod_python] "could not import mod_python.apache
Message-ID: <20050906192436.34098.qmail@web31011.mail.mud.yahoo.com>

Hi All,
 
I just installed mod_python so please bear with me...
 
Steps I've done:
OS: FreeBSD 4.7
Installed Python 2.4.1
Installed Apache 2.0.54
Installed mod_python 3.1.4
 
MOD PYTHON CONFIG:
./configure --with-apxs=/usr/local/apache2/bin/apxs --with-python=/usr/local/bin/python2.4
make
make install
 
Everything installed fine.
 
However, When I try the simple example found on modpyhon.org, I get an error.
from mod_python import apache

    def handler(req):
        req.write("Hello World!")
        return apache.OK

APACHE http.conf
<Directory /usr/local/apache2/htdocs/test/>
     Options ExecCGI
     AllowOverride All
     AddHandler mod_python .py
     PythonHandler mptest
     PythonDebug On
</Directory>
 
 
APACHE ERROR:
[Tue Sep 06 19:09:39 2005] [error] make_obcallback: could not import mod_python.apache.
 
WHEN RAN FROM COMMAND LINE:

Traceback (most recent call last):
  File "test.py", line 2, in ?
    from mod_python import apache
  File "/usr/local/lib/python2.4/site-packages/mod_python/apache.py", line 28, in ?
    import _apache
ImportError: No module named _apache
 
Any Help????

__________________________________________________
Do You Yahoo!?
Tired of spam?  Yahoo! Mail has the best spam protection around 
http://mail.yahoo.com 
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20050906/119405b7/attachment.html
From huzaifa at hostway.com  Tue Sep  6 17:30:37 2005
From: huzaifa at hostway.com (Huzaifa Tapal)
Date: Tue Sep  6 17:33:12 2005
Subject: [mod_python] Cannot Import name errors
Message-ID: <431E0A7D.1060401@hostway.com>

Hello All,

I have a very odd problem with a mod_python application I am running.  
Sporadically, I will get an error in my application that states:

Import Error:  cannot import name AES

The module has a "from Crypto.Cipher import AES" line.  Not sure what 
could be causing this to happen.  I checked error logs but nothing I can 
see that would cause this to happen.  Is the python interpreter 
corrupted or something for this to happen?  I even manually load a 
python interpretor and run the import command multiple times but can't 
replicate it.

Any ideas?

Hozi

From tbellefy at yahoo.com  Tue Sep  6 19:50:50 2005
From: tbellefy at yahoo.com (Tim Bellefy)
Date: Tue Sep  6 19:51:18 2005
Subject: [mod_python] "could not import mod_python.apache
In-Reply-To: <A928AE3E-0910-4049-85A9-E7E2687852EB@codeputty.com>
Message-ID: <20050906235050.9879.qmail@web31013.mail.mud.yahoo.com>

Thanks for replying.
 
I added an alias in:   /root/.cshrc
alias python /usr/local/bin/python2.4
 
This tells every user to use python2.4 instead of old version
Just to be safe, I added the same alias to the user apache is using running under.
 
I tried calling my test.py from the command line again and it still fails.
 


Joshua Kifer <joshua@codeputty.com> wrote:
Apache is running a different install of python than the one you 
compiled against.

Make sure apache is running the python at: (that is, make sure it's 
first in the path of the user running apache):
/usr/local/bin/python2.4

(that is, make sure it's first in the path of the user that is 
running apache)


On Sep 6, 2005, at 12:24 PM, Tim Bellefy wrote:

> Hi All,
>
> I just installed mod_python so please bear with me...
>
> Steps I've done:
> OS: FreeBSD 4.7
> Installed Python 2.4.1
> Installed Apache 2.0.54
> Installed mod_python 3.1.4
>
> MOD PYTHON CONFIG:
> ./configure --with-apxs=/usr/local/apache2/bin/apxs --with-python=/ 
> usr/local/bin/python2.4
> make
> make install
>
> Everything installed fine.
>
> However, When I try the simple example found on modpyhon.org, I get 
> an error.
> from mod_python import apache
>
> def handler(req):
> req.write("Hello World!")
> return apache.OK
> APACHE http.conf
> 
> Options ExecCGI
> AllowOverride All
> AddHandler mod_python .py
> PythonHandler mptest
> PythonDebug On
> 
>
>
> APACHE ERROR:
> [Tue Sep 06 19:09:39 2005] [error] make_obcallback: could not 
> import mod_python.apache.
>
> WHEN RAN FROM COMMAND LINE:
>
> Traceback (most recent call last):
> File "test.py", line 2, in ?
> from mod_python import apache
> File "/usr/local/lib/python2.4/site-packages/mod_python/ 
> apache.py", line 28, in ?
> import _apache
> ImportError: No module named _apache
>
> Any Help????
> __________________________________________________
> Do You Yahoo!?
> Tired of spam? Yahoo! Mail has the best spam protection around
> http://mail.yahoo.com
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>


__________________________________________________
Do You Yahoo!?
Tired of spam?  Yahoo! Mail has the best spam protection around 
http://mail.yahoo.com 
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20050906/9d8673df/attachment.html
From trevor at thennion.demon.co.uk  Wed Sep  7 02:57:55 2005
From: trevor at thennion.demon.co.uk (Trevor Hennion)
Date: Wed Sep  7 02:58:11 2005
Subject: [mod_python] "could not import mod_python.apache
In-Reply-To: <20050906235050.9879.qmail@web31013.mail.mud.yahoo.com>
References: <20050906235050.9879.qmail@web31013.mail.mud.yahoo.com>
Message-ID: <431E8F73.9000608@thennion.demon.co.uk>

Tim,
The failure of importing the apache module when requested from the 
python interpreter run from the command line is expected - it needs to 
be called by apache. It does show that the mod_python module is found by 
python so that is a good thing.

Have a look at Graham Dumpleton's articles at:
http://www.dscpl.com.au/articles.html
These can help greatly.

Regards
Trevor Hennion
www.infocentrality.co.uk


Tim Bellefy wrote:
> Thanks for replying.
>  
> I added an alias in:   /root/.cshrc
> alias python /usr/local/bin/python2.4
>  
> This tells every user to use python2.4 instead of old version
> Just to be safe, I added the same alias to the user apache is using running under.
>  
> I tried calling my test.py from the command line again and it still fails.
>  
> 
> 
> Joshua Kifer <joshua@codeputty.com> wrote:
> Apache is running a different install of python than the one you 
> compiled against.
> 
> Make sure apache is running the python at: (that is, make sure it's 
> first in the path of the user running apache):
> /usr/local/bin/python2.4
> 
> (that is, make sure it's first in the path of the user that is 
> running apache)
> 
> 
> On Sep 6, 2005, at 12:24 PM, Tim Bellefy wrote:
> 
> 
>>Hi All,
>>
>>I just installed mod_python so please bear with me...
>>
>>Steps I've done:
>>OS: FreeBSD 4.7
>>Installed Python 2.4.1
>>Installed Apache 2.0.54
>>Installed mod_python 3.1.4
>>
>>MOD PYTHON CONFIG:
>>./configure --with-apxs=/usr/local/apache2/bin/apxs --with-python=/ 
>>usr/local/bin/python2.4
>>make
>>make install
>>
>>Everything installed fine.
>>
>>However, When I try the simple example found on modpyhon.org, I get 
>>an error.
>>from mod_python import apache
>>
>>def handler(req):
>>req.write("Hello World!")
>>return apache.OK
>>APACHE http.conf
>>
>>Options ExecCGI
>>AllowOverride All
>>AddHandler mod_python .py
>>PythonHandler mptest
>>PythonDebug On
>>
>>
>>
>>APACHE ERROR:
>>[Tue Sep 06 19:09:39 2005] [error] make_obcallback: could not 
>>import mod_python.apache.
>>
>>WHEN RAN FROM COMMAND LINE:
>>
>>Traceback (most recent call last):
>>File "test.py", line 2, in ?
>>from mod_python import apache
>>File "/usr/local/lib/python2.4/site-packages/mod_python/ 
>>apache.py", line 28, in ?
>>import _apache
>>ImportError: No module named _apache
>>
>>Any Help????
>>__________________________________________________
>>Do You Yahoo!?
>>Tired of spam? Yahoo! Mail has the best spam protection around
>>http://mail.yahoo.com
>>
>>_______________________________________________
>>Mod_python mailing list
>>Mod_python@modpython.org
>>http://mailman.modpython.org/mailman/listinfo/mod_python
>>
> 
> 
> 
> __________________________________________________
> Do You Yahoo!?
> Tired of spam?  Yahoo! Mail has the best spam protection around 
> http://mail.yahoo.com 
> 
> 
> ------------------------------------------------------------------------
> 
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python

From labs at ixopusada.com  Wed Sep  7 02:57:04 2005
From: labs at ixopusada.com (Dirk van Oosterbosch, IR labs)
Date: Wed Sep  7 03:00:25 2005
Subject: [mod_python] "could not import mod_python.apache
In-Reply-To: <20050906235050.9879.qmail@web31013.mail.mud.yahoo.com>
References: <20050906235050.9879.qmail@web31013.mail.mud.yahoo.com>
Message-ID: <881e70d48f7e7e2264bd2853adfbca7e@ixopusada.com>


On 7-sep-05, at 01:50, Tim Bellefy wrote:

> Thanks for replying.
> ?
> I added an alias in:? ?/root/.cshrc
> alias python /usr/local/bin/python2.4
> ?
> This tells every user to use python2.4 instead of old version
> Just to be safe, I added the same alias to the user apache is using 
> running under.
> ?
> I tried calling my test.py from the command line again and it still 
> fails.
> ?

That's correct:

http://www.modpython.org/FAQ/faqw.py?req=show&file=faq02.002.htp

d.


-----------------------------
Dirk van Oosterbosch
http://labs.ixopusada.com
-----------------------------


From grahamd at dscpl.com.au  Wed Sep  7 07:12:08 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Wed Sep  7 07:12:24 2005
Subject: [mod_python] Cannot Import name errors
Message-ID: <1126091528.8877@dscpl.user.openhosting.com>

Huzaifa Tapal wrote ..
> Hello All,
> 
> I have a very odd problem with a mod_python application I am running. 
> Sporadically, I will get an error in my application that states:
> 
> Import Error:  cannot import name AES
> 
> The module has a "from Crypto.Cipher import AES" line.  Not sure what 
> could be causing this to happen.  I checked error logs but nothing I can
> see that would cause this to happen.  Is the python interpreter 
> corrupted or something for this to happen?  I even manually load a 
> python interpretor and run the import command multiple times but can't
> replicate it.
> 
> Any ideas?

It may be related to a known bug in mod_python. See:

  http://www.dscpl.com.au/articles/modpython-003.html#packages-loaded-wrongly

This is fixed in mod_python 3.2.

Suggest you try mod_python 3.2 beta.

Can someone here post how to get 3.2 beta from subversion of last beta snapshot
tarball. I don't have all my links handy to cut and paste.

Issue can't really be purused until you can ascertain that it is still a problem with 3.2.
Would at least need to know whether you mix use of apache.import_module() and
"import" statement for the same Python module/package which has been the source
of this particular issue in the past.


Graham
From william.lewis at uk.bnpparibas.com  Wed Sep  7 07:48:29 2005
From: william.lewis at uk.bnpparibas.com (william.lewis@uk.bnpparibas.com)
Date: Wed Sep  7 07:48:50 2005
Subject: [mod_python] Using Mod_python with Apache 2 and Python 2.4 on
	Windows
Message-ID: <OFFF7D149D.86E9A8B1-ON80257075.004003A5-80257075.0040DD5C@bnpparibas.com>

Hi

I noticed some queries last year regarding Mod_python binaries compatible 
with Python 2.4 for the Windows platform. I believe that someone was going 
to compile them, but then the trail went dead. Do you know if there are 
such binaries available ?

Thanks

PS although I have subscribed to this list I haven't seen any items yet, 
so apologies if this question has been covered already.


This message and any attachments (the "message") is 
intended solely for the addressees and is confidential. 
If you receive this message in error, please delete it and 
immediately notify the sender. Any use not in accord with
its purpose, any dissemination or disclosure, either whole 
or partial, is prohibited except formal approval. The internet 
can not guarantee the integrity of this message. 
BNP PARIBAS (and its subsidiaries) shall (will) not 
therefore be liable for the message if modified. 

**********************************************************************************************

BNP Paribas Private Bank London Branch is authorised 
by CECEI & AMF and is regulated by the Financial Services
Authority for the conduct of its investment business in the
United Kingdom.

BNP Paribas Securities Services London Branch is authorised
by CECEI & AMF and is regulated by the Financial Services
Authority for the conduct of its investment business in the 
United Kingdom.
  
BNP Paribas Fund Services UK Limited is authorised and 
regulated by the Financial Services Authority.

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20050907/6f2ea5d1/attachment.html
From nicolas.lehuen at gmail.com  Wed Sep  7 08:31:14 2005
From: nicolas.lehuen at gmail.com (Nicolas Lehuen)
Date: Wed Sep  7 08:31:22 2005
Subject: [mod_python] Using Mod_python with Apache 2 and Python 2.4 on
	Windows
In-Reply-To: <OFFF7D149D.86E9A8B1-ON80257075.004003A5-80257075.0040DD5C@bnpparibas.com>
References: <OFFF7D149D.86E9A8B1-ON80257075.004003A5-80257075.0040DD5C@bnpparibas.com>
Message-ID: <c298f2d705090705315543dd19@mail.gmail.com>

Hi William,

The trail goes on there :

http://nicolas.lehuen.com/download/mod_python/

Regards,
Nicolas

2005/9/7, william.lewis@uk.bnpparibas.com <william.lewis@uk.bnpparibas.com>:
>  
> Hi 
>  
> I noticed some queries last year regarding Mod_python binaries compatible
> with Python 2.4 for the Windows platform. I believe that someone was going
> to compile them, but then the trail went dead. Do you know if there are such
> binaries available ? 
>  
> Thanks 
>  
> PS although I have subscribed to this list I haven't seen any items yet, so
> apologies if this question has been covered already. 
> 
>  
>  This message and any attachments (the "message") is 
>  intended solely for the addressees and is confidential. 
>  If you receive this message in error, please delete it and 
>  immediately notify the sender. Any use not in accord with
>  its purpose, any dissemination or disclosure, either whole 
>  or partial, is prohibited except formal approval. The internet 
>  can not guarantee the integrity of this message. 
>  BNP PARIBAS (and its subsidiaries) shall (will) not 
>  therefore be liable for the message if modified. 
>  
> **********************************************************************************************
>  
>  BNP Paribas Private Bank London Branch is authorised 
>  by CECEI & AMF and is regulated by the Financial Services
>  Authority for the conduct of its investment business in the
>  United Kingdom.
>  
>  BNP Paribas Securities Services London Branch is authorised
>  by CECEI & AMF and is regulated by the Financial Services
>  Authority for the conduct of its investment business in the 
>  United Kingdom.
>  
>  BNP Paribas Fund Services UK Limited is authorised and 
>  regulated by the Financial Services Authority.
>  
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
> 
> 
>

From huzaifa at hostway.com  Wed Sep  7 09:58:01 2005
From: huzaifa at hostway.com (Huzaifa Tapal)
Date: Wed Sep  7 09:58:19 2005
Subject: [mod_python] Cannot Import name errors
In-Reply-To: <1126091528.8877@dscpl.user.openhosting.com>
References: <1126091528.8877@dscpl.user.openhosting.com>
Message-ID: <431EF1E9.8020902@hostway.com>

The module that the import statement is in is loaded with 
apache.import_module(), however, the AES module in Crypto.Cipher is not 
imported with import_module.

So Module A as the "from Crypto.Cipher import AES" statement and Module 
A was imported from my handler using the import_module() function.

Not sure if this problem is the same as the problem described in the 
"Packages Loaded Wrongly" section.

Hozi

Graham Dumpleton wrote:

>Huzaifa Tapal wrote ..
>  
>
>>Hello All,
>>
>>I have a very odd problem with a mod_python application I am running. 
>>Sporadically, I will get an error in my application that states:
>>
>>Import Error:  cannot import name AES
>>
>>The module has a "from Crypto.Cipher import AES" line.  Not sure what 
>>could be causing this to happen.  I checked error logs but nothing I can
>>see that would cause this to happen.  Is the python interpreter 
>>corrupted or something for this to happen?  I even manually load a 
>>python interpretor and run the import command multiple times but can't
>>replicate it.
>>
>>Any ideas?
>>    
>>
>
>It may be related to a known bug in mod_python. See:
>
>  http://www.dscpl.com.au/articles/modpython-003.html#packages-loaded-wrongly
>
>This is fixed in mod_python 3.2.
>
>Suggest you try mod_python 3.2 beta.
>
>Can someone here post how to get 3.2 beta from subversion of last beta snapshot
>tarball. I don't have all my links handy to cut and paste.
>
>Issue can't really be purused until you can ascertain that it is still a problem with 3.2.
>Would at least need to know whether you mix use of apache.import_module() and
>"import" statement for the same Python module/package which has been the source
>of this particular issue in the past.
>
>
>Graham
>
>
>  
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20050907/1ea45394/attachment.html
From jg.lists at sympatico.ca  Wed Sep  7 10:35:17 2005
From: jg.lists at sympatico.ca (Jim Gallacher)
Date: Wed Sep  7 10:34:51 2005
Subject: [mod_python] Cannot Import name errors
In-Reply-To: <1126091528.8877@dscpl.user.openhosting.com>
References: <1126091528.8877@dscpl.user.openhosting.com>
Message-ID: <431EFAA5.6000201@sympatico.ca>

Graham Dumpleton wrote:
> Huzaifa Tapal wrote ..
> 
>>Hello All,
>>
>>I have a very odd problem with a mod_python application I am running. 
>>Sporadically, I will get an error in my application that states:
>>
>>Import Error:  cannot import name AES
>>
>>The module has a "from Crypto.Cipher import AES" line.  Not sure what 
>>could be causing this to happen.  I checked error logs but nothing I can
>>see that would cause this to happen.  Is the python interpreter 
>>corrupted or something for this to happen?  I even manually load a 
>>python interpretor and run the import command multiple times but can't
>>replicate it.
>>
>>Any ideas?
> 
> 
> It may be related to a known bug in mod_python. See:
> 
>   http://www.dscpl.com.au/articles/modpython-003.html#packages-loaded-wrongly
> 
> This is fixed in mod_python 3.2.
> 
> Suggest you try mod_python 3.2 beta.
> 
> Can someone here post how to get 3.2 beta from subversion of last beta snapshot
> tarball. I don't have all my links handy to cut and paste.

The 3.2.1b tarball is temporarily available from:
http://www.modpython.org/dist/mod_python-3.2.1b.tgz

Subversion repositories:
(Current 3.2.1 beta branch)
http://svn.apache.org/repos/asf/httpd/mod_python/tags/release-3-2-1b/
(Development branch)
http://svn.apache.org/repos/asf/httpd/mod_python/trunk/

Jim


From lugs at eternitytechnologies.com  Thu Sep  8 09:50:51 2005
From: lugs at eternitytechnologies.com (Devraj Mukherjee)
Date: Thu Sep  8 09:45:39 2005
Subject: [mod_python] Writing modules in Python
Message-ID: <12182.60.229.136.189.1126187451.squirrel@devraj.org>

Hi everyone,

I am a newbie to mod_python (I have programmed in Python before) and
having trouble understanding if using mod_python or one of the related
projectes (such as mod_snake which seems to be dea) I can actually develop
Apache modules in Python.

I have been tossing the option of writing modules for Apache for a while
and have been wanting to avoid C programming ;-) if I can write them in
Python it will be my prefered way.

Thanks for any insights.

Devraj

---
Devraj Mukherjee (lugs@eternitytechnologies.com)
Eternity Technologies Pty. Ltd. ACN 107 600 975
P O Box 5949 Wagga Wagga NSW 2650 Australia
Voice: +61-2-69717131 / Fax: +61-2-69251039
http://www.eternitytechnologies.com/
From grahamd at dscpl.com.au  Thu Sep  8 11:38:21 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Thu Sep  8 11:39:40 2005
Subject: [mod_python] transhandler setup?
In-Reply-To: <7e5aabe58c2c13fb937de754bb28d6f3@ixopusada.com>
References: <1125625148.8376@dscpl.user.openhosting.com>
	<7e5aabe58c2c13fb937de754bb28d6f3@ixopusada.com>
Message-ID: <bd755dc89e1dfe0a126aac6e51260023@dscpl.com.au>


On 05/09/2005, at 3:08 AM, Dirk van Oosterbosch, IR labs wrote:
>
> I mixed up two versions of  main.py  I had laying around. (I modified 
> my translate.py so the  req.filename  becomes  main_from_trans.py , 
> but didn't use that name in the  PythonHandler  directive).
> It does strike me as strange however, that I have to use   
> PythonHander python_main_file   in the apache configuration, when I 
> have the transhandler decide that it should use python_main_file.py as 
> filename. That would mean I can't make the transhandler fork its 
> behavior between different python files as the ones that should become 
> the filename and should be handled in the next phase (handler  that 
> is). (Unless I have it fork to different directories and use different 
> <Directory> configurations, of course)
> ...
> I mean something like:
> -----translate.py:
> def transhandler(req):
> 	...
> 	if fork == 1:
> 		req.filename = "/var/www/python/main_alternative_a.py"
> 	else:
> 		req.filename = "/var/www/python/main_alternative_b.py"
> 	return apache.OK
> -----
> wouldn't work because I would have to say

You misunderstand what is happening. What is important in respect of
what req.filename is set to is not the full pathname, but just the
extension to the last component of the filename. Ie., the presence of
the ".py" extension. It is this which triggers the execution of the
handler specified by the PythonHandler directive.

Try setting PythonHandler to "main" and then in your transhandler set
set req.filename to either a or b alternative. The main.py handler
will still be executed. In your main.py handler you could then say:

   def handler(req):
     directory,file = os.path.split(req.filename)
     name = os.path.splitext(file)
     module = apache.import_module(name,path=[directory])
     return module.handler(req)

Ie., your main.py then becomes a simple dispatcher which defers to
what ever req.filename is set to.

> Also I found out that if I add
> req.add_handler("PythonHandler", "main")
> to translate.py it executes the handler from main.py twice (you get a 
> double html file) , but only if it can successfully do the first one 
> (set by  req.filename = "/var/www/python/main.py" .

See the documentation for listing of multiple handlers:

   http://www.modpython.org/live/current/doc-html/dir-handlers-syn.html

In particular:

   Multiple handlers can be specified on a single line, in which case 
they
   will be called sequentially, from left to right. Same handler 
directives
   can be specified multiple times as well, with the same result - all
   handlers listed will be executed sequentially, from first to last. If
   any handler in the sequence returns a value other than apache.OK, then
   execution of all subsequent handlers is aborted.

Thus, if your had "main" specified for PythonHandler and then had the
transhandler add it again using req.add_handler(), then yes it will be
executed twice if each returns apache.OK.

If you don't specify it in the PythonHandler directive and use just
req.add_handler() will it work. Note that you will still need to 
probably
specify AddHandler for .py extension. If it doesn't work, might be seen
as a shortcoming in Apache/mod_python.

>> For an internal redirect, you probably want:
>>
>>   req.internal_redirect(req.uri+'/index.html')
>>
>> This will not send a response back to the browser and it will managed 
>> internal
>> to Apache.
>
>
> Question I now have: does anybody know how efficient this internal 
> redirect would be in comparison to a database query?
> For the point is, that with option 1, all the static directories 
> (requests for www.myserver.com/folder) will go through apache twice: 
> (It first is handled by handler in main.py which then decides it 
> should be www.myserver.com/folder/index.html anyway.
> How economically inefficient is that performance wise?
> The alternative, option 2, has the downside of two database queries 
> for every dynamic page: First transhandler checks whether the url 
> exists in the database. Then later, handler again queries the database 
> for this url.

At a guess, Apache is going to be quicker at servicing a request than
a database query. This would really depend on your setup though.

> Is one of these alternatives much more performance intensive than the 
> other?
> I know I am comparing apples with pears here. The one is an internal 
> redirect handled between mod_python and apache. The other is a 
> database query handled my MySQL and MySQLdb (which is also dependent 
> to how the database is designed and which field are indexed and so 
> on...). Further more the decision between the two options is also 
> dependent on how many these scenarios occur: do I have a lot of static 
> index.html files which are requested by only their directory, or do I 
> serve mostly dynamic pages.
> So indeed the decision won't be just a matter of comparing 
> performances of the two, but if someone can just give me a "handle"...

You are really just going to have to test each option.

Graham

From grahamd at dscpl.com.au  Thu Sep  8 11:39:24 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Thu Sep  8 11:40:27 2005
Subject: [mod_python] transhandler setup?
In-Reply-To: <7e5aabe58c2c13fb937de754bb28d6f3@ixopusada.com>
References: <1125625148.8376@dscpl.user.openhosting.com>
	<7e5aabe58c2c13fb937de754bb28d6f3@ixopusada.com>
Message-ID: <48ea64b29393de5e0451692b449b305a@dscpl.com.au>


On 05/09/2005, at 3:08 AM, Dirk van Oosterbosch, IR labs wrote:
>
> I mixed up two versions of  main.py  I had laying around. (I modified 
> my translate.py so the  req.filename  becomes  main_from_trans.py , 
> but didn't use that name in the  PythonHandler  directive).
> It does strike me as strange however, that I have to use   
> PythonHander python_main_file   in the apache configuration, when I 
> have the transhandler decide that it should use python_main_file.py as 
> filename. That would mean I can't make the transhandler fork its 
> behavior between different python files as the ones that should become 
> the filename and should be handled in the next phase (handler  that 
> is). (Unless I have it fork to different directories and use different 
> <Directory> configurations, of course)
> ...
> I mean something like:
> -----translate.py:
> def transhandler(req):
> 	...
> 	if fork == 1:
> 		req.filename = "/var/www/python/main_alternative_a.py"
> 	else:
> 		req.filename = "/var/www/python/main_alternative_b.py"
> 	return apache.OK
> -----
> wouldn't work because I would have to say

You misunderstand what is happening. What is important in respect of
what req.filename is set to is not the full pathname, but just the
extension to the last component of the filename. Ie., the presence of
the ".py" extension. It is this which triggers the execution of the
handler specified by the PythonHandler directive.

Try setting PythonHandler to "main" and then in your transhandler set
set req.filename to either a or b alternative. The main.py handler
will still be executed. In your main.py handler you could then say:

   def handler(req):
     directory,file = os.path.split(req.filename)
     name = os.path.splitext(file)
     module = apache.import_module(name,path=[directory])
     return module.handler(req)

Ie., your main.py then becomes a simple dispatcher which defers to
what ever req.filename is set to.

> Also I found out that if I add
> req.add_handler("PythonHandler", "main")
> to translate.py it executes the handler from main.py twice (you get a 
> double html file) , but only if it can successfully do the first one 
> (set by  req.filename = "/var/www/python/main.py" .

See the documentation for listing of multiple handlers:

   http://www.modpython.org/live/current/doc-html/dir-handlers-syn.html

In particular:

   Multiple handlers can be specified on a single line, in which case 
they
   will be called sequentially, from left to right. Same handler 
directives
   can be specified multiple times as well, with the same result - all
   handlers listed will be executed sequentially, from first to last. If
   any handler in the sequence returns a value other than apache.OK, then
   execution of all subsequent handlers is aborted.

Thus, if your had "main" specified for PythonHandler and then had the
transhandler add it again using req.add_handler(), then yes it will be
executed twice if each returns apache.OK.

If you don't specify it in the PythonHandler directive and use just
req.add_handler() will it work. Note that you will still need to 
probably
specify AddHandler for .py extension. If it doesn't work, might be seen
as a shortcoming in Apache/mod_python.

>> For an internal redirect, you probably want:
>>
>>   req.internal_redirect(req.uri+'/index.html')
>>
>> This will not send a response back to the browser and it will managed 
>> internal
>> to Apache.
>
>
> Question I now have: does anybody know how efficient this internal 
> redirect would be in comparison to a database query?
> For the point is, that with option 1, all the static directories 
> (requests for www.myserver.com/folder) will go through apache twice: 
> (It first is handled by handler in main.py which then decides it 
> should be www.myserver.com/folder/index.html anyway.
> How economically inefficient is that performance wise?
> The alternative, option 2, has the downside of two database queries 
> for every dynamic page: First transhandler checks whether the url 
> exists in the database. Then later, handler again queries the database 
> for this url.

At a guess, Apache is going to be quicker at servicing a request than
a database query. This would really depend on your setup though.

> Is one of these alternatives much more performance intensive than the 
> other?
> I know I am comparing apples with pears here. The one is an internal 
> redirect handled between mod_python and apache. The other is a 
> database query handled my MySQL and MySQLdb (which is also dependent 
> to how the database is designed and which field are indexed and so 
> on...). Further more the decision between the two options is also 
> dependent on how many these scenarios occur: do I have a lot of static 
> index.html files which are requested by only their directory, or do I 
> serve mostly dynamic pages.
> So indeed the decision won't be just a matter of comparing 
> performances of the two, but if someone can just give me a "handle"...

You are really just going to have to test each option.

Graham

From grahamd at dscpl.com.au  Thu Sep  8 12:08:16 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Thu Sep  8 12:08:35 2005
Subject: [mod_python] Writing modules in Python
In-Reply-To: <12182.60.229.136.189.1126187451.squirrel@devraj.org>
References: <12182.60.229.136.189.1126187451.squirrel@devraj.org>
Message-ID: <6bce189e8ab5e1db690558dadff7ca0d@dscpl.com.au>


On 08/09/2005, at 11:50 PM, Devraj Mukherjee wrote:

> Hi everyone,
>
> I am a newbie to mod_python (I have programmed in Python before) and
> having trouble understanding if using mod_python or one of the related
> projectes (such as mod_snake which seems to be dea) I can actually 
> develop
> Apache modules in Python.
>
> I have been tossing the option of writing modules for Apache for a 
> while
> and have been wanting to avoid C programming ;-) if I can write them in
> Python it will be my prefered way.

It really depends on what you are trying to do. You are not going to be
able to do what a full blown Apache module can do as mod_python doesn't
expose everything in the Apache API. You can still do various things
though.

Thus, it all depends on what you want to do. You might like to describe
what you want to do and we may be able to give a better answer as to
whether it will be possible.

Graham

From jsimeone at inplex.com  Thu Sep  8 12:23:07 2005
From: jsimeone at inplex.com (John Simeone)
Date: Thu Sep  8 12:28:30 2005
Subject: [mod_python] Co-ordinating ccess to a single-use resource
Message-ID: <4320656B.9050901@inplex.com>

Hello to everyone.

I am responsible for a project using Apache 2.0 with mod_python in a 
Win2k environment, the choice of OS being dictated by the fact that the 
purpose of the server is to supply access to a proprietary, supplier 
written Windows program to our user base via the web.

That program is single threaded and provides for only 1 user at a time. 
Access to the program in Python is through  win32com.

I am using a mod_python.publisher handler.

All the http requests come through a single proxy server with a static 
address but not all are from browser clients. Some are originating from 
perl programs but all requests are directed to a single request handler.

Can anyone suggest a method to control access to this single user 
resource. In a non-web programming environment, I'd just use a mutex 
semaphore to co-ordinate access among the threads but I am too much of 
newbie with mod_python and Apache to implement a workable solution so far.

What mechanism can I use to create a shared resource that I can lock and 
have other requests wait until the resource is unlocked?

Thanks.
From grahamd at dscpl.com.au  Thu Sep  8 12:40:21 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Thu Sep  8 12:40:41 2005
Subject: [mod_python] Co-ordinating ccess to a single-use resource
In-Reply-To: <4320656B.9050901@inplex.com>
References: <4320656B.9050901@inplex.com>
Message-ID: <cc2223ce21a7016d6bf32bab252666f2@dscpl.com.au>


On 09/09/2005, at 2:23 AM, John Simeone wrote:

> Hello to everyone.
>
> I am responsible for a project using Apache 2.0 with mod_python in a 
> Win2k environment, the choice of OS being dictated by the fact that 
> the purpose of the server is to supply access to a proprietary, 
> supplier written Windows program to our user base via the web.
>
> That program is single threaded and provides for only 1 user at a 
> time. Access to the program in Python is through  win32com.
>
> I am using a mod_python.publisher handler.
>
> All the http requests come through a single proxy server with a static 
> address but not all are from browser clients. Some are originating 
> from perl programs but all requests are directed to a single request 
> handler.
>
> Can anyone suggest a method to control access to this single user 
> resource. In a non-web programming environment, I'd just use a mutex 
> semaphore to co-ordinate access among the threads but I am too much of 
> newbie with mod_python and Apache to implement a workable solution so 
> far.
>
> What mechanism can I use to create a shared resource that I can lock 
> and have other requests wait until the resource is unlocked?

When using mod_python under Win32 platform, there is effectively only
one process and requests are handled in separate threads. Because of
this, you should be able to mediate access to the shared resource
through a normal thread mutual exclusion locking mechanism just as
easily as you would in a non web environment.

Graham

From andrew.musselman at gmail.com  Thu Sep  8 13:12:03 2005
From: andrew.musselman at gmail.com (Andrew Musselman)
Date: Thu Sep  8 13:12:26 2005
Subject: [mod_python] Dupe: Undefined symbol "PyEval_AcquireLock"
Message-ID: <69812a7b050908101254decc6d@mail.gmail.com>

Hi List, sorry for the dupe; I tried subscribing with another email account 
but wasn't able to confirm. Here is my question again:

I am trying to run mod_python-3.1.4_1 with apache2 on FreeBSD 5.4 STABLE. My 
python version is python-2.4.1_1.

Everything is built from ports.

Here is the error I receive when starting apache:
Syntax error on line 281 of /usr/local/etc/apache2/httpd.conf:
Cannot load /usr/local/libexec/apache2/mod_python.so into server: 
/usr/local/libexec/apache2/mod_python.so: Undefined symbol 
"PyEval_AcquireLock"

Here is line 281 of httpd.conf:
LoadModule python_module libexec/apache2/mod_python.so

Has anyone seen this error before, or does anyone have suggestions on how to 
isolate the problem?

Thank you for your time.

Best,
Andrew
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20050908/5893671b/attachment.html
From nicolas.lehuen at gmail.com  Thu Sep  8 13:45:20 2005
From: nicolas.lehuen at gmail.com (Nicolas Lehuen)
Date: Thu Sep  8 13:45:26 2005
Subject: [mod_python] Co-ordinating ccess to a single-use resource
In-Reply-To: <cc2223ce21a7016d6bf32bab252666f2@dscpl.com.au>
References: <4320656B.9050901@inplex.com>
	<cc2223ce21a7016d6bf32bab252666f2@dscpl.com.au>
Message-ID: <c298f2d705090810456ca40b00@mail.gmail.com>

2005/9/8, Graham Dumpleton <grahamd@dscpl.com.au>:
> 
> On 09/09/2005, at 2:23 AM, John Simeone wrote:
> 
> > Hello to everyone.
> >
> > I am responsible for a project using Apache 2.0 with mod_python in a
> > Win2k environment, the choice of OS being dictated by the fact that
> > the purpose of the server is to supply access to a proprietary,
> > supplier written Windows program to our user base via the web.
> >
> > That program is single threaded and provides for only 1 user at a
> > time. Access to the program in Python is through  win32com.
> >
> > I am using a mod_python.publisher handler.
> >
> > All the http requests come through a single proxy server with a static
> > address but not all are from browser clients. Some are originating
> > from perl programs but all requests are directed to a single request
> > handler.
> >
> > Can anyone suggest a method to control access to this single user
> > resource. In a non-web programming environment, I'd just use a mutex
> > semaphore to co-ordinate access among the threads but I am too much of
> > newbie with mod_python and Apache to implement a workable solution so
> > far.
> >
> > What mechanism can I use to create a shared resource that I can lock
> > and have other requests wait until the resource is unlocked?
> 
> When using mod_python under Win32 platform, there is effectively only
> one process and requests are handled in separate threads. Because of
> this, you should be able to mediate access to the shared resource
> through a normal thread mutual exclusion locking mechanism just as
> easily as you would in a non web environment.
> 
> Graham

That is to say :

import threading

# "R" stand for Re-entrant, i.e. a thread can acquire the lock multiple times
# make sure that the lock is instantiated only once, for example by
putting it in
# a module which your published code imports.
lock = threading.RLock() 

lock.acquire()
try:
    # access the shared resource
finally:
    lock.release()

See the documentation of the threading module for more information.

Regards,
Nicolas

From nicolas.lehuen at gmail.com  Thu Sep  8 13:47:52 2005
From: nicolas.lehuen at gmail.com (Nicolas Lehuen)
Date: Thu Sep  8 13:47:58 2005
Subject: [mod_python] Dupe: Undefined symbol "PyEval_AcquireLock"
In-Reply-To: <69812a7b050908101254decc6d@mail.gmail.com>
References: <69812a7b050908101254decc6d@mail.gmail.com>
Message-ID: <c298f2d705090810476b13ad26@mail.gmail.com>

PyEval_AcquireLock is a function defined in the Python interpreter.
Are you sure your setup is correctly configured to find your Python
installation ?

Regards,
Nicolas

2005/9/8, Andrew Musselman <andrew.musselman@gmail.com>:
> Hi List, sorry for the dupe; I tried subscribing with another email account
> but wasn't able to confirm.  Here is my question again:
>  
>  I am trying to run mod_python-3.1.4_1 with apache2 on FreeBSD 5.4 STABLE. 
> My python version is python-2.4.1_1.
>  
>  Everything is built from ports.
>  
>  Here is the error I receive when starting apache:
>  Syntax error on line 281 of
> /usr/local/etc/apache2/httpd.conf:
>  Cannot load /usr/local/libexec/apache2/mod_python.so into
> server: /usr/local/libexec/apache2/mod_python.so: Undefined
> symbol "PyEval_AcquireLock"
>  
>  Here is line 281 of httpd.conf:
>  LoadModule python_module      libexec/apache2/mod_python.so
>  
>  Has anyone seen this error before, or does anyone have suggestions on how
> to isolate the problem?
>  
>  Thank you for your time.
>  
>  Best,
>  Andrew
>  
>  
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
> 
> 
>

From huzaifa at hostway.com  Thu Sep  8 17:46:25 2005
From: huzaifa at hostway.com (Huzaifa Tapal)
Date: Thu Sep  8 17:46:44 2005
Subject: [mod_python] PythonInterpPerDirec* Question
Message-ID: <4320B131.40603@hostway.com>

Hello all,

I have a question about the usage of the PythonInterpPerDirectory and 
PythonInterpPerDirective directives.  I am trying to setup a development 
box with mod_python support, and want to set it up in a way so that 
different users, within their cgi-bin can have multiple mod_python 
handler installations and each handler having its own set of 
sub-interpreters.  After doing some research I found that the usage of 
the above two directives is the solutions (or maybe something else that 
I am not aware of).

I am trying to set the above directive in my httpd.conf file as follows:

<Directory /home/*/www/cgi-bin/>
       PythonInterpPerDirective On       # or PythonInterpPerDirectory On
</Directory>

now I test this by creating two directories within a user's cgi-bin say 
/home/user/www/cgi-bin/handler1 and /home/user/www/cgi-bin/handler2 and 
add a handler module and a .htaccess file with the following contents:

SetHandler mod_python
PythonHandler mptest
PythonDebug On

Within the handlers, I am creating a cache dictionary at global level 
and testing the cache for that dictionary by printing its values and 
also printing the id of the cache dictionary.  When executing both 
handlers, it appears that both handlers in both directories are sharing 
the subinterpreters when they should not be.

Seeing that, I then create a .htaccess file in /home/user/www/cgi-bin 
directory with the contents:

PythonInterpPerDirective On  # or PythonInterpPerDirectory On

that seems to work as I want it to work.

The questions I have are:

   1. Why doesn't adding the PythonInterpPerDirec* directive work when I
      added to the server configuration file?
   2. Whats the best way to turn that directive on for all user's
      cgi-bin directories server wide without adding a .htaccess file
      for each user individually?
   3. Is there a better way of accomplishing what I want other than the
      directives?

Any help will be appreciated.

Hozi
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20050908/452a8ebe/attachment.html
From list.mod_python at docwhat.gerf.org  Thu Sep  8 21:43:49 2005
From: list.mod_python at docwhat.gerf.org (The Doctor What)
Date: Thu Sep  8 21:43:58 2005
Subject: [mod_python] apachectl restart == dead mod_python
Message-ID: <20050909014349.GA20189@gerf.org>

Hello!

I have apache2 2.0.54, mod_python 3.1.3, python 2.3.5 (Debian
Sarge).

I can start up apache2 and the mod_python pages work fine. 

However, if I then do apachectl restart, the mod_python pages hang
forever.  Frozen.  Eventually I get a timeout message in my browser.
The apache children do not die readily and require extra time to
clean up. :-(

I full stop/start works everytime but in not a desirable solution
for a live server with multiple domains.  In addition, I'd have to
change all the log rotation stuff, etc.

I particularly interested in TRAC, but it seems to be a generic
problem. I want to get PSE on my server, too.

Is there some option I'm not including or something?

Thank You!

Ciao!
From grahamd at dscpl.com.au  Thu Sep  8 21:50:40 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Thu Sep  8 21:50:56 2005
Subject: [mod_python] Dupe: Undefined symbol "PyEval_AcquireLock"
In-Reply-To: <69812a7b050908101254decc6d@mail.gmail.com>
References: <69812a7b050908101254decc6d@mail.gmail.com>
Message-ID: <77e411f7560d24ade5bf1b4b7984cb25@dscpl.com.au>

My experience with FreeBSD systems is that threading wasn't builtin to
Python by default. To see if threading is builtin, from the command
line run Python and then do:

   import threading

If it fails, probably indicates Python wasn't built with threading
support in the first place. If this is the case, you will need to
rebuild Python with threading enabled. Note that on FreeBSD I believe
the POSIX thread library functions are in -lc_r, ie., reentrant
version of standard C library. Command line for configure probably
something like:

   LIBS=-lc_r ./configure --with-threads

Graham

On 09/09/2005, at 3:12 AM, Andrew Musselman wrote:

> Hi List, sorry for the dupe; I tried subscribing with another email 
> account but wasn't able to confirm.? Here is my question again:
>
>  I am trying to run mod_python-3.1.4_1 with apache2 on FreeBSD 5.4 
> STABLE.? My python version is python-2.4.1_1.
>
>  Everything is built from ports.
>
>  Here is the error I receive when starting apache:
>  Syntax error on line 281 of /usr/local/etc/apache2/httpd.conf:
>  Cannot load /usr/local/libexec/apache2/mod_python.so into server: 
> /usr/local/libexec/apache2/mod_python.so: Undefined symbol 
> "PyEval_AcquireLock"
>
>  Here is line 281 of httpd.conf:
>  LoadModule python_module????? libexec/apache2/mod_python.so
>
>  Has anyone seen this error before, or does anyone have suggestions on 
> how to isolate the problem?
>
>  Thank you for your time.
>
>  Best,
>  Andrew
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python


From grahamd at dscpl.com.au  Thu Sep  8 22:06:10 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Thu Sep  8 22:06:25 2005
Subject: [mod_python] apachectl restart == dead mod_python
In-Reply-To: <20050909014349.GA20189@gerf.org>
References: <20050909014349.GA20189@gerf.org>
Message-ID: <e37d987757c86e27eb5af86e7c8e9fef@dscpl.com.au>


On 09/09/2005, at 11:43 AM, The Doctor What wrote:

> Hello!
>
> I have apache2 2.0.54, mod_python 3.1.3, python 2.3.5 (Debian
> Sarge).
>
> I can start up apache2 and the mod_python pages work fine.
>
> However, if I then do apachectl restart, the mod_python pages hang
> forever.  Frozen.  Eventually I get a timeout message in my browser.
> The apache children do not die readily and require extra time to
> clean up. :-(
>
> I full stop/start works everytime but in not a desirable solution
> for a live server with multiple domains.  In addition, I'd have to
> change all the log rotation stuff, etc.
>
> I particularly interested in TRAC, but it seems to be a generic
> problem. I want to get PSE on my server, too.
>
> Is there some option I'm not including or something?

Is this happening with a really simple mod_python handler, ie.,
something like mptest, or something more complicated? Ie., can
you be sure it isn't the handler code itself is causing the
problem?

What mode is Apache running in, "prefork" or "worker"?

Do you get any messages in the Apache error log file which may be
pertinent?

Graham

From grahamd at dscpl.com.au  Thu Sep  8 22:16:35 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Thu Sep  8 22:17:30 2005
Subject: [mod_python] PythonInterpPerDirec* Question
In-Reply-To: <4320B131.40603@hostway.com>
References: <4320B131.40603@hostway.com>
Message-ID: <2d293e5734c1b1b0920911c2cbfc4388@dscpl.com.au>


On 09/09/2005, at 7:46 AM, Huzaifa Tapal wrote:

>  Hello all,
>
>  I have a question about the usage of the PythonInterpPerDirectory and 
> PythonInterpPerDirective directives.? I am trying to setup a 
> development box with mod_python support, and want to set it up in a 
> way so that different users, within their cgi-bin can have multiple 
> mod_python handler installations and each handler having its own set 
> of sub-interpreters.? After doing some research I found that the usage 
> of the above two directives is the solutions (or maybe something else 
> that I am not aware of).
>
>  I am trying to set the above directive in my httpd.conf file as 
> follows:
>
>  <Directory /home/*/www/cgi-bin/>
>  ?????? PythonInterpPerDirective On?????? # or 
> PythonInterpPerDirectory On
>  </Directory>

You can check whether this is even coming into play by including:

   deny from all

If the path pattern is right, you should then get Forbidden.

>  now I test this by creating two directories within a user's cgi-bin 
> say /home/user/www/cgi-bin/handler1 and 
> /home/user/www/cgi-bin/handler2 and add a handler module and a 
> .htaccess file with the following contents:
>
> SetHandler mod_python
>  PythonHandler mptest
>  PythonDebug On
>
>  Within the handlers, I am creating a cache dictionary at global level 
> and testing the cache for that dictionary by printing its values and 
> also printing the id of the cache dictionary.? When executing both 
> handlers, it appears that both handlers in both directories are 
> sharing the subinterpreters when they should not be.

I wouldn't necessarily rely on using Python id() as basis to determine
if they are same/different interpreter.

For starters, simply display value of "req.interpreter". This will be
the name given to each interpreter. It should equate somehow to the path
to the physical directory.

Note that there are some bugs in the PythonInterpPerDirectory directive.
See:

   http://issues.apache.org/jira/browse/MODPYTHON-5

This is address in mod_python 3.2 beta versions.

Graham


From earle.ady at gmail.com  Fri Sep  9 01:26:05 2005
From: earle.ady at gmail.com (Earle Ady)
Date: Fri Sep  9 01:26:13 2005
Subject: [mod_python] mod_python + MySQLdb + Apache strange behavoir
Message-ID: <F71F2F7B-BA31-4977-8C58-E9DA14F82622@gmail.com>


I seem to be having some strange behavior between mod_python and  
MySQLdb under Apache.

I have relatively simple .PSP's that will work one second, and then  
fail on a reload.  Sometimes they work, sometimes they don't.  To  
make things even more bizarre, if I utilize the same logic in  
another .PSP it may work!  I can't seem to narrow down what this  
problem is.

I read an article from two years ago about conflicts between PHP  
running parallel to mod_python.  I have deactivated the PHP module  
loading within Apache, and the
problem still persists.

Error messages vary, nothing seems to fix things properly.

Has anyone else had these sorts of problems?

I am currently running mod_python 3.1.4, MySQLdb 1.2.0, MySQL 4.1.12- 
standard,
and Apache 2.0.54

Best,

earle.


From grahamd at dscpl.com.au  Fri Sep  9 04:38:55 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Fri Sep  9 04:39:38 2005
Subject: [mod_python] mod_python + MySQLdb + Apache strange behavoir
In-Reply-To: <F71F2F7B-BA31-4977-8C58-E9DA14F82622@gmail.com>
References: <F71F2F7B-BA31-4977-8C58-E9DA14F82622@gmail.com>
Message-ID: <169437ced9788333f95b147fe7e5b984@dscpl.com.au>


On 09/09/2005, at 3:26 PM, Earle Ady wrote:

>
> I seem to be having some strange behavior between mod_python and 
> MySQLdb under Apache.
>
> I have relatively simple .PSP's that will work one second, and then 
> fail on a reload.  Sometimes they work, sometimes they don't.  To make 
> things even more bizarre, if I utilize the same logic in another .PSP 
> it may work!  I can't seem to narrow down what this problem is.
>
> I read an article from two years ago about conflicts between PHP 
> running parallel to mod_python.  I have deactivated the PHP module 
> loading within Apache, and the
> problem still persists.
>
> Error messages vary, nothing seems to fix things properly.
>
> Has anyone else had these sorts of problems?

There are known problems, but without the error messages from the Apache
error log file, we would be guessing.

Does the problem occur in PSP code independent of use of MySQLDB? Are 
you
mixing use of mod_python.psp and mod_python.publisher and thus are using
"from mod_python import psp" or "import mod_python.psp" explicitly?

You might try latest beta of mod_python 3.2 as some issues related to
module importing when using mod_python.publisher and mod_python.psp
together are addressed.

Graham

From nicolas.lehuen at gmail.com  Fri Sep  9 05:08:04 2005
From: nicolas.lehuen at gmail.com (Nicolas Lehuen)
Date: Fri Sep  9 05:08:14 2005
Subject: [mod_python] mod_python + MySQLdb + Apache strange behavoir
In-Reply-To: <F71F2F7B-BA31-4977-8C58-E9DA14F82622@gmail.com>
References: <F71F2F7B-BA31-4977-8C58-E9DA14F82622@gmail.com>
Message-ID: <c298f2d70509090208f0f8a48@mail.gmail.com>

Please check this FAQ entry, it may match your problem.

http://www.modpython.org/FAQ/faqw.py?req=show&file=faq02.013.htp

Regards,
Nicolas

2005/9/9, Earle Ady <earle.ady@gmail.com>:
> 
> I seem to be having some strange behavior between mod_python and
> MySQLdb under Apache.
> 
> I have relatively simple .PSP's that will work one second, and then
> fail on a reload.  Sometimes they work, sometimes they don't.  To
> make things even more bizarre, if I utilize the same logic in
> another .PSP it may work!  I can't seem to narrow down what this
> problem is.
> 
> I read an article from two years ago about conflicts between PHP
> running parallel to mod_python.  I have deactivated the PHP module
> loading within Apache, and the
> problem still persists.
> 
> Error messages vary, nothing seems to fix things properly.
> 
> Has anyone else had these sorts of problems?
> 
> I am currently running mod_python 3.1.4, MySQLdb 1.2.0, MySQL 4.1.12-
> standard,
> and Apache 2.0.54
> 
> Best,
> 
> earle.
> 
> 
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>

From jsimeone at inplex.com  Fri Sep  9 10:27:53 2005
From: jsimeone at inplex.com (John Simeone)
Date: Fri Sep  9 10:28:36 2005
Subject: [mod_python] Co-ordinating ccess to a single-use resource
In-Reply-To: <c298f2d705090810456ca40b00@mail.gmail.com>
References: <4320656B.9050901@inplex.com>	
	<cc2223ce21a7016d6bf32bab252666f2@dscpl.com.au>
	<c298f2d705090810456ca40b00@mail.gmail.com>
Message-ID: <43219BE9.2060704@inplex.com>

Nicolas Lehuen wrote:

>2005/9/8, Graham Dumpleton <grahamd@dscpl.com.au>:
>  
>
>>On 09/09/2005, at 2:23 AM, John Simeone wrote:
>>
>>    
>>
>>>Hello to everyone.
>>>
>>>I am responsible for a project using Apache 2.0 with mod_python in a
>>>Win2k environment, the choice of OS being dictated by the fact that
>>>the purpose of the server is to supply access to a proprietary,
>>>supplier written Windows program to our user base via the web.
>>>
>>>That program is single threaded and provides for only 1 user at a
>>>time. Access to the program in Python is through  win32com.
>>>
>>>I am using a mod_python.publisher handler.
>>>
>>>All the http requests come through a single proxy server with a static
>>>address but not all are from browser clients. Some are originating
>>>from perl programs but all requests are directed to a single request
>>>handler.
>>>
>>>Can anyone suggest a method to control access to this single user
>>>resource. In a non-web programming environment, I'd just use a mutex
>>>semaphore to co-ordinate access among the threads but I am too much of
>>>newbie with mod_python and Apache to implement a workable solution so
>>>far.
>>>
>>>What mechanism can I use to create a shared resource that I can lock
>>>and have other requests wait until the resource is unlocked?
>>>      
>>>
>>When using mod_python under Win32 platform, there is effectively only
>>one process and requests are handled in separate threads. Because of
>>this, you should be able to mediate access to the shared resource
>>through a normal thread mutual exclusion locking mechanism just as
>>easily as you would in a non web environment.
>>
>>Graham
>>    
>>
>
>That is to say :
>
>import threading
>
># "R" stand for Re-entrant, i.e. a thread can acquire the lock multiple times
># make sure that the lock is instantiated only once, for example by
>putting it in
># a module which your published code imports.
>lock = threading.RLock() 
>
>lock.acquire()
>try:
>    # access the shared resource
>finally:
>    lock.release()
>
>See the documentation of the threading module for more information.
>
>Regards,
>Nicolas
>
>
>  
>
Thanks to Graham and Nicolas for their prompt responses.

I followed Nicolas' counsel and created a file 'tconstants.py' :

import threading
mutex = threading.RLock()

included an 'import' into my publisher handler and wrapped the access to 
the single resource with 'mutex.acquire()' and mutex.release(). When I 
got an error regarding the unavailability of the mutex global, I ran the 
following test in IDLE:

import threading
import tconstants
def setmutex():
    mutex.acquire()
    return
setmutex()

and received the same error:  "global name 'mutex' is not defined."

I ran the threading demo to verify there wasn't a problem with the 
thread module in my copy of Python 2.3. It ran fine.

The only way I could get this test to work was to alter the code to 
define the mutex not in the imported tconstants but in the code directly:

import threading
mutex = threading.RLock()
def setmutex():
    mutex.acquire()
    return
setmutex()
mutex.release()

Will defining the mutex this way cause problems in proper threading 
control for mod_python in its interaction with Apache?

Regards,

John


-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20050909/8b698254/attachment.html
From nicolas.lehuen at gmail.com  Fri Sep  9 10:50:36 2005
From: nicolas.lehuen at gmail.com (Nicolas Lehuen)
Date: Fri Sep  9 10:50:47 2005
Subject: [mod_python] Co-ordinating ccess to a single-use resource
In-Reply-To: <43219BE9.2060704@inplex.com>
References: <4320656B.9050901@inplex.com>
	<cc2223ce21a7016d6bf32bab252666f2@dscpl.com.au>
	<c298f2d705090810456ca40b00@mail.gmail.com>
	<43219BE9.2060704@inplex.com>
Message-ID: <c298f2d7050909075023c4fa1c@mail.gmail.com>

This is a pretty simple Python error. What you want to write is :

import tconstants
tconstants.mutex.acquire()

or :

from tconstants import mutex
mutex.acquire()

but NOT :
import tconstants
mutex.acquire() # mutex is not defined here, it is defined in the
tconstants module...

Regards,
Nicolas

2005/9/9, John Simeone <jsimeone@inplex.com>:
>  Nicolas Lehuen wrote:
>  
>  2005/9/8, Graham Dumpleton <grahamd@dscpl.com.au>:
>  
>  
>  On 09/09/2005, at 2:23 AM, John Simeone wrote:
> 
>  
>  
>  Hello to everyone.
> 
> I am responsible for a project using Apache 2.0 with mod_python in a
> Win2k environment, the choice of OS being dictated by the fact that
> the purpose of the server is to supply access to a proprietary,
> supplier written Windows program to our user base via the web.
> 
> That program is single threaded and provides for only 1 user at a
> time. Access to the program in Python is through win32com.
> 
> I am using a mod_python.publisher handler.
> 
> All the http requests come through a single proxy server with a static
> address but not all are from browser clients. Some are originating
> from perl programs but all requests are directed to a single request
> handler.
> 
> Can anyone suggest a method to control access to this single user
> resource. In a non-web programming environment, I'd just use a mutex
> semaphore to co-ordinate access among the threads but I am too much of
> newbie with mod_python and Apache to implement a workable solution so
> far.
> 
> What mechanism can I use to create a shared resource that I can lock
> and have other requests wait until the resource is unlocked?
>  
>  When using mod_python under Win32 platform, there is effectively only
> one process and requests are handled in separate threads. Because of
> this, you should be able to mediate access to the shared resource
> through a normal thread mutual exclusion locking mechanism just as
> easily as you would in a non web environment.
> 
> Graham
>  
>  That is to say :
> 
> import threading
> 
> # "R" stand for Re-entrant, i.e. a thread can acquire the lock multiple
> times
> # make sure that the lock is instantiated only once, for example by
> putting it in
> # a module which your published code imports.
> lock = threading.RLock() 
> 
> lock.acquire()
> try:
>  # access the shared resource
> finally:
>  lock.release()
> 
> See the documentation of the threading module for more information.
> 
> Regards,
> Nicolas
> 
> 
>  
>  Thanks to Graham and Nicolas for their prompt responses.
>  
>  I followed Nicolas' counsel and created a file 'tconstants.py' :
>  
>  import threading
>  mutex = threading.RLock()
>  
>  included an 'import' into my publisher handler and wrapped the access to
> the single resource with 'mutex.acquire()' and mutex.release(). When I got
> an error regarding the unavailability of the mutex global, I ran the
> following test in IDLE:
>  
>  import threading
>  import tconstants
>  def setmutex():
>      mutex.acquire()
>      return
>  setmutex()
>  
>  and received the same error:  "global name 'mutex' is not defined."
>  
>  I ran the threading demo to verify there wasn't a problem with the thread
> module in my copy of Python 2.3. It ran fine.
>  
>  The only way I could get this test to work was to alter the code to define
> the mutex not in the imported tconstants but in the code directly:
>  
>  import threading
>  mutex = threading.RLock()
>  def setmutex():
>      mutex.acquire()
>      return
>  setmutex()
>  mutex.release()
>  
>  Will defining the mutex this way cause problems in proper threading control
> for mod_python in its interaction with Apache?
>  
>  Regards,
>  
>  John
>  
>  
>  
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
> 
> 
>

From nicolas.lehuen at gmail.com  Fri Sep  9 10:51:11 2005
From: nicolas.lehuen at gmail.com (Nicolas Lehuen)
Date: Fri Sep  9 10:51:18 2005
Subject: [mod_python] Co-ordinating ccess to a single-use resource
In-Reply-To: <c298f2d7050909075023c4fa1c@mail.gmail.com>
References: <4320656B.9050901@inplex.com>
	<cc2223ce21a7016d6bf32bab252666f2@dscpl.com.au>
	<c298f2d705090810456ca40b00@mail.gmail.com>
	<43219BE9.2060704@inplex.com>
	<c298f2d7050909075023c4fa1c@mail.gmail.com>
Message-ID: <c298f2d705090907514f493a67@mail.gmail.com>

An even better scheme is to write a

2005/9/9, Nicolas Lehuen <nicolas.lehuen@gmail.com>:
> This is a pretty simple Python error. What you want to write is :
> 
> import tconstants
> tconstants.mutex.acquire()
> 
> or :
> 
> from tconstants import mutex
> mutex.acquire()
> 
> but NOT :
> import tconstants
> mutex.acquire() # mutex is not defined here, it is defined in the
> tconstants module...
> 
> Regards,
> Nicolas
> 
> 2005/9/9, John Simeone <jsimeone@inplex.com>:
> >  Nicolas Lehuen wrote:
> >
> >  2005/9/8, Graham Dumpleton <grahamd@dscpl.com.au>:
> >
> >
> >  On 09/09/2005, at 2:23 AM, John Simeone wrote:
> >
> >
> >
> >  Hello to everyone.
> >
> > I am responsible for a project using Apache 2.0 with mod_python in a
> > Win2k environment, the choice of OS being dictated by the fact that
> > the purpose of the server is to supply access to a proprietary,
> > supplier written Windows program to our user base via the web.
> >
> > That program is single threaded and provides for only 1 user at a
> > time. Access to the program in Python is through win32com.
> >
> > I am using a mod_python.publisher handler.
> >
> > All the http requests come through a single proxy server with a static
> > address but not all are from browser clients. Some are originating
> > from perl programs but all requests are directed to a single request
> > handler.
> >
> > Can anyone suggest a method to control access to this single user
> > resource. In a non-web programming environment, I'd just use a mutex
> > semaphore to co-ordinate access among the threads but I am too much of
> > newbie with mod_python and Apache to implement a workable solution so
> > far.
> >
> > What mechanism can I use to create a shared resource that I can lock
> > and have other requests wait until the resource is unlocked?
> >
> >  When using mod_python under Win32 platform, there is effectively only
> > one process and requests are handled in separate threads. Because of
> > this, you should be able to mediate access to the shared resource
> > through a normal thread mutual exclusion locking mechanism just as
> > easily as you would in a non web environment.
> >
> > Graham
> >
> >  That is to say :
> >
> > import threading
> >
> > # "R" stand for Re-entrant, i.e. a thread can acquire the lock multiple
> > times
> > # make sure that the lock is instantiated only once, for example by
> > putting it in
> > # a module which your published code imports.
> > lock = threading.RLock()
> >
> > lock.acquire()
> > try:
> >  # access the shared resource
> > finally:
> >  lock.release()
> >
> > See the documentation of the threading module for more information.
> >
> > Regards,
> > Nicolas
> >
> >
> >
> >  Thanks to Graham and Nicolas for their prompt responses.
> >
> >  I followed Nicolas' counsel and created a file 'tconstants.py' :
> >
> >  import threading
> >  mutex = threading.RLock()
> >
> >  included an 'import' into my publisher handler and wrapped the access to
> > the single resource with 'mutex.acquire()' and mutex.release(). When I got
> > an error regarding the unavailability of the mutex global, I ran the
> > following test in IDLE:
> >
> >  import threading
> >  import tconstants
> >  def setmutex():
> >      mutex.acquire()
> >      return
> >  setmutex()
> >
> >  and received the same error:  "global name 'mutex' is not defined."
> >
> >  I ran the threading demo to verify there wasn't a problem with the thread
> > module in my copy of Python 2.3. It ran fine.
> >
> >  The only way I could get this test to work was to alter the code to define
> > the mutex not in the imported tconstants but in the code directly:
> >
> >  import threading
> >  mutex = threading.RLock()
> >  def setmutex():
> >      mutex.acquire()
> >      return
> >  setmutex()
> >  mutex.release()
> >
> >  Will defining the mutex this way cause problems in proper threading control
> > for mod_python in its interaction with Apache?
> >
> >  Regards,
> >
> >  John
> >
> >
> >
> > _______________________________________________
> > Mod_python mailing list
> > Mod_python@modpython.org
> > http://mailman.modpython.org/mailman/listinfo/mod_python
> >
> >
> >
>

From nicolas.lehuen at gmail.com  Fri Sep  9 10:52:42 2005
From: nicolas.lehuen at gmail.com (Nicolas Lehuen)
Date: Fri Sep  9 10:52:49 2005
Subject: [mod_python] Co-ordinating ccess to a single-use resource
In-Reply-To: <c298f2d705090907514f493a67@mail.gmail.com>
References: <4320656B.9050901@inplex.com>
	<cc2223ce21a7016d6bf32bab252666f2@dscpl.com.au>
	<c298f2d705090810456ca40b00@mail.gmail.com>
	<43219BE9.2060704@inplex.com>
	<c298f2d7050909075023c4fa1c@mail.gmail.com>
	<c298f2d705090907514f493a67@mail.gmail.com>
Message-ID: <c298f2d705090907523dfae559@mail.gmail.com>

Oops sorry...

An even better scheme is to write a module which encapsulate the
access to your shared resource, and use it in your published pages
(NOT manipulate the mutex directly from your published pages). This
will be a lot less error prone.

Regards,
Nicolas

2005/9/9, Nicolas Lehuen <nicolas.lehuen@gmail.com>:
> An even better scheme is to write a
> 
> 2005/9/9, Nicolas Lehuen <nicolas.lehuen@gmail.com>:
> > This is a pretty simple Python error. What you want to write is :
> >
> > import tconstants
> > tconstants.mutex.acquire()
> >
> > or :
> >
> > from tconstants import mutex
> > mutex.acquire()
> >
> > but NOT :
> > import tconstants
> > mutex.acquire() # mutex is not defined here, it is defined in the
> > tconstants module...
> >
> > Regards,
> > Nicolas
> >
> > 2005/9/9, John Simeone <jsimeone@inplex.com>:
> > >  Nicolas Lehuen wrote:
> > >
> > >  2005/9/8, Graham Dumpleton <grahamd@dscpl.com.au>:
> > >
> > >
> > >  On 09/09/2005, at 2:23 AM, John Simeone wrote:
> > >
> > >
> > >
> > >  Hello to everyone.
> > >
> > > I am responsible for a project using Apache 2.0 with mod_python in a
> > > Win2k environment, the choice of OS being dictated by the fact that
> > > the purpose of the server is to supply access to a proprietary,
> > > supplier written Windows program to our user base via the web.
> > >
> > > That program is single threaded and provides for only 1 user at a
> > > time. Access to the program in Python is through win32com.
> > >
> > > I am using a mod_python.publisher handler.
> > >
> > > All the http requests come through a single proxy server with a static
> > > address but not all are from browser clients. Some are originating
> > > from perl programs but all requests are directed to a single request
> > > handler.
> > >
> > > Can anyone suggest a method to control access to this single user
> > > resource. In a non-web programming environment, I'd just use a mutex
> > > semaphore to co-ordinate access among the threads but I am too much of
> > > newbie with mod_python and Apache to implement a workable solution so
> > > far.
> > >
> > > What mechanism can I use to create a shared resource that I can lock
> > > and have other requests wait until the resource is unlocked?
> > >
> > >  When using mod_python under Win32 platform, there is effectively only
> > > one process and requests are handled in separate threads. Because of
> > > this, you should be able to mediate access to the shared resource
> > > through a normal thread mutual exclusion locking mechanism just as
> > > easily as you would in a non web environment.
> > >
> > > Graham
> > >
> > >  That is to say :
> > >
> > > import threading
> > >
> > > # "R" stand for Re-entrant, i.e. a thread can acquire the lock multiple
> > > times
> > > # make sure that the lock is instantiated only once, for example by
> > > putting it in
> > > # a module which your published code imports.
> > > lock = threading.RLock()
> > >
> > > lock.acquire()
> > > try:
> > >  # access the shared resource
> > > finally:
> > >  lock.release()
> > >
> > > See the documentation of the threading module for more information.
> > >
> > > Regards,
> > > Nicolas
> > >
> > >
> > >
> > >  Thanks to Graham and Nicolas for their prompt responses.
> > >
> > >  I followed Nicolas' counsel and created a file 'tconstants.py' :
> > >
> > >  import threading
> > >  mutex = threading.RLock()
> > >
> > >  included an 'import' into my publisher handler and wrapped the access to
> > > the single resource with 'mutex.acquire()' and mutex.release(). When I got
> > > an error regarding the unavailability of the mutex global, I ran the
> > > following test in IDLE:
> > >
> > >  import threading
> > >  import tconstants
> > >  def setmutex():
> > >      mutex.acquire()
> > >      return
> > >  setmutex()
> > >
> > >  and received the same error:  "global name 'mutex' is not defined."
> > >
> > >  I ran the threading demo to verify there wasn't a problem with the thread
> > > module in my copy of Python 2.3. It ran fine.
> > >
> > >  The only way I could get this test to work was to alter the code to define
> > > the mutex not in the imported tconstants but in the code directly:
> > >
> > >  import threading
> > >  mutex = threading.RLock()
> > >  def setmutex():
> > >      mutex.acquire()
> > >      return
> > >  setmutex()
> > >  mutex.release()
> > >
> > >  Will defining the mutex this way cause problems in proper threading control
> > > for mod_python in its interaction with Apache?
> > >
> > >  Regards,
> > >
> > >  John
> > >
> > >
> > >
> > > _______________________________________________
> > > Mod_python mailing list
> > > Mod_python@modpython.org
> > > http://mailman.modpython.org/mailman/listinfo/mod_python
> > >
> > >
> > >
> >
>

From list.mod_python at docwhat.gerf.org  Fri Sep  9 10:57:58 2005
From: list.mod_python at docwhat.gerf.org (The Doctor What)
Date: Fri Sep  9 10:58:09 2005
Subject: [mod_python] Re: apachectl restart == dead mod_python
In-Reply-To: <e37d987757c86e27eb5af86e7c8e9fef@dscpl.com.au>
References: <20050909014349.GA20189@gerf.org>
	<e37d987757c86e27eb5af86e7c8e9fef@dscpl.com.au>
Message-ID: <20050909145758.GA16400@gerf.org>

* Graham Dumpleton (grahamd@dscpl.com.au) [050908 21:06]:
> 
> On 09/09/2005, at 11:43 AM, The Doctor What wrote:
> 
> >Hello!
> >
> >I have apache2 2.0.54, mod_python 3.1.3, python 2.3.5 (Debian
> >Sarge).
> >
> >I can start up apache2 and the mod_python pages work fine.
> >
> >However, if I then do apachectl restart, the mod_python pages hang
> >forever.  Frozen.  Eventually I get a timeout message in my browser.
> >The apache children do not die readily and require extra time to
> >clean up. :-(
> >
> >I full stop/start works everytime but in not a desirable solution
> >for a live server with multiple domains.  In addition, I'd have to
> >change all the log rotation stuff, etc.
> >
> >I particularly interested in TRAC, but it seems to be a generic
> >problem. I want to get PSE on my server, too.
> >
> >Is there some option I'm not including or something?
> 
> Is this happening with a really simple mod_python handler, ie.,
> something like mptest, or something more complicated? Ie., can
> you be sure it isn't the handler code itself is causing the
> problem?
> 
> What mode is Apache running in, "prefork" or "worker"?
> 
> Do you get any messages in the Apache error log file which may be
> pertinent?

Hi Graham! Thanks for replying. :-)

I set up the mptest.py and got the following behaviour:
  * After setting up the configuration directives, I did a complete
    restart (stop-start). The mptest.py worked correctly.
  * I then did a reload (kill -HUP aka graceful) on apache.
    mptest.py then returned 500s for the first few times, then the
    apache server stopped responding to that page. Other pages work
    fine.  No logs are generated other than access logs.
  * To recover, a full restart is needed (stop-start).  It takes
    work to kill some of the children.  It's obvious that they
    are hung somehow.

See the attached file "experiment" for a full log of my tests.

The apache server is running in "prefork" mode.

Ciao!
-------------- next part --------------
Script started on Fri Sep  9 09:38:53 2005
docwhat % sudo /etc/init.d/apache2 restart
Forcing reload of web server: Apache2.
docwhat % lynx -source http://gerf.org/test/mptest.py
Hello World!
docwhat % lynx -source http://gerf.org/test/mptest.py
Hello World!
docwhat % lynx -source http://gerf.org/test/mptest.py
Hello World!
docwhat % lynx -source http://gerf.org/test/mptest.py
Hello World!
docwhat % lynx -source http://gerf.org/test/mptest.py
Hello World!
docwhat % lynx -source http://gerf.org/test/mptest.py
Hello World!
docwhat % lynx -source http://gerf.org/test/mptest.py
Hello World!
docwhat % lynx -source http://gerf.org/test/mptest.py
Hello World!
docwhat % lynx -source http://gerf.org/test/mptest.py
Hello World!
docwhat % lynx -source http://gerf.org/test/mptest.py
Hello World!
docwhat % sudo /etc/init.d/apache2 reload
Reloading web server config...done.
docwhat % lynx -source http://gerf.org/test/mptest.py
<?xml version="1.0" encoding="ISO-8859-1"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
  "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en" xml:lang="en">
<head>
<title>Server error!</title>
<link rev="made" href="mailto:%5bno%20address%20given%5d" />
<style type="text/css"><!--/*--><![CDATA[/*><!--*/ 
    body { color: #000000; background-color: #FFFFFF; }
    a:link { color: #0000CC; }
    p, address {margin-left: 3em;}
    span {font-size: smaller;}
/*]]>*/--></style>
</head>

<body>
<h1>Server error!</h1>
<p>


  

    The server encountered an internal error and was 
    unable to complete your request. Either the server is
    overloaded or there was an error in a CGI script.

  

</p>
<p>
If you think this is a server error, please contact
the <a href="mailto:%5bno%20address%20given%5d">webmaster</a>.

</p>

<h2>Error 500</h2>
<address>
  <a href="/">gerf.org</a><br />
  
  <span>Fri Sep  9 09:39:58 2005<br />
  Apache/2.0.54 (Debian GNU/Linux) DAV/2 SVN/1.1.4 mod_fastcgi/2.4.2 mod_python/3.1.3 Python/2.3.5 PHP/4.3.10-16 mod_ssl/2.0.54 OpenSSL/0.9.7e</span>
</address>
</body>
</html>

docwhat % lynx -source http://gerf.org/test/mptest.py
<?xml version="1.0" encoding="ISO-8859-1"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
  "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en" xml:lang="en">
<head>
<title>Server error!</title>
<link rev="made" href="mailto:%5bno%20address%20given%5d" />
<style type="text/css"><!--/*--><![CDATA[/*><!--*/ 
    body { color: #000000; background-color: #FFFFFF; }
    a:link { color: #0000CC; }
    p, address {margin-left: 3em;}
    span {font-size: smaller;}
/*]]>*/--></style>
</head>

<body>
<h1>Server error!</h1>
<p>


  

    The server encountered an internal error and was 
    unable to complete your request. Either the server is
    overloaded or there was an error in a CGI script.

  

</p>
<p>
If you think this is a server error, please contact
the <a href="mailto:%5bno%20address%20given%5d">webmaster</a>.

</p>

<h2>Error 500</h2>
<address>
  <a href="/">gerf.org</a><br />
  
  <span>Fri Sep  9 09:39:59 2005<br />
  Apache/2.0.54 (Debian GNU/Linux) DAV/2 SVN/1.1.4 mod_fastcgi/2.4.2 mod_python/3.1.3 Python/2.3.5 PHP/4.3.10-16 mod_ssl/2.0.54 OpenSSL/0.9.7e</span>
</address>
</body>
</html>

docwhat % lynx -source http://gerf.org/test/mptest.py
<?xml version="1.0" encoding="ISO-8859-1"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
  "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en" xml:lang="en">
<head>
<title>Server error!</title>
<link rev="made" href="mailto:%5bno%20address%20given%5d" />
<style type="text/css"><!--/*--><![CDATA[/*><!--*/ 
    body { color: #000000; background-color: #FFFFFF; }
    a:link { color: #0000CC; }
    p, address {margin-left: 3em;}
    span {font-size: smaller;}
/*]]>*/--></style>
</head>

<body>
<h1>Server error!</h1>
<p>


  

    The server encountered an internal error and was 
    unable to complete your request. Either the server is
    overloaded or there was an error in a CGI script.

  

</p>
<p>
If you think this is a server error, please contact
the <a href="mailto:%5bno%20address%20given%5d">webmaster</a>.

</p>

<h2>Error 500</h2>
<address>
  <a href="/">gerf.org</a><br />
  
  <span>Fri Sep  9 09:40:00 2005<br />
  Apache/2.0.54 (Debian GNU/Linux) DAV/2 SVN/1.1.4 mod_fastcgi/2.4.2 mod_python/3.1.3 Python/2.3.5 PHP/4.3.10-16 mod_ssl/2.0.54 OpenSSL/0.9.7e</span>
</address>
</body>
</html>

docwhat % lynx -source http://gerf.org/test/mptest.py
<?xml version="1.0" encoding="ISO-8859-1"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
  "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en" xml:lang="en">
<head>
<title>Server error!</title>
<link rev="made" href="mailto:%5bno%20address%20given%5d" />
<style type="text/css"><!--/*--><![CDATA[/*><!--*/ 
    body { color: #000000; background-color: #FFFFFF; }
    a:link { color: #0000CC; }
    p, address {margin-left: 3em;}
    span {font-size: smaller;}
/*]]>*/--></style>
</head>

<body>
<h1>Server error!</h1>
<p>


  

    The server encountered an internal error and was 
    unable to complete your request. Either the server is
    overloaded or there was an error in a CGI script.

  

</p>
<p>
If you think this is a server error, please contact
the <a href="mailto:%5bno%20address%20given%5d">webmaster</a>.

</p>

<h2>Error 500</h2>
<address>
  <a href="/">gerf.org</a><br />
  
  <span>Fri Sep  9 09:40:01 2005<br />
  Apache/2.0.54 (Debian GNU/Linux) DAV/2 SVN/1.1.4 mod_fastcgi/2.4.2 mod_python/3.1.3 Python/2.3.5 PHP/4.3.10-16 mod_ssl/2.0.54 OpenSSL/0.9.7e</span>
</address>
</body>
</html>

docwhat % lynx -source http://gerf.org/test/mptest.py

docwhat % echo I pressed control c, it never came back.
I pressed control c, it never came back.
docwhat % sudo /etc/init.d/apache2 stop
Stopping web server: Apache2.
docwhat % sudo /etc/init.d/apache2 stop
Stopping web server: Apache2 ... no pidfile found! not running?.
docwhat % sudo /etc/init.d/apache2 start
Starting web server: Apache2.
docwhat % lynx -source http://gerf.org/test/mptest.py
Hello World!
Script done on Fri Sep  9 09:45:58 2005
From johannes at aitellu.com  Fri Sep  9 11:09:34 2005
From: johannes at aitellu.com (Johannes =?iso-8859-1?q?=D6hlin?=)
Date: Fri Sep  9 11:09:44 2005
Subject: [mod_python] Re: mod_python + MySQLdb + Apache strange behavoir
In-Reply-To: <200509091451.j89EpNLY031617@modpython.org>
References: <200509091451.j89EpNLY031617@modpython.org>
Message-ID: <200509091709.35008.johannes@aitellu.com>

We had issues accessing our database using mod_python until we downgraded to 
MySQLdb 0.9.2. I think there is no thread support in newer versions of 
MySQLdb.

/Johannes

On Friday 09 September 2005 16.51, mod_python-request@modpython.org wrote:
> I seem to be having some strange behavior between mod_python and ?
> MySQLdb under Apache.
>
> I have relatively simple .PSP's that will work one second, and then ?
> fail on a reload. ?Sometimes they work, sometimes they don't. ?To ?
> make things even more bizarre, if I utilize the same logic in ?
> another .PSP it may work! ?I can't seem to narrow down what this ?
> problem is.
>
> I read an article from two years ago about conflicts between PHP ?
> running parallel to mod_python. ?I have deactivated the PHP module ?
> loading within Apache, and the
> problem still persists.
>
> Error messages vary, nothing seems to fix things properly.
>
> Has anyone else had these sorts of problems?
>
> I am currently running mod_python 3.1.4, MySQLdb 1.2.0, MySQL 4.1.12-
> standard,
> and Apache 2.0.54
>
> Best,
>
> earle.

From Andrew at cwu.EDU  Fri Sep  9 13:20:49 2005
From: Andrew at cwu.EDU (Andrew Musselman)
Date: Fri Sep  9 13:21:07 2005
Subject: [mod_python] Dupe: Undefined symbol "PyEval_AcquireLock"
Message-ID: <s3216222.035@hermes.cwu.edu>

Thanks for the hints; it is strange that Makefile for python 2.4 has
these lines:

.if !defined(WITHOUT_THREADS)
CONFIGURE_ARGS+=        --with-threads

This seems to indicate that threads should be built in to the version I
have running.  Nevertheless, when I try "import threading" from within
python, I get this error:

Andrew Musselman
andrew@cwu.edu


>>> import threading
Traceback (most recent call last):
  File "<stdin>", line 1, in ?
  File "/usr/local/lib/python2.4/threading.py", line 6, in ?
    import thread
ImportError: No module named thread

I do not understand how to use "LIBS=-lc_r ./configure
--with-threads"..  Is it possible to enter the "LIBS=-lc_r" somewhere in
the Makefile?

Thanks again.

Andrew

>>> Graham Dumpleton <grahamd@dscpl.com.au> 9/8/2005 6:50 PM >>>
My experience with FreeBSD systems is that threading wasn't builtin to
Python by default. To see if threading is builtin, from the command
line run Python and then do:

   import threading

If it fails, probably indicates Python wasn't built with threading
support in the first place. If this is the case, you will need to
rebuild Python with threading enabled. Note that on FreeBSD I believe
the POSIX thread library functions are in -lc_r, ie., reentrant
version of standard C library. Command line for configure probably
something like:

   LIBS=-lc_r ./configure --with-threads

Graham

On 09/09/2005, at 3:12 AM, Andrew Musselman wrote:

> Hi List, sorry for the dupe; I tried subscribing with another email 
> account but wasn't able to confirm.  Here is my question again:
>
>  I am trying to run mod_python-3.1.4_1 with apache2 on FreeBSD 5.4 
> STABLE.  My python version is python-2.4.1_1.
>
>  Everything is built from ports.
>
>  Here is the error I receive when starting apache:
>  Syntax error on line 281 of /usr/local/etc/apache2/httpd.conf:
>  Cannot load /usr/local/libexec/apache2/mod_python.so into server: 
> /usr/local/libexec/apache2/mod_python.so: Undefined symbol 
> "PyEval_AcquireLock"
>
>  Here is line 281 of httpd.conf:
>  LoadModule python_module      libexec/apache2/mod_python.so
>
>  Has anyone seen this error before, or does anyone have suggestions
on 
> how to isolate the problem?
>
>  Thank you for your time.
>
>  Best,
>  Andrew
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org 
> http://mailman.modpython.org/mailman/listinfo/mod_python 


_______________________________________________
Mod_python mailing list
Mod_python@modpython.org 
http://mailman.modpython.org/mailman/listinfo/mod_python
From Andrew at cwu.EDU  Fri Sep  9 13:30:10 2005
From: Andrew at cwu.EDU (Andrew Musselman)
Date: Fri Sep  9 13:30:23 2005
Subject: [mod_python] Dupe: Undefined symbol "PyEval_AcquireLock"
Message-ID: <s321644d.024@hermes.cwu.edu>

Maybe this is my problem :)

"I get this error:

Andrew Musselman
andrew@cwu.edu "


From doktornull at lhi.is  Sat Sep 10 08:53:57 2005
From: doktornull at lhi.is (Sigurdur Einarsson)
Date: Sat Sep 10 08:53:50 2005
Subject: [mod_python] sys.argv does not work when accessed with mod_python
Message-ID: <4322D765.3090808@lhi.is>

Hello list,

It seems like I'm unable to use sys.argv[0] with mod_python, it
functions in the shell.  Is there something in mod_python that will do
the same thing or is there a way to allow mod_python to access the
function, assuming this is a security issue?

with regards
Sigurdur Einarsson
From doru-cat at student.matnat.uio.no  Sun Sep 11 06:21:30 2005
From: doru-cat at student.matnat.uio.no (Doru-Catalin Togea)
Date: Sun Sep 11 06:21:42 2005
Subject: [mod_python] mod_python for WinXP Pro
Message-ID: <Pine.LNX.4.63.0509111216460.8641@kaksi.ifi.uio.no>

Hi!

Sorry if this has been asked many times before. I can not find it in the 
archives, and I find amazingly few good links when I google for mod_python 
and windows.

Where can I download mod_python for WinXP? I have Apache 2.x and Python 
2.4 (from ActiveState) up and running.

On some forums they refer to "Appendix A" of the documentation for Windows 
installation instructions, but it seems that this section has been removed 
from the current mod_python release's documentation. What am I missing 
here?

Thanks for helping,
Catalin

-- 

         <<<< ================================== >>>>
         <<     We are what we repeatedly do.      >>
         <<  Excellence, therefore, is not an act  >>
         <<             but a habit.               >>
         <<<< ================================== >>>>
From jg.lists at sympatico.ca  Sun Sep 11 09:04:17 2005
From: jg.lists at sympatico.ca (Jim Gallacher)
Date: Sun Sep 11 08:58:13 2005
Subject: [mod_python] mod_python for WinXP Pro
In-Reply-To: <Pine.LNX.4.63.0509111216460.8641@kaksi.ifi.uio.no>
References: <Pine.LNX.4.63.0509111216460.8641@kaksi.ifi.uio.no>
Message-ID: <43242B51.4070003@sympatico.ca>

Doru-Catalin Togea wrote:
> Hi!
> 
> Sorry if this has been asked many times before. I can not find it in the 
> archives, and I find amazingly few good links when I google for 
> mod_python and windows.
> 
> Where can I download mod_python for WinXP? I have Apache 2.x and Python 
> 2.4 (from ActiveState) up and running.

The a windows binary for the current stable release is available here:
http://www.lehuen.com/nicolas/download/mod_python/mod_python-3.1.4.win32-py2.4.exe

If you'd like to try out the 3.2 beta, you can download it here:
http://www.lehuen.com/nicolas/download/mod_python/mod_python-3.2.1b.win32-py2.4.exe
We're just working out some final issuses and hope to have an official 
3.2 release "real soon now".

> On some forums they refer to "Appendix A" of the documentation for 
> Windows installation instructions, but it seems that this section has 
> been removed from the current mod_python release's documentation. What 
> am I missing here?

Better documentation? ;)

Regards,
Jim

From simonwittber at gmail.com  Mon Sep 12 04:45:35 2005
From: simonwittber at gmail.com (Simon Wittber)
Date: Mon Sep 12 04:45:47 2005
Subject: [mod_python] Different Times in Apache Log, and within PSP files
Message-ID: <4e4a11f805091201454b409993@mail.gmail.com>

Hello Chaps,

I am encountering a problem, where a mod_python PSP page is reporting
a different time from the datetime.datetime.today() call than the
system time.

Also, in the Apache2 logs below, it appears that something weird is
happening with the timestamp field. Any ideas on what might be going
on? We are using the MPM-worker model.

Sw.

xxx.xxx.xxx.xxx - 600030 [12/Sep/2005:07:55:18 +0800] "GET /some/file/
HTTP/1.1" 200 1792 "http://some/referrer/file.psp" "Mozilla/5.0
(Windows; U; Windows NT 5.1; en-US; rv:1.7.7) Gecko/20050410"
xxx.xxx.xxx.xxx - 600030 [11/Sep/2005:18:55:18 -0500] "GET
/some/other/file HTTP/1.1" 200 41610 "http://some/referrer/file.psp"
"Mozilla/5.0 (Windows;U; Windows NT 5.1; en-US; rv:1.7.7)
Gecko/20050410"

From jstubbs at work-at.co.jp  Mon Sep 12 07:25:29 2005
From: jstubbs at work-at.co.jp (Jason Stubbs)
Date: Mon Sep 12 07:27:37 2005
Subject: [mod_python] ApplicationPath kills performance?
Message-ID: <432565A9.4030103@work-at.co.jp>

Hi all,

Just started using mod_python. I searched the archives on this, but 
could only find issues about sessions not working. I can get sessions 
working if I set ApplicationPath but things become about 1/100th of the 
original speed.

The config (outside of any Directory section - adding it to a Directory 
section has the same affect):

DirectoryIndex index.psp
AddHandler mod_python .psp
PythonHandler mod_python.psp
PythonPath "['/var/www/localhost/pythonlib']+sys.path"
PythonOption ApplicationPath /

And then from a different machine:

$ ./ab -c 5 -n 500 http://192.168.1.101/index.psp
...
Requests per second:    3.85 [#/sec] (mean)

However, after removing the ApplicationPath:

Requests per second:    552.10 [#/sec] (mean)

What might be the cause of this huge difference? I noted in some 
previous posts that some are setting ApplicationPath relative to their 
DocumentRoot while others are setting it relative to /. Which is 
correct? (Neither makes a difference to speed, though)

Adding 'PythonOption SessionDbm /tmp/sessions.dbm' yields a small increase:

Requests per second:    11.38 [#/sec] (mean)

However, I don't understand why this could be seeing that my index.psp 
doesn't actually set up any sessions unless parameters are specified. 
The code can currently be summarised as:

"""
<%
username = None
if "username" in psp.form:
	# do authentication
	# possibly set up a session and redirect

%>
Some stuff
<%
if username:
%>
Invaild username!
<%
#if
%>
Some other stuff
"""

Obligatory version information is as follows:

httpd       2.0.54-r9
mod_python  3.1.3-r1
python      2.4.1-r1
(-r components are Gentoo patch-levels)

Any help would be appreciated.

--
Jason Stubbs
From doru-cat at student.matnat.uio.no  Mon Sep 12 10:31:20 2005
From: doru-cat at student.matnat.uio.no (Doru-Catalin Togea)
Date: Mon Sep 12 10:31:34 2005
Subject: [mod_python] Persistent web-service
Message-ID: <Pine.LNX.4.63.0509121612080.20298@kuusi.ifi.uio.no>

Hi!

I am not sure wheather I should use the word service or server (or 
something else) in the following, so I will stick to "service".

I have some C code which I need to call from mod_python in a 
web-service implementation. I need a persistent web-service, meaning 
either that my service is started up when Apache starts, or at the first 
call made for my service. What I need is to have some C-structs 
initialized and which survive calls to my service, until Apache shuts 
down. If it wasn't for this need of persistency I could use some simpler 
mechanisms like CGI.

To put it another way, I need a CORBA-like server, only based on Apache. 
In a CORBA implementation, the server keeps running and serves requests 
from clients as they arrive, without losing state between calls.

Any suggestions on how to go about this task using Apache and mod_python?

Thanks for helping,
Catalin



-- 

         <<<< ================================== >>>>
         <<     We are what we repeatedly do.      >>
         <<  Excellence, therefore, is not an act  >>
         <<             but a habit.               >>
         <<<< ================================== >>>>
From cy.khormaee at hp.com  Mon Sep 12 11:10:06 2005
From: cy.khormaee at hp.com (Khormaee, Cy)
Date: Mon Sep 12 11:10:13 2005
Subject: [mod_python] process privileges
Message-ID: <51E9B8FBB414C44A9A2CB19A5F4F5DD90422CD7F@cacexc03.americas.cpqcorp.net>

I apologize for the lenghty turnaround time on this issue.  I did a some more testing including running the script under different users and modifying the unix privileges of the containg folders.  When I redirected the output of pdf latex to a file this was the error i recieved:

This is pdfTeX, Version 3.14159-14h-released-20010417 (Web2C 7.3.3.1)
! I can't write on file `plotoutput112.log'.
Please type another transcript file name
! Emergency stop
No pages of output.

when running this code exerpt:

def makecsvpdf(results):
         """results dictionary should contain:
                 html - the html formatting to present the file to user
                 file - name of the output file
                 time - timestamp(beautified)
                 query - the query used to generate the output"""
         csvfile = open("/var/www/html/pcode/tmp/"+results['file'],'r')
         temp = "temp"
         csvdata=""
         while len(temp)!=0:
                 temp= csvfile.readline()
                 csvdata = csvdata+temp+"\\newline"
         tex = """\documentclass[12pt,letterpaper]{article}
\usepackage{graphicx}
\\begin{document}
\section{"Comma Separated Value Output:"}"""+results['time']+""" \\newline """+csvdata+""" \end{document}"""
         texfile = open("/var/www/html/pcode/tmp/"+results['file'][0:len(results['file'])-4]+'.tex','w')
         texfile.write(tex)
         os.system('pdflatex --interaction nonstopmode '+"/var/www/html/pcode/tmp/"+results['file'][0:len(results['file'])-4]+'.tex > /tmp/testoutput.txt')
         return """<HTML>
<HEAD>
<META HTTP-EQUIV="Refresh" CONTENT="0;
URL="""+"/pcode/tmp/"+results['file'][0:len(results['file'])-4]+""".pdf">
<TITLE>Servo Home</TITLE>
<HEAD></HTML>"""

The basic idea is that this file will take a text file of csv values, make a TeX file out of them, and then convert that TeX file into a pdf by directly entering the command "'pdflatex --interaction nonstopmode '+"/var/www/html/pcode/tmp/"+results['file'][0:len(results['file'])-4]+'.tex > /tmp/testoutput.txt'" into the commandline using the os module.  

Unfortunatly, I do not have sufficient access privalages on the system I am working on to complete the modifications so kindly suggested by Eric.  Subsequently, I am attempting to find a simpler approach or find a well defined access issue to be corrected.  Again, I am at a loss for a solution/explanation, any assistance/debugging advice would be much appreciated.

-=Cy=-

-----Original Message-----
From: mod_python-bounces@modpython.org
[mailto:mod_python-bounces@modpython.org]On Behalf Of Eric Walstad
Sent: Friday, August 26, 2005 11:38 AM
To: mod_python@modpython.org
Subject: Re: [mod_python] process privileges


On Friday 26 August 2005 11:08, Jon-Pierre Gentil wrote:
> On Friday 26 August 2005 11:31 am, Khormaee, Cy wrote:
> > I'm currently trying to run pdflatex on a machine with RedHat
> > Linux Corporate 3.0 by calling the os.system() command from mod
> > python.  I am able to complete this operation from the command
> > line python interpreter, but ill I get back when trying to run
> > the command from apache/mod python all I receive is '256' and no
> > changes are made to the file system.  All of the folders involved
> > are set for full access(unix privilege 777).  My current guess is
> > that this issue has something to do with apache's priority, but
> > haven't been able to confirm this suspicion yet.  If you can
> > provide any hints on how to debug this it would be much
> > appreciated.
>
> If you could show us some code it would help.  Having a different
> priority should not affect filesystem access, but running in apache
> is a lot different than running manually in the interpreter, since
> you would run as a completely different user and most likely not
> have a home directory.

I've had luck running a system process triggered with mod_python by:

 1.  setup the sudo file to allow the Apache process (user www-data on 
my debian box) to run a particular shell command.  Here a sample of 
my sudo file:

# User alias specification
User_Alias      APACHE = www-data
# Cmnd alias specification
Cmnd_Alias      MOD_PYTHON_BRANCH = /path/to/shell/script.sh
# User privilege specification
APACHE          LOCALHOST = NOPASSWD: MOD_PYTHON_BRANCH

 2.  Call the register_cleanup method of the mod_python request object 
to basically detach the system process (the shell script) from the 
mod_python request.  You may not need to do it this way, but I did 
because my shell script took a long time to complete and I didn't 
want the web user waiting for it to complete.

    req.register_cleanup(buildIt, working_dir)

def buildIt(working_dir):
    """The 'callable object' needed by req.register_cleanup.
    All this does is call the shell script.
    """
    r, shell_script_output = \
      commands.getstatusoutput(SHELL_SCRIPT_COMMAND % working_dir)

If you search the mod_python list archives for my email address and 
"register_cleanup" you will find more details.

I hope that helps.

Eric.
_______________________________________________
Mod_python mailing list
Mod_python@modpython.org
http://mailman.modpython.org/mailman/listinfo/mod_python



From jgentil at sebistar.net  Mon Sep 12 11:37:10 2005
From: jgentil at sebistar.net (Jon-Pierre Gentil)
Date: Mon Sep 12 11:37:44 2005
Subject: [mod_python] Persistent web-service
In-Reply-To: <Pine.LNX.4.63.0509121612080.20298@kuusi.ifi.uio.no>
References: <Pine.LNX.4.63.0509121612080.20298@kuusi.ifi.uio.no>
Message-ID: <200509121037.16591.jgentil@sebistar.net>

On Monday 12 September 2005 09:31 am, Doru-Catalin Togea wrote:

> To put it another way, I need a CORBA-like server, only based on
> Apache. In a CORBA implementation, the server keeps running and serves
> requests from clients as they arrive, without losing state between
> calls.

Hmm, this is tricky.  Your only bet would be to either:

1.  Create a separate server that mod_python only acts as a proxy for.  
This is probably the best solution.  mod_python and apache in general is 
fairly stateless.

2.  Create a pseudo-persistance layer using pickles.  Each request grabs 
the latest persistances object and unpickles it, does operations on it, 
then repickles it.  Locking issues would be a huge problem here as well 
as terrible system performance.

I always use Twisted when I need a persistant app server, personally.  But 
that is not always an option if you're in a system that requires use of 
apache.  

-- 
_________________________________________________________

  Jon-Pierre Gentil               PGP: 0x7E1CBA17
  jabber: jgentil@sebistar.net    web: www.sebistar.net
  "If you think education is expensive, try ignorance."
_________________________________________________________ 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 827 bytes
Desc: not available
Url : http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20050912/3bb08af2/attachment.bin
From akonsu at gmail.com  Mon Sep 12 15:16:41 2005
From: akonsu at gmail.com (akonsu)
Date: Mon Sep 12 15:16:47 2005
Subject: [mod_python] publisher handler questions
Message-ID: <acfb5bdc050912121618c3c5d@mail.gmail.com>

hello,

i am new to mod_python and python in general, so may be these are very
basic questions, but i still would appreciate your responses:

1. if i use the publisher handler, is there any way to hide some
function definitions in my .py file that is invoked through the
publisher handler so that the user could not call these functions by
navigating to their url?

2. in my .py file (that is invoked through the publisher handler
again) i define some global variables. i noticed that these variables
are initialised once. is this by design or just a coincidence? can i
rely on this behaviour?

thank you very much for any help
konstantin

From huzaifa at hostway.com  Mon Sep 12 16:04:59 2005
From: huzaifa at hostway.com (Huzaifa Tapal)
Date: Mon Sep 12 16:05:17 2005
Subject: [mod_python] PythonInterpPerDirec* Question
In-Reply-To: <2d293e5734c1b1b0920911c2cbfc4388@dscpl.com.au>
References: <4320B131.40603@hostway.com>
	<2d293e5734c1b1b0920911c2cbfc4388@dscpl.com.au>
Message-ID: <4325DF6B.1070801@hostway.com>

Thanks for the info Graham.  I had definitely made sure that I was 
getting into the Directory directive, however, the 
PythonInterpPerDirective was not bein honored. 

As for the bugs with the PythonInterpPerDirective directive, I see in 
the comments that the problem outlined have been patched.  Is there a 
way to get that patch to be applied to my current version of mod_python?

Hozi

Graham Dumpleton wrote:

>
> On 09/09/2005, at 7:46 AM, Huzaifa Tapal wrote:
>
>>  Hello all,
>>
>>  I have a question about the usage of the PythonInterpPerDirectory 
>> and PythonInterpPerDirective directives.  I am trying to setup a 
>> development box with mod_python support, and want to set it up in a 
>> way so that different users, within their cgi-bin can have multiple 
>> mod_python handler installations and each handler having its own set 
>> of sub-interpreters.  After doing some research I found that the 
>> usage of the above two directives is the solutions (or maybe 
>> something else that I am not aware of).
>>
>>  I am trying to set the above directive in my httpd.conf file as 
>> follows:
>>
>>  <Directory /home/*/www/cgi-bin/>
>>         PythonInterpPerDirective On       # or 
>> PythonInterpPerDirectory On
>>  </Directory>
>
>
> You can check whether this is even coming into play by including:
>
>   deny from all
>
> If the path pattern is right, you should then get Forbidden.
>
>>  now I test this by creating two directories within a user's cgi-bin 
>> say /home/user/www/cgi-bin/handler1 and 
>> /home/user/www/cgi-bin/handler2 and add a handler module and a 
>> .htaccess file with the following contents:
>>
>> SetHandler mod_python
>>  PythonHandler mptest
>>  PythonDebug On
>>
>>  Within the handlers, I am creating a cache dictionary at global 
>> level and testing the cache for that dictionary by printing its 
>> values and also printing the id of the cache dictionary.  When 
>> executing both handlers, it appears that both handlers in both 
>> directories are sharing the subinterpreters when they should not be.
>
>
> I wouldn't necessarily rely on using Python id() as basis to determine
> if they are same/different interpreter.
>
> For starters, simply display value of "req.interpreter". This will be
> the name given to each interpreter. It should equate somehow to the path
> to the physical directory.
>
> Note that there are some bugs in the PythonInterpPerDirectory directive.
> See:
>
>   http://issues.apache.org/jira/browse/MODPYTHON-5
>
> This is address in mod_python 3.2 beta versions.
>
> Graham
>
>

From list at joreybump.com  Mon Sep 12 16:07:52 2005
From: list at joreybump.com (Jorey Bump)
Date: Mon Sep 12 16:07:59 2005
Subject: [mod_python] publisher handler questions
In-Reply-To: <acfb5bdc050912121618c3c5d@mail.gmail.com>
References: <acfb5bdc050912121618c3c5d@mail.gmail.com>
Message-ID: <4325E018.9010804@joreybump.com>

akonsu wrote:
> hello,
> 
> i am new to mod_python and python in general, so may be these are very
> basic questions, but i still would appreciate your responses:
> 
> 1. if i use the publisher handler, is there any way to hide some
> function definitions in my .py file that is invoked through the
> publisher handler so that the user could not call these functions by
> navigating to their url?

An underscore will prevent direct access:

  def _foo():
      ...

Or, for variables:

  _foo = 'bar'

Functions in imported modules cannot be accessed directly:

  import foo
  bar = foo.bar()

This will allow:

  http://host/test.py/bar

But not:

  http://host/test.py/foo.bar

Or:

  http://host/test.py/foo/bar

> 2. in my .py file (that is invoked through the publisher handler
> again) i define some global variables. i noticed that these variables
> are initialised once. is this by design or just a coincidence? can i
> rely on this behaviour?

It depends. A database or other persistent storage mechanism may be more 
reliable.

From devanshmittal163 at yahoo.co.in  Mon Sep 12 16:25:43 2005
From: devanshmittal163 at yahoo.co.in (devansh mittal)
Date: Mon Sep 12 16:25:51 2005
Subject: [mod_python] Problem in Configuring
Message-ID: <20050912202543.9742.qmail@web8307.mail.in.yahoo.com>

Hi,
     I am a newbie to mod_python. I am using Fedora
Core 4, python version 2.4.1. When i try to configure
my mod_python, it gives me error.

I added this line to my httpd.conf file :-

LoadModule python_module modules/mod_python.so

and i made a program,

from mod_python import apache
      
       def handler(req):
               req.content_type = 'text/plain'
               req.send_http_header()
               req.write('mptest.py\n')
               return apache.OK

when i run this programe by using this command,

python program_name.py

then it gives me this error.

ImportError: No module named _apache

Please help me.

Regards,

Devansh


		
__________________________________________________________ 
Yahoo! India Matrimony: Find your partner now. Go to http://yahoo.shaadi.com
From akonsu at gmail.com  Mon Sep 12 16:26:30 2005
From: akonsu at gmail.com (akonsu)
Date: Mon Sep 12 16:26:36 2005
Subject: [mod_python] publisher handler questions
In-Reply-To: <4325E018.9010804@joreybump.com>
References: <acfb5bdc050912121618c3c5d@mail.gmail.com>
	<4325E018.9010804@joreybump.com>
Message-ID: <acfb5bdc05091213263de43d8e@mail.gmail.com>

thank you for your response.

> An underscore will prevent direct access:
> 
>  def _foo():
>      ...
> 

would not this be accessible through http://host/test.py/_foo ?

> 
> > 2. in my .py file (that is invoked through the publisher handler
> > again) i define some global variables. i noticed that these variables
> > are initialised once. is this by design or just a coincidence? can i
> > rely on this behaviour?
> 
> It depends. A database or other persistent storage mechanism may be more
> reliable.
> 

i am not talking about saving user data that should go in to sessions
in global variables. i need a list of files in a particular directory,
and i am trying to avoid building this list on every single http
request. what is the right strategy for handling something like this?

thank you in advance
konstantin

From jgentil at sebistar.net  Mon Sep 12 18:50:47 2005
From: jgentil at sebistar.net (Jon-Pierre Gentil)
Date: Mon Sep 12 18:51:13 2005
Subject: [mod_python] publisher handler questions
In-Reply-To: <acfb5bdc05091213263de43d8e@mail.gmail.com>
References: <acfb5bdc050912121618c3c5d@mail.gmail.com>
	<4325E018.9010804@joreybump.com>
	<acfb5bdc05091213263de43d8e@mail.gmail.com>
Message-ID: <200509121750.52139.jgentil@sebistar.net>

On Monday 12 September 2005 03:26 pm, akonsu wrote:

> > An underscore will prevent direct access:
> >  def _foo():
> would not this be accessible through http://host/test.py/_foo ?

Nope, mod_python.publisher blocks that.

> > > 2. in my .py file (that is invoked through the publisher handler
> > > again) i define some global variables. i noticed that these
> > > variables are initialised once. is this by design or just a
> > > coincidence? can i rely on this behaviour?
> >
> > It depends. A database or other persistent storage mechanism may be
> > more reliable.
>
> i am not talking about saving user data that should go in to sessions
> in global variables. i need a list of files in a particular directory,
> and i am trying to avoid building this list on every single http
> request. what is the right strategy for handling something like this?

mod_python global variables vary by a lot of different things.  Thus they 
are unreliable to use.

-- 
_________________________________________________________

  Jon-Pierre Gentil               PGP: 0x7E1CBA17
  jabber: jgentil@sebistar.net    web: www.sebistar.net
  "If you think education is expensive, try ignorance."
_________________________________________________________ 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 827 bytes
Desc: not available
Url : http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20050912/8e338edc/attachment.bin
From list at joreybump.com  Mon Sep 12 20:22:53 2005
From: list at joreybump.com (Jorey Bump)
Date: Mon Sep 12 20:23:07 2005
Subject: [mod_python] publisher handler questions
In-Reply-To: <acfb5bdc05091213263de43d8e@mail.gmail.com>
References: <acfb5bdc050912121618c3c5d@mail.gmail.com>	
	<4325E018.9010804@joreybump.com>
	<acfb5bdc05091213263de43d8e@mail.gmail.com>
Message-ID: <43261BDD.90004@joreybump.com>

akonsu wrote:

>>An underscore will prevent direct access:
>>
>> def _foo():
>>     ...
> would not this be accessible through http://host/test.py/_foo ?

No, it's a special case. Try it.

>>>2. in my .py file (that is invoked through the publisher handler
>>>again) i define some global variables. i noticed that these variables
>>>are initialised once. is this by design or just a coincidence? can i
>>>rely on this behaviour?
>>
>>It depends. A database or other persistent storage mechanism may be more
>>reliable.
> 
> i am not talking about saving user data that should go in to sessions
> in global variables. i need a list of files in a particular directory,
> and i am trying to avoid building this list on every single http
> request. what is the right strategy for handling something like this?

If you want to keep abreast of changes, then be careful to build the 
list only when it's needed.

If you don't care that much about changes to directory contents, you can 
  import a module from your path that populates a list. Due to module 
caching, this list will only be populated when it is imported. For 
example, if a.py is in your path:

  #a.py
  import os
  ls = os.listdir('tmp/test')

and b.py is your published module:

  #b.py
  import os
  import a
  def ls():
      return [os.listdir('tmp/test'), a.ls]

Then put some files there:

  cd /tmp/test
  touch 1 2 3

and visit the URL with multiple browsers:

  http://host/somedir/b/ls

It might display this:

  [['1', '2', '3'], ['1', '2', '3']]

For kicks, visit the URL a few more times, then do this:

  cd /tmp/test
  rm 1 2 3

Revisit the URL, and you might see this:

  [[], ['1', '2', '3']]

or you might see this:

  [[], []]

The point is that a.ls will only change when the module is (re)imported, 
and this is unlikely to happen globally. Since it is sometimes cached, 
you will see a performance gain, but it's at the cost of accuracy. It's 
up to you to determine if that cost is acceptable.

You can also store this information externally and routinely update it 
(database, pickle, cronjob > file, etc.), but I'd be surprised if the 
costs associated with loading it for every request are less than simply 
using the os module.

HTH










From administrator at leebrown.org  Mon Sep 12 20:37:56 2005
From: administrator at leebrown.org (Lee Brown)
Date: Mon Sep 12 20:38:32 2005
Subject: [mod_python] Persistent web-service
In-Reply-To: <Pine.LNX.4.63.0509121612080.20298@kuusi.ifi.uio.no>
Message-ID: <5671A82225F9@underdog>

Greetings!

The default behavior of mod_python is to create a new python interpreter for
each Apache vhost.  This interpreter is initialized on server startup and
persists until server shutdown/restart.  By using mod_python's PythonImport
statement in your Apache config file, you can have a python module execute
when the interpreter starts.  Put your startup initialization routines and
your per-request function calls in this module.

Best Regards,
Lee E. Brown
(administrator@leebrown.org)

-----Original Message-----
From: mod_python-bounces@modpython.org
[mailto:mod_python-bounces@modpython.org] On Behalf Of Doru-Catalin Togea
Sent: Monday, September 12, 2005 10:31 AM
To: mod_python@modpython.org
Subject: [mod_python] Persistent web-service

Hi!

I am not sure wheather I should use the word service or server (or something
else) in the following, so I will stick to "service".

I have some C code which I need to call from mod_python in a web-service
implementation. I need a persistent web-service, meaning either that my
service is started up when Apache starts, or at the first call made for my
service. What I need is to have some C-structs initialized and which survive
calls to my service, until Apache shuts down. If it wasn't for this need of
persistency I could use some simpler mechanisms like CGI.

To put it another way, I need a CORBA-like server, only based on Apache. 
In a CORBA implementation, the server keeps running and serves requests from
clients as they arrive, without losing state between calls.

Any suggestions on how to go about this task using Apache and mod_python?

Thanks for helping,
Catalin



-- 

         <<<< ================================== >>>>
         <<     We are what we repeatedly do.      >>
         <<  Excellence, therefore, is not an act  >>
         <<             but a habit.               >>
         <<<< ================================== >>>>
_______________________________________________
Mod_python mailing list
Mod_python@modpython.org
http://mailman.modpython.org/mailman/listinfo/mod_python

From jstubbs at work-at.co.jp  Mon Sep 12 21:04:00 2005
From: jstubbs at work-at.co.jp (Jason Stubbs)
Date: Mon Sep 12 21:06:13 2005
Subject: [mod_python] Problem in Configuring
In-Reply-To: <20050912202543.9742.qmail@web8307.mail.in.yahoo.com>
References: <20050912202543.9742.qmail@web8307.mail.in.yahoo.com>
Message-ID: <43262580.6090103@work-at.co.jp>

devansh mittal wrote:
> and i made a program,
> 
> from mod_python import apache
>       
>        def handler(req):
>                req.content_type = 'text/plain'
>                req.send_http_header()
>                req.write('mptest.py\n')
>                return apache.OK
> 
> when i run this programe by using this command,
> 
> python program_name.py
> 
> then it gives me this error.
> 
> ImportError: No module named _apache

 From the documentation on the apache module:

The apache module can only be imported by a script running under 
mod_python. This is because it depends on a built-in module _apache 
provided by mod_python.

--
Jason Stubbs
From selecter at gmail.com  Tue Sep 13 08:54:40 2005
From: selecter at gmail.com (Anton)
Date: Tue Sep 13 08:54:49 2005
Subject: [mod_python] Who wants mod_python hosting?
Message-ID: <39f0215a05091305544cad5c6d@mail.gmail.com>

Yeah it is an advertisement. But not offtopic at least.

http://selecter.vnet.ee/index.py?lang=en
I have to eat something. There are no free food in stores :(

From jamestmcneill-python at yahoo.co.uk  Tue Sep 13 10:37:32 2005
From: jamestmcneill-python at yahoo.co.uk (jamestmcneill-python@yahoo.co.uk)
Date: Tue Sep 13 10:37:38 2005
Subject: [mod_python] PythonImport: Can someone please draw a diagram for
	this idiot?
Message-ID: <20050913143732.36625.qmail@web86507.mail.ukl.yahoo.com>

Good afternoon. I wonder if someone may be able to help me get to the
starting line with mod_python? I'm trying to use PythonImport to create a
database connection which I can use for subsequent requests, and I haven't
been able to figure out how. Here's what I'm putting in httpd.conf: 

PythonInterpreter maininterpreter
PythonImport mpglobals maininterpreter
<Directory "C:\Program Files\Apache Group\Apache2\htdocs\moddy">
    AddHandler mod_python .py
    PythonHandler mptest
    PythonDebug On
</Directory>

mpglobals.py is in the "C:\Program Files\Apache
Group\Apache2\htdocs\moddy" folder, and an entry in c:\python23\mp.pth
adds this to sys.path. mpglobals.py attempts to load a database connection
as global:

import kinterbasdb as fbd
con = fbd.connect(dsn='localhost:C:\Program
Files\Firebird\Firebird_1_5\examples\employee.fdb', 
    user='sysdba', 
    password='masterkey')
cur = con.cursor()

Finally, the default python handler mptest.py tries to use the connection:

def handler(req):
    cur.execute('select * from EMPLOYEE order by LAST_NAME')
    . . . .
    return apache.OK

This throws up an error:

  File "C:/Program Files/Apache Group/Apache2/htdocs/moddy/\mptest.py",
line 8, in handler
    cur.execute('select * from EMPLOYEE order by LAST_NAME')
NameError: global name 'cur' is not defined


Am I anywhere near going about this the right way? Can someone please draw
me a diagram?

Regards,
Jim

++++++++++++++++++++++++++++++++++++++++++++++++++
+   If you've got a good excuse - don't use it   +
++++++++++++++++++++++++++++++++++++++++++++++++++)

From mauchi_co at earthlink.net  Tue Sep 13 11:57:17 2005
From: mauchi_co at earthlink.net (mauchi)
Date: Tue Sep 13 11:57:31 2005
Subject: [mod_python] extreme memory usage with apache2
Message-ID: <1126627037.8805.14.camel@totoro.assembleco.x>

I've noticed this behaviour as of late which causes large memory usage
in apache2, rogue threads taking up 400+ megs for each client that
eventually cause me to restart apache:

I return all html content through a python object which handles the form
data and tracks errors

#    Init object and parse form
response = webObject(req)

#    return html or xml based on form entries
req.write(response.returnSomething())

#    print debugging information
req.write(response.returnErrors())

the object has an internal array called errors where I store debugging
information from the internal functions. What I expect is 1-2 lines of
messages for each time the page is loaded which is printed at the bottom
of the page. What I find is if I keep hitting refresh, that the lines
grow each time with the previous load's messages. 50 refreshes later
I'll have 50-100 lines of debugging information. This makes me think
that the webObject is staying in memory between loads and doesn't get
destroyed until I restart apache2. This has become more of a problem as
each client page now requests frequent xml updates and the server
quickly tires out.
If anyone has a suggestion on how to either: turn off said behaviour in
mod_python, destroy objects from memory, or a clever way to flush out
all of an object's internal data between loads, I would be most happy.

Thanks to all in advance!

Mauchi
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20050913/2ff0a2d0/attachment.html
From administrator at leebrown.org  Tue Sep 13 18:47:13 2005
From: administrator at leebrown.org (Lee Brown)
Date: Tue Sep 13 18:47:30 2005
Subject: [mod_python] PythonImport: Can someone please draw a diagram
	forthis idiot?
In-Reply-To: <20050913143732.36625.qmail@web86507.mail.ukl.yahoo.com>
Message-ID: <5B32A59022E5@underdog>

No, I won't draw you a picture, but I'll give you a push in the right
direction:  If you were to use

	import mpglobals.py

In any other ordinary python program, in what namespace would you expect to
find the contents of mpglobals?


Best Regards,
Lee E. Brown
(administrator@leebrown.org)

-----Original Message-----
From: mod_python-bounces@modpython.org
[mailto:mod_python-bounces@modpython.org] On Behalf Of
jamestmcneill-python@yahoo.co.uk
Sent: Tuesday, September 13, 2005 10:38 AM
To: mod_python@modpython.org
Subject: [mod_python] PythonImport: Can someone please draw a diagram
forthis idiot?

Good afternoon. I wonder if someone may be able to help me get to the
starting line with mod_python? I'm trying to use PythonImport to create a
database connection which I can use for subsequent requests, and I haven't
been able to figure out how. Here's what I'm putting in httpd.conf: 

PythonInterpreter maininterpreter
PythonImport mpglobals maininterpreter
<Directory "C:\Program Files\Apache Group\Apache2\htdocs\moddy">
    AddHandler mod_python .py
    PythonHandler mptest
    PythonDebug On
</Directory>

mpglobals.py is in the "C:\Program Files\Apache Group\Apache2\htdocs\moddy"
folder, and an entry in c:\python23\mp.pth adds this to sys.path.
mpglobals.py attempts to load a database connection as global:

import kinterbasdb as fbd
con = fbd.connect(dsn='localhost:C:\Program
Files\Firebird\Firebird_1_5\examples\employee.fdb', 
    user='sysdba', 
    password='masterkey')
cur = con.cursor()

Finally, the default python handler mptest.py tries to use the connection:

def handler(req):
    cur.execute('select * from EMPLOYEE order by LAST_NAME')
    . . . .
    return apache.OK

This throws up an error:

  File "C:/Program Files/Apache Group/Apache2/htdocs/moddy/\mptest.py",
line 8, in handler
    cur.execute('select * from EMPLOYEE order by LAST_NAME')
NameError: global name 'cur' is not defined


Am I anywhere near going about this the right way? Can someone please draw
me a diagram?

Regards,
Jim

++++++++++++++++++++++++++++++++++++++++++++++++++
+   If you've got a good excuse - don't use it   +
++++++++++++++++++++++++++++++++++++++++++++++++++)

_______________________________________________
Mod_python mailing list
Mod_python@modpython.org
http://mailman.modpython.org/mailman/listinfo/mod_python

From administrator at leebrown.org  Tue Sep 13 18:55:10 2005
From: administrator at leebrown.org (Lee Brown)
Date: Tue Sep 13 18:55:33 2005
Subject: [mod_python] PythonImport: Can someone please draw a
	diagramforthis idiot?
In-Reply-To: <5B32A59022E5@underdog>
Message-ID: <5B39E57A541A@underdog>

Silly me! I meant to say:

	import mpglobals

And not

	import mpglobals.py

Sorry!


Best Regards,
Lee E. Brown
(administrator@leebrown.org)

-----Original Message-----
From: mod_python-bounces@modpython.org
[mailto:mod_python-bounces@modpython.org] On Behalf Of Lee Brown
Sent: Tuesday, September 13, 2005 6:47 PM
To: jamestmcneill-python@yahoo.co.uk; mod_python@modpython.org
Subject: RE: [mod_python] PythonImport: Can someone please draw a
diagramforthis idiot?

No, I won't draw you a picture, but I'll give you a push in the right
direction:  If you were to use

	import mpglobals.py

In any other ordinary python program, in what namespace would you expect to
find the contents of mpglobals?


Best Regards,
Lee E. Brown
(administrator@leebrown.org)

-----Original Message-----
From: mod_python-bounces@modpython.org
[mailto:mod_python-bounces@modpython.org] On Behalf Of
jamestmcneill-python@yahoo.co.uk
Sent: Tuesday, September 13, 2005 10:38 AM
To: mod_python@modpython.org
Subject: [mod_python] PythonImport: Can someone please draw a diagram
forthis idiot?

Good afternoon. I wonder if someone may be able to help me get to the
starting line with mod_python? I'm trying to use PythonImport to create a
database connection which I can use for subsequent requests, and I haven't
been able to figure out how. Here's what I'm putting in httpd.conf: 

PythonInterpreter maininterpreter
PythonImport mpglobals maininterpreter
<Directory "C:\Program Files\Apache Group\Apache2\htdocs\moddy">
    AddHandler mod_python .py
    PythonHandler mptest
    PythonDebug On
</Directory>

mpglobals.py is in the "C:\Program Files\Apache Group\Apache2\htdocs\moddy"
folder, and an entry in c:\python23\mp.pth adds this to sys.path.
mpglobals.py attempts to load a database connection as global:

import kinterbasdb as fbd
con = fbd.connect(dsn='localhost:C:\Program
Files\Firebird\Firebird_1_5\examples\employee.fdb', 
    user='sysdba', 
    password='masterkey')
cur = con.cursor()

Finally, the default python handler mptest.py tries to use the connection:

def handler(req):
    cur.execute('select * from EMPLOYEE order by LAST_NAME')
    . . . .
    return apache.OK

This throws up an error:

  File "C:/Program Files/Apache Group/Apache2/htdocs/moddy/\mptest.py",
line 8, in handler
    cur.execute('select * from EMPLOYEE order by LAST_NAME')
NameError: global name 'cur' is not defined


Am I anywhere near going about this the right way? Can someone please draw
me a diagram?

Regards,
Jim

++++++++++++++++++++++++++++++++++++++++++++++++++
+   If you've got a good excuse - don't use it   +
++++++++++++++++++++++++++++++++++++++++++++++++++)

_______________________________________________
Mod_python mailing list
Mod_python@modpython.org
http://mailman.modpython.org/mailman/listinfo/mod_python

_______________________________________________
Mod_python mailing list
Mod_python@modpython.org
http://mailman.modpython.org/mailman/listinfo/mod_python

From administrator at leebrown.org  Tue Sep 13 19:01:53 2005
From: administrator at leebrown.org (Lee Brown)
Date: Tue Sep 13 19:02:21 2005
Subject: [mod_python] extreme memory usage with apache2
In-Reply-To: <1126627037.8805.14.camel@totoro.assembleco.x>
Message-ID: <5B4022A71649@underdog>

Greetings!
 
It seems like each new request ought to be instantiating a new webObject
instance, yet it also seems that each new instantiation has a copy of all
the previous instance's data.  Are you sure you're not writing your data
into the webObject base class by mistake?
 
If that's not the case, you might try manually garbage-collecting the
response instance just prior to the end of your handler routine.

Best Regards,
Lee E. Brown
(administrator@leebrown.org)


 

  _____  

From: mod_python-bounces@modpython.org
[mailto:mod_python-bounces@modpython.org] On Behalf Of mauchi
Sent: Tuesday, September 13, 2005 11:57 AM
To: mod_python@modpython.org
Subject: [mod_python] extreme memory usage with apache2


I've noticed this behaviour as of late which causes large memory usage in
apache2, rogue threads taking up 400+ megs for each client that eventually
cause me to restart apache:

I return all html content through a python object which handles the form
data and tracks errors

#    Init object and parse form
response = webObject(req)

#    return html or xml based on form entries
req.write(response.returnSomething())

#    print debugging information
req.write(response.returnErrors())

the object has an internal array called errors where I store debugging
information from the internal functions. What I expect is 1-2 lines of
messages for each time the page is loaded which is printed at the bottom of
the page. What I find is if I keep hitting refresh, that the lines grow each
time with the previous load's messages. 50 refreshes later I'll have 50-100
lines of debugging information. This makes me think that the webObject is
staying in memory between loads and doesn't get destroyed unt il I restart
apache2. This has become more of a problem as each client page now requests
frequent xml updates and the server quickly tires out.
If anyone has a suggestion on how to either: turn off said behaviour in
mod_python, destroy objects from memory, or a clever way to flush out all of
an object's internal data between loads, I would be most happy.

Thanks to all in advance!

Mauchi 
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20050913/6eade7b3/attachment.html
From nicolas.lehuen at gmail.com  Wed Sep 14 01:53:31 2005
From: nicolas.lehuen at gmail.com (Nicolas Lehuen)
Date: Wed Sep 14 01:53:39 2005
Subject: [mod_python] extreme memory usage with apache2
In-Reply-To: <1126627037.8805.14.camel@totoro.assembleco.x>
References: <1126627037.8805.14.camel@totoro.assembleco.x>
Message-ID: <c298f2d705091322534d315870@mail.gmail.com>

There is a possibility that you've ran into a known memory leak that is 
fixed is the 3.2 beta version of mod_python, but still present in the
3.1.4version. If your webObject instance stores something into the req
object
which points back to the webObject instance, bam, you've created a reference 
cycle which won't be garbage collected in 3.1.4 (but will be in 3.2).

Here is the issue in our bug tracking system :

http://issues.apache.org/jira/browse/MODPYTHON-1

Regards,
Nicolas

2005/9/13, mauchi <mauchi_co@earthlink.net>:
> 
> I've noticed this behaviour as of late which causes large memory usage in 
> apache2, rogue threads taking up 400+ megs for each client that eventually 
> cause me to restart apache:
> 
> I return all html content through a python object which handles the form 
> data and tracks errors
> 
> # Init object and parse form
> response = webObject(req)
> 
> # return html or xml based on form entries
> req.write(response.returnSomething())
> 
> # print debugging information
> req.write(response.returnErrors())
> 
> the object has an internal array called errors where I store debugging 
> information from the internal functions. What I expect is 1-2 lines of 
> messages for each time the page is loaded which is printed at the bottom of 
> the page. What I find is if I keep hitting refresh, that the lines grow each 
> time with the previous load's messages. 50 refreshes later I'll have 50-100 
> lines of debugging information. This makes me think that the webObject is 
> staying in memory between loads and doesn't get destroyed until I restart 
> apache2. This has become more of a problem as each client page now requests 
> frequent xml updates and the server quickly tires out.
> If anyone has a suggestion on how to either: turn off said behaviour in 
> mod_python, destroy objects from memory, or a clever way to flush out all of 
> an object's internal data between loads, I would be most happy.
> 
> Thanks to all in advance!
> 
> Mauchi 
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
> 
> 
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20050914/6ee5d196/attachment.html
From jamestmcneill-python at yahoo.co.uk  Wed Sep 14 03:18:42 2005
From: jamestmcneill-python at yahoo.co.uk (jamestmcneill-python@yahoo.co.uk)
Date: Wed Sep 14 03:18:48 2005
Subject: [mod_python] PythonImport: Can someone please draw a diagram
	forthis idiot?
In-Reply-To: <5B32A59022E5@underdog>
Message-ID: <20050914071842.98377.qmail@web86503.mail.ukl.yahoo.com>

I suppose I asked for an RTFM. Gosh it would be great to be as clever as
you. I'm in awe. No really, I mean how could I make such a stupid mistake?
Even the crassest beginner knows better than that.

I'll take the hint and unsubscribe, and leave this list to you clever
people. I hope you're happy together.

Cheers
Jim

--- Lee Brown <administrator@leebrown.org> wrote:

> No, I won't draw you a picture, but I'll give you a push in the right
> direction:  If you were to use
> 
> 	import mpglobals.py
> 
> In any other ordinary python program, in what namespace would you expect
> to
> find the contents of mpglobals?
> 
> 
> Best Regards,
> Lee E. Brown
> (administrator@leebrown.org)

++++++++++++++++++++++++++++++++++++++++++++++++++
+   If you've got a good excuse - don't use it   +
++++++++++++++++++++++++++++++++++++++++++++++++++)

From trepca at gmail.com  Wed Sep 14 03:21:26 2005
From: trepca at gmail.com (Sebastjan Trepca)
Date: Wed Sep 14 03:21:32 2005
Subject: [mod_python] extreme memory usage with apache2
In-Reply-To: <c298f2d705091322534d315870@mail.gmail.com>
References: <1126627037.8805.14.camel@totoro.assembleco.x>
	<c298f2d705091322534d315870@mail.gmail.com>
Message-ID: <cd329af805091400213332d44d@mail.gmail.com>

And when do you expect mod_python 3.2.0 will be released? 

Regards, Sebastjan 

On 14/09/05, Nicolas Lehuen <nicolas.lehuen@gmail.com> wrote:
> There is a possibility that you've ran into a known memory leak that is
> fixed is the 3.2 beta version of mod_python, but still present in the 3.1.4
> version. If your webObject instance stores something into the req object
> which points back to the webObject instance, bam, you've created a reference
> cycle which won't be garbage collected in 3.1.4 (but will be in 3.2).
>  
>  Here is the issue in our bug tracking system :
>  
>  http://issues.apache.org/jira/browse/MODPYTHON-1
>  
>  Regards,
>  Nicolas
> 
> 2005/9/13, mauchi <mauchi_co@earthlink.net>:
> > 
> > I've noticed this behaviour as of late which causes large memory usage in
> apache2, rogue threads taking up 400+ megs for each client that eventually
> cause me to restart apache:
> > 
> > I return all html content through a python object which handles the form
> data and tracks errors
> > 
> > #    Init object and parse form
> > response = webObject(req)
> > 
> > #    return html or xml based on form entries
> > req.write(response.returnSomething())
> > 
> > #    print debugging information
> > req.write(response.returnErrors())
> > 
> > the object has an internal array called errors where I store debugging
> information from the internal functions. What I expect is 1-2 lines of
> messages for each time the page is loaded which is printed at the bottom of
> the page. What I find is if I keep hitting refresh, that the lines grow each
> time with the previous load's messages. 50 refreshes later I'll have 50-100
> lines of debugging information. This makes me think that the webObject is
> staying in memory between loads and doesn't get destroyed until I restart
> apache2. This has become more of a problem as each client page now requests
> frequent xml updates and the server quickly tires out.
> > If anyone has a suggestion on how to either: turn off said behaviour in
> mod_python, destroy objects from memory, or a clever way to flush out all of
> an object's internal data between loads, I would be most happy.
> > 
> > Thanks to all in advance!
> > 
> > Mauchi 
> > _______________________________________________
> > Mod_python mailing list
> > Mod_python@modpython.org
> > http://mailman.modpython.org/mailman/listinfo/mod_python
> > 
> > 
> > 
> 
>  
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
> 
> 
>

From nicolas.lehuen at gmail.com  Wed Sep 14 04:22:28 2005
From: nicolas.lehuen at gmail.com (Nicolas Lehuen)
Date: Wed Sep 14 04:23:00 2005
Subject: [mod_python] extreme memory usage with apache2
In-Reply-To: <cd329af805091400213332d44d@mail.gmail.com>
References: <1126627037.8805.14.camel@totoro.assembleco.x>
	<c298f2d705091322534d315870@mail.gmail.com>
	<cd329af805091400213332d44d@mail.gmail.com>
Message-ID: <c298f2d70509140122126e3e24@mail.gmail.com>

"Real soon now" :).

Seriously, we're never been that close.

Regards,
Nicolas

2005/9/14, Sebastjan Trepca <trepca@gmail.com>:
> 
> And when do you expect mod_python 3.2.0 will be released?
> 
> Regards, Sebastjan
> 
> On 14/09/05, Nicolas Lehuen <nicolas.lehuen@gmail.com> wrote:
> > There is a possibility that you've ran into a known memory leak that is
> > fixed is the 3.2 beta version of mod_python, but still present in the 
> 3.1.4
> > version. If your webObject instance stores something into the req object
> > which points back to the webObject instance, bam, you've created a 
> reference
> > cycle which won't be garbage collected in 3.1.4 (but will be in 3.2).
> >
> > Here is the issue in our bug tracking system :
> >
> > http://issues.apache.org/jira/browse/MODPYTHON-1
> >
> > Regards,
> > Nicolas
> >
> > 2005/9/13, mauchi <mauchi_co@earthlink.net>:
> > >
> > > I've noticed this behaviour as of late which causes large memory usage 
> in
> > apache2, rogue threads taking up 400+ megs for each client that 
> eventually
> > cause me to restart apache:
> > >
> > > I return all html content through a python object which handles the 
> form
> > data and tracks errors
> > >
> > > # Init object and parse form
> > > response = webObject(req)
> > >
> > > # return html or xml based on form entries
> > > req.write(response.returnSomething())
> > >
> > > # print debugging information
> > > req.write(response.returnErrors())
> > >
> > > the object has an internal array called errors where I store debugging
> > information from the internal functions. What I expect is 1-2 lines of
> > messages for each time the page is loaded which is printed at the bottom 
> of
> > the page. What I find is if I keep hitting refresh, that the lines grow 
> each
> > time with the previous load's messages. 50 refreshes later I'll have 
> 50-100
> > lines of debugging information. This makes me think that the webObject 
> is
> > staying in memory between loads and doesn't get destroyed until I 
> restart
> > apache2. This has become more of a problem as each client page now 
> requests
> > frequent xml updates and the server quickly tires out.
> > > If anyone has a suggestion on how to either: turn off said behaviour 
> in
> > mod_python, destroy objects from memory, or a clever way to flush out 
> all of
> > an object's internal data between loads, I would be most happy.
> > >
> > > Thanks to all in advance!
> > >
> > > Mauchi
> > > _______________________________________________
> > > Mod_python mailing list
> > > Mod_python@modpython.org
> > > http://mailman.modpython.org/mailman/listinfo/mod_python
> > >
> > >
> > >
> >
> >
> > _______________________________________________
> > Mod_python mailing list
> > Mod_python@modpython.org
> > http://mailman.modpython.org/mailman/listinfo/mod_python
> >
> >
> >
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20050914/d78b76fe/attachment.html
From nicolas.lehuen at gmail.com  Wed Sep 14 04:30:12 2005
From: nicolas.lehuen at gmail.com (Nicolas Lehuen)
Date: Wed Sep 14 04:30:31 2005
Subject: [mod_python] PythonImport: Can someone please draw a diagram
	forthis idiot?
In-Reply-To: <20050914071842.98377.qmail@web86503.mail.ukl.yahoo.com>
References: <5B32A59022E5@underdog>
	<20050914071842.98377.qmail@web86503.mail.ukl.yahoo.com>
Message-ID: <c298f2d705091401306b673e6d@mail.gmail.com>

Instead of "cur.execute" write "mpglobals.cur.execute".

Or, if mpglobals is really on the sys.path, then you can drop PythonImport 
and write :

from mpglobals import cur # or import * if you want all
cur.execute(...)

Regards,
Nicolas

2005/9/14, jamestmcneill-python@yahoo.co.uk <
jamestmcneill-python@yahoo.co.uk>:
> 
> I suppose I asked for an RTFM. Gosh it would be great to be as clever as
> you. I'm in awe. No really, I mean how could I make such a stupid mistake?
> Even the crassest beginner knows better than that.
> 
> I'll take the hint and unsubscribe, and leave this list to you clever
> people. I hope you're happy together.
> 
> Cheers
> Jim
> 
> --- Lee Brown <administrator@leebrown.org> wrote:
> 
> > No, I won't draw you a picture, but I'll give you a push in the right
> > direction: If you were to use
> >
> > import mpglobals.py
> >
> > In any other ordinary python program, in what namespace would you expect
> > to
> > find the contents of mpglobals?
> >
> >
> > Best Regards,
> > Lee E. Brown
> > (administrator@leebrown.org)
> 
> ++++++++++++++++++++++++++++++++++++++++++++++++++
> + If you've got a good excuse - don't use it +
> ++++++++++++++++++++++++++++++++++++++++++++++++++)
> 
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20050914/14798c80/attachment.html
From mail.suny at gmail.com  Wed Sep 14 06:47:01 2005
From: mail.suny at gmail.com (Sun Ying)
Date: Wed Sep 14 06:47:06 2005
Subject: [mod_python] Does mod_python support multi-thread?
Message-ID: <519cd27505091403473e775adb@mail.gmail.com>

import threading
from mylogger import mylogger

class TestThread(threading.Thread):

    def __init__(self.**kwds):
        threading.Thread.__init__(self)

    def run(self):
        mylogger.info("TestThread into running state")
	
def webtest(req):
	req.content_type="text/html"
	tt = TestThread()
	tt.start()
	req.write("<H1>OK</H1>")
	

TestThread's run() is never executed ... what's wrong with the configuration?
Does mod_python support multi-threaded program?

From jamestmcneill-python at yahoo.co.uk  Wed Sep 14 07:00:42 2005
From: jamestmcneill-python at yahoo.co.uk (jamestmcneill-python@yahoo.co.uk)
Date: Wed Sep 14 07:01:00 2005
Subject: [mod_python] PythonImport: Can someone please draw a diagram
	forthis idiot?
In-Reply-To: <c298f2d705091401306b673e6d@mail.gmail.com>
Message-ID: <20050914110042.96025.qmail@web86508.mail.ukl.yahoo.com>

Nicolas,

Thanks for that. Unfortunately I find that it doesn't really get me any
further. Using mpglobals.cur.execute just lets me know that it isn't
defined either ("NameError: global name 'mpglobals' is not defined" -
starting IDLE and looking at sys.path confirms that the directory is there
in the penultimate position), and trying to import it every time I service
a request kind of defeats the purpose, which is putting the database
connection handler into PythonImport to avoid the overhead involved in
it's creation at request time. As the manual says about PythonImport:
"This is useful for initialization tasks that could be time consuming and
should not be done at the request processing time, e.g. initializing a
database connection."

I must admit that this is one of the key reasons for me to look at
mod_python at all, and honestly I haven't started dropping questions into
the mailing list until I'd exhausted everything I could find in the
archives and google etc. There are a couple of examples in the FAQ on
"3.3. What is the best way to make persistent connections to a database?",
but I must admit to not being able to understand how this code is to be
worked into which stage of Apache handling, as surely as it reads it is
not intended to be run with every request?

As with my previous questions on ClearSilver, what I'd like to do is to
devise a minimal example of the use of PythonImport for creating permanent
database connections, as the manual states is possible.

Regards,
Jim

--- Nicolas Lehuen <nicolas.lehuen@gmail.com> wrote:

> Instead of "cur.execute" write "mpglobals.cur.execute".
> 
> Or, if mpglobals is really on the sys.path, then you can drop
> PythonImport 
> and write :
> 
> from mpglobals import cur # or import * if you want all
> cur.execute(...)

++++++++++++++++++++++++++++++++++++++++++++++++++
+   If you've got a good excuse - don't use it   +
++++++++++++++++++++++++++++++++++++++++++++++++++)

From list at joreybump.com  Wed Sep 14 07:51:45 2005
From: list at joreybump.com (Jorey Bump)
Date: Wed Sep 14 07:51:55 2005
Subject: [mod_python] PythonImport: Can someone please draw a diagram
	forthis idiot?
In-Reply-To: <20050914110042.96025.qmail@web86508.mail.ukl.yahoo.com>
References: <20050914110042.96025.qmail@web86508.mail.ukl.yahoo.com>
Message-ID: <43280ED1.3060108@joreybump.com>

jamestmcneill-python@yahoo.co.uk wrote:
> Nicolas,
> 
> Thanks for that. Unfortunately I find that it doesn't really get me any
> further. Using mpglobals.cur.execute just lets me know that it isn't
> defined either ("NameError: global name 'mpglobals' is not defined" -
> starting IDLE and looking at sys.path confirms that the directory is there
> in the penultimate position), 

This isn't a reliable way to check sys.path for mod_python applications. 
  It's better to import sys and print sys.path to the browser. Here's a 
little module I run under mod_python.publisher sometimes to check a few 
values, including the interpreter name:


# mpinfo.py
from mod_python import apache
import os

def showformdata(req):
     formdata = {}
     if req.form.keys():
         for key in req.form.keys():
             formdata[key] = req.form[key]
         return formdata
     else:
         return "no form data"

def index(req):
     d = []
     d.append(req.interpreter)
     d.append(req.the_request)
     d.append(req.protocol)
     d.append(req.method)
     d.append(str(req.subprocess_env.keys()))
     d.extend([req.subprocess_env[i] for i in req.subprocess_env.keys()])
     d.append(req.filename)
     d.append(req.path_info)
     d.append(os.environ['PATH'])
     for i in dir(apache):
         d.append(i)
     return "\n".join(d)

Access it at:

  http://host/somedir/mpinfo/

Point a form action at showformdata to check submitted values, if you 
need to check a form.

> and trying to import it every time I service
> a request kind of defeats the purpose, which is putting the database
> connection handler into PythonImport to avoid the overhead involved in
> it's creation at request time. As the manual says about PythonImport:
> "This is useful for initialization tasks that could be time consuming and
> should not be done at the request processing time, e.g. initializing a
> database connection."

I haven't used PythonImport for this purpose, but I get reusable db 
connections by importing them into my published modules and taking 
advantage of python's module caching. YMMV.

From jg.lists at sympatico.ca  Wed Sep 14 09:06:03 2005
From: jg.lists at sympatico.ca (Jim Gallacher)
Date: Wed Sep 14 09:02:02 2005
Subject: [mod_python] extreme memory usage with apache2
In-Reply-To: <c298f2d70509140122126e3e24@mail.gmail.com>
References: <1126627037.8805.14.camel@totoro.assembleco.x>	<c298f2d705091322534d315870@mail.gmail.com>	<cd329af805091400213332d44d@mail.gmail.com>
	<c298f2d70509140122126e3e24@mail.gmail.com>
Message-ID: <4328203B.2090308@sympatico.ca>

Nicolas Lehuen wrote:
> "Real soon now" :).
> 
> Seriously, we're never been that close.

I don't mean to jump on Nicolas' english or anything... ;) but what he 
means is "we've never been *so* close". The phrase "never been *that* 
close" might suggest that the next version of mod_python may never be 
released.

3.2 is imminent.

Regards
Jim


> Regards,
> Nicolas
> 
> 2005/9/14, Sebastjan Trepca <trepca@gmail.com <mailto:trepca@gmail.com>>:
> 
>     And when do you expect mod_python 3.2.0 will be released?
> 
>     Regards, Sebastjan
> 
>     On 14/09/05, Nicolas Lehuen <nicolas.lehuen@gmail.com
>     <mailto:nicolas.lehuen@gmail.com>> wrote:
>      > There is a possibility that you've ran into a known memory leak
>     that is
>      > fixed is the 3.2 beta version of mod_python, but still present in
>     the 3.1.4
>      > version. If your webObject instance stores something into the req
>     object
>      > which points back to the webObject instance, bam, you've created
>     a reference
>      > cycle which won't be garbage collected in 3.1.4 (but will be in 3.2).
>      >
>      >  Here is the issue in our bug tracking system :
>      >
>      >  http://issues.apache.org/jira/browse/MODPYTHON-1
>     <http://issues.apache.org/jira/browse/MODPYTHON-1>
>      >
>      >  Regards,
>      >  Nicolas
>      >
>      > 2005/9/13, mauchi <mauchi_co@earthlink.net
>     <mailto:mauchi_co@earthlink.net>>:
>      > >
>      > > I've noticed this behaviour as of late which causes large
>     memory usage in
>      > apache2, rogue threads taking up 400+ megs for each client that
>     eventually
>      > cause me to restart apache:
>      > >
>      > > I return all html content through a python object which handles
>     the form
>      > data and tracks errors
>      > >
>      > > #    Init object and parse form
>      > > response = webObject(req)
>      > >
>      > > #    return html or xml based on form entries
>      > > req.write(response.returnSomething ())
>      > >
>      > > #    print debugging information
>      > > req.write(response.returnErrors())
>      > >
>      > > the object has an internal array called errors where I store
>     debugging
>      > information from the internal functions. What I expect is 1-2
>     lines of
>      > messages for each time the page is loaded which is printed at the
>     bottom of
>      > the page. What I find is if I keep hitting refresh, that the
>     lines grow each
>      > time with the previous load's messages. 50 refreshes later I'll
>     have 50-100
>      > lines of debugging information. This makes me think that the
>     webObject is
>      > staying in memory between loads and doesn't get destroyed until I
>     restart
>      > apache2. This has become more of a problem as each client page
>     now requests
>      > frequent xml updates and the server quickly tires out.
>      > > If anyone has a suggestion on how to either: turn off said
>     behaviour in
>      > mod_python, destroy objects from memory, or a clever way to flush
>     out all of
>      > an object's internal data between loads, I would be most happy.
>      > >
>      > > Thanks to all in advance!
>      > >
>      > > Mauchi
>      > > _______________________________________________
>      > > Mod_python mailing list
>      > > Mod_python@modpython.org <mailto:Mod_python@modpython.org>
>      > > http://mailman.modpython.org/mailman/listinfo/mod_python
>     <http://mailman.modpython.org/mailman/listinfo/mod_python>
>      > >
>      > >
>      > >
>      >
>      >
>      > _______________________________________________
>      > Mod_python mailing list
>      > Mod_python@modpython.org <mailto:Mod_python@modpython.org>
>      > http://mailman.modpython.org/mailman/listinfo/mod_python
>      >
>      >
>      >
> 
> 
> 
> ------------------------------------------------------------------------
> 
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python

From administrator at leebrown.org  Wed Sep 14 09:13:52 2005
From: administrator at leebrown.org (Lee Brown)
Date: Wed Sep 14 09:14:05 2005
Subject: [mod_python] PythonImport: Can someone please draw a
	diagramforthis idiot?
In-Reply-To: <20050914071842.98377.qmail@web86503.mail.ukl.yahoo.com>
Message-ID: <5E4C18D07172@underdog>

Greetings!

It was not my intention to be condescending; rather, I was attempting to be
in good humor and I apologize for the offense.  In fact, I had the exact
same problem with imports and namespaces only a few months ago.

If your object is still not accessible in the correct namespace, then the
next thing to check is to see if your code is executing under the
interpreter name that you think it should.    The example code that Jorey
Bump published will help you determine this.

I agree with you that doing an import once at server startup rather than at
each request seems like a cleaner way to go.  The only drawback is that if
you change the code in the imported module you'll have to re-start the
server but this usually isn't a problem for many applications.

Best Regards,
Lee E. Brown
(administrator@leebrown.org)

-----Original Message-----
From: mod_python-bounces@modpython.org
[mailto:mod_python-bounces@modpython.org] On Behalf Of
jamestmcneill-python@yahoo.co.uk
Sent: Wednesday, September 14, 2005 3:19 AM
To: mod_python@modpython.org
Subject: RE: [mod_python] PythonImport: Can someone please draw a
diagramforthis idiot?

I suppose I asked for an RTFM. Gosh it would be great to be as clever as
you. I'm in awe. No really, I mean how could I make such a stupid mistake?
Even the crassest beginner knows better than that.

I'll take the hint and unsubscribe, and leave this list to you clever
people. I hope you're happy together.

Cheers
Jim

--- Lee Brown <administrator@leebrown.org> wrote:

> No, I won't draw you a picture, but I'll give you a push in the right
> direction:  If you were to use
> 
> 	import mpglobals.py
> 
> In any other ordinary python program, in what namespace would you 
> expect to find the contents of mpglobals?
> 
> 
> Best Regards,
> Lee E. Brown
> (administrator@leebrown.org)

++++++++++++++++++++++++++++++++++++++++++++++++++
+   If you've got a good excuse - don't use it   +
++++++++++++++++++++++++++++++++++++++++++++++++++)

_______________________________________________
Mod_python mailing list
Mod_python@modpython.org
http://mailman.modpython.org/mailman/listinfo/mod_python

From nicolas.lehuen at gmail.com  Wed Sep 14 11:20:04 2005
From: nicolas.lehuen at gmail.com (Nicolas Lehuen)
Date: Wed Sep 14 11:20:10 2005
Subject: [mod_python] extreme memory usage with apache2
In-Reply-To: <4328203B.2090308@sympatico.ca>
References: <1126627037.8805.14.camel@totoro.assembleco.x>
	<c298f2d705091322534d315870@mail.gmail.com>
	<cd329af805091400213332d44d@mail.gmail.com>
	<c298f2d70509140122126e3e24@mail.gmail.com>
	<4328203B.2090308@sympatico.ca>
Message-ID: <c298f2d705091408206340de76@mail.gmail.com>

Thanks Jim, my mother tongue is French and I sometimes have problems with 
English colloquial expressions :).

Regards,
Nicolas

2005/9/14, Jim Gallacher <jg.lists@sympatico.ca>:
> 
> Nicolas Lehuen wrote:
> > "Real soon now" :).
> >
> > Seriously, we're never been that close.
> 
> I don't mean to jump on Nicolas' english or anything... ;) but what he
> means is "we've never been *so* close". The phrase "never been *that*
> close" might suggest that the next version of mod_python may never be
> released.
> 
> 3.2 is imminent.
> 
> Regards
> Jim
> 
> 
> > Regards,
> > Nicolas
> >
> > 2005/9/14, Sebastjan Trepca <trepca@gmail.com <mailto:trepca@gmail.com
> >>:
> >
> > And when do you expect mod_python 3.2.0 will be released?
> >
> > Regards, Sebastjan
> >
> > On 14/09/05, Nicolas Lehuen <nicolas.lehuen@gmail.com
> > <mailto:nicolas.lehuen@gmail.com>> wrote:
> > > There is a possibility that you've ran into a known memory leak
> > that is
> > > fixed is the 3.2 beta version of mod_python, but still present in
> > the 3.1.4
> > > version. If your webObject instance stores something into the req
> > object
> > > which points back to the webObject instance, bam, you've created
> > a reference
> > > cycle which won't be garbage collected in 3.1.4 (but will be in 3.2).
> > >
> > > Here is the issue in our bug tracking system :
> > >
> > > http://issues.apache.org/jira/browse/MODPYTHON-1
> > <http://issues.apache.org/jira/browse/MODPYTHON-1>
> > >
> > > Regards,
> > > Nicolas
> > >
> > > 2005/9/13, mauchi <mauchi_co@earthlink.net
> > <mailto:mauchi_co@earthlink.net>>:
> > > >
> > > > I've noticed this behaviour as of late which causes large
> > memory usage in
> > > apache2, rogue threads taking up 400+ megs for each client that
> > eventually
> > > cause me to restart apache:
> > > >
> > > > I return all html content through a python object which handles
> > the form
> > > data and tracks errors
> > > >
> > > > # Init object and parse form
> > > > response = webObject(req)
> > > >
> > > > # return html or xml based on form entries
> > > > req.write(response.returnSomething ())
> > > >
> > > > # print debugging information
> > > > req.write(response.returnErrors())
> > > >
> > > > the object has an internal array called errors where I store
> > debugging
> > > information from the internal functions. What I expect is 1-2
> > lines of
> > > messages for each time the page is loaded which is printed at the
> > bottom of
> > > the page. What I find is if I keep hitting refresh, that the
> > lines grow each
> > > time with the previous load's messages. 50 refreshes later I'll
> > have 50-100
> > > lines of debugging information. This makes me think that the
> > webObject is
> > > staying in memory between loads and doesn't get destroyed until I
> > restart
> > > apache2. This has become more of a problem as each client page
> > now requests
> > > frequent xml updates and the server quickly tires out.
> > > > If anyone has a suggestion on how to either: turn off said
> > behaviour in
> > > mod_python, destroy objects from memory, or a clever way to flush
> > out all of
> > > an object's internal data between loads, I would be most happy.
> > > >
> > > > Thanks to all in advance!
> > > >
> > > > Mauchi
> > > > _______________________________________________
> > > > Mod_python mailing list
> > > > Mod_python@modpython.org <mailto:Mod_python@modpython.org>
> > > > http://mailman.modpython.org/mailman/listinfo/mod_python
> > <http://mailman.modpython.org/mailman/listinfo/mod_python>
> > > >
> > > >
> > > >
> > >
> > >
> > > _______________________________________________
> > > Mod_python mailing list
> > > Mod_python@modpython.org <mailto:Mod_python@modpython.org>
> > > http://mailman.modpython.org/mailman/listinfo/mod_python
> > >
> > >
> > >
> >
> >
> >
> > ------------------------------------------------------------------------
> >
> > _______________________________________________
> > Mod_python mailing list
> > Mod_python@modpython.org
> > http://mailman.modpython.org/mailman/listinfo/mod_python
> 
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20050914/31f0e147/attachment.html
From jg.lists at sympatico.ca  Wed Sep 14 11:50:52 2005
From: jg.lists at sympatico.ca (Jim Gallacher)
Date: Wed Sep 14 11:50:20 2005
Subject: [mod_python] extreme memory usage with apache2
In-Reply-To: <c298f2d705091408206340de76@mail.gmail.com>
References: <1126627037.8805.14.camel@totoro.assembleco.x>	<c298f2d705091322534d315870@mail.gmail.com>	<cd329af805091400213332d44d@mail.gmail.com>	<c298f2d70509140122126e3e24@mail.gmail.com>	<4328203B.2090308@sympatico.ca>
	<c298f2d705091408206340de76@mail.gmail.com>
Message-ID: <432846DC.5040206@sympatico.ca>

Nicolas Lehuen wrote:
> Thanks Jim, my mother tongue is French and I sometimes have problems 
> with English colloquial expressions :).

Actually, your English is excellent. In fact at times I think it's 
probably better than mine. :) As far as colloquial expressions are 
concerned, well, English is just such a goofy language in so many ways 
anyway, isn't it?

Regards
Jim

> Regards,
> Nicolas
> 
> 2005/9/14, Jim Gallacher <jg.lists@sympatico.ca 
> <mailto:jg.lists@sympatico.ca>>:
> 
>     Nicolas Lehuen wrote:
>      > "Real soon now" :).
>      >
>      > Seriously, we're never been that close.
> 
>     I don't mean to jump on Nicolas' english or anything... ;) but what he
>     means is "we've never been *so* close". The phrase "never been *that*
>     close" might suggest that the next version of mod_python may never be
>     released.
> 
>     3.2 is imminent.
> 
>     Regards
>     Jim
> 
> 
>      > Regards,
>      > Nicolas
>      >
>      > 2005/9/14, Sebastjan Trepca < trepca@gmail.com
>     <mailto:trepca@gmail.com> <mailto:trepca@gmail.com
>     <mailto:trepca@gmail.com>>>:
>      >
>      >     And when do you expect mod_python 3.2.0 will be released?
>      >
>      >     Regards, Sebastjan
>      >
>      >     On 14/09/05, Nicolas Lehuen <nicolas.lehuen@gmail.com
>     <mailto:nicolas.lehuen@gmail.com>
>      >     <mailto:nicolas.lehuen@gmail.com
>     <mailto:nicolas.lehuen@gmail.com>>> wrote:
>      >      > There is a possibility that you've ran into a known memory
>     leak
>      >     that is
>      >      > fixed is the 3.2 beta version of mod_python, but still
>     present in
>      >     the 3.1.4
>      >      > version. If your webObject instance stores something into
>     the req
>      >     object
>      >      > which points back to the webObject instance, bam, you've
>     created
>      >     a reference
>      >      > cycle which won't be garbage collected in 3.1.4 (but will
>     be in 3.2).
>      >      >
>      >      >  Here is the issue in our bug tracking system :
>      >      >
>      >      >  http://issues.apache.org/jira/browse/MODPYTHON-1
>      >     < http://issues.apache.org/jira/browse/MODPYTHON-1>
>      >      >
>      >      >  Regards,
>      >      >  Nicolas
>      >      >
>      >      > 2005/9/13, mauchi < mauchi_co@earthlink.net
>     <mailto:mauchi_co@earthlink.net>
>      >     <mailto:mauchi_co@earthlink.net
>     <mailto:mauchi_co@earthlink.net>>>:
>      >      > >
>      >      > > I've noticed this behaviour as of late which causes large
>      >     memory usage in
>      >      > apache2, rogue threads taking up 400+ megs for each client
>     that
>      >     eventually
>      >      > cause me to restart apache:
>      >      > >
>      >      > > I return all html content through a python object which
>     handles
>      >     the form
>      >      > data and tracks errors
>      >      > >
>      >      > > #    Init object and parse form
>      >      > > response = webObject(req)
>      >      > >
>      >      > > #    return html or xml based on form entries
>      >      > > req.write(response.returnSomething ())
>      >      > >
>      >      > > #    print debugging information
>      >      > > req.write(response.returnErrors())
>      >      > >
>      >      > > the object has an internal array called errors where I store
>      >     debugging
>      >      > information from the internal functions. What I expect is 1-2
>      >     lines of
>      >      > messages for each time the page is loaded which is printed
>     at the
>      >     bottom of
>      >      > the page. What I find is if I keep hitting refresh, that the
>      >     lines grow each
>      >      > time with the previous load's messages. 50 refreshes later
>     I'll
>      >     have 50-100
>      >      > lines of debugging information. This makes me think that the
>      >     webObject is
>      >      > staying in memory between loads and doesn't get destroyed
>     until I
>      >     restart
>      >      > apache2. This has become more of a problem as each client
>     page
>      >     now requests
>      >      > frequent xml updates and the server quickly tires out.
>      >      > > If anyone has a suggestion on how to either: turn off said
>      >     behaviour in
>      >      > mod_python, destroy objects from memory, or a clever way
>     to flush
>      >     out all of
>      >      > an object's internal data between loads, I would be most
>     happy.
>      >      > >
>      >      > > Thanks to all in advance!
>      >      > >
>      >      > > Mauchi
>      >      > > _______________________________________________
>      >      > > Mod_python mailing list
>      >      > > Mod_python@modpython.org
>     <mailto:Mod_python@modpython.org> <mailto: Mod_python@modpython.org
>     <mailto:Mod_python@modpython.org>>
>      >      > > http://mailman.modpython.org/mailman/listinfo/mod_python
>     <http://mailman.modpython.org/mailman/listinfo/mod_python>
>      >     <http://mailman.modpython.org/mailman/listinfo/mod_python>
>      >      > >
>      >      > >
>      >      > >
>      >      >
>      >      >
>      >      > _______________________________________________
>      >      > Mod_python mailing list
>      >      > Mod_python@modpython.org <mailto:Mod_python@modpython.org>
>     <mailto:Mod_python@modpython.org <mailto:Mod_python@modpython.org>>
>      >      > http://mailman.modpython.org/mailman/listinfo/mod_python
>     <http://mailman.modpython.org/mailman/listinfo/mod_python>
>      >      >
>      >      >
>      >      >
>      >
>      >
>      >
>      >
>     ------------------------------------------------------------------------
>      >
>      > _______________________________________________
>      > Mod_python mailing list
>      > Mod_python@modpython.org <mailto:Mod_python@modpython.org>
>      > http://mailman.modpython.org/mailman/listinfo/mod_python
>     <http://mailman.modpython.org/mailman/listinfo/mod_python>
> 
> 
> 
> ------------------------------------------------------------------------
> 
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python

From grahamd at dscpl.com.au  Wed Sep 14 12:29:52 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Wed Sep 14 12:30:45 2005
Subject: [mod_python] Dupe: Undefined symbol "PyEval_AcquireLock"
In-Reply-To: <s3216222.033@hermes.cwu.edu>
References: <s3216222.033@hermes.cwu.edu>
Message-ID: <fadfc81792d3c142c34ce11656fca8fe@dscpl.com.au>


On 10/09/2005, at 3:20 AM, Andrew Musselman wrote:

> Thanks for the hints; it is strange that Makefile for python 2.4 has
> these lines:
>
> .if !defined(WITHOUT_THREADS)
> CONFIGURE_ARGS+=        --with-threads
>
> This seems to indicate that threads should be built in to the version I
> have running.

Which makefile is this? I can't find anything like this in standard
Python source code distribution, not even a reference to the symbol
called "WITHOUT_THREADS".

> I do not understand how to use "LIBS=-lc_r ./configure
> --with-threads"..  Is it possible to enter the "LIBS=-lc_r" somewhere 
> in
> the Makefile?

If you don't understand about running "configure", I would suggest
you are going to have more problems if you start trying to modify
makefiles to get it to work.

By rights, running "configure" initially to build Python should
correctly find threads on a BSD type system which puts them in the
libc_r library instead of the libc library. Ie., "configure" contains:

     echo "$as_me:$LINENO: checking for pthread_create in -lc_r" >&5
echo $ECHO_N "checking for pthread_create in -lc_r... $ECHO_C" >&6
if test "${ac_cv_lib_c_r_pthread_create+set}" = set; then
   echo $ECHO_N "(cached) $ECHO_C" >&6
else
   ac_check_lib_save_LIBS=$LIBS
LIBS="-lc_r  $LIBS"

The question is, who installed your Python in the first place. Was it
a prebuilt package which you simply loaded on your box or which was
put there by someone else? BSD packages for Python I have seen in the
past have for some reason deliberately left out threading support.
These were older versions of Python and I believe it was done because
of some funny limit in BSD. Newer versions of Python have been patched
to avoid whatever the problem was, but perhaps packagers haven't learnt
and still build it without threads.

If it was done by you, you should know enough about "configure". If
not, you perhaps want to start finding out about what it is. Start
by trying to install Python from source code yourself by following
its instructions.

Graham

From grahamd at dscpl.com.au  Wed Sep 14 12:36:22 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Wed Sep 14 12:37:03 2005
Subject: [mod_python] mod_python + MySQLdb + Apache strange behavoir
In-Reply-To: <7317DA74-4000-4D19-9723-524485ABD33F@gmail.com>
References: <F71F2F7B-BA31-4977-8C58-E9DA14F82622@gmail.com>
	<169437ced9788333f95b147fe7e5b984@dscpl.com.au>
	<7317DA74-4000-4D19-9723-524485ABD33F@gmail.com>
Message-ID: <d7a876046d2c19159ace0fbb01448ecc@dscpl.com.au>

If none of the suggestions by others have worked, then you really
need to post the actual error messages and specific symptoms as I
asked for originally.

BTW, can you please try and keep followups on the mailing list.
I am traveling on holidays with days at a time without any
Internet access. If you keep the discussion on the list, others
may still be able to help if I am not reading email.

Graham

On 10/09/2005, at 4:55 AM, Earle Ady wrote:

>
> Graham,
>
> Thanks for your response!
>
> The problem does not occur in PSP without the use of MySQLdb.  I am 
> only
> using AddHandler mod_python.psp (for .psp, and again for .psp_).  I am 
> not
> importing psp from any of the pages.  Is this something I need to be 
> importing?
>
> The problem is extremely obtrusive at this point.  Any other 
> suggestions?
>
> I take it this is a non-normal problem I'm having?  At this point, it 
> seems we've
> wasted a tremendous amount of time using python as opposed to PHP.  Is
> this just a specific case?
>
> Best,
> earle.
>
>
> On Sep 9, 2005, at 4:38 AM, Graham Dumpleton wrote:
>>
>> There are known problems, but without the error messages from the 
>> Apache
>> error log file, we would be guessing.
>>
>> Does the problem occur in PSP code independent of use of MySQLDB? Are 
>> you
>> mixing use of mod_python.psp and mod_python.publisher and thus are 
>> using
>> "from mod_python import psp" or "import mod_python.psp" explicitly?
>>
>> You might try latest beta of mod_python 3.2 as some issues related to
>> module importing when using mod_python.publisher and mod_python.psp
>> together are addressed.
>>
>> Graham
>>
>>

From scott_list at mischko.com  Wed Sep 14 14:22:32 2005
From: scott_list at mischko.com (Scott Chapman)
Date: Wed Sep 14 14:22:42 2005
Subject: [mod_python] Single import at startup
In-Reply-To: <5E4C18D07172@underdog>
References: <5E4C18D07172@underdog>
Message-ID: <43286A68.2090501@mischko.com>

Lee Brown wrote:

> I agree with you that doing an import once at server startup rather than at
> each request seems like a cleaner way to go.  The only drawback is that if
> you change the code in the imported module you'll have to re-start the
> server but this usually isn't a problem for many applications.

It is my understanding that importing once at startup is problematic because the 
only hook to do it is _before_ the interpreter is established?

I'd like to suggest that mod_python be modified in the next(?) version to enable 
  a hook for importing after the interpreter is established.  This would become 
the default place to connect to the database with persistent connection, etc. as 
well.  I think mod_perl supports this more "intuitively".

If anyone has found a clean way to do this stuff in the existing environment, 
please educate! :)

Scott
From nicolas.lehuen at gmail.com  Wed Sep 14 14:49:36 2005
From: nicolas.lehuen at gmail.com (Nicolas Lehuen)
Date: Wed Sep 14 14:49:45 2005
Subject: [mod_python] Single import at startup
In-Reply-To: <43286A68.2090501@mischko.com>
References: <5E4C18D07172@underdog> <43286A68.2090501@mischko.com>
Message-ID: <c298f2d7050914114969ea9915@mail.gmail.com>

Why not use import in the handler code or the published module ? AFAIK this 
should import the module only once per interpreter. I don't understand the 
advantage of importing a module as soon as the interpreter is created vs 
importing the module when it is needed (i.e. in the handler module or 
published page). Performance-wise, to me, both ways are similar, and the 
second has the benefit of actually working :).

Regards,
Nicolas

2005/9/14, Scott Chapman <scott_list@mischko.com>:
> 
> Lee Brown wrote:
> 
> > I agree with you that doing an import once at server startup rather than 
> at
> > each request seems like a cleaner way to go. The only drawback is that 
> if
> > you change the code in the imported module you'll have to re-start the
> > server but this usually isn't a problem for many applications.
> 
> It is my understanding that importing once at startup is problematic 
> because the
> only hook to do it is _before_ the interpreter is established?
> 
> I'd like to suggest that mod_python be modified in the next(?) version to 
> enable
> a hook for importing after the interpreter is established. This would 
> become
> the default place to connect to the database with persistent connection, 
> etc. as
> well. I think mod_perl supports this more "intuitively".
> 
> If anyone has found a clean way to do this stuff in the existing 
> environment,
> please educate! :)
> 
> Scott
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20050914/531ffa3f/attachment.html
From nick at dd.revealed.net  Wed Sep 14 15:07:32 2005
From: nick at dd.revealed.net (Nick)
Date: Wed Sep 14 15:08:07 2005
Subject: [mod_python] Single import at startup
In-Reply-To: <c298f2d7050914114969ea9915@mail.gmail.com>
References: <5E4C18D07172@underdog> <43286A68.2090501@mischko.com>
	<c298f2d7050914114969ea9915@mail.gmail.com>
Message-ID: <432874F4.8010606@dd.revealed.net>

If the import is huge, it can create a significant delay (between the 
initiation of the request and the fulfillment of that request) on the 
first call of a handler.  If you have multiple server children, then 
there is that delay for each child.

Nick

Nicolas Lehuen wrote:
> Why not use import in the handler code or the published module ? AFAIK 
> this should import the module only once per interpreter. I don't 
> understand the advantage of importing a module as soon as the 
> interpreter is created vs importing the module when it is needed (i.e. 
> in the handler module or published page). Performance-wise, to me, both 
> ways are similar, and the second has the benefit of actually working :).
> 
> Regards,
> Nicolas
> 
> 2005/9/14, Scott Chapman <scott_list@mischko.com 
> <mailto:scott_list@mischko.com>>:
> 
>     Lee Brown wrote:
> 
>      > I agree with you that doing an import once at server startup
>     rather than at
>      > each request seems like a cleaner way to go.  The only drawback
>     is that if
>      > you change the code in the imported module you'll have to
>     re-start the
>      > server but this usually isn't a problem for many applications.
> 
>     It is my understanding that importing once at startup is problematic
>     because the
>     only hook to do it is _before_ the interpreter is established?
> 
>     I'd like to suggest that mod_python be modified in the next(?)
>     version to enable
>       a hook for importing after the interpreter is established.  This
>     would become
>     the default place to connect to the database with persistent
>     connection, etc. as
>     well.  I think mod_perl supports this more "intuitively".
> 
>     If anyone has found a clean way to do this stuff in the existing
>     environment,
>     please educate! :)
> 
>     Scott
>     _______________________________________________
>     Mod_python mailing list
>     Mod_python@modpython.org <mailto:Mod_python@modpython.org>
>     http://mailman.modpython.org/mailman/listinfo/mod_python
>     <http://mailman.modpython.org/mailman/listinfo/mod_python>
> 
> 
> 
> ------------------------------------------------------------------------
> 
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
From jamestmcneill-python at yahoo.co.uk  Wed Sep 14 15:59:24 2005
From: jamestmcneill-python at yahoo.co.uk (jamestmcneill-python@yahoo.co.uk)
Date: Wed Sep 14 15:59:31 2005
Subject: [mod_python] PythonImport: Can someone please draw a diagram for
	this idiot?
In-Reply-To: <5E4C18D07172@underdog>
Message-ID: <20050914195924.64436.qmail@web86508.mail.ukl.yahoo.com>

Lee,

Sorry for being crabbit, you didn't deserve it. Anyway I'm still on track
of this PythonImport thing, and a couple of simple test rule out come
possibilities.

1) I've run the main handler to show req.interpreter, and it is
'myinterpreter' as specified.
2) I've gone into IDLE and done what I'm trying to do in the main handler,
namely:

import mpglobals
cur = mpglobals.con.cursor()

That works correctly, and produces a compiled mpglobls.pyc in the same
folder. Also I stuck some logger code into mpglobals, and that wrote to a
text file as expected.
3) From this I can see that the PythonImport directive doesn't seem to be
working at all (or at least, in any way I expected it to). It does not
produce a compiled version of the module specified, nor does it run the
logger code. However it works, it does not run as if I had an "import
mpglobals" command in the main handler. In fact I've tried that, and it
runs properly, showing that mpglobals is on sys.path within the main
request handler, and that the code within it works properly.

Really, as far as I can see (not far admittedly) either we're into some
pretty weird territory with PythonImport and I'm just not getting all this
C API and subinterpreter doodah, or it simply doesn't work under my
configuration (Windows XP and Python 2.3).

Can anyone suggest a simple test to show whether or not PythonImport is
working at all on my system? Or have I already shown that it hasn't, with
what I've done already?

Cheers
Jim

--- Lee Brown wrote:

> Greetings!
> 
> It was not my intention to be condescending; rather, I was attempting to
> be
> in good humor and I apologize for the offense.  In fact, I had the exact
> same problem with imports and namespaces only a few months ago.
> 
> If your object is still not accessible in the correct namespace, then
> the
> next thing to check is to see if your code is executing under the
> interpreter name that you think it should.    The example code that
> Jorey
> Bump published will help you determine this.
> 
> I agree with you that doing an import once at server startup rather than
> at
> each request seems like a cleaner way to go.  The only drawback is that
> if
> you change the code in the imported module you'll have to re-start the
> server but this usually isn't a problem for many applications.
> 
> Best Regards,
> Lee E. Brown


++++++++++++++++++++++++++++++++++++++++++++++++++
+   If you've got a good excuse - don't use it   +
++++++++++++++++++++++++++++++++++++++++++++++++++)

From list at joreybump.com  Wed Sep 14 16:22:02 2005
From: list at joreybump.com (Jorey Bump)
Date: Wed Sep 14 16:22:16 2005
Subject: [mod_python] PythonImport: Can someone please draw a diagram
	for	this idiot?
In-Reply-To: <20050914195924.64436.qmail@web86508.mail.ukl.yahoo.com>
References: <20050914195924.64436.qmail@web86508.mail.ukl.yahoo.com>
Message-ID: <4328866A.8030405@joreybump.com>

jamestmcneill-python@yahoo.co.uk wrote:

> 3) From this I can see that the PythonImport directive doesn't seem to be
> working at all (or at least, in any way I expected it to). It does not
> produce a compiled version of the module specified, 

This is not unusual. The user that apache runs as must have write 
permissions in the directory in order to produce a .pyc file. I'm not 
sure what happens under Windows regarding this, but if I want a compiled 
version of the module under Linux, I compile it ahead of time or change 
the permissions (rarely).
From list at joreybump.com  Wed Sep 14 16:36:50 2005
From: list at joreybump.com (Jorey Bump)
Date: Wed Sep 14 16:36:58 2005
Subject: [mod_python] PythonImport: Can someone please draw a diagram
	for	this idiot?
In-Reply-To: <4328866A.8030405@joreybump.com>
References: <20050914195924.64436.qmail@web86508.mail.ukl.yahoo.com>
	<4328866A.8030405@joreybump.com>
Message-ID: <432889E2.80908@joreybump.com>

Jorey Bump wrote:
> jamestmcneill-python@yahoo.co.uk wrote:
> 
>> 3) From this I can see that the PythonImport directive doesn't seem to be
>> working at all (or at least, in any way I expected it to). It does not
>> produce a compiled version of the module specified, 
> 
> This is not unusual. The user that apache runs as must have write 
> permissions in the directory in order to produce a .pyc file. I'm not 
> sure what happens under Windows regarding this, but if I want a compiled 
> version of the module under Linux, I compile it ahead of time or change 
> the permissions (rarely).

Having said that, I just tried using the PythonImport statement, and I 
also see no evidence that it works. I may be using or testing it 
incorrectly, however.
From jg.lists at sympatico.ca  Wed Sep 14 16:51:44 2005
From: jg.lists at sympatico.ca (Jim Gallacher)
Date: Wed Sep 14 16:49:46 2005
Subject: [mod_python] PythonImport: Can someone please draw a diagram
	for	this idiot?
In-Reply-To: <432889E2.80908@joreybump.com>
References: <20050914195924.64436.qmail@web86508.mail.ukl.yahoo.com>	<4328866A.8030405@joreybump.com>
	<432889E2.80908@joreybump.com>
Message-ID: <43288D60.6000701@sympatico.ca>

Jorey Bump wrote:
> Jorey Bump wrote:
> 
>> jamestmcneill-python@yahoo.co.uk wrote:
>>
>>> 3) From this I can see that the PythonImport directive doesn't seem 
>>> to be
>>> working at all (or at least, in any way I expected it to). It does not
>>> produce a compiled version of the module specified, 
>>
>>
>> This is not unusual. The user that apache runs as must have write 
>> permissions in the directory in order to produce a .pyc file. I'm not 
>> sure what happens under Windows regarding this, but if I want a 
>> compiled version of the module under Linux, I compile it ahead of time 
>> or change the permissions (rarely).
> 
> 
> Having said that, I just tried using the PythonImport statement, and I 
> also see no evidence that it works. I may be using or testing it 
> incorrectly, however.

Same result here. I'm looking at the source code now and will report back.

Regards,
Jim
From fabianosidler at swissonline.ch  Wed Sep 14 17:07:47 2005
From: fabianosidler at swissonline.ch (Fabiano Sidler)
Date: Wed Sep 14 17:07:56 2005
Subject: [mod_python] Global, but threadsafe request object?
Message-ID: <200509142307.51826.fabianosidler@swissonline.ch>

Hi folks!

In a web application I planning I need to access the request object from a big
number of functions and classes. Therefore I could pass it each time to each
of the objects working on it, which has very ugly disadvantages like inherent
portability loss and weird parameter lists. So my question to you: Is there a
way to make it global-like, if necessary over a singleton-like wrapper class
returning it? I know, this looks more likely a python problem than a modpython
one, but perhaps someone here knows a simple solution with using mod-
python specific code?

Greetings,
Fips
From conrad at hep.caltech.edu  Wed Sep 14 18:00:25 2005
From: conrad at hep.caltech.edu (Conrad Steenberg)
Date: Wed Sep 14 18:00:36 2005
Subject: [mod_python] Apache 2.1?
Message-ID: <1126735225.3908.28.camel@localhost.localdomain>

Hi

Has anybody had any luck compiling and running mod_python inside Apache
2.1?

2.1 has large file support which I'm rather keen on having.

Thanks!

Conrad
-- 
Conrad Steenberg <conrad@hep.caltech.edu>
California Institute of Technology
-------------- next part --------------
A non-text attachment was scrubbed...
Name: smime.p7s
Type: application/x-pkcs7-signature
Size: 2531 bytes
Desc: not available
Url : http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20050914/3f7a257c/smime.bin
From tony at dorintony.com  Wed Sep 14 18:35:09 2005
From: tony at dorintony.com (Tony Burger)
Date: Wed Sep 14 18:35:18 2005
Subject: [mod_python] PythonImport: Can someone please draw a diagram
	for	this idiot?
In-Reply-To: <20050914195924.64436.qmail@web86508.mail.ukl.yahoo.com>
References: <20050914195924.64436.qmail@web86508.mail.ukl.yahoo.com>
Message-ID: <4328A59D.9020808@dorintony.com>

You could initialize a pool of connections via this tool:

http://sqlrelay.sourceforge.net/

Its fairly easy to compile and setup and has decent documentation for 
Python.  Not sure if this is what your trying to get at.

jamestmcneill-python@yahoo.co.uk wrote:
> Lee,
> 
> Sorry for being crabbit, you didn't deserve it. Anyway I'm still on track
> of this PythonImport thing, and a couple of simple test rule out come
> possibilities.
> 
> 1) I've run the main handler to show req.interpreter, and it is
> 'myinterpreter' as specified.
> 2) I've gone into IDLE and done what I'm trying to do in the main handler,
> namely:
> 
> import mpglobals
> cur = mpglobals.con.cursor()
> 
> That works correctly, and produces a compiled mpglobls.pyc in the same
> folder. Also I stuck some logger code into mpglobals, and that wrote to a
> text file as expected.
> 3) From this I can see that the PythonImport directive doesn't seem to be
> working at all (or at least, in any way I expected it to). It does not
> produce a compiled version of the module specified, nor does it run the
> logger code. However it works, it does not run as if I had an "import
> mpglobals" command in the main handler. In fact I've tried that, and it
> runs properly, showing that mpglobals is on sys.path within the main
> request handler, and that the code within it works properly.
> 
> Really, as far as I can see (not far admittedly) either we're into some
> pretty weird territory with PythonImport and I'm just not getting all this
> C API and subinterpreter doodah, or it simply doesn't work under my
> configuration (Windows XP and Python 2.3).
> 
> Can anyone suggest a simple test to show whether or not PythonImport is
> working at all on my system? Or have I already shown that it hasn't, with
> what I've done already?
> 
> Cheers
> Jim
> 
> --- Lee Brown wrote:
> 
> 
>>Greetings!
>>
>>It was not my intention to be condescending; rather, I was attempting to
>>be
>>in good humor and I apologize for the offense.  In fact, I had the exact
>>same problem with imports and namespaces only a few months ago.
>>
>>If your object is still not accessible in the correct namespace, then
>>the
>>next thing to check is to see if your code is executing under the
>>interpreter name that you think it should.    The example code that
>>Jorey
>>Bump published will help you determine this.
>>
>>I agree with you that doing an import once at server startup rather than
>>at
>>each request seems like a cleaner way to go.  The only drawback is that
>>if
>>you change the code in the imported module you'll have to re-start the
>>server but this usually isn't a problem for many applications.
>>
>>Best Regards,
>>Lee E. Brown
> 
> 
> 
> ++++++++++++++++++++++++++++++++++++++++++++++++++
> +   If you've got a good excuse - don't use it   +
> ++++++++++++++++++++++++++++++++++++++++++++++++++)
> 
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
> 

From jg.lists at sympatico.ca  Wed Sep 14 19:27:47 2005
From: jg.lists at sympatico.ca (Jim Gallacher)
Date: Wed Sep 14 19:25:11 2005
Subject: [mod_python] PythonImport: Can someone please draw a diagram
	for	this idiot?
In-Reply-To: <43288D60.6000701@sympatico.ca>
References: <20050914195924.64436.qmail@web86508.mail.ukl.yahoo.com>	<4328866A.8030405@joreybump.com>	<432889E2.80908@joreybump.com>
	<43288D60.6000701@sympatico.ca>
Message-ID: <4328B1F3.2010905@sympatico.ca>

Jim Gallacher wrote:
> Jorey Bump wrote:
> 
>> Jorey Bump wrote:
>>
>>> jamestmcneill-python@yahoo.co.uk wrote:
>>>
>>>> 3) From this I can see that the PythonImport directive doesn't seem 
>>>> to be
>>>> working at all (or at least, in any way I expected it to). It does not
>>>> produce a compiled version of the module specified, 
>>>
>>>
>>>
>>> This is not unusual. The user that apache runs as must have write 
>>> permissions in the directory in order to produce a .pyc file. I'm not 
>>> sure what happens under Windows regarding this, but if I want a 
>>> compiled version of the module under Linux, I compile it ahead of 
>>> time or change the permissions (rarely).
>>
>>
>>
>> Having said that, I just tried using the PythonImport statement, and I 
>> also see no evidence that it works. I may be using or testing it 
>> incorrectly, however.
> 
> 
> Same result here. I'm looking at the source code now and will report back.
> 

I think there may be a bug. I know in the past Grisha has discouraged 
the use of PythonImport and has stated that he would be happy if it went 
away. Can anyone confirm if they have used it successfully?

Jim
From list at joreybump.com  Wed Sep 14 19:44:50 2005
From: list at joreybump.com (Jorey Bump)
Date: Wed Sep 14 19:44:58 2005
Subject: [mod_python] Apache 2.1?
In-Reply-To: <1126735225.3908.28.camel@localhost.localdomain>
References: <1126735225.3908.28.camel@localhost.localdomain>
Message-ID: <4328B5F2.7000501@joreybump.com>

Conrad Steenberg wrote:

> Has anybody had any luck compiling and running mod_python inside Apache
> 2.1?

Why, yes, indeed. I have. :)

Slackware Linux 10.1
Python 2.4.1
Apache 2.1.6 Alpha

You must patch the mod_python source before running ./config.

Remove this from src/filterobject.c:

if (!APR_STATUS_IS_EAGAIN(self->rc) && !APR_STATUS_IS_SUCCESS(self->rc)) {
   PyErr_SetObject(PyExc_IOError,
   PyString_FromString("Input filter read error"));
   return NULL;
}

And remove this from src/connobject.c:

if (! APR_STATUS_IS_SUCCESS(rc)) {
   PyErr_SetObject(PyExc_IOError,
   PyString_FromString("Connection read error"));
   return NULL;
}

Then the usual (modify to point to your version of apxs):

  ./configure --with-apxs=/usr/local/apache2/bin/apxs
  make
  su -
  make install

I haven't tried out the latest Apache 2.1.7, but hopefully this will 
work the same.

From jg.lists at sympatico.ca  Wed Sep 14 20:04:15 2005
From: jg.lists at sympatico.ca (Jim Gallacher)
Date: Wed Sep 14 20:01:27 2005
Subject: [mod_python] PythonImport: Can someone please draw a diagram
	for	this idiot?
In-Reply-To: <4328B1F3.2010905@sympatico.ca>
References: <20050914195924.64436.qmail@web86508.mail.ukl.yahoo.com>	<4328866A.8030405@joreybump.com>	<432889E2.80908@joreybump.com>	<43288D60.6000701@sympatico.ca>
	<4328B1F3.2010905@sympatico.ca>
Message-ID: <4328BA7F.7040008@sympatico.ca>

Jim Gallacher wrote:
> Jim Gallacher wrote:
> 
>> Jorey Bump wrote:
>>
>>> Jorey Bump wrote:
>>>
>>>> jamestmcneill-python@yahoo.co.uk wrote:
>>>>
>>>>> 3) From this I can see that the PythonImport directive doesn't seem 
>>>>> to be
>>>>> working at all (or at least, in any way I expected it to). It does not
>>>>> produce a compiled version of the module specified, 
>>>>
>>>>
>>>>
>>>>
>>>> This is not unusual. The user that apache runs as must have write 
>>>> permissions in the directory in order to produce a .pyc file. I'm 
>>>> not sure what happens under Windows regarding this, but if I want a 
>>>> compiled version of the module under Linux, I compile it ahead of 
>>>> time or change the permissions (rarely).
>>>
>>>
>>>
>>>
>>> Having said that, I just tried using the PythonImport statement, and 
>>> I also see no evidence that it works. I may be using or testing it 
>>> incorrectly, however.
>>
>>
>>
>> Same result here. I'm looking at the source code now and will report 
>> back.
>>
> 
> I think there may be a bug. I know in the past Grisha has discouraged 
> the use of PythonImport and has stated that he would be happy if it went 
> away. Can anyone confirm if they have used it successfully?

In answer to my own in question, PythonImport does work and there is no 
bug. Re-reading the docs reveals this small detail which I and others 
may have overlooked - the context for the directive. PythonImport only 
works in the server config context. Quoting from the apache docs 
(http://httpd.apache.org/docs/2.0/mod/directive-dict.html#Context)

"""
server config
     This means that the directive may be used in the server 
configuration files (e.g., httpd.conf), but not within any <VirtualHost> 
or <Directory> containers. It is not allowed in .htaccess files at all.
"""

I'll update the docs to make this a little more explicit, since it's 
easy to overlook. I know I did. :)

Hope that helps.
Jim

From list at joreybump.com  Wed Sep 14 21:05:21 2005
From: list at joreybump.com (Jorey Bump)
Date: Wed Sep 14 21:05:30 2005
Subject: [mod_python] PythonImport: Can someone please draw a diagram
	for	this idiot?
In-Reply-To: <4328BA7F.7040008@sympatico.ca>
References: <20050914195924.64436.qmail@web86508.mail.ukl.yahoo.com>	<4328866A.8030405@joreybump.com>	<432889E2.80908@joreybump.com>	<43288D60.6000701@sympatico.ca>
	<4328B1F3.2010905@sympatico.ca> <4328BA7F.7040008@sympatico.ca>
Message-ID: <4328C8D1.4020300@joreybump.com>

Jim Gallacher wrote:

> In answer to my own in question, PythonImport does work and there is no 
> bug. Re-reading the docs reveals this small detail which I and others 
> may have overlooked - the context for the directive. PythonImport only 
> works in the server config context. Quoting from the apache docs 
> (http://httpd.apache.org/docs/2.0/mod/directive-dict.html#Context)
> 
> """
> server config
>     This means that the directive may be used in the server 
> configuration files (e.g., httpd.conf), but not within any <VirtualHost> 
> or <Directory> containers. It is not allowed in .htaccess files at all.
> """
> 
> I'll update the docs to make this a little more explicit, since it's 
> easy to overlook. I know I did. :)
> 
> Hope that helps.

Yes, it does. For a simple demo, put a module in the default module 
search path, such as a directory shown in sys.path when running python 
from the command line. PythonPath directives in httpd.conf will not have 
taken effect when PythonImport runs (I used 
/usr/lib/python2.4/site-packages/ for my test).

# mpglobal.py

import time

f = open('tmp/atest', 'w')
f.write(str(time.time()))
f.close()

foo = 'testing'


Then in httpd.conf (using your own interpreter name):

PythonImport mpglobal www.example.com

On Linux, restarting apache creates and/or updates /tmp/atest, verifying 
that it works.

But, like the OP, I can't figure out how to access foo (or mpglobal.foo) 
in my published module.

Also, here is a better module to run under Publisher to check various 
settings, including the name of the interpreter (and I remembered to 
include sys.path this time!):

"""
info.py

Display various settings/variables under mod_python.publisher.

Access at:

  http://host/somedir/info.py/index

or:

  http://host/somedir/info/

To check form variables, set form action to:

  http://host/somedir/info.py/showformdata

"""

from mod_python import apache
import os
import sys

topdir = []
for i in dir():
     topdir.append(i)

def showformdata(req):
     formdata = {}
     if req.form.keys():
         for key in req.form.keys():
             formdata[key] = req.form[key]
         return formdata
     else:
         return "no form data"

def index(req):
     d = []
     d.append("Interpreter Name (req.interpreter):" )
     d.append(req.interpreter)
     d.append("\nsys.path:")
     d.append('\n'.join(sys.path))
     d.append("\nRequest (req.the_request):")
     d.append(req.the_request)
     d.append("\nProtocol (req.protocol):")
     d.append(req.protocol)
     d.append("\nMethod (req.method):")
     d.append(req.method)
     d.append("\nreq.subprocess_env:")
     d.extend(["%s: %s" % (i, req.subprocess_env[i]) for i in 
req.subprocess_env.keys()])
     d.append("\nreq.filename:")
     d.append(req.filename)
     d.append("\nreq.path_info:")
     d.append(req.path_info)
     d.append("\nenvironment PATH:")
     d.append(os.environ['PATH'])
     d.append("\ndir():")
     d.extend(topdir)
     return "\n".join(d)

From jstubbs at work-at.co.jp  Wed Sep 14 21:22:19 2005
From: jstubbs at work-at.co.jp (Jason Stubbs)
Date: Wed Sep 14 21:24:33 2005
Subject: [mod_python] ApplicationPath kills performance?
In-Reply-To: <432565A9.4030103@work-at.co.jp>
References: <432565A9.4030103@work-at.co.jp>
Message-ID: <4328CCCB.8020408@work-at.co.jp>

Just a little bump...

Jason Stubbs wrote:
> DirectoryIndex index.psp
> AddHandler mod_python .psp
> PythonHandler mod_python.psp
> PythonPath "['/var/www/localhost/pythonlib']+sys.path"
> PythonOption ApplicationPath /
> 
> $ ./ab -c 5 -n 500 http://192.168.1.101/index.psp
> ...
> Requests per second:    3.85 [#/sec] (mean)
> 
> However, after removing the ApplicationPath:
> 
> Requests per second:    552.10 [#/sec] (mean)

Note that sessions are not in use in the script.

> Obligatory version information is as follows:
> 
> httpd       2.0.54-r9
> mod_python  3.1.3-r1
> python      2.4.1-r1
> (-r components are Gentoo patch-levels)
> 
> Any help would be appreciated.

Still the same sentiment.

--
Jason Stubbs
From jg.lists at sympatico.ca  Wed Sep 14 21:49:38 2005
From: jg.lists at sympatico.ca (Jim Gallacher)
Date: Wed Sep 14 21:46:27 2005
Subject: [mod_python] PythonImport: Can someone please draw a diagram
	for	this idiot?
In-Reply-To: <4328C8D1.4020300@joreybump.com>
References: <20050914195924.64436.qmail@web86508.mail.ukl.yahoo.com>	<4328866A.8030405@joreybump.com>	<432889E2.80908@joreybump.com>	<43288D60.6000701@sympatico.ca>	<4328B1F3.2010905@sympatico.ca>
	<4328BA7F.7040008@sympatico.ca> <4328C8D1.4020300@joreybump.com>
Message-ID: <4328D332.7060809@sympatico.ca>

Jorey Bump wrote:
> Jim Gallacher wrote:
> 
>> In answer to my own in question, PythonImport does work and there is 
>> no bug. Re-reading the docs reveals this small detail which I and 
>> others may have overlooked - the context for the directive. 
>> PythonImport only works in the server config context. Quoting from the 
>> apache docs 
>> (http://httpd.apache.org/docs/2.0/mod/directive-dict.html#Context)
>>
>> """
>> server config
>>     This means that the directive may be used in the server 
>> configuration files (e.g., httpd.conf), but not within any 
>> <VirtualHost> or <Directory> containers. It is not allowed in 
>> .htaccess files at all.
>> """
>>
>> I'll update the docs to make this a little more explicit, since it's 
>> easy to overlook. I know I did. :)
>>
>> Hope that helps.
> 
> 
> Yes, it does. For a simple demo, put a module in the default module 
> search path, such as a directory shown in sys.path when running python 
> from the command line. PythonPath directives in httpd.conf will not have 
> taken effect when PythonImport runs (I used 
> /usr/lib/python2.4/site-packages/ for my test).
> 
> # mpglobal.py
> 
> import time
> 
> f = open('tmp/atest', 'w')
> f.write(str(time.time()))
> f.close()
> 
> foo = 'testing'
> 
> 
> Then in httpd.conf (using your own interpreter name):
> 
> PythonImport mpglobal www.example.com
> 
> On Linux, restarting apache creates and/or updates /tmp/atest, verifying 
> that it works.
> 
> But, like the OP, I can't figure out how to access foo (or mpglobal.foo) 
> in my published module.

I don't know if this is the correct way, but I tried it and it works:

import sys
mpglobal = sys.modules['mpglobal']

def index(req):
     req.write('Hello world\n')
     req.write(mpglobal.foo)

Jim


> Also, here is a better module to run under Publisher to check various 
> settings, including the name of the interpreter (and I remembered to 
> include sys.path this time!):
> 
> """
> info.py
> 
> Display various settings/variables under mod_python.publisher.
> 
> Access at:
> 
>  http://host/somedir/info.py/index
> 
> or:
> 
>  http://host/somedir/info/
> 
> To check form variables, set form action to:
> 
>  http://host/somedir/info.py/showformdata
> 
> """
> 
> from mod_python import apache
> import os
> import sys
> 
> topdir = []
> for i in dir():
>     topdir.append(i)
> 
> def showformdata(req):
>     formdata = {}
>     if req.form.keys():
>         for key in req.form.keys():
>             formdata[key] = req.form[key]
>         return formdata
>     else:
>         return "no form data"
> 
> def index(req):
>     d = []
>     d.append("Interpreter Name (req.interpreter):" )
>     d.append(req.interpreter)
>     d.append("\nsys.path:")
>     d.append('\n'.join(sys.path))
>     d.append("\nRequest (req.the_request):")
>     d.append(req.the_request)
>     d.append("\nProtocol (req.protocol):")
>     d.append(req.protocol)
>     d.append("\nMethod (req.method):")
>     d.append(req.method)
>     d.append("\nreq.subprocess_env:")
>     d.extend(["%s: %s" % (i, req.subprocess_env[i]) for i in 
> req.subprocess_env.keys()])
>     d.append("\nreq.filename:")
>     d.append(req.filename)
>     d.append("\nreq.path_info:")
>     d.append(req.path_info)
>     d.append("\nenvironment PATH:")
>     d.append(os.environ['PATH'])
>     d.append("\ndir():")
>     d.extend(topdir)
>     return "\n".join(d)
> 
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
> 

From grahamd at dscpl.com.au  Wed Sep 14 22:02:50 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Wed Sep 14 22:03:04 2005
Subject: [mod_python] Writing modules in Python
In-Reply-To: <432227EB.5080205@eternitytechnologies.com>
References: <12182.60.229.136.189.1126187451.squirrel@devraj.org>
	<6bce189e8ab5e1db690558dadff7ca0d@dscpl.com.au>
	<432227EB.5080205@eternitytechnologies.com>
Message-ID: <d0f826652fe845c9d9078387e9c6a2f9@dscpl.com.au>

This sort of conversion or data manipulation should be achievable
within the context of mod_python. You aren't though strictly going
to be producing an "Apache module", but simply a mod_python content
handler.

If you have other questions later, by all means send them to the
mod_python mailing list.

Graham

On 10/09/2005, at 10:25 AM, Devraj Mukherjee wrote:

> Hi Graham,
>
> Thank you for your response.
>
> One of my projects requires me to extract some information from an 
> OpenOffice document and place it on a page. I am looking at going a 
> step forward and I wish to have an Apache module that can handle the 
> OpenOffice document so I can produce a more generic piece of software 
> to handle these OO documents.
>
> Looking forward to your suggestions and once again thanks for your 
> time.
>
> Devraj
>
> Graham Dumpleton wrote:
>> On 08/09/2005, at 11:50 PM, Devraj Mukherjee wrote:
>>> Hi everyone,
>>>
>>> I am a newbie to mod_python (I have programmed in Python before) and
>>> having trouble understanding if using mod_python or one of the 
>>> related
>>> projectes (such as mod_snake which seems to be dea) I can actually 
>>> develop
>>> Apache modules in Python.
>>>
>>> I have been tossing the option of writing modules for Apache for a 
>>> while
>>> and have been wanting to avoid C programming ;-) if I can write them 
>>> in
>>> Python it will be my prefered way.
>> It really depends on what you are trying to do. You are not going to 
>> be
>> able to do what a full blown Apache module can do as mod_python 
>> doesn't
>> expose everything in the Apache API. You can still do various things
>> though.
>> Thus, it all depends on what you want to do. You might like to 
>> describe
>> what you want to do and we may be able to give a better answer as to
>> whether it will be possible.
>> Graham

From grahamd at dscpl.com.au  Wed Sep 14 22:17:17 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Wed Sep 14 22:17:29 2005
Subject: [mod_python] sys.argv does not work when accessed with mod_python
In-Reply-To: <4322D765.3090808@lhi.is>
References: <4322D765.3090808@lhi.is>
Message-ID: <53cfa274179f6ab9185aefb318f9f45c@dscpl.com.au>


On 10/09/2005, at 10:53 PM, Sigurdur Einarsson wrote:

> Hello list,
>
> It seems like I'm unable to use sys.argv[0] with mod_python, it
> functions in the shell.  Is there something in mod_python that will do
> the same thing or is there a way to allow mod_python to access the
> function, assuming this is a security issue?

What exactly are you expecting to be obtaining from sys.argv[0]?

In a Python script run from the command line sys.argv[0] will yield the
pathname of the actual script which was run. Under mod_python, even if
sys.argv were able to somehow be set properly, the process corresponds
to an invocation of Apache "httpd" application.

Not knowing exactly what you are after, I'll give a few suggestions as
to what is available.

1. In any Python module file, you can access the global "__file__". This
will give the pathname to the file corresponding to that module. The
last component of the pathname may be useful in identifying the
resource. Ie., 'os.path.split(__file__)[1]'.

2. For a particular request, you can access "req.filename". This is the
physical resource as identified by Apache as being the target of a
request. Again, the last component of the pathname maybe useful.

3. Especially if you are using mod_python.publisher, req.path_info may
be useful. The value of this is what is used to identify the actual
function which is being executed.

Is what you are after the resource name as identified by a URI, or the
name of the particular function which was mapped to and called by
mod_python or some extension for mod_python, such as will be the case
with mod_python.publisher?

Graham

From grahamd at dscpl.com.au  Wed Sep 14 22:23:32 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Wed Sep 14 22:23:42 2005
Subject: [mod_python] Different Times in Apache Log, and within PSP files
In-Reply-To: <4e4a11f805091201454b409993@mail.gmail.com>
References: <4e4a11f805091201454b409993@mail.gmail.com>
Message-ID: <980b484676a09b6c7a6269a442f12fba@dscpl.com.au>


On 12/09/2005, at 6:45 PM, Simon Wittber wrote:

> Hello Chaps,
>
> I am encountering a problem, where a mod_python PSP page is reporting
> a different time from the datetime.datetime.today() call than the
> system time.
>
> Also, in the Apache2 logs below, it appears that something weird is
> happening with the timestamp field. Any ideas on what might be going
> on? We are using the MPM-worker model.
>
> Sw.
>
> xxx.xxx.xxx.xxx - 600030 [12/Sep/2005:07:55:18 +0800] "GET /some/file/
> HTTP/1.1" 200 1792 "http://some/referrer/file.psp" "Mozilla/5.0
> (Windows; U; Windows NT 5.1; en-US; rv:1.7.7) Gecko/20050410"
> xxx.xxx.xxx.xxx - 600030 [11/Sep/2005:18:55:18 -0500] "GET
> /some/other/file HTTP/1.1" 200 41610 "http://some/referrer/file.psp"
> "Mozilla/5.0 (Windows;U; Windows NT 5.1; en-US; rv:1.7.7)
> Gecko/20050410"

Note the presence of "+0800" and "-0500". Each time is probably the
same but is being output as being in relation to different timezones.

Something, it may even not be a part of mod_python but some distinct
Apache module is possibly manipulating the timezone settings and thus
causing dates to be shown differently.

One way of manipulating the timezone setting is by setting the "TZ"
environment variable. This would not be a good thing to do if the worker
MPM was being used. This is because changing the environment variable
in a request handler running in one thread, would affect the environment
variable as seen by other threads, including code run by Apache to
create the above lines in the log file.

Graham

From list at joreybump.com  Wed Sep 14 22:24:17 2005
From: list at joreybump.com (Jorey Bump)
Date: Wed Sep 14 22:24:24 2005
Subject: [mod_python] PythonImport: Can someone please draw a diagram
	for	this idiot?
In-Reply-To: <4328D332.7060809@sympatico.ca>
References: <20050914195924.64436.qmail@web86508.mail.ukl.yahoo.com>	<4328866A.8030405@joreybump.com>	<432889E2.80908@joreybump.com>	<43288D60.6000701@sympatico.ca>	<4328B1F3.2010905@sympatico.ca>
	<4328BA7F.7040008@sympatico.ca> <4328C8D1.4020300@joreybump.com>
	<4328D332.7060809@sympatico.ca>
Message-ID: <4328DB51.30408@joreybump.com>

Jim Gallacher wrote:
> Jorey Bump wrote:
>>
>> Yes, it does. For a simple demo, put a module in the default module 
>> search path, such as a directory shown in sys.path when running python 
>> from the command line. PythonPath directives in httpd.conf will not 
>> have taken effect when PythonImport runs (I used 
>> /usr/lib/python2.4/site-packages/ for my test).
>>
>> # mpglobal.py
>>
>> import time
>>
>> f = open('tmp/atest', 'w')
>> f.write(str(time.time()))
>> f.close()
>>
>> foo = 'testing'
>>
>>
>> Then in httpd.conf (using your own interpreter name):
>>
>> PythonImport mpglobal www.example.com
>>
>> On Linux, restarting apache creates and/or updates /tmp/atest, 
>> verifying that it works.
>>
>> But, like the OP, I can't figure out how to access foo (or 
>> mpglobal.foo) in my published module.
> 
> 
> I don't know if this is the correct way, but I tried it and it works:
> 
> import sys
> mpglobal = sys.modules['mpglobal']
> 
> def index(req):
>     req.write('Hello world\n')
>     req.write(mpglobal.foo)

That's very interesting, because due to module caching, the results are 
the same if you simply do this:

import mpglobal

In the published module, when mpglobal is imported, /tmp/atest isn't 
updated and mpglobal.foo is available, indicating that one could 
initialize a db connection or variables using PythonImport, yet ensure 
the module will still work if sys.modules['mpglobal'] isn't available.

As for how robust this is for maintaining a persistent db connection, 
that's another question.


From grahamd at dscpl.com.au  Wed Sep 14 22:36:18 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Wed Sep 14 22:36:24 2005
Subject: [mod_python] PythonInterpPerDirec* Question
In-Reply-To: <4325DF6B.1070801@hostway.com>
References: <4320B131.40603@hostway.com>
	<2d293e5734c1b1b0920911c2cbfc4388@dscpl.com.au>
	<4325DF6B.1070801@hostway.com>
Message-ID: <bab6f9a8139f883a565e5ace9f1bbaab@dscpl.com.au>

The changes to fix the PythonInterpPerDirective bug were in a few
different places in the code and I can't recollect exactly what
they were. It would be easier if you try 3.2 beta versions. These
are available from:

   http://www.modpython.org/dist/

I haven't caught up on all my email yet, but beta testing is coming
to a close and the latest beta will possibly be close if not what
will be released.

Graham

On 13/09/2005, at 6:04 AM, Huzaifa Tapal wrote:

> Thanks for the info Graham.  I had definitely made sure that I was 
> getting into the Directory directive, however, the 
> PythonInterpPerDirective was not bein honored.
> As for the bugs with the PythonInterpPerDirective directive, I see in 
> the comments that the problem outlined have been patched.  Is there a 
> way to get that patch to be applied to my current version of 
> mod_python?
>
> Hozi
>
> Graham Dumpleton wrote:
>
>>
>> On 09/09/2005, at 7:46 AM, Huzaifa Tapal wrote:
>>
>>>  Hello all,
>>>
>>>  I have a question about the usage of the PythonInterpPerDirectory 
>>> and PythonInterpPerDirective directives.  I am trying to setup a 
>>> development box with mod_python support, and want to set it up in a 
>>> way so that different users, within their cgi-bin can have multiple 
>>> mod_python handler installations and each handler having its own set 
>>> of sub-interpreters.  After doing some research I found that the 
>>> usage of the above two directives is the solutions (or maybe 
>>> something else that I am not aware of).
>>>
>>>  I am trying to set the above directive in my httpd.conf file as 
>>> follows:
>>>
>>>  <Directory /home/*/www/cgi-bin/>
>>>         PythonInterpPerDirective On       # or 
>>> PythonInterpPerDirectory On
>>>  </Directory>
>>
>>
>> You can check whether this is even coming into play by including:
>>
>>   deny from all
>>
>> If the path pattern is right, you should then get Forbidden.
>>
>>>  now I test this by creating two directories within a user's cgi-bin 
>>> say /home/user/www/cgi-bin/handler1 and 
>>> /home/user/www/cgi-bin/handler2 and add a handler module and a 
>>> .htaccess file with the following contents:
>>>
>>> SetHandler mod_python
>>>  PythonHandler mptest
>>>  PythonDebug On
>>>
>>>  Within the handlers, I am creating a cache dictionary at global 
>>> level and testing the cache for that dictionary by printing its 
>>> values and also printing the id of the cache dictionary.  When 
>>> executing both handlers, it appears that both handlers in both 
>>> directories are sharing the subinterpreters when they should not be.
>>
>>
>> I wouldn't necessarily rely on using Python id() as basis to determine
>> if they are same/different interpreter.
>>
>> For starters, simply display value of "req.interpreter". This will be
>> the name given to each interpreter. It should equate somehow to the 
>> path
>> to the physical directory.
>>
>> Note that there are some bugs in the PythonInterpPerDirectory 
>> directive.
>> See:
>>
>>   http://issues.apache.org/jira/browse/MODPYTHON-5
>>
>> This is address in mod_python 3.2 beta versions.
>>
>> Graham
>>
>>

From jg.lists at sympatico.ca  Wed Sep 14 22:45:41 2005
From: jg.lists at sympatico.ca (Jim Gallacher)
Date: Wed Sep 14 22:42:15 2005
Subject: [mod_python] ApplicationPath kills performance?
In-Reply-To: <4328CCCB.8020408@work-at.co.jp>
References: <432565A9.4030103@work-at.co.jp> <4328CCCB.8020408@work-at.co.jp>
Message-ID: <4328E055.80308@sympatico.ca>

Jason Stubbs wrote:
> Just a little bump...

Consider it bumped. I've verified the behaviour on the dev branch and 
will investigate further. Interestingly it runs at full speed with
  ab -c 1 -n 500.

Jim

> Jason Stubbs wrote:
> 
>> DirectoryIndex index.psp
>> AddHandler mod_python .psp
>> PythonHandler mod_python.psp
>> PythonPath "['/var/www/localhost/pythonlib']+sys.path"
>> PythonOption ApplicationPath /
>>
>> $ ./ab -c 5 -n 500 http://192.168.1.101/index.psp
>> ...
>> Requests per second:    3.85 [#/sec] (mean)
>>
>> However, after removing the ApplicationPath:
>>
>> Requests per second:    552.10 [#/sec] (mean)
> 
> 
> Note that sessions are not in use in the script.
> 
>> Obligatory version information is as follows:
>>
>> httpd       2.0.54-r9
>> mod_python  3.1.3-r1
>> python      2.4.1-r1
>> (-r components are Gentoo patch-levels)
>>
>> Any help would be appreciated.
> 
> 
> Still the same sentiment.
> 
> -- 
> Jason Stubbs
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
> 

From jg.lists at sympatico.ca  Wed Sep 14 23:05:31 2005
From: jg.lists at sympatico.ca (Jim Gallacher)
Date: Wed Sep 14 23:02:37 2005
Subject: [mod_python] ApplicationPath kills performance?
In-Reply-To: <4328E055.80308@sympatico.ca>
References: <432565A9.4030103@work-at.co.jp> <4328CCCB.8020408@work-at.co.jp>
	<4328E055.80308@sympatico.ca>
Message-ID: <4328E4FB.1060002@sympatico.ca>

Jim Gallacher wrote:
> Jason Stubbs wrote:
> 
>> Just a little bump...
> 
> 
> Consider it bumped. I've verified the behaviour on the dev branch and 
> will investigate further. 

Actually, I take that back. I was looking at the "Time per request: 
4.220 [ms], not "Requests per second: 1184.74 [#/sec] in my ab output so 
the behaviour is *not* verified in the dev branch. I got the same result 
with and without ApplicationPath. I'll still take another look with 
fresh eyes tommorow though.

Jim

> 
>> Jason Stubbs wrote:
>>
>>> DirectoryIndex index.psp
>>> AddHandler mod_python .psp
>>> PythonHandler mod_python.psp
>>> PythonPath "['/var/www/localhost/pythonlib']+sys.path"
>>> PythonOption ApplicationPath /
>>>
>>> $ ./ab -c 5 -n 500 http://192.168.1.101/index.psp
>>> ...
>>> Requests per second:    3.85 [#/sec] (mean)
>>>
>>> However, after removing the ApplicationPath:
>>>
>>> Requests per second:    552.10 [#/sec] (mean)
>>
>>
>>
>> Note that sessions are not in use in the script.
>>
>>> Obligatory version information is as follows:
>>>
>>> httpd       2.0.54-r9
>>> mod_python  3.1.3-r1
>>> python      2.4.1-r1
>>> (-r components are Gentoo patch-levels)
>>>
>>> Any help would be appreciated.
>>
>>
>>
>> Still the same sentiment.
>>
>> -- 
>> Jason Stubbs
>> _______________________________________________
>> Mod_python mailing list
>> Mod_python@modpython.org
>> http://mailman.modpython.org/mailman/listinfo/mod_python
>>
> 
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
> 

From grahamd at dscpl.com.au  Wed Sep 14 23:11:59 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Wed Sep 14 23:12:23 2005
Subject: [mod_python] Re: Your article: mod_python module importing is broken
In-Reply-To: <43269EEA.2090104@genesilico.pl>
References: <43269EEA.2090104@genesilico.pl>
Message-ID: <8453f826bfa1874ac791a39a6a0b8501@dscpl.com.au>

What you are seeing is normal, especially if you are using the "prefork"
mode of Apache. What you will probably find is that each line of output
was from a different Apache child subprocess. The order in which
sys.path is constructed will be dependent upon the order in which
separately configured request handlers are visited by incoming requests.

Thus sys.path order is to a degree random as far as directories
corresponding to handlers. This is actually a bad thing and source
of various problems. Changes speculated on for mod_python 3.3/4.0
may improve this situation hopefully.

It is recommended you ask questions about mod_python on the mod_python
mailing list and not me direct. So please get on the mailing list if
you can and post any followups or further questions there.

Graham


On 13/09/2005, at 7:42 PM, Michal J. Gajda wrote:

> Dear Graham,
>
> I've just stumbled upon your article in which you explain many ways in 
> which
> mod_python module importing is broken:
> http://www.dscpl.com.au/articles/modpython-003.html
>
> I have a problem myself, and I'm interested if it is related to the 
> problems you
> explain in your article, or rather specific to my own Apache2 
> configuration.
>
> When I try to print sys.path, I get a wide variety of results that 
> suggest
> contamination of sys.path between Python scripts placed in different
> $USERDIR/public_html/ directories, like:
> 1st run:
> ['.', '/home/*/public_html/', '/usr/lib/python23.zip', 
> '/usr/lib/python2.3',
> '/usr/lib/python2.3/plat-linux2', '/usr/lib/python2.3/lib-tk',
> '/usr/lib/python2.3/lib-dynload', 
> '/usr/local/lib/python2.3/site-packages',
> '/usr/lib/python2.3/site-packages', 
> '/usr/lib/python2.3/site-packages/Numeric',
> '/usr/lib/python2.3/site-packages/PIL',
> '/usr/lib/python2.3/site-packages/gtk-2.0', '/usr/lib/site-python']
> 2nd run (just a minute after):
> ['/home/marcin/public_html/gs/', '/usr/lib/python23.zip', 
> '/usr/lib/python2.3',
> '/usr/lib/python2.3/plat-linux2', '/usr/lib/python2.3/lib-tk',
> '/usr/lib/python2.3/lib-dynload', 
> '/usr/local/lib/python2.3/site-packages',
> '/usr/lib/python2.3/site-packages', 
> '/usr/lib/python2.3/site-packages/Numeric',
> '/usr/lib/python2.3/site-packages/PIL',
> '/usr/lib/python2.3/site-packages/gtk-2.0', '/usr/lib/site-python']
> 3rd run (just another minute after):
> ['/usr/lib/python23.zip', '/usr/lib/python2.3',
> '/usr/lib/python2.3/plat-linux2', '/usr/lib/python2.3/lib-tk',
> '/usr/lib/python2.3/lib-dynload', 
> '/usr/local/lib/python2.3/site-packages',
> '/usr/lib/python2.3/site-packages', 
> '/usr/lib/python2.3/site-packages/Numeric',
> '/usr/lib/python2.3/site-packages/PIL',
> '/usr/lib/python2.3/site-packages/gtk-2.0', '/usr/lib/site-python']
>
> Do you think these problems are related to what you write about, or is 
> it a
> completely different problem?
> -- 
> 	Sincerely
> 		Michal J. Gajda
> <misiek.vcf>

From grahamd at dscpl.com.au  Wed Sep 14 23:22:11 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Wed Sep 14 23:22:31 2005
Subject: [mod_python] Persistent web-service
In-Reply-To: <5671A82225F9@underdog>
References: <5671A82225F9@underdog>
Message-ID: <792d5fd4ba457bf212e1160bc1ba2f9c@dscpl.com.au>

Although PythonImport can be used to trigger startup code, the bigger
issue may be which which mode you run Apache in, ie., "prefork",
"worker" with single process, "worker" with multiple processes etc.

If you use Apache in a mode whereby there are multiple child
subprocesses, you will not have all your preserved state of the service
in the same process. You would therefore still have to have an external
data store holding data which needs to be shared, use shared memory, or
tunnel all requests using some sort of messaging abstraction to a
distinct single process which holds all the state.

This is all made more complicated due to the fact that Apache can
decide to shutdown child subprocess under certain circumstances such
as when a certain number of requests has been handled.

Still using a separate backend service process or framework is still
probably preferable, with the handlers using XML-RPC or some other
messaging system mechanism to communicate with it. You still have the
issue of having to ensure the backend service is started, but then it
also means your backend service isn't really dependent on Apache and
you could use other means to communicate with it. Ie., Apache just
becomes one type of interface.

Graham


On 13/09/2005, at 10:37 AM, Lee Brown wrote:

> Greetings!
>
> The default behavior of mod_python is to create a new python 
> interpreter for
> each Apache vhost.  This interpreter is initialized on server startup 
> and
> persists until server shutdown/restart.  By using mod_python's 
> PythonImport
> statement in your Apache config file, you can have a python module 
> execute
> when the interpreter starts.  Put your startup initialization routines 
> and
> your per-request function calls in this module.
>
> Best Regards,
> Lee E. Brown
> (administrator@leebrown.org)
>
> -----Original Message-----
> From: mod_python-bounces@modpython.org
> [mailto:mod_python-bounces@modpython.org] On Behalf Of Doru-Catalin 
> Togea
> Sent: Monday, September 12, 2005 10:31 AM
> To: mod_python@modpython.org
> Subject: [mod_python] Persistent web-service
>
> Hi!
>
> I am not sure wheather I should use the word service or server (or 
> something
> else) in the following, so I will stick to "service".
>
> I have some C code which I need to call from mod_python in a 
> web-service
> implementation. I need a persistent web-service, meaning either that my
> service is started up when Apache starts, or at the first call made 
> for my
> service. What I need is to have some C-structs initialized and which 
> survive
> calls to my service, until Apache shuts down. If it wasn't for this 
> need of
> persistency I could use some simpler mechanisms like CGI.
>
> To put it another way, I need a CORBA-like server, only based on 
> Apache.
> In a CORBA implementation, the server keeps running and serves 
> requests from
> clients as they arrive, without losing state between calls.
>
> Any suggestions on how to go about this task using Apache and 
> mod_python?
>
> Thanks for helping,
> Catalin
>
>
>
> -- 
>
>          <<<< ================================== >>>>
>          <<     We are what we repeatedly do.      >>
>          <<  Excellence, therefore, is not an act  >>
>          <<             but a habit.               >>
>          <<<< ================================== >>>>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python

From grahamd at dscpl.com.au  Wed Sep 14 23:30:20 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Wed Sep 14 23:30:35 2005
Subject: [mod_python] Re: apachectl restart == dead mod_python
In-Reply-To: <4326E14C.6080502@gerf.org>
References: <20050909014349.GA20189@gerf.org>	<e37d987757c86e27eb5af86e7c8e9fef@dscpl.com.au>
	<20050909145758.GA16400@gerf.org> <4326E14C.6080502@gerf.org>
Message-ID: <d35dfb664504a165eb485ad4c2d17c93@dscpl.com.au>

We don't always have immediate answers nor the time to look at things
straight away. For me personally, I am actually on holidays in a foreign
country and haven't had Internet access for about 5 days. I only have it
now because I found an unsecured wireless connection.

Thus, be patient. I have another 100+ messages to catch up on. Your
problem isn't simple so I will be flagging it for later.

Things you should at least do are try the latest mod_python 3.2 beta
available from:

   http://www.modpython.org/dist/

You should also do a good search back through the mailing list archives
as I do vaguely recollect a similar problem mentioned before. You can
search the mailing list archive from the mod_python home page search  
box.

Graham

On 14/09/2005, at 12:25 AM, Christian Holtje wrote:

> Hi Graham and the mod_python gang.
>
> Is no one going to respond to this?  More info was asked for and I
> gathered it...
>
> Ciao!
>
> The Doctor What wrote:
>
>> * Graham Dumpleton (grahamd@dscpl.com.au) [050908 21:06]:
>>
>>
>>> On 09/09/2005, at 11:43 AM, The Doctor What wrote:
>>>
>>>
>>>
>>>> Hello!
>>>>
>>>> I have apache2 2.0.54, mod_python 3.1.3, python 2.3.5 (Debian
>>>> Sarge).
>>>>
>>>> I can start up apache2 and the mod_python pages work fine.
>>>>
>>>> However, if I then do apachectl restart, the mod_python pages hang
>>>> forever.  Frozen.  Eventually I get a timeout message in my browser.
>>>> The apache children do not die readily and require extra time to
>>>> clean up. :-(
>>>>
>>>> I full stop/start works everytime but in not a desirable solution
>>>> for a live server with multiple domains.  In addition, I'd have to
>>>> change all the log rotation stuff, etc.
>>>>
>>>> I particularly interested in TRAC, but it seems to be a generic
>>>> problem. I want to get PSE on my server, too.
>>>>
>>>> Is there some option I'm not including or something?
>>>>
>>>>
>>> Is this happening with a really simple mod_python handler, ie.,
>>> something like mptest, or something more complicated? Ie., can
>>> you be sure it isn't the handler code itself is causing the
>>> problem?
>>>
>>> What mode is Apache running in, "prefork" or "worker"?
>>>
>>> Do you get any messages in the Apache error log file which may be
>>> pertinent?
>>>
>>>
>>
>> Hi Graham! Thanks for replying. :-)
>>
>> I set up the mptest.py and got the following behaviour:
>>  * After setting up the configuration directives, I did a complete
>>    restart (stop-start). The mptest.py worked correctly.
>>  * I then did a reload (kill -HUP aka graceful) on apache.
>>    mptest.py then returned 500s for the first few times, then the
>>    apache server stopped responding to that page. Other pages work
>>    fine.  No logs are generated other than access logs.
>>  * To recover, a full restart is needed (stop-start).  It takes
>>    work to kill some of the children.  It's obvious that they
>>    are hung somehow.
>>
>> See the attached file "experiment" for a full log of my tests.
>>
>> The apache server is running in "prefork" mode.
>>
>> Ciao!
>>
>>
>> ---------------------------------------------------------------------- 
>> --
>>
>> Script started on Fri Sep  9 09:38:53 2005
>> docwhat % sudo /etc/init.d/apache2 restart
>> Forcing reload of web server: Apache2.
>> docwhat % lynx -source http://gerf.org/test/mptest.py
>> Hello World!
>> docwhat % lynx -source http://gerf.org/test/mptest.py
>> Hello World!
>> docwhat % lynx -source http://gerf.org/test/mptest.py
>> Hello World!
>> docwhat % lynx -source http://gerf.org/test/mptest.py
>> Hello World!
>> docwhat % lynx -source http://gerf.org/test/mptest.py
>> Hello World!
>> docwhat % lynx -source http://gerf.org/test/mptest.py
>> Hello World!
>> docwhat % lynx -source http://gerf.org/test/mptest.py
>> Hello World!
>> docwhat % lynx -source http://gerf.org/test/mptest.py
>> Hello World!
>> docwhat % lynx -source http://gerf.org/test/mptest.py
>> Hello World!
>> docwhat % lynx -source http://gerf.org/test/mptest.py
>> Hello World!
>> docwhat % sudo /etc/init.d/apache2 reload
>> Reloading web server config...done.
>> docwhat % lynx -source http://gerf.org/test/mptest.py
>> <?xml version="1.0" encoding="ISO-8859-1"?>
>> <!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
>>  "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
>> <html xmlns="http://www.w3.org/1999/xhtml" lang="en" xml:lang="en">
>> <head>
>> <title>Server error!</title>
>> <link rev="made" href="mailto:%5bno%20address%20given%5d" />
>> <style type="text/css"><!--/*--><![CDATA[/*><!--*/
>>    body { color: #000000; background-color: #FFFFFF; }
>>    a:link { color: #0000CC; }
>>    p, address {margin-left: 3em;}
>>    span {font-size: smaller;}
>> /*]]>*/--></style>
>> </head>
>>
>> <body>
>> <h1>Server error!</h1>
>> <p>
>>
>>
>>
>>
>>    The server encountered an internal error and was
>>    unable to complete your request. Either the server is
>>    overloaded or there was an error in a CGI script.
>>
>>
>>
>> </p>
>> <p>
>> If you think this is a server error, please contact
>> the <a href="mailto:%5bno%20address%20given%5d">webmaster</a>.
>>
>> </p>
>>
>> <h2>Error 500</h2>
>> <address>
>>  <a href="/">gerf.org</a><br />
>>
>>  <span>Fri Sep  9 09:39:58 2005<br />
>>  Apache/2.0.54 (Debian GNU/Linux) DAV/2 SVN/1.1.4 mod_fastcgi/2.4.2  
>> mod_python/3.1.3 Python/2.3.5 PHP/4.3.10-16 mod_ssl/2.0.54  
>> OpenSSL/0.9.7e</span>
>> </address>
>> </body>
>> </html>
>>
>> docwhat % lynx -source http://gerf.org/test/mptest.py
>> <?xml version="1.0" encoding="ISO-8859-1"?>
>> <!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
>>  "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
>> <html xmlns="http://www.w3.org/1999/xhtml" lang="en" xml:lang="en">
>> <head>
>> <title>Server error!</title>
>> <link rev="made" href="mailto:%5bno%20address%20given%5d" />
>> <style type="text/css"><!--/*--><![CDATA[/*><!--*/
>>    body { color: #000000; background-color: #FFFFFF; }
>>    a:link { color: #0000CC; }
>>    p, address {margin-left: 3em;}
>>    span {font-size: smaller;}
>> /*]]>*/--></style>
>> </head>
>>
>> <body>
>> <h1>Server error!</h1>
>> <p>
>>
>>
>>
>>
>>    The server encountered an internal error and was
>>    unable to complete your request. Either the server is
>>    overloaded or there was an error in a CGI script.
>>
>>
>>
>> </p>
>> <p>
>> If you think this is a server error, please contact
>> the <a href="mailto:%5bno%20address%20given%5d">webmaster</a>.
>>
>> </p>
>>
>> <h2>Error 500</h2>
>> <address>
>>  <a href="/">gerf.org</a><br />
>>
>>  <span>Fri Sep  9 09:39:59 2005<br />
>>  Apache/2.0.54 (Debian GNU/Linux) DAV/2 SVN/1.1.4 mod_fastcgi/2.4.2  
>> mod_python/3.1.3 Python/2.3.5 PHP/4.3.10-16 mod_ssl/2.0.54  
>> OpenSSL/0.9.7e</span>
>> </address>
>> </body>
>> </html>
>>
>> docwhat % lynx -source http://gerf.org/test/mptest.py
>> <?xml version="1.0" encoding="ISO-8859-1"?>
>> <!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
>>  "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
>> <html xmlns="http://www.w3.org/1999/xhtml" lang="en" xml:lang="en">
>> <head>
>> <title>Server error!</title>
>> <link rev="made" href="mailto:%5bno%20address%20given%5d" />
>> <style type="text/css"><!--/*--><![CDATA[/*><!--*/
>>    body { color: #000000; background-color: #FFFFFF; }
>>    a:link { color: #0000CC; }
>>    p, address {margin-left: 3em;}
>>    span {font-size: smaller;}
>> /*]]>*/--></style>
>> </head>
>>
>> <body>
>> <h1>Server error!</h1>
>> <p>
>>
>>
>>
>>
>>    The server encountered an internal error and was
>>    unable to complete your request. Either the server is
>>    overloaded or there was an error in a CGI script.
>>
>>
>>
>> </p>
>> <p>
>> If you think this is a server error, please contact
>> the <a href="mailto:%5bno%20address%20given%5d">webmaster</a>.
>>
>> </p>
>>
>> <h2>Error 500</h2>
>> <address>
>>  <a href="/">gerf.org</a><br />
>>
>>  <span>Fri Sep  9 09:40:00 2005<br />
>>  Apache/2.0.54 (Debian GNU/Linux) DAV/2 SVN/1.1.4 mod_fastcgi/2.4.2  
>> mod_python/3.1.3 Python/2.3.5 PHP/4.3.10-16 mod_ssl/2.0.54  
>> OpenSSL/0.9.7e</span>
>> </address>
>> </body>
>> </html>
>>
>> docwhat % lynx -source http://gerf.org/test/mptest.py
>> <?xml version="1.0" encoding="ISO-8859-1"?>
>> <!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
>>  "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
>> <html xmlns="http://www.w3.org/1999/xhtml" lang="en" xml:lang="en">
>> <head>
>> <title>Server error!</title>
>> <link rev="made" href="mailto:%5bno%20address%20given%5d" />
>> <style type="text/css"><!--/*--><![CDATA[/*><!--*/
>>    body { color: #000000; background-color: #FFFFFF; }
>>    a:link { color: #0000CC; }
>>    p, address {margin-left: 3em;}
>>    span {font-size: smaller;}
>> /*]]>*/--></style>
>> </head>
>>
>> <body>
>> <h1>Server error!</h1>
>> <p>
>>
>>
>>
>>
>>    The server encountered an internal error and was
>>    unable to complete your request. Either the server is
>>    overloaded or there was an error in a CGI script.
>>
>>
>>
>> </p>
>> <p>
>> If you think this is a server error, please contact
>> the <a href="mailto:%5bno%20address%20given%5d">webmaster</a>.
>>
>> </p>
>>
>> <h2>Error 500</h2>
>> <address>
>>  <a href="/">gerf.org</a><br />
>>
>>  <span>Fri Sep  9 09:40:01 2005<br />
>>  Apache/2.0.54 (Debian GNU/Linux) DAV/2 SVN/1.1.4 mod_fastcgi/2.4.2  
>> mod_python/3.1.3 Python/2.3.5 PHP/4.3.10-16 mod_ssl/2.0.54  
>> OpenSSL/0.9.7e</span>
>> </address>
>> </body>
>> </html>
>>
>> docwhat % lynx -source http://gerf.org/test/mptest.py
>>
>> docwhat % echo I pressed control c, it never came back.
>> I pressed control c, it never came back.
>> docwhat % sudo /etc/init.d/apache2 stop
>> Stopping web server: Apache2.
>> docwhat % sudo /etc/init.d/apache2 stop
>> Stopping web server: Apache2 ... no pidfile found! not running?.
>> docwhat % sudo /etc/init.d/apache2 start
>> Starting web server: Apache2.
>> docwhat % lynx -source http://gerf.org/test/mptest.py
>> Hello World!
>> Script done on Fri Sep  9 09:45:58 2005
>>
>>
>> ---------------------------------------------------------------------- 
>> --
>>
>> _______________________________________________
>> Mod_python mailing list
>> Mod_python@modpython.org
>> http://mailman.modpython.org/mailman/listinfo/mod_python
>>
>>

From list at joreybump.com  Wed Sep 14 23:39:14 2005
From: list at joreybump.com (Jorey Bump)
Date: Wed Sep 14 23:39:21 2005
Subject: [mod_python] PythonImport: Can someone please draw a diagram
	for	this idiot?
In-Reply-To: <4328DB51.30408@joreybump.com>
References: <20050914195924.64436.qmail@web86508.mail.ukl.yahoo.com>	<4328866A.8030405@joreybump.com>	<432889E2.80908@joreybump.com>	<43288D60.6000701@sympatico.ca>	<4328B1F3.2010905@sympatico.ca>	<4328BA7F.7040008@sympatico.ca>
	<4328C8D1.4020300@joreybump.com>	<4328D332.7060809@sympatico.ca>
	<4328DB51.30408@joreybump.com>
Message-ID: <4328ECE2.7010402@joreybump.com>

Jorey Bump wrote:
> Jim Gallacher wrote:
>> I don't know if this is the correct way, but I tried it and it works:
>>
>> import sys
>> mpglobal = sys.modules['mpglobal']
>>
>> def index(req):
>>     req.write('Hello world\n')
>>     req.write(mpglobal.foo)
> 
> 
> That's very interesting, because due to module caching, the results are 
> the same if you simply do this:
> 
> import mpglobal
> 
> In the published module, when mpglobal is imported, /tmp/atest isn't 
> updated and mpglobal.foo is available, indicating that one could 
> initialize a db connection or variables using PythonImport, yet ensure 
> the module will still work if sys.modules['mpglobal'] isn't available.

OK, this allows for a simpler test:

# mpglobal.py
# import this with PythonImport
import time
foo = time.strftime('%X %x %Z')

Published module:

# globaltest.py
# access global module without reimporting, due to module caching
import mpglobal
def index():
     return mpglobal.foo

Visit:

  http://host/somedir/globaltest/

This will display the time the module was originally imported. Due to 
module caching, the same time will be displayed for multiple requests, 
but eventually the module will be reimported as new child processes 
begin, and different times will be displayed (use multiple browsers to 
see the effect best). This is consistent with the documentation.

As far as I can tell, PythonImport doesn't provide any more persistence 
for dynamically created objects or globals than simply importing the 
module directly in a published module. The documentation implies that 
this directive is mainly useful for initializing time consuming tasks 
before the first request. But isn't that only true directly after 
(re)starting apache? Isn't it the case that subsequent requests cause 
apache to spawn more children, thus reintroducing the delay for the 
first request in that child process?




From jg.lists at sympatico.ca  Thu Sep 15 00:09:35 2005
From: jg.lists at sympatico.ca (Jim Gallacher)
Date: Thu Sep 15 00:05:43 2005
Subject: [mod_python] PythonImport: Can someone please draw a diagram
	for	this idiot?
In-Reply-To: <4328ECE2.7010402@joreybump.com>
References: <20050914195924.64436.qmail@web86508.mail.ukl.yahoo.com>	<4328866A.8030405@joreybump.com>	<432889E2.80908@joreybump.com>	<43288D60.6000701@sympatico.ca>	<4328B1F3.2010905@sympatico.ca>	<4328BA7F.7040008@sympatico.ca>	<4328C8D1.4020300@joreybump.com>	<4328D332.7060809@sympatico.ca>	<4328DB51.30408@joreybump.com>
	<4328ECE2.7010402@joreybump.com>
Message-ID: <4328F3FF.3070203@sympatico.ca>

Jorey Bump wrote:
> Jorey Bump wrote:
> 
>> Jim Gallacher wrote:
>>
>>> I don't know if this is the correct way, but I tried it and it works:
>>>
>>> import sys
>>> mpglobal = sys.modules['mpglobal']
>>>
>>> def index(req):
>>>     req.write('Hello world\n')
>>>     req.write(mpglobal.foo)
>>
>>
>>
>> That's very interesting, because due to module caching, the results 
>> are the same if you simply do this:
>>
>> import mpglobal
>>
>> In the published module, when mpglobal is imported, /tmp/atest isn't 
>> updated and mpglobal.foo is available, indicating that one could 
>> initialize a db connection or variables using PythonImport, yet ensure 
>> the module will still work if sys.modules['mpglobal'] isn't available.
> 
> 
> OK, this allows for a simpler test:
> 
> # mpglobal.py
> # import this with PythonImport
> import time
> foo = time.strftime('%X %x %Z')
> 
> Published module:
> 
> # globaltest.py
> # access global module without reimporting, due to module caching
> import mpglobal
> def index():
>     return mpglobal.foo
> 
> Visit:
> 
>  http://host/somedir/globaltest/
> 
> This will display the time the module was originally imported. Due to 
> module caching, the same time will be displayed for multiple requests, 
> but eventually the module will be reimported as new child processes 
> begin, and different times will be displayed (use multiple browsers to 
> see the effect best). This is consistent with the documentation.
> 
> As far as I can tell, PythonImport doesn't provide any more persistence 
> for dynamically created objects or globals than simply importing the 
> module directly in a published module. The documentation implies that 
> this directive is mainly useful for initializing time consuming tasks 
> before the first request. But isn't that only true directly after 
> (re)starting apache? Isn't it the case that subsequent requests cause 
> apache to spawn more children, thus reintroducing the delay for the 
> first request in that child process?

I think this is all true.  You don't gain much by using it, especially 
for mpm-prefork.

Jim
From administrator at leebrown.org  Thu Sep 15 00:27:33 2005
From: administrator at leebrown.org (Lee Brown)
Date: Thu Sep 15 00:27:55 2005
Subject: [mod_python] PythonImport: Can someone please draw a
	diagramfor	this idiot?
In-Reply-To: <432889E2.80908@joreybump.com>
Message-ID: <61909C816160@underdog>

Greetings!

PythonImport works exactly as advertised for me.  I'll show you my setup;
maybe that will shed some light...

Environment:

	Apache 2.0.54 (win32/MPM), mod_python 3.1.3, Python 2.3.4, WinXP SP2

In the main section of httpd.conf:

	AddHandler mod_python .py
	PythonImport site_setup.py crashtest

In the vhosts section of httpd.conf:

	<VirtualHost *:80>
		ServerName crashtest.leebrown.org
		...
		PythonPath	"sys.path +
['C:/.../crashtest/home/','C:/.../crashtest/config/']"
		PythonInterpreter crashtest
		PythonHandler import_test
		PythonDebug On
		...
	</VirtualHost>

In site_setup.py:

	__all__ = ['basepath', 'siteroot', 'cfg_root', 'doc_root',
'tmp_root', 'py__root']

	basepath = 'c:/projects/webdev/sites'
	siteroot = basepath + '/crashtest'
	cfg_root = siteroot + '/config'
	doc_root = siteroot + '/home'
	tmp_root = siteroot + '/templates'
	py__root = siteroot + '/python'

In import_test.py:

	from mod_python import apache
	from site_setup import *

	def handler(req):
    		req.content_type = 'text/plain'
    		req.write(siteroot)
    		return apache.OK

Which writes "c:/projects/webdev/sites/crashtest" just as expected.

A few observations bear noting:

In my setup, the PythonInterpreter statement comes AFTER the PythonImport
statement.  I noticed that some folks had it the other way 'round.  I have
no idea if this really makes a difference or not.

The first path added to sys.path is actually redundant; the server or vhost
DocumentRoot path is stealthly added to sys.path by mod_python

Site_setup.py is loaded before PythonPath is evaluated, so it's useless for
locating the imported module.  However, site_setup.py is loaded AFTER the
DocumentRoot is added to sys.path, so the imported module can be located in
the DocumentRoot in addition to all the 'standard' Python places.

I have not tried this yet, but with a proper *.pth (python path file) you
~might~ be able to add custom paths that are available when PythonImport
executes.

Best Regards,
Lee E. Brown
(administrator@leebrown.org)

-----Original Message-----
From: mod_python-bounces@modpython.org
[mailto:mod_python-bounces@modpython.org] On Behalf Of Jorey Bump
Sent: Wednesday, September 14, 2005 4:37 PM
To: mod_python@modpython.org
Subject: Re: [mod_python] PythonImport: Can someone please draw a diagramfor
this idiot?

Jorey Bump wrote:
> jamestmcneill-python@yahoo.co.uk wrote:
> 
>> 3) From this I can see that the PythonImport directive doesn't seem 
>> to be working at all (or at least, in any way I expected it to). It 
>> does not produce a compiled version of the module specified,
> 
> This is not unusual. The user that apache runs as must have write 
> permissions in the directory in order to produce a .pyc file. I'm not 
> sure what happens under Windows regarding this, but if I want a 
> compiled version of the module under Linux, I compile it ahead of time 
> or change the permissions (rarely).

Having said that, I just tried using the PythonImport statement, and I also
see no evidence that it works. I may be using or testing it incorrectly,
however.
_______________________________________________
Mod_python mailing list
Mod_python@modpython.org
http://mailman.modpython.org/mailman/listinfo/mod_python

From administrator at leebrown.org  Thu Sep 15 00:39:44 2005
From: administrator at leebrown.org (Lee Brown)
Date: Thu Sep 15 00:40:05 2005
Subject: [mod_python] PythonImport: Can someone please draw a
	diagramfor	this idiot?
In-Reply-To: <4328ECE2.7010402@joreybump.com>
Message-ID: <619BDCD234E3@underdog>

Greetings! 

It depends.  When using the winnt MPM module, you get one process (and thus
one interpreter) per vhost; requests are handled by threads.  I've never had
Apache spawn a new child on me, so my PythonImport module persists as long
as the server stays up.

Best Regards,
Lee E. Brown
(administrator@leebrown.org)

-----Original Message-----
From: mod_python-bounces@modpython.org
[mailto:mod_python-bounces@modpython.org] On Behalf Of Jorey Bump
Sent: Wednesday, September 14, 2005 11:39 PM
To: mod_python@modpython.org
Subject: Re: [mod_python] PythonImport: Can someone please draw a diagramfor
this idiot?

Jorey Bump wrote:

As far as I can tell, PythonImport doesn't provide any more persistence for
dynamically created objects or globals than simply importing the module
directly in a published module. The documentation implies that this
directive is mainly useful for initializing time consuming tasks before the
first request. But isn't that only true directly after (re)starting apache?
Isn't it the case that subsequent requests cause apache to spawn more
children, thus reintroducing the delay for the first request in that child
process? 


From administrator at leebrown.org  Thu Sep 15 00:52:20 2005
From: administrator at leebrown.org (Lee Brown)
Date: Thu Sep 15 00:52:44 2005
Subject: [mod_python] PythonImport: Can someone please draw a
	diagramfor	this idiot?
In-Reply-To: <4328866A.8030405@joreybump.com>
Message-ID: <61A777D91213@underdog>

Greetings!

Under WindowsXP, you can run Apache as a stand-alone executable or as a
system process (a 'daemon,' for you penguin-floggers).  If run as a
stand-alone, it inherits the priviledges of the current user unless you
configure 'run as' (sorta like suid) to run it under a different user.
Security issues?  You bet!

If you run it as a system process, by default it will run under the built-in
pseudo-user 'system.'  This is very, very bad as 'system' has priviledges to
everywhere and everything and then some.  Just as with the stand-alone, you
can set up the system process to run under another user.  I have a user
named 'webserver' under which Apache runs; this gives me fine-grained
control over its priviledges.

Getting back to the main point, under Windows it's the same as under Linux:
whatever user the server happens to be running as needs the appropriate
permissions for the resource in question.

Best Regards,
Lee E. Brown
(administrator@leebrown.org)

-----Original Message-----
From: mod_python-bounces@modpython.org
[mailto:mod_python-bounces@modpython.org] On Behalf Of Jorey Bump
Sent: Wednesday, September 14, 2005 4:22 PM
To: mod_python@modpython.org
Subject: Re: [mod_python] PythonImport: Can someone please draw a diagramfor
this idiot?

jamestmcneill-python@yahoo.co.uk wrote:

> 3) From this I can see that the PythonImport directive doesn't seem to 
> be working at all (or at least, in any way I expected it to). It does 
> not produce a compiled version of the module specified,

This is not unusual. The user that apache runs as must have write
permissions in the directory in order to produce a .pyc file. I'm not sure
what happens under Windows regarding this, but if I want a compiled version
of the module under Linux, I compile it ahead of time or change the
permissions (rarely).
_______________________________________________
Mod_python mailing list
Mod_python@modpython.org
http://mailman.modpython.org/mailman/listinfo/mod_python

From earle.ady at gmail.com  Thu Sep 15 01:06:51 2005
From: earle.ady at gmail.com (Earle Ady)
Date: Thu Sep 15 01:07:00 2005
Subject: [mod_python] mod_python + MySQLdb + Apache strange behavoir
In-Reply-To: <169437ced9788333f95b147fe7e5b984@dscpl.com.au>
References: <F71F2F7B-BA31-4977-8C58-E9DA14F82622@gmail.com>
	<169437ced9788333f95b147fe7e5b984@dscpl.com.au>
Message-ID: <B98DFB05-5CD8-48BD-9020-9479825E7F96@gmail.com>

Graham,

I managed to self-diagnose and repair this problem.  However, I  
turned up another one, although unrelated.

As for the MySQLdb inconsistencies, varying error messages, etc.  The  
problem was actually quite simple!  I was using  
MySQLdb.cursors.DictCursor as a cursor type and only importing MySQLdb.

I added a simple import for MySQLdb.cursors, and all of my problems  
went away.   This is something I never would have guessed from the  
behavioir and errors of mod_python and MySQLdb linkage, but a lot of  
persistence and a truckload of tenacity managed to dig it up.

It's bizarre that it would work at all, given the fix.   If anyone  
else is having these problems, double check to see what type of  
cursor they are using in MySQLdb, and if they are doing the import  
specifically.  It should have been more clear as using the standard  
cursor never had a problem but I obviously overlooked this for awhile.

On a side note, my exact same setup on a Linux machine, when moved to  
an OSX machine (same versions of everything...), craps out when  
trying to use Sessions when acquiring a mutex lock.  Is this a known  
problem?

Best,
earle.

On Sep 9, 2005, at 4:38 AM, Graham Dumpleton wrote:

>
> On 09/09/2005, at 3:26 PM, Earle Ady wrote:
>
>
>>
>> I seem to be having some strange behavior between mod_python and  
>> MySQLdb under Apache.
>>
>> I have relatively simple .PSP's that will work one second, and  
>> then fail on a reload.  Sometimes they work, sometimes they  
>> don't.  To make things even more bizarre, if I utilize the same  
>> logic in another .PSP it may work!  I can't seem to narrow down  
>> what this problem is.
>>
>> I read an article from two years ago about conflicts between PHP  
>> running parallel to mod_python.  I have deactivated the PHP module  
>> loading within Apache, and the
>> problem still persists.
>>
>> Error messages vary, nothing seems to fix things properly.
>>
>> Has anyone else had these sorts of problems?
>>
>
> There are known problems, but without the error messages from the  
> Apache
> error log file, we would be guessing.
>
> Does the problem occur in PSP code independent of use of MySQLDB?  
> Are you
> mixing use of mod_python.psp and mod_python.publisher and thus are  
> using
> "from mod_python import psp" or "import mod_python.psp" explicitly?
>
> You might try latest beta of mod_python 3.2 as some issues related to
> module importing when using mod_python.publisher and mod_python.psp
> together are addressed.
>
> Graham
>
>

From nicolas.lehuen at gmail.com  Thu Sep 15 01:52:12 2005
From: nicolas.lehuen at gmail.com (Nicolas Lehuen)
Date: Thu Sep 15 01:53:06 2005
Subject: [mod_python] Global, but threadsafe request object?
In-Reply-To: <200509142307.51826.fabianosidler@swissonline.ch>
References: <200509142307.51826.fabianosidler@swissonline.ch>
Message-ID: <c298f2d705091422527831e073@mail.gmail.com>

The only way to do this safely and in a portable way would be to store the 
request object in a thread-local variable (see 
http://aspn.activestate.com/ASPN/Cookbook/Python/Recipe/302088 ). Thread 
locals are only present in Python 2.4, though (but a pure Python 
implementation is provided and nothing prevents it from running on previous 
versions of Python).

Regards,
Nicolas

2005/9/14, Fabiano Sidler <fabianosidler@swissonline.ch>:
> 
> Hi folks!
> 
> In a web application I planning I need to access the request object from a 
> big
> number of functions and classes. Therefore I could pass it each time to 
> each
> of the objects working on it, which has very ugly disadvantages like 
> inherent
> portability loss and weird parameter lists. So my question to you: Is 
> there a
> way to make it global-like, if necessary over a singleton-like wrapper 
> class
> returning it? I know, this looks more likely a python problem than a 
> modpython
> one, but perhaps someone here knows a simple solution with using mod-
> python specific code?
> 
> Greetings,
> Fips
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20050915/705b8d43/attachment.html
From sakcee at gmail.com  Thu Sep 15 03:22:53 2005
From: sakcee at gmail.com (sakcee sakcee)
Date: Thu Sep 15 03:22:59 2005
Subject: [mod_python] ddd and eclipse
Message-ID: <859029b7050915002243fd900f@mail.gmail.com>

Hi

I want to use eclipse(pydev) or ddd(pydb) with mod_python, can these ide's 
handles requests from mod_python.

any help or pointers are greatly appreciated

thanks
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20050915/b889a1c7/attachment.html
From grahamd at dscpl.com.au  Thu Sep 15 07:50:03 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Thu Sep 15 07:50:18 2005
Subject: [mod_python] mod_python + MySQLdb + Apache strange behavoir
In-Reply-To: <B98DFB05-5CD8-48BD-9020-9479825E7F96@gmail.com>
References: <F71F2F7B-BA31-4977-8C58-E9DA14F82622@gmail.com>
	<169437ced9788333f95b147fe7e5b984@dscpl.com.au>
	<B98DFB05-5CD8-48BD-9020-9479825E7F96@gmail.com>
Message-ID: <246ca0ac865b4653347b1027646bf79b@dscpl.com.au>


On 15/09/2005, at 3:06 PM, Earle Ady wrote:

> Graham,
>
> I managed to self-diagnose and repair this problem.  However, I turned 
> up another one, although unrelated.
>
> As for the MySQLdb inconsistencies, varying error messages, etc.  The 
> problem was actually quite simple!  I was using 
> MySQLdb.cursors.DictCursor as a cursor type and only importing 
> MySQLdb.
>
> I added a simple import for MySQLdb.cursors, and all of my problems 
> went away.   This is something I never would have guessed from the 
> behavioir and errors of mod_python and MySQLdb linkage, but a lot of 
> persistence and a truckload of tenacity managed to dig it up.
>
> It's bizarre that it would work at all, given the fix.   If anyone 
> else is having these problems, double check to see what type of cursor 
> they are using in MySQLdb, and if they are doing the import 
> specifically.  It should have been more clear as using the standard 
> cursor never had a problem but I obviously overlooked this for awhile.
>
> On a side note, my exact same setup on a Linux machine, when moved to 
> an OSX machine (same versions of everything...), craps out when trying 
> to use Sessions when acquiring a mutex lock.  Is this a known problem?

Define "crap out". Does it hang? Does it give an error and if so what?

In 3.1.4 there are some session issues which are addressed in 3.2, but
I don't know of any session specific problems that only occur on Mac OS 
X.

Anyway, same deal as before, unless you can give specific details such
as the error messages and symptoms, it is really hard to give any sort
of specific advice.

Graham

From grahamd at dscpl.com.au  Thu Sep 15 07:59:17 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Thu Sep 15 07:59:29 2005
Subject: [mod_python] Global, but threadsafe request object?
In-Reply-To: <c298f2d705091422527831e073@mail.gmail.com>
References: <200509142307.51826.fabianosidler@swissonline.ch>
	<c298f2d705091422527831e073@mail.gmail.com>
Message-ID: <96283eccca2f70e2484c27aa9a51da85@dscpl.com.au>

On 15/09/2005, at 3:52 PM, Nicolas Lehuen wrote:

> The only way to do this safely and in a portable way would be to store 
> the request object in a thread-local variable (see 
> http://aspn.activestate.com/ASPN/Cookbook/Python/Recipe/302088 ). 
> Thread locals are only present in Python 2.4, though (but a pure 
> Python implementation is provided and nothing prevents it from running 
> on previous versions of Python).
>
>  Regards,
>  Nicolas
>
> 2005/9/14, Fabiano Sidler <fabianosidler@swissonline.ch>:
>>
>> In a web application I planning I need to access the request object 
>> from a big
>> number of functions and classes. Therefore I could pass it each time 
>> to each
>> of the objects working on it, which has very ugly disadvantages like 
>> inherent
>> portability loss and weird parameter lists. So my question to you: Is 
>> there a
>> way to make it global-like, if necessary over a singleton-like 
>> wrapper class
>> returning it? I know, this looks more likely a python problem than a 
>> modpython
>> one, but perhaps someone here knows a simple solution with using mod-
>> python specific code?

In the absence of Python 2.4, I use the code given at end of email. The
_cache_request() method should be called at the start of the top level
handler. Rather than do this in every handler, you could probably also
create a special handler which does only that and then returns
apache.OK. You can then use fact that you can list multiple handlers to
PythonHandler directive. For example:

   PythonHandler my_request_object_cache
   PythonHandler mod_python.publisher

# my_request_object_cache.py

try:
     import threading
     _current_thread = threading.currentThread
except:
     def _current_thread():
         return None

_cache = {}

def _discard_request(thread):
     try:
         _cache[thread].pop()
         if len(_cache[thread]) == 0:
             del _cache[thread]
     except:
         pass

def _cache_request(req):
     thread = _current_thread()
     if _cache.has_key(thread):
         if _cache[thread][-1] == req:
             return
         _cache[thread].append(req)
     else:
         _cache[thread] = [req]

     req.register_cleanup(_discard_request,(thread,))

def current_request():
     try:
         thread = _current_thread()
         return _cache[thread][-1]
     except:
         pass

# Untested handler which will cache request when chain
# of handlers is defined. Make this the first handler
# defined to PythonHandler directive.

def handler(req):
     _cache_request(req)
     return apache.OK

From jamestmcneill-python at yahoo.co.uk  Thu Sep 15 08:28:14 2005
From: jamestmcneill-python at yahoo.co.uk (jamestmcneill-python@yahoo.co.uk)
Date: Thu Sep 15 08:28:20 2005
Subject: [mod_python] PythonImport: Can someone please draw a diagram for
	this idiot?
In-Reply-To: <4328D332.7060809@sympatico.ca>
Message-ID: <20050915122815.85817.qmail@web86509.mail.ukl.yahoo.com>

Jim,

Thank you, I'm not sure exactly what is different about your example but
I've just tested it and it works fine. Just so the next idiot that comes
along has a little easier time of it than me, here's a diagram of how to
prove PythonImport works under XP:

1) add the location of your import code to the PythonPath, by placing a
file called <something>.pth in your python folder, e.g. 
c:\python23\mpg.pth. Contents for instance:
C:\mod_python

2) put your import code into the folder you have specified above, by
creating a file c:\mod_python\mpg.py:
# mpg.py
import time
f = open(r'C:\mod_python\mpgtest.txt', 'w')
f.write(str(time.time()))
f.close()
foo = 'testing'

3) put a similar section to this in the main part of your Apache config
file (not within any directory or other section, it has to be in the main
part):
PythonInterpreter mpginterpreter
PythonImport mpg mpginterpreter
<Directory "C:\Program Files\Apache Group\Apache2\htdocs\moddy">
    AddHandler mod_python .py
    PythonHandler mpgtest
    PythonDebug On
</Directory>

4) finally, in the directory specified in your Apache config file add the
request handler code:
""" mpgtest.py"""
from mod_python import apache
import sys
mpglobal = sys.modules['mpg']
def handler(req):
    req.write('Hello world\n')
    req.write(mpglobal.foo)
    return apache.OK


Browse to http://localhost/moddy/mince.py. You should now find the
compiled mpg.pyc in your c:\mod_python folder, also the test file
mpgtest.txt written at import time.

Apologies to those of you for whom this kid's stuff must be like watching
paint dry. Any mistakes are mine.

Regards,
Jim McNeill

--- Jim Gallacher  wrote:

> Jorey Bump wrote:
> > Jim Gallacher wrote:
> > 
> >> In answer to my own in question, PythonImport does work and there is 
> >> no bug. Re-reading the docs reveals this small detail which I and 
> >> others may have overlooked - the context for the directive. 
> >> PythonImport only works in the server config context. 


++++++++++++++++++++++++++++++++++++++++++++++++++
+   If you've got a good excuse - don't use it   +
++++++++++++++++++++++++++++++++++++++++++++++++++)

From list at joreybump.com  Thu Sep 15 09:01:15 2005
From: list at joreybump.com (Jorey Bump)
Date: Thu Sep 15 09:01:24 2005
Subject: [mod_python] mod_python + MySQLdb + Apache strange behavoir
In-Reply-To: <B98DFB05-5CD8-48BD-9020-9479825E7F96@gmail.com>
References: <F71F2F7B-BA31-4977-8C58-E9DA14F82622@gmail.com>	<169437ced9788333f95b147fe7e5b984@dscpl.com.au>
	<B98DFB05-5CD8-48BD-9020-9479825E7F96@gmail.com>
Message-ID: <4329709B.2060108@joreybump.com>

Earle Ady wrote:

> As for the MySQLdb inconsistencies, varying error messages, etc.  The  
> problem was actually quite simple!  I was using  
> MySQLdb.cursors.DictCursor as a cursor type and only importing MySQLdb.
> 
> I added a simple import for MySQLdb.cursors, and all of my problems  
> went away.   This is something I never would have guessed from the  
> behavioir and errors of mod_python and MySQLdb linkage, but a lot of  
> persistence and a truckload of tenacity managed to dig it up.
> 
> It's bizarre that it would work at all, given the fix.   If anyone  else 
> is having these problems, double check to see what type of  cursor they 
> are using in MySQLdb, and if they are doing the import  specifically.  
> It should have been more clear as using the standard  cursor never had a 
> problem but I obviously overlooked this for awhile.

This extra import step is unnecessary. The following works fine:

import MySQLdb

_dbh = MySQLdb.connect(host = "localhost", user = "me", passwd = "foo", 
db = "bar")

def get_users():
     # this cursor type will return a tuple of dictionaries
     cursor = _dbh.cursor(MySQLdb.cursors.DictCursor)
     query = "SELECT * FROM users"
     cursor.execute(query)
     rows = cursor.fetchall()
     return rows

From steve at rueb.com  Thu Sep 15 10:06:53 2005
From: steve at rueb.com (Steve Bergman)
Date: Thu Sep 15 10:07:06 2005
Subject: [mod_python] psp and mod_deflateconflict?
Message-ID: <43297FFD.4000105@rueb.com>

I have run into a problem which seems to be specific to psp.  I do not 
see it using publisher.  When I turn on mod_deflate, I get  a couple of 
unicode characters, (1f , 08) separated by something that looks like a 
comma, either at the top or bottom of the page.

I am running fedora core 4, with the included mod_deflate and 
mod_python.  Apache httpd is 2.0.54.  Has anyone else seen this, or is 
anyone successfully using psp and mod_deflate together?

Thank you for any info,
Steve Bergman
From huzaifa at hostway.com  Thu Sep 15 10:24:58 2005
From: huzaifa at hostway.com (Huzaifa Tapal)
Date: Thu Sep 15 10:25:08 2005
Subject: [mod_python] avoiding apache restarts to reimport modules and
	refresh global cache
Message-ID: <4329843A.9070409@hostway.com>

I have been using my python based web application framework, slither, 
which was recently upgraded to be a mod_python handler for more than 6 
months now for various applications at my company.  One dillema I see 
with the persistent environment with mod_python is that everytime I 
update code in production, i have to restart apache so that my library 
modules can be reloaded as well as any caching I am using.

 I am using apache.import_module() to import any page modules in my 
applications and those get reimported at every change since they have 
the autoreload turned on.  I also know that Vampire has a pretty good 
module importing system then that provided by apache.import_module().  I 
was wondering if it would be a good idea overwrite the 
__builtin__.import() method with that of Vampire's import_module or 
apache.import_module() so that the checks of "mtime" are done and the 
reloads happen automatically.

Is there another better way of reloading all my library modules and 
refreshing the cache?

Hozi


From igp-dev at infogridpacific.com  Thu Sep 15 11:48:16 2005
From: igp-dev at infogridpacific.com (IGP Dev)
Date: Thu Sep 15 11:49:15 2005
Subject: [mod_python] Import Error for _apache
Message-ID: <432997C0.8030802@infogridpacific.com>

Hi,

I already installed mod_python
I did 'from mod_python import apache' in my mod_python module.
Apache error log shows following error.
"_apacheapahce mnot found error"

please help
thank u
Ajinkyan
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20050915/61182d56/attachment.html
From steve at rueb.com  Thu Sep 15 12:09:33 2005
From: steve at rueb.com (Steve Bergman)
Date: Thu Sep 15 12:09:48 2005
Subject: [mod_python] avoiding apache restarts to reimport modules and
	refresh global cache
In-Reply-To: <4329843A.9070409@hostway.com>
References: <4329843A.9070409@hostway.com>
Message-ID: <43299CBD.1090900@rueb.com>

Huzaifa Tapal wrote:

> I have been using my python based web application framework, slither, 
> which was recently upgraded to be a mod_python handler for more than 6 
> months now for various applications at my company.  One dillema I see 
> with the persistent environment with mod_python is that everytime I 
> update code in production, i have to restart apache so that my library 
> modules can be reloaded as well as any caching I am using.
>
> I am using apache.import_module() to import any page modules in my 
> applications and those get reimported at every change since they have 
> the autoreload turned on.  I also know that Vampire has a pretty good 
> module importing system then that provided by apache.import_module().  
> I was wondering if it would be a good idea overwrite the 
> __builtin__.import() method with that of Vampire's import_module or 
> apache.import_module() so that the checks of "mtime" are done and the 
> reloads happen automatically.
>
> Is there another better way of reloading all my library modules and 
> refreshing the cache?

I have a possibly related question.  I'm new to mod_python, but I have 
already noticed that if I have a module with a class that has a method 
that returns, say, a list to a calling function in main, and then change 
it to pass back, say, a dictionary, the interpretter sometimes wants to 
continue to act like a list was passed, when the main program is 
expecting a dictionary.  The behavior is inconsistent in that sometimes 
it works right and sometimes not.  I think this might be covered in 
question 3.1 of the FAQ, but I'm not sure I quite understand what it is 
saying.

Could someone enlighten me?

Thanks,

-Steve Bergman
From grahamd at dscpl.com.au  Thu Sep 15 12:43:19 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Thu Sep 15 12:43:36 2005
Subject: [mod_python] avoiding apache restarts to reimport modules and
	refresh global cache
In-Reply-To: <4329843A.9070409@hostway.com>
References: <4329843A.9070409@hostway.com>
Message-ID: <87e25eb293a5f5153711bcb2c0bd5125@dscpl.com.au>


On 16/09/2005, at 12:24 AM, Huzaifa Tapal wrote:

> I have been using my python based web application framework, slither, 
> which was recently upgraded to be a mod_python handler for more than 6 
> months now for various applications at my company.  One dillema I see 
> with the persistent environment with mod_python is that everytime I 
> update code in production, i have to restart apache so that my library 
> modules can be reloaded as well as any caching I am using.
>
> I am using apache.import_module() to import any page modules in my 
> applications and those get reimported at every change since they have 
> the autoreload turned on.  I also know that Vampire has a pretty good 
> module importing system then that provided by apache.import_module().  
> I was wondering if it would be a good idea overwrite the 
> __builtin__.import() method with that of Vampire's import_module or 
> apache.import_module() so that the checks of "mtime" are done and the 
> reloads happen automatically.
>
> Is there another better way of reloading all my library modules and 
> refreshing the cache?

One shouldn't override '__builtin__.import()'. There are however other
ways of achieving the same thing. See:

   http://www.python.org/peps/pep-0302.html

Vampire does support a means of enabling an import hook in compliance
with PEP 302 which means that the "import" statement when used in
certain cases will underneath actually use Vampire's equivalent of the
'apache.import_module()' method. The feature isn't on by default though.

There has been a bit of discussion on the developers list for mod_python
around improving the module importing system, including the possibility
of using such an import hook. Making any changes though has been
deferred to mod_python 3.3.

Graham

From list at joreybump.com  Thu Sep 15 12:43:31 2005
From: list at joreybump.com (Jorey Bump)
Date: Thu Sep 15 12:43:38 2005
Subject: [mod_python] avoiding apache restarts to reimport modules and
	refresh global cache
In-Reply-To: <43299CBD.1090900@rueb.com>
References: <4329843A.9070409@hostway.com> <43299CBD.1090900@rueb.com>
Message-ID: <4329A4B3.1020505@joreybump.com>

Steve Bergman wrote:

> I have a possibly related question.  I'm new to mod_python, but I have 
> already noticed that if I have a module with a class that has a method 
> that returns, say, a list to a calling function in main, and then change 
> it to pass back, say, a dictionary, the interpretter sometimes wants to 
> continue to act like a list was passed, when the main program is 
> expecting a dictionary.  The behavior is inconsistent in that sometimes 
> it works right and sometimes not.  I think this might be covered in 
> question 3.1 of the FAQ, but I'm not sure I quite understand what it is 
> saying.
> 
> Could someone enlighten me?

Imported modules are cached for each interpreter created for a child 
process. In a prefork MPM, this may result in multiple interpreters for 
a single virtual host. Children created after an edit will import the 
new version of a module, while preexisting children continue to use the 
old version until they die. Currently, one of the most reliable ways to 
force a clean import for all processes is to restart apache (or even 
stop/start it).

Although this is an inconvenience, module caching offers important 
performance gains. The situation is further complicated by different 
MPMs, different platforms, different versions of both apache & 
mod_python, different programming backgrounds, and, of course, differing 
expectations. Much discussion and work has centered around this issue, 
so there are likely to be significant changes on the horizon. No 
solution is without its disadvantages, but this gotcha poses problems 
for newbies and large scale environments alike. You may want to test 
your applications thoroughly against new versions of mod_python to 
ensure that they continue to work as expected.

From grahamd at dscpl.com.au  Thu Sep 15 12:46:11 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Thu Sep 15 12:46:23 2005
Subject: [mod_python] avoiding apache restarts to reimport modules and
	refresh global cache
In-Reply-To: <43299CBD.1090900@rueb.com>
References: <4329843A.9070409@hostway.com> <43299CBD.1090900@rueb.com>
Message-ID: <3bb3ad7f7d90ac16e38d4b087206e50d@dscpl.com.au>


On 16/09/2005, at 2:09 AM, Steve Bergman wrote:

> Huzaifa Tapal wrote:
>
>> I have been using my python based web application framework, slither, 
>> which was recently upgraded to be a mod_python handler for more than 
>> 6 months now for various applications at my company.  One dillema I 
>> see with the persistent environment with mod_python is that everytime 
>> I update code in production, i have to restart apache so that my 
>> library modules can be reloaded as well as any caching I am using.
>>
>> I am using apache.import_module() to import any page modules in my 
>> applications and those get reimported at every change since they have 
>> the autoreload turned on.  I also know that Vampire has a pretty good 
>> module importing system then that provided by apache.import_module(). 
>>  I was wondering if it would be a good idea overwrite the 
>> __builtin__.import() method with that of Vampire's import_module or 
>> apache.import_module() so that the checks of "mtime" are done and the 
>> reloads happen automatically.
>>
>> Is there another better way of reloading all my library modules and 
>> refreshing the cache?
>
> I have a possibly related question.  I'm new to mod_python, but I have 
> already noticed that if I have a module with a class that has a method 
> that returns, say, a list to a calling function in main, and then 
> change it to pass back, say, a dictionary, the interpretter sometimes 
> wants to continue to act like a list was passed, when the main program 
> is expecting a dictionary.  The behavior is inconsistent in that 
> sometimes it works right and sometimes not.  I think this might be 
> covered in question 3.1 of the FAQ, but I'm not sure I quite 
> understand what it is saying.
>
> Could someone enlighten me?

Yes, your problem could possibly be related to this. For a more
comprehensive list of issues with the module importing system
see:

   http://www.dscpl.com.au/articles/modpython-002.html
   http://www.dscpl.com.au/articles/modpython-003.html

Graham

From zsolt at bbm.de  Thu Sep 15 13:24:07 2005
From: zsolt at bbm.de (Zsolt Barat)
Date: Thu Sep 15 13:25:16 2005
Subject: [mod_python] Persistent web-service
In-Reply-To: <792d5fd4ba457bf212e1160bc1ba2f9c@dscpl.com.au>
References: <5671A82225F9@underdog>
	<792d5fd4ba457bf212e1160bc1ba2f9c@dscpl.com.au>
Message-ID: <4329AE37.2090006@bbm.de>

Graham Dumpleton wrote:

> Still using a separate backend service process or framework is still
> probably preferable, with the handlers using XML-RPC or some other
> messaging system mechanism to communicate with it. You still have the
> issue of having to ensure the backend service is started, but then it
> also means your backend service isn't really dependent on Apache and
> you could use other means to communicate with it. Ie., Apache just
> becomes one type of interface.
>
hi,
this is interesting. i just try to make something like this. a tiny
webapplication which connects to a serial port and issues some
datarequest. are they already some recommended frameworks (xml-rpc) you
aware of which deal with this issue? sample apps?

best

zsolt

-- 
bbm kloedenstr. 1 10965 berlin tel ++49 30 69580994 fax ++49 30 69580993

-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 256 bytes
Desc: OpenPGP digital signature
Url : http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20050915/23f6ee17/signature.bin
From steve at rueb.com  Thu Sep 15 20:17:31 2005
From: steve at rueb.com (Steve Bergman)
Date: Thu Sep 15 20:17:37 2005
Subject: [mod_python] avoiding apache restarts to reimport modules and
	refresh global cache
In-Reply-To: <4329A4B3.1020505@joreybump.com>
References: <4329843A.9070409@hostway.com> <43299CBD.1090900@rueb.com>
	<4329A4B3.1020505@joreybump.com>
Message-ID: <432A0F1B.30408@rueb.com>

Thank you.  I'll get into the habit of restarting after changes.

-Steve
From steve at rueb.com  Thu Sep 15 20:22:49 2005
From: steve at rueb.com (Steve Bergman)
Date: Thu Sep 15 20:22:55 2005
Subject: [mod_python] Using session management?
Message-ID: <432A1059.5050604@rueb.com>

Is there good documentation somewhere on using the Session module, 
preferably with examples?  From the mod_python manual, I've gotten this far:

---
from mod_python import Session

def main(req):
    sess = Session.Session(req)
    pprint.pprint(sess)
    if sess.is_new():
        s = '<html>This is a new session.</html>'
        sess.myVar2 = "I am a session variable."
        sess.save()
        return s
    else:
        s='<html>This is an old session.  myVar2 = ' + sess.myVar2 + 
'</html>'
        sess.load()
        s+= sess.myVar2
        sess.save()
        return s
---

This works in that the first time, I get "This is a new session" and it 
does not complain about setting sess.myVar2.

But on the second load, it complains that dbmSesion does not have an 
attribute myVar2.

When you save the session, what all gets saved?

Thanks,
Steve Bergman
From steve at rueb.com  Thu Sep 15 20:34:49 2005
From: steve at rueb.com (Steve Bergman)
Date: Thu Sep 15 20:34:54 2005
Subject: [mod_python] Using session management?
In-Reply-To: <432A1059.5050604@rueb.com>
References: <432A1059.5050604@rueb.com>
Message-ID: <432A1329.1070604@rueb.com>

In my previous message I cut and pasted the wrong snippet.  This is what 
I meant:

from mod_python import Session

def main(req):
       sess = Session.Session(req)
       if sess.is_new():
       s = '<html>This is a new session.</html>'
       sess.myVar2 = "I am a session variable."
       sess.save()
       return s
   else:
       sess.load()
       s='<html>This is an old session.  myVar2 = ' + sess.myVar2 + 
'</html>'
       sess.save()
       return s


Thanks,
Steve
From steve at rueb.com  Thu Sep 15 21:19:31 2005
From: steve at rueb.com (Steve Bergman)
Date: Thu Sep 15 21:19:37 2005
Subject: [mod_python] Using session management?
In-Reply-To: <432A1329.1070604@rueb.com>
References: <432A1059.5050604@rueb.com> <432A1329.1070604@rueb.com>
Message-ID: <432A1DA3.7030404@rueb.com>

Steve Bergman wrote:

Ahh!

 From the manual:

BaseSession is a subclass of dict. Data can be stored and retrieved from 
the session by using it as a dictionary.

Got it.

-Steve
From jstubbs at work-at.co.jp  Thu Sep 15 21:22:14 2005
From: jstubbs at work-at.co.jp (Jason Stubbs)
Date: Thu Sep 15 21:24:22 2005
Subject: [mod_python] Using session management?
In-Reply-To: <432A1329.1070604@rueb.com>
References: <432A1059.5050604@rueb.com> <432A1329.1070604@rueb.com>
Message-ID: <432A1E46.3080809@work-at.co.jp>

Steve Bergman wrote:
> In my previous message I cut and pasted the wrong snippet.  This is what 
> I meant:
> 
> from mod_python import Session
> 
> def main(req):
>       sess = Session.Session(req)
>       if sess.is_new():
>       s = '<html>This is a new session.</html>'
>       sess.myVar2 = "I am a session variable."
>       sess.save()
>       return s
>   else:
>       sess.load()
>       s='<html>This is an old session.  myVar2 = ' + sess.myVar2 + 
> '</html>'
>       sess.save()
>       return s

"BaseSession is a subclass of dict. Data can be stored and retrieved 
from the session by using it as a dictionary." -- docs

It looks like what you want is:

-       sess.myVar2 = "I am a session variable."
+       sess["myVar2"] = "I am a session variable."

--
Jason Stubbs
From jg.lists at sympatico.ca  Thu Sep 15 21:45:30 2005
From: jg.lists at sympatico.ca (Jim Gallacher)
Date: Thu Sep 15 21:41:56 2005
Subject: [mod_python] Using session management?
In-Reply-To: <432A1E46.3080809@work-at.co.jp>
References: <432A1059.5050604@rueb.com> <432A1329.1070604@rueb.com>
	<432A1E46.3080809@work-at.co.jp>
Message-ID: <432A23BA.109@sympatico.ca>

Note that when you correct your code you'll likely still raise an 
exception since you have not correctly saved the data in the dictionary. 
  A valid session object will exist but it will not have the 'myVar2' 
key. Either clear the pysid cookie in your browser or modify your code 
to catch the exception.

Also, calling sess.load() is redundant. It is called automatically by 
the Session.Session constructor if there is valid session data in the 
persistent store.

Jim

Jason Stubbs wrote:
> Steve Bergman wrote:
> 
>> In my previous message I cut and pasted the wrong snippet.  This is 
>> what I meant:
>>
>> from mod_python import Session
>>
>> def main(req):
>>       sess = Session.Session(req)
>>       if sess.is_new():
>>       s = '<html>This is a new session.</html>'
>>       sess.myVar2 = "I am a session variable."
>>       sess.save()
>>       return s
>>   else:
>>       sess.load()
>>       s='<html>This is an old session.  myVar2 = ' + sess.myVar2 + 
>> '</html>'
>>       sess.save()
>>       return s
> 
> 
> "BaseSession is a subclass of dict. Data can be stored and retrieved 
> from the session by using it as a dictionary." -- docs
> 
> It looks like what you want is:
> 
> -       sess.myVar2 = "I am a session variable."
> +       sess["myVar2"] = "I am a session variable."
> 
> -- 
From mcdanelz at gmail.com  Thu Sep 15 21:53:00 2005
From: mcdanelz at gmail.com (Zach McDanel)
Date: Thu Sep 15 21:53:08 2005
Subject: [mod_python] Problems Compiling
Message-ID: <74c406c454e8715792c6585fdf96c020@gmail.com>

Sgi IRIX 6.5.28

Python 2.4.1, removed a reference in makefile to libmpc cause it was 
causing problems with mod_python compile and it was not used to resolve 
and symbols

Apache 2.0.54

mod_python 3.1.4


this is the error I'm getting, I tracked down that it occurs in 
dist/Makefile

        ln -s ../lib/python/mod_python
Insufficient arguments
Usage: ln [-fis] file1 file2
        ln [-fis] file1 ... file2 dir
*** Error code 2 (bu21)
*** Error code 1 (bu21)

From jg.lists at sympatico.ca  Thu Sep 15 22:26:16 2005
From: jg.lists at sympatico.ca (Jim Gallacher)
Date: Thu Sep 15 22:22:30 2005
Subject: [mod_python] Problems Compiling
In-Reply-To: <74c406c454e8715792c6585fdf96c020@gmail.com>
References: <74c406c454e8715792c6585fdf96c020@gmail.com>
Message-ID: <432A2D48.2040000@sympatico.ca>

Zach McDanel wrote:
> Sgi IRIX 6.5.28
> 
> Python 2.4.1, removed a reference in makefile to libmpc cause it was 
> causing problems with mod_python compile and it was not used to resolve 
> and symbols
> 
> Apache 2.0.54
> 
> mod_python 3.1.4
> 
> 
> this is the error I'm getting, I tracked down that it occurs in 
> dist/Makefile
> 
>        ln -s ../lib/python/mod_python
> Insufficient arguments
> Usage: ln [-fis] file1 file2
>        ln [-fis] file1 ... file2 dir
> *** Error code 2 (bu21)
> *** Error code 1 (bu21)

For the ln in linux and FreeBSD, the link name (eg file2) is optional. 
 From the man page:
ln [OPTION]... TARGET [LINK_NAME]
If LINK_NAME is omitted, a link with the same basename as  the  TARGET 
is created in the current directory.

Perhaps IRIX's ln is different? If this is the case then it's a bug wrt 
IRIX. If you can confirm this is the case then I'll fix it in the dev 
branch.

Jim


From mcdanelz at gmail.com  Thu Sep 15 23:18:44 2005
From: mcdanelz at gmail.com (Zach McDanel)
Date: Thu Sep 15 23:19:24 2005
Subject: [mod_python] Problems Compiling
In-Reply-To: <432A2D48.2040000@sympatico.ca>
References: <74c406c454e8715792c6585fdf96c020@gmail.com>
	<432A2D48.2040000@sympatico.ca>
Message-ID: <364acf8c98ca99e1acf851dbbdc56be0@gmail.com>

Ok yeah ln in irix requires a second argument, so I add ./ in place of 
nothing an dit seems to have compiled.


Zach

On Sep 15, 2005, at 9:26 PM, Jim Gallacher wrote:

> Zach McDanel wrote:
>> Sgi IRIX 6.5.28
>> Python 2.4.1, removed a reference in makefile to libmpc cause it was 
>> causing problems with mod_python compile and it was not used to 
>> resolve and symbols
>> Apache 2.0.54
>> mod_python 3.1.4
>> this is the error I'm getting, I tracked down that it occurs in 
>> dist/Makefile
>>        ln -s ../lib/python/mod_python
>> Insufficient arguments
>> Usage: ln [-fis] file1 file2
>>        ln [-fis] file1 ... file2 dir
>> *** Error code 2 (bu21)
>> *** Error code 1 (bu21)
>
> For the ln in linux and FreeBSD, the link name (eg file2) is optional. 
> From the man page:
> ln [OPTION]... TARGET [LINK_NAME]
> If LINK_NAME is omitted, a link with the same basename as  the  TARGET 
> is created in the current directory.
>
> Perhaps IRIX's ln is different? If this is the case then it's a bug 
> wrt IRIX. If you can confirm this is the case then I'll fix it in the 
> dev branch.
>
> Jim
>
>

From grahamd at dscpl.com.au  Fri Sep 16 06:02:35 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Fri Sep 16 06:04:03 2005
Subject: [mod_python] Single import at startup
In-Reply-To: <43286A68.2090501@mischko.com>
References: <5E4C18D07172@underdog> <43286A68.2090501@mischko.com>
Message-ID: <dcd6a798b74213f4c25d1d0b5912bea7@dscpl.com.au>


On 15/09/2005, at 4:22 AM, Scott Chapman wrote:

> Lee Brown wrote:
>
>> I agree with you that doing an import once at server startup rather 
>> than at
>> each request seems like a cleaner way to go.  The only drawback is 
>> that if
>> you change the code in the imported module you'll have to re-start the
>> server but this usually isn't a problem for many applications.
>
> It is my understanding that importing once at startup is problematic 
> because the only hook to do it is _before_ the interpreter is 
> established?

Hmmm, what you are saying doesn't make sense. An interpreter has
to exist in order to import a module into it.

If you look at the code what I think you will find is that when
the child process init function is called by Apache, that it will
iterate over the list of modules associated with PythonImport
definitions, creating the named interpreter and then importing
the module into it.

Graham

From grahamd at dscpl.com.au  Fri Sep 16 06:28:29 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Fri Sep 16 06:28:46 2005
Subject: [mod_python] Single import at startup
In-Reply-To: <432874F4.8010606@dd.revealed.net>
References: <5E4C18D07172@underdog> <43286A68.2090501@mischko.com>
	<c298f2d7050914114969ea9915@mail.gmail.com>
	<432874F4.8010606@dd.revealed.net>
Message-ID: <08943aa7e405237f386a8bc65e28d4a8@dscpl.com.au>


On 15/09/2005, at 5:07 AM, Nick wrote:

> If the import is huge, it can create a significant delay (between the 
> initiation of the request and the fulfillment of that request) on the 
> first call of a handler.  If you have multiple server children, then 
> there is that delay for each child.

There are a couple of problems with doing initialisation of such things
as database connections at time of module import using PythonImport.

The main one is that it only provides one opportunity to have the
initialisation succeed. If the initialisation fails, Apache has to be
restarted. This is more problematic where multiple Apache child
processes exist, eg, prefork, where initialisation might work in some
subprocesses and not others.

Error handling is also a problem in that the initialisation is being
done during the module import. If an exception is raised because of some
error and not dealt with, it effectively causes the module import to
fail in an unknown state, especially if the resource acquisition was not
done as the very last thing. For example, "b" will not exist in the
module if later referenced due to the exception occurring before that
point.

   a = 1
   raise Exception()
   b = 2

The next problem is that in mod_python prior to 3.2, there is no way to
access the server object during import of a module using PythonImport.
As a consequence there is no way to register a server cleanup function
to perform any necessary cleanup and releasing of resources when Apache
is stopped completely or when Apache decides to kill of a child process
because it has reached some request limit.

In mod_python 3.2 this particular problem will not exist as a new
feature has been added which will allow you to do:

   apache.register_cleanup(my_cleanup_function)

Once mod_python 3.2 is available, I would suggest that the best
compromise is that PythonImport be used to attempt any initialisation
that you might want to be done early on, but that this not be relyed
upon. That is, a handler should still later call through some form of
acquisition object to get access to the actual resource handle. If it
wasn't able to be created earlier, a subsequent attempt is thus made to
create when the first request arrives that requires it.

The acquisition object, whether it is initialising at the point of a
PythonImport or a later handler should use "apache.register_cleanup()"
to ensure that any cleanup is done on process shutdown.

You might therefore have the module holding the resource be something
like:

   # ... lock for global data
   # ... actual global data

   def _cleanup():
     ...

   def resource_handle():
     # create resource if necessary and invoke 
apache.register_cleanup(_cleanup)
     return ...

   # Must trigger initialisation last.

   try:
     resource_handle()
   except:
     apache.log_error(...)

In the handler it would call "resource_handle()" and if an error occurs
again it should give back some meaningful error in web page.

Note that if using a multithreaded MPM, because initialisation could be
performed by handlers when a request arrives, the "resource_handle()"
function should use thread locking as appropriate to ensure that any
initialisation is only done once.

Think that is all, I have to run now anyway. :-)

Graham

From doktornull at lhi.is  Fri Sep 16 11:30:02 2005
From: doktornull at lhi.is (Sigurdur Einarsson)
Date: Fri Sep 16 11:30:17 2005
Subject: [mod_python] sys.argv does not work when accessed with mod_python]
Message-ID: <432AE4FA.5090803@lhi.is>



-------- Original Message --------
From: 	- Fri Sep 16 13:55:29 2005
X-Mozilla-Status: 	0001
X-Mozilla-Status2: 	00800000
Message-ID: 	<432ACECF.5020709@lhi.is>
Date: 	Fri, 16 Sep 2005 13:55:27 +0000
From: 	Sigurdur Einarsson <doktornull@lhi.is>
Reply-To: 	doktornull@lhi.is
Organization: 	lhi.is
User-Agent: 	Mozilla Thunderbird 1.0.6 (X11/20050912)
X-Accept-Language: 	en-us, en
MIME-Version: 	1.0
To: 	Graham Dumpleton <grahamd@dscpl.com.au>
Subject: 	Re: [mod_python] sys.argv does not work when accessed with
mod_python
References: 	<4322D765.3090808@lhi.is>
<53cfa274179f6ab9185aefb318f9f45c@dscpl.com.au>
In-Reply-To: 	<53cfa274179f6ab9185aefb318f9f45c@dscpl.com.au>
Content-Type: 	text/plain; charset=ISO-8859-1
Content-Transfer-Encoding: 	7bit



Hi Graham,
I am using forms, and they are being loaded and executed within in
different paths.  In php the use $_SERVER['PHP_SELF'].
Thank you so much for your help.

regards
siggi

Graham Dumpleton wrote:

>
> On 10/09/2005, at 10:53 PM, Sigurdur Einarsson wrote:
>
>> Hello list,
>>
>> It seems like I'm unable to use sys.argv[0] with mod_python, it
>> functions in the shell.  Is there something in mod_python that will do
>> the same thing or is there a way to allow mod_python to access the
>> function, assuming this is a security issue?
>
>
> What exactly are you expecting to be obtaining from sys.argv[0]?
>
> In a Python script run from the command line sys.argv[0] will yield the
> pathname of the actual script which was run. Under mod_python, even if
> sys.argv were able to somehow be set properly, the process corresponds
> to an invocation of Apache "httpd" application.
>
> Not knowing exactly what you are after, I'll give a few suggestions as
> to what is available.
>
> 1. In any Python module file, you can access the global "__file__". This
> will give the pathname to the file corresponding to that module. The
> last component of the pathname may be useful in identifying the
> resource. Ie., 'os.path.split(__file__)[1]'.
>
> 2. For a particular request, you can access "req.filename". This is the
> physical resource as identified by Apache as being the target of a
> request. Again, the last component of the pathname maybe useful.
>
> 3. Especially if you are using mod_python.publisher, req.path_info may
> be useful. The value of this is what is used to identify the actual
> function which is being executed.
>
> Is what you are after the resource name as identified by a URI, or the
> name of the particular function which was mapped to and called by
> mod_python or some extension for mod_python, such as will be the case
> with mod_python.publisher?
>
> Graham
>
>
>



From mcdanelz at gmail.com  Fri Sep 16 13:13:17 2005
From: mcdanelz at gmail.com (Zach McDanel)
Date: Fri Sep 16 13:13:47 2005
Subject: [mod_python] Initial testing fails
Message-ID: <f19dbfd441d08c56d27f866e0418f041@gmail.com>

Sgi Irix 6.5.28

apache 2.0.54

Python 2.4.1

mod_python 3.1.4


I'm getting the 500 error page when I run the hello world test page
and here's an excerpt from the apache error log, from what I saw on the 
archives someone suggested a path problem I don't think this is the 
case here however.

[Thu Sep 15 22:19:46 2005] [error] make_obcallback: could not import 
mod_python.apache.\n
Traceback (most recent call last):
   File "/usr/local/lib/python2.4/site-packages/mod_python/apache.py", 
line 22, in ?
     import time
ImportError: 254116:/usr/local/apache/bin/httpd: rld: Fatal Error: 
unresolvable symbol in /usr/local/lib/python2.4/lib-dynload/time.so: 
Py_IgnoreEnvironmentFlag

From steve at rueb.com  Fri Sep 16 15:07:13 2005
From: steve at rueb.com (Steve Bergman)
Date: Fri Sep 16 15:07:19 2005
Subject: [mod_python] Best practices for coding in mod_python?
Message-ID: <432B17E1.6040209@rueb.com>

I'm new to mod_python and mediumly new to python, as well.  I really 
like what I see.  The python philosopy of  of simplicity and clarity 
really appeals to me.

However, I'm a little frustrated, partly because I'm still at the stage 
that I have to go to the reference manuals every 2 or 3 lines of code.

However, I am working on rewriting a php application in mod_python as a 
learning project.  I'd like it to come out well enough that I can 
actually replace the php version with the mod_python version after I'm done.

There are a number of things related to my general approach of which I 
am uncertain.  e.g. I'm using publisher.  I think that is the right 
choice, but I'm not sure.  Then there are lots of things involving 
coding techniques and style of which I am uncertain.  e.g. for a funtion 
or method to write something to the browser, the return value has to 
propagate back up to main and get returned from their, right?  Or it 
just occurred to me I might could use req.write()?  But is that a good 
thig to do?  If so, when.

It's not so much that I have not found ways to do what I want to do, but 
I'm uncomfortable with my style and technique.

There seems to be something of a dearth of books with titles like: 
Writing Beautifully Coded Web Applications With Mod_PHP and PostgreSQL".

Does anyone have any recommendations as to sources of solidly coded 
mod_python apps to review.  Or perhaps a good tips and tricks document?

Thank you for any advice,
Steve Bergman

(And thanks Jason and Jim for your help on my session handling question.)
From list at joreybump.com  Fri Sep 16 15:46:55 2005
From: list at joreybump.com (Jorey Bump)
Date: Fri Sep 16 15:47:05 2005
Subject: [mod_python] Best practices for coding in mod_python?
In-Reply-To: <432B17E1.6040209@rueb.com>
References: <432B17E1.6040209@rueb.com>
Message-ID: <432B212F.80605@joreybump.com>

Steve Bergman wrote:

> There are a number of things related to my general approach of which I 
> am uncertain.  e.g. I'm using publisher.  I think that is the right 
> choice, but I'm not sure.  Then there are lots of things involving 
> coding techniques and style of which I am uncertain.  e.g. for a funtion 
> or method to write something to the browser, the return value has to 
> propagate back up to main and get returned from their, right?  Or it 
> just occurred to me I might could use req.write()?  But is that a good 
> thig to do?  If so, when.

When using publisher, it's sufficient to simply return a string. The 
Content-Type is set automatically to text/html if the string looks like 
HTML, text/plain if it doesn't. I've never found the need for 
req.write() with publisher, but I suppose it could be used to avoid 
consuming too much memory when building very large pages.

From akonsu at gmail.com  Fri Sep 16 16:55:15 2005
From: akonsu at gmail.com (akonsu)
Date: Fri Sep 16 16:55:21 2005
Subject: [mod_python] Best practices for coding in mod_python?
In-Reply-To: <432B17E1.6040209@rueb.com>
References: <432B17E1.6040209@rueb.com>
Message-ID: <acfb5bdc05091613559e7024c@mail.gmail.com>

2005/9/16, Steve Bergman <steve@rueb.com>:
> 
> There are a number of things related to my general approach of which I
> am uncertain.  e.g. I'm using publisher.  I think that is the right
> choice, but I'm not sure.  Then there are lots of things involving
>
judging from its source code, publisher handler is just a wrapper
around your code. all it does is finds your file and invokes a
procedure on it. not much extra functionality. so i would say it is up
to the developer to decide whether it is worthwhile to use it.
>
> coding techniques and style of which I am uncertain.  e.g. for a funtion
> or method to write something to the browser, the return value has to
> propagate back up to main and get returned from their, right?  Or it
>
right, just like in any programming code, if the return value is
generated in some internal procedure, it has to be propagated to the
caller and returned from there.
>
> just occurred to me I might could use req.write()?  But is that a good
> thig to do?  If so, when.
> 
so, returning a string from your procedure to the publisher handler
which then will use req.write to output it versus just using req.write
yourself is a question of how clear you want your code to be. it does
not really matter which method you use. this is similar to a question
of whether your code can generate console output in just one single
place or whether it can be done everywhere in the code.
>
> It's not so much that I have not found ways to do what I want to do, but
> I'm uncomfortable with my style and technique.
>
hope this helps...

From trevorw at qalabs.com  Fri Sep 16 17:21:45 2005
From: trevorw at qalabs.com (Trevor West)
Date: Fri Sep 16 17:18:04 2005
Subject: [mod_python] XML - RPC help
Message-ID: <432B3769.2070309@qalabs.com>

Hello everyone:

Machine:  x86 Fedora Core 2
                Apache 2.0
                Mod_python 3.1
                Python 2.3
               


Here's my problem, I'm starting on a new project and for this one I'm 
supposed to use a CGI based XML-RPC server to accept communications from 
a java applet. I understand how XML-RPC works and have many fine 
examples working, what I can't seem to get working is the CGI part. For 
whatever reason the CGI's won't work on the Fedora Core 2 linux server.

I'm currently just trying the example given here: 
http://docs.python.org/lib/node556.html and it works on my Windows box 
but not on the linux box.

The error I get in my Apache log is:
[Fri Sep 16 14:19:56 2005] [error] [client 172.16.38.221] (2)No such 
file or directory: exec of 
'/usr/local/apache2/cgi-bin/example4_server.py' failed
[Fri Sep 16 14:19:56 2005] [error] [client 172.16.38.221] Premature end 
of script headers: example4_server.py

Now does anyone know why this is happening? Do I need special lines in 
my httpd.conf file for the CGI's? Here's my current cgi-bin setup:

<Directory "/usr/local/apache2/cgi-bin">
    AllowOverride None
    Options None
    Order allow,deny
    Allow from all
</Directory>

I do have the line to load the mod_python and I use the publisher in my 
main htdocs.

So any ideas?

Cheers

Trevor




From nicolas.lehuen at gmail.com  Sat Sep 17 02:41:35 2005
From: nicolas.lehuen at gmail.com (Nicolas Lehuen)
Date: Sat Sep 17 02:41:42 2005
Subject: [mod_python] XML - RPC help
In-Reply-To: <432B3769.2070309@qalabs.com>
References: <432B3769.2070309@qalabs.com>
Message-ID: <c298f2d70509162341763a6603@mail.gmail.com>

Hi,

Apparently you need to put a proper script header (on the first line of your 
script) with the path to the Python interpreter for the CGI to work, 
something along the lines of :

#!/path/to/python/executable

Or :

#!/usr/bin/env python


Now, to write CGIs, you don't need mod_python at all, actually in your setup 
mod_python is not used !

Regards,
Nicolas

2005/9/16, Trevor West <trevorw@qalabs.com>:
> 
> Hello everyone:
> 
> Machine: x86 Fedora Core 2
> Apache 2.0
> Mod_python 3.1
> Python 2.3
> 
> 
> 
> Here's my problem, I'm starting on a new project and for this one I'm
> supposed to use a CGI based XML-RPC server to accept communications from
> a java applet. I understand how XML-RPC works and have many fine
> examples working, what I can't seem to get working is the CGI part. For
> whatever reason the CGI's won't work on the Fedora Core 2 linux server.
> 
> I'm currently just trying the example given here:
> http://docs.python.org/lib/node556.html and it works on my Windows box
> but not on the linux box.
> 
> The error I get in my Apache log is:
> [Fri Sep 16 14:19:56 2005] [error] [client 172.16.38.221<http://172.16.38.221>] 
> (2)No such
> file or directory: exec of
> '/usr/local/apache2/cgi-bin/example4_server.py' failed
> [Fri Sep 16 14:19:56 2005] [error] [client 172.16.38.221<http://172.16.38.221>] 
> Premature end
> of script headers: example4_server.py
> 
> Now does anyone know why this is happening? Do I need special lines in
> my httpd.conf file for the CGI's? Here's my current cgi-bin setup:
> 
> <Directory "/usr/local/apache2/cgi-bin">
> AllowOverride None
> Options None
> Order allow,deny
> Allow from all
> </Directory>
> 
> I do have the line to load the mod_python and I use the publisher in my
> main htdocs.
> 
> So any ideas?
> 
> Cheers
> 
> Trevor
> 
> 
> 
> 
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20050917/8ff42dfb/attachment.html
From grahamd at dscpl.com.au  Sat Sep 17 07:25:42 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Sat Sep 17 07:26:46 2005
Subject: [mod_python] Persistent web-service
In-Reply-To: <4329AE37.2090006@bbm.de>
References: <5671A82225F9@underdog>
	<792d5fd4ba457bf212e1160bc1ba2f9c@dscpl.com.au>
	<4329AE37.2090006@bbm.de>
Message-ID: <a3c0da1af2d847c10c9e5037c51d3014@dscpl.com.au>


On 16/09/2005, at 3:24 AM, Zsolt Barat wrote:

> Graham Dumpleton wrote:
>
>> Still using a separate backend service process or framework is still
>> probably preferable, with the handlers using XML-RPC or some other
>> messaging system mechanism to communicate with it. You still have the
>> issue of having to ensure the backend service is started, but then it
>> also means your backend service isn't really dependent on Apache and
>> you could use other means to communicate with it. Ie., Apache just
>> becomes one type of interface.
>>
> hi,
> this is interesting. i just try to make something like this. a tiny
> webapplication which connects to a serial port and issues some
> datarequest. are they already some recommended frameworks (xml-rpc) you
> aware of which deal with this issue? sample apps?

Depends on your requirements and how complicated you need to make your
server. Simplest means of making a standalone XML-RPC server is with the
SimpleXMLRPCServer module supplied with Python. This may though not be
adequate for an event driven system which needs to deal with a serial
port as well as handle XML-RPC requests.

A more complicated system which you might look at is Twisted. See:

   http://twistedmatrix.com/

It has all manner of stuff for building event driven systems and also
has components for handling XML-RPC requests which can be used to drive
and control other parts of the system.

Graham

From trevorw at qalabs.com  Sat Sep 17 13:51:09 2005
From: trevorw at qalabs.com (Trevor West)
Date: Sat Sep 17 13:48:17 2005
Subject: [mod_python] XML - RPC help
In-Reply-To: <c298f2d70509162341763a6603@mail.gmail.com>
References: <432B3769.2070309@qalabs.com>
	<c298f2d70509162341763a6603@mail.gmail.com>
Message-ID: <432C578D.1040202@qalabs.com>

Hi, thanks for the response

I have tried

#!/usr/bin/python and #!python
and got in the error logs
[Sat Sep 17 10:28:53 2005] [error] [client 172.16.38.221] (2)No such 
file or directory: exec of 
'/usr/local/apache2/cgi-bin/example4_server.py' failed


Tried
#!/usr/bin/env python
and got
[Sat Sep 17 10:27:25 2005] [error] [client 172.16.38.221] /usr/bin/env: 
python\r: Permission denied
I checked and env is read and executable for everyone.

I think you are right the first line is the problem, but now I'm stuck 
as to what it should be.

Cheers

Trevor



Nicolas Lehuen wrote:

> Hi,
>
> Apparently you need to put a proper script header (on the first line 
> of your script) with the path to the Python interpreter for the CGI to 
> work, something along the lines of :
>
> #!/path/to/python/executable
>
> Or :
>
>|#!/usr/bin/env python|
>
>
> Now, to write CGIs, you don't need mod_python at all, actually in your 
> setup mod_python is not used  !
>
> Regards,
> Nicolas
>
> 2005/9/16, Trevor West <trevorw@qalabs.com <mailto:trevorw@qalabs.com>>:
>
>     Hello everyone:
>
>     Machine:  x86 Fedora Core 2
>                     Apache 2.0
>                     Mod_python 3.1
>                     Python 2.3
>
>
>
>     Here's my problem, I'm starting on a new project and for this one I'm
>     supposed to use a CGI based XML-RPC server to accept
>     communications from
>     a java applet. I understand how XML-RPC works and have many fine
>     examples working, what I can't seem to get working is the CGI
>     part. For
>     whatever reason the CGI's won't work on the Fedora Core 2 linux
>     server.
>
>     I'm currently just trying the example given here:
>     http://docs.python.org/lib/node556.html
>     <http://docs.python.org/lib/node556.html> and it works on my
>     Windows box
>     but not on the linux box.
>
>     The error I get in my Apache log is:
>     [Fri Sep 16 14:19:56 2005] [error] [client 172.16.38.221
>     <http://172.16.38.221>] (2)No such
>     file or directory: exec of
>     '/usr/local/apache2/cgi-bin/example4_server.py' failed
>     [Fri Sep 16 14:19:56 2005] [error] [client 172.16.38.221
>     <http://172.16.38.221>] Premature end
>     of script headers: example4_server.py
>
>     Now does anyone know why this is happening? Do I need special
>     lines in
>     my httpd.conf file for the CGI's? Here's my current cgi-bin setup:
>
>     <Directory "/usr/local/apache2/cgi-bin">
>         AllowOverride None
>         Options None
>         Order allow,deny
>         Allow from all
>     </Directory>
>
>     I do have the line to load the mod_python and I use the publisher
>     in my
>     main htdocs.
>
>     So any ideas?
>
>     Cheers
>
>     Trevor
>
>
>
>
>     _______________________________________________
>     Mod_python mailing list
>     Mod_python@modpython.org <mailto:Mod_python@modpython.org>
>     http://mailman.modpython.org/mailman/listinfo/mod_python
>     <http://mailman.modpython.org/mailman/listinfo/mod_python>
>
>
From nicolas.lehuen at gmail.com  Sat Sep 17 14:34:40 2005
From: nicolas.lehuen at gmail.com (Nicolas Lehuen)
Date: Sat Sep 17 14:34:46 2005
Subject: [mod_python] XML - RPC help
In-Reply-To: <432C578D.1040202@qalabs.com>
References: <432B3769.2070309@qalabs.com>
	<c298f2d70509162341763a6603@mail.gmail.com>
	<432C578D.1040202@qalabs.com>
Message-ID: <c298f2d7050917113433da23ff@mail.gmail.com>

Looks like the problem is not about /usr/bin/env acces rights, but rather 
those of python. Can the user account Apache is running in launch python ?

Regards,
Nicolas

2005/9/17, Trevor West <trevorw@qalabs.com>:
> 
> Hi, thanks for the response
> 
> I have tried
> 
> #!/usr/bin/python and #!python
> and got in the error logs
> [Sat Sep 17 10:28:53 2005] [error] [client 172.16.38.221<http://172.16.38.221>] 
> (2)No such
> file or directory: exec of
> '/usr/local/apache2/cgi-bin/example4_server.py' failed
> 
> 
> Tried
> #!/usr/bin/env python
> and got
> [Sat Sep 17 10:27:25 2005] [error] [client 172.16.38.221<http://172.16.38.221>] 
> /usr/bin/env:
> python\r: Permission denied
> I checked and env is read and executable for everyone.
> 
> I think you are right the first line is the problem, but now I'm stuck
> as to what it should be.
> 
> Cheers
> 
> Trevor
> 
> 
> 
> Nicolas Lehuen wrote:
> 
> > Hi,
> >
> > Apparently you need to put a proper script header (on the first line
> > of your script) with the path to the Python interpreter for the CGI to
> > work, something along the lines of :
> >
> > #!/path/to/python/executable
> >
> > Or :
> >
> >|#!/usr/bin/env python|
> >
> >
> > Now, to write CGIs, you don't need mod_python at all, actually in your
> > setup mod_python is not used !
> >
> > Regards,
> > Nicolas
> >
> > 2005/9/16, Trevor West <trevorw@qalabs.com <mailto:trevorw@qalabs.com>>:
> >
> > Hello everyone:
> >
> > Machine: x86 Fedora Core 2
> > Apache 2.0
> > Mod_python 3.1
> > Python 2.3
> >
> >
> >
> > Here's my problem, I'm starting on a new project and for this one I'm
> > supposed to use a CGI based XML-RPC server to accept
> > communications from
> > a java applet. I understand how XML-RPC works and have many fine
> > examples working, what I can't seem to get working is the CGI
> > part. For
> > whatever reason the CGI's won't work on the Fedora Core 2 linux
> > server.
> >
> > I'm currently just trying the example given here:
> > http://docs.python.org/lib/node556.html
> > <http://docs.python.org/lib/node556.html> and it works on my
> > Windows box
> > but not on the linux box.
> >
> > The error I get in my Apache log is:
> > [Fri Sep 16 14:19:56 2005] [error] [client 172.16.38.221<http://172.16.38.221>
> > <http://172.16.38.221>] (2)No such
> > file or directory: exec of
> > '/usr/local/apache2/cgi-bin/example4_server.py' failed
> > [Fri Sep 16 14:19:56 2005] [error] [client 172.16.38.221<http://172.16.38.221>
> > <http://172.16.38.221>] Premature end
> > of script headers: example4_server.py
> >
> > Now does anyone know why this is happening? Do I need special
> > lines in
> > my httpd.conf file for the CGI's? Here's my current cgi-bin setup:
> >
> > <Directory "/usr/local/apache2/cgi-bin">
> > AllowOverride None
> > Options None
> > Order allow,deny
> > Allow from all
> > </Directory>
> >
> > I do have the line to load the mod_python and I use the publisher
> > in my
> > main htdocs.
> >
> > So any ideas?
> >
> > Cheers
> >
> > Trevor
> >
> >
> >
> >
> > _______________________________________________
> > Mod_python mailing list
> > Mod_python@modpython.org <mailto:Mod_python@modpython.org>
> > http://mailman.modpython.org/mailman/listinfo/mod_python
> > <http://mailman.modpython.org/mailman/listinfo/mod_python>
> >
> >
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20050917/1860f587/attachment.html
From trevor at thennion.demon.co.uk  Sat Sep 17 15:28:24 2005
From: trevor at thennion.demon.co.uk (Trevor Hennion)
Date: Sat Sep 17 15:29:08 2005
Subject: [Fwd: Re: [mod_python] XML - RPC help]
Message-ID: <432C6E58.8060407@thennion.demon.co.uk>


-------------- next part --------------
An embedded message was scrubbed...
From: Trevor Hennion <trevor@thennion.demon.co.uk>
Subject: Re: [mod_python] XML - RPC help
Date: Sat, 17 Sep 2005 20:10:49 +0100
Size: 3802
Url: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20050917/fe724365/mod_pythonXML-RPChelp.mht
From edhotchkiss at gmail.com  Sat Sep 17 15:40:17 2005
From: edhotchkiss at gmail.com (Ed Hotchkiss)
Date: Sat Sep 17 15:40:23 2005
Subject: [mod_python] MySQLdb error - PLEASE SAVE ME!
Message-ID: <d1bf1fa2050917124069a4ff61@mail.gmail.com>

Ok. I am trying to read a csv file with three strings separated by commas.
I am trying to insert them into a MySQL DB online.
MySQLdb is installed, no problems.

I think that I am having some kind of error with my csv going into the
fields and being broken apart correctly. Can someone please help? I
attached the code below, it does work with that SQL server also if you
want to try and run it. Thanks in advance ..

-----

# Script to add links from a comma deliminated file to a MySQL database
# 9/16/05

import MySQLdb

conn=MySQLdb.connect( host="www.freesql.org",
user="edhotchkiss",
port=3306,
passwd="test1",
     db="links")

cursor = conn.cursor()
stmt = "DROP TABLE IF EXISTS links"
cursor.execute(stmt)
stmt = """CREATE TABLE links (
    ID INT NOT NULL,
    Name TEXT,
    URL LONGTEXT,
    Category LONGTEXT,
    primary key (ID)
)"""
cursor.execute(stmt)


arr=[]
inp = open ("sites1.txt","r")
#read line into array
for line in inp.readlines():
    links = map(str, line.split(","))
    arr.append(links)
    cursor.execute ("""
INSERT INTO links (Name, URL, category)
    VALUES (%s, %s, %s)""" % tuple(links[0:3])
        )
cursor.close()
conn.close()


-- 
edward hotchkiss
-------------- next part --------------

# Script to add links from a comma deliminated file to a MySQL database
# 9/16/05

import MySQLdb

conn=MySQLdb.connect(	host="www.freesql.org",
			user="edhotchkiss",
			port=3306,
			passwd="test1",
	    		db="links")

cursor = conn.cursor()
stmt = "DROP TABLE IF EXISTS links"
cursor.execute(stmt)
stmt = """CREATE TABLE links (
    ID INT NOT NULL,
    Name TEXT,
    URL LONGTEXT,
    Category LONGTEXT,
    primary key (ID)
)"""
cursor.execute(stmt)


arr=[]
inp = open ("sites1.txt","r")
#read line into array
for line in inp.readlines():
    links = map(str, line.split(","))
    arr.append(links)
    cursor.execute ("""
	INSERT INTO links (Name, URL, category)
	    VALUES (%s, %s, %s)""" % tuple(links[0:3])
        )
cursor.close()
conn.close()








          
-------------- next part --------------
O'reilly Python Archive,http://python.oreilly.com/archive.html,python
Python Tutorials,http://www.awaretek.com/tutorials.html,python
MySQL Python,http://sourceforge.net/projects/mysql-python,python
Python Vaults of Parnassus,http://www.vex.net/parnassus/,python
PyCrypto,http://www.amk.ca/python/code/crypto,Python
From jg.lists at sympatico.ca  Sat Sep 17 16:35:48 2005
From: jg.lists at sympatico.ca (Jim Gallacher)
Date: Sat Sep 17 16:28:56 2005
Subject: [mod_python] MySQLdb error - PLEASE SAVE ME!
In-Reply-To: <d1bf1fa2050917124069a4ff61@mail.gmail.com>
References: <d1bf1fa2050917124069a4ff61@mail.gmail.com>
Message-ID: <432C7E24.9070706@sympatico.ca>

Can you be a little more specific about the errors you're seeing? 
Tracebacks? Input data? Is anything getting inserted into the table?

Jim

Ed Hotchkiss wrote:
> Ok. I am trying to read a csv file with three strings separated by commas.
> I am trying to insert them into a MySQL DB online.
> MySQLdb is installed, no problems.
> 
> I think that I am having some kind of error with my csv going into the
> fields and being broken apart correctly. Can someone please help? I
> attached the code below, it does work with that SQL server also if you
> want to try and run it. Thanks in advance ..
> 
> -----
> 
> # Script to add links from a comma deliminated file to a MySQL database
> # 9/16/05
> 
> import MySQLdb
> 
> conn=MySQLdb.connect( host="www.freesql.org",
> user="edhotchkiss",
> port=3306,
> passwd="test1",
>      db="links")
> 
> cursor = conn.cursor()
> stmt = "DROP TABLE IF EXISTS links"
> cursor.execute(stmt)
> stmt = """CREATE TABLE links (
>     ID INT NOT NULL,
>     Name TEXT,
>     URL LONGTEXT,
>     Category LONGTEXT,
>     primary key (ID)
> )"""
> cursor.execute(stmt)
> 
> 
> arr=[]
> inp = open ("sites1.txt","r")
> #read line into array
> for line in inp.readlines():
>     links = map(str, line.split(","))
>     arr.append(links)
>     cursor.execute ("""
> INSERT INTO links (Name, URL, category)
>     VALUES (%s, %s, %s)""" % tuple(links[0:3])
>         )
> cursor.close()
> conn.close()
> 
> 
> 
> 
> ------------------------------------------------------------------------
> 
> 
> # Script to add links from a comma deliminated file to a MySQL database
> # 9/16/05
> 
> import MySQLdb
> 
> conn=MySQLdb.connect(	host="www.freesql.org",
> 			user="edhotchkiss",
> 			port=3306,
> 			passwd="test1",
> 	    		db="links")
> 
> cursor = conn.cursor()
> stmt = "DROP TABLE IF EXISTS links"
> cursor.execute(stmt)
> stmt = """CREATE TABLE links (
>     ID INT NOT NULL,
>     Name TEXT,
>     URL LONGTEXT,
>     Category LONGTEXT,
>     primary key (ID)
> )"""
> cursor.execute(stmt)
> 
> 
> arr=[]
> inp = open ("sites1.txt","r")
> #read line into array
> for line in inp.readlines():
>     links = map(str, line.split(","))
>     arr.append(links)
>     cursor.execute ("""
> 	INSERT INTO links (Name, URL, category)
> 	    VALUES (%s, %s, %s)""" % tuple(links[0:3])
>         )
> cursor.close()
> conn.close()
> 
> 
> 
> 
> 
> 
> 
> 
>           
> 
> 
> ------------------------------------------------------------------------
> 
> O'reilly Python Archive,http://python.oreilly.com/archive.html,python
> Python Tutorials,http://www.awaretek.com/tutorials.html,python
> MySQL Python,http://sourceforge.net/projects/mysql-python,python
> Python Vaults of Parnassus,http://www.vex.net/parnassus/,python
> PyCrypto,http://www.amk.ca/python/code/crypto,Python
> 
> 
> ------------------------------------------------------------------------
> 
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python

From eric at ericwalstad.com  Sat Sep 17 16:35:49 2005
From: eric at ericwalstad.com (Eric Walstad)
Date: Sat Sep 17 16:36:21 2005
Subject: [mod_python] MySQLdb error - PLEASE SAVE ME!
In-Reply-To: <d1bf1fa2050917124069a4ff61@mail.gmail.com>
References: <d1bf1fa2050917124069a4ff61@mail.gmail.com>
Message-ID: <200509171335.49698.eric@ericwalstad.com>

On Saturday 17 September 2005 12:40 pm, Ed Hotchkiss wrote:
[snip]
> stmt = """CREATE TABLE links (
>     ID INT NOT NULL,
>     Name TEXT,
>     URL LONGTEXT,
>     Category LONGTEXT,
>     primary key (ID)
> )"""
> cursor.execute(stmt)
>
>
> arr=[]
> inp = open ("sites1.txt","r")
> #read line into array

> for line in inp.readlines():
>     links = map(str, line.split(","))
>     arr.append(links)
>     cursor.execute ("""
> INSERT INTO links (Name, URL, category)
>     VALUES (%s, %s, %s)""" % tuple(links[0:3])
>         )
> cursor.close()
> conn.close()

Perhaps this is a bit naive but would this do it for you (you didn't 
say what error(s) you are getting)?

uid = 0
for line in inp.readlines():
    uid += 1
    links = map(str, line.split(","))
    arr.append(links)
    cursor.execute ("""
INSERT INTO links (ID, Name, URL, Category)
    VALUES (%d, "%s", "%s", "%s")""" % \
        (uid, links[0], links[1], links[2])
        )

The differences are:
 - Your table def doesn't specify an auto-incrementing id and won't 
allow null values so we need to insert a number.
 - Quotes around the string data.  I this might not be needed.  I'm 
not sure if MySQLdb does it for you.
 - I think MySQL is sensitive to case, so I changed 'category' to 
'Category'.
From list.mod_python at docwhat.gerf.org  Sat Sep 17 16:52:38 2005
From: list.mod_python at docwhat.gerf.org (The Doctor What)
Date: Sat Sep 17 16:53:08 2005
Subject: [mod_python] Re: apachectl restart == dead mod_python
In-Reply-To: <d35dfb664504a165eb485ad4c2d17c93@dscpl.com.au>
References: <20050909014349.GA20189@gerf.org>
	<e37d987757c86e27eb5af86e7c8e9fef@dscpl.com.au>
	<20050909145758.GA16400@gerf.org> <4326E14C.6080502@gerf.org>
	<d35dfb664504a165eb485ad4c2d17c93@dscpl.com.au>
Message-ID: <20050917205238.GA6160@gerf.org>

Thank you for taking the time to reply even though your are on
holidays.

I did not mean to be impatient and had no idea that you were on
vacation.  I apologize.

I have downloaded and tried 3.2.0 beta and it does indeed fix the
problem with respect to mptest.py.  I am now thinking about how I
should handle this.

Since I use Debian, I would to prefer to use (at least) something
packaged for Debian.  I think I'll take stab at wrapping up my own
.deb.

If there is something I can do to help you further track this down,
don't hesitate to email me.

Thanks again!

Ciao!

* Graham Dumpleton (grahamd@dscpl.com.au) [050914 22:30]:
> We don't always have immediate answers nor the time to look at things
> straight away. For me personally, I am actually on holidays in a foreign
> country and haven't had Internet access for about 5 days. I only have it
> now because I found an unsecured wireless connection.
> 
> Thus, be patient. I have another 100+ messages to catch up on. Your
> problem isn't simple so I will be flagging it for later.
> 
> Things you should at least do are try the latest mod_python 3.2 beta
> available from:
> 
>   http://www.modpython.org/dist/
> 
> You should also do a good search back through the mailing list archives
> as I do vaguely recollect a similar problem mentioned before. You can
> search the mailing list archive from the mod_python home page search  
> box.
> 
> Graham
> 
> On 14/09/2005, at 12:25 AM, Christian Holtje wrote:
> 
> >Hi Graham and the mod_python gang.
> >
> >Is no one going to respond to this?  More info was asked for and I
> >gathered it...
> >
> >Ciao!
> >
> >The Doctor What wrote:
> >
> >>* Graham Dumpleton (grahamd@dscpl.com.au) [050908 21:06]:
> >>
> >>
> >>>On 09/09/2005, at 11:43 AM, The Doctor What wrote:
> >>>
> >>>
> >>>
> >>>>Hello!
> >>>>
> >>>>I have apache2 2.0.54, mod_python 3.1.3, python 2.3.5 (Debian
> >>>>Sarge).
> >>>>
> >>>>I can start up apache2 and the mod_python pages work fine.
> >>>>
> >>>>However, if I then do apachectl restart, the mod_python pages hang
> >>>>forever.  Frozen.  Eventually I get a timeout message in my browser.
> >>>>The apache children do not die readily and require extra time to
> >>>>clean up. :-(
> >>>>
> >>>>I full stop/start works everytime but in not a desirable solution
> >>>>for a live server with multiple domains.  In addition, I'd have to
> >>>>change all the log rotation stuff, etc.
> >>>>
> >>>>I particularly interested in TRAC, but it seems to be a generic
> >>>>problem. I want to get PSE on my server, too.
> >>>>
> >>>>Is there some option I'm not including or something?
> >>>>
> >>>>
> >>>Is this happening with a really simple mod_python handler, ie.,
> >>>something like mptest, or something more complicated? Ie., can
> >>>you be sure it isn't the handler code itself is causing the
> >>>problem?
> >>>
> >>>What mode is Apache running in, "prefork" or "worker"?
> >>>
> >>>Do you get any messages in the Apache error log file which may be
> >>>pertinent?
> >>>
> >>>
> >>
> >>Hi Graham! Thanks for replying. :-)
> >>
> >>I set up the mptest.py and got the following behaviour:
> >> * After setting up the configuration directives, I did a complete
> >>   restart (stop-start). The mptest.py worked correctly.
> >> * I then did a reload (kill -HUP aka graceful) on apache.
> >>   mptest.py then returned 500s for the first few times, then the
> >>   apache server stopped responding to that page. Other pages work
> >>   fine.  No logs are generated other than access logs.
> >> * To recover, a full restart is needed (stop-start).  It takes
> >>   work to kill some of the children.  It's obvious that they
> >>   are hung somehow.
> >>
> >>See the attached file "experiment" for a full log of my tests.
> >>
> >>The apache server is running in "prefork" mode.
> >>
> >>Ciao!
> >>
> >>
> >>---------------------------------------------------------------------- 
> >>--
> >>
> >>Script started on Fri Sep  9 09:38:53 2005
> >>docwhat % sudo /etc/init.d/apache2 restart
> >>Forcing reload of web server: Apache2.
> >>docwhat % lynx -source http://gerf.org/test/mptest.py
> >>Hello World!
> >>docwhat % lynx -source http://gerf.org/test/mptest.py
> >>Hello World!
> >>docwhat % lynx -source http://gerf.org/test/mptest.py
> >>Hello World!
> >>docwhat % lynx -source http://gerf.org/test/mptest.py
> >>Hello World!
> >>docwhat % lynx -source http://gerf.org/test/mptest.py
> >>Hello World!
> >>docwhat % lynx -source http://gerf.org/test/mptest.py
> >>Hello World!
> >>docwhat % lynx -source http://gerf.org/test/mptest.py
> >>Hello World!
> >>docwhat % lynx -source http://gerf.org/test/mptest.py
> >>Hello World!
> >>docwhat % lynx -source http://gerf.org/test/mptest.py
> >>Hello World!
> >>docwhat % lynx -source http://gerf.org/test/mptest.py
> >>Hello World!
> >>docwhat % sudo /etc/init.d/apache2 reload
> >>Reloading web server config...done.
> >>docwhat % lynx -source http://gerf.org/test/mptest.py
> >><?xml version="1.0" encoding="ISO-8859-1"?>
> >><!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
> >> "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
> >><html xmlns="http://www.w3.org/1999/xhtml" lang="en" xml:lang="en">
> >><head>
> >><title>Server error!</title>
> >><link rev="made" href="mailto:%5bno%20address%20given%5d" />
> >><style type="text/css"><!--/*--><![CDATA[/*><!--*/
> >>   body { color: #000000; background-color: #FFFFFF; }
> >>   a:link { color: #0000CC; }
> >>   p, address {margin-left: 3em;}
> >>   span {font-size: smaller;}
> >>/*]]>*/--></style>
> >></head>
> >>
> >><body>
> >><h1>Server error!</h1>
> >><p>
> >>
> >>
> >>
> >>
> >>   The server encountered an internal error and was
> >>   unable to complete your request. Either the server is
> >>   overloaded or there was an error in a CGI script.
> >>
> >>
> >>
> >></p>
> >><p>
> >>If you think this is a server error, please contact
> >>the <a href="mailto:%5bno%20address%20given%5d">webmaster</a>.
> >>
> >></p>
> >>
> >><h2>Error 500</h2>
> >><address>
> >> <a href="/">gerf.org</a><br />
> >>
> >> <span>Fri Sep  9 09:39:58 2005<br />
> >> Apache/2.0.54 (Debian GNU/Linux) DAV/2 SVN/1.1.4 mod_fastcgi/2.4.2  
> >>mod_python/3.1.3 Python/2.3.5 PHP/4.3.10-16 mod_ssl/2.0.54  
> >>OpenSSL/0.9.7e</span>
> >></address>
> >></body>
> >></html>
> >>
> >>docwhat % lynx -source http://gerf.org/test/mptest.py
> >><?xml version="1.0" encoding="ISO-8859-1"?>
> >><!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
> >> "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
> >><html xmlns="http://www.w3.org/1999/xhtml" lang="en" xml:lang="en">
> >><head>
> >><title>Server error!</title>
> >><link rev="made" href="mailto:%5bno%20address%20given%5d" />
> >><style type="text/css"><!--/*--><![CDATA[/*><!--*/
> >>   body { color: #000000; background-color: #FFFFFF; }
> >>   a:link { color: #0000CC; }
> >>   p, address {margin-left: 3em;}
> >>   span {font-size: smaller;}
> >>/*]]>*/--></style>
> >></head>
> >>
> >><body>
> >><h1>Server error!</h1>
> >><p>
> >>
> >>
> >>
> >>
> >>   The server encountered an internal error and was
> >>   unable to complete your request. Either the server is
> >>   overloaded or there was an error in a CGI script.
> >>
> >>
> >>
> >></p>
> >><p>
> >>If you think this is a server error, please contact
> >>the <a href="mailto:%5bno%20address%20given%5d">webmaster</a>.
> >>
> >></p>
> >>
> >><h2>Error 500</h2>
> >><address>
> >> <a href="/">gerf.org</a><br />
> >>
> >> <span>Fri Sep  9 09:39:59 2005<br />
> >> Apache/2.0.54 (Debian GNU/Linux) DAV/2 SVN/1.1.4 mod_fastcgi/2.4.2  
> >>mod_python/3.1.3 Python/2.3.5 PHP/4.3.10-16 mod_ssl/2.0.54  
> >>OpenSSL/0.9.7e</span>
> >></address>
> >></body>
> >></html>
> >>
> >>docwhat % lynx -source http://gerf.org/test/mptest.py
> >><?xml version="1.0" encoding="ISO-8859-1"?>
> >><!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
> >> "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
> >><html xmlns="http://www.w3.org/1999/xhtml" lang="en" xml:lang="en">
> >><head>
> >><title>Server error!</title>
> >><link rev="made" href="mailto:%5bno%20address%20given%5d" />
> >><style type="text/css"><!--/*--><![CDATA[/*><!--*/
> >>   body { color: #000000; background-color: #FFFFFF; }
> >>   a:link { color: #0000CC; }
> >>   p, address {margin-left: 3em;}
> >>   span {font-size: smaller;}
> >>/*]]>*/--></style>
> >></head>
> >>
> >><body>
> >><h1>Server error!</h1>
> >><p>
> >>
> >>
> >>
> >>
> >>   The server encountered an internal error and was
> >>   unable to complete your request. Either the server is
> >>   overloaded or there was an error in a CGI script.
> >>
> >>
> >>
> >></p>
> >><p>
> >>If you think this is a server error, please contact
> >>the <a href="mailto:%5bno%20address%20given%5d">webmaster</a>.
> >>
> >></p>
> >>
> >><h2>Error 500</h2>
> >><address>
> >> <a href="/">gerf.org</a><br />
> >>
> >> <span>Fri Sep  9 09:40:00 2005<br />
> >> Apache/2.0.54 (Debian GNU/Linux) DAV/2 SVN/1.1.4 mod_fastcgi/2.4.2  
> >>mod_python/3.1.3 Python/2.3.5 PHP/4.3.10-16 mod_ssl/2.0.54  
> >>OpenSSL/0.9.7e</span>
> >></address>
> >></body>
> >></html>
> >>
> >>docwhat % lynx -source http://gerf.org/test/mptest.py
> >><?xml version="1.0" encoding="ISO-8859-1"?>
> >><!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
> >> "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
> >><html xmlns="http://www.w3.org/1999/xhtml" lang="en" xml:lang="en">
> >><head>
> >><title>Server error!</title>
> >><link rev="made" href="mailto:%5bno%20address%20given%5d" />
> >><style type="text/css"><!--/*--><![CDATA[/*><!--*/
> >>   body { color: #000000; background-color: #FFFFFF; }
> >>   a:link { color: #0000CC; }
> >>   p, address {margin-left: 3em;}
> >>   span {font-size: smaller;}
> >>/*]]>*/--></style>
> >></head>
> >>
> >><body>
> >><h1>Server error!</h1>
> >><p>
> >>
> >>
> >>
> >>
> >>   The server encountered an internal error and was
> >>   unable to complete your request. Either the server is
> >>   overloaded or there was an error in a CGI script.
> >>
> >>
> >>
> >></p>
> >><p>
> >>If you think this is a server error, please contact
> >>the <a href="mailto:%5bno%20address%20given%5d">webmaster</a>.
> >>
> >></p>
> >>
> >><h2>Error 500</h2>
> >><address>
> >> <a href="/">gerf.org</a><br />
> >>
> >> <span>Fri Sep  9 09:40:01 2005<br />
> >> Apache/2.0.54 (Debian GNU/Linux) DAV/2 SVN/1.1.4 mod_fastcgi/2.4.2  
> >>mod_python/3.1.3 Python/2.3.5 PHP/4.3.10-16 mod_ssl/2.0.54  
> >>OpenSSL/0.9.7e</span>
> >></address>
> >></body>
> >></html>
> >>
> >>docwhat % lynx -source http://gerf.org/test/mptest.py
> >>
> >>docwhat % echo I pressed control c, it never came back.
> >>I pressed control c, it never came back.
> >>docwhat % sudo /etc/init.d/apache2 stop
> >>Stopping web server: Apache2.
> >>docwhat % sudo /etc/init.d/apache2 stop
> >>Stopping web server: Apache2 ... no pidfile found! not running?.
> >>docwhat % sudo /etc/init.d/apache2 start
> >>Starting web server: Apache2.
> >>docwhat % lynx -source http://gerf.org/test/mptest.py
> >>Hello World!
> >>Script done on Fri Sep  9 09:45:58 2005
> >>
> >>
> >>---------------------------------------------------------------------- 
> >>--
> >>
> >>_______________________________________________
> >>Mod_python mailing list
> >>Mod_python@modpython.org
> >>http://mailman.modpython.org/mailman/listinfo/mod_python
> >>
> >>
> 
From edhotchkiss at gmail.com  Sat Sep 17 16:58:01 2005
From: edhotchkiss at gmail.com (Ed Hotchkiss)
Date: Sat Sep 17 16:58:07 2005
Subject: [mod_python] MySQLdb error - PLEASE SAVE ME!
In-Reply-To: <200509171335.49698.eric@ericwalstad.com>
References: <d1bf1fa2050917124069a4ff61@mail.gmail.com>
	<200509171335.49698.eric@ericwalstad.com>
Message-ID: <d1bf1fa205091713581854494a@mail.gmail.com>

Thanks alot! I guess I don't even need arr (why did I have it there, no idea 
-)
The only thing I was wondering (the code is awesome, but I love to learn :P 
)
 Is UID a placeholder the ID? How do I have it automatically increment .. 
and is that a better idea, to autoincrement?
 Thanks again. It feels good to migrate completely to linux now, and 
transfer all of my access files to csv, then into mysql. 
  uid = 0
inp = open ("sites1.txt","r")
for line in inp.readlines():
uid += 1
links = map(str, line.split(","))
cursor.execute ("""
INSERT INTO links (ID, Name, URL, Category)
VALUES (%d, "%s", "%s", "%s")""" % \
(uid, links[0], links[1], links[2])
)

----
Also, what is the \ for after the % sign to the right of VALUES? thanks.
-edward
      On 9/17/05, Eric Walstad <eric@ericwalstad.com> wrote: 
> 
> On Saturday 17 September 2005 12:40 pm, Ed Hotchkiss wrote:
> [snip]
> > stmt = """CREATE TABLE links (
> > ID INT NOT NULL,
> > Name TEXT,
> > URL LONGTEXT,
> > Category LONGTEXT,
> > primary key (ID)
> > )"""
> > cursor.execute(stmt)
> >
> >
> > arr=[]
> > inp = open ("sites1.txt","r")
> > #read line into array
> 
> > for line in inp.readlines():
> > links = map(str, line.split(","))
> > arr.append(links)
> > cursor.execute ("""
> > INSERT INTO links (Name, URL, category)
> > VALUES (%s, %s, %s)""" % tuple(links[0:3])
> > )
> > cursor.close()
> > conn.close()
> 
> Perhaps this is a bit naive but would this do it for you (you didn't
> say what error(s) you are getting)?
> 
> uid = 0
> for line in inp.readlines():
> uid += 1
> links = map(str, line.split(","))
> arr.append(links)
> cursor.execute ("""
> INSERT INTO links (ID, Name, URL, Category)
> VALUES (%d, "%s", "%s", "%s")""" % \
> (uid, links[0], links[1], links[2])
> )
> 
> The differences are:
> - Your table def doesn't specify an auto-incrementing id and won't
> allow null values so we need to insert a number.
> - Quotes around the string data. I this might not be needed. I'm
> not sure if MySQLdb does it for you.
> - I think MySQL is sensitive to case, so I changed 'category' to
> 'Category'.
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
> 



-- 
edward hotchkiss
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20050917/97d08ced/attachment.html
From edhotchkiss at gmail.com  Sat Sep 17 17:16:20 2005
From: edhotchkiss at gmail.com (Ed Hotchkiss)
Date: Sat Sep 17 17:16:32 2005
Subject: [mod_python] MySQLdb error - PLEASE SAVE ME!
In-Reply-To: <d1bf1fa205091713581854494a@mail.gmail.com>
References: <d1bf1fa2050917124069a4ff61@mail.gmail.com>
	<200509171335.49698.eric@ericwalstad.com>
	<d1bf1fa205091713581854494a@mail.gmail.com>
Message-ID: <d1bf1fa205091714163d9f8408@mail.gmail.com>

Hmm ... Actually, now that I use it with a much longer file (the past file 
was like 6 links), this file is several hundred. I get this error now:
 >>> 
Traceback (most recent call last):
File "G:\Python\myCode\Links Database\addfromtext2.py", line 30, in ?
cursor.execute ("""
IndexError: list index out of range
>>> 
 I'm guessing that it has something to do with the primary index, "ID"? I 
tried auto increment, but no go with that too, same error ...


 On 9/17/05, Ed Hotchkiss <edhotchkiss@gmail.com> wrote: 
> 
>  Thanks alot! I guess I don't even need arr (why did I have it there, no 
> idea -)
> The only thing I was wondering (the code is awesome, but I love to learn 
> :P )
>  Is UID a placeholder the ID? How do I have it automatically increment .. 
> and is that a better idea, to autoincrement?
>  Thanks again. It feels good to migrate completely to linux now, and 
> transfer all of my access files to csv, then into mysql. 
>   uid = 0
> inp = open ("sites1.txt","r")
> for line in inp.readlines():
> uid += 1
> links = map(str, line.split(","))
> cursor.execute ("""
> INSERT INTO links (ID, Name, URL, Category) 
> VALUES (%d, "%s", "%s", "%s")""" % \
> (uid, links[0], links[1], links[2])
> )
> 
> ----
> Also, what is the \ for after the % sign to the right of VALUES? thanks.
> -edward
>        On 9/17/05, Eric Walstad <eric@ericwalstad.com> wrote: 
> > 
> > On Saturday 17 September 2005 12:40 pm, Ed Hotchkiss wrote:
> > [snip]
> > > stmt = """CREATE TABLE links ( 
> > > ID INT NOT NULL,
> > > Name TEXT,
> > > URL LONGTEXT,
> > > Category LONGTEXT,
> > > primary key (ID)
> > > )"""
> > > cursor.execute(stmt)
> > >
> > >
> > > arr=[] 
> > > inp = open ("sites1.txt","r")
> > > #read line into array
> > 
> > > for line in inp.readlines():
> > > links = map(str, line.split(","))
> > > arr.append(links)
> > > cursor.execute ("""
> > > INSERT INTO links (Name, URL, category)
> > > VALUES (%s, %s, %s)""" % tuple(links[0:3])
> > > )
> > > cursor.close()
> > > conn.close()
> > 
> > Perhaps this is a bit naive but would this do it for you (you didn't
> > say what error(s) you are getting)?
> > 
> > uid = 0
> > for line in inp.readlines():
> > uid += 1
> > links = map(str, line.split(","))
> > arr.append(links)
> > cursor.execute ("""
> > INSERT INTO links (ID, Name, URL, Category)
> > VALUES (%d, "%s", "%s", "%s")""" % \
> > (uid, links[0], links[1], links[2]) 
> > )
> > 
> > The differences are:
> > - Your table def doesn't specify an auto-incrementing id and won't
> > allow null values so we need to insert a number.
> > - Quotes around the string data. I this might not be needed. I'm 
> > not sure if MySQLdb does it for you.
> > - I think MySQL is sensitive to case, so I changed 'category' to
> > 'Category'.
> > _______________________________________________
> > Mod_python mailing list
> > Mod_python@modpython.org
> > http://mailman.modpython.org/mailman/listinfo/mod_python
> > 
> 
> 
> 
> -- 
> edward hotchkiss 




-- 
edward hotchkiss
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20050917/ffb773b2/attachment-0001.html
From jg.lists at sympatico.ca  Sat Sep 17 17:42:25 2005
From: jg.lists at sympatico.ca (Jim Gallacher)
Date: Sat Sep 17 17:35:20 2005
Subject: [mod_python] MySQLdb error - PLEASE SAVE ME!
In-Reply-To: <d1bf1fa205091714163d9f8408@mail.gmail.com>
References: <d1bf1fa2050917124069a4ff61@mail.gmail.com>	<200509171335.49698.eric@ericwalstad.com>	<d1bf1fa205091713581854494a@mail.gmail.com>
	<d1bf1fa205091714163d9f8408@mail.gmail.com>
Message-ID: <432C8DC1.7030108@sympatico.ca>

Ed Hotchkiss wrote:
> Hmm ... Actually, now that I use it with a much longer file (the past 
> file was like 6 links), this file is several hundred. I get this error now:
>  
>  >>>
> Traceback (most recent call last):
>   File "G:\Python\myCode\Links Database\addfromtext2.py", line 30, in ?
>     cursor.execute ("""
> IndexError: list index out of range
>  >>>
>  
> I'm guessing that it has something to do with the primary index, "ID"? I 
> tried auto increment, but no go with that too, same error ...

More likely one of the lines in sites.txt has fewer than 3 fields. Try 
running the following:

inp = open ("sites1.txt","r")
for line in inp.readlines():
     links = map(str, line.split(","))
     print links[0], links[1], links[2]


It will like generate the same error. You may want to consider using the 
python csv module rather than split.

Jim

>  
> On 9/17/05, *Ed Hotchkiss* <edhotchkiss@gmail.com 
> <mailto:edhotchkiss@gmail.com>> wrote:
> 
>      
>     Thanks alot! I guess I don't even need arr (why did I have it there,
>     no idea -)
>     The only thing I was wondering (the code is awesome, but I love to
>     learn :P )
>      
>     Is UID a placeholder the ID? How do I have it automatically
>     increment .. and is that a better idea, to autoincrement?
>      
>     Thanks again. It feels good to migrate completely to linux now, and
>     transfer all of my access files to csv, then into mysql.
>      
>      
>     uid = 0
>     inp = open ("sites1.txt","r")
>     for line in inp.readlines():
>        uid += 1
>        links = map(str, line.split(","))
>        cursor.execute ("""
>     INSERT INTO links (ID, Name, URL, Category)
>        VALUES (%d, "%s", "%s", "%s")""" % \
>            (uid, links[0], links[1], links[2])
>            )
> 
>     ----
>     Also, what is the \ for after the % sign to the right of VALUES? thanks.
>     -edward
>      
>      
>      
>      
>      
>      
>     On 9/17/05, *Eric Walstad* <eric@ericwalstad.com
>     <mailto:eric@ericwalstad.com>> wrote:
> 
>         On Saturday 17 September 2005 12:40 pm, Ed Hotchkiss wrote:
>         [snip]
>>  stmt = """CREATE TABLE links (
>>     ID INT NOT NULL,
>>     Name TEXT,
>>     URL LONGTEXT,
>>     Category LONGTEXT,
>>     primary key (ID)
>>  )"""
>>  cursor.execute(stmt)
>>
>>
>>  arr=[]
>>  inp = open ("sites1.txt","r")
>>  #read line into array
> 
>>  for line in inp.readlines():
>>     links = map(str, line.split(","))
>>     arr.append(links)
>>     cursor.execute ("""
>>  INSERT INTO links (Name, URL, category)
>>     VALUES (%s, %s, %s)""" % tuple(links[0:3])
>>         )
>>  cursor.close()
>>  conn.close()
> 
>         Perhaps this is a bit naive but would this do it for you (you didn't
>         say what error(s) you are getting)?
> 
>         uid = 0
>         for line in inp.readlines():
>            uid += 1
>            links = map(str, line.split(","))
>            arr.append(links)
>            cursor.execute ("""
>         INSERT INTO links (ID, Name, URL, Category)
>            VALUES (%d, "%s", "%s", "%s")""" % \
>                (uid, links[0], links[1], links[2])
>                )
> 
>         The differences are:
>         - Your table def doesn't specify an auto-incrementing id and won't
>         allow null values so we need to insert a number.
>         - Quotes around the string data.  I this might not be needed.  I'm
>         not sure if MySQLdb does it for you.
>         - I think MySQL is sensitive to case, so I changed 'category' to
>         'Category'.
>         _______________________________________________
>         Mod_python mailing list
>         Mod_python@modpython.org <mailto:Mod_python@modpython.org>
>         http://mailman.modpython.org/mailman/listinfo/mod_python
>         <http://mailman.modpython.org/mailman/listinfo/mod_python>
> 
> 
> 
> 
>     -- 
>     edward hotchkiss 
> 
> 
> 
> 
> -- 
> edward hotchkiss
> 
> 
> ------------------------------------------------------------------------
> 
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python

From edhotchkiss at gmail.com  Sat Sep 17 17:42:07 2005
From: edhotchkiss at gmail.com (Ed Hotchkiss)
Date: Sat Sep 17 17:42:13 2005
Subject: [mod_python] MySQLdb error - PLEASE SAVE ME!
In-Reply-To: <432C8DC1.7030108@sympatico.ca>
References: <d1bf1fa2050917124069a4ff61@mail.gmail.com>
	<200509171335.49698.eric@ericwalstad.com>
	<d1bf1fa205091713581854494a@mail.gmail.com>
	<d1bf1fa205091714163d9f8408@mail.gmail.com>
	<432C8DC1.7030108@sympatico.ca>
Message-ID: <d1bf1fa205091714427710c325@mail.gmail.com>

Thanks alot! Of course, Of the hundreds of links in the txt file, the one 
without a comma (which I somehow missed) was the one of ten links which I 
had hand typed into the file which I had discovered today. Thanks again, 
sorry for wasting your time with a stupid error like that. Thanks to 
everyone else also.

On 9/17/05, Jim Gallacher <jg.lists@sympatico.ca> wrote: 
> 
> Ed Hotchkiss wrote:
> > Hmm ... Actually, now that I use it with a much longer file (the past
> > file was like 6 links), this file is several hundred. I get this error 
> now:
> >
> > >>>
> > Traceback (most recent call last):
> > File "G:\Python\myCode\Links Database\addfromtext2.py", line 30, in ?
> > cursor.execute ("""
> > IndexError: list index out of range
> > >>>
> >
> > I'm guessing that it has something to do with the primary index, "ID"? I
> > tried auto increment, but no go with that too, same error ...
> 
> More likely one of the lines in sites.txt has fewer than 3 fields. Try
> running the following:
> 
> inp = open ("sites1.txt","r")
> for line in inp.readlines():
> links = map(str, line.split(","))
> print links[0], links[1], links[2]
> 
> 
> It will like generate the same error. You may want to consider using the
> python csv module rather than split.
> 
> Jim
> 
> >
> > On 9/17/05, *Ed Hotchkiss* <edhotchkiss@gmail.com
> > <mailto:edhotchkiss@gmail.com>> wrote:
> >
> >
> > Thanks alot! I guess I don't even need arr (why did I have it there,
> > no idea -)
> > The only thing I was wondering (the code is awesome, but I love to
> > learn :P )
> >
> > Is UID a placeholder the ID? How do I have it automatically
> > increment .. and is that a better idea, to autoincrement?
> >
> > Thanks again. It feels good to migrate completely to linux now, and
> > transfer all of my access files to csv, then into mysql.
> >
> >
> > uid = 0
> > inp = open ("sites1.txt","r")
> > for line in inp.readlines():
> > uid += 1
> > links = map(str, line.split(","))
> > cursor.execute ("""
> > INSERT INTO links (ID, Name, URL, Category)
> > VALUES (%d, "%s", "%s", "%s")""" % \
> > (uid, links[0], links[1], links[2])
> > )
> >
> > ----
> > Also, what is the \ for after the % sign to the right of VALUES? thanks.
> > -edward
> >
> >
> >
> >
> >
> >
> > On 9/17/05, *Eric Walstad* <eric@ericwalstad.com
> > <mailto:eric@ericwalstad.com>> wrote:
> >
> > On Saturday 17 September 2005 12:40 pm, Ed Hotchkiss wrote:
> > [snip]
> >> stmt = """CREATE TABLE links (
> >> ID INT NOT NULL,
> >> Name TEXT,
> >> URL LONGTEXT,
> >> Category LONGTEXT,
> >> primary key (ID)
> >> )"""
> >> cursor.execute(stmt)
> >>
> >>
> >> arr=[]
> >> inp = open ("sites1.txt","r")
> >> #read line into array
> >
> >> for line in inp.readlines():
> >> links = map(str, line.split(","))
> >> arr.append(links)
> >> cursor.execute ("""
> >> INSERT INTO links (Name, URL, category)
> >> VALUES (%s, %s, %s)""" % tuple(links[0:3])
> >> )
> >> cursor.close()
> >> conn.close()
> >
> > Perhaps this is a bit naive but would this do it for you (you didn't
> > say what error(s) you are getting)?
> >
> > uid = 0
> > for line in inp.readlines():
> > uid += 1
> > links = map(str, line.split(","))
> > arr.append(links)
> > cursor.execute ("""
> > INSERT INTO links (ID, Name, URL, Category)
> > VALUES (%d, "%s", "%s", "%s")""" % \
> > (uid, links[0], links[1], links[2])
> > )
> >
> > The differences are:
> > - Your table def doesn't specify an auto-incrementing id and won't
> > allow null values so we need to insert a number.
> > - Quotes around the string data. I this might not be needed. I'm
> > not sure if MySQLdb does it for you.
> > - I think MySQL is sensitive to case, so I changed 'category' to
> > 'Category'.
> > _______________________________________________
> > Mod_python mailing list
> > Mod_python@modpython.org <mailto:Mod_python@modpython.org>
> > http://mailman.modpython.org/mailman/listinfo/mod_python
> > <http://mailman.modpython.org/mailman/listinfo/mod_python>
> >
> >
> >
> >
> > --
> > edward hotchkiss
> >
> >
> >
> >
> > --
> > edward hotchkiss
> >
> >
> > ------------------------------------------------------------------------
> >
> > _______________________________________________
> > Mod_python mailing list
> > Mod_python@modpython.org
> > http://mailman.modpython.org/mailman/listinfo/mod_python
> 
> 


-- 
edward hotchkiss
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20050917/62874657/attachment.html
From eric at ericwalstad.com  Sat Sep 17 19:00:25 2005
From: eric at ericwalstad.com (Eric Walstad)
Date: Sat Sep 17 19:00:57 2005
Subject: [mod_python] MySQLdb error - PLEASE SAVE ME!
In-Reply-To: <d1bf1fa205091713581854494a@mail.gmail.com>
References: <d1bf1fa2050917124069a4ff61@mail.gmail.com>
	<200509171335.49698.eric@ericwalstad.com>
	<d1bf1fa205091713581854494a@mail.gmail.com>
Message-ID: <200509171600.25943.eric@ericwalstad.com>

Hi Edward...
On Saturday 17 September 2005 01:58 pm, Ed Hotchkiss wrote:
[snip]
>  Is UID a placeholder the ID? How do I have it automatically
> increment
<http://dev.mysql.com/doc/mysql/en/example-auto-increment.html>


> and is that a better idea, to autoincrement?
Probably.  I would.


> Also, what is the \ for after the % sign to the right of VALUES?
> thanks. -edward
<http://www.python.org/peps/pep-0008.html>
(See 'Maximum Line Length') and
<http://docs.python.org/ref/explicit-joining.html>


> It feels good to migrate completely to linux now
Congrats and have fun!
From steve at rueb.com  Sat Sep 17 22:19:55 2005
From: steve at rueb.com (Steve Bergman)
Date: Sat Sep 17 22:20:01 2005
Subject: [mod_python] 
	Undescores, functions, classes, methods, and mod_python
Message-ID: <432CCECB.5040803@rueb.com>

If I understand correctly, in publisher, a leading '_' should be used to 
protect functions from being accessed directly via url.

Currently, I am also naming classes with a leading '_' since trying to 
load them directly throws an ugly error. (With debug on , at least.)

Methods inside classes do not seem to be at all accessible, so I am 
naming them normally.

My question is what is the standard accepted and secure way of naming 
all these things?

Thanks,
Steve


From edhotchkiss at gmail.com  Sun Sep 18 22:06:54 2005
From: edhotchkiss at gmail.com (Ed Hotchkiss)
Date: Sun Sep 18 22:07:01 2005
Subject: [mod_python] threading and sockets
Message-ID: <d1bf1fa20509181906240443eb@mail.gmail.com>

Anyone have an idea why my script does not thread the scans and finish 
quickly (it just does nothing, at all.)....
a color highlighted version is pasted here also: 
http://deadbeefbabe.org/paste/1671/0
 it should just scan a host, from the begin variable to the end, simple 
right? any ideas would be appreciated ...
----------------------------------------------------------------------------------------------------------------------------
 import threading
import socket
 class scanThread(threading.Thread):
def run(self):
try:
ss = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
ss.connect((ip, port_counter))
print "%s | %d OPEN" % (ip, port_counter)
ss.close()
print "scanned: ",port_counter,"\n"
except: pass
# end class -------------------


def scan(ip, begin, end):
for port_counter in range(begin, end):
while threading < MAX_THREADS:
scanThread().start()
# end function -------------------
scan("someones ip goes here", 0, 10000)
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20050918/5896cdff/attachment.html
From trevorw at qalabs.com  Mon Sep 19 12:34:36 2005
From: trevorw at qalabs.com (Trevor West)
Date: Mon Sep 19 12:30:56 2005
Subject: [mod_python] XML - RPC help
In-Reply-To: <c298f2d7050917113433da23ff@mail.gmail.com>
References: <432B3769.2070309@qalabs.com>
	<c298f2d70509162341763a6603@mail.gmail.com>
	<432C578D.1040202@qalabs.com>
	<c298f2d7050917113433da23ff@mail.gmail.com>
Message-ID: <432EE89C.6020803@qalabs.com>

Thanks, I think you are right, but how do I fix it. It seems to me that 
everyone has the rights to read and execute /usr/bin/env and 
/usr/bin/python. When I try to su to the user it says "That user is not 
available right now".

Cheers

Trevor

Nicolas Lehuen wrote:

> Looks like the problem is not about /usr/bin/env acces rights, but 
> rather those of python. Can the user account Apache is running in 
> launch python ?
>
> Regards,
> Nicolas
>
> 2005/9/17, Trevor West <trevorw@qalabs.com <mailto:trevorw@qalabs.com>>:
>
>     Hi, thanks for the response
>
>     I have tried
>
>     #!/usr/bin/python and #!python
>     and got in the error logs
>     [Sat Sep 17 10:28:53 2005] [error] [client 172.16.38.221
>     <http://172.16.38.221>] (2)No such
>     file or directory: exec of
>     '/usr/local/apache2/cgi-bin/example4_server.py' failed
>
>
>     Tried
>     #!/usr/bin/env python
>     and got
>     [Sat Sep 17 10:27:25 2005] [error] [client 172.16.38.221
>     <http://172.16.38.221>] /usr/bin/env:
>     python\r: Permission denied
>     I checked and env is read and executable for everyone.
>
>     I think you are right the first line is the problem, but now I'm stuck
>     as to what it should be.
>
>     Cheers
>
>     Trevor
>
>
>
>     Nicolas Lehuen wrote:
>
>     > Hi,
>     >
>     > Apparently you need to put a proper script header (on the first line
>     > of your script) with the path to the Python interpreter for the
>     CGI to
>     > work, something along the lines of :
>     >
>     > #!/path/to/python/executable
>     >
>     > Or :
>     >
>     >|#!/usr/bin/env python|
>     >
>     >
>     > Now, to write CGIs, you don't need mod_python at all, actually
>     in your
>     > setup mod_python is not used  !
>     >
>     > Regards,
>     > Nicolas
>     >
>     > 2005/9/16, Trevor West <trevorw@qalabs.com
>     <mailto:trevorw@qalabs.com> <mailto: trevorw@qalabs.com
>     <mailto:trevorw@qalabs.com>>>:
>     >
>     >     Hello everyone:
>     >
>     >     Machine:  x86 Fedora Core 2
>     >                     Apache 2.0
>     >                     Mod_python 3.1
>     >                     Python 2.3
>     >
>     >
>     >
>     >     Here's my problem, I'm starting on a new project and for
>     this one I'm
>     >     supposed to use a CGI based XML-RPC server to accept
>     >     communications from
>     >     a java applet. I understand how XML-RPC works and have many
>     fine
>     >     examples working, what I can't seem to get working is the CGI
>     >     part. For
>     >     whatever reason the CGI's won't work on the Fedora Core 2 linux
>     >     server.
>     >
>     >     I'm currently just trying the example given here:
>     >     http://docs.python.org/lib/node556.html
>     >     <http://docs.python.org/lib/node556.html> and it works on my
>     >     Windows box
>     >     but not on the linux box.
>     >
>     >     The error I get in my Apache log is:
>     >     [Fri Sep 16 14:19:56 2005] [error] [client 172.16.38.221
>     <http://172.16.38.221>
>     >     <http://172.16.38.221>] (2)No such
>     >     file or directory: exec of
>     >     '/usr/local/apache2/cgi-bin/example4_server.py' failed
>     >     [Fri Sep 16 14:19:56 2005] [error] [client 172.16.38.221
>     <http://172.16.38.221>
>     >     <http://172.16.38.221>] Premature end
>     >     of script headers: example4_server.py
>     >
>     >     Now does anyone know why this is happening? Do I need special
>     >     lines in
>     >     my httpd.conf file for the CGI's? Here's my current cgi-bin
>     setup:
>     >
>     >     <Directory "/usr/local/apache2/cgi-bin">
>     >         AllowOverride None
>     >         Options None
>     >         Order allow,deny
>     >         Allow from all
>     >     </Directory>
>     >
>     >     I do have the line to load the mod_python and I use the
>     publisher
>     >     in my
>     >     main htdocs.
>     >
>     >     So any ideas?
>     >
>     >     Cheers
>     >
>     >     Trevor
>     >
>     >
>     >
>     >
>     >     _______________________________________________
>     >     Mod_python mailing list
>     >     Mod_python@modpython.org <mailto:Mod_python@modpython.org>
>     <mailto:Mod_python@modpython.org <mailto:Mod_python@modpython.org>>
>     >     http://mailman.modpython.org/mailman/listinfo/mod_python
>     >     <http://mailman.modpython.org/mailman/listinfo/mod_python>
>     >
>     >
>
>
From grisha at apache.org  Mon Sep 19 21:55:04 2005
From: grisha at apache.org (Gregory (Grisha) Trubetskoy)
Date: Mon Sep 19 21:56:05 2005
Subject: [mod_python] ANNOUNCE: Mod_python 3.2.2 Beta
Message-ID: <20050919214954.S45391@grisha.dyndns.org>


The Apache Software Foundation and The Apache HTTP Server Project are 
pleased to announce the 3.2.2 Beta release mod_python.

Version 3.2.2b of mod_python features several new functions and attributes 
providing better access to apache internals, file-based sessions and other 
session improvements, as well as many bug fixes and various performance 
and security improvements. A detailed description of the changes is 
available in Appendix A of the mod_python manual, also available here:

http://www.modpython.org/live/mod_python-3.2.2b/doc-html/node97.html

Beta releases are NOT considered stable and usually contain bugs.

This release is intended to solicit widespread testing of the code. We 
strongly recommend that you try out your existing applications and 
experiment with new features in a non-production environment using this 
version and report any problems you may encounter so that they can be 
addressed before the final release.

Preferred method of reporting problems is the mod_python user list 
mod_python@modpython.org.

Mod_python 3.2.2b is available for download from:

http://httpd.apache.org/modules/python-download.cgi

For more information about mod_python visit http://www.modpython.org/

Regards,

Grisha Trubetskoy and the Apache mod_python team.
From grisha at apache.org  Mon Sep 19 21:55:04 2005
From: grisha at apache.org (Gregory (Grisha) Trubetskoy)
Date: Mon Sep 19 22:18:56 2005
Subject: [mod_python] ANNOUNCE: Mod_python 3.2.2 Beta
Message-ID: <20050919214954.S45391@grisha.dyndns.org>


The Apache Software Foundation and The Apache HTTP Server Project are 
pleased to announce the 3.2.2 Beta release mod_python.

Version 3.2.2b of mod_python features several new functions and attributes 
providing better access to apache internals, file-based sessions and other 
session improvements, as well as many bug fixes and various performance 
and security improvements. A detailed description of the changes is 
available in Appendix A of the mod_python manual, also available here:

http://www.modpython.org/live/mod_python-3.2.2b/doc-html/node97.html

Beta releases are NOT considered stable and usually contain bugs.

This release is intended to solicit widespread testing of the code. We 
strongly recommend that you try out your existing applications and 
experiment with new features in a non-production environment using this 
version and report any problems you may encounter so that they can be 
addressed before the final release.

Preferred method of reporting problems is the mod_python user list 
mod_python@modpython.org.

Mod_python 3.2.2b is available for download from:

http://httpd.apache.org/modules/python-download.cgi

For more information about mod_python visit http://www.modpython.org/

Regards,

Grisha Trubetskoy and the Apache mod_python team.

From mailings at danielwinkler.de  Tue Sep 20 17:43:07 2005
From: mailings at danielwinkler.de (Daniel Winkler)
Date: Tue Sep 20 17:43:15 2005
Subject: [mod_python] "TypeError: argument 2 must be a mapping" and other
	things
Message-ID: <1127252587.3221.12.camel@alpha.castle.home>

Hello together,

I am trying to write a little web application with Apache2, mod_python
and MySQL. Unfortunately I have to fight with some strange effects:

E.g.:
  acl = db.cursor()
  acl.execute("SELECT * FROM acl WHERE c = %s AND d = %s;",
              (cID, dID))
with cID and dID as integers causes an "TypeError: argument 2 must be a
mapping". Sometimes. I tried to restart the apache server and -- it
worked, but after reloading the SAME page without any modifications this
error occured again, also on similar SQL statements in other parts of
the code.
I already checked the arguments: They are just normal integers.
I tested the code with the interactive interface: everything worked
fine. (the code sniplet mentioned above is independet from Apache and
special mod_python features)

Could someone please give me a hint how to debug this and to avoid these
(non-deterministic) errors? What might I have done wrong?


TIA
Daniel Winkler


From davidbadawi at yahoo.com  Tue Sep 20 17:56:09 2005
From: davidbadawi at yahoo.com (David Badawi)
Date: Tue Sep 20 17:56:13 2005
Subject: [mod_python] "TypeError: argument 2 must be a mapping" and other
	things
In-Reply-To: <1127252587.3221.12.camel@alpha.castle.home>
Message-ID: <20050920215609.28664.qmail@web51012.mail.yahoo.com>

how about acl.execute("SELECT * FROM acl WHERE c = %s
AND d
 = %s;" % (cID, dID))???

--- Daniel Winkler <mailings@danielwinkler.de> wrote:

> Hello together,
> 
> I am trying to write a little web application with
> Apache2, mod_python
> and MySQL. Unfortunately I have to fight with some
> strange effects:
> 
> E.g.:
>   acl = db.cursor()
>   acl.execute("SELECT * FROM acl WHERE c = %s AND d
> = %s;",
>               (cID, dID))
> with cID and dID as integers causes an "TypeError:
> argument 2 must be a
> mapping". Sometimes. I tried to restart the apache
> server and -- it
> worked, but after reloading the SAME page without
> any modifications this
> error occured again, also on similar SQL statements
> in other parts of
> the code.
> I already checked the arguments: They are just
> normal integers.
> I tested the code with the interactive interface:
> everything worked
> fine. (the code sniplet mentioned above is
> independet from Apache and
> special mod_python features)
> 
> Could someone please give me a hint how to debug
> this and to avoid these
> (non-deterministic) errors? What might I have done
> wrong?
> 
> 
> TIA
> Daniel Winkler
> 
> 
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
>
http://mailman.modpython.org/mailman/listinfo/mod_python
> 

From list at joreybump.com  Tue Sep 20 17:58:53 2005
From: list at joreybump.com (Jorey Bump)
Date: Tue Sep 20 17:59:07 2005
Subject: [mod_python] "TypeError: argument 2 must be a mapping" and other
	things
In-Reply-To: <1127252587.3221.12.camel@alpha.castle.home>
References: <1127252587.3221.12.camel@alpha.castle.home>
Message-ID: <4330861D.1010908@joreybump.com>

Daniel Winkler wrote:
> Hello together,
> 
> I am trying to write a little web application with Apache2, mod_python
> and MySQL. Unfortunately I have to fight with some strange effects:
> 
> E.g.:
>   acl = db.cursor()
>   acl.execute("SELECT * FROM acl WHERE c = %s AND d = %s;",
>               (cID, dID))
> with cID and dID as integers causes an "TypeError: argument 2 must be a
> mapping". Sometimes. I tried to restart the apache server and -- it
> worked, but after reloading the SAME page without any modifications this
> error occured again, also on similar SQL statements in other parts of
> the code.
> I already checked the arguments: They are just normal integers.
> I tested the code with the interactive interface: everything worked
> fine. (the code sniplet mentioned above is independet from Apache and
> special mod_python features)
> 
> Could someone please give me a hint how to debug this and to avoid these
> (non-deterministic) errors? What might I have done wrong?

You're mixing python string replacement with placeholders. You need to 
escape the placeholders (and the semicolon isn't necessary here):

acl.execute("SELECT * FROM acl WHERE c = %%s AND d = %%s", (cID, dID))
From list at joreybump.com  Tue Sep 20 18:05:36 2005
From: list at joreybump.com (Jorey Bump)
Date: Tue Sep 20 18:05:43 2005
Subject: [mod_python] "TypeError: argument 2 must be a mapping" and other
	things
In-Reply-To: <20050920215609.28664.qmail@web51012.mail.yahoo.com>
References: <20050920215609.28664.qmail@web51012.mail.yahoo.com>
Message-ID: <433087B0.8020803@joreybump.com>

David Badawi wrote:
> how about acl.execute("SELECT * FROM acl WHERE c = %s
> AND d
>  = %s;" % (cID, dID))???

This will work, but is not as secure as using placeholders. It's a 
recipe for SQL injection.

From mailings at danielwinkler.de  Tue Sep 20 18:19:15 2005
From: mailings at danielwinkler.de (Daniel Winkler)
Date: Tue Sep 20 18:19:21 2005
Subject: [mod_python] "TypeError: argument 2 must be a mapping" and
	other things
In-Reply-To: <4330861D.1010908@joreybump.com>
References: <1127252587.3221.12.camel@alpha.castle.home>
	<4330861D.1010908@joreybump.com>
Message-ID: <1127254755.3221.21.camel@alpha.castle.home>

Hello Jorey,

Am Dienstag, den 20.09.2005, 17:58 -0400 schrieb Jorey Bump:

> You're mixing python string replacement with placeholders. You need to 
> escape the placeholders (and the semicolon isn't necessary here):
> 
> acl.execute("SELECT * FROM acl WHERE c = %%s AND d = %%s", (cID, dID))

What kind of "placeholders" do you mean? Just to be sure: I did not want
to use SQL placeholders. Okay, I tried your version, but unfortunately
the error was the same ...

Thanks for your quick answer. Any other ideas? :-)
Daniel


From list at joreybump.com  Tue Sep 20 19:11:25 2005
From: list at joreybump.com (Jorey Bump)
Date: Tue Sep 20 19:11:31 2005
Subject: [mod_python] "TypeError: argument 2 must be a mapping" and	other
	things
In-Reply-To: <1127254755.3221.21.camel@alpha.castle.home>
References: <1127252587.3221.12.camel@alpha.castle.home>	<4330861D.1010908@joreybump.com>
	<1127254755.3221.21.camel@alpha.castle.home>
Message-ID: <4330971D.2050002@joreybump.com>

Daniel Winkler wrote:
> Hello Jorey,
> 
> Am Dienstag, den 20.09.2005, 17:58 -0400 schrieb Jorey Bump:
> 
> 
>>You're mixing python string replacement with placeholders. You need to 
>>escape the placeholders (and the semicolon isn't necessary here):
>>
>>acl.execute("SELECT * FROM acl WHERE c = %%s AND d = %%s", (cID, dID))
> 
> 
> What kind of "placeholders" do you mean? Just to be sure: I did not want
> to use SQL placeholders. Okay, I tried your version, but unfortunately
> the error was the same ...
> 
> Thanks for your quick answer. Any other ideas? :-)

Note to self: test answers before dispensing bad advice. I'm the 
confused one here, it's only necessary to escape placeholders when 
*contructing* queries with python string replacement, i.e.:

table = "acl"
query = "SELECT * FROM %s WHERE c = %%s AND d = %%s" % (table)
acl = db.cursor()
acl.execute(query, (cID, dID))

So, the structure of your original query is fine, uses SQL placeholders 
(a good thing), and you indicate that it works in the interactive 
interpreter. Can you provide a little more of the code?





From list at joreybump.com  Tue Sep 20 19:24:03 2005
From: list at joreybump.com (Jorey Bump)
Date: Tue Sep 20 19:24:10 2005
Subject: [mod_python] "TypeError: argument 2 must be a mapping" and	other
	things
In-Reply-To: <4330971D.2050002@joreybump.com>
References: <1127252587.3221.12.camel@alpha.castle.home>	<4330861D.1010908@joreybump.com>	<1127254755.3221.21.camel@alpha.castle.home>
	<4330971D.2050002@joreybump.com>
Message-ID: <43309A13.8070207@joreybump.com>

Jorey Bump wrote:

> So, the structure of your original query is fine, uses SQL placeholders 
> (a good thing), and you indicate that it works in the interactive 
> interpreter. Can you provide a little more of the code?

... and possibly some of the errors you're seeing, as well, for context? 
Are you sure the arguments referred to are in fact the ones in the 
query, and not from some other part of the code?
From mailings at danielwinkler.de  Wed Sep 21 05:47:32 2005
From: mailings at danielwinkler.de (Daniel Winkler)
Date: Wed Sep 21 05:47:48 2005
Subject: [mod_python] "TypeError: argument 2 must be a mapping"
	and	other things
In-Reply-To: <43309A13.8070207@joreybump.com>
References: <1127252587.3221.12.camel@alpha.castle.home>
	<4330861D.1010908@joreybump.com>
	<1127254755.3221.21.camel@alpha.castle.home>
	<4330971D.2050002@joreybump.com>  <43309A13.8070207@joreybump.com>
Message-ID: <1127296052.3477.20.camel@alpha.castle.home>

Hi Jorey,

Am Dienstag, den 20.09.2005, 19:24 -0400 schrieb Jorey Bump:
> ... and possibly some of the errors you're seeing, as well, for context? 
> Are you sure the arguments referred to are in fact the ones in the 
> query, and not from some other part of the code?
Okay, I'll try to extract the important parts ...

index.py: ***********************************

from mod_python import psp
import dirigent
import chor
[...]

def startseite(req, chorid=0): #called startseite?chorid=1 or so
    dirigent.id = dirigent.ermittle_dirigent(req)
    chor.id = chor.ermittle_chor(chorid, dirigent.id)
[...]


datenbank.py: ********************************

import MySQLdb
db = MySQLdb.connect(host="localhost",
                     user="chordb",
                     passwd="somethingsecret",
                     db="chordatenbank")


chor.py: *************************************

from datenbank import db
[...]

id = 0

def _acltest_ok(chorID, dirigentID):
    acl = db.cursor()
(*) acl.execute("SELECT chor FROM acl WHERE chor = %s AND dirigent = %s", (chorID, dirigentID))
    return (int(acl.rowcount) > 0)


def ermittle_chor(chorID, dirigentID):
    if ( (chorID > 0)
         and _acltest_ok(chorID, dirigentID) ):
        return chorID
    else:
        choere = db.cursor()
(*)     choere.execute("SELECT chor FROM acl WHERE dirigent = %s;", (dirigentID))

        if int(choere.rowcount) == 1:
            chor = choere.fetchone()
            return chor[0]
        else:
            return 0


The (*) marked lines are those where the error occurs most at the
moment. E.g.:

******************************************
od_python error: "PythonHandler mod_python.publisher"

Traceback (most recent call last):

  File "/usr/lib/python2.3/site-packages/mod_python/apache.py", line 299, in HandlerDispatch
    result = object(req)

  File "/usr/lib/python2.3/site-packages/mod_python/publisher.py", line 136, in handler
    result = util.apply_fs_data(object, req.form, req=req)

  File "/usr/lib/python2.3/site-packages/mod_python/util.py", line 361, in apply_fs_data
    return object(**args)

  File "<somewhere>/index.py", line 49, in lied
    chor.id = chor.ermittle_chor(chorid, dirigent.id)

  File "<somewhere>/chor.py", line 18, in ermittle_chor
    if ( (chorID > 0)

  File "<somewhere>/chor.py", line 11, in _acltest_ok
    acl.execute("SELECT chor FROM acl WHERE chor = %s AND dirigent = %s", (chorID, dirigentID))

  File "/usr/lib/python2.3/site-packages/MySQLdb/cursors.py", line 132, in execute
    self.errorhandler(self, TypeError, m)

  File "/usr/lib/python2.3/site-packages/MySQLdb/connections.py", line 33, in defaulterrorhandler
    raise errorclass, errorvalue

TypeError: argument 2 must be a mapping
*********************************

The first time I load the page, everything is fine. This error occurs
after the first or second page reload (same code, same parameters).
Don't ask me why ...

I had even more strange errors like "syntax errors" in a line called
"c = 1" in a PSP file, but I cannot reproduce them at the moment. (maybe
after the problem above is fixed :-)
BTW, I am new to Python so if you have additional hints what can be done
better: everything is welcome.
Okay, yes, I know that global variables aren't very nice, but I thought
it is not necessary to build a class just for one object ... ;-)


TIA
Daniel

From nicolas.lehuen at gmail.com  Wed Sep 21 06:11:08 2005
From: nicolas.lehuen at gmail.com (Nicolas Lehuen)
Date: Wed Sep 21 06:11:15 2005
Subject: [mod_python] "TypeError: argument 2 must be a mapping" and other
	things
In-Reply-To: <1127296052.3477.20.camel@alpha.castle.home>
References: <1127252587.3221.12.camel@alpha.castle.home>
	<4330861D.1010908@joreybump.com>
	<1127254755.3221.21.camel@alpha.castle.home>
	<4330971D.2050002@joreybump.com> <43309A13.8070207@joreybump.com>
	<1127296052.3477.20.camel@alpha.castle.home>
Message-ID: <c298f2d70509210311226debca@mail.gmail.com>

Hi Daniel,

Have you read this FAQ ?

http://www.modpython.org/FAQ/faqw.py?req=show&file=faq02.013.htp

Regards,
Nicolas

2005/9/21, Daniel Winkler <mailings@danielwinkler.de>:
> 
> Hi Jorey,
> 
> Am Dienstag, den 20.09.2005, 19:24 -0400 schrieb Jorey Bump:
> > ... and possibly some of the errors you're seeing, as well, for context?
> > Are you sure the arguments referred to are in fact the ones in the
> > query, and not from some other part of the code?
> Okay, I'll try to extract the important parts ...
> 
> index.py: ***********************************
> 
> from mod_python import psp
> import dirigent
> import chor
> [...]
> 
> def startseite(req, chorid=0): #called startseite?chorid=1 or so
> dirigent.id <http://dirigent.id> = dirigent.ermittle_dirigent(req)
> chor.id <http://chor.id> = chor.ermittle_chor(chorid, dirigent.id<http://dirigent.id>
> )
> [...]
> 
> 
> datenbank.py: ********************************
> 
> import MySQLdb
> db = MySQLdb.connect(host="localhost",
> user="chordb",
> passwd="somethingsecret",
> db="chordatenbank")
> 
> 
> chor.py: *************************************
> 
> from datenbank import db
> [...]
> 
> id = 0
> 
> def _acltest_ok(chorID, dirigentID):
> acl = db.cursor()
> (*) acl.execute("SELECT chor FROM acl WHERE chor = %s AND dirigent = %s", 
> (chorID, dirigentID))
> return (int(acl.rowcount) > 0)
> 
> 
> def ermittle_chor(chorID, dirigentID):
> if ( (chorID > 0)
> and _acltest_ok(chorID, dirigentID) ):
> return chorID
> else:
> choere = db.cursor()
> (*) choere.execute("SELECT chor FROM acl WHERE dirigent = %s;", 
> (dirigentID))
> 
> if int(choere.rowcount) == 1:
> chor = choere.fetchone()
> return chor[0]
> else:
> return 0
> 
> 
> The (*) marked lines are those where the error occurs most at the
> moment. E.g.:
> 
> ******************************************
> od_python error: "PythonHandler mod_python.publisher"
> 
> Traceback (most recent call last):
> 
> File "/usr/lib/python2.3/site-packages/mod_python/apache.py", line 299, in 
> HandlerDispatch
> result = object(req)
> 
> File "/usr/lib/python2.3/site-packages/mod_python/publisher.py", line 136, 
> in handler
> result = util.apply_fs_data(object, req.form, req=req)
> 
> File "/usr/lib/python2.3/site-packages/mod_python/util.py", line 361, in 
> apply_fs_data
> return object(**args)
> 
> File "<somewhere>/index.py", line 49, in lied
> chor.id <http://chor.id> = chor.ermittle_chor(chorid, dirigent.id<http://dirigent.id>
> )
> 
> File "<somewhere>/chor.py", line 18, in ermittle_chor
> if ( (chorID > 0)
> 
> File "<somewhere>/chor.py", line 11, in _acltest_ok
> acl.execute("SELECT chor FROM acl WHERE chor = %s AND dirigent = %s", 
> (chorID, dirigentID))
> 
> File "/usr/lib/python2.3/site-packages/MySQLdb/cursors.py", line 132, in 
> execute
> self.errorhandler(self, TypeError, m)
> 
> File "/usr/lib/python2.3/site-packages/MySQLdb/connections.py", line 33, 
> in defaulterrorhandler
> raise errorclass, errorvalue
> 
> TypeError: argument 2 must be a mapping
> *********************************
> 
> The first time I load the page, everything is fine. This error occurs
> after the first or second page reload (same code, same parameters).
> Don't ask me why ...
> 
> I had even more strange errors like "syntax errors" in a line called
> "c = 1" in a PSP file, but I cannot reproduce them at the moment. (maybe
> after the problem above is fixed :-)
> BTW, I am new to Python so if you have additional hints what can be done
> better: everything is welcome.
> Okay, yes, I know that global variables aren't very nice, but I thought
> it is not necessary to build a class just for one object ... ;-)
> 
> 
> TIA
> Daniel
> 
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20050921/83ec8480/attachment-0001.html
From mailings at danielwinkler.de  Wed Sep 21 06:38:37 2005
From: mailings at danielwinkler.de (Daniel Winkler)
Date: Wed Sep 21 06:38:44 2005
Subject: [mod_python] "TypeError: argument 2 must be a mapping" and
	other things
In-Reply-To: <c298f2d70509210311226debca@mail.gmail.com>
References: <1127252587.3221.12.camel@alpha.castle.home>
	<4330861D.1010908@joreybump.com>
	<1127254755.3221.21.camel@alpha.castle.home>
	<4330971D.2050002@joreybump.com> <43309A13.8070207@joreybump.com>
	<1127296052.3477.20.camel@alpha.castle.home>
	<c298f2d70509210311226debca@mail.gmail.com>
Message-ID: <1127299117.3477.25.camel@alpha.castle.home>

Hi Nicolas,

> Have you read this FAQ ?
> 
> http://www.modpython.org/FAQ/faqw.py?req=show&file=faq02.013.htp
> 

Yes. I am using Debian 3.1 stable. (just normal packages, nothing built
from source) I deinstalled php4-mysql and restarted the Apache
server ... same problem. Or do I have to remove even more .. ?

Regards,
Daniel


From list at joreybump.com  Wed Sep 21 09:47:20 2005
From: list at joreybump.com (Jorey Bump)
Date: Wed Sep 21 09:47:28 2005
Subject: [mod_python] "TypeError: argument 2 must be a mapping"	and	other
	things
In-Reply-To: <1127296052.3477.20.camel@alpha.castle.home>
References: <1127252587.3221.12.camel@alpha.castle.home>	<4330861D.1010908@joreybump.com>	<1127254755.3221.21.camel@alpha.castle.home>	<4330971D.2050002@joreybump.com>
	<43309A13.8070207@joreybump.com>
	<1127296052.3477.20.camel@alpha.castle.home>
Message-ID: <43316468.8020003@joreybump.com>

Daniel Winkler wrote:

> index.py: ***********************************
> 
> from mod_python import psp
> import dirigent

What's in dirigent?

> import chor
> [...]
> 
> def startseite(req, chorid=0): #called startseite?chorid=1 or so

I prefer to get form variables and query string arguments from req.form. 
  Pass req around to your functions and test for the presence of the 
variable:

def check(req):
     if req.form.has_key('chorid'):
         ...do stuff

Note that if a variable appears multiple times in the form and/or the 
querystring, it will be returned as a list. If this is a possibility, 
your code needs to check for it and process it accordingly.

>     dirigent.id = dirigent.ermittle_dirigent(req)
>     chor.id = chor.ermittle_chor(chorid, dirigent.id)
> [...]

Things like this will work consistently in the interpreter, but not in 
all apache MPMs. Do you really need to alter this module attribute in 
place? I'd look for an alternative, as it's not reliable across 
environments. Can you simply store it in a normal variable within the 
function, and return it or process it further?

     d = dirigent.ermittle_dirigent(req)
     c = chor.ermittle_chor(chorid, d)
     ...do stuff with c and d
     return stuff

> datenbank.py: ********************************
> 
> import MySQLdb
> db = MySQLdb.connect(host="localhost",
>                      user="chordb",
>                      passwd="somethingsecret",
>                      db="chordatenbank")
> 
> 
> chor.py: *************************************
> 
> from datenbank import db

This looks good, so far. You'll get some reuse from the db handle.

> [...]
> 
> id = 0

If your code depends on this being updated externally and accessed 
globally by other modules, it might be where the problem is.

> def _acltest_ok(chorID, dirigentID):

Try setting defaults here, just in case:

def _acltest_ok(chorID = 0, dirigentID = 0):

But I'm getting the sense that dirigentID may be the suspect. It's 
interesting that you're trying to set dirigent.id globally, but don't 
attempt to take advantage of it here. While I'm not advocating it, why 
aren't you importing dirigent.id directly, instead of passing it as an 
argument?

>     acl = db.cursor()
> (*) acl.execute("SELECT chor FROM acl WHERE chor = %s AND dirigent = %s", (chorID, dirigentID))
>     return (int(acl.rowcount) > 0)
> 
> 
> def ermittle_chor(chorID, dirigentID):
>     if ( (chorID > 0)
>          and _acltest_ok(chorID, dirigentID) ):
>         return chorID
>     else:
>         choere = db.cursor()
> (*)     choere.execute("SELECT chor FROM acl WHERE dirigent = %s;", (dirigentID))
> 
>         if int(choere.rowcount) == 1:
>             chor = choere.fetchone()
>             return chor[0]
>         else:
>             return 0
> 
> 
> The (*) marked lines are those where the error occurs most at the
> moment. E.g.:
> 
> ******************************************
> od_python error: "PythonHandler mod_python.publisher"
> 
> Traceback (most recent call last):
> 
>   File "/usr/lib/python2.3/site-packages/mod_python/apache.py", line 299, in HandlerDispatch
>     result = object(req)
> 
>   File "/usr/lib/python2.3/site-packages/mod_python/publisher.py", line 136, in handler
>     result = util.apply_fs_data(object, req.form, req=req)
> 
>   File "/usr/lib/python2.3/site-packages/mod_python/util.py", line 361, in apply_fs_data
>     return object(**args)
> 
>   File "<somewhere>/index.py", line 49, in lied
>     chor.id = chor.ermittle_chor(chorid, dirigent.id)
> 
>   File "<somewhere>/chor.py", line 18, in ermittle_chor
>     if ( (chorID > 0)
> 
>   File "<somewhere>/chor.py", line 11, in _acltest_ok
>     acl.execute("SELECT chor FROM acl WHERE chor = %s AND dirigent = %s", (chorID, dirigentID))
> 
>   File "/usr/lib/python2.3/site-packages/MySQLdb/cursors.py", line 132, in execute
>     self.errorhandler(self, TypeError, m)
> 
>   File "/usr/lib/python2.3/site-packages/MySQLdb/connections.py", line 33, in defaulterrorhandler
>     raise errorclass, errorvalue
> 
> TypeError: argument 2 must be a mapping
> *********************************
> 
> The first time I load the page, everything is fine. This error occurs
> after the first or second page reload (same code, same parameters).
> Don't ask me why ...
> 
> I had even more strange errors like "syntax errors" in a line called
> "c = 1" in a PSP file, but I cannot reproduce them at the moment. (maybe
> after the problem above is fixed :-)
> BTW, I am new to Python so if you have additional hints what can be done
> better: everything is welcome.
> Okay, yes, I know that global variables aren't very nice, but I thought
> it is not necessary to build a class just for one object ... ;-)

You may not get the same results from your attempts to set globals in 
mod_python as you would in the interpreter. You definitely can't rely on 
this method across platforms for truly global values, so I'd abandon it 
and use a persistent storage mechanism.

Also, your logic is a little circuitous, and you've mixed ways of 
dealing with what you expect to be the same variables. Try to be more 
consistent with how you pass variables (use only req.form for variables 
coming from the browser, for example) and with your naming of them 
(permutations on chorid, chorID, etc. aren't necessary when the scoping 
rules handle this automatically for you), which will make your code a 
little more readable and easier to debug.

Just some suggestions, I hope they are helpful.


From waterthrill at yahoo.no  Wed Sep 21 11:50:31 2005
From: waterthrill at yahoo.no (Ole Jacob Hagen)
Date: Wed Sep 21 09:50:51 2005
Subject: [mod_python] Unable to get session variables. 
Message-ID: <43318147.5050209@yahoo.no>

Hi,

I am struggling with one thing......Collecting the session variables.
I used to develop on debian computer, using *.psp files and *.py files.
My code worked on this computer. I used python-2.3, apache-2.0.5x, and
modpython-3.1.x

During these days, I have tried to use the same code on a gentoo-linux box.
I am using python-2.4, apache-2.0.54, and modpython-3.1.4.

It seems to me that I am able to store the session variables, but not
collect them.
I can see from firefox (file - preferences- privacy- view cookies) that
pysid-cookies have been created.

Why are the cookies variable collectable? Maybe they are empty, and not
writeable?


Please help.


Cheers,

Ole J.

Here is my code to save and get session variables:

*def* get_session(req):
    req.session = Session.Session(req)
    req.session.load()
    req.session.unlock()
    *return* req.session

*def* save_session(req,**data):
    req.session = get_session(req)
    req.session.lock()
    *for* key *in* data:
        req.session[key] = data[key]
    req.session.save()
    req.session.unlock()

***def* has_key(req,key):
    session =  get_session(req)
    *if* session.has_key(key):
        *return* True
    *else*:
        *return* False

*def* get_session_data(req,key):
    session = get_session(req)
    *if* session.has_key(key):
        *return* session[key]
    *return* {}





From mailings at danielwinkler.de  Wed Sep 21 10:40:21 2005
From: mailings at danielwinkler.de (Daniel Winkler)
Date: Wed Sep 21 10:40:29 2005
Subject: [mod_python] "TypeError: argument 2 must be a mapping" and
	other things
In-Reply-To: <43316468.8020003@joreybump.com>
References: <1127252587.3221.12.camel@alpha.castle.home>
	<4330861D.1010908@joreybump.com>
	<1127254755.3221.21.camel@alpha.castle.home>
	<4330971D.2050002@joreybump.com> <43309A13.8070207@joreybump.com>
	<1127296052.3477.20.camel@alpha.castle.home>
	<43316468.8020003@joreybump.com>
Message-ID: <1127313621.3219.36.camel@alpha.castle.home>

Hi Jorey,

thanks for you quick help.

> > from mod_python import psp
> > import dirigent
> 
> What's in dirigent?
"Dirigent" is the German word for conductor. A brief overview of the
project: Several conductors (and their helpers) of several choirs
(=Chor) should be able to manage and plan their rehearsals (? sorry, I
am not a native English speaker) etc.
The module "dirigent" contains code to check the incoming request and
identify the calling user. (Authentication is done via SSL certs; no
sessions, because I wanted something "stateless") The current user id
should be stored in "dirigent.id". It should be resolved only once per
request and there is only one single user per request, so I thought I
could store this globally ...


> Things like this will work consistently in the interpreter, but not in 
> all apache MPMs. Do you really need to alter this module attribute in 
> place? I'd look for an alternative, as it's not reliable across 
> environments. Can you simply store it in a normal variable within the 
> function, and return it or process it further?
Yes, I guess I can rearrange this. I thought a global variable could
reduce the calling overhead.


> > def _acltest_ok(chorID, dirigentID):
> 
> Try setting defaults here, just in case:
> 
> def _acltest_ok(chorID = 0, dirigentID = 0):
> 
> But I'm getting the sense that dirigentID may be the suspect. It's 
> interesting that you're trying to set dirigent.id globally, but don't 
> attempt to take advantage of it here. While I'm not advocating it, why 
> aren't you importing dirigent.id directly, instead of passing it as an 
> argument?
Mh, yes, you are right. The idea behind was to leave this more general
so I can check the access control information of other conductors, too,
not only the current user. But as mentioned above, I will try to avoid
the global storage.


> Also, your logic is a little circuitous, and you've mixed ways of 
> dealing with what you expect to be the same variables.
Yes, might be. Maybe it's better to write it new from scratch than
trying to adapt my old PHP code that was written with a slightly
different approach ...


> Just some suggestions, I hope they are helpful.
Thank you very much.
Daniel


From zsolt at bbm.de  Thu Sep 22 12:35:48 2005
From: zsolt at bbm.de (Zsolt Barat)
Date: Thu Sep 22 12:44:32 2005
Subject: [mod_python] Persistent web-service
In-Reply-To: <a3c0da1af2d847c10c9e5037c51d3014@dscpl.com.au>
References: <5671A82225F9@underdog>
	<792d5fd4ba457bf212e1160bc1ba2f9c@dscpl.com.au>
	<4329AE37.2090006@bbm.de>
	<a3c0da1af2d847c10c9e5037c51d3014@dscpl.com.au>
Message-ID: <4332DD64.2000000@bbm.de>

Graham Dumpleton wrote:

>
> On 16/09/2005, at 3:24 AM, Zsolt Barat wrote:
>
>> Graham Dumpleton wrote:
>>
>>> Still using a separate backend service process or framework is still
>>> probably preferable, with the handlers using XML-RPC or some other
>>> messaging system mechanism to communicate with it. You still have the
>>> issue of having to ensure the backend service is started, but then it
>>> also means your backend service isn't really dependent on Apache and
>>> you could use other means to communicate with it. Ie., Apache just
>>> becomes one type of interface.
>>>
>> hi,
>> this is interesting. i just try to make something like this. a tiny
>> webapplication which connects to a serial port and issues some
>> datarequest. are they already some recommended frameworks (xml-rpc) you
>> aware of which deal with this issue? sample apps?
>
>
> Depends on your requirements and how complicated you need to make your
> server. Simplest means of making a standalone XML-RPC server is with the
> SimpleXMLRPCServer module supplied with Python. This may though not be
> adequate for an event driven system which needs to deal with a serial
> port as well as handle XML-RPC requests.
>
> A more complicated system which you might look at is Twisted. See:
>
>   http://twistedmatrix.com/
>
> It has all manner of stuff for building event driven systems and also
> has components for handling XML-RPC requests which can be used to drive
> and control other parts of the system.

thanks for the hint. i already considerd twisted and just looking into
it. i try to setup a webservice with twisted-web and nevow and try to
using the twisted-serial-module for communicating with the serial-port(s).
it's all a bit hard cause there seems not really good documentation
available. if someone knows about good ressources espacially about
twisted.internet.serialport any hint would be appreciated.

best

zsolt



-- 
bbm kloedenstr. 1 10965 berlin tel ++49 30 69580994 fax ++49 30 69580993

-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 256 bytes
Desc: OpenPGP digital signature
Url : http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20050922/13c1bf9c/signature.bin
From km at mrna.tn.nic.in  Fri Sep 23 07:33:04 2005
From: km at mrna.tn.nic.in (km)
Date: Fri Sep 23 07:34:19 2005
Subject: [mod_python] publisher  recursive function
Message-ID: <20050923113304.GA19694@mrna.tn.nic.in>

hi all,
i am using publisher for web scripting with mod_python in apache 2.
i have a html page with form 'action'attribute set to 'myscript.py/run'
which calls the script: 
#########
obj = myclass()
def run(req,i = 0):
    for f in req.form.list:
        collect_data #process and collect data using obj and f.value and htmlify it
    return collected_data  # displays result wrapped in a form sction set to 'myscript.py/run?i=1'
#########
now i wish to use use the definition run recursively on successive result form displays by keeping track of new data collected in the same object defined. how can i do it ? 
thanks in advance,
regards,
KM
    
From akonsu at gmail.com  Fri Sep 23 15:53:50 2005
From: akonsu at gmail.com (akonsu)
Date: Fri Sep 23 15:53:57 2005
Subject: [mod_python] publisher recursive function
In-Reply-To: <20050923113304.GA19694@mrna.tn.nic.in>
References: <20050923113304.GA19694@mrna.tn.nic.in>
Message-ID: <acfb5bdc050923125341db30f8@mail.gmail.com>

hello,

to clarify, you want to be able to preserve your program's state
between requests. is this correct?

konstantin

2005/9/23, km <km@mrna.tn.nic.in>:
> hi all,
> i am using publisher for web scripting with mod_python in apache 2.
> i have a html page with form 'action'attribute set to 'myscript.py/run'
> which calls the script:
> #########
> obj = myclass()
> def run(req,i = 0):
>    for f in req.form.list:
>        collect_data #process and collect data using obj and f.value and htmlify it
>    return collected_data  # displays result wrapped in a form sction set to 'myscript.py/run?i=1'
> #########
> now i wish to use use the definition run recursively on successive result form displays by keeping track of new data collected in the same object defined. how can i do it ?
> thanks in advance,
> regards,
> KM
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>

From steve at rueb.com  Sat Sep 24 09:59:21 2005
From: steve at rueb.com (Steve Bergman)
Date: Sat Sep 24 09:59:27 2005
Subject: [mod_python] Publisher and form data validation?
Message-ID: <43355BB9.7090106@rueb.com>

How much does the publisher do with respect to data validation?

e.g. Does it insure that the data returned from a form field consists 
entirely of printable characters, or is that my responsibility?

If so, is there a prefered way to do it.  The method I'm using (lifted 
from the "Python Cookbook") seems a bit convoluted:

from string import maketrans, translate, printable
allchars = maketrans('','')
delchars = translate(allchars, allchars, printable)
input_string = translate(input_string, allchars, delchars)

It seems like there would be a simple function or method to do this kind 
of basic input data sanitization, but I can't seem to find it.

Other than checking lengths and printablility, what other security 
checks are good practice?

Thanks,
Steve Bergman
From iwasso80s at gmail.com  Thu Sep 29 01:35:25 2005
From: iwasso80s at gmail.com (Iwasso 80s)
Date: Thu Sep 29 01:35:30 2005
Subject: [mod_python] Strange HTTP Response
Message-ID: <263c8df0050928223572cd510e@mail.gmail.com>

We've been having a very strange problem with some variants of IE (on
Windows 98, Server 2003) and Safari (OS X 10.3).  If you aggressively
click around our site one of two things will often happen: the body of
the page will return "0" as the entire result set of the request; or
it will return "0" followed by what appears to be the header data (see
attached gif).  All other requests will return quickly and without
errors.

Some interesting data points:

If we reduce the keep-alive settings on Apache it seems to get worse
(meaning more likely to respond with a "0").  However, if we increase
the keep-alive setting to say around 15 seconds and aggressively click
around the site, the Apache server will become unresponsive.  I'm
assuming all the procs are getting used up before the keep-alive on
available procs has expired (although, that behavior seems fishy as
well).  Throughout all of these tests the cpu, io, etc is only
marginally taxed and no errors are reported in the error log.  We set
up a super simple testing page, with no db, etc and the problem still
persists.
Our config:

Debian Etch (fully updated)
 Apache 2.0.54
 Python 2.3
 Mod_python 3.1
 Clearsilver .9 (but we aren't using cgi functionality)

We'd really appreciate any help we could get.

Thanks in advance for your patience and consideration.
-------------- next part --------------
A non-text attachment was scrubbed...
Name: header-error.gif
Type: image/gif
Size: 4288 bytes
Desc: not available
Url : http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20050928/4bbbd745/header-error.gif
From fumanchu at amor.org  Thu Sep 29 09:37:04 2005
From: fumanchu at amor.org (Robert Brewer)
Date: Thu Sep 29 09:42:10 2005
Subject: [mod_python] Strange HTTP Response
References: <263c8df0050928223572cd510e@mail.gmail.com>
Message-ID: <A77618B80CDD2543B705C82B7665D9F9012B047A@ex9.hostedexchange.local>

Iwasso 80s wrote:
> If you aggressively click around our site one of two things
> will often happen: the body of the page will return "0" as
> the entire result set of the request; or it will return "0"
> followed by what appears to be the header data (see
> attached gif).

Quick guess:

apache.py, line 820
OK = REQ_PROCEED = 0

Somehow that value, which is usually returned from a request handler, is being written out.


Robert Brewer
System Architect
Amor Ministries
fumanchu@amor.org
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20050929/613e321a/attachment.html
From grisha at modpython.org  Thu Sep 29 11:23:56 2005
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Thu Sep 29 11:24:18 2005
Subject: [mod_python] Strange HTTP Response
In-Reply-To: <A77618B80CDD2543B705C82B7665D9F9012B047A@ex9.hostedexchange.local>
References: <263c8df0050928223572cd510e@mail.gmail.com>
	<A77618B80CDD2543B705C82B7665D9F9012B047A@ex9.hostedexchange.local>
Message-ID: <20050929112306.W68226@grisha.dyndns.org>


On Thu, 29 Sep 2005, Robert Brewer wrote:

> Iwasso 80s wrote:
>> If you aggressively click around our site one of two things
>> will often happen: the body of the page will return "0" as
>> the entire result set of the request; or it will return "0"
>> followed by what appears to be the header data (see
>> attached gif).
>
> Quick guess:
>
> apache.py, line 820
> OK = REQ_PROCEED = 0
>
> Somehow that value, which is usually returned from a request handler, is being written out.

Which will for example happen if you use the publisher and

     return apache.OK


Grisha
From iwasso80s at gmail.com  Thu Sep 29 12:14:59 2005
From: iwasso80s at gmail.com (Iwasso 80s)
Date: Thu Sep 29 12:15:04 2005
Subject: [mod_python] Strange HTTP Response
In-Reply-To: <20050929112306.W68226@grisha.dyndns.org>
References: <263c8df0050928223572cd510e@mail.gmail.com>
	<A77618B80CDD2543B705C82B7665D9F9012B047A@ex9.hostedexchange.local>
	<20050929112306.W68226@grisha.dyndns.org>
Message-ID: <263c8df0050929091435a1f552@mail.gmail.com>

We aren't using the publisher handler.  However, we are returning
apache.OK as a response to the handler call.  Should we be returning
something else?

Also, I captured a "good" response.  And I noticed it does contain
more data than purely the header and html body of the document.

START OF DOCUMENT:
---------------------------------------------------------------------------------------------------------------------
HTTP/1.1 200 OK
Date: Thu, 29 Sep 2005 16:07:44 GMT
Server: Apache/2.0.54 (Debian GNU/Linux)
Pragma: no-cache
Cache-Control: no-cache
Expires: -1
Keep-Alive: timeout=7, max=29
Connection: Keep-Alive
Transfer-Encoding: chunked
Content-Type: text/html

1

144d

	<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
---------------------------------------------------------------------------------------------------------------------


END OF DOCUMENT:
---------------------------------------------------------------------------------------------------------------------
</html>


1

0
---------------------------------------------------------------------------------------------------------------------

What do you guys think?  Is this normal behavior?

Thanks again for your time.

On 9/29/05, Gregory (Grisha) Trubetskoy <grisha@modpython.org> wrote:
>
> On Thu, 29 Sep 2005, Robert Brewer wrote:
>
> > Iwasso 80s wrote:
> >> If you aggressively click around our site one of two things
> >> will often happen: the body of the page will return "0" as
> >> the entire result set of the request; or it will return "0"
> >> followed by what appears to be the header data (see
> >> attached gif).
> >
> > Quick guess:
> >
> > apache.py, line 820
> > OK = REQ_PROCEED = 0
> >
> > Somehow that value, which is usually returned from a request handler, is being written out.
>
> Which will for example happen if you use the publisher and
>
>      return apache.OK
>
>
> Grisha
>

From jg.lists at sympatico.ca  Thu Sep 29 15:19:10 2005
From: jg.lists at sympatico.ca (Jim Gallacher)
Date: Thu Sep 29 15:17:39 2005
Subject: [mod_python] Strange HTTP Response
In-Reply-To: <263c8df0050929091435a1f552@mail.gmail.com>
References: <263c8df0050928223572cd510e@mail.gmail.com>	<A77618B80CDD2543B705C82B7665D9F9012B047A@ex9.hostedexchange.local>	<20050929112306.W68226@grisha.dyndns.org>
	<263c8df0050929091435a1f552@mail.gmail.com>
Message-ID: <433C3E2E.4080309@sympatico.ca>

Iwasso 80s wrote:
> We aren't using the publisher handler.  However, we are returning
> apache.OK as a response to the handler call.  Should we be returning
> something else?
> 
> Also, I captured a "good" response.  And I noticed it does contain
> more data than purely the header and html body of the document.
> 
> START OF DOCUMENT:
> ---------------------------------------------------------------------------------------------------------------------
> HTTP/1.1 200 OK
> Date: Thu, 29 Sep 2005 16:07:44 GMT
> Server: Apache/2.0.54 (Debian GNU/Linux)
> Pragma: no-cache
> Cache-Control: no-cache
> Expires: -1
> Keep-Alive: timeout=7, max=29
> Connection: Keep-Alive
> Transfer-Encoding: chunked
> Content-Type: text/html
> 
> 1
> 
> 144d
> 
> 	<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
> "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
> <html xmlns="http://www.w3.org/1999/xhtml">
> ---------------------------------------------------------------------------------------------------------------------
> 
> 
> END OF DOCUMENT:
> ---------------------------------------------------------------------------------------------------------------------
> </html>
> 
> 
> 1
> 
> 0
> ---------------------------------------------------------------------------------------------------------------------
> 
> What do you guys think?  Is this normal behavior?

Yes. I suggest you goggle chunked transfer-encoding. Starting after the 
headers you interpret the chunk sizes in hex as:
1 = 1 character
144d = 5197 characters
1 = 1 characters
0 = 0 characters (ie no more chunks)

Browsers use the chunk sizes to re-assemble the complete document.
Jim
From earle.ady at gmail.com  Thu Sep 29 16:58:57 2005
From: earle.ady at gmail.com (Earle Ady)
Date: Thu Sep 29 16:59:09 2005
Subject: [mod_python] glibc failure with mod_python 3.1.4 & Apache 2
Message-ID: <B2118D97-5A0C-4637-9DC8-C908A64412C3@gmail.com>


After some continued use of mod_python with Apache, in a pure PSP
environment, I have stumbled on an occasional error, which appears
to happen at inconsistent times in inconsistent places.  I am unable
to produce this when trying.

When the problem occurs, some of the Apache threads fail to respond,
while others still work when accessing the same page which was the
last to be accessed before the crash happens.

 From the log it appears the content of the PSP it's attempting to  
use is
becoming corrupted or lost in memory.

Has anyone else experienced this type of behavoir?

I am running mod_python 3.1.4 & Apache 2-current under Linux.

Apache Logs as follows:

*** glibc detected *** double free or corruption (!prev): 0x09292190 ***
[Thu Sep 29 16:42:20 2005] [notice] child pid 13745 exit signal  
Aborted (6)
*** glibc detected *** double free or corruption (!prev): 0x092a7e70 ***
*** glibc detected *** double free or corruption (!prev): 0x091ef918 ***
*** glibc detected *** double free or corruption (!prev): 0x09253568 ***
[Thu Sep 29 16:42:20 2005] [error] [client 68.34.232.186]  
PythonHandler mod_python.psp: Traceback (most recent call last):,  
referer: http://www.bountynetwork.com/login.psp
[Thu Sep 29 16:42:20 2005] [error] [client 68.34.232.186]  
PythonHandler mod_python.psp:   File "/usr/lib/python2.3/site- 
packages/mod_python/apache.py", line 299, in HandlerDispatch\n     
result = object(req), referer: http://www.bountynetwork.com/login.psp
[Thu Sep 29 16:42:20 2005] [error] [client 68.34.232.186]  
PythonHandler mod_python.psp:   File "/usr/lib/python2.3/site- 
packages/mod_python/psp.py", line 296, in handler\n    p = PSP(req),  
referer: http://www.bountynetwork.com/login.psp
[Thu Sep 29 16:42:20 2005] [error] [client 68.34.232.186]  
PythonHandler mod_python.psp:   File "/usr/lib/python2.3/site- 
packages/mod_python/psp.py", line 111, in __init__\n     
self.load_from_file(), referer: http://www.bountynetwork.com/login.psp
[Thu Sep 29 16:42:20 2005] [error] [client 68.34.232.186]  
PythonHandler mod_python.psp:   File "/usr/lib/python2.3/site- 
packages/mod_python/psp.py", line 177, in load_from_file\n    code =  
compile(source, filename, "exec"), referer: http:// 
www.bountynetwork.com/login.psp
[Thu Sep 29 16:42:20 2005] [error] [client 68.34.232.186]  
PythonHandler mod_python.psp: TypeError: compile() expected string  
without null bytes, referer: http://www.bountynetwork.com/login.psp
[Thu Sep 29 16:42:21 2005] [notice] child pid 10826 exit signal  
Aborted (6)
[Thu Sep 29 16:42:21 2005] [notice] child pid 10829 exit signal  
Aborted (6)
[Thu Sep 29 16:42:21 2005] [notice] child pid 11939 exit signal  
Aborted (6)
*** glibc detected *** free(): invalid next size (normal): 0x0925d1e0  
***
*** glibc detected *** double free or corruption (!prev): 0x091fbcd0 ***
[Thu Sep 29 16:42:25 2005] [notice] child pid 10888 exit signal  
Aborted (6)
[Thu Sep 29 16:42:25 2005] [notice] child pid 11094 exit signal  
Aborted (6)
*** glibc detected *** double free or corruption (!prev): 0x091dead0 ***
[Thu Sep 29 16:42:27 2005] [notice] child pid 14413 exit signal  
Aborted (6)
*** glibc detected *** double free or corruption (!prev): 0x091ceb38 ***
[Thu Sep 29 16:42:30 2005] [notice] child pid 14723 exit signal  
Aborted (6)

etc.

