From leyladel at yahoo.com  Tue Feb  1 09:56:52 2005
From: leyladel at yahoo.com (Lula Dog)
Date: Tue Feb  1 09:56:55 2005
Subject: [mod_python] security issues
Message-ID: <20050201145652.94427.qmail@web90101.mail.scd.yahoo.com>

Hi,
I cannot find anything related to the python security configuration/installation...Any hints?
I just want to know if there are some security guidelines during the installation/configuration of Python on Unix systems...
Any help would be very much appreciate....
 
Cheers
L.

		
---------------------------------
Do you Yahoo!?
 Yahoo! Search presents - Jib Jab's 'Second Term'
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20050201/847dedfd/attachment.html
From list at joreybump.com  Tue Feb  1 10:44:59 2005
From: list at joreybump.com (Jorey Bump)
Date: Tue Feb  1 10:45:06 2005
Subject: [mod_python] security issues
In-Reply-To: <20050201145652.94427.qmail@web90101.mail.scd.yahoo.com>
References: <20050201145652.94427.qmail@web90101.mail.scd.yahoo.com>
Message-ID: <41FFA3FB.2020207@joreybump.com>

Lula Dog wrote:

> I cannot find anything related to the python security 
> configuration/installation...Any hints?
> I just want to know if there are some security guidelines during the 
> installation/configuration of Python on Unix systems...
> Any help would be very much appreciate....

Many of the same security issues that apply to other embedded 
interpreters apply to mod_python. Here are some brief descriptions. 
Rather than list the solutions in detail, use them as a basis to search 
the mailing list or web:

1. Store sensitive data in modules outside of the DocumentRoot of your 
site. This prevents modules from being exposed if mod_python isn't running.

2. Don't store backup files where they can be accessed via HTTP. 
Honestly, I'm sure I could gather about a thousand db passwords in a day 
if I simply created a bot that crawled dynamically driven sites and 
appended ~ to every file name it finds.

3. Use the FilesMatch directive to disallow access to important types of 
files, such as *.pyc, *.pyo, *~, etc.

4. Understand the quirks of mod_python.publisher if you use it as a 
handler. For example, add a leading underscore to objects if you do not 
want them to be directly accessible via HTTP (_foo = "secret word").

5. Because the embedded interpreter runs applications as the apache 
user, all other applications may have access to the same files. This can 
have serious implications in a multiuser environment, and applies to 
PHP, SSI, CGI, etc., as well.

6. Avoid any kind of dependency on the PATH environment variable. It can 
easily be changed by other applications, causing your own to fail. If 
you must call system programs, declare the full path explicitly, *always*.

7. Debugging information can be essential when developing an 
application. Take pains to ensure that error messages don't reveal 
sensitive data if they are returned to the browser. Review your code, 
and use try/except statements to catch errors when appropriate.

8. Learn about Python's mechanisms to restrict what gets exported by a 
module.

9. If your database and application are on the same machine, don't let 
the database listen on a port exposed to the Internet.

That's all I can think right now, hope it helps.

From dg at sponsera.com  Tue Feb  1 12:56:14 2005
From: dg at sponsera.com (David Geller)
Date: Tue Feb  1 12:56:51 2005
Subject: [mod_python] Error using mod_python, Python2.4, and pyexpat
In-Reply-To: <C34650FD-485E-11D9-B854-000A956CC60E@scanmine.com>
References: <63940b004120108161d37323e@mail.gmail.com>	<5168DCDE-484F-11D9-B854-000A956CC60E@scanmine.com>	<63940b00412070602a714582@mail.gmail.com>	<63940b0041207062129e448cb@mail.gmail.com>
	<C34650FD-485E-11D9-B854-000A956CC60E@scanmine.com>
Message-ID: <41FFC2BE.7020806@sponsera.com>

Hi Rune -

Did you ever solve this problem? I am very confused. I am trying to do 
xml parsing using ElementTree, and it segfaults under mod_python (but 
works great standalone and under mod_python with Python2.3.4). I am 
using Python2.4 with apache-2.0.52 on a Redhat ES 3.0v3, as well. It 
looks like there are 3 expat shared libs:
1. the installed one in /usr/lib (1.95.5)
2. one that comes with Python2.4 - (not sure of the version, but am told 
it is 1.95.8)
3. one with apache - (source in: apr-util/xml/expat), version 1.95.1 (?)

So I take it the problem is Python2.4 is looking at one version, while 
apache itself is looking at another version. The old "library 
compatibility problem" when using mod_python!!!! (had it before with 
mysql libs)

How, exactly, do you build apache (or Python/mod_python for that matter) 
(without a lot of headaches), so that the libraries are compatible?

Thanks alot for anything that helps!

Regards,
David

Rune Hansen wrote:
> Hi David,
> And it all becomes clear..as ink :) Thanks. I'm on RedHat ES 3.0v3 - 
> struggling to maintain the integrity of the system. I'll see if I can 
> manage to build the expat library without breaking the rest of the system.
> 
> regards
> 
> /rune
> 
> On 7. des 2004, at 15.21, David Christian wrote:
> 
>> Sorry, let me make that just the tiniest bit more clear:
>>
>> You must upgrade expat to 1.95.8, and then rebuild apache.
>>
>> David
>>
>>
>> On Tue, 7 Dec 2004 09:02:36 -0500, David Christian
>> <david.christian@gmail.com> wrote:
>>
>>> Yes, I went through that same process.
>>>
>>> Python2.4 comes with the newest version of expat -- you must rebuild
>>> apache after upgrading.
>>>
>>> HTH,
>>> David
>>>
>>>
>>>
>>>
>>> On Tue, 7 Dec 2004 13:55:48 +0100, Rune Hansen 
>>> <rune.hansen@scanmine.com> wrote:
>>>
>>>> Hi David,
>>>> Did you solve this? I just tried to move to Python2.4 and I get the
>>>> same segfault as you describe.
>>>>
>>>> I did try to build mod_python from cvs, but it fails on flex and my
>>>> flex scanner doesn't seem to have the "-R" option....
>>>>
>>>> regards
>>>> /rune
>>>>
>>>>
>>>>
>>>> On 1. des 2004, at 17.16, David Christian wrote:
>>>>
>>>>> Hello,
>>>>> I recently upgraded to python2.4, and rebuilt/reinstalled mod_python,
>>>>> and after doing this, scripts running in mod_python segfaults when
>>>>> importing pyexpat.
>>>>>
>>>>> Note that this segfault doesn't happen outside of mod python, and the
>>>>> pyexpat test suite passes.
>>>>>
>>>>> Has anyone else seen this behavior?
>>>>>
>>>>> Thanks,
>>>>> David
>>>>> _______________________________________________
>>>>> Mod_python mailing list
>>>>> Mod_python@modpython.org
>>>>> http://mailman.modpython.org/mailman/listinfo/mod_python
>>>>>
>>>>
>>>>
>>>
>>>
> "So as far as I'm concerned, SOAP is not XML, nor is it useful to even a
> fraction of the degree to which it is destructive."
> - Uche Ogbuji
> 
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
> 
From joele at qalabs.com  Tue Feb  1 13:29:09 2005
From: joele at qalabs.com (Joel Eusebio)
Date: Tue Feb  1 13:26:57 2005
Subject: [mod_python] test
Message-ID: <200502011826.j11IQuat025367@modpython.org>

test

___________________________________________________

From joele at qalabs.com  Tue Feb  1 13:37:12 2005
From: joele at qalabs.com (Joel Eusebio)
Date: Tue Feb  1 13:30:54 2005
Subject: [mod_python] hello all
Message-ID: <200502011830.j11IUqFh026927@modpython.org>

Test message



From joele at qalabs.com  Tue Feb  1 14:53:09 2005
From: joele at qalabs.com (Joel Eusebio)
Date: Tue Feb  1 14:46:51 2005
Subject: [mod_python] Newbie Question
Message-ID: <200502011946.j11JknCw022417@modpython.org>

Hi Everybody,

I'm pretty new to Python and would like to ask a few questions. I have this
setup on a Fedora Core 3 box.

Python 2.3.4
wxPython-common-gtk-ansi-2.5.3.1-fc2_py2.3
mod_python-3.1.3-5
Apache/2.0.52

I have a test.py which looks like this:
from mod_python import apache
def handler(req):
       req.write("Hello World!")
       return apache.OK

Whenever I access test.py from my browser it says "The page cannot be found"
, I have the file on /var/www/html, what did I miss?

 Thanks in advance,
Joel 



From grahamd at dscpl.com.au  Tue Feb  1 16:21:51 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Tue Feb  1 16:22:00 2005
Subject: [mod_python] security issues
In-Reply-To: <41FFA3FB.2020207@joreybump.com>
References: <20050201145652.94427.qmail@web90101.mail.scd.yahoo.com>
	<41FFA3FB.2020207@joreybump.com>
Message-ID: <49C69236-7497-11D9-AB33-000393DCF16E@dscpl.com.au>

Also:

10. Especially if using mod_python.publisher, don't use the same name 
for Python code files (module names) in multiple places. This is 
because there are bugs in its implementation which can cause cross 
contamination of modules, the loading of the wrong module and other 
issues. See:

   http://issues.apache.org/jira/browse/MODPYTHON-9
   http://issues.apache.org/jira/browse/MODPYTHON-10
   http://issues.apache.org/jira/browse/MODPYTHON-11

11. If multiple people share the same web server, use PythonInterpreter 
to assign your area of the web site its own instance of the Python 
interpreter. This isn't fool proof as another user could do the same 
thing and use the same name. When working though, it will keep your 
stuff separate from others and avoid them being able to more easily see 
and fiddle with the internals of your running application.


Graham

On 02/02/2005, at 2:44 AM, Jorey Bump wrote:

> Lula Dog wrote:
>
>> I cannot find anything related to the python security 
>> configuration/installation...Any hints?
>> I just want to know if there are some security guidelines during the 
>> installation/configuration of Python on Unix systems...
>> Any help would be very much appreciate....
>
> Many of the same security issues that apply to other embedded 
> interpreters apply to mod_python. Here are some brief descriptions. 
> Rather than list the solutions in detail, use them as a basis to 
> search the mailing list or web:
>
> 1. Store sensitive data in modules outside of the DocumentRoot of your 
> site. This prevents modules from being exposed if mod_python isn't 
> running.
>
> 2. Don't store backup files where they can be accessed via HTTP. 
> Honestly, I'm sure I could gather about a thousand db passwords in a 
> day if I simply created a bot that crawled dynamically driven sites 
> and appended ~ to every file name it finds.
>
> 3. Use the FilesMatch directive to disallow access to important types 
> of files, such as *.pyc, *.pyo, *~, etc.
>
> 4. Understand the quirks of mod_python.publisher if you use it as a 
> handler. For example, add a leading underscore to objects if you do 
> not want them to be directly accessible via HTTP (_foo = "secret 
> word").
>
> 5. Because the embedded interpreter runs applications as the apache 
> user, all other applications may have access to the same files. This 
> can have serious implications in a multiuser environment, and applies 
> to PHP, SSI, CGI, etc., as well.
>
> 6. Avoid any kind of dependency on the PATH environment variable. It 
> can easily be changed by other applications, causing your own to fail. 
> If you must call system programs, declare the full path explicitly, 
> *always*.
>
> 7. Debugging information can be essential when developing an 
> application. Take pains to ensure that error messages don't reveal 
> sensitive data if they are returned to the browser. Review your code, 
> and use try/except statements to catch errors when appropriate.
>
> 8. Learn about Python's mechanisms to restrict what gets exported by a 
> module.
>
> 9. If your database and application are on the same machine, don't let 
> the database listen on a port exposed to the Internet.
>
> That's all I can think right now, hope it helps.
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python

From grahamd at dscpl.com.au  Tue Feb  1 17:36:32 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Tue Feb  1 17:36:34 2005
Subject: [mod_python] security issues
Message-ID: <1107297392.21686@dscpl.user.openhosting.com>

Thought of some more.

12. Turn off automatic directory indexing for Apache on directories which
use mod_python. This is generally applicable to any web site, but potentially
more so for mod_python if you forget to do (3). Thus don't use "Indexes"
option.

13. If you use PythonAutoReload, realise that modules are simply reloaded
on top of the already loaded modules. This is in part shown in MODPYTHON-11
bug report. It is mentioned here as a separate item because it means that if
you rename a variable/function or remove it, that doesn't actually mean it is
no longer accessible. The only way to guarantee that old variables/functions
are no longer accessible is to restart Apache. Thus, if you heed (4) and rename
variables to have a leading underscore, make sure you restart Apache at the
same time.

Graham

Graham Dumpleton wrote ..
> Also:
> 
> 10. Especially if using mod_python.publisher, don't use the same name 
> for Python code files (module names) in multiple places. This is 
> because there are bugs in its implementation which can cause cross 
> contamination of modules, the loading of the wrong module and other 
> issues. See:
> 
>    http://issues.apache.org/jira/browse/MODPYTHON-9
>    http://issues.apache.org/jira/browse/MODPYTHON-10
>    http://issues.apache.org/jira/browse/MODPYTHON-11
> 
> 11. If multiple people share the same web server, use PythonInterpreter
> to assign your area of the web site its own instance of the Python 
> interpreter. This isn't fool proof as another user could do the same 
> thing and use the same name. When working though, it will keep your 
> stuff separate from others and avoid them being able to more easily see
> and fiddle with the internals of your running application.
> 
> 
> Graham
> 
> On 02/02/2005, at 2:44 AM, Jorey Bump wrote:
> 
> > Lula Dog wrote:
> >
> >> I cannot find anything related to the python security 
> >> configuration/installation...Any hints?
> >> I just want to know if there are some security guidelines during the
> >> installation/configuration of Python on Unix systems...
> >> Any help would be very much appreciate....
> >
> > Many of the same security issues that apply to other embedded 
> > interpreters apply to mod_python. Here are some brief descriptions. 
> > Rather than list the solutions in detail, use them as a basis to 
> > search the mailing list or web:
> >
> > 1. Store sensitive data in modules outside of the DocumentRoot of your
> > site. This prevents modules from being exposed if mod_python isn't 
> > running.
> >
> > 2. Don't store backup files where they can be accessed via HTTP. 
> > Honestly, I'm sure I could gather about a thousand db passwords in a
> > day if I simply created a bot that crawled dynamically driven sites 
> > and appended ~ to every file name it finds.
> >
> > 3. Use the FilesMatch directive to disallow access to important types
> > of files, such as *.pyc, *.pyo, *~, etc.
> >
> > 4. Understand the quirks of mod_python.publisher if you use it as a 
> > handler. For example, add a leading underscore to objects if you do 
> > not want them to be directly accessible via HTTP (_foo = "secret 
> > word").
> >
> > 5. Because the embedded interpreter runs applications as the apache 
> > user, all other applications may have access to the same files. This
> > can have serious implications in a multiuser environment, and applies
> > to PHP, SSI, CGI, etc., as well.
> >
> > 6. Avoid any kind of dependency on the PATH environment variable. It
> > can easily be changed by other applications, causing your own to fail.
> > If you must call system programs, declare the full path explicitly, 
> > *always*.
> >
> > 7. Debugging information can be essential when developing an 
> > application. Take pains to ensure that error messages don't reveal 
> > sensitive data if they are returned to the browser. Review your code,
> > and use try/except statements to catch errors when appropriate.
> >
> > 8. Learn about Python's mechanisms to restrict what gets exported by
> a 
> > module.
> >
> > 9. If your database and application are on the same machine, don't let
> > the database listen on a port exposed to the Internet.
> >
> > That's all I can think right now, hope it helps.
> >
> > _______________________________________________
> > Mod_python mailing list
> > Mod_python@modpython.org
> > http://mailman.modpython.org/mailman/listinfo/mod_python
> 
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
From christopher.jackson at gmail.com  Wed Feb  2 03:34:13 2005
From: christopher.jackson at gmail.com (Chris Jackson)
Date: Wed Feb  2 03:35:27 2005
Subject: [mod_python] Error using mod_python, Python2.4, and pyexpat
In-Reply-To: <41FFC2BE.7020806@sponsera.com>
References: <63940b004120108161d37323e@mail.gmail.com>
	<5168DCDE-484F-11D9-B854-000A956CC60E@scanmine.com>
	<63940b00412070602a714582@mail.gmail.com>
	<63940b0041207062129e448cb@mail.gmail.com>
	<C34650FD-485E-11D9-B854-000A956CC60E@scanmine.com>
	<41FFC2BE.7020806@sponsera.com>
Message-ID: <4d11484d05020200341fcd6442@mail.gmail.com>

Just upgrade your libexpat to 1.95.8, which is what it is in
Python-2.4 and make sure
that the library is located in your LD_LIBRARY_PATH or standard library path.

See this thread:

http://www.modpython.org/pipermail/mod_python/2005-January/017273.html

~= Chris =~


On Tue, 01 Feb 2005 12:56:14 -0500, David Geller <dg@sponsera.com> wrote:
> Hi Rune -
> 
> Did you ever solve this problem? I am very confused. I am trying to do
> xml parsing using ElementTree, and it segfaults under mod_python (but
> works great standalone and under mod_python with Python2.3.4). I am
> using Python2.4 with apache-2.0.52 on a Redhat ES 3.0v3, as well. It
> looks like there are 3 expat shared libs:
> 1. the installed one in /usr/lib (1.95.5)
> 2. one that comes with Python2.4 - (not sure of the version, but am told
> it is 1.95.8)
> 3. one with apache - (source in: apr-util/xml/expat), version 1.95.1 (?)
> 
> So I take it the problem is Python2.4 is looking at one version, while
> apache itself is looking at another version. The old "library
> compatibility problem" when using mod_python!!!! (had it before with
> mysql libs)
> 
> How, exactly, do you build apache (or Python/mod_python for that matter)
> (without a lot of headaches), so that the libraries are compatible?
> 
> Thanks alot for anything that helps!
> 
> Regards,
> David
> 
> Rune Hansen wrote:
> > Hi David,
> > And it all becomes clear..as ink :) Thanks. I'm on RedHat ES 3.0v3 -
> > struggling to maintain the integrity of the system. I'll see if I can
> > manage to build the expat library without breaking the rest of the system.
> >
> > regards
> >
> > /rune
> >
> > On 7. des 2004, at 15.21, David Christian wrote:
> >
> >> Sorry, let me make that just the tiniest bit more clear:
> >>
> >> You must upgrade expat to 1.95.8, and then rebuild apache.
> >>
> >> David
> >>
> >>
> >> On Tue, 7 Dec 2004 09:02:36 -0500, David Christian
> >> <david.christian@gmail.com> wrote:
> >>
> >>> Yes, I went through that same process.
> >>>
> >>> Python2.4 comes with the newest version of expat -- you must rebuild
> >>> apache after upgrading.
> >>>
> >>> HTH,
> >>> David
> >>>
> >>>
> >>>
> >>>
> >>> On Tue, 7 Dec 2004 13:55:48 +0100, Rune Hansen
> >>> <rune.hansen@scanmine.com> wrote:
> >>>
> >>>> Hi David,
> >>>> Did you solve this? I just tried to move to Python2.4 and I get the
> >>>> same segfault as you describe.
> >>>>
> >>>> I did try to build mod_python from cvs, but it fails on flex and my
> >>>> flex scanner doesn't seem to have the "-R" option....
> >>>>
> >>>> regards
> >>>> /rune
> >>>>
> >>>>
> >>>>
> >>>> On 1. des 2004, at 17.16, David Christian wrote:
> >>>>
> >>>>> Hello,
> >>>>> I recently upgraded to python2.4, and rebuilt/reinstalled mod_python,
> >>>>> and after doing this, scripts running in mod_python segfaults when
> >>>>> importing pyexpat.
> >>>>>
> >>>>> Note that this segfault doesn't happen outside of mod python, and the
> >>>>> pyexpat test suite passes.
> >>>>>
> >>>>> Has anyone else seen this behavior?
> >>>>>
> >>>>> Thanks,
> >>>>> David
> >>>>> _______________________________________________
> >>>>> Mod_python mailing list
> >>>>> Mod_python@modpython.org
> >>>>> http://mailman.modpython.org/mailman/listinfo/mod_python
> >>>>>
> >>>>
> >>>>
> >>>
> >>>
> > "So as far as I'm concerned, SOAP is not XML, nor is it useful to even a
> > fraction of the degree to which it is destructive."
> > - Uche Ogbuji
> >
> > _______________________________________________
> > Mod_python mailing list
> > Mod_python@modpython.org
> > http://mailman.modpython.org/mailman/listinfo/mod_python
> >
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>
From coldoherty68 at yahoo.co.uk  Wed Feb  2 03:47:18 2005
From: coldoherty68 at yahoo.co.uk (Colin Doherty)
Date: Wed Feb  2 03:47:26 2005
Subject: [mod_python] servlet sessions
Message-ID: <20050202084718.72677.qmail@web25004.mail.ukl.yahoo.com>

Hi,

I'm having difficulty getting sessions working in
modpython.servlet, the tutorial example works so it
would appear to be an error in my code rather than
apache/mod_python set up:

from mod_python.servlet import Servlet

class mpseg(Servlet):
    __msg = ''
    auth_realm = 'Private'
    
    def __init__(self):
        Servlet.__init__(self)

    def auth(self):
        if self.session.is_new():
            user,pw = self._get_user_pw()
            if user == 'user' and pw == 'password':
                self.__msg = 'Hi'
                return
            else:
                self._unauthorized()
        if not self.session.is_new():
            self.__msg = 'Welcome back'

    def prep(self):
        use_session = True

    def respond(self):
        self.writeln(self.__msg)
        return True

>From what I gather setting use_session = True should
create a session instance variable for this user, but
I'm receiving this error:

AttributeError: 'NoneType' object has no attribute
'is_new' - which appears to indicate that an instance
of session isn't being created ?

Any help appreciated.

TIA
Colin



	
	
		
___________________________________________________________ 
ALL-NEW Yahoo! Messenger - all new features - even more fun! http://uk.messenger.yahoo.com
From terry.macdonald at dsl.pipex.com  Wed Feb  2 04:29:23 2005
From: terry.macdonald at dsl.pipex.com (Terry MacDonald)
Date: Wed Feb  2 04:29:27 2005
Subject: [mod_python] servlet sessions
In-Reply-To: <20050202084718.72677.qmail@web25004.mail.ukl.yahoo.com>
References: <20050202084718.72677.qmail@web25004.mail.ukl.yahoo.com>
Message-ID: <1107336563.3520.29.camel@bigmac.taumu.com>

At the top of your prep method you might need to call the parent classes
prep method to instantiate defaults and stuff including a session
object...I think.

From dpopowich at comcast.net  Wed Feb  2 08:38:22 2005
From: dpopowich at comcast.net (Daniel Popowich)
Date: Wed Feb  2 08:39:15 2005
Subject: [mod_python] servlet sessions
In-Reply-To: <20050202084718.72677.qmail@web25004.mail.ukl.yahoo.com>
References: <20050202084718.72677.qmail@web25004.mail.ukl.yahoo.com>
Message-ID: <16896.55246.641109.636812@h00a0cc25a952.ne.client2.attbi.com>


Colin Doherty writes:
> Hi,
> 
> I'm having difficulty getting sessions working in
> modpython.servlet, the tutorial example works so it
> would appear to be an error in my code rather than
> apache/mod_python set up:

You have a few things you can do here...

> from mod_python.servlet import Servlet
> 
> class mpseg(Servlet):
>     __msg = ''
>     auth_realm = 'Private'
>     
>     def __init__(self):
>         Servlet.__init__(self)
> 
>     def auth(self):
>         if self.session.is_new():
>             user,pw = self._get_user_pw()
>             if user == 'user' and pw == 'password':
>                 self.__msg = 'Hi'
>                 return
>             else:
>                 self._unauthorized()
>         if not self.session.is_new():
>             self.__msg = 'Welcome back'
> 
>     def respond(self):
>         self.writeln(self.__msg)
>         return True
>
>     def prep(self):
>         use_session = True


As you've written it in prep, the variable use_session is local, so as
far as the servlet is concerned, it's not set.  You want:

     def prep(self):
         self.use_session = True
         Servlet.prep(self)

Note, if you write your own prep, you HAVE to call the superclass'
prep.  Typically, you would call the superclass prep first, but since
you're setting a variable Servlet.prep needs, you have to set the
variable before calling it.

Better yet, unless you want to make using sessions dynamic per
request, you'd be better off setting it in the class definition so
each instance inherits it:


    class mpseg(Servlet):
	__msg = ''
	auth_realm = 'Private'
	use_session = True

	def respond(self):
	   ...

Then you don't even have to write your own prep method if all it was
doing was setting the use_session variable.  Likewise, you don't have
to write __init__ if all it's doing is calling Servlet.__init__.

Double check this:

    pydoc mod_python.servlet.Servlet.prep

and this:

    http://lnx1.blue-fox.com/~dpopowich/mpstutorial/lifecycle

Cheers,

Daniel Popowich
-----------------------------------------------
http://home.comcast.net/~d.popowich/mpservlets/

From dg at sponsera.com  Wed Feb  2 10:53:01 2005
From: dg at sponsera.com (David Geller)
Date: Wed Feb  2 10:54:34 2005
Subject: [mod_python] Error using mod_python, Python2.4, and pyexpat
In-Reply-To: <4d11484d05020200341fcd6442@mail.gmail.com>
References: <63940b004120108161d37323e@mail.gmail.com>	
	<5168DCDE-484F-11D9-B854-000A956CC60E@scanmine.com>	
	<63940b00412070602a714582@mail.gmail.com>	
	<63940b0041207062129e448cb@mail.gmail.com>	
	<C34650FD-485E-11D9-B854-000A956CC60E@scanmine.com>	
	<41FFC2BE.7020806@sponsera.com>
	<4d11484d05020200341fcd6442@mail.gmail.com>
Message-ID: <4200F75D.50300@sponsera.com>

Thanks. I finally did get things working yesterday.

A. I am still somewhat baffled on why both python and httpd have their 
own private versions of expat - why not rely on a single external 
library? This library incompatibility problem could easily be avoided 
(at the expense of having the requirement of a proper version of expat 
installed).

B. Suggestion: segv's while running python/mod_python can be such a 
gnarly issue, especially for the less computer inclined.
Should there be an entry in the mod_python faq regarding specifically 
this expat library issue and how to correct?

Regards,
David

Chris Jackson wrote:
> Just upgrade your libexpat to 1.95.8, which is what it is in
> Python-2.4 and make sure
> that the library is located in your LD_LIBRARY_PATH or standard library path.
> 
> See this thread:
> 
> http://www.modpython.org/pipermail/mod_python/2005-January/017273.html
> 
> ~= Chris =~
> 
> 
> On Tue, 01 Feb 2005 12:56:14 -0500, David Geller <dg@sponsera.com> wrote:
> 
>>Hi Rune -
>>
>>Did you ever solve this problem? I am very confused. I am trying to do
>>xml parsing using ElementTree, and it segfaults under mod_python (but
>>works great standalone and under mod_python with Python2.3.4). I am
>>using Python2.4 with apache-2.0.52 on a Redhat ES 3.0v3, as well. It
>>looks like there are 3 expat shared libs:
>>1. the installed one in /usr/lib (1.95.5)
>>2. one that comes with Python2.4 - (not sure of the version, but am told
>>it is 1.95.8)
>>3. one with apache - (source in: apr-util/xml/expat), version 1.95.1 (?)
>>
>>So I take it the problem is Python2.4 is looking at one version, while
>>apache itself is looking at another version. The old "library
>>compatibility problem" when using mod_python!!!! (had it before with
>>mysql libs)
>>
>>How, exactly, do you build apache (or Python/mod_python for that matter)
>>(without a lot of headaches), so that the libraries are compatible?
>>
>>Thanks alot for anything that helps!
>>
>>Regards,
>>David
>>
>>Rune Hansen wrote:
>>
>>>Hi David,
>>>And it all becomes clear..as ink :) Thanks. I'm on RedHat ES 3.0v3 -
>>>struggling to maintain the integrity of the system. I'll see if I can
>>>manage to build the expat library without breaking the rest of the system.
>>>
>>>regards
>>>
>>>/rune
>>>
>>>On 7. des 2004, at 15.21, David Christian wrote:
>>>
>>>
>>>>Sorry, let me make that just the tiniest bit more clear:
>>>>
>>>>You must upgrade expat to 1.95.8, and then rebuild apache.
>>>>
>>>>David
>>>>
>>>>
>>>>On Tue, 7 Dec 2004 09:02:36 -0500, David Christian
>>>><david.christian@gmail.com> wrote:
>>>>
>>>>
>>>>>Yes, I went through that same process.
>>>>>
>>>>>Python2.4 comes with the newest version of expat -- you must rebuild
>>>>>apache after upgrading.
>>>>>
>>>>>HTH,
>>>>>David
>>>>>
>>>>>
>>>>>
>>>>>
>>>>>On Tue, 7 Dec 2004 13:55:48 +0100, Rune Hansen
>>>>><rune.hansen@scanmine.com> wrote:
>>>>>
>>>>>
>>>>>>Hi David,
>>>>>>Did you solve this? I just tried to move to Python2.4 and I get the
>>>>>>same segfault as you describe.
>>>>>>
>>>>>>I did try to build mod_python from cvs, but it fails on flex and my
>>>>>>flex scanner doesn't seem to have the "-R" option....
>>>>>>
>>>>>>regards
>>>>>>/rune
>>>>>>
>>>>>>
>>>>>>
>>>>>>On 1. des 2004, at 17.16, David Christian wrote:
>>>>>>
>>>>>>
>>>>>>>Hello,
>>>>>>>I recently upgraded to python2.4, and rebuilt/reinstalled mod_python,
>>>>>>>and after doing this, scripts running in mod_python segfaults when
>>>>>>>importing pyexpat.
>>>>>>>
>>>>>>>Note that this segfault doesn't happen outside of mod python, and the
>>>>>>>pyexpat test suite passes.
>>>>>>>
>>>>>>>Has anyone else seen this behavior?
>>>>>>>
>>>>>>>Thanks,
>>>>>>>David
>>>>>>>_______________________________________________
>>>>>>>Mod_python mailing list
>>>>>>>Mod_python@modpython.org
>>>>>>>http://mailman.modpython.org/mailman/listinfo/mod_python
>>>>>>>
>>>>>>
>>>>>>
>>>>>
>>>"So as far as I'm concerned, SOAP is not XML, nor is it useful to even a
>>>fraction of the degree to which it is destructive."
>>>- Uche Ogbuji
>>>
>>>_______________________________________________
>>>Mod_python mailing list
>>>Mod_python@modpython.org
>>>http://mailman.modpython.org/mailman/listinfo/mod_python
>>>
>>
>>_______________________________________________
>>Mod_python mailing list
>>Mod_python@modpython.org
>>http://mailman.modpython.org/mailman/listinfo/mod_python
>>
> 
> 
From coldoherty68 at yahoo.co.uk  Wed Feb  2 14:37:41 2005
From: coldoherty68 at yahoo.co.uk (Colin Doherty)
Date: Wed Feb  2 14:37:43 2005
Subject: [mod_python] servlet sessions
Message-ID: <20050202193741.44864.qmail@web25005.mail.ukl.yahoo.com>

Hi,

I've tried a few of the suggested fixes but none work
if I reference the session variable in the auth()
method:

#setting it in the class definition

class mpseg(Servlet):
    __msg = ''
    auth_realm = 'Private'
    use_session = True
    
    def auth(self):
        if self.session.is_new():
            user,pw = self._get_user_pw()
            if user == 'user' and pw == 'password':
                self.__msg = 'Hi'
                return
            else:
                self._unauthorized()
        if not self.session.is_new():
            self.__msg = 'Welcome back'
            
    def respond(self):
        self.writeln(self.__msg)
        return True

#using call to base class

from mod_python.servlet import Servlet

class mpseg(Servlet):
    __msg = ''
    auth_realm = 'Private'

    def __init__(self):
        Servlet.__init__(self)    
    
    def auth(self):
        #also tried adding Servlet.auth(self)
        if self.session.is_new():
            user,pw = self._get_user_pw()
            if user == 'user' and pw == 'password':
                self.__msg = 'Hi'
                return
            else:
                self._unauthorized()
        if not self.session.is_new():
            self.__msg = 'Welcome back'

    def prep(self):
        self.use_session = True
        Servlet.prep(self)
            
    def respond(self):
        self.writeln(self.__msg)
        return True


If I  remove the auth() method it works:

from mod_python.servlet import Servlet

class mpseg(Servlet):
    __msg = ''
    auth_realm = 'Private'
    use_session = True

    def respond(self):
        if self.session.is_new():
            self.__msg = 'new'
        if not self.session.is_new():
            self.__msg = 'old'
        self.writeln(self.__msg)
        return True

So I'm either still missing something or there is no
direct way of referencing the session variable in an
auth call - this would make sense if auth is called
before prep as it appears from the docs.

BTW the servlet handler seems excellent as far I have
got it working, would it make the basis for either a
python J2EE equivalent ?

TIA

Cheers
Colin




	
	
		
___________________________________________________________ 
ALL-NEW Yahoo! Messenger - all new features - even more fun! http://uk.messenger.yahoo.com
From dpopowich at comcast.net  Wed Feb  2 16:22:09 2005
From: dpopowich at comcast.net (Daniel Popowich)
Date: Wed Feb  2 16:22:17 2005
Subject: [mod_python] servlet sessions
In-Reply-To: <20050202193741.44864.qmail@web25005.mail.ukl.yahoo.com>
References: <20050202193741.44864.qmail@web25005.mail.ukl.yahoo.com>
Message-ID: <16897.17537.582448.133170@greenmonster.local>


Colin Doherty writes:
> So I'm either still missing something or there is no
> direct way of referencing the session variable in an
> auth call - this would make sense if auth is called
> before prep as it appears from the docs.

Yes, auth is called before prep, so the session instance variable is
not yet available.

I went around and around and around on this when first writing the
class.  I'm still not sure I got it right and could be convinced
otherwise, but conceptually, authentication should happen asap after
the request is made, so it makes sense auth is called first.

An early version of mpservlets (pre-publication) had Servlet.prep()
being a no-op and all the stuff that currently happens in that method
occurring in a method called Servlet.handler_prep(), or some such and
this was called before auth, prep, respond, etc.  I think it was an
overwhelming Attack Of Symmetry that had me move it all into
Servlet.prep().

If you want to use HTTP basic authentication and have it conditional
on the session or other such knowledge only known after some point in
prep, I'd do this:

   def mybasicauth(self):
      # coded just like you would auth, but give it a different name,
      # so it's not called before prep

   def prep(self):
      # call superclass' prep
      MySuperClass.prep(self)
      # do some other work if need be, then...
      self.mybasicauth()

Perhaps future versions will accommodate having the session instance
variable set prior to calling auth.  It does seem to make sense.
      
> BTW the servlet handler seems excellent as far I have
> got it working, would it make the basis for either a
> python J2EE equivalent ?

I'm glad you're finding it useful.

As for the python j2ee...I don't have any interest in "mirroring" the
j2ee spec in python.  If others feel there's a need and want to use
mpservlets as the jumping off place, go for it.  That's why it's
opensource!

If, on the other hand, you mean could it become the tool that python
programmers go to as the base of OO web solutions.  Sure!  Pass on
your contributions (like having the session instance variable
available before auth is called) and let's make it the best tool it
can be!!

Daniel Popowich
-----------------------------------------------
http://home.comcast.net/~d.popowich/mpservlets/

From coldoherty68 at yahoo.co.uk  Wed Feb  2 17:26:01 2005
From: coldoherty68 at yahoo.co.uk (Colin Doherty)
Date: Wed Feb  2 17:26:04 2005
Subject: [mod_python] servlet sessions
Message-ID: <20050202222601.92277.qmail@web25001.mail.ukl.yahoo.com>

Thanks, creating a separate auth method and calling it
has done the trick. 

If I come up anything with regard to calling the
session instance variable so it is available before
auth is called or anything else that may be of use,
I'll contribute it. 

Cheers
Colin 


	
	
		
___________________________________________________________ 
ALL-NEW Yahoo! Messenger - all new features - even more fun! http://uk.messenger.yahoo.com
From jgentil at sebistar.net  Wed Feb  2 21:37:02 2005
From: jgentil at sebistar.net (Jon-Pierre Gentil)
Date: Wed Feb  2 21:37:36 2005
Subject: [mod_python] Newbie Question
In-Reply-To: <200502011946.j11JknCw022417@modpython.org>
References: <200502011946.j11JknCw022417@modpython.org>
Message-ID: <200502022037.20346.jgentil@sebistar.net>

On Tuesday 01 February 2005 01:53 pm, Joel Eusebio wrote:

> Hi Everybody,
>
> I'm pretty new to Python and would like to ask a few questions. I have
> this setup on a Fedora Core 3 box.

I already replied to this once.  Please see message 
http://www.modpython.org/pipermail/mod_python/2005-January/017296.html
But here it is again:

On Monday 31 January 2005 06:33 pm, Joel Eusebio wrote:

> I'm pretty new to Python and would like to ask a few questions. I have
> this setup on a Fedora Core 3 box.
> Python 2.3.4
> wxPython-common-gtk-ansi-2.5.3.1-fc2_py2.3

Not sure what wxPython has to do with it...

> mod_python-3.1.3-5
> Apache/2.0.52

Can you show us your Apache config file snippet that defines your 
Directory config sections?

-- 
_________________________________________________________

  Jon-Pierre Gentil               PGP: 0xA21BC30E
  jabber: jgentil@sebistar.net    web: www.sebistar.net
  "If you think education is expensive, try ignorance."
_________________________________________________________ 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 197 bytes
Desc: not available
Url : http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20050202/9af0d63b/attachment.bin
From jgentil at sebistar.net  Wed Feb  2 21:59:37 2005
From: jgentil at sebistar.net (Jon-Pierre Gentil)
Date: Wed Feb  2 21:59:51 2005
Subject: [mod_python] Force reload?
Message-ID: <200502022059.42196.jgentil@sebistar.net>


Argh!  I wish that mod_python would check all loaded modules for changes 
as a flat rule, not as a tree...  because currently it will only reload 
something if I touch the handler, because the reload code sees that the 
handler hasn't changed and does not bother checking the modules that the 
handler uses for changes.  Might as well not even use mod_python.import() 
at all.

Anyway, is there an option I can use to force the reload of the handler 
module each and every time a request is made?  I am only needing this for 
debugging purposes, so I don't mind something that is a bit kludgey.

Thank you!  And please fix the import issue!

-- 
_________________________________________________________

  Jon-Pierre Gentil               PGP: 0xA21BC30E
  jabber: jgentil@sebistar.net    web: www.sebistar.net
  "If you think education is expensive, try ignorance."
_________________________________________________________ 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 197 bytes
Desc: not available
Url : http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20050202/e7bc8758/attachment.bin
From grahamd at dscpl.com.au  Wed Feb  2 22:19:34 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Wed Feb  2 22:19:35 2005
Subject: [mod_python] Force reload?
Message-ID: <1107400774.6568@dscpl.user.openhosting.com>

Jon-Pierre Gentil wrote ..
> 
> Argh!  I wish that mod_python would check all loaded modules for changes
> as a flat rule, not as a tree...  because currently it will only reload
> something if I touch the handler, because the reload code sees that the
> handler hasn't changed and does not bother checking the modules that the
> handler uses for changes.  Might as well not even use mod_python.import()
> at all.

Use Vampire and use vampire.importModule() for imports instead of "import".
In Vampire it tracks dependencies between parent/child modules and can
reimport parent modules when children change. If you look at Vampire and
want to know more, ask questions here on the mailing list.

Oh, if you are using mod_python.publisher, Vampire will require you to change
in part back to more traditional content handlers in some ways. Vampire and
some documentation can be found at:

  http://www.dscpl.com.au/projects/vampire

> Anyway, is there an option I can use to force the reload of the handler
> module each and every time a request is made?  I am only needing this for
> debugging purposes, so I don't mind something that is a bit kludgey.

In your request handler, do this:

  __mtime__ = 0

The mod_python import mechanism caches the modification time in the module
itself and so setting it to 0 will force the module to be reloaded on the next
request.

Graham
From r.roelofsen at tuxed.de  Wed Feb  2 22:45:48 2005
From: r.roelofsen at tuxed.de (Roman Roelofsen)
Date: Wed Feb  2 22:44:28 2005
Subject: [mod_python] Force reload?
In-Reply-To: <200502022059.42196.jgentil@sebistar.net>
References: <200502022059.42196.jgentil@sebistar.net>
Message-ID: <200502030445.48381.r.roelofsen@tuxed.de>


> Argh!  I wish that mod_python would check all loaded modules for changes
> as a flat rule, not as a tree...  because currently it will only reload
> something if I touch the handler, because the reload code sees that the
> handler hasn't changed and does not bother checking the modules that the
> handler uses for changes.  Might as well not even use mod_python.import()
> at all.
>
> Anyway, is there an option I can use to force the reload of the handler
> module each and every time a request is made?  I am only needing this for
> debugging purposes, so I don't mind something that is a bit kludgey.
>
> Thank you!  And please fix the import issue!

If you are using a unix-box, the easiest way would be to "touch" the handler 
file. Try adding this line at the top of the handler() function in the 
handler file. But I didn?t tested this and it is really quick and dirty. 

os.system("touch " + __file__)

On my system the handler calls this method on each request:

def reload():
    for k, v in sys.modules.items():
        if v:
            try: path = v.__file__
            except: continue            
            userpath = os.path.dirname(__file__)
            if path.startswith(userpath):
                del sys.modules[k]

This will force to reload all of my "custom" modules (nothing 
below /usr/lib/python). My handler is saved in the toplevel htdocs directory. 
This will slow down the whole request, so you should only use it in 
development-stage.

Hope it helps!

Best regards,

		Roman

-- 
mail: r.roelofsen@tuxed.de

From dpopowich at comcast.net  Wed Feb  2 23:16:04 2005
From: dpopowich at comcast.net (Daniel Popowich)
Date: Wed Feb  2 23:16:54 2005
Subject: [mod_python] Force reload?
In-Reply-To: <200502022059.42196.jgentil@sebistar.net>
References: <200502022059.42196.jgentil@sebistar.net>
Message-ID: <16897.42372.912157.801209@h00a0cc25a952.ne.client2.attbi.com>


Jon-Pierre Gentil writes:
> 
> Argh!  I wish that mod_python would check all loaded modules for changes 
> as a flat rule, not as a tree...  because currently it will only reload 
> something if I touch the handler, because the reload code sees that the 
> handler hasn't changed and does not bother checking the modules that the 
> handler uses for changes.  Might as well not even use mod_python.import() 
> at all.
> 
> Anyway, is there an option I can use to force the reload of the handler 
> module each and every time a request is made?  I am only needing this for 
> debugging purposes, so I don't mind something that is a bit kludgey.
> 
> Thank you!  And please fix the import issue!

One brute force method which I employ during early stage development
and debugging is an apache configuration tweak.  Assuming for the
moment you're using the prefork MPM:

    <IfModule prefork.c>
    StartServers       8
    MinSpareServers    5
    MaxSpareServers   20
    MaxClients       150
    #MaxRequestsPerChild  1000
    # for debugging mod_python
    MaxRequestsPerChild  1
    </IfModule>

You'll notice where I comment out the default for MaxRequestsPerChild,
1000, and replace it with 1.  This allows each process to only serve
one request before being killed, so I get a fresh interpreter with
each request.  When I'm ready for beta testing I switch back to 1000.

Depending on your development box, this can be slow going, but you
will NEVER be burned by stale imports.

Daniel Popowich
-----------------------------------------------
http://home.comcast.net/~d.popowich/mpservlets/


From christopher.jackson at gmail.com  Thu Feb  3 11:52:12 2005
From: christopher.jackson at gmail.com (Chris Jackson)
Date: Thu Feb  3 11:52:14 2005
Subject: [mod_python] Newbie Question
In-Reply-To: <200502022037.20346.jgentil@sebistar.net>
References: <200502011946.j11JknCw022417@modpython.org>
	<200502022037.20346.jgentil@sebistar.net>
Message-ID: <4d11484d05020308522cc9fe3d@mail.gmail.com>

Also be sure to check your file permissions, for read and executable rights.

~= Chris =~


On Wed, 2 Feb 2005 20:37:02 -0600, Jon-Pierre Gentil
<jgentil@sebistar.net> wrote:
> On Tuesday 01 February 2005 01:53 pm, Joel Eusebio wrote:
> 
> > Hi Everybody,
> >
> > I'm pretty new to Python and would like to ask a few questions. I have
> > this setup on a Fedora Core 3 box.
> 
> I already replied to this once.  Please see message
> http://www.modpython.org/pipermail/mod_python/2005-January/017296.html
> But here it is again:
> 
> On Monday 31 January 2005 06:33 pm, Joel Eusebio wrote:
> 
> > I'm pretty new to Python and would like to ask a few questions. I have
> > this setup on a Fedora Core 3 box.
> > Python 2.3.4
> > wxPython-common-gtk-ansi-2.5.3.1-fc2_py2.3
> 
> Not sure what wxPython has to do with it...
> 
> > mod_python-3.1.3-5
> > Apache/2.0.52
> 
> Can you show us your Apache config file snippet that defines your
> Directory config sections?
> 
> --
> _________________________________________________________
> 
>   Jon-Pierre Gentil               PGP: 0xA21BC30E
>   jabber: jgentil@sebistar.net    web: www.sebistar.net
>   "If you think education is expensive, try ignorance."
> _________________________________________________________
> 
> 
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
> 
> 
> 
>
From harrison at tbc.net  Thu Feb  3 12:54:18 2005
From: harrison at tbc.net (Shawn Harrison)
Date: Thu Feb  3 12:52:39 2005
Subject: [mod_python] Force reload?
In-Reply-To: <200502022059.42196.jgentil@sebistar.net>
References: <200502022059.42196.jgentil@sebistar.net>
Message-ID: <4202654A.70900@tbc.net>

Jon-Pierre Gentil wrote [02/02/05 8:59 PM]:
> Argh!  I wish that mod_python would check all loaded modules for changes 
> as a flat rule, not as a tree...  because currently it will only reload 
> something if I touch the handler, because the reload code sees that the 
> handler hasn't changed and does not bother checking the modules that the 
> handler uses for changes.  Might as well not even use mod_python.import() 
> at all.
> 
> Anyway, is there an option I can use to force the reload of the handler 
> module each and every time a request is made?  I am only needing this for 
> debugging purposes, so I don't mind something that is a bit kludgey.
> 
> Thank you!  And please fix the import issue!

Well, sometimes you have to roll up your sleeves when the package 
doesn't do exactly what you want.

A solution that hasn't been suggested: write a simple function that 
imports a module, then reloads it, and returns the module object. Then 
use that for all imports. You could also define a "PythonOption 
MyAppDebug True/False" Apache directive, and make the reload instruction 
in your function only happen if this option is True.
-- 
________________
harrison@tbc.net
From joele at qalabs.com  Thu Feb  3 13:58:42 2005
From: joele at qalabs.com (Joel Eusebio)
Date: Thu Feb  3 13:59:03 2005
Subject: [mod_python] Newbie Question
In-Reply-To: <200502022037.20346.jgentil@sebistar.net>
Message-ID: <200502031859.j13Ix1Ow012754@modpython.org>

Here the config on my httpd.conf

Alias /test/ "/usr/local/apache2/htdocs/test"

<Directory /usr/local/apache2/htdocs/test>
        AddHandler mod_python .py
        AllowOverride None
        PythonHandler mod_python.publisher
        PythonDebug On

-----Original Message-----
From: Jon-Pierre Gentil [mailto:jgentil@sebistar.net] 
Sent: Wednesday, February 02, 2005 6:37 PM
To: mod_python@modpython.org
Cc: joele@qalabs.com
Subject: Re: [mod_python] Newbie Question

On Tuesday 01 February 2005 01:53 pm, Joel Eusebio wrote:

> Hi Everybody,
>
> I'm pretty new to Python and would like to ask a few questions. I have
> this setup on a Fedora Core 3 box.

I already replied to this once.  Please see message 
http://www.modpython.org/pipermail/mod_python/2005-January/017296.html
But here it is again:

On Monday 31 January 2005 06:33 pm, Joel Eusebio wrote:

> I'm pretty new to Python and would like to ask a few questions. I have
> this setup on a Fedora Core 3 box.
> Python 2.3.4
> wxPython-common-gtk-ansi-2.5.3.1-fc2_py2.3

Not sure what wxPython has to do with it...

> mod_python-3.1.3-5
> Apache/2.0.52

Can you show us your Apache config file snippet that defines your 
Directory config sections?

-- 
_________________________________________________________

  Jon-Pierre Gentil               PGP: 0xA21BC30E
  jabber: jgentil@sebistar.net    web: www.sebistar.net
  "If you think education is expensive, try ignorance."
_________________________________________________________ 

-- 
No virus found in this incoming message.
Checked by AVG Anti-Virus.
Version: 7.0.300 / Virus Database: 265.8.5 - Release Date: 2/3/2005
 
  

-- 
No virus found in this outgoing message.
Checked by AVG Anti-Virus.
Version: 7.0.300 / Virus Database: 265.8.5 - Release Date: 2/3/2005
 

From christopher.jackson at gmail.com  Thu Feb  3 14:15:20 2005
From: christopher.jackson at gmail.com (Chris Jackson)
Date: Thu Feb  3 14:15:23 2005
Subject: [mod_python] Newbie Question
In-Reply-To: <200502031859.j13Ix1Ow012754@modpython.org>
References: <200502022037.20346.jgentil@sebistar.net>
	<200502031859.j13Ix1Ow012754@modpython.org>
Message-ID: <4d11484d0502031115522b23b8@mail.gmail.com>

[your previous quote]
Whenever I access test.py from my browser it says "The page cannot be found"
, I have the file on /var/www/html, what did I miss?

[you other previous quote]
Alias /test/ "/usr/local/apache2/htdocs/test"

So, we have both /var/www/html and /usr/local/apache2/htdocs/test.  ;)

Which one do you use?

~= Chris =~


On Thu, 3 Feb 2005 10:58:42 -0800, Joel Eusebio <joele@qalabs.com> wrote:
> Here the config on my httpd.conf
> 
> Alias /test/ "/usr/local/apache2/htdocs/test"
> 
> <Directory /usr/local/apache2/htdocs/test>
>         AddHandler mod_python .py
>         AllowOverride None
>         PythonHandler mod_python.publisher
>         PythonDebug On
> 
> -----Original Message-----
> From: Jon-Pierre Gentil [mailto:jgentil@sebistar.net]
> Sent: Wednesday, February 02, 2005 6:37 PM
> To: mod_python@modpython.org
> Cc: joele@qalabs.com
> Subject: Re: [mod_python] Newbie Question
> 
> On Tuesday 01 February 2005 01:53 pm, Joel Eusebio wrote:
> 
> > Hi Everybody,
> >
> > I'm pretty new to Python and would like to ask a few questions. I have
> > this setup on a Fedora Core 3 box.
> 
> I already replied to this once.  Please see message
> http://www.modpython.org/pipermail/mod_python/2005-January/017296.html
> But here it is again:
> 
> On Monday 31 January 2005 06:33 pm, Joel Eusebio wrote:
> 
> > I'm pretty new to Python and would like to ask a few questions. I have
> > this setup on a Fedora Core 3 box.
> > Python 2.3.4
> > wxPython-common-gtk-ansi-2.5.3.1-fc2_py2.3
> 
> Not sure what wxPython has to do with it...
> 
> > mod_python-3.1.3-5
> > Apache/2.0.52
> 
> Can you show us your Apache config file snippet that defines your
> Directory config sections?
> 
> --
> _________________________________________________________
> 
>   Jon-Pierre Gentil               PGP: 0xA21BC30E
>   jabber: jgentil@sebistar.net    web: www.sebistar.net
>   "If you think education is expensive, try ignorance."
> _________________________________________________________
> 
> --
> No virus found in this incoming message.
> Checked by AVG Anti-Virus.
> Version: 7.0.300 / Virus Database: 265.8.5 - Release Date: 2/3/2005
> 
> --
> No virus found in this outgoing message.
> Checked by AVG Anti-Virus.
> Version: 7.0.300 / Virus Database: 265.8.5 - Release Date: 2/3/2005
> 
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>
From harrison at tbc.net  Thu Feb  3 14:30:38 2005
From: harrison at tbc.net (Shawn Harrison)
Date: Thu Feb  3 14:28:54 2005
Subject: [mod_python] Force reload?
In-Reply-To: <4202654A.70900@tbc.net>
References: <200502022059.42196.jgentil@sebistar.net> <4202654A.70900@tbc.net>
Message-ID: <42027BDE.2040001@tbc.net>

Shawn Harrison wrote [02/03/05 11:54 AM]:
> Jon-Pierre Gentil wrote [02/02/05 8:59 PM]:
> 
>> Argh!  I wish that mod_python would check all loaded modules for 
>> changes as a flat rule, not as a tree...  because currently it will 
>> only reload something if I touch the handler, because the reload code 
>> sees that the handler hasn't changed and does not bother checking the 
>> modules that the handler uses for changes.  Might as well not even use 
>> mod_python.import() at all.
>>
>> Anyway, is there an option I can use to force the reload of the 
>> handler module each and every time a request is made?  I am only 
>> needing this for debugging purposes, so I don't mind something that is 
>> a bit kludgey.
>>
>> Thank you!  And please fix the import issue!
> 
> 
> Well, sometimes you have to roll up your sleeves when the package 
> doesn't do exactly what you want.
> 
> A solution that hasn't been suggested: write a simple function that 
> imports a module, then reloads it, and returns the module object. Then 
> use that for all imports. You could also define a "PythonOption 
> MyAppDebug True/False" Apache directive, and make the reload instruction 
> in your function only happen if this option is True.

I should have mentioned that you could also just use PythonDebug On and
then you're using req.get_config(), and this would be global. Whereas if
you define your own PythonOption you can turn on/off debugging for
different parts of your application and you'll be using req.get_option().

-- 
________________
harrison@tbc.net

From dg at sponsera.com  Thu Feb  3 14:34:40 2005
From: dg at sponsera.com (David Geller)
Date: Thu Feb  3 14:35:30 2005
Subject: [mod_python] Force reload?
In-Reply-To: <16897.42372.912157.801209@h00a0cc25a952.ne.client2.attbi.com>
References: <200502022059.42196.jgentil@sebistar.net>
	<16897.42372.912157.801209@h00a0cc25a952.ne.client2.attbi.com>
Message-ID: <42027CD0.4000201@sponsera.com>

The way that python handles import is problematic for persistent 
interpreters such as implemented by mod_python. There doesn't, to me, 
seem any foolproof, *simple* way to solve reimportation issues in all 
circumstances, EXCEPT for what Daniel proposes, other than by restarting 
the server. It is such a pain to make some source changes, *think* you 
have reloaded affected modules, and then find out that the changes 
haven't taken effect! I have used this method for awhile now, and for 
debugging/development it seems to work (although I have some unexplained 
problems as I mentioned 11/20/2004 but never got a response on). It 
certainly is simple, and painless enough.

Unexplained issue (from 11/20/2004):
 >I am setting a global dictionary (at the module level). Every time the
 >handler is executed, I check the global to see if it needs to be
 >initialized, and if so, I set it to some value.
 >
 >If MaxRequestsPerChild (apache directive) is 0, or a large number, you
 >get what you would expect: the global needs to be initialized the first
 >time after an apache restart, and seldom on subsequent requests.
 >
 >If I set it to 1, however, the same thing happens. I.e., it seems as if
 >the module is not being re-loaded for each request, which is what I
 >thought was the implication for MaxRequestsPerChild = 1.
 >
 >However, if I set MaxKeepAliveRequests to 1 as well, then the global
 >needs to be initialized on *alternate* requests. I.e., first time, yes.
 >2nd time, no, etc.
 >
 >Does anyone have an explanation for this? I am quite puzzled.
 >
 >(this is for MPM = prefork (as far as I know), on linux, apache 2.0.48,
 >mod_python 3.1.3, python 2.3.4)


David


Daniel Popowich wrote:
> Jon-Pierre Gentil writes:
> 
>>Argh!  I wish that mod_python would check all loaded modules for changes 
>>as a flat rule, not as a tree...  because currently it will only reload 
>>something if I touch the handler, because the reload code sees that the 
>>handler hasn't changed and does not bother checking the modules that the 
>>handler uses for changes.  Might as well not even use mod_python.import() 
>>at all.
>>
>>Anyway, is there an option I can use to force the reload of the handler 
>>module each and every time a request is made?  I am only needing this for 
>>debugging purposes, so I don't mind something that is a bit kludgey.
>>
>>Thank you!  And please fix the import issue!
> 
> 
> One brute force method which I employ during early stage development
> and debugging is an apache configuration tweak.  Assuming for the
> moment you're using the prefork MPM:
> 
>     <IfModule prefork.c>
>     StartServers       8
>     MinSpareServers    5
>     MaxSpareServers   20
>     MaxClients       150
>     #MaxRequestsPerChild  1000
>     # for debugging mod_python
>     MaxRequestsPerChild  1
>     </IfModule>
> 
> You'll notice where I comment out the default for MaxRequestsPerChild,
> 1000, and replace it with 1.  This allows each process to only serve
> one request before being killed, so I get a fresh interpreter with
> each request.  When I'm ready for beta testing I switch back to 1000.
> 
> Depending on your development box, this can be slow going, but you
> will NEVER be burned by stale imports.
> 
> Daniel Popowich
> -----------------------------------------------
> http://home.comcast.net/~d.popowich/mpservlets/
> 
> 
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
> 
From huzaifa at hostway.com  Thu Feb  3 16:54:31 2005
From: huzaifa at hostway.com (Huzaifa Tapal)
Date: Thu Feb  3 16:57:56 2005
Subject: [mod_python] Custom handler thread safety
Message-ID: <20050203215755.3EADDBEC6@fiona.siteprotect.com>

Hello All,

 

I wrote a custom mod_python handler that kind of mimicks the cgihandler but
really is an extension to a web framework we have in house.  Just to be
safe, I implemented thread locking into the handler before any request is
processed.  The application is running on a debian box running Apache 2
multithreaded with mod_python 3.13.  We are gaining huge performance
increases by caching our template objects and db connection objects.

 

The problem I am running into is that if I run through the application, each
request takes on average 300 ms to process.  However, when we benchmark with
20 concurrent users, the average goes up to around 2200 ms.  I am very sure
that this is due to a thread locking shared objects in memory which results
in another thread waiting for the lock to be released.

 

If I take the thread locking mechanism out then we run into problems with
there being too many connections being made to the MySQL db if the cached
connection is being used and then the db starts dropping connections.

 

Any help would be much appreciated.  Even if there are any other good
handlers out there other than cgihandler and publisher.

 

Hozi

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20050203/714c4f21/attachment.html
From grahamd at dscpl.com.au  Thu Feb  3 17:18:04 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Thu Feb  3 17:18:07 2005
Subject: [mod_python] Force reload?
Message-ID: <1107469084.23540@dscpl.user.openhosting.com>

David Geller wrote ..
> The way that python handles import is problematic for persistent 
> interpreters such as implemented by mod_python. There doesn't, to me, 
> seem any foolproof, *simple* way to solve reimportation issues in all 
> circumstances, EXCEPT for what Daniel proposes, other than by restarting
> the server. It is such a pain to make some source changes, *think* you
> have reloaded affected modules, and then find out that the changes 
> haven't taken effect!

In terms of your complaint about no one responding to your previous email,
all I can say is no one pays attention to what I post either.

As mentioned in previous followup to this post, the Vampire package has
a module import and caching system which goes quite a long way further
than the standard mod_python one in trying to address these issues. For
those modules where the import system in Vampire is used, it will track
parent/child import relationships and will correctly reimportant any parent
module in a tree when any sub import further down the tree is detected.

Thus, if you have:

  A imports B
  B imports C
  C import D

If C is change and then A accessed, then A, B and C will be reimported
automatically. As D wasn't change it will not.

A lot of work has gone into ensuring this works correctly and there aren't
any issues as yet. Of course, I would love more people to try it out and make
it better if need be.

Obviously, using such a scheme means extra checking and performance
impacts, hopefully slight. The nature of how it works means also that you
can't switch it off. Turning it off is going to make things worse for you
again unless you can gaurantee that your content is static. Such is always
the case with mod_python.

If I wasn't so damn busy right now I would write some proper documentation
for it, so you'll have to put up with snipets if information as questions dictate.

> I have used this method for awhile now, and for 
> debugging/development it seems to work (although I have some unexplained
> problems as I mentioned 11/20/2004 but never got a response on). It 
> certainly is simple, and painless enough.

Looking at your original email, you possibly didn't get a response because
it was quite hard to get ones head around the issue unless you had done
something quite similar. You might have done a bit better if you had shown
simple code examples and time line of requests and output from logging
as appropriate to illustrate the problem more clearly. You also don't seem
to mention if you had set start/max child processes to 1 to ensure that the
results weren't confused by interplay of requests going to multiple processes.
From grahamd at dscpl.com.au  Thu Feb  3 17:30:41 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Thu Feb  3 17:30:44 2005
Subject: [mod_python] Custom handler thread safety
Message-ID: <1107469841.28292@dscpl.user.openhosting.com>

There are bugs in mod_python if using threaded MPM. See:

  http://www.dscpl.com.au/projects/vampire/PATCHES

This may in part contribute to your problems.

Original discussion about it is in mailing list archive. See:

  http://www.modpython.org/pipermail/mod_python/2004-October/016634.html

There are emails about the second part of the bug as well, but can't
spot them right now.

There are also various gotchas when using autoreloading that may also
be affecting you.

Look at the patches as a starting point and then we can perhaps go
step by step through some of your issues and how you are implementing
your code.

Graham

Huzaifa Tapal wrote ..
> Hello All,
> 
>  
> 
> I wrote a custom mod_python handler that kind of mimicks the cgihandler
> but
> really is an extension to a web framework we have in house.  Just to be
> safe, I implemented thread locking into the handler before any request
> is
> processed.  The application is running on a debian box running Apache 2
> multithreaded with mod_python 3.13.  We are gaining huge performance
> increases by caching our template objects and db connection objects.
> 
>  
> 
> The problem I am running into is that if I run through the application,
> each
> request takes on average 300 ms to process.  However, when we benchmark
> with
> 20 concurrent users, the average goes up to around 2200 ms.  I am very
> sure
> that this is due to a thread locking shared objects in memory which results
> in another thread waiting for the lock to be released.
> 
>  
> 
> If I take the thread locking mechanism out then we run into problems with
> there being too many connections being made to the MySQL db if the cached
> connection is being used and then the db starts dropping connections.
> 
>  
> 
> Any help would be much appreciated.  Even if there are any other good
> handlers out there other than cgihandler and publisher.
> 
>  
> 
> Hozi
From huzaifa at hostway.com  Thu Feb  3 18:34:38 2005
From: huzaifa at hostway.com (Huzaifa Tapal)
Date: Thu Feb  3 18:38:04 2005
Subject: [mod_python] Custom handler thread safety
In-Reply-To: <1107469841.28292@dscpl.user.openhosting.com>
Message-ID: <20050203233802.289CEC00E@fiona.siteprotect.com>

Thanks Graham, your response helped a lot.  I wanted to ask another question
related to my original post.  If I am taking advantage of the shared memory
that using multithreaded MPM and storing objects such as db connections and
parsed page templates, do you see a threat with not locking the thread when
making use of those shared resources.

To be more clear, if I have resource object A in the shared memory and
without any kind of thread locking in place, Thread 1 is using lets say the
database connection object, at the same time Thread 2 needs the same
connection object, would that cause any type of a Race Condition?

Do you think it's a good idea to wrap usage of those shared object such as
when I am retrieving it from the cache with the lock.acquire() call on the
thread?

You are of great help, thanks a lot.

Hozi

-----Original Message-----
From: Graham Dumpleton [mailto:grahamd@dscpl.com.au] 
Sent: Thursday, February 03, 2005 4:31 PM
To: Huzaifa Tapal
Cc: mod_python@modpython.org
Subject: Re: [mod_python] Custom handler thread safety

There are bugs in mod_python if using threaded MPM. See:

  http://www.dscpl.com.au/projects/vampire/PATCHES

This may in part contribute to your problems.

Original discussion about it is in mailing list archive. See:

  http://www.modpython.org/pipermail/mod_python/2004-October/016634.html

There are emails about the second part of the bug as well, but can't
spot them right now.

There are also various gotchas when using autoreloading that may also
be affecting you.

Look at the patches as a starting point and then we can perhaps go
step by step through some of your issues and how you are implementing
your code.

Graham

Huzaifa Tapal wrote ..
> Hello All,
> 
>  
> 
> I wrote a custom mod_python handler that kind of mimicks the cgihandler
> but
> really is an extension to a web framework we have in house.  Just to be
> safe, I implemented thread locking into the handler before any request
> is
> processed.  The application is running on a debian box running Apache 2
> multithreaded with mod_python 3.13.  We are gaining huge performance
> increases by caching our template objects and db connection objects.
> 
>  
> 
> The problem I am running into is that if I run through the application,
> each
> request takes on average 300 ms to process.  However, when we benchmark
> with
> 20 concurrent users, the average goes up to around 2200 ms.  I am very
> sure
> that this is due to a thread locking shared objects in memory which
results
> in another thread waiting for the lock to be released.
> 
>  
> 
> If I take the thread locking mechanism out then we run into problems with
> there being too many connections being made to the MySQL db if the cached
> connection is being used and then the db starts dropping connections.
> 
>  
> 
> Any help would be much appreciated.  Even if there are any other good
> handlers out there other than cgihandler and publisher.
> 
>  
> 
> Hozi

From jgentil at sebistar.net  Thu Feb  3 19:21:34 2005
From: jgentil at sebistar.net (Jon-Pierre Gentil)
Date: Thu Feb  3 19:21:47 2005
Subject: [mod_python] Force reload?
In-Reply-To: <4202654A.70900@tbc.net>
References: <200502022059.42196.jgentil@sebistar.net> <4202654A.70900@tbc.net>
Message-ID: <200502031821.39985.jgentil@sebistar.net>

On Thursday 03 February 2005 11:54 am, Shawn Harrison wrote:

> Well, sometimes you have to roll up your sleeves when the package
> doesn't do exactly what you want.
>
> A solution that hasn't been suggested: write a simple function that
> imports a module, then reloads it, and returns the module object. Then
> use that for all imports. You could also define a "PythonOption
> MyAppDebug True/False" Apache directive, and make the reload
> instruction in your function only happen if this option is True.

I've found something that works decently well..
A hotkey bound to a command in my IDE.  :)  Just runs  

find /path/to/webdir -exec touch {};

Works great.  Makes mod_python reload everything.  weird.

-- 
_________________________________________________________

  Jon-Pierre Gentil               PGP: 0xA21BC30E
  jabber: jgentil@sebistar.net    web: www.sebistar.net
  "If you think education is expensive, try ignorance."
_________________________________________________________ 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 197 bytes
Desc: not available
Url : http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20050203/c8f18be9/attachment.bin
From grahamd at dscpl.com.au  Thu Feb  3 19:44:35 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Thu Feb  3 19:44:41 2005
Subject: [mod_python] Custom handler thread safety
Message-ID: <1107477875.15029@dscpl.user.openhosting.com>

Huzaifa Tapal wrote ..
> Thanks Graham, your response helped a lot.  I wanted to ask another question
> related to my original post.  If I am taking advantage of the shared memory
> that using multithreaded MPM and storing objects such as db connections
> and
> parsed page templates, do you see a threat with not locking the thread
> when
> making use of those shared resources.
> 
> To be more clear, if I have resource object A in the shared memory and
> without any kind of thread locking in place, Thread 1 is using lets say
> the
> database connection object, at the same time Thread 2 needs the same
> connection object, would that cause any type of a Race Condition?
> 
> Do you think it's a good idea to wrap usage of those shared object such
> as
> when I am retrieving it from the cache with the lock.acquire() call on
> the
> thread?

What you need to do will depend on a few things.

Is the Python database connection object internally thread safe?

For a particular request, does it only need to use the database
connection once, or does it need to perform multiple actions
against the database of which all together she be performed
atomically?

Are the results of any database query being cached within your
shared data area?

Do you have PythonAutoReload set to "On" and relying on that
working for the module which holds your database connection
and shared data.

Try and give at least a Y/N answer for each.

In brief though, if the database connection object is in itself thread
safe, and that for a request only one database query/update is being
done and nothing is being cached resulting from that, you may well
not have to provide your own thread locks.

If this isn't the case, you may have to lock your shared data and
database connection with a single lock, while you possibly make
multiple queries/updates and save the result in your shared data
area. If you don't lock at a high enough level, classic problems of
another threading changing the database under you, or messing with
your shared data can happen.

I ask about the PythonAutoReload as there are lots of problems there
that most people don't seem to understand or appreciate. Thus, if you
are using apache.import_module() to load in your module containing
the database connections and shared data, indicate as much and I
can explain some of the problems there.

Graham
From harrison at tbc.net  Thu Feb  3 22:49:19 2005
From: harrison at tbc.net (Shawn Harrison)
Date: Thu Feb  3 22:47:08 2005
Subject: [mod_python] Force reload?
In-Reply-To: <42027BDE.2040001@tbc.net>
References: <200502022059.42196.jgentil@sebistar.net> <4202654A.70900@tbc.net>
	<42027BDE.2040001@tbc.net>
Message-ID: <4202F0BF.80904@tbc.net>

Shawn Harrison wrote [02/03/05 1:30 PM]:
> I should have mentioned that you could also just use PythonDebug On 
> and then you're using req.get_config(), and this would be global. 
> Whereas if you define your own PythonOption you can turn on/off 
> debugging for different parts of your application and you'll be using
>  req.get_option().
> 

First of all, I should introduce myself before continuing with this
thread. I joined the list this past week; I've been actively developing
with mod_python for about a year and loving it. I'm a project manager by
day, a web and database developer by night.

I'm interested in this discussion about forcing reload, because I've
been using "apachectl restart" to handle this issue and am ready to do
something better.

David Geller wrote [02/03/05 1:34 PM]:
> The way that python handles import is problematic for persistent 
> interpreters such as implemented by mod_python. There doesn't, to me,
>  seem any foolproof, *simple* way to solve reimportation issues in 
> all circumstances, EXCEPT for what Daniel proposes, other than by 
> restarting the server. It is such a pain to make some source changes,
>  *think* you have reloaded affected modules, and then find out that 
> the changes haven't taken effect! I have used this method for awhile
>  now, and for debugging/development it seems to work ...

I'm curious about this. I just whacked up the following function over
lunch today, following my own advice, and tested it a bit just now. The 
function seems to work just fine in all the use cases (though I didn't 
do formal unit testing).

Is there any reason I'm not seeing why this function won't solve the 
reload problem, if used in place of all import statements in the 
application?

def import_(modname, req=None, pythonopt=None, reloadp=False):
     """Imports the given module and, if directed, reloads it.
         (Required:)
             modname   -- the name of the module to import
         (Optional:)
             req       -- a mod_python req object
                          (needed to check Apache directives)
             pythonopt -- the name of a PythonOption debug flag
                          for your app
             reloadp   -- a direct boolean instruction to reload or not.

         If a True value is given for reloadp, the module will be
         reloaded. Otherwise, if only the module name is given, the
	module will only be imported and not reloaded. But if req is
	given, it will be used to check the Apache directives to see
	whether reload() should be done. If pythonopt is also given, the
	value of the named PythonOption will be used (The PythonOption
	can be named anything; it must have the value 'On' or 'True' or
	'1' in order to be True); otherwise, the value of PythonDebug
	will be used if it exists. (The value of PythonDebug is either
	'1' or '0'.)
     """

     # shamelessly stolen from the Python documentation....
     mod = __import__(modname)
     components = modname.split('.')
     for comp in components[1:]:
         mod = getattr(mod, comp)

     # decide whether to reload()
     if req:
         if pythonopt and req.get_options().has_key(pythonopt):
             opt = req.get_options()[pythonopt]
             if opt == 'On' or opt == 'True' or opt == '1':
                 reloadp = True
         elif req.get_config().has_key('PythonDebug'):
             if req.get_config()['PythonDebug'] == '1':
                 reloadp = True
     if reloadp == True:
         reload(mod)

     return mod

# Tested with Apache/2.0.52 (Win32) mod_python/3.1.3 Python/2.3.4 Server
-- 
Shawn Harrison
________________
harrison@tbc.net

From grahamd at dscpl.com.au  Thu Feb  3 23:22:22 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Thu Feb  3 23:22:25 2005
Subject: [mod_python] Force reload?
Message-ID: <1107490942.901@dscpl.user.openhosting.com>

Shawn Harrison wrote ..
> I'm curious about this. I just whacked up the following function over
> lunch today, following my own advice, and tested it a bit just now. The
> function seems to work just fine in all the use cases (though I didn't
> do formal unit testing).
> 
> Is there any reason I'm not seeing why this function won't solve the 
> reload problem, if used in place of all import statements in the 
> application?

It will not work where there are multiple levels of imports. Consider the following
where "a.py" is the top level content handler that all access are done through it.

  # module c.py

  ...

  # module b.py

  from mod_python import apache

  c = apache.import_module("c",autoreload=1)

  ...

  # module a.py

  from mod_python import apache

  b = apache.import_module("b",autoreload=1)

When "a.py" is loaded internally by mod_python, it is also done by the
apache.import_module() method.

If you modify "a.py", mod_python will detect it and it will get reloaded
automatically provide PythonAutoReload is "On".

If you modify "b.py" nothing happens. This is because there is no depth
search to determine that anything used by "a.py" was modified.

This at least will be the case where the import is done at global scope.
If on the other hand you had the following:

  # module a.py

  from mod_python import apache

  def handler(req):
    b = apache.import_module("b",autoreload=1)

This will work better as each time the handler is called to process the
request, it effectively asks for the sub module. If "b.py" hasn't changed,
then it comes from the cache. If "b.py" has changed, then it will be
reloaded.

If "c.py" is now modified, again, nothing gets reloaded. To fix this would
mean that every function in "b.py" that you might call that uses stuff
from "c.py" would have to be changed to ask for the "c" module each
time. Where "b.py" is a bunch of utility functions, this becomes a mess.
It also precludes simple global data in "b" that is somehow dependent
on "c", as it isn't easy to refresh global data in "b" which is based on "c"
in each function if "c" happened to get reloaded.

The current mechanisms available are thus not very effective in assisting
with the problem.

I could mention Vampire yet again and how it has solved this problem
and many other module loading issues, but based on the continuing
followups which show that no one has read what I said, I will refrain
from doing so ..... ;-(

Graham
  
From lbruhmuller at yahoo.com  Fri Feb  4 01:51:03 2005
From: lbruhmuller at yahoo.com (Lawrence Bruhmuller)
Date: Fri Feb  4 01:51:05 2005
Subject: [mod_python] Installing mod_python to use a different version of
	python
Message-ID: <20050204065103.57817.qmail@web41724.mail.yahoo.com>

Here is my dilemma:
 
I am developing software to sit on top of RH Enterprise Linux (3.0 ES), and furthermore sit on top of Python/Apache/mod_python.  Business reasons dictate RHEL as opposed to Fedora or other options.
 
To support my application, I need mod_python 3.1.x, since I need the mod_python.Session module.  RHEL comes with mod_python 3.0.3.
 
In addition, I also need python 2.3.x, and RHEL comes with 2.2.3.
 
As I understand it, it is not a good idea to upgrade the system version of python, as all kinds of other dependent programs could go awry.  So I can avoid this by just building python 2.3 from source, as the package "python2.3", leaving "python" as is at 2.2.3.
 
But if I do this, when I build mod_python from source, isn't it going to build against "python" which is the old version?  And hence I won't get what I want?  How I do I get mod_python built so that my "extra" python is used at buildtime/runtime?
 
Thanks much,
 
Lawrence


		
---------------------------------
Do you Yahoo!?
 Yahoo! Search presents - Jib Jab's 'Second Term'
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20050203/eb5e58c8/attachment.html
From christopher.jackson at gmail.com  Fri Feb  4 02:08:27 2005
From: christopher.jackson at gmail.com (Chris Jackson)
Date: Fri Feb  4 02:08:30 2005
Subject: [mod_python] Installing mod_python to use a different version of
	python
In-Reply-To: <20050204065103.57817.qmail@web41724.mail.yahoo.com>
References: <20050204065103.57817.qmail@web41724.mail.yahoo.com>
Message-ID: <4d11484d05020323089aa9ae2@mail.gmail.com>

Point to the Apache version and Python version you want to use by doing:

./configure --with-apxs=/path/to/your/apache/bin/apxs \ 
            --with-python=/path/to/your/python/python2.x

Also, you may need to edit the LIBEXECDIR variable located in the
Makefile to point
to your Apache 2.x (/path/to/apache/modules) modules directory.

~= Chris =~


On Thu, 3 Feb 2005 22:51:03 -0800 (PST), Lawrence Bruhmuller
<lbruhmuller@yahoo.com> wrote:
>  
> Here is my dilemma: 
>   
> I am developing software to sit on top of RH Enterprise Linux (3.0 ES), and
> furthermore sit on top of Python/Apache/mod_python.  Business reasons
> dictate RHEL as opposed to Fedora or other options. 
>   
> To support my application, I need mod_python 3.1.x, since I need the
> mod_python.Session module.  RHEL comes with mod_python 3.0.3. 
>   
> In addition, I also need python 2.3.x, and RHEL comes with 2.2.3. 
>   
> As I understand it, it is not a good idea to upgrade the system version of
> python, as all kinds of other dependent programs could go awry.  So I can
> avoid this by just building python 2.3 from source, as the package
> "python2.3", leaving "python" as is at 2.2.3. 
>   
> But if I do this, when I build mod_python from source, isn't it going to
> build against "python" which is the old version?  And hence I won't get what
> I want?  How I do I get mod_python built so that my "extra" python is used
> at buildtime/runtime? 
>   
> Thanks much, 
>   
> Lawrence
> 
>  ________________________________
> Do you Yahoo!?
>  Yahoo! Search presents - Jib Jab's 'Second Term' 
> 
> 
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
> 
> 
>
From davidf at sjsoft.com  Fri Feb  4 02:45:55 2005
From: davidf at sjsoft.com (David Fraser)
Date: Fri Feb  4 02:46:03 2005
Subject: [mod_python] Installing mod_python to use a different version
	of	python
In-Reply-To: <20050204065103.57817.qmail@web41724.mail.yahoo.com>
References: <20050204065103.57817.qmail@web41724.mail.yahoo.com>
Message-ID: <42032833.5040400@sjsoft.com>

Lawrence Bruhmuller wrote:

> Here is my dilemma:
>  
> I am developing software to sit on top of RH Enterprise Linux (3.0 
> ES), and furthermore sit on top of Python/Apache/mod_python.  Business 
> reasons dictate RHEL as opposed to Fedora or other options.
>  
> To support my application, I need mod_python 3.1.x, since I need the 
> mod_python.Session module.  RHEL comes with mod_python 3.0.3.
>  
> In addition, I also need python 2.3.x, and RHEL comes with 2.2.3.
>  
> As I understand it, it is not a good idea to upgrade the system 
> version of python, as all kinds of other dependent programs could go 
> awry.  So I can avoid this by just building python 2.3 from source, as 
> the package "python2.3", leaving "python" as is at 2.2.3.
>  
> But if I do this, when I build mod_python from source, isn't it going 
> to build against "python" which is the old version?  And hence I won't 
> get what I want?  How I do I get mod_python built so that my "extra" 
> python is used at buildtime/runtime?
>  
> Thanks much,
>  
> Lawrence
>
> Do you Yahoo!?
> Yahoo! Search presents - Jib Jab's 'Second Term' 
> <http://us.rd.yahoo.com/evt=30648/*http://movies.yahoo.com/movies/feature/jibjabinaugural.html>


Here is the script I use to build apache, python and modpython on RedHat 
7.3 (a bit similar to RHEL)

#!/bin/bash
pythonversion=2.3.4
apacheversion=2.0.52
modpythonversion=3.1.3
(
 cd python-$pythonversion
 ./configure --prefix=/usr/local/python23 && make && make install
) && (
 cd httpd-$apacheversion
 ./configure --prefix=/usr/local/apache2 --enable-proxy && make && make 
install
) && (
 cd mod_python-$modpythonversion
 ./configure --with-apxs=/usr/local/apache2/bin/apxs 
--with-python=/usr/local/python23/bin/python && make && su -c "make install"
)

David
From harrison at tbc.net  Fri Feb  4 09:27:00 2005
From: harrison at tbc.net (Shawn Harrison)
Date: Fri Feb  4 09:24:54 2005
Subject: [mod_python] Force reload?
In-Reply-To: <1107490942.901@dscpl.user.openhosting.com>
References: <1107490942.901@dscpl.user.openhosting.com>
Message-ID: <42038634.1000907@tbc.net>

> I could mention Vampire yet again and how it has solved this problem
> and many other module loading issues, but based on the continuing
> followups which show that no one has read what I said, I will refrain
> from doing so ..... ;-(
> 

I do have a question about Vampire. I want to have a Python script

	/web/websitename/www/photos/index.py

where I've appended /web to sys.path, so that

	websitename.www.photos.index

is a module name. Okay. I want to publish photos with urls like

	http://websitename/photos/2004/10/01/137

Can Vampire send all requests for paths under /photos/ to the photos
index module?

Thanks,
Shawn

From harrison at tbc.net  Fri Feb  4 09:45:56 2005
From: harrison at tbc.net (Shawn Harrison)
Date: Fri Feb  4 09:43:46 2005
Subject: [mod_python] Auto-reload
Message-ID: <42038AA4.5010609@tbc.net>

Graham,

Let's suppose I have the following four modules a.py, b.py, c.py, and 
util.py in a folder in sys.path, and in httpd.conf I have "PythonHandler 
a" for a given url space. If I make changes in a.py, b.py or c.py, these 
changes are immediately visible in the browser.

# a.py
def handler(req):
     import util
     b = util.import_('b', req)
     b.print_(req)
     return apache.OK

# b.py
def print_(req):
     import util
     c = util.import_('c', req)
     c.print_(req)

# c.py
def print_(req):
     req.write("Hello, folks.\nFine day, ain't it?\n")

# util.py
def import_(modname, req=None, pythonopt=None, reloadp=False):
     # shamelessly stolen from the Python documentation....
     mod = __import__(modname)
     components = modname.split('.')
     for comp in components[1:]:
         mod = getattr(mod, comp)

     # decide whether to reload()
     if req:
         if pythonopt and req.get_options().has_key(pythonopt):
             opt = req.get_options()[pythonopt]
             if opt == 'On' or opt == 'True' or opt == '1':
                 reloadp = True
         elif req.get_config().has_key('PythonDebug'):
             if req.get_config()['PythonDebug'] == '1':
                 reloadp = True
     if reloadp == True:
         reload(mod)
     return mod

If I haven't made changes, it reloads using the .pyc file that it 
generated on the first import. I don't see the flaws in this system, 
except the need to use a non-standard import syntax (but it's functional).
-- 
________________
harrison@tbc.net
From grisha at modpython.org  Fri Feb  4 10:33:37 2005
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Feb  4 10:44:20 2005
Subject: [mod_python] Force reload?
In-Reply-To: <1107490942.901@dscpl.user.openhosting.com>
References: <1107490942.901@dscpl.user.openhosting.com>
Message-ID: <20050204102632.P8854@grisha.dyndns.org>



On Thu, 3 Feb 2005, Graham Dumpleton wrote:

> Shawn Harrison wrote ..
>>
>> Is there any reason I'm not seeing why this function won't solve the
>> reload problem, if used in place of all import statements in the
>> application?

I'm not too keen on "solving the reload prolem" because no matter how 
clever mechanism, reload has some inherent problems, e.g.:

$ cat foo.py

A = [1,2,3]
B = [2,3,4]

$ python
Python 2.3.3 (#1, May  7 2004, 10:31:40)
[GCC 3.3.3 20040412 (Red Hat Linux 3.3.3-7)] on linux2
Type "help", "copyright", "credits" or "license" for more information.
>>> import foo
>>> foo.A
[1, 2, 3]
>>> x = foo.A
>>> ^Z

[here i edit foo.py and comment out A]

>>>
>>> foo = reload(foo)
>>> foo.A
[1, 2, 3]
>>>

so as you see A is still there. So you're bound to have to restart your 
server at some point. IMO the reload mechanism should be sufficient enough 
to avoid having to restart httpd all of the time, but the developer still 
needs to understand how Python works and realize that some situation are 
only solved by a restart.

Grisha


From dagurp at heimsnet.is  Fri Feb  4 11:52:20 2005
From: dagurp at heimsnet.is (=?ISO-8859-1?Q?Dagur_P=E1ll_Ammendrup?=)
Date: Fri Feb  4 11:52:41 2005
Subject: [mod_python] Cookie problems
Message-ID: <4203A844.2010003@heimsnet.is>


Hi,
I create a cookie and set it to expire in 2 weeks like this:

 cookie = Cookie.Cookie('foo', bar)
 cookie.expires = time() + 1209600  # 2 weeks
 Cookie.add_cookie(req, cookie)

But whatever I set "expires" to it is always set to "end of session".
I also tried doing this: Cookie.add_cookie(req, 'foo', bar, 
expires=time() + 1209600)

but that doesn't change anything. is this because I use sessions too?


-- 
No virus found in this outgoing message.
Checked by AVG Anti-Virus.
Version: 7.0.300 / Virus Database: 265.8.5 - Release Date: 3.2.2005

From dagurp at heimsnet.is  Fri Feb  4 12:06:03 2005
From: dagurp at heimsnet.is (dagurp@heimsnet.is)
Date: Fri Feb  4 12:06:10 2005
Subject: [mod_python] Cookie problem
Message-ID: <web-77469351@heimsnet.is>

Hi,
I create a cookie and set it to expire in 2 weeks like this:

 cookie = Cookie.Cookie('foo', bar)
 cookie.expires = time() + 1209600  # 2 weeks
 Cookie.add_cookie(req, cookie)

But whatever I set "expires" to it is always set to "end of session".
I also tried doing this: Cookie.add_cookie(req, 'foo', bar, expires=time() +
1209600)

but that doesn't change anything. Is this because I use sessions too?
From jgentil at sebistar.net  Fri Feb  4 13:09:54 2005
From: jgentil at sebistar.net (Jon-Pierre Gentil)
Date: Fri Feb  4 13:10:08 2005
Subject: [mod_python] Cookie problem
In-Reply-To: <web-77469351@heimsnet.is>
References: <web-77469351@heimsnet.is>
Message-ID: <200502041209.59863.jgentil@sebistar.net>

On Friday 04 February 2005 11:06 am, dagurp@heimsnet.is wrote:

> Hi,
> I create a cookie and set it to expire in 2 weeks like this:
>
>  cookie = Cookie.Cookie('foo', bar)
>  cookie.expires = time() + 1209600  # 2 weeks
>  Cookie.add_cookie(req, cookie)
>
> But whatever I set "expires" to it is always set to "end of session".
> I also tried doing this: Cookie.add_cookie(req, 'foo', bar,
> expires=time() + 1209600)

From the documentation:

The expires attribute is a property whose value is checked upon setting to 
be in format "Wdy, DD-Mon-YYYY HH:MM:SS GMT" (as dictated per Netscape 
cookie specification), or a numeric value representing time in seconds 
since beginning of epoch (which will be automatically correctly converted 
to GMT time string). An invalid expires value will raise ValueError.

Therefore, you cannot set it to time.time().  You'll need to create a 
strftime string for it.



-- 
_________________________________________________________

  Jon-Pierre Gentil               PGP: 0xA21BC30E
  jabber: jgentil@sebistar.net    web: www.sebistar.net
  "If you think education is expensive, try ignorance."
_________________________________________________________ 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 197 bytes
Desc: not available
Url : http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20050204/ee19f1e3/attachment.bin
From harrison at tbc.net  Fri Feb  4 14:35:12 2005
From: harrison at tbc.net (Shawn Harrison)
Date: Fri Feb  4 14:33:02 2005
Subject: [mod_python] Force reload?
In-Reply-To: <20050204102632.P8854@grisha.dyndns.org>
References: <1107490942.901@dscpl.user.openhosting.com>
	<20050204102632.P8854@grisha.dyndns.org>
Message-ID: <4203CE70.5010407@tbc.net>

Gregory (Grisha) Trubetskoy wrote [02/04/05 9:33 AM]:
> I'm not too keen on "solving the reload prolem" because no matter how 
> clever mechanism, reload has some inherent problems, e.g.:
> 
[...]
> so as you see A is still there. So you're bound to have to restart your 
> server at some point. IMO the reload mechanism should be sufficient 
> enough to avoid having to restart httpd all of the time, but the 
> developer still needs to understand how Python works and realize that 
> some situation are only solved by a restart.
> 
> Grisha

I love your software. Thanks for doing it.

Point well taken. Homemade import functions can't handle every 
situation, but they can lighten the administrative load. It seems pretty 
clear that doing so is desirable, despite the limitations.

Thanks again.

Regards,
Shawn
-- 
________________
harrison@tbc.net
From huzaifa at hostway.com  Fri Feb  4 14:56:42 2005
From: huzaifa at hostway.com (Huzaifa Tapal)
Date: Fri Feb  4 15:00:44 2005
Subject: [mod_python] Custom handler thread safety
In-Reply-To: <1107477875.15029@dscpl.user.openhosting.com>
Message-ID: <20050204200008.77E96B9FC@fiona.siteprotect.com>

Hello Graham,

Below are the Y/N answers to your questions:

> What you need to do will depend on a few things.
> 
> Is the Python database connection object internally thread safe?

-- not its not.

> 
> For a particular request, does it only need to use the database
> connection once, or does it need to perform multiple actions
> against the database of which all together she be performed
> atomically?

-- the way it currently works is that we have a Data Access Layer that keeps
track of all the resources any of its components needs, including database
connections to various databases as those database connections are
requested.  So to answer your question, during the life of a request, a
database connection to a particular database can be used multiple times in
different modules, and all of those modules get the handle on that
connection by asking the data access layer's resource module.  

> 
> Are the results of any database query being cached within your
> shared data area?

-- no results from the db gets cached

> 
> Do you have PythonAutoReload set to "On" and relying on that
> working for the module which holds your database connection
> and shared data.

-- PythonAutoReload is "On", however, I am not using _apache.import_module
to import the module the data access layer's resource module.

> 
> Try and give at least a Y/N answer for each.
> 
> In brief though, if the database connection object is in itself thread
> safe, and that for a request only one database query/update is being
> done and nothing is being cached resulting from that, you may well
> not have to provide your own thread locks.
> 
> If this isn't the case, you may have to lock your shared data and
> database connection with a single lock, while you possibly make
> multiple queries/updates and save the result in your shared data
> area. If you don't lock at a high enough level, classic problems of
> another threading changing the database under you, or messing with
> your shared data can happen.
> 
> I ask about the PythonAutoReload as there are lots of problems there
> that most people don't seem to understand or appreciate. Thus, if you
> are using apache.import_module() to load in your module containing
> the database connections and shared data, indicate as much and I
> can explain some of the problems there.
> 
> Graham

From dagurp at heimsnet.is  Fri Feb  4 19:00:08 2005
From: dagurp at heimsnet.is (dagurp@heimsnet.is)
Date: Fri Feb  4 19:00:10 2005
Subject: [mod_python] Cookie problem
Message-ID: <web-77488587@heimsnet.is>

On Friday 04 February 2005 11:06 am, dagurp@heimsnet.is wrote:
>> Hi,
>> I create a cookie and set it to expire in 2 weeks like this:
>>
>>  cookie = Cookie.Cookie('foo', bar)
>>  cookie.expires = time() + 1209600  # 2 weeks
>>  Cookie.add_cookie(req, cookie)
>>
>> But whatever I set "expires" to it is always set to "end of session".
>> I also tried doing this: Cookie.add_cookie(req, 'foo', bar,
>> expires=time() + 1209600)


>From the documentation:

>The expires attribute is a property whose value is >checked upon setting to 
>be in format "Wdy, DD-Mon-YYYY HH:MM:SS GMT" (as >dictated per Netscape 
>cookie specification), or a numeric value >representing time in seconds 
>since beginning of epoch (which will be >automatically correctly converted 
>to GMT time string). An invalid expires value will >raise ValueError.
>
>Therefore, you cannot set it to time.time().  You'll >need to create a 
>strftime string for it.

If you read it more carefully you'll see that you can use a numeric value. In
fact that's what they do in the examples. I did try to use the Netscape format
however but it always gave me errors.

From grisha at modpython.org  Fri Feb  4 19:45:17 2005
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Feb  4 19:45:12 2005
Subject: [mod_python] Cookie problem
In-Reply-To: <web-77469351@heimsnet.is>
References: <web-77469351@heimsnet.is>
Message-ID: <20050204194335.E683@grisha.dyndns.org>



On Fri, 4 Feb 2005 dagurp@heimsnet.is wrote:

> Hi,
> I create a cookie and set it to expire in 2 weeks like this:
>
> cookie = Cookie.Cookie('foo', bar)
> cookie.expires = time() + 1209600  # 2 weeks
> Cookie.add_cookie(req, cookie)
>
> But whatever I set "expires" to it is always set to "end of session".

How do you know this?

Try writing the cookie to the error log to see what your server sends out, 
with something like

 	req.log_error(str(cookie))

Grisha
From grahamd at dscpl.com.au  Fri Feb  4 21:07:16 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Fri Feb  4 21:07:24 2005
Subject: [mod_python] Force reload?
In-Reply-To: <20050204102632.P8854@grisha.dyndns.org>
References: <1107490942.901@dscpl.user.openhosting.com>
	<20050204102632.P8854@grisha.dyndns.org>
Message-ID: <53d3b1a7c83376c807488274f79f38f5@dscpl.com.au>


On 05/02/2005, at 2:33 AM, Gregory (Grisha) Trubetskoy wrote:
> so as you see A is still there. So you're bound to have to restart 
> your server at some point. IMO the reload mechanism should be 
> sufficient enough to avoid having to restart httpd all of the time, 
> but the developer still needs to understand how Python works and 
> realize that some situation are only solved by a restart.

Actually, vampire gets around that as well. It doesn't use the "imp" 
module
and uses execfile() instead. Taking this approach one has greater 
control as
things aren't stored into sys.modules and one can simply load into a new
empty module.

This does however mean that variables aren't persistent across reloads 
which
is why deleting stuff actually works. As such, if you do want persistent
variables, you have to denote explicitly that this is what is desired by
supplying a __clone__() method in your module which will transfer such
data across to the new module.

By making it explicit, it also makes users face the implications of 
doing
reloads. Most users wouldn't realise that a reload will replace a 
variable
that exists in both new and old modules. This can be really bad if it 
is a
database connection pool, as the original copy is done away with, 
potentially
without actually closing the connections off. Thus one can have an ever
increase set of database connections as reloads occur, with most be 
unusable.

Making it explicit also means it is likely that some of the threading 
issues
might be dealt with. For example, what happens if a reload occurs while 
a
separate thread is handing a request and is accessing the data that is 
being
reloaded on top off.

Unfortunately, all the reasons why Vampire does all these things isn't
documented yet, but am slowly working my way towards it. :-)

Graham

From grahamd at dscpl.com.au  Fri Feb  4 21:33:59 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Fri Feb  4 21:34:06 2005
Subject: [mod_python] Auto-reload
In-Reply-To: <42038AA4.5010609@tbc.net>
References: <42038AA4.5010609@tbc.net>
Message-ID: <988d22b064d91197777deabc01c3e960@dscpl.com.au>


On 05/02/2005, at 1:45 AM, Shawn Harrison wrote:

> Graham,
>
> Let's suppose I have the following four modules a.py, b.py, c.py, and 
> util.py in a folder in sys.path, and in httpd.conf I have 
> "PythonHandler a" for a given url space. If I make changes in a.py, 
> b.py or c.py, these changes are immediately visible in the browser.

As mentioned in my original email, it only works because the 
loading/reloading
of the module is done from inside every function, which can just get 
messy after a
while.

What most people are used to in Python is loading modules at global 
scope within a
module. Ie.,

   # c.py

   ...

   # b.py

   import c

   # a.py

   import b

Obviously, use this way isn't going to work, but the first thing people 
will try and
which would be preferable, is to replace the "import" where it is with:

   c = apache.import_module("c")

Ie., still at global scope in module.

This however doesn't work, as determination of whether sub import needs 
to be reload
is only done at import time of the parent module and not per request.

Thus, yes the way you have done it will work in the way you have used 
it, that is, in
every method, but use it at global scope as above and it doesn't and is 
not different
to how the mod_python module loader works.

Just think now of what you have to do if util.py had 40 methods and 
required other
sub modules imports. Every method that uses a sub module, has to load 
it. As I said
it gets messy and this shouldn't have to be the case. With Vampire's 
module loader
you can still do it at global scope (once) and it will work.

Graham




From grahamd at dscpl.com.au  Fri Feb  4 22:51:32 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Fri Feb  4 22:51:38 2005
Subject: [mod_python] Photo Album Viewer and req.path_into.
In-Reply-To: <42038634.1000907@tbc.net>
References: <1107490942.901@dscpl.user.openhosting.com>
	<42038634.1000907@tbc.net>
Message-ID: <83c91340a4b8113ebe2bf2666b05dc7f@dscpl.com.au>


On 05/02/2005, at 1:27 AM, Shawn Harrison wrote:

>> I could mention Vampire yet again and how it has solved this problem
>> and many other module loading issues, but based on the continuing
>> followups which show that no one has read what I said, I will refrain
>> from doing so ..... ;-(
>
> I do have a question about Vampire. I want to have a Python script
>
> 	/web/websitename/www/photos/index.py
>
> where I've appended /web to sys.path, so that
>
> 	websitename.www.photos.index
>
> is a module name. Okay. I want to publish photos with urls like
>
> 	http://websitename/photos/2004/10/01/137
>
> Can Vampire send all requests for paths under /photos/ to the photos

Not knowing for sure what you are wanting to do, I am going to assume 
that
you want to wrap image files in a HTML page automatically.

Firstly, Vampire is structured so as to avoid altogether use of sys.path
and all the complications that can arise because of it. Thus, you would
not add "/web" to sys.path. Thus, to configure things, one would use:

   Options -Indexes -MultiViews

   SetHandler python-program
   PythonHandler vampire
   PythonPath 'sys.path'
   PythonDebug On

Indexes are turned off because we wouldn't want it, and MultiViews is 
turned
off because auto negotiation of file types screws with how Vampire 
works.

PythonPath is set to "sys.path" in order to stop mod_python from adding 
that
directory into "sys.path" as we don't want that either. This is so 
nothing
tries to attempt to load any Python code files in the document tree as 
Python
modules using "import".

Assuming that the "photos" directory is where the images actually live, 
am
going to change things around a little and rename "photos" to "library".

Rather than create a Python code file residing at "photos/index.py" it 
would
be called "photos.py". In this is placed the code at the end of this 
email.

I can now say:

   http://websitename/photos/2004/10/01/137

What will happen with how I have written this is that it will display a 
HTML
page including a header which is the path to the image. It will include 
also
include an <img> tag so that the image will be loaded into the HTML 
page as
well.

In terms of what you are probably wanting, the important thing is the
"req.path_info" data. This is the part of the path which matches beyond 
the
actual content handler found to service the request. This was used to 
look
in the "library" directory to see if there was a corresponding image 
with
a supported extension type.

If none was found, a not found error would be returned. If one was, the
HTML page would be displayed.

One could if one wants, really fancy up the HTML page and also detect 
when
reference was made to a directory and generate a HTML index page 
instead.
With the help of other content handler scripts, one could even generate
thumbnails on the fly in the index pages where appropriate.

Anyway, not sure how close this might be to what you want to finally
achieve, but at least shows use of "req.path_info".

Note that the reason I had to rename the directory containing the 
images is
that the way Apache resolves paths, it will give precedence to 
subdirectory
search matching and thus will not hand off control to Vampire properly 
if I
had "photos.py" handler and "photos" directory.

I could have instead put the code in the "photos" subdirectory, but 
wouldn't
have called it "index.py" but "browse.py". This is nothing to do with 
the
problems that mod_python.publisher has with having lots of files called
"index.py", as Vampire can quite happily cope with that. It is because 
the
URL would then needed to have instead be:

   http://websitename/photos/browse/2004/10/01/137

It looks better to have "browse" rather than "index". Note though that 
if
I had called it "browse.py" and put it in the directory itself, the code
would need a slight tweak and where "subdir" is set to "library", make 
it "."
instead. Ie., start searching from the current directory and not a 
"library"
subdirectory.

Hope this is of interest. This might actually be a good example for me 
of
showing off Vampire. Although, I could see it being extended further 
than
this simple bit of code to become a nice photo album viewer.

Graham


# Now for the code.

from mod_python import apache

import os
import posixpath

_PAGE = """
<html>
<body>
<h1>Photo: %(name)s</h1>
<img src="%(url)s" />
</body>
</html>
"""

# Handler for virtual directory.

def handler(req):

   # Determine stub of image file to view.

   if req.path_info == "":
     return apache.HTTP_BAD_REQUEST
   elif req.path_info == "/":
     return apache.HTTP_BAD_REQUEST

   name = os.path.splitext(req.path_info[1:])[0]

   # Determine what type of image file it is.

   subdir = "library"
   # subdir = "."  # use this if wanting to make it "browse.py" in 
"photos" subdir

   root = os.path.join(os.path.dirname(req.filename),subdir)

   path = None
   extn = None

   allowed = [ ".jpg", ".gif" ]

   for suffix in allowed:
     file = os.path.join(root,name) + suffix

     if os.path.exists(file):
       path = file
       extn = suffix

   if path == None:
     return apache.HTTP_NOT_FOUND

   # Determine the URL to the actual image.

   baseurl = os.path.dirname(req.uri[:-len(req.path_info)])

   url = posixpath.join(baseurl,subdir,name+extn)

   content = _PAGE % { "name": name, "url": url }

   # Return the rendered page content.

   req.content_type = "text/html"
   req.send_http_header()

   req.write(content)

   return apache.OK










From grahamd at dscpl.com.au  Fri Feb  4 23:38:43 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Fri Feb  4 23:38:59 2005
Subject: [mod_python] Custom handler thread safety
In-Reply-To: <20050204200008.77E96B9FC@fiona.siteprotect.com>
References: <20050204200008.77E96B9FC@fiona.siteprotect.com>
Message-ID: <45b52d58b25b19dc2f8f858d5f178fb9@dscpl.com.au>

I'll try and get back to your original problem. I probably digressed
and certainly said some things already that most likely aren't relevant
at all. I should have perhaps read the email properly. My excuse is that
I was having a busy day that day. :-)

On 05/02/2005, at 6:56 AM, Huzaifa Tapal wrote:
>> Is the Python database connection object internally thread safe?
>
> -- not its not.

I should have phrased this question a bit better. Does the database
interface code support having multiple connection objects active at
the same time, where each may be held by a distinct thread with that
thread doing whatever it wants with its own connection object?

Thus, a single database connection object doesn't necessarily have
to be thread safe in itself, as long as there can be multiple connection
objects each being used at the same time by different threads.

Anyway, in your original email you said:

   Just to be safe, I implemented thread locking into the handler
   before any request is processed.

That to me says what you did was to make sure only one request at a
time could actually do anything. Thus all requests were serialised.
If this was the case, you wouldn't have had any thread problems because
there wouldn't have actually been multiple requests active, a latter
request would have sat there until the previous one finished.

If this is true, using a multithreaded MPM would also have just made
things worse. You would have been better of using Apache in "prefork"
mode as then each request in each process could have at least run in
parallel.

Next you said:

   We are gaining huge performance increases by caching our template
   objects and db connection objects.

Which is logical, as you have avoided the startup cost with creating
a database connection for each request, as well as the cost of loading
a template on every request. This would be true whether or not you are
using threads.

Your next comment was:

   The problem I am running into is that if I run through the 
application,
   each request takes on average 300 ms to process.? However, when we
   benchmark with 20 concurrent users, the average goes up to around
   2200 ms.? I am very sure that this is due to a thread locking
   shared objects in memory which results in another thread waiting for
   the lock to be released.

If each thread was trying to acquire the same lock before going into a
handler and only releasing it when exiting the handler, thus serialising
requests, what you are seeing would be expected. In short you were
simply overloading your servers ability to respond quickly enough. Add
even more concurrent users and the average would like keep growing.

Finally you said:

   If I take the thread locking mechanism out then we run into problems
   with there being too many connections being made to the MySQL db if
   the cached connection is being used and then the db starts dropping
   connections.

If there was indeed a lock around any handler call and you took it out,
you would at least still need to thread protect your database connection
pool/cache.

You might need to explain how you manage your database connections.

I haven't done database connection pooling in mod_python when using
threads yet but there are others here who have and may suggest the best 
ways
of doing it.

To me the simplest way would be to create a set of database connection
objects at startup and place these in a Queue.Queue object. As each 
request
comes in, it can get an available database connection off the queue,
use it then put it back. In practice, it probably needs to be a bit more
robust than that.

Anyway, confirm exactly what you meant by having thread locking going
into the handler and describe how you are managing the database
connections. Do you create a certain number of database connections at
startup, or on demand as required, but only up to a certain maximum?
Is your connection caching mechanism thread protected in any way?

Sorry again for getting off the track. :-)

Graham


From esj at wwd.ca  Sat Feb  5 09:43:15 2005
From: esj at wwd.ca (Eric St-Jean)
Date: Sat Feb  5 09:43:13 2005
Subject: [mod_python] Cookie problem
In-Reply-To: <web-77488587@heimsnet.is>
References: <web-77488587@heimsnet.is>
Message-ID: <4204DB83.3040305@wwd.ca>

dagurp@heimsnet.is wrote:

>On Friday 04 February 2005 11:06 am, dagurp@heimsnet.is wrote:
>  
>
>>>Hi,
>>>I create a cookie and set it to expire in 2 weeks like this:
>>>
>>> cookie = Cookie.Cookie('foo', bar)
>>> cookie.expires = time() + 1209600  # 2 weeks
>>> Cookie.add_cookie(req, cookie)
>>>
>>>      
>>>
(snip)

>>The expires attribute is a property whose value is >checked upon setting to 
>>be in format "Wdy, DD-Mon-YYYY HH:MM:SS GMT" (as >dictated per Netscape 
>>cookie specification), or a numeric value >representing time in seconds 
>>since beginning of epoch (which will be >automatically correctly converted 
>>to GMT time string). An invalid expires value will >raise ValueError.
>>
>>Therefore, you cannot set it to time.time().  You'll >need to create a 
>>strftime string for it.
>>    
>>
>
>If you read it more carefully you'll see that you can use a numeric value. In
>fact that's what they do in the examples. I did try to use the Netscape format
>however but it always gave me errors.
>
>_
>

but you're using time.time(), which returns a float. the doc snippet 
above doesn't say it explicitely, but it sounds like it want an integer 
number of seconds. what if you do

cookie.expires = int(time()) + 1209600

?


-- 


From huzaifa at hostway.com  Sat Feb  5 14:03:45 2005
From: huzaifa at hostway.com (Huzaifa Tapal)
Date: Sat Feb  5 14:03:55 2005
Subject: [mod_python] Custom handler thread safety
In-Reply-To: <45b52d58b25b19dc2f8f858d5f178fb9@dscpl.com.au>
References: <20050204200008.77E96B9FC@fiona.siteprotect.com>
	<45b52d58b25b19dc2f8f858d5f178fb9@dscpl.com.au>
Message-ID: <42051891.4080801@hostway.com>

Hello Graham,

All of the problems you describe and the scenarios you provided were 
right on target as to the kind of issues I am running into.  Here is the 
response to your question:

 > Anyway, confirm exactly what you meant by having thread locking going
 > into the handler and describe how you are managing the database
 > connections. Do you create a certain number of database connections at
 > startup, or on demand as required, but only up to a certain maximum?
 > Is your connection caching mechanism thread protected in any way?

Pretty much, the way i have setup the handler is as follows:

    *def handler(req):
        _lock.acquire()
       try:
          # instantiate and call my driver class that processes the request
       finally:
          _lock.release()*    


You were exactly right about what I was experiencing in that each thread 
was waiting on another to release the lock before processing so the 
processing of the threads with 20 concurrent users was serialized.  
Taking that into account, I removed the locking from the handler and ran 
the 20 concurrent users test again and then I started running into 
problems with the MySQL server dropping connections due to there being 
too many simultaneous connections being made from my application.

To answer your second question of how I am managing the database 
connections, pretty much it is very simple.  My framework, was 
originally written by a friend of mine to work only in CGI about 3 years 
ago.  So, in the Data Access Layer, he has a class that manages 
connections to different sources being, databases, servers, and payment 
processors.  For database connections, there is a dictionary that holds 
all the connections.  Because, it was originally written for CGI, he 
saved a connection to a database in the dictionary using the key 
"dbname:thread id".  This worked fine, because the environment wasn't 
multi threaded, so there was always only one thread id for all 
requests.  So all the db connections were created on demand and then 
cached and then all subsequent requests for the same db connections were 
then given back from cache.  So it works as follows:

    *class DALResources:

        def getDB(self, db_name):
           resource_name = "%s:%s" % (db_name,thread_id)
           db_conn = self.__resource_dict.get(resource_name,None)

           if db_conn == None:
              # create a db connections
              # cache it in the __resource_dict

           return db_conn*

So for each db, there is only one connection cached and that is the one 
that is shared.  The thread_id caused a problem in the multithreaded 
environment because there could be a huge number of threads that are 
processing requests and as a result too many connections were made.  I 
tried to go around this problem by removing the thread_id from the 
resource_name, however, I still started running into MySQL connection 
problems.

My caching mechanism is not thread protected at all.  Pretty much the 
DALResources class is created as a singleton and imported in my handler 
so that is available for all child threads in a process.  One thing I 
did yesterday was to try to make my DB Connection object thread safe by 
locking the connection where it queries the db.  That actually, resulted 
in no more connection problems to the db.

However, I still run into various problems, and I am very sure that is 
because there is no locking mechanism available for all the objects I am 
sharing by putting it in shared memory.   What would you suggest I do in 
terms of locking objects?  Should I make the objects I am storing in the 
cache thread safe or should I create one Caching object and store all my 
shared objects in that and add locking to the get and set methods?

Thanks again for all your help and I hope I explained all the items you 
asked for.

Hozi

Graham Dumpleton wrote:

> I'll try and get back to your original problem. I probably digressed
> and certainly said some things already that most likely aren't relevant
> at all. I should have perhaps read the email properly. My excuse is that
> I was having a busy day that day. :-)
>
> On 05/02/2005, at 6:56 AM, Huzaifa Tapal wrote:
>
>>> Is the Python database connection object internally thread safe?
>>
>>
>> -- not its not.
>
>
> I should have phrased this question a bit better. Does the database
> interface code support having multiple connection objects active at
> the same time, where each may be held by a distinct thread with that
> thread doing whatever it wants with its own connection object?
>
> Thus, a single database connection object doesn't necessarily have
> to be thread safe in itself, as long as there can be multiple connection
> objects each being used at the same time by different threads.
>
> Anyway, in your original email you said:
>
>   Just to be safe, I implemented thread locking into the handler
>   before any request is processed.
>
> That to me says what you did was to make sure only one request at a
> time could actually do anything. Thus all requests were serialised.
> If this was the case, you wouldn't have had any thread problems because
> there wouldn't have actually been multiple requests active, a latter
> request would have sat there until the previous one finished.
>
> If this is true, using a multithreaded MPM would also have just made
> things worse. You would have been better of using Apache in "prefork"
> mode as then each request in each process could have at least run in
> parallel.
>
> Next you said:
>
>   We are gaining huge performance increases by caching our template
>   objects and db connection objects.
>
> Which is logical, as you have avoided the startup cost with creating
> a database connection for each request, as well as the cost of loading
> a template on every request. This would be true whether or not you are
> using threads.
>
> Your next comment was:
>
>   The problem I am running into is that if I run through the application,
>   each request takes on average 300 ms to process.  However, when we
>   benchmark with 20 concurrent users, the average goes up to around
>   2200 ms.  I am very sure that this is due to a thread locking
>   shared objects in memory which results in another thread waiting for
>   the lock to be released.
>
> If each thread was trying to acquire the same lock before going into a
> handler and only releasing it when exiting the handler, thus serialising
> requests, what you are seeing would be expected. In short you were
> simply overloading your servers ability to respond quickly enough. Add
> even more concurrent users and the average would like keep growing.
>
> Finally you said:
>
>   If I take the thread locking mechanism out then we run into problems
>   with there being too many connections being made to the MySQL db if
>   the cached connection is being used and then the db starts dropping
>   connections.
>
> If there was indeed a lock around any handler call and you took it out,
> you would at least still need to thread protect your database connection
> pool/cache.
>
> You might need to explain how you manage your database connections.
>
> I haven't done database connection pooling in mod_python when using
> threads yet but there are others here who have and may suggest the 
> best ways
> of doing it.
>
> To me the simplest way would be to create a set of database connection
> objects at startup and place these in a Queue.Queue object. As each 
> request
> comes in, it can get an available database connection off the queue,
> use it then put it back. In practice, it probably needs to be a bit more
> robust than that.
>
> Anyway, confirm exactly what you meant by having thread locking going
> into the handler and describe how you are managing the database
> connections. Do you create a certain number of database connections at
> startup, or on demand as required, but only up to a certain maximum?
> Is your connection caching mechanism thread protected in any way?
>
> Sorry again for getting off the track. :-)
>
> Graham
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20050205/df7c395d/attachment.html
From grahamd at dscpl.com.au  Sat Feb  5 18:04:00 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Sat Feb  5 18:04:11 2005
Subject: [mod_python] Custom handler thread safety
In-Reply-To: <42051891.4080801@hostway.com>
References: <20050204200008.77E96B9FC@fiona.siteprotect.com>
	<45b52d58b25b19dc2f8f858d5f178fb9@dscpl.com.au>
	<42051891.4080801@hostway.com>
Message-ID: <b4f1bae3885dfa9f0756772cd4b75180@dscpl.com.au>


On 06/02/2005, at 6:03 AM, Huzaifa Tapal wrote:

>  So for each db, there is only one connection cached and that is the 
> one that is shared.? The thread_id caused a problem in the 
> multithreaded environment because there could be a huge number of 
> threads that are processing requests and as a result too many 
> connections were made.? I tried to go around this problem by removing 
> the thread_id from the resource_name, however, I still started running 
> into MySQL connection problems.

If you remove the thread ID, then looks like you have one connection 
object
per database. Thus if multiple threads want to use the same database, 
you
have contention again.

>  My caching mechanism is not thread protected at all.? Pretty much the 
> DALResources class is created as a singleton and imported in my 
> handler so that is available for all child threads in a process.? One 
> thing I did yesterday was to try to make my DB Connection object 
> thread safe by locking the connection where it queries the db.? That 
> actually, resulted in no more connection problems to the db.

Having a lock on the database connection object would avoid the 
contention
above, but causes all requests against a specific database to be 
serialised.
That is presuming the lock is on each instance of the database 
connection
and not one lock across all database connection objects.

Serialisation on just the database access is at least not as bad as it 
being
on a request as a whole, but still not ideal.

>  However, I still run into various problems, and I am very sure that 
> is because there is no locking mechanism available for all the objects 
> I am sharing by putting it in shared memory.?? What would you suggest 
> I do in terms of locking objects?? Should I make the objects I am 
> storing in the cache thread safe or should I create one Caching object 
> and store all my shared objects in that and add locking to the get and 
> set methods?

This is where it gets harder for me to help. Knowing what is best 
generally
entails knowing quite a bit about the design of the application. There 
are
also various tradeoffs between making locking too fine grained and it 
being
at too high a level. Have it too fine grained and performance can drop, 
plus
you might not be adequately locking around combined updates across 
multiple
data structures. Have it too high and you risk loosing the benefits of 
what
threading gives you in the first place as things become serialised 
again.

Sounds though that at the moment this is the area you need to 
concentrate on.
The issue of database connection pooling could be improved, but will 
not mean
anything if the rest of the application stuffs up when it is accessing 
shared
data.

Probably the first thing to look at is what distinct high level 
functions does
your code provide. Having worked out that, identify what shared 
resources each
needs to access/update. Then look at a scheme whereby on entry to each 
high
level function, it locks just those resources it is going to use.

This is a bit better than arbitrarily locking everything before 
entering any
request, as the latter means that you lock stuff you aren't necessarily 
using
and thus could be locking out some other request that only needs to 
access
the data you aren't going to use.

This is now where the balancing acts comes in in terms of making things 
too
fine grained or not. Try to avoid having locks on every little 
resource. If
there are a group of resources which are always used together, have 
just one
lock that covers the lot. Also watch out for deadlock situations where 
two
different functions access two resources in the opposite order to each 
over.

It may take a while to get just right if you aren't too familiar with 
thread
programming and problems associated with locking, but play with it and 
see
how you go.

Graham


From isofroni at cc.uoi.gr  Sun Feb  6 14:22:36 2005
From: isofroni at cc.uoi.gr (John)
Date: Sun Feb  6 14:24:17 2005
Subject: [mod_python] mod_python doesn't seem to work
Message-ID: <001901c50c81$37711700$747882c3@jonsof>

I have set what mod_python tutorial says.

I am using Apache/1.3.28 (Linux/SuSE) mod_python/2.7.10 Python/2.3+ PHP/4.3.3 mod_ssl/2.8.15 OpenSSL/0.9.7b

But i i cannot see thet Hello World!!!
I can see only the code.

Does anybody know anything on how to put mod_python in to work ?
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20050206/2d1e1c12/attachment.html
From grahamd at dscpl.com.au  Sun Feb  6 16:06:06 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Sun Feb  6 16:06:58 2005
Subject: [mod_python] mod_python doesn't seem to work
In-Reply-To: <001901c50c81$37711700$747882c3@jonsof>
References: <001901c50c81$37711700$747882c3@jonsof>
Message-ID: <2ef26643df8502daa71e1ac6d11d0581@dscpl.com.au>


On 07/02/2005, at 6:22 AM, John wrote:

> I have set what mod_python tutorial says.
> ?
> I am using Apache/1.3.28 (Linux/SuSE) mod_python/2.7.10 Python/2.3+ 
> PHP/4.3.3 mod_ssl/2.8.15 OpenSSL/0.9.7b
> ?
> But i i cannot see thet Hello World!!!
> I can see only the code.
> ?
> Does anybody know anything on how to put mod_python in to work ?

Exactly which documentation are you reading?

You are using mod_python 2.7.10. If you use the documentation for 
mod_python 3.1.3
the instructions will not work. Thus make sure you are using the 
correct documentation.

Graham


From isofroni at cc.uoi.gr  Mon Feb  7 04:36:30 2005
From: isofroni at cc.uoi.gr (John)
Date: Mon Feb  7 04:59:03 2005
Subject: [mod_python] mod_chroot & mod_python problem
Message-ID: <000201c50cfb$6af6a200$747882c3@jonsof>

Hello all

I am using Apache/1.3.28 (Linux/SuSE) mod_python/2.7.10 Python/2.3+ PHP/4.3.3 mod_ssl/2.8.15 OpenSSL/0.9.7b mod_chroot 0.4

mod_python works outside the chroot jail but when i jail the apache i receive that error in my logs

python_handler: make_obcallback returned no obCallBack!

Does anyone know why this happen?
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20050207/93368db2/attachment.html
From grahamd at dscpl.com.au  Mon Feb  7 05:22:47 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Mon Feb  7 05:23:02 2005
Subject: [mod_python] mod_chroot & mod_python problem
In-Reply-To: <000201c50cfb$6af6a200$747882c3@jonsof>
References: <000201c50cfb$6af6a200$747882c3@jonsof>
Message-ID: <c122ce740155b1745fde1dd3206448f2@dscpl.com.au>

Can you possibly run Apache manually yourself within the context of the 
chroot jail?

In the code prior to that point, it does:

     if (! ((m = PyImport_ImportModule(MODULENAME)))) {
         fprintf(stderr, "make_obcallback(): could not import %s.\n", 
MODULENAME);
     }

     if (! ((obCallBack = PyObject_CallMethod(m, INITFUNC, NULL)))) {
         fprintf(stderr, "make_obcallback(): could not call %s.\n",
                 INITFUNC);
     }

The problem is these print to stderr and not to the log and you 
wouldn't see the
error messages. If you can run httpd manually, maybe you can then see 
stderr.

Alternatively, you could change the code to use the log file instead. 
In mod_python
3.1.3 it has:

     if (! ((m = PyImport_ImportModule(MODULENAME)))) {
         ap_log_error(APLOG_MARK, APLOG_NOERRNO|APLOG_ERR, 0, s,
                      "make_obcallback: could not import %s.\n", 
MODULENAME);
         PyErr_Print();
     }

     if (m && ! ((obCallBack = PyObject_CallMethod(m, INITFUNC, NULL)))) 
{
         ap_log_error(APLOG_MARK, APLOG_NOERRNO|APLOG_ERR, 0, s,
                      "make_obcallback: could not call %s.\n", INITFUNC);
         PyErr_Print();
     }

This will at least give you a little bit more information.

One could speculate though that there isn't a Python distribution 
accessible within
the chroot jail, or if there is, then mod_python isn't installed into 
it.

Graham

On 07/02/2005, at 8:36 PM, John wrote:

> Hello all
> ?
> I am using Apache/1.3.28 (Linux/SuSE) mod_python/2.7.10 Python/2.3+ 
> PHP/4.3.3 mod_ssl/2.8.15 OpenSSL/0.9.7b mod_chroot 0.4
> ?
> mod_python works outside the chroot jail but when i jail the apache i 
> receive that error in my logs
> ?
> python_handler: make_obcallback returned no obCallBack!
> ?
> Does anyone know why this happen?
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python


From isofroni at cc.uoi.gr  Mon Feb  7 06:25:56 2005
From: isofroni at cc.uoi.gr (John)
Date: Mon Feb  7 06:27:41 2005
Subject: [mod_python] mod_chroot & mod_python problem
References: <000201c50cfb$6af6a200$747882c3@jonsof>
	<c122ce740155b1745fde1dd3206448f2@dscpl.com.au>
Message-ID: <000501c50d07$cdfd7840$747882c3@jonsof>

Well, i run apache manually but i cannot see any error.

mod_php works well without even touch it, why not mod_python?



----- Original Message ----- 
From: "Graham Dumpleton" <grahamd@dscpl.com.au>
To: "John" <isofroni@cc.uoi.gr>
Cc: <mod_python@modpython.org>
Sent: Monday, February 07, 2005 12:22 PM
Subject: Re: [mod_python] mod_chroot & mod_python problem


> Can you possibly run Apache manually yourself within the context of the 
> chroot jail?
> 
> In the code prior to that point, it does:
> 
>      if (! ((m = PyImport_ImportModule(MODULENAME)))) {
>          fprintf(stderr, "make_obcallback(): could not import %s.\n", 
> MODULENAME);
>      }
> 
>      if (! ((obCallBack = PyObject_CallMethod(m, INITFUNC, NULL)))) {
>          fprintf(stderr, "make_obcallback(): could not call %s.\n",
>                  INITFUNC);
>      }
> 
> The problem is these print to stderr and not to the log and you 
> wouldn't see the
> error messages. If you can run httpd manually, maybe you can then see 
> stderr.
> 
> Alternatively, you could change the code to use the log file instead. 
> In mod_python
> 3.1.3 it has:
> 
>      if (! ((m = PyImport_ImportModule(MODULENAME)))) {
>          ap_log_error(APLOG_MARK, APLOG_NOERRNO|APLOG_ERR, 0, s,
>                       "make_obcallback: could not import %s.\n", 
> MODULENAME);
>          PyErr_Print();
>      }
> 
>      if (m && ! ((obCallBack = PyObject_CallMethod(m, INITFUNC, NULL)))) 
> {
>          ap_log_error(APLOG_MARK, APLOG_NOERRNO|APLOG_ERR, 0, s,
>                       "make_obcallback: could not call %s.\n", INITFUNC);
>          PyErr_Print();
>      }
> 
> This will at least give you a little bit more information.
> 
> One could speculate though that there isn't a Python distribution 
> accessible within
> the chroot jail, or if there is, then mod_python isn't installed into 
> it.
> 
> Graham
> 
> On 07/02/2005, at 8:36 PM, John wrote:
> 
> > Hello all
> > 
> > I am using Apache/1.3.28 (Linux/SuSE) mod_python/2.7.10 Python/2.3+ 
> > PHP/4.3.3 mod_ssl/2.8.15 OpenSSL/0.9.7b mod_chroot 0.4
> > 
> > mod_python works outside the chroot jail but when i jail the apache i 
> > receive that error in my logs
> > 
> > python_handler: make_obcallback returned no obCallBack!
> > 
> > Does anyone know why this happen?
> > _______________________________________________
> > Mod_python mailing list
> > Mod_python@modpython.org
> > http://mailman.modpython.org/mailman/listinfo/mod_python
> 
> 
> 

From isofroni at cc.uoi.gr  Mon Feb  7 08:48:18 2005
From: isofroni at cc.uoi.gr (John)
Date: Mon Feb  7 08:50:03 2005
Subject: [mod_python] mod_chroot & mod_python problem
References: <000201c50cfb$6af6a200$747882c3@jonsof><c122ce740155b1745fde1dd3206448f2@dscpl.com.au>
	<000501c50d07$cdfd7840$747882c3@jonsof>
Message-ID: <001f01c50d1b$b11923a0$747882c3@jonsof>

Here is and the rest of the error logs.

That error is reported in the server's log (not in the virtual host error
log as before)

make_obcallback(): could not import mod_python.apache.
make_obcallback(): could not call init.




----- Original Message ----- 
From: "John" <isofroni@cc.uoi.gr>
To: <mod_python@modpython.org>
Sent: Monday, February 07, 2005 1:25 PM
Subject: Re: [mod_python] mod_chroot & mod_python problem


> Well, i run apache manually but i cannot see any error.
>
> mod_php works well without even touch it, why not mod_python?
>
>
>
> ----- Original Message ----- 
> From: "Graham Dumpleton" <grahamd@dscpl.com.au>
> To: "John" <isofroni@cc.uoi.gr>
> Cc: <mod_python@modpython.org>
> Sent: Monday, February 07, 2005 12:22 PM
> Subject: Re: [mod_python] mod_chroot & mod_python problem
>
>
> > Can you possibly run Apache manually yourself within the context of the
> > chroot jail?
> >
> > In the code prior to that point, it does:
> >
> >      if (! ((m = PyImport_ImportModule(MODULENAME)))) {
> >          fprintf(stderr, "make_obcallback(): could not import %s.\n",
> > MODULENAME);
> >      }
> >
> >      if (! ((obCallBack = PyObject_CallMethod(m, INITFUNC, NULL)))) {
> >          fprintf(stderr, "make_obcallback(): could not call %s.\n",
> >                  INITFUNC);
> >      }
> >
> > The problem is these print to stderr and not to the log and you
> > wouldn't see the
> > error messages. If you can run httpd manually, maybe you can then see
> > stderr.
> >
> > Alternatively, you could change the code to use the log file instead.
> > In mod_python
> > 3.1.3 it has:
> >
> >      if (! ((m = PyImport_ImportModule(MODULENAME)))) {
> >          ap_log_error(APLOG_MARK, APLOG_NOERRNO|APLOG_ERR, 0, s,
> >                       "make_obcallback: could not import %s.\n",
> > MODULENAME);
> >          PyErr_Print();
> >      }
> >
> >      if (m && ! ((obCallBack = PyObject_CallMethod(m, INITFUNC, NULL))))
> > {
> >          ap_log_error(APLOG_MARK, APLOG_NOERRNO|APLOG_ERR, 0, s,
> >                       "make_obcallback: could not call %s.\n",
INITFUNC);
> >          PyErr_Print();
> >      }
> >
> > This will at least give you a little bit more information.
> >
> > One could speculate though that there isn't a Python distribution
> > accessible within
> > the chroot jail, or if there is, then mod_python isn't installed into
> > it.
> >
> > Graham
> >
> > On 07/02/2005, at 8:36 PM, John wrote:
> >
> > > Hello all
> > >
> > > I am using Apache/1.3.28 (Linux/SuSE) mod_python/2.7.10 Python/2.3+
> > > PHP/4.3.3 mod_ssl/2.8.15 OpenSSL/0.9.7b mod_chroot 0.4
> > >
> > > mod_python works outside the chroot jail but when i jail the apache i
> > > receive that error in my logs
> > >
> > > python_handler: make_obcallback returned no obCallBack!
> > >
> > > Does anyone know why this happen?
> > > _______________________________________________
> > > Mod_python mailing list
> > > Mod_python@modpython.org
> > > http://mailman.modpython.org/mailman/listinfo/mod_python
> >
> >
> >
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>


From grisha at modpython.org  Mon Feb  7 10:24:00 2005
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Mon Feb  7 10:24:10 2005
Subject: [mod_python] mod_chroot & mod_python problem
In-Reply-To: <000201c50cfb$6af6a200$747882c3@jonsof>
References: <000201c50cfb$6af6a200$747882c3@jonsof>
Message-ID: <20050207102258.A37947@grisha.dyndns.org>



This is probably because after mod_chroot does its chroot() call, 
mod_python can no longer see the Python libraries in /usr/lib/python (or 
wherever they are on your system).

Grisha


On Mon, 7 Feb 2005, John wrote:

> Hello all
>
> I am using Apache/1.3.28 (Linux/SuSE) mod_python/2.7.10 Python/2.3+ PHP/4.3.3 mod_ssl/2.8.15 OpenSSL/0.9.7b mod_chroot 0.4
>
> mod_python works outside the chroot jail but when i jail the apache i receive that error in my logs
>
> python_handler: make_obcallback returned no obCallBack!
>
> Does anyone know why this happen?
From isofroni at cc.uoi.gr  Mon Feb  7 10:41:16 2005
From: isofroni at cc.uoi.gr (John)
Date: Mon Feb  7 10:43:02 2005
Subject: [mod_python] mod_chroot & mod_python problem
References: <000201c50cfb$6af6a200$747882c3@jonsof>
	<20050207102258.A37947@grisha.dyndns.org>
Message-ID: <000901c50d2b$790e9200$747882c3@jonsof>

So, what would be a solution for that case?

I think that in this mailing list i received the mod_chroot as a solution.




----- Original Message ----- 
From: "Gregory (Grisha) Trubetskoy" <grisha@modpython.org>
To: "John" <isofroni@cc.uoi.gr>
Cc: <mod_python@modpython.org>
Sent: Monday, February 07, 2005 5:24 PM
Subject: Re: [mod_python] mod_chroot & mod_python problem


>
>
> This is probably because after mod_chroot does its chroot() call,
> mod_python can no longer see the Python libraries in /usr/lib/python (or
> wherever they are on your system).
>
> Grisha
>
>
> On Mon, 7 Feb 2005, John wrote:
>
> > Hello all
> >
> > I am using Apache/1.3.28 (Linux/SuSE) mod_python/2.7.10 Python/2.3+
PHP/4.3.3 mod_ssl/2.8.15 OpenSSL/0.9.7b mod_chroot 0.4
> >
> > mod_python works outside the chroot jail but when i jail the apache i
receive that error in my logs
> >
> > python_handler: make_obcallback returned no obCallBack!
> >
> > Does anyone know why this happen?
>


From christopher.jackson at gmail.com  Mon Feb  7 13:46:14 2005
From: christopher.jackson at gmail.com (Chris Jackson)
Date: Mon Feb  7 13:46:20 2005
Subject: [mod_python] mod_chroot & mod_python problem
In-Reply-To: <000901c50d2b$790e9200$747882c3@jonsof>
References: <000201c50cfb$6af6a200$747882c3@jonsof>
	<20050207102258.A37947@grisha.dyndns.org>
	<000901c50d2b$790e9200$747882c3@jonsof>
Message-ID: <4d11484d050207104661ac5d38@mail.gmail.com>

Yes, you're going to have to install Python in the chroot jail.  

[mod_python]
./configure --with-apxs=/path/to/chroot/path/to/apache/bin/apxs \ 
            --with-python=/path/to/chroot/path/to/python/bin/python2.x

Also, once the chroot jail is run, your root directory, '/', starts at
your chroot,
therefore you'd have to change two environmental variables:

LD_LIBRARY_PATH=/lib
PYTHONHOME=/python2.x

If you want to test the chrooted python as standalone, then change the above 
enviornmental variables to the full pathnames (.e.g /export/hda3...etc)

~= Chris =~

On Mon, 7 Feb 2005 17:41:16 +0200, John <isofroni@cc.uoi.gr> wrote:
> So, what would be a solution for that case?
> 
> I think that in this mailing list i received the mod_chroot as a solution.
> 
> 
> ----- Original Message -----
> From: "Gregory (Grisha) Trubetskoy" <grisha@modpython.org>
> To: "John" <isofroni@cc.uoi.gr>
> Cc: <mod_python@modpython.org>
> Sent: Monday, February 07, 2005 5:24 PM
> Subject: Re: [mod_python] mod_chroot & mod_python problem
> 
> >
> >
> > This is probably because after mod_chroot does its chroot() call,
> > mod_python can no longer see the Python libraries in /usr/lib/python (or
> > wherever they are on your system).
> >
> > Grisha
> >
> >
> > On Mon, 7 Feb 2005, John wrote:
> >
> > > Hello all
> > >
> > > I am using Apache/1.3.28 (Linux/SuSE) mod_python/2.7.10 Python/2.3+
> PHP/4.3.3 mod_ssl/2.8.15 OpenSSL/0.9.7b mod_chroot 0.4
> > >
> > > mod_python works outside the chroot jail but when i jail the apache i
> receive that error in my logs
> > >
> > > python_handler: make_obcallback returned no obCallBack!
> > >
> > > Does anyone know why this happen?
> >
> 
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>
From jgentil at sebistar.net  Mon Feb  7 13:53:35 2005
From: jgentil at sebistar.net (Jon-Pierre Gentil)
Date: Mon Feb  7 13:53:50 2005
Subject: [mod_python] mod_chroot & mod_python problem
In-Reply-To: <000901c50d2b$790e9200$747882c3@jonsof>
References: <000201c50cfb$6af6a200$747882c3@jonsof>
	<20050207102258.A37947@grisha.dyndns.org>
	<000901c50d2b$790e9200$747882c3@jonsof>
Message-ID: <200502071253.41690.jgentil@sebistar.net>

On Monday 07 February 2005 09:41 am, John wrote:

> So, what would be a solution for that case?
>
> I think that in this mailing list i received the mod_chroot as a
> solution.

I believe you need an entire separate Python installation in your chroot.  
It can't be linked, either.

_________________________________________________________

  Jon-Pierre Gentil               PGP: 0xA21BC30E
  jabber: jgentil@sebistar.net    web: www.sebistar.net
  "If you think education is expensive, try ignorance."
_________________________________________________________ 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 197 bytes
Desc: not available
Url : http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20050207/8a494673/attachment.bin
From dagurp at heimsnet.is  Mon Feb  7 18:32:40 2005
From: dagurp at heimsnet.is (=?ISO-8859-1?Q?Dagur_P=E1ll_Ammendrup?=)
Date: Mon Feb  7 18:32:54 2005
Subject: [mod_python] Cookie problem
Message-ID: <4207FA98.6020309@heimsnet.is>

Gregory (Grisha) Trubetskoy wrote:

>
>
> On Fri, 4 Feb 2005 dagurp@heimsnet.is wrote:
>
>> Hi,
>> I create a cookie and set it to expire in 2 weeks like this:
>>
>> cookie = Cookie.Cookie('foo', bar)
>> cookie.expires = time() + 1209600  # 2 weeks
>> Cookie.add_cookie(req, cookie)
>>
>> But whatever I set "expires" to it is always set to "end of session".
>
>
>
> How do you know this?
>
> Try writing the cookie to the error log to see what your server sends 
> out, with something like
>
>     req.log_error(str(cookie))
>
> Grisha


The cookie information in Firefox, instead of some expiration time it 
just says end of session.

I tried your suggestion but it just returns the name of the cookie.


-- 
No virus found in this outgoing message.
Checked by AVG Anti-Virus.
Version: 7.0.300 / Virus Database: 265.8.5 - Release Date: 3.2.2005

From trevor at thennion.demon.co.uk  Tue Feb  8 03:14:23 2005
From: trevor at thennion.demon.co.uk (Trevor Hennion)
Date: Tue Feb  8 03:14:28 2005
Subject: [mod_python] Cookie problem
In-Reply-To: <4207FA98.6020309@heimsnet.is>
References: <4207FA98.6020309@heimsnet.is>
Message-ID: <200502080814.23429.trevor@thennion.demon.co.uk>

On Monday 07 February 2005 23:32, Dagur P?ll Ammendrup wrote:

>
> The cookie information in Firefox, instead of some expiration time it
> just says end of session.
>
> I tried your suggestion but it just returns the name of the cookie.


Dagur,

Firefox can be set to only keep cookies for the session thus overring the 
value set by mod_python - so check your setting in Firefox.

Regards

Trevor Hennion

From jefdodson at yahoo.com  Tue Feb  8 20:21:13 2005
From: jefdodson at yahoo.com (Jef Dodson)
Date: Tue Feb  8 20:21:15 2005
Subject: [mod_python] Cookie vs. Session
Message-ID: <20050209012113.83470.qmail@web31004.mail.mud.yahoo.com>

This might be a naive question, but how does one know whether to use a Cookie or a Session for
session/state management?  What are the major differences?  My interest is in simply allowing
someone to login to a site and then be able to identify that user when they make subsequent
requests in order to send them customized content.  So, this is pretty standard stuff, but is it
better to use cookies or session objects for this.  Thanks.

Jef


		
__________________________________ 
Do you Yahoo!? 
The all-new My Yahoo! - What will yours do?
http://my.yahoo.com 
From bje at apnic.net  Wed Feb  9 00:41:57 2005
From: bje at apnic.net (Byron Ellacott)
Date: Wed Feb  9 00:42:00 2005
Subject: [mod_python] Cookie vs. Session
In-Reply-To: <20050209012113.83470.qmail@web31004.mail.mud.yahoo.com>
References: <20050209012113.83470.qmail@web31004.mail.mud.yahoo.com>
Message-ID: <fdcef4edcec8b5ad6d6e798c5297fd27@apnic.net>


On 09/02/2005, at 11:21 AM, Jef Dodson wrote:

> This might be a naive question, but how does one know whether to use a 
> Cookie or a Session for
> session/state management?  What are the major differences?  My 
> interest is in simply allowing
> someone to login to a site and then be able to identify that user when 
> they make subsequent
> requests in order to send them customized content.  So, this is pretty 
> standard stuff, but is it
> better to use cookies or session objects for this.  Thanks.

A 'session' usually refers to server held state per-user; it requires 
some form of session identifier to be shuttled back and forth between 
client and server, often via a cookie.  They are primarily useful when 
you are building some sort of working set of data for a user, such as a 
sequentially filled in form.  They are often overused. :)

A cookie is a piece of browser-held information given to a server when 
a URL with an appropriate domain is fetched.

For your purposes, simply using a cookie to identify your user may be 
sufficient.  Note that a cookie is stored browser side, so you must be 
able to verify a cookie's authenticity to a level appropriate for your 
purposes.  It sounds like you're not necessarily showing any sensitive 
information, or in any other way relying on user identification for 
security, so you could easily get away with simply storing the user 
name in a cookie:

--- snip ---
from mod_python import Cookie

def get_user_credentials(req):
     cookies = Cookie.get_cookie(req)
     if cookies.has_key('username'):
         return cookies['username']
     # redirect to login page ...

def set_user_credentials(req, username):
     cookie = Cookie.Cookie('username', username)
     Cookie.add_cookie(req, cookie)
--- snip ---

So, the first function will try to get the user's name from a cookie.  
If one is not found, you should redirect to the login page, or return 
None, or whatever is appropriate behaviour for your application.  The 
second function should be called from your login page, to create and 
store a cookie with the user's  name.

Just bear in mind, it would be trivial to spoof yourself to appear to 
be another user with such a simple scheme.  If this is in any way bad, 
you would probably want to consider at least using a SignedCookie 
instead of a regular Cookie object.  The documentation for the Cookie 
module can help you further.

-- 
bje

From dagurp at heimsnet.is  Wed Feb  9 08:48:11 2005
From: dagurp at heimsnet.is (dagurp@heimsnet.is)
Date: Wed Feb  9 08:48:14 2005
Subject: [mod_python] Cookie problem
Message-ID: <web-77780430@heimsnet.is>

Trevor Hennion wrote:

> On Monday 07 February 2005 23:32, Dagur P?ll Ammendrup wrote:
>
>  
>
>> The cookie information in Firefox, instead of some expiration time it
>> just says end of session.
>>
>> I tried your suggestion but it just returns the name of the cookie.
>>   
>
>
>
> Dagur,
>
> Firefox can be set to only keep cookies for the session thus overring the
value set by mod_python - so check your setting in Firefox.
>
> Regards
>
> Trevor Hennion
>
>  
>
According to my settings the cookies should live until they're set to
expire. I don't have this problem on other sites either.
It doesn't seem to matter if I use IE either. 
From harrison at tbc.net  Wed Feb  9 09:47:28 2005
From: harrison at tbc.net (Shawn Harrison)
Date: Wed Feb  9 09:45:17 2005
Subject: [mod_python] Cookie vs. Session
In-Reply-To: <fdcef4edcec8b5ad6d6e798c5297fd27@apnic.net>
References: <20050209012113.83470.qmail@web31004.mail.mud.yahoo.com>
	<fdcef4edcec8b5ad6d6e798c5297fd27@apnic.net>
Message-ID: <420A2280.8080104@tbc.net>

> On 09/02/2005, at 11:21 AM, Jef Dodson wrote:
> 
>> This might be a naive question, but how does one know whether to use a 
>> Cookie or a Session for
>> session/state management?  What are the major differences?  My 
>> interest is in simply allowing
>> someone to login to a site and then be able to identify that user when 
>> they make subsequent
>> requests in order to send them customized content.  So, this is pretty 
>> standard stuff, but is it
>> better to use cookies or session objects for this.  Thanks.
> 

If you use cookies directly, each variable that you want to set (such as 
username) is stored client-side, in the browser of the person looking at 
the page. If you use session objects, only the session id is stored 
client-side. All the other variables are stored server-side, keyed to 
the session id.

Byron Ellacott wrote [02/08/05 11:41 PM]:
> 
> [...]
> 
> Just bear in mind, it would be trivial to spoof yourself to appear to be 
> another user with such a simple scheme.  If this is in any way bad, you 
> would probably want to consider at least using a SignedCookie instead of 
> a regular Cookie object.  The documentation for the Cookie module can 
> help you further.
> 

I recently set up session management on my last project and had the same 
question about "Session vs just Cookie" for session management. I ended 
up going with the Session object primarily because the session id, which 
is stored in a cookie, would be very hard to spoof. Then the username 
and any other information is stored server-side. This arrangement is a 
bit more secure than just storing usernames in cookies.

-- 
________________
harrison@tbc.net
From harrison at tbc.net  Wed Feb  9 10:28:45 2005
From: harrison at tbc.net (Shawn Harrison)
Date: Wed Feb  9 10:26:25 2005
Subject: [mod_python] Re: Photo Album Viewer and req.path_into.
In-Reply-To: <83c91340a4b8113ebe2bf2666b05dc7f@dscpl.com.au>
References: <1107490942.901@dscpl.user.openhosting.com>
	<42038634.1000907@tbc.net>
	<83c91340a4b8113ebe2bf2666b05dc7f@dscpl.com.au>
Message-ID: <420A2C2D.9050906@tbc.net>

Graham Dumpleton wrote [02/04/05 9:51 PM]:
> 
> On 05/02/2005, at 1:27 AM, Shawn Harrison wrote:
>
> [...]
>
>> I do have a question about Vampire. I want to have a Python script
>>
>>     /web/websitename/www/photos/index.py
>>
>> where I've appended /web to sys.path, so that
>>
>>     websitename.www.photos.index
>>
>> is a module name. Okay. I want to publish photos with urls like
>>
>>     http://websitename/photos/2004/10/01/137
>>
>> Can Vampire send all requests for paths under /photos/ to the photos
> 
> 
> Not knowing for sure what you are wanting to do, I am going to assume that
> you want to wrap image files in a HTML page automatically.

Yes, that's the idea, although I only gave photos as an example: What I 
really mean is this:
* If my document root is /web/examplecom/www/, and
* I have a request handler at /web/example/www/photos/index.py, and
* the photos are in /web/example/www/photos/
* Vampire is the PythonHandler, and
* req.uri is /photos/2004/10/01/137, then
? will the handler in /photos/index.py pick up the request?

I've been using my own homebrewed handler to publish objects dynamically 
in this fashion (using req.path_info, etc.). But, it's not ideal.

I am asking this basic question about Vampire because the answer with 
mod_python.publisher appears to be, no, it won't (which is why I made ye 
olde homebrewe a few months ago). The answer with Quixote is, yes it 
could if I set it up right. The answer for Vampire is not clear in its 
documentation.

Based on the rest of your reply, I am inferring that Vampire can handle 
dynamic object publishing from a database or filesystem, but that the 
set up would have to be different from what I've been using.

> Firstly, Vampire is structured so as to avoid altogether use of sys.path
> and all the complications that can arise because of it. Thus, you would
> not add "/web" to sys.path. 

Having '/web' in sys.path is fairly basic to the architecture that I've 
been developing. Every "web service" is a folder under /web, and each 
includes both request handlers and regular Python modules, including 
database access modules. I also want to be able to use Apache as one 
front end among many, not as the only one; so I need to be able to 
import modules in a more-or-less Python-native fashion.

> Thus, to configure things, one would use:
> 
>   Options -Indexes -MultiViews
> 
>   SetHandler python-program
>   PythonHandler vampire
>   PythonPath 'sys.path'
>   PythonDebug On
> 
> Indexes are turned off because we wouldn't want it, and MultiViews is
>  turned off because auto negotiation of file types screws with how
> Vampire works.

That makes sense.

> PythonPath is set to "sys.path" in order to stop mod_python from
> adding that directory into "sys.path" as we don't want that either.
> This is so nothing tries to attempt to load any Python code files in
> the document tree as Python modules using "import".
> 
> Assuming that the "photos" directory is where the images actually
> live, am going to change things around a little and rename "photos"
> to "library".
> [...]
> Note that the reason I had to rename the directory containing the images is
> that the way Apache resolves paths, it will give precedence to subdirectory
> search matching and thus will not hand off control to Vampire properly if I
> had "photos.py" handler and "photos" directory.

I don't understand why this is so, but I also don't understand the 
innards of the Vampire. In my crufty homebrew handler, this kind of 
situation resolves to using the handler in 
/web/examplecom/www/photos/index.py.

But I see that you achieve essentially the same results. There is 
something to be said for keeping the data files (which you put in 
/library) separate from the application code.

> [...]
> Hope this is of interest. This might actually be a good example for me of
> showing off Vampire. Although, I could see it being extended further than
> this simple bit of code to become a nice photo album viewer.

Yes, it's an interesting example, and it provides a lot of information 
about how Vampire would deal with various usage scenarios. You should 
add some of these details to your documentation.
> 
> Graham
> 
> 
> # Now for the code.

I enjoyed reading it.
> 
> from mod_python import apache
> 
> import os
> import posixpath
> 
> _PAGE = """
> <html>
> <body>
> <h1>Photo: %(name)s</h1>
> <img src="%(url)s" />
> </body>
> </html>
> """
> 
> # Handler for virtual directory.
> 
> def handler(req):
> 
>   # Determine stub of image file to view.
> 
>   if req.path_info == "":
>     return apache.HTTP_BAD_REQUEST
>   elif req.path_info == "/":
>     return apache.HTTP_BAD_REQUEST
> 
>   name = os.path.splitext(req.path_info[1:])[0]
> 
>   # Determine what type of image file it is.
> 
>   subdir = "library"
>   # subdir = "."  # use this if wanting to make it "browse.py" in 
> "photos" subdir
> 
>   root = os.path.join(os.path.dirname(req.filename),subdir)
> 
>   path = None
>   extn = None
> 
>   allowed = [ ".jpg", ".gif" ]

should be

     allowed = ['.jpg', '.png']

;-)
> 
>   for suffix in allowed:
>     file = os.path.join(root,name) + suffix
> 
>     if os.path.exists(file):
>       path = file
>       extn = suffix
> 
>   if path == None:
>     return apache.HTTP_NOT_FOUND
> 
>   # Determine the URL to the actual image.
> 
>   baseurl = os.path.dirname(req.uri[:-len(req.path_info)])
> 
>   url = posixpath.join(baseurl,subdir,name+extn)
> 
>   content = _PAGE % { "name": name, "url": url }
> 
>   # Return the rendered page content.
> 
>   req.content_type = "text/html"
>   req.send_http_header()
> 
>   req.write(content)
> 
>   return apache.OK

Thanks again,

-- 
________________
harrison@tbc.net
From dagurp at heimsnet.is  Wed Feb  9 12:01:58 2005
From: dagurp at heimsnet.is (dagurp@heimsnet.is)
Date: Wed Feb  9 12:02:06 2005
Subject: [mod_python] Cookie problem
Message-ID: <web-77796190@heimsnet.is>

Gregory (Grisha) Trubetskoy wrote:

>
> Dagur -
>
> I have just tried this with Firefox:
>
>     cookie = Cookie.Cookie('eggs', 'spam')
>     cookie.expires = time.time() + 1209600
>     Cookie.add_cookie(req, cookie)
>
> and it set the expires correctly to Feb 23.
>
> When I do a req.log_error(str(cookie)), I get this in the log:
>
> eggs=spam; expires=Wed, 23-Feb-2005 15:11:47 GMT
>
> What version of mod_python are you using?
>
> Grisha 

I figured it out!

I tried the req.log_error(str(cookie)) thing again, and this time in the right
location (oops). Then the problem became obvious.

Since I had set the locale to Icelandic, the date in the cookie had Icelandic
in it and that's why it didn't work. After I set the locale back to english
there were no problems. 

Thanks a lot for your help!

Dagur


From harrison at tbc.net  Wed Feb  9 16:32:15 2005
From: harrison at tbc.net (Shawn Harrison)
Date: Wed Feb  9 16:30:02 2005
Subject: [mod_python] Cookie vs. Session
In-Reply-To: <20050209205600.12309.qmail@web31008.mail.mud.yahoo.com>
References: <20050209205600.12309.qmail@web31008.mail.mud.yahoo.com>
Message-ID: <420A815F.5040209@tbc.net>

Jef Dodson wrote [02/09/05 2:56 PM]:
> Great, thanks.  So, I was able  to get cookies working but I would like to experiment with using
> Session objects.  Does anyone have some simple example code showing how to do basic stuff with a
> Session object like: Get the sessionid from a request to identify a particular user and if no
> session is found, create a  session object and send it back to the browser.  The documentation
> seems a little sparse in this area and I'm a little confused about how exactly session objects
> work in general.  Thanks again!

Yes, the documentation isn't as helpful as it could be. Maybe we should 
submit some patches.

First, I set the session after login. I put in a list of the groups that 
the user is a member of, as well as the user name, so that I can do 
group-based access control without querying the DB all the time:

     # This code is after login and the user has been verified.
     # The details are specific to my environment -- in particular, the
     # 'db' object. But you can get the idea. --SAH

     from mod_python import Session
     session = Session.Session(req)

     # Set the username and groups that this user belongs to
     grouplist = []

     # The following line would depend on your DB access method.
     # I have my own Database() class which provides select()
     # You'll probably use "cursor.execute(...)" and "cursor.fetchall()".
     groups = db.select('groups_memberships_users',
                        'groupname',
                        "username = '%s'" % user.name)
     for i in range(len(groups)):
         grouplist.append(groups[i].groupname)
     session['groups'] = "|".join(grouplist)
     session['user'] = user.name

     # save the session for next time.
     session.save()

Then, I have a function that my authen_handler uses for restricted areas 
of the site:

     from mod_python import apache, Session
     def require_group(req, group):
         # Check to see if the user has access to this group's resources.
         # returns an apache error status

         # see if the user has a session

         sess = Session.Session(req)
         sess.load()

         if sess.is_new():
             util.redirect(req, '/login?refpage=%s' % req.uri)
             return apache.OK
         else:
             # check out the user's login and group membership
             if sess.has_key('groups'): groups = sess['groups']
             else: groups=""
             groups = groups.split("|")
             if group in groups:
                 return apache.OK
             else:
                 return apache.HTTP_FORBIDDEN

-- 
________________
harrison@tbc.net
From grahamd at dscpl.com.au  Wed Feb  9 18:56:03 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Wed Feb  9 18:56:05 2005
Subject: [mod_python] Re: Photo Album Viewer and req.path_into.
Message-ID: <1107993363.31152@dscpl.user.openhosting.com>

Shawn Harrison wrote ..
> > Not knowing for sure what you are wanting to do, I am going to assume
> that
> > you want to wrap image files in a HTML page automatically.
> 
> Yes, that's the idea, although I only gave photos as an example: What I
> really mean is this:
> * If my document root is /web/examplecom/www/, and
> * I have a request handler at /web/example/www/photos/index.py, and
> * the photos are in /web/example/www/photos/
> * Vampire is the PythonHandler, and
> * req.uri is /photos/2004/10/01/137, then
> ? will the handler in /photos/index.py pick up the request?

If you expect the files/paths/URLs to be named exactly as you state,
then for the currently available version of Vampire, the short answer
is "No".

Long ramble follows about it. This may or may not be of interest but
is helpful for me to do so as to explore the issues myself. The
information may be useful to someone, so why not on the mailing
list. :-)

Vampire supports virtual directories, but not a virtual directory which
completely and transparently overlays a physical directory. Ie., where
a request for a resource gets bumped through the virtual directory
handler if there isn't a physical resource which corresponds to the
request.

As described in my previous email, the closest you will get is to have
the virtual directory which overlays the physical directory be a 
distinct sub node of the physical directory (or as a distinct path in
itself).

That is:

  /photos/browse.py #virtual directory handler in file system

  /photos/2004/10/01/137.jpg # physical file access URL
  /photos/browse/2004/10/01/137 # virtual resource access

Having said this, it doesn't mean that Vampire couldn't support what
you want, as I can see how it could be enhanced to allow exactly what
you want. Some explanations of how Vampire does some things are
in order here. Its assumed that Apache 2.0 being used, as Apache 1.3
screws up things because it does some things wrongly, but they were
fixed in Apache 2.0.

First off if you have "/photos/index.py" and it contains "handler_html()",
the URL "/photos/index.html" will resolve to that handler. By default
though, accessing "/photos" will yield "Not Found".

This is because the Apache DirectoryIndex directive doesn't extend
into the URL namespace where Vampire is used. To support this though,
Vampire supports saying:

  PythonOption VampireDirectoryIndex index.html

Now if you access "/photos" it will resolve as if the request had been
for "/photos/index.html".

Next thing to explain is virtual directories. These are implemented by
having a code file, for example "/photos/browse.py", which contains a
"handler()" method.

If a request such as "/photos/browse/2004/10/01/137" occurs, the
handler is called, with "req.path_info" set to "/2004/10/01/137".
The handler can then decide as to what to do with it.

For this to work though, there cannot also be a subdirectory in existance
called "browse" as Apache will give precedence to a search of the physical
subdirectory and will ignore the existance of "/photos/browse.py" and
as such will not trigger Vampire appropriately.

The reason that the two don't come together if the "handler()" method of
"/photos/browse.py" was actually in "/photos/index.py" is that Vampire
has an explicit check and disallows mapping to a directory index file if
the "req.path_info" field is not empty.

The thinking behind this is that the "index.py" file in that directory is mean't
to be an index file for that directory alone and shouldn't apply to a subdirectory
be it physical or virtual.

This doesn't mean that the two couldn't meet and thus "handler()" within
"/photos/index.py" be executed, but I believe it would be wrong to make
use of the "VampireDirectoryIndex" directive as the trigger for it.

Thus, what I see that could be done is for Vampire to support a new Python
option setting:

  PythonOption VampireVirtualDirectory index

What this would mean is that for the specific case where a virtual resource
within a directory is accessed, ie., there was no physical resource and there
was no other resource specific handler defined which could be matched, it
would fallback to executing the "handler()" method defined in the code file
"/photo/index.py".

In theory, this would provide you with the ability to preserve the structure
you have now. I do need to investigate though how this interacts with another
feature of Vampire whereby there can be default fallback handlers for
specific resource types. I would need to decide which should take precedence.
My initial guess is that the virtual directory handler should override the other
but it may need to be more flexible than that.

> Based on the rest of your reply, I am inferring that Vampire can handle
> dynamic object publishing from a database or filesystem, but that the 
> set up would have to be different from what I've been using.

As Vampire is now, "Yes" and "Yes".

> > Firstly, Vampire is structured so as to avoid altogether use of sys.path
> > and all the complications that can arise because of it. Thus, you would
> > not add "/web" to sys.path. 
> 
> Having '/web' in sys.path is fairly basic to the architecture that I've
> been developing. Every "web service" is a folder under /web, and each 
> includes both request handlers and regular Python modules, including 
> database access modules. I also want to be able to use Apache as one 
> front end among many, not as the only one; so I need to be able to 
> import modules in a more-or-less Python-native fashion.

Using the native "import" statement of Python has lots of issues though
in the context of mod_python, many of which have been covered in
discussions on the mailing list previously.

One can still mix handlers and Python modules in the same directory with
Vampire, but instead of using "import" you use "vampire.importModule()"
to load a module from the specific directory it resides in.

Thus, you could still do exactly what you do know, but by not using
"sys.path" and "import", and instead using Vampire's import mechanism,
you would get some additional benefits because the issues that come
up with using "import" don't arise. The Vampire importing mechanism
also solves lots of problems that exist in "apache.import_module()".

> Yes, it's an interesting example, and it provides a lot of information
> about how Vampire would deal with various usage scenarios. You should 
> add some of these details to your documentation.

Am slowly progressing towards being able to update the documentation.

Am currently in the middle of a rehosting of my web site from an Apache 1.3
to an Apache 2.0 site and moving from using PHP to mod_python/Vampire
for page composition. Also have heavy duty project at work, plus have 
been involved in dealing with some security issues with some Open Source
packages. Would love to be able to just sit down for a couple of weeks and
catch up with all my web site and Vampire stuff, but no such like right now.
Thus, everying in slow motion right now.

Graham
From christopher.jackson at gmail.com  Wed Feb  9 18:57:40 2005
From: christopher.jackson at gmail.com (Chris Jackson)
Date: Wed Feb  9 18:57:42 2005
Subject: [mod_python] Single Persisten DB conn across multiple connections
Message-ID: <4d11484d050209155775df905f@mail.gmail.com>

What is the best way, or at least some way to create a single database
connection object in mod_python and have everyone who connects use
that same DB connection.

Note: I'm using the publisher handler.

           DB
             |
 DBconn object
       /     |    \
user  user  user

My original theory (tested, doesn't work -- Multiple DB Connections are made):

To create a global DBconn object and have each session rely on the
same global variable.
The idea fails I think because multiple interpreters are created with
each apache child process,
and so global variables are re-instantiated.

New theory(untested):

Make the DBconn object outside in a separate module so that python
only imports the module
once, hence using only a single DBconn object.  In this case module
space is consistent even
with multiple interpreters.

Any comments and/or solutions would be gladly appreciated.

Thanks,

~= Chris =~
From christopher.jackson at gmail.com  Wed Feb  9 19:17:39 2005
From: christopher.jackson at gmail.com (Chris Jackson)
Date: Wed Feb  9 19:17:42 2005
Subject: [mod_python] Re: Single Persisten DB conn across multiple
	connections
In-Reply-To: <4d11484d050209155775df905f@mail.gmail.com>
References: <4d11484d050209155775df905f@mail.gmail.com>
Message-ID: <4d11484d050209161710d76977@mail.gmail.com>

I've been reading this FAQ:

http://www.modpython.org/FAQ/faqw.py?req=show&file=faq03.018.htp

However, it doesn't answer my question of how to use one connection
accross multiple sessions.
It ends in saying:

"My advice is to renew database connections, configs and everything
you have to load for a request every hit during development. After
you're done coding and it turnes out that it's not fast enough:
profile..."

~= Chris =~


On Wed, 9 Feb 2005 18:57:40 -0500, Chris Jackson
<christopher.jackson@gmail.com> wrote:
> What is the best way, or at least some way to create a single database
> connection object in mod_python and have everyone who connects use
> that same DB connection.
> 
> Note: I'm using the publisher handler.
> 
>            DB
>              |
>  DBconn object
>        /     |    \
> user  user  user
> 
> My original theory (tested, doesn't work -- Multiple DB Connections are made):
> 
> To create a global DBconn object and have each session rely on the
> same global variable.
> The idea fails I think because multiple interpreters are created with
> each apache child process,
> and so global variables are re-instantiated.
> 
> New theory(untested):
> 
> Make the DBconn object outside in a separate module so that python
> only imports the module
> once, hence using only a single DBconn object.  In this case module
> space is consistent even
> with multiple interpreters.
> 
> Any comments and/or solutions would be gladly appreciated.
> 
> Thanks,
> 
> ~= Chris =~
>
From davidf at sjsoft.com  Thu Feb 10 02:51:40 2005
From: davidf at sjsoft.com (David Fraser)
Date: Thu Feb 10 02:51:46 2005
Subject: [mod_python] Re: Single Persisten DB conn across
	multiple	connections
In-Reply-To: <4d11484d050209161710d76977@mail.gmail.com>
References: <4d11484d050209155775df905f@mail.gmail.com>
	<4d11484d050209161710d76977@mail.gmail.com>
Message-ID: <420B128C.9020001@sjsoft.com>

Hmmm ... that certainly sounds like bad advice to me.
But if you're working an a multi-process Apache model, you can't share 
database connections between different child processes.
So either you have to be content with one connection per child process, 
or you have to switch Apache to only run in one process

Chris Jackson wrote:

>I've been reading this FAQ:
>
>http://www.modpython.org/FAQ/faqw.py?req=show&file=faq03.018.htp
>
>However, it doesn't answer my question of how to use one connection
>accross multiple sessions.
>It ends in saying:
>
>"My advice is to renew database connections, configs and everything
>you have to load for a request every hit during development. After
>you're done coding and it turnes out that it's not fast enough:
>profile..."
>
>~= Chris =~
>
>
>On Wed, 9 Feb 2005 18:57:40 -0500, Chris Jackson
><christopher.jackson@gmail.com> wrote:
>  
>
>>What is the best way, or at least some way to create a single database
>>connection object in mod_python and have everyone who connects use
>>that same DB connection.
>>
>>Note: I'm using the publisher handler.
>>
>>           DB
>>             |
>> DBconn object
>>       /     |    \
>>user  user  user
>>
>>My original theory (tested, doesn't work -- Multiple DB Connections are made):
>>
>>To create a global DBconn object and have each session rely on the
>>same global variable.
>>The idea fails I think because multiple interpreters are created with
>>each apache child process,
>>and so global variables are re-instantiated.
>>
>>New theory(untested):
>>
>>Make the DBconn object outside in a separate module so that python
>>only imports the module
>>once, hence using only a single DBconn object.  In this case module
>>space is consistent even
>>with multiple interpreters.
>>
>>Any comments and/or solutions would be gladly appreciated.
>>
>>Thanks,
>>
>>~= Chris =~
>>    
>>

From grahamd at dscpl.com.au  Thu Feb 10 04:02:32 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Thu Feb 10 04:03:00 2005
Subject: [mod_python] Re: Photo Album Viewer and req.path_into.
In-Reply-To: <1107993363.31152@dscpl.user.openhosting.com>
References: <1107993363.31152@dscpl.user.openhosting.com>
Message-ID: <7c4c436cb6599dfd5486646a129a654d@dscpl.com.au>


On 10/02/2005, at 10:56 AM, Graham Dumpleton wrote:

> Shawn Harrison wrote ..
>>> Not knowing for sure what you are wanting to do, I am going to assume
>> that
>>> you want to wrap image files in a HTML page automatically.
>>
>> Yes, that's the idea, although I only gave photos as an example: What 
>> I
>> really mean is this:
>> * If my document root is /web/examplecom/www/, and
>> * I have a request handler at /web/example/www/photos/index.py, and
>> * the photos are in /web/example/www/photos/
>> * Vampire is the PythonHandler, and
>> * req.uri is /photos/2004/10/01/137, then
>> ? will the handler in /photos/index.py pick up the request?
>
> If you expect the files/paths/URLs to be named exactly as you state,
> then for the currently available version of Vampire, the short answer
> is "No".

Having thought more about this. The particular case where there is 
actually
a physical resource, but where you might want to represent it in a 
different
format, is much better handled in other ways in Vampire.

Take for example where physical file "/photos/2004/10/01/137.jpg" 
exists,
but where you want to be able to access it as 
"/photos/2004/10/01/137.html"
and thus have the image automatically framed in in appropriate HTML 
page.

One would take a modified version of handler I already sent you. What 
you
call it or where it is stored is irrelevant, but I'll save it as the 
file
"/photos/index.py" to match what you want.

Next thing is to put the ".htaccess" file in "photos" subdirectory with 
it
containing:

   Options -Indexes -MultiViews

   SetHandler python-program
   PythonHandler vampire
   PythonPath 'sys.path'
   PythonDebug On

   PythonOption VampireDefaultHandlers On

Ie., have added "VampireDefaultHandlers" option to enabled default 
handler
lookup in Vampire.

Then add into the "photos" directory the file ".vampire" which contains:

   [Handlers]

   handler_html = %(__config_root__)s/index.py

I know this doesn't follow the REST style of URLs that you were using, 
ie.,
no extension, but the actual image is still accessed with an extension 
so
using a ".html" extension makes more sense to me than a naked URL.

If you really wanted naked URLs, instead of "handler_html" in .vampire 
file
and in name of method of "index.py", use just "handler". The code will 
need
to be tweaked a bit as it strips off the ".html" extension in places, 
but
it will yield exactly what you wanted.

Anyway, for the ".html" case, setting this up this way means that 
Vampire
will if it cannot find an appropriate content handler in the directory
hierarchy itself to URL, fallback to using the default handler specified
by the ".vampire" configuration file.

The content handler can then determine if the URL equates to a virtual
resource matched to a physical image file. If it does, it returns a HTML
page which within itself loads the image. The content handler doesn't 
even
need to play with req.path_info as req.filename and req.uri are going to
be correct for the target already, one just needs to fiddle with the
extension to identify the associated physical image file.

When it comes down to accessing resources which are completely virtual,
ie., no physical equivalent in the document hierarchy, then that is 
where
the script for a virtual directory is used as described previously.

Include below is the code for the "index.py" content handler as 
described.

from mod_python import apache

import os
import posixpath

import vampire

_PAGE = """
<html>
<body>
<h1>Photo: %(name)s</h1>
<img src="%(url)s" />
</body>
</html>
"""

# Handler for virtual directory.

def handler_html(req):

   # Determine what type of image file it is.

   path = None
   extn = None

   allowed = [ ".jpg", ".gif" ]

   stub = os.path.splitext(req.filename)[0]

   for suffix in allowed:
     file = stub + suffix

     if os.path.exists(file):
       path = file
       extn = suffix

   if path == None:
     return apache.HTTP_NOT_FOUND

   # Determine the URL to the actual image.

   config = vampire.loadConfig(req,".vampire")
   defaults = config.defaults()

   url = os.path.splitext(req.uri)[0] + extn
   name = 
os.path.splitext(req.uri[len(defaults["__baseurl_abs__"]):][1:])[0]

   content = _PAGE % { "name": name, "url": url }

   # Return the rendered page content.

   req.content_type = "text/html"
   req.send_http_header()

   req.write(content)

   return apache.OK


From jefdodson at yahoo.com  Thu Feb 10 15:53:02 2005
From: jefdodson at yahoo.com (Jef Dodson)
Date: Thu Feb 10 15:53:09 2005
Subject: [mod_python] how do I eliminate the .py extension in url?
Message-ID: <20050210205302.90091.qmail@web31005.mail.mud.yahoo.com>

I'm having a problem getting mod_python to work with url's that don't include the .py extension. 
Here's what I would like to do:  I would like to keep the .py extension on my files, but not
include them in the url.  So, if I have my_script.py in my scripts directory, I would like to be
able to reference that function in the url as /scripts/my_script/my_handler, i.e., no my_script.py
in the url.  Here is the relevant section from my apache config file:

<Directory /var/www/my_site.com/scripts>
    SetHandler mod_python 
    PythonHandler mod_python.publisher
    PythonDebug On
</Directory>  

Is there something else that I need that I'm missing?  Thanks!




		
__________________________________ 
Do you Yahoo!? 
The all-new My Yahoo! - Get yours free! 
http://my.yahoo.com 
 

From christopher.jackson at gmail.com  Thu Feb 10 16:34:21 2005
From: christopher.jackson at gmail.com (Chris Jackson)
Date: Thu Feb 10 16:38:02 2005
Subject: [mod_python] how do I eliminate the .py extension in url?
In-Reply-To: <20050210205302.90091.qmail@web31005.mail.mud.yahoo.com>
References: <20050210205302.90091.qmail@web31005.mail.mud.yahoo.com>
Message-ID: <4d11484d05021013343e50db90@mail.gmail.com>

If you rename my_script.py to index.py, you can just reference your
handler like this:

/scripts/my_handler

~= Chris =~

On Thu, 10 Feb 2005 12:53:02 -0800 (PST), Jef Dodson
<jefdodson@yahoo.com> wrote:
> I'm having a problem getting mod_python to work with url's that don't include the .py extension.
> Here's what I would like to do:  I would like to keep the .py extension on my files, but not
> include them in the url.  So, if I have my_script.py in my scripts directory, I would like to be
> able to reference that function in the url as /scripts/my_script/my_handler, i.e., no my_script.py
> in the url.  Here is the relevant section from my apache config file:
> 
> <Directory /var/www/my_site.com/scripts>
>     SetHandler mod_python
>     PythonHandler mod_python.publisher
>     PythonDebug On
> </Directory>
> 
> Is there something else that I need that I'm missing?  Thanks!
> 
> __________________________________
> Do you Yahoo!?
> The all-new My Yahoo! - Get yours free!
> http://my.yahoo.com
> 
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>
From grahamd at dscpl.com.au  Thu Feb 10 17:35:32 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Thu Feb 10 17:35:46 2005
Subject: [mod_python] how do I eliminate the .py extension in url?
Message-ID: <1108074932.7355@dscpl.user.openhosting.com>

Chris Jackson wrote ..
> If you rename my_script.py to index.py, you can just reference your
> handler like this:
> 
> /scripts/my_handler

Except that calling things "index.py" opens up another big can of worms
if using publisher. See:

  http://issues.apache.org/jira/browse/MODPYTHON-9
  http://issues.apache.org/jira/browse/MODPYTHON-10
  http://issues.apache.org/jira/browse/MODPYTHON-11

Although some disagree, mod_python.publisher is broken in a number of
ways and needs a good overhaul.

Soon maybe I will hack together something to give same style of interface
as publisher on top of Vampire just to show how much better things could
be. Alas, probably no time to do so. :-)

Graham
From jefdodson at yahoo.com  Thu Feb 10 18:39:10 2005
From: jefdodson at yahoo.com (Jef Dodson)
Date: Thu Feb 10 18:39:12 2005
Subject: [mod_python] how do I eliminate the .py extension in url?
In-Reply-To: <1108074932.7355@dscpl.user.openhosting.com>
Message-ID: <20050210233910.44207.qmail@web31010.mail.mud.yahoo.com>

Also, it's not a very general solution.  I would like to be able to access any number of scripts
without having the .py show up in the URL.  I am sure it is possible because I had it working
under Linux, but I am now trying to get it working under BSD so I'm wondering if maybe there is
some option that I'm missing in my httpd config file that was there by default on the Linux
installation.  Anyone have any ideas on this?

Jef

--- Graham Dumpleton <grahamd@dscpl.com.au> wrote:

> Chris Jackson wrote ..
> > If you rename my_script.py to index.py, you can just reference your
> > handler like this:
> > 
> > /scripts/my_handler
> 
> Except that calling things "index.py" opens up another big can of worms
> if using publisher. See:
> 
>   http://issues.apache.org/jira/browse/MODPYTHON-9
>   http://issues.apache.org/jira/browse/MODPYTHON-10
>   http://issues.apache.org/jira/browse/MODPYTHON-11
> 
> Although some disagree, mod_python.publisher is broken in a number of
> ways and needs a good overhaul.
> 
> Soon maybe I will hack together something to give same style of interface
> as publisher on top of Vampire just to show how much better things could
> be. Alas, probably no time to do so. :-)
> 
> Graham
> 


__________________________________________________
Do You Yahoo!?
Tired of spam?  Yahoo! Mail has the best spam protection around 
http://mail.yahoo.com 
From jason at pengale.com  Thu Feb 10 19:14:05 2005
From: jason at pengale.com (Jason Stitt)
Date: Thu Feb 10 19:14:23 2005
Subject: [mod_python] how do I eliminate the .py extension in url?
In-Reply-To: <20050210233910.44207.qmail@web31010.mail.mud.yahoo.com>
References: <20050210233910.44207.qmail@web31010.mail.mud.yahoo.com>
Message-ID: <e52bbabf3361c90f7878575bca75483f@pengale.com>

URL cruft does seem to be a consequence of using publisher, just 
because of the way it maps URLs to modules and functions. Mod_rewrite 
is one solution, but annoying.

I've decided to just write my own handler. That way I can set one 
central handler for my entire domain and route requests from there by 
running regexps on the URL, or using any other method I desire. If you 
really want everything to be filesystem-based, this might need some 
modification.

Here's the relevant section of my conf file, minus actual dir names. 
It's worked so far. If anyone spots a potential problem I would of 
course appreciate being warned :)

<Location />
     SetHandler mod_python
     PythonPath "sys.path+['/server/dir/site-python']"
     # in /server/dir/site-python/index.py there is an index() function
     PythonHandler index::index
</Location>

DocumentRoot /server/dir/static

<LocationMatch "(.+?)\.(jpg|gif|png|css|html)">
     SetHandler default-handler
</LocationMatch>

A directive similar to the last one should also allow php or other 
scripts to coexist with python, which I'm looking into as I am porting 
a site incrementally from php to mod_python.

-Jason


On Feb 10, 2005, at 5:39 PM, Jef Dodson wrote:

> Also, it's not a very general solution.  I would like to be able to 
> access any number of scripts
> without having the .py show up in the URL.  I am sure it is possible 
> because I had it working
> under Linux, but I am now trying to get it working under BSD so I'm 
> wondering if maybe there is
> some option that I'm missing in my httpd config file that was there by 
> default on the Linux
> installation.  Anyone have any ideas on this?
>
> Jef
>
> --- Graham Dumpleton <grahamd@dscpl.com.au> wrote:
>
>> Chris Jackson wrote ..
>>> If you rename my_script.py to index.py, you can just reference your
>>> handler like this:
>>>
>>> /scripts/my_handler
>>
>> Except that calling things "index.py" opens up another big can of 
>> worms
>> if using publisher. See:
>>
>>   http://issues.apache.org/jira/browse/MODPYTHON-9
>>   http://issues.apache.org/jira/browse/MODPYTHON-10
>>   http://issues.apache.org/jira/browse/MODPYTHON-11
>>
>> Although some disagree, mod_python.publisher is broken in a number of
>> ways and needs a good overhaul.
>>
>> Soon maybe I will hack together something to give same style of 
>> interface
>> as publisher on top of Vampire just to show how much better things 
>> could
>> be. Alas, probably no time to do so. :-)
>>
>> Graham
>>
>
>
> __________________________________________________
> Do You Yahoo!?
> Tired of spam?  Yahoo! Mail has the best spam protection around
> http://mail.yahoo.com
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>

From grahamd at dscpl.com.au  Thu Feb 10 19:23:04 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Thu Feb 10 19:23:04 2005
Subject: [mod_python] how do I eliminate the .py extension in url?
Message-ID: <1108081384.16390@dscpl.user.openhosting.com>

Jef Dodson wrote ..
> Also, it's not a very general solution.  I would like to be able to access
> any number of scripts
> without having the .py show up in the URL.  I am sure it is possible because
> I had it working
> under Linux, but I am now trying to get it working under BSD so I'm wondering
> if maybe there is
> some option that I'm missing in my httpd config file that was there by
> default on the Linux
> installation.  Anyone have any ideas on this?

Make sure you turn off MultiViews. Add to your .htaccess file:

  Options -MultiViews

Alternatively, don't set it in the first place in the main Apache configuration
for that directory. Turning this off in a .htaccess file will require you to have
appropriate rights to do so.

You should then be able to avoid using a .py extension if configuring use of
publisher as:

  SetHandler python-program

This cannot be done if you used:

  AddHandler python-program .py

The MultiViews option can cause lots of problems when using mod_python and
is frankly better always turned off.

Graham
From harrison at tbc.net  Thu Feb 10 19:30:32 2005
From: harrison at tbc.net (Shawn Harrison)
Date: Thu Feb 10 19:28:35 2005
Subject: [mod_python] how do I eliminate the .py extension in url?
In-Reply-To: <20050210233910.44207.qmail@web31010.mail.mud.yahoo.com>
References: <20050210233910.44207.qmail@web31010.mail.mud.yahoo.com>
Message-ID: <420BFCA8.6050004@tbc.net>

Too quick on the send key. Here's the file.

Jef Dodson wrote [02/10/05 5:39 PM]:
> Also, it's not a very general solution.  I would like to be able to access any number of scripts
> without having the .py show up in the URL.  I am sure it is possible because I had it working
> under Linux, but I am now trying to get it working under BSD so I'm wondering if maybe there is
> some option that I'm missing in my httpd config file that was there by default on the Linux
> installation.  Anyone have any ideas on this?

Put the following in httpd.conf:

SetHandler mod_python
PythonHandler module.path.to.handler.file

Then in the handler file, def a handler that looks for python scripts
and loads them based on the req.uri. The attached very crufty handler
might be a good source of amusement.

-- 
________________
harrison@tbc.net


-------------- next part --------------

# there's some stuff here that the handler doesn't actually use....
from mod_python import apache, psp, util, Cookie, Session
from string import split, join
import os

def handler(req):
    # 1. If the file exists & not a directory, serve it.

    filepath = req.document_root() + req.uri
    if (os.access(filepath, os.R_OK) 
    and not os.path.isdir(filepath)) :
        # req.write("sending file\n")
        req.sendfile(filepath)
        return apache.OK

    # 2. Search for a PSP or PY file to handle the request
    # -- working backwards from the end of the URI

    urllist = split(req.uri, '/')

    thefile = None
    for i in range(len(urllist)):
        filepath = os.path.join(req.document_root(), 
                join(urllist[1:len(urllist)-i], '/'))

        files = ('', 'index')             # keep lists short! only what is used
        exts = ('psp', 'py')              # each item adds to the processing time.

        for j in range(len(files)):
            for k in range(len(exts)):
                if files[j] == '':
                    thefile = ("%s.%s"
                              % (filepath, exts[k]))
                else:
                    thefile = ("%s.%s" 
                               % (os.path.join(filepath, files[j]), exts[k]))
                # DEBUG
                #req.content_type = "text/html"
                #req.write("%s<br />\n" % thefile)

                if os.access(thefile, os.R_OK):
                    if exts[k] == 'py':    
                        # there are better ways to do this....
                        # assumes thefile is a script that can be "run" directly.
                        execfile(thefile)    # replace w/import?
                    elif exts[k] == 'psp':
                        template = psp.PSP(req, filename=thefile)
                        template.run({'psp_file':thefile})
                    else:
                        # default is to treat the file as HTML. 
                        req.content_type="text/html"
                        req.sendfile(thefile)

                    return apache.OK

    # 3. Give up: Nothing found.

    return apache.HTTP_NOT_FOUND


From list at joreybump.com  Thu Feb 10 19:51:26 2005
From: list at joreybump.com (Jorey Bump)
Date: Thu Feb 10 19:51:35 2005
Subject: [mod_python] how do I eliminate the .py extension in url?
In-Reply-To: <1108081384.16390@dscpl.user.openhosting.com>
References: <1108081384.16390@dscpl.user.openhosting.com>
Message-ID: <420C018E.5060003@joreybump.com>

Graham Dumpleton wrote:
> Jef Dodson wrote ..
> 
>> Also, it's not a very general solution.  I would like to be able to
>> access any number of scripts without having the .py show up in the
>> URL.  I am sure it is possible because I had it working under
>> Linux, but I am now trying to get it working under BSD so I'm
>> wondering if maybe there is some option that I'm missing in my
>> httpd config file that was there by default on the Linux 
>> installation.  Anyone have any ideas on this?
> 
> 
> Make sure you turn off MultiViews. Add to your .htaccess file:
> 
> Options -MultiViews
> 
> Alternatively, don't set it in the first place in the main Apache
> configuration for that directory. Turning this off in a .htaccess
> file will require you to have appropriate rights to do so.
> 
> You should then be able to avoid using a .py extension if configuring
> use of publisher as:
> 
> SetHandler python-program
> 
> This cannot be done if you used:
> 
> AddHandler python-program .py
> 
> The MultiViews option can cause lots of problems when using
> mod_python and is frankly better always turned off.

I've been using this configuration for a long time with no problems:

         <Directory /var/www/myhost/site>
                 AddHandler python-program .py
                 PythonHandler mod_python.publisher
                 PythonDebug On
                 Options MultiViews
         </Directory>

This allows the type of URLs the OP desires. The only caveat that I'm
aware of is that you *must not* have similar names with different
extensions (foo.py, foo.php, foo.html, foo.jpg, etc.), or there will be
unexpected results when apache tries to guess which one to use.

versions: apache 1.3.x, mod_python 2.7.x

From grisha at modpython.org  Thu Feb 10 19:54:47 2005
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Thu Feb 10 19:54:52 2005
Subject: [mod_python] how do I eliminate the .py extension in url?
In-Reply-To: <20050210205302.90091.qmail@web31005.mail.mud.yahoo.com>
References: <20050210205302.90091.qmail@web31005.mail.mud.yahoo.com>
Message-ID: <20050210195249.I22610@grisha.dyndns.org>


You're not missing anything as far as I can tell, you shouldn't need the 
.py with the config below.

What happens when you go to /scripts/my_script/my_handler ? (Probably a 
better name for this URL would be /scripts/my_script/my_function since 
your handler in this case is mod_python.publisher).

Grisha

On Thu, 10 Feb 2005, Jef Dodson wrote:

> I'm having a problem getting mod_python to work with url's that don't include the .py extension.
> Here's what I would like to do:  I would like to keep the .py extension on my files, but not
> include them in the url.  So, if I have my_script.py in my scripts directory, I would like to be
> able to reference that function in the url as /scripts/my_script/my_handler, i.e., no my_script.py
> in the url.  Here is the relevant section from my apache config file:
>
> <Directory /var/www/my_site.com/scripts>
>    SetHandler mod_python
>    PythonHandler mod_python.publisher
>    PythonDebug On
> </Directory>
>
> Is there something else that I need that I'm missing?  Thanks!
>
>
>
>
>
> __________________________________
> Do you Yahoo!?
> The all-new My Yahoo! - Get yours free!
> http://my.yahoo.com
>
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>
From grahamd at dscpl.com.au  Thu Feb 10 20:16:38 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Thu Feb 10 20:16:43 2005
Subject: [mod_python] how do I eliminate the .py extension in url?
Message-ID: <1108084598.4894@dscpl.user.openhosting.com>

Jorey Bump wrote ..
> This allows the type of URLs the OP desires. The only caveat that I'm
> aware of is that you *must not* have similar names with different
> extensions (foo.py, foo.php, foo.html, foo.jpg, etc.), or there will be
> unexpected results when apache tries to guess which one to use.
> 
> versions: apache 1.3.x, mod_python 2.7.x

Be warned that Apache 2.0 behaves a bit different to Apache 1.3.
Specifically, mod_mime, mod_index and mod_dir in Apache 1.3 will
actually look inside directories managed by a mod_python handler
and fiddle with URLs and apply stuff like DirectoryIndex whereas
in Apache 2.0 it doesn't. I feel that the Apache 2.0 behaviour is more
correct, especially if you are using SetHandler and more or less expect
to have almost total control. Your application might therefore not
work as expected on Apache 2.0.

Your caveat of having the same basename with different extensions
is a big problem for me with Vampire because of how it promotes
physical resources and having different views of those resources. It
is quite common when using Vampire to have "foo.html" and "foo.py"
where "foo.html" is a page template which is filled out by code in
"foo.py".

Graham
From grahamd at dscpl.com.au  Thu Feb 10 21:02:15 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Thu Feb 10 21:02:26 2005
Subject: [mod_python] how do I eliminate the .py extension in url?
Message-ID: <1108087335.22217@dscpl.user.openhosting.com>

Graham Dumpleton wrote ..
> Chris Jackson wrote ..
> > If you rename my_script.py to index.py, you can just reference your
> > handler like this:
> > 
> > /scripts/my_handler
> 
> Except that calling things "index.py" opens up another big can of worms
> if using publisher. See:
> 
>   http://issues.apache.org/jira/browse/MODPYTHON-9
>   http://issues.apache.org/jira/browse/MODPYTHON-10
>   http://issues.apache.org/jira/browse/MODPYTHON-11
> 
> Although some disagree, mod_python.publisher is broken in a number of
> ways and needs a good overhaul.
> 
> Soon maybe I will hack together something to give same style of interface
> as publisher on top of Vampire just to show how much better things could
> be. Alas, probably no time to do so. :-)

Found some time. :-)

As an experiment, what I did was to take a copy of mod_python.publisher
and simply replace the module loading section with calls to the module loader
in Vampire.

Result seems to fix all three of the issues listed above and also addresses:

  http://issues.apache.org/jira/browse/MODPYTHON-8

as well, since Vampire uses a two level locking scheme on the module cache.

Use of the Vampire module loading and caching system will however introduce
some unexpected differences to what you would get with standard mod_python
module loader. The two main ones will be that module reloading cannot be
turned off and the second is that data isn't persistent across module reloads
unless you take special action. I will not bother going into the details of why
these two things are as they are, unless someone actually bothers to play with
this.

Anyway, below is a patch against the publisher.py file from 3.1.3. You shouldn't
just modify your installed "publisher.py" file. Simplest thing to do to experiment
is to copy it into your document tree where your handlers are and call it
"_publisher.py". Then change SetHandler/AddHandler to "_publisher". Make
the changes below to that copy of the file.

You will need to get a copy of Vampire.

*** /usr/local/src/mod_python-3.1.3/lib/python/mod_python/publisher.py	Fri Feb 11 12:42:24 2005
--- _publisher.py	Fri Feb 11 12:59:25 2005
***************
*** 28,35 ****
    5. Does not give special meaning to '.' and '..'.
  """
  
! import apache
! import util
  
  import sys
  import os
--- 28,35 ----
    5. Does not give special meaning to '.' and '..'.
  """
  
! from mod_python import apache
! from mod_python import util
  
  import sys
  import os
***************
*** 40,45 ****
--- 40,47 ----
  import new
  from types import *
  
+ import vampire
+ 
  imp_suffixes = " ".join([x[0][1:] for x in imp.get_suffixes()])
  
  def handler(req):
***************
*** 85,90 ****
--- 87,93 ----
          suff_matcher = re.compile(exp) # python caches these, so its fast
          module_name = suff_matcher.sub("", module_name)
  
+     """
      # import module (or reload if needed)
      # the [path] argument tells import_module not to allow modules whose
      # full path is not in [path] or below.
***************
*** 110,116 ****
          except ImportError:
              # raise the original exception
              raise et, ev, etb
!         
      # does it have an __auth__?
      realm, user, passwd = process_auth(req, module)
  
--- 113,137 ----
          except ImportError:
              # raise the original exception
              raise et, ev, etb
!     """
! 
!     # XXX
! 
!     try:
! 	#module = vampire.importModule(module_name,path,req=req)
! 	module = vampire.ModuleCache().importModule(module_name,path,req=req)
!     except OSError:
!         et, ev, etb = sys.exc_info()
!         func_path = module_name
!         module_name = "index"
!         try:
! 	    #module = vampire.importModule(module_name,path,req=req)
! 	    module = vampire.ModuleCache().importModule(module_name,path,req=req)
!         except OSError:
!             raise et, ev, etb
! 
!     # XXX
! 
      # does it have an __auth__?
      realm, user, passwd = process_auth(req, module)
  
From jefdodson at yahoo.com  Thu Feb 10 21:26:27 2005
From: jefdodson at yahoo.com (Jef Dodson)
Date: Thu Feb 10 21:26:29 2005
Subject: [mod_python] how do I eliminate the .py extension in url?
In-Reply-To: <1108081384.16390@dscpl.user.openhosting.com>
Message-ID: <20050211022627.11078.qmail@web31007.mail.mud.yahoo.com>

Turning off MultiViews in my apache config file worked beautifully.  Thanks very much to everyone
who responded with ideas!

Jef



> Jef Dodson wrote ..
> > Also, it's not a very general solution.  I would like to be able to access
> > any number of scripts
> > without having the .py show up in the URL.  I am sure it is possible because
> > I had it working
> > under Linux, but I am now trying to get it working under BSD so I'm wondering
> > if maybe there is
> > some option that I'm missing in my httpd config file that was there by
> > default on the Linux
> > installation.  Anyone have any ideas on this?
> 
> Make sure you turn off MultiViews. Add to your .htaccess file:
> 
>   Options -MultiViews
> 
> Alternatively, don't set it in the first place in the main Apache configuration
> for that directory. Turning this off in a .htaccess file will require you to have
> appropriate rights to do so.
> 
> You should then be able to avoid using a .py extension if configuring use of
> publisher as:
> 
>   SetHandler python-program
> 
> This cannot be done if you used:
> 
>   AddHandler python-program .py
> 
> The MultiViews option can cause lots of problems when using mod_python and
> is frankly better always turned off.
> 
> Graham
> 



		
__________________________________ 
Do you Yahoo!? 
The all-new My Yahoo! - Get yours free! 
http://my.yahoo.com 
 

From rob at robnet.com  Thu Feb 10 23:07:30 2005
From: rob at robnet.com (Rob Nichols)
Date: Thu Feb 10 23:07:34 2005
Subject: [mod_python] how do I eliminate the .py extension in url?
In-Reply-To: <420BFCA8.6050004@tbc.net>
References: <20050210233910.44207.qmail@web31010.mail.mud.yahoo.com>
	<420BFCA8.6050004@tbc.net>
Message-ID: <20050211040730.GE15182@robnet.com>

On Thu, Feb 10, 2005 at 06:30:32PM -0600, Shawn Harrison wrote:
> Put the following in httpd.conf:
> 
> SetHandler mod_python
> PythonHandler module.path.to.handler.file
> 
> Then in the handler file, def a handler that looks for python scripts
> and loads them based on the req.uri. The attached very crufty handler
> might be a good source of amusement.

Are you using this in a production environment?  If so, can you give a rough
estimate of the cost of "a little python and usually req.sendfile()" compared
to apache serving up text files?  

I'm quite new to mod_python, just toying with it for some pet projects.  It
seems really cool, but I don't have a feel for the performance yet.  I'll do
some tests "some day" (before I do anything serious), but curious about what
others have found.  

TIA,
Rob
From grahamd at dscpl.com.au  Thu Feb 10 23:37:25 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Thu Feb 10 23:37:26 2005
Subject: [mod_python] how do I eliminate the .py extension in url?
Message-ID: <1108096645.17717@dscpl.user.openhosting.com>

Rob Nichols wrote ..
> On Thu, Feb 10, 2005 at 06:30:32PM -0600, Shawn Harrison wrote:
> > Put the following in httpd.conf:
> > 
> > SetHandler mod_python
> > PythonHandler module.path.to.handler.file
> > 
> > Then in the handler file, def a handler that looks for python scripts
> > and loads them based on the req.uri. The attached very crufty handler
> > might be a good source of amusement.
> 
> Are you using this in a production environment?  If so, can you give a
> rough
> estimate of the cost of "a little python and usually req.sendfile()" compared
> to apache serving up text files?  
> 
> I'm quite new to mod_python, just toying with it for some pet projects.
> It
> seems really cool, but I don't have a feel for the performance yet.  I'll
> do
> some tests "some day" (before I do anything serious), but curious about
> what
> others have found.  

When you use "req.sendfile()", the job of sending back the contents of the
file is carried out by Apache. Thus, it isn't strictly being done by any Python
code.

The alternative to using "req.sendfile()" in this case where the physical
file resides at the same spot as the URL would match to anyway, is to
simply return "apache.DECLINED". By doing this, Apache will continue
to process the request and will serve up the contents of the file as per
normal.

The only real reason to use "req.sendfile()" is where the physical file is
situated in a different location to that where the URL would map to if you
let Apache do its job. For example, if the physical file actually resided
outside of the document tree.

Graham
From list at joreybump.com  Thu Feb 10 23:52:14 2005
From: list at joreybump.com (Jorey Bump)
Date: Thu Feb 10 23:52:23 2005
Subject: [mod_python] how do I eliminate the .py extension in url?
In-Reply-To: <1108084598.4894@dscpl.user.openhosting.com>
References: <1108084598.4894@dscpl.user.openhosting.com>
Message-ID: <420C39FE.7090301@joreybump.com>

Graham Dumpleton wrote:
> Jorey Bump wrote ..
> 
>>This allows the type of URLs the OP desires. The only caveat that I'm
>>aware of is that you *must not* have similar names with different
>>extensions (foo.py, foo.php, foo.html, foo.jpg, etc.), or there will be
>>unexpected results when apache tries to guess which one to use.
>>
>>versions: apache 1.3.x, mod_python 2.7.x
> 
> 
> Be warned that Apache 2.0 behaves a bit different to Apache 1.3.
> Specifically, mod_mime, mod_index and mod_dir in Apache 1.3 will
> actually look inside directories managed by a mod_python handler
> and fiddle with URLs and apply stuff like DirectoryIndex whereas
> in Apache 2.0 it doesn't. I feel that the Apache 2.0 behaviour is more
> correct, especially if you are using SetHandler and more or less expect
> to have almost total control. Your application might therefore not
> work as expected on Apache 2.0.

Thanks for the tip. You're right, on my Apache 2.x test server, I have 
to shut *off* MultiViews and use SetHandler instead of AddHandler to 
hide the .py extension. I guess Harry Nilsson was right ('Everything is 
the opposite of what it is, isn't it?')...

I imagine performance is better with MultiViews off, but I did like 
being able to mix different types of files in one directory by using 
AddHandler. Fortunately, my apps don't really depend on it.

From ernieball_slinky at yahoo.fr  Fri Feb 11 09:04:45 2005
From: ernieball_slinky at yahoo.fr (Lolo)
Date: Fri Feb 11 09:04:50 2005
Subject: [mod_python] Troubleshooting mod_python and PSP
Message-ID: <20050211140445.74898.qmail@web51704.mail.yahoo.com>

Hello,

I'm trying to solve a strange error with mod_python.
My configuration :
- Debian GNU/Linux, testing
- Apache/2.0.52
- mod_python/3.1.3
- Python/2.3.4

I use mod_python.psp Handler. Here is my Apache
config:
Alias /tc/   	 "/home/web/www/psp/tc/"

<Directory "/home/web/www/psp/tc/">
	AllowOverride		None

	AddHandler		mod_python .psp
	PythonHandler		mod_python.psp

	DirectoryIndex 		/support/NotFoundError.psp

	PythonPath			"sys.path+['/home/web/www/psp/py/']"
</Directory>

I wrote a Python Server Page with html form, when i
submit the form i have a POST and GET requests in my
apache log and IOError from mod_python.

Here is an extract of my apache errorlog and accesslog
:
errorlog:
Fri Feb 11 14:28:01 2005] [error] [client 127.0.0.1]
PythonHandler mod_python.psp: Traceback (most recent
call last):, referer: http://localhost/tc/Queries.psp
[Fri Feb 11 14:28:01 2005] [error] [client 127.0.0.1]
PythonHandler mod_python.psp:   File
"/usr/lib/python2.3/site-packages/mod_python/apache.py",
line 299, in HandlerDispatch\n    result =
object(req), referer: http://localhost/tc/Queries.psp
[Fri Feb 11 14:28:01 2005] [error] [client 127.0.0.1]
PythonHandler mod_python.psp:   File
"/usr/lib/python2.3/site-packages/mod_python/psp.py",
line 297, in handler\np.run(), referer:
http://localhost/tc/Queries.psp
[Fri Feb 11 14:28:01 2005] [error] [client 127.0.0.1]
PythonHandler mod_python.psp:   File
"/usr/lib/python2.3/site-packages/mod_python/psp.py",
line 208, in run\n    exec code in global_scope,
referer: http://localhost/tc/Queries.psp
[Fri Feb 11 14:28:01 2005] [error] [client 127.0.0.1]
PythonHandler mod_python.psp:   File
"/home/web/www/psp/tc/Queries.psp", line 745, in ?,
referer: http://localhost/tc/Queries.psp
[Fri Feb 11 14:28:01 2005] [error] [client 127.0.0.1]
PythonHandler mod_python.psp: IOError: Write failed,
client closed connection., referer:
http://localhost/tc/Queries.psp

accesslog:
127.0.0.1 - - [11/Feb/2005:14:28:01 +0100] "POST
/synopsis/Queries.psp HTTP/1.1" 200 28448
"http://localhost/tc/Queries.psp" "Mozilla/5.0 (X11;
U; Linux i686; en-US; rv:1.7.5) Gecko/20050110
Firefox/1.0 (Debian package 1.0+dfsg.1-2)"

127.0.0.1 - - [11/Feb/2005:14:28:01 +0100] "GET
/synopsis/Queries.psp HTTP/1.1" 500 16073
"http://localhost/tc/Queries.psp" "Mozilla/5.0 (X11;
U; Linux i686; en-US;rv:1.7.5) Gecko/20050110
Firefox/1.0 (Debian package 1.0+dfsg.1-2)"

Could anybody try to help me or some ideas ?

Thanks,
Lolo


	

	
		
D?couvrez le nouveau Yahoo! Mail : 250 Mo d'espace de stockage pour vos mails ! 
Cr?ez votre Yahoo! Mail sur http://fr.mail.yahoo.com/
From grisha at modpython.org  Fri Feb 11 10:25:55 2005
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Feb 11 10:26:03 2005
Subject: [mod_python] how do I eliminate the .py extension in url?
In-Reply-To: <1108096645.17717@dscpl.user.openhosting.com>
References: <1108096645.17717@dscpl.user.openhosting.com>
Message-ID: <20050211102048.D33775@grisha.dyndns.org>



On Thu, 10 Feb 2005, Graham Dumpleton wrote:

> When you use "req.sendfile()", the job of sending back the contents of 
> the file is carried out by Apache. Thus, it isn't strictly being done by 
> any Python code.

To be more precise, it is carried out by the operating system (if your OS 
supports the sendfile() call):

http://man.linuxquestions.org/index.php?query=sendfile&section=0&type=2

so there is theoritcally no faster way to send a file.

Grisha
From christopher.jackson at gmail.com  Fri Feb 11 11:32:01 2005
From: christopher.jackson at gmail.com (Chris Jackson)
Date: Fri Feb 11 11:32:07 2005
Subject: [mod_python] Best way to logout a session
Message-ID: <4d11484d0502110832584b26c@mail.gmail.com>

I'm looking to a way of logging out a session putting the user back at
the Apache authentication dialog box.

What I've done so far is to create a URL that links to a logout
publisher handler.  The handler has:

    sess = Session(req, sessid, None, 36000, 0)
    sess.load()
    sess.invalidate()
    sess.delete()
    req.internal_redirect('/myurl/login')      

However when revisiting the login page, the browser still holds the
user's information, but i'd want it to return the user to the actual
apache authentication handler.

~= Chris =~
From harrison at tbc.net  Fri Feb 11 12:44:37 2005
From: harrison at tbc.net (Shawn Harrison)
Date: Fri Feb 11 12:42:13 2005
Subject: [mod_python] Best way to logout a session
In-Reply-To: <4d11484d0502110832584b26c@mail.gmail.com>
References: <4d11484d0502110832584b26c@mail.gmail.com>
Message-ID: <420CEF05.8080009@tbc.net>

Chris Jackson wrote [02/11/05 10:32 AM]:
> However when revisiting the login page, the browser still holds the
> user's information, but i'd want it to return the user to the actual
> apache authentication handler.

Send some JavaScript to delete the cookies?

-- 
________________
harrison@tbc.net
From donniejones18 at gmail.com  Fri Feb 11 12:48:47 2005
From: donniejones18 at gmail.com (donnie jones)
Date: Fri Feb 11 12:48:50 2005
Subject: [mod_python] pass variables between functions.
Message-ID: <ff876008050211094860320101@mail.gmail.com>

Hello,

I am wanting to have a variable's data between two functions, but I
can't seem to find a reasonable way to do this with modpython
publisher...

example:

x=0

def test(req):
  global x
  x = 1

def add(req):
  global x
  x=x+1
  req.write("%d" % x)


I would like for x to have a consistent value between the functions...
I thought maybe doing req.x = 1 might work, but I did not have success
between the functions, req would not maintain the value.

Any suggestions would be great.
Thank you.

__
Donnie
From nick at dd.revealed.net  Fri Feb 11 13:02:21 2005
From: nick at dd.revealed.net (Nick)
Date: Fri Feb 11 13:02:36 2005
Subject: [mod_python] Best way to logout a session
In-Reply-To: <4d11484d0502110832584b26c@mail.gmail.com>
References: <4d11484d0502110832584b26c@mail.gmail.com>
Message-ID: <420CF32D.804@dd.revealed.net>

In theory if you send a 401 when the person logs out, you will force the 
browser to flush the credentials they previously supplied.

Nick

Chris Jackson wrote:
> I'm looking to a way of logging out a session putting the user back at
> the Apache authentication dialog box.
> 
> What I've done so far is to create a URL that links to a logout
> publisher handler.  The handler has:
> 
>     sess = Session(req, sessid, None, 36000, 0)
>     sess.load()
>     sess.invalidate()
>     sess.delete()
>     req.internal_redirect('/myurl/login')      
> 
> However when revisiting the login page, the browser still holds the
> user's information, but i'd want it to return the user to the actual
> apache authentication handler.
> 
> ~= Chris =~
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python

From christopher.jackson at gmail.com  Fri Feb 11 13:25:14 2005
From: christopher.jackson at gmail.com (Chris Jackson)
Date: Fri Feb 11 13:25:16 2005
Subject: [mod_python] pass variables between functions.
In-Reply-To: <ff876008050211094860320101@mail.gmail.com>
References: <ff876008050211094860320101@mail.gmail.com>
Message-ID: <4d11484d05021110257503317@mail.gmail.com>

If you're looking for setting something like constants, then one
suggestion would be to create a separate config module of a sort :

# config.py
COLOR='blue'
SIZE=10

Then, in your publisher handler file you can import the config module
and call it like so:

from mod_python import apache
import config

def test(req):
 mycolor = config.COLOR + 1
 mysize = config.SIZE +1

def add(req):
 mycolor = config.COLOR +2
 mysize = config.SIZE + 2

However, if by consistency, you mean retain a value across functions,
then using global should work fine.  You may just have an issue with
sessions.  What do  you ultimately want to accomplish?

~= Chris =~


On Fri, 11 Feb 2005 12:48:47 -0500, donnie jones
<donniejones18@gmail.com> wrote:
> Hello,
> 
> I am wanting to have a variable's data between two functions, but I
> can't seem to find a reasonable way to do this with modpython
> publisher...
> 
> example:
> 
> x=0
> 
> def test(req):
>   global x
>   x = 1
> 
> def add(req):
>   global x
>   x=x+1
>   req.write("%d" % x)
> 
> I would like for x to have a consistent value between the functions...
> I thought maybe doing req.x = 1 might work, but I did not have success
> between the functions, req would not maintain the value.
> 
> Any suggestions would be great.
> Thank you.
> 
> __
> Donnie
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>
From christopher.jackson at gmail.com  Fri Feb 11 13:30:45 2005
From: christopher.jackson at gmail.com (Chris Jackson)
Date: Fri Feb 11 13:30:47 2005
Subject: [mod_python] Best way to logout a session
In-Reply-To: <420CEF05.8080009@tbc.net>
References: <4d11484d0502110832584b26c@mail.gmail.com>
	<420CEF05.8080009@tbc.net>
Message-ID: <4d11484d050211103039dd2596@mail.gmail.com>

How would I do this?  Do you have an example?

Note: I'm using mod_python.Session; I prefer server-side session
management  instead of creating a javascript client cookie.

Also, Javascript code to start a new window(maximized) and close the
previous window will do as well.

~= Chris =~

On Fri, 11 Feb 2005 11:44:37 -0600, Shawn Harrison <harrison@tbc.net> wrote:
> Chris Jackson wrote [02/11/05 10:32 AM]:
> > However when revisiting the login page, the browser still holds the
> > user's information, but i'd want it to return the user to the actual
> > apache authentication handler.
> 
> Send some JavaScript to delete the cookies?
> 
> --
> ________________
> harrison@tbc.net
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>
From christopher.jackson at gmail.com  Fri Feb 11 13:36:39 2005
From: christopher.jackson at gmail.com (Chris Jackson)
Date: Fri Feb 11 13:36:40 2005
Subject: [mod_python] Best way to logout a session
In-Reply-To: <420CF32D.804@dd.revealed.net>
References: <4d11484d0502110832584b26c@mail.gmail.com>
	<420CF32D.804@dd.revealed.net>
Message-ID: <4d11484d05021110365a9eb908@mail.gmail.com>

I've tried returning apache.HTTP_UNAUTHORIZED among others however,
those are just constants and return the respective number back to the
browser.

Supposedly, or as a matter a fact, the invalidate() method of a
Session object is suppose to place a header in outgoing headers to
invalidate the session id cookie.

Perhaps I may need to also make use of the sess.is_new() method... but
that only helps for knowing when to redirect.

~= Chris =~


On Fri, 11 Feb 2005 12:02:21 -0600, Nick <nick@dd.revealed.net> wrote:
> In theory if you send a 401 when the person logs out, you will force the
> browser to flush the credentials they previously supplied.
> 
> Nick
> 
> Chris Jackson wrote:
> > I'm looking to a way of logging out a session putting the user back at
> > the Apache authentication dialog box.
> >
> > What I've done so far is to create a URL that links to a logout
> > publisher handler.  The handler has:
> >
> >     sess = Session(req, sessid, None, 36000, 0)
> >     sess.load()
> >     sess.invalidate()
> >     sess.delete()
> >     req.internal_redirect('/myurl/login')
> >
> > However when revisiting the login page, the browser still holds the
> > user's information, but i'd want it to return the user to the actual
> > apache authentication handler.
> >
> > ~= Chris =~
> > _______________________________________________
> > Mod_python mailing list
> > Mod_python@modpython.org
> > http://mailman.modpython.org/mailman/listinfo/mod_python
> 
>
From donniejones18 at gmail.com  Fri Feb 11 13:38:36 2005
From: donniejones18 at gmail.com (donnie jones)
Date: Fri Feb 11 13:38:38 2005
Subject: [mod_python] pass variables between functions.
In-Reply-To: <ff87600805021110285e295697@mail.gmail.com>
References: <ff876008050211094860320101@mail.gmail.com>
	<4d11484d05021110257503317@mail.gmail.com>
	<ff87600805021110285e295697@mail.gmail.com>
Message-ID: <ff876008050211103845e3c970@mail.gmail.com>

I meant retain a value across function, not constants.
The global did not work for me..

Must I "return" the variable in order for it to be
changed for the second function?

What kind of sessions issue could be happening?
I don't have any sessions declared....

Thanks.
__
Donnie


On Fri, 11 Feb 2005 13:25:14 -0500, Chris Jackson
<christopher.jackson@gmail.com> wrote:
> If you're looking for setting something like constants, then one
> suggestion would be to create a separate config module of a sort :
>
> # config.py
> COLOR='blue'
> SIZE=10
>
> Then, in your publisher handler file you can import the config module
> and call it like so:
>
> from mod_python import apache
> import config
>
> def test(req):
>  mycolor = config.COLOR + 1
>  mysize = config.SIZE +1
>
> def add(req):
>  mycolor = config.COLOR +2
>  mysize = config.SIZE + 2
>
> However, if by consistency, you mean retain a value across functions,
> then using global should work fine.  You may just have an issue with
> sessions.  What do  you ultimately want to accomplish?
>
> ~= Chris =~
>
>
> On Fri, 11 Feb 2005 12:48:47 -0500, donnie jones
> <donniejones18@gmail.com> wrote:
> > Hello,
> >
> > I am wanting to have a variable's data between two functions, but I
> > can't seem to find a reasonable way to do this with modpython
> > publisher...
> >
> > example:
> >
> > x=0
> >
> > def test(req):
> >   global x
> >   x = 1
> >
> > def add(req):
> >   global x
> >   x=x+1
> >   req.write("%d" % x)
> >
> > I would like for x to have a consistent value between the functions...
> > I thought maybe doing req.x = 1 might work, but I did not have success
> > between the functions, req would not maintain the value.
> >
> > Any suggestions would be great.
> > Thank you.
> >
> > __
> > Donnie
> > _______________________________________________
> > Mod_python mailing list
> > Mod_python@modpython.org
> > http://mailman.modpython.org/mailman/listinfo/mod_python
> >
>
From christopher.jackson at gmail.com  Fri Feb 11 13:49:45 2005
From: christopher.jackson at gmail.com (Chris Jackson)
Date: Fri Feb 11 13:49:48 2005
Subject: [mod_python] pass variables between functions.
In-Reply-To: <ff87600805021110285e295697@mail.gmail.com>
References: <ff876008050211094860320101@mail.gmail.com>
	<4d11484d05021110257503317@mail.gmail.com>
	<ff87600805021110285e295697@mail.gmail.com>
Message-ID: <4d11484d050211104931f4ae29@mail.gmail.com>

[+ mod_python]

I've tested your code.  It works fine the way you have it (add an
output statement to def test)....

Everytime http://path/to/your/site/test is called, x is reset to 1
Each time http://path/to/your/site/add is called, x is incremented.

~= Chris =~

On Fri, 11 Feb 2005 13:28:15 -0500, donnie jones
<donniejones18@gmail.com> wrote:
> I meant retain a value across function, not constants.
> The global did not work for me..
> 
> Must I "return" the variable in order for it to be
> changed for the second function?
> 
> What kind of sessions issue could be happening?
> I don't have any sessions declared....
> 
> Thanks.
> __
> Donnie
> 
> 
> On Fri, 11 Feb 2005 13:25:14 -0500, Chris Jackson
> <christopher.jackson@gmail.com> wrote:
> > If you're looking for setting something like constants, then one
> > suggestion would be to create a separate config module of a sort :
> >
> > # config.py
> > COLOR='blue'
> > SIZE=10
> >
> > Then, in your publisher handler file you can import the config module
> > and call it like so:
> >
> > from mod_python import apache
> > import config
> >
> > def test(req):
> >  mycolor = config.COLOR + 1
> >  mysize = config.SIZE +1
> >
> > def add(req):
> >  mycolor = config.COLOR +2
> >  mysize = config.SIZE + 2
> >
> > However, if by consistency, you mean retain a value across functions,
> > then using global should work fine.  You may just have an issue with
> > sessions.  What do  you ultimately want to accomplish?
> >
> > ~= Chris =~
> >
> >
> > On Fri, 11 Feb 2005 12:48:47 -0500, donnie jones
> > <donniejones18@gmail.com> wrote:
> > > Hello,
> > >
> > > I am wanting to have a variable's data between two functions, but I
> > > can't seem to find a reasonable way to do this with modpython
> > > publisher...
> > >
> > > example:
> > >
> > > x=0
> > >
> > > def test(req):
> > >   global x
> > >   x = 1
> > >
> > > def add(req):
> > >   global x
> > >   x=x+1
> > >   req.write("%d" % x)
> > >
> > > I would like for x to have a consistent value between the functions...
> > > I thought maybe doing req.x = 1 might work, but I did not have success
> > > between the functions, req would not maintain the value.
> > >
> > > Any suggestions would be great.
> > > Thank you.
> > >
> > > __
> > > Donnie
> > > _______________________________________________
> > > Mod_python mailing list
> > > Mod_python@modpython.org
> > > http://mailman.modpython.org/mailman/listinfo/mod_python
> > >
> >
>
From sanders at apache.org  Fri Feb 11 13:58:51 2005
From: sanders at apache.org (Scott Sanders)
Date: Fri Feb 11 13:58:53 2005
Subject: [mod_python] pass variables between functions.
In-Reply-To: <4d11484d050211104931f4ae29@mail.gmail.com>
References: <ff876008050211094860320101@mail.gmail.com>
	<4d11484d05021110257503317@mail.gmail.com>
	<ff87600805021110285e295697@mail.gmail.com>
	<4d11484d050211104931f4ae29@mail.gmail.com>
Message-ID: <519f09a66621be7290fae4922170e672@apache.org>

It won't work for everyone, if someone's config uses a threaded MPM for 
Apache, or multiple python interpreters.  Then the x global var is only 
global to a particular interpreter.

Scott

On Feb 11, 2005, at 10:49 AM, Chris Jackson wrote:

> [+ mod_python]
>
> I've tested your code.  It works fine the way you have it (add an
> output statement to def test)....
>
> Everytime http://path/to/your/site/test is called, x is reset to 1
> Each time http://path/to/your/site/add is called, x is incremented.
>
> ~= Chris =~
>
> On Fri, 11 Feb 2005 13:28:15 -0500, donnie jones
> <donniejones18@gmail.com> wrote:
>> I meant retain a value across function, not constants.
>> The global did not work for me..
>>
>> Must I "return" the variable in order for it to be
>> changed for the second function?
>>
>> What kind of sessions issue could be happening?
>> I don't have any sessions declared....
>>
>> Thanks.
>> __
>> Donnie
>>
>>
>> On Fri, 11 Feb 2005 13:25:14 -0500, Chris Jackson
>> <christopher.jackson@gmail.com> wrote:
>>> If you're looking for setting something like constants, then one
>>> suggestion would be to create a separate config module of a sort :
>>>
>>> # config.py
>>> COLOR='blue'
>>> SIZE=10
>>>
>>> Then, in your publisher handler file you can import the config module
>>> and call it like so:
>>>
>>> from mod_python import apache
>>> import config
>>>
>>> def test(req):
>>>  mycolor = config.COLOR + 1
>>>  mysize = config.SIZE +1
>>>
>>> def add(req):
>>>  mycolor = config.COLOR +2
>>>  mysize = config.SIZE + 2
>>>
>>> However, if by consistency, you mean retain a value across functions,
>>> then using global should work fine.  You may just have an issue with
>>> sessions.  What do  you ultimately want to accomplish?
>>>
>>> ~= Chris =~
>>>
>>>
>>> On Fri, 11 Feb 2005 12:48:47 -0500, donnie jones
>>> <donniejones18@gmail.com> wrote:
>>>> Hello,
>>>>
>>>> I am wanting to have a variable's data between two functions, but I
>>>> can't seem to find a reasonable way to do this with modpython
>>>> publisher...
>>>>
>>>> example:
>>>>
>>>> x=0
>>>>
>>>> def test(req):
>>>>   global x
>>>>   x = 1
>>>>
>>>> def add(req):
>>>>   global x
>>>>   x=x+1
>>>>   req.write("%d" % x)
>>>>
>>>> I would like for x to have a consistent value between the 
>>>> functions...
>>>> I thought maybe doing req.x = 1 might work, but I did not have 
>>>> success
>>>> between the functions, req would not maintain the value.
>>>>
>>>> Any suggestions would be great.
>>>> Thank you.
>>>>
>>>> __
>>>> Donnie
>>>> _______________________________________________
>>>> Mod_python mailing list
>>>> Mod_python@modpython.org
>>>> http://mailman.modpython.org/mailman/listinfo/mod_python
>>>>
>>>
>>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python

From donniejones18 at gmail.com  Fri Feb 11 14:03:34 2005
From: donniejones18 at gmail.com (donnie jones)
Date: Fri Feb 11 14:03:39 2005
Subject: [mod_python] pass variables between functions.
In-Reply-To: <ff8760080502111102d8b9da3@mail.gmail.com>
References: <ff876008050211094860320101@mail.gmail.com>
	<4d11484d05021110257503317@mail.gmail.com>
	<ff87600805021110285e295697@mail.gmail.com>
	<4d11484d050211104931f4ae29@mail.gmail.com>
	<519f09a66621be7290fae4922170e672@apache.org>
	<ff8760080502111102d8b9da3@mail.gmail.com>
Message-ID: <ff87600805021111034d8493e4@mail.gmail.com>

---------- Forwarded message ----------
From: donnie jones <donniejones18@gmail.com>
Date: Fri, 11 Feb 2005 14:02:48 -0500
Subject: Re: [mod_python] pass variables between functions.
To: Scott Sanders <sanders@apache.org>


I believe I am having this problem because if I reload the x=x+1
function many times, sometimes it will increment the value and
sometimes it won't... so I assume it is depending upon which thread
has loaded.

Is there a way around this so that I have a consistent value between
the functions?

Thank you.

__
Donnie


On Fri, 11 Feb 2005 10:58:51 -0800, Scott Sanders <sanders@apache.org> wrote:
> It won't work for everyone, if someone's config uses a threaded MPM for
> Apache, or multiple python interpreters.  Then the x global var is only
> global to a particular interpreter.
>
> Scott
>
> On Feb 11, 2005, at 10:49 AM, Chris Jackson wrote:
>
> > [+ mod_python]
> >
> > I've tested your code.  It works fine the way you have it (add an
> > output statement to def test)....
> >
> > Everytime http://path/to/your/site/test is called, x is reset to 1
> > Each time http://path/to/your/site/add is called, x is incremented.
> >
> > ~= Chris =~
> >
> > On Fri, 11 Feb 2005 13:28:15 -0500, donnie jones
> > <donniejones18@gmail.com> wrote:
> >> I meant retain a value across function, not constants.
> >> The global did not work for me..
> >>
> >> Must I "return" the variable in order for it to be
> >> changed for the second function?
> >>
> >> What kind of sessions issue could be happening?
> >> I don't have any sessions declared....
> >>
> >> Thanks.
> >> __
> >> Donnie
> >>
> >>
> >> On Fri, 11 Feb 2005 13:25:14 -0500, Chris Jackson
> >> <christopher.jackson@gmail.com> wrote:
> >>> If you're looking for setting something like constants, then one
> >>> suggestion would be to create a separate config module of a sort :
> >>>
> >>> # config.py
> >>> COLOR='blue'
> >>> SIZE=10
> >>>
> >>> Then, in your publisher handler file you can import the config module
> >>> and call it like so:
> >>>
> >>> from mod_python import apache
> >>> import config
> >>>
> >>> def test(req):
> >>>  mycolor = config.COLOR + 1
> >>>  mysize = config.SIZE +1
> >>>
> >>> def add(req):
> >>>  mycolor = config.COLOR +2
> >>>  mysize = config.SIZE + 2
> >>>
> >>> However, if by consistency, you mean retain a value across functions,
> >>> then using global should work fine.  You may just have an issue with
> >>> sessions.  What do  you ultimately want to accomplish?
> >>>
> >>> ~= Chris =~
> >>>
> >>>
> >>> On Fri, 11 Feb 2005 12:48:47 -0500, donnie jones
> >>> <donniejones18@gmail.com> wrote:
> >>>> Hello,
> >>>>
> >>>> I am wanting to have a variable's data between two functions, but I
> >>>> can't seem to find a reasonable way to do this with modpython
> >>>> publisher...
> >>>>
> >>>> example:
> >>>>
> >>>> x=0
> >>>>
> >>>> def test(req):
> >>>>   global x
> >>>>   x = 1
> >>>>
> >>>> def add(req):
> >>>>   global x
> >>>>   x=x+1
> >>>>   req.write("%d" % x)
> >>>>
> >>>> I would like for x to have a consistent value between the
> >>>> functions...
> >>>> I thought maybe doing req.x = 1 might work, but I did not have
> >>>> success
> >>>> between the functions, req would not maintain the value.
> >>>>
> >>>> Any suggestions would be great.
> >>>> Thank you.
> >>>>
> >>>> __
> >>>> Donnie
> >>>> _______________________________________________
> >>>> Mod_python mailing list
> >>>> Mod_python@modpython.org
> >>>> http://mailman.modpython.org/mailman/listinfo/mod_python
> >>>>
> >>>
> >>
> > _______________________________________________
> > Mod_python mailing list
> > Mod_python@modpython.org
> > http://mailman.modpython.org/mailman/listinfo/mod_python
>
>
From nick at dd.revealed.net  Fri Feb 11 14:10:21 2005
From: nick at dd.revealed.net (Nick)
Date: Fri Feb 11 14:10:32 2005
Subject: [mod_python] pass variables between functions.
In-Reply-To: <ff87600805021111034d8493e4@mail.gmail.com>
References: <ff876008050211094860320101@mail.gmail.com>	<4d11484d05021110257503317@mail.gmail.com>	<ff87600805021110285e295697@mail.gmail.com>	<4d11484d050211104931f4ae29@mail.gmail.com>	<519f09a66621be7290fae4922170e672@apache.org>	<ff8760080502111102d8b9da3@mail.gmail.com>
	<ff87600805021111034d8493e4@mail.gmail.com>
Message-ID: <420D031D.5080201@dd.revealed.net>

I think your only recourse here is to lower the children to 1 and up the 
number of threads (a la windows), or else use an external database to store 
your variables.

Nick

donnie jones wrote:
> ---------- Forwarded message ----------
> From: donnie jones <donniejones18@gmail.com>
> Date: Fri, 11 Feb 2005 14:02:48 -0500
> Subject: Re: [mod_python] pass variables between functions.
> To: Scott Sanders <sanders@apache.org>
> 
> 
> I believe I am having this problem because if I reload the x=x+1
> function many times, sometimes it will increment the value and
> sometimes it won't... so I assume it is depending upon which thread
> has loaded.
> 
> Is there a way around this so that I have a consistent value between
> the functions?
> 
> Thank you.
> 
> __
> Donnie
> 
> 
> On Fri, 11 Feb 2005 10:58:51 -0800, Scott Sanders <sanders@apache.org> wrote:
> 
>>It won't work for everyone, if someone's config uses a threaded MPM for
>>Apache, or multiple python interpreters.  Then the x global var is only
>>global to a particular interpreter.
>>
>>Scott
>>
>>On Feb 11, 2005, at 10:49 AM, Chris Jackson wrote:
>>
>>
>>>[+ mod_python]
>>>
>>>I've tested your code.  It works fine the way you have it (add an
>>>output statement to def test)....
>>>
>>>Everytime http://path/to/your/site/test is called, x is reset to 1
>>>Each time http://path/to/your/site/add is called, x is incremented.
>>>
>>>~= Chris =~
>>>
>>>On Fri, 11 Feb 2005 13:28:15 -0500, donnie jones
>>><donniejones18@gmail.com> wrote:
>>>
>>>>I meant retain a value across function, not constants.
>>>>The global did not work for me..
>>>>
>>>>Must I "return" the variable in order for it to be
>>>>changed for the second function?
>>>>
>>>>What kind of sessions issue could be happening?
>>>>I don't have any sessions declared....
>>>>
>>>>Thanks.
>>>>__
>>>>Donnie
>>>>
>>>>
>>>>On Fri, 11 Feb 2005 13:25:14 -0500, Chris Jackson
>>>><christopher.jackson@gmail.com> wrote:
>>>>
>>>>>If you're looking for setting something like constants, then one
>>>>>suggestion would be to create a separate config module of a sort :
>>>>>
>>>>># config.py
>>>>>COLOR='blue'
>>>>>SIZE=10
>>>>>
>>>>>Then, in your publisher handler file you can import the config module
>>>>>and call it like so:
>>>>>
>>>>>from mod_python import apache
>>>>>import config
>>>>>
>>>>>def test(req):
>>>>> mycolor = config.COLOR + 1
>>>>> mysize = config.SIZE +1
>>>>>
>>>>>def add(req):
>>>>> mycolor = config.COLOR +2
>>>>> mysize = config.SIZE + 2
>>>>>
>>>>>However, if by consistency, you mean retain a value across functions,
>>>>>then using global should work fine.  You may just have an issue with
>>>>>sessions.  What do  you ultimately want to accomplish?
>>>>>
>>>>>~= Chris =~
>>>>>
>>>>>
>>>>>On Fri, 11 Feb 2005 12:48:47 -0500, donnie jones
>>>>><donniejones18@gmail.com> wrote:
>>>>>
>>>>>>Hello,
>>>>>>
>>>>>>I am wanting to have a variable's data between two functions, but I
>>>>>>can't seem to find a reasonable way to do this with modpython
>>>>>>publisher...
>>>>>>
>>>>>>example:
>>>>>>
>>>>>>x=0
>>>>>>
>>>>>>def test(req):
>>>>>>  global x
>>>>>>  x = 1
>>>>>>
>>>>>>def add(req):
>>>>>>  global x
>>>>>>  x=x+1
>>>>>>  req.write("%d" % x)
>>>>>>
>>>>>>I would like for x to have a consistent value between the
>>>>>>functions...
>>>>>>I thought maybe doing req.x = 1 might work, but I did not have
>>>>>>success
>>>>>>between the functions, req would not maintain the value.
>>>>>>
>>>>>>Any suggestions would be great.
>>>>>>Thank you.
>>>>>>
>>>>>>__
>>>>>>Donnie
>>>>>>_______________________________________________
>>>>>>Mod_python mailing list
>>>>>>Mod_python@modpython.org
>>>>>>http://mailman.modpython.org/mailman/listinfo/mod_python
>>>>>>
>>>>>
>>>_______________________________________________
>>>Mod_python mailing list
>>>Mod_python@modpython.org
>>>http://mailman.modpython.org/mailman/listinfo/mod_python
>>
>>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python

From donniejones18 at gmail.com  Fri Feb 11 14:13:09 2005
From: donniejones18 at gmail.com (donnie jones)
Date: Fri Feb 11 14:13:11 2005
Subject: [mod_python] pass variables between functions.
In-Reply-To: <420D031D.5080201@dd.revealed.net>
References: <ff876008050211094860320101@mail.gmail.com>
	<4d11484d05021110257503317@mail.gmail.com>
	<ff87600805021110285e295697@mail.gmail.com>
	<4d11484d050211104931f4ae29@mail.gmail.com>
	<519f09a66621be7290fae4922170e672@apache.org>
	<ff8760080502111102d8b9da3@mail.gmail.com>
	<ff87600805021111034d8493e4@mail.gmail.com>
	<420D031D.5080201@dd.revealed.net>
Message-ID: <ff87600805021111137fd9b79c@mail.gmail.com>

Ack... heh, I'd rather not go for that.  ;-)

I wonder if I could store the variable in a session?
In my actual application, the variable is a dictionary, do you think
it would be
fine to store a dictionary inside a session's dictionary?

Thanks for everyone's help.  
__
Donnie


On Fri, 11 Feb 2005 13:10:21 -0600, Nick <nick@dd.revealed.net> wrote:
> I think your only recourse here is to lower the children to 1 and up the
> number of threads (a la windows), or else use an external database to store
> your variables.
> 
> Nick
> 
> donnie jones wrote:
> > ---------- Forwarded message ----------
> > From: donnie jones <donniejones18@gmail.com>
> > Date: Fri, 11 Feb 2005 14:02:48 -0500
> > Subject: Re: [mod_python] pass variables between functions.
> > To: Scott Sanders <sanders@apache.org>
> >
> >
> > I believe I am having this problem because if I reload the x=x+1
> > function many times, sometimes it will increment the value and
> > sometimes it won't... so I assume it is depending upon which thread
> > has loaded.
> >
> > Is there a way around this so that I have a consistent value between
> > the functions?
> >
> > Thank you.
> >
> > __
> > Donnie
> >
> >
> > On Fri, 11 Feb 2005 10:58:51 -0800, Scott Sanders <sanders@apache.org> wrote:
> >
> >>It won't work for everyone, if someone's config uses a threaded MPM for
> >>Apache, or multiple python interpreters.  Then the x global var is only
> >>global to a particular interpreter.
> >>
> >>Scott
> >>
> >>On Feb 11, 2005, at 10:49 AM, Chris Jackson wrote:
> >>
> >>
> >>>[+ mod_python]
> >>>
> >>>I've tested your code.  It works fine the way you have it (add an
> >>>output statement to def test)....
> >>>
> >>>Everytime http://path/to/your/site/test is called, x is reset to 1
> >>>Each time http://path/to/your/site/add is called, x is incremented.
> >>>
> >>>~= Chris =~
> >>>
> >>>On Fri, 11 Feb 2005 13:28:15 -0500, donnie jones
> >>><donniejones18@gmail.com> wrote:
> >>>
> >>>>I meant retain a value across function, not constants.
> >>>>The global did not work for me..
> >>>>
> >>>>Must I "return" the variable in order for it to be
> >>>>changed for the second function?
> >>>>
> >>>>What kind of sessions issue could be happening?
> >>>>I don't have any sessions declared....
> >>>>
> >>>>Thanks.
> >>>>__
> >>>>Donnie
> >>>>
> >>>>
> >>>>On Fri, 11 Feb 2005 13:25:14 -0500, Chris Jackson
> >>>><christopher.jackson@gmail.com> wrote:
> >>>>
> >>>>>If you're looking for setting something like constants, then one
> >>>>>suggestion would be to create a separate config module of a sort :
> >>>>>
> >>>>># config.py
> >>>>>COLOR='blue'
> >>>>>SIZE=10
> >>>>>
> >>>>>Then, in your publisher handler file you can import the config module
> >>>>>and call it like so:
> >>>>>
> >>>>>from mod_python import apache
> >>>>>import config
> >>>>>
> >>>>>def test(req):
> >>>>> mycolor = config.COLOR + 1
> >>>>> mysize = config.SIZE +1
> >>>>>
> >>>>>def add(req):
> >>>>> mycolor = config.COLOR +2
> >>>>> mysize = config.SIZE + 2
> >>>>>
> >>>>>However, if by consistency, you mean retain a value across functions,
> >>>>>then using global should work fine.  You may just have an issue with
> >>>>>sessions.  What do  you ultimately want to accomplish?
> >>>>>
> >>>>>~= Chris =~
> >>>>>
> >>>>>
> >>>>>On Fri, 11 Feb 2005 12:48:47 -0500, donnie jones
> >>>>><donniejones18@gmail.com> wrote:
> >>>>>
> >>>>>>Hello,
> >>>>>>
> >>>>>>I am wanting to have a variable's data between two functions, but I
> >>>>>>can't seem to find a reasonable way to do this with modpython
> >>>>>>publisher...
> >>>>>>
> >>>>>>example:
> >>>>>>
> >>>>>>x=0
> >>>>>>
> >>>>>>def test(req):
> >>>>>>  global x
> >>>>>>  x = 1
> >>>>>>
> >>>>>>def add(req):
> >>>>>>  global x
> >>>>>>  x=x+1
> >>>>>>  req.write("%d" % x)
> >>>>>>
> >>>>>>I would like for x to have a consistent value between the
> >>>>>>functions...
> >>>>>>I thought maybe doing req.x = 1 might work, but I did not have
> >>>>>>success
> >>>>>>between the functions, req would not maintain the value.
> >>>>>>
> >>>>>>Any suggestions would be great.
> >>>>>>Thank you.
> >>>>>>
> >>>>>>__
> >>>>>>Donnie
> >>>>>>_______________________________________________
> >>>>>>Mod_python mailing list
> >>>>>>Mod_python@modpython.org
> >>>>>>http://mailman.modpython.org/mailman/listinfo/mod_python
> >>>>>>
> >>>>>
> >>>_______________________________________________
> >>>Mod_python mailing list
> >>>Mod_python@modpython.org
> >>>http://mailman.modpython.org/mailman/listinfo/mod_python
> >>
> >>
> > _______________________________________________
> > Mod_python mailing list
> > Mod_python@modpython.org
> > http://mailman.modpython.org/mailman/listinfo/mod_python
> 
>
From nick at dd.revealed.net  Fri Feb 11 14:41:14 2005
From: nick at dd.revealed.net (Nick)
Date: Fri Feb 11 14:41:23 2005
Subject: [mod_python] pass variables between functions.
In-Reply-To: <ff87600805021111137fd9b79c@mail.gmail.com>
References: <ff876008050211094860320101@mail.gmail.com>	<4d11484d05021110257503317@mail.gmail.com>	<ff87600805021110285e295697@mail.gmail.com>	<4d11484d050211104931f4ae29@mail.gmail.com>	<519f09a66621be7290fae4922170e672@apache.org>	<ff8760080502111102d8b9da3@mail.gmail.com>	<ff87600805021111034d8493e4@mail.gmail.com>	<420D031D.5080201@dd.revealed.net>
	<ff87600805021111137fd9b79c@mail.gmail.com>
Message-ID: <420D0A5A.6030204@dd.revealed.net>

Well, essentially that *is* an external database.  I haven't used the one 
that comes with mod_python, but is it possible for all requests to use the 
same session ID so that they all see the same session, rather than one for 
each client?

Nick

donnie jones wrote:
> Ack... heh, I'd rather not go for that.  ;-)
> 
> I wonder if I could store the variable in a session?
> In my actual application, the variable is a dictionary, do you think
> it would be
> fine to store a dictionary inside a session's dictionary?
> 
> Thanks for everyone's help.  
> __
> Donnie
> 
> 
> On Fri, 11 Feb 2005 13:10:21 -0600, Nick <nick@dd.revealed.net> wrote:
> 
>>I think your only recourse here is to lower the children to 1 and up the
>>number of threads (a la windows), or else use an external database to store
>>your variables.
>>
>>Nick
>>
>>donnie jones wrote:
>>
>>>---------- Forwarded message ----------
>>>From: donnie jones <donniejones18@gmail.com>
>>>Date: Fri, 11 Feb 2005 14:02:48 -0500
>>>Subject: Re: [mod_python] pass variables between functions.
>>>To: Scott Sanders <sanders@apache.org>
>>>
>>>
>>>I believe I am having this problem because if I reload the x=x+1
>>>function many times, sometimes it will increment the value and
>>>sometimes it won't... so I assume it is depending upon which thread
>>>has loaded.
>>>
>>>Is there a way around this so that I have a consistent value between
>>>the functions?
>>>
>>>Thank you.
From donniejones18 at gmail.com  Fri Feb 11 14:55:11 2005
From: donniejones18 at gmail.com (donnie jones)
Date: Fri Feb 11 14:55:13 2005
Subject: [mod_python] pass variables between functions.
In-Reply-To: <420D0A5A.6030204@dd.revealed.net>
References: <ff876008050211094860320101@mail.gmail.com>
	<4d11484d05021110257503317@mail.gmail.com>
	<ff87600805021110285e295697@mail.gmail.com>
	<4d11484d050211104931f4ae29@mail.gmail.com>
	<519f09a66621be7290fae4922170e672@apache.org>
	<ff8760080502111102d8b9da3@mail.gmail.com>
	<ff87600805021111034d8493e4@mail.gmail.com>
	<420D031D.5080201@dd.revealed.net>
	<ff87600805021111137fd9b79c@mail.gmail.com>
	<420D0A5A.6030204@dd.revealed.net>
Message-ID: <ff87600805021111554aba92e5@mail.gmail.com>

I assume that it would be necessary to pass the session id
through a url or value in a form and then use that session id
to retrieve the session...

I wonder performance wise if it would be better to use the 
session or an external database...hmm.

Thanks.
__
Donnie


On Fri, 11 Feb 2005 13:41:14 -0600, Nick <nick@dd.revealed.net> wrote:
> Well, essentially that *is* an external database.  I haven't used the one
> that comes with mod_python, but is it possible for all requests to use the
> same session ID so that they all see the same session, rather than one for
> each client?
> 
> Nick
> 
> donnie jones wrote:
> > Ack... heh, I'd rather not go for that.  ;-)
> >
> > I wonder if I could store the variable in a session?
> > In my actual application, the variable is a dictionary, do you think
> > it would be
> > fine to store a dictionary inside a session's dictionary?
> >
> > Thanks for everyone's help.
> > __
> > Donnie
> >
> >
> > On Fri, 11 Feb 2005 13:10:21 -0600, Nick <nick@dd.revealed.net> wrote:
> >
> >>I think your only recourse here is to lower the children to 1 and up the
> >>number of threads (a la windows), or else use an external database to store
> >>your variables.
> >>
> >>Nick
> >>
> >>donnie jones wrote:
> >>
> >>>---------- Forwarded message ----------
> >>>From: donnie jones <donniejones18@gmail.com>
> >>>Date: Fri, 11 Feb 2005 14:02:48 -0500
> >>>Subject: Re: [mod_python] pass variables between functions.
> >>>To: Scott Sanders <sanders@apache.org>
> >>>
> >>>
> >>>I believe I am having this problem because if I reload the x=x+1
> >>>function many times, sometimes it will increment the value and
> >>>sometimes it won't... so I assume it is depending upon which thread
> >>>has loaded.
> >>>
> >>>Is there a way around this so that I have a consistent value between
> >>>the functions?
> >>>
> >>>Thank you.
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>
From grahamd at dscpl.com.au  Fri Feb 11 15:16:30 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Fri Feb 11 15:16:57 2005
Subject: [mod_python] Troubleshooting mod_python and PSP
In-Reply-To: <20050211140445.74898.qmail@web51704.mail.yahoo.com>
References: <20050211140445.74898.qmail@web51704.mail.yahoo.com>
Message-ID: <276335a71fb92182db4f9daa53e3f684@dscpl.com.au>


On 12/02/2005, at 1:04 AM, Lolo wrote:
> I wrote a Python Server Page with html form, when i
> submit the form i have a POST and GET requests in my
> apache log and IOError from mod_python.

What is at:

   "/home/web/www/psp/tc/Queries.psp", line 745

Are you perhaps trying to do something that writes to a file?
The current working directory of the process may not be what
you expect. Also, the user that Apache runs as may not have
permission to write into the directory, especially if it isn't
the directory you think it is. At least always make sure you
use absolute pathnames to files that you are trying to write
to.

Graham

From christopher.jackson at gmail.com  Fri Feb 11 15:36:12 2005
From: christopher.jackson at gmail.com (Chris Jackson)
Date: Fri Feb 11 15:36:14 2005
Subject: [mod_python] pass variables between functions.
In-Reply-To: <ff87600805021111554aba92e5@mail.gmail.com>
References: <ff876008050211094860320101@mail.gmail.com>
	<ff87600805021110285e295697@mail.gmail.com>
	<4d11484d050211104931f4ae29@mail.gmail.com>
	<519f09a66621be7290fae4922170e672@apache.org>
	<ff8760080502111102d8b9da3@mail.gmail.com>
	<ff87600805021111034d8493e4@mail.gmail.com>
	<420D031D.5080201@dd.revealed.net>
	<ff87600805021111137fd9b79c@mail.gmail.com>
	<420D0A5A.6030204@dd.revealed.net>
	<ff87600805021111554aba92e5@mail.gmail.com>
Message-ID: <4d11484d05021112369487d1e@mail.gmail.com>

Use the session variable, which serializes the data in /tmp/mp_*.

Here's what you do (or what i did to make it work).

# Create a new session based on sessid passed through the form in a hidden field
def myhandler(req, sessid=""):
  ...
  sess = Session(req, sessid, None, 36000, 0)  #change sessid for None
if it's a first-time user
  sess.load()
  sess['mydict'] = <some value>
  .....
   sess.save()

   myTemplate = psp.PSP(req, filename='test.html')
   myTemplate = run(vars = {'sessid':sessid})


#Now in your html template (PSP) file (test.html)
<html>
.....
<input type="hidden" name="sessid" value="<%=sessid%>">
.....
</html>

So what you're doing is passing around the sessid to hidden form fields.
And you get a different sessid for each client connection.

Issue a ( watch -d 'cat /tmp/mp_sess.dbm.dir' ) command to view new
sessid being created (not at each page, but at each new client
connection.

~= Chris =~

On Fri, 11 Feb 2005 14:55:11 -0500, donnie jones
<donniejones18@gmail.com> wrote:
> I assume that it would be necessary to pass the session id
> through a url or value in a form and then use that session id
> to retrieve the session...
> 
> I wonder performance wise if it would be better to use the
> session or an external database...hmm.
> 
> Thanks.
> __
> Donnie
> 
> 
> On Fri, 11 Feb 2005 13:41:14 -0600, Nick <nick@dd.revealed.net> wrote:
> > Well, essentially that *is* an external database.  I haven't used the one
> > that comes with mod_python, but is it possible for all requests to use the
> > same session ID so that they all see the same session, rather than one for
> > each client?
> >
> > Nick
> >
> > donnie jones wrote:
> > > Ack... heh, I'd rather not go for that.  ;-)
> > >
> > > I wonder if I could store the variable in a session?
> > > In my actual application, the variable is a dictionary, do you think
> > > it would be
> > > fine to store a dictionary inside a session's dictionary?
> > >
> > > Thanks for everyone's help.
> > > __
> > > Donnie
> > >
> > >
> > > On Fri, 11 Feb 2005 13:10:21 -0600, Nick <nick@dd.revealed.net> wrote:
> > >
> > >>I think your only recourse here is to lower the children to 1 and up the
> > >>number of threads (a la windows), or else use an external database to store
> > >>your variables.
> > >>
> > >>Nick
> > >>
> > >>donnie jones wrote:
> > >>
> > >>>---------- Forwarded message ----------
> > >>>From: donnie jones <donniejones18@gmail.com>
> > >>>Date: Fri, 11 Feb 2005 14:02:48 -0500
> > >>>Subject: Re: [mod_python] pass variables between functions.
> > >>>To: Scott Sanders <sanders@apache.org>
> > >>>
> > >>>
> > >>>I believe I am having this problem because if I reload the x=x+1
> > >>>function many times, sometimes it will increment the value and
> > >>>sometimes it won't... so I assume it is depending upon which thread
> > >>>has loaded.
> > >>>
> > >>>Is there a way around this so that I have a consistent value between
> > >>>the functions?
> > >>>
> > >>>Thank you.
> > _______________________________________________
> > Mod_python mailing list
> > Mod_python@modpython.org
> > http://mailman.modpython.org/mailman/listinfo/mod_python
> >
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>
From harrison at tbc.net  Fri Feb 11 15:39:15 2005
From: harrison at tbc.net (Shawn Harrison)
Date: Fri Feb 11 15:36:51 2005
Subject: [mod_python] Best way to logout a session
In-Reply-To: <4d11484d050211103039dd2596@mail.gmail.com>
References: <4d11484d0502110832584b26c@mail.gmail.com>	
	<420CEF05.8080009@tbc.net>
	<4d11484d050211103039dd2596@mail.gmail.com>
Message-ID: <420D17F3.1050204@tbc.net>

Chris Jackson wrote [02/11/05 12:30 PM]:
> How would I do this?  Do you have an example?

Sorry, no example. You can write a JavaScript function that deletes 
cookies from the user's browser (or rather, sets the expy date for those 
cookies to some time in the past). Send the JavaScript function in the 
page that returns after the user clicks to logout, and in the <body> tag 
put

	<body onLoad="myCookieDeleter();">

or some such. Here are some links:

http://wp.netscape.com/eng/mozilla/3.0/handbook/javascript/
http://google.com/search?q=javascript+delete+cookies

> Note: I'm using mod_python.Session; I prefer server-side session
> management  instead of creating a javascript client cookie.

You seem to misunderstand mod_python.Session. It sets a cookie in the 
client -- that's how it tracks session without making ugly URLs.

Now that you mention it, I think you could do the same thing using 
mod_python.Cookie; no need to dive into JavaScript if you don't want to. 
Sorry, this is all off the top of my head. I think the name of the 
cookie set by m_p.Session is pysid (the session id). Just set the expy 
for that cookie to sometime in the past.

> 
> Also, Javascript code to start a new window(maximized) and close the
> previous window will do as well.

Yah.

-- 
________________
harrison@tbc.net
From donniejones18 at gmail.com  Fri Feb 11 15:39:16 2005
From: donniejones18 at gmail.com (donnie jones)
Date: Fri Feb 11 15:39:18 2005
Subject: [mod_python] pass variables between functions.
In-Reply-To: <4d11484d05021112369487d1e@mail.gmail.com>
References: <ff876008050211094860320101@mail.gmail.com>
	<4d11484d050211104931f4ae29@mail.gmail.com>
	<519f09a66621be7290fae4922170e672@apache.org>
	<ff8760080502111102d8b9da3@mail.gmail.com>
	<ff87600805021111034d8493e4@mail.gmail.com>
	<420D031D.5080201@dd.revealed.net>
	<ff87600805021111137fd9b79c@mail.gmail.com>
	<420D0A5A.6030204@dd.revealed.net>
	<ff87600805021111554aba92e5@mail.gmail.com>
	<4d11484d05021112369487d1e@mail.gmail.com>
Message-ID: <ff8760080502111239527c8201@mail.gmail.com>

Thank you very much for the example.
I'll definitely try it out soon.

__
Donnie


On Fri, 11 Feb 2005 15:36:12 -0500, Chris Jackson
<christopher.jackson@gmail.com> wrote:
> Use the session variable, which serializes the data in /tmp/mp_*.
> 
> Here's what you do (or what i did to make it work).
> 
> # Create a new session based on sessid passed through the form in a hidden field
> def myhandler(req, sessid=""):
>   ...
>   sess = Session(req, sessid, None, 36000, 0)  #change sessid for None
> if it's a first-time user
>   sess.load()
>   sess['mydict'] = <some value>
>   .....
>    sess.save()
> 
>    myTemplate = psp.PSP(req, filename='test.html')
>    myTemplate = run(vars = {'sessid':sessid})
> 
> #Now in your html template (PSP) file (test.html)
> <html>
> .....
> <input type="hidden" name="sessid" value="<%=sessid%>">
> .....
> </html>
> 
> So what you're doing is passing around the sessid to hidden form fields.
> And you get a different sessid for each client connection.
> 
> Issue a ( watch -d 'cat /tmp/mp_sess.dbm.dir' ) command to view new
> sessid being created (not at each page, but at each new client
> connection.
> 
> ~= Chris =~
> 
> On Fri, 11 Feb 2005 14:55:11 -0500, donnie jones
> <donniejones18@gmail.com> wrote:
> > I assume that it would be necessary to pass the session id
> > through a url or value in a form and then use that session id
> > to retrieve the session...
> >
> > I wonder performance wise if it would be better to use the
> > session or an external database...hmm.
> >
> > Thanks.
> > __
> > Donnie
> >
> >
> > On Fri, 11 Feb 2005 13:41:14 -0600, Nick <nick@dd.revealed.net> wrote:
> > > Well, essentially that *is* an external database.  I haven't used the one
> > > that comes with mod_python, but is it possible for all requests to use the
> > > same session ID so that they all see the same session, rather than one for
> > > each client?
> > >
> > > Nick
> > >
> > > donnie jones wrote:
> > > > Ack... heh, I'd rather not go for that.  ;-)
> > > >
> > > > I wonder if I could store the variable in a session?
> > > > In my actual application, the variable is a dictionary, do you think
> > > > it would be
> > > > fine to store a dictionary inside a session's dictionary?
> > > >
> > > > Thanks for everyone's help.
> > > > __
> > > > Donnie
> > > >
> > > >
> > > > On Fri, 11 Feb 2005 13:10:21 -0600, Nick <nick@dd.revealed.net> wrote:
> > > >
> > > >>I think your only recourse here is to lower the children to 1 and up the
> > > >>number of threads (a la windows), or else use an external database to store
> > > >>your variables.
> > > >>
> > > >>Nick
> > > >>
> > > >>donnie jones wrote:
> > > >>
> > > >>>---------- Forwarded message ----------
> > > >>>From: donnie jones <donniejones18@gmail.com>
> > > >>>Date: Fri, 11 Feb 2005 14:02:48 -0500
> > > >>>Subject: Re: [mod_python] pass variables between functions.
> > > >>>To: Scott Sanders <sanders@apache.org>
> > > >>>
> > > >>>
> > > >>>I believe I am having this problem because if I reload the x=x+1
> > > >>>function many times, sometimes it will increment the value and
> > > >>>sometimes it won't... so I assume it is depending upon which thread
> > > >>>has loaded.
> > > >>>
> > > >>>Is there a way around this so that I have a consistent value between
> > > >>>the functions?
> > > >>>
> > > >>>Thank you.
> > > _______________________________________________
> > > Mod_python mailing list
> > > Mod_python@modpython.org
> > > http://mailman.modpython.org/mailman/listinfo/mod_python
> > >
> > _______________________________________________
> > Mod_python mailing list
> > Mod_python@modpython.org
> > http://mailman.modpython.org/mailman/listinfo/mod_python
> >
>
From rob at robnet.com  Fri Feb 11 20:51:09 2005
From: rob at robnet.com (Rob Nichols)
Date: Fri Feb 11 20:51:14 2005
Subject: [mod_python] how do I eliminate the .py extension in url?
In-Reply-To: <1108096645.17717@dscpl.user.openhosting.com>
References: <1108096645.17717@dscpl.user.openhosting.com>
Message-ID: <20050212015109.GD22631@robnet.com>

On Thu, Feb 10, 2005 at 11:37:25PM -0500, Graham Dumpleton wrote:
> When you use "req.sendfile()", the job of sending back the contents of the
> file is carried out by Apache. Thus, it isn't strictly being done by any Python
> code.

Cool, thanks.  

> The alternative to using "req.sendfile()" in this case where the physical
> file resides at the same spot as the URL would match to anyway, is to
> simply return "apache.DECLINED". By doing this, Apache will continue
> to process the request and will serve up the contents of the file as per
> normal.

Even cooler.  Thanks very much for the information.

From gdamjan at mail.net.mk  Fri Feb 11 23:18:26 2005
From: gdamjan at mail.net.mk (Damjan)
Date: Fri Feb 11 23:18:30 2005
Subject: [mod_python] how do I eliminate the .py extension in url?
In-Reply-To: <420BFCA8.6050004@tbc.net>
References: <20050210233910.44207.qmail@web31010.mail.mud.yahoo.com>
	<420BFCA8.6050004@tbc.net>
Message-ID: <20050212041826.GA32445@legolas.on.net.mk>

> Put the following in httpd.conf:
> 
> SetHandler mod_python
> PythonHandler module.path.to.handler.file
> 
> Then in the handler file, def a handler that looks for python scripts
> and loads them based on the req.uri. The attached very crufty handler
> might be a good source of amusement.

> def handler(req):
>     # 1. If the file exists & not a directory, serve it.
> 
>     filepath = req.document_root() + req.uri
>     if (os.access(filepath, os.R_OK) 
>     and not os.path.isdir(filepath)) :
>         # req.write("sending file\n")
>         req.sendfile(filepath)
>         return apache.OK

Why don't you return apache.DECLINE, that way even php scripts would
work correctly.

-- 
damjan | ??????
This is my jabber ID --> damjan@bagra.net.mk <-- not my mail address!!!
From grahamd at dscpl.com.au  Fri Feb 11 23:44:18 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Fri Feb 11 23:44:28 2005
Subject: [mod_python] how do I eliminate the .py extension in url?
In-Reply-To: <20050212041826.GA32445@legolas.on.net.mk>
References: <20050210233910.44207.qmail@web31010.mail.mud.yahoo.com>
	<420BFCA8.6050004@tbc.net>
	<20050212041826.GA32445@legolas.on.net.mk>
Message-ID: <337ae9a56fd4d23bcd73b110eae6989b@dscpl.com.au>


On 12/02/2005, at 3:18 PM, Damjan wrote:

>> Put the following in httpd.conf:
>>
>> SetHandler mod_python
>> PythonHandler module.path.to.handler.file
>>
>> Then in the handler file, def a handler that looks for python scripts
>> and loads them based on the req.uri. The attached very crufty handler
>> might be a good source of amusement.
>
>> def handler(req):
>>     # 1. If the file exists & not a directory, serve it.
>>
>>     filepath = req.document_root() + req.uri
>>     if (os.access(filepath, os.R_OK)
>>     and not os.path.isdir(filepath)) :
>>         # req.write("sending file\n")
>>         req.sendfile(filepath)
>>         return apache.OK
>
> Why don't you return apache.DECLINE, that way even php scripts would
> work correctly.

Hmmm, when I have tried mixing PHP in the same directory and used
apache.DECLINED to throw back unhandled requests to Apache, the PHP
file wouldn't get processed by the PHP module and instead the raw
file would be returned. Thus it has been necessary to have:

   <Files *.php>
   SetHandler None
   </Files>

This was though on Apache 1.3 and I haven't tried it on Apache 2.0.

Graham

From harrison at tbc.net  Sat Feb 12 00:21:39 2005
From: harrison at tbc.net (Shawn Harrison)
Date: Sat Feb 12 00:19:15 2005
Subject: [mod_python] how do I eliminate the .py extension in url?
In-Reply-To: <20050212041826.GA32445@legolas.on.net.mk>
References: <20050210233910.44207.qmail@web31010.mail.mud.yahoo.com>	<420BFCA8.6050004@tbc.net>
	<20050212041826.GA32445@legolas.on.net.mk>
Message-ID: <420D9263.7030702@tbc.net>

Damjan wrote [02/11/05 10:18 PM]:
> Why don't you return apache.DECLINE, that way even php scripts would
> work correctly.

Good point. Because I didn't know that.

-- 
________________
harrison@tbc.net
From grahamd at dscpl.com.au  Sat Feb 12 21:12:06 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Sat Feb 12 21:12:12 2005
Subject: [mod_python] how do I eliminate the .py extension in url?
In-Reply-To: <337ae9a56fd4d23bcd73b110eae6989b@dscpl.com.au>
References: <20050210233910.44207.qmail@web31010.mail.mud.yahoo.com>
	<420BFCA8.6050004@tbc.net>
	<20050212041826.GA32445@legolas.on.net.mk>
	<337ae9a56fd4d23bcd73b110eae6989b@dscpl.com.au>
Message-ID: <08a4b0b4634f1b4b053166499eb6e185@dscpl.com.au>


On 12/02/2005, at 3:44 PM, Graham Dumpleton wrote:

>
> On 12/02/2005, at 3:18 PM, Damjan wrote:
>
>>> Put the following in httpd.conf:
>>>
>>> SetHandler mod_python
>>> PythonHandler module.path.to.handler.file
>>>
>>> Then in the handler file, def a handler that looks for python scripts
>>> and loads them based on the req.uri. The attached very crufty handler
>>> might be a good source of amusement.
>>
>>> def handler(req):
>>>     # 1. If the file exists & not a directory, serve it.
>>>
>>>     filepath = req.document_root() + req.uri
>>>     if (os.access(filepath, os.R_OK)
>>>     and not os.path.isdir(filepath)) :
>>>         # req.write("sending file\n")
>>>         req.sendfile(filepath)
>>>         return apache.OK
>>
>> Why don't you return apache.DECLINE, that way even php scripts would
>> work correctly.
>
> Hmmm, when I have tried mixing PHP in the same directory and used
> apache.DECLINED to throw back unhandled requests to Apache, the PHP
> file wouldn't get processed by the PHP module and instead the raw
> file would be returned. Thus it has been necessary to have:
>
>   <Files *.php>
>   SetHandler None
>   </Files>
>
> This was though on Apache 1.3 and I haven't tried it on Apache 2.0.

I have now tried this on Apache 2.0, and even there, returning 
apache.DECLINED
doesn't result in PHP files being processed correctly without turning 
off
mod_python handling of PHP, so that the PHP module has first go at it.

If you have actually got this working, I would like to know how as it 
would
be useful in avoiding the step of disabling the handler for PHP files.

Graham

From grisha at apache.org  Sat Feb 12 22:00:56 2005
From: grisha at apache.org (Gregory (Grisha) Trubetskoy)
Date: Sat Feb 12 22:01:05 2005
Subject: [mod_python] [ANNOUNCE] Mod_python 3.1.4 and 2.7.11 (security)
Message-ID: <20050212215825.Y58134@grisha.dyndns.org>


The Apache Software Foundation and The Apache HTTP Server Project are pleased 
to announce the release of versions 3.1.4 and 2.7.11 of mod_python.

This release addresses a vulnerability in mod_python's publisher handler 
whereby a carefully crafted URL would expose objects that should not be 
visible, leading to an information leak. The Common Vulnerabilities and 
Exposures project (http://cve.mitre.org/) has assigned the name CAN-2005-0088 
to this issue.

Users of the publisher handler are urged to upgrade as soon as possible.

There are no other changes or improvements from the previous version in
this release.

At this point the new version is only available as a source code archive.
Users of mod_python on Win32 platform can update their installation by simply 
replacing the publisher.py file with the latest version from the source code 
archive.

Mod_python is available for download from:

http://httpd.apache.org/modules/python-download.cgi

For more information about mod_python visit
http://www.modpython.org/

Regards,

Grisha Trubetskoy

From grahamd at dscpl.com.au  Sat Feb 12 23:27:15 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Sat Feb 12 23:27:21 2005
Subject: [mod_python] [ANNOUNCE] Mod_python 3.1.4 and 2.7.11 (security)
In-Reply-To: <20050212215825.Y58134@grisha.dyndns.org>
References: <20050212215825.Y58134@grisha.dyndns.org>
Message-ID: <8fe24550698d9032432b2d8e73f073f8@dscpl.com.au>

As an emergency workaround for this problem if one cannot get your 
mod_python
installation fixed/updated quickly, add the following into your main 
Apache
configuration file and then restart Apache.

   <LocationMatch ".*[/.]func_.*">
   deny from all
   </LocationMatch>

This will prevent the vulnerability being accessed.

I note that some of the discussion which was going on about what the 
issue was
has been posted on public Internet sites, including an example URL for 
what is
some of the information which could be had. Since that is available, 
see no
problem posting this information here. :-(

Also note that it looks like some Linux distributions have not used the 
latest
patch which was put up to solve the problem and it has introduced 
another
potential issue. You are thus encouraged to use the version being 
provided on
the mod_python site which is correct.

Graham

On 13/02/2005, at 2:00 PM, Gregory (Grisha) Trubetskoy wrote:

>
> The Apache Software Foundation and The Apache HTTP Server Project are 
> pleased to announce the release of versions 3.1.4 and 2.7.11 of 
> mod_python.
>
> This release addresses a vulnerability in mod_python's publisher 
> handler whereby a carefully crafted URL would expose objects that 
> should not be visible, leading to an information leak. The Common 
> Vulnerabilities and Exposures project (http://cve.mitre.org/) has 
> assigned the name CAN-2005-0088 to this issue.
>
> Users of the publisher handler are urged to upgrade as soon as 
> possible.
>
> There are no other changes or improvements from the previous version in
> this release.
>
> At this point the new version is only available as a source code 
> archive.
> Users of mod_python on Win32 platform can update their installation by 
> simply replacing the publisher.py file with the latest version from 
> the source code archive.
>
> Mod_python is available for download from:
>
> http://httpd.apache.org/modules/python-download.cgi
>
> For more information about mod_python visit
> http://www.modpython.org/
>
> Regards,
>
> Grisha Trubetskoy
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python

From jefdodson at yahoo.com  Sun Feb 13 03:31:19 2005
From: jefdodson at yahoo.com (Jef Dodson)
Date: Sun Feb 13 03:31:37 2005
Subject: [mod_python] relative paths in templates
Message-ID: <20050213083119.80836.qmail@web31001.mail.mud.yahoo.com>

OK, another question for all of you mod_python experts.  I would like to use a template engine
(cheetah) with mod_python.  I have a directory structure as follows:

/scripts
/images 
/templates

I am using mod_python.publisher and have a script in the /scripts directory named my_script with a
function named test so the function will process the request from the url:

http://www.mysite.com/scripts/my_script/test

I am able to get the path to the template file by doing the following:

cwd = os.path.dirname(__file__)
filepath = os.path.join(cwd, '../templates/test.tmpl')

So, that all works fine.  The problem is, in the test.tmpl file, I have a static reference to an
image file that lives in /images so the html looks like this:

<img src="../images/my_image.gif"> 

This doesn't work.  However, if I change the link the following, it works:


<img src="../../images/my_image.gif">


I guess the browser uses /scripts/my_script/ as the base of the url, so a reference to ../images
in the template file would resolve to /scripts/images which doesn't exist.

So, my question is this: how do I deal with the general problem of relative paths without
resorting to changing all the links in my templates or putting a <base> tag in all the templates? 
Keep in mind that these are static paths, so changing them programmatically is not an option in
this case.  There must be some really clean and elegant way to solve this problem using the
almighty httpd.conf file, right?!  Thanks!

Jef









		
__________________________________ 
Do you Yahoo!? 
The all-new My Yahoo! - What will yours do?
http://my.yahoo.com 
From grahamd at dscpl.com.au  Sun Feb 13 04:21:31 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Sun Feb 13 04:21:54 2005
Subject: [mod_python] relative paths in templates
In-Reply-To: <20050213083119.80836.qmail@web31001.mail.mud.yahoo.com>
References: <20050213083119.80836.qmail@web31001.mail.mud.yahoo.com>
Message-ID: <bc71fcb23b11690497da888329c8666c@dscpl.com.au>


On 13/02/2005, at 7:31 PM, Jef Dodson wrote:

> So, my question is this: how do I deal with the general problem of 
> relative paths without
> resorting to changing all the links in my templates or putting a 
> <base> tag in all the templates?
> Keep in mind that these are static paths, so changing them 
> programmatically is not an option in
> this case.  There must be some really clean and elegant way to solve 
> this problem using the
> almighty httpd.conf file, right?!  Thanks!

Doesn't directly help you, but still may be of interest anyway, but 
what I do in
Vampire is provide a configuration file mechanism which as a side 
effect returns
some predefined default values including base urls which can be used in 
filling
out templates.

The idea is that one would put a configuration file in the top 
directory of that
part of your document tree, which notionally is the root of your web 
application.
Ideally this would also be where PythonHandler was defined. By default, 
generally
call this configuration file ".vampire".

In your content handler file anywhere below that root point, ie., 
including in
subdirectories, you then would say something like:

   def handler(req):
     config = vampire.loadConfig(req,".vampire")
     defaults = config.defaults()

The "loadConfig()" method will search back up the physical directory 
hierarchy
looking for the named configuration file. In doing that search, it is 
able to
derive various information which is filled out as defaults usable when 
extracting
items from the configuration file.

Specifically, the "defaults" variable is a dictionary containing:

       __handler_root__ --> Directory where PythonHandler directive was 
defined.
       __config_root__ --> Directory containing the config file found.
       __config_file__ --> Location of actual config file found.
       __config_mtime__ --> Modification time of the config file found.
       __baseurl_abs__ --> Base URL as absolute path.
       __baseurl_rel__  --> Base URL relative to the current request.

In terms of what you are asking, the important ones here are the base 
url values.
They are set to the URL which would be used to address the top 
directory of your
application. In one it is an absolute path from the root of your whole 
web server.
In the other it is a relative path in respect of the directory that 
that specific
request applied to.

In a templating scheme, one could populate the data available within 
the template
with these values and thus, depending on the syntax of your template 
scheme, you
could say the equivalent of:

   '<img src="%(__baseurl_rel__)s/images/my_image.gif">' % defaults

In other words, you write up all your templates with paths with respect 
to the top
level directory or your application. You use your templating syntax for 
value
substitution to automatically fill out the base url value base on that 
obtained
from the configuration search.

There is also another part of what you are doing which can be aided by 
the use
of what can actually be placed in the configuration file itself. Rather 
than having
to hard code a path into all your content handlers as to the path to 
your template
files, you could have a configuration file which contains:

   [Templates]

   library = %(__config_root__)s/templates

In your content handler you then say:

   def handler(req):
     config = vampire.loadConfig(req,".vampire")
     filepath = config.get("Templates","library")
     ...

By having the location defined in the configuration file in respect of 
the root of
your application, you can then easily move the directory where ever you 
want and
just change the location reference in one place and have that change 
reflected
automatically through all you content handlers.

There is obviously some cost in having such things be so dynamic, but 
frankly I
prefer making my applications easy to manage. I don't expect to be 
slashdotted
and if it was high load site, one would properly support it with 
adequate machines
and load balancing etc. :-)

Graham

From ejl at eberian.com  Sun Feb 13 12:30:01 2005
From: ejl at eberian.com (Ed Lucas)
Date: Sun Feb 13 12:28:52 2005
Subject: [mod_python] WebMail Server in mod_python?
Message-ID: <420F8E99.3000005@eberian.com>

Hi All,
    Are there any Webmail tools written on mod_python? (e.g. something 
like Squirrelmail or Horde).

I have been looking in what I imagined would be the 'Usual places' - 
Google, Freshmeat & Sourceforge, and all I could find are:

http://gomail.dynu.com/
http://pywm.org/

- Neither of which seem to be in active development.

That said, when I looked for Templating systems in the usual places, I 
couldn't see anything either. It was only after a week of link-hopping 
that I started finding stuff like Vampire and HTMLTemplate (actually by 
trawling this list for clues). I coulnd't find a Search facility for 
this list either, so apologies if this is a old question.

All suggestions gratefully received,
    Ed Lucas


From nicolas.lehuen at gmail.com  Sun Feb 13 15:51:38 2005
From: nicolas.lehuen at gmail.com (Nicolas Lehuen)
Date: Sun Feb 13 15:51:41 2005
Subject: [mod_python] WebMail Server in mod_python?
In-Reply-To: <420F8E99.3000005@eberian.com>
References: <420F8E99.3000005@eberian.com>
Message-ID: <c298f2d7050213125128bfdff5@mail.gmail.com>

On Sun, 13 Feb 2005 17:30:01 +0000, Ed Lucas <ejl@eberian.com> wrote:
> Hi All,
>     Are there any Webmail tools written on mod_python? (e.g. something
> like Squirrelmail or Horde).
> 
> I have been looking in what I imagined would be the 'Usual places' -
> Google, Freshmeat & Sourceforge, and all I could find are:
> 
> http://gomail.dynu.com/
> http://pywm.org/
> 
> - Neither of which seem to be in active development.
> 
> That said, when I looked for Templating systems in the usual places, I
> couldn't see anything either. It was only after a week of link-hopping
> that I started finding stuff like Vampire and HTMLTemplate (actually by
> trawling this list for clues). I coulnd't find a Search facility for
> this list either, so apologies if this is a old question.
> 
> All suggestions gratefully received,
>     Ed Lucas

Hi,

I don't know about webmail applications, but if you enter "python
template" in Google and hit the "I feel lucky" button,  you reach this
page :

http://www.webwareforpython.org/Papers/Templates/

I hope you don't miss this week of searching too much.

Regards,
Nicolas
From grahamd at dscpl.com.au  Sun Feb 13 16:19:31 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Sun Feb 13 16:19:41 2005
Subject: [mod_python] WebMail Server in mod_python?
In-Reply-To: <420F8E99.3000005@eberian.com>
References: <420F8E99.3000005@eberian.com>
Message-ID: <eb47a6625b9d67a9f055154ee33b19c6@dscpl.com.au>


On 14/02/2005, at 4:30 AM, Ed Lucas wrote:
> That said, when I looked for Templating systems in the usual places, I 
> couldn't see anything either. It was only after a week of link-hopping 
> that I started finding stuff like Vampire and HTMLTemplate (actually 
> by trawling this list for clues). I coulnd't find a Search facility 
> for this list either, so apologies if this is a old question.

You can search the mod_python mailing list by going to 
www.modpython.org and
typing into the search box, a string such as:

   inurl:pipermail web mail

The "inurl" bit restricts search to mailing list archive.

Graham

From saiello at Jentoo.com  Mon Feb 14 07:48:11 2005
From: saiello at Jentoo.com (saiello@jentoo.com)
Date: Mon Feb 14 07:41:12 2005
Subject: [mod_python] WebMail Server in mod_python?
In-Reply-To: <420F8E99.3000005@eberian.com>
References: <420F8E99.3000005@eberian.com>
Message-ID: <42109E0B.90401@Jentoo.com>



Ed Lucas wrote:
> Hi All,
>    Are there any Webmail tools written on mod_python? (e.g. something 
> like Squirrelmail or Horde).
> 
> I have been looking in what I imagined would be the 'Usual places' - 
> Google, Freshmeat & Sourceforge, and all I could find are:
> 
> http://gomail.dynu.com/
> http://pywm.org/
> 
> - Neither of which seem to be in active development.
> 

I was writing one. I stopped due to my lack of experience in writing 
mod_python apps. A webmail app is a rather large application to be 
writing. I believed I needed more experience in writing simpler apps, 
and getting my programing standards down. I kept finding as I wrote more 
and more of the app. I would have to go back and rewrite my past 
functions, because I had learned better ways to go about performing that 
task. It was very fustrating to take One step forward and Two backwards.

Another promblem was the amount of time it took to read all the RFCs and 
then see how so many different IMAP servers differ from one another. I 
basically got to the point of parsing the raw email and dealing with 
MIME. I was just digging into the MIME RFCs and was not looking forward 
to find how my everyday email somehow differed from the RFC specs.

It is alot of work for one person to write a good webmail app. 
Especially for a relative programming newbie.

Though of late I have been considering starting back up again
From ejl at eberian.com  Mon Feb 14 09:44:15 2005
From: ejl at eberian.com (Ed Lucas)
Date: Mon Feb 14 09:43:05 2005
Subject: [mod_python] WebMail Server in mod_python?
In-Reply-To: <42109E0B.90401@Jentoo.com>
References: <420F8E99.3000005@eberian.com> <42109E0B.90401@Jentoo.com>
Message-ID: <4210B93F.8040705@eberian.com>

Hi Saiello,

> I was writing one. I stopped due to my lack of experience in writing 
> mod_python apps. A webmail app is a rather large application to be 
> writing.

Darn - I rather hoped it would just be a case of plugging together the 
standard Python mail libs with a pretty template. I should have twigged 
- there are thousands of home-build CMS, but only a few abandonned 
Webmail apps -> probably for a reason!

I found your posts to the forum last May-ish (thanks to 
grahamd@dscpl.com.au for the search hints). It sounds like you got a 
fair way with it?

> I believed I needed more experience in writing simpler apps, and 
> getting my programing standards down. I kept finding as I wrote more 
> and more of the app. I would have to go back and rewrite my past 
> functions, because I had learned better ways to go about performing 
> that task. It was very fustrating to take One step forward and Two 
> backwards.

That sounds like the story of my life!

> Another promblem was the amount of time it took to read all the RFCs 
> and then see how so many different IMAP servers differ from one 
> another. I basically got to the point of parsing the raw email and 
> dealing with MIME. I was just digging into the MIME RFCs and was not 
> looking forward to find how my everyday email somehow differed from 
> the RFC specs.
>
> It is alot of work for one person to write a good webmail app. 
> Especially for a relative programming newbie.

True, and the thought of dealing with all the potential quirks of 
implementation isn't nice.

> Though of late I have been considering starting back up again

Likewise. If I can't find/build a Python solution, I will have to 
install Horde/Squirrelmail ...and if I have to do that, then I have to 
install PHP, at which point I wouldn't be able to justify using 
mod_python too. I'm not in a hurry to go back to PHP (I like what I have 
seen of mod_python), so I'm willing to give it a go, particularly if I'm 
not going to end up all alone tilting at windmills ;)

Interested in discussing it further? (License, Scope, Framework etc.). I 
can offer some basic hosting facilities if they are required.

Best wishes,
    Ed Lucas

From ch.pingel at web.de  Mon Feb 14 09:49:28 2005
From: ch.pingel at web.de (Christoph Pingel)
Date: Mon Feb 14 09:49:34 2005
Subject: [mod_python] mod_python / psycopg problems
In-Reply-To: <42109E0B.90401@Jentoo.com>
References: <420F8E99.3000005@eberian.com> <42109E0B.90401@Jentoo.com>
Message-ID: <a06100500be3669cbefde@[84.135.209.20]>

I'm running mod_python 3.1.3, Python 2.4 and psycopg (PostgreSQL 
8.0.1) on a Mac OS X machine. Only recently updated to Python 2.4 and 
switched from MySQL to Postgres. An application that used to work now 
stops while trying to import psycopg.

ImportError: Failure linking new module: : dyld: 
/opt/local/apache2/bin/httpd Undefined symbols:
/opt/local/lib/python2.4/site-packages/psycopg.so undefined reference 
to _PyArg_ParseTuple expected to be defined in the executable
/opt/local/lib/python2.4/site-packages/psycopg.so undefined reference 
to _PyArg_ParseTupleAndKeywords expected to be defined in the 
executable
/opt/local/lib/python2.4/site-packages/psycopg.so undefined reference 
to _PyCObject_AsVoidPtr expected to be defined in the executable

What's happening here, and what should I do? Thanks for any insight.

best,
Christoph
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20050214/2d52cd24/attachment.html
From dpopowich at comcast.net  Mon Feb 14 10:29:35 2005
From: dpopowich at comcast.net (Daniel Popowich)
Date: Mon Feb 14 10:29:59 2005
Subject: [mod_python] mod_python / psycopg problems
In-Reply-To: <a06100500be3669cbefde@[84.135.209.20]>
References: <420F8E99.3000005@eberian.com> <42109E0B.90401@Jentoo.com>
	<a06100500be3669cbefde@[84.135.209.20]>
Message-ID: <16912.50143.445564.591098@greenmonster.local>


Christoph Pingel writes:
> I'm running mod_python 3.1.3, Python 2.4 and psycopg (PostgreSQL 
> 8.0.1) on a Mac OS X machine. Only recently updated to Python 2.4 and 
> switched from MySQL to Postgres. An application that used to work now 
> stops while trying to import psycopg.
> 
> ImportError: Failure linking new module: : dyld: 
> /opt/local/apache2/bin/httpd Undefined symbols:
> /opt/local/lib/python2.4/site-packages/psycopg.so undefined reference 
> to _PyArg_ParseTuple expected to be defined in the executable
> /opt/local/lib/python2.4/site-packages/psycopg.so undefined reference 
> to _PyArg_ParseTupleAndKeywords expected to be defined in the 
> executable
> /opt/local/lib/python2.4/site-packages/psycopg.so undefined reference 
> to _PyCObject_AsVoidPtr expected to be defined in the executable
> 
> What's happening here, and what should I do? Thanks for any insight.

I'm running a similar config.  When you upgraded to Python 2.4, did
you rebuild all your modules (mod_python, psycopg, etc) against 2.4?
It looks like you have a linker conflict/mismatch somewhere.

Daniel Popowich
-----------------------------------------------
http://home.comcast.net/~d.popowich/mpservlets/
From ron at udel.edu  Mon Feb 14 14:33:44 2005
From: ron at udel.edu (Ron Reisor)
Date: Mon Feb 14 14:33:50 2005
Subject: [mod_python] mod_python / psycopg problems
In-Reply-To: <a06100500be3669cbefde@[84.135.209.20]>
References: <420F8E99.3000005@eberian.com> <42109E0B.90401@Jentoo.com>
	<a06100500be3669cbefde@[84.135.209.20]>
Message-ID: <Pine.OSX.4.62.0502141423460.618@zim.nss.udel.edu>

These packages all work well together.

On MacOSX a framework based Python to get a shared library that works with 
mod_python. Check Mac/OSX/README.

psycopg I'm using is 1.1.15. The config is pretty standard, I just specify 
--with-postgres-libraries and --with-postgres-includes.

There are two problems in getting psycopg to build. The Makefile includes 
-lcrypto when it doesn't need it -- it's included by the framework. And, 
this has to be added:
PYTHONFRAMEWORKPREFIX=/Library/Frameworks

cheers,

Ron


On Mon, 14 Feb 2005, Christoph Pingel wrote:

> I'm running mod_python 3.1.3, Python 2.4 and psycopg (PostgreSQL 8.0.1) on a 
> Mac OS X machine. Only recently updated to Python 2.4 and switched from MySQL 
> to Postgres. An application that used to work now stops while trying to 
> import psycopg.
>
> ImportError: Failure linking new module: : dyld: /opt/local/apache2/bin/httpd 
> Undefined symbols:
> /opt/local/lib/python2.4/site-packages/psycopg.so undefined reference to 
> _PyArg_ParseTuple expected to be defined in the executable
> /opt/local/lib/python2.4/site-packages/psycopg.so undefined reference to 
> _PyArg_ParseTupleAndKeywords expected to be defined in the executable
> /opt/local/lib/python2.4/site-packages/psycopg.so undefined reference to 
> _PyCObject_AsVoidPtr expected to be defined in the executable
>
> What's happening here, and what should I do? Thanks for any insight.
>
> best,
> Christoph

Ron Reisor <ron@udel.edu> (RWR3)
University of Delaware Information Technologies/Network and Systems Services
Computing Center/192 South Chapel Street/Newark DE, 19716
pgp finger print: 0D 73 06 6F D3 6A 99 D3  F5 D5 6E FF 3B B9 7C 2C
From ch.pingel at web.de  Mon Feb 14 15:27:04 2005
From: ch.pingel at web.de (Christoph Pingel)
Date: Mon Feb 14 15:27:09 2005
Subject: [mod_python] mod_python / psycopg problems
In-Reply-To: <Pine.OSX.4.62.0502141423460.618@zim.nss.udel.edu>
References: <420F8E99.3000005@eberian.com> <42109E0B.90401@Jentoo.com>
	<a06100500be3669cbefde@[84.135.209.20]>
	<Pine.OSX.4.62.0502141423460.618@zim.nss.udel.edu>
Message-ID: <a06100505be36b81f1abe@[62.224.63.221]>

>There are two problems in getting psycopg to build. The Makefile 
>includes -lcrypto when it doesn't need it -- it's included by the 
>framework. And, this has to be added:
>PYTHONFRAMEWORKPREFIX=/Library/Frameworks

Ron,

thanks for you input. But I think it's not psycopg's problem. There's 
no problem with psycopg as long as I don't use mod_python.

Looking at these lines (that's what I see in my browser when trying 
to load a page made with mod_python) I think Daniel was right:

ImportError: Failure linking new module: : dyld: 
/opt/local/apache2/bin/httpd Undefined symbols:
/opt/local/lib/python2.4/site-packages/psycopg.so undefined reference 
to _PyArg_ParseTuple expected to be defined in the executable

The 'executable' in this case is mod_python, and psycopg is looking 
for some method, I guess, that's not present in the version of 
mod_python that I built using darwinports.

By now, I try to build mod_python against Python 2.4, but something goes wrong.

"""
*** Warning: linker path does not have real file for library -lpython2.4.
*** I have the capability to make that library automatically link in when
*** you link to this library.  But I can only do this if you have a
*** shared version of the library, which you do not appear to have
*** because I did check the linker path looking for a file starting
*** with libpython2.4 and none of the candidates passed a file format test
*** using a file magic. Last file checked: 
/opt/local/lib/python2.4/config/libpython2.4.a

*** Warning: libtool could not satisfy all declared inter-library
*** dependencies of module mod_python.  Therefore, libtool will create
*** a static module, that should work as long as the dlopening
*** application is linked with the -dlopen flag.
make[3]: `psp_parser.c' is up to date.
/opt/local/bin/python2.4 setup.py build
running build
running build_py
running build_ext

Now su and make install
   (or, if you only want to perform a partial install,
    you can use make install_dso and make install_py_lib)


Performing DSO installation.

/usr/bin/install -c -d /opt/local/apache2/modules
/usr/bin/install -c src/mod_python.so /opt/local/apache2/modules
install: src/mod_python.so: No such file or directory
make[1]: *** [install_dso] Error 71
make: *** [install] Error 2
"""

This is odd, since the ./configure script doesn't complain about 
-lpython2.4 being absent.

Anyone able to help here?

best,
Christoph

From ron at udel.edu  Mon Feb 14 15:56:50 2005
From: ron at udel.edu (Ron Reisor)
Date: Mon Feb 14 16:01:19 2005
Subject: [mod_python] mod_python / psycopg problems
In-Reply-To: <a06100505be36b81f1abe@[62.224.63.221]>
References: <420F8E99.3000005@eberian.com> <42109E0B.90401@Jentoo.com>
	<a06100500be3669cbefde@[84.135.209.20]>
	<Pine.OSX.4.62.0502141423460.618@zim.nss.udel.edu>
	<a06100505be36b81f1abe@[62.224.63.221]>
Message-ID: <Pine.OSX.4.62.0502141549080.373@zim-nss-udel-edu.local>

Christoph,

     It still seems like you're not using the Python framework 
installation. I did manage to get a .so library built in the past, but it 
required a lot of hacking and slashing at the code to get it to build. The 
framework install is easy and works well. Did you give it a try?

     The _PyArg_ParseTuple undefined should be resolved the the (missing) 
Python library.

     I use very simple builds of Python-2.4, apache, expat, mod_python and 
psycopg and the only thing I have to fix these days are the couple of 
problems with the psycopg Makefile.  I'll send you the whole list of what 
I use to build everything if that'll help.

cheers,

Ron


On Mon, 14 Feb 2005, Christoph Pingel wrote:

>> There are two problems in getting psycopg to build. The Makefile includes 
>> -lcrypto when it doesn't need it -- it's included by the framework. And, 
>> this has to be added:
>> PYTHONFRAMEWORKPREFIX=/Library/Frameworks
>
> Ron,
>
> thanks for you input. But I think it's not psycopg's problem. There's no 
> problem with psycopg as long as I don't use mod_python.
>
> Looking at these lines (that's what I see in my browser when trying to load a 
> page made with mod_python) I think Daniel was right:
>
> ImportError: Failure linking new module: : dyld: /opt/local/apache2/bin/httpd 
> Undefined symbols:
> /opt/local/lib/python2.4/site-packages/psycopg.so undefined reference to 
> _PyArg_ParseTuple expected to be defined in the executable
>
> The 'executable' in this case is mod_python, and psycopg is looking for some 
> method, I guess, that's not present in the version of mod_python that I built 
> using darwinports.
>
> By now, I try to build mod_python against Python 2.4, but something goes 
> wrong.
>
> """
> *** Warning: linker path does not have real file for library -lpython2.4.
> *** I have the capability to make that library automatically link in when
> *** you link to this library.  But I can only do this if you have a
> *** shared version of the library, which you do not appear to have
> *** because I did check the linker path looking for a file starting
> *** with libpython2.4 and none of the candidates passed a file format test
> *** using a file magic. Last file checked: 
> /opt/local/lib/python2.4/config/libpython2.4.a
>
> *** Warning: libtool could not satisfy all declared inter-library
> *** dependencies of module mod_python.  Therefore, libtool will create
> *** a static module, that should work as long as the dlopening
> *** application is linked with the -dlopen flag.
> make[3]: `psp_parser.c' is up to date.
> /opt/local/bin/python2.4 setup.py build
> running build
> running build_py
> running build_ext
>
> Now su and make install
>  (or, if you only want to perform a partial install,
>   you can use make install_dso and make install_py_lib)
>
>
> Performing DSO installation.
>
> /usr/bin/install -c -d /opt/local/apache2/modules
> /usr/bin/install -c src/mod_python.so /opt/local/apache2/modules
> install: src/mod_python.so: No such file or directory
> make[1]: *** [install_dso] Error 71
> make: *** [install] Error 2
> """
>
> This is odd, since the ./configure script doesn't complain about -lpython2.4 
> being absent.
>
> Anyone able to help here?
>
> best,
> Christoph
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>

Ron Reisor <ron@udel.edu> (RWR3)
University of Delaware Information Technologies/Network and Systems Services
Computing Center/192 South Chapel Street/Newark DE, 19716
pgp finger print: 0D 73 06 6F D3 6A 99 D3  F5 D5 6E FF 3B B9 7C 2C
From wagnerh at oclc.org  Mon Feb 14 17:11:07 2005
From: wagnerh at oclc.org (Wagner,Harry)
Date: Mon Feb 14 17:11:10 2005
Subject: [mod_python] Session problems
Message-ID: <811A02A11096B343880D2EEF72C4C832551D22@OAEXCH2SERVER.oa.oclc.org>

I am trying to convert a program (see below) written for the
BaseHTTPServer to Apache and am getting a MemoryError trying to save the
session.  Is there a trick to this I am missing?  Thanks!  harry

from mod_python import apache, util, Session
import sys, urllib, urlparse, xml.dom.pulldom, cgi, socket,
xml.sax.saxutils, StringIO, math, glob, os.path, ddc3

def handler(req):
	sess = Session.Session(req)
	ddcServer = DDCServer(req)
	ddcServer.root = ddcServer.req.document_root()
	oclc2ddcFile = ddcServer.root + '/Collections/eBooks.ddc'
	recFileName = ddcServer.root + '/Collections/eBooks.ddc.ulines'
	compHoldingsFile = ddcServer.root + '/ihbnum.compressed'
	captionsFile = ddcServer.root + '/Captions'
	ddcServer.testing = 0
	if sess.is_new():
		req.write("Session is new\n")
		ddcServer.captions = DDCCaptions(captionsFile)
		ddcServer.localText = TextLocalization(captionsFile)
		ddcServer.ddcSearch = ddc3.DDCSearch(file(oclc2ddcFile),
recFileName, file(compHoldingsFile, 'rb', 100000))
		try:
			sess['captions'] = ddcServer.captions
			sess['localText'] = ddcServer.localText
			sess['ddcSearch'] = ddcServer.ddcSearch
			sess.save()
			sess.unlock()
			req.write("Session saved\n")
		except MemoryError: req.write("MemoryError raised\n")
	elif not sess.is_new():
		sess.load()
		req.write("Previous session loaded\n")
		ddcServer.captions = sess['captions']
		ddcServer.localText = sess['localText']
		ddcServer.ddcSearch = sess['ddcSearch']
		req.write("data has finished loading\n")
#	ddcServer.do_GET()
	return apache.OK

-------
Session is new
MemoryError raised

From christopher.jackson at gmail.com  Mon Feb 14 17:21:35 2005
From: christopher.jackson at gmail.com (Chris Jackson)
Date: Mon Feb 14 17:21:40 2005
Subject: [mod_python] Session problems
In-Reply-To: <811A02A11096B343880D2EEF72C4C832551D22@OAEXCH2SERVER.oa.oclc.org>
References: <811A02A11096B343880D2EEF72C4C832551D22@OAEXCH2SERVER.oa.oclc.org>
Message-ID: <4d11484d0502141421ce62117@mail.gmail.com>

Take out sess.unlock(). There's no need to do this as it's handled by
the class itself by default.  This could have perhaps lead to
MemoryErrors.

~= Chris =~


On Mon, 14 Feb 2005 17:11:07 -0500, Wagner,Harry <wagnerh@oclc.org> wrote:
> I am trying to convert a program (see below) written for the
> BaseHTTPServer to Apache and am getting a MemoryError trying to save the
> session.  Is there a trick to this I am missing?  Thanks!  harry
> 
> from mod_python import apache, util, Session
> import sys, urllib, urlparse, xml.dom.pulldom, cgi, socket,
> xml.sax.saxutils, StringIO, math, glob, os.path, ddc3
> 
> def handler(req):
>         sess = Session.Session(req)
>         ddcServer = DDCServer(req)
>         ddcServer.root = ddcServer.req.document_root()
>         oclc2ddcFile = ddcServer.root + '/Collections/eBooks.ddc'
>         recFileName = ddcServer.root + '/Collections/eBooks.ddc.ulines'
>         compHoldingsFile = ddcServer.root + '/ihbnum.compressed'
>         captionsFile = ddcServer.root + '/Captions'
>         ddcServer.testing = 0
>         if sess.is_new():
>                 req.write("Session is new\n")
>                 ddcServer.captions = DDCCaptions(captionsFile)
>                 ddcServer.localText = TextLocalization(captionsFile)
>                 ddcServer.ddcSearch = ddc3.DDCSearch(file(oclc2ddcFile),
> recFileName, file(compHoldingsFile, 'rb', 100000))
>                 try:
>                         sess['captions'] = ddcServer.captions
>                         sess['localText'] = ddcServer.localText
>                         sess['ddcSearch'] = ddcServer.ddcSearch
>                         sess.save()
>                         sess.unlock()
>                         req.write("Session saved\n")
>                 except MemoryError: req.write("MemoryError raised\n")
>         elif not sess.is_new():
>                 sess.load()
>                 req.write("Previous session loaded\n")
>                 ddcServer.captions = sess['captions']
>                 ddcServer.localText = sess['localText']
>                 ddcServer.ddcSearch = sess['ddcSearch']
>                 req.write("data has finished loading\n")
> #       ddcServer.do_GET()
>         return apache.OK
> 
> -------
> Session is new
> MemoryError raised
> 
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>
From dagurp at heimsnet.is  Tue Feb 15 06:54:43 2005
From: dagurp at heimsnet.is (dagurp@heimsnet.is)
Date: Tue Feb 15 06:54:50 2005
Subject: [mod_python] Cookie problem
Message-ID: <web-78171385@heimsnet.is>

dagurp@heimsnet.is wrote:

>Gregory (Grisha) Trubetskoy wrote:
>
>>Dagur -
>>
>>I have just tried this with Firefox:
>>
>>    cookie = Cookie.Cookie('eggs', 'spam')
>>    cookie.expires = time.time() + 1209600
>>    Cookie.add_cookie(req, cookie)
>>
>>and it set the expires correctly to Feb 23.
>>
>>When I do a req.log_error(str(cookie)), I get this in the log:
>>
>>eggs=spam; expires=Wed, 23-Feb-2005 15:11:47 GMT
>>
>>What version of mod_python are you using?
>>
>>Grisha 
>
>
>I figured it out!
>
>I tried the req.log_error(str(cookie)) thing again, and this time in the right
>location (oops). Then the problem became obvious.
>
>Since I had set the locale to Icelandic, the date in the cookie had Icelandic
>in it and that's why it didn't work. After I set the locale back to english
>there were no problems. 
>
>Thanks a lot for your help!
>
>Dagur
>
>

Btw. Should this be considered a bug in the cookie module? If not, maybe there
should be some kind of warning in the documentation?

From wagnerh at oclc.org  Tue Feb 15 08:14:20 2005
From: wagnerh at oclc.org (Wagner,Harry)
Date: Tue Feb 15 08:14:24 2005
Subject: [mod_python] Session problems
Message-ID: <811A02A11096B343880D2EEF72C4C832551D23@OAEXCH2SERVER.oa.oclc.org>


Take out sess.unlock(). There's no need to do this as it's handled by
the class itself by default.  This could have perhaps lead to
MemoryErrors.

----
Thanks Chris.  I removed the unlockm,, but still no luck.  The problem
seems to be with the following statement:

sess['ddcSearch'] = ddcServer.ddcSearch 

If I comment that statement out (and the following load for ddcSearch)
then it works.  Otherwise it fails on the 'sess.save()' statement.
ddcSearch is a fairly large and complex object.  Does this matter?  I'm
running apache 2.0.40 and mod_python-3.1.3.  

Thanks!  harry


On Mon, 14 Feb 2005 17:11:07 -0500, Wagner,Harry <wagnerh@oclc.org>
wrote:
> I am trying to convert a program (see below) written for the 
> BaseHTTPServer to Apache and am getting a MemoryError trying to save 
> the session.  Is there a trick to this I am missing?  Thanks!  harry
> 
> from mod_python import apache, util, Session import sys, urllib, 
> urlparse, xml.dom.pulldom, cgi, socket, xml.sax.saxutils, StringIO, 
> math, glob, os.path, ddc3
> 
> def handler(req):
>         sess = Session.Session(req)
>         ddcServer = DDCServer(req)
>         ddcServer.root = ddcServer.req.document_root()
>         oclc2ddcFile = ddcServer.root + '/Collections/eBooks.ddc'
>         recFileName = ddcServer.root +
'/Collections/eBooks.ddc.ulines'
>         compHoldingsFile = ddcServer.root + '/ihbnum.compressed'
>         captionsFile = ddcServer.root + '/Captions'
>         ddcServer.testing = 0
>         if sess.is_new():
>                 req.write("Session is new\n")
>                 ddcServer.captions = DDCCaptions(captionsFile)
>                 ddcServer.localText = TextLocalization(captionsFile)
>                 ddcServer.ddcSearch = 
> ddc3.DDCSearch(file(oclc2ddcFile),
> recFileName, file(compHoldingsFile, 'rb', 100000))
>                 try:
>                         sess['captions'] = ddcServer.captions
>                         sess['localText'] = ddcServer.localText
>                         sess['ddcSearch'] = ddcServer.ddcSearch
>                         sess.save()
>                         sess.unlock()
>                         req.write("Session saved\n")
>                 except MemoryError: req.write("MemoryError raised\n")
>         elif not sess.is_new():
>                 sess.load()
>                 req.write("Previous session loaded\n")
>                 ddcServer.captions = sess['captions']
>                 ddcServer.localText = sess['localText']
>                 ddcServer.ddcSearch = sess['ddcSearch']
>                 req.write("data has finished loading\n")
> #       ddcServer.do_GET()
>         return apache.OK
> 
> -------
> Session is new
> MemoryError raised
> 
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>

From vladap at criticalpublics.com  Tue Feb 15 09:30:31 2005
From: vladap at criticalpublics.com (Vladimir Petrovic)
Date: Tue Feb 15 09:31:05 2005
Subject: [mod_python] Filtering POST requests (req.read ())
Message-ID: <200502151630.31313.vladap@criticalpublics.com>

In my setup, apache is acting like a reverse proxy to the application server 
(Zope). The setup uses proxy rewrite rules. I would like to setup a modpython 
handler which will inspect all POST requests and it will block the request if 
some special field names are used.

I've setup PythonPostReadRequestHandler
with the following code:

fs = util.FieldStorage (req)
for k in fs.keys ():
  if not check_field_name (k): return apache.HTTP_FORBIDDEN

return apache.OK

If the POST request contain an invalid field apache returns FORBIDDEN error as 
it should. But if the request doesn't contain invalid field names, then the 
request is "blocked", the client doesn't get any reply. The same happens if I 
just call req.read () inside the handler.

It seems that calls to req.read () inside FieldStorage use all request data 
that client sends, and after the handler returns the request gets blocked. Is 
there a way to solve this problem or is there an alternative way to inspect 
POST data ?

thank you,
Vladimir

From nicolas.lehuen at gmail.com  Tue Feb 15 09:43:08 2005
From: nicolas.lehuen at gmail.com (Nicolas Lehuen)
Date: Tue Feb 15 09:43:10 2005
Subject: [mod_python] Session problems
In-Reply-To: <811A02A11096B343880D2EEF72C4C832551D23@OAEXCH2SERVER.oa.oclc.org>
References: <811A02A11096B343880D2EEF72C4C832551D23@OAEXCH2SERVER.oa.oclc.org>
Message-ID: <c298f2d705021506433e13db8f@mail.gmail.com>

Tu les ach?tes o? et quand, les jeux ?

@+
Nico


On Tue, 15 Feb 2005 08:14:20 -0500, Wagner,Harry <wagnerh@oclc.org> wrote:
> 
> Take out sess.unlock(). There's no need to do this as it's handled by
> the class itself by default.  This could have perhaps lead to
> MemoryErrors.
> 
> ----
> Thanks Chris.  I removed the unlockm,, but still no luck.  The problem
> seems to be with the following statement:
> 
> sess['ddcSearch'] = ddcServer.ddcSearch
> 
> If I comment that statement out (and the following load for ddcSearch)
> then it works.  Otherwise it fails on the 'sess.save()' statement.
> ddcSearch is a fairly large and complex object.  Does this matter?  I'm
> running apache 2.0.40 and mod_python-3.1.3.
> 
> Thanks!  harry
> 
> 
> On Mon, 14 Feb 2005 17:11:07 -0500, Wagner,Harry <wagnerh@oclc.org>
> wrote:
> > I am trying to convert a program (see below) written for the
> > BaseHTTPServer to Apache and am getting a MemoryError trying to save
> > the session.  Is there a trick to this I am missing?  Thanks!  harry
> >
> > from mod_python import apache, util, Session import sys, urllib,
> > urlparse, xml.dom.pulldom, cgi, socket, xml.sax.saxutils, StringIO,
> > math, glob, os.path, ddc3
> >
> > def handler(req):
> >         sess = Session.Session(req)
> >         ddcServer = DDCServer(req)
> >         ddcServer.root = ddcServer.req.document_root()
> >         oclc2ddcFile = ddcServer.root + '/Collections/eBooks.ddc'
> >         recFileName = ddcServer.root +
> '/Collections/eBooks.ddc.ulines'
> >         compHoldingsFile = ddcServer.root + '/ihbnum.compressed'
> >         captionsFile = ddcServer.root + '/Captions'
> >         ddcServer.testing = 0
> >         if sess.is_new():
> >                 req.write("Session is new\n")
> >                 ddcServer.captions = DDCCaptions(captionsFile)
> >                 ddcServer.localText = TextLocalization(captionsFile)
> >                 ddcServer.ddcSearch =
> > ddc3.DDCSearch(file(oclc2ddcFile),
> > recFileName, file(compHoldingsFile, 'rb', 100000))
> >                 try:
> >                         sess['captions'] = ddcServer.captions
> >                         sess['localText'] = ddcServer.localText
> >                         sess['ddcSearch'] = ddcServer.ddcSearch
> >                         sess.save()
> >                         sess.unlock()
> >                         req.write("Session saved\n")
> >                 except MemoryError: req.write("MemoryError raised\n")
> >         elif not sess.is_new():
> >                 sess.load()
> >                 req.write("Previous session loaded\n")
> >                 ddcServer.captions = sess['captions']
> >                 ddcServer.localText = sess['localText']
> >                 ddcServer.ddcSearch = sess['ddcSearch']
> >                 req.write("data has finished loading\n")
> > #       ddcServer.do_GET()
> >         return apache.OK
> >
> > -------
> > Session is new
> > MemoryError raised
> >
> > _______________________________________________
> > Mod_python mailing list
> > Mod_python@modpython.org
> > http://mailman.modpython.org/mailman/listinfo/mod_python
> >
> 
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>

From nicolas.lehuen at gmail.com  Tue Feb 15 09:43:58 2005
From: nicolas.lehuen at gmail.com (Nicolas Lehuen)
Date: Tue Feb 15 09:44:00 2005
Subject: [mod_python] Session problems
In-Reply-To: <c298f2d705021506433e13db8f@mail.gmail.com>
References: <811A02A11096B343880D2EEF72C4C832551D23@OAEXCH2SERVER.oa.oclc.org>
	<c298f2d705021506433e13db8f@mail.gmail.com>
Message-ID: <c298f2d7050215064338d67157@mail.gmail.com>

Err.... Sorry wrong window :). GMail got me !

Regards,
Nicolas

On Tue, 15 Feb 2005 15:43:08 +0100, Nicolas Lehuen
<nicolas.lehuen@gmail.com> wrote:
> Tu les ach?tes o? et quand, les jeux ?
> 
> @+
> Nico
> 
> 
> On Tue, 15 Feb 2005 08:14:20 -0500, Wagner,Harry <wagnerh@oclc.org> wrote:
> >
> > Take out sess.unlock(). There's no need to do this as it's handled by
> > the class itself by default.  This could have perhaps lead to
> > MemoryErrors.
> >
> > ----
> > Thanks Chris.  I removed the unlockm,, but still no luck.  The problem
> > seems to be with the following statement:
> >
> > sess['ddcSearch'] = ddcServer.ddcSearch
> >
> > If I comment that statement out (and the following load for ddcSearch)
> > then it works.  Otherwise it fails on the 'sess.save()' statement.
> > ddcSearch is a fairly large and complex object.  Does this matter?  I'm
> > running apache 2.0.40 and mod_python-3.1.3.
> >
> > Thanks!  harry
> >
> >
> > On Mon, 14 Feb 2005 17:11:07 -0500, Wagner,Harry <wagnerh@oclc.org>
> > wrote:
> > > I am trying to convert a program (see below) written for the
> > > BaseHTTPServer to Apache and am getting a MemoryError trying to save
> > > the session.  Is there a trick to this I am missing?  Thanks!  harry
> > >
> > > from mod_python import apache, util, Session import sys, urllib,
> > > urlparse, xml.dom.pulldom, cgi, socket, xml.sax.saxutils, StringIO,
> > > math, glob, os.path, ddc3
> > >
> > > def handler(req):
> > >         sess = Session.Session(req)
> > >         ddcServer = DDCServer(req)
> > >         ddcServer.root = ddcServer.req.document_root()
> > >         oclc2ddcFile = ddcServer.root + '/Collections/eBooks.ddc'
> > >         recFileName = ddcServer.root +
> > '/Collections/eBooks.ddc.ulines'
> > >         compHoldingsFile = ddcServer.root + '/ihbnum.compressed'
> > >         captionsFile = ddcServer.root + '/Captions'
> > >         ddcServer.testing = 0
> > >         if sess.is_new():
> > >                 req.write("Session is new\n")
> > >                 ddcServer.captions = DDCCaptions(captionsFile)
> > >                 ddcServer.localText = TextLocalization(captionsFile)
> > >                 ddcServer.ddcSearch =
> > > ddc3.DDCSearch(file(oclc2ddcFile),
> > > recFileName, file(compHoldingsFile, 'rb', 100000))
> > >                 try:
> > >                         sess['captions'] = ddcServer.captions
> > >                         sess['localText'] = ddcServer.localText
> > >                         sess['ddcSearch'] = ddcServer.ddcSearch
> > >                         sess.save()
> > >                         sess.unlock()
> > >                         req.write("Session saved\n")
> > >                 except MemoryError: req.write("MemoryError raised\n")
> > >         elif not sess.is_new():
> > >                 sess.load()
> > >                 req.write("Previous session loaded\n")
> > >                 ddcServer.captions = sess['captions']
> > >                 ddcServer.localText = sess['localText']
> > >                 ddcServer.ddcSearch = sess['ddcSearch']
> > >                 req.write("data has finished loading\n")
> > > #       ddcServer.do_GET()
> > >         return apache.OK
> > >
> > > -------
> > > Session is new
> > > MemoryError raised
> > >
> > > _______________________________________________
> > > Mod_python mailing list
> > > Mod_python@modpython.org
> > > http://mailman.modpython.org/mailman/listinfo/mod_python
> > >
> >
> > _______________________________________________
> > Mod_python mailing list
> > Mod_python@modpython.org
> > http://mailman.modpython.org/mailman/listinfo/mod_python
> >
>

From christopher.jackson at gmail.com  Tue Feb 15 09:45:49 2005
From: christopher.jackson at gmail.com (Chris Jackson)
Date: Tue Feb 15 09:45:51 2005
Subject: [mod_python] Session problems
In-Reply-To: <811A02A11096B343880D2EEF72C4C832551D23@OAEXCH2SERVER.oa.oclc.org>
References: <811A02A11096B343880D2EEF72C4C832551D23@OAEXCH2SERVER.oa.oclc.org>
Message-ID: <4d11484d050215064535626ec2@mail.gmail.com>

Perhaps your document index space is so large that it's eating too
much memory while trying to search.  Then again, it looks like it
searches fine with this line:

 ddcServer.ddcSearch = ddc3.DDCSearch(file(oclc2ddcFile), recFileName,
file(compHoldingsFile, 'rb', 100000))

But then just fails when trying to store it in the session.

Hmm, could there be an option either Apache, i would suspect, or maybe
even a mod_python option that restricts or limits the amount of memory
a single request or the sum of all request are allowed.

I'll keep looking to see what I can find.

~= Chris =~


On Tue, 15 Feb 2005 08:14:20 -0500, Wagner,Harry <wagnerh@oclc.org> wrote:
> 
> Take out sess.unlock(). There's no need to do this as it's handled by
> the class itself by default.  This could have perhaps lead to
> MemoryErrors.
> 
> ----
> Thanks Chris.  I removed the unlockm,, but still no luck.  The problem
> seems to be with the following statement:
> 
> sess['ddcSearch'] = ddcServer.ddcSearch
> 
> If I comment that statement out (and the following load for ddcSearch)
> then it works.  Otherwise it fails on the 'sess.save()' statement.
> ddcSearch is a fairly large and complex object.  Does this matter?  I'm
> running apache 2.0.40 and mod_python-3.1.3.
> 
> Thanks!  harry
> 
> 
> On Mon, 14 Feb 2005 17:11:07 -0500, Wagner,Harry <wagnerh@oclc.org>
> wrote:
> > I am trying to convert a program (see below) written for the
> > BaseHTTPServer to Apache and am getting a MemoryError trying to save
> > the session.  Is there a trick to this I am missing?  Thanks!  harry
> >
> > from mod_python import apache, util, Session import sys, urllib,
> > urlparse, xml.dom.pulldom, cgi, socket, xml.sax.saxutils, StringIO,
> > math, glob, os.path, ddc3
> >
> > def handler(req):
> >         sess = Session.Session(req)
> >         ddcServer = DDCServer(req)
> >         ddcServer.root = ddcServer.req.document_root()
> >         oclc2ddcFile = ddcServer.root + '/Collections/eBooks.ddc'
> >         recFileName = ddcServer.root +
> '/Collections/eBooks.ddc.ulines'
> >         compHoldingsFile = ddcServer.root + '/ihbnum.compressed'
> >         captionsFile = ddcServer.root + '/Captions'
> >         ddcServer.testing = 0
> >         if sess.is_new():
> >                 req.write("Session is new\n")
> >                 ddcServer.captions = DDCCaptions(captionsFile)
> >                 ddcServer.localText = TextLocalization(captionsFile)
> >                 ddcServer.ddcSearch =
> > ddc3.DDCSearch(file(oclc2ddcFile),
> > recFileName, file(compHoldingsFile, 'rb', 100000))
> >                 try:
> >                         sess['captions'] = ddcServer.captions
> >                         sess['localText'] = ddcServer.localText
> >                         sess['ddcSearch'] = ddcServer.ddcSearch
> >                         sess.save()
> >                         sess.unlock()
> >                         req.write("Session saved\n")
> >                 except MemoryError: req.write("MemoryError raised\n")
> >         elif not sess.is_new():
> >                 sess.load()
> >                 req.write("Previous session loaded\n")
> >                 ddcServer.captions = sess['captions']
> >                 ddcServer.localText = sess['localText']
> >                 ddcServer.ddcSearch = sess['ddcSearch']
> >                 req.write("data has finished loading\n")
> > #       ddcServer.do_GET()
> >         return apache.OK
> >
> > -------
> > Session is new
> > MemoryError raised
> >
> > _______________________________________________
> > Mod_python mailing list
> > Mod_python@modpython.org
> > http://mailman.modpython.org/mailman/listinfo/mod_python
> >
> 
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>
From grisha at modpython.org  Tue Feb 15 10:30:18 2005
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Tue Feb 15 10:30:27 2005
Subject: [mod_python] Session problems
In-Reply-To: <4d11484d050215064535626ec2@mail.gmail.com>
References: <811A02A11096B343880D2EEF72C4C832551D23@OAEXCH2SERVER.oa.oclc.org>
	<4d11484d050215064535626ec2@mail.gmail.com>
Message-ID: <20050215101616.C2847@grisha.dyndns.org>



On Tue, 15 Feb 2005, Chris Jackson wrote:

>> ddcSearch is a fairly large and complex object.  Does this matter?  I'm
>> running apache 2.0.40 and mod_python-3.1.3.

It may matter depending on the underlying db being chosen. I can't find 
any references to it right now, but I'm pretty sure there is a limit on 
size on dbhash, but if you force it to a higher-end dbm, e.g. gdbm, it may 
work better.

Grisha
From christopher.jackson at gmail.com  Tue Feb 15 10:30:49 2005
From: christopher.jackson at gmail.com (Chris Jackson)
Date: Tue Feb 15 10:30:52 2005
Subject: [mod_python] Filtering POST requests (req.read ())
In-Reply-To: <200502151630.31313.vladap@criticalpublics.com>
References: <200502151630.31313.vladap@criticalpublics.com>
Message-ID: <4d11484d05021507303ae46764@mail.gmail.com>

One side suggestion would also be to use req.form , like so:

my_list_of_special_field_names = ['special1', 'special2', 'special3']
for special in my_list_of_special_field_names:
    if special in req.form:
        return apache.HTTP_FORBIDDEN

req.form holds all fields whether it's from POST or GET.

If you're looking to see if certain values of the fields are
forbidden, you can always do:

if req.form.has_key("forbidden_value"):  # etc, etc.

I'm unsure if this helps you any, but I figured I'd post it anyway.

~= Chris =~


On Tue, 15 Feb 2005 16:30:31 +0200, Vladimir Petrovic
<vladap@criticalpublics.com> wrote:
> In my setup, apache is acting like a reverse proxy to the application server
> (Zope). The setup uses proxy rewrite rules. I would like to setup a modpython
> handler which will inspect all POST requests and it will block the request if
> some special field names are used.
> 
> I've setup PythonPostReadRequestHandler
> with the following code:
> 
> fs = util.FieldStorage (req)
> for k in fs.keys ():
>   if not check_field_name (k): return apache.HTTP_FORBIDDEN
> 
> return apache.OK
> 
> If the POST request contain an invalid field apache returns FORBIDDEN error as
> it should. But if the request doesn't contain invalid field names, then the
> request is "blocked", the client doesn't get any reply. The same happens if I
> just call req.read () inside the handler.
> 
> It seems that calls to req.read () inside FieldStorage use all request data
> that client sends, and after the handler returns the request gets blocked. Is
> there a way to solve this problem or is there an alternative way to inspect
> POST data ?
> 
> thank you,
> Vladimir
> 
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>
From wagnerh at oclc.org  Tue Feb 15 12:26:53 2005
From: wagnerh at oclc.org (Wagner,Harry)
Date: Tue Feb 15 12:26:57 2005
Subject: [mod_python] Session problems
Message-ID: <811A02A11096B343880D2EEF72C4C832551D2B@OAEXCH2SERVER.oa.oclc.org>


On Tue, 15 Feb 2005, Chris Jackson wrote:

>> ddcSearch is a fairly large and complex object.  Does this matter?  
>> I'm running apache 2.0.40 and mod_python-3.1.3.

It may matter depending on the underlying db being chosen. I can't find
any references to it right now, but I'm pretty sure there is a limit on
size on dbhash, but if you force it to a higher-end dbm, e.g. gdbm, it
may work better.

----

Thanks Grisha, I tried it with gdbm (see below) and could not see any
difference.  It still fails on the sess.save() line.  I still don't have
a clue why it is failing.  The ddcSearch object is big, but not that big
(163M)...

sess = Session.DbmSession(req,ddc,,,gdbm)

From christopher.jackson at gmail.com  Tue Feb 15 13:03:58 2005
From: christopher.jackson at gmail.com (Chris Jackson)
Date: Tue Feb 15 13:04:02 2005
Subject: [mod_python] Filtering POST requests (req.read ())
In-Reply-To: <200502151921.05966.vladap@criticalpublics.com>
References: <200502151630.31313.vladap@criticalpublics.com>
	<4d11484d05021507303ae46764@mail.gmail.com>
	<200502151921.05966.vladap@criticalpublics.com>
Message-ID: <4d11484d05021510031840ca23@mail.gmail.com>

[+ adding mod_python]


On Tue, 15 Feb 2005 19:21:05 +0200, Vladimir Petrovic
<vladap@criticalpublics.com> wrote:
> On Tuesday 15 February 2005 17:30, Chris Jackson wrote:
> > One side suggestion would also be to use req.form , like so:
> >
> > my_list_of_special_field_names = ['special1', 'special2', 'special3']
> > for special in my_list_of_special_field_names:
> >     if special in req.form:
> >         return apache.HTTP_FORBIDDEN
> >
> > req.form holds all fields whether it's from POST or GET.
> >
> 
> thanks for the tip, but it seems that field "form" in not defined inside the
> request object at this stage (and it is not mentioned in the documentation
> (http://www.modpython.org/live/current/doc-html/pyapi-mprequest-mem.html)
> 
> Documentation mentions "form" is created inside request object only for the
> publisher handler. But I just want to check the form and then pass it by
> rewrite rule to mod_proxy, and it seems to me that publish handler can't
> acomplish that. I could create a publish handler and the use urllib to make
> actual request (instead of mod_proxy), but that doesn't look too nice and
> simple.
> 
> Vladimir
> 
>
From christopher.jackson at gmail.com  Tue Feb 15 17:18:14 2005
From: christopher.jackson at gmail.com (Chris Jackson)
Date: Tue Feb 15 17:18:17 2005
Subject: [mod_python] Sending headers
Message-ID: <4d11484d0502151418bbec5eb@mail.gmail.com>

Is there a mod_python equivalent of sending headers such as this PHP
example using a header() method:

<?php
  if (!isset($_SERVER['PHP_AUTH_USER'])) {
   header('WWW-Authenticate: Basic realm="My Realm"');
   header('HTTP/1.0 401 Unauthorized');
   echo 'Text to send if user hits Cancel button';
   exit;
.....
http://us2.php.net/manual/en/features.http-auth.php

~= Chris =~
From jrraines at comcast.net  Tue Feb 15 18:22:32 2005
From: jrraines at comcast.net (John Raines)
Date: Tue Feb 15 18:22:37 2005
Subject: [mod_python] trying to upgrade to Python2.4, Apache2.0.53,
	Mod_Python3.1.4 on Mac OsX
Message-ID: <07034a5912f40584956039efa9b076b1@comcast.net>

My website had been stable and running without error but I'd been 
running on 2.3.3, 2.0.52 and 3.1.3; since everything was behind the 
times I decided to finally reinstall; I made the mistake of doing it on 
the drive that everything was being served off of instead of using my 
backup drive. :-(

I installed python 2.4 and it seems to work when I call it from the 
shell. I did not do a frameworkInstall, which seems to be recommended 
by some people. I am too much of a unix novice to understand what the 
implications of frameworkInstall are. I installed apache and mod_python 
as follows:

cd ~/Desktop/httpd-2.0.53
./configure --enable-so --with-mpm=worker
make
sudo make install

cd ~/Desktop/mod_python-3.1.4
./configure --with apxs=/usr/local/apache2/bin/apxs 
--with-python=/usr/local/bin/python2.4
make
sudo make install

I restored my old httpd.conf file and my website files. My index.html 
file is straight html which links to .py files. As soon as I try to 
access any of the .py stuff I now get an internal server error message 
and the server log shows this:

[Tue Feb 15 16:25:25 2005] [notice] mod_python: Creating 32 session 
mutexes based on 6 max processes and 25 max threads.
[Tue Feb 15 16:25:25 2005] [notice] Apache configured -- resuming 
normal operations
[Tue Feb 15 16:25:36 2005] [error] make_obcallback: could not import 
mod_python.apache.\n
Traceback (most recent call last):
   File "/usr/local/lib/python2.4/site-packages/mod_python/apache.py", 
line 22, in ?
     import time
ImportError: Failure linking new module: : dyld: 
/usr/local/apache2/bin/httpd Undefined symbols:
/usr/local/lib/python2.4/lib-dynload/time.so undefined reference to 
_PyArg_Parse expected to be defined in the executable
/usr/local/lib/python2.4/lib-dynload/time.so undefined reference to 
_PyArg_ParseTuple expected to be defined in the executable
/usr/local/lib/python2.4/lib-dynload/time.so undefined reference to 
_PyDict_GetItemString expected to be defined in the executable
/usr/local/lib/python2.4/lib-dynload/time.so un                         
                                                              <--what 
happened here??
[Tue Feb 15 16:25:36 2005] [error] make_obcallback: could not import 
mod_python.apache.

for what its worth I can access various parts of the time module when I 
run Python2.4 from the shell.

Going back through the the mailing list I saw that Graham Dumpleton 
(back on Dec 23) suggested the output from this might be useful; what I 
get is different from what he saw but I'm not sure what to make of my 
result:

jraines-Computer:~/Desktop/Website jrraines$ otool otool -L 
/usr/local/apache2/modules/mod_python.so
otool: can't open file: otool (No such file or directory)
/usr/local/apache2/modules/mod_python.so:
         /usr/lib/libSystem.B.dylib (compatibility version 1.0.0, 
current version 71.1.1)

jraines-Computer:~/Desktop/Website jrraines$ ls 
/usr/local/apache2/modules
httpd.exp       mod_python.so

My problem seemed like it might be similar to a thread titled Weird 
ob_callback problems at the end of Jan. I tried the suggestions Grisha 
made:Try defining DYLD_FORCE_FLAT_NAMESPACE=1 environment variable 
before launching httpd.
That didn't help either.

From grahamd at dscpl.com.au  Tue Feb 15 18:50:35 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Tue Feb 15 18:50:57 2005
Subject: [mod_python] trying to upgrade to Python2.4, Apache2.0.53,
	Mod_Python3.1.4 on Mac OsX
Message-ID: <1108511435.9372@dscpl.user.openhosting.com>

If you really want to use Python 2.4, you are going to have to somehow
force a reference to the Python library in mod_python.so. Since you aren't
using a framework install, not sure what the library is you have to force
link with. You might want to look for Python related libraries in such
directories as:

  /usr/local/lib
  /usr/local/lib/python2.4/config

BTW, is there anything you really want in Python 2.4? Especially if you are
a UNIX novice, trying to host two different versions of Python on MacOSX
can be a problem. I guess at least you didn't use a framework install and
do it on top of the system supplied version of Python. Doing that can
really screw things up bad.

The only catch on using standard MacOSX Python installation is that you
need to patch src/mod_python.c file in source to workaround a problem
with it. Use of "worker" may also trigger some other mod_python bugs.
Fixes for both are detailed in:

  http://www.dscpl.com.au/projects/vampire/PATCHES

Graham

John Raines wrote ..
> My website had been stable and running without error but I'd been 
> running on 2.3.3, 2.0.52 and 3.1.3; since everything was behind the 
> times I decided to finally reinstall; I made the mistake of doing it on
> the drive that everything was being served off of instead of using my 
> backup drive. :-(
> 
> I installed python 2.4 and it seems to work when I call it from the 
> shell. I did not do a frameworkInstall, which seems to be recommended 
> by some people. I am too much of a unix novice to understand what the 
> implications of frameworkInstall are. I installed apache and mod_python
> as follows:
> 
> cd ~/Desktop/httpd-2.0.53
> ./configure --enable-so --with-mpm=worker
> make
> sudo make install
> 
> cd ~/Desktop/mod_python-3.1.4
> ./configure --with apxs=/usr/local/apache2/bin/apxs 
> --with-python=/usr/local/bin/python2.4
> make
> sudo make install
> 
> I restored my old httpd.conf file and my website files. My index.html 
> file is straight html which links to .py files. As soon as I try to 
> access any of the .py stuff I now get an internal server error message
> and the server log shows this:
> 
> [Tue Feb 15 16:25:25 2005] [notice] mod_python: Creating 32 session 
> mutexes based on 6 max processes and 25 max threads.
> [Tue Feb 15 16:25:25 2005] [notice] Apache configured -- resuming 
> normal operations
> [Tue Feb 15 16:25:36 2005] [error] make_obcallback: could not import 
> mod_python.apache.\n
> Traceback (most recent call last):
>    File "/usr/local/lib/python2.4/site-packages/mod_python/apache.py",
> line 22, in ?
>      import time
> ImportError: Failure linking new module: : dyld: 
> /usr/local/apache2/bin/httpd Undefined symbols:
> /usr/local/lib/python2.4/lib-dynload/time.so undefined reference to 
> _PyArg_Parse expected to be defined in the executable
> /usr/local/lib/python2.4/lib-dynload/time.so undefined reference to 
> _PyArg_ParseTuple expected to be defined in the executable
> /usr/local/lib/python2.4/lib-dynload/time.so undefined reference to 
> _PyDict_GetItemString expected to be defined in the executable
> /usr/local/lib/python2.4/lib-dynload/time.so un                       
>                                                               <--what 
> happened here??
> [Tue Feb 15 16:25:36 2005] [error] make_obcallback: could not import 
> mod_python.apache.
> 
> for what its worth I can access various parts of the time module when I
> run Python2.4 from the shell.
> 
> Going back through the the mailing list I saw that Graham Dumpleton 
> (back on Dec 23) suggested the output from this might be useful; what I
> get is different from what he saw but I'm not sure what to make of my 
> result:
> 
> jraines-Computer:~/Desktop/Website jrraines$ otool otool -L 
> /usr/local/apache2/modules/mod_python.so
> otool: can't open file: otool (No such file or directory)
> /usr/local/apache2/modules/mod_python.so:
>          /usr/lib/libSystem.B.dylib (compatibility version 1.0.0, 
> current version 71.1.1)
> 
> jraines-Computer:~/Desktop/Website jrraines$ ls 
> /usr/local/apache2/modules
> httpd.exp       mod_python.so
> 
> My problem seemed like it might be similar to a thread titled Weird 
> ob_callback problems at the end of Jan. I tried the suggestions Grisha
> made:Try defining DYLD_FORCE_FLAT_NAMESPACE=1 environment variable 
> before launching httpd.
> That didn't help either.
> 
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
From jrraines at comcast.net  Tue Feb 15 19:40:23 2005
From: jrraines at comcast.net (John Raines)
Date: Tue Feb 15 19:40:32 2005
Subject: [mod_python] trying to upgrade to Python2.4, Apache2.0.53,
	Mod_Python3.1.4 on Mac OsX
In-Reply-To: <1108511435.9372@dscpl.user.openhosting.com>
References: <1108511435.9372@dscpl.user.openhosting.com>
Message-ID: <6f449f886ab876da422c72fb6990c953@comcast.net>

The libraries certainly seem to be there:

jraines-Computer:/usr/local jrraines$ ls lib/python2.4/config
Makefile        Setup           Setup.config    Setup.local     
config.c        config.c.in     install-sh      libpython2.4.a  
makesetup       python.o
jraines-Computer:/usr/local jrraines$ ls 
lib/python2.4/site-packages/mod_python
Cookie.py       Session.py      __init__.py     _psp.so         
apache.pyo      cgihandler.pyo  psp.pyo         publisher.pyo   
util.pyo
Cookie.pyc      Session.pyc     __init__.pyc    apache.py       
cgihandler.py   psp.py          publisher.py    util.py
Cookie.pyo      Session.pyo     __init__.pyo    apache.pyc      
cgihandler.pyc  psp.pyc         publisher.pyc   util.pyc

jraines-Computer:/usr/local jrraines$ ls
apache2 bin     include lib     man     share

jraines-Computer:/usr/local jrraines$ ls bin
AlchemyTVSetTuner       pcpmac                  pmvmac                  
psync                   python2.4
idle                    pgetfinfo               psetfinfo               
pydoc                   smtpd.py

jraines-Computer:/usr/local jrraines$ ls lib/python2.4/lib-dynload
ColorPicker.so          _Evt.so                 _Qt.so                  
_csv.so                 audioop.so              gestalt.so              
regex.so
MacOS.so                _File.so                _Res.so                 
_curses.so              autoGIL.so              grp.so                  
resource.so
Nav.so                  _Fm.so                  _Scrap.so               
_curses_panel.so        binascii.so             icglue.so               
rgbimg.so
OSATerminology.so       _Folder.so              _Snd.so                 
_heapq.so               bsddb185.so             imageop.so              
select.so
_AE.so                  _Help.so                _TE.so                  
_hotshot.so             bz2.so                  itertools.so            
sha.so
_AH.so                  _IBCarbon.so            _Win.so                 
_locale.so              cPickle.so              math.so                 
strop.so
_App.so                 _Icn.so                 _bisect.so              
_multibytecodec.so      cStringIO.so            md5.so                  
struct.so
_CF.so                  _Launch.so              _bsddb.so               
_random.so              cmath.so                mmap.so                 
syslog.so
_CG.so                  _List.so                _codecs_cn.so           
_socket.so              collections.so          nis.so                  
termios.so
_CarbonEvt.so           _Menu.so                _codecs_hk.so           
_ssl.so                 crypt.so                operator.so             
time.so
_Cm.so                  _Mlte.so                _codecs_iso2022.so      
_testcapi.so            datetime.so             parser.so               
timing.so
_Ctl.so                 _OSA.so                 _codecs_jp.so           
_tkinter.so             dbm.so                  pwd.so                  
unicodedata.so
_Dlg.so                 _Qd.so                  _codecs_kr.so           
_weakref.so             fcntl.so                pyexpat.so              
zlib.so
_Drag.so                _Qdoffs.so              _codecs_tw.so           
array.so                gdbm.so                 readline.so

I thought linking Mod_Python to the Python 2.4 code was taken care of 
by the "--with-python=/usr/local/bin/python2.4" ? It seems to have 
gotten the site-packages directory put into the right location.

On Feb 15, 2005, at 5:50 PM, Graham Dumpleton wrote:

> If you really want to use Python 2.4, you are going to have to somehow
> force a reference to the Python library in mod_python.so. Since you 
> aren't
> using a framework install, not sure what the library is you have to 
> force
> link with. You might want to look for Python related libraries in such
> directories as:
>
>   /usr/local/lib
>   /usr/local/lib/python2.4/config
>
> BTW, is there anything you really want in Python 2.4? Especially if 
> you are
> a UNIX novice, trying to host two different versions of Python on 
> MacOSX
> can be a problem. I guess at least you didn't use a framework install 
> and
> do it on top of the system supplied version of Python. Doing that can
> really screw things up bad.
>
> The only catch on using standard MacOSX Python installation is that you
> need to patch src/mod_python.c file in source to workaround a problem
> with it. Use of "worker" may also trigger some other mod_python bugs.
> Fixes for both are detailed in:
>
>   http://www.dscpl.com.au/projects/vampire/PATCHES
>
> Graham
>
> John Raines wrote ..
>> My website had been stable and running without error but I'd been
>> running on 2.3.3, 2.0.52 and 3.1.3; since everything was behind the
>> times I decided to finally reinstall; I made the mistake of doing it 
>> on
>> the drive that everything was being served off of instead of using my
>> backup drive. :-(
>>
>> I installed python 2.4 and it seems to work when I call it from the
>> shell. I did not do a frameworkInstall, which seems to be recommended
>> by some people. I am too much of a unix novice to understand what the
>> implications of frameworkInstall are. I installed apache and 
>> mod_python
>> as follows:
>>
>> cd ~/Desktop/httpd-2.0.53
>> ./configure --enable-so --with-mpm=worker
>> make
>> sudo make install
>>
>> cd ~/Desktop/mod_python-3.1.4
>> ./configure --with apxs=/usr/local/apache2/bin/apxs
>> --with-python=/usr/local/bin/python2.4
>> make
>> sudo make install
>>
>> I restored my old httpd.conf file and my website files. My index.html
>> file is straight html which links to .py files. As soon as I try to
>> access any of the .py stuff I now get an internal server error message
>> and the server log shows this:
>>
>> [Tue Feb 15 16:25:25 2005] [notice] mod_python: Creating 32 session
>> mutexes based on 6 max processes and 25 max threads.
>> [Tue Feb 15 16:25:25 2005] [notice] Apache configured -- resuming
>> normal operations
>> [Tue Feb 15 16:25:36 2005] [error] make_obcallback: could not import
>> mod_python.apache.\n
>> Traceback (most recent call last):
>>    File "/usr/local/lib/python2.4/site-packages/mod_python/apache.py",
>> line 22, in ?
>>      import time
>> ImportError: Failure linking new module: : dyld:
>> /usr/local/apache2/bin/httpd Undefined symbols:
>> /usr/local/lib/python2.4/lib-dynload/time.so undefined reference to
>> _PyArg_Parse expected to be defined in the executable
>> /usr/local/lib/python2.4/lib-dynload/time.so undefined reference to
>> _PyArg_ParseTuple expected to be defined in the executable
>> /usr/local/lib/python2.4/lib-dynload/time.so undefined reference to
>> _PyDict_GetItemString expected to be defined in the executable
>> /usr/local/lib/python2.4/lib-dynload/time.so un
>>                                                               <--what
>> happened here??
>> [Tue Feb 15 16:25:36 2005] [error] make_obcallback: could not import
>> mod_python.apache.
>>
>> for what its worth I can access various parts of the time module when 
>> I
>> run Python2.4 from the shell.
>>
>> Going back through the the mailing list I saw that Graham Dumpleton
>> (back on Dec 23) suggested the output from this might be useful; what 
>> I
>> get is different from what he saw but I'm not sure what to make of my
>> result:
>>
>> jraines-Computer:~/Desktop/Website jrraines$ otool otool -L
>> /usr/local/apache2/modules/mod_python.so
>> otool: can't open file: otool (No such file or directory)
>> /usr/local/apache2/modules/mod_python.so:
>>          /usr/lib/libSystem.B.dylib (compatibility version 1.0.0,
>> current version 71.1.1)
>>
>> jraines-Computer:~/Desktop/Website jrraines$ ls
>> /usr/local/apache2/modules
>> httpd.exp       mod_python.so
>>
>> My problem seemed like it might be similar to a thread titled Weird
>> ob_callback problems at the end of Jan. I tried the suggestions Grisha
>> made:Try defining DYLD_FORCE_FLAT_NAMESPACE=1 environment variable
>> before launching httpd.
>> That didn't help either.
>>
>> _______________________________________________
>> Mod_python mailing list
>> Mod_python@modpython.org
>> http://mailman.modpython.org/mailman/listinfo/mod_python
>

From grahamd at dscpl.com.au  Tue Feb 15 20:06:14 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Tue Feb 15 20:06:17 2005
Subject: [mod_python] trying to upgrade to Python2.4, Apache2.0.53,
	Mod_Python3.1.4 on Mac OsX
Message-ID: <1108515974.10105@dscpl.user.openhosting.com>

The problem is that the libpython2.4.a is a static library and there
is not a dynamically loadable library. See following comment from the
mod_python README file:

  3. On Darwin, libpython cannot be linked statically with mod_python
  using libtool. libpython has to be a dynamic shared object. The Python
  distribution does not provide a way of building libpython as a shared
  library, but the Fink Python distribution comes with one
  (/sw/lib/python2.2/config/libpython2.2.dylib), so the easiest thing is
  to install Python from Fink (fink.sourceforge.net).

I would assume the same comment applies if building your own version
of Python on full MacOSX and where a framework install wasn't done.

Normally with a framework install, the dynamically loadable version is
installed under the framework package as:

  /System/Library/Frameworks/Python.framework/Versions/2.3/Python
 
If you run "otool -L" on your old mod_python.so which used standard
Python version, that is what you should have seen.

Your options thus seem to be:

1. Use standard Python 2.3 shipped with MacOSX.

2. Use Python 2.4 provided with "fink" packages.

3. Install Python 2.4 as a framework but make sure you install it
such that you don't overwrite the standard Python installation.

The safest and quickest thing to do is use Python 2.3 shipped with
the box. Using fink means a lot of crap get installed on your box
that you might not want. Installing Python 2.4 runs the risk of
trashing your system version of Python if you do the wrong thing.

Graham

John Raines wrote ..
> The libraries certainly seem to be there:
> 
> jraines-Computer:/usr/local jrraines$ ls lib/python2.4/config
> Makefile        Setup           Setup.config    Setup.local     
> config.c        config.c.in     install-sh      libpython2.4.a  
> makesetup       python.o
> jraines-Computer:/usr/local jrraines$ ls 
> lib/python2.4/site-packages/mod_python
> Cookie.py       Session.py      __init__.py     _psp.so         
> apache.pyo      cgihandler.pyo  psp.pyo         publisher.pyo   
> util.pyo
> Cookie.pyc      Session.pyc     __init__.pyc    apache.py       
> cgihandler.py   psp.py          publisher.py    util.py
> Cookie.pyo      Session.pyo     __init__.pyo    apache.pyc      
> cgihandler.pyc  psp.pyc         publisher.pyc   util.pyc
> 
> jraines-Computer:/usr/local jrraines$ ls
> apache2 bin     include lib     man     share
> 
> jraines-Computer:/usr/local jrraines$ ls bin
> AlchemyTVSetTuner       pcpmac                  pmvmac                
> psync                   python2.4
> idle                    pgetfinfo               psetfinfo             
> pydoc                   smtpd.py
> 
> jraines-Computer:/usr/local jrraines$ ls lib/python2.4/lib-dynload
> ColorPicker.so          _Evt.so                 _Qt.so                
> _csv.so                 audioop.so              gestalt.so            
> regex.so
> MacOS.so                _File.so                _Res.so               
> _curses.so              autoGIL.so              grp.so                
> resource.so
> Nav.so                  _Fm.so                  _Scrap.so             
> _curses_panel.so        binascii.so             icglue.so             
> rgbimg.so
> OSATerminology.so       _Folder.so              _Snd.so               
> _heapq.so               bsddb185.so             imageop.so            
> select.so
> _AE.so                  _Help.so                _TE.so                
> _hotshot.so             bz2.so                  itertools.so          
> sha.so
> _AH.so                  _IBCarbon.so            _Win.so               
> _locale.so              cPickle.so              math.so               
> strop.so
> _App.so                 _Icn.so                 _bisect.so            
> _multibytecodec.so      cStringIO.so            md5.so                
> struct.so
> _CF.so                  _Launch.so              _bsddb.so             
> _random.so              cmath.so                mmap.so               
> syslog.so
> _CG.so                  _List.so                _codecs_cn.so         
> _socket.so              collections.so          nis.so                
> termios.so
> _CarbonEvt.so           _Menu.so                _codecs_hk.so         
> _ssl.so                 crypt.so                operator.so           
> time.so
> _Cm.so                  _Mlte.so                _codecs_iso2022.so    
> _testcapi.so            datetime.so             parser.so             
> timing.so
> _Ctl.so                 _OSA.so                 _codecs_jp.so         
> _tkinter.so             dbm.so                  pwd.so                
> unicodedata.so
> _Dlg.so                 _Qd.so                  _codecs_kr.so         
> _weakref.so             fcntl.so                pyexpat.so            
> zlib.so
> _Drag.so                _Qdoffs.so              _codecs_tw.so         
> array.so                gdbm.so                 readline.so
> 
> I thought linking Mod_Python to the Python 2.4 code was taken care of 
> by the "--with-python=/usr/local/bin/python2.4" ? It seems to have 
> gotten the site-packages directory put into the right location.
> 
> On Feb 15, 2005, at 5:50 PM, Graham Dumpleton wrote:
> 
> > If you really want to use Python 2.4, you are going to have to somehow
> > force a reference to the Python library in mod_python.so. Since you 
> > aren't
> > using a framework install, not sure what the library is you have to 
> > force
> > link with. You might want to look for Python related libraries in such
> > directories as:
> >
> >   /usr/local/lib
> >   /usr/local/lib/python2.4/config
> >
> > BTW, is there anything you really want in Python 2.4? Especially if 
> > you are
> > a UNIX novice, trying to host two different versions of Python on 
> > MacOSX
> > can be a problem. I guess at least you didn't use a framework install
> > and
> > do it on top of the system supplied version of Python. Doing that can
> > really screw things up bad.
> >
> > The only catch on using standard MacOSX Python installation is that you
> > need to patch src/mod_python.c file in source to workaround a problem
> > with it. Use of "worker" may also trigger some other mod_python bugs.
> > Fixes for both are detailed in:
> >
> >   http://www.dscpl.com.au/projects/vampire/PATCHES
> >
> > Graham
> >
> > John Raines wrote ..
> >> My website had been stable and running without error but I'd been
> >> running on 2.3.3, 2.0.52 and 3.1.3; since everything was behind the
> >> times I decided to finally reinstall; I made the mistake of doing it
> >> on
> >> the drive that everything was being served off of instead of using my
> >> backup drive. :-(
> >>
> >> I installed python 2.4 and it seems to work when I call it from the
> >> shell. I did not do a frameworkInstall, which seems to be recommended
> >> by some people. I am too much of a unix novice to understand what the
> >> implications of frameworkInstall are. I installed apache and 
> >> mod_python
> >> as follows:
> >>
> >> cd ~/Desktop/httpd-2.0.53
> >> ./configure --enable-so --with-mpm=worker
> >> make
> >> sudo make install
> >>
> >> cd ~/Desktop/mod_python-3.1.4
> >> ./configure --with apxs=/usr/local/apache2/bin/apxs
> >> --with-python=/usr/local/bin/python2.4
> >> make
> >> sudo make install
> >>
> >> I restored my old httpd.conf file and my website files. My index.html
> >> file is straight html which links to .py files. As soon as I try to
> >> access any of the .py stuff I now get an internal server error message
> >> and the server log shows this:
> >>
> >> [Tue Feb 15 16:25:25 2005] [notice] mod_python: Creating 32 session
> >> mutexes based on 6 max processes and 25 max threads.
> >> [Tue Feb 15 16:25:25 2005] [notice] Apache configured -- resuming
> >> normal operations
> >> [Tue Feb 15 16:25:36 2005] [error] make_obcallback: could not import
> >> mod_python.apache.\n
> >> Traceback (most recent call last):
> >>    File "/usr/local/lib/python2.4/site-packages/mod_python/apache.py",
> >> line 22, in ?
> >>      import time
> >> ImportError: Failure linking new module: : dyld:
> >> /usr/local/apache2/bin/httpd Undefined symbols:
> >> /usr/local/lib/python2.4/lib-dynload/time.so undefined reference to
> >> _PyArg_Parse expected to be defined in the executable
> >> /usr/local/lib/python2.4/lib-dynload/time.so undefined reference to
> >> _PyArg_ParseTuple expected to be defined in the executable
> >> /usr/local/lib/python2.4/lib-dynload/time.so undefined reference to
> >> _PyDict_GetItemString expected to be defined in the executable
> >> /usr/local/lib/python2.4/lib-dynload/time.so un
> >>                                                               <--what
> >> happened here??
> >> [Tue Feb 15 16:25:36 2005] [error] make_obcallback: could not import
> >> mod_python.apache.
> >>
> >> for what its worth I can access various parts of the time module when
> >> I
> >> run Python2.4 from the shell.
> >>
> >> Going back through the the mailing list I saw that Graham Dumpleton
> >> (back on Dec 23) suggested the output from this might be useful; what
> >> I
> >> get is different from what he saw but I'm not sure what to make of my
> >> result:
> >>
> >> jraines-Computer:~/Desktop/Website jrraines$ otool otool -L
> >> /usr/local/apache2/modules/mod_python.so
> >> otool: can't open file: otool (No such file or directory)
> >> /usr/local/apache2/modules/mod_python.so:
> >>          /usr/lib/libSystem.B.dylib (compatibility version 1.0.0,
> >> current version 71.1.1)
> >>
> >> jraines-Computer:~/Desktop/Website jrraines$ ls
> >> /usr/local/apache2/modules
> >> httpd.exp       mod_python.so
> >>
> >> My problem seemed like it might be similar to a thread titled Weird
> >> ob_callback problems at the end of Jan. I tried the suggestions Grisha
> >> made:Try defining DYLD_FORCE_FLAT_NAMESPACE=1 environment variable
> >> before launching httpd.
> >> That didn't help either.
> >>
> >> _______________________________________________
> >> Mod_python mailing list
> >> Mod_python@modpython.org
> >> http://mailman.modpython.org/mailman/listinfo/mod_python
> >
> 
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
From bl at netgroup.dk  Wed Feb 16 02:28:39 2005
From: bl at netgroup.dk (Bo Lorentsen)
Date: Wed Feb 16 02:28:43 2005
Subject: [mod_python] Sending headers
In-Reply-To: <4d11484d0502151418bbec5eb@mail.gmail.com>
References: <4d11484d0502151418bbec5eb@mail.gmail.com>
Message-ID: <4212F627.2050603@netgroup.dk>

Chris Jackson wrote:

>Is there a mod_python equivalent of sending headers such as this PHP
>example using a header() method:
>
>  
>
Yeps, how about :

def request( req ):
    req.header_out[ 'WWW-Authentication' ] = 'Basic realm="My Realm"'

    req.write( 'Text to send if user hits Cancel buBasic realm="My 
Realm"tton' )

   return apache.OK

Is this what you was looking for  ?

><?php
>  if (!isset($_SERVER['PHP_AUTH_USER'])) {
>   header('WWW-Authenticate: Basic realm="My Realm"');
>   header('HTTP/1.0 401 Unauthorized');
>  
>
Hmm, this makes no sense to me.

>   echo 'Text to send if user hits Cancel buBasic realm="My Realm"tton';
>   exit;
>.....
>  
>
/BL
From ron at udel.edu  Wed Feb 16 09:06:05 2005
From: ron at udel.edu (Ron Reisor)
Date: Wed Feb 16 09:06:10 2005
Subject: [mod_python] trying to upgrade to Python2.4, Apache2.0.53,
	Mod_Python3.1.4 on Mac OsX
In-Reply-To: <1108515974.10105@dscpl.user.openhosting.com>
References: <1108515974.10105@dscpl.user.openhosting.com>
Message-ID: <Pine.OSX.4.62.0502160850300.396@zim.nss.udel.edu>

The python that comes with MacOSX, currently 10.3.8, is /usr/bin/python 
and it appears to be 2.3.  Not 2.3.4 or 2.3.5, but 2.3.

The Apple built framework for this python is in /System/Library/Frameworks 
and this is where the shared libraries and other things, includeing the 
site-packages directory that works with this version of python. 
/usr/bin/python gets you all of this and the pieces all fit together.

If you build Python-2.4 using ./configure --enable-framework, it will 
build into /usr/local/bin/python and ignore the Apple built python 
libraries.

The default place for the framework will be /Library/Frameworks which is 
where user added frameworks go. Apple does put some of there own software 
there, like Compressor and Motion, but these are libraries not used by the 
System.  If you build your own python framework, it'll be in 
/Library/Frameworks and not clash with the /System/Library/Frameworks 
version.

The framework build works well, fits in best with Apple's dyld which is 
best in tune with these fancy dynamic libraries, and the Python developers 
support it well.

cheers,

Ron


On Tue, 15 Feb 2005, Graham Dumpleton wrote:

> The problem is that the libpython2.4.a is a static library and there
> is not a dynamically loadable library. See following comment from the
> mod_python README file:
>
>  3. On Darwin, libpython cannot be linked statically with mod_python
>  using libtool. libpython has to be a dynamic shared object. The Python
>  distribution does not provide a way of building libpython as a shared
>  library, but the Fink Python distribution comes with one
>  (/sw/lib/python2.2/config/libpython2.2.dylib), so the easiest thing is
>  to install Python from Fink (fink.sourceforge.net).
>
> I would assume the same comment applies if building your own version
> of Python on full MacOSX and where a framework install wasn't done.
>
> Normally with a framework install, the dynamically loadable version is
> installed under the framework package as:
>
>  /System/Library/Frameworks/Python.framework/Versions/2.3/Python
>
> If you run "otool -L" on your old mod_python.so which used standard
> Python version, that is what you should have seen.
>
> Your options thus seem to be:
>
> 1. Use standard Python 2.3 shipped with MacOSX.
>
> 2. Use Python 2.4 provided with "fink" packages.
>
> 3. Install Python 2.4 as a framework but make sure you install it
> such that you don't overwrite the standard Python installation.
>
> The safest and quickest thing to do is use Python 2.3 shipped with
> the box. Using fink means a lot of crap get installed on your box
> that you might not want. Installing Python 2.4 runs the risk of
> trashing your system version of Python if you do the wrong thing.
>
> Graham
>
> John Raines wrote ..
>> The libraries certainly seem to be there:
>>
>> jraines-Computer:/usr/local jrraines$ ls lib/python2.4/config
>> Makefile        Setup           Setup.config    Setup.local
>> config.c        config.c.in     install-sh      libpython2.4.a
>> makesetup       python.o
>> jraines-Computer:/usr/local jrraines$ ls
>> lib/python2.4/site-packages/mod_python
>> Cookie.py       Session.py      __init__.py     _psp.so
>> apache.pyo      cgihandler.pyo  psp.pyo         publisher.pyo
>> util.pyo
>> Cookie.pyc      Session.pyc     __init__.pyc    apache.py
>> cgihandler.py   psp.py          publisher.py    util.py
>> Cookie.pyo      Session.pyo     __init__.pyo    apache.pyc
>> cgihandler.pyc  psp.pyc         publisher.pyc   util.pyc
>>
>> jraines-Computer:/usr/local jrraines$ ls
>> apache2 bin     include lib     man     share
>>
>> jraines-Computer:/usr/local jrraines$ ls bin
>> AlchemyTVSetTuner       pcpmac                  pmvmac
>> psync                   python2.4
>> idle                    pgetfinfo               psetfinfo
>> pydoc                   smtpd.py
>>
>> jraines-Computer:/usr/local jrraines$ ls lib/python2.4/lib-dynload
>> ColorPicker.so          _Evt.so                 _Qt.so
>> _csv.so                 audioop.so              gestalt.so
>> regex.so
>> MacOS.so                _File.so                _Res.so
>> _curses.so              autoGIL.so              grp.so
>> resource.so
>> Nav.so                  _Fm.so                  _Scrap.so
>> _curses_panel.so        binascii.so             icglue.so
>> rgbimg.so
>> OSATerminology.so       _Folder.so              _Snd.so
>> _heapq.so               bsddb185.so             imageop.so
>> select.so
>> _AE.so                  _Help.so                _TE.so
>> _hotshot.so             bz2.so                  itertools.so
>> sha.so
>> _AH.so                  _IBCarbon.so            _Win.so
>> _locale.so              cPickle.so              math.so
>> strop.so
>> _App.so                 _Icn.so                 _bisect.so
>> _multibytecodec.so      cStringIO.so            md5.so
>> struct.so
>> _CF.so                  _Launch.so              _bsddb.so
>> _random.so              cmath.so                mmap.so
>> syslog.so
>> _CG.so                  _List.so                _codecs_cn.so
>> _socket.so              collections.so          nis.so
>> termios.so
>> _CarbonEvt.so           _Menu.so                _codecs_hk.so
>> _ssl.so                 crypt.so                operator.so
>> time.so
>> _Cm.so                  _Mlte.so                _codecs_iso2022.so
>> _testcapi.so            datetime.so             parser.so
>> timing.so
>> _Ctl.so                 _OSA.so                 _codecs_jp.so
>> _tkinter.so             dbm.so                  pwd.so
>> unicodedata.so
>> _Dlg.so                 _Qd.so                  _codecs_kr.so
>> _weakref.so             fcntl.so                pyexpat.so
>> zlib.so
>> _Drag.so                _Qdoffs.so              _codecs_tw.so
>> array.so                gdbm.so                 readline.so
>>
>> I thought linking Mod_Python to the Python 2.4 code was taken care of
>> by the "--with-python=/usr/local/bin/python2.4" ? It seems to have
>> gotten the site-packages directory put into the right location.
>>
>> On Feb 15, 2005, at 5:50 PM, Graham Dumpleton wrote:
>>
>>> If you really want to use Python 2.4, you are going to have to somehow
>>> force a reference to the Python library in mod_python.so. Since you
>>> aren't
>>> using a framework install, not sure what the library is you have to
>>> force
>>> link with. You might want to look for Python related libraries in such
>>> directories as:
>>>
>>>   /usr/local/lib
>>>   /usr/local/lib/python2.4/config
>>>
>>> BTW, is there anything you really want in Python 2.4? Especially if
>>> you are
>>> a UNIX novice, trying to host two different versions of Python on
>>> MacOSX
>>> can be a problem. I guess at least you didn't use a framework install
>>> and
>>> do it on top of the system supplied version of Python. Doing that can
>>> really screw things up bad.
>>>
>>> The only catch on using standard MacOSX Python installation is that you
>>> need to patch src/mod_python.c file in source to workaround a problem
>>> with it. Use of "worker" may also trigger some other mod_python bugs.
>>> Fixes for both are detailed in:
>>>
>>>   http://www.dscpl.com.au/projects/vampire/PATCHES
>>>
>>> Graham
>>>
>>> John Raines wrote ..
>>>> My website had been stable and running without error but I'd been
>>>> running on 2.3.3, 2.0.52 and 3.1.3; since everything was behind the
>>>> times I decided to finally reinstall; I made the mistake of doing it
>>>> on
>>>> the drive that everything was being served off of instead of using my
>>>> backup drive. :-(
>>>>
>>>> I installed python 2.4 and it seems to work when I call it from the
>>>> shell. I did not do a frameworkInstall, which seems to be recommended
>>>> by some people. I am too much of a unix novice to understand what the
>>>> implications of frameworkInstall are. I installed apache and
>>>> mod_python
>>>> as follows:
>>>>
>>>> cd ~/Desktop/httpd-2.0.53
>>>> ./configure --enable-so --with-mpm=worker
>>>> make
>>>> sudo make install
>>>>
>>>> cd ~/Desktop/mod_python-3.1.4
>>>> ./configure --with apxs=/usr/local/apache2/bin/apxs
>>>> --with-python=/usr/local/bin/python2.4
>>>> make
>>>> sudo make install
>>>>
>>>> I restored my old httpd.conf file and my website files. My index.html
>>>> file is straight html which links to .py files. As soon as I try to
>>>> access any of the .py stuff I now get an internal server error message
>>>> and the server log shows this:
>>>>
>>>> [Tue Feb 15 16:25:25 2005] [notice] mod_python: Creating 32 session
>>>> mutexes based on 6 max processes and 25 max threads.
>>>> [Tue Feb 15 16:25:25 2005] [notice] Apache configured -- resuming
>>>> normal operations
>>>> [Tue Feb 15 16:25:36 2005] [error] make_obcallback: could not import
>>>> mod_python.apache.\n
>>>> Traceback (most recent call last):
>>>>    File "/usr/local/lib/python2.4/site-packages/mod_python/apache.py",
>>>> line 22, in ?
>>>>      import time
>>>> ImportError: Failure linking new module: : dyld:
>>>> /usr/local/apache2/bin/httpd Undefined symbols:
>>>> /usr/local/lib/python2.4/lib-dynload/time.so undefined reference to
>>>> _PyArg_Parse expected to be defined in the executable
>>>> /usr/local/lib/python2.4/lib-dynload/time.so undefined reference to
>>>> _PyArg_ParseTuple expected to be defined in the executable
>>>> /usr/local/lib/python2.4/lib-dynload/time.so undefined reference to
>>>> _PyDict_GetItemString expected to be defined in the executable
>>>> /usr/local/lib/python2.4/lib-dynload/time.so un
>>>>                                                               <--what
>>>> happened here??
>>>> [Tue Feb 15 16:25:36 2005] [error] make_obcallback: could not import
>>>> mod_python.apache.
>>>>
>>>> for what its worth I can access various parts of the time module when
>>>> I
>>>> run Python2.4 from the shell.
>>>>
>>>> Going back through the the mailing list I saw that Graham Dumpleton
>>>> (back on Dec 23) suggested the output from this might be useful; what
>>>> I
>>>> get is different from what he saw but I'm not sure what to make of my
>>>> result:
>>>>
>>>> jraines-Computer:~/Desktop/Website jrraines$ otool otool -L
>>>> /usr/local/apache2/modules/mod_python.so
>>>> otool: can't open file: otool (No such file or directory)
>>>> /usr/local/apache2/modules/mod_python.so:
>>>>          /usr/lib/libSystem.B.dylib (compatibility version 1.0.0,
>>>> current version 71.1.1)
>>>>
>>>> jraines-Computer:~/Desktop/Website jrraines$ ls
>>>> /usr/local/apache2/modules
>>>> httpd.exp       mod_python.so
>>>>
>>>> My problem seemed like it might be similar to a thread titled Weird
>>>> ob_callback problems at the end of Jan. I tried the suggestions Grisha
>>>> made:Try defining DYLD_FORCE_FLAT_NAMESPACE=1 environment variable
>>>> before launching httpd.
>>>> That didn't help either.
>>>>
>>>> _______________________________________________
>>>> Mod_python mailing list
>>>> Mod_python@modpython.org
>>>> http://mailman.modpython.org/mailman/listinfo/mod_python
>>>
>>
>> _______________________________________________
>> Mod_python mailing list
>> Mod_python@modpython.org
>> http://mailman.modpython.org/mailman/listinfo/mod_python
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>

Ron Reisor <ron@udel.edu> (RWR3)
University of Delaware Information Technologies/Network and Systems Services
Computing Center/192 South Chapel Street/Newark DE, 19716
pgp finger print: 0D 73 06 6F D3 6A 99 D3  F5 D5 6E FF 3B B9 7C 2C
From wagnerh at oclc.org  Wed Feb 16 10:00:57 2005
From: wagnerh at oclc.org (Wagner,Harry)
Date: Wed Feb 16 10:00:53 2005
Subject: [mod_python] DbmSession with gdbm
Message-ID: <811A02A11096B343880D2EEF72C4C832551D34@OAEXCH2SERVER.oa.oclc.org>

Has anyone had any success using mod_python with gdbm?  What do you
specify as your dbtype on your session init?  I've tried a number of
combinations, without success, such as:

sess =
Session.DbmSession(req,'/var/www/html2/mp_sess.dbm',None,None,'gdbm',0,0
)

Which results in:

<pre>
Mod_python error: "PythonHandler ddcServer3"

Traceback (most recent call last):

  File "/usr/local/lib/python2.3/site-packages/mod_python/apache.py",
line 299, in HandlerDispatch
    result = object(req)

  File "/var/www/html2/DDCBrowser/Clink/DDC/ddcServer3.py", line 30, in
handler
    sess.save()

  File "/usr/local/lib/python2.3/site-packages/mod_python/Session.py",
line 204, in save
    self.do_save(dict)

  File "/usr/local/lib/python2.3/site-packages/mod_python/Session.py",
line 327, in do_save
    dbm = self._get_dbm()

  File "/usr/local/lib/python2.3/site-packages/mod_python/Session.py",
line 302, in _get_dbm
    result = self._dbmtype.open(self._dbmfile, 'c')

AttributeError: 'str' object has no attribute 'open'

</pre>

From igor at rulim.de  Wed Feb 16 17:03:23 2005
From: igor at rulim.de (Igor Stroh)
Date: Wed Feb 16 17:03:32 2005
Subject: [mod_python] DbmSession with gdbm
In-Reply-To: <811A02A11096B343880D2EEF72C4C832551D34@OAEXCH2SERVER.oa.oclc.org>
References: <811A02A11096B343880D2EEF72C4C832551D34@OAEXCH2SERVER.oa.oclc.org>
Message-ID: <4213C32B.9070508@rulim.de>

Wagner,Harry wrote:
> Has anyone had any success using mod_python with gdbm?  What do you
> specify as your dbtype on your session init?  I've tried a number of
> combinations, without success, such as:
> 
> sess =
> Session.DbmSession(req,'/var/www/html2/mp_sess.dbm',None,None,'gdbm',0,0
> )

The dbmtype parameter is not supposed to be a string, but a specific
dbm implementation. You can safely skip all parameters after
dbm-filename, if you don't indent to implement your own session
handler.

This should work just fine:
sess = Session.DbmSession(req,'/var/www/html2/mp_sess.dbm')

HTH,
Igor

P.S. It's all in the API docs :)
From gdamjan at mail.net.mk  Thu Feb 17 00:11:46 2005
From: gdamjan at mail.net.mk (Damjan)
Date: Thu Feb 17 00:11:51 2005
Subject: [mod_python] Trouble with path= in apache.import_module
Message-ID: <20050217051146.GA13282@legolas.on.net.mk>

I have a file /home/www/simpletal/tttt.py, and modpython setup to
execute a handler (irelevant but the handler is mptal.py) in a
<Directory /home/www/simpletal> config tag, so that the
/home/www/simpletal direcotry is added to the sys.path y modpython.

In my handler I try to use apache.import_module. The problem is that:

apache.import_module('tttt') # Works, but
apache.import_module('tttt', path='/home/www/simpletal') # Doesn't work!

Obviously I'd like to limit the path where the modules is searched. Is
it possible, am I doing something wrong? 

(apache-2.0.53, modpython-3.1.4, Python-2.3.4, Linux)

The exception I get is:

Mod_python error: "PythonHandler mptal"

Traceback (most recent call last):

  File "/usr/lib/python2.3/site-packages/mod_python/apache.py", line
299, in HandlerDispatch
    result = object(req)

  File "/home/www/simpletal/mptal.py", line 60, in handler

  File "/home/www/simpletal/mptal.py", line 17, in test
    fn, ext = path.splitext(fn)

  File "/usr/lib/python2.3/site-packages/mod_python/apache.py", line
454, in import_module
    f, p, d = imp.find_module(parts[i], path)

ImportError: No frozen submodule named /home/www/simpletal.tttt


-- 
damjan | ??????
This is my jabber ID --> damjan@bagra.net.mk <-- not my mail address!!!
From grahamd at dscpl.com.au  Thu Feb 17 01:54:56 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Thu Feb 17 01:55:06 2005
Subject: [mod_python] Trouble with path= in apache.import_module
In-Reply-To: <20050217051146.GA13282@legolas.on.net.mk>
References: <20050217051146.GA13282@legolas.on.net.mk>
Message-ID: <079206adc4a2952350aecefc15689b66@dscpl.com.au>


On 17/02/2005, at 4:11 PM, Damjan wrote:

> I have a file /home/www/simpletal/tttt.py, and modpython setup to
> execute a handler (irelevant but the handler is mptal.py) in a
> <Directory /home/www/simpletal> config tag, so that the
> /home/www/simpletal direcotry is added to the sys.path y modpython.
>
> In my handler I try to use apache.import_module. The problem is that:
>
> apache.import_module('tttt') # Works, but
> apache.import_module('tttt', path='/home/www/simpletal') # Doesn't 
> work!

Try:

   apache.import_module('tttt', path=['/home/www/simpletal'])

Ie., path as a list instead of a string.

Graham

From ch.pingel at web.de  Thu Feb 17 04:42:15 2005
From: ch.pingel at web.de (Christoph Pingel)
Date: Thu Feb 17 04:42:19 2005
Subject: [mod_python] mod_python and db connections - architectural advice
	needed
Message-ID: <a06100500be3a06a610b3@[62.224.40.251]>

Hello,

I'm looking for good advice for the architecture of a web (service) 
application.

Using mod_python and psycopg, how do I *keep* a database connection 
while using and disposing of cursors? And how can I integrate the 
session handler with a (user specific) database connection?

I've got my application running, but I create and destroy db 
connections far too often. Is it, for example, good practice to pass 
a cursor into an object that abstracts the db connection details, 
rather than creating the cursor inside that abstraction and 
distroying it after every curs.execute?

I'm looking for references, hints, and especially programming examples.

TIA,
Christoph
From gdamjan at mail.net.mk  Thu Feb 17 04:48:54 2005
From: gdamjan at mail.net.mk (Damjan)
Date: Thu Feb 17 04:49:33 2005
Subject: [mod_python] Trouble with path= in apache.import_module
In-Reply-To: <079206adc4a2952350aecefc15689b66@dscpl.com.au>
References: <20050217051146.GA13282@legolas.on.net.mk>
	<079206adc4a2952350aecefc15689b66@dscpl.com.au>
Message-ID: <20050217094854.GA13953@legolas.on.net.mk>

> >I have a file /home/www/simpletal/tttt.py, and modpython setup to
> >execute a handler (irelevant but the handler is mptal.py) in a
> ><Directory /home/www/simpletal> config tag, so that the
> >/home/www/simpletal direcotry is added to the sys.path y modpython.
> >
> >In my handler I try to use apache.import_module. The problem is that:
> >
> >apache.import_module('tttt') # Works, but
> >apache.import_module('tttt', path='/home/www/simpletal') # Doesn't 
> >work!
> 
> Try:
> 
>   apache.import_module('tttt', path=['/home/www/simpletal'])
> 
> Ie., path as a list instead of a string.

Excelent, thank you.
Maybe the documentation should be made clearer on this?


-- 
damjan | ??????
This is my jabber ID --> damjan@bagra.net.mk <-- not my mail address!!!
From gdamjan at mail.net.mk  Thu Feb 17 06:17:12 2005
From: gdamjan at mail.net.mk (Damjan)
Date: Thu Feb 17 06:17:19 2005
Subject: [mod_python] [ANNOUNCE] Mod_python 3.1.4 and 2.7.11 (security)
In-Reply-To: <20050212215825.Y58134@grisha.dyndns.org>
References: <20050212215825.Y58134@grisha.dyndns.org>
Message-ID: <20050217111712.GA14043@legolas.on.net.mk>

> The Apache Software Foundation and The Apache HTTP Server Project are 
> pleased to announce the release of versions 3.1.4 and 2.7.11 of mod_python.

I'd like to report one bug and one wish list, both bothering me for some time.

1. [The BUG] My apache (2.0.53 on Slackware linux) is built with these parameters:
apxs -q CPPFLAGS =>  -D_LARGEFILE_SOURCE -D_FILE_OFFSET_BITS=64
apxs -q CFLAGS   =>  -pipe -O2 -march=i486

The problem is that mod_python's build system doesn't honor the CPPFLAGS
at all. There's no mention of CPPFLAGS in the ./configure script, not in
the generated Makefiles.

Compiled like that, and apache SegFaults on the first request - even a
request for a static page. I had to mannually tweak the Makefile's after
./configure was done to add those flags and compile a working
mod_python.


2. [The Wish] I'd suggest to tweak the ./configure script, to try to link 
to the python dynamic library first, and only if it fails to link the static.
The only change wuld be to first try to link without the 
'-L/usr/lib/python2.3/config' option.
A dynamically linked mod_python would get the benefit of always beeing
the same version with the installed Python when minor versions are
upgraded on the system. I've done this always and I've never had
problems.


-- 
damjan | ??????
This is my jabber ID --> damjan@bagra.net.mk <-- not my mail address!!!
From grahamd at dscpl.com.au  Thu Feb 17 06:29:54 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Thu Feb 17 06:30:04 2005
Subject: [mod_python] [ANNOUNCE] Mod_python 3.1.4 and 2.7.11 (security)
In-Reply-To: <20050217111712.GA14043@legolas.on.net.mk>
References: <20050212215825.Y58134@grisha.dyndns.org>
	<20050217111712.GA14043@legolas.on.net.mk>
Message-ID: <7fdddb1af3a88108e67df90de5341b29@dscpl.com.au>

It is suggested you log the bugs/requests at:

   http://issues.apache.org/jira/browse/MODPYTHON

This is because they most likely will be lost and overlooked if only
recorded here on the mailing list.

Graham

On 17/02/2005, at 10:17 PM, Damjan wrote:

>> The Apache Software Foundation and The Apache HTTP Server Project are
>> pleased to announce the release of versions 3.1.4 and 2.7.11 of 
>> mod_python.
>
> I'd like to report one bug and one wish list, both bothering me for 
> some time.
>
> 1. [The BUG] My apache (2.0.53 on Slackware linux) is built with these 
> parameters:
> apxs -q CPPFLAGS =>  -D_LARGEFILE_SOURCE -D_FILE_OFFSET_BITS=64
> apxs -q CFLAGS   =>  -pipe -O2 -march=i486
>
> The problem is that mod_python's build system doesn't honor the 
> CPPFLAGS
> at all. There's no mention of CPPFLAGS in the ./configure script, not 
> in
> the generated Makefiles.
>
> Compiled like that, and apache SegFaults on the first request - even a
> request for a static page. I had to mannually tweak the Makefile's 
> after
> ./configure was done to add those flags and compile a working
> mod_python.
>
>
> 2. [The Wish] I'd suggest to tweak the ./configure script, to try to 
> link
> to the python dynamic library first, and only if it fails to link the 
> static.
> The only change wuld be to first try to link without the
> '-L/usr/lib/python2.3/config' option.
> A dynamically linked mod_python would get the benefit of always beeing
> the same version with the installed Python when minor versions are
> upgraded on the system. I've done this always and I've never had
> problems.
>
>
> -- 
> damjan | ??????
> This is my jabber ID --> damjan@bagra.net.mk <-- not my mail address!!!
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python


From gustavo.cordova at q-voz.com  Thu Feb 17 12:08:43 2005
From: gustavo.cordova at q-voz.com (=?UTF-8?B?R3VzdGF2byBDw7NyZG92YSBBdmlsYQ==?=)
Date: Thu Feb 17 12:10:21 2005
Subject: [mod_python] mod_python and db connections - architectural advice
	needed
In-Reply-To: <a06100500be3a06a610b3@[62.224.40.251]>
References: <a06100500be3a06a610b3@[62.224.40.251]>
Message-ID: <4214CF9B.6040005@q-voz.com>

Christoph Pingel wrote:

> Hello,
>
> I'm looking for good advice for the architecture of a web (service) 
> application.
>
> Using mod_python and psycopg, how do I *keep* a database connection 
> while using and disposing of cursors? And how can I integrate the 
> session handler with a (user specific) database connection?
>
> I've got my application running, but I create and destroy db 
> connections far too often. Is it, for example, good practice to pass a 
> cursor into an object that abstracts the db connection details, rather 
> than creating the cursor inside that abstraction and distroying it 
> after every curs.execute?
>
> I'm looking for references, hints, and especially programming examples.
>
> TIA,
> Christoph

These are all very interesting questions, and many that I've asked myself.

When using psycopg in full isolation mode (fastest mode), then each 
cursor is an independent connection, and the driver keeps a pool of open 
connections in order to re-use previously closed ones (which aren't 
really closed) when a .cursor() request is made.

As such, each cursor has a commit() and rollback() method, and each 
cursor has independent transactions; this is only important for those of 
us who don't use autocommit.

I use the method you explain above, passing a reference to the cursor to 
use to all my DB accessing functions; but, because of the pool that 
psycopg keeps around, cursor creating and destroying is really really 
cheap, so if you design your application that way, it's no reall biggie.

BUT, I'd really like to hear other people's impressions on this.  One of 
the things I've bumped into is when creating the first connection, 
sometimes, upon initial import, many connections are made simultaneously 
and then abandoned, but not destroyed.  This really irks me; I've tried 
gating access to the base DB connection object with a lock, but it's no 
good.

The base DB object is a module-global reference to a psycopg connection, 
and I keep around a lock whenever I need to change it (because I use 
apache2 configured with worker). I don't know if I'm stepping on my own 
toes or what, but it works:

[code]
# module global database connection and it's lock.
DB = None
DBLOCK = thread.allocate_lock()

def Cursor():
    "Return a database cursor."
    global DB
    DBLOCK.acquire()
    try:
        # Try to return a cursor immediately.
        try:
            return DB.cursor()
        except:
            # Maybe the connection isn't open yet, or was dropped.
            DB = psycopg.connection(....)

            # Try to return a new cursor, again.
            try:
                return DB.cursor()
            except:
                # Something happened; leave a message.
                from traceback import format_exception
                for line in format_exception(*sys.exc_info()):
                    apache.log_error(line.rstrip(), apache.APLOG_ERR)
                DB = None
    finally:
        DBLOCK.free()
[/code]

So, the idea here is to immediately lock so that only a single thread
has access to DB; then try to return a new cursor as quick as possible;
if not, create a new connection and try to return a new cursor again;
if not, leave a message at the log and return None.

Somehow, this feels a bit "clunky" for me, and I might be doing something
horribly wrong.

Any takers?

-gca

-------------- next part --------------
A non-text attachment was scrubbed...
Name: gustavo.cordova.vcf
Type: text/x-vcard
Size: 196 bytes
Desc: not available
Url : http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20050217/2653f43c/gustavo.cordova.vcf
From grisha at modpython.org  Thu Feb 17 13:02:23 2005
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Thu Feb 17 13:02:27 2005
Subject: [mod_python] mod_python + Plone ?
Message-ID: <20050217130012.Q53907@grisha.dyndns.org>


Has anyone tried this?

http://zope.org/Members/pperegrina/ZopeHandler

Even better, if someone could figure out how to use this with plone and 
post results to the list, that'd be much appreciated!

Grisha
From grahamd at dscpl.com.au  Thu Feb 17 16:02:15 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Thu Feb 17 16:02:21 2005
Subject: [mod_python] mod_python and db connections - architectural advice
	needed
In-Reply-To: <4214CF9B.6040005@q-voz.com>
References: <a06100500be3a06a610b3@[62.224.40.251]>
	<4214CF9B.6040005@q-voz.com>
Message-ID: <d714236b0d352b95af15464983b76a50@dscpl.com.au>


On 18/02/2005, at 4:08 AM, Gustavo C?rdova Avila wrote:

> BUT, I'd really like to hear other people's impressions on this.  One 
> of the things I've bumped into is when creating the first connection, 
> sometimes, upon initial import, many connections are made 
> simultaneously and then abandoned, but not destroyed.  This really 
> irks me; I've tried gating access to the base DB connection object 
> with a lock, but it's no good.
>
> The base DB object is a module-global reference to a psycopg 
> connection, and I keep around a lock whenever I need to change it 
> (because I use apache2 configured with worker). I don't know if I'm 
> stepping on my own toes or what, but it works:

If you are using worker MPM, sounds like the abandoned and not 
destroyed connections
may relate to the thread locking and duplicate interpreter creation 
bugs I highlighted
end of last year.

The problem I am talking about was one where the same module could be 
imported into two
different threads at almost the same time. If the database connections 
were global data
and new imports just replaced the old, the first set to be created 
would effectively
be thrown away, but may not be shutdown properly.

The other problem is that two whole interpreters could be created at 
the same time for
the same part of the document tree. Again, one would get thrown away, 
but stuff like
database connections may not get shutdown properly.

Both these problems would manifest when using a multithreaded MPM and 
on startup there
was enough access going on to trigger the locking problems.

See:

   http://www.dscpl.com.au/projects/vampire/PATCHES

for the code fixes.

The problem may also be caused by using auto reload and not ensuring 
that you treat the
database connection pool specially so that the old doesn't just get 
reloaded on top of
with it being lost but not shutdown.

Graham


From grahamd at dscpl.com.au  Thu Feb 17 16:37:54 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Thu Feb 17 16:38:00 2005
Subject: [mod_python] Publisher and basic Python builtin types.
Message-ID: <9433c890660e204e4cb84d620aecb339@dscpl.com.au>

When using mod_python.publisher, it is possible to access both callable 
objects
and basic types. That is, for a callable object, such as a function, it 
will
execute it and pass to it any form parameters which match the function 
parameters.
If access is to a basic type, it will convert the data into a string 
and return
that.

In the latter case for basic types, it means one could define a 
complete HTML
page as:

   index = "<html>...</html>"

Apart from string types, does anyone in the way they use 
mod_python.publisher,
publish other basic types such as integers, floats, tuples, lists, 
dictionaries etc?

Apart from debugging purposes perhaps, I can't see any reason why one 
would have
a valid reason to publish other builtin types, since the result would 
be a plain
text page holding only the string representation of that type as 
displayed by
Python. I don't see this as any practical value in an application.

Similarly, when a callable object is executed, any result will be 
converted to
a string and displayed as is as well. Thus, returning anything but a 
string will
similarly not yield anything that might be that useful.

Anyone want to prove me wrong and describe any valid practical reasons 
for publishing
of other basic types besides strings, or returning from a method 
anything but a
string.

Oh, can we ignore for now instances of old or new style classes which 
may have
__str__ or __repr__ methods, am only interested in basic Python builtin 
types. :-)

Hopefully someone can satisfy my curiosity of what is common practice 
and what
isn't.

Thanks in advance.


Graham

From jjneely at pams.ncsu.edu  Thu Feb 17 17:42:06 2005
From: jjneely at pams.ncsu.edu (Jack Neely)
Date: Thu Feb 17 17:42:07 2005
Subject: [mod_python] mod_python losing variables and functions
Message-ID: <20050217224206.GK3271@anduril.pams.ncsu.edu>

Folks,

I've got a weird problem that I've been hanging my head against for some
time now.  I have a small XMLRPC client/server system that I used to
monitor several hundred Red Hat machines.  After a few days of running
(several hundred hits every 4 hours) the following traceback starts to
show up and the clients get a Internal Server Error.

[Thu Feb 17 16:28:20 2005] [error] [client 152.1.9.153] PythonHandler
handler: Traceback (most recent call last):
[Thu Feb 17 16:28:20 2005] [error] [client 152.1.9.153] PythonHandler
handler:  File
"/usr/src/build/513032-i386/install/usr/lib/python2.2/site-packages/mod_python/apache.py",
line 332, in HandlerDispatch
[Thu Feb 17 16:28:20 2005] [error] [client 152.1.9.153] PythonHandler
handler:  File "handler.py", line 66, in handler!    method_ret =
call_method(method, params, req)
[Thu Feb 17 16:28:20 2005] [error] [client 152.1.9.153] PythonHandler
handler:  File "handler.py", line 101, in call_method!    raise
Exception(s)
[Thu Feb 17 16:28:20 2005] [error] [client 152.1.9.153] PythonHandler
handler: Exception: AttributeError!  dir(API) = ['__builtins__',
'__doc__', '__file__', '__name__', 'req', 'socket']!Exception = 'module'
object has no attribute '__API__'!

Basically, my code imports a module called API which defines __API__
which is a list of strings.  Those strings represent the functions in
the API module that are exposed via the XMLRPC interface.  It is
completely losing __API__ and all my functions.

handler.py:
http://anduril.pams.ncsu.edu/~slack/handler.py

API.py:
http://anduril.pams.ncsu.edu/~slack/API.py

My google'ing has turned up an email or two that might be the same or
similar problem but no solutions or ideas what to look for.

My servier running apache/mod_python is RHEL 3.  python-2.2.3-6.1
mod_python-3.0.3-5.ent  httpd-2.0.46-44.ent

What really gets me is that I also maintain Current.
http://current.tigris.org  This XMLRPC server is based off of the
Current code which, to my knowledge has never hit this problem before.

Thanks!

Jack Neely

-- 
Jack Neely <slack@quackmaster.net>
Realm Linux Administration and Development
PAMS Computer Operations at NC State University
GPG Fingerprint: 1917 5AC1 E828 9337 7AA4  EA6B 213B 765F 3B6A 5B89
From grahamd at dscpl.com.au  Thu Feb 17 18:02:57 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Thu Feb 17 18:02:59 2005
Subject: [mod_python] mod_python losing variables and functions
Message-ID: <1108681377.5606@dscpl.user.openhosting.com>

Jack Neely wrote ..
> My servier running apache/mod_python is RHEL 3.  python-2.2.3-6.1
> mod_python-3.0.3-5.ent  httpd-2.0.46-44.ent
> 
> What really gets me is that I also maintain Current.
> http://current.tigris.org  This XMLRPC server is based off of the
> Current code which, to my knowledge has never hit this problem before.

You are running an old version of mod_python on the probematic site.
What version of mod_python are you running on the site that works all
the time?

Do you have anywhere else on the site any other files called API.py and
handler.py which might get loaded under a different URL?
From igor at rulim.de  Thu Feb 17 18:04:06 2005
From: igor at rulim.de (Igor Stroh)
Date: Thu Feb 17 18:04:15 2005
Subject: [mod_python] mod_python + Plone ?
In-Reply-To: <20050217130012.Q53907@grisha.dyndns.org>
References: <20050217130012.Q53907@grisha.dyndns.org>
Message-ID: <421522E6.8090207@rulim.de>

Gregory (Grisha) Trubetskoy wrote:
> 
> Has anyone tried this?
> 
> http://zope.org/Members/pperegrina/ZopeHandler
> 
> Even better, if someone could figure out how to use this with plone and 
> post results to the list, that'd be much appreciated!

It didn't work out for me, the ZopeHandler can't connect
to the specified ZEO server, connection to the same ZEO
server from a "vanilla" Zope client work as expected...

I'm not sure, but it looks like a threading problem[0] for me,
maybe I'm using the wrong apache2 version - I tried with
mpm-worker and mpm-prefork, both from Debian/unstable.

Plone is just a Zope-Product, if ZopeHandler is going
to work with ZEO then there's no reason why Plone
wouldn't work either :)

Cheers,
Igor

[0]: 
From jjneely at pams.ncsu.edu  Thu Feb 17 23:24:16 2005
From: jjneely at pams.ncsu.edu (Jack Neely)
Date: Thu Feb 17 23:24:18 2005
Subject: [mod_python] mod_python losing variables and functions
In-Reply-To: <1108681377.5606@dscpl.user.openhosting.com>
References: <1108681377.5606@dscpl.user.openhosting.com>
Message-ID: <20050218042416.GL3271@anduril.pams.ncsu.edu>

On Thu, Feb 17, 2005 at 06:02:57PM -0500, Graham Dumpleton wrote:
> Jack Neely wrote ..
> > My servier running apache/mod_python is RHEL 3.  python-2.2.3-6.1
> > mod_python-3.0.3-5.ent  httpd-2.0.46-44.ent
> > 
> > What really gets me is that I also maintain Current.
> > http://current.tigris.org  This XMLRPC server is based off of the
> > Current code which, to my knowledge has never hit this problem before.
> 
> You are running an old version of mod_python on the probematic site.

'eh...yeah I know.  RHEL3 is our current production level platform...I'd
rather not have to vary too much if I can get away with it.

> What version of mod_python are you running on the site that works all
> the time?
> 

I keep Current running on an FC3 box (mod_python-3.1.3-5) but I do test
on RHEL3 but probably not enough to hit this bug.  I don't have any
users complaining either.

> Do you have anywhere else on the site any other files called API.py and
> handler.py which might get loaded under a different URL?
> 

There is other mod_python code that gets run.  It doesn't use any files
called API.py or handler.py.  Its not an XMLRPC engine at all.  It
builds kickstarts.  I don't see how they would be conflicting.

I'm half way tempted to force the interperter to exit if I detect this
error condition....  Its been frustrating.

The other interesting part of this is that there are 2 servers behind an
LVS.  They both access the same filespace via AFS and do not have
permission to write to those directories.  This situation only seems to
happen on one of them.  I've checked the software on both machines and
I've got good installs.  

Thanks!
Jack 

-- 
Jack Neely <slack@quackmaster.net>
Realm Linux Administration and Development
PAMS Computer Operations at NC State University
GPG Fingerprint: 1917 5AC1 E828 9337 7AA4  EA6B 213B 765F 3B6A 5B89
From nicolas.lehuen at gmail.com  Fri Feb 18 01:59:53 2005
From: nicolas.lehuen at gmail.com (Nicolas Lehuen)
Date: Fri Feb 18 01:59:56 2005
Subject: [mod_python] mod_python losing variables and functions
In-Reply-To: <20050217224206.GK3271@anduril.pams.ncsu.edu>
References: <20050217224206.GK3271@anduril.pams.ncsu.edu>
Message-ID: <c298f2d70502172259285d07d2@mail.gmail.com>

On Thu, 17 Feb 2005 17:42:06 -0500, Jack Neely <jjneely@pams.ncsu.edu> wrote:
> Folks,
> 
> I've got a weird problem that I've been hanging my head against for some
> time now.  I have a small XMLRPC client/server system that I used to
> monitor several hundred Red Hat machines.  After a few days of running
> (several hundred hits every 4 hours) the following traceback starts to
> show up and the clients get a Internal Server Error.
> 
> [Thu Feb 17 16:28:20 2005] [error] [client 152.1.9.153] PythonHandler
> handler: Traceback (most recent call last):
> [Thu Feb 17 16:28:20 2005] [error] [client 152.1.9.153] PythonHandler
> handler:  File
> "/usr/src/build/513032-i386/install/usr/lib/python2.2/site-packages/mod_python/apache.py",
> line 332, in HandlerDispatch
> [Thu Feb 17 16:28:20 2005] [error] [client 152.1.9.153] PythonHandler
> handler:  File "handler.py", line 66, in handler!    method_ret =
> call_method(method, params, req)
> [Thu Feb 17 16:28:20 2005] [error] [client 152.1.9.153] PythonHandler
> handler:  File "handler.py", line 101, in call_method!    raise
> Exception(s)
> [Thu Feb 17 16:28:20 2005] [error] [client 152.1.9.153] PythonHandler
> handler: Exception: AttributeError!  dir(API) = ['__builtins__',
> '__doc__', '__file__', '__name__', 'req', 'socket']!Exception = 'module'
> object has no attribute '__API__'!
> 
> Basically, my code imports a module called API which defines __API__
> which is a list of strings.  Those strings represent the functions in
> the API module that are exposed via the XMLRPC interface.  It is
> completely losing __API__ and all my functions.
> 
> handler.py:
> http://anduril.pams.ncsu.edu/~slack/handler.py
> 
> API.py:
> http://anduril.pams.ncsu.edu/~slack/API.py

Your method for getting the __API__ attribute is a bit strange :

exports = eval("%s.__API__" % call)

Have you tried :

exports = getatttr(call,"__API__")

Does it raise the same exception ?

Regards,
Nicolas

> My google'ing has turned up an email or two that might be the same or
> similar problem but no solutions or ideas what to look for.
> 
> My servier running apache/mod_python is RHEL 3.  python-2.2.3-6.1
> mod_python-3.0.3-5.ent  httpd-2.0.46-44.ent
> 
> What really gets me is that I also maintain Current.
> http://current.tigris.org  This XMLRPC server is based off of the
> Current code which, to my knowledge has never hit this problem before.
> 
> Thanks!
> 
> Jack Neely
> 
> --
> Jack Neely <slack@quackmaster.net>
> Realm Linux Administration and Development
> PAMS Computer Operations at NC State University
> GPG Fingerprint: 1917 5AC1 E828 9337 7AA4  EA6B 213B 765F 3B6A 5B89
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>
From ionel.mc at gmail.com  Fri Feb 18 05:46:57 2005
From: ionel.mc at gmail.com (ionel)
Date: Fri Feb 18 05:47:00 2005
Subject: [mod_python] win32 binaries of mod_python ?
Message-ID: <b322b4e605021802464903dada@mail.gmail.com>

please don't tell me i have to compile it.


-- 
ionel.
From nicolas.lehuen at gmail.com  Fri Feb 18 06:14:56 2005
From: nicolas.lehuen at gmail.com (Nicolas Lehuen)
Date: Fri Feb 18 06:15:00 2005
Subject: [mod_python] win32 binaries of mod_python ?
In-Reply-To: <b322b4e605021802464903dada@mail.gmail.com>
References: <b322b4e605021802464903dada@mail.gmail.com>
Message-ID: <c298f2d705021803147bc61a23@mail.gmail.com>

You don't have to compile it if you want the 3.1.3 version for Python
2.3. For the 3.1.4 version, you'll have to wait a little. If you need
a version for Python 2.4, I can provide you one.

Regards,
Nicolas


On Fri, 18 Feb 2005 12:46:57 +0200, ionel <ionel.mc@gmail.com> wrote:
> please don't tell me i have to compile it.
> 
> --
> ionel.
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>
From grahamd at dscpl.com.au  Fri Feb 18 06:25:28 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Fri Feb 18 06:26:20 2005
Subject: [mod_python] win32 binaries of mod_python ?
In-Reply-To: <b322b4e605021802464903dada@mail.gmail.com>
References: <b322b4e605021802464903dada@mail.gmail.com>
Message-ID: <4bdd906ec94ef0eba89a74b9b37bf1d6@dscpl.com.au>


On 18/02/2005, at 9:46 PM, ionel wrote:

> please don't tell me i have to compile it.

Try:

   http://apache.planetmirror.com.au/dist/httpd/modpython/win/3.1.3/

Be aware though that version 3.1.4 which was recently released fixes a 
security
problem with mod_python.publisher. Since there are no 3.1.4 Win32 
binaries yet,
if you intend to use mod_python.publisher, you should also get down the 
actual
3.1.4 source and replace the mod_python/publisher.py in 3.1.3 with that 
from 3.1.4.

Graham

From AJDENSTONE at BKB.com.br  Fri Feb 18 08:44:19 2005
From: AJDENSTONE at BKB.com.br (AJDENSTONE@BKB.com.br)
Date: Fri Feb 18 07:45:17 2005
Subject: RES: [mod_python] mod_python + Plone ?
Message-ID: <DBBA2C22AB83D711BBBC0008C75DC95417B653A0@BRSAOMXMP02.sp.bra.bkb.com>

I have used and is pretty fast, but I had problems to send POST information
to Zope.

I think the problem is this line in ModPythonHTTPRequest.py:

	HTTPRequest.__init__(self, mod_python_request, environ, response)

because of the differences between cgi.FieldStorage and util.FieldStorage.

Alexandre Jara Denstone
BankBoston - Retail Internet Systems
Edif?cio BankBoston 5? andar - Asa Na??es
Av. Chucri Zaidan, 246
* (11) 3398-6730
* ajdenstone(at)bkb.com.br


-----Mensagem original-----
De: Gregory (Grisha) Trubetskoy [mailto:grisha@modpython.org] 
Enviada em: quinta-feira, 17 de fevereiro de 2005 15:02
Para: mod_python@modpython.org
Assunto: [mod_python] mod_python + Plone ?



Has anyone tried this?

http://zope.org/Members/pperegrina/ZopeHandler

Even better, if someone could figure out how to use this with plone and 
post results to the list, that'd be much appreciated!

Grisha
_______________________________________________
Mod_python mailing list
Mod_python@modpython.org
http://mailman.modpython.org/mailman/listinfo/mod_python


Esta mensagem, incluindo seus anexos, pode conter informa??o confidencial
e/ou privilegiada. Se voc? recebeu este e-mail por engano, n?o utilize,
copie ou divulgue as informa??es nele contidas. E, por favor, avise
imediatamente o remetente, respondendo ao e-mail, e em seguida apague-o.
Este e-mail possui conte?do informativo e n?o transacional. Caso necessite
de atendimento imediato, recomendamos utilizar um dos canais dispon?veis:
Internet Banking <http://www.bankboston.com.br>  , BankBoston por telefone
<http://www.bankboston.com.br/bpt>  ou ag?ncia/representante de atendimento
de sua conveni?ncia. Agradecemos sua colabora??o.
This message, including its attachments, may contain confidential and/or
privileged information. If you received this email by mistake, do not use,
copy or disseminate any information herein contained. Please notify us
immediately by replying to the sender and then delete it. This email is for
information purposes only, not for transactions. In case you need immediate
assistance, please use one of the following channels: Internet Banking
<http://www.bankboston.com.br>  ,  BankBoston by phone
<http://www.bankboston.com.br/bpt>  or branch/relationship manager at your
convenience. Thank you for your cooperation.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20050218/9525a62f/attachment.html
From lroubeyrie at limair.asso.fr  Fri Feb 18 07:15:11 2005
From: lroubeyrie at limair.asso.fr (Lionel Roubeyrie)
Date: Fri Feb 18 08:16:54 2005
Subject: [mod_python] python2.4 vs python2.2
Message-ID: <200502181315.11976.lroubeyrie@limair.asso.fr>

Hi all,
just a little question :
The server is under RedHat 3ES, coming with python-2.2. We must use python>2.3 
for some functions called by our web_pages (like datetime). Is it possible to 
say to mod_python which python to use? Where can we do that?
Thank's

-- 
Lionel Roubeyrie - lroubeyrie@limair.asso.fr
LIMAIR
http://www.limair.asso.fr

From jgentil at sebistar.net  Fri Feb 18 15:01:38 2005
From: jgentil at sebistar.net (Jon-Pierre Gentil)
Date: Fri Feb 18 15:02:02 2005
Subject: [mod_python] python2.4 vs python2.2
In-Reply-To: <200502181315.11976.lroubeyrie@limair.asso.fr>
References: <200502181315.11976.lroubeyrie@limair.asso.fr>
Message-ID: <200502181401.44385.jgentil@sebistar.net>

On Friday 18 February 2005 06:15 am, Lionel Roubeyrie wrote:
> Hi all,
> just a little question :
> The server is under RedHat 3ES, coming with python-2.2. We must use
> python>2.3 for some functions called by our web_pages (like datetime).
> Is it possible to say to mod_python which python to use? Where can we
> do that?
> Thank's

Use the PythonInterpreter directive.
http://www.modpython.org/live/current/doc-html/dir-other-pi.html

-- 
_________________________________________________________

  Jon-Pierre Gentil               PGP: 0xA21BC30E
  jabber: jgentil@sebistar.net    web: www.sebistar.net
  "If you think education is expensive, try ignorance."
_________________________________________________________ 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 197 bytes
Desc: not available
Url : http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20050218/92f91081/attachment.bin
From grahamd at dscpl.com.au  Fri Feb 18 16:03:39 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Fri Feb 18 16:03:48 2005
Subject: [mod_python] python2.4 vs python2.2
In-Reply-To: <200502181401.44385.jgentil@sebistar.net>
References: <200502181315.11976.lroubeyrie@limair.asso.fr>
	<200502181401.44385.jgentil@sebistar.net>
Message-ID: <75f24209ede36cc0de977c44d2ac03ce@dscpl.com.au>


On 19/02/2005, at 7:01 AM, Jon-Pierre Gentil wrote:

> On Friday 18 February 2005 06:15 am, Lionel Roubeyrie wrote:
>> Hi all,
>> just a little question :
>> The server is under RedHat 3ES, coming with python-2.2. We must use
>> python>2.3 for some functions called by our web_pages (like datetime).
>> Is it possible to say to mod_python which python to use? Where can we
>> do that?
>> Thank's
>
> Use the PythonInterpreter directive.
> http://www.modpython.org/live/current/doc-html/dir-other-pi.html

Those directives are merely for triggering creation of separate 
interpreter
spaces within the mod_python system running under Apache. It isn't 
going to
let you run a different version of Python.

Your only choice is going to be to reinstall mod_python module for 
Apache
and configure it at build time to use the newer version of Python.

Graham

From hjmw2 at cam.ac.uk  Fri Feb 18 17:56:24 2005
From: hjmw2 at cam.ac.uk (Hugh Warringoton)
Date: Fri Feb 18 17:56:32 2005
Subject: [mod_python] POST redirect
Message-ID: <200502182256.25481.hjmw2@cam.ac.uk>

Hi there,

I'm trying to redirect people to a POST request on a page external to my site. 
Specifically, I want to emulate the behaviour as if somebody had submitted 
the following form:

<form name="_xclick" target="_blank" 
action="https://www.paypal.com/cgi-bin/webscr" method="post">
<input type="hidden" name="cmd" value="_cart">
<input type="hidden" name="business" value="hughshop">
<input type="hidden" name="display" value="1">
</form>

I can think of a way of doing this: using mod_python.util.redirect(req, 
'https//...'). However it seems I will need to manually construct the req 
object - specifically, fill a FieldStorage class so that it looks like the 
user has submitted the above <form>. Is this a sane way of doing things, or 
impossible?

Any thoughts would be appreciated.
From gomo at datafull.com  Sun Feb 20 02:07:05 2005
From: gomo at datafull.com (Gonzalo =?ISO-8859-1?Q?Sainz-Tr=E1paga?=)
Date: Sun Feb 20 02:08:07 2005
Subject: [mod_python] About module autoreload
Message-ID: <1108883225.18963.8.camel@localhost>

Hi,
After reading the FAQ entry 3.1, i finally built my custom way to import
modules, on the lines of:

-- config.py --
debug = True
--

-- anyscript.py --
from mod_python.apache import import_module
config = import_module('config')
if config.debug:
    # reload other modules
--

This is a bit lengthy and annoying but then i found this directive in
the 3.x docs:

-- http://www.modpython.org/live/current/doc-html/dir-other-par.html --
PythonAutoReload {On,Off}
(...)
By default, mod_python checks the time-stamp of the file and reloads the
module if the module's file modification date is later than the last
import or reload. This way changed modules get automatically reimported,
eliminating the need to restart the server for every change.
--

If I explicitly set this directive to On, i get the expected behaviour
without manually reloading modules on every script. But, if i don't set
it i get the "Off" behaviour, instead of the "On" one as advertised in
the docs.

Actually I'm glad this directive exists and seems to do what I think it
does, but the FAQ must *really* be updated on this, and, if i'm not
mistaken, the default behaviour should be corrected either in the docs
or in mod_python (i would suggest the former, as automatically reloading
modules is the standard interpreter behaviour).

I wanted to check with you guys before I mess with the FAQ, in case i'm
getting something wrong. 

-- 
Gonzalo Sainz-Tr?paga (GomoX)
GnuPG Fingerprint: A0AF 3BBF EB93 7EFE 6628  C5A5 F073 9442 6DE4 A497
Public Key: http://pgp.mit.edu:11371/pks/lookup?op=get&search=0x6DE4A497
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: This is a digitally signed message part
Url : http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20050220/9db7544d/attachment.bin
From grahamd at dscpl.com.au  Sun Feb 20 02:40:52 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Sun Feb 20 02:41:01 2005
Subject: [mod_python] About module autoreload
In-Reply-To: <1108883225.18963.8.camel@localhost>
References: <1108883225.18963.8.camel@localhost>
Message-ID: <b6037ee91bca65ae0a874d7d3b84b61f@dscpl.com.au>


On 20/02/2005, at 6:07 PM, Gonzalo Sainz-Tr?paga wrote:

> Hi,
> After reading the FAQ entry 3.1, i finally built my custom way to 
> import
> modules, on the lines of:
>
> -- config.py --
> debug = True
> --
>
> -- anyscript.py --
> from mod_python.apache import import_module
> config = import_module('config')
> if config.debug:
>     # reload other modules

The prototype of import_module is:

   import_module(module_name, autoreload=1, log=0, path=None)

Thus, when you use it explicitly, the value of PythonAutoReload is 
meaningless,
you have to explicitly say if autoreload is to happen or not. The 
default when you
use import_module() explicitly is that autoreload is on.

In other words PythonAutoReaload only applies to top level imports 
performed
by mod_python itself and not any you may do.

Graham

From grahamd at dscpl.com.au  Sun Feb 20 03:05:25 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Sun Feb 20 03:05:33 2005
Subject: [mod_python] About module autoreload
In-Reply-To: <1108883225.18963.8.camel@localhost>
References: <1108883225.18963.8.camel@localhost>
Message-ID: <8ba9209d9b7db062781873a4da0ce951@dscpl.com.au>

A few other comments about what you are trying to do.


On 20/02/2005, at 6:07 PM, Gonzalo Sainz-Tr?paga wrote:

> Hi,
> After reading the FAQ entry 3.1, i finally built my custom way to 
> import
> modules, on the lines of:
>
> -- config.py --
> debug = True
> --
>
> -- anyscript.py --
> from mod_python.apache import import_module
> config = import_module('config')
> if config.debug:
>     # reload other modules
> --
>
> This is a bit lengthy and annoying but then i found this directive in
> the 3.x docs:
>
> -- http://www.modpython.org/live/current/doc-html/dir-other-par.html --
> PythonAutoReload {On,Off}
> (...)
> By default, mod_python checks the time-stamp of the file and reloads 
> the
> module if the module's file modification date is later than the last
> import or reload. This way changed modules get automatically 
> reimported,
> eliminating the need to restart the server for every change.
> --
>
> If I explicitly set this directive to On, i get the expected behaviour
> without manually reloading modules on every script. But, if i don't set
> it i get the "Off" behaviour, instead of the "On" one as advertised in
> the docs.

That can't be true. Code where top level module loading occurs is:

             module = import_module(module_name,
                                    
autoreload=int(config.get("PythonAutoReload", 1)),
                                    log=debug)

Thus, default is definitely "On" or enabled.

> Actually I'm glad this directive exists and seems to do what I think it
> does, but the FAQ must *really* be updated on this, and, if i'm not
> mistaken, the default behaviour should be corrected either in the docs
> or in mod_python (i would suggest the former, as automatically 
> reloading
> modules is the standard interpreter behaviour).
>
> I wanted to check with you guys before I mess with the FAQ, in case i'm
> getting something wrong.

As well as pointing out that PythonAutoReload doesn't apply to your 
explicit
use of import_module(), it is also worthwhile point out that if your 
"other
modules" are changed, they will not actually be automatically reloaded 
in your
example unless the top level file which imports them is also changed.

To try and make this a bit clearer, imagine your top level module is A 
and it
imports a submodule call B. If you change A, if PythonAutoReload is On, 
then
A will be reloaded. B will not however be reloaded at that time but 
will be
taken from the cache. This is because B hadn't been changed.

Now, if you modify B but not A, nothing will happen at all. Ie., 
neither A or
B will be reloaded. This is because the mod_python module import and 
caching
system makes no attempt to detect that A needs reloading because of B 
changing.
B will only be reloaded, if A is changed, thus forcing the re-execution 
of the
import_module() function on B.

This and other problems in import_module() mean it is a pain to use and 
many
people resort to schemes such as touching all Python code files every 
time
they make a change to one, just to ensure everything that potentially 
needs
reloading is reloaded. This does though mean that things that didn't 
need
reloading also get reloaded.

In short, import_module() is broken. If you are curious about other 
import
schemes, you might look at Vampire, which implements an import 
mechanism which
does detect changes in subimports and will automatically reimport 
parents as
necessary. Vampire is at "http://www.dscpl.com.au/projects/vampire".

Graham


From grisha at modpython.org  Sun Feb 20 13:35:02 2005
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Sun Feb 20 13:35:14 2005
Subject: [mod_python] About module autoreload
In-Reply-To: <8ba9209d9b7db062781873a4da0ce951@dscpl.com.au>
References: <1108883225.18963.8.camel@localhost>
	<8ba9209d9b7db062781873a4da0ce951@dscpl.com.au>
Message-ID: <20050220132606.W19548@grisha.dyndns.org>



On Sun, 20 Feb 2005, Graham Dumpleton wrote:

> In short, import_module() is broken.

I think the idea of achieving a pristine state in a persistent interpreter 
(by method of reload or otherwise) is "broken", import_module() is just 
fine - it just veers on the side of simplicity, whether that is the right 
approach or not is arguable, but not obvious.

Grisha
From markand at mac.com  Sun Feb 20 14:18:43 2005
From: markand at mac.com (Mark J. Andrews)
Date: Sun Feb 20 14:18:50 2005
Subject: [mod_python] mod_python for OS X 10.3.8 and Apache 1.3.33
Message-ID: <9ad13019a919f3f170e751550bc4fc89@mac.com>

Hi, I am looking for binaries or source for mod_python for OS X 10.3.8  
and Apache 1.3.33.  I tried downloading and compiling the source for  
mod_python-2.7.11, but compilation fails as follows:

Compiling for DSO. For static, do "make static"

/usr/sbin/apxs -I/Users/markand/mod_python-2.7.11/src/include  
-I/usr/include/httpd  
-I/System/Library/Frameworks/Python.framework/Versions/2.3/include/ 
python2.3 -c mod_python.o _apachemodule.o requestobject.o tableobject.o  
util.o serverobject.o connobject.o  -lm   
/System/Library/Frameworks/Python.framework/Versions/2.3/lib/python2.3/ 
config/libpython2.3.a   -ldl
cc -bundle -undefined suppress -flat_namespace -Wl,-bind_at_load -o  
mod_python.so mod_python.o _apachemodule.o requestobject.o  
tableobject.o util.o serverobject.o connobject.o -lm  
/System/Library/Frameworks/Python.framework/Versions/2.3/lib/python2.3/ 
config/libpython2.3.a -ldl
cc:  
/System/Library/Frameworks/Python.framework/Versions/2.3/lib/python2.3/ 
config/libpython2.3.a: No such file or directory
apxs:Break: Command failed with rc=1
make[1]: *** [mod_python.so] Error 1
make: *** [do_dso] Error 2

I looked for libpython2.3.a and can't find it.  Hints are greatly  
appreciated.

Mark

From nuno at salgado.no-ip.com  Sun Feb 20 14:52:20 2005
From: nuno at salgado.no-ip.com (Nuno Salgado)
Date: Sun Feb 20 14:53:07 2005
Subject: [mod_python] strange path when loading module
Message-ID: <001901c51785$bc9f8fb0$0202a8c0@LUA>

Hi,

I have Apache/2.0.52 (FreeBSD) mod_python/3.1.3 Python/2.3.3 PHP/4.3.9 configured and:

document_root = .../www/data
(1) .../www/data/nuno/index.py
(2) .../www/data/nuno/cpost/index.py

the page generated with (2) has a link to (1) -> http://server/nuno/inde.py/.

when I click in the link I see in my browser address bar the right URL but the page that is loaded is (2) with req.filename = (1).

Only when I do Reload in my browser I get page (1).

What I'm doing wrong ?

Regards,
Nuno
PS: If (2) is .../www/data/nuno/cpost/index2.py, everything works fine.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20050220/a1397825/attachment.html
From grahamd at dscpl.com.au  Sun Feb 20 15:31:26 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Sun Feb 20 15:31:39 2005
Subject: [mod_python] mod_python for OS X 10.3.8 and Apache 1.3.33
In-Reply-To: <9ad13019a919f3f170e751550bc4fc89@mac.com>
References: <9ad13019a919f3f170e751550bc4fc89@mac.com>
Message-ID: <3d2b2f7e3cb3612e9f59b76f0b8db4bf@dscpl.com.au>

Make changes as detailed in:

   http://www.modpython.org/pipermail/mod_python/2004-August/015994.html

To be thorough, also change "configure" script and rerun it as well:

   #if test "$PyTHREADS" = "1"; then
   if test "$PyTHREADS" = "True"; then

I think that this only results in a warning that can be ignored.

Graham

On 21/02/2005, at 6:18 AM, Mark J. Andrews wrote:

> Hi, I am looking for binaries or source for mod_python for OS X 10.3.8  
> and Apache 1.3.33.  I tried downloading and compiling the source for  
> mod_python-2.7.11, but compilation fails as follows:
>
> Compiling for DSO. For static, do "make static"
>
> /usr/sbin/apxs -I/Users/markand/mod_python-2.7.11/src/include  
> -I/usr/include/httpd  
> -I/System/Library/Frameworks/Python.framework/Versions/2.3/include/ 
> python2.3 -c mod_python.o _apachemodule.o requestobject.o  
> tableobject.o util.o serverobject.o connobject.o  -lm   
> /System/Library/Frameworks/Python.framework/Versions/2.3/lib/ 
> python2.3/config/libpython2.3.a   -ldl
> cc -bundle -undefined suppress -flat_namespace -Wl,-bind_at_load -o  
> mod_python.so mod_python.o _apachemodule.o requestobject.o  
> tableobject.o util.o serverobject.o connobject.o -lm  
> /System/Library/Frameworks/Python.framework/Versions/2.3/lib/ 
> python2.3/config/libpython2.3.a -ldl
> cc:  
> /System/Library/Frameworks/Python.framework/Versions/2.3/lib/ 
> python2.3/config/libpython2.3.a: No such file or directory
> apxs:Break: Command failed with rc=1
> make[1]: *** [mod_python.so] Error 1
> make: *** [do_dso] Error 2
>
> I looked for libpython2.3.a and can't find it.  Hints are greatly  
> appreciated.
>
> Mark
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python

From grahamd at dscpl.com.au  Sun Feb 20 15:34:07 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Sun Feb 20 15:34:14 2005
Subject: [mod_python] strange path when loading module
In-Reply-To: <001901c51785$bc9f8fb0$0202a8c0@LUA>
References: <001901c51785$bc9f8fb0$0202a8c0@LUA>
Message-ID: <b335051bd037553a9527953877bd268b@dscpl.com.au>

Read:

   http://issues.apache.org/jira/browse/MODPYTHON-9

You should read through some of the other bug reports there as well 
which
describe other problems with mod_python module loading system.

In summary, you are going to have to use unique names for code files 
across
multiple directories.

Graham

On 21/02/2005, at 6:52 AM, Nuno Salgado wrote:

> Hi,
> ?
> I have Apache/2.0.52 (FreeBSD) mod_python/3.1.3 Python/2.3.3 PHP/4.3.9 
> configured and:
> ?
> document_root = .../www/data
> (1) .../www/data/nuno/index.py
> (2) .../www/data/nuno/cpost/index.py
> ?
> the page generated?with (2) has a link to (1) -> 
> http://server/nuno/inde.py/.
> ?
> when?I click in the link?I?see in my browser address bar?the right?URL 
> but the page that is loaded is?(2) with?req.filename?= (1).
> ?
> Only when I do Reload in my browser I get page (1).
> ?
> What I'm doing wrong ?
> ?
> Regards,
> Nuno
> PS: If (2) is .../www/data/nuno/cpost/index2.py, everything works fine.
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python


From list at joreybump.com  Sun Feb 20 15:36:45 2005
From: list at joreybump.com (Jorey Bump)
Date: Sun Feb 20 15:36:52 2005
Subject: [mod_python] strange path when loading module
In-Reply-To: <001901c51785$bc9f8fb0$0202a8c0@LUA>
References: <001901c51785$bc9f8fb0$0202a8c0@LUA>
Message-ID: <4218F4DD.7090907@joreybump.com>

Nuno Salgado wrote:

> document_root = .../www/data
> (1) .../www/data/nuno/index.py
> (2) .../www/data/nuno/cpost/index.py

Strip the path, leaving:

(1) index.py
(2) index.py

> What I'm doing wrong ?

You (via mod_python) are importing two different modules named index.py.

> PS: If (2) is .../www/data/nuno/cpost/index2.py, everything works fine.

That is the solution. Give your application modules unique names, 
regardless of the path.

A good start would be to put all of your mod_python applications in 
/www/data/nuno, making it impossible to give them the same name.

From andy at nervebox.com  Mon Feb 21 00:06:48 2005
From: andy at nervebox.com (Andy Cavatorta)
Date: Mon Feb 21 00:06:11 2005
Subject: [mod_python] problems with 'import socket'
Message-ID: <42196C68.4040203@nervebox.com>

Hi folks,
I'm getting an import error through mod_python that I'm not getting on 
the command line.  I'd appreciate any insight anyone has into this.

When I call "import socket" at the top of a script that I call from a 
command line, everything works fine.  When I call "import socket" 
through mod_python, I get "ImportError: No module named socket".  This 
is strange, because I can import other modules like sys and mod_python 
just fine. 

Does anyone have any idea what would cause this kind of behaviour?  
Thanks. I'm running Fedora Core 3 and Apache 2.0.52

 - andy c


From mod_python-maillist at uebergeek.de  Mon Feb 21 12:19:01 2005
From: mod_python-maillist at uebergeek.de (Adrian Immler)
Date: Mon Feb 21 12:18:57 2005
Subject: [mod_python] .save() for sessions not working ...
Message-ID: <Q49Qbmzv.1109006341.4805710.aimmler@localhost>

hello !


[code at the end]
i have reduced my script to a minimum, but somehow only the sess.save()
in the "if" condition works just before the redirect. every later
attempt i am told:

------[ SNIP ]----------------------------------------------
Mod_python error: "PythonHandler mptest"

Traceback (most recent call last):

  File "/usr/lib/python2.4/site-packages/mod_python/apache.py", line
299, in HandlerDispatch
    result = object(req)

  File "/usr/local/httpd/htdocs/test/mptest.py", line 42, in handler
    sess.save()

  File "/usr/lib/python2.4/site-packages/mod_python/Session.py", line
204, in save
    self.do_save(dict)

  File "/usr/lib/python2.4/site-packages/mod_python/Session.py", line
329, in do_save
    dbm[self._sid] = cPickle.dumps(dict)

  File "/usr/lib/python2.4/dumbdbm.py", line 160, in __setitem__
    raise TypeError, "keys and values must be strings"

TypeError: keys and values must be strings
------[ SNAP ]----------------------------------------------

so what am i doing wrong ? here is the non-working code:

------[ SNIP ]----------------------------------------------
from mod_python import apache
from mod_python import util
from mod_python.util import FieldStorage
from mod_python import Session


def handler(req):
  req.content_type = "text/html"
  fs = FieldStorage(req)

  sess = Session.Session(req, fs.getfirst("SID"))
  if sess.is_new():
    sess.save()
    util.redirect(req,"http://localhost/test/mptest.py?SID=" +
sess.id())
  else:
    sess['foo'] = 'spam'

  sess['bar'] = 'eggs'

  sess.save()
  return apache.OK

From nicolas.lehuen at gmail.com  Mon Feb 21 15:29:31 2005
From: nicolas.lehuen at gmail.com (Nicolas Lehuen)
Date: Mon Feb 21 15:29:33 2005
Subject: [mod_python] win32 binaries of mod_python ?
In-Reply-To: <BB13E4C4D649234F84A01F6DF64BB87F43E5AC@ccs-ex01.coldstorage.com>
References: <BB13E4C4D649234F84A01F6DF64BB87F43E5AC@ccs-ex01.coldstorage.com>
Message-ID: <c298f2d7050221122939d64f0f@mail.gmail.com>

Hi,

I've put a Win32 build of mod_python 3.1.4 for Python 2.4 here :

http://nicolas.lehuen.com/download/

Now, this comes without any warranty or anything... I've tested it and
it works ; I'd welcome your +1s on this build. If it's OK, Grisha,
could you submit it for publication on the Apache web site ? My poor
bandwidth limitation certainly won't support many downloads...

Best regards,
Nicolas

On Mon, 21 Feb 2005 13:40:35 -0500, Gerrat Rickert
<grickert@coldstorage.com> wrote:
>  
>  
> 
> Nicolas, on the mod_python mailing list, you mentioned that you could
> provide a mod_python win32 binary for Python 2.4.  
> 
>   
> 
> I'd appreciate it if you could send me one (or post it for everyone). 
> 
>   
> 
>   
> 
> Thanks, 
> 
> Gerrat Rickert 
> 
> Systems Analyst 
> 
> Conestoga Coldstorage
From huzaifa at hostway.com  Mon Feb 21 15:48:45 2005
From: huzaifa at hostway.com (Huzaifa Tapal)
Date: Mon Feb 21 15:48:54 2005
Subject: [mod_python] Good idea to use apache.setup_cgi() with multithreaded
	model?
Message-ID: <421A492D.4020105@hostway.com>

I have a custom handler that i have built that calls instantiates a web 
application framework I have written and asks it process the request.  
Since this web app framework originally was designed for CGI and was 
used in CGI, I am calling the apache.setup_cgi() to make the env 
seamless for the framework.  I am running this under a multithreaded mpm 
apache configuration and am running into problems with race conditions 
with multiple threads accessing shared resources in memory.

Since my customer handler kind of resembles the provided cgihandler 
which is not suited for a multithreaded env, I am wondering I am right 
in doing the apache.setup_cgi() like I am.  My handler code looks like 
as follows:

    def handler(req):
       
        #_lock.acquire()
        #try:  
        # setup the cgi environment
        env, si, so = apache.setup_cgi(req)
       
        # write the content type for testing purposes
        #sys.stdout.write("content-type: text/html\r\n\r\n")
       
        cache = req.get_options().get("CACHE", "Off")
        if cache == "Off":
            cache = 0

        try:   
            # load the driver
            driver = GlobalCache.getCachedItem("Driver")
            if not driver:
                driver = Driver(["./Driver.py"], cache_projects=cache,
    modpy_req=req)

                # cache if we have caching objects turned
                if cache:
                    GlobalCache.setCachedItem("Driver",driver)
           
            # process the request
            driver.process()
        except:
            pass   

        apache.restore_nocgi(env, si, so)
        return apache.OK
        #finally:
        #    _lock.release()


Any help would be appreciated. 

Hozi
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20050221/62715ae0/attachment.html
From jgentil at sebistar.net  Tue Feb 22 01:09:41 2005
From: jgentil at sebistar.net (Jon-Pierre Gentil)
Date: Tue Feb 22 01:09:59 2005
Subject: [mod_python] .save() for sessions not working ...
In-Reply-To: <Q49Qbmzv.1109006341.4805710.aimmler@localhost>
References: <Q49Qbmzv.1109006341.4805710.aimmler@localhost>
Message-ID: <200502220009.48361.jgentil@sebistar.net>

On Monday 21 February 2005 11:19 am, Adrian Immler wrote:

> [code at the end]
> i have reduced my script to a minimum, but somehow only the sess.save()
> in the "if" condition works just before the redirect. every later
> attempt i am told:

Mmm reducing the script isn't helpful, because something you are doing 
could inadvertently affect it.  But it might be that you're saving an 
empty session?   Dunno.  Which save does it break on?

-- 
_________________________________________________________

  Jon-Pierre Gentil               PGP: 0xA21BC30E
  jabber: jgentil@sebistar.net    web: www.sebistar.net
  "If you think education is expensive, try ignorance."
_________________________________________________________ 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 197 bytes
Desc: not available
Url : http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20050222/0f275c58/attachment.bin
From mod_python-maillist at uebergeek.de  Tue Feb 22 05:13:06 2005
From: mod_python-maillist at uebergeek.de (Adrian Immler)
Date: Tue Feb 22 05:13:02 2005
Subject: [mod_python] .save() for sessions not working ...
In-Reply-To: <200502220009.48361.jgentil@sebistar.net>
Message-ID: <1md6mxWY.1109067186.6314390.aimmler@localhost>

>Mmm reducing the script isn't helpful, because something you are doing 
>could inadvertently affect it.
it is reduced to a version that still produces the same error ...

>But it might be that you're saving an 
>empty session?   Dunno.  Which save does it break on?
it breaks at any of the (now commented) sess.safe(), if i uncomment one
of the two sess.save()'s it breaks up ....

----------------------------------------------------------------------
from mod_python import apache
from mod_python import util
from mod_python.util import FieldStorage
from mod_python import Session


def handler(req):
  req.content_type = "text/html"

  fs = FieldStorage(req)

  sess = Session.Session(req, fs.getfirst("SID"))
  if sess.is_new():
    sess.save()
    util.redirect(req,"http://localhost/test/mptest.py?SID=" +
sess.id())
  else:
    1+1
    sess['foo'] = 'one'
#    sess.save()

  sess['bar'] = 'two'
#  sess.save()
  return apache.OK


--------------------------------------------------
Mod_python error: "PythonHandler mptest"

Traceback (most recent call last):

  File "/usr/lib/python2.4/site-packages/mod_python/apache.py", line
299, in HandlerDispatch
    result = object(req)

  File "/usr/local/httpd/htdocs/test/mptest.py", line 22, in handler
    sess.save()

  File "/usr/lib/python2.4/site-packages/mod_python/Session.py", line
204, in save
    self.do_save(dict)

  File "/usr/lib/python2.4/site-packages/mod_python/Session.py", line
329, in do_save
    dbm[self._sid] = cPickle.dumps(dict)

  File "/usr/lib/python2.4/dumbdbm.py", line 160, in __setitem__
    raise TypeError, "keys and values must be strings"

TypeError: keys and values must be strings

From wagnerh at oclc.org  Tue Feb 22 08:31:02 2005
From: wagnerh at oclc.org (Wagner,Harry)
Date: Tue Feb 22 08:31:06 2005
Subject: [mod_python] .save() for sessions not working ...
Message-ID: <811A02A11096B343880D2EEF72C4C832551D53@OAEXCH2SERVER.oa.oclc.org>

Just a guess, but maybe change the line:

 sess = Session.Session(req, fs.getfirst("SID"))

to:  sess = Session.Session(req, str(fs.getfirst("SID"))) 

I hope that helps! 
harry

-----Original Message-----
From: mod_python-bounces@modpython.org
[mailto:mod_python-bounces@modpython.org] On Behalf Of Adrian Immler
Sent: Tuesday, February 22, 2005 5:13 AM
To: ModPython Maillist
Subject: Re: [mod_python] .save() for sessions not working ...

>Mmm reducing the script isn't helpful, because something you are doing 
>could inadvertently affect it.
it is reduced to a version that still produces the same error ...

>But it might be that you're saving an 
>empty session?   Dunno.  Which save does it break on?
it breaks at any of the (now commented) sess.safe(), if i uncomment one
of the two sess.save()'s it breaks up ....

----------------------------------------------------------------------
from mod_python import apache
from mod_python import util
from mod_python.util import FieldStorage from mod_python import Session


def handler(req):
  req.content_type = "text/html"

  fs = FieldStorage(req)

  sess = Session.Session(req, fs.getfirst("SID"))
  if sess.is_new():
    sess.save()
    util.redirect(req,"http://localhost/test/mptest.py?SID=" +
sess.id())
  else:
    1+1
    sess['foo'] = 'one'
#    sess.save()

  sess['bar'] = 'two'
#  sess.save()
  return apache.OK


--------------------------------------------------
Mod_python error: "PythonHandler mptest"

Traceback (most recent call last):

  File "/usr/lib/python2.4/site-packages/mod_python/apache.py", line
299, in HandlerDispatch
    result = object(req)

  File "/usr/local/httpd/htdocs/test/mptest.py", line 22, in handler
    sess.save()

  File "/usr/lib/python2.4/site-packages/mod_python/Session.py", line
204, in save
    self.do_save(dict)

  File "/usr/lib/python2.4/site-packages/mod_python/Session.py", line
329, in do_save
    dbm[self._sid] = cPickle.dumps(dict)

  File "/usr/lib/python2.4/dumbdbm.py", line 160, in __setitem__
    raise TypeError, "keys and values must be strings"

TypeError: keys and values must be strings

_______________________________________________
Mod_python mailing list
Mod_python@modpython.org
http://mailman.modpython.org/mailman/listinfo/mod_python

From wagnerh at oclc.org  Tue Feb 22 09:05:28 2005
From: wagnerh at oclc.org (Wagner,Harry)
Date: Tue Feb 22 09:05:30 2005
Subject: [mod_python] MemorySession
Message-ID: <811A02A11096B343880D2EEF72C4C832551D55@OAEXCH2SERVER.oa.oclc.org>

Should MemorySession work on Linux?  Session and DbmSession both work,
but MemorySession always returns 'true' to the 'if sess.is_new():'
statement (see code below).  The cookie (pysid) is written is just fine.
The doc says that MemorySession cannot be used in a 'multi-process
configuration'?  Does this mean it cannot be used on Linux?  

def handler(req):
	ddcServer = DDCServer(req)
#	sess = Session.Session(req)
#	sess =
Session.DbmSession(req,'/var/www/html2/mp_sess.dbm',None,None,gdbm,0,0)
	sess = Session.MemorySession(req)
	if sess.is_new():
		req.log_error("Session is new: " + str(sess.id()))
		sess['recs'] = 'whatever'
		sess.save()
		req.log_error("Session saved")
	elif not sess.is_new():
		req.log_error("Previous session loaded: "  +
str(sess.id()))
		sess.load()
		recs = sess['recs']
	ddcServer.do_GET()
	return apache.OK

Harry Wagner
http://www.oclc.org/research/staff/wagner.htm

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20050222/a44f189d/attachment-0001.html
From harrison at tbc.net  Tue Feb 22 09:24:49 2005
From: harrison at tbc.net (Shawn Harrison)
Date: Tue Feb 22 09:22:03 2005
Subject: [mod_python] MemorySession
In-Reply-To: <811A02A11096B343880D2EEF72C4C832551D55@OAEXCH2SERVER.oa.oclc.org>
References: <811A02A11096B343880D2EEF72C4C832551D55@OAEXCH2SERVER.oa.oclc.org>
Message-ID: <421B40B1.5070701@tbc.net>

Wagner,Harry wrote [02/22/05 8:05 AM]:
> Should MemorySession work on Linux?  Session and DbmSession both work, 
> but MemorySession always returns 'true' to the 'if sess.is_new():' 
> statement (see code below).  The cookie (pysid) is written is just 
> fine.  The doc says that MemorySession cannot be used in a 
> 'multi-process configuration'?  Does this mean it cannot be used on Linux? 

If your Linux setup is multi-process, yes. It is by default.
-- 
________________
harrison@tbc.net
From jgentil at sebistar.net  Tue Feb 22 14:31:18 2005
From: jgentil at sebistar.net (Jon-Pierre Gentil)
Date: Tue Feb 22 14:31:33 2005
Subject: [mod_python] .save() for sessions not working ...
In-Reply-To: <1md6mxWY.1109067186.6314390.aimmler@localhost>
References: <1md6mxWY.1109067186.6314390.aimmler@localhost>
Message-ID: <200502221331.24571.jgentil@sebistar.net>

On Tuesday 22 February 2005 04:13 am, Adrian Immler wrote:

> it breaks at any of the (now commented) sess.safe(), if i uncomment one
> of the two sess.save()'s it breaks up ....

The only thing I can think of is that somehow the session is contaminated.  
Or, something is broken.  :)  Try outputting the contents of session 
(e.g. req.write(sess)) just before you save it...check to see what is 
inside.  Otherwise, it appears to be a bug!  Hmm

Also try removing the first save, to see if the other saves work properly?

-- 
_________________________________________________________

  Jon-Pierre Gentil               PGP: 0xA21BC30E
  jabber: jgentil@sebistar.net    web: www.sebistar.net
  "If you think education is expensive, try ignorance."
_________________________________________________________ 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 197 bytes
Desc: not available
Url : http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20050222/b87362c5/attachment.bin
From rphelps at nps.edu  Tue Feb 22 16:38:40 2005
From: rphelps at nps.edu (rphelps)
Date: Tue Feb 22 16:39:16 2005
Subject: [mod_python] Passing parameters to javascript from python script
Message-ID: <421BA660.5050107@nps.edu>

I have written an application that queries a Firebird database from a 
web page using Apache and mod_python. After the query my python script 
generates gif files using gri and imagemagick. I want to automatically 
display these images to the user but don't know how to pass the files 
names to a javascript that opens the new browser windows. May be there 
an easier way to do this? 

RLP
-------------- next part --------------
A non-text attachment was scrubbed...
Name: rphelps.vcf
Type: text/x-vcard
Size: 303 bytes
Desc: not available
Url : http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20050222/975f096e/rphelps.vcf
From administrator at leebrown.org  Tue Feb 22 19:39:41 2005
From: administrator at leebrown.org (Lee Brown)
Date: Tue Feb 22 19:39:51 2005
Subject: [mod_python] Passing parameters to javascript from python script
In-Reply-To: <421BA660.5050107@nps.edu>
Message-ID: <7C7204713831@underdog>

Greetings!

Here's the 'brute force' way to pass data from the server to the user agent:

1 - Using mod-python, inject the following HTML somewhere within the body of
the document:

	<input id="unique_id" type="hidden" value="my_data" />

2 - In JavaScript:

	my_data = Document.GetElementByID('unique_id').value()

-----Original Message-----
From: mod_python-bounces@modpython.org
[mailto:mod_python-bounces@modpython.org] On Behalf Of rphelps
Sent: Tuesday, February 22, 2005 4:39 PM
To: mod_python@modpython.org
Subject: [mod_python] Passing parameters to javascript from python script

I have written an application that queries a Firebird database from a web
page using Apache and mod_python. After the query my python script generates
gif files using gri and imagemagick. I want to automatically display these
images to the user but don't know how to pass the files names to a
javascript that opens the new browser windows. May be there an easier way to
do this? 

RLP

From huzaifa at hostway.com  Wed Feb 23 10:16:13 2005
From: huzaifa at hostway.com (Huzaifa Tapal)
Date: Wed Feb 23 10:20:27 2005
Subject: [mod_python] Good idea to use apache.setup_cgi() with
	multithreadedmodel?
Message-ID: <20050223152024.EF8BFB1EF@fiona.siteprotect.com>

Hello All,

I have a custom handler that i have built that calls instantiates a web
application framework I have written and asks it process the request.  Since
this web app framework originally was designed for CGI and was used in CGI,
I am calling the apache.setup_cgi() to make the env seamless for the
framework.  I am running this under a multithreaded mpm apache configuration
and am running into problems with race conditions with multiple threads
accessing shared resources in memory.

Since my customer handler kind of resembles the provided cgihandler which is
not suited for a multithreaded env, I am wondering I am right in doing the
apache.setup_cgi() like I am.  My handler code looks like as follows:

def handler(req):
    
    #_lock.acquire()
    #try:   
    # setup the cgi environment
    env, si, so = apache.setup_cgi(req)
    
    # write the content type for testing purposes
    #sys.stdout.write("content-type: text/html\r\n\r\n")
    
    cache = req.get_options().get("CACHE", "Off")
    if cache == "Off":
        cache = 0

    try:    
        # load the driver
        driver = GlobalCache.getCachedItem("Driver")
        if not driver: 
            driver = Driver(["./Driver.py"], cache_projects=cache,
modpy_req=req)

            # cache if we have caching objects turned
            if cache:
                GlobalCache.setCachedItem("Driver",driver)
        
        # process the request
        driver.process()
    except: 
        pass    

    apache.restore_nocgi(env, si, so) 
    return apache.OK
    #finally:
    #    _lock.release()


Any help would be appreciated.  

Hozi

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20050223/0b800428/attachment.html
From andy at nervebox.com  Wed Feb 23 14:35:35 2005
From: andy at nervebox.com (Andy Cavatorta)
Date: Wed Feb 23 14:34:55 2005
Subject: [mod_python] communication between main_interpreter and
	subinterpreters
Message-ID: <421CDB07.8080708@nervebox.com>

Hi Folks,
I'm working on a server push framework that keeps subinterpreters open 
and serving for indefinitly long periods of time.  The main program 
control is a command-line script, which keeps track of the 
subinterpreters and communicates with them via UDP sockets.  That works 
in my tests,  but that UDP layer is a *lot* of overhead. 

Is there another way that a command-line script or main_interpreter can 
track and reference instances of subinterpreters?

thanks,
andy c
From dan.eloff at gmail.com  Wed Feb 23 14:44:08 2005
From: dan.eloff at gmail.com (Dan Eloff)
Date: Wed Feb 23 14:51:01 2005
Subject: [mod_python] mod_python and python 2.4?
Message-ID: <4817b6fc05022311445743f407@mail.gmail.com>

I tried installing mod_python, and it told me it could not find python
2.3, so I had to download and install python 2.3. Now I find myself
missing some of the python 2.4 features. Python 2.4 has been out for
close to a year now, why is it taking so long to make it compatible?
Is there anything I could do to help?

-Dan
From nick at dd.revealed.net  Wed Feb 23 15:09:51 2005
From: nick at dd.revealed.net (Nick)
Date: Wed Feb 23 15:10:11 2005
Subject: [mod_python] mod_python and python 2.4?
In-Reply-To: <4817b6fc05022311445743f407@mail.gmail.com>
References: <4817b6fc05022311445743f407@mail.gmail.com>
Message-ID: <421CE30F.4030501@dd.revealed.net>

Only 3 months in your year?  Last I checked 2.4 final was released sometime 
near the end of November of 2004.

At any rate, the latest subversion revision should work with Python 2.4.  Is 
anybody else having problems??

Nick

Dan Eloff wrote:
> I tried installing mod_python, and it told me it could not find python
> 2.3, so I had to download and install python 2.3. Now I find myself
> missing some of the python 2.4 features. Python 2.4 has been out for
> close to a year now, why is it taking so long to make it compatible?
> Is there anything I could do to help?

From gustavo.cordova at q-voz.com  Wed Feb 23 15:19:53 2005
From: gustavo.cordova at q-voz.com (=?UTF-8?B?R3VzdGF2byBDw7NyZG92YSBBdmlsYQ==?=)
Date: Wed Feb 23 15:20:55 2005
Subject: [mod_python] mod_python and python 2.4?
In-Reply-To: <4817b6fc05022311445743f407@mail.gmail.com>
References: <4817b6fc05022311445743f407@mail.gmail.com>
Message-ID: <421CE569.2070904@q-voz.com>

Dan Eloff wrote:

>I tried installing mod_python, and it told me it could not find python
>2.3, so I had to download and install python 2.3. Now I find myself
>missing some of the python 2.4 features. Python 2.4 has been out for
>close to a year now, why is it taking so long to make it compatible?
>Is there anything I could do to help?
>
>-Dan
>
Checking out Python 2.4 's website:

 > We are pleased to announce the release of *Python 2.4, final*
 > on November 30, 2004. This is a final, stable release, and
 > we can recommend that Python users upgrade to this version.

I think you might be exaggerating... *just* a bit; unless you're talking
about development versions of python 2.4 being out for about a year,
in which case you'd be about right; but I wouldn't expect a mod_python
distribution for a development version of python to be available.

-gca

-------------- next part --------------
A non-text attachment was scrubbed...
Name: gustavo.cordova.vcf
Type: text/x-vcard
Size: 196 bytes
Desc: not available
Url : http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20050223/b9435ccb/gustavo.cordova.vcf
From nicolas.lehuen at gmail.com  Wed Feb 23 15:51:45 2005
From: nicolas.lehuen at gmail.com (Nicolas Lehuen)
Date: Wed Feb 23 16:02:29 2005
Subject: [mod_python] mod_python and python 2.4?
In-Reply-To: <421CE569.2070904@q-voz.com>
References: <4817b6fc05022311445743f407@mail.gmail.com>
	<421CE569.2070904@q-voz.com>
Message-ID: <c298f2d705022312516abbe68d@mail.gmail.com>

mod_python works great on Python 2.4. You can either build it on your
own from the sources or fetch a build for Win32 here :

http://www.lehuen.com/nicolas/index.php/2005/02/21/39-win32-build-of-mod_python-314-for-python-24

If the build seems OK (it's OK for me), could you tell us on this
mailing list ? If it's confirmed to work, it will be hosted on the
Apache web site and its mirrors.

Regards,
Nicolas


On Wed, 23 Feb 2005 14:19:53 -0600, Gustavo C?rdova Avila
<gustavo.cordova@q-voz.com> wrote:
> Dan Eloff wrote:
> 
> >I tried installing mod_python, and it told me it could not find python
> >2.3, so I had to download and install python 2.3. Now I find myself
> >missing some of the python 2.4 features. Python 2.4 has been out for
> >close to a year now, why is it taking so long to make it compatible?
> >Is there anything I could do to help?
> >
> >-Dan
> >
> Checking out Python 2.4 's website:
> 
>  > We are pleased to announce the release of *Python 2.4, final*
>  > on November 30, 2004. This is a final, stable release, and
>  > we can recommend that Python users upgrade to this version.
> 
> I think you might be exaggerating... *just* a bit; unless you're talking
> about development versions of python 2.4 being out for about a year,
> in which case you'd be about right; but I wouldn't expect a mod_python
> distribution for a development version of python to be available.
> 
> -gca
> 
> 
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
> 
> 
> 
>

From grahamd at dscpl.com.au  Wed Feb 23 16:45:41 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Wed Feb 23 16:45:45 2005
Subject: [mod_python] communication between main_interpreter and
	subinterpreters
In-Reply-To: <421CDB07.8080708@nervebox.com>
Message-ID: <4362C610-85E4-11D9-85A7-000393BB31F6@dscpl.com.au>


On Thursday, February 24, 2005, at 06:35  AM, Andy Cavatorta wrote:

> Hi Folks,
> I'm working on a server push framework that keeps subinterpreters open 
> and serving for indefinitly long periods of time.  The main program 
> control is a command-line script, which keeps track of the 
> subinterpreters and communicates with them via UDP sockets.  That 
> works in my tests,  but that UDP layer is a *lot* of overhead.
> Is there another way that a command-line script or main_interpreter 
> can track and reference instances of subinterpreters?

I have had some work on the back burner for a while which may achieve
what you want, but there is equally going to be some overhead where
communication goes outside of the process and a bit less where the
sub-interpreters are within the same process.

Which version of Apache are you using? If using 2.0, what MPM model
are you using, prefork, worker or something else? If not a threaded
MPM, is your Python version and mod_python still built for threading?

Overall, what I am working on may just be excessive for your needs as
it delves into the bigger area of using Apache/mod_python to interact
with a distributed system using request/reply and publish/subscribe
type mechanisms and with support for concepts of presence etc.

BTW, can you be a bit clearer in what you mean when you say "that
keeps subinterpreters open and serving for indefinitly long periods
of time". An interpreter once created will already exist for the life
of the process, over that time, possibly serving up many many distinct
requests. Do you actually mean that a specific request is kept open
for a long period of time?

Graham

From mod_python-maillist at uebergeek.de  Wed Feb 23 16:58:10 2005
From: mod_python-maillist at uebergeek.de (Adrian Immler)
Date: Wed Feb 23 16:58:13 2005
Subject: [mod_python] mod_python and python 2.4?
In-Reply-To: <4817b6fc05022311445743f407@mail.gmail.com>
Message-ID: <a1DIknfw.1109195890.8535820.aimmler@localhost>

>I tried installing mod_python, and it told me it could not find python
>2.3, so I had to download and install python 2.3. Now I find myself
>missing some of the python 2.4 features. Python 2.4 has been out for
>close to a year now, why is it taking so long to make it compatible?
>Is there anything I could do to help?

i got it working with the switch --with-python=/path/to/python
i've set this to /usr/bin/python which is a 2.4 python. now it works. i
had the same error as you before.

hth

adrian

From ales at mur.at  Wed Feb 23 20:05:56 2005
From: ales at mur.at (Ales Zemene)
Date: Wed Feb 23 20:05:58 2005
Subject: [mod_python] mod_python test
Message-ID: <20050224010555.GB3401@mur.at>

hello,

it looks like mod_python is working, but not shure what's next,
page is not displaying anything, browser is just trying to download it.

edited /home/ales/public_html/ice/python/test.py
( directory /home/ales/public_html/ice/python/ is normaly visible on net)

from mod_python import apache
def handler(req):
        req.write("Hello World!")
        return apache.OK


httpd.conf :

<Directory /home/ales/public_html/ice/python/test.py>
   AddHandler mod_python .py
   PythonHandler mptest
   PythonDebug On
</Directory>

restarted apache, error log:

<snip>
[Thu Feb 24 02:01:28 2005] [notice] Apache/1.3.33 (Debian GNU/Linux)
mod_python/2.7.10 Python/2.3.4 PHP/4.3.10-2 configured -- resuming
normal operations
[Thu Feb 24 02:01:28 2005] [notice] suEXEC mechanism enabled (wrapper:
/usr/lib/apache/suexec)
[Thu Feb 24 02:01:28 2005] [notice] Accept mutex: sysvsem (Default:
sysvsem)
</snip>

any idea what is missing?
thanks
Ales Zemene
From grahamd at dscpl.com.au  Wed Feb 23 20:35:52 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Wed Feb 23 20:35:54 2005
Subject: [mod_python] mod_python test
Message-ID: <1109208952.10514@dscpl.user.openhosting.com>

You are using 2.7.10 but appear to be following 3.1.3 documentation.
Use the correct documentation, it will not work otherwise.

Ales Zemene wrote ..
> edited /home/ales/public_html/ice/python/test.py
> ( directory /home/ales/public_html/ice/python/ is normaly visible on net)
> 
> from mod_python import apache
> def handler(req):
>         req.write("Hello World!")
>         return apache.OK

Use:

from mod_python import apache
def handler(req):
        req.content_type = "text/plain"
        req.send_http_header()
        req.write("Hello World!")
        return apache.OK


> httpd.conf :
> 
> <Directory /home/ales/public_html/ice/python/test.py>
>    AddHandler mod_python .py
>    PythonHandler mptest
>    PythonDebug On
> </Directory>

The path is wrong, your the handler name wrong and 3.1.3 name is used
on AddHandler. Instead use:

<Directory /home/ales/public_html/ice/python>
   AddHandler python-program .py
   PythonHandler test
   PythonDebug On
</Directory>

> restarted apache, error log:
> 
> <snip>
> [Thu Feb 24 02:01:28 2005] [notice] Apache/1.3.33 (Debian GNU/Linux)
> mod_python/2.7.10 Python/2.3.4 PHP/4.3.10-2 configured -- resuming
> normal operations
> [Thu Feb 24 02:01:28 2005] [notice] suEXEC mechanism enabled (wrapper:
> /usr/lib/apache/suexec)
> [Thu Feb 24 02:01:28 2005] [notice] Accept mutex: sysvsem (Default:
> sysvsem)
> </snip>
> 
> any idea what is missing?
From grahamd at dscpl.com.au  Wed Feb 23 22:38:01 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Wed Feb 23 22:38:03 2005
Subject: [mod_python] mod_python test
In-Reply-To: <20050224025040.GC3401@mur.at>
Message-ID: <1109216281.14512@dscpl.user.openhosting.com>

Do you mean that FireFox gives you a SaveAs dialog to save response to disk?

If it is, make sure you set the content type in the response as I gave in the
modified handler code I sent:

from mod_python import apache
def handler(req):
        req.content_type = "text/plain"
        req.send_http_header()
        req.write("Hello World!")
        return apache.OK

If you don't set the content type, FireFox will look at the .py extension to work
out what to do and when it can't work it out, will use SaveAs.

Ales Zemene wrote ..
> it works.
> still strange if i hit link hello.py in dir, it tries to download, have
> to type it in address bar, sometimes even that helps not. maybe problem
> of firefox.
> in links it works.
> thanks
> 
> citation of <grahamd@dscpl.com.au> from Wed, Feb 23, 2005 at 08:35:52PM
> -0500, Graham Dumpleton :
> > You are using 2.7.10 but appear to be following 3.1.3 documentation.
> > Use the correct documentation, it will not work otherwise.
> doc is Release 2.7.8 did not find 10
> 
> ales
From harrison at tbc.net  Wed Feb 23 23:47:34 2005
From: harrison at tbc.net (Shawn Harrison)
Date: Wed Feb 23 23:44:47 2005
Subject: [mod_python] Session hanging
Message-ID: <421D5C66.1000103@tbc.net>

Very strange Session problem. On Debian Linux 2.4.25, Python 2.3.3, 
mod_python ??? ("__init__.py,v 1.10 2004/02/16")

I've been using session variables to keep a list of the current users' 
allowed groups. On the login POST script:

         session = Session.Session(req)

         # Set the username and groups that this user belongs to
         grouplist = []
         groups = db.select('groups_memberships_users', 'groupname', 
"username = '%s'" % user.name)
         for i in range(len(groups)):
             grouplist.append(groups[i].groupname)
         session['groups'] = "|".join(grouplist)

The result is, for instance, session['groups'] = 'editor|verified|admin' 
(for me).

This has been working just fine. However, today when I called the 
following code it hangs, every time:

def edit_group(req):
     from mod_python import Session
     sess = Session.Session(req) # <-- Hangs here
     sess.load()

This is exactly what I have been doing all the time in my authen 
handler; this is outside of the authen handler in order to get the list 
of groups and the current user's name (I'm not using Apache 
authentication at all but am using Session for all of it).

Thereafter, any attempt to load a page which needs to access the Session 
  object hangs. That is, anything which is non-public and therefore goes 
through authen checking.

I suppose I could work around this by setting the req table with 
appropriate data during authen, which would make the user & group info 
always available. Probably would be more efficient, too. But it begs the 
question: Is there some reason that this would be happening with Session?

Note: The same code works just fine on Windows 2000 w/Apache 2.0.52, but 
in that case of course it's a MemorySession rather than a DbmSession. So 
I'm guessing that the difference has to do with the DBM session object 
or underlying file.

Thanks,
Shawn Harrison
From mailingme at deimerich.com  Wed Feb 23 23:58:26 2005
From: mailingme at deimerich.com (Jody Burns)
Date: Wed Feb 23 23:59:43 2005
Subject: [mod_python] mod_python and python 2.4?
In-Reply-To: <c298f2d705022312516abbe68d@mail.gmail.com>
References: <4817b6fc05022311445743f407@mail.gmail.com>	<421CE569.2070904@q-voz.com>
	<c298f2d705022312516abbe68d@mail.gmail.com>
Message-ID: <421D5EF2.8030507@deimerich.com>

Just chiming in to say that it works great for me.  Thanks for the
build!  I'd been hearing that there was some problem with the MSVCRT,
but I guess that was resolved or I was just misinformed.

Also, you might want to add a note in the installer that the Apache2
service must be stopped to automatically install the mod_python.so file
if mod_python is already in use.  If it's still running, the postinstall
script gives a traceback when it fails to open mod_python.so for writing
because that file is locked.

--Jody

(Previously, I hit the wrong button and sent this to just Nicolas 
instead of the list.  Oops.)

Nicolas Lehuen wrote:

>mod_python works great on Python 2.4. You can either build it on your
>own from the sources or fetch a build for Win32 here :
>
>http://www.lehuen.com/nicolas/index.php/2005/02/21/39-win32-build-of-mod_python-314-for-python-24
>
>If the build seems OK (it's OK for me), could you tell us on this
>mailing list ? If it's confirmed to work, it will be hosted on the
>Apache web site and its mirrors.
>
>Regards,
>Nicolas
>
From dagurp at gmail.com  Thu Feb 24 07:33:38 2005
From: dagurp at gmail.com (=?ISO-8859-1?Q?Dagur_P=E1ll_Ammendrup?=)
Date: Thu Feb 24 07:31:39 2005
Subject: [mod_python] mod_python wiki
Message-ID: <421DC9A2.20407@gmail.com>

Hi,

Does anyone know what happened to the mod_python wiki? Maybe 
modpython.org should get it's own?

regards,
Dagur


-- 
No virus found in this outgoing message.
Checked by AVG Anti-Virus.
Version: 7.0.300 / Virus Database: 266.4.0 - Release Date: 22.2.2005

From gdamjan at mail.net.mk  Thu Feb 24 07:53:22 2005
From: gdamjan at mail.net.mk (Damjan)
Date: Thu Feb 24 07:53:26 2005
Subject: [mod_python] mod_python test
In-Reply-To: <1109208952.10514@dscpl.user.openhosting.com>
References: <1109208952.10514@dscpl.user.openhosting.com>
Message-ID: <20050224125322.GA9504@legolas.on.net.mk>

> The path is wrong, your the handler name wrong and 3.1.3 name is used
> on AddHandler. Instead use:
> 
> <Directory /home/ales/public_html/ice/python>
>    AddHandler python-program .py
>    PythonHandler test
>    PythonDebug On
> </Directory>

You are correct, only there might be problems with a python file named
test.py, since there's already a python module called test. Name the
script 'mptest.py' and make that directive :

	PythonHandler mptest


-- 
damjan | ??????
This is my jabber ID --> damjan@bagra.net.mk <-- not my mail address!!!
From AJDENSTONE at BKB.com.br  Thu Feb 24 08:25:25 2005
From: AJDENSTONE at BKB.com.br (AJDENSTONE@BKB.com.br)
Date: Thu Feb 24 08:35:27 2005
Subject: RES: [mod_python] mod_python + Plone ?
Message-ID: <DBBA2C22AB83D711BBBC0008C75DC95417E1FFE0@BRSAOMXMP02.sp.bra.bkb.com>

Hi all,

	the author post a new version of ZopeHandler fixing my problem in:
http://www.zope.org/Members/pperegrina/ZopeHandler

	Regards,

Alexandre Jara Denstone
BankBoston - Retail Internet Systems
Edif?cio BankBoston 5? andar - Asa Na??es
Av. Chucri Zaidan, 246
* (11) 3398-6730
* ajdenstone(at)bkb.com.br


-----Mensagem original-----
De: DENSTONE, ALEXANDRE J 
Enviada em: sexta-feira, 18 de fevereiro de 2005 10:44
Para: Gregory (Grisha) Trubetskoy; mod_python@modpython.org
Cc: AJDENSTONE@BKB.com.br
Assunto: RES: [mod_python] mod_python + Plone ?


I have used and is pretty fast, but I had problems to send POST information
to Zope.

I think the problem is this line in ModPythonHTTPRequest.py:

	HTTPRequest.__init__(self, mod_python_request, environ, response)

because of the differences between cgi.FieldStorage and util.FieldStorage.

Alexandre Jara Denstone
BankBoston - Retail Internet Systems
Edif?cio BankBoston 5? andar - Asa Na??es
Av. Chucri Zaidan, 246
* (11) 3398-6730
* ajdenstone(at)bkb.com.br


-----Mensagem original-----
De: Gregory (Grisha) Trubetskoy [mailto:grisha@modpython.org] 
Enviada em: quinta-feira, 17 de fevereiro de 2005 15:02
Para: mod_python@modpython.org
Assunto: [mod_python] mod_python + Plone ?



Has anyone tried this?

http://zope.org/Members/pperegrina/ZopeHandler

Even better, if someone could figure out how to use this with plone and 
post results to the list, that'd be much appreciated!

Grisha
_______________________________________________
Mod_python mailing list
Mod_python@modpython.org
http://mailman.modpython.org/mailman/listinfo/mod_python


Esta mensagem, incluindo seus anexos, pode conter informa??o confidencial
e/ou privilegiada. Se voc? recebeu este e-mail por engano, n?o utilize,
copie ou divulgue as informa??es nele contidas. E, por favor, avise
imediatamente o remetente, respondendo ao e-mail, e em seguida apague-o.
Este e-mail possui conte?do informativo e n?o transacional. Caso necessite
de atendimento imediato, recomendamos utilizar um dos canais dispon?veis:
Internet Banking <http://www.bankboston.com.br>  , BankBoston por telefone
<http://www.bankboston.com.br/bpt>  ou ag?ncia/representante de atendimento
de sua conveni?ncia. Agradecemos sua colabora??o.
This message, including its attachments, may contain confidential and/or
privileged information. If you received this email by mistake, do not use,
copy or disseminate any information herein contained. Please notify us
immediately by replying to the sender and then delete it. This email is for
information purposes only, not for transactions. In case you need immediate
assistance, please use one of the following channels: Internet Banking
<http://www.bankboston.com.br>  ,  BankBoston by phone
<http://www.bankboston.com.br/bpt>  or branch/relationship manager at your
convenience. Thank you for your cooperation.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20050224/244f1548/attachment.html
From dan.eloff at gmail.com  Thu Feb 24 14:47:25 2005
From: dan.eloff at gmail.com (Dan Eloff)
Date: Thu Feb 24 14:47:28 2005
Subject: [mod_python] mod_python and python 2.4?
Message-ID: <4817b6fc05022411472a704573@mail.gmail.com>

I had the list in digest mode, I didn't see your messages until now.
Thanks for the link!

>If the build seems OK (it's OK for me), could you tell us on this
>mailing list ? If it's confirmed to work, it will be hosted on the
>Apache web site and its mirrors.

It worked flawlessly. I just stopped apache (not sure if it is
required, but mod_python was running) and ran the install. It found
python 2.4, installed itself, and told me to setup my conf file. I
just started apache instead, changed a python test script to use
function decorators, and it worked.

Thanks!
-Dan
From dg at sponsera.com  Thu Feb 24 14:50:24 2005
From: dg at sponsera.com (David Geller)
Date: Thu Feb 24 14:52:37 2005
Subject: [mod_python] mod_python and python 2.4?
In-Reply-To: <4817b6fc05022311445743f407@mail.gmail.com>
References: <4817b6fc05022311445743f407@mail.gmail.com>
Message-ID: <421E3000.80904@sponsera.com>

I've had no problem at all using python 2.4 with mod_python (3.1.3).  It 
seems to work fine! This is on linux, and I compiled from source.

-David

Dan Eloff wrote:
> I tried installing mod_python, and it told me it could not find python
> 2.3, so I had to download and install python 2.3. Now I find myself
> missing some of the python 2.4 features. Python 2.4 has been out for
> close to a year now, why is it taking so long to make it compatible?
> Is there anything I could do to help?
> 
> -Dan
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
> 
From donniejones18 at gmail.com  Thu Feb 24 15:55:22 2005
From: donniejones18 at gmail.com (donnie jones)
Date: Thu Feb 24 15:55:40 2005
Subject: [mod_python] Session example and problems.
Message-ID: <ff87600805022412551319bf59@mail.gmail.com>

Hello,

Could someone please give me an example of using the Session() 
in modpython for passing data between functions?  
I have been googling, but with no success..

The problem I am having is that each time I reload a page that calls
the function like below, it creates a new session.

def test(req):
  sess = Sess(req);
  sid = sess.id();
  if sess.is_new():
    req.write("new session %s" % sid);
  else:
    sess.load();
    req.write("%s" % sess['username']);

I am printing the session id and each time the function is loaded
I get a new session id, thus I cannot store data in the session
to use in other functions...

Thank you.
__
Donnie
From grahamd at dscpl.com.au  Thu Feb 24 16:22:24 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Thu Feb 24 16:22:36 2005
Subject: [mod_python] Session example and problems.
Message-ID: <1109280144.2187@dscpl.user.openhosting.com>

>From documentation:

  save()
    This method writes session values to storage.

I am sure someone will post yet another example, but there has been
heaps of discussion about sessions before on the mailing list. You might
therefore go to www.modpython.org and plug:

  session save inurl:pipermail

into the search box. Doing this you may well find lots of other stuff as
well to answer questions you don't yet have.

Graham


donnie jones wrote ..
> Hello,
> 
> Could someone please give me an example of using the Session() 
> in modpython for passing data between functions?  
> I have been googling, but with no success..
> 
> The problem I am having is that each time I reload a page that calls
> the function like below, it creates a new session.
> 
> def test(req):
>   sess = Sess(req);
>   sid = sess.id();
>   if sess.is_new():
>     req.write("new session %s" % sid);
>   else:
>     sess.load();
>     req.write("%s" % sess['username']);
> 
> I am printing the session id and each time the function is loaded
> I get a new session id, thus I cannot store data in the session
> to use in other functions...
> 
> Thank you.
> __
> Donnie
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
From harrison at tbc.net  Thu Feb 24 16:36:43 2005
From: harrison at tbc.net (Shawn Harrison)
Date: Thu Feb 24 16:34:18 2005
Subject: [mod_python] Session example and problems.
In-Reply-To: <ff87600805022412551319bf59@mail.gmail.com>
References: <ff87600805022412551319bf59@mail.gmail.com>
Message-ID: <421E48EB.3090207@tbc.net>

donnie jones wrote [02/24/05 2:55 PM]:
> Hello,
> 
> Could someone please give me an example of using the Session() 
> in modpython for passing data between functions?  
> I have been googling, but with no success..
> 
> The problem I am having is that each time I reload a page that calls
> the function like below, it creates a new session.
> 
> def test(req):
>   sess = Sess(req);
>   sid = sess.id();
>   if sess.is_new():
>     req.write("new session %s" % sid);
>   else:
>     sess.load();
>     req.write("%s" % sess['username']);
> 
> I am printing the session id and each time the function is loaded
> I get a new session id, thus I cannot store data in the session
> to use in other functions...

class BaseSession(req[, sid, secret, timeout, lock, lockfile])
..
     save()
         This method writes session values to storage.

It doesn't appear that you are doing this. It only writes the data when 
you tell it to.

Shawn Harrison
From christopher.jackson at gmail.com  Thu Feb 24 17:02:56 2005
From: christopher.jackson at gmail.com (Chris Jackson)
Date: Thu Feb 24 17:02:59 2005
Subject: [mod_python] Session example and problems.
In-Reply-To: <ff87600805022412551319bf59@mail.gmail.com>
References: <ff87600805022412551319bf59@mail.gmail.com>
Message-ID: <4d11484d05022414022fbe5d81@mail.gmail.com>

http://www.modpython.org/pipermail/mod_python/2005-January/017111.html

~= Chris =~


On Thu, 24 Feb 2005 15:55:22 -0500, donnie jones
<donniejones18@gmail.com> wrote:
> Hello,
> 
> Could someone please give me an example of using the Session()
> in modpython for passing data between functions?
> I have been googling, but with no success..
> 
> The problem I am having is that each time I reload a page that calls
> the function like below, it creates a new session.
> 
> def test(req):
>   sess = Sess(req);
>   sid = sess.id();
>   if sess.is_new():
>     req.write("new session %s" % sid);
>   else:
>     sess.load();
>     req.write("%s" % sess['username']);
> 
> I am printing the session id and each time the function is loaded
> I get a new session id, thus I cannot store data in the session
> to use in other functions...
> 
> Thank you.
> __
> Donnie
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>
From christopher.jackson at gmail.com  Thu Feb 24 17:57:46 2005
From: christopher.jackson at gmail.com (Chris Jackson)
Date: Thu Feb 24 17:57:48 2005
Subject: [mod_python] Session example and problems.
In-Reply-To: <421E5A15.6010704@tbc.net>
References: <ff87600805022412551319bf59@mail.gmail.com>
	<4d11484d05022414022fbe5d81@mail.gmail.com> <421E5A15.6010704@tbc.net>
Message-ID: <4d11484d050224145755ec26cb@mail.gmail.com>

Yeah, it took me a while to figure that out...trial-and-error.

~= Chris =~


On Thu, 24 Feb 2005 16:49:57 -0600, Shawn Harrison <harrison@tbc.net> wrote:
> Chris Jackson wrote [02/24/05 4:02 PM]:
> > http://www.modpython.org/pipermail/mod_python/2005-January/017111.html
> >
> > ~= Chris =~
> 
> Looks like that answers my question as well: My page is hanging because
> I created another session object that's still out there, and it's
> holding a lock on the file. I should RTFM more closely.
> 
> Thanks,
> Shawn Harrison
>
From lafras at sun.ac.za  Fri Feb 25 09:36:10 2005
From: lafras at sun.ac.za (lafras@sun.ac.za)
Date: Fri Feb 25 07:37:10 2005
Subject: [mod_python] newb question on apache conf
Message-ID: <Pine.LNX.4.61.0502251428290.9330@localhost>

hi,

i have the following in my apache conf file,

<Directory "path/to/my/directory">
     SetHandler mod_python
     PythonHandler mod_python.publisher
     PythonDebug On
</Directory>

I get some odd behaviour though,

when opening up a *.py script in my browser, everything works fine and 
apache displays what it should, however when i try open a *.html file, i 
get this error,

Mod_python error: "PythonHandler mod_python.publisher"

Traceback (most recent call last):

   File "/usr/lib/python2.3/site-packages/mod_python/apache.py", line 299, 
in HandlerDispatch
     result = object(req)

   File "/usr/lib/python2.3/site-packages/mod_python/publisher.py", line 
98, in handler
     path=[path])

   File "/usr/lib/python2.3/site-packages/mod_python/apache.py", line 454, 
in import_module
     f, p, d = imp.find_module(parts[i], path)

ImportError: No module named XXX

where XXX is a file XXX.html i'm trying to open.

could someone please point me in the right direction,
thanks in advance,

lafras
From nicolas.lehuen at gmail.com  Fri Feb 25 07:58:34 2005
From: nicolas.lehuen at gmail.com (Nicolas Lehuen)
Date: Fri Feb 25 07:58:39 2005
Subject: [mod_python] newb question on apache conf
In-Reply-To: <Pine.LNX.4.61.0502251428290.9330@localhost>
References: <Pine.LNX.4.61.0502251428290.9330@localhost>
Message-ID: <c298f2d705022504582c81b206@mail.gmail.com>

On Fri, 25 Feb 2005 14:36:10 +0000 (GMT), lafras@sun.ac.za
<lafras@sun.ac.za> wrote:
> hi,
> 
> i have the following in my apache conf file,
> 
> <Directory "path/to/my/directory">
>      SetHandler mod_python
>      PythonHandler mod_python.publisher
>      PythonDebug On
> </Directory>
> 
> I get some odd behaviour though,
> 
> when opening up a *.py script in my browser, everything works fine and
> apache displays what it should, however when i try open a *.html file, i
> get this error,
> 
> Mod_python error: "PythonHandler mod_python.publisher"
> 
> Traceback (most recent call last):
> 
>    File "/usr/lib/python2.3/site-packages/mod_python/apache.py", line 299,
> in HandlerDispatch
>      result = object(req)
> 
>    File "/usr/lib/python2.3/site-packages/mod_python/publisher.py", line
> 98, in handler
>      path=[path])
> 
>    File "/usr/lib/python2.3/site-packages/mod_python/apache.py", line 454,
> in import_module
>      f, p, d = imp.find_module(parts[i], path)
> 
> ImportError: No module named XXX
> 
> where XXX is a file XXX.html i'm trying to open.
> 
> could someone please point me in the right direction,
> thanks in advance,
> 
> lafras

Hi,

If you use the SetHandler directive, each and every request is handled
by mod_python, which then uses mod_python.publisher to publish
something according to the request. So with the setup you describe,
even a request for an html page is handled by the publisher, which
does not find anything to do with the URL it is provided.

A simple solution is simply to tell Apache to use mod_python only for
.py files ; for this you use the AddHandler directive instead of the
SetHandler one :

AddHandler mod_python .py

instead of :

SetHandler mod_python

Regards,
Nicolas
From list at joreybump.com  Fri Feb 25 09:26:02 2005
From: list at joreybump.com (Jorey Bump)
Date: Fri Feb 25 09:26:15 2005
Subject: [mod_python] newb question on apache conf
In-Reply-To: <c298f2d705022504582c81b206@mail.gmail.com>
References: <Pine.LNX.4.61.0502251428290.9330@localhost>
	<c298f2d705022504582c81b206@mail.gmail.com>
Message-ID: <421F357A.4060200@joreybump.com>

Nicolas Lehuen wrote:
> On Fri, 25 Feb 2005 14:36:10 +0000 (GMT), lafras@sun.ac.za
> <lafras@sun.ac.za> wrote:
>>when opening up a *.py script in my browser, everything works fine and
>>apache displays what it should, however when i try open a *.html file, i
>>get this error,
> 
> If you use the SetHandler directive, each and every request is handled
> by mod_python, which then uses mod_python.publisher to publish
> something according to the request. So with the setup you describe,
> even a request for an html page is handled by the publisher, which
> does not find anything to do with the URL it is provided.
> 
> A simple solution is simply to tell Apache to use mod_python only for
> .py files ; for this you use the AddHandler directive instead of the
> SetHandler one :
> 
> AddHandler mod_python .py
> 
> instead of :
> 
> SetHandler mod_python

As Nicolas says, AddHandler allows you to mix file types and works very 
well. However, you may lose the ability to hide the .py extension in 
your URLs. Assuming a published module in the apps directory, with the 
name foo.py that has a function named bar, SetHandler allows this:

  http://example.com/apps/foo/bar

while AddHandler generally permits only this:

  http://example.com/apps/foo.py/bar

Many people prefer the hidden extension for aesthetic reasons and to 
obscure the type of web technology used. While you may be able to 
achieve the same result with AddHandler and MultiViews, this introduces 
its own set of potential problems.

While you are getting used to the idiosyncracies of Publisher, you may 
want to use SetHandler and put *all* of your published modules in one 
directory (like the apps directory mentioned above) and your non-Python 
resources elsewhere. This will help you to avoid common mistakes made by 
beginners and steer you towards developing a structure that works best 
with Publisher.

From donniejones18 at gmail.com  Fri Feb 25 14:53:28 2005
From: donniejones18 at gmail.com (donnie jones)
Date: Fri Feb 25 14:53:31 2005
Subject: [mod_python] Session example and problems.
In-Reply-To: <421E48EB.3090207@tbc.net>
References: <ff87600805022412551319bf59@mail.gmail.com>
	<421E48EB.3090207@tbc.net>
Message-ID: <ff87600805022511532cd73ce1@mail.gmail.com>

def GetSid(req, sid=""):
  sess = Session(req);
  if sess.is_new():
    sess['u']="user";
    sess['p']="password";
    sid = sess.id();
    sess.save;
  else:
    sid = sess.id();
  req.write("%s" % sid);
  return;

# list mailboxes
def UseSession(req, sid=""):
  req.write("%s" % sid);
  sess = Session(req, sid, None, 1800, 0);
  if sess.is_new():
    req.write("<br/>session new<br/>");
    sid = sess.id();
  else:
    sess.load();
  req.write("%s" % sid);

I first call the GetSid from my javascript and I am using
XmlHttpRequest that gets the sid from the responseText.
Then I call UseSession function with the sid passed to it
through the javascript, and I print the sid to make sure the
correct id was passed and that works, but after the Session()
is ran it always creates a new session, 
I am not sure why... I used this link
http://www.modpython.org/pipermail/mod_python/2005-January/017111.html
as an example to follow...

Any ideas?
Thanks.

__
Donnie


On Thu, 24 Feb 2005 15:36:43 -0600, Shawn Harrison <harrison@tbc.net> wrote:
> donnie jones wrote [02/24/05 2:55 PM]:
> > Hello,
> >
> > Could someone please give me an example of using the Session()
> > in modpython for passing data between functions?
> > I have been googling, but with no success..
> >
> > The problem I am having is that each time I reload a page that calls
> > the function like below, it creates a new session.
> >
> > def test(req):
> >   sess = Sess(req);
> >   sid = sess.id();
> >   if sess.is_new():
> >     req.write("new session %s" % sid);
> >   else:
> >     sess.load();
> >     req.write("%s" % sess['username']);
> >
> > I am printing the session id and each time the function is loaded
> > I get a new session id, thus I cannot store data in the session
> > to use in other functions...
> 
> class BaseSession(req[, sid, secret, timeout, lock, lockfile])
> ..
>      save()
>          This method writes session values to storage.
> 
> It doesn't appear that you are doing this. It only writes the data when
> you tell it to.
> 
> Shawn Harrison
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>
From christopher.jackson at gmail.com  Fri Feb 25 16:31:43 2005
From: christopher.jackson at gmail.com (Chris Jackson)
Date: Fri Feb 25 16:31:46 2005
Subject: [mod_python] Session example and problems.
In-Reply-To: <ff87600805022511532cd73ce1@mail.gmail.com>
References: <ff87600805022412551319bf59@mail.gmail.com>
	<421E48EB.3090207@tbc.net> <ff87600805022511532cd73ce1@mail.gmail.com>
Message-ID: <4d11484d050225133176a715cd@mail.gmail.com>

This is not quite the same as in the example in the URL.

The example in the URL passes the sessid to an <input hidden...> field
via PSP templates.  And when a function like (def UseSession) is
called, req.form['sessid'] stores the value from this hidden field. 
That's how the sessid is passed.

In your GetSid function, you simply say req.write, which doesn't
really do anything but display it, vs. <input hidden...> which
captures the sessid to be used later.  After GetSid ends, your session
id is lost.

~= Chris =~


On Fri, 25 Feb 2005 14:53:28 -0500, donnie jones
<donniejones18@gmail.com> wrote:
> def GetSid(req, sid=""):
>   sess = Session(req);
>   if sess.is_new():
>     sess['u']="user";
>     sess['p']="password";
>     sid = sess.id();
>     sess.save;
>   else:
>     sid = sess.id();
>   req.write("%s" % sid);
>   return;
> 
> # list mailboxes
> def UseSession(req, sid=""):
>   req.write("%s" % sid);
>   sess = Session(req, sid, None, 1800, 0);
>   if sess.is_new():
>     req.write("<br/>session new<br/>");
>     sid = sess.id();
>   else:
>     sess.load();
>   req.write("%s" % sid);
> 
> I first call the GetSid from my javascript and I am using
> XmlHttpRequest that gets the sid from the responseText.
> Then I call UseSession function with the sid passed to it
> through the javascript, and I print the sid to make sure the
> correct id was passed and that works, but after the Session()
> is ran it always creates a new session,
> I am not sure why... I used this link
> http://www.modpython.org/pipermail/mod_python/2005-January/017111.html
> as an example to follow...
> 
> Any ideas?
> Thanks.
> 
> __
> Donnie
> 
> 
> On Thu, 24 Feb 2005 15:36:43 -0600, Shawn Harrison <harrison@tbc.net> wrote:
> > donnie jones wrote [02/24/05 2:55 PM]:
> > > Hello,
> > >
> > > Could someone please give me an example of using the Session()
> > > in modpython for passing data between functions?
> > > I have been googling, but with no success..
> > >
> > > The problem I am having is that each time I reload a page that calls
> > > the function like below, it creates a new session.
> > >
> > > def test(req):
> > >   sess = Sess(req);
> > >   sid = sess.id();
> > >   if sess.is_new():
> > >     req.write("new session %s" % sid);
> > >   else:
> > >     sess.load();
> > >     req.write("%s" % sess['username']);
> > >
> > > I am printing the session id and each time the function is loaded
> > > I get a new session id, thus I cannot store data in the session
> > > to use in other functions...
> >
> > class BaseSession(req[, sid, secret, timeout, lock, lockfile])
> > ..
> >      save()
> >          This method writes session values to storage.
> >
> > It doesn't appear that you are doing this. It only writes the data when
> > you tell it to.
> >
> > Shawn Harrison
> > _______________________________________________
> > Mod_python mailing list
> > Mod_python@modpython.org
> > http://mailman.modpython.org/mailman/listinfo/mod_python
> >
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>
From grahamd at dscpl.com.au  Fri Feb 25 16:47:59 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Fri Feb 25 16:49:30 2005
Subject: [mod_python] newb question on apache conf
In-Reply-To: <c298f2d705022504582c81b206@mail.gmail.com>
Message-ID: <EA6ECE2C-8776-11D9-9CD0-000393BB31F6@dscpl.com.au>


On Friday, February 25, 2005, at 11:58  PM, Nicolas Lehuen wrote:

> On Fri, 25 Feb 2005 14:36:10 +0000 (GMT), lafras@sun.ac.za
> <lafras@sun.ac.za> wrote:
>> hi,
>>
>> i have the following in my apache conf file,
>>
>> <Directory "path/to/my/directory">
>>      SetHandler mod_python
>>      PythonHandler mod_python.publisher
>>      PythonDebug On
>> </Directory>
>>
>> I get some odd behaviour though,
>
> If you use the SetHandler directive, each and every request is handled
> by mod_python, which then uses mod_python.publisher to publish
> something according to the request. So with the setup you describe,
> even a request for an html page is handled by the publisher, which
> does not find anything to do with the URL it is provided.
>
> A simple solution is simply to tell Apache to use mod_python only for
> .py files ; for this you use the AddHandler directive instead of the
> SetHandler one :
>
> AddHandler mod_python .py
>
> instead of :
>
> SetHandler mod_python

Alternatively, try using:

<Directory "path/to/my/directory">
      SetHandler mod_python
      PythonHandler mod_python.publisher
      PythonDebug On
      <Files *.html>
           SetHandler None
      </Files>
</Directory>

In other words, default is to send everything through 
mod_python.publisher
but you list exceptions which you don't want to be using <Files> and
resetting the handler back to None. You may though want to do this for
all sorts of files, eg, *.jpg, *.png, *.gif etc etc, which may be more
trouble that its worth.

BTW, if you do use:

   AddHandler mod_python .py

as suggested, make sure you also specify:

   <Files *.pyc>
       deny from all
   </Files>

This will protect you from having someone grab copies of your compiled
byte code files if it so happened that Apache ran as a user which had
permission to create them. Granted that most users Apache wouldn't run
this way, but it is still a risk that I don't believe I have ever seen
mentioned before.

Graham

From marvin.addison at sfacademy.org  Fri Feb 25 17:10:32 2005
From: marvin.addison at sfacademy.org (Marvin Addison)
Date: Fri Feb 25 17:10:33 2005
Subject: [mod_python] Session Causes TypeError: unscriptable object
Message-ID: <E8A3A6775B16CA41806D72A0A40844AC0EC9B9@mercury.sfaadmin.org>

We are getting the following error when attempting to use the mod_python Session object:

  File "C:\Python23\Lib\site-packages\mod_python\apache.py", line 299, in HandlerDispatch
    result = object(req)
  File "C:\Python23\Lib\site-packages\mod_python\publisher.py", line 136, in handler
    result = util.apply_fs_data(object, req.form, req=req)
  File "C:\Python23\Lib\site-packages\mod_python\util.py", line 361, in apply_fs_data
    return object(**args)
  File "C:/Develop/Websites/intranet.sfaadmin.org/www/reports\gpa-cum.py", line 205, in print_gpa
    session = Session.Session(req)
  File "C:\Python23\lib\site-packages\mod_python\Session.py", line 386, in Session
    timeout=timeout, lock=lock)
  File "C:\Python23\lib\site-packages\mod_python\Session.py", line 358, in __init__
    timeout=timeout, lock=lock)
  File "C:\Python23\lib\site-packages\mod_python\Session.py", line 132, in __init__
    Cookie.add_cookie(self._req, self.make_cookie())
  File "C:\Python23\lib\site-packages\mod_python\Session.py", line 160, in make_cookie
    c.path = dirpath[len(docroot):]
TypeError: unsubscriptable object

This is problem appears very similar to another post, http://modpython.org/pipermail/mod_python/2004-May/015705.html.  Unfortunately, there was no response to the problem on this thread.

Some additional information that might help someone help me:
 - The codebase on which I am encountering an error worked fine on Apache 2.0.52 when run the Apache process ran as LOCALSYSTEM on W2K3.  Running it as a normal user account on Apache 2.0.53 produces this error.  Smells like a permissions problem.
 - Changing line 160 of Session.py to the following works like a charm, including performing post backs that load and modify the session data we stored previously:
c.path = '/'.
 - The real problem with line 160 in Session.py is that the value of the dirpath variable appears to be None (confirmed through testing).  The dirpath variable is set on the previous line with the statement:
dirpath = self._req.hlist.directory
Apparently, the directory property of Request.hlist is None which sets dirpath to None as well causing line 160 to fail with TypeError: unsubscriptable object.

Any help or direction on this issue is greatly appreciated.

Marvin

From list at joreybump.com  Fri Feb 25 22:25:00 2005
From: list at joreybump.com (Jorey Bump)
Date: Fri Feb 25 22:25:05 2005
Subject: [mod_python] newb question on apache conf
In-Reply-To: <EA6ECE2C-8776-11D9-9CD0-000393BB31F6@dscpl.com.au>
References: <EA6ECE2C-8776-11D9-9CD0-000393BB31F6@dscpl.com.au>
Message-ID: <421FEC0C.5010708@joreybump.com>

Graham Dumpleton wrote:

> Alternatively, try using:
> 
> <Directory "path/to/my/directory">
>      SetHandler mod_python
>      PythonHandler mod_python.publisher
>      PythonDebug On
>      <Files *.html>
>           SetHandler None
>      </Files>
> </Directory>
> 
> In other words, default is to send everything through mod_python.publisher
> but you list exceptions which you don't want to be using <Files> and
> resetting the handler back to None. You may though want to do this for
> all sorts of files, eg, *.jpg, *.png, *.gif etc etc, which may be more
> trouble that its worth.

And possibly in the category of stupid apache/mod_python tricks:

<Directory /var/www>
     <FilesMatch "foo">
         SetHandler python-program
         PythonHandler mod_python.publisher
         PythonDebug On
     </FilesMatch>
</Directory>

This would allow you to mix and match file types to your heart's 
content, as long as the names of all (and only) published modules 
include "foo":

  http://host/foobar.py/somefunction

As a bonus, extension hiding still works:

  http://host/shipoffools/somefunction

As do modules in subdirectories:

  http://host/subdir/spamisnotfood/somefunction

But you can't do this:

  http://host/tomfoolery.jpg

This could be a lot of fun in a team environment, when other modules 
return a "Not found" error, while your cleverly named modules work fine. 
  Hmmm, April is on its way, I'd better find myself a team... :)
From list at joreybump.com  Sat Feb 26 01:01:32 2005
From: list at joreybump.com (Jorey Bump)
Date: Sat Feb 26 01:01:42 2005
Subject: [mod_python] newb question on apache conf
In-Reply-To: <421FEC0C.5010708@joreybump.com>
References: <EA6ECE2C-8776-11D9-9CD0-000393BB31F6@dscpl.com.au>
	<421FEC0C.5010708@joreybump.com>
Message-ID: <422010BC.3080906@joreybump.com>

Jorey Bump wrote:

> And possibly in the category of stupid apache/mod_python tricks:
> 
> <Directory /var/www>
>     <FilesMatch "foo">
>         SetHandler python-program
>         PythonHandler mod_python.publisher
>         PythonDebug On
>     </FilesMatch>
> </Directory>

On a practical note, this approach shows promise for "registering" your 
  published modules. For example, let's assume you have some modules 
named holygrail.py, lifeofbrian.py and meaningoflife.py. Your config 
could include this:

  <FilesMatch "holygrail|lifeofbrian|meaningoflife">

The names are sophisticated enough to easily avoid accidental collisions 
with other file names/types, and you can place the modules anywhere 
within the specified directory, to any depth.

But the real fun begins when you use multiple directives to register 
modules to specific subinterpreters (to support multiple developers, for 
example):

<Directory /var/www>
     PythonInterpPerDirective On
     <FilesMatch "holygrail|lifeofbrian|meaningoflife">
         SetHandler python-program
         PythonHandler mod_python.publisher
         PythonDebug On
         PythonPath "['/home/monty/python'] + sys.path"
     </FilesMatch>
     <FilesMatch "jabberwocky|timebandits|brazil">
         SetHandler python-program
         PythonHandler mod_python.publisher
         PythonDebug On
         PythonPath "['/home/gilliam/python'] + sys.path"
     </FilesMatch>
</Directory>

A configuration like this allows multiple developers to work somewhat 
independently, yet reduces the risk of namespace collisions when 
importing custom modules. Because these directives can be included in a 
.htaccess file instead of a <Directory> container, coordination among 
developers can be accomplished fairly easily.

Is there any way to reliably kill a child process associated with a 
specific subinterpreter, so a developer could force his own 
subinterpreter to restart without restarting apache?

From grahamd at dscpl.com.au  Sat Feb 26 03:29:20 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Sat Feb 26 03:29:31 2005
Subject: [mod_python] newb question on apache conf
In-Reply-To: <422010BC.3080906@joreybump.com>
References: <EA6ECE2C-8776-11D9-9CD0-000393BB31F6@dscpl.com.au>
	<421FEC0C.5010708@joreybump.com> <422010BC.3080906@joreybump.com>
Message-ID: <1adad4531f7508af75cfe134481a0c5f@dscpl.com.au>


On 26/02/2005, at 5:01 PM, Jorey Bump wrote:
> On a practical note, this approach shows promise for "registering" 
> your  published modules. For example, let's assume you have some 
> modules named holygrail.py, lifeofbrian.py and meaningoflife.py. Your 
> config could include this:
>
>  <FilesMatch "holygrail|lifeofbrian|meaningoflife">
>
> The names are sophisticated enough to easily avoid accidental 
> collisions with other file names/types, and you can place the modules 
> anywhere within the specified directory, to any depth.
>
> But the real fun begins when you use multiple directives to register 
> modules to specific subinterpreters (to support multiple developers, 
> for example):
>
> <Directory /var/www>
>     PythonInterpPerDirective On
>     <FilesMatch "holygrail|lifeofbrian|meaningoflife">
>         SetHandler python-program
>         PythonHandler mod_python.publisher
>         PythonDebug On
>         PythonPath "['/home/monty/python'] + sys.path"
>     </FilesMatch>
>     <FilesMatch "jabberwocky|timebandits|brazil">
>         SetHandler python-program
>         PythonHandler mod_python.publisher
>         PythonDebug On
>         PythonPath "['/home/gilliam/python'] + sys.path"
>     </FilesMatch>
> </Directory>
>
> A configuration like this allows multiple developers to work somewhat 
> independently, yet reduces the risk of namespace collisions when 
> importing custom modules. Because these directives can be included in 
> a .htaccess file instead of a <Directory> container, coordination 
> among developers can be accomplished fairly easily.

You would be better off not using PythonInterpPerDirective. Just set the
interpreter name directly. Ie.,

<Directory /var/www>
     <FilesMatch "holygrail|lifeofbrian|meaningoflife">
         PythonInterpreter "monty"
         SetHandler python-program
         PythonHandler mod_python.publisher
         PythonDebug On
         PythonPath "['/home/monty/python'] + sys.path"
     </FilesMatch>
     <FilesMatch "jabberwocky|timebandits|brazil">
         PythonInterpreter "gilliam"
         SetHandler python-program
         PythonHandler mod_python.publisher
         PythonDebug On
         PythonPath "['/home/gilliam/python'] + sys.path"
     </FilesMatch>
</Directory>

This way in a different part of the directory hierarchy one could extend
the set of files which are handled within a specific interpreter for a
user.


From list at joreybump.com  Sat Feb 26 10:09:14 2005
From: list at joreybump.com (Jorey Bump)
Date: Sat Feb 26 10:09:19 2005
Subject: [mod_python] newb question on apache conf
In-Reply-To: <1adad4531f7508af75cfe134481a0c5f@dscpl.com.au>
References: <EA6ECE2C-8776-11D9-9CD0-000393BB31F6@dscpl.com.au>
	<421FEC0C.5010708@joreybump.com> <422010BC.3080906@joreybump.com>
	<1adad4531f7508af75cfe134481a0c5f@dscpl.com.au>
Message-ID: <4220911A.5050206@joreybump.com>

Graham Dumpleton wrote:

> You would be better off not using PythonInterpPerDirective. Just set the
> interpreter name directly. Ie.,
> 
> <Directory /var/www>
>     <FilesMatch "holygrail|lifeofbrian|meaningoflife">
>         PythonInterpreter "monty"
>         SetHandler python-program
>         PythonHandler mod_python.publisher
>         PythonDebug On
>         PythonPath "['/home/monty/python'] + sys.path"
>     </FilesMatch>
>     <FilesMatch "jabberwocky|timebandits|brazil">
>         PythonInterpreter "gilliam"
>         SetHandler python-program
>         PythonHandler mod_python.publisher
>         PythonDebug On
>         PythonPath "['/home/gilliam/python'] + sys.path"
>     </FilesMatch>
> </Directory>
> 
> This way in a different part of the directory hierarchy one could extend
> the set of files which are handled within a specific interpreter for a
> user.

That's a good point. In either case, you're abstracting the risk of name 
collisions to another level.

For example, in an environment with multiple virtual hosts, you'd need 
to ensure that named interpreters weren't being shared unintentionally. 
So, if you develop in an environment with virtual hosts named 
test.example.com and www.example.com, you'd want to distinguish the 
interpreter in the test environment, somehow:

   PythonInterpreter "test-monty"

Is it possible to pass a variable as the name, or to rename it while 
it's running, to guarantee some measure of uniqueness? I tried renaming 
req.interpreter, but it's a readonly attribute.



From donniejones18 at gmail.com  Sun Feb 27 02:20:38 2005
From: donniejones18 at gmail.com (donnie jones)
Date: Sun Feb 27 02:20:40 2005
Subject: [mod_python] Session example and problems.
In-Reply-To: <ff8760080502261433141c7620@mail.gmail.com>
References: <ff87600805022412551319bf59@mail.gmail.com>
	<421E48EB.3090207@tbc.net> <ff87600805022511532cd73ce1@mail.gmail.com>
	<4d11484d050225133176a715cd@mail.gmail.com>
	<ff8760080502261433141c7620@mail.gmail.com>
Message-ID: <ff876008050226232024f1862a@mail.gmail.com>

I am not understanding part of your explanation.
When I do the req.write of the sid, I can then pass it to the UseSession
function, and that UseSession now gets the correct session id.
I req.write the session id in the UseSession function and it is the
same as the session id from the GetSID function....

Are you saying that the session itself is lost without saving the sesion
id in the <input hidden>  ?  I am confused why passing the session id
to the Session(req, sid) shouldn't keep the same session...

Thanks.

__
Donnie


On Fri, 25 Feb 2005 16:31:43 -0500, Chris Jackson
<christopher.jackson@gmail.com> wrote:
> This is not quite the same as in the example in the URL.
>
> The example in the URL passes the sessid to an <input hidden...> field
> via PSP templates.  And when a function like (def UseSession) is
> called, req.form['sessid'] stores the value from this hidden field.
> That's how the sessid is passed.
>
> In your GetSid function, you simply say req.write, which doesn't
> really do anything but display it, vs. <input hidden...> which
> captures the sessid to be used later.  After GetSid ends, your session
> id is lost.
>
> ~= Chris =~
>
>
> On Fri, 25 Feb 2005 14:53:28 -0500, donnie jones
> <donniejones18@gmail.com> wrote:
> > def GetSid(req, sid=""):
> >   sess = Session(req);
> >   if sess.is_new():
> >     sess['u']="user";
> >     sess['p']="password";
> >     sid = sess.id();
> >     sess.save;
> >   else:
> >     sid = sess.id();
> >   req.write("%s" % sid);
> >   return;
> >
> > # list mailboxes
> > def UseSession(req, sid=""):
> >   req.write("%s" % sid);
> >   sess = Session(req, sid, None, 1800, 0);
> >   if sess.is_new():
> >     req.write("<br/>session new<br/>");
> >     sid = sess.id();
> >   else:
> >     sess.load();
> >   req.write("%s" % sid);
> >
> > I first call the GetSid from my javascript and I am using
> > XmlHttpRequest that gets the sid from the responseText.
> > Then I call UseSession function with the sid passed to it
> > through the javascript, and I print the sid to make sure the
> > correct id was passed and that works, but after the Session()
> > is ran it always creates a new session,
> > I am not sure why... I used this link
> > http://www.modpython.org/pipermail/mod_python/2005-January/017111.html
> > as an example to follow...
> >
> > Any ideas?
> > Thanks.
> >
> > __
> > Donnie
> >
> >
> > On Thu, 24 Feb 2005 15:36:43 -0600, Shawn Harrison <harrison@tbc.net> wrote:
> > > donnie jones wrote [02/24/05 2:55 PM]:
> > > > Hello,
> > > >
> > > > Could someone please give me an example of using the Session()
> > > > in modpython for passing data between functions?
> > > > I have been googling, but with no success..
> > > >
> > > > The problem I am having is that each time I reload a page that calls
> > > > the function like below, it creates a new session.
> > > >
> > > > def test(req):
> > > >   sess = Sess(req);
> > > >   sid = sess.id();
> > > >   if sess.is_new():
> > > >     req.write("new session %s" % sid);
> > > >   else:
> > > >     sess.load();
> > > >     req.write("%s" % sess['username']);
> > > >
> > > > I am printing the session id and each time the function is loaded
> > > > I get a new session id, thus I cannot store data in the session
> > > > to use in other functions...
> > >
> > > class BaseSession(req[, sid, secret, timeout, lock, lockfile])
> > > ..
> > >      save()
> > >          This method writes session values to storage.
> > >
> > > It doesn't appear that you are doing this. It only writes the data when
> > > you tell it to.
> > >
> > > Shawn Harrison
> > > _______________________________________________
> > > Mod_python mailing list
> > > Mod_python@modpython.org
> > > http://mailman.modpython.org/mailman/listinfo/mod_python
> > >
> > _______________________________________________
> > Mod_python mailing list
> > Mod_python@modpython.org
> > http://mailman.modpython.org/mailman/listinfo/mod_python
> >
>
From leejd80 at gmail.com  Sun Feb 27 02:54:05 2005
From: leejd80 at gmail.com (Gerald Lee)
Date: Sun Feb 27 02:54:08 2005
Subject: [mod_python] How to get path from URL
Message-ID: <7dbf822f05022623547dcfe534@mail.gmail.com>

The url is: http://localhost/ebiz/admin/index.py/index
I can get string "http://localhost/ebiz/admin/", who can help me?


-- 
My Blog >> http://leejd.cndev.org
My QQ >> 9847243
From grahamd at dscpl.com.au  Sun Feb 27 03:35:03 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Sun Feb 27 03:35:21 2005
Subject: [mod_python] How to get path from URL
In-Reply-To: <7dbf822f05022623547dcfe534@mail.gmail.com>
References: <7dbf822f05022623547dcfe534@mail.gmail.com>
Message-ID: <0b4667a05a12cb98bf7d7d8cb6618db1@dscpl.com.au>

On 27/02/2005, at 6:54 PM, Gerald Lee wrote:

> The url is: http://localhost/ebiz/admin/index.py/index
> I can get string "http://localhost/ebiz/admin/", who can help me?

Closest you will get is "req.uri". It will not have "http://localhost" 
on
it and will also have "index.py/index". You can though use 
"req.path_info"
to work out how much to strip off the end.

Read through the documentation on the request object for additional 
info.

Graham

From ales at mur.at  Sun Feb 27 06:43:53 2005
From: ales at mur.at (Ales Zemene)
Date: Sun Feb 27 06:43:57 2005
Subject: [mod_python] list archives
Message-ID: <20050227114353.GN25825@mur.at>

hi,
the link on http://mailman.modpython.org/mailman/listinfo/mod_python
is taking me to 
[MITgcm-support] obcs/exf interactions
Ales Zemene
From harrison at tbc.net  Sun Feb 27 11:52:42 2005
From: harrison at tbc.net (Shawn Harrison)
Date: Sun Feb 27 12:09:32 2005
Subject: [mod_python] How to get path from URL
In-Reply-To: <7dbf822f05022623547dcfe534@mail.gmail.com>
References: <7dbf822f05022623547dcfe534@mail.gmail.com>
Message-ID: <4221FADA.7010704@tbc.net>

Gerald Lee wrote [02/27/05 1:54 AM]:
> The url is: http://localhost/ebiz/admin/index.py/index
> I can get string "http://localhost/ebiz/admin/", who can help me?

I got curious, so I came up with the following:

i = len(req.document_root())
path = req.filename[i+1:]	# +1 is for the fwd slash
p = 'http://' + '/'.join([req.hostname, path])

# same thing, functional style
p = ('http://'
     + '/'.join([req.hostname, 
req.filename.strip('/')[len(req.document_root().strip('/'))+1:]]))


This makes no provision for the case where uri = req.hostname.
Shawn Harrison
From christopher.jackson at gmail.com  Sun Feb 27 13:43:38 2005
From: christopher.jackson at gmail.com (Chris Jackson)
Date: Sun Feb 27 13:43:40 2005
Subject: [mod_python] Session example and problems.
In-Reply-To: <ff8760080502261433141c7620@mail.gmail.com>
References: <ff87600805022412551319bf59@mail.gmail.com>
	<421E48EB.3090207@tbc.net> <ff87600805022511532cd73ce1@mail.gmail.com>
	<4d11484d050225133176a715cd@mail.gmail.com>
	<ff8760080502261433141c7620@mail.gmail.com>
Message-ID: <4d11484d05022710432e6fafe4@mail.gmail.com>

So how is the session id getting form GetSID to UseSession?
In other words, how does the sessid go from:

GetSID => javascript => UseSession 

req.write simply sends the output to the browser.  Does your
javascript somehow pick it up?  The default parameter of UseSession is
(req, sid="") <-blanks.  What sets this parameter?  UseSession is a
handler....not just some regular function.

The way I do it:

GetSID (...sessid = sess.id()....)  # new session => 
t = psp.PSP(filename = 'blah.psp') # load psp template =>
t.run(vars={'sessid':sessid, ...}) # pass vars dictionary to template
to fill in <%= %> holes =>
blah.psp  (<html>.......... <input type="hidden" name="sessid"
value="<%=sessid%>">......</html>)

~= Chris =~

On Sat, 26 Feb 2005 17:33:51 -0500, donnie jones
<donniejones18@gmail.com> wrote:
> I am not understanding part of your explanation.
> When I do the req.write of the sid, I can then pass it to the UseSession
> function, and that UseSession now gets the correct session id.
> I req.write the session id in the UseSession function and it is the
> same as the session id from the GetSID function....
> 
> Are you saying that the session itself is lost without saving the sesion
> id in the <input hidden>  ?  I am confused why passing the session id
> to the Session(req, sid) shouldn't keep the same session...
> 
> Thanks.
> 
> __
> Donnie
> 
> 
> On Fri, 25 Feb 2005 16:31:43 -0500, Chris Jackson
> <christopher.jackson@gmail.com> wrote:
> > This is not quite the same as in the example in the URL.
> >
> > The example in the URL passes the sessid to an <input hidden...> field
> > via PSP templates.  And when a function like (def UseSession) is
> > called, req.form['sessid'] stores the value from this hidden field.
> > That's how the sessid is passed.
> >
> > In your GetSid function, you simply say req.write, which doesn't
> > really do anything but display it, vs. <input hidden...> which
> > captures the sessid to be used later.  After GetSid ends, your session
> > id is lost.
> >
> > ~= Chris =~
> >
> >
> > On Fri, 25 Feb 2005 14:53:28 -0500, donnie jones
> > <donniejones18@gmail.com> wrote:
> > > def GetSid(req, sid=""):
> > >   sess = Session(req);
> > >   if sess.is_new():
> > >     sess['u']="user";
> > >     sess['p']="password";
> > >     sid = sess.id();
> > >     sess.save;
> > >   else:
> > >     sid = sess.id();
> > >   req.write("%s" % sid);
> > >   return;
> > >
> > > # list mailboxes
> > > def UseSession(req, sid=""):
> > >   req.write("%s" % sid);
> > >   sess = Session(req, sid, None, 1800, 0);
> > >   if sess.is_new():
> > >     req.write("<br/>session new<br/>");
> > >     sid = sess.id();
> > >   else:
> > >     sess.load();
> > >   req.write("%s" % sid);
> > >
> > > I first call the GetSid from my javascript and I am using
> > > XmlHttpRequest that gets the sid from the responseText.
> > > Then I call UseSession function with the sid passed to it
> > > through the javascript, and I print the sid to make sure the
> > > correct id was passed and that works, but after the Session()
> > > is ran it always creates a new session,
> > > I am not sure why... I used this link
> > > http://www.modpython.org/pipermail/mod_python/2005-January/017111.html
> > > as an example to follow...
> > >
> > > Any ideas?
> > > Thanks.
> > >
> > > __
> > > Donnie
> > >
> > >
> > > On Thu, 24 Feb 2005 15:36:43 -0600, Shawn Harrison <harrison@tbc.net> wrote:
> > > > donnie jones wrote [02/24/05 2:55 PM]:
> > > > > Hello,
> > > > >
> > > > > Could someone please give me an example of using the Session()
> > > > > in modpython for passing data between functions?
> > > > > I have been googling, but with no success..
> > > > >
> > > > > The problem I am having is that each time I reload a page that calls
> > > > > the function like below, it creates a new session.
> > > > >
> > > > > def test(req):
> > > > >   sess = Sess(req);
> > > > >   sid = sess.id();
> > > > >   if sess.is_new():
> > > > >     req.write("new session %s" % sid);
> > > > >   else:
> > > > >     sess.load();
> > > > >     req.write("%s" % sess['username']);
> > > > >
> > > > > I am printing the session id and each time the function is loaded
> > > > > I get a new session id, thus I cannot store data in the session
> > > > > to use in other functions...
> > > >
> > > > class BaseSession(req[, sid, secret, timeout, lock, lockfile])
> > > > ..
> > > >      save()
> > > >          This method writes session values to storage.
> > > >
> > > > It doesn't appear that you are doing this. It only writes the data when
> > > > you tell it to.
> > > >
> > > > Shawn Harrison
> > > > _______________________________________________
> > > > Mod_python mailing list
> > > > Mod_python@modpython.org
> > > > http://mailman.modpython.org/mailman/listinfo/mod_python
> > > >
> > > _______________________________________________
> > > Mod_python mailing list
> > > Mod_python@modpython.org
> > > http://mailman.modpython.org/mailman/listinfo/mod_python
> > >
> >
>
From christopher.jackson at gmail.com  Sun Feb 27 13:47:31 2005
From: christopher.jackson at gmail.com (Chris Jackson)
Date: Sun Feb 27 13:47:33 2005
Subject: [mod_python] Session example and problems.
In-Reply-To: <4d11484d05022710432e6fafe4@mail.gmail.com>
References: <ff87600805022412551319bf59@mail.gmail.com>
	<421E48EB.3090207@tbc.net> <ff87600805022511532cd73ce1@mail.gmail.com>
	<4d11484d050225133176a715cd@mail.gmail.com>
	<ff8760080502261433141c7620@mail.gmail.com>
	<4d11484d05022710432e6fafe4@mail.gmail.com>
Message-ID: <4d11484d050227104773e5bc0d@mail.gmail.com>

To add to this:

When UseSession, for example, is called, the parameters (req, sessid)
get populated via the publisher handler with the values from the
<form>.  So, since sessid is part of the form (<input type="hidden"
name="sessid"....>), then sessid  now get's passed this hidden value
which came from the GetSID function.  Or I could simply grab it by
saying req.form['sessid'].

~= Chris =~


On Sun, 27 Feb 2005 13:43:38 -0500, Chris Jackson
<christopher.jackson@gmail.com> wrote:
> So how is the session id getting form GetSID to UseSession?
> In other words, how does the sessid go from:
> 
> GetSID => javascript => UseSession
> 
> req.write simply sends the output to the browser.  Does your
> javascript somehow pick it up?  The default parameter of UseSession is
> (req, sid="") <-blanks.  What sets this parameter?  UseSession is a
> handler....not just some regular function.
> 
> The way I do it:
> 
> GetSID (...sessid = sess.id()....)  # new session =>
> t = psp.PSP(filename = 'blah.psp') # load psp template =>
> t.run(vars={'sessid':sessid, ...}) # pass vars dictionary to template
> to fill in <%= %> holes =>
> blah.psp  (<html>.......... <input type="hidden" name="sessid"
> value="<%=sessid%>">......</html>)
> 
> ~= Chris =~
> 
> On Sat, 26 Feb 2005 17:33:51 -0500, donnie jones
> <donniejones18@gmail.com> wrote:
> > I am not understanding part of your explanation.
> > When I do the req.write of the sid, I can then pass it to the UseSession
> > function, and that UseSession now gets the correct session id.
> > I req.write the session id in the UseSession function and it is the
> > same as the session id from the GetSID function....
> >
> > Are you saying that the session itself is lost without saving the sesion
> > id in the <input hidden>  ?  I am confused why passing the session id
> > to the Session(req, sid) shouldn't keep the same session...
> >
> > Thanks.
> >
> > __
> > Donnie
> >
> >
> > On Fri, 25 Feb 2005 16:31:43 -0500, Chris Jackson
> > <christopher.jackson@gmail.com> wrote:
> > > This is not quite the same as in the example in the URL.
> > >
> > > The example in the URL passes the sessid to an <input hidden...> field
> > > via PSP templates.  And when a function like (def UseSession) is
> > > called, req.form['sessid'] stores the value from this hidden field.
> > > That's how the sessid is passed.
> > >
> > > In your GetSid function, you simply say req.write, which doesn't
> > > really do anything but display it, vs. <input hidden...> which
> > > captures the sessid to be used later.  After GetSid ends, your session
> > > id is lost.
> > >
> > > ~= Chris =~
> > >
> > >
> > > On Fri, 25 Feb 2005 14:53:28 -0500, donnie jones
> > > <donniejones18@gmail.com> wrote:
> > > > def GetSid(req, sid=""):
> > > >   sess = Session(req);
> > > >   if sess.is_new():
> > > >     sess['u']="user";
> > > >     sess['p']="password";
> > > >     sid = sess.id();
> > > >     sess.save;
> > > >   else:
> > > >     sid = sess.id();
> > > >   req.write("%s" % sid);
> > > >   return;
> > > >
> > > > # list mailboxes
> > > > def UseSession(req, sid=""):
> > > >   req.write("%s" % sid);
> > > >   sess = Session(req, sid, None, 1800, 0);
> > > >   if sess.is_new():
> > > >     req.write("<br/>session new<br/>");
> > > >     sid = sess.id();
> > > >   else:
> > > >     sess.load();
> > > >   req.write("%s" % sid);
> > > >
> > > > I first call the GetSid from my javascript and I am using
> > > > XmlHttpRequest that gets the sid from the responseText.
> > > > Then I call UseSession function with the sid passed to it
> > > > through the javascript, and I print the sid to make sure the
> > > > correct id was passed and that works, but after the Session()
> > > > is ran it always creates a new session,
> > > > I am not sure why... I used this link
> > > > http://www.modpython.org/pipermail/mod_python/2005-January/017111.html
> > > > as an example to follow...
> > > >
> > > > Any ideas?
> > > > Thanks.
> > > >
> > > > __
> > > > Donnie
> > > >
> > > >
> > > > On Thu, 24 Feb 2005 15:36:43 -0600, Shawn Harrison <harrison@tbc.net> wrote:
> > > > > donnie jones wrote [02/24/05 2:55 PM]:
> > > > > > Hello,
> > > > > >
> > > > > > Could someone please give me an example of using the Session()
> > > > > > in modpython for passing data between functions?
> > > > > > I have been googling, but with no success..
> > > > > >
> > > > > > The problem I am having is that each time I reload a page that calls
> > > > > > the function like below, it creates a new session.
> > > > > >
> > > > > > def test(req):
> > > > > >   sess = Sess(req);
> > > > > >   sid = sess.id();
> > > > > >   if sess.is_new():
> > > > > >     req.write("new session %s" % sid);
> > > > > >   else:
> > > > > >     sess.load();
> > > > > >     req.write("%s" % sess['username']);
> > > > > >
> > > > > > I am printing the session id and each time the function is loaded
> > > > > > I get a new session id, thus I cannot store data in the session
> > > > > > to use in other functions...
> > > > >
> > > > > class BaseSession(req[, sid, secret, timeout, lock, lockfile])
> > > > > ..
> > > > >      save()
> > > > >          This method writes session values to storage.
> > > > >
> > > > > It doesn't appear that you are doing this. It only writes the data when
> > > > > you tell it to.
> > > > >
> > > > > Shawn Harrison
> > > > > _______________________________________________
> > > > > Mod_python mailing list
> > > > > Mod_python@modpython.org
> > > > > http://mailman.modpython.org/mailman/listinfo/mod_python
> > > > >
> > > > _______________________________________________
> > > > Mod_python mailing list
> > > > Mod_python@modpython.org
> > > > http://mailman.modpython.org/mailman/listinfo/mod_python
> > > >
> > >
> >
>
From donniejones18 at gmail.com  Sun Feb 27 14:44:13 2005
From: donniejones18 at gmail.com (donnie jones)
Date: Sun Feb 27 14:44:18 2005
Subject: Fwd: [mod_python] Session example and problems.
In-Reply-To: <ff87600805022711433919868@mail.gmail.com>
References: <ff87600805022412551319bf59@mail.gmail.com>
	<421E48EB.3090207@tbc.net> <ff87600805022511532cd73ce1@mail.gmail.com>
	<4d11484d050225133176a715cd@mail.gmail.com>
	<ff8760080502261433141c7620@mail.gmail.com>
	<4d11484d05022710432e6fafe4@mail.gmail.com>
	<4d11484d050227104773e5bc0d@mail.gmail.com>
	<ff87600805022711433919868@mail.gmail.com>
Message-ID: <ff87600805022711444c6a34fd@mail.gmail.com>

The javascript uses XMLHttpRequest and from the responseText is
able to get the SID and pass it to the UseSession function.

I write out the session id in the UseSession function to make sure
that the same session id is being passed, and it works.
However, when I pass that same session id to the Session(req, sid)
it creates another session...

__
Donnie

On Sun, 27 Feb 2005 13:47:31 -0500, Chris Jackson
<christopher.jackson@gmail.com> wrote:
> To add to this:
>
> When UseSession, for example, is called, the parameters (req, sessid)
> get populated via the publisher handler with the values from the
> <form>.  So, since sessid is part of the form (<input type="hidden"
> name="sessid"....>), then sessid  now get's passed this hidden value
> which came from the GetSID function.  Or I could simply grab it by
> saying req.form['sessid'].
>
> ~= Chris =~
>
> On Sun, 27 Feb 2005 13:43:38 -0500, Chris Jackson
> <christopher.jackson@gmail.com> wrote:
> > So how is the session id getting form GetSID to UseSession?
> > In other words, how does the sessid go from:
> >
> > GetSID => javascript => UseSession
> >
> > req.write simply sends the output to the browser.  Does your
> > javascript somehow pick it up?  The default parameter of UseSession is
> > (req, sid="") <-blanks.  What sets this parameter?  UseSession is a
> > handler....not just some regular function.
> >
> > The way I do it:
> >
> > GetSID (...sessid = sess.id()....)  # new session =>
> > t = psp.PSP(filename = 'blah.psp') # load psp template =>
> > t.run(vars={'sessid':sessid, ...}) # pass vars dictionary to template
> > to fill in <%= %> holes =>
> > blah.psp  (<html>.......... <input type="hidden" name="sessid"
> > value="<%=sessid%>">......</html>)
> >
> > ~= Chris =~
> >
> > On Sat, 26 Feb 2005 17:33:51 -0500, donnie jones
> > <donniejones18@gmail.com> wrote:
> > > I am not understanding part of your explanation.
> > > When I do the req.write of the sid, I can then pass it to the UseSession
> > > function, and that UseSession now gets the correct session id.
> > > I req.write the session id in the UseSession function and it is the
> > > same as the session id from the GetSID function....
> > >
> > > Are you saying that the session itself is lost without saving the sesion
> > > id in the <input hidden>  ?  I am confused why passing the session id
> > > to the Session(req, sid) shouldn't keep the same session...
> > >
> > > Thanks.
> > >
> > > __
> > > Donnie
> > >
> > >
> > > On Fri, 25 Feb 2005 16:31:43 -0500, Chris Jackson
> > > <christopher.jackson@gmail.com> wrote:
> > > > This is not quite the same as in the example in the URL.
> > > >
> > > > The example in the URL passes the sessid to an <input hidden...> field
> > > > via PSP templates.  And when a function like (def UseSession) is
> > > > called, req.form['sessid'] stores the value from this hidden field.
> > > > That's how the sessid is passed.
> > > >
> > > > In your GetSid function, you simply say req.write, which doesn't
> > > > really do anything but display it, vs. <input hidden...> which
> > > > captures the sessid to be used later.  After GetSid ends, your session
> > > > id is lost.
> > > >
> > > > ~= Chris =~
> > > >
> > > >
> > > > On Fri, 25 Feb 2005 14:53:28 -0500, donnie jones
> > > > <donniejones18@gmail.com> wrote:
> > > > > def GetSid(req, sid=""):
> > > > >   sess = Session(req);
> > > > >   if sess.is_new():
> > > > >     sess['u']="user";
> > > > >     sess['p']="password";
> > > > >     sid = sess.id();
> > > > >     sess.save;
> > > > >   else:
> > > > >     sid = sess.id();
> > > > >   req.write("%s" % sid);
> > > > >   return;
> > > > >
> > > > > # list mailboxes
> > > > > def UseSession(req, sid=""):
> > > > >   req.write("%s" % sid);
> > > > >   sess = Session(req, sid, None, 1800, 0);
> > > > >   if sess.is_new():
> > > > >     req.write("<br/>session new<br/>");
> > > > >     sid = sess.id();
> > > > >   else:
> > > > >     sess.load();
> > > > >   req.write("%s" % sid);
> > > > >
> > > > > I first call the GetSid from my javascript and I am using
> > > > > XmlHttpRequest that gets the sid from the responseText.
> > > > > Then I call UseSession function with the sid passed to it
> > > > > through the javascript, and I print the sid to make sure the
> > > > > correct id was passed and that works, but after the Session()
> > > > > is ran it always creates a new session,
> > > > > I am not sure why... I used this link
> > > > > http://www.modpython.org/pipermail/mod_python/2005-January/017111.html
> > > > > as an example to follow...
> > > > >
> > > > > Any ideas?
> > > > > Thanks.
> > > > >
> > > > > __
> > > > > Donnie
> > > > >
> > > > >
> > > > > On Thu, 24 Feb 2005 15:36:43 -0600, Shawn Harrison <harrison@tbc.net> wrote:
> > > > > > donnie jones wrote [02/24/05 2:55 PM]:
> > > > > > > Hello,
> > > > > > >
> > > > > > > Could someone please give me an example of using the Session()
> > > > > > > in modpython for passing data between functions?
> > > > > > > I have been googling, but with no success..
> > > > > > >
> > > > > > > The problem I am having is that each time I reload a page that calls
> > > > > > > the function like below, it creates a new session.
> > > > > > >
> > > > > > > def test(req):
> > > > > > >   sess = Sess(req);
> > > > > > >   sid = sess.id();
> > > > > > >   if sess.is_new():
> > > > > > >     req.write("new session %s" % sid);
> > > > > > >   else:
> > > > > > >     sess.load();
> > > > > > >     req.write("%s" % sess['username']);
> > > > > > >
> > > > > > > I am printing the session id and each time the function is loaded
> > > > > > > I get a new session id, thus I cannot store data in the session
> > > > > > > to use in other functions...
> > > > > >
> > > > > > class BaseSession(req[, sid, secret, timeout, lock, lockfile])
> > > > > > ..
> > > > > >      save()
> > > > > >          This method writes session values to storage.
> > > > > >
> > > > > > It doesn't appear that you are doing this. It only writes the data when
> > > > > > you tell it to.
> > > > > >
> > > > > > Shawn Harrison
> > > > > > _______________________________________________
> > > > > > Mod_python mailing list
> > > > > > Mod_python@modpython.org
> > > > > > http://mailman.modpython.org/mailman/listinfo/mod_python
> > > > > >
> > > > > _______________________________________________
> > > > > Mod_python mailing list
> > > > > Mod_python@modpython.org
> > > > > http://mailman.modpython.org/mailman/listinfo/mod_python
> > > > >
> > > >
> > >
> >
>
From grahamd at dscpl.com.au  Sun Feb 27 16:04:04 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Sun Feb 27 16:04:10 2005
Subject: [mod_python] How to get path from URL
In-Reply-To: <4221FADA.7010704@tbc.net>
References: <7dbf822f05022623547dcfe534@mail.gmail.com>
	<4221FADA.7010704@tbc.net>
Message-ID: <88f7f91c61ad47b342cecb651aedcc73@dscpl.com.au>


On 28/02/2005, at 3:52 AM, Shawn Harrison wrote:

> Gerald Lee wrote [02/27/05 1:54 AM]:
>> The url is: http://localhost/ebiz/admin/index.py/index
>> I can get string "http://localhost/ebiz/admin/", who can help me?
>
> I got curious, so I came up with the following:
>
> i = len(req.document_root())
> path = req.filename[i+1:]	# +1 is for the fwd slash
> p = 'http://' + '/'.join([req.hostname, path])
>
> # same thing, functional style
> p = ('http://'
>     + '/'.join([req.hostname, 
> req.filename.strip('/')[len(req.document_root().strip('/'))+1:]]))
>
>
> This makes no provision for the case where uri = req.hostname.

Don't understand your last comment, but I don't believe what you have 
will
always work. The problem is that you use the physical filesystem path 
info.
This will fail for ~user access and possibly other cases where a 
separate
physical directory is interposed into an arbitrary location in the URL
namespace.

Take the following for example:

   req.filename = /Users/grahamd/Sites/hclass/page
   req.document_root() = /usr/local/apache-2.0/htdocs
   req.uri = /~grahamd/hclass/page/method2
   req.unparsed_uri = /~grahamd/hclass/page/method2
   req.path_info = /method2

Your code yields:

   http://localhost/age

That it got so close was purely because virtual URL was similar length
to physical path name.

What you want is:

   p = 'http://' + req.hostname + req.uri[:-len(req.path_info)]

Which yields:

   http://localhost/~grahamd/hclass/page

This will not work though if not the standard server port or if "https" 
is
used.

One is therefore better off trying to work out the relative location to 
the
directory and avoid absolute URLs if possible.

Graham

From harrison at tbc.net  Sun Feb 27 17:47:27 2005
From: harrison at tbc.net (Shawn Harrison)
Date: Sun Feb 27 17:44:45 2005
Subject: [mod_python] How to get path from URL
In-Reply-To: <88f7f91c61ad47b342cecb651aedcc73@dscpl.com.au>
References: <7dbf822f05022623547dcfe534@mail.gmail.com>
	<4221FADA.7010704@tbc.net>
	<88f7f91c61ad47b342cecb651aedcc73@dscpl.com.au>
Message-ID: <42224DFF.6040009@tbc.net>

Sorry, Graham, I keep getting caught by "Reply" vs "Reply All".

Graham Dumpleton wrote [02/27/05 3:04 PM]:
> 
> On 28/02/2005, at 3:52 AM, Shawn Harrison wrote:
>> This makes no provision for the case where uri = req.hostname.
> 
> Don't understand your last comment, but I don't believe what you have will
> always work. 

Right. The point of the comment was to say that I made no effort to
provide a general solution, only to suggest a direction for exploration.
  Not a very good one at that.

> What you want is:
> 
>   p = 'http://' + req.hostname + req.uri[:-len(req.path_info)]
> 
> Which yields:
> 
>   http://localhost/~grahamd/hclass/page

Well, that's a lot less work, isn't it.

> This will not work though if not the standard server port or if "https" is
> used.

Thanks, I forgot to mention that.

Is the port available in mod_python? I wasn't able to find it when
working with this problem earlier. How about the protocol (https vs http)?

Shawn

From grahamd at dscpl.com.au  Sun Feb 27 18:22:05 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Sun Feb 27 18:22:07 2005
Subject: [mod_python] How to get path from URL
Message-ID: <1109546525.32141@dscpl.user.openhosting.com>

Shawn Harrison wrote ..
> > What you want is:
> > 
> >   p = 'http://' + req.hostname + req.uri[:-len(req.path_info)]
> > 
> > Which yields:
> > 
> >   http://localhost/~grahamd/hclass/page
> 
> Well, that's a lot less work, isn't it.
> 
> > This will not work though if not the standard server port or if "https"
> is
> > used.
> 
> Thanks, I forgot to mention that.
> 
> Is the port available in mod_python? I wasn't able to find it when
> working with this problem earlier. How about the protocol (https vs http)?

One can get the port from the connection object, but protocol, hostname
and port aren't usually wise things to rely on if one is intending to use the
derived address to plug back into a HTML page for example. This is because
it will fail with if your web page location is being masked by another instance
of Apache using proxy pass through.

The original poster would have to be clear about what they intended using
it for in order to comment further as to whether it is a good idea to be
doing what was asked for.

If the intent is to use the address in generated HTML content where it is
a hyperlink, you are thus better off using a relative address. This can be a
bit tricky if using publisher though where it may auto map to an index()
method as well as you accessing it explicitly. Ie., from memory if you
access "/dog" you can end up with:

  req.uri = /dog
  req.path_info =

If you instead access "/dog/index" you instead get for the same method:

  req.uri = /dog/index
  req.path_info = /index

If my thinking is right, the relative URL in the first case would need to
be "." and in the latter "..". You thus perhaps need to do something like:

  hops = req.path_info.split('/')
  if len(hops) == 1:
    relative = "."
  else:
    relative = '/'.join((len(hops)-1)*[".."])

If instead you are after a URL for the purposes of doing an internal/external
redirection, you do not need the protocol, hostname and port anyway and
could just say:

  target = req.uri[:-len(req.path_info)] + '/login
  req.internal_redirect(target)

Note, that the above haven't been throughly tested. I could also just be wrong
in the first place. :-)

Graham
From christopher.jackson at gmail.com  Sun Feb 27 21:29:57 2005
From: christopher.jackson at gmail.com (Chris Jackson)
Date: Sun Feb 27 21:29:59 2005
Subject: [mod_python] Session example and problems.
In-Reply-To: <ff87600805022711433919868@mail.gmail.com>
References: <ff87600805022412551319bf59@mail.gmail.com>
	<421E48EB.3090207@tbc.net> <ff87600805022511532cd73ce1@mail.gmail.com>
	<4d11484d050225133176a715cd@mail.gmail.com>
	<ff8760080502261433141c7620@mail.gmail.com>
	<4d11484d05022710432e6fafe4@mail.gmail.com>
	<4d11484d050227104773e5bc0d@mail.gmail.com>
	<ff87600805022711433919868@mail.gmail.com>
Message-ID: <4d11484d050227182957605606@mail.gmail.com>

Can you paste the line of code where you call UseSession, passing it the sid. 

~= Chris =~



On Sun, 27 Feb 2005 14:43:38 -0500, donnie jones
<donniejones18@gmail.com> wrote:
> The javascript uses XMLHttpRequest and from the responseText is
> able to get the SID and pass it to the UseSession function.
> 
> I write out the session id in the UseSession function to make sure
> that the same session id is being passed, and it works.
> However, when I pass that same session id to the Session(req, sid)
> it creates another session...
> 
> __
> Donnie
> 
> On Sun, 27 Feb 2005 13:47:31 -0500, Chris Jackson
> <christopher.jackson@gmail.com> wrote:
> > To add to this:
> >
> > When UseSession, for example, is called, the parameters (req, sessid)
> > get populated via the publisher handler with the values from the
> > <form>.  So, since sessid is part of the form (<input type="hidden"
> > name="sessid"....>), then sessid  now get's passed this hidden value
> > which came from the GetSID function.  Or I could simply grab it by
> > saying req.form['sessid'].
> >
> > ~= Chris =~
> >
> > On Sun, 27 Feb 2005 13:43:38 -0500, Chris Jackson
> > <christopher.jackson@gmail.com> wrote:
> > > So how is the session id getting form GetSID to UseSession?
> > > In other words, how does the sessid go from:
> > >
> > > GetSID => javascript => UseSession
> > >
> > > req.write simply sends the output to the browser.  Does your
> > > javascript somehow pick it up?  The default parameter of UseSession is
> > > (req, sid="") <-blanks.  What sets this parameter?  UseSession is a
> > > handler....not just some regular function.
> > >
> > > The way I do it:
> > >
> > > GetSID (...sessid = sess.id()....)  # new session =>
> > > t = psp.PSP(filename = 'blah.psp') # load psp template =>
> > > t.run(vars={'sessid':sessid, ...}) # pass vars dictionary to template
> > > to fill in <%= %> holes =>
> > > blah.psp  (<html>.......... <input type="hidden" name="sessid"
> > > value="<%=sessid%>">......</html>)
> > >
> > > ~= Chris =~
> > >
> > > On Sat, 26 Feb 2005 17:33:51 -0500, donnie jones
> > > <donniejones18@gmail.com> wrote:
> > > > I am not understanding part of your explanation.
> > > > When I do the req.write of the sid, I can then pass it to the UseSession
> > > > function, and that UseSession now gets the correct session id.
> > > > I req.write the session id in the UseSession function and it is the
> > > > same as the session id from the GetSID function....
> > > >
> > > > Are you saying that the session itself is lost without saving the sesion
> > > > id in the <input hidden>  ?  I am confused why passing the session id
> > > > to the Session(req, sid) shouldn't keep the same session...
> > > >
> > > > Thanks.
> > > >
> > > > __
> > > > Donnie
> > > >
> > > >
> > > > On Fri, 25 Feb 2005 16:31:43 -0500, Chris Jackson
> > > > <christopher.jackson@gmail.com> wrote:
> > > > > This is not quite the same as in the example in the URL.
> > > > >
> > > > > The example in the URL passes the sessid to an <input hidden...> field
> > > > > via PSP templates.  And when a function like (def UseSession) is
> > > > > called, req.form['sessid'] stores the value from this hidden field.
> > > > > That's how the sessid is passed.
> > > > >
> > > > > In your GetSid function, you simply say req.write, which doesn't
> > > > > really do anything but display it, vs. <input hidden...> which
> > > > > captures the sessid to be used later.  After GetSid ends, your session
> > > > > id is lost.
> > > > >
> > > > > ~= Chris =~
> > > > >
> > > > >
> > > > > On Fri, 25 Feb 2005 14:53:28 -0500, donnie jones
> > > > > <donniejones18@gmail.com> wrote:
> > > > > > def GetSid(req, sid=""):
> > > > > >   sess = Session(req);
> > > > > >   if sess.is_new():
> > > > > >     sess['u']="user";
> > > > > >     sess['p']="password";
> > > > > >     sid = sess.id();
> > > > > >     sess.save;
> > > > > >   else:
> > > > > >     sid = sess.id();
> > > > > >   req.write("%s" % sid);
> > > > > >   return;
> > > > > >
> > > > > > # list mailboxes
> > > > > > def UseSession(req, sid=""):
> > > > > >   req.write("%s" % sid);
> > > > > >   sess = Session(req, sid, None, 1800, 0);
> > > > > >   if sess.is_new():
> > > > > >     req.write("<br/>session new<br/>");
> > > > > >     sid = sess.id();
> > > > > >   else:
> > > > > >     sess.load();
> > > > > >   req.write("%s" % sid);
> > > > > >
> > > > > > I first call the GetSid from my javascript and I am using
> > > > > > XmlHttpRequest that gets the sid from the responseText.
> > > > > > Then I call UseSession function with the sid passed to it
> > > > > > through the javascript, and I print the sid to make sure the
> > > > > > correct id was passed and that works, but after the Session()
> > > > > > is ran it always creates a new session,
> > > > > > I am not sure why... I used this link
> > > > > > http://www.modpython.org/pipermail/mod_python/2005-January/017111.html
> > > > > > as an example to follow...
> > > > > >
> > > > > > Any ideas?
> > > > > > Thanks.
> > > > > >
> > > > > > __
> > > > > > Donnie
> > > > > >
> > > > > >
> > > > > > On Thu, 24 Feb 2005 15:36:43 -0600, Shawn Harrison <harrison@tbc.net> wrote:
> > > > > > > donnie jones wrote [02/24/05 2:55 PM]:
> > > > > > > > Hello,
> > > > > > > >
> > > > > > > > Could someone please give me an example of using the Session()
> > > > > > > > in modpython for passing data between functions?
> > > > > > > > I have been googling, but with no success..
> > > > > > > >
> > > > > > > > The problem I am having is that each time I reload a page that calls
> > > > > > > > the function like below, it creates a new session.
> > > > > > > >
> > > > > > > > def test(req):
> > > > > > > >   sess = Sess(req);
> > > > > > > >   sid = sess.id();
> > > > > > > >   if sess.is_new():
> > > > > > > >     req.write("new session %s" % sid);
> > > > > > > >   else:
> > > > > > > >     sess.load();
> > > > > > > >     req.write("%s" % sess['username']);
> > > > > > > >
> > > > > > > > I am printing the session id and each time the function is loaded
> > > > > > > > I get a new session id, thus I cannot store data in the session
> > > > > > > > to use in other functions...
> > > > > > >
> > > > > > > class BaseSession(req[, sid, secret, timeout, lock, lockfile])
> > > > > > > ..
> > > > > > >      save()
> > > > > > >          This method writes session values to storage.
> > > > > > >
> > > > > > > It doesn't appear that you are doing this. It only writes the data when
> > > > > > > you tell it to.
> > > > > > >
> > > > > > > Shawn Harrison
> > > > > > > _______________________________________________
> > > > > > > Mod_python mailing list
> > > > > > > Mod_python@modpython.org
> > > > > > > http://mailman.modpython.org/mailman/listinfo/mod_python
> > > > > > >
> > > > > > _______________________________________________
> > > > > > Mod_python mailing list
> > > > > > Mod_python@modpython.org
> > > > > > http://mailman.modpython.org/mailman/listinfo/mod_python
> > > > > >
> > > > >
> > > >
> > >
> >
>
From donniejones18 at gmail.com  Sun Feb 27 21:39:25 2005
From: donniejones18 at gmail.com (donnie jones)
Date: Sun Feb 27 21:39:29 2005
Subject: [mod_python] Session example and problems.
In-Reply-To: <4d11484d050227182957605606@mail.gmail.com>
References: <ff87600805022412551319bf59@mail.gmail.com>
	<421E48EB.3090207@tbc.net> <ff87600805022511532cd73ce1@mail.gmail.com>
	<4d11484d050225133176a715cd@mail.gmail.com>
	<ff8760080502261433141c7620@mail.gmail.com>
	<4d11484d05022710432e6fafe4@mail.gmail.com>
	<4d11484d050227104773e5bc0d@mail.gmail.com>
	<ff87600805022711433919868@mail.gmail.com>
	<4d11484d050227182957605606@mail.gmail.com>
Message-ID: <ff876008050227183970237892@mail.gmail.com>

Here is the code that calls the UseSession function,
and it passes the sid that was from the GetSid function
through the javascript.

xmlhttp=new XMLHttpRequest();

if(xmlhttp2) {
  url = "mail.py/GetMailboxes?sid=" + sid;
  xmlhttp2.open("GET", url, true);
}

I have a sneaking suspicion that each req is
overriding my sess = Session(req, sid) with a new session id
and it may be because the XMLHttpRequest doesn't pass
the cookie that is generated for the session to the page, 
and insteach with each calls it thinks a new session should
be created.

I'm working on trying to figure more out...
__
Donnie

On Sun, 27 Feb 2005 21:29:57 -0500, Chris Jackson
<christopher.jackson@gmail.com> wrote:
> Can you paste the line of code where you call UseSession, passing it the sid.
> 
> ~= Chris =~
> 
> On Sun, 27 Feb 2005 14:43:38 -0500, donnie jones
> <donniejones18@gmail.com> wrote:
> > The javascript uses XMLHttpRequest and from the responseText is
> > able to get the SID and pass it to the UseSession function.
> >
> > I write out the session id in the UseSession function to make sure
> > that the same session id is being passed, and it works.
> > However, when I pass that same session id to the Session(req, sid)
> > it creates another session...
> >
> > __
> > Donnie
> >
> > On Sun, 27 Feb 2005 13:47:31 -0500, Chris Jackson
> > <christopher.jackson@gmail.com> wrote:
> > > To add to this:
> > >
> > > When UseSession, for example, is called, the parameters (req, sessid)
> > > get populated via the publisher handler with the values from the
> > > <form>.  So, since sessid is part of the form (<input type="hidden"
> > > name="sessid"....>), then sessid  now get's passed this hidden value
> > > which came from the GetSID function.  Or I could simply grab it by
> > > saying req.form['sessid'].
> > >
> > > ~= Chris =~
> > >
> > > On Sun, 27 Feb 2005 13:43:38 -0500, Chris Jackson
> > > <christopher.jackson@gmail.com> wrote:
> > > > So how is the session id getting form GetSID to UseSession?
> > > > In other words, how does the sessid go from:
> > > >
> > > > GetSID => javascript => UseSession
> > > >
> > > > req.write simply sends the output to the browser.  Does your
> > > > javascript somehow pick it up?  The default parameter of UseSession is
> > > > (req, sid="") <-blanks.  What sets this parameter?  UseSession is a
> > > > handler....not just some regular function.
> > > >
> > > > The way I do it:
> > > >
> > > > GetSID (...sessid = sess.id()....)  # new session =>
> > > > t = psp.PSP(filename = 'blah.psp') # load psp template =>
> > > > t.run(vars={'sessid':sessid, ...}) # pass vars dictionary to template
> > > > to fill in <%= %> holes =>
> > > > blah.psp  (<html>.......... <input type="hidden" name="sessid"
> > > > value="<%=sessid%>">......</html>)
> > > >
> > > > ~= Chris =~
> > > >
> > > > On Sat, 26 Feb 2005 17:33:51 -0500, donnie jones
> > > > <donniejones18@gmail.com> wrote:
> > > > > I am not understanding part of your explanation.
> > > > > When I do the req.write of the sid, I can then pass it to the UseSession
> > > > > function, and that UseSession now gets the correct session id.
> > > > > I req.write the session id in the UseSession function and it is the
> > > > > same as the session id from the GetSID function....
> > > > >
> > > > > Are you saying that the session itself is lost without saving the sesion
> > > > > id in the <input hidden>  ?  I am confused why passing the session id
> > > > > to the Session(req, sid) shouldn't keep the same session...
> > > > >
> > > > > Thanks.
> > > > >
> > > > > __
> > > > > Donnie
> > > > >
> > > > >
> > > > > On Fri, 25 Feb 2005 16:31:43 -0500, Chris Jackson
> > > > > <christopher.jackson@gmail.com> wrote:
> > > > > > This is not quite the same as in the example in the URL.
> > > > > >
> > > > > > The example in the URL passes the sessid to an <input hidden...> field
> > > > > > via PSP templates.  And when a function like (def UseSession) is
> > > > > > called, req.form['sessid'] stores the value from this hidden field.
> > > > > > That's how the sessid is passed.
> > > > > >
> > > > > > In your GetSid function, you simply say req.write, which doesn't
> > > > > > really do anything but display it, vs. <input hidden...> which
> > > > > > captures the sessid to be used later.  After GetSid ends, your session
> > > > > > id is lost.
> > > > > >
> > > > > > ~= Chris =~
> > > > > >
> > > > > >
> > > > > > On Fri, 25 Feb 2005 14:53:28 -0500, donnie jones
> > > > > > <donniejones18@gmail.com> wrote:
> > > > > > > def GetSid(req, sid=""):
> > > > > > >   sess = Session(req);
> > > > > > >   if sess.is_new():
> > > > > > >     sess['u']="user";
> > > > > > >     sess['p']="password";
> > > > > > >     sid = sess.id();
> > > > > > >     sess.save;
> > > > > > >   else:
> > > > > > >     sid = sess.id();
> > > > > > >   req.write("%s" % sid);
> > > > > > >   return;
> > > > > > >
> > > > > > > # list mailboxes
> > > > > > > def UseSession(req, sid=""):
> > > > > > >   req.write("%s" % sid);
> > > > > > >   sess = Session(req, sid, None, 1800, 0);
> > > > > > >   if sess.is_new():
> > > > > > >     req.write("<br/>session new<br/>");
> > > > > > >     sid = sess.id();
> > > > > > >   else:
> > > > > > >     sess.load();
> > > > > > >   req.write("%s" % sid);
> > > > > > >
> > > > > > > I first call the GetSid from my javascript and I am using
> > > > > > > XmlHttpRequest that gets the sid from the responseText.
> > > > > > > Then I call UseSession function with the sid passed to it
> > > > > > > through the javascript, and I print the sid to make sure the
> > > > > > > correct id was passed and that works, but after the Session()
> > > > > > > is ran it always creates a new session,
> > > > > > > I am not sure why... I used this link
> > > > > > > http://www.modpython.org/pipermail/mod_python/2005-January/017111.html
> > > > > > > as an example to follow...
> > > > > > >
> > > > > > > Any ideas?
> > > > > > > Thanks.
> > > > > > >
> > > > > > > __
> > > > > > > Donnie
> > > > > > >
> > > > > > >
> > > > > > > On Thu, 24 Feb 2005 15:36:43 -0600, Shawn Harrison <harrison@tbc.net> wrote:
> > > > > > > > donnie jones wrote [02/24/05 2:55 PM]:
> > > > > > > > > Hello,
> > > > > > > > >
> > > > > > > > > Could someone please give me an example of using the Session()
> > > > > > > > > in modpython for passing data between functions?
> > > > > > > > > I have been googling, but with no success..
> > > > > > > > >
> > > > > > > > > The problem I am having is that each time I reload a page that calls
> > > > > > > > > the function like below, it creates a new session.
> > > > > > > > >
> > > > > > > > > def test(req):
> > > > > > > > >   sess = Sess(req);
> > > > > > > > >   sid = sess.id();
> > > > > > > > >   if sess.is_new():
> > > > > > > > >     req.write("new session %s" % sid);
> > > > > > > > >   else:
> > > > > > > > >     sess.load();
> > > > > > > > >     req.write("%s" % sess['username']);
> > > > > > > > >
> > > > > > > > > I am printing the session id and each time the function is loaded
> > > > > > > > > I get a new session id, thus I cannot store data in the session
> > > > > > > > > to use in other functions...
> > > > > > > >
> > > > > > > > class BaseSession(req[, sid, secret, timeout, lock, lockfile])
> > > > > > > > ..
> > > > > > > >      save()
> > > > > > > >          This method writes session values to storage.
> > > > > > > >
> > > > > > > > It doesn't appear that you are doing this. It only writes the data when
> > > > > > > > you tell it to.
> > > > > > > >
> > > > > > > > Shawn Harrison
> > > > > > > > _______________________________________________
> > > > > > > > Mod_python mailing list
> > > > > > > > Mod_python@modpython.org
> > > > > > > > http://mailman.modpython.org/mailman/listinfo/mod_python
> > > > > > > >
> > > > > > > _______________________________________________
> > > > > > > Mod_python mailing list
> > > > > > > Mod_python@modpython.org
> > > > > > > http://mailman.modpython.org/mailman/listinfo/mod_python
> > > > > > >
> > > > > >
> > > > >
> > > >
> > >
> >
>
From marshalljd2 at yahoo.ca  Sun Feb 27 21:45:39 2005
From: marshalljd2 at yahoo.ca (John)
Date: Sun Feb 27 21:41:15 2005
Subject: [mod_python] authenhandler and authzhandler
Message-ID: <1109558739.25584.10.camel@critter.jdmarshall.tor.istop.com>

Hi,

I have been trying the follow the documentation to
use the authenhandler and authzhandler. authenhandler
(and accesshandler, btw) seems to be working, but the
authzhandler never gets called. I have tried different
configurations, etc. I do not have anything fancy.

I have also checked my setup against what others have
claimed worked for them.

I hope someone can help me figure this out.

Thanks for any help you can offer.
John

This is what I have in my python handler program:
-----
def handler(req):
    uri = req.uri
    normuri = normpath(uri)

    apache.log_error("handler uri: %s, normuri: %s" % (uri, normuri))
    
    req.content_type = "text/html"
    req.write("Hello World!\n")

    return apache.OK

def authenhandler(req):
    """Authenticate.
    """
    pw = req.get_basic_auth_pw()
    userName = req.user

    uri = req.uri
    normuri = normpath(uri)

    apache.log_error("authenhandler uri: %s, normuri: %s, userName: %s" % (uri, normuri, userName))
    
    return apache.OK

def authzhandler(req):
    """Authorize the incoming request for the filesystem-based uri.
    """
    uri = req.uri
    normuri = normpath(uri)

    apache.log_error("authzhandler uri: %s, normuri: %s" % (uri, normuri))

    return apache.OK

def accesshandler(req):
    """Check access of the incoming request for the filesystem-based uri.
    """
    uri = req.uri
    normuri = normpath(uri)

    apache.log_error("accesshandler uri: %s, normuri: %s" % (uri, normuri))

    return apache.OK
-----

My apache site config is:
-----
<VirtualHost *:8080>
	DocumentRoot		/var/www/portal
	UserDir			disabled root

	<Directory />
		AllowOverride	None
	</Directory>

	<Directory "/var/www/portal">
		AuthType	Basic
		AuthName	"Test Portal"
		Require		valid-user
		AllowOverride	None
		Order		deny,allow
		Deny		from all
		Allow		from 192.168.0.20

		PythonDebug	On
		SetHandler	mod_python
		PythonHandler	portal
		PythonAccessHandler	portal
		PythonAuthenHandler	portal
		PythonAuthzHandler	portal
	</Directory>

	ErrorLog /var/log/apache2/error.log

	# Possible values include: debug, info, notice, warn, error, crit,
	# alert, emerg.
	#LogLevel warn
	LogLevel info

	CustomLog /var/log/apache2/access.log combined
	#ServerSignature On
</VirtualHost>
-----

From christopher.jackson at gmail.com  Sun Feb 27 21:58:01 2005
From: christopher.jackson at gmail.com (Chris Jackson)
Date: Sun Feb 27 21:58:05 2005
Subject: [mod_python] Session example and problems.
In-Reply-To: <ff876008050227183970237892@mail.gmail.com>
References: <ff87600805022412551319bf59@mail.gmail.com>
	<421E48EB.3090207@tbc.net> <ff87600805022511532cd73ce1@mail.gmail.com>
	<4d11484d050225133176a715cd@mail.gmail.com>
	<ff8760080502261433141c7620@mail.gmail.com>
	<4d11484d05022710432e6fafe4@mail.gmail.com>
	<4d11484d050227104773e5bc0d@mail.gmail.com>
	<ff87600805022711433919868@mail.gmail.com>
	<4d11484d050227182957605606@mail.gmail.com>
	<ff876008050227183970237892@mail.gmail.com>
Message-ID: <4d11484d05022718585f0b8786@mail.gmail.com>

[comments inline]

On Sun, 27 Feb 2005 21:39:25 -0500, donnie jones
<donniejones18@gmail.com> wrote:
> Here is the code that calls the UseSession function,
> and it passes the sid that was from the GetSid function
> through the javascript.
> 
> xmlhttp=new XMLHttpRequest();
> 
> if(xmlhttp2) {
>   url = "mail.py/GetMailboxes?sid=" + sid;
>   xmlhttp2.open("GET", url, true);
> }
> 

hmm, i still don't see the UseSession function. Although I do notice
GetMailboxes:)

> I have a sneaking suspicion that each req is
> overriding my sess = Session(req, sid) with a new session id
> and it may be because the XMLHttpRequest doesn't pass
> the cookie that is generated for the session to the page,
> and insteach with each calls it thinks a new session should
> be created.
> 

I guess new connections via XMLHttpRequest could be happening,
preventing cookies from being persistent as expected.  I'm not too familiar with
XMLHttpRequest, although your req.write works and displays the correct sid,
so the cookie must be reaching the page.

And once you have the sid, your good to go, because when using sessions,
data is stored on the server, and the cookie just holds the sid.  you can read
your /tmp/mp_sess* files and watch new session ids being created.  

> I'm working on trying to figure more out...
> __
> Donnie
> 

~= Chris =~

> On Sun, 27 Feb 2005 21:29:57 -0500, Chris Jackson
> <christopher.jackson@gmail.com> wrote:
> > Can you paste the line of code where you call UseSession, passing it the sid.
> >
> > ~= Chris =~
> >
> > On Sun, 27 Feb 2005 14:43:38 -0500, donnie jones
> > <donniejones18@gmail.com> wrote:
> > > The javascript uses XMLHttpRequest and from the responseText is
> > > able to get the SID and pass it to the UseSession function.
> > >
> > > I write out the session id in the UseSession function to make sure
> > > that the same session id is being passed, and it works.
> > > However, when I pass that same session id to the Session(req, sid)
> > > it creates another session...
> > >
> > > __
> > > Donnie
> > >
> > > On Sun, 27 Feb 2005 13:47:31 -0500, Chris Jackson
> > > <christopher.jackson@gmail.com> wrote:
> > > > To add to this:
> > > >
> > > > When UseSession, for example, is called, the parameters (req, sessid)
> > > > get populated via the publisher handler with the values from the
> > > > <form>.  So, since sessid is part of the form (<input type="hidden"
> > > > name="sessid"....>), then sessid  now get's passed this hidden value
> > > > which came from the GetSID function.  Or I could simply grab it by
> > > > saying req.form['sessid'].
> > > >
> > > > ~= Chris =~
> > > >
> > > > On Sun, 27 Feb 2005 13:43:38 -0500, Chris Jackson
> > > > <christopher.jackson@gmail.com> wrote:
> > > > > So how is the session id getting form GetSID to UseSession?
> > > > > In other words, how does the sessid go from:
> > > > >
> > > > > GetSID => javascript => UseSession
> > > > >
> > > > > req.write simply sends the output to the browser.  Does your
> > > > > javascript somehow pick it up?  The default parameter of UseSession is
> > > > > (req, sid="") <-blanks.  What sets this parameter?  UseSession is a
> > > > > handler....not just some regular function.
> > > > >
> > > > > The way I do it:
> > > > >
> > > > > GetSID (...sessid = sess.id()....)  # new session =>
> > > > > t = psp.PSP(filename = 'blah.psp') # load psp template =>
> > > > > t.run(vars={'sessid':sessid, ...}) # pass vars dictionary to template
> > > > > to fill in <%= %> holes =>
> > > > > blah.psp  (<html>.......... <input type="hidden" name="sessid"
> > > > > value="<%=sessid%>">......</html>)
> > > > >
> > > > > ~= Chris =~
> > > > >
> > > > > On Sat, 26 Feb 2005 17:33:51 -0500, donnie jones
> > > > > <donniejones18@gmail.com> wrote:
> > > > > > I am not understanding part of your explanation.
> > > > > > When I do the req.write of the sid, I can then pass it to the UseSession
> > > > > > function, and that UseSession now gets the correct session id.
> > > > > > I req.write the session id in the UseSession function and it is the
> > > > > > same as the session id from the GetSID function....
> > > > > >
> > > > > > Are you saying that the session itself is lost without saving the sesion
> > > > > > id in the <input hidden>  ?  I am confused why passing the session id
> > > > > > to the Session(req, sid) shouldn't keep the same session...
> > > > > >
> > > > > > Thanks.
> > > > > >
> > > > > > __
> > > > > > Donnie
> > > > > >
> > > > > >
> > > > > > On Fri, 25 Feb 2005 16:31:43 -0500, Chris Jackson
> > > > > > <christopher.jackson@gmail.com> wrote:
> > > > > > > This is not quite the same as in the example in the URL.
> > > > > > >
> > > > > > > The example in the URL passes the sessid to an <input hidden...> field
> > > > > > > via PSP templates.  And when a function like (def UseSession) is
> > > > > > > called, req.form['sessid'] stores the value from this hidden field.
> > > > > > > That's how the sessid is passed.
> > > > > > >
> > > > > > > In your GetSid function, you simply say req.write, which doesn't
> > > > > > > really do anything but display it, vs. <input hidden...> which
> > > > > > > captures the sessid to be used later.  After GetSid ends, your session
> > > > > > > id is lost.
> > > > > > >
> > > > > > > ~= Chris =~
> > > > > > >
> > > > > > >
> > > > > > > On Fri, 25 Feb 2005 14:53:28 -0500, donnie jones
> > > > > > > <donniejones18@gmail.com> wrote:
> > > > > > > > def GetSid(req, sid=""):
> > > > > > > >   sess = Session(req);
> > > > > > > >   if sess.is_new():
> > > > > > > >     sess['u']="user";
> > > > > > > >     sess['p']="password";
> > > > > > > >     sid = sess.id();
> > > > > > > >     sess.save;
> > > > > > > >   else:
> > > > > > > >     sid = sess.id();
> > > > > > > >   req.write("%s" % sid);
> > > > > > > >   return;
> > > > > > > >
> > > > > > > > # list mailboxes
> > > > > > > > def UseSession(req, sid=""):
> > > > > > > >   req.write("%s" % sid);
> > > > > > > >   sess = Session(req, sid, None, 1800, 0);
> > > > > > > >   if sess.is_new():
> > > > > > > >     req.write("<br/>session new<br/>");
> > > > > > > >     sid = sess.id();
> > > > > > > >   else:
> > > > > > > >     sess.load();
> > > > > > > >   req.write("%s" % sid);
> > > > > > > >
> > > > > > > > I first call the GetSid from my javascript and I am using
> > > > > > > > XmlHttpRequest that gets the sid from the responseText.
> > > > > > > > Then I call UseSession function with the sid passed to it
> > > > > > > > through the javascript, and I print the sid to make sure the
> > > > > > > > correct id was passed and that works, but after the Session()
> > > > > > > > is ran it always creates a new session,
> > > > > > > > I am not sure why... I used this link
> > > > > > > > http://www.modpython.org/pipermail/mod_python/2005-January/017111.html
> > > > > > > > as an example to follow...
> > > > > > > >
> > > > > > > > Any ideas?
> > > > > > > > Thanks.
> > > > > > > >
> > > > > > > > __
> > > > > > > > Donnie
> > > > > > > >
> > > > > > > >
> > > > > > > > On Thu, 24 Feb 2005 15:36:43 -0600, Shawn Harrison <harrison@tbc.net> wrote:
> > > > > > > > > donnie jones wrote [02/24/05 2:55 PM]:
> > > > > > > > > > Hello,
> > > > > > > > > >
> > > > > > > > > > Could someone please give me an example of using the Session()
> > > > > > > > > > in modpython for passing data between functions?
> > > > > > > > > > I have been googling, but with no success..
> > > > > > > > > >
> > > > > > > > > > The problem I am having is that each time I reload a page that calls
> > > > > > > > > > the function like below, it creates a new session.
> > > > > > > > > >
> > > > > > > > > > def test(req):
> > > > > > > > > >   sess = Sess(req);
> > > > > > > > > >   sid = sess.id();
> > > > > > > > > >   if sess.is_new():
> > > > > > > > > >     req.write("new session %s" % sid);
> > > > > > > > > >   else:
> > > > > > > > > >     sess.load();
> > > > > > > > > >     req.write("%s" % sess['username']);
> > > > > > > > > >
> > > > > > > > > > I am printing the session id and each time the function is loaded
> > > > > > > > > > I get a new session id, thus I cannot store data in the session
> > > > > > > > > > to use in other functions...
> > > > > > > > >
> > > > > > > > > class BaseSession(req[, sid, secret, timeout, lock, lockfile])
> > > > > > > > > ..
> > > > > > > > >      save()
> > > > > > > > >          This method writes session values to storage.
> > > > > > > > >
> > > > > > > > > It doesn't appear that you are doing this. It only writes the data when
> > > > > > > > > you tell it to.
> > > > > > > > >
> > > > > > > > > Shawn Harrison
> > > > > > > > > _______________________________________________
> > > > > > > > > Mod_python mailing list
> > > > > > > > > Mod_python@modpython.org
> > > > > > > > > http://mailman.modpython.org/mailman/listinfo/mod_python
> > > > > > > > >
> > > > > > > > _______________________________________________
> > > > > > > > Mod_python mailing list
> > > > > > > > Mod_python@modpython.org
> > > > > > > > http://mailman.modpython.org/mailman/listinfo/mod_python
> > > > > > > >
> > > > > > >
> > > > > >
> > > > >
> > > >
> > >
> >
>
From donniejones18 at gmail.com  Sun Feb 27 22:21:02 2005
From: donniejones18 at gmail.com (donnie jones)
Date: Sun Feb 27 22:21:05 2005
Subject: [mod_python] Session example and problems.
In-Reply-To: <4d11484d05022718585f0b8786@mail.gmail.com>
References: <ff87600805022412551319bf59@mail.gmail.com>
	<ff87600805022511532cd73ce1@mail.gmail.com>
	<4d11484d050225133176a715cd@mail.gmail.com>
	<ff8760080502261433141c7620@mail.gmail.com>
	<4d11484d05022710432e6fafe4@mail.gmail.com>
	<4d11484d050227104773e5bc0d@mail.gmail.com>
	<ff87600805022711433919868@mail.gmail.com>
	<4d11484d050227182957605606@mail.gmail.com>
	<ff876008050227183970237892@mail.gmail.com>
	<4d11484d05022718585f0b8786@mail.gmail.com>
Message-ID: <ff876008050227192147a93be3@mail.gmail.com>

Well, GetMailboxes is the real function, but
UseSession is the test function...

It actually seems that the sid I am returning from my GetSid function
isn't the actual sid that is in the Cookie, so each time the function is
called and I pass my sid, it must think it is a new request and create
a new session, that's the best I can figure...

So, now I am trying to figure out why I am not getting the correct
session id the same as what is in the Cookie.

__
Donnie

On Sun, 27 Feb 2005 21:58:01 -0500, Chris Jackson
<christopher.jackson@gmail.com> wrote:
> [comments inline]
> 
> On Sun, 27 Feb 2005 21:39:25 -0500, donnie jones
> <donniejones18@gmail.com> wrote:
> > Here is the code that calls the UseSession function,
> > and it passes the sid that was from the GetSid function
> > through the javascript.
> >
> > xmlhttp=new XMLHttpRequest();
> >
> > if(xmlhttp2) {
> >   url = "mail.py/GetMailboxes?sid=" + sid;
> >   xmlhttp2.open("GET", url, true);
> > }
> >
> 
> hmm, i still don't see the UseSession function. Although I do notice
> GetMailboxes:)
> 
> > I have a sneaking suspicion that each req is
> > overriding my sess = Session(req, sid) with a new session id
> > and it may be because the XMLHttpRequest doesn't pass
> > the cookie that is generated for the session to the page,
> > and insteach with each calls it thinks a new session should
> > be created.
> >
> 
> I guess new connections via XMLHttpRequest could be happening,
> preventing cookies from being persistent as expected.  I'm not too familiar with
> XMLHttpRequest, although your req.write works and displays the correct sid,
> so the cookie must be reaching the page.
> 
> And once you have the sid, your good to go, because when using sessions,
> data is stored on the server, and the cookie just holds the sid.  you can read
> your /tmp/mp_sess* files and watch new session ids being created.
> 
> > I'm working on trying to figure more out...
> > __
> > Donnie
> >
> 
> ~= Chris =~
> 
> > On Sun, 27 Feb 2005 21:29:57 -0500, Chris Jackson
> > <christopher.jackson@gmail.com> wrote:
> > > Can you paste the line of code where you call UseSession, passing it the sid.
> > >
> > > ~= Chris =~
> > >
> > > On Sun, 27 Feb 2005 14:43:38 -0500, donnie jones
> > > <donniejones18@gmail.com> wrote:
> > > > The javascript uses XMLHttpRequest and from the responseText is
> > > > able to get the SID and pass it to the UseSession function.
> > > >
> > > > I write out the session id in the UseSession function to make sure
> > > > that the same session id is being passed, and it works.
> > > > However, when I pass that same session id to the Session(req, sid)
> > > > it creates another session...
> > > >
> > > > __
> > > > Donnie
> > > >
> > > > On Sun, 27 Feb 2005 13:47:31 -0500, Chris Jackson
> > > > <christopher.jackson@gmail.com> wrote:
> > > > > To add to this:
> > > > >
> > > > > When UseSession, for example, is called, the parameters (req, sessid)
> > > > > get populated via the publisher handler with the values from the
> > > > > <form>.  So, since sessid is part of the form (<input type="hidden"
> > > > > name="sessid"....>), then sessid  now get's passed this hidden value
> > > > > which came from the GetSID function.  Or I could simply grab it by
> > > > > saying req.form['sessid'].
> > > > >
> > > > > ~= Chris =~
> > > > >
> > > > > On Sun, 27 Feb 2005 13:43:38 -0500, Chris Jackson
> > > > > <christopher.jackson@gmail.com> wrote:
> > > > > > So how is the session id getting form GetSID to UseSession?
> > > > > > In other words, how does the sessid go from:
> > > > > >
> > > > > > GetSID => javascript => UseSession
> > > > > >
> > > > > > req.write simply sends the output to the browser.  Does your
> > > > > > javascript somehow pick it up?  The default parameter of UseSession is
> > > > > > (req, sid="") <-blanks.  What sets this parameter?  UseSession is a
> > > > > > handler....not just some regular function.
> > > > > >
> > > > > > The way I do it:
> > > > > >
> > > > > > GetSID (...sessid = sess.id()....)  # new session =>
> > > > > > t = psp.PSP(filename = 'blah.psp') # load psp template =>
> > > > > > t.run(vars={'sessid':sessid, ...}) # pass vars dictionary to template
> > > > > > to fill in <%= %> holes =>
> > > > > > blah.psp  (<html>.......... <input type="hidden" name="sessid"
> > > > > > value="<%=sessid%>">......</html>)
> > > > > >
> > > > > > ~= Chris =~
> > > > > >
> > > > > > On Sat, 26 Feb 2005 17:33:51 -0500, donnie jones
> > > > > > <donniejones18@gmail.com> wrote:
> > > > > > > I am not understanding part of your explanation.
> > > > > > > When I do the req.write of the sid, I can then pass it to the UseSession
> > > > > > > function, and that UseSession now gets the correct session id.
> > > > > > > I req.write the session id in the UseSession function and it is the
> > > > > > > same as the session id from the GetSID function....
> > > > > > >
> > > > > > > Are you saying that the session itself is lost without saving the sesion
> > > > > > > id in the <input hidden>  ?  I am confused why passing the session id
> > > > > > > to the Session(req, sid) shouldn't keep the same session...
> > > > > > >
> > > > > > > Thanks.
> > > > > > >
> > > > > > > __
> > > > > > > Donnie
> > > > > > >
> > > > > > >
> > > > > > > On Fri, 25 Feb 2005 16:31:43 -0500, Chris Jackson
> > > > > > > <christopher.jackson@gmail.com> wrote:
> > > > > > > > This is not quite the same as in the example in the URL.
> > > > > > > >
> > > > > > > > The example in the URL passes the sessid to an <input hidden...> field
> > > > > > > > via PSP templates.  And when a function like (def UseSession) is
> > > > > > > > called, req.form['sessid'] stores the value from this hidden field.
> > > > > > > > That's how the sessid is passed.
> > > > > > > >
> > > > > > > > In your GetSid function, you simply say req.write, which doesn't
> > > > > > > > really do anything but display it, vs. <input hidden...> which
> > > > > > > > captures the sessid to be used later.  After GetSid ends, your session
> > > > > > > > id is lost.
> > > > > > > >
> > > > > > > > ~= Chris =~
> > > > > > > >
> > > > > > > >
> > > > > > > > On Fri, 25 Feb 2005 14:53:28 -0500, donnie jones
> > > > > > > > <donniejones18@gmail.com> wrote:
> > > > > > > > > def GetSid(req, sid=""):
> > > > > > > > >   sess = Session(req);
> > > > > > > > >   if sess.is_new():
> > > > > > > > >     sess['u']="user";
> > > > > > > > >     sess['p']="password";
> > > > > > > > >     sid = sess.id();
> > > > > > > > >     sess.save;
> > > > > > > > >   else:
> > > > > > > > >     sid = sess.id();
> > > > > > > > >   req.write("%s" % sid);
> > > > > > > > >   return;
> > > > > > > > >
> > > > > > > > > # list mailboxes
> > > > > > > > > def UseSession(req, sid=""):
> > > > > > > > >   req.write("%s" % sid);
> > > > > > > > >   sess = Session(req, sid, None, 1800, 0);
> > > > > > > > >   if sess.is_new():
> > > > > > > > >     req.write("<br/>session new<br/>");
> > > > > > > > >     sid = sess.id();
> > > > > > > > >   else:
> > > > > > > > >     sess.load();
> > > > > > > > >   req.write("%s" % sid);
> > > > > > > > >
> > > > > > > > > I first call the GetSid from my javascript and I am using
> > > > > > > > > XmlHttpRequest that gets the sid from the responseText.
> > > > > > > > > Then I call UseSession function with the sid passed to it
> > > > > > > > > through the javascript, and I print the sid to make sure the
> > > > > > > > > correct id was passed and that works, but after the Session()
> > > > > > > > > is ran it always creates a new session,
> > > > > > > > > I am not sure why... I used this link
> > > > > > > > > http://www.modpython.org/pipermail/mod_python/2005-January/017111.html
> > > > > > > > > as an example to follow...
> > > > > > > > >
> > > > > > > > > Any ideas?
> > > > > > > > > Thanks.
> > > > > > > > >
> > > > > > > > > __
> > > > > > > > > Donnie
> > > > > > > > >
> > > > > > > > >
> > > > > > > > > On Thu, 24 Feb 2005 15:36:43 -0600, Shawn Harrison <harrison@tbc.net> wrote:
> > > > > > > > > > donnie jones wrote [02/24/05 2:55 PM]:
> > > > > > > > > > > Hello,
> > > > > > > > > > >
> > > > > > > > > > > Could someone please give me an example of using the Session()
> > > > > > > > > > > in modpython for passing data between functions?
> > > > > > > > > > > I have been googling, but with no success..
> > > > > > > > > > >
> > > > > > > > > > > The problem I am having is that each time I reload a page that calls
> > > > > > > > > > > the function like below, it creates a new session.
> > > > > > > > > > >
> > > > > > > > > > > def test(req):
> > > > > > > > > > >   sess = Sess(req);
> > > > > > > > > > >   sid = sess.id();
> > > > > > > > > > >   if sess.is_new():
> > > > > > > > > > >     req.write("new session %s" % sid);
> > > > > > > > > > >   else:
> > > > > > > > > > >     sess.load();
> > > > > > > > > > >     req.write("%s" % sess['username']);
> > > > > > > > > > >
> > > > > > > > > > > I am printing the session id and each time the function is loaded
> > > > > > > > > > > I get a new session id, thus I cannot store data in the session
> > > > > > > > > > > to use in other functions...
> > > > > > > > > >
> > > > > > > > > > class BaseSession(req[, sid, secret, timeout, lock, lockfile])
> > > > > > > > > > ..
> > > > > > > > > >      save()
> > > > > > > > > >          This method writes session values to storage.
> > > > > > > > > >
> > > > > > > > > > It doesn't appear that you are doing this. It only writes the data when
> > > > > > > > > > you tell it to.
> > > > > > > > > >
> > > > > > > > > > Shawn Harrison
> > > > > > > > > > _______________________________________________
> > > > > > > > > > Mod_python mailing list
> > > > > > > > > > Mod_python@modpython.org
> > > > > > > > > > http://mailman.modpython.org/mailman/listinfo/mod_python
> > > > > > > > > >
> > > > > > > > > _______________________________________________
> > > > > > > > > Mod_python mailing list
> > > > > > > > > Mod_python@modpython.org
> > > > > > > > > http://mailman.modpython.org/mailman/listinfo/mod_python
> > > > > > > > >
> > > > > > > >
> > > > > > >
> > > > > >
> > > > >
> > > >
> > >
> >
>
From christopher.jackson at gmail.com  Sun Feb 27 22:31:00 2005
From: christopher.jackson at gmail.com (Chris Jackson)
Date: Sun Feb 27 22:31:02 2005
Subject: [mod_python] Session example and problems.
In-Reply-To: <ff876008050227192147a93be3@mail.gmail.com>
References: <ff87600805022412551319bf59@mail.gmail.com>
	<4d11484d050225133176a715cd@mail.gmail.com>
	<ff8760080502261433141c7620@mail.gmail.com>
	<4d11484d05022710432e6fafe4@mail.gmail.com>
	<4d11484d050227104773e5bc0d@mail.gmail.com>
	<ff87600805022711433919868@mail.gmail.com>
	<4d11484d050227182957605606@mail.gmail.com>
	<ff876008050227183970237892@mail.gmail.com>
	<4d11484d05022718585f0b8786@mail.gmail.com>
	<ff876008050227192147a93be3@mail.gmail.com>
Message-ID: <4d11484d05022719311ddb4dd5@mail.gmail.com>

Ah, i see.

~= Chris =~


On Sun, 27 Feb 2005 22:21:02 -0500, donnie jones
<donniejones18@gmail.com> wrote:
> Well, GetMailboxes is the real function, but
> UseSession is the test function...
> 
> It actually seems that the sid I am returning from my GetSid function
> isn't the actual sid that is in the Cookie, so each time the function is
> called and I pass my sid, it must think it is a new request and create
> a new session, that's the best I can figure...
> 
> So, now I am trying to figure out why I am not getting the correct
> session id the same as what is in the Cookie.
> 
> __
> Donnie
> 
> On Sun, 27 Feb 2005 21:58:01 -0500, Chris Jackson
> <christopher.jackson@gmail.com> wrote:
> > [comments inline]
> >
> > On Sun, 27 Feb 2005 21:39:25 -0500, donnie jones
> > <donniejones18@gmail.com> wrote:
> > > Here is the code that calls the UseSession function,
> > > and it passes the sid that was from the GetSid function
> > > through the javascript.
> > >
> > > xmlhttp=new XMLHttpRequest();
> > >
> > > if(xmlhttp2) {
> > >   url = "mail.py/GetMailboxes?sid=" + sid;
> > >   xmlhttp2.open("GET", url, true);
> > > }
> > >
> >
> > hmm, i still don't see the UseSession function. Although I do notice
> > GetMailboxes:)
> >
> > > I have a sneaking suspicion that each req is
> > > overriding my sess = Session(req, sid) with a new session id
> > > and it may be because the XMLHttpRequest doesn't pass
> > > the cookie that is generated for the session to the page,
> > > and insteach with each calls it thinks a new session should
> > > be created.
> > >
> >
> > I guess new connections via XMLHttpRequest could be happening,
> > preventing cookies from being persistent as expected.  I'm not too familiar with
> > XMLHttpRequest, although your req.write works and displays the correct sid,
> > so the cookie must be reaching the page.
> >
> > And once you have the sid, your good to go, because when using sessions,
> > data is stored on the server, and the cookie just holds the sid.  you can read
> > your /tmp/mp_sess* files and watch new session ids being created.
> >
> > > I'm working on trying to figure more out...
> > > __
> > > Donnie
> > >
> >
> > ~= Chris =~
> >
> > > On Sun, 27 Feb 2005 21:29:57 -0500, Chris Jackson
> > > <christopher.jackson@gmail.com> wrote:
> > > > Can you paste the line of code where you call UseSession, passing it the sid.
> > > >
> > > > ~= Chris =~
> > > >
> > > > On Sun, 27 Feb 2005 14:43:38 -0500, donnie jones
> > > > <donniejones18@gmail.com> wrote:
> > > > > The javascript uses XMLHttpRequest and from the responseText is
> > > > > able to get the SID and pass it to the UseSession function.
> > > > >
> > > > > I write out the session id in the UseSession function to make sure
> > > > > that the same session id is being passed, and it works.
> > > > > However, when I pass that same session id to the Session(req, sid)
> > > > > it creates another session...
> > > > >
> > > > > __
> > > > > Donnie
> > > > >
> > > > > On Sun, 27 Feb 2005 13:47:31 -0500, Chris Jackson
> > > > > <christopher.jackson@gmail.com> wrote:
> > > > > > To add to this:
> > > > > >
> > > > > > When UseSession, for example, is called, the parameters (req, sessid)
> > > > > > get populated via the publisher handler with the values from the
> > > > > > <form>.  So, since sessid is part of the form (<input type="hidden"
> > > > > > name="sessid"....>), then sessid  now get's passed this hidden value
> > > > > > which came from the GetSID function.  Or I could simply grab it by
> > > > > > saying req.form['sessid'].
> > > > > >
> > > > > > ~= Chris =~
> > > > > >
> > > > > > On Sun, 27 Feb 2005 13:43:38 -0500, Chris Jackson
> > > > > > <christopher.jackson@gmail.com> wrote:
> > > > > > > So how is the session id getting form GetSID to UseSession?
> > > > > > > In other words, how does the sessid go from:
> > > > > > >
> > > > > > > GetSID => javascript => UseSession
> > > > > > >
> > > > > > > req.write simply sends the output to the browser.  Does your
> > > > > > > javascript somehow pick it up?  The default parameter of UseSession is
> > > > > > > (req, sid="") <-blanks.  What sets this parameter?  UseSession is a
> > > > > > > handler....not just some regular function.
> > > > > > >
> > > > > > > The way I do it:
> > > > > > >
> > > > > > > GetSID (...sessid = sess.id()....)  # new session =>
> > > > > > > t = psp.PSP(filename = 'blah.psp') # load psp template =>
> > > > > > > t.run(vars={'sessid':sessid, ...}) # pass vars dictionary to template
> > > > > > > to fill in <%= %> holes =>
> > > > > > > blah.psp  (<html>.......... <input type="hidden" name="sessid"
> > > > > > > value="<%=sessid%>">......</html>)
> > > > > > >
> > > > > > > ~= Chris =~
> > > > > > >
> > > > > > > On Sat, 26 Feb 2005 17:33:51 -0500, donnie jones
> > > > > > > <donniejones18@gmail.com> wrote:
> > > > > > > > I am not understanding part of your explanation.
> > > > > > > > When I do the req.write of the sid, I can then pass it to the UseSession
> > > > > > > > function, and that UseSession now gets the correct session id.
> > > > > > > > I req.write the session id in the UseSession function and it is the
> > > > > > > > same as the session id from the GetSID function....
> > > > > > > >
> > > > > > > > Are you saying that the session itself is lost without saving the sesion
> > > > > > > > id in the <input hidden>  ?  I am confused why passing the session id
> > > > > > > > to the Session(req, sid) shouldn't keep the same session...
> > > > > > > >
> > > > > > > > Thanks.
> > > > > > > >
> > > > > > > > __
> > > > > > > > Donnie
> > > > > > > >
> > > > > > > >
> > > > > > > > On Fri, 25 Feb 2005 16:31:43 -0500, Chris Jackson
> > > > > > > > <christopher.jackson@gmail.com> wrote:
> > > > > > > > > This is not quite the same as in the example in the URL.
> > > > > > > > >
> > > > > > > > > The example in the URL passes the sessid to an <input hidden...> field
> > > > > > > > > via PSP templates.  And when a function like (def UseSession) is
> > > > > > > > > called, req.form['sessid'] stores the value from this hidden field.
> > > > > > > > > That's how the sessid is passed.
> > > > > > > > >
> > > > > > > > > In your GetSid function, you simply say req.write, which doesn't
> > > > > > > > > really do anything but display it, vs. <input hidden...> which
> > > > > > > > > captures the sessid to be used later.  After GetSid ends, your session
> > > > > > > > > id is lost.
> > > > > > > > >
> > > > > > > > > ~= Chris =~
> > > > > > > > >
> > > > > > > > >
> > > > > > > > > On Fri, 25 Feb 2005 14:53:28 -0500, donnie jones
> > > > > > > > > <donniejones18@gmail.com> wrote:
> > > > > > > > > > def GetSid(req, sid=""):
> > > > > > > > > >   sess = Session(req);
> > > > > > > > > >   if sess.is_new():
> > > > > > > > > >     sess['u']="user";
> > > > > > > > > >     sess['p']="password";
> > > > > > > > > >     sid = sess.id();
> > > > > > > > > >     sess.save;
> > > > > > > > > >   else:
> > > > > > > > > >     sid = sess.id();
> > > > > > > > > >   req.write("%s" % sid);
> > > > > > > > > >   return;
> > > > > > > > > >
> > > > > > > > > > # list mailboxes
> > > > > > > > > > def UseSession(req, sid=""):
> > > > > > > > > >   req.write("%s" % sid);
> > > > > > > > > >   sess = Session(req, sid, None, 1800, 0);
> > > > > > > > > >   if sess.is_new():
> > > > > > > > > >     req.write("<br/>session new<br/>");
> > > > > > > > > >     sid = sess.id();
> > > > > > > > > >   else:
> > > > > > > > > >     sess.load();
> > > > > > > > > >   req.write("%s" % sid);
> > > > > > > > > >
> > > > > > > > > > I first call the GetSid from my javascript and I am using
> > > > > > > > > > XmlHttpRequest that gets the sid from the responseText.
> > > > > > > > > > Then I call UseSession function with the sid passed to it
> > > > > > > > > > through the javascript, and I print the sid to make sure the
> > > > > > > > > > correct id was passed and that works, but after the Session()
> > > > > > > > > > is ran it always creates a new session,
> > > > > > > > > > I am not sure why... I used this link
> > > > > > > > > > http://www.modpython.org/pipermail/mod_python/2005-January/017111.html
> > > > > > > > > > as an example to follow...
> > > > > > > > > >
> > > > > > > > > > Any ideas?
> > > > > > > > > > Thanks.
> > > > > > > > > >
> > > > > > > > > > __
> > > > > > > > > > Donnie
> > > > > > > > > >
> > > > > > > > > >
> > > > > > > > > > On Thu, 24 Feb 2005 15:36:43 -0600, Shawn Harrison <harrison@tbc.net> wrote:
> > > > > > > > > > > donnie jones wrote [02/24/05 2:55 PM]:
> > > > > > > > > > > > Hello,
> > > > > > > > > > > >
> > > > > > > > > > > > Could someone please give me an example of using the Session()
> > > > > > > > > > > > in modpython for passing data between functions?
> > > > > > > > > > > > I have been googling, but with no success..
> > > > > > > > > > > >
> > > > > > > > > > > > The problem I am having is that each time I reload a page that calls
> > > > > > > > > > > > the function like below, it creates a new session.
> > > > > > > > > > > >
> > > > > > > > > > > > def test(req):
> > > > > > > > > > > >   sess = Sess(req);
> > > > > > > > > > > >   sid = sess.id();
> > > > > > > > > > > >   if sess.is_new():
> > > > > > > > > > > >     req.write("new session %s" % sid);
> > > > > > > > > > > >   else:
> > > > > > > > > > > >     sess.load();
> > > > > > > > > > > >     req.write("%s" % sess['username']);
> > > > > > > > > > > >
> > > > > > > > > > > > I am printing the session id and each time the function is loaded
> > > > > > > > > > > > I get a new session id, thus I cannot store data in the session
> > > > > > > > > > > > to use in other functions...
> > > > > > > > > > >
> > > > > > > > > > > class BaseSession(req[, sid, secret, timeout, lock, lockfile])
> > > > > > > > > > > ..
> > > > > > > > > > >      save()
> > > > > > > > > > >          This method writes session values to storage.
> > > > > > > > > > >
> > > > > > > > > > > It doesn't appear that you are doing this. It only writes the data when
> > > > > > > > > > > you tell it to.
> > > > > > > > > > >
> > > > > > > > > > > Shawn Harrison
> > > > > > > > > > > _______________________________________________
> > > > > > > > > > > Mod_python mailing list
> > > > > > > > > > > Mod_python@modpython.org
> > > > > > > > > > > http://mailman.modpython.org/mailman/listinfo/mod_python
> > > > > > > > > > >
> > > > > > > > > > _______________________________________________
> > > > > > > > > > Mod_python mailing list
> > > > > > > > > > Mod_python@modpython.org
> > > > > > > > > > http://mailman.modpython.org/mailman/listinfo/mod_python
> > > > > > > > > >
> > > > > > > > >
> > > > > > > >
> > > > > > >
> > > > > >
> > > > >
> > > >
> > >
> >
>
From grahamd at dscpl.com.au  Sun Feb 27 23:43:18 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Sun Feb 27 23:43:19 2005
Subject: [mod_python] Beta testers for "vampire::publisher"?
Message-ID: <1109565798.2712@dscpl.user.openhosting.com>

Is there anyone out there who is currently using mod_python.publisher
and who appreciates its short comings enough that they would be
interested in beta testing a new version of Vampire which provides a
"publisher" compatible mode which tries to address these issues?

In asking, I mean to the extent of hosting and getting working an
existing mod_python.publisher application on top of Vampire instead,
not just kicking the wheels a bit.

At the simplest, all you would need to do is change:

  PythonHandler mod_python.publisher

to:

  PythonHandler vampire::publisher

To get the most out of vampire::publisher, you would however have to
stop using "apache.import_module()" and convert over to the Vampire
module import scheme instead. Some of the things that you get from
this are:

- Ability to use index.py in multiple directories at the same time.
- Autoreload that imports parent modules when children change.
- Ability to define what gets transitioned to a new module on reimport.
- Ability to use new style classes and not just old style classes.
- Ability to convert form input to lists and dictionaries automatically.
- Various bugs present in mod_python.publisher do not exist.
- Other things I can't think of right now....

Do note that although vampire::publisher eliminates some of the
restrictions which exist in mod_python.publisher in some places, its
behaviour in others is more strictly defined and it is possible that some
thing you may do now may not work, although making it work should
be straightforward.

BTW, this new version of Vampire also has an ability to publish selected
objects through a standard content handler, ie., when you aren't even
using mod_python.publisher. For example:

  class Exported:
    def __call__(self):
      return "Exported.__call__()"
    def method1(self):
      return "Exported.method1()"
    def method2(self):
      return "Exported.method2()"
    
  _exported = Exported()

  handler = vampire.Publisher(_exported)

This ability would be of more interest to people who are already using
Vampire.

If anyone wants a better description of specific things I mention above
as in improvement, let me know.

Any takers? If interested let me know and I'll let you know how to get it
when I have it in an appropriate place to download.

If people are truly prepared to give it a go, I'll give all the assistance I
can to get your stuff working with it.

--
Graham Dumpleton (grahamd@dscpl.com.au)

From harrison at tbc.net  Mon Feb 28 11:43:58 2005
From: harrison at tbc.net (Shawn Harrison)
Date: Mon Feb 28 11:41:34 2005
Subject: [mod_python] Beta testers for "vampire::publisher"?
In-Reply-To: <1109565798.2712@dscpl.user.openhosting.com>
References: <1109565798.2712@dscpl.user.openhosting.com>
Message-ID: <42234A4E.1030105@tbc.net>

Graham Dumpleton wrote [02/27/05 10:43 PM]:
> Is there anyone out there who is currently using mod_python.publisher
> and who appreciates its short comings enough that they would be
> interested in beta testing a new version of Vampire which provides a
> "publisher" compatible mode which tries to address these issues?


What license are you releasing it under?

Shawn
From grahamd at dscpl.com.au  Mon Feb 28 14:47:04 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Mon Feb 28 14:47:11 2005
Subject: [mod_python] Beta testers for "vampire::publisher"?
In-Reply-To: <42234A4E.1030105@tbc.net>
References: <1109565798.2712@dscpl.user.openhosting.com>
	<42234A4E.1030105@tbc.net>
Message-ID: <985bef30936cdc5583c93affc1812dac@dscpl.com.au>


On 01/03/2005, at 3:43 AM, Shawn Harrison wrote:

> Graham Dumpleton wrote [02/27/05 10:43 PM]:
>> Is there anyone out there who is currently using mod_python.publisher
>> and who appreciates its short comings enough that they would be
>> interested in beta testing a new version of Vampire which provides a
>> "publisher" compatible mode which tries to address these issues?
>
>
> What license are you releasing it under?

All releases of Vampire which have been made so far have been under a 
BSD
style license. There is no intention to change this.

Graham

From bl at netgroup.dk  Mon Feb 28 16:56:55 2005
From: bl at netgroup.dk (Bo Lorentsen)
Date: Mon Feb 28 16:56:49 2005
Subject: [mod_python] Beta testers for "vampire::publisher"?
In-Reply-To: <1109565798.2712@dscpl.user.openhosting.com>
References: <1109565798.2712@dscpl.user.openhosting.com>
Message-ID: <422393A7.6040502@netgroup.dk>

Graham Dumpleton wrote:

>In asking, I mean to the extent of hosting and getting working an
>existing mod_python.publisher application on top of Vampire instead,
>not just kicking the wheels a bit.
>  
>
Hmm, I have a rather large system (still in beta), written for the 
publisher, and some of the features of vampire sounds nice and worth the 
effort.

But two things :

- What kind of bugs do You expect (me) to find ?
- Why have this code not been added to the mod_python cvs ?

/BL
From harrison at tbc.net  Mon Feb 28 17:14:38 2005
From: harrison at tbc.net (Shawn Harrison)
Date: Mon Feb 28 17:11:59 2005
Subject: [mod_python] Beta testers for "vampire::publisher"?
In-Reply-To: <985bef30936cdc5583c93affc1812dac@dscpl.com.au>
References: <1109565798.2712@dscpl.user.openhosting.com>
	<42234A4E.1030105@tbc.net>
	<985bef30936cdc5583c93affc1812dac@dscpl.com.au>
Message-ID: <422397CE.8030504@tbc.net>

Graham Dumpleton wrote [02/28/05 1:47 PM]:
> 
> On 01/03/2005, at 3:43 AM, Shawn Harrison wrote:
>> What license are you releasing it under?
> 
> All releases of Vampire which have been made so far have been under a BSD
> style license. There is no intention to change this.

That's good news. Something in your message made me wonder, that's all.

I would be glad to beta test the new functionality -- I haven't been 
using mod_python.publisher, but that's mostly because I had already 
written my own hackish work-around to its limitations (as we previously 
discussed).

Shawn
From grahamd at dscpl.com.au  Mon Feb 28 17:42:39 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Mon Feb 28 17:42:46 2005
Subject: [mod_python] Beta testers for "vampire::publisher"?
Message-ID: <1109630559.5756@dscpl.user.openhosting.com>

Bo Lorentsen wrote ..
> Graham Dumpleton wrote:
> 
> >In asking, I mean to the extent of hosting and getting working an
> >existing mod_python.publisher application on top of Vampire instead,
> >not just kicking the wheels a bit.
> >  
> >
> Hmm, I have a rather large system (still in beta), written for the 
> publisher, and some of the features of vampire sounds nice and worth the
> effort.
> 
> But two things :
> 
> - What kind of bugs do You expect (me) to find ?

I would hope there are no bugs as far as what I intend the code to do,
I'll take what you probably mean is what incompatibilities you might
expect which would require a change to your code. I would expect
these are going to be in the following areas:

- Use of "apache.import_module()" or direct imports of application
  specific modules using "import", would be preferably changed to
  use the Vampire module import system. If not done, you aren't
  benefiting much from changing in the first place.

  If the changes are made, module imports are not blindly done over
  the top of existing modules, thus you may need to add a special
  method into a module to indicate what data is preserved across to
  a newly loaded module from the one being replaced.

- Vampire is stricter about what data types can be published. One
  can still publish all the basic Python data types, but an object
  instance cannot be published by way of execution of its __str__()
  or __repr__() method. Instead, you would need to define __call__()
  for the class instead.

  This has been done because Vampire allows new style classes to
  be traversable and I haven't been able to find a reliable way of
  knowing that that a new style class has actually defined its own
  versions of __str__() or __repr__(). This is an issue because in
  Vampire I don't allow publishing to fallback to using default
  __str__() methods which simply print out what the type of the
  object is because I don't believe that evidence that Python is used
  should be published by default.

  If someone can point out to me how to detect for a new style
  class when it provides its own __str__() or __repr__(), this could
  be changed, but I have had no luck working it out so far unless
  I am missing the obvious.

- Vampire provides an extended mechanism for interpreting form
  arguments. For example, if you had two form parameters called
  "name-1" and "name-2", they would be converted into a single
  list where the parameter was called "name". Similarly, if you have
  form parameters "name.surname" and "name.firstname", they
  will be converted into a dictionary passed as "name" holding keys
  "surname" and "firstname".

  Thus, if you use '-' or '.' in form parameter names already, they
  may get interpreted in strange ways.

> - Why have this code not been added to the mod_python cvs ?

It seems that this is the question everyone is asking. The main reason is
that what I have done is not simply a copy of the existing code with tweaks
to make it work, but a reanalysis of what publisher does and a more or
less fresh interpretation of how to go about implementing that functionality.
As such, it can't simply be pushed back into the existing source code.

Even though many of the problems that were found in the original
publisher code while doing this, as well as problems I have pointed out
previously could be addressed, there are certain things that could not
be improved without breaking backward compatibility. You would thus
still be stuck with those limitations and quirks.

Graham
From grahamd at dscpl.com.au  Mon Feb 28 18:03:00 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Mon Feb 28 18:03:05 2005
Subject: [mod_python] Beta testers for "vampire::publisher"?
Message-ID: <1109631780.15486@dscpl.user.openhosting.com>

Bo Lorentsen wrote ..
> Graham Dumpleton wrote:
> 
> >In asking, I mean to the extent of hosting and getting working an
> >existing mod_python.publisher application on top of Vampire instead,
> >not just kicking the wheels a bit.
> >  
> >
> Hmm, I have a rather large system (still in beta), written for the 
> publisher, and some of the features of vampire sounds nice and worth the
> effort.
> 
> But two things :
> 
> - What kind of bugs do You expect (me) to find ?
> - Why have this code not been added to the mod_python cvs ?

BTW, I should also point out that all of the problems I did find with
mod_python.publisher have been posted on:

  http://issues.apache.org/jira/browse/MODPYTHON?report=select

Nicolas has fixed some of the older ones, but I posted another three
this past weekend. I have always tried to supply actual fixes, but in
some cases where to fix a problem properly would entail a bit of a
rethink and potential rewrite of a more significant piece of code I
have refrained from doing so, focusing more on the description of
the problem, how to test for it etc.

Graham
From bl at netgroup.dk  Mon Feb 28 18:25:34 2005
From: bl at netgroup.dk (Bo Lorentsen)
Date: Mon Feb 28 18:25:27 2005
Subject: [mod_python] Beta testers for "vampire::publisher"?
In-Reply-To: <1109630559.5756@dscpl.user.openhosting.com>
References: <1109630559.5756@dscpl.user.openhosting.com>
Message-ID: <4223A86E.6030004@netgroup.dk>

Graham Dumpleton wrote:

>I would hope there are no bugs as far as what I intend the code to do,
>I'll take what you probably mean is what incompatibilities you might
>expect which would require a change to your code. I would expect
>these are going to be in the following areas:
>
>- Use of "apache.import_module()" or direct imports of application
>  specific modules using "import", would be preferably changed to
>  use the Vampire module import system. If not done, you aren't
>  benefiting much from changing in the first place.
>  
>
That seems only fair :-)

>- Vampire is stricter about what data types can be published. One
>  can still publish all the basic Python data types, but an object
>  instance cannot be published by way of execution of its __str__()
>  or __repr__() method. Instead, you would need to define __call__()
>  for the class instead.
>  
>
Sounds nice, and make it more modular for use of classes as return types.

>- Vampire provides an extended mechanism for interpreting form
>  arguments. For example, if you had two form parameters called
>  "name-1" and "name-2", they would be converted into a single
>  list where the parameter was called "name". Similarly, if you have
>  form parameters "name.surname" and "name.firstname", they
>  will be converted into a dictionary passed as "name" holding keys
>  "surname" and "firstname".
>  
>
That is very nice, but I have already some some other kind of mapping 
myself, but a really good idea !

>  Thus, if you use '-' or '.' in form parameter names already, they
>  may get interpreted in strange ways.
>  
>
Ok, nice to know ... for now I only use '_'.

>Even though many of the problems that were found in the original
>publisher code while doing this, as well as problems I have pointed out
>previously could be addressed, there are certain things that could not
>be improved without breaking backward compatibility. You would thus
>still be stuck with those limitations and quirks.
>  
>
Ok, its sometimes nice to start all over, so its ok ... and one day this 
may end up as a mod_python package anyway :-)

I have been looking at your vampire page, and there is alot about 
extension handling, but I thougth this was a publisher substitude ++ ?

/BL
From grahamd at dscpl.com.au  Mon Feb 28 18:31:50 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Mon Feb 28 18:31:54 2005
Subject: [mod_python] Beta testers for "vampire::publisher"?
Message-ID: <1109633510.29012@dscpl.user.openhosting.com>

Bo Lorentsen wrote ..
> I have been looking at your vampire page, and there is alot about 
> extension handling, but I thougth this was a publisher substitude ++ ?

The new code hasn't been released as a package yet and thus not
documented there. I am also still trying to catch up on providing
documentation for existing features. :-)

It is because the documentation isn't done that I indicated I would
explicitly help people to convert if they wanted to try it out.

Graham

